void sub_1CF252C20(_QWORD *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  v11 = (id)objc_msgSend_mutableCopy(*(void **)(a1[4] + 8), a2, a3, a4);
  objc_msgSend_setValue_forKey_(v11, v5, a1[5], a1[6]);
  objc_msgSend_dictionaryWithDictionary_(MEMORY[0x1E0C99D80], v6, (uint64_t)v11, v7);
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = a1[4];
  v10 = *(void **)(v9 + 8);
  *(_QWORD *)(v9 + 8) = v8;

}

void sub_1CF252E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5;
  int v8;

  if (a1)
    v5 = a2 == 0;
  else
    v5 = 1;
  v8 = !v5 && a4 != 0 && a5 != 0;
  __asm { BR              X8 }
}

uint64_t sub_1CF252EE8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((29 * (a3 > 0x400)) ^ 0x1CBu)) - 12))();
}

#error "1CF253184: call analysis failed (funcsize=110)"

uint64_t sub_1CF253188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (((v8 == v9) * ((v7 - 132) ^ 0x591)) ^ v7)) - 4))();
}

uint64_t sub_1CF2531DC()
{
  unsigned int v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  unint64_t v3;

  v2 = v1(112);
  v3 = STACK[0x2C0];
  STACK[0x2F8] = v2 + 0xFCF3D5A857A9B08;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((202 * (v2 == 0)) ^ v0))
                            - ((v0 ^ 0xFFFFFFFFFFFFFDC2)
                             + ((v0 + 122737314) & 0xB7F))))();
}

uint64_t sub_1CF253254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  _BOOL4 v11;

  *(_WORD *)(a1 + 80) = 25175;
  *(_QWORD *)a1 = 0x65EE1E795321A838;
  memset((void *)(a1 + 8), 79, 64);
  *(_QWORD *)(a1 + 72) = 0x116585BF116585BFLL;
  v9 = STACK[0x2F8];
  *(_DWORD *)(STACK[0x2F8] - 0xFCF3D5A857A9AB4) = 1095089643;
  *(_DWORD *)(v9 - 0xFCF3D5A857A9AA0) = 2126566836;
  memset((void *)(v9 - 0xFCF3D5A857A9AB0), 79, 16);
  *(_BYTE *)(v9 - 0xFCF3D5A857A9A9CLL) = 42;
  v11 = v9 != v7 && STACK[0x330] != 0x29E41201BECB398ELL;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((v11 * (((v8 + 753) | 0xA0) + 267)) ^ v8))
                            - ((v8 - 1165848857) & 0xF7F ^ 0x17ELL)))();
}

uint64_t sub_1CF253398@<X0>(unsigned int a1@<W3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _DWORD *v3;
  _DWORD *v4;
  _BYTE *v5;

  STACK[0x2B0] = a2 - 0xFCF3D5A857A9AAFLL;
  STACK[0x2A0] = a2 - 0xFCF3D5A857A9AAELL;
  STACK[0x290] = a2 - 0xFCF3D5A857A9AADLL;
  STACK[0x280] = a2 - 0xFCF3D5A857A9AACLL;
  STACK[0x270] = a2 - 0xFCF3D5A857A9AABLL;
  STACK[0x250] = a2 - 0xFCF3D5A857A9AAALL;
  STACK[0x240] = a2 - 0xFCF3D5A857A9AA9;
  *(_DWORD *)(v2 - 0x29E41201BECB397ELL) = *(_DWORD *)(a2 - 0xFCF3D5A857A9B08);
  *(_DWORD *)(v2 - 0x29E41201BECB3936) = *(_DWORD *)(a2 - 0xFCF3D5A857A9AC0);
  *(_DWORD *)(v2 - 0x29E41201BECB3932) = *(_DWORD *)(a2 - 0xFCF3D5A857A9ABCLL);
  *(_BYTE *)(v2 - 0x29E41201BECB392ELL) = *(_BYTE *)(a2 - 0xFCF3D5A857A9AB8);
  *(_BYTE *)(v2 - 0x29E41201BECB392DLL) = *(_BYTE *)(a2 - 0xFCF3D5A857A9AB7);
  *(_DWORD *)(v2 - 0x29E41201BECB3916) = *v4;
  *(_DWORD *)(v2 - 0x29E41201BECB392ALL) = *v3;
  *(_BYTE *)(v2 - 0x29E41201BECB3912) = (47 - (*v5 | 0xFE)) ^ 0x9B;
  *(_BYTE *)(v2 - 0x29E41201BECB3957) = *((_BYTE *)*(&off_1E8C4D9A0 + (int)(a1 - 1677)) + 11) ^ 0x61 ^ *((_BYTE *)*(&off_1E8C4D9A0 + (a1 ^ 0x6FD)) + 13) ^ (*(_BYTE *)(a2 - 0xFCF3D5A857A9AE1) + (*(_BYTE *)(a2 - 0xFCF3D5A857A9AE1) | 0x1B) + ((59 * (a1 ^ 0xAC) + 87) | ~*(_BYTE *)(a2 - 0xFCF3D5A857A9AE1)) - 105) ^ *((_BYTE *)*(&off_1E8C4D9A0 + (int)(a1 - 1615)) + 16);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x2C0] + 8 * a1) - 8))(a2 - 0xFCF3D5A857A9AA7);
}

void sub_1CF2536E0()
{
  JUMPOUT(0x1CF25364CLL);
}

uint64_t sub_1CF2536E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v1 - 0x29E41201BECB3937) = *(_BYTE *)(v4 + 17) ^ *(_BYTE *)(v3 + 15) ^ *(_BYTE *)(v5 + 16) ^ 0x61 ^ (*(_BYTE *)(a1 - 0xFCF3D5A857A9AC1) + (~*(_BYTE *)(a1 - 0xFCF3D5A857A9AC1) | 0x1B) + ((v2 + 87) | *(_BYTE *)(a1 - 0xFCF3D5A857A9AC1)) - 105);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2C0] + 8 * v2) - 12))();
}

void sub_1CF253798()
{
  JUMPOUT(0x1CF253728);
}

uint64_t sub_1CF2537A0@<X0>(_BYTE *a1@<X0>, _BYTE *a2@<X5>, _BYTE *a3@<X6>, _BYTE *a4@<X7>, uint64_t a5@<X8>)
{
  _BYTE *v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  int v11;
  int v12;

  *(_BYTE *)(v8 - 0x29E41201BECB3917) = *v10;
  *(_BYTE *)(v8 - 0x29E41201BECB3918) = *v9;
  *(_BYTE *)(v8 - 0x29E41201BECB3919) = *v7;
  *(_BYTE *)(v8 - 0x29E41201BECB391ALL) = *a4;
  *(_BYTE *)(v8 - 0x29E41201BECB391BLL) = *a3;
  *(_BYTE *)(v8 - 0x29E41201BECB391CLL) = *a2;
  *(_BYTE *)(v8 - 0x29E41201BECB391DLL) = *a1;
  *(_BYTE *)(v8 - 0x29E41201BECB391ELL) = *v6;
  *(_BYTE *)(v8 - 0x29E41201BECB391FLL) = *(_BYTE *)STACK[0x240];
  *(_BYTE *)(v8 - 0x29E41201BECB3920) = *(_BYTE *)STACK[0x250];
  *(_BYTE *)(v8 - 0x29E41201BECB3921) = *(_BYTE *)STACK[0x270];
  *(_BYTE *)(v8 - 0x29E41201BECB3922) = *(_BYTE *)STACK[0x280];
  *(_BYTE *)(v8 - 0x29E41201BECB3923) = *(_BYTE *)STACK[0x290];
  *(_BYTE *)(v8 - 0x29E41201BECB3924) = *(_BYTE *)STACK[0x2A0];
  *(_BYTE *)(v8 - 0x29E41201BECB3925) = *(_BYTE *)STACK[0x2B0];
  *(_BYTE *)(v8 - 0x29E41201BECB3926) = *v5;
  *(_DWORD *)(v8 - 0x29E41201BECB397ALL) = *(_DWORD *)(a5 - 0xFCF3D5A857A9B04);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2C0]
                                        + 8
                                        * ((1855
                                          * (*(_DWORD *)(a5 - 0xFCF3D5A857A9B04) == v12
                                                                                    + ((v11 + 114) ^ 0x2F)
                                                                                    - 1222050226)) ^ (v11 + 114)))
                            - 4))();
}

uint64_t sub_1CF2539B0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  _DWORD *v5;
  unsigned int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8
                                             * (((*v5 == ((v6 - 2067725079) | 0x2A041510) + 1654679725) * a4) ^ v6))
                            + 2932153622
                            - ((v6 - 1572796167) | 0xC841100)
                            - 8))();
}

uint64_t sub_1CF253A1C@<X0>(uint64_t a1@<X8>)
{
  _DWORD *v1;
  int v2;
  uint64_t v3;

  *v1 = 1710104186;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v2 + 1362815503) ^ (15 * (a1 != 0xFCF3D5A857A9B08)))) - 4))();
}

uint64_t sub_1CF253A78()
{
  int v0;
  int v1;
  uint64_t (*v2)(uint64_t);
  BOOL v3;

  sub_1CF370D34();
  v3 = v2(16) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2C0]
                                        + 8 * ((v3 ^ (v0 + v1 - 1)) & 1 | (v0 + v1 + 676)))
                            - ((v0 + v1 + 70) | 0x36u)
                            + 362))();
}

uint64_t sub_1CF253AD0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;

  *a1 = 0x23120F4208F8DDDLL;
  a1[1] = 0x23120F4208F8DDDLL;
  *(_QWORD *)(v8 - 0x29E41201BECB3986) = (char *)a1 + 0x373C0AAD4CE136CBLL;
  return (*(uint64_t (**)(void))(a7
                              + 8
                              * ((((((((v7 + 842) | 0x20) - 788) ^ (v8 == 0x29E41201BECB398ELL)) & 1) == 0)
                                * ((((v7 + 842) | 0x20) - 60) ^ 0x424)) ^ ((v7 + 842) | 0x20))))();
}

uint64_t sub_1CF253B6C()
{
  int v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v2 = v1(16);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2C0]
                                        + 8
                                        * (int)((((((v0 - 754) | 0x40) ^ 0xFFFFFE1C) + ((v0 + 1135117143) & 0xBC5779F3))
                                               * (v2 != 0)) ^ v0))
                            - 4))();
}

uint64_t sub_1CF253BC8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  int v8;

  *a1 = 0x23120F4208F8DDDLL;
  a1[1] = 0x23120F4208F8DDDLL;
  *v7 = (char *)a1 + 0x373C0AAD4CE136CBLL;
  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (int)(((v8 - 1362814049 + ((v8 + 608508575) | 0x8A800100) - 1569339727)
                                     * (&STACK[0x418] == 0)) ^ v8)))();
}

uint64_t sub_1CF253C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v10 = v9 + v7;
  v11 = *(_QWORD *)(v8 - 0x29E41201BECB3986);
  v12 = (v10 + 830);
  STACK[0x3C8] = *(_QWORD *)(a7 + 8 * (v10 - 189)) + (v12 ^ 0xFFFFFFFFFFFFFBC0);
  STACK[0x3A0] = (unint64_t)&STACK[0x304];
  STACK[0x358] = 0x23120F4208F8DDDLL;
  STACK[0x378] = 0x4AEDB34B7FEE91E9;
  return (*(uint64_t (**)(void))(a7 + 8 * (int)((v11 == 0x373C0AAD4CE136CBLL) | v12)))();
}

uint64_t sub_1CF254304()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1CF254318@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _BOOL4 v11;
  uint64_t (*v12)(void);

  v6 = (v2 + 1686990478) & 0xFFFFFFFF9B728D7BLL;
  v7 = (v6 + 1018);
  STACK[0x390] = *(_QWORD *)(a1 + 8 * v6) + v7 - 1092;
  v8 = STACK[0x200];
  v9 = (v7 - v5 - 834);
  v11 = a2 != 0x373C0AAD4CE136CBLL && v8 != 0x64FD43C0B3118155;
  v12 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)((v11 * (v6 + 58)) ^ (v6 + 1018))) - (v9 ^ (v4 + 4)));
  LODWORD(STACK[0x280]) = v3;
  STACK[0x250] = v8;
  return v12();
}

uint64_t sub_1CF2545D0@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  unint64_t v5;

  v5 = *(_QWORD *)(a2 - 0x373C0AAD4CE136CBLL);
  STACK[0x328] = v5;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((v5 != 0x23120F4208F8DDDLL) * ((((v3 + v2 - 242) | 0x434) + 808) ^ v2 ^ (v4 + 67))) ^ (v3 + v2 + 152))))();
}

uint64_t sub_1CF2545E8()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1CF2545F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((v8 == (v9 ^ (v9 + 82)) - 1393729202) * ((v9 + v7) ^ 0x32D)) ^ (v9 + v7)))
                            - 4))();
}

void sub_1CF254634(int a1@<W8>)
{
  *(_QWORD *)STACK[0x220] = STACK[0x2F0];
  *(_DWORD *)STACK[0x228] = (a1 - 132) ^ 0xBCA5EC81 ^ LODWORD(STACK[0x3C4]);
  LODWORD(STACK[0x31C]) = -1393729084;
  JUMPOUT(0x1CF254680);
}

uint64_t sub_1CF254774(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  unint64_t v10;
  int v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (v7 & v8 ^ (16 * (*(_QWORD *)(a5 + a2) == a3))))
                            - ((((v7 & v8) - v11 + v9) | a1) ^ v10)))();
}

uint64_t sub_1CF2547A8@<X0>(unint64_t a1@<X4>, unint64_t a2@<X5>, uint64_t a3@<X6>, unint64_t a4@<X7>, int a5@<W8>)
{
  unint64_t v5;
  int v6;
  int v7;

  STACK[0x270] = a4;
  STACK[0x280] = a2;
  STACK[0x290] = a1;
  STACK[0x2A0] = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8
                                        * (((v5 != 0x29E41201BECB3986) * (((a5 - 331) ^ (v7 + 327)) + 1042)) ^ (v6 + a5 - 331 + 617)))
                            - 4))();
}

uint64_t sub_1CF25480C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  unint64_t v9;
  _QWORD *v10;
  int v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (((*v10 == a4) * ((v7 ^ v8) - 1450)) ^ v7))
                            - ((v11 + v7 - 843) ^ v9)))();
}

uint64_t sub_1CF254840@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;

  STACK[0x2B0] = v2 - 0x373C0AAD4CE136CBLL;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((*(_QWORD *)(v2 - 0x373C0AAD4CE136CBLL) + v3 == 0x14EC28DF01787CD2)
                                     * ((((a2 - 465) | 0x16A) ^ 0xFFFFF9AD) + ((a2 - 1170) | 0x223))) | a2)))();
}

uint64_t sub_1CF2548AC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = sub_1CF370D34();
  *v1 = 0x373C0AAD4CE136CBLL;
  return ((uint64_t (*)(uint64_t))(v0 - 12))(v2);
}

void sub_1CF2548F4()
{
  JUMPOUT(0x1CF2547D8);
}

uint64_t sub_1CF254918()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_1CF370D34();
  return (*(uint64_t (**)(uint64_t))(STACK[0x2C0]
                                            + 8
                                            * (((v3 ^ v0 ^ (v3 - 623) ^ v2) * (v1 + v4 == 0x14EC28DF01787CD2)) | v3)))(v5);
}

uint64_t sub_1CF254964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((182
                                          * (((v8 + 104) ^ (*(_QWORD *)(v7 - 0x23120F4208F8DC5) == 0)) & 1)) ^ v8))
                            - 8))();
}

uint64_t sub_1CF2549C4()
{
  _QWORD *v0;

  sub_1CF370D34();
  *v0 = 0;
  return sub_1CF254918();
}

uint64_t sub_1CF2549D0()
{
  int v0;
  int v1;

  sub_1CF370D34();
  return ((uint64_t (*)(_QWORD, unint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x2C0]
                                                                                         + 8
                                                                                         * ((1999
                                                                                           * (((STACK[0x290] == 0x703BDE3807C31C91) ^ LODWORD(STACK[0x240])) & 1)) ^ (v0 + v1 + 347)))
                                                                             - 4))(LODWORD(STACK[0x250]), 0x8FC421C7F83CE36FLL, 0x29E41201BECB398ELL, 0x373C0AAD4CE136CBLL);
}

uint64_t sub_1CF254A90()
{
  _QWORD *v0;

  *v0 = 0x29E41201BECB398ELL;
  return ((uint64_t (*)(void))STACK[0x388])();
}

void sub_1CF254AAC()
{
  JUMPOUT(0x1CF254738);
}

uint64_t sub_1CF254AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;

  return (*(uint64_t (**)(void))(a7
                              + 8 * (((v7 + v8 - 226) * (LODWORD(STACK[0x31C]) != -1393729084)) ^ (v7 + v8 + 1550))))();
}

uint64_t sub_1CF254AF8@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((v2 + ((v3 + a2 + 1499 + 20609971) & 0xFEC57D77) - 202) * (STACK[0x2F0] == 0)) ^ (a2 + 1499))))();
}

uint64_t sub_1CF254B3C()
{
  int v0;
  unsigned int v1;

  sub_1CF370D34();
  return v0 ^ v1;
}

uint64_t sub_1CF254BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return (*(uint64_t (**)(void))(a7 + 8 * ((133 * (v8 == -1393729084)) ^ (v7 + v9 + 607))))();
}

uint64_t sub_1CF254BFC()
{
  int v0;
  int v1;
  unint64_t v2;

  v2 = *(_QWORD *)(STACK[0x358] - 0x23120F4208F8DC5);
  STACK[0x320] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2C0]
                                        + 8
                                        * (((v2 == 0) * ((v1 + ((v0 - 277327370) & 0xB7B) - 857) ^ (v1 - 15))) ^ v0))
                            - 8))();
}

uint64_t sub_1CF254C78@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  unint64_t v3;
  unint64_t v4;

  v3 = (v1 - 1508655795);
  STACK[0x3F8] = v3;
  v4 = STACK[0x378];
  STACK[0x400] = STACK[0x378];
  return (*(uint64_t (**)(void))(STACK[0x2C0]
                              + 8
                              * (((v3 - v4 + 0x4AEDB34B7FEE91E9 > 9)
                                * (((v2 + (a1 ^ 0x372) - 43) ^ (v2 - 734)) + 2 * (a1 ^ 0x372))) ^ a1)))();
}

uint64_t sub_1CF254CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  uint64_t v61;
  unsigned int v62;
  uint64_t (*v63)(uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v65;

  v63 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x2C0] + 8 * v62);
  STACK[0x2B0] = ((STACK[0x410] - 0x7A1D83CEEF194F1CLL) ^ 0x5DBECEFD6FFA6799)
               + ((2 * (STACK[0x410] - 0x7A1D83CEEF194F1CLL)) & 0xBB7D9DFADFF4CF32)
               + ((v62 + 636) ^ 0xB7E7FF6EB007FDAALL);
  v65 = STACK[0x400];
  STACK[0x240] = STACK[0x400];
  STACK[0x2A0] = ((v65 - 0x4AEDB34B7FEE91E5) ^ 0x1DB6FFED37426F57)
               - 0x810318117400846
               + ((2 * (v65 - 0x4AEDB34B7FEE91E5)) & 0x3B6DFFDA6E84DEAELL);
  STACK[0x270] = ((v65 - 0x4AEDB34B7FEE91E3) ^ 0xB7D9FFF7BDF397C5)
               + 0x5FBFDE6FC7FDEF80
               + ((2 * (v65 - 0x4AEDB34B7FEE91E3)) & 0x6FB3FFEF7BE72F8ALL);
  LODWORD(STACK[0x290]) = LOWORD(STACK[0x3E6]);
  return v63(v61 - 0x3353D4E3F9FD0EF6 + v62 + 1020 - 0x1799DE6785F18743, a2, 0x398C482B575D9D4CLL, 0x8E85997BF8A3092DLL, 0xE5D7DAAEED85A300, v61 - 0x3353D4E3F9FD0EF6 + v62 + 1020 - 0x1799DE6785F18742, *(unsigned __int8 *)(a2 + v61 - 0x3353D4E3F9FD0EF6 + v62 + 1020 - 0x1799DE6785F18743), 0xAAF3F7833B96EBB2, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

uint64_t sub_1CF254D4C()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x2C0] + 8 * (v0 + v1 - 211)))();
}

void sub_1CF255140()
{
  __int16 v0;

  LOWORD(STACK[0x3F6]) = v0;
  JUMPOUT(0x1CF254D18);
}

void sub_1CF255160()
{
  int v0;

  LOWORD(STACK[0x3E6]) = v0;
  LODWORD(STACK[0x290]) = v0;
  JUMPOUT(0x1CF254D18);
}

uint64_t sub_1CF255180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t a67;
  unint64_t a69;
  uint64_t v69;
  char v70;
  int v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  int v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  _BOOL4 v140;

  v76 = a2 + v74;
  v77 = __ROR8__(v76, 8);
  v78 = ((2 * ((v77 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0x9077E0949EF5BAF6)
      - ((v77 & 0xF8FFFFFFFFFFFFFFLL)
       - 0x550C087CC469144ELL)
      - 0x483BF04A4F7ADD7BLL;
  v79 = v78 ^ 0xF1B0F2EF1EFB9BD7;
  v78 ^= 0xA62F4EF6C24CC642;
  v80 = __ROR8__(v79, 8);
  v81 = (v73 - ((~(v80 + v78) | 0x1577FAC35B609246) + ((v80 + v78) | 0xEA88053CA49F6DB9))) ^ 0x45A32A2267DDE331;
  v82 = v81 ^ __ROR8__(v78, 61);
  v83 = __ROR8__(v81, 8) + v82;
  v84 = v83 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v82, 61);
  *((_QWORD *)&v85 + 1) = v83;
  *(_QWORD *)&v85 = v83 ^ 0xE5D7DAAEED85A300;
  v86 = ((v85 >> 8) + v84) ^ 0x8E85997BF8A3092DLL;
  v87 = v86 ^ __ROR8__(v84, 61);
  v88 = (__ROR8__(v86, 8) + v87) ^ 0xCD091F17C02FDE51;
  v89 = v88 ^ __ROR8__(v87, 61);
  v90 = (__ROR8__(v88, 8) + v89) ^ 0x628ABC52894BE762;
  v91 = v90 ^ __ROR8__(v89, 61);
  v92 = (__ROR8__(v90, 8) + v91) ^ 0x5AC09C033F8B2761;
  v93 = __ROR8__(v92, 8);
  *(_QWORD *)&v85 = __ROR8__(v91, 61);
  v94 = ((v93
        + (v92 ^ (unint64_t)v85)
        + 0x7FAC597351137BA8
        - ((2 * (v93 + (v92 ^ (unint64_t)v85))) & 0xFF58B2E6A226F750)) ^ 0x64A788EB7A4ABBD9) >> (8 * (v76 & 7u));
  LOBYTE(v76) = a2 + v69;
  *(_QWORD *)&v85 = __ROR8__(a2 + v69, 8);
  v95 = v94 ^ v71;
  v96 = ((2 * (v85 & 0xF8FFFFFFFFFFFFFFLL) + 0x55E7EF06772DD764) & 0x442912AD23D5CC78)
      - (v85 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x4D0880D9CD81D1EFLL;
  v97 = v96 ^ 0xE460740C3F945F6FLL;
  v96 ^= 0xB3FFC815E32302FALL;
  *(_QWORD *)&v85 = __ROR8__(v97, 8);
  v98 = (0x30D989346C5478B8
       - ((v85 + v96) ^ 0xF1A2B85CC66DE86 | 0x30D989346C5478B8)
       + ((v85 + v96) ^ 0xF1A2B85CC66DE86 | 0xCF2676CB93AB8747)) ^ 0x90E88DAF637028B6;
  v99 = v98 ^ __ROR8__(v96, 61);
  *(_QWORD *)&v85 = __ROR8__(v98, 8);
  v100 = (0x598D3E4F2B46E74DLL - ((v85 + v99) | 0x598D3E4F2B46E74DLL) + ((v85 + v99) | 0xA672C1B0D4B918B2)) ^ 0x43A51B1E393CBBB2;
  v101 = v100 ^ __ROR8__(v99, 61);
  v102 = (__ROR8__(v100, 8) + v101) ^ 0x8E85997BF8A3092DLL;
  v103 = v102 ^ __ROR8__(v101, 61);
  *(_QWORD *)&v85 = __ROR8__(v102, 8);
  v104 = __ROR8__((0xB69B3F5B468F8A56 - ((v85 + v103) | 0xB69B3F5B468F8A56) + ((v85 + v103) | 0x4964C0A4B97075A9)) ^ 0x846DDFB3795FABF8, 8);
  v105 = (0xB69B3F5B468F8A56 - ((v85 + v103) | 0xB69B3F5B468F8A56) + ((v85 + v103) | 0x4964C0A4B97075A9)) ^ 0x846DDFB3795FABF8 ^ __ROR8__(v103, 61);
  v106 = (0xACE38C245C40E142 - (v104 + v105) + ((2 * (v104 + v105)) & 0xA638E7B7477E3D7ALL)) ^ 0xCE693076D50B0620;
  v107 = v106 ^ __ROR8__(v105, 61);
  *(_QWORD *)&v85 = __ROR8__(v106, 8);
  v108 = (v73 - ((~(v85 + v107) | 0xBFE1BEF766DF8CC9) + ((v85 + v107) | 0x401E410899207336))) ^ 0xE52122F45954ABA8;
  v109 = v108 ^ __ROR8__(v107, 61);
  *(_QWORD *)&v85 = __ROR8__(v108, 8);
  LODWORD(v109) = (v95 << 24) | (((((0xF3B6A8A85889FEE9
                                                    - ((_QWORD)v85
                                                     + v109)
                                                    + ((2 * ((_QWORD)v85 + v109)) & 0x1892AEAF4EEC022CLL)) ^ 0xE8BD793073D03E98) >> (8 * (v76 & 7u))) ^ v72) << 16);
  LOBYTE(v95) = a2 + a1;
  *(_QWORD *)&v85 = __ROR8__(a2 + a1, 8);
  v110 = (v85 & 0xF8FFFFFFFFFFFFFFLL)
       + 0x3E679F42CB296457
       - ((2 * (v85 & 0xF8FFFFFFFFFFFFFFLL) + 0x15E7EF06772DD764) & 0x26E74F7F1F24F14ALL);
  v111 = v110 ^ 0x2AF8A51ADE133E09;
  v110 ^= 0x7D67190302A4639CuLL;
  *(_QWORD *)&v85 = __ROR8__(v111, 8);
  v112 = (0x16F6A45EDF0B58BBLL - ((v85 + v110) | 0x16F6A45EDF0B58BBLL) + ((v85 + v110) | 0xE9095BA120F4A744)) ^ 0xB9DD8B401C49D633;
  v113 = v112 ^ __ROR8__(v110, 61);
  *(_QWORD *)&v85 = __ROR8__(v112, 8);
  v114 = (v73 - ((~(v85 + v113) | 0xFE9C6D911D4C30A4) + ((v85 + v113) | 0x163926EE2B3CF5BLL))) ^ 0x1B4BB73FF0C993A4;
  v115 = v114 ^ __ROR8__(v113, 61);
  *(_QWORD *)&v85 = __ROR8__(v114, 8);
  v116 = __ROR8__((0x2DFCFD7831C6212BLL - (v85 + v115) + ((2 * (v85 + v115)) & 0xA406050F9C73BDA8)) ^ 0xA3796403C9652806, 8);
  v117 = (0x2DFCFD7831C6212BLL - (v85 + v115) + ((2 * (v85 + v115)) & 0xA406050F9C73BDA8)) ^ 0xA3796403C9652806 ^ __ROR8__(v115, 61);
  v118 = (0xA02AC4F05D155E72 - (v116 + v117) + ((2 * (v116 + v117)) & 0xBFAA761F45D5431ALL)) ^ 0x6D23DBE79D3A8023;
  v119 = v118 ^ __ROR8__(v117, 61);
  v120 = (__ROR8__(v118, 8) + v119) ^ 0x628ABC52894BE762;
  v121 = v120 ^ __ROR8__(v119, 61);
  *(_QWORD *)&v85 = __ROR8__(v120, 8);
  v122 = (v73 - ((~(v85 + v121) | 0x93BA3FB03D9D02EFLL) + ((v85 + v121) | 0x6C45C04FC262FD10))) ^ 0xC97AA3B30216258ELL;
  v123 = v122 ^ __ROR8__(v121, 61);
  *(_QWORD *)&v85 = __ROR8__(v122, 8);
  LODWORD(v109) = v109 & 0xFFFF00FF | (((((0x7D42DE664771D171
                                                          - ((_QWORD)v85
                                                           + v123)
                                                          + ((2 * ((_QWORD)v85 + v123)) & 0x57A4333711C5D1CLL)) ^ 0x66490FFE6C281100) >> (8 * (v95 & 7u))) ^ a7) << 8);
  LOBYTE(v95) = a2 + a6;
  *(_QWORD *)&v85 = __ROR8__(a2 + a6, 8);
  v124 = ((2 * ((v85 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0xAADD163E4CA4D5AELL)
       - ((v85 & 0xF8FFFFFFFFFFFFFFLL)
        - 0x550C087CC469144ELL)
       - 0x556E8B1F26526AD7;
  v125 = v124 ^ 0xECE589BA77D32C7BLL;
  v124 ^= 0xBB7A35A3AB6471EELL;
  *(_QWORD *)&v85 = __ROR8__(v125, 8);
  v126 = (0x2563B16168CF8BF3 - (v85 + v124) + ((2 * (v85 + v124)) | 0xB5389D3D2E60E81ALL)) ^ 0x8A489E7FAB8D057ALL;
  v127 = v126 ^ __ROR8__(v124, 61);
  v128 = __ROR8__(v126, 8) + v127;
  v129 = v128 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v127, 61);
  *((_QWORD *)&v85 + 1) = v128;
  *(_QWORD *)&v85 = v128 ^ 0xE5D7DAAEED85A300;
  v130 = ((v85 >> 8) + v129) ^ 0x8E85997BF8A3092DLL;
  v131 = v130 ^ __ROR8__(v129, 61);
  v132 = (__ROR8__(v130, 8) + v131) ^ 0xCD091F17C02FDE51;
  v133 = v132 ^ __ROR8__(v131, 61);
  v134 = (__ROR8__(v132, 8) + v133) ^ 0x628ABC52894BE762;
  v135 = __ROR8__(v134, 8);
  v136 = v134 ^ __ROR8__(v133, 61);
  v137 = (v73 - ((~(v135 + v136) | 0x890E405815C8236ELL) + ((v135 + v136) | 0x76F1BFA7EA37DC91))) ^ 0xD3CEDC5B2A43040FLL;
  v138 = ((__ROR8__(v137, 8) + (v137 ^ __ROR8__(v136, 61))) ^ 0x1B0BD1982B59C071) >> (8 * (v95 & 7u));
  v139 = (((v109 & 0xFFFFFF00 | (v138 ^ v70))
         - 1129976585
         - ((2 * (v109 & 0xFFFFFF00 | (v138 ^ v70))) & 0x794BD9EE)) ^ 0xBCA5ECF7)
       + STACK[0x240];
  v140 = v139 - 0x4AEDB34B4C1E7F66 > a67;
  if (a69 > 0xFFFFFFFFCC2FED86 != v139 - 0x4AEDB34B4C1E7F66 < 0x33D01279)
    v140 = v139 - 0x4AEDB34B4C1E7F66 < 0x33D01279;
  STACK[0x3E8] = v139 + 10;
  return (*(uint64_t (**)(void))(STACK[0x2C0] + 8 * ((v75 + 1362814535) ^ (1910 * !v140))))();
}

uint64_t sub_1CF255AC0()
{
  unint64_t v0;
  int v1;

  v1 = (unsigned __int16)LODWORD(STACK[0x290]);
  if (v1 == 15177)
  {
    LODWORD(STACK[0x290]) = 15177;
    JUMPOUT(0x1CF254D18);
  }
  if (v1 == 10427 || v1 == 64741)
    STACK[0x378] = v0;
  return ((uint64_t (*)(void))STACK[0x3C8])();
}

uint64_t sub_1CF255B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  char v8;
  int v9;
  char v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;

  v14 = __ROR8__(a2 + v11, 8);
  v15 = ((((v14 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL) << ((2 * (v13 ^ (v13 - 6))) ^ 0x3Du)) | 0x9077E0949EF5BAF6)
      - ((v14 & 0xF8FFFFFFFFFFFFFFLL)
       - 0x550C087CC469144ELL)
      - 0x483BF04A4F7ADD7BLL;
  v16 = __ROR8__(v15 ^ 0xF1B0F2EF1EFB9BD7, 8);
  v17 = (-2
       - ((~(v16 + (v15 ^ 0xA62F4EF6C24CC642)) | 0x1577FAC35B609246)
        + ((v16 + (v15 ^ 0xA62F4EF6C24CC642)) | 0xEA88053CA49F6DB9))) ^ 0x45A32A2267DDE331;
  v18 = __ROR8__(v17, 8);
  v19 = v17 ^ __ROR8__(v15 ^ 0xA62F4EF6C24CC642, 61);
  v20 = v18 + v19;
  v21 = (v18 + v19) ^ 0xE5D7DAAEED85A300;
  v22 = v21 ^ __ROR8__(v19, 61);
  *((_QWORD *)&v23 + 1) = v20;
  *(_QWORD *)&v23 = v21;
  v24 = ((v23 >> 8) + v22) ^ 0x8E85997BF8A3092DLL;
  v25 = v24 ^ __ROR8__(v22, 61);
  v26 = (__ROR8__(v24, 8) + v25) ^ 0xCD091F17C02FDE51;
  v27 = v26 ^ __ROR8__(v25, 61);
  v28 = (__ROR8__(v26, 8) + v27) ^ 0x628ABC52894BE762;
  v29 = v28 ^ __ROR8__(v27, 61);
  v30 = (__ROR8__(v28, 8) + v29) ^ 0x5AC09C033F8B2761;
  v31 = v30 ^ __ROR8__(v29, 61);
  *(_QWORD *)&v23 = __ROR8__(v30, 8);
  v32 = ((((_QWORD)v23 + v31 + 0x7FAC597351137BA8 - ((2 * ((_QWORD)v23 + v31)) & 0xFF58B2E6A226F750)) ^ 0x64A788EB7A4ABBD9) >> (8 * ((a2 + v11) & 7))) ^ v9;
  v33 = a2 + v7;
  *(_QWORD *)&v23 = __ROR8__(v33, 8);
  v34 = ((2 * (v23 & 0xF8FFFFFFFFFFFFFFLL) + 0x55E7EF06772DD764) & 0x442912AD23D5CC78)
      - (v23 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x4D0880D9CD81D1EFLL;
  v35 = v34 ^ 0xE460740C3F945F6FLL;
  v34 ^= 0xB3FFC815E32302FALL;
  *(_QWORD *)&v23 = __ROR8__(v35, 8);
  v36 = (0x30D989346C5478B8
       - ((v23 + v34) ^ 0xF1A2B85CC66DE86 | 0x30D989346C5478B8)
       + ((v23 + v34) ^ 0xF1A2B85CC66DE86 | 0xCF2676CB93AB8747)) ^ 0x90E88DAF637028B6;
  v37 = v36 ^ __ROR8__(v34, 61);
  *(_QWORD *)&v23 = __ROR8__(v36, 8);
  v38 = (0x598D3E4F2B46E74DLL - ((v23 + v37) | 0x598D3E4F2B46E74DLL) + ((v23 + v37) | 0xA672C1B0D4B918B2)) ^ 0x43A51B1E393CBBB2;
  v39 = v38 ^ __ROR8__(v37, 61);
  v40 = (__ROR8__(v38, 8) + v39) ^ 0x8E85997BF8A3092DLL;
  v41 = v40 ^ __ROR8__(v39, 61);
  *(_QWORD *)&v23 = __ROR8__(v40, 8);
  v42 = (0xB69B3F5B468F8A56 - ((v23 + v41) | 0xB69B3F5B468F8A56) + ((v23 + v41) | 0x4964C0A4B97075A9)) ^ 0x846DDFB3795FABF8;
  v43 = v42 ^ __ROR8__(v41, 61);
  *(_QWORD *)&v23 = __ROR8__(v42, 8);
  v44 = (0xACE38C245C40E142 - (v23 + v43) + ((2 * (v23 + v43)) & 0xA638E7B7477E3D7ALL)) ^ 0xCE693076D50B0620;
  v45 = v44 ^ __ROR8__(v43, 61);
  *(_QWORD *)&v23 = __ROR8__(v44, 8);
  v46 = (-2 - ((~(v23 + v45) | 0xBFE1BEF766DF8CC9) + ((v23 + v45) | 0x401E410899207336))) ^ 0xE52122F45954ABA8;
  v47 = __ROR8__(v46, 8);
  *(_QWORD *)&v23 = __ROR8__(v45, 61);
  LODWORD(v33) = (((((0xF3B6A8A85889FEE9
                                     - (v47
                                      + (v46 ^ (unint64_t)v23))
                                     + ((2 * (v47 + (v46 ^ (unint64_t)v23))) & 0x1892AEAF4EEC022CLL)) ^ 0xE8BD793073D03E98) >> (8 * (v33 & 7u))) ^ v10) << 16) | (v32 << 24);
  *(_QWORD *)&v23 = __ROR8__(a2 + a1, 8);
  v48 = (v23 & 0xF8FFFFFFFFFFFFFFLL)
      + 0x3E679F42CB296457
      - ((2 * (v23 & 0xF8FFFFFFFFFFFFFFLL) + 0x15E7EF06772DD764) & 0x26E74F7F1F24F14ALL);
  *(_QWORD *)&v23 = __ROR8__(v48 ^ 0x2AF8A51ADE133E09, 8);
  v48 ^= 0x7D67190302A4639CuLL;
  v49 = (0x16F6A45EDF0B58BBLL - ((v23 + v48) | 0x16F6A45EDF0B58BBLL) + ((v23 + v48) | 0xE9095BA120F4A744)) ^ 0xB9DD8B401C49D633;
  v50 = v49 ^ __ROR8__(v48, 61);
  *(_QWORD *)&v23 = __ROR8__(v49, 8);
  v51 = __ROR8__((-2 - ((~(v23 + v50) | 0xFE9C6D911D4C30A4) + ((v23 + v50) | 0x163926EE2B3CF5BLL))) ^ 0x1B4BB73FF0C993A4, 8);
  v52 = (-2 - ((~(v23 + v50) | 0xFE9C6D911D4C30A4) + ((v23 + v50) | 0x163926EE2B3CF5BLL))) ^ 0x1B4BB73FF0C993A4 ^ __ROR8__(v50, 61);
  v53 = (0x2DFCFD7831C6212BLL - (v51 + v52) + ((2 * (v51 + v52)) & 0xA406050F9C73BDA8)) ^ 0xA3796403C9652806;
  v54 = v53 ^ __ROR8__(v52, 61);
  *(_QWORD *)&v23 = __ROR8__(v53, 8);
  v55 = (0xA02AC4F05D155E72 - (v23 + v54) + ((2 * (v23 + v54)) & 0xBFAA761F45D5431ALL)) ^ 0x6D23DBE79D3A8023;
  v56 = v55 ^ __ROR8__(v54, 61);
  v57 = (__ROR8__(v55, 8) + v56) ^ 0x628ABC52894BE762;
  v58 = v57 ^ __ROR8__(v56, 61);
  *(_QWORD *)&v23 = __ROR8__(v57, 8);
  v59 = (-2 - ((~(v23 + v58) | 0x93BA3FB03D9D02EFLL) + ((v23 + v58) | 0x6C45C04FC262FD10))) ^ 0xC97AA3B30216258ELL;
  v60 = __ROR8__(v59, 8);
  *(_QWORD *)&v23 = __ROR8__(v58, 61);
  LODWORD(v33) = v33 & 0xFFFF00FF | (((((0x7D42DE664771D171
                                                        - (v60
                                                         + (v59 ^ (unint64_t)v23))
                                                        + ((2 * (v60 + (v59 ^ (unint64_t)v23))) & 0x57A4333711C5D1CLL)) ^ 0x66490FFE6C281100) >> (8 * ((a2 + a1) & 7))) ^ a7) << 8);
  *(_QWORD *)&v23 = __ROR8__(a2 + a6, 8);
  v61 = ((2 * ((v23 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0xAADD163E4CA4D5AELL)
      - ((v23 & 0xF8FFFFFFFFFFFFFFLL)
       - 0x550C087CC469144ELL)
      - 0x556E8B1F26526AD7;
  v62 = v61 ^ 0xECE589BA77D32C7BLL;
  v61 ^= 0xBB7A35A3AB6471EELL;
  *(_QWORD *)&v23 = __ROR8__(v62, 8);
  v63 = __ROR8__((0x2563B16168CF8BF3 - (v23 + v61) + ((2 * (v23 + v61)) | 0xB5389D3D2E60E81ALL)) ^ 0x8A489E7FAB8D057ALL, 8);
  v64 = (0x2563B16168CF8BF3 - (v23 + v61) + ((2 * (v23 + v61)) | 0xB5389D3D2E60E81ALL)) ^ 0x8A489E7FAB8D057ALL ^ __ROR8__(v61, 61);
  v65 = v63 + v64;
  v66 = (v63 + v64) ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v64, 61);
  *((_QWORD *)&v23 + 1) = v65;
  *(_QWORD *)&v23 = v65 ^ 0xE5D7DAAEED85A300;
  v67 = ((v23 >> 8) + v66) ^ 0x8E85997BF8A3092DLL;
  v68 = v67 ^ __ROR8__(v66, 61);
  v69 = (__ROR8__(v67, 8) + v68) ^ 0xCD091F17C02FDE51;
  v70 = v69 ^ __ROR8__(v68, 61);
  v71 = (__ROR8__(v69, 8) + v70) ^ 0x628ABC52894BE762;
  v72 = v71 ^ __ROR8__(v70, 61);
  *(_QWORD *)&v23 = __ROR8__(v71, 8);
  v73 = (-2 - ((~(v23 + v72) | 0x890E405815C8236ELL) + ((v23 + v72) | 0x76F1BFA7EA37DC91))) ^ 0xD3CEDC5B2A43040FLL;
  LODWORD(v33) = v33 & 0xFFFFFF00 | ((((__ROR8__(v73, 8) + (v73 ^ __ROR8__(v72, 61))) ^ 0x1B0BD1982B59C071) >> (8 * ((a2 + a6) & 7))) ^ v8);
  return (*(uint64_t (**)(void))(STACK[0x2C0]
                              + 8
                              * ((57
                                * ((((_DWORD)v33 - 1129976585 - ((2 * (_DWORD)v33) & 0x794BD9EE)) ^ 0xBCA5ECF7) != LODWORD(STACK[0x280]) - 1330894506)) ^ (v12 + v13 + 152))))();
}

void sub_1CF2563A0()
{
  JUMPOUT(0x1CF2563BCLL);
}

void sub_1CF25642C()
{
  JUMPOUT(0x1CF25646CLL);
}

uint64_t sub_1CF2566EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 0x64FD43C0B3118155) = v0;
  return ((uint64_t (*)(void))STACK[0x390])();
}

uint64_t sub_1CF256708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  if (v8 == -1393729084)
  {
    v11 = STACK[0x368];
    v12 = *(_QWORD *)(STACK[0x368] - 0x23120F4208F8DD5);
    v13 = STACK[0x2E0];
    *(_QWORD *)(STACK[0x2E0] - 0x23120F4208F8DD5) = v12;
    *(_QWORD *)(v13 - 0x23120F4208F8DDDLL) = *(_QWORD *)(v11 - 0x23120F4208F8DDDLL);
    return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                          + 8
                                          * (((v12 != 0x23120F4208F8DDDLL) * ((v7 + v9 + 1445) ^ 0x6BD)) ^ (v7 + v9 + 1445)))
                              - 8))();
  }
  else if (v8 == 1393700935)
  {
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7 + 8 * (((*(_QWORD *)(STACK[0x338] - 0x373C0AAD4CE136C3) != 0x23120F4208F8DDDLL) * ((v9 + 1135422685) & 0xD8DB779 ^ 0x2FF ^ (211 * (v9 ^ (v9 - 1))))) ^ (v9 + 1362815452)))
                                                                                                  - 4))(a1, a2, a3, a4, a5, a6, a7);
  }
  else
  {
    return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                          + 8
                                          * ((1497
                                            * (((123 - v9) ^ (*(_QWORD *)(STACK[0x2E0]
                                                                                         - 0x23120F4208F8DC5) == 0)) & 1)) ^ 0x2E5))
                              - 12))();
  }
}

uint64_t sub_1CF2567C8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 0x23120F4208F8DDDLL) = v1;
  *(_QWORD *)(v1 - 0x23120F4208F8DD5) = *a1;
  *a1 = v1;
  return ((uint64_t (*)(void))STACK[0x3D8])();
}

uint64_t sub_1CF2567FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((1586 * (v8 == ((3 * (v9 ^ (v9 - 256))) ^ 0xACED62C4))) ^ (v7 + v9 + 508)))
                            - 4))();
}

uint64_t sub_1CF256840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  unint64_t v9;

  v9 = *(_QWORD *)(STACK[0x350] - 0x23120F4208F8DC5);
  STACK[0x308] = v9;
  return (*(uint64_t (**)(void))(a7 + 8 * (((v9 == 0) * ((v8 + (v7 ^ 8) - 776) ^ (v8 + 8))) | v7)))();
}

uint64_t sub_1CF2568A4@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  int v2;
  int v3;
  unint64_t v4;
  unint64_t v5;

  v4 = (v2 - 1508655795);
  STACK[0x408] = v4;
  v5 = STACK[0x3B8];
  STACK[0x410] = STACK[0x3B8];
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((v4 - v5 + 0x7A1D83CEEF194F20 > 9)
                                     * (v3 + ((62 * (a2 ^ 0x30A) + 771753860) | 0x80C51512) + 898)) ^ a2)))();
}

void sub_1CF256928()
{
  unint64_t v0;
  int v1;

  STACK[0x2B0] = ((STACK[0x410] - 0x7A1D83CEEF194F1CLL) ^ 0x5DBECEFD6FFA6799)
               + ((2 * (STACK[0x410] - 0x7A1D83CEEF194F1CLL)) & 0xBB7D9DFADFF4CF32)
               + ((((v1 - 108) | 0x442u) - 384) ^ 0xB7E7FF6EB007FDAALL);
  v0 = STACK[0x400];
  STACK[0x240] = STACK[0x400];
  STACK[0x2A0] = ((v0 - 0x4AEDB34B7FEE91E5) ^ 0x1DB6FFED37426F57)
               - 0x810318117400846
               + ((2 * (v0 - 0x4AEDB34B7FEE91E5)) & 0x3B6DFFDA6E84DEAELL);
  STACK[0x270] = ((v0 - 0x4AEDB34B7FEE91E3) ^ 0xB7D9FFF7BDF397C5)
               + 0x5FBFDE6FC7FDEF80
               + ((2 * (v0 - 0x4AEDB34B7FEE91E3)) & 0x6FB3FFEF7BE72F8ALL);
  LODWORD(STACK[0x290]) = LOWORD(STACK[0x3E6]);
  JUMPOUT(0x1CF254D18);
}

uint64_t sub_1CF256958()
{
  int v0;
  int v1;
  int v2;

  v2 = LOWORD(STACK[0x3E6]);
  STACK[0x378] = STACK[0x3E8];
  return (*(uint64_t (**)(void))(STACK[0x2C0] + 8 * ((110 * (v2 != 15177)) ^ (v0 + v1 + 573))))();
}

void sub_1CF25699C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  char v8;
  int v9;
  char v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;

  v14 = 7 * (v13 ^ (v13 + 182));
  v15 = __ROR8__(a2 + v11, 8);
  v16 = ((2 * ((v15 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0x9077E0949EF5BAF6)
      - ((v15 & 0xF8FFFFFFFFFFFFFFLL)
       - 0x550C087CC469144ELL)
      - 0x483BF04A4F7ADD7BLL;
  v17 = __ROR8__((v14 - 0xE4F0D10E1046A1FLL) ^ v16, 8);
  v18 = (-2
       - ((~(v17 + (v16 ^ 0xA62F4EF6C24CC642)) | 0x1577FAC35B609246)
        + ((v17 + (v16 ^ 0xA62F4EF6C24CC642)) | 0xEA88053CA49F6DB9))) ^ 0x45A32A2267DDE331;
  v19 = __ROR8__(v18, 8);
  v20 = v18 ^ __ROR8__(v16 ^ 0xA62F4EF6C24CC642, 61);
  v21 = v19 + v20;
  v22 = (v19 + v20) ^ 0xE5D7DAAEED85A300;
  v23 = v22 ^ __ROR8__(v20, 61);
  *((_QWORD *)&v24 + 1) = v21;
  *(_QWORD *)&v24 = v22;
  v25 = ((v24 >> 8) + v23) ^ 0x8E85997BF8A3092DLL;
  v26 = v25 ^ __ROR8__(v23, 61);
  v27 = (__ROR8__(v25, 8) + v26) ^ 0xCD091F17C02FDE51;
  v28 = v27 ^ __ROR8__(v26, 61);
  v29 = (__ROR8__(v27, 8) + v28) ^ 0x628ABC52894BE762;
  v30 = v29 ^ __ROR8__(v28, 61);
  v31 = (__ROR8__(v29, 8) + v30) ^ 0x5AC09C033F8B2761;
  v32 = v31 ^ __ROR8__(v30, 61);
  *(_QWORD *)&v24 = __ROR8__(v31, 8);
  v33 = ((((_QWORD)v24 + v32 + 0x7FAC597351137BA8 - ((2 * ((_QWORD)v24 + v32)) & 0xFF58B2E6A226F750)) ^ 0x64A788EB7A4ABBD9) >> (8 * ((a2 + v11) & 7))) ^ v9;
  v34 = a2 + v7;
  *(_QWORD *)&v24 = __ROR8__(v34, 8);
  v35 = ((2 * (v24 & 0xF8FFFFFFFFFFFFFFLL) + 0x55E7EF06772DD764) & 0x442912AD23D5CC78)
      - (v24 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x4D0880D9CD81D1EFLL;
  v36 = v35 ^ 0xE460740C3F945F6FLL;
  v35 ^= 0xB3FFC815E32302FALL;
  *(_QWORD *)&v24 = __ROR8__(v36, 8);
  v37 = (0x30D989346C5478B8
       - ((v24 + v35) ^ 0xF1A2B85CC66DE86 | 0x30D989346C5478B8)
       + ((v24 + v35) ^ 0xF1A2B85CC66DE86 | 0xCF2676CB93AB8747)) ^ 0x90E88DAF637028B6;
  v38 = v37 ^ __ROR8__(v35, 61);
  *(_QWORD *)&v24 = __ROR8__(v37, 8);
  v39 = (0x598D3E4F2B46E74DLL - ((v24 + v38) | 0x598D3E4F2B46E74DLL) + ((v24 + v38) | 0xA672C1B0D4B918B2)) ^ 0x43A51B1E393CBBB2;
  v40 = v39 ^ __ROR8__(v38, 61);
  v41 = (__ROR8__(v39, 8) + v40) ^ 0x8E85997BF8A3092DLL;
  v42 = v41 ^ __ROR8__(v40, 61);
  *(_QWORD *)&v24 = __ROR8__(v41, 8);
  v43 = (0xB69B3F5B468F8A56 - ((v24 + v42) | 0xB69B3F5B468F8A56) + ((v24 + v42) | 0x4964C0A4B97075A9)) ^ 0x846DDFB3795FABF8;
  v44 = v43 ^ __ROR8__(v42, 61);
  *(_QWORD *)&v24 = __ROR8__(v43, 8);
  v45 = (0xACE38C245C40E142 - (v24 + v44) + ((2 * (v24 + v44)) & 0xA638E7B7477E3D7ALL)) ^ 0xCE693076D50B0620;
  v46 = v45 ^ __ROR8__(v44, 61);
  *(_QWORD *)&v24 = __ROR8__(v45, 8);
  v47 = (-2 - ((~(v24 + v46) | 0xBFE1BEF766DF8CC9) + ((v24 + v46) | 0x401E410899207336))) ^ 0xE52122F45954ABA8;
  v48 = __ROR8__(v47, 8);
  *(_QWORD *)&v24 = __ROR8__(v46, 61);
  LODWORD(v34) = (((((0xF3B6A8A85889FEE9
                                     - (v48
                                      + (v47 ^ (unint64_t)v24))
                                     + ((2 * (v48 + (v47 ^ (unint64_t)v24))) & 0x1892AEAF4EEC022CLL)) ^ 0xE8BD793073D03E98) >> (8 * (v34 & 7u))) ^ v10) << 16) | (v33 << 24);
  *(_QWORD *)&v24 = __ROR8__(a2 + a1, 8);
  v49 = (v24 & 0xF8FFFFFFFFFFFFFFLL)
      + 0x3E679F42CB296457
      - ((2 * (v24 & 0xF8FFFFFFFFFFFFFFLL) + 0x15E7EF06772DD764) & 0x26E74F7F1F24F14ALL);
  *(_QWORD *)&v24 = __ROR8__(v49 ^ 0x2AF8A51ADE133E09, 8);
  v49 ^= 0x7D67190302A4639CuLL;
  v50 = (0x16F6A45EDF0B58BBLL - ((v24 + v49) | 0x16F6A45EDF0B58BBLL) + ((v24 + v49) | 0xE9095BA120F4A744)) ^ 0xB9DD8B401C49D633;
  v51 = v50 ^ __ROR8__(v49, 61);
  *(_QWORD *)&v24 = __ROR8__(v50, 8);
  v52 = __ROR8__((-2 - ((~(v24 + v51) | 0xFE9C6D911D4C30A4) + ((v24 + v51) | 0x163926EE2B3CF5BLL))) ^ 0x1B4BB73FF0C993A4, 8);
  v53 = (-2 - ((~(v24 + v51) | 0xFE9C6D911D4C30A4) + ((v24 + v51) | 0x163926EE2B3CF5BLL))) ^ 0x1B4BB73FF0C993A4 ^ __ROR8__(v51, 61);
  v54 = (0x2DFCFD7831C6212BLL - (v52 + v53) + ((2 * (v52 + v53)) & 0xA406050F9C73BDA8)) ^ 0xA3796403C9652806;
  v55 = v54 ^ __ROR8__(v53, 61);
  *(_QWORD *)&v24 = __ROR8__(v54, 8);
  v56 = (0xA02AC4F05D155E72 - (v24 + v55) + ((2 * (v24 + v55)) & 0xBFAA761F45D5431ALL)) ^ 0x6D23DBE79D3A8023;
  v57 = v56 ^ __ROR8__(v55, 61);
  v58 = (__ROR8__(v56, 8) + v57) ^ 0x628ABC52894BE762;
  v59 = v58 ^ __ROR8__(v57, 61);
  *(_QWORD *)&v24 = __ROR8__(v58, 8);
  v60 = (-2 - ((~(v24 + v59) | 0x93BA3FB03D9D02EFLL) + ((v24 + v59) | 0x6C45C04FC262FD10))) ^ 0xC97AA3B30216258ELL;
  v61 = __ROR8__(v60, 8);
  *(_QWORD *)&v24 = __ROR8__(v59, 61);
  LODWORD(v34) = v34 & 0xFFFF00FF | (((((0x7D42DE664771D171
                                                        - (v61
                                                         + (v60 ^ (unint64_t)v24))
                                                        + ((2 * (v61 + (v60 ^ (unint64_t)v24))) & 0x57A4333711C5D1CLL)) ^ 0x66490FFE6C281100) >> (8 * ((a2 + a1) & 7))) ^ a7) << 8);
  *(_QWORD *)&v24 = __ROR8__(a2 + a6, 8);
  v62 = ((2 * ((v24 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0xAADD163E4CA4D5AELL)
      - ((v24 & 0xF8FFFFFFFFFFFFFFLL)
       - 0x550C087CC469144ELL)
      - 0x556E8B1F26526AD7;
  v63 = v62 ^ 0xECE589BA77D32C7BLL;
  v62 ^= 0xBB7A35A3AB6471EELL;
  *(_QWORD *)&v24 = __ROR8__(v63, 8);
  v64 = __ROR8__((0x2563B16168CF8BF3 - (v24 + v62) + ((2 * (v24 + v62)) | 0xB5389D3D2E60E81ALL)) ^ 0x8A489E7FAB8D057ALL, 8);
  v65 = (0x2563B16168CF8BF3 - (v24 + v62) + ((2 * (v24 + v62)) | 0xB5389D3D2E60E81ALL)) ^ 0x8A489E7FAB8D057ALL ^ __ROR8__(v62, 61);
  v66 = v64 + v65;
  v67 = (v64 + v65) ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v65, 61);
  *((_QWORD *)&v24 + 1) = v66;
  *(_QWORD *)&v24 = v66 ^ 0xE5D7DAAEED85A300;
  v68 = ((v24 >> 8) + v67) ^ 0x8E85997BF8A3092DLL;
  v69 = v68 ^ __ROR8__(v67, 61);
  v70 = (__ROR8__(v68, 8) + v69) ^ 0xCD091F17C02FDE51;
  v71 = v70 ^ __ROR8__(v69, 61);
  v72 = (__ROR8__(v70, 8) + v71) ^ 0x628ABC52894BE762;
  v73 = v72 ^ __ROR8__(v71, 61);
  *(_QWORD *)&v24 = __ROR8__(v72, 8);
  v74 = (-2 - ((~(v24 + v73) | 0x890E405815C8236ELL) + ((v24 + v73) | 0x76F1BFA7EA37DC91))) ^ 0xD3CEDC5B2A43040FLL;
  LODWORD(v34) = v34 & 0xFFFFFF00 | ((((__ROR8__(v74, 8) + (v74 ^ __ROR8__(v73, 61))) ^ 0x1B0BD1982B59C071) >> (8 * ((a2 + a6) & 7))) ^ v8);
  *(_DWORD *)STACK[0x3A0] = (v34 - 1129976585 - ((2 * v34) & 0x794BD9EE)) ^ (v14 - v12 - 1276) ^ 0x1260F1E5;
  JUMPOUT(0x1CF257208);
}

uint64_t sub_1CF257224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  char v8;
  int v9;
  char v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  _BOOL4 v72;

  v14 = __ROR8__(a2 + v11, 8);
  v15 = ((2 * ((v14 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0x9077E0949EF5BAF6)
      - ((v14 & 0xF8FFFFFFFFFFFFFFLL)
       - 0x550C087CC469144ELL)
      - 0x483BF04A4F7ADD7BLL;
  v16 = __ROR8__(v15 ^ 0xF1B0F2EF1EFB9BD7, 8);
  v17 = (-2
       - ((~(v16 + (v15 ^ 0xA62F4EF6C24CC642)) | 0x1577FAC35B609246)
        + ((v16 + (v15 ^ 0xA62F4EF6C24CC642)) | 0xEA88053CA49F6DB9))) ^ 0x45A32A2267DDE331;
  v18 = v17 ^ __ROR8__(v15 ^ 0xA62F4EF6C24CC642, 61);
  *((_QWORD *)&v20 + 1) = __ROR8__(v17, 8) + v18;
  *(_QWORD *)&v20 = *((_QWORD *)&v20 + 1) ^ 0xE5D7DAAEED85A300;
  v19 = v20 >> 8;
  *(_QWORD *)&v20 = __ROR8__(v18, 61);
  v21 = (v19 + (*((_QWORD *)&v20 + 1) ^ 0xE5D7DAAEED85A300 ^ v20)) ^ 0x8E85997BF8A3092DLL;
  v22 = v21 ^ __ROR8__(*((_QWORD *)&v20 + 1) ^ 0xE5D7DAAEED85A300 ^ v20, 61);
  v23 = (__ROR8__(v21, 8) + v22) ^ 0xCD091F17C02FDE51;
  v24 = v23 ^ __ROR8__(v22, 61);
  v25 = (__ROR8__(v23, 8) + v24) ^ 0x628ABC52894BE762;
  v26 = v25 ^ __ROR8__(v24, 61);
  v27 = (__ROR8__(v25, 8) + v26) ^ 0x5AC09C033F8B2761;
  v28 = v27 ^ __ROR8__(v26, 61);
  *(_QWORD *)&v20 = __ROR8__(v27, 8);
  v29 = ((((_QWORD)v20 + v28 + 0x7FAC597351137BA8 - ((2 * ((_QWORD)v20 + v28)) & 0xFF58B2E6A226F750)) ^ 0x64A788EB7A4ABBD9) >> (8 * ((a2 + v11) & 7))) ^ v9;
  v30 = a2 + v7;
  *(_QWORD *)&v20 = __ROR8__(v30, 8);
  v31 = ((2 * (v20 & 0xF8FFFFFFFFFFFFFFLL) + 0x55E7EF06772DD764) & 0x442912AD23D5CC78)
      - (v20 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x4D0880D9CD81D1EFLL;
  v32 = v31 ^ 0xE460740C3F945F6FLL;
  v31 ^= 0xB3FFC815E32302FALL;
  *(_QWORD *)&v20 = __ROR8__(v32, 8);
  v33 = (0x30D989346C5478B8
       - ((v20 + v31) ^ 0xF1A2B85CC66DE86 | 0x30D989346C5478B8)
       + ((v20 + v31) ^ 0xF1A2B85CC66DE86 | 0xCF2676CB93AB8747)) ^ 0x90E88DAF637028B6;
  v34 = v33 ^ __ROR8__(v31, 61);
  *(_QWORD *)&v20 = __ROR8__(v33, 8);
  v35 = __ROR8__((0x598D3E4F2B46E74DLL - ((v20 + v34) | 0x598D3E4F2B46E74DLL) + ((v20 + v34) | 0xA672C1B0D4B918B2)) ^ 0x43A51B1E393CBBB2, 8);
  v36 = (0x598D3E4F2B46E74DLL - ((v20 + v34) | 0x598D3E4F2B46E74DLL) + ((v20 + v34) | 0xA672C1B0D4B918B2)) ^ 0x43A51B1E393CBBB2 ^ __ROR8__(v34, 61);
  v37 = (v35 + v36) ^ 0x8E85997BF8A3092DLL;
  v38 = v37 ^ __ROR8__(v36, 61);
  *(_QWORD *)&v20 = __ROR8__(v37, 8);
  v39 = (0xB69B3F5B468F8A56 - ((v20 + v38) | 0xB69B3F5B468F8A56) + ((v20 + v38) | 0x4964C0A4B97075A9)) ^ 0x846DDFB3795FABF8;
  v40 = v39 ^ __ROR8__(v38, 61);
  *(_QWORD *)&v20 = __ROR8__(v39, 8);
  v41 = (0xACE38C245C40E142 - (v20 + v40) + ((2 * (v20 + v40)) & 0xA638E7B7477E3D7ALL)) ^ 0xCE693076D50B0620;
  v42 = v41 ^ __ROR8__(v40, 61);
  *(_QWORD *)&v20 = __ROR8__(v41, 8);
  v43 = (-2 - ((~(v20 + v42) | 0xBFE1BEF766DF8CC9) + ((v20 + v42) | 0x401E410899207336))) ^ 0xE52122F45954ABA8;
  v44 = v43 ^ __ROR8__(v42, 61);
  *(_QWORD *)&v20 = __ROR8__(v43, 8);
  LODWORD(v30) = (v29 << 24) | (((((0xF3B6A8A85889FEE9
                                                   - ((_QWORD)v20
                                                    + v44)
                                                   + ((2 * ((_QWORD)v20 + v44)) & 0x1892AEAF4EEC022CLL)) ^ 0xE8BD793073D03E98) >> (8 * (v30 & 7u))) ^ v10) << 16);
  *(_QWORD *)&v20 = __ROR8__(a2 + a1, 8);
  v45 = (v20 & 0xF8FFFFFFFFFFFFFFLL)
      + 0x3E679F42CB296457
      - ((2 * (v20 & 0xF8FFFFFFFFFFFFFFLL) + 0x15E7EF06772DD764) & 0x26E74F7F1F24F14ALL);
  *(_QWORD *)&v20 = __ROR8__(v45 ^ 0x2AF8A51ADE133E09, 8);
  v45 ^= 0x7D67190302A4639CuLL;
  v46 = (0x16F6A45EDF0B58BBLL - ((v20 + v45) | 0x16F6A45EDF0B58BBLL) + ((v20 + v45) | 0xE9095BA120F4A744)) ^ 0xB9DD8B401C49D633;
  v47 = v46 ^ __ROR8__(v45, 61);
  *(_QWORD *)&v20 = __ROR8__(v46, 8);
  v48 = __ROR8__((-2 - ((~(v20 + v47) | 0xFE9C6D911D4C30A4) + ((v20 + v47) | 0x163926EE2B3CF5BLL))) ^ 0x1B4BB73FF0C993A4, 8);
  v49 = (-2 - ((~(v20 + v47) | 0xFE9C6D911D4C30A4) + ((v20 + v47) | 0x163926EE2B3CF5BLL))) ^ 0x1B4BB73FF0C993A4 ^ __ROR8__(v47, 61);
  v50 = (0x2DFCFD7831C6212BLL - (v48 + v49) + ((2 * (v48 + v49)) & 0xA406050F9C73BDA8)) ^ 0xA3796403C9652806;
  v51 = v50 ^ __ROR8__(v49, 61);
  *(_QWORD *)&v20 = __ROR8__(v50, 8);
  v52 = (0xA02AC4F05D155E72 - (v20 + v51) + ((2 * (v20 + v51)) & 0xBFAA761F45D5431ALL)) ^ 0x6D23DBE79D3A8023;
  v53 = v52 ^ __ROR8__(v51, 61);
  v54 = (__ROR8__(v52, 8) + v53) ^ 0x628ABC52894BE762;
  v55 = v54 ^ __ROR8__(v53, 61);
  *(_QWORD *)&v20 = __ROR8__(v54, 8);
  v56 = (-2 - ((~(v20 + v55) | 0x93BA3FB03D9D02EFLL) + ((v20 + v55) | 0x6C45C04FC262FD10))) ^ 0xC97AA3B30216258ELL;
  v57 = __ROR8__(v56, 8);
  *(_QWORD *)&v20 = __ROR8__(v55, 61);
  LODWORD(v30) = v30 & 0xFFFF00FF | (((((0x7D42DE664771D171
                                                        - (v57
                                                         + (v56 ^ (unint64_t)v20))
                                                        + ((2 * (v57 + (v56 ^ (unint64_t)v20))) & 0x57A4333711C5D1CLL)) ^ 0x66490FFE6C281100) >> (8 * ((a2 + a1) & 7))) ^ a7) << 8);
  *(_QWORD *)&v20 = __ROR8__(a2 + a6, 8);
  v58 = ((2 * ((v20 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0xAADD163E4CA4D5AELL)
      - ((v20 & 0xF8FFFFFFFFFFFFFFLL)
       - 0x550C087CC469144ELL)
      - 0x556E8B1F26526AD7;
  v59 = v58 ^ 0xECE589BA77D32C7BLL;
  v58 ^= 0xBB7A35A3AB6471EELL;
  *(_QWORD *)&v20 = __ROR8__(v59, 8);
  v60 = __ROR8__((0x2563B16168CF8BF3 - (v20 + v58) + ((2 * (v20 + v58)) | 0xB5389D3D2E60E81ALL)) ^ 0x8A489E7FAB8D057ALL, 8);
  v61 = (0x2563B16168CF8BF3 - (v20 + v58) + ((2 * (v20 + v58)) | 0xB5389D3D2E60E81ALL)) ^ 0x8A489E7FAB8D057ALL ^ __ROR8__(v58, 61);
  v62 = v60 + v61;
  v63 = (v60 + v61) ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v61, 61);
  *((_QWORD *)&v20 + 1) = v62;
  *(_QWORD *)&v20 = v62 ^ 0xE5D7DAAEED85A300;
  v64 = ((v20 >> 8) + v63) ^ 0x8E85997BF8A3092DLL;
  v65 = v64 ^ __ROR8__(v63, 61);
  v66 = (__ROR8__(v64, 8) + v65) ^ 0xCD091F17C02FDE51;
  v67 = v66 ^ __ROR8__(v65, 61);
  v68 = (__ROR8__(v66, 8) + v67) ^ 0x628ABC52894BE762;
  v69 = v68 ^ __ROR8__(v67, 61);
  *(_QWORD *)&v20 = __ROR8__(v68, 8);
  v70 = (-2 - ((~(v20 + v69) | 0x890E405815C8236ELL) + ((v20 + v69) | 0x76F1BFA7EA37DC91))) ^ 0xD3CEDC5B2A43040FLL;
  LODWORD(v30) = v30 & 0xFFFFFF00 | ((((__ROR8__(v70, 8) + (v70 ^ __ROR8__(v69, 61))) ^ 0x1B0BD1982B59C071) >> (8 * ((a2 + a6) & 7))) ^ v8);
  v71 = STACK[0x410]
      + (((_DWORD)v30 - 1129976585 - ((2 * (_DWORD)v30) & 0x794BD9EE)) ^ 0xBCA5ECF7)
      - 0x7A1D83CE81A2E0A7;
  if (STACK[0x408] > 0xFFFFFFFF92899190 != v71 < 0x6D766E6F)
    v72 = v71 < 0x6D766E6F;
  else
    v72 = v71 > STACK[0x408] + 1836478063;
  return (*(uint64_t (**)(void))(STACK[0x2C0] + 8 * ((511 * v72) ^ (v12 + v13 + 509))))();
}

uint64_t sub_1CF257ADC@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  unint64_t v6;
  int v7;

  v6 = v3 + 10;
  v7 = LOWORD(STACK[0x3F6]);
  if (v7 == 10427 || v7 == 15177)
    goto LABEL_5;
  if (v7 == 64741)
  {
    STACK[0x2D0] = STACK[0x308] + v2 - 0x7A1D83CEEF194F16;
LABEL_5:
    STACK[0x3B8] = v6;
    LODWORD(STACK[0x3C4]) = a2;
    return (*(uint64_t (**)(void))(a1
                                + 8
                                * (int)(((((v5 + 1935809261) & 0xDDD8CAF6) + 629) * (v7 == 64741)) ^ (v4 + v5 + 526))))();
  }
  STACK[0x2F0] = 0;
  LODWORD(STACK[0x3C4]) = -1129976585;
  return ((uint64_t (*)(void))STACK[0x398])();
}

uint64_t sub_1CF257CB4@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 + v6) = a2;
  return (*(uint64_t (**)(void))(a1 + 8 * ((246 * (*v2 != v5)) ^ (7 * (v4 ^ 0x65A)))))();
}

uint64_t sub_1CF257CF4@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  int v4;

  *(_QWORD *)(v3 - 0x23120F4208F8DD5) = a2;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((*v2 == 0x23120F4208F8DDDLL)
                                     * ((((v4 - 1307) | 0x200) + 1635253675) & 0x9E8803ED ^ 0x3F9)) ^ ((v4 - 1307) | 0x200))))();
}

uint64_t sub_1CF257D5C@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  int v3;

  *(_QWORD *)(STACK[0x338] - 0x373C0AAD4CE136CBLL) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((*v2 != 0x23120F4208F8DDDLL) * (((v3 - 42) | 0x60) + 1365)) ^ (v3 + 409)))
                            - ((v3 + 409) ^ 0x3E5)))();
}

void sub_1CF257D7C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  *(_QWORD *)(v1 - 0x373C0AAD4CE136CBLL) = v2;
  JUMPOUT(0x1CF257D94);
}

uint64_t sub_1CF257DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(a7 + 8 * ((246 * (v7 != v8)) ^ 0x563)))();
}

uint64_t sub_1CF257DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  int v8;

  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (int)(((*v7 == 0x23120F4208F8DDDLL) * ((v8 + 1635253675) & 0x9E8803ED ^ 0x3F9)) ^ v8)))();
}

uint64_t sub_1CF257E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((1210
                                          * (((v7 - 5) ^ (*(_QWORD *)(STACK[0x368] - 0x23120F4208F8DC5) == 0)) & 1)) ^ v7))
                            - 4))();
}

uint64_t sub_1CF257EB0@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  int v2;

  return (*(uint64_t (**)(void))(a1 + 8 * (((a2 != 0x23120F4208F8DDDLL) * (v2 - 410)) ^ v2)))();
}

uint64_t sub_1CF257EE4@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  int v2;

  *(_QWORD *)(STACK[0x338] - 0x373C0AAD4CE136C3) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((1210
                                          * (((v2 + 71) ^ (*(_QWORD *)(STACK[0x368]
                                                                                      - 0x23120F4208F8DC5) == 0)) & 1)) ^ (v2 - 436)))
                            - 4))();
}

uint64_t sub_1CF257F44()
{
  int v0;
  unsigned int v1;
  uint64_t v2;
  unint64_t v3;

  v1 = (v0 + 2054268925) & 0x858E57FD;
  v2 = sub_1CF370D34();
  v3 = STACK[0x2C0];
  *(_QWORD *)(STACK[0x368] - 0x23120F4208F8DC5) = 0;
  return (*(uint64_t (**)(uint64_t))(v3 + 8
                                                 * (int)(((STACK[0x368] != 0x23120F4208F8DDDLL) * (v1 - 410)) ^ v1)))(v2);
}

uint64_t sub_1CF257FB4()
{
  uint64_t v0;

  v0 = sub_1CF370D34();
  STACK[0x368] = 0x23120F4208F8DDDLL;
  return ((uint64_t (*)(uint64_t))STACK[0x3D8])(v0);
}

uint64_t sub_1CF258014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  unsigned int v9;

  v9 = (LODWORD(STACK[0x3C4]) ^ 0xBCA5ECF7)
     - (((((2 * (v7 + 1424)) ^ 0xEA4) + 470840242) ^ (v8 + v7)) & (2 * (LODWORD(STACK[0x3C4]) ^ 0xBCA5ECF7)))
     - 647319022;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((926
                                          * (((2 * v9) & 0xFBFFFF76 ^ 0xB2D56424) + (v9 ^ 0x24954DA9) + 2002796159 != 1969241658)) ^ (v7 + 1424)))
                            - 8))();
}

uint64_t sub_1CF2580B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((684 * (v9 + v8 + (v7 ^ (v10 - 1148) ^ 0xACC51D57) > 7)) ^ v7))
                            - 8))();
}

uint64_t sub_1CF25812C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((53
                                          * (v9 - a1 >= (unint64_t)(v8 + ((v7 - 285894642) & 0xBFCF7F7F) + 815)
                                                      - 1049)) ^ v7))
                            - 8))();
}

uint64_t sub_1CF258178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unsigned int v8;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a7 + 8 * (v7 ^ (126 * (v8 < 0x10))))
                                                                    - ((((v7 - 920) | 0x408u) - 872) ^ 0x139)))(a1, ((v7 - 920) | 0x408u) - 872, 33554493, a4);
}

uint64_t sub_1CF2581C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64x2_t v59;
  int8x16_t v60;
  int64x2_t v61;
  int64x2_t v62;
  int64x2_t v63;
  int64x2_t v64;
  int64x2_t v65;
  int64x2_t v66;
  int64x2_t v67;
  int8x16_t v68;
  int8x16_t v69;
  int64x2_t v70;
  int64x2_t v71;
  int64x2_t v72;
  int64x2_t v73;
  int64x2_t v74;
  int64x2_t v75;
  int64x2_t v76;
  int64x2_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int8x16_t v80;
  int8x16_t v81;
  int64x2_t v82;
  int64x2_t v83;
  int64x2_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int64x2_t v90;
  int64x2_t v91;
  int64x2_t v92;
  int64x2_t v93;
  int8x16_t v94;
  int8x16_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int8x16_t v100;
  int8x16_t v101;
  int64x2_t v102;
  int8x16_t v103;
  int64x2_t v104;
  int64x2_t v105;
  int64x2_t v106;
  int64x2_t v107;
  int8x16_t v108;
  int64x2_t v109;
  int64x2_t v110;
  int64x2_t v111;
  int64x2_t v112;
  int64x2_t v113;
  int64x2_t v114;
  int64x2_t v115;
  int8x16_t v116;
  int64x2_t v117;
  int64x2_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int64x2_t v121;
  int64x2_t v122;
  int8x16_t v123;
  int64x2_t v124;
  int64x2_t v125;
  int8x16_t v126;
  int64x2_t v127;
  int64x2_t v128;
  int64x2_t v129;
  int8x16_t v130;
  int64x2_t v131;
  int64x2_t v132;
  int64x2_t v133;
  int64x2_t v134;
  int64x2_t v135;
  int8x16_t v136;
  int64x2_t v137;
  int64x2_t v138;
  int64x2_t v139;
  int64x2_t v140;
  int64x2_t v141;
  int64x2_t v142;
  int8x16_t v143;
  int64x2_t v144;
  int64x2_t v145;
  int8x16_t v146;
  int64x2_t v147;
  int64x2_t v148;
  int64x2_t v149;
  int8x16_t v150;
  int8x16_t v151;
  int64x2_t v152;
  int64x2_t v153;
  int64x2_t v154;
  int64x2_t v155;
  int64x2_t v156;
  int64x2_t v157;
  int64x2_t v158;
  int64x2_t v159;
  int8x16_t v160;
  uint64_t (*v161)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int8x16_t v164;
  int64x2_t v165;
  int64x2_t v166;
  int8x16_t v167;
  int8x16_t v168;
  int8x16_t v169;
  int8x16_t v170;
  int8x16_t v171;
  int8x16_t v172;
  int8x16_t v173;
  int8x16_t v174;
  int8x16_t v175;
  int8x16_t v176;
  uint64_t v177;
  int64x2_t v178;
  int8x16_t v179;
  int8x16_t v180;
  int8x16_t v181;
  int8x16_t v182;
  int8x16x4_t v183;
  int8x16x4_t v184;

  HIDWORD(a9) = v51;
  v177 = a1 - 15;
  LODWORD(a47) = -(v50 & 0xFFFFFFF0);
  v55 = v52 + v51 + a3;
  LODWORD(a45) = v55 - 8;
  LODWORD(a43) = v55 - 7;
  v56 = (v55 - 6);
  *(int64x2_t *)&STACK[0x2A0] = vdupq_n_s64(0xAAF3F7833B96EBB2);
  *(int64x2_t *)&STACK[0x2B0] = vdupq_n_s64(0xF8FFFFFFFFFFFFFFLL);
  *(int64x2_t *)&STACK[0x280] = vdupq_n_s64(0xEE14BEBC8D361B39);
  *(int64x2_t *)&STACK[0x290] = vdupq_n_s64(0xB98B02A5518146ACLL);
  v57 = (v55 + 6);
  v58 = (v55 + 7);
  *(int64x2_t *)&STACK[0x270] = vdupq_n_s64(0xA7535A7B5A9F3DD9);
  v175 = (int8x16_t)vdupq_n_s64(0x878756599DDB350uLL);
  v176 = (int8x16_t)vdupq_n_s64(0xB1594B094AC1844ELL);
  v166 = vdupq_n_s64(0x5C571E88BAF69BF8uLL);
  v173 = (int8x16_t)vdupq_n_s64(0x467F3BD9A88CC707uLL);
  v174 = (int8x16_t)vdupq_n_s64(0xA3A8E17745096407);
  v172 = (int8x16_t)vdupq_n_s64(0x8E85997BF8A3092DLL);
  *(int64x2_t *)&STACK[0x240] = vdupq_n_s64(0x83CE7A97B9AA1B68);
  *(int64x2_t *)&STACK[0x250] = vdupq_n_s64(0xCD091F17C02FDE51);
  v182 = (int8x16_t)vdupq_n_s64(0x31312E8DEADC702EuLL);
  v164 = (int8x16_t)vdupq_n_s64(0xC266F8D17762409ALL);
  v165 = vdupq_n_s64(0x7C3185684655E497uLL);
  v170 = (int8x16_t)vdupq_n_s64(0xC246D05015220090);
  v171 = (int8x16_t)vdupq_n_s64(0xE144C6C530E1FC0ALL);
  v168 = (int8x16_t)vdupq_n_s64(0xB5EE081F97C974D4);
  v169 = (int8x16_t)vdupq_n_s64(0xA9974A5FA23517D5);
  v167 = (int8x16_t)vdupq_n_s64(0x41FCD597E0BD7A1BuLL);
  v59 = vdupq_n_s64(0x5AF7040FCBE4BA6AuLL);
  v60 = (int8x16_t)vdupq_n_s64(0x38uLL);
  v61.i64[0] = v54 + (v55 - 5);
  v61.i64[1] = v54 + v56;
  v62.i64[0] = v54 + (v55 - 3);
  v62.i64[1] = v54 + (v55 - 4);
  v63.i64[0] = v54 + (v55 - 1);
  v63.i64[1] = v54 + (v55 - 2);
  v64 = v63;
  v63.i64[0] = v54 + (v55 + 1);
  v63.i64[1] = v54 + v55;
  v65.i64[0] = v54 + (v55 + 5);
  v65.i64[1] = v54 + (v55 + 4);
  v66.i64[0] = v54 + v58;
  v66.i64[1] = v54 + v57;
  v67.i64[0] = v54 + (v55 + 3);
  v67.i64[1] = v54 + (_DWORD)v55 - 1422 + 712 * (a2 ^ 0x133);
  v178 = v67;
  v179 = vorrq_s8((int8x16_t)vshlq_n_s64(v67, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v67, 8uLL));
  v181 = vorrq_s8((int8x16_t)vshlq_n_s64(v62, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v62, 8uLL));
  v68 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v63, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v63, 8uLL)), *(int8x16_t *)&STACK[0x2B0]), *(int64x2_t *)&STACK[0x2A0]);
  v69 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v65, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v65, 8uLL)), *(int8x16_t *)&STACK[0x2B0]), *(int64x2_t *)&STACK[0x2A0]);
  v70 = (int64x2_t)veorq_s8(v69, *(int8x16_t *)&STACK[0x290]);
  v71 = (int64x2_t)veorq_s8(v68, *(int8x16_t *)&STACK[0x290]);
  v72 = (int64x2_t)veorq_s8(v68, *(int8x16_t *)&STACK[0x280]);
  v73 = (int64x2_t)veorq_s8(v69, *(int8x16_t *)&STACK[0x280]);
  v74 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v70, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v70, 8uLL)), v73);
  v75 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v71, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v71, 8uLL)), v72);
  v76 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v75, v75), v176), v75), *(int64x2_t *)&STACK[0x270]), v175);
  v77 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v74, v74), v176), v74), *(int64x2_t *)&STACK[0x270]), v175);
  v78 = (int64x2_t)veorq_s8((int8x16_t)v77, vorrq_s8((int8x16_t)vshlq_n_s64(v73, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v73, 0x3DuLL)));
  v79 = (int64x2_t)veorq_s8((int8x16_t)v76, vorrq_s8((int8x16_t)vshlq_n_s64(v72, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v72, 0x3DuLL)));
  v80 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v76, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v76, 8uLL)), v79);
  v81 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v77, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v77, 8uLL)), v78);
  v82 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v80, v174), (int64x2_t)vorrq_s8(v80, (int8x16_t)v166)), v166), v173);
  v83 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v81, v174), (int64x2_t)vorrq_s8(v81, (int8x16_t)v166)), v166), v173);
  v84 = (int64x2_t)veorq_s8((int8x16_t)v83, vorrq_s8((int8x16_t)vshlq_n_s64(v78, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v78, 0x3DuLL)));
  v85 = (int64x2_t)veorq_s8((int8x16_t)v82, vorrq_s8((int8x16_t)vshlq_n_s64(v79, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v79, 0x3DuLL)));
  v86 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v83, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v83, 8uLL)), v84), v172);
  v87 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v82, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v82, 8uLL)), v85), v172);
  v88 = (int64x2_t)veorq_s8((int8x16_t)v87, vorrq_s8((int8x16_t)vshlq_n_s64(v85, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v85, 0x3DuLL)));
  v89 = (int64x2_t)veorq_s8((int8x16_t)v86, vorrq_s8((int8x16_t)vshlq_n_s64(v84, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v84, 0x3DuLL)));
  v90 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v87, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v87, 8uLL)), v88), *(int8x16_t *)&STACK[0x250]);
  v91 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v86, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v86, 8uLL)), v89), *(int8x16_t *)&STACK[0x250]);
  v92 = (int64x2_t)veorq_s8((int8x16_t)v91, vorrq_s8((int8x16_t)vshlq_n_s64(v89, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v89, 0x3DuLL)));
  v93 = (int64x2_t)veorq_s8((int8x16_t)v90, vorrq_s8((int8x16_t)vshlq_n_s64(v88, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v88, 0x3DuLL)));
  v94 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v90, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 8uLL)), v93);
  v95 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v91, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v91, 8uLL)), v92);
  v96 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v94, *(int8x16_t *)&STACK[0x240]), (int64x2_t)vorrq_s8(v94, (int8x16_t)v165)), v165), v171);
  v97 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v95, *(int8x16_t *)&STACK[0x240]), (int64x2_t)vorrq_s8(v95, (int8x16_t)v165)), v165), v171);
  v98 = (int64x2_t)veorq_s8((int8x16_t)v97, vorrq_s8((int8x16_t)vshlq_n_s64(v92, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v92, 0x3DuLL)));
  v99 = (int64x2_t)veorq_s8((int8x16_t)v96, vorrq_s8((int8x16_t)vshlq_n_s64(v93, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v93, 0x3DuLL)));
  v100 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v96, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v96, 8uLL)), v99);
  v101 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v97, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v97, 8uLL)), v98);
  v102 = (int64x2_t)veorq_s8(v101, v182);
  v103 = (int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v101, v164), v170), v102), (int64x2_t)vandq_s8((int8x16_t)v102, v164));
  v104 = (int64x2_t)veorq_s8(v100, v182);
  v105 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v100, v164), v170), v104), (int64x2_t)vandq_s8((int8x16_t)v104, v164)), v169);
  v106 = (int64x2_t)veorq_s8(v103, v169);
  v107 = (int64x2_t)veorq_s8((int8x16_t)v106, vorrq_s8((int8x16_t)vshlq_n_s64(v98, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v98, 0x3DuLL)));
  v108 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v66, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v66, 8uLL)), *(int8x16_t *)&STACK[0x2B0]), *(int64x2_t *)&STACK[0x2A0]);
  v109 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v105, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v105, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v105, vorrq_s8((int8x16_t)vshlq_n_s64(v99, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v99, 0x3DuLL))));
  v110 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v106, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v106, 8uLL)), v107);
  v184.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v109, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v109, v109), v168)), v59), v167), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v63, 3uLL), v60)));
  v184.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v110, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v110, v110), v168)), v59), v167), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v65, 3uLL), v60)));
  v111 = (int64x2_t)veorq_s8(v108, *(int8x16_t *)&STACK[0x290]);
  v112 = (int64x2_t)veorq_s8(v108, *(int8x16_t *)&STACK[0x280]);
  v113 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v111, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v111, 8uLL)), v112);
  v114 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v113, v113), v176), v113), *(int64x2_t *)&STACK[0x270]), v175);
  v115 = (int64x2_t)veorq_s8((int8x16_t)v114, vorrq_s8((int8x16_t)vshlq_n_s64(v112, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v112, 0x3DuLL)));
  v116 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v114, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v114, 8uLL)), v115);
  v117 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v116, v174), (int64x2_t)vorrq_s8(v116, (int8x16_t)v166)), v166), v173);
  v118 = (int64x2_t)veorq_s8((int8x16_t)v117, vorrq_s8((int8x16_t)vshlq_n_s64(v115, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v115, 0x3DuLL)));
  v119 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v117, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v117, 8uLL)), v118), v172);
  v120 = (int64x2_t)veorq_s8((int8x16_t)v119, vorrq_s8((int8x16_t)vshlq_n_s64(v118, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v118, 0x3DuLL)));
  v121 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v119, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v119, 8uLL)), v120), *(int8x16_t *)&STACK[0x250]);
  v122 = (int64x2_t)veorq_s8((int8x16_t)v121, vorrq_s8((int8x16_t)vshlq_n_s64(v120, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v120, 0x3DuLL)));
  v123 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v121, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v121, 8uLL)), v122);
  v124 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v123, *(int8x16_t *)&STACK[0x240]), (int64x2_t)vorrq_s8(v123, (int8x16_t)v165)), v165), v171);
  v125 = (int64x2_t)veorq_s8((int8x16_t)v124, vorrq_s8((int8x16_t)vshlq_n_s64(v122, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v122, 0x3DuLL)));
  v126 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v124, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v124, 8uLL)), v125);
  v127 = (int64x2_t)veorq_s8(v126, v182);
  v128 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v126, v164), v170), v127), (int64x2_t)vandq_s8((int8x16_t)v127, v164)), v169);
  v129 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v128, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v128, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v128, vorrq_s8((int8x16_t)vshlq_n_s64(v125, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v125, 0x3DuLL))));
  v130 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(v179, *(int8x16_t *)&STACK[0x2B0]), *(int64x2_t *)&STACK[0x2A0]);
  v184.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v129, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v129, v129), v168)), v59), v167), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v66, 3uLL), v60)));
  v131 = (int64x2_t)veorq_s8(v130, *(int8x16_t *)&STACK[0x290]);
  v132 = (int64x2_t)veorq_s8(v130, *(int8x16_t *)&STACK[0x280]);
  v133 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v131, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v131, 8uLL)), v132);
  v134 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v133, v133), v176), v133), *(int64x2_t *)&STACK[0x270]), v175);
  v135 = (int64x2_t)veorq_s8((int8x16_t)v134, vorrq_s8((int8x16_t)vshlq_n_s64(v132, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v132, 0x3DuLL)));
  v136 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v134, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v134, 8uLL)), v135);
  v137 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v136, v174), (int64x2_t)vorrq_s8(v136, (int8x16_t)v166)), v166), v173);
  v138 = (int64x2_t)veorq_s8((int8x16_t)v137, vorrq_s8((int8x16_t)vshlq_n_s64(v135, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v135, 0x3DuLL)));
  v139 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v137, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v137, 8uLL)), v138), v172);
  v140 = (int64x2_t)veorq_s8((int8x16_t)v139, vorrq_s8((int8x16_t)vshlq_n_s64(v138, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v138, 0x3DuLL)));
  v141 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v139, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v139, 8uLL)), v140), *(int8x16_t *)&STACK[0x250]);
  v142 = (int64x2_t)veorq_s8((int8x16_t)v141, vorrq_s8((int8x16_t)vshlq_n_s64(v140, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v140, 0x3DuLL)));
  v143 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v141, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v141, 8uLL)), v142);
  v144 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v143, *(int8x16_t *)&STACK[0x240]), (int64x2_t)vorrq_s8(v143, (int8x16_t)v165)), v165), v171);
  v145 = (int64x2_t)veorq_s8((int8x16_t)v144, vorrq_s8((int8x16_t)vshlq_n_s64(v142, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v142, 0x3DuLL)));
  v146 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v144, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v144, 8uLL)), v145);
  v147 = (int64x2_t)veorq_s8(v146, v182);
  v148 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v146, v164), v170), v147), (int64x2_t)vandq_s8((int8x16_t)v147, v164)), v169);
  v149 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v148, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v148, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v148, vorrq_s8((int8x16_t)vshlq_n_s64(v145, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v145, 0x3DuLL))));
  v145.i64[0] = v54 + (v55 - 7);
  v145.i64[1] = v54 + (v55 - 8);
  v184.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v149, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v149, v149), v168)), v59), v167), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v178, 3uLL), v60)));
  v150 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v145, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v145, 8uLL)), *(int8x16_t *)&STACK[0x2B0]), *(int64x2_t *)&STACK[0x2A0]);
  v151 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v61, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v61, 8uLL)), *(int8x16_t *)&STACK[0x2B0]), *(int64x2_t *)&STACK[0x2A0]);
  v184.val[1] = vqtbl4q_s8(v184, (int8x16_t)xmmword_1CF37DAC0);
  v180 = v184.val[1];
  v184.val[2] = veorq_s8(v151, *(int8x16_t *)&STACK[0x290]);
  v184.val[3] = veorq_s8(v150, *(int8x16_t *)&STACK[0x290]);
  v184.val[0] = veorq_s8(v150, *(int8x16_t *)&STACK[0x280]);
  v152 = (int64x2_t)veorq_s8(v151, *(int8x16_t *)&STACK[0x280]);
  v184.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[2], 8uLL)), v152);
  v184.val[3] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[3], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[3], 8uLL)), (int64x2_t)v184.val[0]);
  v184.val[3] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64((int64x2_t)v184.val[3], (int64x2_t)v184.val[3]), v176), (int64x2_t)v184.val[3]), *(int64x2_t *)&STACK[0x270]), v175);
  v184.val[2] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64((int64x2_t)v184.val[2], (int64x2_t)v184.val[2]), v176), (int64x2_t)v184.val[2]), *(int64x2_t *)&STACK[0x270]), v175);
  v153 = (int64x2_t)veorq_s8(v184.val[2], vorrq_s8((int8x16_t)vshlq_n_s64(v152, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152, 0x3DuLL)));
  v184.val[0] = veorq_s8(v184.val[3], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[0], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[0], 0x3DuLL)));
  v184.val[3] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[3], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[3], 8uLL)), (int64x2_t)v184.val[0]);
  v184.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[2], 8uLL)), v153);
  v184.val[3] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v184.val[3], v174), (int64x2_t)vorrq_s8(v184.val[3], (int8x16_t)v166)), v166), v173);
  v184.val[2] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v184.val[2], v174), (int64x2_t)vorrq_s8(v184.val[2], (int8x16_t)v166)), v166), v173);
  v154 = (int64x2_t)veorq_s8(v184.val[2], vorrq_s8((int8x16_t)vshlq_n_s64(v153, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v153, 0x3DuLL)));
  v184.val[0] = veorq_s8(v184.val[3], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[0], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[0], 0x3DuLL)));
  v184.val[2] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[2], 8uLL)), v154), v172);
  v184.val[3] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[3], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[3], 8uLL)), (int64x2_t)v184.val[0]), v172);
  v184.val[0] = veorq_s8(v184.val[3], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[0], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[0], 0x3DuLL)));
  v155 = (int64x2_t)veorq_s8(v184.val[2], vorrq_s8((int8x16_t)vshlq_n_s64(v154, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v154, 0x3DuLL)));
  v184.val[3] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[3], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[3], 8uLL)), (int64x2_t)v184.val[0]), *(int8x16_t *)&STACK[0x250]);
  v184.val[2] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[2], 8uLL)), v155), *(int8x16_t *)&STACK[0x250]);
  v156 = (int64x2_t)veorq_s8(v184.val[2], vorrq_s8((int8x16_t)vshlq_n_s64(v155, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v155, 0x3DuLL)));
  v184.val[0] = veorq_s8(v184.val[3], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[0], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[0], 0x3DuLL)));
  v184.val[3] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[3], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[3], 8uLL)), (int64x2_t)v184.val[0]);
  v184.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[2], 8uLL)), v156);
  v184.val[3] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v184.val[3], *(int8x16_t *)&STACK[0x240]), (int64x2_t)vorrq_s8(v184.val[3], (int8x16_t)v165)), v165), v171);
  v184.val[2] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v184.val[2], *(int8x16_t *)&STACK[0x240]), (int64x2_t)vorrq_s8(v184.val[2], (int8x16_t)v165)), v165), v171);
  v157 = (int64x2_t)veorq_s8(v184.val[2], vorrq_s8((int8x16_t)vshlq_n_s64(v156, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v156, 0x3DuLL)));
  v184.val[0] = veorq_s8(v184.val[3], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[0], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[0], 0x3DuLL)));
  v184.val[3] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[3], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[3], 8uLL)), (int64x2_t)v184.val[0]);
  v184.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[2], 8uLL)), v157);
  v158 = (int64x2_t)veorq_s8(v184.val[2], v182);
  v184.val[2] = (int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v184.val[2], v164), v170), v158), (int64x2_t)vandq_s8((int8x16_t)v158, v164));
  v159 = (int64x2_t)veorq_s8(v184.val[3], v182);
  v184.val[3] = veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v184.val[3], v164), v170), v159), (int64x2_t)vandq_s8((int8x16_t)v159, v164)), v169);
  v184.val[2] = veorq_s8(v184.val[2], v169);
  v160 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(v181, *(int8x16_t *)&STACK[0x2B0]), *(int64x2_t *)&STACK[0x2A0]);
  v184.val[3] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[3], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[3], 8uLL)), (int64x2_t)veorq_s8(v184.val[3], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[0], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[0], 0x3DuLL))));
  v184.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[2], 8uLL)), (int64x2_t)veorq_s8(v184.val[2], vorrq_s8((int8x16_t)vshlq_n_s64(v157, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v157, 0x3DuLL))));
  v183.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v184.val[3], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v184.val[3], (int64x2_t)v184.val[3]), v168)), v59), v167), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v145, 3uLL), v60)));
  v183.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v184.val[2], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v184.val[2], (int64x2_t)v184.val[2]), v168)), v59), v167), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v61, 3uLL), v60)));
  v184.val[2] = veorq_s8(v160, *(int8x16_t *)&STACK[0x290]);
  v184.val[3] = veorq_s8(v160, *(int8x16_t *)&STACK[0x280]);
  v184.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[2], 8uLL)), (int64x2_t)v184.val[3]);
  v184.val[2] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64((int64x2_t)v184.val[2], (int64x2_t)v184.val[2]), v176), (int64x2_t)v184.val[2]), *(int64x2_t *)&STACK[0x270]), v175);
  v184.val[3] = veorq_s8(v184.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[3], 0x3DuLL)));
  v184.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[2], 8uLL)), (int64x2_t)v184.val[3]);
  v184.val[2] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v184.val[2], v174), (int64x2_t)vorrq_s8(v184.val[2], (int8x16_t)v166)), v166), v173);
  v184.val[3] = veorq_s8(v184.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[3], 0x3DuLL)));
  v184.val[2] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[2], 8uLL)), (int64x2_t)v184.val[3]), v172);
  v184.val[3] = veorq_s8(v184.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[3], 0x3DuLL)));
  v184.val[2] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[2], 8uLL)), (int64x2_t)v184.val[3]), *(int8x16_t *)&STACK[0x250]);
  v184.val[3] = veorq_s8(v184.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[3], 0x3DuLL)));
  v184.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[2], 8uLL)), (int64x2_t)v184.val[3]);
  v184.val[2] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v184.val[2], *(int8x16_t *)&STACK[0x240]), (int64x2_t)vorrq_s8(v184.val[2], (int8x16_t)v165)), v165), v171);
  v184.val[3] = veorq_s8(v184.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[3], 0x3DuLL)));
  v184.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[2], 8uLL)), (int64x2_t)v184.val[3]);
  v184.val[0] = veorq_s8(v184.val[2], v182);
  v184.val[2] = veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v184.val[2], v164), v170), (int64x2_t)v184.val[0]), (int64x2_t)vandq_s8(v184.val[0], v164)), v169);
  v184.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[2], 8uLL)), (int64x2_t)veorq_s8(v184.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[3], 0x3DuLL))));
  v184.val[3] = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v64, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v64, 8uLL)), *(int8x16_t *)&STACK[0x2B0]), *(int64x2_t *)&STACK[0x2A0]);
  v183.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v184.val[2], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v184.val[2], (int64x2_t)v184.val[2]), v168)), v59), v167), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v62, 3uLL), v60)));
  v184.val[2] = veorq_s8(v184.val[3], *(int8x16_t *)&STACK[0x290]);
  v184.val[3] = veorq_s8(v184.val[3], *(int8x16_t *)&STACK[0x280]);
  v184.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[2], 8uLL)), (int64x2_t)v184.val[3]);
  v184.val[2] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64((int64x2_t)v184.val[2], (int64x2_t)v184.val[2]), v176), (int64x2_t)v184.val[2]), *(int64x2_t *)&STACK[0x270]), v175);
  v184.val[3] = veorq_s8(v184.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[3], 0x3DuLL)));
  v184.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[2], 8uLL)), (int64x2_t)v184.val[3]);
  v184.val[2] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v184.val[2], v174), (int64x2_t)vorrq_s8(v184.val[2], (int8x16_t)v166)), v166), v173);
  v184.val[3] = veorq_s8(v184.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[3], 0x3DuLL)));
  v184.val[2] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[2], 8uLL)), (int64x2_t)v184.val[3]), v172);
  v184.val[3] = veorq_s8(v184.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[3], 0x3DuLL)));
  v184.val[2] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[2], 8uLL)), (int64x2_t)v184.val[3]), *(int8x16_t *)&STACK[0x250]);
  v184.val[3] = veorq_s8(v184.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[3], 0x3DuLL)));
  v184.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[2], 8uLL)), (int64x2_t)v184.val[3]);
  v184.val[2] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v184.val[2], *(int8x16_t *)&STACK[0x240]), (int64x2_t)vorrq_s8(v184.val[2], (int8x16_t)v165)), v165), v171);
  v184.val[3] = veorq_s8(v184.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[3], 0x3DuLL)));
  v184.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[2], 8uLL)), (int64x2_t)v184.val[3]);
  v184.val[0] = veorq_s8(v184.val[2], v182);
  v184.val[2] = veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v184.val[2], v164), v170), (int64x2_t)v184.val[0]), (int64x2_t)vandq_s8(v184.val[0], v164)), v169);
  v184.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[2], 8uLL)), (int64x2_t)veorq_s8(v184.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v184.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184.val[3], 0x3DuLL))));
  v183.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v184.val[2], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v184.val[2], (int64x2_t)v184.val[2]), v168)), v59), v167), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v64, 3uLL), v60)));
  v184.val[1].i64[1] = vqtbl4q_s8(v183, (int8x16_t)xmmword_1CF37DAC0).u64[0];
  v184.val[1] = vrev64q_s8(v184.val[1]);
  *(int8x16_t *)(v177 + v58) = veorq_s8(vextq_s8(v184.val[1], v184.val[1], 8uLL), *(int8x16_t *)(v66.i64[0] - 15));
  v161 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x2C0] + 8 * (int)((99 * ((_DWORD)a47 == -16)) ^ a2));
  return v161(v58, a2, v57, 4294967280, v55, v161, STACK[0x2C0], v56, a9, __PAIR64__(v52, v53), a1, a12, v164.i64[0], v164.i64[1], v165.i64[0], v165.i64[1], v166.i64[0], v166.i64[1], v167.i64[0],
           v167.i64[1],
           v59.i64[0],
           v59.i64[1],
           v168.i64[0],
           v168.i64[1],
           v169.i64[0],
           v169.i64[1],
           v170.i64[0],
           v170.i64[1],
           v171.i64[0],
           v171.i64[1],
           v172.i64[0],
           v172.i64[1],
           v173.i64[0],
           v173.i64[1],
           v174.i64[0],
           v174.i64[1],
           v175.i64[0],
           v175.i64[1],
           v176.i64[0],
           v176.i64[1],
           v60.i64[0],
           v60.i64[1],
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           v177,
           a50,
           v178.i64[0],
           v178.i64[1],
           v179.i64[0],
           v179.i64[1],
           v180.i64[0],
           v180.i64[1],
           v181.i64[0],
           v181.i64[1],
           v61.i64[0],
           v61.i64[1],
           v62.i64[0],
           v62.i64[1]);
}

void sub_1CF2591E4()
{
  JUMPOUT(0x1CF25844CLL);
}

uint64_t sub_1CF2591EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  int v14;
  int v15;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7
                                                                        + 8
                                                                        * (int)(((v15
                                                                                + ((v13 - 270141405) & 0xBEDF1F5E)
                                                                                - 153)
                                                                               * (a13 != v14)) | v13))
                                                            - 8))(a11, a2, 33554493);
}

uint64_t sub_1CF259240@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  char v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((467
                                          * ((v2 & 8) == ((a2 + 927) ^ (v3 - 903) ^ ((a2 + 642059270) | 0x88801012)))) ^ (a2 + 861)))
                            - 8))();
}

uint64_t sub_1CF259294(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  unsigned int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64x2_t v50;
  int64x2_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int8x16_t v54;
  int8x16_t v55;
  int8x16_t v56;
  int64x2_t v57;
  int8x16_t v58;
  int8x16_t v59;
  int8x16_t v60;
  int8x16_t v61;
  int8x16_t v62;
  int8x16_t v63;
  int8x16_t v64;
  int8x16_t v65;
  int8x16_t v66;
  int8x16_t v67;
  int8x16_t v68;
  int64x2_t v69;
  int8x16_t v70;
  uint64_t v71;
  int64x2_t v72;
  int64x2_t v73;
  int64x2_t v74;
  int64x2_t v75;
  int8x16_t v76;
  int8x16_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int64x2_t v81;
  int64x2_t v82;
  int64x2_t v83;
  int64x2_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int8x16_t v88;
  int8x16_t v89;
  int64x2_t v90;
  int64x2_t v91;
  int64x2_t v92;
  int64x2_t v93;
  int64x2_t v94;
  int64x2_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int64x2_t v100;
  int64x2_t v101;
  int8x16_t v102;
  int8x16_t v103;
  int64x2_t v104;
  int64x2_t v105;
  int64x2_t v106;
  int64x2_t v107;
  int8x16_t v108;
  int8x16_t v109;
  int64x2_t v110;
  int8x16_t v111;
  int64x2_t v112;
  int64x2_t v113;
  int64x2_t v114;
  int8x16_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int64x2_t v121;
  int64x2_t v122;
  int8x16_t v123;
  int64x2_t v124;
  int64x2_t v125;
  int64x2_t v126;
  int64x2_t v127;
  int64x2_t v128;
  int64x2_t v129;
  int8x16_t v130;
  int64x2_t v131;
  int64x2_t v132;
  int8x16_t v133;
  int64x2_t v134;
  int64x2_t v135;
  int64x2_t v136;
  int8x16_t v137;
  int64x2_t v138;
  int64x2_t v139;
  int64x2_t v140;
  int64x2_t v141;
  int64x2_t v142;
  int8x16_t v143;
  int64x2_t v144;
  int64x2_t v145;
  int64x2_t v146;
  int64x2_t v147;
  int64x2_t v148;
  int64x2_t v149;
  int8x16_t v150;
  int64x2_t v151;
  int64x2_t v152;
  int8x16_t v153;
  int64x2_t v154;
  int64x2_t v155;
  int64x2_t v156;
  uint64_t (*v157)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int8x16x4_t v159;

  v44 = -(v39 & 0xFFFFFFF8);
  v45 = v41 + v40 + a3;
  *(int64x2_t *)&STACK[0x270] = vdupq_n_s64(0xF8FFFFFFFFFFFFFFLL);
  *(int64x2_t *)&STACK[0x280] = vdupq_n_s64(0x38uLL);
  v46 = (v45 + 4);
  *(int64x2_t *)&STACK[0x2B0] = vdupq_n_s64(0xB98B02A5518146ACLL);
  v47 = (v45 + 5);
  v48 = (v45 + 6);
  v49 = (v45 + 7);
  *(int64x2_t *)&STACK[0x240] = vdupq_n_s64(0xEE14BEBC8D361B39);
  *(int64x2_t *)&STACK[0x250] = vdupq_n_s64(0xAAF3F7833B96EBB2);
  v50 = vdupq_n_s64(0x5C571E88BAF69BF8uLL);
  v51 = vdupq_n_s64(0x7C3185684655E497uLL);
  v52 = (int8x16_t)vdupq_n_s64(0xC266F8D17762409ALL);
  v54 = *(int8x16_t *)&STACK[0x270];
  v53 = *(int8x16_t *)&STACK[0x280];
  v55 = *(int8x16_t *)&STACK[0x240];
  v57 = vdupq_n_s64(0xA7535A7B5A9F3DD9);
  v56 = (int8x16_t)vdupq_n_s64(0xB1594B094AC1844ELL);
  v59 = (int8x16_t)vdupq_n_s64(0xA3A8E17745096407);
  v58 = (int8x16_t)vdupq_n_s64(0x878756599DDB350uLL);
  v61 = (int8x16_t)vdupq_n_s64(0x8E85997BF8A3092DLL);
  v60 = (int8x16_t)vdupq_n_s64(0x467F3BD9A88CC707uLL);
  v63 = (int8x16_t)vdupq_n_s64(0x83CE7A97B9AA1B68);
  v62 = (int8x16_t)vdupq_n_s64(0xCD091F17C02FDE51);
  v65 = (int8x16_t)vdupq_n_s64(0x31312E8DEADC702EuLL);
  v64 = (int8x16_t)vdupq_n_s64(0xE144C6C530E1FC0ALL);
  v67 = (int8x16_t)vdupq_n_s64(0xA9974A5FA23517D5);
  v66 = (int8x16_t)vdupq_n_s64(0xC246D05015220090);
  v69 = vdupq_n_s64(0x5AF7040FCBE4BA6AuLL);
  v68 = (int8x16_t)vdupq_n_s64(0xB5EE081F97C974D4);
  v70 = (int8x16_t)vdupq_n_s64(0x41FCD597E0BD7A1BuLL);
  v71 = (v49 - v42);
  v72.i64[0] = v43 + (v45 + 1 - v42);
  v72.i64[1] = v43 + (v45 - v42);
  v73.i64[0] = v43 + (v47 - v42);
  v73.i64[1] = v43 + (v46 - v42);
  v74.i64[0] = v43 + v71;
  v74.i64[1] = v43 + (v48 - v42);
  v75.i64[0] = v43 + (v45 + 3 - v42);
  v75.i64[1] = v43 + v45 - 542 - v42 + ((v38 - 1877242089) & 0x6FE46E6Fu);
  *(int64x2_t *)&STACK[0x2A0] = v75;
  *(int8x16_t *)&STACK[0x290] = vorrq_s8((int8x16_t)vshlq_n_s64(v75, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v75, 8uLL));
  v76 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v72, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v72, 8uLL)), v54), *(int64x2_t *)&STACK[0x250]);
  v77 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v73, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v73, 8uLL)), v54), *(int64x2_t *)&STACK[0x250]);
  v78 = (int64x2_t)veorq_s8(v77, *(int8x16_t *)&STACK[0x2B0]);
  v79 = (int64x2_t)veorq_s8(v76, *(int8x16_t *)&STACK[0x2B0]);
  v80 = (int64x2_t)veorq_s8(v76, v55);
  v81 = (int64x2_t)veorq_s8(v77, v55);
  v82 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v78, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v78, 8uLL)), v81);
  v83 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v79, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v79, 8uLL)), v80);
  v84 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v83, v83), v56), v83), v57), v58);
  v85 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v82, v82), v56), v82), v57), v58);
  v86 = (int64x2_t)veorq_s8((int8x16_t)v85, vorrq_s8((int8x16_t)vshlq_n_s64(v81, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v81, 0x3DuLL)));
  v87 = (int64x2_t)veorq_s8((int8x16_t)v84, vorrq_s8((int8x16_t)vshlq_n_s64(v80, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v80, 0x3DuLL)));
  v88 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v84, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v84, 8uLL)), v87);
  v89 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v85, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v85, 8uLL)), v86);
  v90 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v88, v59), (int64x2_t)vorrq_s8(v88, (int8x16_t)v50)), v50), v60);
  v91 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v89, v59), (int64x2_t)vorrq_s8(v89, (int8x16_t)v50)), v50), v60);
  v92 = (int64x2_t)veorq_s8((int8x16_t)v91, vorrq_s8((int8x16_t)vshlq_n_s64(v86, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v86, 0x3DuLL)));
  v93 = (int64x2_t)veorq_s8((int8x16_t)v90, vorrq_s8((int8x16_t)vshlq_n_s64(v87, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v87, 0x3DuLL)));
  v94 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v91, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v91, 8uLL)), v92), v61);
  v95 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v90, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 8uLL)), v93), v61);
  v96 = (int64x2_t)veorq_s8((int8x16_t)v95, vorrq_s8((int8x16_t)vshlq_n_s64(v93, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v93, 0x3DuLL)));
  v97 = (int64x2_t)veorq_s8((int8x16_t)v94, vorrq_s8((int8x16_t)vshlq_n_s64(v92, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v92, 0x3DuLL)));
  v98 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v95, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v95, 8uLL)), v96), v62);
  v99 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v94, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v94, 8uLL)), v97), v62);
  v100 = (int64x2_t)veorq_s8((int8x16_t)v99, vorrq_s8((int8x16_t)vshlq_n_s64(v97, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v97, 0x3DuLL)));
  v101 = (int64x2_t)veorq_s8((int8x16_t)v98, vorrq_s8((int8x16_t)vshlq_n_s64(v96, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v96, 0x3DuLL)));
  v102 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v98, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v98, 8uLL)), v101);
  v103 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v99, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v99, 8uLL)), v100);
  v104 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v102, v63), (int64x2_t)vorrq_s8(v102, (int8x16_t)v51)), v51), v64);
  v105 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v103, v63), (int64x2_t)vorrq_s8(v103, (int8x16_t)v51)), v51), v64);
  v106 = (int64x2_t)veorq_s8((int8x16_t)v105, vorrq_s8((int8x16_t)vshlq_n_s64(v100, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v100, 0x3DuLL)));
  v107 = (int64x2_t)veorq_s8((int8x16_t)v104, vorrq_s8((int8x16_t)vshlq_n_s64(v101, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v101, 0x3DuLL)));
  v108 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v104, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 8uLL)), v107);
  v109 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v105, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v105, 8uLL)), v106);
  v110 = (int64x2_t)veorq_s8(v109, v65);
  v111 = (int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v109, v52), v66), v110), (int64x2_t)vandq_s8((int8x16_t)v110, v52));
  v112 = (int64x2_t)veorq_s8(v108, v65);
  v113 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v108, v52), v66), v112), (int64x2_t)vandq_s8((int8x16_t)v112, v52)), v67);
  v114 = (int64x2_t)veorq_s8(v111, v67);
  v115 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v74, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v74, 8uLL)), v54), *(int64x2_t *)&STACK[0x250]);
  v116 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v113, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v113, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v113, vorrq_s8((int8x16_t)vshlq_n_s64(v107, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v107, 0x3DuLL))));
  v117 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v114, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v114, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v114, vorrq_s8((int8x16_t)vshlq_n_s64(v106, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v106, 0x3DuLL))));
  v159.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v116, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v116, v116), v68)), v69), v70), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v72, 3uLL), v53)));
  v159.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v117, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v117, v117), v68)), v69), v70), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v73, 3uLL), v53)));
  v118 = (int64x2_t)veorq_s8(v115, *(int8x16_t *)&STACK[0x2B0]);
  v119 = (int64x2_t)veorq_s8(v115, v55);
  v120 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v118, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v118, 8uLL)), v119);
  v121 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v120, v120), v56), v120), v57), v58);
  v122 = (int64x2_t)veorq_s8((int8x16_t)v121, vorrq_s8((int8x16_t)vshlq_n_s64(v119, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v119, 0x3DuLL)));
  v123 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v121, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v121, 8uLL)), v122);
  v124 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v123, v59), (int64x2_t)vorrq_s8(v123, (int8x16_t)v50)), v50), v60);
  v125 = (int64x2_t)veorq_s8((int8x16_t)v124, vorrq_s8((int8x16_t)vshlq_n_s64(v122, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v122, 0x3DuLL)));
  v126 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v124, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v124, 8uLL)), v125), v61);
  v127 = (int64x2_t)veorq_s8((int8x16_t)v126, vorrq_s8((int8x16_t)vshlq_n_s64(v125, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v125, 0x3DuLL)));
  v128 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v126, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v126, 8uLL)), v127), v62);
  v129 = (int64x2_t)veorq_s8((int8x16_t)v128, vorrq_s8((int8x16_t)vshlq_n_s64(v127, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v127, 0x3DuLL)));
  v130 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v128, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v128, 8uLL)), v129);
  v131 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v130, v63), (int64x2_t)vorrq_s8(v130, (int8x16_t)v51)), v51), v64);
  v132 = (int64x2_t)veorq_s8((int8x16_t)v131, vorrq_s8((int8x16_t)vshlq_n_s64(v129, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v129, 0x3DuLL)));
  v133 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v131, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v131, 8uLL)), v132);
  v134 = (int64x2_t)veorq_s8(v133, v65);
  v135 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v133, v52), v66), v134), (int64x2_t)vandq_s8((int8x16_t)v134, v52)), v67);
  v136 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v135, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v135, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v135, vorrq_s8((int8x16_t)vshlq_n_s64(v132, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v132, 0x3DuLL))));
  v137 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x290], v54), *(int64x2_t *)&STACK[0x250]);
  v159.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v136, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v136, v136), v68)), v69), v70), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v74, 3uLL), v53)));
  v138 = (int64x2_t)veorq_s8(v137, *(int8x16_t *)&STACK[0x2B0]);
  v139 = (int64x2_t)veorq_s8(v137, v55);
  v140 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v138, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v138, 8uLL)), v139);
  v141 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v140, v140), v56), v140), v57), v58);
  v142 = (int64x2_t)veorq_s8((int8x16_t)v141, vorrq_s8((int8x16_t)vshlq_n_s64(v139, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v139, 0x3DuLL)));
  v143 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v141, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v141, 8uLL)), v142);
  v144 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v143, v59), (int64x2_t)vorrq_s8(v143, (int8x16_t)v50)), v50), v60);
  v145 = (int64x2_t)veorq_s8((int8x16_t)v144, vorrq_s8((int8x16_t)vshlq_n_s64(v142, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v142, 0x3DuLL)));
  v146 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v144, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v144, 8uLL)), v145), v61);
  v147 = (int64x2_t)veorq_s8((int8x16_t)v146, vorrq_s8((int8x16_t)vshlq_n_s64(v145, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v145, 0x3DuLL)));
  v148 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v146, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146, 8uLL)), v147), v62);
  v149 = (int64x2_t)veorq_s8((int8x16_t)v148, vorrq_s8((int8x16_t)vshlq_n_s64(v147, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v147, 0x3DuLL)));
  v150 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v148, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v148, 8uLL)), v149);
  v151 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v150, v63), (int64x2_t)vorrq_s8(v150, (int8x16_t)v51)), v51), v64);
  v152 = (int64x2_t)veorq_s8((int8x16_t)v151, vorrq_s8((int8x16_t)vshlq_n_s64(v149, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v149, 0x3DuLL)));
  v153 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v151, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v151, 8uLL)), v152);
  v154 = (int64x2_t)veorq_s8(v153, v65);
  v155 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v153, v52), v66), v154), (int64x2_t)vandq_s8((int8x16_t)v154, v52)), v67);
  v156 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v155, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v155, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v155, vorrq_s8((int8x16_t)vshlq_n_s64(v152, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152, 0x3DuLL))));
  v159.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v156, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v156, v156), v68)), v69), v70), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x2A0], 3uLL), v53)));
  *(int8x8_t *)(a1 - 7 + v71) = veor_s8(vrev64_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v159, (int8x16_t)xmmword_1CF37DAD0)), *(int8x8_t *)(v43 + v71 - 7));
  v157 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x2C0] + 8 * ((924 * (v44 == -8 - v42)) ^ v38)) - 4);
  return v157(a1, v46, v47, v48, v49, 924, v157, STACK[0x2C0], a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           0x3830282018100800,
           -1,
           v70.i64[0],
           v70.i64[1],
           v69.i64[0],
           v69.i64[1],
           v68.i64[0],
           v68.i64[1],
           v67.i64[0],
           v67.i64[1],
           v66.i64[0],
           v66.i64[1],
           v65.i64[0],
           v65.i64[1],
           v64.i64[0],
           v64.i64[1],
           v63.i64[0],
           v63.i64[1],
           v62.i64[0],
           v62.i64[1],
           v61.i64[0],
           v61.i64[1],
           v60.i64[0],
           v60.i64[1]);
}

void sub_1CF259B98()
{
  JUMPOUT(0x1CF259500);
}

uint64_t sub_1CF259BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  int v14;
  int v15;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2C0]
                                        + 8
                                        * (int)(((((a13 == v13) ^ ((v14 ^ (v15 + 32)) + 1)) & 1)
                                               * ((v14 - 3859554) & 0xAEFFFF53 ^ (v15 + 76))) | v14))
                            - 12))();
}

uint64_t sub_1CF259C34(unint64_t a1)
{
  STACK[0x2F0] = a1;
  return ((uint64_t (*)(void))STACK[0x398])();
}

uint64_t sub_1CF259C48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v10 = (a3 - 1969241659);
  v11 = (__ROR8__(v9 + v10, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL;
  v12 = __ROR8__(v11 ^ 0xB98B02A5518146ACLL, 8);
  v11 ^= 0xEE14BEBC8D361B39;
  v13 = (((2 * (v12 + v11)) | 0xB1594B094AC1844ELL) - (v12 + v11) - 0x58ACA584A560C227) ^ 0x878756599DDB350;
  v14 = v13 ^ __ROR8__(v11, 61);
  v15 = __ROR8__(v13, 8);
  v16 = (v7 - ((v15 + v14) | v7) + ((v15 + v14) | 0xA3A8E17745096407)) ^ 0x467F3BD9A88CC707;
  v17 = v16 ^ __ROR8__(v14, 61);
  v18 = (__ROR8__(v16, 8) + v17) ^ 0x8E85997BF8A3092DLL;
  v19 = v18 ^ __ROR8__(v17, 61);
  v20 = (__ROR8__(v18, 8) + v19) ^ 0xCD091F17C02FDE51;
  v21 = v20 ^ __ROR8__(v19, 61);
  v22 = __ROR8__(v20, 8);
  v23 = (v6 - ((v22 + v21) | v6) + ((v22 + v21) | 0x83CE7A97B9AA1B68)) ^ 0xE144C6C530E1FC0ALL;
  v24 = v23 ^ __ROR8__(v21, 61);
  v25 = __ROR8__(v23, 8);
  v26 = __ROR8__((((v25 + v24) & v4 ^ 0xC246D05015220090)+ ((v25 + v24) ^ 0x31312E8DEADC702ELL)- (((v25 + v24) ^ 0x31312E8DEADC702ELL) & v4)) ^ 0xA9974A5FA23517D5, 8)+ ((((v25 + v24) & v4 ^ 0xC246D05015220090)+ ((v25 + v24) ^ 0x31312E8DEADC702ELL)- (((v25 + v24) ^ 0x31312E8DEADC702ELL) & v4)) ^ 0xA9974A5FA23517D5 ^ __ROR8__(v24, 61));
  *(_BYTE *)(a1 + v10) = (((v26 - ((2 * v26) & 0xB5EE081F97C974D4) + 0x5AF7040FCBE4BA6ALL) ^ 0x41FCD597E0BD7A1BLL) >> (8 * ((v9 + a3 - 59) & 7))) ^ *(_BYTE *)(v9 + v10);
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((360 * (a3 - 1 != v5)) ^ (v8 + v3 + 294))) - 12))();
}

uint64_t sub_1CF259EF4@<X0>(uint64_t a1@<X6>, unsigned int a2@<W8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (v2 ^ (32
                                               * (*(_DWORD *)(STACK[0x340]
                                                            - 0x56A0A12658391A7DLL
                                                            + 40
                                                            * ((a2 | ((unint64_t)(a2 < 0x5479C05B) << 32))
                                                             + ((v2 - 271090523) & 0xBEED9DD6 ^ 0x88AA79256FC6403ELL)
                                                             + 0x775586D9EA82E279)
                                                            + 36)
                                                - LODWORD(STACK[0x374]) == -2137981103))))
                            - 4))();
}

uint64_t sub_1CF259FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;

  v11 = *(_DWORD *)(v8 + 40 * v7 + 28);
  switch(v11)
  {
    case 1:
      JUMPOUT(0x1CF25A0A4);
    case 3:
      return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                            + 8
                                            * ((1486
                                              * (((*(_QWORD *)(v8 + 40 * v7 + 16) == 0) ^ (v9 + v10 + 99)) & 1)) ^ (v9 + v10 + 412)))
                                - 4))();
    case 2:
      return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                            + 8
                                            * (((STACK[0x2E8] != 0x373C0AAD4CE136CBLL) * (v9 + v10 - 3)) ^ (v9 + v10 + 1413)))
                                - 8))();
  }
  return ((uint64_t (*)(void))STACK[0x2C8])();
}

uint64_t sub_1CF25A10C()
{
  uint64_t (*v0)(void);

  return v0();
}

void sub_1CF25A118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  STACK[0x3D8] = ((v7 + 159) ^ 0xFFFFFFFFFFFFFE91) + *(_QWORD *)(a7 + 8 * v7);
  JUMPOUT(0x1CF25A15CLL);
}

uint64_t sub_1CF25A1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  int v12;
  uint64_t v14;

  STACK[0x270] = v9;
  STACK[0x290] = v8;
  LODWORD(STACK[0x280]) = v10;
  v12 = v7 + 41;
  v14 = ((uint64_t (*)(uint64_t))STACK[0x210])(32);
  STACK[0x2E0] = v14 + 0x23120F4208F8DDDLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (((v14 != 0) * ((v11 + v12 - 291) ^ (v11 - 814))) ^ v12)) - 12))();
}

uint64_t sub_1CF25A21C(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)a1 = 0x23120F4208F8DDDLL;
  *(_QWORD *)(a1 + 8) = 0x23120F4208F8DDDLL;
  *(_DWORD *)(a1 + 16) = v1 + 690104975;
  v5 = ((uint64_t (*)(_QWORD))STACK[0x210])((v1 - 818550820));
  *(_QWORD *)(a1 + 24) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1713 * (((v2 + 44) ^ (v5 == 0)) & 1)) ^ v2))
                            - (((v2 - 1509949713) | 0x8C51D00u) ^ 0xAEC51D1ELL)))();
}

uint64_t sub_1CF25A2B4()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t (*v6)(void);
  _BYTE *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;

  v5 = LODWORD(STACK[0x280]) - ((2 * LODWORD(STACK[0x280]) + 1633178284) & 0x74FCEE56) + 1797955713;
  v6 = (uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * v2) - 4);
  LODWORD(STACK[0x250]) = 2 * v3;
  LODWORD(STACK[0x2B0]) = v3 - ((2 * v3 + 510381988) & 0x74FCEE56) - 1984667907;
  LODWORD(STACK[0x2A0]) = v0 ^ 0xE9C80F99;
  v7 = *(_BYTE **)(v1 + 24);
  v8 = __ROR8__(v7, 8);
  v9 = (0x150C087CC469144DLL - (v8 & 0xF8FFFFFFFFFFFFFFLL)) & 0x19A889ECFF1A1ED8 | ((v8 & 0xF8FFFFFFFFFFFFFFLL)
                                                                                    - 0x550C087CC469144ELL) & 0xE057761300E5E127;
  v10 = __ROR8__(v9 ^ 0xA2238B49AE9B5874, 8);
  v9 ^= 0xF5BC3750722C05E1;
  v11 = (v10 + v9) ^ 0x50D4D0E13CBD7177;
  v12 = v11 ^ __ROR8__(v9, 61);
  v13 = __ROR8__(v11, 8) + v12;
  v14 = v13 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v12, 61);
  *((_QWORD *)&v15 + 1) = v13;
  *(_QWORD *)&v15 = v13 ^ 0xE5D7DAAEED85A300;
  v16 = ((v15 >> 8) + v14) ^ 0x8E85997BF8A3092DLL;
  v17 = v16 ^ __ROR8__(v14, 61);
  v18 = (__ROR8__(v16, 8) + v17) ^ 0xCD091F17C02FDE51;
  v19 = v18 ^ __ROR8__(v17, 61);
  v20 = (__ROR8__(v18, 8) + v19) ^ 0x628ABC52894BE762;
  v21 = v20 ^ __ROR8__(v19, 61);
  *(_QWORD *)&v15 = __ROR8__(v20, 8);
  v22 = (((2 * (v15 + v21)) & 0xFCA17D98F44813EALL) - (v15 + v21) - 0x7E50BECC7A2409F6) ^ 0xDB6FDD30BA50D16BLL;
  *v7 = (((__ROR8__(v22, 8) + (v22 ^ __ROR8__(v21, 61))) ^ 0x1B0BD1982B59C071) >> (8 * (v7 & 7u))) ^ HIBYTE(v5) ^ 0xBA;
  v23 = (__ROR8__(v7 + 1, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL;
  *(_QWORD *)&v15 = __ROR8__(v23 ^ 0xB98B02A5518146ACLL, 8);
  v23 ^= 0xEE14BEBC8D361B39;
  v24 = (v15 + v23) ^ 0x50D4D0E13CBD7177;
  v25 = v24 ^ __ROR8__(v23, 61);
  *(_QWORD *)&v15 = __ROR8__(v24, 8);
  v26 = (((2 * (v15 + v25)) & 0xA793A7F6AC829AE6) - (v15 + v25) - 0x53C9D3FB56414D74) ^ 0x49E1F6AA443B118CLL;
  v27 = v26 ^ __ROR8__(v25, 61);
  v28 = (__ROR8__(v26, 8) + v27) ^ 0x8E85997BF8A3092DLL;
  v29 = __ROR8__(v28, 8);
  v30 = v28 ^ __ROR8__(v27, 61);
  v31 = (((2 * (v29 + v30)) & 0xF0BAF55B447DEC8ELL) - (v29 + v30) + 0x7A285525DC109B8) ^ 0xCAAB9A459DEED7E9;
  v32 = v31 ^ __ROR8__(v30, 61);
  *(_QWORD *)&v15 = __ROR8__(v31, 8);
  v33 = (-2 - ((~(v15 + v32) | 0x1FF46385B66E09DELL) + ((v15 + v32) | 0xE00B9C7A4991F621))) ^ 0x7D7EDFD73F25EEBCLL;
  v34 = v33 ^ __ROR8__(v32, 61);
  *(_QWORD *)&v15 = __ROR8__(v33, 8);
  v35 = (0xA4E31C196FB07E65 - ((v15 + v34) | 0xA4E31C196FB07E65) + ((v15 + v34) | 0x5B1CE3E6904F819ALL)) ^ 0x1DC7FE5AFC4A6FBLL;
  v36 = v35 ^ __ROR8__(v34, 61);
  *(_QWORD *)&v15 = __ROR8__(v35, 8);
  v7[1] = (((-2 - ((~((_QWORD)v15 + v36) | 0x75B531B3FC4CDC6BLL) + (((_QWORD)v15 + v36) | 0x8A4ACE4C03B32394))) ^ 0x6EBEE02BD7151C1ALL) >> (8 * (((_BYTE)v7 + 1) & 7u))) ^ BYTE2(v5) ^ 0x7E;
  v37 = (__ROR8__(v7 + 2, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL;
  v38 = v37 ^ 0xB98B02A5518146ACLL;
  v37 ^= 0xEE14BEBC8D361B39;
  *(_QWORD *)&v15 = __ROR8__(v38, 8);
  v39 = (((2 * (v15 + v37)) & 0x9D263FB38571CE96) - (v15 + v37) + 0x316CE0263D4718B4) ^ 0x61B830C701FA69C3;
  v40 = v39 ^ __ROR8__(v37, 61);
  *((_QWORD *)&v15 + 1) = __ROR8__(v39, 8) + v40;
  *(_QWORD *)&v15 = *((_QWORD *)&v15 + 1) ^ 0xE5D7DAAEED85A300;
  v41 = v15 >> 8;
  *(_QWORD *)&v15 = __ROR8__(v40, 61);
  v42 = (0x8EEAB8D098054CA2
       - ((v41 + (*((_QWORD *)&v15 + 1) ^ 0xE5D7DAAEED85A300 ^ v15)) | 0x8EEAB8D098054CA2)
       + ((v41 + (*((_QWORD *)&v15 + 1) ^ 0xE5D7DAAEED85A300 ^ v15)) | 0x7115472F67FAB35DLL)) ^ 0xFF90DE549F59BA70;
  v43 = v42 ^ __ROR8__(*((_QWORD *)&v15 + 1) ^ 0xE5D7DAAEED85A300 ^ v15, 61);
  *(_QWORD *)&v15 = __ROR8__(v42, 8);
  v44 = __ROR8__((-2 - ((~(v15 + v43) | 0x978199C1D991797DLL) + ((v15 + v43) | 0x687E663E266E8682))) ^ 0x5A8886D619BEA72CLL, 8);
  v45 = (-2 - ((~(v15 + v43) | 0x978199C1D991797DLL) + ((v15 + v43) | 0x687E663E266E8682))) ^ 0x5A8886D619BEA72CLL ^ __ROR8__(v43, 61);
  v46 = (((2 * (v44 + v45)) & 0x9D3B31D97DA9F9B8) - (v44 + v45) - 0x4E9D98ECBED4FCDDLL) ^ 0xD3E8DB41C860E441;
  v47 = v46 ^ __ROR8__(v45, 61);
  v48 = (__ROR8__(v46, 8) + v47) ^ 0x5AC09C033F8B2761;
  *(_QWORD *)&v15 = __ROR8__(v7 + 3, 8);
  v7[2] = (((__ROR8__(v48, 8) + (v48 ^ __ROR8__(v47, 61))) ^ 0x1B0BD1982B59C071uLL) >> (8 * (((_BYTE)v7 + 2) & 7u))) ^ BYTE1(v5) ^ 0x77;
  v49 = ((2 * ((v15 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0x20EB39D37CA90794)
      - ((v15 & 0xF8FFFFFFFFFFFFFFLL)
       - 0x550C087CC469144ELL)
      - 0x10759CE9BE5483CALL;
  v50 = v49 ^ 0xA9FE9E4CEFD5C566;
  v49 ^= 0xFE612255336298F3;
  *(_QWORD *)&v15 = __ROR8__(v50, 8);
  v51 = __ROR8__((-2 - ((~(v15 + v49) | 0x3D54A62DE74C24CLL) + ((v15 + v49) | 0xFC2AB59D218B3DB3))) ^ 0x53019A83E2C9B33BLL, 8);
  v52 = (-2 - ((~(v15 + v49) | 0x3D54A62DE74C24CLL) + ((v15 + v49) | 0xFC2AB59D218B3DB3))) ^ 0x53019A83E2C9B33BLL ^ __ROR8__(v49, 61);
  v53 = (-2 - ((~(v51 + v52) | 0x1730E72B835C4191) + ((v51 + v52) | 0xE8CF18D47CA3BE6ELL))) ^ 0xF2E73D856ED9E291;
  v54 = v53 ^ __ROR8__(v52, 61);
  *(_QWORD *)&v15 = __ROR8__(v53, 8);
  v55 = (v15 + v54 - ((2 * (v15 + v54)) & 0x9B516F8D43D1232ELL) - 0x325748395E176E69) ^ 0x432D2EBD594B98BALL;
  v56 = v55 ^ __ROR8__(v54, 61);
  v57 = (__ROR8__(v55, 8) + v56) ^ 0xCD091F17C02FDE51;
  v58 = v57 ^ __ROR8__(v56, 61);
  *(_QWORD *)&v15 = __ROR8__(v57, 8);
  v59 = __ROR8__((((2 * (v15 + v58)) | 0x70B9105F53F81A68) - (v15 + v58) + 0x47A377D05603F2CCLL) ^ 0xDAD6347D20B7EA56, 8);
  v60 = (((2 * (v15 + v58)) | 0x70B9105F53F81A68) - (v15 + v58) + 0x47A377D05603F2CCLL) ^ 0xDAD6347D20B7EA56 ^ __ROR8__(v58, 61);
  v61 = __ROR8__((v59 + v60) ^ 0x5AC09C033F8B2761, 8) + ((v59 + v60) ^ 0x5AC09C033F8B2761 ^ __ROR8__(v60, 61));
  v7[3] = v5 ^ 0x2B ^ (((v61 - ((2 * v61) & 0xCDE279B6265D5694) - 0x190EC324ECD154B6) ^ 0xFDFAED4338776B3BLL) >> (8 * (((_BYTE)v7 + 3) & 7u)));
  return v6();
}

uint64_t sub_1CF25B0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((162 * (STACK[0x2E8] != 0x373C0AAD4CE136CBLL)) | v7))
                            - ((v8 + v7 - 605) ^ (v8 + 143) ^ 0xB7)))();
}

void sub_1CF25B128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  STACK[0x3D8] = (v7 + 182) + *(_QWORD *)(a7 + 8 * v7) - 369;
  JUMPOUT(0x1CF25B178);
}

uint64_t sub_1CF25C1C4()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  int v3;
  int v4;
  uint64_t v5;
  unint64_t v6;

  v4 = (v0 - 484) | 0x68;
  v5 = sub_1CF370D34();
  v6 = STACK[0x2C0];
  *v2 = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v6 + 8 * (v4 ^ (833 * (v1 != 0x23120F4208F8DDDLL))))
                                          - ((v4 - v3 - 111) ^ 0xAEC51D1ELL)))(v5);
}

void sub_1CF25C22C()
{
  sub_1CF370D34();
  JUMPOUT(0x1CF25C248);
}

uint64_t sub_1CF25C250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8
                                             * ((v7 + v9 + 338) | (v8 != -1393729084) | (16 * (v8 != -1393729084))))
                            - 4))();
}

uint64_t sub_1CF25C284()
{
  return ((uint64_t (*)(void))STACK[0x360])();
}

uint64_t sub_1CF25C294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8
                                             * ((v7 + v9 + 338) | (v8 != -1393729084) | (16 * (v8 != -1393729084))))
                            - 4))();
}

uint64_t sub_1CF25C2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8
                                             * ((v7 + v9 + 338) | (v8 != -1393729084) | (16 * (v8 != -1393729084))))
                            - 4))();
}

uint64_t sub_1CF25C2FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  int v9;

  v9 = LODWORD(STACK[0x384]) + 1;
  LODWORD(STACK[0x384]) = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((1099 * ((v9 - 1417265243) < 3)) ^ 0x25D))
                            - (v8 ^ 0xAEC51D12)))();
}

uint64_t sub_1CF25C32C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  uint64_t v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * (a7 ^ (833 * (v7 != 0x23120F4208F8DDDLL))))
                                                                                                - ((a7 - v8 - 111) ^ 0xAEC51D1ELL)))(a1, a2, a3, a4, a5, a6, v9);
}

void sub_1CF25E468(uint64_t a1)
{
  void *v1;
  const char *v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)(a1 + 32);
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObject_(v1, v2, (uint64_t)v4, v3);

}

uint64_t sub_1CF25E4AC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;

  objc_msgSend_mainBundle(MEMORY[0x1E0CB34D0], a2, a3, a4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_bundleIdentifier(v4, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if ((objc_msgSend_isEqualToString_(v8, v9, (uint64_t)CFSTR("com.apple.AppStore"), v10) & 1) != 0)
  {
    v13 = 1;
  }
  else if ((objc_msgSend_isEqualToString_(v8, v11, (uint64_t)CFSTR("com.apple.news"), v12) & 1) != 0)
  {
    v13 = 2;
  }
  else if (objc_msgSend_isEqualToString_(v8, v14, (uint64_t)CFSTR("com.apple.stocks"), v15))
  {
    v13 = 2;
  }
  else
  {
    v13 = 0;
  }

  return v13;
}

void sub_1CF25EA9C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  id v9;
  id v10;
  _QWORD block[5];
  id v12;
  id v13;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(NSObject **)(v7 + 8);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1CF25F898;
  block[3] = &unk_1E8C48370;
  block[4] = v7;
  v12 = v6;
  v13 = v5;
  v9 = v5;
  v10 = v6;
  dispatch_async(v8, block);

}

void sub_1CF25ED74(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  id v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  id v14;
  const char *v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  const __CFString *v46;
  int isLocationUpdating;
  const __CFString *v48;
  int v49;
  id v50;
  __int16 v51;
  const __CFString *v52;
  __int16 v53;
  const __CFString *v54;
  uint64_t v55;

  v55 = *MEMORY[0x1E0C80C00];
  if (objc_msgSend_locationEnabled(*(void **)(a1 + 32), a2, a3, a4))
  {
    APLogForCategory(0x18uLL);
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      v49 = 138477827;
      v50 = (id)objc_opt_class();
      v9 = v50;
      _os_log_impl(&dword_1CF251000, v8, OS_LOG_TYPE_DEBUG, "[%{private}@] Location services is currently enabled, not stopping location updates.", (uint8_t *)&v49, 0xCu);

    }
LABEL_17:

    return;
  }
  if (!objc_msgSend_isLocationInitialized(*(void **)(a1 + 32), v5, v6, v7)
    || !objc_msgSend_isLocationUpdating(*(void **)(a1 + 32), v10, v11, v12))
  {
    APLogForCategory(0x18uLL);
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v37 = (void *)objc_opt_class();
      v38 = *(void **)(a1 + 32);
      v39 = v37;
      if (objc_msgSend_isLocationInitialized(v38, v40, v41, v42))
        v46 = CFSTR("NO");
      else
        v46 = CFSTR("YES");
      isLocationUpdating = objc_msgSend_isLocationUpdating(*(void **)(a1 + 32), v43, v44, v45);
      v49 = 138478339;
      if (isLocationUpdating)
        v48 = CFSTR("NO");
      else
        v48 = CFSTR("YES");
      v50 = v37;
      v51 = 2114;
      v52 = v46;
      v53 = 2112;
      v54 = v48;
      _os_log_impl(&dword_1CF251000, v8, OS_LOG_TYPE_INFO, "[%{private}@] LocationManager has not yet initialized (%{public}@) or location is already stopped (%@{public}).", (uint8_t *)&v49, 0x20u);

    }
    goto LABEL_17;
  }
  APLogForCategory(0x18uLL);
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
  {
    v49 = 138477827;
    v50 = (id)objc_opt_class();
    v14 = v50;
    _os_log_impl(&dword_1CF251000, v13, OS_LOG_TYPE_INFO, "[%{private}@] Stopping location updates.", (uint8_t *)&v49, 0xCu);

  }
  objc_msgSend_setIsLocationUpdating_(*(void **)(a1 + 32), v15, 0, v16);
  objc_msgSend_clLocationManager(*(void **)(a1 + 32), v17, v18, v19);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_stopMonitoringSignificantLocationChanges(v20, v21, v22, v23);

  objc_msgSend_clLocationManager(*(void **)(a1 + 32), v24, v25, v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_stopUpdatingLocation(v27, v28, v29, v30);

  objc_msgSend_setLastPlacemarkLocation_(*(void **)(a1 + 32), v31, 0, v32);
  objc_msgSend_setCurrentPlacemark_(*(void **)(a1 + 32), v33, 0, v34);
  objc_msgSend_setLocation_(*(void **)(a1 + 32), v35, 0, v36);
}

void sub_1CF25F35C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CF25F83C(uint64_t a1)
{
  id v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  id to;

  objc_copyWeak(&to, (id *)(a1 + 32));
  v1 = objc_loadWeakRetained(&to);
  objc_msgSend__flushCacheStorage(v1, v2, v3, v4);

  objc_destroyWeak(&to);
}

void sub_1CF25F884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CF25F898(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  uint64_t v10;
  id v11;
  const char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint32_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  int v29;
  id v30;
  __int16 v31;
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  objc_msgSend_setUpdatingPlacemark_(*(void **)(a1 + 32), a2, 0, a4);
  if (*(_QWORD *)(a1 + 40))
  {
    APLogForCategory(0x18uLL);
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      v9 = (void *)objc_opt_class();
      v10 = *(_QWORD *)(a1 + 40);
      v29 = 138478083;
      v30 = v9;
      v31 = 2114;
      v32 = v10;
      v11 = v9;
      v12 = "[%{private}@] Error updating placemark %{public}@";
      v13 = v8;
      v14 = OS_LOG_TYPE_ERROR;
      v15 = 22;
LABEL_6:
      _os_log_impl(&dword_1CF251000, v13, v14, v12, (uint8_t *)&v29, v15);

    }
  }
  else
  {
    objc_msgSend_firstObject(*(void **)(a1 + 48), v5, v6, v7);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setCurrentPlacemark_(*(void **)(a1 + 32), v17, (uint64_t)v16, v18);

    objc_msgSend_currentPlacemark(*(void **)(a1 + 32), v19, v20, v21);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_location(v22, v23, v24, v25);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setLastPlacemarkLocation_(*(void **)(a1 + 32), v27, (uint64_t)v26, v28);

    APLogForCategory(0x18uLL);
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v29 = 138477827;
      v30 = (id)objc_opt_class();
      v11 = v30;
      v12 = "[%{private}@] Updated placemark";
      v13 = v8;
      v14 = OS_LOG_TYPE_INFO;
      v15 = 12;
      goto LABEL_6;
    }
  }

}

uint64_t sub_1CF25FAC4(uint64_t a1)
{
  uint64_t result;
  const char *v3;
  uint64_t v4;
  uint64_t v5;

  result = objc_opt_respondsToSelector();
  if ((result & 1) != 0)
    return objc_msgSend_connectionInvalidated(*(void **)(a1 + 32), v3, v4, v5);
  return result;
}

uint64_t sub_1CF25FB04(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t isEqualToString;

  objc_msgSend_mainBundle(MEMORY[0x1E0CB34D0], a2, a3, a4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_bundleIdentifier(v4, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if ((objc_msgSend_isEqualToString_(v8, v9, (uint64_t)CFSTR("com.apple.news"), v10) & 1) != 0)
    isEqualToString = 1;
  else
    isEqualToString = objc_msgSend_isEqualToString_(v8, v11, (uint64_t)CFSTR("com.apple.stocks"), v12);

  return isEqualToString;
}

uint64_t sub_1CF25FB78(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t isEqualToString;

  if (a2)
    v3 = *(void **)(a2 + 8);
  else
    v3 = 0;
  v4 = v3;
  objc_msgSend_name(v4, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v8, v9, *(_QWORD *)(a1 + 32), v10);

  return isEqualToString;
}

id sub_1CF25FCA0(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  const char *v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  void *v25;
  id v26;
  id v27;

  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99DE8];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_arrayWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = MEMORY[0x1E0C809B0];
  v23 = 3221225472;
  v24 = sub_1CF25E468;
  v25 = &unk_1E8C483D0;
  v26 = v12;
  v27 = v4;
  v13 = v4;
  v14 = v12;
  objc_msgSend_enumerateObjectsUsingBlock_(a1, v15, (uint64_t)&v22, v16);
  v20 = (void *)objc_msgSend_copy(v14, v17, v18, v19, v22, v23, v24, v25);

  return v20;
}

void sub_1CF260338(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1CF26037C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  id v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  NSObject *v14;
  void *v15;
  uint64_t v16;
  id v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[22];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  objc_msgSend_location(*(void **)(a1 + 32), a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v5)
  {
    APLogForCategory(0x18uLL);
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)v22 = 138477827;
      *(_QWORD *)&v22[4] = objc_opt_class();
      v10 = *(id *)&v22[4];
      _os_log_impl(&dword_1CF251000, v9, OS_LOG_TYPE_DEBUG, "[%{private}@] Current Location has been updated for the first time.", v22, 0xCu);

    }
  }
  objc_msgSend_lastObject(*(void **)(a1 + 40), v6, v7, v8, *(_OWORD *)v22);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setLocation_(*(void **)(a1 + 32), v12, (uint64_t)v11, v13);

  APLogForCategory(0x18uLL);
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
  {
    v15 = (void *)objc_opt_class();
    v16 = *(_QWORD *)(a1 + 40);
    *(_DWORD *)v22 = 138478083;
    *(_QWORD *)&v22[4] = v15;
    *(_WORD *)&v22[12] = 2113;
    *(_QWORD *)&v22[14] = v16;
    v17 = v15;
    _os_log_impl(&dword_1CF251000, v14, OS_LOG_TYPE_DEBUG, "[%{private}@ didUpdateLocations]: locations = %{private}@", v22, 0x16u);

  }
  return objc_msgSend_updatePlacemark(*(void **)(a1 + 32), v18, v19, v20);
}

void sub_1CF26098C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  APHTTPResponse *v9;
  const char *v10;
  void *v11;
  void *v12;
  id v13;

  v13 = a2;
  v7 = a3;
  v8 = a4;
  v9 = [APHTTPResponse alloc];
  v11 = (void *)objc_msgSend__initWithResponseData_URLResponse_error_(v9, v10, (uint64_t)v13, (uint64_t)v7, v8);
  if (*(_QWORD *)(a1 + 32))
  {
    v12 = (void *)MEMORY[0x1D17CBC78]();
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
    objc_autoreleasePoolPop(v12);
  }

}

void sub_1CF260A94(_QWORD *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  objc_msgSend_valueForKey_(*(void **)(a1[4] + 8), a2, a1[5], a4);
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = *(_QWORD *)(a1[6] + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_1CF260AD0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  int v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const char *v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  APLocationInfo *obj;

  objc_msgSend_currentPlacemark(*(void **)(a1 + 32), a2, a3, a4);
  v5 = objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    v9 = (void *)v5;
    v10 = objc_msgSend_locationEnabled(*(void **)(a1 + 32), v6, v7, v8);

    if (v10)
    {
      obj = objc_alloc_init(APLocationInfo);
      objc_msgSend_administrativeArea(*(void **)(*(_QWORD *)(a1 + 32) + 24), v11, v12, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setAdministrativeArea_(obj, v15, (uint64_t)v14, v16);

      objc_msgSend_ISOcountryCode(*(void **)(*(_QWORD *)(a1 + 32) + 24), v17, v18, v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setIsoCountryCode_(obj, v21, (uint64_t)v20, v22);

      objc_msgSend_locality(*(void **)(*(_QWORD *)(a1 + 32) + 24), v23, v24, v25);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setLocality_(obj, v27, (uint64_t)v26, v28);

      objc_msgSend_postalCode(*(void **)(*(_QWORD *)(a1 + 32) + 24), v29, v30, v31);
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setPostalCode_(obj, v33, (uint64_t)v32, v34);

      objc_msgSend_subAdministrativeArea(*(void **)(*(_QWORD *)(a1 + 32) + 24), v35, v36, v37);
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setSubAdministrativeArea_(obj, v39, (uint64_t)v38, v40);

      if ((objc_msgSend_isEmpty(obj, v41, v42, v43) & 1) == 0)
        objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);

    }
  }
}

void sub_1CF260D14(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend_connectionInvalidated(WeakRetained, v1, v2, v3);

}

void sub_1CF260E40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CF261264()
{
  os_log_t v0;
  void *v1;
  os_log_t v2;
  void *v3;
  os_log_t v4;
  void *v5;
  os_log_t v6;
  void *v7;
  os_log_t v8;
  void *v9;
  os_log_t v10;
  void *v11;
  os_log_t v12;
  void *v13;
  os_log_t v14;
  void *v15;
  os_log_t v16;
  void *v17;
  os_log_t v18;
  void *v19;
  os_log_t v20;
  void *v21;
  os_log_t v22;
  void *v23;
  os_log_t v24;
  void *v25;
  os_log_t v26;
  void *v27;
  os_log_t v28;
  void *v29;
  os_log_t v30;
  void *v31;
  os_log_t v32;
  void *v33;
  os_log_t v34;
  void *v35;
  os_log_t v36;
  void *v37;
  os_log_t v38;
  void *v39;
  os_log_t v40;
  void *v41;
  os_log_t v42;
  void *v43;
  os_log_t v44;
  void *v45;
  os_log_t v46;
  void *v47;
  os_log_t v48;
  void *v49;
  os_log_t v50;
  void *v51;
  os_log_t v52;
  void *v53;
  os_log_t v54;
  void *v55;
  os_log_t v56;
  void *v57;
  os_log_t v58;
  void *v59;
  os_log_t v60;
  void *v61;
  os_log_t v62;
  void *v63;
  os_log_t v64;
  void *v65;
  os_log_t v66;
  void *v67;
  os_log_t v68;
  void *v69;
  os_log_t v70;
  void *v71;
  os_log_t v72;
  void *v73;
  os_log_t v74;
  void *v75;
  os_log_t v76;
  void *v77;
  os_log_t v78;
  void *v79;
  os_log_t v80;
  void *v81;
  os_log_t v82;
  void *v83;
  os_log_t v84;
  void *v85;
  os_log_t v86;
  void *v87;
  os_log_t v88;
  void *v89;
  os_log_t v90;
  void *v91;
  os_log_t v92;
  void *v93;
  os_log_t v94;
  void *v95;
  os_log_t v96;
  void *v97;
  os_log_t v98;
  void *v99;
  os_log_t v100;
  void *v101;
  uint8_t v102[16];

  if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v102 = 0;
    _os_log_impl(&dword_1CF251000, MEMORY[0x1E0C81028], OS_LOG_TYPE_DEFAULT, "Initializing log categories.", v102, 2u);
  }
  v0 = os_log_create("com.apple.adplatforms", "Accumulator");
  v1 = (void *)qword_1ED2BC9D8[0];
  qword_1ED2BC9D8[0] = (uint64_t)v0;

  v2 = os_log_create("com.apple.adplatforms", "AdPolicy");
  v3 = (void *)qword_1ED2BC9E0;
  qword_1ED2BC9E0 = (uint64_t)v2;

  v4 = os_log_create("com.apple.adplatforms", "Analytics");
  v5 = (void *)qword_1ED2BC9E8;
  qword_1ED2BC9E8 = (uint64_t)v4;

  v6 = os_log_create("com.apple.adplatforms", "AppStoreEvent");
  v7 = (void *)qword_1ED2BC9F0;
  qword_1ED2BC9F0 = (uint64_t)v6;

  v8 = os_log_create("com.apple.adplatforms", "Attribution");
  v9 = (void *)qword_1ED2BC9F8;
  qword_1ED2BC9F8 = (uint64_t)v8;

  v10 = os_log_create("com.apple.adplatforms", "AttributionLegacy");
  v11 = (void *)qword_1ED2BCA00;
  qword_1ED2BCA00 = (uint64_t)v10;

  v12 = os_log_create("com.apple.adplatforms", "AudienceEstimation");
  v13 = (void *)qword_1ED2BCA08;
  qword_1ED2BCA08 = (uint64_t)v12;

  v14 = os_log_create("com.apple.adplatforms", "ClientInformation");
  v15 = (void *)qword_1ED2BCA10;
  qword_1ED2BCA10 = (uint64_t)v14;

  v16 = os_log_create("com.apple.adplatforms", "ConfigurationSystem");
  v17 = (void *)qword_1ED2BCA18;
  qword_1ED2BCA18 = (uint64_t)v16;

  v18 = os_log_create("com.apple.adplatforms", "ContentCache");
  v19 = (void *)qword_1ED2BCA20;
  qword_1ED2BCA20 = (uint64_t)v18;

  v20 = os_log_create("com.apple.adplatforms", "ConversionMonitoring");
  v21 = (void *)qword_1ED2BCA28;
  qword_1ED2BCA28 = (uint64_t)v20;

  v22 = os_log_create("com.apple.adplatforms", "Database");
  v23 = (void *)qword_1ED2BCA30;
  qword_1ED2BCA30 = (uint64_t)v22;

  v24 = os_log_create("com.apple.adplatforms", "DeviceInformation");
  v25 = (void *)qword_1ED2BCA38;
  qword_1ED2BCA38 = (uint64_t)v24;

  v26 = os_log_create("com.apple.adplatforms", "ECObservability");
  v27 = (void *)qword_1ED2BCA40;
  qword_1ED2BCA40 = (uint64_t)v26;

  v28 = os_log_create("com.apple.adplatforms", "EncryptedFileSystem");
  v29 = (void *)qword_1ED2BCA48;
  qword_1ED2BCA48 = (uint64_t)v28;

  v30 = os_log_create("com.apple.adplatforms", "FatalError");
  v31 = (void *)qword_1ED2BCA50;
  qword_1ED2BCA50 = (uint64_t)v30;

  v32 = os_log_create("com.apple.adplatforms", "APFoundation");
  v33 = (void *)qword_1ED2BCA58;
  qword_1ED2BCA58 = (uint64_t)v32;

  v34 = os_log_create("com.apple.adplatforms", "IdAccounts");
  v35 = (void *)qword_1ED2BCA60;
  qword_1ED2BCA60 = (uint64_t)v34;

  v36 = os_log_create("com.apple.adplatforms", "InMemoryTTLCache");
  v37 = (void *)qword_1ED2BCA68;
  qword_1ED2BCA68 = (uint64_t)v36;

  v38 = os_log_create("com.apple.adplatforms", "JavaScriptBridge");
  v39 = (void *)qword_1ED2BCA70;
  qword_1ED2BCA70 = (uint64_t)v38;

  v40 = os_log_create("com.apple.adplatforms", "KeychainServices");
  v41 = (void *)qword_1ED2BCA78;
  qword_1ED2BCA78 = (uint64_t)v40;

  v42 = os_log_create("com.apple.adplatforms", "LegacyInterface");
  v43 = (void *)qword_1ED2BCA80;
  qword_1ED2BCA80 = (uint64_t)v42;

  v44 = os_log_create("com.apple.adplatforms", "LegacyInterfaceRetryManager");
  v45 = (void *)qword_1ED2BCA88;
  qword_1ED2BCA88 = (uint64_t)v44;

  v46 = os_log_create("com.apple.adplatforms", "EventsListener");
  v47 = (void *)qword_1ED2BCA90;
  qword_1ED2BCA90 = (uint64_t)v46;

  v48 = os_log_create("com.apple.adplatforms", "Location");
  v49 = (void *)qword_1ED2BCA98;
  qword_1ED2BCA98 = (uint64_t)v48;

  v50 = os_log_create("com.apple.adplatforms", "Logging");
  v51 = (void *)qword_1ED2BCAA0;
  qword_1ED2BCAA0 = (uint64_t)v50;

  v52 = os_log_create("com.apple.adplatforms", "MasterSingleton");
  v53 = (void *)qword_1ED2BCAA8;
  qword_1ED2BCAA8 = (uint64_t)v52;

  v54 = os_log_create("com.apple.adplatforms", "MediaService");
  v55 = (void *)qword_1ED2BCAB0;
  qword_1ED2BCAB0 = (uint64_t)v54;

  v56 = os_log_create("com.apple.adplatforms", "MescalSigning");
  v57 = (void *)qword_1ED2BCAB8;
  qword_1ED2BCAB8 = (uint64_t)v56;

  v58 = os_log_create("com.apple.adplatforms", "Metrics");
  v59 = (void *)qword_1ED2BCAC0;
  qword_1ED2BCAC0 = (uint64_t)v58;

  v60 = os_log_create("com.apple.adplatforms", "Networking");
  v61 = (void *)qword_1ED2BCAC8;
  qword_1ED2BCAC8 = (uint64_t)v60;

  v62 = os_log_create("com.apple.adplatforms", "ODML");
  v63 = (void *)qword_1ED2BCAD0;
  qword_1ED2BCAD0 = (uint64_t)v62;

  v64 = os_log_create("com.apple.adplatforms", "PersistentCache");
  v65 = (void *)qword_1ED2BCAD8;
  qword_1ED2BCAD8 = (uint64_t)v64;

  v66 = os_log_create("com.apple.adplatforms", "PersistentCacheGC");
  v67 = (void *)qword_1ED2BCAE0;
  qword_1ED2BCAE0 = (uint64_t)v66;

  v68 = os_log_create("com.apple.adplatforms", "PromotedContent");
  v69 = (void *)qword_1ED2BCAE8;
  qword_1ED2BCAE8 = (uint64_t)v68;

  v70 = os_log_create("com.apple.adplatforms", "PromotedContentLegacy");
  v71 = (void *)qword_1ED2BCAF0;
  qword_1ED2BCAF0 = (uint64_t)v70;

  v72 = os_log_create("com.apple.adplatforms", "PromotedContentSupport");
  v73 = (void *)qword_1ED2BCAF8;
  qword_1ED2BCAF8 = (uint64_t)v72;

  v74 = os_log_create("com.apple.adplatforms", "PromotedContentUI");
  v75 = (void *)qword_1ED2BCB00;
  qword_1ED2BCB00 = (uint64_t)v74;

  v76 = os_log_create("com.apple.adplatforms", "Proxy");
  v77 = (void *)qword_1ED2BCB08;
  qword_1ED2BCB08 = (uint64_t)v76;

  v78 = os_log_create("com.apple.adplatforms", "Reports");
  v79 = (void *)qword_1ED2BCB10;
  qword_1ED2BCB10 = (uint64_t)v78;

  v80 = os_log_create("com.apple.adplatforms", "RunLoop");
  v81 = (void *)qword_1ED2BCB18;
  qword_1ED2BCB18 = (uint64_t)v80;

  v82 = os_log_create("com.apple.adplatforms", "Settings");
  v83 = (void *)qword_1ED2BCB20;
  qword_1ED2BCB20 = (uint64_t)v82;

  v84 = os_log_create("com.apple.adplatforms", "Signing");
  v85 = (void *)qword_1ED2BCB28;
  qword_1ED2BCB28 = (uint64_t)v84;

  v86 = os_log_create("com.apple.adplatforms", "SponsoredSearch");
  v87 = (void *)qword_1ED2BCB30;
  qword_1ED2BCB30 = (uint64_t)v86;

  v88 = os_log_create("com.apple.adplatforms", "StatusConditions");
  v89 = (void *)qword_1ED2BCB38;
  qword_1ED2BCB38 = (uint64_t)v88;

  v90 = os_log_create("com.apple.adplatforms", "StorageManager");
  v91 = (void *)qword_1ED2BCB40;
  qword_1ED2BCB40 = (uint64_t)v90;

  v92 = os_log_create("com.apple.adplatforms", "TargetingExpressions");
  v93 = (void *)qword_1ED2BCB48;
  qword_1ED2BCB48 = (uint64_t)v92;

  v94 = os_log_create("com.apple.adplatforms", "Telephony");
  v95 = (void *)qword_1ED2BCB50;
  qword_1ED2BCB50 = (uint64_t)v94;

  v96 = os_log_create("com.apple.adplatforms", "TimeSpentReports");
  v97 = (void *)qword_1ED2BCB58;
  qword_1ED2BCB58 = (uint64_t)v96;

  v98 = os_log_create("com.apple.adplatforms", "UnitTesting");
  v99 = (void *)qword_1ED2BCB60;
  qword_1ED2BCB60 = (uint64_t)v98;

  v100 = os_log_create("com.apple.adplatforms", "XPCSupport");
  v101 = (void *)qword_1ED2BCB68;
  qword_1ED2BCB68 = (uint64_t)v100;

}

void sub_1CF261868(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  void *v12;
  void *v13;
  id v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  const __CFString *v21;
  int isLocationUpdating;
  const __CFString *v23;
  id v24;
  NSObject *v25;
  id v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;
  int v43;
  id v44;
  __int16 v45;
  const __CFString *v46;
  __int16 v47;
  const __CFString *v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend_locationEnabled(*(void **)(a1 + 32), a2, a3, a4) & 1) == 0)
  {
    APLogForCategory(0x18uLL);
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
    {
      v43 = 138477827;
      v44 = (id)objc_opt_class();
      v24 = v44;
      _os_log_impl(&dword_1CF251000, v11, OS_LOG_TYPE_DEBUG, "[%{private}@] Location services was turned off prior to start call.", (uint8_t *)&v43, 0xCu);

    }
    goto LABEL_14;
  }
  if (!objc_msgSend_isLocationInitialized(*(void **)(a1 + 32), v5, v6, v7)
    || (objc_msgSend_isLocationUpdating(*(void **)(a1 + 32), v8, v9, v10) & 1) != 0)
  {
    APLogForCategory(0x18uLL);
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      v12 = (void *)objc_opt_class();
      v13 = *(void **)(a1 + 32);
      v14 = v12;
      if (objc_msgSend_isLocationInitialized(v13, v15, v16, v17))
        v21 = CFSTR("NO");
      else
        v21 = CFSTR("YES");
      isLocationUpdating = objc_msgSend_isLocationUpdating(*(void **)(a1 + 32), v18, v19, v20);
      v43 = 138478339;
      if (isLocationUpdating)
        v23 = CFSTR("YES");
      else
        v23 = CFSTR("NO");
      v44 = v12;
      v45 = 2114;
      v46 = v21;
      v47 = 2114;
      v48 = v23;
      _os_log_impl(&dword_1CF251000, v11, OS_LOG_TYPE_INFO, "[%{private}@] LocationManager has not yet initialized (%{public}@) or location is already updating (%{public}@).", (uint8_t *)&v43, 0x20u);

    }
LABEL_14:

    return;
  }
  APLogForCategory(0x18uLL);
  v25 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
  {
    v43 = 138477827;
    v44 = (id)objc_opt_class();
    v26 = v44;
    _os_log_impl(&dword_1CF251000, v25, OS_LOG_TYPE_INFO, "[%{private}@] Starting location updates.", (uint8_t *)&v43, 0xCu);

  }
  objc_msgSend_clLocationManager(*(void **)(a1 + 32), v27, v28, v29);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_startUpdatingLocation(v30, v31, v32, v33);

  objc_msgSend_clLocationManager(*(void **)(a1 + 32), v34, v35, v36);
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_startMonitoringSignificantLocationChanges(v37, v38, v39, v40);

  objc_msgSend_setIsLocationUpdating_(*(void **)(a1 + 32), v41, 1, v42);
}

uint64_t sub_1CF261AB8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  NSObject *v6;
  void *v7;
  void *v8;
  id v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  int v19;
  const char *v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v33;
  void *v34;
  id v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[4];
  char v40;
  uint8_t buf[4];
  void *v42;
  __int16 v43;
  void *v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v5 = objc_msgSend_authorizationStatus(*(void **)(a1 + 32), a2, a3, a4);
  APLogForCategory(0x18uLL);
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
  {
    v7 = (void *)objc_opt_class();
    v8 = (void *)MEMORY[0x1E0CB37E8];
    v9 = v7;
    objc_msgSend_numberWithInt_(v8, v10, v5, v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138478083;
    v42 = v7;
    v43 = 2114;
    v44 = v12;
    _os_log_impl(&dword_1CF251000, v6, OS_LOG_TYPE_DEBUG, "[%{private}@] Core Location AuthorizationStatus: %{public}@", buf, 0x16u);

  }
  v16 = objc_msgSend_callerStatus(*(void **)(a1 + 40), v13, v14, v15);
  v19 = objc_msgSend_locationEnabledFor_(APLocationManager, v17, v16, v18);
  v25 = objc_msgSend_locationEnabledFor_(APLocationManager, v20, v5, v21);
  if (v19 != v25)
  {
    objc_msgSend__authorizationChangedBlocks(APLocationManager, v22, v23, v24);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v39[0] = MEMORY[0x1E0C809B0];
    v39[1] = 3221225472;
    v39[2] = sub_1CF27E668;
    v39[3] = &unk_1E8C48738;
    v40 = v25;
    objc_msgSend_enumerateObjectsUsingBlock_(v26, v27, (uint64_t)v39, v28);

  }
  objc_msgSend_setCallerStatus_(*(void **)(a1 + 40), v22, v5, v24);
  if (v25)
    return objc_msgSend_start(*(void **)(a1 + 40), v29, v30, v31);
  APLogForCategory(0x18uLL);
  v33 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v33, OS_LOG_TYPE_DEBUG))
  {
    v34 = (void *)objc_opt_class();
    *(_DWORD *)buf = 138477827;
    v42 = v34;
    v35 = v34;
    _os_log_impl(&dword_1CF251000, v33, OS_LOG_TYPE_DEBUG, "[%{private}@] Location is disabled for the app importing PromotedContent Framework.", buf, 0xCu);

  }
  return objc_msgSend_stop(*(void **)(a1 + 40), v36, v37, v38);
}

void sub_1CF261D88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1CF261EE4(uint64_t a1)
{
  NSObject *v2;
  id v3;
  id v4;
  const char *v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  double v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  int v35;
  id v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  APLogForCategory(0x18uLL);
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    v35 = 138477827;
    v36 = (id)objc_opt_class();
    v3 = v36;
    _os_log_impl(&dword_1CF251000, v2, OS_LOG_TYPE_INFO, "[%{private}@] Initializing the Location Manager", (uint8_t *)&v35, 0xCu);

  }
  v4 = objc_alloc_init(MEMORY[0x1E0C9E3C8]);
  objc_msgSend_setClLocationManager_(*(void **)(a1 + 32), v5, (uint64_t)v4, v6);

  v7 = *(void **)(a1 + 32);
  objc_msgSend_clLocationManager(v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setDelegate_(v11, v12, (uint64_t)v7, v13);

  v14 = *MEMORY[0x1E0C9E4B8];
  objc_msgSend_clLocationManager(*(void **)(a1 + 32), v15, v16, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setDesiredAccuracy_(v18, v19, v20, v21, v14);

  objc_msgSend_clLocationManager(*(void **)(a1 + 32), v22, v23, v24);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setDistanceFilter_(v25, v26, v27, v28, v14);

  objc_msgSend_setIsLocationInitialized_(*(void **)(a1 + 32), v29, 1, v30);
  return objc_msgSend_start(*(void **)(a1 + 32), v31, v32, v33);
}

void sub_1CF2639EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  void *v15;

  objc_sync_exit(v15);
  _Unwind_Resume(a1);
}

id sub_1CF263ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  _QWORD v21[4];
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  _BYTE v25[40];
  uint64_t v26;

  if (a3)
  {
    v5 = *(_QWORD *)(a3 + 16);
    if (v5)
    {
      v21[1] = a1;
      v21[3] = a2;
      v26 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1CF372428();
      v6 = a3 + 32;
      do
      {
        sub_1CF263D30(v6, (uint64_t)v25);
        sub_1CF263D30((uint64_t)v25, (uint64_t)&v22);
        v8 = *((_QWORD *)&v23 + 1);
        if (*((_QWORD *)&v23 + 1))
        {
          v7 = v24;
          sub_1CF263DF4(&v22, *((uint64_t *)&v23 + 1));
          (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v7);
          sub_1CF263E18((uint64_t)&v22);
        }
        else
        {
          sub_1CF263DB8((uint64_t)&v22, qword_1ED2BB3E8);
          v22 = 0u;
          v23 = 0u;
          v9 = (void *)sub_1CF372140();
          v10 = *((_QWORD *)&v23 + 1);
          if (*((_QWORD *)&v23 + 1))
          {
            v11 = sub_1CF263DF4(&v22, *((uint64_t *)&v23 + 1));
            v12 = *(_QWORD *)(v10 - 8);
            MEMORY[0x1E0C80A78](v11, v11);
            v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v12 + 16))(v14);
            v15 = sub_1CF3724A0();
            (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v10);
            sub_1CF263E18((uint64_t)&v22);
          }
          else
          {
            v15 = 0;
          }
          objc_msgSend(objc_allocWithZone((Class)APDatabaseColumn), sel_initWithName_forColumnType_withValue_, v9, 1, v15);

          swift_unknownObjectRelease();
        }
        sub_1CF263DB8((uint64_t)v25, qword_1ED2BB3E8);
        sub_1CF372410();
        sub_1CF372434();
        sub_1CF372440();
        sub_1CF37241C();
        v6 += 40;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
      v3 = v21[2];
    }
  }
  v16 = *(void **)(v3 + 16);
  v17 = (void *)sub_1CF372140();
  sub_1CF263E94();
  v18 = (void *)sub_1CF37226C();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v16, sel_executeQuery_withParameters_, v17, v18);

  return v19;
}

uint64_t sub_1CF263D30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CF263D78(qword_1ED2BB3E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CF263D78(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1D17CC2D8]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_1CF263DB8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1CF263D78(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_QWORD *sub_1CF263DF4(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_1CF263E18(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

id sub_1CF263E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  _QWORD v8[4];

  v6 = *v3;
  sub_1CF263E94();
  v8[3] = a1;
  v8[0] = v6;
  return sub_1CF263ED0(0, 0xE000000000000000, a3, v8);
}

unint64_t sub_1CF263E94()
{
  unint64_t result;

  result = qword_1ED2BB498;
  if (!qword_1ED2BB498)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED2BB498);
  }
  return result;
}

id sub_1CF263ED0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v6 = (void *)sub_1CF372140();
  swift_bridgeObjectRelease();
  v7 = a4[3];
  if (v7)
  {
    v8 = sub_1CF263DF4(a4, a4[3]);
    v9 = *(_QWORD *)(v7 - 8);
    MEMORY[0x1E0C80A78](v8, v8);
    v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v11);
    v12 = sub_1CF3724A0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
    sub_1CF263E18((uint64_t)a4);
  }
  else
  {
    v12 = 0;
  }
  v13 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithName_forColumnType_withValue_, v6, a3, v12);

  swift_unknownObjectRelease();
  return v13;
}

id sub_1CF2640A4(uint64_t a1, uint64_t a2)
{
  return sub_1CF263E38(a1, a2, 0);
}

id sub_1CF2640AC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD v5[4];

  v3 = *v1;
  sub_1CF263E94();
  v5[3] = a1;
  v5[0] = v3;
  return sub_1CF263ED0(0, 0xE000000000000000, 2, v5);
}

id sub_1CF264B10(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  objc_msgSend_dataUsingEncoding_(a1, a2, 4, a4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_sha1(v4, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_asHexString(v8, v9, v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

id sub_1CF264B64(void *a1)
{
  id v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  CC_LONG v9;
  const char *v10;
  unsigned __int8 md[20];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v1 = objc_retainAutorelease(a1);
  v5 = (const void *)objc_msgSend_bytes(v1, v2, v3, v4);
  v9 = objc_msgSend_length(v1, v6, v7, v8);
  CC_SHA1(v5, v9, md);
  objc_msgSend_dataWithBytes_length_(MEMORY[0x1E0C99D50], v10, (uint64_t)md, 20);
  return (id)objc_claimAutoreleasedReturnValue();
}

id sub_1CF264BF0(void *a1)
{
  id v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  CC_LONG v9;
  const char *v10;
  unsigned __int8 md[32];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v1 = objc_retainAutorelease(a1);
  v5 = (const void *)objc_msgSend_bytes(v1, v2, v3, v4);
  v9 = objc_msgSend_length(v1, v6, v7, v8);
  CC_SHA256(v5, v9, md);
  objc_msgSend_dataWithBytes_length_(MEMORY[0x1E0C99D50], v10, (uint64_t)md, 32);
  return (id)objc_claimAutoreleasedReturnValue();
}

id sub_1CF264C7C(void *a1)
{
  id v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  CC_LONG v6;
  const char *v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  void *v11;
  uint64_t i;
  void *v13;
  unsigned __int8 md[32];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v1 = objc_retainAutorelease(a1);
  v5 = (const char *)objc_msgSend_UTF8String(v1, v2, v3, v4);
  v6 = strlen(v5);
  CC_SHA256(v5, v6, md);
  objc_msgSend_stringWithCapacity_(MEMORY[0x1E0CB37A0], v7, 64, v8);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  for (i = 0; i != 32; ++i)
    objc_msgSend_appendFormat_(v11, v9, (uint64_t)CFSTR("%02x"), v10, md[i]);
  objc_msgSend_stringWithString_(MEMORY[0x1E0CB3940], v9, (uint64_t)v11, v10);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  return v13;
}

__CFString *sub_1CF264D58(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  const char *v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  void *v16;
  unsigned int v17;
  __CFString *v18;

  v5 = objc_msgSend_length(a1, a2, a3, a4);
  if (v5)
  {
    v6 = v5;
    v7 = objc_retainAutorelease(a1);
    v11 = (unsigned __int8 *)objc_msgSend_bytes(v7, v8, v9, v10);
    objc_msgSend_stringWithCapacity_(MEMORY[0x1E0CB37A0], v12, 2 * v6, v13);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    do
    {
      v17 = *v11++;
      objc_msgSend_appendFormat_(v16, v14, (uint64_t)CFSTR("%02x"), v15, v17);
      --v6;
    }
    while (v6);
    objc_msgSend_stringWithString_(MEMORY[0x1E0CB3940], v14, (uint64_t)v16, v15);
    v18 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v18 = &stru_1E8C4E328;
  }
  return v18;
}

id sub_1CF265754(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  void *v3;

  a3();
  v3 = (void *)sub_1CF372140();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t _s12APFoundation10SystemInfoC11deviceModelSSvgZ_0()
{
  size_t v0;
  uint64_t v1;
  uint64_t v2;
  size_t v4[2];

  v4[1] = *MEMORY[0x1E0C80C00];
  v4[0] = 0;
  sysctlbyname("hw.machine", 0, v4, 0, 0);
  v0 = v4[0];
  if ((v4[0] & 0x8000000000000000) != 0)
    __break(1u);
  if (v4[0])
  {
    v1 = sub_1CF37229C();
    *(_QWORD *)(v1 + 16) = v0;
    bzero((void *)(v1 + 32), v0);
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9D8];
  }
  sysctlbyname("hw.machine", (void *)(v1 + 32), v4, 0, 0);
  v2 = sub_1CF265878(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1CF265878(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    v2 = result;
    v3 = *(unsigned __int8 *)(result + 32);
    result += 32;
    if (!v3)
      return sub_1CF372194();
    v4 = 0;
    v5 = v1 - 1;
    v6 = v2 + 33;
    while (v5 != v4)
    {
      if (!*(unsigned __int8 *)(v6 + v4++))
        return sub_1CF372194();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t _s12APFoundation10SystemInfoC9osVersionSSvgZ_0()
{
  id v0;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  objc_msgSend(v0, sel_operatingSystemVersion);

  v2 = sub_1CF37247C();
  sub_1CF3721C4();
  sub_1CF37247C();
  sub_1CF3721C4();
  swift_bridgeObjectRelease();
  sub_1CF3721C4();
  sub_1CF37247C();
  sub_1CF3721C4();
  swift_bridgeObjectRelease();
  return v2;
}

void _s12APFoundation10SystemInfoC17systemDescriptionSSvgZ_0()
{
  id v0;
  void *v1;

  _s12APFoundation10SystemInfoC9osVersionSSvgZ_0();
  sub_1CF3721C4();
  swift_bridgeObjectRelease();
  sub_1CF3721C4();
  v0 = objc_msgSend((id)objc_opt_self(), sel_kBuildVersionString);
  v1 = (void *)MGGetStringAnswer();

  if (v1)
  {
    sub_1CF37214C();

    sub_1CF3721C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1CF265B28(void *a1)
{
  id v1;
  const char *v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v1 = a1;
  v3 = objc_msgSend_countByEnumeratingWithState_objects_count_(v1, v2, (uint64_t)&v12, (uint64_t)v16, 16);
  if (v3)
  {
    v6 = v3;
    v7 = *(_QWORD *)v13;
    while (2)
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v13 != v7)
          objc_enumerationMutation(v1);
        objc_msgSend_objectForKey_(v1, v4, *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * i), v5, (_QWORD)v12);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0
          || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
          || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
          || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
          || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
        {

          v10 = 1;
          goto LABEL_16;
        }

      }
      v6 = objc_msgSend_countByEnumeratingWithState_objects_count_(v1, v4, (uint64_t)&v12, (uint64_t)v16, 16);
      v10 = 0;
      if (v6)
        continue;
      break;
    }
  }
  else
  {
    v10 = 0;
  }
LABEL_16:

  return v10;
}

id sub_1CF267934(void *a1)
{
  const char *v2;
  uint64_t v3;
  uint64_t v4;

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    objc_msgSend_description(a1, v2, v3, v4);
  else
    objc_msgSend_lastPathComponent(a1, v2, v3, v4);
  return (id)objc_claimAutoreleasedReturnValue();
}

__CFString *sub_1CF268614(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  id v5;
  const char *v6;
  __CFString *v7;

  objc_msgSend_jsonDataWithOptions_(a1, a2, a3, a4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0CB3940]);
    v7 = (__CFString *)objc_msgSend_initWithData_encoding_(v5, v6, (uint64_t)v4, 4);
  }
  else
  {
    v7 = CFSTR("{}");
  }

  return v7;
}

id sub_1CF26866C(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  void *v10;
  id v11;
  NSObject *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v18;
  uint8_t buf[4];
  void *v20;
  __int16 v21;
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v5 = (void *)MEMORY[0x1D17CBC78]();
  objc_msgSend_jsonRepresentationWithOptions_(a1, v6, a3, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = 0;
  objc_msgSend_dataWithJSONObject_options_error_(MEMORY[0x1E0CB36D8], v9, (uint64_t)v8, a3 & 0xF, &v18);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = v18;
  if (v11)
  {
    APLogForCategory(0x19uLL);
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend_localizedDescription(v11, v13, v14, v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138478083;
      v20 = v16;
      v21 = 2113;
      v22 = v8;
      _os_log_impl(&dword_1CF251000, v12, OS_LOG_TYPE_ERROR, "Error serializing dictionary into JSON (%{private}@):\n%{private}@", buf, 0x16u);

    }
    v10 = 0;
  }

  objc_autoreleasePoolPop(v5);
  return v10;
}

uint64_t sub_1CF2688BC(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_jsonStringWithOptions_(a1, a2, 1, a4);
}

void sub_1CF268F04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CF269724(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CF269C10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1CF269E90(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  objc_msgSend_componentsSeparatedByString_(a1, a2, (uint64_t)CFSTR("."), a4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_lastObject(v4, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

void sub_1CF26A26C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CF26A36C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1CF26A5D0(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  const char *v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  id v20;

  if (objc_msgSend_hasPrefix_(a1, a2, (uint64_t)CFSTR("set"), a4))
  {
    v8 = objc_msgSend_length(a1, v5, v6, v7);
    v10 = v8 - 5;
    if (v8 < 5)
    {
      v20 = 0;
    }
    else
    {
      objc_msgSend_substringWithRange_(a1, v9, 3, 1);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_lowercaseString(v11, v12, v13, v14);
      v15 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend_substringWithRange_(a1, v16, 4, v10);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_stringByAppendingString_(v15, v18, (uint64_t)v17, v19);
      v20 = (id)objc_claimAutoreleasedReturnValue();

    }
  }
  else
  {
    v20 = a1;
  }
  return v20;
}

id sub_1CF26A688(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v6;
  id v7;
  const char *v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t i;
  void *v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  __CFString *v22;
  __CFString *v23;
  NSObject *v24;
  const char *v25;
  uint64_t v26;
  NSObject *v27;
  const char *v28;
  objc_class *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  void *v38;
  __int128 v40;
  id v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint8_t buf[4];
  void *v47;
  __int16 v48;
  void *v49;
  _BYTE v50[128];
  uint64_t v51;

  v4 = a3;
  v51 = *MEMORY[0x1E0C80C00];
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], a2, a3, a4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v42 = 0u;
  v43 = 0u;
  v44 = 0u;
  v45 = 0u;
  v7 = a1;
  v9 = objc_msgSend_countByEnumeratingWithState_objects_count_(v7, v8, (uint64_t)&v42, (uint64_t)v50, 16);
  if (v9)
  {
    v13 = v9;
    v14 = *(_QWORD *)v43;
    v15 = 0x1E0CB3000uLL;
    *(_QWORD *)&v12 = 138478083;
    v40 = v12;
    v41 = v7;
    do
    {
      for (i = 0; i != v13; ++i)
      {
        if (*(_QWORD *)v43 != v14)
          objc_enumerationMutation(v7);
        v17 = *(void **)(*((_QWORD *)&v42 + 1) + 8 * i);
        objc_msgSend_objectForKey_(v7, v10, (uint64_t)v17, v11, v40);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          objc_msgSend_stringValue(v17, v19, v20, v21);
          v22 = (__CFString *)objc_claimAutoreleasedReturnValue();
LABEL_10:
          v23 = v22;
          goto LABEL_14;
        }
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          v22 = v17;
          goto LABEL_10;
        }
        APLogForCategory(0x19uLL);
        v24 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_1CF251000, v24, OS_LOG_TYPE_ERROR, "Warning: Unable to recognize the key", buf, 2u);
        }

        v23 = CFSTR("UNKNOWN_KEY");
LABEL_14:
        if ((objc_opt_respondsToSelector() & 1) != 0)
        {
          objc_msgSend_jsonRepresentationWithOptions_(v18, v25, v4, v26);
          v27 = objc_claimAutoreleasedReturnValue();
          objc_msgSend_setObject_forKey_(v6, v28, (uint64_t)v27, (uint64_t)v23);
        }
        else
        {
          APLogForCategory(0x19uLL);
          v27 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
          {
            v29 = (objc_class *)objc_opt_class();
            NSStringFromClass(v29);
            v30 = v13;
            v31 = v15;
            v32 = v14;
            v33 = v4;
            v34 = v6;
            v35 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = v40;
            v47 = v35;
            v48 = 2113;
            v49 = v18;
            _os_log_impl(&dword_1CF251000, v27, OS_LOG_TYPE_ERROR, "ERROR: Unable to serialize the object into JSON. Please file a radar against PEP Advertising | 1.0.\n%{private}@ (%{private}@)", buf, 0x16u);

            v6 = v34;
            v4 = v33;
            v14 = v32;
            v15 = v31;
            v13 = v30;
            v7 = v41;
          }
        }

      }
      v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(v7, v10, (uint64_t)&v42, (uint64_t)v50, 16);
    }
    while (v13);
  }

  objc_msgSend_dictionaryWithDictionary_(MEMORY[0x1E0C99D80], v36, (uint64_t)v6, v37);
  v38 = (void *)objc_claimAutoreleasedReturnValue();

  return v38;
}

id APLogForCategory(unint64_t a1)
{
  if (a1 >= 0x33)
    sub_1CF371D3C();
  if (qword_1ED2BCB78 != -1)
    dispatch_once(&qword_1ED2BCB78, &unk_1E8C47FB0);
  return (id)qword_1ED2BC9D8[a1];
}

__CFString *sub_1CF26AA80(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  double v5;
  NSObject *v7;
  id v8;
  int v9;
  void *v10;
  __int16 v11;
  id v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  objc_msgSend_doubleValue(a1, a2, a3, a4);
  if (fabs(v5) != INFINITY)
    return (__CFString *)a1;
  APLogForCategory(0x19uLL);
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
  {
    v9 = 138543619;
    v10 = a1;
    v11 = 2113;
    v12 = (id)objc_opt_class();
    v8 = v12;
    _os_log_impl(&dword_1CF251000, v7, OS_LOG_TYPE_ERROR, "Unable to serialize the following number into JSON. Please file a radar against PEP Advertising | 1.0: %{public}@ (%{private}@).", (uint8_t *)&v9, 0x16u);

  }
  return CFSTR("∞");
}

id sub_1CF26AFDC(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  const char *v14;
  uint64_t v15;
  NSObject *v16;
  const char *v17;
  uint64_t v18;
  objc_class *v19;
  void *v20;
  const char *v21;
  const char *v22;
  uint64_t v23;
  void *v24;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint8_t buf[4];
  void *v31;
  __int16 v32;
  void *v33;
  _BYTE v34[128];
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  objc_msgSend_array(MEMORY[0x1E0C99DE8], a2, a3, a4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v7 = a1;
  v9 = objc_msgSend_countByEnumeratingWithState_objects_count_(v7, v8, (uint64_t)&v26, (uint64_t)v34, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v27;
    do
    {
      for (i = 0; i != v10; ++i)
      {
        if (*(_QWORD *)v27 != v11)
          objc_enumerationMutation(v7);
        v13 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * i);
        if ((objc_opt_respondsToSelector() & 1) != 0)
        {
          objc_msgSend_jsonRepresentationWithOptions_(v13, v14, a3, v15);
          v16 = objc_claimAutoreleasedReturnValue();
          objc_msgSend_addObject_(v6, v17, (uint64_t)v16, v18);
        }
        else
        {
          APLogForCategory(0x19uLL);
          v16 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
          {
            v19 = (objc_class *)objc_opt_class();
            NSStringFromClass(v19);
            v20 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138478083;
            v31 = v20;
            v32 = 2113;
            v33 = v13;
            _os_log_impl(&dword_1CF251000, v16, OS_LOG_TYPE_ERROR, "ERROR: Unable to serialize the object into JSON. Please file a radar against PEP Advertising | 1.0.\n%{private}@ (%{private}@)", buf, 0x16u);

          }
        }

      }
      v10 = objc_msgSend_countByEnumeratingWithState_objects_count_(v7, v21, (uint64_t)&v26, (uint64_t)v34, 16);
    }
    while (v10);
  }

  objc_msgSend_arrayWithArray_(MEMORY[0x1E0C99D20], v22, (uint64_t)v6, v23);
  v24 = (void *)objc_claimAutoreleasedReturnValue();

  return v24;
}

id sub_1CF26B7BC(void *a1)
{
  id v2;
  const char *v3;
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  void *v13;

  v2 = objc_alloc(MEMORY[0x1E0CB3940]);
  v4 = (void *)objc_msgSend_initWithData_encoding_(v2, v3, (uint64_t)a1, 4);
  v8 = v4;
  if (v4)
  {
    v9 = v4;
  }
  else
  {
    v10 = objc_msgSend_length(a1, v5, v6, v7);
    objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v11, (uint64_t)CFSTR("Binary data, %ld bytes, ..."), v12, v10);
    v9 = (id)objc_claimAutoreleasedReturnValue();
  }
  v13 = v9;

  return v13;
}

void sub_1CF26BBB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CF26C1B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CF26C38C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CF26C420(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CF26CA00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CF26CBD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CF26D148(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1CF26DA60()
{
  objc_opt_self();
  if (qword_1ED2BC710 != -1)
    dispatch_once(&qword_1ED2BC710, &unk_1E8C47F30);
  return (id)qword_1ED2BC708;
}

id sub_1CF26DCB8()
{
  if (qword_1ED2BC798 != -1)
    dispatch_once(&qword_1ED2BC798, &unk_1E8C48B50);
  return (id)qword_1ED2BC790;
}

uint64_t sub_1CF26DD68(uint64_t a1)
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_1CF27BF9C;
  block[3] = &unk_1E8C48590;
  block[4] = a1;
  if (qword_1ED2BC940 != -1)
    dispatch_once(&qword_1ED2BC940, block);
  return byte_1ED2BC638;
}

uint64_t dispatch thunk of DatabaseManager.executeQuery(_:withParameters:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

BOOL isExternalPurpose(uint64_t a1)
{
  return a1 >= 0;
}

unint64_t isInternalPurpose(unint64_t a1)
{
  return a1 >> 63;
}

id APPerfLogForCategory(unint64_t a1)
{
  if (a1 >= 0x33)
    sub_1CF371D64();
  if (qword_1ED2BC788 != -1)
    dispatch_once(&qword_1ED2BC788, &unk_1E8C483A8);
  return (id)qword_1ED2BC7A8[a1];
}

void sub_1CF26DEA0(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1CF26DEE8()
{
  unsigned int v0;
  uint64_t v1;
  _QWORD *v2;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v1 + 8 * ((963 * (*v2 != 0)) ^ v0)) - 8))(0);
}

uint64_t sub_1CF26DF10()
{
  _QWORD *v0;
  uint64_t result;

  sub_1CF370D34();
  result = 0;
  *v0 = 0;
  return result;
}

void sub_1CF26DF2C()
{
  APUnfairLock *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = [APUnfairLock alloc];
  v3 = objc_msgSend_initWithOptions_(v0, v1, 1, v2);
  v4 = (void *)qword_1ED2BC9C0;
  qword_1ED2BC9C0 = v3;

}

void sub_1CF26DF5C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  id v15;

  objc_msgSend_localeWithLocaleIdentifier_(MEMORY[0x1E0C99DC8], a2, (uint64_t)CFSTR("en_US_POSIX"), a4);
  v15 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_timeZoneWithAbbreviation_(MEMORY[0x1E0C99E80], v4, (uint64_t)CFSTR("UTC"), v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_alloc_init(MEMORY[0x1E0CB3578]);
  v8 = (void *)qword_1ED2BC740;
  qword_1ED2BC740 = (uint64_t)v7;

  objc_msgSend_setDateFormat_((void *)qword_1ED2BC740, v9, (uint64_t)CFSTR("yyyy-MM-dd'T'HH:mm':00Z'"), v10);
  objc_msgSend_setLocale_((void *)qword_1ED2BC740, v11, (uint64_t)v15, v12);
  objc_msgSend_setTimeZone_((void *)qword_1ED2BC740, v13, (uint64_t)v6, v14);

}

void sub_1CF26E000(uint64_t a1)
{
  char *v2;
  uint64_t v3;
  char *v4;

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  v2 = (char *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    v4 = v2;
    objc_msgSend_addObject_(*(void **)(a1 + 32), v2, (uint64_t)v2, v3);
    v2 = v4;
  }

}

uint64_t sub_1CF26E050(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1CF26E05C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v5;

  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], a2, a3, a4);
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = (void *)qword_1ED2BC9A0;
  qword_1ED2BC9A0 = v4;

}

uint64_t sub_1CF26E088(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  objc_msgSend_cStringUsingEncoding_(CFSTR("com.apple.ap.AdPlatformsCommon"), a2, 30, a4);
  result = os_variant_has_internal_content();
  byte_1ED2BCB80 = result;
  return result;
}

void sub_1CF26E0B4()
{
  APMetricDaemonDelivery *v0;
  void *v1;

  v0 = objc_alloc_init(APMetricDaemonDelivery);
  v1 = (void *)qword_1ED2BC950;
  qword_1ED2BC950 = (uint64_t)v0;

}

void sub_1CF26E0DC()
{
  APLocationManager *v0;
  void *v1;

  v0 = objc_alloc_init(APLocationManager);
  v1 = (void *)qword_1ED2BC968;
  qword_1ED2BC968 = (uint64_t)v0;

}

id sub_1CF26E104(uint64_t a1, void *a2, uint64_t a3)
{
  id *v4;
  id v5;
  id WeakRetained;
  const char *v7;
  void *v8;

  v4 = (id *)(a1 + 32);
  v5 = a2;
  WeakRetained = objc_loadWeakRetained(v4);
  objc_msgSend__createSessionForRequester_httpMaximumConnectionsPerHost_(WeakRetained, v7, (uint64_t)v5, a3);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

void sub_1CF26E160()
{
  APUnfairLock *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = [APUnfairLock alloc];
  v3 = objc_msgSend_initWithOptions_(v0, v1, 1, v2);
  v4 = (void *)qword_1ED2BC9A8;
  qword_1ED2BC9A8 = v3;

}

id sub_1CF26E190(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[4];

  v4 = *v1;
  v3 = v1[1];
  sub_1CF263E94();
  v6[3] = a1;
  v6[0] = v4;
  v6[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1CF263ED0(0, 0xE000000000000000, 3, v6);
}

id sub_1CF26E210(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  const char *v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  void *v25;
  id v26;
  id v27;

  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99DE8];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_arrayWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = MEMORY[0x1E0C809B0];
  v23 = 3221225472;
  v24 = sub_1CF26E000;
  v25 = &unk_1E8C483F8;
  v26 = v12;
  v27 = v4;
  v13 = v12;
  v14 = v4;
  objc_msgSend_enumerateObjectsUsingBlock_(a1, v15, (uint64_t)&v22, v16);
  v20 = (void *)objc_msgSend_copy(v13, v17, v18, v19, v22, v23, v24, v25);

  return v20;
}

id sub_1CF26E2D8(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  const char *v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[4];
  id v14;

  v4 = a3;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = sub_1CF26E050;
  v13[3] = &unk_1E8C482F8;
  v14 = v4;
  v5 = v4;
  objc_msgSend_indexesOfObjectsPassingTest_(a1, v6, (uint64_t)v13, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectsAtIndexes_(a1, v9, (uint64_t)v8, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

id sub_1CF26F308()
{
  if (qword_1ED2BC640 != -1)
    dispatch_once(&qword_1ED2BC640, &unk_1E8C47FD0);
  return (id)qword_1ED2BC740;
}

void sub_1CF26FFD4(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  int v4;
  id v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  APLogForCategory(0x2AuLL);
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    v4 = 138543362;
    v5 = v2;
    _os_log_impl(&dword_1CF251000, v3, OS_LOG_TYPE_ERROR, "Received error for rotate. %{public}@", (uint8_t *)&v4, 0xCu);
  }

}

void sub_1CF270274()
{
  APUnfairLock *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = [APUnfairLock alloc];
  v3 = objc_msgSend_initWithOptions_(v0, v1, 1, v2);
  v4 = (void *)qword_1ED2BC708;
  qword_1ED2BC708 = v3;

}

void sub_1CF270360(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CF270D44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1CF270D74(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1CF270D84(uint64_t a1)
{

}

void sub_1CF270D8C(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  id v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  APStorageManager *v41;
  const char *v42;
  uint64_t v43;
  NSObject *v44;
  const char *v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  int v49;
  id v50;
  uint64_t v51;
  id v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  const char *v57;
  uint64_t v58;
  NSObject *v59;
  NSObject *v60;
  uint64_t v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint8_t buf[4];
  NSObject *v68;
  __int16 v69;
  uint64_t v70;
  __int16 v71;
  id v72;
  uint64_t v73;

  v73 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (objc_msgSend_valid(v3, v4, v5, v6))
  {
    objc_msgSend_responseBody(v3, v7, v8, v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend_responseBody(v3, v11, v12, v13);
    v14 = objc_claimAutoreleasedReturnValue();
    objc_msgSend_dictionary(MEMORY[0x1E0C99D80], v15, v16, v17);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v14)
      goto LABEL_13;
    objc_msgSend_lock(*(void **)(a1 + 32), v18, v19, v20);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_lock(v22, v23, v24, v25);
    if (v10)
    {
      v66 = 0;
      objc_msgSend_JSONObjectWithData_options_error_(MEMORY[0x1E0CB36D8], v26, (uint64_t)v14, 0, &v66);
      v27 = objc_claimAutoreleasedReturnValue();
      v28 = v66;

      v21 = (void *)v27;
    }
    else
    {
      v28 = 0;
    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      objc_msgSend_setServerData_(*(void **)(a1 + 32), v37, (uint64_t)v21, v39);
    objc_msgSend_unlock(v22, v37, v38, v39);

    if (v28)
    {
      APLogForCategory(0x29uLL);
      v40 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138543618;
        v68 = v14;
        v69 = 2114;
        v70 = (uint64_t)v28;
        _os_log_impl(&dword_1CF251000, v40, OS_LOG_TYPE_ERROR, "Received error deserializing response body: %{public}@. Error: %{public}@", buf, 0x16u);
      }
    }
    else
    {
LABEL_13:
      v41 = [APStorageManager alloc];
      v44 = objc_msgSend_initWithPathPrefix_(v41, v42, (uint64_t)CFSTR("s/s"), v43);
      v40 = v44;
      v46 = *(_QWORD *)(a1 + 40);
      if (v10)
      {
        v65 = 0;
        objc_msgSend_storeObject_atPath_error_(v44, v45, (uint64_t)v21, v46, &v65);
        v28 = v65;
      }
      else
      {
        v64 = 0;
        v49 = objc_msgSend_fileExistsAtPath_error_(v44, v45, v46, (uint64_t)&v64);
        v50 = v64;
        v28 = v50;
        if (v49)
        {
          v51 = *(_QWORD *)(a1 + 40);
          v63 = v50;
          objc_msgSend_removeObjectAtPath_error_(v40, v47, v51, (uint64_t)&v63);
          v52 = v63;

          v28 = v52;
        }
      }
      objc_msgSend_setDidFetchFromServer_(*(void **)(a1 + 32), v47, 1, v48);
      if (v28)
      {
        APLogForCategory(0x29uLL);
        v56 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138543618;
          v68 = v14;
          v69 = 2114;
          v70 = (uint64_t)v28;
          _os_log_impl(&dword_1CF251000, v56, OS_LOG_TYPE_ERROR, "Received error deserializing response body: %{public}@. Error: %{public}@", buf, 0x16u);
        }
      }
      else
      {
        objc_msgSend_now(MEMORY[0x1E0C99D68], v53, v54, v55);
        v56 = objc_claimAutoreleasedReturnValue();
        objc_msgSend_setLastUpdate_(*(void **)(a1 + 32), v57, (uint64_t)v56, v58);
      }

    }
    APLogForCategory(0x29uLL);
    v59 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v59, OS_LOG_TYPE_INFO))
    {
      v60 = *(NSObject **)(a1 + 48);
      *(_DWORD *)buf = 138478083;
      v68 = v60;
      v69 = 2114;
      v70 = (uint64_t)v21;
      _os_log_impl(&dword_1CF251000, v59, OS_LOG_TYPE_INFO, "Received response from '%{private}@'. Data: %{public}@", buf, 0x16u);
    }

    goto LABEL_25;
  }
  APLogForCategory(0x29uLL);
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
  {
    v32 = *(NSObject **)(a1 + 48);
    v33 = objc_msgSend_responseStatusCode(v3, v29, v30, v31);
    objc_msgSend_responseError(v3, v34, v35, v36);
    v28 = (id)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138478339;
    v68 = v32;
    v69 = 2048;
    v70 = v33;
    v71 = 2114;
    v72 = v28;
    _os_log_impl(&dword_1CF251000, v14, OS_LOG_TYPE_ERROR, "Received error requesting from: %{private}@. Status Code: %ld Error: %{public}@", buf, 0x20u);
LABEL_25:

  }
  v61 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v62 = *(void **)(v61 + 40);
  *(_QWORD *)(v61 + 40) = 0;

}

uLong sub_1CF27222C(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  const Bytef *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uInt v12;
  uLong v13;

  objc_msgSend_dataUsingEncoding_(a1, a2, 4, a4);
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v8 = (const Bytef *)objc_msgSend_bytes(v4, v5, v6, v7);
  v12 = objc_msgSend_length(v4, v9, v10, v11);
  v13 = crc32(0, v8, v12);

  return v13;
}

uint64_t sub_1CF272A54(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4;
  id v5;
  const char *v6;
  id v7;
  const char *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  id v14;

  v14 = 0;
  v4 = *MEMORY[0x1E0C99A90];
  v5 = a3;
  objc_msgSend_getResourceValue_forKey_error_(a2, v6, (uint64_t)&v14, v4, 0);
  v13 = 0;
  v7 = v14;
  objc_msgSend_getResourceValue_forKey_error_(v5, v8, (uint64_t)&v13, v4, 0);

  v11 = objc_msgSend_compare_(v7, v9, v13, v10);
  return v11;
}

void sub_1CF272CC0()
{
  APUnfairLock *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = [APUnfairLock alloc];
  v3 = objc_msgSend_initWithOptions_(v0, v1, 1, v2);
  v4 = (void *)qword_1ED2BC6F8;
  qword_1ED2BC6F8 = v3;

}

void sub_1CF273534(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  objc_msgSend_mapTableWithKeyOptions_valueOptions_(MEMORY[0x1E0CB3748], a2, 0, 5);
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = (void *)qword_1ED2BC700;
  qword_1ED2BC700 = v2;

}

void sub_1CF2737C8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  const char *v5;
  uint64_t v6;
  NSObject *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  int v14;
  uint64_t v15;
  __int16 v16;
  const char *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend_invalidateSessionAndCancelTasks_(v4, v5, *(unsigned __int8 *)(a1 + 32), v6);
  APLogForCategory(0x1EuLL);
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    objc_msgSend_name(v4, v8, v9, v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)v11;
    v13 = " and all pending tasks are canceled.";
    if (!*(_BYTE *)(a1 + 32))
      v13 = ".";
    v14 = 138543618;
    v15 = v11;
    v16 = 2082;
    v17 = v13;
    _os_log_impl(&dword_1CF251000, v7, OS_LOG_TYPE_INFO, "Service %{public}@ is invalidated%{public}s", (uint8_t *)&v14, 0x16u);

  }
}

void sub_1CF273F84(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint8_t buf[4];
  uint64_t v22;
  _BYTE v23[128];
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v5 = objc_msgSend_countByEnumeratingWithState_objects_count_(v3, v4, (uint64_t)&v17, (uint64_t)v23, 16);
  if (v5)
  {
    v9 = v5;
    v10 = *(_QWORD *)v18;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v18 != v10)
          objc_enumerationMutation(v3);
        objc_msgSend_cancel(*(void **)(*((_QWORD *)&v17 + 1) + 8 * v11++), v6, v7, v8);
      }
      while (v9 != v11);
      v9 = objc_msgSend_countByEnumeratingWithState_objects_count_(v3, v6, (uint64_t)&v17, (uint64_t)v23, 16);
    }
    while (v9);
  }
  APLogForCategory(0x19uLL);
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    v16 = objc_msgSend_count(v3, v13, v14, v15);
    *(_DWORD *)buf = 134217984;
    v22 = v16;
    _os_log_impl(&dword_1CF251000, v12, OS_LOG_TYPE_INFO, "%lu tasks are canceled.", buf, 0xCu);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1CF274260(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  void *v20;
  void (**v21)(_QWORD, _QWORD);
  APHTTPResponse *v22;
  const char *v23;
  void *v24;
  void *v25;
  id v26;

  if (*(_QWORD *)(a1 + 32))
  {
    v5 = objc_alloc(MEMORY[0x1E0CB3680]);
    objc_msgSend_URL(*(void **)(a1 + 40), v6, v7, v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend_integerValue(*(void **)(a1 + 32), v10, v11, v12);
    v26 = (id)objc_msgSend_initWithURL_statusCode_HTTPVersion_headerFields_(v5, v14, (uint64_t)v9, v13, 0, 0);

  }
  else
  {
    v26 = 0;
  }
  v15 = *(void **)(a1 + 48);
  if (v15)
  {
    v16 = (void *)MEMORY[0x1E0CB35C8];
    v17 = *MEMORY[0x1E0CB32E8];
    v18 = objc_msgSend_integerValue(v15, a2, a3, a4);
    objc_msgSend_errorWithDomain_code_userInfo_(v16, v19, v17, v18, 0);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v20 = 0;
  }
  objc_msgSend_completionHandler(*(void **)(a1 + 40), a2, a3, a4);
  v21 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
  v22 = [APHTTPResponse alloc];
  v24 = (void *)objc_msgSend__initWithResponseData_URLResponse_error_(v22, v23, 0, (uint64_t)v26, v20);
  if (v21)
  {
    v25 = (void *)MEMORY[0x1D17CBC78]();
    ((void (**)(_QWORD, void *))v21)[2](v21, v24);
    objc_autoreleasePoolPop(v25);
  }

}

void sub_1CF274398()
{
  os_log_t v0;
  void *v1;
  os_log_t v2;
  void *v3;
  os_log_t v4;
  void *v5;
  os_log_t v6;
  void *v7;
  os_log_t v8;
  void *v9;
  uint8_t v10[16];

  if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1CF251000, MEMORY[0x1E0C81028], OS_LOG_TYPE_DEFAULT, "Initializing performance log categories.", v10, 2u);
  }
  v0 = os_log_create("com.apple.adplatforms.perf", "Attribution");
  v1 = (void *)qword_1ED2BC7C8;
  qword_1ED2BC7C8 = (uint64_t)v0;

  v2 = os_log_create("com.apple.adplatforms.perf", "MediaService");
  v3 = (void *)qword_1ED2BC880;
  qword_1ED2BC880 = (uint64_t)v2;

  v4 = os_log_create("com.apple.adplatforms.perf", "MescalSigning");
  v5 = (void *)qword_1ED2BC888;
  qword_1ED2BC888 = (uint64_t)v4;

  v6 = os_log_create("com.apple.adplatforms.perf", "Signing");
  v7 = (void *)qword_1ED2BC8F8;
  qword_1ED2BC8F8 = (uint64_t)v6;

  v8 = os_log_create("com.apple.adplatforms.perf", "Accumulator");
  v9 = (void *)qword_1ED2BC7A8;
  qword_1ED2BC7A8 = (uint64_t)v8;

}

void sub_1CF276478(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1CF276644(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1CF276654(uint64_t a1)
{

}

id sub_1CF276F50(uint64_t a1)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  id v5;

  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend__validatePayload_(*(void **)(a1 + 40), v3, (uint64_t)v2, v4))
    v5 = v2;
  else
    v5 = 0;

  return v5;
}

void sub_1CF277610(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  char *v5;
  uint64_t v6;
  char *v7;

  objc_msgSend__JSONObjectWithObject_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
  v5 = (char *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    v7 = v5;
    objc_msgSend_addObject_(*(void **)(a1 + 40), v5, (uint64_t)v5, v6);
    v5 = v7;
  }

}

void sub_1CF277660(uint64_t a1, void *a2, uint64_t a3)
{
  const char *v5;
  uint64_t v6;
  const char *v7;
  void *v8;
  id v9;

  v9 = a2;
  objc_msgSend__JSONObjectWithObject_(*(void **)(a1 + 32), v5, a3, v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (v8)
    objc_msgSend_setObject_forKey_(*(void **)(a1 + 40), v7, (uint64_t)v8, (uint64_t)v9);

}

void sub_1CF2776C0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  char *v5;
  uint64_t v6;
  char *v7;

  objc_msgSend__JSONObjectWithObject_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
  v5 = (char *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    v7 = v5;
    objc_msgSend_addObject_(*(void **)(a1 + 40), v5, (uint64_t)v5, v6);
    v5 = v7;
  }

}

void sub_1CF277710(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  char *v5;
  uint64_t v6;
  char *v7;

  objc_msgSend__JSONObjectWithObject_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
  v5 = (char *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    v7 = v5;
    objc_msgSend_addObject_(*(void **)(a1 + 40), v5, (uint64_t)v5, v6);
    v5 = v7;
  }

}

uint64_t sub_1CF277D80(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_setupWithCompletion_(*(void **)(a1 + 32), a2, *(_QWORD *)(a1 + 40), a4);
}

void sub_1CF27813C(uint64_t a1)
{
  void *v2;
  id v3;
  const char *v4;
  uint64_t v5;
  __int128 v6;
  _QWORD v7[4];
  id v8;
  __int128 v9;

  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = sub_1CF2781CC;
  v7[3] = &unk_1E8C484F0;
  v2 = *(void **)(a1 + 32);
  v8 = *(id *)(a1 + 40);
  v6 = *(_OWORD *)(a1 + 48);
  v3 = (id)v6;
  v9 = v6;
  objc_msgSend_setupWithCompletion_(v2, v4, (uint64_t)v7, v5);

}

uint64_t sub_1CF2781CC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  objc_msgSend_lock(*(void **)(a1 + 32), a2, a3, a4);
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  if (*(_BYTE *)(v8 + 24))
    return objc_msgSend_unlock(*(void **)(a1 + 32), v5, v6, v7);
  *(_BYTE *)(v8 + 24) = 1;
  objc_msgSend_unlock(*(void **)(a1 + 32), v5, v6, v7);
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t sub_1CF278234(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  objc_msgSend_lock(*(void **)(a1 + 32), a2, a3, a4);
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  if (*(_BYTE *)(v8 + 24))
    return objc_msgSend_unlock(*(void **)(a1 + 32), v5, v6, v7);
  *(_BYTE *)(v8 + 24) = 1;
  objc_msgSend_unlock(*(void **)(a1 + 32), v5, v6, v7);
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t sub_1CF278AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel__handleCompletedSigningAuthority_, *(_QWORD *)(a1 + 40), a4);
}

void sub_1CF279198(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (**v9)(id, uint64_t);

  objc_msgSend_setupCompletion(*(void **)(a1 + 32), a2, a3, a4);
  v9 = (void (**)(id, uint64_t))objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend_state(*(void **)(a1 + 32), v5, v6, v7);
  v9[2](v9, v8);

}

void sub_1CF279DFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1CF279E48(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1CF279E58(uint64_t a1)
{

}

void sub_1CF279E60(uint64_t a1, void *a2)
{
  id v4;
  NSObject *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  CFAbsoluteTime v13;
  double Current;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  int v19;
  void *v20;
  __int16 v21;
  uint64_t v22;
  __int16 v23;
  CFAbsoluteTime v24;
  __int16 v25;
  double v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v4 = a2;
  if (v4)
  {
    APLogForCategory(0x2AuLL);
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      objc_msgSend_localizedDescription(v4, v6, v7, v8);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = 138543362;
      v20 = v9;
      _os_log_impl(&dword_1CF251000, v5, OS_LOG_TYPE_INFO, "Encountered error when attempting to perform XPC rotation to promotedcontentd %{public}@", (uint8_t *)&v19, 0xCu);

    }
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), a2);
  }
  APLogForCategory(0x2AuLL);
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    v11 = *(void **)(a1 + 32);
    v12 = *(_QWORD *)(a1 + 40);
    v13 = CFAbsoluteTimeGetCurrent() - *(double *)(a1 + 64);
    Current = CFAbsoluteTimeGetCurrent();
    objc_msgSend_refillStartTime(*(void **)(a1 + 32), v15, v16, v17);
    v19 = 134218752;
    v20 = v11;
    v21 = 2048;
    v22 = v12;
    v23 = 2048;
    v24 = v13;
    v25 = 2048;
    v26 = Current - v18;
    _os_log_impl(&dword_1CF251000, v10, OS_LOG_TYPE_INFO, "Pool manager %p finished rotating after calling daemon %p (%.6f) (%.6f)", (uint8_t *)&v19, 0x2Au);
  }

}

uint64_t sub_1CF27A880(uint64_t a1, void *a2)
{
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;

  v3 = a2;
  if (a1)
  {
    if (!v3)
      goto LABEL_6;
    v4 = *(_QWORD *)(a1 + 16);
    v5 = v3[2];
    if (v4 < v5)
    {
      a1 = -1;
      goto LABEL_10;
    }
    if (v4 > v5)
    {
LABEL_6:
      a1 = 1;
      goto LABEL_10;
    }
    if (*(double *)(a1 + 32) > *((double *)v3 + 4))
      a1 = 1;
    else
      a1 = -1;
  }
LABEL_10:

  return a1;
}

void sub_1CF27A8E8(uint64_t a1, void *a2)
{
  if (a1)
    objc_storeStrong((id *)(a1 + 8), a2);
}

void sub_1CF27AAE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CF27AAF4(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend_setTimerSet_(WeakRetained, v3, 0, v4);

  v15 = objc_loadWeakRetained(v1);
  objc_msgSend_now(MEMORY[0x1E0C99D68], v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_timeIntervalSince1970(v8, v9, v10, v11);
  objc_msgSend__onTimer_(v15, v12, v13, v14);

}

void sub_1CF27AD98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1CF27ADC0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1CF27ADD0(uint64_t a1)
{

}

void sub_1CF27ADD8(uint64_t a1, void *a2, uint64_t a3)
{
  double *v6;
  double v7;
  const char *v8;
  uint64_t v9;
  double *v10;

  v6 = a2;
  if (v6)
    v7 = v6[3];
  else
    v7 = 0.0;
  if (*(double *)(a1 + 56) - v7 >= *(double *)(a1 + 64))
  {
    v10 = v6;
    if (sub_1CF27A880((uint64_t)v6, *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40)) == 1)
    {
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = a3;
    }
    objc_msgSend_addIndex_(*(void **)(a1 + 32), v8, a3, v9);
    v6 = v10;
  }

}

void sub_1CF27AE80(uint64_t a1, uint64_t a2)
{
  if (a2)
    *(_QWORD *)(a2 + 16) = 0;
}

void sub_1CF27AF64(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  const char *v5;
  uint64_t v6;
  NSObject *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  int v14;
  uint64_t v15;
  __int16 v16;
  const char *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend_invalidateSessionAndCancelTasks_(v4, v5, *(unsigned __int8 *)(a1 + 32), v6);
  APLogForCategory(0x1EuLL);
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    objc_msgSend_name(v4, v8, v9, v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)v11;
    v13 = " and all pending tasks are canceled.";
    if (!*(_BYTE *)(a1 + 32))
      v13 = ".";
    v14 = 138543618;
    v15 = v11;
    v16 = 2082;
    v17 = v13;
    _os_log_impl(&dword_1CF251000, v7, OS_LOG_TYPE_INFO, "Service %{public}@ is invalidated%{public}s", (uint8_t *)&v14, 0x16u);

  }
}

uint64_t sub_1CF27B3F0(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  int isEqualToString;

  if (a2)
    v3 = *(void **)(a2 + 8);
  else
    v3 = 0;
  v4 = v3;
  objc_msgSend_name(v4, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v8, v9, *(_QWORD *)(a1 + 32), v10);

  return isEqualToString ^ 1u;
}

void sub_1CF27BC44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CF27BC60(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend__timerFired(WeakRetained, v1, v2, v3);

}

void sub_1CF27BEF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CF27BF9C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v4;
  uint64_t v5;
  void *v6;
  id v7;

  objc_msgSend_environment(*(void **)(a1 + 32), a2, a3, a4);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v7, v4, (uint64_t)CFSTR("XCTestConfigurationFilePath"), v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  byte_1ED2BC638 = v6 != 0;

}

uint64_t CreateDiagnosticReportSubtypeCrash(void *a1, void *a2)
{
  return CreateDiagnosticReport(a1, a2, CFSTR("SimulatedCrash"));
}

uint64_t CreateDiagnosticReport(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  const char *v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  APDiagnosticReporter *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  objc_class *v37;
  void *v38;
  const char *v39;
  void *v40;
  const char *v41;
  void *v42;
  APDiagnosticReporter *v43;
  const char *v44;
  NSObject *v45;
  objc_class *v46;
  void *v48;
  void *v49;
  _QWORD v50[4];
  APDiagnosticReporter *v51;
  uint8_t buf[4];
  void *v53;
  __int16 v54;
  id v55;
  __int16 v56;
  id v57;
  __int16 v58;
  uint64_t v59;
  uint64_t v60;

  v60 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (objc_msgSend_isAppleInternalInstall(APSystemInternal, v8, v9, v10))
  {
    v11 = objc_alloc(MEMORY[0x1E0C99EA0]);
    v14 = (void *)objc_msgSend_initWithSuiteName_(v11, v12, (uint64_t)CFSTR("com.apple.AdPlatforms"), v13);
    objc_msgSend_objectForKey_(v14, v15, (uint64_t)CFSTR("APDiagnosticSettings.enableDiagnosticReporting"), v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v21 = v17;
      v25 = objc_msgSend_BOOLValue(v21, v22, v23, v24);
    }
    else
    {
      v21 = (id)MEMORY[0x1E0C9AAB0];
      v25 = objc_msgSend_BOOLValue(MEMORY[0x1E0C9AAB0], v18, v19, v20);
    }
    if (v25)
    {
      v27 = objc_alloc_init(APDiagnosticReporter);
      objc_msgSend_processInfo(MEMORY[0x1E0CB3898], v28, v29, v30);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_processName(v31, v32, v33, v34);
      v35 = objc_claimAutoreleasedReturnValue();

      APLogForCategory(0x10uLL);
      v36 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
      {
        v37 = (objc_class *)objc_opt_class();
        NSStringFromClass(v37);
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138478595;
        v53 = v38;
        v54 = 2114;
        v55 = v5;
        v56 = 2114;
        v57 = v6;
        v58 = 2112;
        v59 = v35;
        _os_log_impl(&dword_1CF251000, v36, OS_LOG_TYPE_DEFAULT, "Diagnostic Reporter Taking an %{private}@ snapshot, description:\"%{public}@\", payload:%{public}@, process:%@", buf, 0x2Au);

      }
      v49 = (void *)v35;
      objc_msgSend_signatureWithDomain_type_subType_detectedProcess_triggerThresholdValues_(v27, v39, (uint64_t)CFSTR("PromotedContent"), *MEMORY[0x1E0DB0110], v7, v35, 0);
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      v42 = v40;
      if (v5)
        objc_msgSend_setObject_forKeyedSubscript_(v40, v41, (uint64_t)v5, *MEMORY[0x1E0DB00F0]);
      v50[0] = MEMORY[0x1E0C809B0];
      v50[1] = 3221225472;
      v50[2] = sub_1CF27C5C4;
      v50[3] = &unk_1E8C486C8;
      v43 = v27;
      v51 = v43;
      v26 = objc_msgSend_snapshotWithSignature_duration_event_payload_reply_(v43, v44, (uint64_t)v42, 0, v6, v50, 0.0);
      if ((v26 & 1) == 0)
      {
        APLogForCategory(0x10uLL);
        v45 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
        {
          v46 = (objc_class *)objc_opt_class();
          NSStringFromClass(v46);
          v48 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138478083;
          v53 = v48;
          v54 = 2114;
          v55 = v5;
          _os_log_impl(&dword_1CF251000, v45, OS_LOG_TYPE_ERROR, "Diagnostic Reporter Failed to send a %{private}@ snapshot,description:\"%{public}@\"", buf, 0x16u);

        }
      }

    }
    else
    {
      v26 = 0;
    }

  }
  else
  {
    v26 = 0;
  }

  return v26;
}

void sub_1CF27C5C4(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  objc_class *v4;
  void *v5;
  int v6;
  void *v7;
  __int16 v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  APLogForCategory(0x10uLL);
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = (objc_class *)objc_opt_class();
    NSStringFromClass(v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = 138478083;
    v7 = v5;
    v8 = 2114;
    v9 = v2;
    _os_log_impl(&dword_1CF251000, v3, OS_LOG_TYPE_INFO, "Diagnostic Reporter Received a response from %{private}@: %{public}@", (uint8_t *)&v6, 0x16u);

  }
}

void APDatabaseError(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v9;
  id v10;
  NSObject *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  char isRunningTests;
  const char *v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  void *v25;
  const char *v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  void *v30;
  const char *v31;
  uint64_t v32;
  void *v33;
  const char *v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  NSObject *v38;
  const char *v39;
  uint64_t v40;
  void *v41;
  const char *v42;
  uint64_t v43;
  void *v44;
  const char *v45;
  void *v46;
  const char *v47;
  _QWORD v48[3];
  _QWORD v49[3];
  _QWORD v50[5];
  _QWORD v51[5];
  uint8_t buf[4];
  id v53;
  __int16 v54;
  uint64_t v55;
  __int16 v56;
  int v57;
  __int16 v58;
  int v59;
  __int16 v60;
  id v61;
  uint64_t v62;

  v62 = *MEMORY[0x1E0C80C00];
  v9 = a4;
  v10 = a5;
  APLogForCategory(0xBuLL);
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138413314;
    v53 = v9;
    v54 = 2048;
    v55 = a3;
    v56 = 1024;
    v57 = a1;
    v58 = 1024;
    v59 = a2;
    v60 = 2112;
    v61 = v10;
    _os_log_impl(&dword_1CF251000, v11, OS_LOG_TYPE_ERROR, "Error, Database:%@, Version:%ld, Type:%d, Error code: %d, Description: %@", buf, 0x2Cu);
  }

  objc_msgSend_processInfo(MEMORY[0x1E0CB3898], v12, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  isRunningTests = objc_msgSend_isRunningTests(v15, v16, v17, v18);

  if ((isRunningTests & 1) == 0)
  {
    v50[0] = CFSTR("ErrorType");
    objc_msgSend_numberWithInt_(MEMORY[0x1E0CB37E8], v20, a1, v21);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v51[0] = v22;
    v50[1] = CFSTR("ErrorCode");
    objc_msgSend_numberWithInt_(MEMORY[0x1E0CB37E8], v23, a2, v24);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v51[1] = v25;
    v50[2] = CFSTR("Version");
    objc_msgSend_numberWithInteger_(MEMORY[0x1E0CB37E8], v26, a3, v27);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    v51[2] = v28;
    v51[3] = v9;
    v50[3] = CFSTR("Name");
    v50[4] = CFSTR("Description");
    v51[4] = v10;
    objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v29, (uint64_t)v51, (uint64_t)v50, 5);
    v30 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v31, (uint64_t)CFSTR("Error, Database:%@, Version:%ld, Type:%d, Error code: %d"), v32, v9, a3, a1, a2);
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    CreateDiagnosticReport(v33, v30, CFSTR("Database"));

    if (objc_msgSend_isEqualToString_(v9, v34, (uint64_t)CFSTR("APDatabase"), v35))
    {
      objc_msgSend_numberWithInt_(MEMORY[0x1E0CB37E8], v36, 0, v37);
      v38 = objc_claimAutoreleasedReturnValue();
      v48[0] = CFSTR("ErrorType");
      objc_msgSend_numberWithInt_(MEMORY[0x1E0CB37E8], v39, a1, v40);
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      v49[0] = v41;
      v48[1] = CFSTR("Version");
      objc_msgSend_numberWithInteger_(MEMORY[0x1E0CB37E8], v42, a3, v43);
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      v48[2] = CFSTR("Name");
      v49[1] = v44;
      v49[2] = v38;
      objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v45, (uint64_t)v49, (uint64_t)v48, 3);
      v46 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend_sendEvent_customPayload_(APAnalytics, v47, (uint64_t)CFSTR("Database"), (uint64_t)v46);
    }
    else
    {
      APLogForCategory(0xBuLL);
      v38 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v53 = v9;
        _os_log_impl(&dword_1CF251000, v38, OS_LOG_TYPE_ERROR, "Error, Unkown database Name: %@", buf, 0xCu);
      }
    }

  }
}

uint64_t sub_1CF27C9E8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t isEqualToString;

  objc_msgSend_mainBundle(MEMORY[0x1E0CB34D0], a2, a3, a4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_bundleIdentifier(v4, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  isEqualToString = objc_msgSend_isEqualToString_(v8, v9, (uint64_t)CFSTR("com.apple.ap.promotedcontentd"), v10);
  return isEqualToString;
}

id sub_1CF27CA40(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  void *v8;

  if ((a3 & 0x400000) != 0)
    objc_msgSend_apUTCSharedFormatter(MEMORY[0x1E0CB36A8], a2, a3, a4);
  else
    objc_msgSend_apLocalSharedFormatter(MEMORY[0x1E0CB36A8], a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_stringFromDate_(v5, v6, a1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

id sub_1CF27CAA0(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  void *v38;
  const char *v39;

  v5 = objc_alloc(MEMORY[0x1E0C99E08]);
  v8 = (void *)objc_msgSend_initWithCapacity_(v5, v6, 4, v7);
  objc_msgSend_domain(a1, v9, v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v8, v13, (uint64_t)v12, (uint64_t)CFSTR("domain"));

  v14 = (void *)MEMORY[0x1E0CB37E8];
  v18 = objc_msgSend_code(a1, v15, v16, v17);
  objc_msgSend_numberWithInteger_(v14, v19, v18, v20);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v8, v22, (uint64_t)v21, (uint64_t)CFSTR("code"));

  objc_msgSend_localizedDescription(a1, v23, v24, v25);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v8, v27, (uint64_t)v26, (uint64_t)CFSTR("localizedDescription"));

  objc_msgSend_userInfo(a1, v28, v29, v30);
  v31 = (void *)objc_claimAutoreleasedReturnValue();

  if (v31)
  {
    objc_msgSend_userInfo(a1, v32, v33, v34);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_jsonRepresentationWithOptions_(v35, v36, a3, v37);
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v8, v39, (uint64_t)v38, (uint64_t)CFSTR("userInfo"));

  }
  return v8;
}

uint64_t sub_1CF27CBC4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_null(MEMORY[0x1E0C99E38], a2, a3, a4);
}

id sub_1CF27D7B0(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  void *v10;
  id v11;
  NSObject *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v18;
  uint8_t buf[4];
  void *v20;
  __int16 v21;
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v5 = (void *)MEMORY[0x1D17CBC78]();
  objc_msgSend_jsonRepresentationWithOptions_(a1, v6, a3, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = 0;
  objc_msgSend_dataWithJSONObject_options_error_(MEMORY[0x1E0CB36D8], v9, (uint64_t)v8, a3 & 0xF, &v18);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = v18;
  if (v11)
  {
    APLogForCategory(0x19uLL);
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend_localizedDescription(v11, v13, v14, v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138478083;
      v20 = v16;
      v21 = 2113;
      v22 = v8;
      _os_log_impl(&dword_1CF251000, v12, OS_LOG_TYPE_ERROR, "Error serializing array into JSON (%{private}@):\n%{private}@", buf, 0x16u);

    }
    v10 = 0;
  }

  objc_autoreleasePoolPop(v5);
  return v10;
}

__CFString *sub_1CF27DA00(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  id v5;
  const char *v6;
  __CFString *v7;

  objc_msgSend_jsonDataWithOptions_(a1, a2, a3, a4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = objc_alloc(MEMORY[0x1E0CB3940]);
    v7 = (__CFString *)objc_msgSend_initWithData_encoding_(v5, v6, (uint64_t)v4, 4);
  }
  else
  {
    v7 = CFSTR("[]");
  }

  return v7;
}

uint64_t sub_1CF27DA58(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_jsonStringWithOptions_(a1, a2, 1, a4);
}

uint64_t sub_1CF27E64C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1CF27E65C(uint64_t a1)
{

}

uint64_t sub_1CF27E668(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a2 + 16))(a2, *(unsigned __int8 *)(a1 + 32));
}

uint64_t sub_1CF27EC78(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  NSObject *v4;
  int v6;
  id v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  APLogForCategory(0x20uLL);
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v6 = 138543362;
    v7 = v3;
    _os_log_impl(&dword_1CF251000, v4, OS_LOG_TYPE_ERROR, "File enumeration error. %{public}@", (uint8_t *)&v6, 0xCu);
  }

  return 1;
}

id sub_1CF27ED28(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v13;

  v5 = 0;
  v6 = *MEMORY[0x1E0C999D0];
  while (1)
  {
    v7 = v5;
    objc_msgSend_nextObject(*(void **)(a1 + 32), a2, a3, a4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v5)
      break;
    if (!*(_BYTE *)(a1 + 40))
    {
      v13 = 0;
      objc_msgSend_getResourceValue_forKey_error_(v5, a2, (uint64_t)&v13, v6, 0);
      if ((objc_msgSend_BOOLValue(v13, v8, v9, v10) & 1) != 0)
        continue;
    }
    objc_msgSend_relativePath(v5, a2, a3, a4);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    goto LABEL_7;
  }
  v11 = 0;
LABEL_7:

  return v11;
}

uint64_t sub_1CF27F10C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  NSObject *v4;
  int v6;
  id v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v3 = a3;
  APLogForCategory(0x20uLL);
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v6 = 138543362;
    v7 = v3;
    _os_log_impl(&dword_1CF251000, v4, OS_LOG_TYPE_ERROR, "File enumeration error. %{public}@", (uint8_t *)&v6, 0xCu);
  }

  return 1;
}

void sub_1CF27F7E4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  const char *v7;
  int v8;
  id v9;
  NSObject *v10;
  NSObject *v11;
  const char *v12;
  id v13;
  uint8_t buf[4];
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  objc_msgSend_defaultManager(MEMORY[0x1E0CB3620], a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = *(_QWORD *)(a1 + 32);
  v13 = 0;
  v8 = objc_msgSend_removeItemAtPath_error_(v5, v7, v6, (uint64_t)&v13);
  v9 = v13;

  APLogForCategory(0x2DuLL);
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if (v8)
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1CF251000, v11, OS_LOG_TYPE_DEBUG, "Successfully removed SFS folder.", buf, 2u);
    }

  }
  else
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      v15 = v9;
      _os_log_impl(&dword_1CF251000, v11, OS_LOG_TYPE_ERROR, "Failed to remove SFS folder: %{public}@", buf, 0xCu);
    }

    objc_msgSend_sendAnalyticError_domain_code_(APStorageManager, v12, (uint64_t)CFSTR("Failed"), (uint64_t)CFSTR("SFS"), 16102);
  }

}

void sub_1CF27FD54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CF27FD88(uint64_t a1, int a2)
{
  NSObject *v4;
  id v5;
  uint32_t state;
  uint32_t v7;
  NSObject *v8;
  void *v9;
  void (**v10)(void);
  NSObject *WeakRetained;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t state64;
  uint8_t buf[4];
  id v17;
  __int16 v18;
  uint32_t v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  APLogForCategory(0x10uLL);
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138477827;
    v17 = (id)objc_opt_class();
    v5 = v17;
    _os_log_impl(&dword_1CF251000, v4, OS_LOG_TYPE_DEFAULT, "[%{private}@]: Springboard unlock notification received.", buf, 0xCu);

  }
  state64 = 0;
  state = notify_get_state(a2, &state64);
  if (state)
  {
    v7 = state;
    APLogForCategory(0x10uLL);
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      v9 = (void *)objc_opt_class();
      *(_DWORD *)buf = 138478083;
      v17 = v9;
      v18 = 1026;
      v19 = v7;
      v10 = v9;
      _os_log_impl(&dword_1CF251000, v8, OS_LOG_TYPE_ERROR, "[%{private}@]: Unable to get state for _screenLockNotifyToken. Error code %{public}d", buf, 0x12u);
LABEL_9:

    }
  }
  else
  {
    if (state64)
      return;
    notify_cancel(dword_1ED2BC298);
    dword_1ED2BC298 = -1;
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v8 = WeakRetained;
    if (WeakRetained)
    {
      objc_msgSend_taskHandler(WeakRetained, v12, v13, v14);
      v10 = (void (**)(void))objc_claimAutoreleasedReturnValue();
      v10[2]();
      goto LABEL_9;
    }
  }

}

uint64_t APDiagnosticsSubmissionAllowed(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t isDiagnosticSubmissionAllowed;

  objc_msgSend_sharedConnection(MEMORY[0x1E0D47230], a2, a3, a4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  isDiagnosticSubmissionAllowed = objc_msgSend_isDiagnosticSubmissionAllowed(v4, v5, v6, v7);

  return isDiagnosticSubmissionAllowed;
}

void APSimulateCrashNoKillProcess(const char *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  objc_class *v10;
  id v11;
  id v12;
  const char *v13;
  void *v14;

  v10 = (objc_class *)MEMORY[0x1E0CB3940];
  v11 = a2;
  v12 = [v10 alloc];
  v14 = (void *)objc_msgSend_initWithFormat_arguments_(v12, v13, (uint64_t)v11, (uint64_t)&a9);

  APSimulateCrash(a1, v14, 0);
}

void APSimulateCrash(const char *a1, void *a2, unsigned int a3)
{
  id v5;
  NSObject *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  int isRunningTests;
  const char *v15;
  uint64_t v16;
  NSObject *v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  _QWORD v27[2];
  uint8_t buf[4];
  id v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  APLogForCategory(0xFuLL);
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138543362;
    v29 = v5;
    _os_log_impl(&dword_1CF251000, v6, OS_LOG_TYPE_ERROR, "%{public}@", buf, 0xCu);
  }

  objc_msgSend_processInfo(MEMORY[0x1E0CB3898], v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  isRunningTests = objc_msgSend_isRunningTests(v10, v11, v12, v13);

  if (isRunningTests)
  {
    APLogForCategory(0xFuLL);
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1CF251000, v17, OS_LOG_TYPE_ERROR, "We should exit at this point. If you see this log outside of the Unit Tests, Please file a radar...", buf, 2u);
    }

  }
  else
  {
    v26[0] = CFSTR("ExceptionCode");
    objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v15, (uint64_t)CFSTR("%lld"), v16, a1);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v26[1] = CFSTR("KillProcess");
    v27[0] = v18;
    objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v19, (uint64_t)CFSTR("%d"), v20, a3);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v27[1] = v21;
    objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v22, (uint64_t)v27, (uint64_t)v26, 2);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    CreateDiagnosticReportSubtypeCrash(v5, v23);

    if (a3)
      sub_1CF371D8C((uint64_t)v5, a1, v24, v25);
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
      sub_1CF371DDC((uint64_t)v5, (uint64_t)a1);
  }

}

uint64_t sub_1CF280B58(uint64_t a1, const char *a2)
{
  return objc_msgSend_sendRequest_requestType_completionHandler_(*(void **)(a1 + 32), a2, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 48));
}

uint64_t sub_1CF280DC4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, _QWORD))(result + 16))(result, 0, 0, 0);
  return result;
}

void sub_1CF280DE4(uint64_t *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  void *v32;
  const char *v33;
  void *v34;
  NSObject *v35;
  uint64_t v36;
  const char *v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char v46;
  id v47;
  NSObject *v48;
  NSObject *v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  NSObject *v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  unsigned int v67;
  uint64_t v68;
  uint8_t buf[4];
  uint64_t v70;
  __int16 v71;
  double v72;
  __int16 v73;
  void *v74;
  _QWORD v75[3];
  _QWORD v76[4];

  v76[3] = *MEMORY[0x1E0C80C00];
  v7 = a2;
  v8 = a3;
  v68 = 0;
  v67 = 0;
  v9 = a4;
  v10 = v8;
  objc_msgSend_date(MEMORY[0x1E0C99D68], v11, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_timeIntervalSinceDate_(v14, v15, a1[4], v16);
  v18 = llround(v17 * 1000.0);
  v75[0] = CFSTR("statusCode");
  v19 = (void *)MEMORY[0x1E0CB37E8];
  v23 = objc_msgSend_statusCode(v10, v20, v21, v22);
  objc_msgSend_numberWithInteger_(v19, v24, v23, v25);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v76[0] = v26;
  v75[1] = CFSTR("requestTime");
  objc_msgSend_numberWithInteger_(MEMORY[0x1E0CB37E8], v27, v18, v28);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v76[1] = v29;
  v75[2] = CFSTR("requestType");
  objc_msgSend_numberWithInteger_(MEMORY[0x1E0CB37E8], v30, a1[7], v31);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  v76[2] = v32;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v33, (uint64_t)v76, (uint64_t)v75, 3);
  v34 = (void *)objc_claimAutoreleasedReturnValue();

  APLogForCategory(0x2AuLL);
  v35 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
  {
    v36 = a1[7];
    *(_DWORD *)buf = 134218240;
    v70 = v36;
    v71 = 2048;
    v72 = (double)v18 / 1000.0;
    _os_log_impl(&dword_1CF251000, v35, OS_LOG_TYPE_INFO, "FPDI server request type %ld: %.3f", buf, 0x16u);
  }

  objc_msgSend_sendEvent_customPayload_(APAnalytics, v37, (uint64_t)CFSTR("signingAuthoritySetupRequest"), (uint64_t)v34);
  v41 = objc_msgSend_statusCode(v10, v38, v39, v40);
  if (!v9 && v7 && v41 == 200)
  {
    v45 = (void *)a1[5];
    v66 = 0;
    v46 = objc_msgSend__retrieveResponse_andLength_fromData_error_(v45, v42, (uint64_t)&v68, (uint64_t)&v67, v7, &v66);
    v47 = v66;
    if ((v46 & 1) == 0)
    {
      APLogForCategory(0x2AuLL);
      v48 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v48, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1CF251000, v48, OS_LOG_TYPE_ERROR, "Signing response translation encountered a failure.", buf, 2u);
      }

      v68 = 0;
      v67 = 0;
    }
  }
  else
  {
    if (v9)
    {
      APLogForCategory(0x2AuLL);
      v49 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR))
      {
        v53 = a1[7];
        v54 = objc_msgSend_code(v9, v50, v51, v52);
        objc_msgSend_localizedDescription(v9, v55, v56, v57);
        v58 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 134218498;
        v70 = v53;
        v71 = 2048;
        v72 = *(double *)&v54;
        v73 = 2112;
        v74 = v58;
        _os_log_impl(&dword_1CF251000, v49, OS_LOG_TYPE_ERROR, "Response error %ld for request type %ld: %@", buf, 0x20u);

      }
    }
    v47 = v9;
    if (objc_msgSend_statusCode(v10, v42, v43, v44) != 200)
    {
      APLogForCategory(0x2AuLL);
      v59 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v59, OS_LOG_TYPE_ERROR))
      {
        v63 = a1[7];
        v64 = objc_msgSend_statusCode(v10, v60, v61, v62);
        *(_DWORD *)buf = 134218240;
        v70 = v63;
        v71 = 2048;
        v72 = *(double *)&v64;
        _os_log_impl(&dword_1CF251000, v59, OS_LOG_TYPE_ERROR, "FPDI server request type %ld received %ld response code.", buf, 0x16u);
      }

      v47 = v9;
    }
  }
  v65 = a1[6];
  if (v65)
    (*(void (**)(uint64_t, uint64_t, _QWORD, id))(v65 + 16))(v65, v68, v67, v47);

}

void sub_1CF2823D0()
{
  dispatch_queue_t v0;
  void *v1;
  NSObject *v2;

  dispatch_queue_attr_make_with_qos_class(MEMORY[0x1E0C80D50], QOS_CLASS_UTILITY, 0);
  v2 = objc_claimAutoreleasedReturnValue();
  v0 = dispatch_queue_create("com.apple.ap.promotedcontentd.xpc-activity", v2);
  v1 = (void *)qword_1ED2BC728;
  qword_1ED2BC728 = (uint64_t)v0;

}

void sub_1CF282634(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CF282904(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CF282928(uint64_t a1, void *a2)
{
  _xpc_activity_s *v3;
  const char *v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  _xpc_activity_s *v9;
  xpc_activity_state_t state;
  NSObject *v11;
  NSObject *v12;
  void *v13;
  NSObject *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  NSObject *v32;
  NSObject *v33;
  NSObject *v34;
  NSObject *v35;
  void *v36;
  NSObject *v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  const char *v46;
  uint64_t v47;
  int v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  void *v57;
  NSObject *v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  const char *v67;
  uint64_t v68;
  NSObject *v69;
  void *v70;
  void *v71;
  const char *v72;
  uint64_t v73;
  NSObject *v74;
  NSObject *v75;
  uint8_t buf[4];
  NSObject *v77;
  __int16 v78;
  void *v79;
  __int16 v80;
  uint64_t v81;
  uint64_t v82;

  v82 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend_setActivity_(*(void **)(a1 + 32), v4, (uint64_t)v3, v5);
  objc_msgSend_activity(*(void **)(a1 + 32), v6, v7, v8);
  v9 = (_xpc_activity_s *)objc_claimAutoreleasedReturnValue();
  state = xpc_activity_get_state(v9);

  if (state != 2)
  {
    if (state)
    {
      APLogForCategory(0x32uLL);
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        v56 = objc_opt_class();
        v57 = *(void **)(a1 + 32);
        v58 = v56;
        objc_msgSend_taskID(v57, v59, v60, v61);
        v62 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138478339;
        v77 = v56;
        v78 = 2114;
        v79 = v62;
        v80 = 2048;
        v81 = state;
        _os_log_impl(&dword_1CF251000, v20, OS_LOG_TYPE_ERROR, "[%{private}@]: Unexpected XPC_ACTIVITY_STATE for activity %{public}@ - %ld", buf, 0x20u);

      }
      goto LABEL_23;
    }
    APLogForCategory(0x32uLL);
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v12 = objc_opt_class();
      v13 = *(void **)(a1 + 32);
      v14 = v12;
      objc_msgSend_taskID(v13, v15, v16, v17);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138412802;
      v77 = v12;
      v78 = 2114;
      v79 = v18;
      v80 = 2114;
      v81 = v19;
      _os_log_impl(&dword_1CF251000, v11, OS_LOG_TYPE_DEFAULT, "[%@]: launchd checking in with activity %{public}@ and criteria %{public}@", buf, 0x20u);

    }
    v20 = xpc_activity_copy_criteria(v3);
    objc_msgSend_delegate(*(void **)(a1 + 32), v21, v22, v23);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = objc_opt_respondsToSelector();

    if ((v25 & 1) != 0)
    {
      objc_msgSend_delegate(*(void **)(a1 + 32), v26, v27, v28);
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_checkinWithCriteria_(v29, v30, (uint64_t)v20, v31);
      v32 = objc_claimAutoreleasedReturnValue();

      if (v32)
      {
        xpc_activity_set_criteria(v3, v32);
        APLogForCategory(0x32uLL);
        v33 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138543362;
          v77 = v32;
          _os_log_impl(&dword_1CF251000, v33, OS_LOG_TYPE_INFO, "Setting the criteria to: %{public}@", buf, 0xCu);
        }
LABEL_21:

      }
    }
    else
    {
      if (v20)
      {
LABEL_23:

        goto LABEL_24;
      }
      objc_msgSend_delegate(*(void **)(a1 + 32), v26, v27, v28);
      v63 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_criteria(v63, v64, v65, v66);
      v32 = objc_claimAutoreleasedReturnValue();

      if (v32)
      {
        objc_msgSend__translateCriteria_(APXPCActivity, v67, (uint64_t)v32, v68);
        v33 = objc_claimAutoreleasedReturnValue();
        xpc_activity_set_criteria(v3, v33);
        APLogForCategory(0x32uLL);
        v69 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v69, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138543362;
          v77 = v33;
          _os_log_impl(&dword_1CF251000, v69, OS_LOG_TYPE_INFO, "Setting the criteria to: %{public}@", buf, 0xCu);
        }

        goto LABEL_21;
      }
    }

    goto LABEL_23;
  }
  APLogForCategory(0x32uLL);
  v34 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
  {
    v35 = objc_opt_class();
    v36 = *(void **)(a1 + 32);
    v37 = v35;
    objc_msgSend_taskID(v36, v38, v39, v40);
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138478339;
    v77 = v35;
    v78 = 2114;
    v79 = v41;
    v80 = 2048;
    v81 = 2;
    _os_log_impl(&dword_1CF251000, v34, OS_LOG_TYPE_DEFAULT, "[%{private}@]: Request to run activity %{public}@ (state: %ld)", buf, 0x20u);

  }
  objc_msgSend_delegate(*(void **)(a1 + 32), v42, v43, v44);
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  v48 = objc_msgSend_runActivity_(v45, v46, *(_QWORD *)(a1 + 32), v47);

  v52 = *(void **)(a1 + 32);
  if (v48)
  {
    if ((objc_msgSend__continueActivity(v52, v49, v50, v51) & 1) != 0)
    {
      objc_msgSend__startDeferralCheck(*(void **)(a1 + 32), v53, v54, v55);
    }
    else
    {
      v70 = (void *)MEMORY[0x1E0CB3940];
      objc_msgSend_taskID(*(void **)(a1 + 32), v53, v54, v55);
      v71 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_stringWithFormat_(v70, v72, (uint64_t)CFSTR("Request to continue execution of activity %@ failed. Please file a radar."), v73, v71);
      v74 = objc_claimAutoreleasedReturnValue();

      APLogForCategory(0x32uLL);
      v75 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v75, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138543362;
        v77 = v74;
        _os_log_impl(&dword_1CF251000, v75, OS_LOG_TYPE_ERROR, "%{public}@", buf, 0xCu);
      }

    }
  }
  else
  {
    objc_msgSend_finished(v52, v49, v50, v51);
  }
LABEL_24:

}

void sub_1CF28306C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CF2831F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CF283564(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CF283578(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  int shouldDefer;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  const char *v20;
  NSObject *v21;
  void *v22;
  void *v23;
  id v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD v29[4];
  id v30;
  _BYTE location[12];
  __int16 v32;
  void *v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  shouldDefer = objc_msgSend_shouldDefer(*(void **)(a1 + 32), a2, a3, a4);
  v9 = *(void **)(a1 + 32);
  if (shouldDefer)
  {
    objc_msgSend__endDeferralCheck(v9, v5, v6, v7);
    objc_msgSend_delegate(*(void **)(a1 + 32), v10, v11, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_opt_respondsToSelector();

    if ((v14 & 1) != 0)
    {
      objc_initWeak((id *)location, *(id *)(a1 + 32));
      objc_msgSend_delegate(*(void **)(a1 + 32), v15, v16, v17);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = *(_QWORD *)(a1 + 32);
      v29[0] = MEMORY[0x1E0C809B0];
      v29[1] = 3221225472;
      v29[2] = sub_1CF283784;
      v29[3] = &unk_1E8C48900;
      objc_copyWeak(&v30, (id *)location);
      objc_msgSend_deferActivity_completionHandler_(v18, v20, v19, (uint64_t)v29);

      objc_destroyWeak(&v30);
      objc_destroyWeak((id *)location);
    }
    else
    {
      APLogForCategory(0x32uLL);
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      {
        v22 = (void *)objc_opt_class();
        v23 = *(void **)(a1 + 32);
        v24 = v22;
        objc_msgSend_taskID(v23, v25, v26, v27);
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)location = 138478083;
        *(_QWORD *)&location[4] = v22;
        v32 = 2114;
        v33 = v28;
        _os_log_impl(&dword_1CF251000, v21, OS_LOG_TYPE_ERROR, "[%{private}@]: Activity %{public}@ was asked to defer but does not support deferral.", location, 0x16u);

      }
    }
  }
  else
  {
    MEMORY[0x1E0DE7D20](v9, sel__backgroundDeferralCheck, v6, v7);
  }
}

void sub_1CF283758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CF283784(uint64_t a1, int a2)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  id *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id WeakRetained;
  uint8_t buf[4];
  void *v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  if (a2)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    objc_msgSend_deferActivity(WeakRetained, v3, v4, v5);

  }
  else
  {
    APLogForCategory(0x32uLL);
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v7 = (id *)(a1 + 32);
      v8 = objc_loadWeakRetained((id *)(a1 + 32));
      v9 = (void *)objc_opt_class();
      v10 = v9;
      v11 = objc_loadWeakRetained(v7);
      objc_msgSend_taskID(v11, v12, v13, v14);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138478083;
      v18 = v9;
      v19 = 2114;
      v20 = v15;
      _os_log_impl(&dword_1CF251000, v6, OS_LOG_TYPE_ERROR, "[%{private}@]: Activity %{public}@ failed to defer.", buf, 0x16u);

    }
  }
}

void sub_1CF283914(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CF28396C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

id sub_1CF283A08(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v4;
  _QWORD v6[3];

  v6[2] = *MEMORY[0x1E0C80C00];
  v6[0] = 0;
  v6[1] = 0;
  objc_msgSend_getUUIDBytes_(a1, a2, (uint64_t)v6, a4);
  objc_msgSend_dataWithBytes_length_(MEMORY[0x1E0C99D50], v4, (uint64_t)v6, 16);
  return (id)objc_claimAutoreleasedReturnValue();
}

id sub_1CF283A70(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  const char *v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  void *v21;

  v5 = objc_alloc(MEMORY[0x1E0C99DF0]);
  objc_msgSend_data(a1, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)objc_msgSend_initWithData_(v5, v10, (uint64_t)v9, v11);

  v13 = objc_alloc(MEMORY[0x1E0C99D50]);
  v16 = (void *)objc_msgSend_initWithRandomOfLength_(v13, v14, a3, v15);
  objc_msgSend_appendData_(v12, v17, (uint64_t)v16, v18);

  objc_msgSend_dataWithData_(MEMORY[0x1E0C99D50], v19, (uint64_t)v12, v20);
  v21 = (void *)objc_claimAutoreleasedReturnValue();

  return v21;
}

void sub_1CF2840F0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  char v23;
  id v24;
  NSObject *v25;
  void *v26;
  id v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint8_t buf[4];
  void *v38;
  __int16 v39;
  void *v40;
  __int16 v41;
  void *v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  objc_msgSend_defaultManager(MEMORY[0x1E0CB3620], a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_UUID(MEMORY[0x1E0CB3A28], v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_UUIDString(v9, v10, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  NSTemporaryDirectory();
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_stringByAppendingPathComponent_(v14, v15, (uint64_t)v13, v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_databaseFilePath(*(void **)(a1 + 32), v18, v19, v20);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v36 = 0;
  v23 = objc_msgSend_moveItemAtPath_toPath_error_(v5, v22, (uint64_t)v21, (uint64_t)v17, &v36);
  v24 = v36;

  if ((v23 & 1) == 0)
  {
    APLogForCategory(0xBuLL);
    v25 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
    {
      v26 = (void *)objc_opt_class();
      v27 = v26;
      objc_msgSend_localizedFailureReason(v24, v28, v29, v30);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_userInfo(v24, v32, v33, v34);
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138478339;
      v38 = v26;
      v39 = 2114;
      v40 = v31;
      v41 = 2114;
      v42 = v35;
      _os_log_impl(&dword_1CF251000, v25, OS_LOG_TYPE_ERROR, "[%{private}@]: Failed to Move Corrupted File, error: %{public}@, userInfo: %{public}@", buf, 0x20u);

    }
  }

}

void sub_1CF2842B0(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend_connectionInterrupted(WeakRetained, v1, v2, v3);

}

void sub_1CF2843DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CF284FDC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  APTestingRig *v4;
  void *v5;

  if (objc_msgSend_isAppleInternalInstall(APSystemInternal, a2, a3, a4))
  {
    v4 = objc_alloc_init(APTestingRig);
    v5 = (void *)qword_1ED2BC768;
    qword_1ED2BC768 = (uint64_t)v4;

  }
}

void sub_1CF285128(uint64_t a1, void *a2, void *a3)
{
  void (**v5)(id, _QWORD);
  const char *v6;
  uint64_t v7;
  const char *v8;
  void *v9;
  id v10;

  v5 = a3;
  objc_msgSend_dataUsingEncoding_(a2, v6, 4, v7);
  v10 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_JSONObjectWithData_options_error_(MEMORY[0x1E0CB36D8], v8, (uint64_t)v10, 1, 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (v9)
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  else
    v5[2](v5, 0);

}

id sub_1CF2853D0(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  unsigned int v14;
  int v15;
  const char *v16;
  uint64_t v17;
  id v18;
  const char *v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  id v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  const char *v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  void *v36;
  z_stream v38;
  z_stream strm;

  if (!objc_msgSend_length(a1, a2, a3, a4))
  {
    v18 = a1;
    return v18;
  }
  memset(&strm.avail_in, 0, 104);
  v6 = objc_retainAutorelease(a1);
  strm.next_in = (Bytef *)objc_msgSend_bytes(v6, v7, v8, v9);
  strm.avail_in = objc_msgSend_length(v6, v10, v11, v12);
  if (a3 == 1)
    v14 = 1;
  else
    v14 = -1;
  if (a3 == 2)
    v15 = objc_msgSend_deflateInit2Helper_compressionLevel_(v6, v13, (uint64_t)&strm, 9);
  else
    v15 = objc_msgSend_deflateInit2Helper_compressionLevel_(v6, v13, (uint64_t)&strm, v14);
  v18 = 0;
  if (v15)
    return v18;
  objc_msgSend_dataWithLength_(MEMORY[0x1E0C99DF0], v16, 0x4000, v17);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  do
  {
    v38 = strm;
    if (objc_msgSend_compareDataSizeHelper_data_(v6, v19, (uint64_t)&v38, (uint64_t)v20))
      objc_msgSend_increaseLengthBy_(v20, v21, 0x4000, v22);
    v23 = objc_retainAutorelease(v20);
    v27 = objc_msgSend_mutableBytes(v23, v24, v25, v26);
    strm.next_out = (Bytef *)(v27 + strm.total_out);
    v31 = objc_msgSend_length(v23, v28, v29, v30);
    strm.avail_out = v31 - LODWORD(strm.total_out);
    deflate(&strm, 4);
  }
  while (!strm.avail_out);
  deflateEnd(&strm);
  objc_msgSend_setLength_(v23, v32, strm.total_out, v33);
  objc_msgSend_dataWithData_(MEMORY[0x1E0C99D50], v34, (uint64_t)v23, v35);
  v36 = (void *)objc_claimAutoreleasedReturnValue();

  return v36;
}

id sub_1CF285554(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  const char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  const char *v25;
  void *v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  id v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  const char *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  const char *v44;
  uint64_t v45;
  const char *v46;
  uint64_t v47;
  NSObject *v49;
  const char *v50;
  uint64_t v51;
  NSObject *v52;
  _BYTE v53[112];
  uint8_t buf[16];
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;

  v61 = *MEMORY[0x1E0C80C00];
  if (!objc_msgSend_length(a1, a2, a3, a4))
    return a1;
  v8 = objc_msgSend_length(a1, v5, v6, v7);
  v12 = objc_msgSend_length(a1, v9, v10, v11);
  objc_msgSend_dataWithLength_(MEMORY[0x1E0C99DF0], v13, v8 + (v12 >> 1), v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  memset(&v53[8], 0, 104);
  v16 = objc_retainAutorelease(a1);
  *(_QWORD *)v53 = objc_msgSend_bytes(v16, v17, v18, v19);
  *(_DWORD *)&v53[8] = objc_msgSend_length(v16, v20, v21, v22);
  v26 = 0;
  if (!objc_msgSend_inflateInit2Helper_(v16, v23, (uint64_t)v53, v24))
  {
    v27 = v12 >> 1;
    do
    {
      v58 = *(_OWORD *)&v53[64];
      v59 = *(_OWORD *)&v53[80];
      v60 = *(_OWORD *)&v53[96];
      *(_OWORD *)buf = *(_OWORD *)v53;
      v55 = *(_OWORD *)&v53[16];
      v56 = *(_OWORD *)&v53[32];
      v57 = *(_OWORD *)&v53[48];
      if (objc_msgSend_compareDataSizeHelper_data_(v16, v25, (uint64_t)buf, (uint64_t)v15))
        objc_msgSend_increaseLengthBy_(v15, v28, v27, v29);
      v30 = objc_retainAutorelease(v15);
      v34 = objc_msgSend_mutableBytes(v30, v31, v32, v33);
      *(_QWORD *)&v53[24] = v34 + *(_QWORD *)&v53[40];
      v38 = objc_msgSend_length(v30, v35, v36, v37);
      *(_DWORD *)&v53[32] = v38 - *(_DWORD *)&v53[40];
      v41 = objc_msgSend_inflateHelper_(v16, v39, (uint64_t)v53, v40);
    }
    while (!v41);
    v43 = v41;
    if (v41 == 1)
    {
      if (!objc_msgSend_inflateEndHelper_(v16, v25, (uint64_t)v53, v42))
      {
        objc_msgSend_setLength_(v30, v44, *(uint64_t *)&v53[40], v45);
        objc_msgSend_dataWithData_(MEMORY[0x1E0C99D50], v46, (uint64_t)v30, v47);
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        goto LABEL_18;
      }
    }
    else
    {
      APLogForCategory(0x10uLL);
      v49 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67109120;
        *(_DWORD *)&buf[4] = v43;
        _os_log_impl(&dword_1CF251000, v49, OS_LOG_TYPE_ERROR, "Error: gzip inflate() failed! (%d)", buf, 8u);
      }

      if (!objc_msgSend_inflateEndHelper_(v16, v50, (uint64_t)v53, v51))
        goto LABEL_17;
    }
    APLogForCategory(0x10uLL);
    v52 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1CF251000, v52, OS_LOG_TYPE_ERROR, "Error: gzip inflatedEnd() failed!", buf, 2u);
    }

LABEL_17:
    v26 = 0;
  }
LABEL_18:

  return v26;
}

uint64_t sub_1CF2857D4(int a1, int a2, z_streamp strm, int level)
{
  return deflateInit2_(strm, level, 8, 31, 8, 0, "1.2.12", 112);
}

uint64_t sub_1CF2857FC(int a1, int a2, z_streamp strm)
{
  return inflateInit2_(strm, 47, "1.2.12", 112);
}

uint64_t sub_1CF285814(int a1, int a2, z_streamp strm)
{
  return inflateEnd(strm);
}

uint64_t sub_1CF28581C(int a1, int a2, z_streamp strm)
{
  return inflate(strm, 2);
}

BOOL sub_1CF285828(uint64_t a1, const char *a2, uint64_t a3, void *a4)
{
  unint64_t v4;

  v4 = *(_QWORD *)(a3 + 40);
  return v4 >= objc_msgSend_length(a4, a2, a3, (uint64_t)a4);
}

void sub_1CF285C20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1CF2861B8(uint64_t a1, const char *a2, unint64_t a3, uint64_t a4)
{
  unint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  const char *v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  const char *v14;
  void *v15;
  unint64_t v17;

  v5 = a3 >> 3;
  objc_msgSend_data(MEMORY[0x1E0C99DF0], a2, a3, a4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v5 + 1;
  do
  {
    v17 = 0;
    v8 = arc4random_uniform(0xFFFFFFFF);
    v17 = v8 | ((unint64_t)arc4random_uniform(0xFFFFFFFF) << 32);
    v9 = objc_alloc(MEMORY[0x1E0C99D50]);
    v11 = (void *)objc_msgSend_initWithBytes_length_(v9, v10, (uint64_t)&v17, 8);
    objc_msgSend_appendData_(v6, v12, (uint64_t)v11, v13);

    --v7;
  }
  while (v7);
  objc_msgSend_subdataWithRange_(v6, v14, 0, a3 - 1);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  return v15;
}

uint64_t sub_1CF28627C(void *a1, const char *a2, size_t a3)
{
  char *v5;
  const char *v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x1E0C80C00];
  v5 = (char *)v13 - ((a3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
    bzero((char *)v13 - ((a3 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  if (!objc_msgSend_copyBytes_withLength_(SecRandomCopyBytesHelper, a2, (uint64_t)v5, a3))
    return objc_msgSend_initWithBytes_length_(a1, v6, (uint64_t)v5, a3);
  objc_msgSend_randomWithBytes_(MEMORY[0x1E0C99D50], v6, 16, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend_initWithData_(a1, v9, (uint64_t)v8, v10);

  return v11;
}

id sub_1CF28635C(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  const char *v5;
  void *v6;
  const char *v7;
  void *v8;

  objc_msgSend_base64EncodedStringWithOptions_(a1, a2, 1, a4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_stringByReplacingOccurrencesOfString_withString_(v4, v5, (uint64_t)CFSTR("+"), (uint64_t)CFSTR("-"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_stringByReplacingOccurrencesOfString_withString_(v6, v7, (uint64_t)CFSTR("/"), (uint64_t)CFSTR("_"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

id sub_1CF286850(void *a1)
{
  id v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  id v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v1 = a1;
  v3 = objc_msgSend_countByEnumeratingWithState_objects_count_(v1, v2, (uint64_t)&v14, (uint64_t)v18, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v15;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v15 != v5)
          objc_enumerationMutation(v1);
        v7 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * v6);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          v9 = v7;
          if (objc_msgSend_state(v9, v10, v11, v12, (_QWORD)v14) == 17002)
            goto LABEL_12;

        }
        ++v6;
      }
      while (v4 != v6);
      v4 = objc_msgSend_countByEnumeratingWithState_objects_count_(v1, v8, (uint64_t)&v14, (uint64_t)v18, 16);
    }
    while (v4);
  }
  v9 = 0;
LABEL_12:

  return v9;
}

void sub_1CF286BB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CF286BE8()
{
  APXPCListenerManager *v0;
  void *v1;

  v0 = objc_alloc_init(APXPCListenerManager);
  v1 = (void *)qword_1ED2BC720;
  qword_1ED2BC720 = (uint64_t)v0;

}

uint64_t sub_1CF286C90(uint64_t a1)
{
  uint64_t result;
  const char *v3;
  uint64_t v4;
  uint64_t v5;

  result = objc_opt_respondsToSelector();
  if ((result & 1) != 0)
    return objc_msgSend_connectionInterrupted(*(void **)(a1 + 32), v3, v4, v5);
  return result;
}

id sub_1CF286D74()
{
  if (qword_1ED2BC630 != -1)
    dispatch_once(&qword_1ED2BC630, &unk_1E8C48150);
  return (id)qword_1ED2BC738;
}

void sub_1CF286DB4()
{
  id v0;
  void *v1;

  v0 = objc_alloc_init(MEMORY[0x1E0CB36A8]);
  v1 = (void *)qword_1ED2BC738;
  qword_1ED2BC738 = (uint64_t)v0;

}

void sub_1CF286DDC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  id v10;

  objc_msgSend_localTimeZone(MEMORY[0x1E0C99E80], a2, a3, a4);
  v10 = (id)objc_claimAutoreleasedReturnValue();
  v4 = objc_alloc_init(MEMORY[0x1E0CB36A8]);
  v5 = (void *)qword_1ED2BC790;
  qword_1ED2BC790 = (uint64_t)v4;

  objc_msgSend_setTimeZone_((void *)qword_1ED2BC790, v6, (uint64_t)v10, v7);
  objc_msgSend_setFormatOptions_((void *)qword_1ED2BC790, v8, 3955, v9);

}

id sub_1CF286E48()
{
  if (qword_1ED2BC778 != -1)
    dispatch_once(&qword_1ED2BC778, &unk_1E8C48B70);
  return (id)qword_1ED2BC780;
}

void sub_1CF286E88(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  id v10;

  objc_msgSend_timeZoneWithAbbreviation_(MEMORY[0x1E0C99E80], a2, (uint64_t)CFSTR("UTC"), a4);
  v10 = (id)objc_claimAutoreleasedReturnValue();
  v4 = objc_alloc_init(MEMORY[0x1E0CB36A8]);
  v5 = (void *)qword_1ED2BC780;
  qword_1ED2BC780 = (uint64_t)v4;

  objc_msgSend_setTimeZone_((void *)qword_1ED2BC780, v6, (uint64_t)v10, v7);
  objc_msgSend_setFormatOptions_((void *)qword_1ED2BC780, v8, 3955, v9);

}

void sub_1CF287118(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1CF287144(uint64_t a1, const char *a2)
{
  const char *v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  objc_msgSend__openDBConnectionCanRepeat_databasePath_(*(void **)(a1 + 32), a2, 1, *(_QWORD *)(a1 + 40));
  if ((objc_msgSend_setUpDatabaseWithPath_(*(void **)(a1 + 32), v3, *(_QWORD *)(a1 + 40), v4) & 1) == 0)
  {
    v8 = objc_msgSend_currentVersion(*(void **)(a1 + 32), v5, v6, v7);
    APDatabaseError(430, 0xFFFFFFFFLL, v8, CFSTR("APDatabase"), CFSTR("Setup failed after delayed unlock."));
  }
  return objc_msgSend_setDeviceLockedTask_(*(void **)(a1 + 32), v5, 0, v7);
}

void sub_1CF28992C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_1CF289950(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  _QWORD v9[5];
  id v10;
  uint64_t v11;
  char v12;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (v3)
  {
    v5 = *(_QWORD *)(a1 + 56);
    v9[0] = MEMORY[0x1E0C809B0];
    v9[2] = sub_1CF289A18;
    v9[3] = &unk_1E8C48BA0;
    v6 = *(_QWORD *)(a1 + 32);
    v7 = *(void **)(a1 + 40);
    v11 = v5;
    v9[4] = v6;
    v9[1] = 3221225472;
    v12 = *(_BYTE *)(a1 + 64);
    v10 = v7;
    objc_msgSend__sendSetupRequest_forContextRef_withCompletion_(WeakRetained, v8, (uint64_t)v3, v5, v9);

  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }

}

void sub_1CF289A18(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_signpost_id_t v7;
  const char *v8;
  uint64_t v9;
  const char *v10;
  APSigningContextStorage *v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  void *v18;
  NSObject *v19;
  uint64_t v20;
  NSObject *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  os_signpost_id_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a1 + 48))
  {
    APPerfLogForCategory(0x2AuLL);
    v2 = objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend_signpostID(*(void **)(a1 + 32), v3, v4, v5);
    if ((unint64_t)(v6 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
    {
      v7 = v6;
      if (os_signpost_enabled(v2))
      {
        LOWORD(v27) = 0;
        _os_signpost_emit_with_name_impl(&dword_1CF251000, v2, OS_SIGNPOST_INTERVAL_BEGIN, v7, "VerifyNewContext", (const char *)&unk_1CF384FF7, (uint8_t *)&v27, 2u);
      }
    }

    if (objc_msgSend__verifyContext_(*(void **)(a1 + 32), v8, *(_QWORD *)(a1 + 48), v9))
    {
      v11 = [APSigningContextStorage alloc];
      v12 = *(_QWORD *)(a1 + 48);
      objc_msgSend_poolName(*(void **)(a1 + 32), v13, v14, v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = (void *)objc_msgSend_initWithContextRef_poolName_stashed_(v11, v17, v12, (uint64_t)v16, *(unsigned __int8 *)(a1 + 56));

      APLogForCategory(0x2AuLL);
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        v20 = *(_QWORD *)(a1 + 32);
        v27 = 134217984;
        v28 = v20;
        _os_log_impl(&dword_1CF251000, v19, OS_LOG_TYPE_INFO, "Successfully set up context for authority %p", (uint8_t *)&v27, 0xCu);
      }

    }
    else
    {
      objc_msgSend__setFailureStateWithErrorAndDestroyContext_contextRef_(*(void **)(a1 + 32), v10, 7202, *(_QWORD *)(a1 + 48));
      v18 = 0;
    }
    APPerfLogForCategory(0x2AuLL);
    v21 = objc_claimAutoreleasedReturnValue();
    v25 = objc_msgSend_signpostID(*(void **)(a1 + 32), v22, v23, v24);
    if ((unint64_t)(v25 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
    {
      v26 = v25;
      if (os_signpost_enabled(v21))
      {
        LOWORD(v27) = 0;
        _os_signpost_emit_with_name_impl(&dword_1CF251000, v21, OS_SIGNPOST_INTERVAL_END, v26, "VerifyNewContext", " enableTelemetry=YES ", (uint8_t *)&v27, 2u);
      }
    }

  }
  else
  {
    v18 = 0;
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_1CF28A518(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CF28A54C(_QWORD *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id *v7;
  id v8;
  id WeakRetained;
  NSObject *v10;
  id v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  os_signpost_id_t v15;
  NSObject *v16;
  uint64_t v17;
  const char *v18;
  void *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v7 = (id *)(a1 + 6);
  v8 = a4;
  WeakRetained = objc_loadWeakRetained(v7);
  APPerfLogForCategory(0x2AuLL);
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = objc_loadWeakRetained(v7);
  v15 = objc_msgSend_signpostID(v11, v12, v13, v14);

  if (v15 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v10))
  {
    LOWORD(v20) = 0;
    _os_signpost_emit_with_name_impl(&dword_1CF251000, v10, OS_SIGNPOST_INTERVAL_END, v15, "ContextInit", " enableTelemetry=YES ", (uint8_t *)&v20, 2u);
  }

  APLogForCategory(0x2AuLL);
  v16 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
  {
    v17 = a1[4];
    v20 = 134217984;
    v21 = v17;
    _os_log_impl(&dword_1CF251000, v16, OS_LOG_TYPE_INFO, "Signing Authority %p received init response", (uint8_t *)&v20, 0xCu);
  }

  objc_msgSend__handleInitResponse_length_forContextRef_error_(WeakRetained, v18, a2, a3, a1[7], v8);
  v19 = (void *)objc_claimAutoreleasedReturnValue();

  (*(void (**)(void))(a1[5] + 16))();
}

void sub_1CF28ABB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CF28ABEC(_QWORD *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id *v7;
  id v8;
  id WeakRetained;
  NSObject *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_signpost_id_t v15;
  NSObject *v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v7 = (id *)(a1 + 6);
  v8 = a4;
  WeakRetained = objc_loadWeakRetained(v7);
  APPerfLogForCategory(0x2AuLL);
  v10 = objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend_signpostID(WeakRetained, v11, v12, v13);
  if ((unint64_t)(v14 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    v15 = v14;
    if (os_signpost_enabled(v10))
    {
      LOWORD(v20) = 0;
      _os_signpost_emit_with_name_impl(&dword_1CF251000, v10, OS_SIGNPOST_INTERVAL_END, v15, "ContextSetup", " enableTelemetry=YES ", (uint8_t *)&v20, 2u);
    }
  }

  APLogForCategory(0x2AuLL);
  v16 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
  {
    v17 = a1[4];
    v20 = 134217984;
    v21 = v17;
    _os_log_impl(&dword_1CF251000, v16, OS_LOG_TYPE_INFO, "Signing Authority %p finished with setup request", (uint8_t *)&v20, 0xCu);
  }

  objc_msgSend__handleSetupResponse_length_forContextRef_error_(WeakRetained, v18, a2, a3, a1[7], v8);
  v19 = a1[5];
  if (v19)
    (*(void (**)(void))(v19 + 16))();

}

void sub_1CF28BB8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CF28BBAC(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  void *v4;
  const char *v5;
  _QWORD v6[6];
  id v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = *(unsigned __int8 *)(a1 + 56);
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = sub_1CF28BC40;
  v6[3] = &unk_1E8C48C18;
  v4 = *(void **)(a1 + 40);
  v6[4] = *(_QWORD *)(a1 + 32);
  v6[5] = WeakRetained;
  v7 = v4;
  objc_msgSend__setupNewContext_withCompletion_(WeakRetained, v5, v3, (uint64_t)v6);

}

void sub_1CF28BC40(uint64_t a1, void *a2)
{
  id v4;
  NSObject *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_signpost_id_t v10;
  uint8_t v11[16];

  v4 = a2;
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 16), a2);
  APPerfLogForCategory(0x2AuLL);
  v5 = objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend_signpostID(*(void **)(a1 + 40), v6, v7, v8);
  if ((unint64_t)(v9 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    v10 = v9;
    if (os_signpost_enabled(v5))
    {
      *(_WORD *)v11 = 0;
      _os_signpost_emit_with_name_impl(&dword_1CF251000, v5, OS_SIGNPOST_INTERVAL_END, v10, "TotalSetupTime", " enableTelemetry=YES ", v11, 2u);
    }
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
}

void sub_1CF28BE0C()
{
  APUnfairRecursiveLock *v0;
  void *v1;

  v0 = objc_alloc_init(APUnfairRecursiveLock);
  v1 = (void *)qword_1ED2BC748;
  qword_1ED2BC748 = (uint64_t)v0;

}

void sub_1CF28C178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1CF28C190(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1CF28C1A0(uint64_t a1)
{

}

void sub_1CF28C1A8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  char v12;
  const char *v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  id v23;

  v23 = a2;
  v5 = a3;
  objc_msgSend_assignedContexts(APSigningContextStorage, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend_containsObject_(v9, v10, (uint64_t)v23, v11);

  objc_msgSend_objectAtIndexedSubscript_(v5, v13, 1, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend_BOOLValue(v15, v16, v17, v18))
    goto LABEL_6;
  if (*(_BYTE *)(a1 + 40))
    v12 = 0;

  if ((v12 & 1) == 0)
  {
    v20 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
    objc_msgSend_reconstructFromStorage_contextRef_(APSigningContextStorage, v19, (uint64_t)v5, (uint64_t)v23);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_addObject_(v20, v21, (uint64_t)v15, v22);
LABEL_6:

  }
}

void sub_1CF28C374(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  int v7;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t buf[4];
  const char *v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v11 = objc_msgSend_longLongValue(a2, (const char *)a2, a3, a4);
  v7 = objc_msgSend_FPDIDestroyContext_(APFPDIWrapper, v5, (uint64_t)&v11, v6);
  if (v7 != -44654 && v7 != 0)
  {
    APLogForCategory(0x2AuLL);
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      v10 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 136643331;
      v13 = "+[APSigningContextStorage destroyAndClearAllContextsForPool:]_block_invoke";
      v14 = 2048;
      v15 = v11;
      v16 = 2112;
      v17 = v10;
      _os_log_impl(&dword_1CF251000, v9, OS_LOG_TYPE_ERROR, "[%{sensitive}s]: Failed to destroy context %llu for pool %@", buf, 0x20u);
    }

  }
}

void sub_1CF28C57C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  const char *v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  const char *v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  int v28;
  NSObject *v29;
  uint64_t v30;
  uint8_t buf[4];
  const char *v32;
  __int16 v33;
  uint64_t v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  objc_msgSend_objectAtIndexedSubscript_(v6, v7, 0, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_launchID(APSigningContextStorage, v10, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_isEqualToString_(v9, v14, (uint64_t)v13, v15))
  {

LABEL_4:
    objc_msgSend_setObject_forKey_(*(void **)(a1 + 32), v18, (uint64_t)v6, (uint64_t)v5);
    goto LABEL_5;
  }
  objc_msgSend_objectAtIndexedSubscript_(v6, v16, 1, v17);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = objc_msgSend_BOOLValue(v19, v20, v21, v22);

  if ((v23 & 1) != 0)
    goto LABEL_4;
  v30 = objc_msgSend_longLongValue(v5, v18, v24, v25);
  v28 = objc_msgSend_FPDIDestroyContext_(APFPDIWrapper, v26, (uint64_t)&v30, v27);
  if (v28 != -44654 && v28)
  {
    APLogForCategory(0x2AuLL);
    v29 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136643075;
      v32 = "+[APSigningContextStorage destroyAndClearAllPreviousLaunchContextsForPool:]_block_invoke";
      v33 = 2048;
      v34 = v30;
      _os_log_impl(&dword_1CF251000, v29, OS_LOG_TYPE_ERROR, "[%{sensitive}s]: Failed to destroy context %llu", buf, 0x16u);
    }

  }
LABEL_5:

}

uint64_t sub_1CF28C79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1E0DE7D20](APSigningContextStorage, sel_destroyAndClearAllPreviousLaunchContextsForPool_, a2, a4);
}

void sub_1CF28C7EC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v5;

  objc_msgSend_array(MEMORY[0x1E0C99DE8], a2, a3, a4);
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = (void *)qword_1ED2BC6F0;
  qword_1ED2BC6F0 = v4;

}

id sub_1CF28CE54(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD v20[4];
  id v21;
  id v22;

  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99E20];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_setWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = sub_1CF28CF1C;
  v20[3] = &unk_1E8C48DA0;
  v13 = v12;
  v21 = v13;
  v22 = v4;
  v14 = v4;
  objc_msgSend_enumerateObjectsUsingBlock_(a1, v15, (uint64_t)v20, v16);
  v17 = v22;
  v18 = v13;

  return v18;
}

void sub_1CF28CF1C(uint64_t a1)
{
  void *v1;
  const char *v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)(a1 + 32);
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObject_(v1, v2, (uint64_t)v4, v3);

}

id sub_1CF28CF60(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD v20[4];
  id v21;
  id v22;

  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99E20];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_setWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = sub_1CF28D02C;
  v20[3] = &unk_1E8C48DC8;
  v22 = v4;
  v13 = v12;
  v21 = v13;
  v14 = v4;
  objc_msgSend_enumerateObjectsUsingBlock_(a1, v15, (uint64_t)v20, v16);
  v17 = v21;
  v18 = v13;

  return v18;
}

void sub_1CF28D02C(uint64_t a1)
{
  char *v2;
  uint64_t v3;
  char *v4;

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  v2 = (char *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    v4 = v2;
    objc_msgSend_addObject_(*(void **)(a1 + 32), v2, (uint64_t)v2, v3);
    v2 = v4;
  }

}

uint64_t ExtendedUUID.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CF372038();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ExtendedUUID.addendum.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ExtendedUUID() + 20));
}

uint64_t type metadata accessor for ExtendedUUID()
{
  uint64_t result;

  result = qword_1ED2BBEB0;
  if (!qword_1ED2BBEB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ExtendedUUID.base64.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v12 = sub_1CF2A2CB8();
  v13 = v1;
  v11 = bswap64(*(_QWORD *)(v0 + *(int *)(type metadata accessor for ExtendedUUID() + 20)));
  v2 = sub_1CF28DCB4((uint64_t)&v11, (uint64_t)&v12);
  v4 = v3;
  sub_1CF371F84();
  sub_1CF28DD6C(v2, v4);
  v5 = v12;
  v6 = v13;
  v7 = (void *)sub_1CF371F60();
  sub_1CF28DD6C(v5, v6);
  v8 = objc_msgSend(v7, sel_base64FilenameSafeEncoded);

  v9 = sub_1CF37214C();
  return v9;
}

uint64_t ExtendedUUID.string.getter()
{
  uint64_t v1;

  type metadata accessor for ExtendedUUID();
  v1 = sub_1CF37247C();
  sub_1CF3721C4();
  sub_1CF372008();
  sub_1CF3721C4();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t ExtendedUUID.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1CF37202C();
  v2 = sub_1CF28D2C8();
  result = type metadata accessor for ExtendedUUID();
  *(_QWORD *)(a1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t sub_1CF28D2C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v0 = sub_1CF37229C();
  *(_QWORD *)(v0 + 16) = 8;
  *(_QWORD *)(v0 + 32) = 0;
  if (SecRandomCopyBytes((SecRandomRef)*MEMORY[0x1E0CD7000], 8uLL, (void *)(v0 + 32)))
  {
    swift_bridgeObjectRelease();
    v3 = 0;
    MEMORY[0x1D17CC38C](&v3, 8);
    return v3;
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 32);
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t ExtendedUUID.init(uuid:addendum:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = sub_1CF372038();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for ExtendedUUID();
  *(_QWORD *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t ExtendedUUID.init(string:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  void (*v23)(char *, char *, uint64_t);
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned __int8 v33;
  BOOL v34;
  unint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  unsigned int v38;
  uint64_t v39;
  unsigned __int8 *v40;
  unsigned int v41;
  unsigned __int8 v42;
  unint64_t v43;
  uint64_t v44;
  unsigned __int8 *v45;
  unsigned int v46;
  char v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v50 = a3;
  v5 = sub_1CF263D78((uint64_t *)&unk_1ED2BC158);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CF372038();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ExtendedUUID();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v16);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = a1;
  v54 = a2;
  v51 = 46;
  v52 = 0xE100000000000000;
  sub_1CF28DE8C();
  v19 = (_QWORD *)sub_1CF372380();
  swift_bridgeObjectRelease();
  if (v19[2] != 2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  sub_1CF371FFC();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1CF28DED0((uint64_t)v8);
LABEL_5:
    v20 = 1;
    v21 = v50;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v21, v20, 1, v14);
  }
  v23 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v23(v13, v8, v9);
  if (!v19[2])
  {
    __break(1u);
LABEL_66:
    swift_bridgeObjectRelease();
LABEL_67:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_5;
  }
  v49 = v23;
  v25 = v19[4];
  v24 = v19[5];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  v26 = HIBYTE(v24) & 0xF;
  v27 = v25 & 0xFFFFFFFFFFFFLL;
  if ((v24 & 0x2000000000000000) != 0)
    v28 = HIBYTE(v24) & 0xF;
  else
    v28 = v25 & 0xFFFFFFFFFFFFLL;
  if (!v28)
    goto LABEL_66;
  if ((v24 & 0x1000000000000000) != 0)
  {
    v30 = sub_1CF28E394(v25, v24, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1CF28E484);
    v32 = v47;
    goto LABEL_44;
  }
  if ((v24 & 0x2000000000000000) == 0)
  {
    if ((v25 & 0x1000000000000000) != 0)
      v29 = (unsigned __int8 *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v29 = (unsigned __int8 *)sub_1CF3723F8();
    v30 = (unint64_t)sub_1CF28E484(v29, v27, 10);
    v32 = v31 & 1;
LABEL_44:
    swift_bridgeObjectRelease();
    if ((v32 & 1) == 0)
    {
      v49(v18, v13, v9);
      *(_QWORD *)&v18[*(int *)(v14 + 20)] = v30;
      v21 = v50;
      sub_1CF28DF24((uint64_t)v18, v50);
      v20 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v21, v20, 1, v14);
    }
    goto LABEL_67;
  }
  v53 = v25;
  v54 = v24 & 0xFFFFFFFFFFFFFFLL;
  if (v25 == 43)
  {
    if (v26)
    {
      if (v26 != 1 && (BYTE1(v25) - 48) <= 9u)
      {
        v30 = (BYTE1(v25) - 48);
        if (v26 == 2)
          goto LABEL_43;
        if ((BYTE2(v25) - 48) <= 9u)
        {
          v30 = 10 * (BYTE1(v25) - 48) + (BYTE2(v25) - 48);
          v36 = v26 - 3;
          if (v36)
          {
            v37 = (unsigned __int8 *)&v53 + 3;
            while (1)
            {
              v38 = *v37 - 48;
              if (v38 > 9)
                goto LABEL_40;
              if (!is_mul_ok(v30, 0xAuLL))
                goto LABEL_40;
              v34 = __CFADD__(10 * v30, v38);
              v30 = 10 * v30 + v38;
              if (v34)
                goto LABEL_40;
              v32 = 0;
              ++v37;
              if (!--v36)
                goto LABEL_44;
            }
          }
          goto LABEL_43;
        }
      }
      goto LABEL_40;
    }
  }
  else
  {
    if (v25 != 45)
    {
      if (v26 && (v25 - 48) <= 9u)
      {
        v30 = (v25 - 48);
        if (v26 == 1)
          goto LABEL_43;
        if ((BYTE1(v25) - 48) <= 9u)
        {
          v30 = 10 * (v25 - 48) + (BYTE1(v25) - 48);
          v39 = v26 - 2;
          if (v39)
          {
            v40 = (unsigned __int8 *)&v53 + 2;
            while (1)
            {
              v41 = *v40 - 48;
              if (v41 > 9)
                goto LABEL_40;
              if (!is_mul_ok(v30, 0xAuLL))
                goto LABEL_40;
              v34 = __CFADD__(10 * v30, v41);
              v30 = 10 * v30 + v41;
              if (v34)
                goto LABEL_40;
              v32 = 0;
              ++v40;
              if (!--v39)
                goto LABEL_44;
            }
          }
          goto LABEL_43;
        }
      }
LABEL_40:
      v30 = 0;
LABEL_41:
      v32 = 1;
      goto LABEL_44;
    }
    if (v26)
    {
      if (v26 != 1)
      {
        v33 = BYTE1(v25) - 48;
        if ((BYTE1(v25) - 48) <= 9u)
        {
          v30 = 0;
          v34 = v33 == 0;
          v35 = -(uint64_t)v33;
          if (!v34)
            goto LABEL_41;
          if (v26 == 2)
          {
            v32 = 0;
            v30 = v35;
            goto LABEL_44;
          }
          v42 = BYTE2(v25) - 48;
          if ((BYTE2(v25) - 48) <= 9u && is_mul_ok(v35, 0xAuLL))
          {
            v43 = 10 * v35;
            v30 = v43 - v42;
            if (v43 >= v42)
            {
              v44 = v26 - 3;
              if (v44)
              {
                v45 = (unsigned __int8 *)&v53 + 3;
                while (1)
                {
                  v46 = *v45 - 48;
                  if (v46 > 9)
                    goto LABEL_40;
                  if (!is_mul_ok(v30, 0xAuLL))
                    goto LABEL_40;
                  v34 = 10 * v30 >= v46;
                  v30 = 10 * v30 - v46;
                  if (!v34)
                    goto LABEL_40;
                  v32 = 0;
                  ++v45;
                  if (!--v44)
                    goto LABEL_44;
                }
              }
LABEL_43:
              v32 = 0;
              goto LABEL_44;
            }
          }
        }
      }
      goto LABEL_40;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t ExtendedUUID.hash(into:)()
{
  sub_1CF372038();
  sub_1CF28E348(&qword_1EFB8CF28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1CF372128();
  type metadata accessor for ExtendedUUID();
  return sub_1CF372530();
}

BOOL static ExtendedUUID.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((sub_1CF372014() & 1) == 0)
    return 0;
  v4 = type metadata accessor for ExtendedUUID();
  return *(_QWORD *)(a1 + *(int *)(v4 + 20)) == *(_QWORD *)(a2 + *(int *)(v4 + 20));
}

uint64_t ExtendedUUID.hashValue.getter()
{
  sub_1CF372518();
  sub_1CF372038();
  sub_1CF28E348(&qword_1EFB8CF28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1CF372128();
  type metadata accessor for ExtendedUUID();
  sub_1CF372530();
  return sub_1CF37253C();
}

uint64_t sub_1CF28D9E4()
{
  sub_1CF372518();
  sub_1CF372038();
  sub_1CF28E348(&qword_1EFB8CF28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1CF372128();
  sub_1CF372530();
  return sub_1CF37253C();
}

uint64_t sub_1CF28DA6C()
{
  sub_1CF372038();
  sub_1CF28E348(&qword_1EFB8CF28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1CF372128();
  return sub_1CF372530();
}

uint64_t sub_1CF28DADC()
{
  sub_1CF372518();
  sub_1CF372038();
  sub_1CF28E348(&qword_1EFB8CF28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1CF372128();
  sub_1CF372530();
  return sub_1CF37253C();
}

BOOL sub_1CF28DB60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_1CF372014() & 1) != 0 && *(_QWORD *)(a1 + *(int *)(a3 + 20)) == *(_QWORD *)(a2 + *(int *)(a3 + 20));
}

uint64_t ExtendedUUID.debugDescription.getter()
{
  uint64_t v1;

  v1 = sub_1CF372008();
  sub_1CF3721C4();
  type metadata accessor for ExtendedUUID();
  sub_1CF37247C();
  sub_1CF3721C4();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1CF28DC30()
{
  uint64_t v1;

  v1 = sub_1CF372008();
  sub_1CF3721C4();
  sub_1CF37247C();
  sub_1CF3721C4();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1CF28DCB4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[5];

  v8[3] = MEMORY[0x1E0DEAC20];
  v8[4] = MEMORY[0x1E0CB1AA8];
  v8[0] = a1;
  v8[1] = a2;
  v2 = sub_1CF263DF4(v8, MEMORY[0x1E0DEAC20]);
  v3 = (_BYTE *)*v2;
  if (*v2 && (v4 = (_BYTE *)v2[1], v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      v6 = sub_1CF28EF8C(v3, v4);
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      v6 = sub_1CF28F04C((uint64_t)v3, (uint64_t)v4);
    }
    else
    {
      v6 = sub_1CF28F0C4((uint64_t)v3, (uint64_t)v4);
    }
  }
  else
  {
    v6 = 0;
  }
  sub_1CF263E18((uint64_t)v8);
  return v6;
}

uint64_t sub_1CF28DD6C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1CF28DDB0()
{
  sub_1CF372518();
  sub_1CF372524();
  return sub_1CF37253C();
}

uint64_t sub_1CF28DDF4()
{
  return sub_1CF372524();
}

uint64_t sub_1CF28DE1C()
{
  sub_1CF372518();
  sub_1CF372524();
  return sub_1CF37253C();
}

BOOL sub_1CF28DE5C(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_1CF28DE70@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1CF28DE80(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

unint64_t sub_1CF28DE8C()
{
  unint64_t result;

  result = qword_1ED2BBE30;
  if (!qword_1ED2BBE30)
  {
    result = MEMORY[0x1D17CC2F0](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED2BBE30);
  }
  return result;
}

uint64_t sub_1CF28DED0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CF263D78((uint64_t *)&unk_1ED2BC158);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned __int8 *sub_1CF28DF10(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1CF28E700(a1, a2, a3);
}

uint64_t sub_1CF28DF24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ExtendedUUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CF28DF68()
{
  return sub_1CF28E348(&qword_1EFB8CF30, (uint64_t (*)(uint64_t))type metadata accessor for ExtendedUUID, (uint64_t)&protocol conformance descriptor for ExtendedUUID);
}

uint64_t *initializeBufferWithCopyOfBuffer for ExtendedUUID(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1CF372038();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for ExtendedUUID(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CF372038();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for ExtendedUUID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1CF372038();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for ExtendedUUID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1CF372038();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for ExtendedUUID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1CF372038();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ExtendedUUID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1CF372038();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtendedUUID()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CF28E1CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CF372038();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ExtendedUUID()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CF28E214(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CF372038();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1CF28E254()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CF372038();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for APMetricPurposeType()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_1EFB8CF38)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EFB8CF38);
  }
}

uint64_t sub_1CF28E31C()
{
  return sub_1CF28E348((unint64_t *)&unk_1EFB8CF40, (uint64_t (*)(uint64_t))type metadata accessor for APMetricPurposeType, (uint64_t)&unk_1CF376B88);
}

uint64_t sub_1CF28E348(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1D17CC2F0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CF28E388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CF28E394(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1CF28E700);
}

uint64_t sub_1CF28E394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v15 = a1;
  v16 = a2;
  swift_bridgeObjectRetain();
  v7 = sub_1CF372224();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = &v15;
    goto LABEL_7;
  }
  v7 = sub_1CF28E97C();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (_QWORD *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (_QWORD *)sub_1CF3723F8();
  }
LABEL_7:
  v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1CF28E484(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  unint64_t v13;
  unsigned __int8 v14;
  BOOL v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unint64_t v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              if (!is_mul_ok(v9, a3))
                return 0;
              v13 = v9 * a3;
              v14 = v11 + v12;
              v15 = v13 >= v14;
              v9 = v13 - v14;
              if (!v15)
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v25 = a3 + 48;
      v26 = a3 + 55;
      v27 = a3 + 87;
      if (a3 > 10)
      {
        v25 = 58;
      }
      else
      {
        v27 = 97;
        v26 = 65;
      }
      if (result)
      {
        v28 = 0;
        do
        {
          v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27)
                return 0;
              v30 = -87;
            }
            else
            {
              v30 = -55;
            }
          }
          else
          {
            v30 = -48;
          }
          if (!is_mul_ok(v28, a3))
            return 0;
          v31 = v28 * a3;
          v32 = v29 + v30;
          v15 = __CFADD__(v31, v32);
          v28 = v31 + v32;
          if (v15)
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v16 = a2 - 1;
  if (a2 == 1)
    return 0;
  v17 = a3 + 48;
  v18 = a3 + 55;
  v19 = a3 + 87;
  if (a3 > 10)
  {
    v17 = 58;
  }
  else
  {
    v19 = 97;
    v18 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v20 = result + 1;
  do
  {
    v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19)
          return 0;
        v22 = -87;
      }
      else
      {
        v22 = -55;
      }
    }
    else
    {
      v22 = -48;
    }
    if (!is_mul_ok(v9, a3))
      return 0;
    v23 = v9 * a3;
    v24 = v21 + v22;
    v15 = __CFADD__(v23, v24);
    v9 = v23 + v24;
    if (v15)
      return 0;
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_1CF28E700(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1CF28E97C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1CF372230();
  v4 = sub_1CF28E9F8(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1CF28E9F8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1CF28EB3C(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1CF28EC28(v9, 0);
      v12 = sub_1CF28EC8C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1D17CB51C](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1D17CB51CLL);
LABEL_9:
      sub_1CF3723F8();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1D17CB51C]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1CF28EB3C(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1CF28EE9C(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1CF28EE9C(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1CF3721F4();
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CF28EC28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1CF263D78(&qword_1ED2BC218);
  v4 = (_QWORD *)swift_allocObject();
  v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unint64_t sub_1CF28EC8C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1CF28EE9C(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_1CF372200();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_1CF3723F8();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1CF28EE9C(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_1CF3721DC();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1CF28EE9C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1CF37220C();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1D17CB564](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

_BYTE *sub_1CF28EF18@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_1CF28EF8C(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_1CF28F04C((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_1CF28F0C4((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1CF28EF8C(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_1CF28F04C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1CF371EB8();
  swift_allocObject();
  result = sub_1CF371EAC();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1CF371F54();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1CF28F0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1CF371EB8();
  swift_allocObject();
  result = sub_1CF371EAC();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1CF28F144(uint64_t a1)
{
  _QWORD *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  unint64_t v10;

  v9 = sub_1CF263D78(&qword_1EFB8CFB0);
  v10 = sub_1CF28F1DC();
  v8[0] = a1;
  v2 = sub_1CF263DF4(v8, v9);
  v3 = (_BYTE *)(*v2 + 32);
  v4 = &v3[*(_QWORD *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_1CF28EF18(v3, v4, &v7);
  v5 = v7;
  sub_1CF263E18((uint64_t)v8);
  return v5;
}

unint64_t sub_1CF28F1DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFB8CFB8;
  if (!qword_1EFB8CFB8)
  {
    v1 = sub_1CF28F228(&qword_1EFB8CFB0);
    result = MEMORY[0x1D17CC2F0](MEMORY[0x1E0CB1B08], v1);
    atomic_store(result, (unint64_t *)&qword_1EFB8CFB8);
  }
  return result;
}

uint64_t sub_1CF28F228(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1D17CC2E4](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t static SystemInfo.osIdentifier.getter()
{
  return 105;
}

uint64_t static SystemInfo.osName.getter()
{
  return 5459817;
}

void static SystemInfo.longBuildVersion.getter()
{
  id v0;
  void *v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_kBuildVersionString);
  v1 = (void *)MGGetStringAnswer();

  if (v1)
  {
    sub_1CF37214C();

  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1CF28F344(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  _BOOL4 v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  unsigned int v21;
  _QWORD v22[4];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = sub_1CF371EA0();
  v26 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29, v5);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[2] = a1 & 0xFFFFFFFFFFFFLL;
  v22[3] = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) != 0)
    v8 = HIBYTE(a2) & 0xF;
  else
    v8 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v8)
    return 0;
  v22[1] = v2;
  v9 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0)
    LOBYTE(v9) = 1;
  v10 = 4 << v9;
  v24 = a2 & 0xFFFFFFFFFFFFFFLL;
  v25 = 4 * v8;
  v23 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v11 = 15;
  while (1)
  {
    v12 = v11 & 0xC;
    v13 = (v11 & 1) == 0 || v12 == v10;
    v14 = v13;
    if (v13)
      break;
    result = v11;
    if (v11 >> 16 >= v8)
      goto LABEL_53;
LABEL_24:
    if ((a2 & 0x1000000000000000) != 0)
    {
      sub_1CF3723E0();
    }
    else
    {
      if ((a2 & 0x2000000000000000) != 0)
      {
        v27 = a1;
        v28 = v24;
      }
      else if ((a1 & 0x1000000000000000) == 0)
      {
        sub_1CF3723F8();
      }
      sub_1CF372404();
    }
    sub_1CF371E88();
    v16 = sub_1CF371E94();
    result = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v7, v29);
    if ((v16 & 1) != 0)
      return v11;
    if (v14)
    {
      if (v12 == v10)
      {
        result = sub_1CF28EE9C(v11, a1, a2);
        v11 = result;
        if (v8 <= result >> 16)
          goto LABEL_55;
      }
      else if (v8 <= v11 >> 16)
      {
        goto LABEL_55;
      }
      if ((v11 & 1) == 0)
        v11 = v11 & 0xC | sub_1CF28FFB4(v11, a1, a2) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
    else if (v8 <= v11 >> 16)
    {
      goto LABEL_54;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      v11 = sub_1CF372188();
    }
    else
    {
      v17 = v11 >> 16;
      if ((a2 & 0x2000000000000000) != 0)
      {
        v27 = a1;
        v28 = v24;
        v19 = *((unsigned __int8 *)&v27 + v17);
      }
      else
      {
        v18 = v23;
        if ((a1 & 0x1000000000000000) == 0)
          v18 = sub_1CF3723F8();
        v19 = *(unsigned __int8 *)(v18 + v17);
      }
      v20 = (char)v19;
      v21 = __clz(v19 ^ 0xFF) - 24;
      if (v20 >= 0)
        LOBYTE(v21) = 1;
      v11 = ((v17 + v21) << 16) | 5;
    }
    if (v25 == v11 >> 14)
      return 0;
  }
  result = v11;
  if (v12 == v10)
    result = sub_1CF28EE9C(v11, a1, a2);
  if (result >> 16 < v8)
  {
    if ((result & 1) == 0)
      sub_1CF28FFB4(result, a1, a2);
    goto LABEL_24;
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
  return result;
}

unint64_t sub_1CF28F62C(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  _BOOL4 v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  unsigned int v21;
  _QWORD v22[4];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = sub_1CF371EA0();
  v26 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29, v5);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[2] = a1 & 0xFFFFFFFFFFFFLL;
  v22[3] = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) != 0)
    v8 = HIBYTE(a2) & 0xF;
  else
    v8 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v8)
    return 0;
  v22[1] = v2;
  v9 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0)
    LOBYTE(v9) = 1;
  v10 = 4 << v9;
  v24 = a2 & 0xFFFFFFFFFFFFFFLL;
  v25 = 4 * v8;
  v23 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v11 = 15;
  while (1)
  {
    v12 = v11 & 0xC;
    v13 = (v11 & 1) == 0 || v12 == v10;
    v14 = v13;
    if (v13)
      break;
    result = v11;
    if (v11 >> 16 >= v8)
      goto LABEL_53;
LABEL_24:
    if ((a2 & 0x1000000000000000) != 0)
    {
      sub_1CF3723E0();
    }
    else
    {
      if ((a2 & 0x2000000000000000) != 0)
      {
        v27 = a1;
        v28 = v24;
      }
      else if ((a1 & 0x1000000000000000) == 0)
      {
        sub_1CF3723F8();
      }
      sub_1CF372404();
    }
    sub_1CF371E7C();
    v16 = sub_1CF371E94();
    result = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v7, v29);
    if ((v16 & 1) == 0)
      return v11;
    if (v14)
    {
      if (v12 == v10)
      {
        result = sub_1CF28EE9C(v11, a1, a2);
        v11 = result;
        if (v8 <= result >> 16)
          goto LABEL_55;
      }
      else if (v8 <= v11 >> 16)
      {
        goto LABEL_55;
      }
      if ((v11 & 1) == 0)
        v11 = v11 & 0xC | sub_1CF28FFB4(v11, a1, a2) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
    else if (v8 <= v11 >> 16)
    {
      goto LABEL_54;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      v11 = sub_1CF372188();
    }
    else
    {
      v17 = v11 >> 16;
      if ((a2 & 0x2000000000000000) != 0)
      {
        v27 = a1;
        v28 = v24;
        v19 = *((unsigned __int8 *)&v27 + v17);
      }
      else
      {
        v18 = v23;
        if ((a1 & 0x1000000000000000) == 0)
          v18 = sub_1CF3723F8();
        v19 = *(unsigned __int8 *)(v18 + v17);
      }
      v20 = (char)v19;
      v21 = __clz(v19 ^ 0xFF) - 24;
      if (v20 >= 0)
        LOBYTE(v21) = 1;
      v11 = ((v17 + v21) << 16) | 5;
    }
    if (v25 == v11 >> 14)
      return 0;
  }
  result = v11;
  if (v12 == v10)
    result = sub_1CF28EE9C(v11, a1, a2);
  if (result >> 16 < v8)
  {
    if ((result & 1) == 0)
      sub_1CF28FFB4(result, a1, a2);
    goto LABEL_24;
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
  return result;
}

uint64_t static SystemInfo.bundleIdentifier.getter()
{
  id v0;
  id v1;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (!v1)
    return 0;
  v2 = sub_1CF37214C();

  return v2;
}

uint64_t static SystemInfo.locale.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1CF37205C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CF372050();
  v5 = sub_1CF372044();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v5;
}

uint64_t sub_1CF28FB7C()
{
  uint64_t result;

  result = sub_1CF28FB9C();
  byte_1ED2BB3E0 = result & 1;
  return result;
}

uint64_t sub_1CF28FB9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  void (*v15)(char *, uint64_t);
  void *v16;
  id v17;
  void *v18;
  unsigned int v19;
  id v20;
  void *v21;
  unsigned __int8 v22;
  void *v23;
  uint64_t v25;

  v0 = sub_1CF371F3C();
  v1 = *(_QWORD *)(v0 - 8);
  v3 = MEMORY[0x1E0C80A78](v0, v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v3, v6);
  v9 = (char *)&v25 - v8;
  MEMORY[0x1E0C80A78](v7, v10);
  v12 = (char *)&v25 - v11;
  sub_1CF371EE8();
  v13 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v14 = objc_msgSend(v13, sel_bundleIdentifier);

  if (v14)
  {
    sub_1CF37214C();

  }
  sub_1CF371F00();
  swift_bridgeObjectRelease();
  v15 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15(v5, v0);
  sub_1CF371F0C();
  v15(v9, v0);
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_defaultManager);
  sub_1CF371F18();
  v18 = (void *)sub_1CF372140();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v17, sel_fileExistsAtPath_, v18);

  if ((v19 & 1) == 0)
  {
    v20 = objc_msgSend(v16, sel_defaultManager);
    sub_1CF371F18();
    v21 = (void *)sub_1CF372140();
    swift_bridgeObjectRelease();
    v22 = objc_msgSend(v20, sel_createFileAtPath_contents_attributes_, v21, 0, 0);

    if ((v22 & 1) == 0)
    {
      sub_1CF3722D8();
      sub_1CF290438(0, (unint64_t *)&qword_1ED2BBE60);
      v23 = (void *)sub_1CF37235C();
      sub_1CF372068();

    }
  }
  v15(v12, v0);
  return v19 ^ 1;
}

uint64_t static SystemInfo.firstRunSinceReboot.getter()
{
  if (qword_1ED2BBDC0 != -1)
    swift_once();
  return byte_1ED2BB3E0;
}

id SystemInfo.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SystemInfo.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SystemInfo();
  return objc_msgSendSuper2(&v2, sel_init);
}

id SystemInfo.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SystemInfo();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1CF28FFB4(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  _QWORD v13[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v10 = v5 - 1;
            v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          v5 = v10;
        }
        return v5 << 16;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 != (a2 & 0xFFFFFFFFFFFFLL))
        {
          do
LABEL_9:
            v7 = *(_BYTE *)(v6 + v5--) & 0xC0;
          while (v7 == 128);
          ++v5;
        }
      }
      else
      {
        v12 = result >> 16;
        v6 = sub_1CF3723F8();
        v5 = v12;
        if (v12 != v9)
          goto LABEL_9;
      }
      return v5 << 16;
    }
    v8 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v8 = a2 & 0xFFFFFFFFFFFFLL;
    if (v5 != v8)
      return sub_1CF3723D4();
  }
  return result;
}

void _s12APFoundation10SystemInfoC17shortBuildVersionSSSgvgZ_0()
{
  id v0;
  void *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v0 = objc_msgSend((id)objc_opt_self(), sel_kBuildVersionString);
  v1 = (void *)MGGetStringAnswer();

  if (v1)
  {
    v2 = sub_1CF37214C();
    v4 = v3;

    swift_bridgeObjectRetain();
    sub_1CF28F344(v2, v4);
    v6 = v5;
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
      sub_1CF3721B8();
      v7 = sub_1CF372230();
      v9 = v8;
      v11 = v10;
      v13 = v12;
      swift_bridgeObjectRelease();
      MEMORY[0x1D17CB4F8](v7, v9, v11, v13);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

unint64_t _s12APFoundation10SystemInfoC9modelTypeSSvgZ_0()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  void *v5;
  unsigned int v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1CF290438(0, &qword_1ED2BC2A0);
  sub_1CF263D78(&qword_1ED2BC230);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1CF376C00;
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 64) = sub_1CF290470();
  *(_QWORD *)(v0 + 32) = 0xD000000000000025;
  *(_QWORD *)(v0 + 40) = 0x80000001CF380C60;
  v1 = (void *)sub_1CF3722CC();
  _s12APFoundation10SystemInfoC11deviceModelSSvgZ_0();
  v2 = sub_1CF372164();
  v4 = v3;
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1CF372140();
  v6 = objc_msgSend(v1, sel_evaluateWithObject_, v5);

  if (!v6 || (swift_bridgeObjectRetain(), sub_1CF28F62C(v2, v4), v8 = v7, swift_bridgeObjectRelease(), (v8 & 1) != 0))
  {
    sub_1CF3722F0();
    sub_1CF290438(0, (unint64_t *)&qword_1ED2BBE60);
    v16 = sub_1CF37235C();
    sub_1CF372068();

    v1 = (void *)v16;
  }
  else
  {
    v9 = sub_1CF372230();
    v11 = v10;
    v13 = v12;
    v15 = v14;
    swift_bridgeObjectRelease();
    v2 = MEMORY[0x1D17CB4F8](v9, v11, v13, v15);
    swift_bridgeObjectRelease();
  }

  return v2;
}

uint64_t type metadata accessor for SystemInfo()
{
  return objc_opt_self();
}

uint64_t sub_1CF290438(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_1CF290470()
{
  unint64_t result;

  result = qword_1ED2BC220;
  if (!qword_1ED2BC220)
  {
    result = MEMORY[0x1D17CC2F0](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED2BC220);
  }
  return result;
}

uint64_t WorkOrderFlags.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

APFoundation::WorkOrderFlags __swiftcall WorkOrderFlags.init(rawValue:)(APFoundation::WorkOrderFlags rawValue)
{
  APFoundation::WorkOrderFlags *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static WorkOrderFlags.useTransaction.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

unint64_t sub_1CF2904D4()
{
  unint64_t result;

  result = qword_1EFB8D080;
  if (!qword_1EFB8D080)
  {
    result = MEMORY[0x1D17CC2F0](&protocol conformance descriptor for WorkOrderFlags, &type metadata for WorkOrderFlags);
    atomic_store(result, (unint64_t *)&qword_1EFB8D080);
  }
  return result;
}

unint64_t sub_1CF29051C()
{
  unint64_t result;

  result = qword_1EFB8D088;
  if (!qword_1EFB8D088)
  {
    result = MEMORY[0x1D17CC2F0](&protocol conformance descriptor for WorkOrderFlags, &type metadata for WorkOrderFlags);
    atomic_store(result, (unint64_t *)&qword_1EFB8D088);
  }
  return result;
}

_QWORD *sub_1CF290560@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1CF290570()
{
  unint64_t result;

  result = qword_1EFB8D090;
  if (!qword_1EFB8D090)
  {
    result = MEMORY[0x1D17CC2F0](&protocol conformance descriptor for WorkOrderFlags, &type metadata for WorkOrderFlags);
    atomic_store(result, (unint64_t *)&qword_1EFB8D090);
  }
  return result;
}

unint64_t sub_1CF2905B8()
{
  unint64_t result;

  result = qword_1EFB8D098;
  if (!qword_1EFB8D098)
  {
    result = MEMORY[0x1D17CC2F0](&protocol conformance descriptor for WorkOrderFlags, &type metadata for WorkOrderFlags);
    atomic_store(result, (unint64_t *)&qword_1EFB8D098);
  }
  return result;
}

void sub_1CF2905FC(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_1CF290604@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1CF290618@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_1CF29062C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1CF290640(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_1CF290670@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1CF29069C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_1CF2906C0(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1CF2906D4(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_1CF2906E8(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1CF2906FC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1CF290710(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1CF290724(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1CF290738(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1CF29074C()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_1CF29075C()
{
  return sub_1CF37238C();
}

_QWORD *sub_1CF290774(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

ValueMetadata *type metadata accessor for WorkOrderFlags()
{
  return &type metadata for WorkOrderFlags;
}

uint64_t sub_1CF29079C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_1CF2907F4()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for APFileManager()
{
  return objc_opt_self();
}

uint64_t ConfigurableIntBucketStrategy.__allocating_init(configurationStore:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1CF290894(a1, v2 + 16);
  return v2;
}

uint64_t ConfigurableIntBucketStrategy.init(configurationStore:)(__int128 *a1)
{
  uint64_t v1;

  sub_1CF290894(a1, v1 + 16);
  return v1;
}

uint64_t sub_1CF290894(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t ConfigurableIntBucketStrategy.deinit()
{
  uint64_t v0;

  sub_1CF263E18(v0 + 16);
  return v0;
}

uint64_t ConfigurableIntBucketStrategy.__deallocating_deinit()
{
  uint64_t v0;

  sub_1CF263E18(v0 + 16);
  return swift_deallocClassInstance();
}

Swift::Int __swiftcall ConfigurableIntBucketStrategy.bucketFor(value:)(Swift::Int value)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  Swift::Int v10;
  Swift::Int v11;
  char v12;
  char v13;
  Swift::Int v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v1[5];
  v4 = v1[6];
  sub_1CF263DF4(v1 + 2, v3);
  (*(void (**)(Swift::Int *__return_ptr, uint64_t, uint64_t))(v4 + 8))(&v15, v3, v4);
  v6 = v15;
  v5 = v16;
  v7 = v17;
  v8 = sub_1CF2909D8(value, (uint64_t)&v15);
  if ((v9 & 1) != 0)
  {
    v15 = v6;
    v16 = v5;
    v17 = v7;
    v11 = sub_1CF290B08(value, (uint64_t)&v15);
    v13 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
      return v6;
    else
      return v11;
  }
  else
  {
    v10 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v10;
}

Swift::Int sub_1CF2909B8(Swift::Int a1)
{
  return ConfigurableIntBucketStrategy.bucketFor(value:)(a1);
}

uint64_t sub_1CF2909D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v2 = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v5 = 0;
    v6 = v2 + 32;
    do
    {
      v9 = (uint64_t *)(v6 + 24 * v5);
      v10 = *v9;
      if ((v9[2] & 1) != 0)
      {
        v7 = v9[1];
        if (v10 <= a1 && v7 >= a1)
          return a1;
      }
      else if (*(_QWORD *)(v10 + 16))
      {
        v11 = sub_1CF37250C();
        v12 = -1 << *(_BYTE *)(v10 + 32);
        v13 = v11 & ~v12;
        v14 = v10 + 56;
        if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
        {
          v15 = *(_QWORD *)(v10 + 48);
          if (*(_QWORD *)(v15 + 8 * v13) == a1)
            return a1;
          v16 = ~v12;
          v17 = (v13 + 1) & v16;
          if (((*(_QWORD *)(v14 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
          {
            if (*(_QWORD *)(v15 + 8 * v17) == a1)
              return a1;
            while (1)
            {
              v17 = (v17 + 1) & v16;
              if (((*(_QWORD *)(v14 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
                break;
              if (*(_QWORD *)(v15 + 8 * v17) == a1)
                return a1;
            }
          }
        }
      }
      ++v5;
    }
    while (v5 != v3);
  }
  return 0;
}

uint64_t sub_1CF290B08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v5 = 0;
    v6 = v2 + 32;
    do
    {
      v7 = (uint64_t *)(v6 + 16 * v5);
      v8 = v7[1];
      v9 = *(_QWORD *)(v8 + 16);
      if (v9)
      {
        v10 = 0;
        v11 = *v7;
        v12 = v8 + 32;
        do
        {
          v15 = (uint64_t *)(v12 + 24 * v10);
          v16 = *v15;
          if ((v15[2] & 1) != 0)
          {
            v13 = v15[1];
            if (v16 <= a1 && v13 >= a1)
              return v11;
          }
          else if (*(_QWORD *)(v16 + 16))
          {
            v17 = sub_1CF37250C();
            v18 = -1 << *(_BYTE *)(v16 + 32);
            v19 = v17 & ~v18;
            v20 = v16 + 56;
            if (((*(_QWORD *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0)
            {
              v21 = *(_QWORD *)(v16 + 48);
              if (*(_QWORD *)(v21 + 8 * v19) == a1)
                return v11;
              v22 = ~v18;
              v23 = (v19 + 1) & v22;
              if (((*(_QWORD *)(v20 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
              {
                if (*(_QWORD *)(v21 + 8 * v23) == a1)
                  return v11;
                while (1)
                {
                  v23 = (v23 + 1) & v22;
                  if (((*(_QWORD *)(v20 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
                    break;
                  if (*(_QWORD *)(v21 + 8 * v23) == a1)
                    return v11;
                }
              }
            }
          }
          ++v10;
        }
        while (v10 != v9);
      }
      ++v5;
    }
    while (v5 != v3);
  }
  return 0;
}

uint64_t type metadata accessor for ConfigurableIntBucketStrategy()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConfigurableIntBucketStrategy()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConfigurableIntBucketStrategy.__allocating_init(configurationStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1CF290CA0()
{
  uint64_t result;

  if (objc_msgSend((id)objc_opt_self(), sel_isAppleInternalInstall))
    result = sub_1CF3722FC();
  else
    result = sub_1CF3722E4();
  byte_1EFB8D190 = result;
  return result;
}

uint64_t static os_log_type_t.defaultOnInternalInstall.getter()
{
  if (qword_1ED2BC1D8 != -1)
    swift_once();
  return byte_1EFB8D190;
}

uint64_t sub_1CF290D24()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WorkTimer()
{
  return objc_opt_self();
}

uint64_t sub_1CF290D54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD aBlock[7];

  v39 = a1;
  v2 = sub_1CF37208C();
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  MEMORY[0x1E0C80A78](v2, v3);
  v44 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1CF371FF0();
  v5 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40, v6);
  v37 = v7;
  v38 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CF372338();
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CF372320();
  MEMORY[0x1E0C80A78](v12, v13);
  v14 = sub_1CF3720B0();
  v42 = *(_QWORD *)(v14 - 8);
  v43 = v14;
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = os_transaction_create();
  v41 = result;
  if (result)
  {
    v19 = *(_QWORD *)(*sub_1CF263DF4((_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 128)) + 16);
    v34 = v1;
    v20 = *(void **)(v19 + 16);
    v21 = (void *)sub_1CF372140();
    sub_1CF290438(0, (unint64_t *)&qword_1ED2BB498);
    v22 = MEMORY[0x1E0DEE9D8];
    v23 = (void *)sub_1CF37226C();
    objc_msgSend(v20, sel_executeQuery_withParameters_, v21, v23);

    sub_1CF290438(0, &qword_1ED2BB4A0);
    sub_1CF3720A4();
    aBlock[0] = v22;
    sub_1CF28E348(&qword_1ED2BBE58, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
    sub_1CF263D78(&qword_1ED2BB490);
    sub_1CF2944B4((unint64_t *)&unk_1ED2BBE48, &qword_1ED2BB490);
    sub_1CF372398();
    (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v11, *MEMORY[0x1E0DEF8D0], v36);
    v24 = (void *)sub_1CF372350();
    v25 = v38;
    v26 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v38, v39, v40);
    v27 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v28 = swift_allocObject();
    v29 = v34;
    *(_QWORD *)(v28 + 16) = v41;
    *(_QWORD *)(v28 + 24) = v29;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v28 + v27, v25, v26);
    aBlock[4] = sub_1CF2952DC;
    aBlock[5] = v28;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CF290D20;
    aBlock[3] = &unk_1E8C49218;
    v30 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    swift_retain();
    sub_1CF372098();
    v47 = MEMORY[0x1E0DEE9D8];
    sub_1CF28E348((unint64_t *)&unk_1ED2BBE20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1CF263D78(&qword_1ED2BBE38);
    sub_1CF2944B4(&qword_1ED2BBE40, &qword_1ED2BBE38);
    v31 = v44;
    v32 = v46;
    sub_1CF372398();
    MEMORY[0x1D17CB6C0](0, v17, v31, v30);
    _Block_release(v30);
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v45 + 8))(v31, v32);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v17, v43);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1CF2911C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;

  sub_1CF3722E4();
  sub_1CF290438(0, (unint64_t *)&qword_1ED2BBE60);
  v5 = (void *)sub_1CF37235C();
  sub_1CF372068();

  return sub_1CF2912A0(a3, a1);
}

uint64_t sub_1CF2912A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  int *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  _QWORD v82[3];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85[2];
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  v65 = a2;
  v75 = a1;
  v73 = type metadata accessor for WorkCommand();
  v64 = *(_QWORD *)(v73 - 8);
  v76 = *(int **)(v64 + 64);
  v4 = MEMORY[0x1E0C80A78](v73, v3);
  v63 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v60 - v7;
  v9 = sub_1CF263D78(&qword_1ED2BBDA8);
  v11 = MEMORY[0x1E0C80A78](v9, v10);
  v68 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v13);
  v72 = (uint64_t)&v60 - v14;
  v66 = sub_1CF371FF0();
  v71 = *(_QWORD *)(v66 - 8);
  v16 = MEMORY[0x1E0C80A78](v66, v15);
  v61 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v16, v18);
  v60 = (char *)&v60 - v20;
  MEMORY[0x1E0C80A78](v19, v21);
  v67 = (char *)&v60 - v22;
  v23 = (int *)type metadata accessor for WorkOrder();
  v79 = *((_QWORD *)v23 - 1);
  MEMORY[0x1E0C80A78](v23, v24);
  v26 = (char **)((char *)&v60 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = sub_1CF263D78(&qword_1ED2BBE18);
  MEMORY[0x1E0C80A78](v27, v28);
  v78 = (char *)&v60 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CF263DF4((_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 128));
  sub_1CF29C170(v82);
  v30 = sub_1CF263DF4(v82, v83);
  MEMORY[0x1E0C80A78](v30, v30);
  (*(void (**)(char *))(v32 + 16))((char *)&v60 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1CF29530C(v85);
  v33 = v66;
  sub_1CF37223C();
  sub_1CF263E18((uint64_t)v82);
  v77 = v2;
  v70 = v2 + 16;
  v62 = (char *)v76 + 7;
  v69 = 0x80000001CF380C00;
  v76 = v23;
  while (1)
  {
    sub_1CF295348((uint64_t)v85, AssociatedTypeWitness);
    v35 = (uint64_t)v78;
    sub_1CF372374();
    if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v79 + 48))(v35, 1, v23) == 1)
      break;
    sub_1CF2950F0(v35, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for WorkOrder);
    if (*((_BYTE *)v26 + v23[7]))
    {
      if (*((_BYTE *)v26 + v23[7]) != 1)
      {
        v36 = *(int *)(sub_1CF263D78((uint64_t *)&unk_1ED2BC190) + 48);
        sub_1CF294D44((uint64_t)v26, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WorkOrder);
        v8[v36] = 0;
        swift_storeEnumTagMultiPayload();
        sub_1CF295064(v70, (uint64_t)&v80, &qword_1ED2BBDE0);
        if (v81)
        {
          sub_1CF290894(&v80, (uint64_t)v82);
          v37 = v83;
          v38 = v84;
          v74 = sub_1CF263DF4(v82, v83);
          v39 = v8;
          v40 = v63;
          sub_1CF294D44((uint64_t)v8, v63, (uint64_t (*)(_QWORD))type metadata accessor for WorkCommand);
          sub_1CF2950A8((uint64_t)v82, (uint64_t)&v80);
          v41 = (*(unsigned __int8 *)(v64 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
          v42 = v77;
          v43 = (unint64_t)&v62[v41] & 0xFFFFFFFFFFFFFFF8;
          v44 = swift_allocObject();
          *(_QWORD *)(v44 + 16) = v42;
          sub_1CF2950F0(v40, v44 + v41, (uint64_t (*)(_QWORD))type metadata accessor for WorkCommand);
          sub_1CF290894(&v80, v44 + v43);
          v45 = *(void (**)(char *, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v38 + 8);
          swift_retain();
          v8 = v39;
          v45(v39, sub_1CF295134, v44, v37, v38);
          v23 = v76;
          v33 = v66;
          swift_release();
          sub_1CF263E18((uint64_t)v82);
        }
        else
        {
          sub_1CF263DB8((uint64_t)&v80, &qword_1ED2BBDE0);
          sub_1CF291DE4((uint64_t)v8);
        }
        sub_1CF2946D4((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WorkCommand);
        sub_1CF3722F0();
        sub_1CF290438(0, (unint64_t *)&qword_1ED2BBE60);
        v34 = (void *)sub_1CF37235C();
        sub_1CF372068();

      }
    }
    else
    {
      v46 = v72;
      sub_1CF295064((uint64_t)v26 + v23[9], v72, &qword_1ED2BBDA8);
      v47 = v71;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v46, 1, v33) == 1)
      {
        sub_1CF263DB8(v46, &qword_1ED2BBDA8);
        do
        {
          v82[0] = 0;
          MEMORY[0x1D17CC38C](v82, 8);
        }
        while ((unint64_t)(0x20000000000001 * v82[0]) < 0x1FFFFFFFFFF801);
        v48 = v61;
        sub_1CF371FB4();
        v49 = (uint64_t)v68;
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v68, v48, v33);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v33);
        sub_1CF2931B0(v26, v49, v65);
        sub_1CF263DB8(v49, &qword_1ED2BBDA8);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v33);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v67, v46, v33);
        if ((sub_1CF371FA8() & 1) != 0)
        {
          do
          {
            v82[0] = 0;
            MEMORY[0x1D17CC38C](v82, 8);
          }
          while ((unint64_t)(0x20000000000001 * v82[0]) < 0x1FFFFFFFFFF801);
          v50 = v60;
          sub_1CF371FB4();
          v51 = (uint64_t)v68;
          (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v68, v50, v33);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v51, 0, 1, v33);
          sub_1CF2931B0(v26, v51, v65);
          sub_1CF263DB8(v51, &qword_1ED2BBDA8);
          v52 = *(void (**)(char *, uint64_t))(v47 + 8);
          v52(v50, v33);
          v52(v67, v33);
        }
        else
        {
          if ((*((_BYTE *)v26 + v23[10]) & 1) != 0)
          {
            v53 = v65;
            swift_unknownObjectRetain();
          }
          else
          {
            v53 = 0;
          }
          v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56);
          v55 = (uint64_t)v68;
          v56 = v47;
          v57 = v66;
          v54(v68, 1, 1, v66);
          sub_1CF2931B0(v26, v55, v53);
          swift_unknownObjectRelease();
          v58 = v55;
          v33 = v57;
          sub_1CF263DB8(v58, &qword_1ED2BBDA8);
          (*(void (**)(char *, uint64_t))(v56 + 8))(v67, v57);
        }
      }
      v23 = v76;
    }
    sub_1CF2946D4((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for WorkOrder);
  }
  return sub_1CF263E18((uint64_t)v85);
}

uint64_t sub_1CF291BD4(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_1CF291C00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  __int128 v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v3 = type metadata accessor for WorkCommand();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3, v6);
  v7 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CF295064(v1 + 16, (uint64_t)&v14, &qword_1ED2BBDE0);
  if (v15)
  {
    sub_1CF290894(&v14, (uint64_t)v16);
    v8 = v17;
    v9 = v18;
    sub_1CF263DF4(v16, v17);
    sub_1CF294D44(a1, (uint64_t)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for WorkCommand);
    sub_1CF2950A8((uint64_t)v16, (uint64_t)&v14);
    v10 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v11 = (v5 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v1;
    sub_1CF2950F0((uint64_t)v7, v12 + v10, (uint64_t (*)(_QWORD))type metadata accessor for WorkCommand);
    sub_1CF290894(&v14, v12 + v11);
    v13 = *(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v9 + 8);
    swift_retain();
    v13(a1, sub_1CF295134, v12, v8, v9);
    swift_release();
    sub_1CF263E18((uint64_t)v16);
  }
  else
  {
    sub_1CF263DB8((uint64_t)&v14, &qword_1ED2BBDE0);
    sub_1CF291DE4(a1);
  }
}

uint64_t sub_1CF291D80(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;

  sub_1CF291DE4(a2);
  v5 = a3[3];
  v6 = a3[4];
  sub_1CF263DF4(a3, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a2, v5, v6);
}

void sub_1CF291DE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  char *v14;
  uint64_t v15;

  v2 = sub_1CF263D78(&qword_1ED2BC168);
  MEMORY[0x1E0C80A78](v2, v3);
  v4 = sub_1CF371FF0();
  MEMORY[0x1E0C80A78](v4, v5);
  v6 = type metadata accessor for WorkOrder();
  v8 = MEMORY[0x1E0C80A78](v6, v7);
  MEMORY[0x1E0C80A78](v8, v9);
  v10 = type metadata accessor for WorkCommand();
  MEMORY[0x1E0C80A78](v10, v11);
  sub_1CF294D44(a1, (uint64_t)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  v14 = (char *)sub_1CF291F44 + 4 * word_1CF376E80[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1CF291F44()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  void *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = (int *)sub_1CF263D78(&qword_1ED2BC1A0);
  v5 = (uint64_t *)(v2 + v4[12]);
  v7 = *v5;
  v6 = v5[1];
  *(_QWORD *)(v3 - 104) = v7;
  *(_QWORD *)(v3 - 96) = v6;
  v8 = *(_QWORD *)(v2 + v4[16]);
  v9 = *(void (**)(uint64_t, uint64_t))(v2 + v4[20]);
  sub_1CF2950F0(v2, (uint64_t)v0, (uint64_t (*)(_QWORD))type metadata accessor for WorkOrder);
  if (qword_1ED2BC1D8 != -1)
    swift_once();
  sub_1CF290438(0, (unint64_t *)&qword_1ED2BBE60);
  v10 = (void *)sub_1CF37235C();
  sub_1CF263D78(&qword_1ED2BC230);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1CF376E70;
  v12 = (uint64_t *)((char *)v0 + *(int *)(v1 + 44));
  v13 = *v12;
  v14 = v12[1];
  v15 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  v16 = sub_1CF290470();
  *(_QWORD *)(v11 + 32) = v13;
  *(_QWORD *)(v11 + 40) = v14;
  v17 = *v0;
  v18 = v0[1];
  *(_QWORD *)(v11 + 96) = v15;
  *(_QWORD *)(v11 + 104) = v16;
  *(_QWORD *)(v11 + 64) = v16;
  *(_QWORD *)(v11 + 72) = v17;
  *(_QWORD *)(v11 + 80) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CF372068();

  swift_bridgeObjectRelease();
  sub_1CF292630(v0, *(_QWORD *)(v3 - 104), *(_QWORD *)(v3 - 96), v8, v9);
  sub_1CF294D34((uint64_t)v9);
  swift_unknownObjectRelease();
  sub_1CF2946D4((uint64_t)v0, (uint64_t (*)(_QWORD))type metadata accessor for WorkOrder);
  return swift_release();
}

uint64_t sub_1CF292630(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), _QWORD *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = v5;
  v36 = a4;
  v37 = a2;
  v38 = a3;
  v9 = type metadata accessor for WorkCommand();
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for WorkOrder();
  v15 = MEMORY[0x1E0C80A78](v13, v14);
  v17 = (uint64_t *)((char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = (_QWORD *)((char *)a1 + *(int *)(v15 + 44));
  v19 = *v18;
  v20 = v18[1];
  swift_retain();
  v21 = sub_1CF294B08(v19, v20, v5);
  v23 = v22;
  swift_release();
  if (!v21)
  {
    v25 = *(int *)(sub_1CF263D78((uint64_t *)&unk_1ED2BC190) + 48);
    sub_1CF294D44((uint64_t)a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for WorkOrder);
    v12[v25] = 0;
    swift_storeEnumTagMultiPayload();
    sub_1CF291C00(v12);
    return sub_1CF2946D4((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for WorkCommand);
  }
  v24 = a1[1];
  v35 = *a1;
  if (*((_BYTE *)a1 + *(int *)(v13 + 28)) == 1)
  {
    swift_bridgeObjectRetain();
    if (!a5)
      goto LABEL_8;
    goto LABEL_7;
  }
  sub_1CF294D44((uint64_t)a1, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for WorkOrder);
  *((_BYTE *)v17 + *(int *)(v13 + 28)) = 1;
  sub_1CF263DF4((_QWORD *)(v5 + 104), *(_QWORD *)(v5 + 128));
  swift_bridgeObjectRetain();
  sub_1CF29BF30(v17);
  sub_1CF2946D4((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for WorkOrder);
  if (a5)
  {
LABEL_7:
    swift_retain();
    a5(v21, v23);
    sub_1CF294D34((uint64_t)a5);
  }
LABEL_8:
  ObjectType = swift_getObjectType();
  v28 = (_QWORD *)((char *)a1 + *(int *)(v13 + 32));
  v29 = *v28;
  v30 = v28[1];
  v31 = (_QWORD *)swift_allocObject();
  v32 = v35;
  v33 = v36;
  v31[2] = v6;
  v31[3] = v32;
  v31[4] = v24;
  v31[5] = v33;
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), _QWORD *, uint64_t, uint64_t))(v23 + 8);
  swift_retain();
  swift_unknownObjectRetain();
  v34(v29, v30, v37, v38, sub_1CF294D00, v31, ObjectType, v23);
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_1CF2928B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;
  uint64_t v14;

  v9 = type metadata accessor for WorkCommand();
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (uint64_t *)((char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    *v12 = a5;
    v12[1] = a6;
    v12[2] = a3;
    swift_storeEnumTagMultiPayload();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CF291C00(v12);
    swift_release();
    return sub_1CF2946D4((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for WorkCommand);
  }
  return result;
}

uint64_t sub_1CF29299C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[6];

  v30 = a2;
  v28 = a1;
  v4 = sub_1CF37208C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1CF372338();
  v9 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27, v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CF372320();
  MEMORY[0x1E0C80A78](v13, v14);
  v15 = sub_1CF3720B0();
  v31 = *(_QWORD *)(v15 - 8);
  v32 = v15;
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v5;
  v35 = v4;
  v33 = v8;
  if (a3)
  {
    v19 = a3;
LABEL_5:
    sub_1CF290438(0, &qword_1ED2BB4A0);
    swift_unknownObjectRetain();
    sub_1CF372098();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1CF28E348(&qword_1ED2BBE58, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
    sub_1CF263D78(&qword_1ED2BB490);
    sub_1CF2944B4((unint64_t *)&unk_1ED2BBE48, &qword_1ED2BB490);
    sub_1CF372398();
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v12, *MEMORY[0x1E0DEF8D0], v27);
    v21 = (void *)sub_1CF372350();
    v22 = (_QWORD *)swift_allocObject();
    v23 = v28;
    v22[2] = v29;
    v22[3] = v23;
    v22[4] = v30;
    v22[5] = v19;
    aBlock[4] = sub_1CF294490;
    aBlock[5] = v22;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CF290D20;
    aBlock[3] = &unk_1E8C49088;
    v24 = _Block_copy(aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_1CF372098();
    v36 = MEMORY[0x1E0DEE9D8];
    sub_1CF28E348((unint64_t *)&unk_1ED2BBE20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1CF263D78(&qword_1ED2BBE38);
    sub_1CF2944B4(&qword_1ED2BBE40, &qword_1ED2BBE38);
    v25 = v33;
    v26 = v35;
    sub_1CF372398();
    MEMORY[0x1D17CB6C0](0, v18, v25, v24);
    _Block_release(v24);
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v26);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v32);
    return swift_release();
  }
  result = os_transaction_create();
  if (result)
  {
    v19 = result;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CF292D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  int *v30;
  char *(**v31)();
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a4;
  v37 = type metadata accessor for WorkCommand();
  MEMORY[0x1E0C80A78](v37, v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CF263D78(&qword_1ED2BBE18);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (uint64_t *)((char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for WorkOrder();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v18 = MEMORY[0x1E0C80A78](v14, v17);
  v19 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18, v20);
  v22 = (char *)&v34 - v21;
  v35 = a1;
  sub_1CF263DF4((_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 128));
  v36 = a2;
  v38 = a3;
  sub_1CF29C354(a2, a3, v13);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    return sub_1CF263DB8((uint64_t)v13, &qword_1ED2BBE18);
  sub_1CF2950F0((uint64_t)v13, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for WorkOrder);
  sub_1CF294D44((uint64_t)v22, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for WorkOrder);
  v24 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v25 = (v16 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = swift_allocObject();
  sub_1CF2950F0((uint64_t)v19, v26 + v24, (uint64_t (*)(_QWORD))type metadata accessor for WorkOrder);
  v27 = v36;
  *(_QWORD *)(v26 + v25) = v35;
  v28 = (uint64_t *)(v26 + ((v25 + 15) & 0xFFFFFFFFFFFFFFF8));
  v29 = v38;
  *v28 = v27;
  v28[1] = v29;
  v30 = (int *)sub_1CF263D78(&qword_1ED2BC1A0);
  v31 = (char *(**)())&v9[v30[12]];
  v32 = v30[16];
  v33 = &v9[v30[20]];
  sub_1CF294D44((uint64_t)v22, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WorkOrder);
  *v31 = sub_1CF294684;
  v31[1] = (char *(*)())v26;
  *(_QWORD *)&v9[v32] = v39;
  *(_QWORD *)v33 = 0;
  *((_QWORD *)v33 + 1) = 0;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  sub_1CF291C00(v9);
  swift_release();
  sub_1CF2946D4((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WorkCommand);
  return sub_1CF2946D4((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for WorkOrder);
}

char *sub_1CF292FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v3 = a1 + *(int *)(type metadata accessor for WorkOrder() + 24);
  v4 = *(_QWORD *)(v3 + 8);
  if (!v4)
    return 0;
  v5 = *(char **)v3;
  sub_1CF263DF4((_QWORD *)(a2 + 144), *(_QWORD *)(a2 + 168));
  return sub_1CF29ED18(v5, v4);
}

uint64_t sub_1CF293144()
{
  uint64_t v0;

  sub_1CF263DB8(v0 + 16, &qword_1ED2BBDE0);
  swift_release();
  sub_1CF263E18(v0 + 64);
  sub_1CF263E18(v0 + 104);
  sub_1CF263E18(v0 + 144);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WorkCommandProcessor()
{
  return objc_opt_self();
}

uint64_t sub_1CF2931B0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;

  v38 = a3;
  v39 = a1;
  v4 = type metadata accessor for WorkCommand();
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CF263D78(&qword_1ED2BBDA8);
  v10 = MEMORY[0x1E0C80A78](v8, v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v13);
  v15 = (char *)&v37 - v14;
  v16 = sub_1CF371FF0();
  v17 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x1E0C80A78](v16, v18);
  v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19, v22);
  v24 = (char *)&v37 - v23;
  sub_1CF295064(a2, (uint64_t)v15, &qword_1ED2BBDA8);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v25(v15, 1, v16) == 1)
  {
    sub_1CF263DB8((uint64_t)v15, &qword_1ED2BBDA8);
    v26 = type metadata accessor for WorkOrder();
    sub_1CF295064((uint64_t)v39 + *(int *)(v26 + 36), (uint64_t)v12, &qword_1ED2BBDA8);
    if (v25(v12, 1, v16) == 1)
    {
      sub_1CF263DB8((uint64_t)v12, &qword_1ED2BBDA8);
      v27 = *(int *)(sub_1CF263D78((uint64_t *)&unk_1ED2BC190) + 48);
      sub_1CF294D44((uint64_t)v39, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WorkOrder);
      v7[v27] = 0;
      swift_storeEnumTagMultiPayload();
      sub_1CF291C00(v7);
      return sub_1CF2946D4((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WorkCommand);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v12, v16);
      v33 = sub_1CF263D78((uint64_t *)&unk_1EFB8D210);
      v34 = &v7[*(int *)(v33 + 48)];
      v35 = *(int *)(v33 + 64);
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v7, v21, v16);
      v36 = v39[1];
      *(_QWORD *)v34 = *v39;
      *((_QWORD *)v34 + 1) = v36;
      *(_QWORD *)&v7[v35] = v38;
      swift_storeEnumTagMultiPayload();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_1CF291C00(v7);
      sub_1CF2946D4((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WorkCommand);
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v21, v16);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v24, v15, v16);
    v29 = sub_1CF263D78((uint64_t *)&unk_1EFB8D210);
    v30 = &v7[*(int *)(v29 + 48)];
    v31 = *(int *)(v29 + 64);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v7, v24, v16);
    v32 = v39[1];
    *(_QWORD *)v30 = *v39;
    *((_QWORD *)v30 + 1) = v32;
    *(_QWORD *)&v7[v31] = v38;
    swift_storeEnumTagMultiPayload();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CF291C00(v7);
    sub_1CF2946D4((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WorkCommand);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, v16);
  }
}

uint64_t sub_1CF2934F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  _QWORD *v30;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v53 = a5;
  v54 = a4;
  v58 = a2;
  v59 = a3;
  v49 = type metadata accessor for WorkCommand();
  MEMORY[0x1E0C80A78](v49, v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CF263D78(&qword_1ED2BBDA8);
  MEMORY[0x1E0C80A78](v9, v10);
  v51 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1CF371FF0();
  v56 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52, v12);
  v55 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for WorkResult();
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1CF263D78(&qword_1ED2BBE18);
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (uint64_t *)((char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = (int *)type metadata accessor for WorkOrder();
  v23 = *((_QWORD *)v22 - 1);
  v25 = MEMORY[0x1E0C80A78](v22, v24);
  v50 = (uint64_t *)((char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v25, v27);
  v29 = (uint64_t *)((char *)&v48 - v28);
  v30 = (_QWORD *)(a1 + 104);
  v57 = a1;
  sub_1CF263DF4((_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 128));
  sub_1CF29C354(v58, v59, v21);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v23 + 48))(v21, 1, v22) == 1)
    return sub_1CF263DB8((uint64_t)v21, &qword_1ED2BBE18);
  sub_1CF2950F0((uint64_t)v21, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for WorkOrder);
  sub_1CF294D44(v54, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for WorkResult);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v32 = *v17;
    v33 = *(int *)(sub_1CF263D78((uint64_t *)&unk_1ED2BC190) + 48);
    sub_1CF294D44((uint64_t)v29, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WorkOrder);
    v8[v33] = v32;
    swift_storeEnumTagMultiPayload();
    sub_1CF291C00(v8);
    sub_1CF2946D4((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WorkCommand);
  }
  else
  {
    v34 = *((_QWORD *)v17 + 1);
    v58 = *(_QWORD *)v17;
    v35 = sub_1CF263D78(&qword_1EFB8D208);
    v36 = &v17[*(int *)(v35 + 48)];
    v37 = &v17[*(int *)(v35 + 64)];
    v38 = *(_QWORD *)v37;
    LODWORD(v59) = v37[8];
    v39 = v55;
    v40 = v56;
    v41 = v52;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v55, v36, v52);
    *((_BYTE *)v29 + v22[7]) = 0;
    v42 = (uint64_t *)((char *)v29 + v22[8]);
    swift_bridgeObjectRelease();
    *v42 = v58;
    v42[1] = v34;
    v43 = (uint64_t)v29 + v22[9];
    sub_1CF263DB8(v43, &qword_1ED2BBDA8);
    (*(void (**)(uint64_t, char *, uint64_t))(v40 + 16))(v43, v39, v41);
    v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56);
    v44(v43, 0, 1, v41);
    v45 = v22[10];
    if ((v59 & 1) != 0)
      v38 = *(uint64_t *)((char *)v29 + v45);
    else
      *(uint64_t *)((char *)v29 + v45) = v38;
    sub_1CF263DF4(v30, *(_QWORD *)(v57 + 128));
    sub_1CF29BF30(v29);
    v46 = v50;
    sub_1CF294D44((uint64_t)v29, (uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for WorkOrder);
    v47 = (uint64_t)v51;
    v44((uint64_t)v51, 1, 1, v41);
    sub_1CF2931B0(v46, v47, (v38 << 63 >> 63) & v53);
    sub_1CF263DB8(v47, &qword_1ED2BBDA8);
    sub_1CF2946D4((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for WorkOrder);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v41);
  }
  return sub_1CF2946D4((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for WorkOrder);
}

uint64_t sub_1CF29391C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  void (*v37)(char *);
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char v42;
  char v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *);
  uint64_t v59;
  uint64_t result;
  uint64_t v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  uint64_t (**v65)();
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unsigned int (*v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  char *v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  __int128 v91;

  v81 = a8;
  v90 = a6;
  *(_QWORD *)&v91 = a7;
  v87 = a4;
  v88 = a5;
  v84 = a3;
  v83 = a2;
  v82 = a1;
  v69 = type metadata accessor for WorkCommand();
  MEMORY[0x1E0C80A78](v69, v14);
  v71 = (uint64_t)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for WorkOrder();
  MEMORY[0x1E0C80A78](v77, v16);
  v86 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_1CF372038();
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74, v18);
  v72 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1CF263D78(&qword_1ED2BBDA8);
  v22 = MEMORY[0x1E0C80A78](v20, v21);
  v89 = (uint64_t)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22, v24);
  v26 = (char *)&v69 - v25;
  v27 = sub_1CF371FF0();
  v28 = *(_QWORD *)(v27 - 8);
  v30 = MEMORY[0x1E0C80A78](v27, v29);
  v32 = (char *)&v69 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30, v33);
  v35 = (char *)&v69 - v34;
  v80 = *a12;
  v79 = *((unsigned __int8 *)a12 + 8);
  type metadata accessor for WorkOrderBuilder();
  v36 = (char *)swift_allocObject();
  *((_QWORD *)v36 + 3) = 0;
  *((_QWORD *)v36 + 4) = 0;
  *((_QWORD *)v36 + 2) = 0;
  v37 = *(void (**)(char *))(v28 + 56);
  v78 = &v36[OBJC_IVAR____TtC12APFoundation16WorkOrderBuilder_scheduledTime];
  v37(&v36[OBJC_IVAR____TtC12APFoundation16WorkOrderBuilder_scheduledTime]);
  v38 = OBJC_IVAR____TtC12APFoundation16WorkOrderBuilder_state;
  v36[OBJC_IVAR____TtC12APFoundation16WorkOrderBuilder_state] = 0;
  v39 = &v36[OBJC_IVAR____TtC12APFoundation16WorkOrderBuilder_requestorId];
  *(_QWORD *)v39 = 0;
  *((_QWORD *)v39 + 1) = 0;
  v40 = &v36[OBJC_IVAR____TtC12APFoundation16WorkOrderBuilder_requestorData];
  *(_QWORD *)v40 = 0;
  *((_QWORD *)v40 + 1) = 0;
  v70 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v37;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v37)(&v36[OBJC_IVAR____TtC12APFoundation16WorkOrderBuilder_created], 1, 1, v27);
  v41 = &v36[OBJC_IVAR____TtC12APFoundation16WorkOrderBuilder_retryState];
  *(_QWORD *)v41 = 0;
  *((_QWORD *)v41 + 1) = 0;
  sub_1CF295064(v91, (uint64_t)v26, &qword_1ED2BBDA8);
  v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  if (v76(v26, 1, v27) == 1)
  {
    sub_1CF263DB8((uint64_t)v26, &qword_1ED2BBDA8);
    v42 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v35, v26, v27);
    sub_1CF371FE4();
    v43 = sub_1CF371F9C();
    v44 = *(void (**)(char *, uint64_t))(v28 + 8);
    v44(v32, v27);
    v44(v35, v27);
    if ((v43 & 1) == 0)
    {
      swift_release();
      return 0;
    }
    v42 = 0;
  }
  v36[v38] = v42;
  v75 = v90 >> 60;
  if (v90 >> 60 != 15)
  {
    v45 = v72;
    sub_1CF37202C();
    v46 = sub_1CF372008();
    v48 = v47;
    (*(void (**)(char *, uint64_t))(v73 + 8))(v45, v74);
    *((_QWORD *)v36 + 2) = v46;
    *((_QWORD *)v36 + 3) = v48;
    swift_bridgeObjectRelease();
  }
  v49 = v89;
  sub_1CF295064(v91, v89, &qword_1ED2BBDA8);
  v50 = (uint64_t)v78;
  swift_beginAccess();
  sub_1CF295138(v49, v50);
  swift_endAccess();
  *(_QWORD *)v39 = v81;
  *((_QWORD *)v39 + 1) = a9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)v40 = a10;
  *((_QWORD *)v40 + 1) = a11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v51 = v80;
  if (v79)
    v51 = 0;
  *((_QWORD *)v36 + 4) = v51;
  v52 = v86;
  sub_1CF2A3AF8(v82, v83, v84, v87, v86);
  v53 = *((_QWORD *)v52 + 1);
  v87 = *(_QWORD *)v52;
  v54 = v85;
  sub_1CF263DF4((_QWORD *)(v85 + 104), *(_QWORD *)(v85 + 128));
  swift_bridgeObjectRetain();
  sub_1CF29BB68(v52);
  v55 = v90;
  if (v75 <= 0xE)
  {
    v56 = &v52[*(int *)(v77 + 24)];
    v57 = *((_QWORD *)v56 + 1);
    if (v57)
    {
      v84 = v53;
      v58 = *(void (**)(char *))v56;
      sub_1CF263DF4((_QWORD *)(v54 + 144), *(_QWORD *)(v54 + 168));
      v59 = v88;
      sub_1CF2951E4(v88, v55);
      swift_bridgeObjectRetain();
      sub_1CF29E578(v58, v57, v59, v55);
      swift_bridgeObjectRelease();
      sub_1CF29524C(v88, v55);
    }
  }
  if (v76((char *)v91, 1, v27) != 1)
  {
    if ((v52[*(int *)(v77 + 40)] & 1) != 0)
    {
      result = os_transaction_create();
      if (!result)
        goto LABEL_23;
      v67 = result;
    }
    else
    {
      v67 = 0;
    }
    v68 = v89;
    v70(v89, 1, 1, v27);
    sub_1CF2931B0(v52, v68, v67);
    swift_release();
    swift_unknownObjectRelease();
    sub_1CF263DB8(v68, &qword_1ED2BBDA8);
    goto LABEL_21;
  }
  v61 = swift_allocObject();
  v62 = v88;
  *(_QWORD *)(v61 + 16) = v88;
  *(_QWORD *)(v61 + 24) = v55;
  v63 = (int *)sub_1CF263D78(&qword_1ED2BC1A0);
  v64 = v71;
  v65 = (uint64_t (**)())(v71 + v63[12]);
  sub_1CF294D44((uint64_t)v52, v71, (uint64_t (*)(_QWORD))type metadata accessor for WorkOrder);
  *v65 = sub_1CF2951B4;
  v65[1] = (uint64_t (*)())v61;
  sub_1CF2951E4(v62, v55);
  swift_retain();
  result = os_transaction_create();
  if (result)
  {
    v66 = (uint64_t *)(v64 + v63[20]);
    *(_QWORD *)(v64 + v63[16]) = result;
    *v66 = a13;
    v66[1] = a14;
    swift_storeEnumTagMultiPayload();
    sub_1CF29523C(a13);
    sub_1CF291C00(v64);
    swift_release();
    swift_release();
    sub_1CF2946D4(v64, (uint64_t (*)(_QWORD))type metadata accessor for WorkCommand);
LABEL_21:
    sub_1CF2946D4((uint64_t)v52, (uint64_t (*)(_QWORD))type metadata accessor for WorkOrder);
    return v87;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1CF294218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v28 = a6;
  v29 = a8;
  v26 = a4;
  v27 = a5;
  v25 = a3;
  v24 = a9;
  v14 = sub_1CF263D78(&qword_1ED2BBDA8);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)a11;
  v19 = *(_BYTE *)(a11 + 8);
  v20 = sub_1CF371FF0();
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v17, a7, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
  v30 = v18;
  v31 = v19;
  v22 = sub_1CF29391C(a1, a2, v25, v26, v27, v28, (uint64_t)v17, v29, v24, *((uint64_t *)&v24 + 1), a10, &v30, 0, 0);
  sub_1CF263DB8((uint64_t)v17, &qword_1ED2BBDA8);
  return v22;
}

uint64_t sub_1CF29435C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v24 = a8;
  v25 = a5;
  v26 = a6;
  v27 = a7;
  v15 = sub_1CF263D78(&qword_1ED2BBDA8);
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)a11;
  v20 = *(_BYTE *)(a11 + 8);
  v21 = sub_1CF371FF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v18, 1, 1, v21);
  v28 = v19;
  v29 = v20;
  v22 = sub_1CF29391C(a1, a2, a3, a4, v25, v26, (uint64_t)v18, v27, v24, a9, a10, &v28, 0, 0);
  sub_1CF263DB8((uint64_t)v18, &qword_1ED2BBDA8);
  return v22;
}

uint64_t sub_1CF294490()
{
  uint64_t *v0;

  return sub_1CF292D34(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1CF29449C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1CF2944AC()
{
  return swift_release();
}

uint64_t sub_1CF2944B4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1CF28F228(a2);
    result = MEMORY[0x1D17CC2F0](MEMORY[0x1E0DEAF38], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for WorkCommand()
{
  uint64_t result;

  result = qword_1ED2BBDD0;
  if (!qword_1ED2BBDD0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CF294530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;

  v1 = type metadata accessor for WorkOrder();
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  v3 = v2 + *(int *)(v1 + 20);
  v4 = sub_1CF371FF0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = v2 + *(int *)(v1 + 36);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4))
    v6(v7, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

char *sub_1CF294684()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for WorkOrder() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1CF292FD4(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1CF2946D4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1CF294710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  char *v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD aBlock[6];

  v40 = a1;
  v11 = sub_1CF3720C8();
  v41 = *(_QWORD *)(v11 - 8);
  v42 = v11;
  v13 = MEMORY[0x1E0C80A78](v11, v12);
  v38 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13, v15);
  v39 = (char *)&v34 - v16;
  v17 = sub_1CF372338();
  v36 = *(_QWORD *)(v17 - 8);
  v37 = v17;
  MEMORY[0x1E0C80A78](v17, v18);
  v35 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1CF372320();
  MEMORY[0x1E0C80A78](v20, v21);
  v22 = sub_1CF3720B0();
  MEMORY[0x1E0C80A78](v22, v23);
  v24 = sub_1CF37208C();
  MEMORY[0x1E0C80A78](v24, v25);
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = a5;
  v26[3] = a6;
  v26[4] = a2;
  v26[5] = a3;
  v26[6] = a4;
  aBlock[4] = sub_1CF295038;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CF290D20;
  aBlock[3] = &unk_1E8C49178;
  _Block_copy(aBlock);
  v43 = MEMORY[0x1E0DEE9D8];
  sub_1CF28E348((unint64_t *)&unk_1ED2BBE20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1CF263D78(&qword_1ED2BBE38);
  sub_1CF2944B4(&qword_1ED2BBE40, &qword_1ED2BBE38);
  sub_1CF372398();
  sub_1CF3720E0();
  swift_allocObject();
  sub_1CF3720D4();
  swift_release();
  sub_1CF290438(0, &qword_1ED2BB4A0);
  sub_1CF3720A4();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1CF28E348(&qword_1ED2BBE58, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  sub_1CF263D78(&qword_1ED2BB490);
  sub_1CF2944B4((unint64_t *)&unk_1ED2BBE48, &qword_1ED2BB490);
  sub_1CF372398();
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v35, *MEMORY[0x1E0DEF8D0], v37);
  v27 = (void *)sub_1CF372350();
  v28 = v38;
  sub_1CF3720BC();
  sub_1CF371FC0();
  v29 = v39;
  MEMORY[0x1D17CB468](v28);
  v30 = *(void (**)(char *, uint64_t))(v41 + 8);
  v31 = v28;
  v32 = v42;
  v30(v31, v42);
  sub_1CF37232C();
  swift_release();

  return ((uint64_t (*)(char *, uint64_t))v30)(v29, v32);
}

uint64_t sub_1CF294B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString *v6;
  Class v7;
  uint64_t ObjCClassMetadata;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _BYTE v15[40];
  _QWORD v16[5];

  v16[3] = type metadata accessor for WorkCommandProcessor();
  v16[4] = &off_1E8C49048;
  v16[0] = a3;
  swift_retain();
  v6 = (NSString *)sub_1CF372140();
  v7 = NSClassFromString(v6);

  if (!v7)
    goto LABEL_9;
  ObjCClassMetadata = swift_getObjCClassMetadata();
  v9 = swift_conformsToProtocol2();
  v10 = v9 ? v9 : 0;
  if (!v9)
    ObjCClassMetadata = 0;
  if (ObjCClassMetadata)
  {
    sub_1CF2950A8((uint64_t)v16, (uint64_t)v15);
    v11 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v15, ObjCClassMetadata, v10);
  }
  else
  {
LABEL_9:
    sub_1CF3722F0();
    sub_1CF290438(0, (unint64_t *)&qword_1ED2BBE60);
    v12 = (void *)sub_1CF37235C();
    sub_1CF263D78(&qword_1ED2BC230);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1CF376C00;
    *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v13 + 64) = sub_1CF290470();
    *(_QWORD *)(v13 + 32) = a1;
    *(_QWORD *)(v13 + 40) = a2;
    swift_bridgeObjectRetain();
    sub_1CF372068();

    swift_bridgeObjectRelease();
    v11 = 0;
  }
  sub_1CF263E18((uint64_t)v16);
  return v11;
}

uint64_t sub_1CF294CCC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CF294D00(uint64_t a1)
{
  uint64_t *v1;

  return sub_1CF2934F4(v1[2], v1[3], v1[4], a1, v1[5]);
}

uint64_t sub_1CF294D34(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1CF294D44(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1CF294D88(uint64_t *a1)
{
  _QWORD *v1;
  char *v3;
  void (*v4)(char *, uint64_t);
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;

  v3 = (char *)a1 + *(int *)(type metadata accessor for WorkOrder() + 24);
  v4 = (void (*)(char *, uint64_t))*((_QWORD *)v3 + 1);
  v5 = MEMORY[0x1E0DEA968];
  if (v4)
  {
    v6 = *(void **)v3;
    sub_1CF263DF4(v1 + 18, v1[21]);
    sub_1CF29F10C(v6, v4);
  }
  sub_1CF263DF4(v1 + 13, v1[16]);
  v8 = *a1;
  v7 = a1[1];
  sub_1CF263D78(&qword_1ED2BC1F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CF376C00;
  *(_QWORD *)(inited + 56) = v5;
  *(_QWORD *)(inited + 64) = &protocol witness table for String;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v7;
  swift_bridgeObjectRetain();
  sub_1CF263ABC(0xD000000000000026, 0x80000001CF380F90, inited);
  swift_setDeallocating();
  sub_1CF263D78(qword_1ED2BB3E8);
  return swift_arrayDestroy();
}

uint64_t sub_1CF294FA8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CF294FCC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CF294FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1CF2928B0(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_1CF295004()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CF295038()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1CF295064(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1CF263D78(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1CF2950A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1CF2950F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1CF295138(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CF263D78(&qword_1ED2BBDA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CF295180()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 60 != 15)
    sub_1CF28DD6C(*(_QWORD *)(v0 + 16), v1);
  return swift_deallocObject();
}

uint64_t sub_1CF2951B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1CF2951E4(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t sub_1CF2951E4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1CF2951F8(a1, a2);
  return a1;
}

uint64_t sub_1CF2951F8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1CF29523C(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_1CF29524C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1CF28DD6C(a1, a2);
  return a1;
}

uint64_t sub_1CF295260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1CF371FF0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1CF2952DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1CF371FF0() - 8) + 80);
  return sub_1CF2911C8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t *sub_1CF29530C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1CF295348(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1CF295374()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;

  v1 = *(_QWORD *)(type metadata accessor for WorkCommand() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  swift_release();
  v4 = v0 + v2;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      v5 = type metadata accessor for WorkOrder();
      v6 = v4 + *(int *)(v5 + 20);
      v7 = sub_1CF371FF0();
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v9(v6, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v4 + *(int *)(v5 + 36);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
        v9(v10, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = sub_1CF263D78(&qword_1ED2BC1A0);
      swift_release();
      swift_unknownObjectRelease();
      if (*(_QWORD *)(v4 + *(int *)(v11 + 80)))
        swift_release();
      break;
    case 1u:
      v12 = sub_1CF371FF0();
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v0 + v2, v12);
      sub_1CF263D78((uint64_t *)&unk_1EFB8D210);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      break;
    case 2u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      break;
    case 3u:
      swift_bridgeObjectRelease();
      v13 = type metadata accessor for WorkOrder();
      v14 = v4 + *(int *)(v13 + 20);
      v15 = sub_1CF371FF0();
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v17(v14, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v4 + *(int *)(v13 + 36);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v18, 1, v15))
        v17(v18, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  sub_1CF263E18(v0 + ((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return swift_deallocObject();
}

uint64_t sub_1CF295668()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for WorkCommand() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1CF291D80(*(_QWORD *)(v0 + 16), v0 + v2, (_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1CF2956AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1CF29570C + 4 * byte_1CF376E8C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_1CF295B80(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for WorkOrder();
      v4 = a1 + *(int *)(v3 + 20);
      v5 = sub_1CF371FF0();
      v6 = *(_QWORD *)(v5 - 8);
      v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v7(v4, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = a1 + *(int *)(v3 + 36);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
        v7(v8, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = sub_1CF263D78(&qword_1ED2BC1A0);
      swift_release();
      result = swift_unknownObjectRelease();
      if (*(_QWORD *)(a1 + *(int *)(v9 + 80)))
        result = swift_release();
      break;
    case 1:
      v10 = sub_1CF371FF0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
      sub_1CF263D78((uint64_t *)&unk_1EFB8D210);
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 2:
      swift_bridgeObjectRelease();
LABEL_9:
      result = swift_unknownObjectRelease();
      break;
    case 3:
      swift_bridgeObjectRelease();
      v11 = type metadata accessor for WorkOrder();
      v12 = a1 + *(int *)(v11 + 20);
      v13 = sub_1CF371FF0();
      v14 = *(_QWORD *)(v13 - 8);
      v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
      v15(v12, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = a1 + *(int *)(v11 + 36);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v16, 1, v13))
        v15(v16, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void sub_1CF295E30()
{
  char *v0;

  v0 = (char *)sub_1CF295E84 + 4 * byte_1CF376E94[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_1CF295E84()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  v3 = (int *)type metadata accessor for WorkOrder();
  v4 = v3[5];
  v5 = (char *)v0 + v4;
  v6 = (char *)v1 + v4;
  v7 = sub_1CF371FF0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  swift_bridgeObjectRetain();
  v9(v5, v6, v7);
  v10 = v3[6];
  v11 = (_QWORD *)((char *)v0 + v10);
  v12 = (_QWORD *)((char *)v1 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  *((_BYTE *)v0 + v3[7]) = *((_BYTE *)v1 + v3[7]);
  v14 = v3[8];
  v15 = (_QWORD *)((char *)v0 + v14);
  v16 = (_QWORD *)((char *)v1 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = v3[9];
  v19 = (char *)v0 + v18;
  v20 = (char *)v1 + v18;
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21(v20, 1, v7))
  {
    v22 = sub_1CF263D78(&qword_1ED2BBDA8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v9(v19, v20, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v19, 0, 1, v7);
  }
  *(_QWORD *)((char *)v0 + v3[10]) = *(_QWORD *)((char *)v1 + v3[10]);
  v23 = v3[11];
  v24 = (_QWORD *)((char *)v0 + v23);
  v25 = (_QWORD *)((char *)v1 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = v3[12];
  v28 = (_QWORD *)((char *)v0 + v27);
  v29 = (_QWORD *)((char *)v1 + v27);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = v3[13];
  v32 = (_QWORD *)((char *)v0 + v31);
  v33 = (_QWORD *)((char *)v1 + v31);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = v3[14];
  v36 = (_QWORD *)((char *)v0 + v35);
  v37 = (_QWORD *)((char *)v1 + v35);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v39 = (int *)sub_1CF263D78(&qword_1ED2BC1A0);
  v40 = v39[12];
  v41 = (_QWORD *)((char *)v0 + v40);
  v42 = (_QWORD *)((char *)v1 + v40);
  v44 = *v42;
  v43 = v42[1];
  *v41 = v44;
  v41[1] = v43;
  *(_QWORD *)((char *)v0 + v39[16]) = *(_QWORD *)((char *)v1 + v39[16]);
  v45 = v39[20];
  v46 = (_QWORD *)((char *)v0 + v45);
  v47 = (_QWORD *)((char *)v1 + v45);
  v48 = *v47;
  swift_retain();
  swift_unknownObjectRetain();
  if (v48)
  {
    v49 = v47[1];
    *v46 = v48;
    v46[1] = v49;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v46 = *(_OWORD *)v47;
  }
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_1CF2962D8(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1CF2946D4(result, (uint64_t (*)(_QWORD))type metadata accessor for WorkCommand);
    v2 = (char *)&loc_1CF296344 + 4 * byte_1CF376E98[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *sub_1CF296818(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      *a1 = *a2;
      v18 = (int *)type metadata accessor for WorkOrder();
      v19 = v18[5];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = sub_1CF371FF0();
      v23 = *(_QWORD *)(v22 - 8);
      v24 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
      v24(v20, v21, v22);
      *(_OWORD *)((char *)a1 + v18[6]) = *(_OWORD *)((char *)a2 + v18[6]);
      *((_BYTE *)a1 + v18[7]) = *((_BYTE *)a2 + v18[7]);
      *(_OWORD *)((char *)a1 + v18[8]) = *(_OWORD *)((char *)a2 + v18[8]);
      v25 = v18[9];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))((char *)a2 + v25, 1, v22))
      {
        v28 = sub_1CF263D78(&qword_1ED2BBDA8);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        v24(v26, v27, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v26, 0, 1, v22);
      }
      *(_QWORD *)((char *)a1 + v18[10]) = *(_QWORD *)((char *)a2 + v18[10]);
      *(_OWORD *)((char *)a1 + v18[11]) = *(_OWORD *)((char *)a2 + v18[11]);
      *(_OWORD *)((char *)a1 + v18[12]) = *(_OWORD *)((char *)a2 + v18[12]);
      *(_OWORD *)((char *)a1 + v18[13]) = *(_OWORD *)((char *)a2 + v18[13]);
      *(_OWORD *)((char *)a1 + v18[14]) = *(_OWORD *)((char *)a2 + v18[14]);
      v37 = sub_1CF263D78((uint64_t *)&unk_1ED2BC190);
      *((_BYTE *)a1 + *(int *)(v37 + 48)) = *((_BYTE *)a2 + *(int *)(v37 + 48));
      goto LABEL_16;
    case 1:
      v29 = sub_1CF371FF0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(a1, a2, v29);
      v30 = sub_1CF263D78((uint64_t *)&unk_1EFB8D210);
      *(_OWORD *)((char *)a1 + *(int *)(v30 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v30 + 48));
      *(_QWORD *)((char *)a1 + *(int *)(v30 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v30 + 64));
LABEL_16:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0:
      *a1 = *a2;
      v7 = (int *)type metadata accessor for WorkOrder();
      v8 = v7[5];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1CF371FF0();
      v12 = *(_QWORD *)(v11 - 8);
      v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v13(v9, v10, v11);
      *(_OWORD *)((char *)a1 + v7[6]) = *(_OWORD *)((char *)a2 + v7[6]);
      *((_BYTE *)a1 + v7[7]) = *((_BYTE *)a2 + v7[7]);
      *(_OWORD *)((char *)a1 + v7[8]) = *(_OWORD *)((char *)a2 + v7[8]);
      v14 = v7[9];
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))((char *)a2 + v14, 1, v11))
      {
        v17 = sub_1CF263D78(&qword_1ED2BBDA8);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        v13(v15, v16, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
      }
      *(_QWORD *)((char *)a1 + v7[10]) = *(_QWORD *)((char *)a2 + v7[10]);
      *(_OWORD *)((char *)a1 + v7[11]) = *(_OWORD *)((char *)a2 + v7[11]);
      *(_OWORD *)((char *)a1 + v7[12]) = *(_OWORD *)((char *)a2 + v7[12]);
      *(_OWORD *)((char *)a1 + v7[13]) = *(_OWORD *)((char *)a2 + v7[13]);
      *(_OWORD *)((char *)a1 + v7[14]) = *(_OWORD *)((char *)a2 + v7[14]);
      v31 = (int *)sub_1CF263D78(&qword_1ED2BC1A0);
      *(_OWORD *)((char *)a1 + v31[12]) = *(_OWORD *)((char *)a2 + v31[12]);
      *(_QWORD *)((char *)a1 + v31[16]) = *(_QWORD *)((char *)a2 + v31[16]);
      v32 = v31[20];
      v33 = (_QWORD *)((char *)a1 + v32);
      v34 = (uint64_t *)((char *)a2 + v32);
      v35 = *v34;
      if (*v34)
      {
        v36 = v34[1];
        *v33 = v35;
        v33[1] = v36;
      }
      else
      {
        *(_OWORD *)v33 = *(_OWORD *)v34;
      }
      goto LABEL_16;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1CF296B98(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;

  if (a1 != a2)
  {
    sub_1CF2946D4((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for WorkCommand);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        *a1 = *a2;
        v18 = (int *)type metadata accessor for WorkOrder();
        v19 = v18[5];
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = sub_1CF371FF0();
        v23 = *(_QWORD *)(v22 - 8);
        v24 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
        v24(v20, v21, v22);
        *(_OWORD *)((char *)a1 + v18[6]) = *(_OWORD *)((char *)a2 + v18[6]);
        *((_BYTE *)a1 + v18[7]) = *((_BYTE *)a2 + v18[7]);
        *(_OWORD *)((char *)a1 + v18[8]) = *(_OWORD *)((char *)a2 + v18[8]);
        v25 = v18[9];
        v26 = (char *)a1 + v25;
        v27 = (char *)a2 + v25;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))((char *)a2 + v25, 1, v22))
        {
          v28 = sub_1CF263D78(&qword_1ED2BBDA8);
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          v24(v26, v27, v22);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v26, 0, 1, v22);
        }
        *(_QWORD *)((char *)a1 + v18[10]) = *(_QWORD *)((char *)a2 + v18[10]);
        *(_OWORD *)((char *)a1 + v18[11]) = *(_OWORD *)((char *)a2 + v18[11]);
        *(_OWORD *)((char *)a1 + v18[12]) = *(_OWORD *)((char *)a2 + v18[12]);
        *(_OWORD *)((char *)a1 + v18[13]) = *(_OWORD *)((char *)a2 + v18[13]);
        *(_OWORD *)((char *)a1 + v18[14]) = *(_OWORD *)((char *)a2 + v18[14]);
        v31 = sub_1CF263D78((uint64_t *)&unk_1ED2BC190);
        *((_BYTE *)a1 + *(int *)(v31 + 48)) = *((_BYTE *)a2 + *(int *)(v31 + 48));
        goto LABEL_17;
      case 1:
        v29 = sub_1CF371FF0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(a1, a2, v29);
        v30 = sub_1CF263D78((uint64_t *)&unk_1EFB8D210);
        *(_OWORD *)((char *)a1 + *(int *)(v30 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v30 + 48));
        *(_QWORD *)((char *)a1 + *(int *)(v30 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v30 + 64));
LABEL_17:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0:
        *a1 = *a2;
        v7 = (int *)type metadata accessor for WorkOrder();
        v8 = v7[5];
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_1CF371FF0();
        v12 = *(_QWORD *)(v11 - 8);
        v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v13(v9, v10, v11);
        *(_OWORD *)((char *)a1 + v7[6]) = *(_OWORD *)((char *)a2 + v7[6]);
        *((_BYTE *)a1 + v7[7]) = *((_BYTE *)a2 + v7[7]);
        *(_OWORD *)((char *)a1 + v7[8]) = *(_OWORD *)((char *)a2 + v7[8]);
        v14 = v7[9];
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))((char *)a2 + v14, 1, v11))
        {
          v17 = sub_1CF263D78(&qword_1ED2BBDA8);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          v13(v15, v16, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
        }
        *(_QWORD *)((char *)a1 + v7[10]) = *(_QWORD *)((char *)a2 + v7[10]);
        *(_OWORD *)((char *)a1 + v7[11]) = *(_OWORD *)((char *)a2 + v7[11]);
        *(_OWORD *)((char *)a1 + v7[12]) = *(_OWORD *)((char *)a2 + v7[12]);
        *(_OWORD *)((char *)a1 + v7[13]) = *(_OWORD *)((char *)a2 + v7[13]);
        *(_OWORD *)((char *)a1 + v7[14]) = *(_OWORD *)((char *)a2 + v7[14]);
        v32 = (int *)sub_1CF263D78(&qword_1ED2BC1A0);
        *(_OWORD *)((char *)a1 + v32[12]) = *(_OWORD *)((char *)a2 + v32[12]);
        *(_QWORD *)((char *)a1 + v32[16]) = *(_QWORD *)((char *)a2 + v32[16]);
        v33 = v32[20];
        v34 = (_QWORD *)((char *)a1 + v33);
        v35 = (uint64_t *)((char *)a2 + v33);
        v36 = *v35;
        if (*v35)
        {
          v37 = v35[1];
          *v34 = v36;
          v34[1] = v37;
        }
        else
        {
          *(_OWORD *)v34 = *(_OWORD *)v35;
        }
        goto LABEL_17;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for WorkResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1CF296F50()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1CF296F60()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  void *v8;
  char v9;
  char *v10;
  char *v11;
  void *v12;
  uint64_t *v13;

  result = type metadata accessor for WorkOrder();
  if (v1 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    v6 = MEMORY[0x1E0DEE9D0] + 64;
    v7 = "\b";
    v8 = &unk_1CF376F48;
    swift_getTupleTypeLayout();
    v10 = &v9;
    result = sub_1CF371FF0();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      v11 = &v4;
      v12 = &unk_1CF376F90;
      swift_getTupleTypeLayout2();
      v13 = &v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for WorkResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_bridgeObjectRetain();
    v9 = sub_1CF263D78(&qword_1EFB8D208);
    v10 = *(int *)(v9 + 48);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_1CF371FF0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    v14 = *(int *)(v9 + 64);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = v16[8];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for WorkResult(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v3 = a1 + *(int *)(sub_1CF263D78(&qword_1EFB8D208) + 48);
    v4 = sub_1CF371FF0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  return result;
}

_QWORD *initializeWithCopy for WorkResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    swift_bridgeObjectRetain();
    v7 = sub_1CF263D78(&qword_1EFB8D208);
    v8 = *(int *)(v7 + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1CF371FF0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(v7 + 64);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v13[8] = v14[8];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithCopy for WorkResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char v14;

  if (a1 != a2)
  {
    sub_1CF297394((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      v6 = sub_1CF263D78(&qword_1EFB8D208);
      v7 = *(int *)(v6 + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1CF371FF0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      v11 = *(int *)(v6 + 64);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = v13[8];
      *(_QWORD *)v12 = *(_QWORD *)v13;
      v12[8] = v14;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1CF297394(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WorkResult();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for WorkResult()
{
  uint64_t result;

  result = qword_1ED2BC170;
  if (!qword_1ED2BC170)
    return swift_getSingletonMetadata();
  return result;
}

_OWORD *initializeWithTake for WorkResult(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v6 = sub_1CF263D78(&qword_1EFB8D208);
    v7 = *(int *)(v6 + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1CF371FF0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    v11 = *(int *)(v6 + 64);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *assignWithTake for WorkResult(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  if (a1 != a2)
  {
    sub_1CF297394((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v6 = sub_1CF263D78(&qword_1EFB8D208);
      v7 = *(int *)(v6 + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1CF371FF0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      v11 = *(int *)(v6 + 64);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      *(_QWORD *)v12 = *(_QWORD *)v13;
      v12[8] = v13[8];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1CF2975BC()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  result = sub_1CF371FF0();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v2[4] = v2;
    v2[5] = &unk_1CF377010;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t PopulatedDictionary.init(_:_:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  void (*v34)(void);
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  char *v37;
  uint64_t result;
  _QWORD v39[2];
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;

  v44 = a6;
  v45 = a7;
  v41 = a2;
  v11 = sub_1CF372368();
  MEMORY[0x1E0C80A78](v11, v12);
  v42 = (char *)v39 - v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v43 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v16 = MEMORY[0x1E0C80A78](TupleTypeMetadata2, v15);
  v46 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v16, v18);
  v21 = (char *)v39 - v20;
  v23 = MEMORY[0x1E0C80A78](v19, v22);
  v25 = (char *)v39 - v24;
  v26 = (char *)v39 + *(int *)(v23 + 48) - v24;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32);
  v40 = *(_QWORD *)(a4 - 8);
  v28 = v40;
  v27((char *)v39 - v24, a1, a4);
  v29 = *(_QWORD *)(a5 - 8);
  v30 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
  v30(v26, v41, a5);
  v47 = a3;
  v31 = *(int *)(TupleTypeMetadata2 + 48);
  v32 = v21;
  v39[1] = v21;
  v33 = &v21[v31];
  v41 = &v21[v31];
  v34 = *(void (**)(void))(v28 + 16);
  ((void (*)(char *, char *, uint64_t))v34)(v32, v25, a4);
  v35 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  v35(v33, v26, a5);
  v36 = &v46[*(int *)(TupleTypeMetadata2 + 48)];
  v34();
  v35(v36, v26, a5);
  v37 = v42;
  v30(v42, v36, a5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v37, 0, 1, a5);
  sub_1CF372104();
  sub_1CF37211C();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v25, TupleTypeMetadata2);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v46, a4);
  result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v41, a5);
  *v45 = v47;
  return result;
}

uint64_t PopulatedDictionary.init(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1CF372104();
  MEMORY[0x1D17CC2F0](MEMORY[0x1E0DEA0E0], v4);
  result = Collection.isPopulated.getter();
  if ((result & 1) == 0)
  {
    result = swift_bridgeObjectRelease();
    a1 = 0;
  }
  *a2 = a1;
  return result;
}

uint64_t static PopulatedDictionary<>.== infix(_:_:)()
{
  return sub_1CF372110();
}

uint64_t sub_1CF297918()
{
  return static PopulatedDictionary<>.== infix(_:_:)();
}

uint64_t PopulatedDictionary.debugDescription.getter()
{
  uint64_t v0;

  v0 = sub_1CF372104();
  MEMORY[0x1D17CC2F0](MEMORY[0x1E0DEA0E8], v0);
  sub_1CF372494();
  return 0;
}

uint64_t sub_1CF29799C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for PopulatedDictionary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CF2979B0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PopulatedDictionary);
}

uint64_t sub_1CF2979B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1D17CC26C](a1, v6, a5);
}

id static Dictionary<>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  sub_1CF297ACC(a1);
  v3 = objc_allocWithZone(MEMORY[0x1E0C99D80]);
  v4 = (void *)sub_1CF3720F8();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithDictionary_, v4);

  sub_1CF297ACC(a2);
  v6 = (void *)sub_1CF3720F8();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_isEqualToDictionary_, v6);

  return v7;
}

{
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  sub_1CF297E80(a1);
  v3 = objc_allocWithZone(MEMORY[0x1E0C99D80]);
  v4 = (void *)sub_1CF3720F8();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithDictionary_, v4);

  sub_1CF297E80(a2);
  v6 = (void *)sub_1CF3720F8();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_isEqualToDictionary_, v6);

  return v7;
}

uint64_t sub_1CF297ACC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[2];

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1CF263D78(&qword_1EFB8D220);
    v2 = sub_1CF372470();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v26)
        goto LABEL_37;
      v14 = *(_QWORD *)(v27 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v26)
          goto LABEL_37;
        v14 = *(_QWORD *)(v27 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v26)
            goto LABEL_37;
          v14 = *(_QWORD *)(v27 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    *(_QWORD *)&v36[0] = *v17;
    *((_QWORD *)&v36[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    sub_1CF263D78(&qword_1EFB8D228);
    swift_dynamicCast();
    v32 = v28;
    v33 = v29;
    v34 = v30;
    sub_1CF298584(&v31, v35);
    v28 = v32;
    v29 = v33;
    v30 = v34;
    sub_1CF298584(v35, v36);
    sub_1CF298584(v36, &v32);
    result = sub_1CF3723A4();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(_QWORD *)(v10 + 32) = v30;
    result = (uint64_t)sub_1CF298584(&v32, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_1CF298594();
    return v2;
  }
  v14 = *(_QWORD *)(v27 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1CF297E80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1CF263D78(&qword_1EFB8D220);
    v2 = sub_1CF372470();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1CF298548(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1CF298584(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1CF298584(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1CF298584(v36, v37);
    sub_1CF298584(v37, &v33);
    result = sub_1CF3723A4();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_1CF298584(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1CF298594();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t static Optional<A>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  id v4;
  void *v5;
  id v6;
  void *v7;

  v2 = (a1 | a2) == 0;
  if (a1 && a2)
  {
    sub_1CF297ACC(a1);
    v4 = objc_allocWithZone(MEMORY[0x1E0C99D80]);
    v5 = (void *)sub_1CF3720F8();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v4, sel_initWithDictionary_, v5);

    sub_1CF297ACC(a2);
    v7 = (void *)sub_1CF3720F8();
    swift_bridgeObjectRelease();
    v2 = (unint64_t)objc_msgSend(v6, sel_isEqualToDictionary_, v7);

  }
  return v2;
}

id static PopulatedDictionary<>.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = *a2;
  sub_1CF297ACC(*a1);
  v3 = objc_allocWithZone(MEMORY[0x1E0C99D80]);
  v4 = (void *)sub_1CF3720F8();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithDictionary_, v4);

  sub_1CF297ACC(v2);
  v6 = (void *)sub_1CF3720F8();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_isEqualToDictionary_, v6);

  return v7;
}

{
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = *a2;
  sub_1CF297E80(*a1);
  v3 = objc_allocWithZone(MEMORY[0x1E0C99D80]);
  v4 = (void *)sub_1CF3720F8();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithDictionary_, v4);

  sub_1CF297E80(v2);
  v6 = (void *)sub_1CF3720F8();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_isEqualToDictionary_, v6);

  return v7;
}

unint64_t static Optional<A>.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  BOOL v5;
  id v6;
  void *v7;
  id v8;
  void *v9;

  v2 = *a1;
  v3 = *a2;
  v4 = (v2 | *a2) == 0;
  if (v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    sub_1CF297ACC(v2);
    v6 = objc_allocWithZone(MEMORY[0x1E0C99D80]);
    v7 = (void *)sub_1CF3720F8();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v6, sel_initWithDictionary_, v7);

    sub_1CF297ACC(v3);
    v9 = (void *)sub_1CF3720F8();
    swift_bridgeObjectRelease();
    v4 = (unint64_t)objc_msgSend(v8, sel_isEqualToDictionary_, v9);

  }
  return v4;
}

{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  BOOL v5;
  id v6;
  void *v7;
  id v8;
  void *v9;

  v2 = *a1;
  v3 = *a2;
  v4 = (v2 | *a2) == 0;
  if (v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    sub_1CF297E80(v2);
    v6 = objc_allocWithZone(MEMORY[0x1E0C99D80]);
    v7 = (void *)sub_1CF3720F8();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v6, sel_initWithDictionary_, v7);

    sub_1CF297E80(v3);
    v9 = (void *)sub_1CF3720F8();
    swift_bridgeObjectRelease();
    v4 = (unint64_t)objc_msgSend(v8, sel_isEqualToDictionary_, v9);

  }
  return v4;
}

uint64_t sub_1CF298548(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_1CF298584(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1CF298594()
{
  return swift_release();
}

uint64_t type metadata accessor for DefaultWorkerFactory()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of IntBucketConfigurationStore.configuration()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PurposeConfigurationStore.configurationFor(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void static BundleID.appStore.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000001CF381110;
}

void static BundleID.news.getter(char *a1@<X8>)
{
  strcpy(a1, "com.apple.news");
  a1[15] = -18;
}

void static BundleID.promotedContentDaemon.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001DLL;
  a1[1] = 0x80000001CF381130;
}

void static BundleID.stocks.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x80000001CF381150;
}

void PurposeConfiguration.boundary.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

APFoundation::PurposeConfiguration __swiftcall PurposeConfiguration.init(boundary:)(APFoundation::PurposeConfiguration boundary)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)boundary.boundary;
  return boundary;
}

BOOL static PurposeConfiguration.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

BOOL static PurposeBoundary.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

BOOL sub_1CF29869C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PurposeBoundary.hash(into:)()
{
  return sub_1CF372524();
}

uint64_t PurposeBoundary.hashValue.getter()
{
  sub_1CF372518();
  sub_1CF372524();
  return sub_1CF37253C();
}

uint64_t sub_1CF298720()
{
  sub_1CF372518();
  sub_1CF372524();
  return sub_1CF37253C();
}

uint64_t sub_1CF298764()
{
  return sub_1CF372524();
}

uint64_t sub_1CF29878C()
{
  sub_1CF372518();
  sub_1CF372524();
  return sub_1CF37253C();
}

uint64_t PurposeConfiguration.debugDescription.getter()
{
  sub_1CF3721C4();
  sub_1CF37244C();
  return 0;
}

uint64_t sub_1CF298844()
{
  sub_1CF3721C4();
  sub_1CF37244C();
  return 0;
}

uint64_t PurposeBoundary.debugDescription.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C616E7265746E69;
  else
    return 0x6C616E7265747865;
}

unint64_t sub_1CF2988E8()
{
  unint64_t result;

  result = qword_1EFB8D230;
  if (!qword_1EFB8D230)
  {
    result = MEMORY[0x1D17CC2F0](&protocol conformance descriptor for PurposeBoundary, &type metadata for PurposeBoundary);
    atomic_store(result, (unint64_t *)&qword_1EFB8D230);
  }
  return result;
}

uint64_t sub_1CF29892C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C616E7265746E69;
  else
    return 0x6C616E7265747865;
}

_BYTE *initializeBufferWithCopyOfBuffer for WorkState(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for PurposeConfiguration()
{
  return &type metadata for PurposeConfiguration;
}

uint64_t _s12APFoundation15PurposeBoundaryOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12APFoundation15PurposeBoundaryOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CF298A58 + 4 * byte_1CF377165[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CF298A8C + 4 * byte_1CF377160[v4]))();
}

uint64_t sub_1CF298A8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF298A94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF298A9CLL);
  return result;
}

uint64_t sub_1CF298AA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF298AB0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CF298AB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF298ABC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF298AC8(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1CF298AD0(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PurposeBoundary()
{
  return &type metadata for PurposeBoundary;
}

uint64_t IntBucketConfiguration.unknownBucketName.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t IntBucketConfiguration.discreteBuckets.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IntBucketConfiguration.classifiedBuckets.getter()
{
  return swift_bridgeObjectRetain();
}

APFoundation::IntBucketConfiguration __swiftcall IntBucketConfiguration.init(unknownBucketName:discreteBuckets:classifiedBuckets:)(Swift::Int unknownBucketName, Swift::OpaquePointer discreteBuckets, Swift::OpaquePointer classifiedBuckets)
{
  Swift::OpaquePointer *v3;
  APFoundation::IntBucketConfiguration result;

  v3->_rawValue = (void *)unknownBucketName;
  v3[1]._rawValue = discreteBuckets._rawValue;
  v3[2]._rawValue = classifiedBuckets._rawValue;
  result.classifiedBuckets = classifiedBuckets;
  result.discreteBuckets = discreteBuckets;
  result.unknownBucketName = unknownBucketName;
  return result;
}

uint64_t static IntBucketConfiguration.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (*a1 == *a2 && (v2 = a2[2], v3 = a1[2], (sub_1CF298B60(a1[1], a2[1]) & 1) != 0))
    return sub_1CF298CD4(v3, v2);
  else
    return 0;
}

uint64_t sub_1CF298B60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *v3;
  char *i;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (_BYTE *)(a2 + 48);
  for (i = (char *)(a1 + 48); ; i += 24)
  {
    v6 = *((_QWORD *)i - 2);
    v5 = *((_QWORD *)i - 1);
    v7 = *i;
    v9 = *((_QWORD *)v3 - 2);
    v8 = *((_QWORD *)v3 - 1);
    if ((*i & 1) == 0)
      break;
    if ((*v3 & 1) == 0)
      goto LABEL_18;
    sub_1CF299444(*((_QWORD *)i - 2), *((_QWORD *)i - 1), 1);
    sub_1CF299444(v9, v8, 1);
    if (v6 != v9 || v5 != v8)
      return 0;
LABEL_5:
    v3 += 24;
    if (!--v2)
      return 1;
  }
  v11 = *((_QWORD *)i - 2);
  if ((*v3 & 1) == 0)
  {
    v12 = sub_1CF298F3C(v11, *((_QWORD *)v3 - 2));
    sub_1CF299428(v9, v8, 0);
    sub_1CF299428(v6, v5, 0);
    sub_1CF299444(v6, v5, 0);
    sub_1CF299444(v9, v8, 0);
    if ((v12 & 1) == 0)
      return 0;
    goto LABEL_5;
  }
  sub_1CF299428(v11, *((_QWORD *)i - 1), 0);
  swift_bridgeObjectRetain();
LABEL_18:
  sub_1CF299428(v9, v8, v7 ^ 1);
  sub_1CF299444(v6, v5, v7);
  sub_1CF299444(v9, v8, v7 ^ 1);
  sub_1CF299444(v6, v5, v7);
  return 0;
}

uint64_t sub_1CF298CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = 0;
  v4 = a1 + 32;
  v5 = a2 + 32;
  v22 = a1 + 32;
  v23 = *(_QWORD *)(a1 + 16);
  v21 = a2 + 32;
  while (1)
  {
    v7 = (_QWORD *)(v4 + 16 * v3);
    v8 = (_QWORD *)(v5 + 16 * v3);
    if (*v7 != *v8)
      return 0;
    v9 = v7[1];
    v10 = v8[1];
    v11 = *(_QWORD *)(v9 + 16);
    if (v11 != *(_QWORD *)(v10 + 16))
      return 0;
    if (v11 && v9 != v10)
      break;
LABEL_7:
    ++v3;
    result = 1;
    if (v3 == v2)
      return result;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = 0;
  while (1)
  {
    v15 = *(_QWORD *)(v9 + v13 + 32);
    v14 = *(_QWORD *)(v9 + v13 + 40);
    v16 = *(_BYTE *)(v9 + v13 + 48);
    v18 = *(_QWORD *)(v10 + v13 + 32);
    v17 = *(_QWORD *)(v10 + v13 + 40);
    if ((v16 & 1) == 0)
      break;
    if ((*(_BYTE *)(v10 + v13 + 48) & 1) == 0)
      goto LABEL_27;
    sub_1CF299444(*(_QWORD *)(v9 + v13 + 32), *(_QWORD *)(v9 + v13 + 40), 1);
    sub_1CF299444(v18, v17, 1);
    if (v15 != v18 || v14 != v17)
      goto LABEL_28;
LABEL_15:
    v13 += 24;
    if (!--v11)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = v22;
      v2 = v23;
      v5 = v21;
      goto LABEL_7;
    }
  }
  if ((*(_BYTE *)(v10 + v13 + 48) & 1) == 0)
  {
    v20 = sub_1CF298F3C(*(_QWORD *)(v9 + v13 + 32), *(_QWORD *)(v10 + v13 + 32));
    sub_1CF299428(v18, v17, 0);
    sub_1CF299428(v15, v14, 0);
    sub_1CF299444(v15, v14, 0);
    sub_1CF299444(v18, v17, 0);
    if ((v20 & 1) == 0)
      goto LABEL_28;
    goto LABEL_15;
  }
  swift_bridgeObjectRetain_n();
LABEL_27:
  sub_1CF299428(v18, v17, v16 ^ 1);
  sub_1CF299444(v15, v14, v16);
  sub_1CF299444(v18, v17, v16 ^ 1);
  sub_1CF299444(v15, v14, v16);
LABEL_28:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1CF298EE8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (*a1 == *a2 && (v2 = a2[2], v3 = a1[2], (sub_1CF298B60(a1[1], a2[1]) & 1) != 0))
    return sub_1CF298CD4(v3, v2);
  else
    return 0;
}

uint64_t sub_1CF298F3C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_32:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_22;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v15 = v13 + 3;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_32;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_22;
      }
    }
    v4 = v15;
LABEL_22:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    v16 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v12);
    result = sub_1CF37250C();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(a2 + 48);
  }
  while (*(_QWORD *)(v19 + 8 * v18) == v16);
  v20 = ~v17;
  while (1)
  {
    v18 = (v18 + 1) & v20;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    if (*(_QWORD *)(v19 + 8 * v18) == v16)
      goto LABEL_7;
  }
}

uint64_t ClassifiedIntBucket.name.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ClassifiedIntBucket.contents.getter()
{
  return swift_bridgeObjectRetain();
}

APFoundation::ClassifiedIntBucket __swiftcall ClassifiedIntBucket.init(name:contents:)(Swift::Int name, Swift::OpaquePointer contents)
{
  Swift::OpaquePointer *v2;
  APFoundation::ClassifiedIntBucket result;

  v2->_rawValue = (void *)name;
  v2[1]._rawValue = contents._rawValue;
  result.contents = contents;
  result.name = name;
  return result;
}

uint64_t static ClassifiedIntBucket.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2)
    return sub_1CF298B60(a1[1], a2[1]);
  else
    return 0;
}

uint64_t sub_1CF299140(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2)
    return sub_1CF298B60(a1[1], a2[1]);
  else
    return 0;
}

BOOL _s12APFoundation17IntBucketContentsO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v10;
  char v11;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  if ((v4 & 1) == 0)
  {
    v10 = *(_QWORD *)a1;
    if ((*(_BYTE *)(a2 + 16) & 1) == 0)
    {
      v11 = sub_1CF298F3C(v10, *(_QWORD *)a2);
      sub_1CF299428(v6, v5, 0);
      sub_1CF299428(v3, v2, 0);
      sub_1CF299444(v3, v2, 0);
      sub_1CF299444(v6, v5, 0);
      return v11 & 1;
    }
    swift_bridgeObjectRetain();
LABEL_11:
    sub_1CF299428(v6, v5, v7);
    sub_1CF299444(v3, v2, v4);
    sub_1CF299444(v6, v5, v7);
    return 0;
  }
  if (!*(_BYTE *)(a2 + 16))
    goto LABEL_11;
  sub_1CF299444(*(_QWORD *)a1, v2, 1);
  sub_1CF299444(v6, v5, 1);
  return v3 == v6 && v2 == v5;
}

uint64_t destroy for IntBucketConfiguration()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s12APFoundation22IntBucketConfigurationVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for IntBucketConfiguration(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for IntBucketConfiguration(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for IntBucketConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IntBucketConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IntBucketConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntBucketConfiguration()
{
  return &type metadata for IntBucketConfiguration;
}

uint64_t sub_1CF299428(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for IntBucketContents(uint64_t a1)
{
  return sub_1CF299444(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1CF299444(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s12APFoundation17IntBucketContentsOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1CF299428(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for IntBucketContents(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1CF299428(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1CF299444(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for IntBucketContents(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for IntBucketContents(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1CF299444(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for IntBucketContents(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IntBucketContents(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1CF2995D0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1CF2995D8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for IntBucketContents()
{
  return &type metadata for IntBucketContents;
}

_QWORD *initializeBufferWithCopyOfBuffer for ClassifiedIntBucket(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ClassifiedIntBucket()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for ClassifiedIntBucket(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ClassifiedIntBucket(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for ClassifiedIntBucket(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClassifiedIntBucket(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClassifiedIntBucket(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassifiedIntBucket()
{
  return &type metadata for ClassifiedIntBucket;
}

uint64_t JSONIntBucketConfigurationStore.__allocating_init(jsonSource:fallback:)(__int128 *a1, __int128 *a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  sub_1CF290894(a1, v4 + 16);
  sub_1CF290894(a2, v4 + 56);
  return v4;
}

uint64_t JSONIntBucketConfigurationStore.init(jsonSource:fallback:)(__int128 *a1, __int128 *a2)
{
  uint64_t v2;

  sub_1CF290894(a1, v2 + 16);
  sub_1CF290894(a2, v2 + 56);
  return v2;
}

uint64_t JSONIntBucketConfigurationStore.deinit()
{
  uint64_t v0;

  sub_1CF263E18(v0 + 16);
  sub_1CF263E18(v0 + 56);
  return v0;
}

uint64_t JSONIntBucketConfigurationStore.__deallocating_deinit()
{
  uint64_t v0;

  sub_1CF263E18(v0 + 16);
  sub_1CF263E18(v0 + 56);
  return swift_deallocClassInstance();
}

APFoundation::IntBucketConfiguration __swiftcall JSONIntBucketConfigurationStore.configuration()()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  Swift::Int v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  APFoundation::IntBucketConfiguration result;

  v2 = v0;
  v3 = v1[5];
  v4 = v1[6];
  sub_1CF263DF4(v1 + 2, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  if (v5 && (sub_1CF29C628(v5, &v13), v6 = swift_bridgeObjectRelease(), (v9 = v14) != 0))
  {
    v10 = v15;
    *v2 = v13;
    v2[1] = v9;
    v2[2] = v10;
  }
  else
  {
    v12 = v1[10];
    v11 = v1[11];
    sub_1CF263DF4(v1 + 7, v12);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v12, v11);
  }
  result.classifiedBuckets._rawValue = v8;
  result.discreteBuckets._rawValue = v7;
  result.unknownBucketName = v6;
  return result;
}

unint64_t sub_1CF2998D0()
{
  return (unint64_t)JSONIntBucketConfigurationStore.configuration()();
}

uint64_t type metadata accessor for JSONIntBucketConfigurationStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for JSONIntBucketConfigurationStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of JSONIntBucketConfigurationStore.__allocating_init(jsonSource:fallback:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t getEnumTagSinglePayload for WorkState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CF299A00 + 4 * byte_1CF3773D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CF299A34 + 4 * byte_1CF3773D0[v4]))();
}

uint64_t sub_1CF299A34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF299A3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF299A44);
  return result;
}

uint64_t sub_1CF299A50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF299A58);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CF299A5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF299A64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1CF299A70(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for WorkState()
{
  return &type metadata for WorkState;
}

BOOL sub_1CF299A88(char *a1, char *a2)
{
  return qword_1CF377490[*a1] == qword_1CF377490[*a2];
}

uint64_t sub_1CF299AAC()
{
  sub_1CF372518();
  sub_1CF372524();
  return sub_1CF37253C();
}

uint64_t sub_1CF299AF8()
{
  return sub_1CF372524();
}

uint64_t sub_1CF299B2C()
{
  sub_1CF372518();
  sub_1CF372524();
  return sub_1CF37253C();
}

_QWORD *sub_1CF299B74@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;

  if (*result >= 4uLL)
    v2 = 3;
  else
    v2 = 0x2030100u >> (8 * *result);
  *a2 = v2;
  return result;
}

void sub_1CF299B9C(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1CF377490[*v1];
}

unint64_t sub_1CF299BB8()
{
  unint64_t result;

  result = qword_1EFB8D238;
  if (!qword_1EFB8D238)
  {
    result = MEMORY[0x1D17CC2F0](&unk_1CF377464, &type metadata for WorkState);
    atomic_store(result, (unint64_t *)&qword_1EFB8D238);
  }
  return result;
}

uint64_t DefaultPurposeConfigurationStore.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t DefaultPurposeConfigurationStore.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t DefaultPurposeConfigurationStore.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DefaultPurposeConfigurationStore.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t DefaultPurposeConfigurationStore.configurationFor(_:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  BOOL v2;
  BOOL v3;

  v2 = result != 8501;
  if (result == 103)
    v2 = 0;
  v3 = result != 101;
  if (result == 100)
    v3 = 0;
  if (result > 102)
    v3 = v2;
  *a2 = v3;
  return result;
}

uint64_t sub_1CF299C64@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  return DefaultPurposeConfigurationStore.configurationFor(_:)(a1, a2);
}

uint64_t type metadata accessor for DefaultPurposeConfigurationStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for DefaultPurposeConfigurationStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DefaultPurposeConfigurationStore.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of BucketConfigurationJSONSource.json()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t static WorkCoordinator.shared.getter()
{
  return swift_retain();
}

uint64_t sub_1CF299CC0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  NSArray *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  void *v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  _OWORD v56[2];
  uint64_t v57;

  v52 = sub_1CF371EDC();
  v2 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52, v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CF371F3C();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x1E0C80A78](v6, v8);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v12);
  v53 = (char *)&v48 - v13;
  v14 = sub_1CF263D78(&qword_1ED2BB3D8);
  v16 = MEMORY[0x1E0C80A78](v14, v15);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v16, v19);
  v55 = (char *)&v48 - v21;
  MEMORY[0x1E0C80A78](v20, v22);
  v24 = (char *)&v48 - v23;
  v51 = v7;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v25((char *)&v48 - v23, 1, 1, v6);
  v26 = NSSearchPathForDirectoriesInDomains(NSApplicationSupportDirectory, 1uLL, 1);
  v27 = sub_1CF372278();

  v54 = *(_QWORD *)(v27 + 16);
  if (v54)
  {
    v49 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v48 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v25;
    v25(v18, 1, 1, v6);
    v28 = *MEMORY[0x1E0CAFD78];
    v50 = v24;
    v29 = v2;
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
    v31 = v52;
    v30(v5, v28, v52);
    sub_1CF371F24();
    *(_QWORD *)&v56[0] = 0xD00000000000001DLL;
    *((_QWORD *)&v56[0] + 1) = 0x80000001CF381130;
    v30(v5, v28, v31);
    sub_1CF28DE8C();
    v32 = v53;
    sub_1CF371F30();
    v33 = *(void (**)(char *, uint64_t))(v29 + 8);
    v33(v5, v31);
    v34 = *(void (**)(char *, uint64_t))(v51 + 8);
    v34(v11, v6);
    *(_QWORD *)&v56[0] = 7562359;
    *((_QWORD *)&v56[0] + 1) = 0xE300000000000000;
    v30(v5, v28, v31);
    v24 = v50;
    v35 = (uint64_t)v55;
    sub_1CF371F30();
    v33(v5, v31);
    swift_bridgeObjectRelease();
    v34(v32, v6);
    sub_1CF263DB8((uint64_t)v24, &qword_1ED2BB3D8);
    v36 = v48;
    v48(v35, 0, 1, v6);
    a1 = v49;
    sub_1CF29B110(v35, (uint64_t)v24, &qword_1ED2BB3D8);
    v37 = v6;
  }
  else
  {
    swift_bridgeObjectRelease();
    v35 = (uint64_t)v55;
    v37 = v6;
    v36 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v25;
  }
  type metadata accessor for WorkOrderDatabaseStore();
  v38 = swift_allocObject();
  sub_1CF29A1BC();
  v39 = a1;
  v40 = sub_1CF37235C();
  type metadata accessor for DatabaseManager();
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = v39;
  *(_QWORD *)(v41 + 24) = v40;
  *(_QWORD *)(v38 + 16) = v41;
  sub_1CF295064((uint64_t)v24, v35, &qword_1ED2BB3D8);
  type metadata accessor for WorkDataStore();
  v42 = swift_allocObject();
  v43 = v42 + OBJC_IVAR____TtC12APFoundation13WorkDataStore_basePath;
  v36(v42 + OBJC_IVAR____TtC12APFoundation13WorkDataStore_basePath, 1, 1, v37);
  swift_beginAccess();
  sub_1CF29AA58(v35, v43);
  swift_endAccess();
  type metadata accessor for DefaultWorkerFactory();
  memset(v56, 0, sizeof(v56));
  v57 = 0;
  v44 = swift_allocObject();
  type metadata accessor for WorkTimer();
  v45 = swift_allocObject();
  off_1ED2BBE08 = (_UNKNOWN *)sub_1CF29AEFC(v38, v42, v44, v45, (uint64_t)v56);
  result = swift_release();
  v47 = off_1ED2BBE08;
  if (off_1ED2BBE08)
  {
    *((_BYTE *)off_1ED2BBE08 + 24) = v54 != 0;
    swift_retain();
    sub_1CF263DB8((uint64_t)v24, &qword_1ED2BB3D8);
    return (uint64_t)v47;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1CF29A1BC()
{
  unint64_t result;

  result = qword_1ED2BBE60;
  if (!qword_1ED2BBE60)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED2BBE60);
  }
  return result;
}

void sub_1CF29A1F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v1 = sub_1CF371FF0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1, v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend((id)objc_opt_self(), sel_deviceUnlockedSinceBoot))
  {
    if (*(_BYTE *)(v0 + 24) == 1)
    {
      sub_1CF371FE4();
      sub_1CF290D54((uint64_t)v5);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      return;
    }
    sub_1CF3722F0();
    sub_1CF29A1BC();
    v6 = (void *)sub_1CF37235C();
    sub_1CF372068();

    v8 = (void *)sub_1CF372140();
    APSimulateCrash((const char *)5, v8, 0);
  }
  else
  {
    sub_1CF3722F0();
    sub_1CF29A1BC();
    v8 = (void *)sub_1CF37235C();
    sub_1CF372068();
  }

}

uint64_t WorkCoordinator.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t WorkCoordinator.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t WorkCoordinator.createAndSchedule(workerName:group:workData:scheduledTime:requestorId:requestorData:flags:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v28 = a6;
  v29 = a8;
  v26 = a4;
  v27 = a5;
  v25 = a3;
  v24 = a9;
  v14 = sub_1CF263D78(&qword_1ED2BBDA8);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)a11;
  v19 = *(_BYTE *)(a11 + 8);
  v20 = sub_1CF371FF0();
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v17, a7, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
  v30 = v18;
  v31 = v19;
  v22 = sub_1CF29391C(a1, a2, v25, v26, v27, v28, (uint64_t)v17, v29, v24, *((uint64_t *)&v24 + 1), a10, &v30, 0, 0);
  sub_1CF263DB8((uint64_t)v17, &qword_1ED2BBDA8);
  return v22;
}

uint64_t WorkCoordinator.createAndRun(workerName:group:workData:requestorId:requestorData:flags:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v24 = a8;
  v25 = a5;
  v26 = a6;
  v27 = a7;
  v15 = sub_1CF263D78(&qword_1ED2BBDA8);
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)a11;
  v20 = *(_BYTE *)(a11 + 8);
  v21 = sub_1CF371FF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v18, 1, 1, v21);
  v28 = v19;
  v29 = v20;
  v22 = sub_1CF29391C(a1, a2, a3, a4, v25, v26, (uint64_t)v18, v27, v24, a9, a10, &v28, 0, 0);
  sub_1CF263DB8((uint64_t)v18, &qword_1ED2BBDA8);
  return v22;
}

uint64_t WorkCoordinator.createAndRun(workerName:group:workData:requestorId:requestorData:flags:configClosure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a8;
  v26 = a4;
  v28 = a6;
  v29 = a7;
  v27 = a5;
  v24 = a3;
  v15 = sub_1CF263D78(&qword_1ED2BBDA8);
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)a11;
  v20 = *(_BYTE *)(a11 + 8);
  v21 = sub_1CF371FF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v18, 1, 1, v21);
  v30 = v19;
  v31 = v20;
  v22 = sub_1CF29391C(a1, a2, v24, v26, v27, v28, (uint64_t)v18, v29, v25, a9, a10, &v30, a12, a13);
  sub_1CF263DB8((uint64_t)v18, &qword_1ED2BBDA8);
  return v22;
}

uint64_t sub_1CF29A7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v28 = a6;
  v29 = a8;
  v26 = a4;
  v27 = a5;
  v25 = a3;
  v24 = a9;
  v14 = sub_1CF263D78(&qword_1ED2BBDA8);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)a11;
  v19 = *(_BYTE *)(a11 + 8);
  v20 = sub_1CF371FF0();
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v17, a7, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
  v30 = v18;
  v31 = v19;
  v22 = sub_1CF29391C(a1, a2, v25, v26, v27, v28, (uint64_t)v17, v29, v24, *((uint64_t *)&v24 + 1), a10, &v30, 0, 0);
  sub_1CF263DB8((uint64_t)v17, &qword_1ED2BBDA8);
  return v22;
}

uint64_t sub_1CF29A924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a8;
  v26 = a4;
  v28 = a6;
  v29 = a7;
  v27 = a5;
  v24 = a3;
  v15 = sub_1CF263D78(&qword_1ED2BBDA8);
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)a11;
  v20 = *(_BYTE *)(a11 + 8);
  v21 = sub_1CF371FF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v18, 1, 1, v21);
  v30 = v19;
  v31 = v20;
  v22 = sub_1CF29391C(a1, a2, v24, v26, v27, v28, (uint64_t)v18, v29, v25, a9, a10, &v30, a12, a13);
  sub_1CF263DB8((uint64_t)v18, &qword_1ED2BBDA8);
  return v22;
}

uint64_t sub_1CF29AA58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CF263D78(&qword_1ED2BB3D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1CF29AAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v31[3];
  uint64_t v32;
  _UNKNOWN **v33;
  _QWORD v34[3];
  uint64_t v35;
  _UNKNOWN **v36;
  _QWORD v37[5];

  v10 = type metadata accessor for WorkOrderDatabaseStore();
  v37[3] = v10;
  v37[4] = &off_1E8C49708;
  v37[0] = a1;
  v11 = type metadata accessor for WorkDataStore();
  v35 = v11;
  v36 = &off_1E8C49858;
  v34[0] = a2;
  v12 = type metadata accessor for DefaultWorkerFactory();
  v32 = v12;
  v33 = &off_1E8C492A0;
  v31[0] = a3;
  type metadata accessor for WorkCommandProcessor();
  v13 = (_QWORD *)swift_allocObject();
  v14 = sub_1CF295348((uint64_t)v37, v10);
  MEMORY[0x1E0C80A78](v14, v14);
  v16 = (_QWORD *)((char *)&v31[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v17 + 16))(v16);
  v18 = sub_1CF295348((uint64_t)v34, v35);
  MEMORY[0x1E0C80A78](v18, v18);
  v20 = (_QWORD *)((char *)&v31[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v21 + 16))(v20);
  v22 = sub_1CF295348((uint64_t)v31, v32);
  MEMORY[0x1E0C80A78](v22, v22);
  v24 = (_QWORD *)((char *)&v31[-1] - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v25 + 16))(v24);
  v26 = *v16;
  v27 = *v20;
  v28 = *v24;
  v13[16] = v10;
  v13[17] = &off_1E8C49708;
  v13[13] = v26;
  v13[21] = v11;
  v13[22] = &off_1E8C49858;
  v13[18] = v27;
  v13[11] = v12;
  v13[12] = &off_1E8C492A0;
  v13[7] = a4;
  v13[8] = v28;
  sub_1CF29B110(a5, (uint64_t)(v13 + 2), &qword_1ED2BBDE0);
  sub_1CF263E18((uint64_t)v31);
  sub_1CF263E18((uint64_t)v34);
  sub_1CF263E18((uint64_t)v37);
  return v13;
}

uint64_t sub_1CF29ACC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  _QWORD *v24;
  _BYTE v27[40];
  uint64_t v28[5];
  uint64_t v29[5];
  uint64_t v30[5];
  _QWORD v31[5];
  _QWORD v32[5];
  _QWORD v33[5];

  v33[3] = type metadata accessor for WorkOrderDatabaseStore();
  v33[4] = &off_1E8C49708;
  v33[0] = a1;
  v32[3] = type metadata accessor for WorkDataStore();
  v32[4] = &off_1E8C49858;
  v32[0] = a2;
  v31[3] = type metadata accessor for DefaultWorkerFactory();
  v31[4] = &off_1E8C492A0;
  v31[0] = a3;
  *(_BYTE *)(a6 + 24) = 1;
  sub_1CF2950A8((uint64_t)v33, (uint64_t)v30);
  sub_1CF2950A8((uint64_t)v32, (uint64_t)v29);
  sub_1CF2950A8((uint64_t)v31, (uint64_t)v28);
  sub_1CF295064(a5, (uint64_t)v27, &qword_1ED2BBDE0);
  v12 = sub_1CF295348((uint64_t)v30, v30[3]);
  MEMORY[0x1E0C80A78](v12, v12);
  v14 = (uint64_t *)&v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t *))(v15 + 16))(v14);
  v16 = sub_1CF295348((uint64_t)v29, v29[3]);
  MEMORY[0x1E0C80A78](v16, v16);
  v18 = (uint64_t *)&v27[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t *))(v19 + 16))(v18);
  v20 = sub_1CF295348((uint64_t)v28, v28[3]);
  MEMORY[0x1E0C80A78](v20, v20);
  v22 = (uint64_t *)&v27[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t *))(v23 + 16))(v22);
  v24 = sub_1CF29AAA0(*v14, *v18, *v22, a4, (uint64_t)v27);
  sub_1CF263E18((uint64_t)v28);
  sub_1CF263E18((uint64_t)v29);
  sub_1CF263E18((uint64_t)v30);
  sub_1CF263DB8(a5, &qword_1ED2BBDE0);
  sub_1CF263E18((uint64_t)v31);
  sub_1CF263E18((uint64_t)v32);
  sub_1CF263E18((uint64_t)v33);
  *(_QWORD *)(a6 + 16) = v24;
  return a6;
}

uint64_t sub_1CF29AEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v26[3];
  uint64_t v27;
  _UNKNOWN **v28;
  _QWORD v29[3];
  uint64_t v30;
  _UNKNOWN **v31;
  _QWORD v32[3];
  uint64_t v33;
  _UNKNOWN **v34;

  v33 = type metadata accessor for WorkOrderDatabaseStore();
  v34 = &off_1E8C49708;
  v32[0] = a1;
  v30 = type metadata accessor for WorkDataStore();
  v31 = &off_1E8C49858;
  v29[0] = a2;
  v27 = type metadata accessor for DefaultWorkerFactory();
  v28 = &off_1E8C492A0;
  v26[0] = a3;
  type metadata accessor for WorkCoordinator();
  v10 = swift_allocObject();
  v11 = sub_1CF295348((uint64_t)v32, v33);
  MEMORY[0x1E0C80A78](v11, v11);
  v13 = (_QWORD *)((char *)&v26[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v14 + 16))(v13);
  v15 = sub_1CF295348((uint64_t)v29, v30);
  MEMORY[0x1E0C80A78](v15, v15);
  v17 = (_QWORD *)((char *)&v26[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v18 + 16))(v17);
  v19 = sub_1CF295348((uint64_t)v26, v27);
  MEMORY[0x1E0C80A78](v19, v19);
  v21 = (_QWORD *)((char *)&v26[-1] - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  v23 = sub_1CF29ACC4(*v13, *v17, *v21, a4, a5, v10);
  sub_1CF263E18((uint64_t)v26);
  sub_1CF263E18((uint64_t)v29);
  sub_1CF263E18((uint64_t)v32);
  return v23;
}

uint64_t type metadata accessor for WorkCoordinator()
{
  return objc_opt_self();
}

uint64_t method lookup function for WorkCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static WorkCoordinator.create(database:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of WorkCoordinator.startNow()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t sub_1CF29B110(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1CF263D78(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1CF29B154()
{
  uint64_t v0;

  v0 = sub_1CF372080();
  sub_1CF29B25C(v0, qword_1EFB8D240);
  sub_1CF29B244(v0, (uint64_t)qword_1EFB8D240);
  return sub_1CF372074();
}

uint64_t static Logger.eventCollection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EFB8CF20 != -1)
    swift_once();
  v2 = sub_1CF372080();
  v3 = sub_1CF29B244(v2, (uint64_t)qword_1EFB8D240);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1CF29B244(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t *sub_1CF29B25C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t static Tools.codableToBinaryData<A>(_:)()
{
  uint64_t v0;
  id v1;
  id v3;
  uint64_t v4;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36F8]), sel_initRequiringSecureCoding_, 1);
  sub_1CF37214C();
  sub_1CF372308();
  if (v0)
  {

    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_finishEncoding);
    v3 = objc_msgSend(v1, sel_encodedData);
    v4 = sub_1CF371F6C();

    return v4;
  }
}

uint64_t static Tools.codableFromBinaryData<A>(_:type:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v5;
  id v6;
  uint64_t result;

  v5 = objc_allocWithZone(MEMORY[0x1E0CB3710]);
  sub_1CF2951F8(a1, a2);
  v6 = sub_1CF29B620();
  result = sub_1CF28DD6C(a1, a2);
  if (!v2)
  {
    sub_1CF37214C();
    sub_1CF372314();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static Tools.fullClassName(_:)(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[32];

  sub_1CF298548(a1, (uint64_t)v19);
  v2 = sub_1CF372170();
  v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v4 = v2 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    v5 = 4 * v4;
    while (1)
    {
      swift_bridgeObjectRetain();
      v6 = sub_1CF372218();
      v8 = v7;
      swift_bridgeObjectRelease();
      if (v6 == 46 && v8 == 0xE100000000000000)
        break;
      v9 = sub_1CF3724AC();
      swift_bridgeObjectRelease();
      if ((v9 & 1) != 0 || v5 == (unint64_t)sub_1CF3721B8() >> 14)
        goto LABEL_12;
    }
    swift_bridgeObjectRelease();
  }
LABEL_12:
  v10 = sub_1CF372230();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  swift_bridgeObjectRelease();
  v17 = MEMORY[0x1D17CB4F8](v10, v12, v14, v16);
  swift_bridgeObjectRelease();
  sub_1CF3721C4();
  sub_1CF298548(a1, (uint64_t)v19);
  sub_1CF372158();
  sub_1CF3721C4();
  swift_bridgeObjectRelease();
  return v17;
}

id sub_1CF29B620()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_1CF371F60();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_1CF371ED0();

    swift_willThrow();
  }
  return v2;
}

ValueMetadata *type metadata accessor for Tools()
{
  return &type metadata for Tools;
}

uint64_t sub_1CF29B6EC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  int *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t *v77;

  v77 = a2;
  v4 = sub_1CF263D78(&qword_1ED2BBDA8);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CF371FF0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  sub_1CF263DF4(a1, v13);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 24))(3, v13, v14);
  if (!v2)
  {
    switch(result)
    {
      case 0:
        v76 = 0;
LABEL_9:
        v17 = a1[3];
        v18 = a1[4];
        sub_1CF263DF4(a1, v17);
        v74 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v18 + 56))(0, v17, v18);
        v75 = v19;
        v21 = a1[3];
        v20 = a1[4];
        sub_1CF263DF4(a1, v21);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 72))(1, v21, v20);
        v23 = a1[3];
        v24 = a1[4];
        sub_1CF263DF4(a1, v23);
        v71 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 64))(2, v23, v24);
        v73 = v25;
        v26 = a1[3];
        v27 = a1[4];
        sub_1CF263DF4(a1, v26);
        v70 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 64))(4, v26, v27);
        v72 = v28;
        v29 = a1[3];
        v30 = a1[4];
        sub_1CF263DF4(a1, v29);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 80))(5, v29, v30);
        v31 = a1[3];
        v32 = a1[4];
        sub_1CF263DF4(a1, v31);
        v69 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 24))(6, v31, v32);
        v33 = a1[3];
        v34 = a1[4];
        sub_1CF263DF4(a1, v33);
        v67 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 56))(7, v33, v34);
        v68 = v35;
        v36 = a1[3];
        v37 = a1[4];
        sub_1CF263DF4(a1, v36);
        v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 56))(8, v36, v37);
        v39 = a1[3];
        v40 = a1[4];
        v65 = v41;
        v66 = v38;
        sub_1CF263DF4(a1, v39);
        v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 64))(9, v39, v40);
        v63 = v43;
        v64 = v42;
        v44 = a1[3];
        v45 = a1[4];
        sub_1CF263DF4(a1, v44);
        v46 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 64))(10, v44, v45);
        v48 = v47;
        v49 = v77;
        v50 = v75;
        *v77 = v74;
        v49[1] = v50;
        v51 = (int *)type metadata accessor for WorkOrder();
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))((char *)v49 + v51[5], v12, v8);
        v52 = (uint64_t *)((char *)v49 + v51[6]);
        v53 = v73;
        *v52 = v71;
        v52[1] = v53;
        *((_BYTE *)v49 + v51[7]) = v76;
        v54 = (uint64_t *)((char *)v49 + v51[8]);
        v55 = v72;
        *v54 = v70;
        v54[1] = v55;
        result = sub_1CF29C558((uint64_t)v7, (uint64_t)v49 + v51[9]);
        *(uint64_t *)((char *)v49 + v51[10]) = v69;
        v56 = (uint64_t *)((char *)v49 + v51[11]);
        v57 = v68;
        *v56 = v67;
        v56[1] = v57;
        v58 = (uint64_t *)((char *)v49 + v51[12]);
        v59 = v65;
        *v58 = v66;
        v58[1] = v59;
        v60 = (uint64_t *)((char *)v49 + v51[13]);
        v61 = v63;
        *v60 = v64;
        v60[1] = v61;
        v62 = (uint64_t *)((char *)v49 + v51[14]);
        *v62 = v46;
        v62[1] = v48;
        return result;
      case 3:
        v16 = 2;
        goto LABEL_8;
      case 1:
        v16 = 1;
LABEL_8:
        v76 = v16;
        goto LABEL_9;
    }
    sub_1CF29C4D4();
    swift_allocError();
    *v22 = 0xD00000000000001BLL;
    v22[1] = 0x80000001CF381330;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1CF29BB68(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t inited;
  uint64_t v7;
  int *v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _UNKNOWN **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _UNKNOWN **v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  _UNKNOWN **v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  _UNKNOWN **v44;
  uint64_t v45;
  _QWORD v47[64];

  v2 = sub_1CF263D78(&qword_1ED2BBDA8);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CF263D78(&qword_1ED2BC1F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CF377570;
  v7 = a1[1];
  *(_QWORD *)(inited + 32) = *a1;
  v47[3] = inited + 32;
  *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 64) = &protocol witness table for String;
  v47[1] = v7;
  *(_QWORD *)(inited + 40) = v7;
  v8 = (int *)type metadata accessor for WorkOrder();
  v9 = (char *)a1 + v8[5];
  v10 = sub_1CF371FF0();
  *(_QWORD *)(inited + 96) = v10;
  *(_QWORD *)(inited + 104) = &protocol witness table for Date;
  v11 = sub_1CF29530C((uint64_t *)(inited + 72));
  v12 = *(_QWORD *)(v10 - 8);
  (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 16))(v11, v9, v10);
  v13 = (_QWORD *)((char *)a1 + v8[6]);
  v14 = v13[1];
  if (v14)
  {
    v15 = *v13;
    v16 = &protocol witness table for String;
    v17 = v14;
    v18 = MEMORY[0x1E0DEA968];
  }
  else
  {
    v15 = 0;
    v17 = 0;
    v18 = 0;
    v16 = 0;
    *(_QWORD *)(inited + 128) = 0;
  }
  *(_QWORD *)(inited + 112) = v15;
  *(_QWORD *)(inited + 120) = v17;
  *(_QWORD *)(inited + 136) = v18;
  *(_QWORD *)(inited + 144) = v16;
  v19 = qword_1CF3775D0[*((char *)a1 + v8[7])];
  *(_QWORD *)(inited + 176) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 184) = &protocol witness table for Int;
  *(_QWORD *)(inited + 152) = v19;
  v20 = (_QWORD *)((char *)a1 + v8[8]);
  v21 = v20[1];
  if (v21)
  {
    v22 = *v20;
    v23 = &protocol witness table for String;
    v24 = v21;
    v25 = MEMORY[0x1E0DEA968];
  }
  else
  {
    v22 = 0;
    v24 = 0;
    v25 = 0;
    v23 = 0;
    *(_QWORD *)(inited + 208) = 0;
  }
  *(_QWORD *)(inited + 192) = v22;
  *(_QWORD *)(inited + 200) = v24;
  *(_QWORD *)(inited + 216) = v25;
  *(_QWORD *)(inited + 224) = v23;
  sub_1CF29C5E0((uint64_t)a1 + v8[9], (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, v10) == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CF29C518((uint64_t)v5);
    *(_OWORD *)(inited + 232) = 0u;
    *(_OWORD *)(inited + 248) = 0u;
    *(_QWORD *)(inited + 264) = 0;
  }
  else
  {
    *(_QWORD *)(inited + 256) = v10;
    *(_QWORD *)(inited + 264) = &protocol witness table for Date;
    v26 = sub_1CF29530C((uint64_t *)(inited + 232));
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(v26, v5, v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v27 = MEMORY[0x1E0DEA968];
  v28 = *(_QWORD *)((char *)a1 + v8[10]);
  *(_QWORD *)(inited + 296) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 304) = &protocol witness table for Int;
  *(_QWORD *)(inited + 272) = v28;
  v29 = (_QWORD *)((char *)a1 + v8[11]);
  v30 = *v29;
  v31 = v29[1];
  *(_QWORD *)(inited + 336) = v27;
  *(_QWORD *)(inited + 344) = &protocol witness table for String;
  *(_QWORD *)(inited + 312) = v30;
  *(_QWORD *)(inited + 320) = v31;
  v32 = (_QWORD *)((char *)a1 + v8[12]);
  v33 = *v32;
  v34 = v32[1];
  *(_QWORD *)(inited + 376) = v27;
  *(_QWORD *)(inited + 384) = &protocol witness table for String;
  *(_QWORD *)(inited + 352) = v33;
  *(_QWORD *)(inited + 360) = v34;
  v35 = (_QWORD *)((char *)a1 + v8[13]);
  v36 = v35[1];
  if (v36)
  {
    v37 = *v35;
    v38 = &protocol witness table for String;
    v39 = v36;
    v40 = MEMORY[0x1E0DEA968];
  }
  else
  {
    v37 = 0;
    v39 = 0;
    v40 = 0;
    v38 = 0;
    *(_QWORD *)(inited + 408) = 0;
  }
  *(_QWORD *)(inited + 392) = v37;
  *(_QWORD *)(inited + 400) = v39;
  *(_QWORD *)(inited + 416) = v40;
  *(_QWORD *)(inited + 424) = v38;
  v41 = (_QWORD *)((char *)a1 + v8[14]);
  v42 = v41[1];
  if (v42)
  {
    v43 = *v41;
    v44 = &protocol witness table for String;
    v45 = MEMORY[0x1E0DEA968];
  }
  else
  {
    v43 = 0;
    v45 = 0;
    v44 = 0;
    *(_QWORD *)(inited + 448) = 0;
  }
  *(_QWORD *)(inited + 432) = v43;
  *(_QWORD *)(inited + 440) = v42;
  *(_QWORD *)(inited + 456) = v45;
  *(_QWORD *)(inited + 464) = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CF263ABC(0xD0000000000000A1, 0x80000001CF3813D0, inited);
  swift_setDeallocating();
  sub_1CF263D78(qword_1ED2BB3E8);
  return swift_arrayDestroy();
}

uint64_t sub_1CF29BF30(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t inited;
  int *v7;
  int *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _UNKNOWN **v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[240];

  v2 = sub_1CF263D78(&qword_1ED2BBDA8);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1CF263D78(&qword_1ED2BC1F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CF377580;
  v7 = (int *)type metadata accessor for WorkOrder();
  v8 = v7;
  *(_QWORD *)(inited + 32) = qword_1CF3775D0[*((char *)a1 + v7[7])];
  *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 64) = &protocol witness table for Int;
  v9 = (uint64_t *)((char *)a1 + v7[8]);
  v10 = v9[1];
  if (v10)
  {
    v11 = *v9;
    v12 = &protocol witness table for String;
    v13 = v10;
    v14 = MEMORY[0x1E0DEA968];
  }
  else
  {
    v11 = 0;
    v13 = 0;
    v14 = 0;
    v12 = 0;
    *(_QWORD *)(inited + 88) = 0;
  }
  *(_QWORD *)(inited + 72) = v11;
  *(_QWORD *)(inited + 80) = v13;
  *(_QWORD *)(inited + 96) = v14;
  *(_QWORD *)(inited + 104) = v12;
  sub_1CF29C5E0((uint64_t)a1 + v7[9], (uint64_t)v5);
  v15 = sub_1CF371FF0();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v5, 1, v15) == 1)
  {
    swift_bridgeObjectRetain();
    sub_1CF29C518((uint64_t)v5);
    *(_OWORD *)(inited + 112) = 0u;
    *(_OWORD *)(inited + 128) = 0u;
    *(_QWORD *)(inited + 144) = 0;
  }
  else
  {
    *(_QWORD *)(inited + 136) = v15;
    *(_QWORD *)(inited + 144) = &protocol witness table for Date;
    v17 = sub_1CF29530C((uint64_t *)(inited + 112));
    (*(void (**)(uint64_t *, _BYTE *, uint64_t))(v16 + 32))(v17, v5, v15);
    swift_bridgeObjectRetain();
  }
  v18 = MEMORY[0x1E0DEA968];
  v19 = *(uint64_t *)((char *)a1 + v8[10]);
  *(_QWORD *)(inited + 176) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 184) = &protocol witness table for Int;
  *(_QWORD *)(inited + 152) = v19;
  v21 = *a1;
  v20 = a1[1];
  *(_QWORD *)(inited + 216) = v18;
  *(_QWORD *)(inited + 224) = &protocol witness table for String;
  *(_QWORD *)(inited + 192) = v21;
  *(_QWORD *)(inited + 200) = v20;
  swift_bridgeObjectRetain();
  sub_1CF263ABC(0xD000000000000055, 0x80000001CF381370, inited);
  swift_setDeallocating();
  sub_1CF263D78(qword_1ED2BB3E8);
  return swift_arrayDestroy();
}

uint64_t sub_1CF29C170@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  const char *v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v3 = sub_1CF2A0E10(0xD000000000000018, 0x80000001CF381350, 0);
  v4 = sub_1CF263D78(&qword_1ED2BBE00);
  *((_QWORD *)&v9 + 1) = v4;
  *(_QWORD *)&v8 = v3;
  *((_QWORD *)&v8 + 1) = sub_1CF29C2D0;
  v10 = sub_1CF29C5A0(&qword_1ED2BBDF8, &qword_1ED2BBE00, (uint64_t)&unk_1CF3779B8);
  *(_QWORD *)&v9 = 0;
  if (v4)
  {
    sub_1CF2950A8((uint64_t)&v8, (uint64_t)&v5);
    if (!*((_QWORD *)&v6 + 1))
    {
LABEL_8:
      a1[3] = sub_1CF263D78(&qword_1EFB8D260);
      result = sub_1CF29C5A0(&qword_1EFB8D268, &qword_1EFB8D260, MEMORY[0x1E0DEAF38]);
      a1[4] = result;
      *a1 = MEMORY[0x1E0DEE9D8];
      if (*((_QWORD *)&v9 + 1))
      {
        result = sub_1CF263E18((uint64_t)&v8);
        if (*((_QWORD *)&v6 + 1))
          return sub_1CF263E18((uint64_t)&v5);
      }
      return result;
    }
  }
  else
  {
    v5 = v8;
    v6 = v9;
    v7 = v10;
    if (!*((_QWORD *)&v9 + 1))
      goto LABEL_8;
  }
  if (*((_QWORD *)&v9 + 1))
    sub_1CF263E18((uint64_t)&v8);
  return sub_1CF290894(&v5, (uint64_t)a1);
}

uint64_t sub_1CF29C2D0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v6;

  sub_1CF29B6EC(a1, a2);
  if (v2)
  {

    v4 = type metadata accessor for WorkOrder();
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, 1, 1, v4);
  }
  else
  {
    v6 = type metadata accessor for WorkOrder();
    return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a2, 0, 1, v6);
  }
}

uint64_t sub_1CF29C354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t inited;
  uint64_t v7;

  sub_1CF263D78(&qword_1ED2BC1F0);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 32) = a1;
  v7 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(inited + 16) = xmmword_1CF376C00;
  *(_QWORD *)(inited + 56) = v7;
  *(_QWORD *)(inited + 64) = &protocol witness table for String;
  *(_QWORD *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  sub_1CF2A0348(0xD000000000000028, 0x80000001CF381300, inited, a3);
  swift_setDeallocating();
  sub_1CF263D78(qword_1ED2BB3E8);
  return swift_arrayDestroy();
}

uint64_t sub_1CF29C490()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WorkOrderDatabaseStore()
{
  return objc_opt_self();
}

unint64_t sub_1CF29C4D4()
{
  unint64_t result;

  result = qword_1EFB8D258;
  if (!qword_1EFB8D258)
  {
    result = MEMORY[0x1D17CC2F0](&protocol conformance descriptor for DBError, &type metadata for DBError);
    atomic_store(result, (unint64_t *)&qword_1EFB8D258);
  }
  return result;
}

uint64_t sub_1CF29C518(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CF263D78(&qword_1ED2BBDA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CF29C558(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CF263D78(&qword_1ED2BBDA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CF29C5A0(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_1CF28F228(a2);
    result = MEMORY[0x1D17CC2F0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CF29C5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CF263D78(&qword_1ED2BBDA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1CF29C628@<X0>(unint64_t result@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3;
  char v4;
  char v5;
  unint64_t v6;
  char v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  unint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  _BYTE v27[32];

  if (!*(_QWORD *)(result + 16))
    goto LABEL_26;
  v3 = result;
  result = sub_1CF2A3240(0x6E776F6E6B6E75, 0xE700000000000000);
  if ((v4 & 1) == 0)
    goto LABEL_26;
  sub_1CF298548(*(_QWORD *)(v3 + 56) + 32 * result, (uint64_t)v27);
  result = swift_dynamicCast();
  if ((result & 1) == 0)
    goto LABEL_26;
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_26;
  result = sub_1CF2A3240(0x6574657263736964, 0xE800000000000000);
  if ((v5 & 1) == 0)
    goto LABEL_26;
  sub_1CF298548(*(_QWORD *)(v3 + 56) + 32 * result, (uint64_t)v27);
  sub_1CF263D78(&qword_1ED2BC1C0);
  result = swift_dynamicCast();
  if ((result & 1) == 0)
    goto LABEL_26;
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_25;
  v6 = sub_1CF2A3240(0x6966697373616C63, 0xEA00000000006465);
  if ((v7 & 1) == 0
    || (sub_1CF298548(*(_QWORD *)(v3 + 56) + 32 * v6, (uint64_t)v27),
        sub_1CF263D78(&qword_1ED2BC1A8),
        (swift_dynamicCast() & 1) == 0)
    || (v8 = sub_1CF29C8E4(v26),
        swift_bridgeObjectRelease(),
        v9 = swift_bridgeObjectRetain(),
        v10 = sub_1CF29D044(v9),
        swift_bridgeObjectRelease_n(),
        !v8))
  {
LABEL_25:
    result = swift_bridgeObjectRelease();
LABEL_26:
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    return result;
  }
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v12 = 40;
    v13 = *(_QWORD *)(v10 + 16);
    do
    {
      if (!*(_QWORD *)(v10 + v12))
      {
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      v12 += 16;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRetain();
    v14 = (uint64_t *)(v10 + 40);
    v15 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      v17 = *v14;
      if (*v14)
      {
        v18 = *(v14 - 1);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v15 = sub_1CF29D450(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
        v19 = *((_QWORD *)v15 + 2);
        v20 = *((_QWORD *)v15 + 3);
        v21 = v19 + 1;
        if (v19 >= v20 >> 1)
        {
          v25 = v19 + 1;
          v22 = v15;
          v23 = *((_QWORD *)v15 + 2);
          v24 = sub_1CF29D450((char *)(v20 > 1), v19 + 1, 1, v22);
          v19 = v23;
          v21 = v25;
          v15 = v24;
        }
        *((_QWORD *)v15 + 2) = v21;
        v16 = &v15[16 * v19];
        *((_QWORD *)v16 + 4) = v18;
        *((_QWORD *)v16 + 5) = v17;
      }
      v14 += 2;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = (char *)MEMORY[0x1E0DEE9D8];
  }
  result = swift_bridgeObjectRelease();
  *a2 = v26;
  a2[1] = (uint64_t)v8;
  a2[2] = (uint64_t)v15;
  return result;
}

char *sub_1CF29C8E4(uint64_t a1)
{
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v27;
  char v28;
  __int128 v29;
  char *v30;
  _BYTE v31[32];
  _QWORD *v32;

  v2 = (_QWORD *)MEMORY[0x1E0DEE9E8];
  v32 = (_QWORD *)MEMORY[0x1E0DEE9E8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = swift_bridgeObjectRetain();
    v5 = 0;
    v6 = v4 + 32;
    v7 = (char *)MEMORY[0x1E0DEE9D8];
    v8 = 1;
    v9 = MEMORY[0x1E0DEE9B8] + 8;
    v10 = MEMORY[0x1E0DEB418];
    v27 = v4 + 32;
LABEL_3:
    v28 = v8;
    v11 = v6 + 32 * v5;
    v12 = v5;
    do
    {
      sub_1CF298548(v11, (uint64_t)v31);
      if (swift_dynamicCast())
      {
        v1 = v30;
        sub_1CF263D78((uint64_t *)&unk_1ED2BC208);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1CF376C00;
        *(_QWORD *)(inited + 32) = v30;
        v14 = sub_1CF29E218(inited);
        swift_setDeallocating();
        sub_1CF263E18((uint64_t)v31);
        v2 = &v32;
        sub_1CF29D1F4(v14);
      }
      else
      {
        sub_1CF263D78(&qword_1ED2BC1B8);
        if (!swift_dynamicCast())
          goto LABEL_16;
        if (*((_QWORD *)v30 + 2) != 2)
        {
          swift_bridgeObjectRelease();
LABEL_16:
          sub_1CF263E18((uint64_t)v31);
          v8 = 0;
          v5 = v12 + 1;
          v6 = v27;
          if (v3 - 1 != v12)
            goto LABEL_3;
          swift_bridgeObjectRelease();
LABEL_33:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
        v16 = *((_QWORD *)v30 + 4);
        v15 = *((_QWORD *)v30 + 5);
        swift_bridgeObjectRelease();
        if (v15 < v16)
        {
          __break(1u);
          goto LABEL_36;
        }
        sub_1CF263E18((uint64_t)v31);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_1CF29D550(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
        v1 = (char *)*((_QWORD *)v7 + 2);
        v18 = *((_QWORD *)v7 + 3);
        v2 = v1 + 1;
        if ((unint64_t)v1 >= v18 >> 1)
          v7 = sub_1CF29D550((char *)(v18 > 1), (int64_t)(v1 + 1), 1, v7);
        *((_QWORD *)v7 + 2) = v2;
        v19 = &v7[16 * (_QWORD)v1];
        *((_QWORD *)v19 + 4) = v16;
        *((_QWORD *)v19 + 5) = v15;
      }
      ++v12;
      v11 += 32;
    }
    while (v3 != v12);
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0)
      goto LABEL_33;
    v2 = v32;
    if (v32[2])
      goto LABEL_23;
LABEL_20:
    v1 = (char *)MEMORY[0x1E0DEE9D8];
    v20 = *((_QWORD *)v7 + 2);
    if (!v20)
      goto LABEL_32;
LABEL_25:
    swift_bridgeObjectRetain();
    v22 = 0;
    do
    {
      v29 = *(_OWORD *)&v7[16 * v22 + 32];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v1 = sub_1CF29D33C(0, *((_QWORD *)v1 + 2) + 1, 1, v1);
      v24 = *((_QWORD *)v1 + 2);
      v23 = *((_QWORD *)v1 + 3);
      if (v24 >= v23 >> 1)
        v1 = sub_1CF29D33C((char *)(v23 > 1), v24 + 1, 1, v1);
      ++v22;
      *((_QWORD *)v1 + 2) = v24 + 1;
      v25 = &v1[24 * v24];
      *((_OWORD *)v25 + 2) = v29;
      v25[48] = 1;
    }
    while (v20 != v22);
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  v7 = (char *)MEMORY[0x1E0DEE9D8];
  if (!*(_QWORD *)(MEMORY[0x1E0DEE9E8] + 16))
    goto LABEL_20;
LABEL_23:
  swift_bridgeObjectRetain();
  v1 = sub_1CF29D33C(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v10 = *((_QWORD *)v1 + 2);
  v17 = *((_QWORD *)v1 + 3);
  v9 = v10 + 1;
  if (v10 >= v17 >> 1)
LABEL_36:
    v1 = sub_1CF29D33C((char *)(v17 > 1), v9, 1, v1);
  *((_QWORD *)v1 + 2) = v9;
  v21 = &v1[24 * v10];
  *((_QWORD *)v21 + 4) = v2;
  *((_QWORD *)v21 + 5) = 0;
  v21[48] = 0;
  v20 = *((_QWORD *)v7 + 2);
  if (v20)
    goto LABEL_25;
LABEL_32:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1CF29CC90@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unsigned __int8 *v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30[3];
  uint64_t v31;
  unint64_t v32;
  _BYTE v33[32];
  _QWORD v34[2];
  _BYTE v35[32];

  v34[0] = a1;
  v34[1] = a2;
  sub_1CF298548(a3, (uint64_t)v35);
  v31 = a1;
  v32 = a2;
  result = sub_1CF298548((uint64_t)v35, (uint64_t)v33);
  v8 = HIBYTE(a2) & 0xF;
  v9 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v10 = HIBYTE(a2) & 0xF;
  else
    v10 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v10)
  {
    swift_bridgeObjectRetain();
    goto LABEL_57;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v28 = sub_1CF28E388(a1, a2, 10);
    if ((v29 & 1) == 0)
    {
      v12 = v28;
LABEL_45:
      sub_1CF263E18((uint64_t)v33);
      v31 = a1;
      v32 = a2;
      sub_1CF298548((uint64_t)v35, (uint64_t)v33);
      sub_1CF263D78(&qword_1ED2BC1C0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v24 = sub_1CF29C8E4(v30[0]);
        swift_bridgeObjectRelease();
        result = sub_1CF263DB8((uint64_t)v34, &qword_1EFB8D280);
        if (v24)
        {
          *a4 = v12;
          a4[1] = (uint64_t)v24;
          return result;
        }
        goto LABEL_59;
      }
LABEL_58:
      result = sub_1CF263DB8((uint64_t)v34, &qword_1EFB8D280);
LABEL_59:
      *a4 = 0;
      a4[1] = 0;
      return result;
    }
LABEL_57:
    sub_1CF263E18((uint64_t)v33);
    goto LABEL_58;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0)
      v11 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v11 = (unsigned __int8 *)sub_1CF3723F8();
    v12 = (uint64_t)sub_1CF28DF10(v11, v9, 10);
    v14 = v13 & 1;
LABEL_44:
    swift_bridgeObjectRetain();
    if ((v14 & 1) == 0)
      goto LABEL_45;
    goto LABEL_57;
  }
  v30[0] = a1;
  v30[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v8)
      goto LABEL_62;
    if (v8 == 1 || (BYTE1(a1) - 48) > 9u)
      goto LABEL_31;
    v12 = (BYTE1(a1) - 48);
    if (v8 != 2)
    {
      if ((BYTE2(a1) - 48) > 9u)
        goto LABEL_31;
      v12 = 10 * (BYTE1(a1) - 48) + (BYTE2(a1) - 48);
      v15 = v8 - 3;
      if (v15)
      {
        v16 = (unsigned __int8 *)v30 + 3;
        while (1)
        {
          v17 = *v16 - 48;
          if (v17 > 9)
            goto LABEL_31;
          v18 = 10 * v12;
          if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
            goto LABEL_31;
          v12 = v18 + v17;
          if (__OFADD__(v18, v17))
            goto LABEL_31;
          v14 = 0;
          ++v16;
          if (!--v15)
            goto LABEL_44;
        }
      }
    }
LABEL_43:
    v14 = 0;
    goto LABEL_44;
  }
  if (a1 != 45)
  {
    if (!v8 || (a1 - 48) > 9u)
      goto LABEL_31;
    v12 = (a1 - 48);
    if (v8 != 1)
    {
      if ((BYTE1(a1) - 48) > 9u)
        goto LABEL_31;
      v12 = 10 * (a1 - 48) + (BYTE1(a1) - 48);
      v19 = v8 - 2;
      if (v19)
      {
        v20 = (unsigned __int8 *)v30 + 2;
        while (1)
        {
          v21 = *v20 - 48;
          if (v21 > 9)
            goto LABEL_31;
          v22 = 10 * v12;
          if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
            goto LABEL_31;
          v12 = v22 + v21;
          if (__OFADD__(v22, v21))
            goto LABEL_31;
          v14 = 0;
          ++v20;
          if (!--v19)
            goto LABEL_44;
        }
      }
    }
    goto LABEL_43;
  }
  if (v8)
  {
    if (v8 != 1 && (BYTE1(a1) - 48) <= 9u)
    {
      if (v8 == 2)
      {
        v14 = 0;
        v12 = -(uint64_t)(BYTE1(a1) - 48);
        goto LABEL_44;
      }
      if ((BYTE2(a1) - 48) <= 9u)
      {
        v12 = -10 * (BYTE1(a1) - 48) - (BYTE2(a1) - 48);
        v23 = v8 - 3;
        if (!v23)
          goto LABEL_43;
        v25 = (unsigned __int8 *)v30 + 3;
        while (1)
        {
          v26 = *v25 - 48;
          if (v26 > 9)
            break;
          v27 = 10 * v12;
          if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
            break;
          v12 = v27 - v26;
          if (__OFSUB__(v27, v26))
            break;
          v14 = 0;
          ++v25;
          if (!--v23)
            goto LABEL_44;
        }
      }
    }
LABEL_31:
    v12 = 0;
    v14 = 1;
    goto LABEL_44;
  }
  __break(1u);
LABEL_62:
  __break(1u);
  return result;
}

uint64_t sub_1CF29D044(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  _OWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = MEMORY[0x1E0DEE9D8];
  sub_1CF29D648(0, 0, 0);
  v2 = -1 << *(_BYTE *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = ~v2;
  v5 = -v2;
  v19 = a1;
  v20 = a1 + 64;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v21 = v4;
  v22 = 0;
  v23 = v6 & v3;
  v24 = 0;
  swift_bridgeObjectRetain();
  sub_1CF29E010((uint64_t)&v12);
  if ((_QWORD)v13)
  {
    v7 = v25;
    do
    {
      v16 = v12;
      v17[0] = v13;
      v17[1] = v14;
      v18 = v15;
      sub_1CF29CC90(*((uint64_t *)&v12 + 1), v13, (uint64_t)v17 + 8, (uint64_t *)&v12);
      sub_1CF263DB8((uint64_t)&v16, &qword_1EFB8D278);
      v11 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CF29D648(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v25;
      }
      v9 = *(_QWORD *)(v7 + 16);
      v8 = *(_QWORD *)(v7 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1CF29D648((_QWORD *)(v8 > 1), v9 + 1, 1);
        v7 = v25;
      }
      *(_QWORD *)(v7 + 16) = v9 + 1;
      *(_OWORD *)(v7 + 16 * v9 + 32) = v11;
      sub_1CF29E010((uint64_t)&v12);
    }
    while ((_QWORD)v13);
  }
  sub_1CF298594();
  sub_1CF263DB8((uint64_t)&v12, (uint64_t *)&unk_1ED2BC1C8);
  return v25;
}

uint64_t sub_1CF29D1F4(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        return swift_release();
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          return swift_release();
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            return swift_release();
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    result = sub_1CF29D784(&v13, *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v9));
  }
  v12 = v10 + 4;
  if (v12 >= v7)
    return swift_release();
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

char *sub_1CF29D33C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1CF263D78(&qword_1ED2BC1F8);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1CF29D450(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1CF263D78(&qword_1EFB8D270);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1CF29D550(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1CF263D78(&qword_1ED2BC200);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

_QWORD *sub_1CF29D648(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_1CF29D664(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *sub_1CF29D664(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1CF263D78(&qword_1EFB8D288);
    v10 = (_QWORD *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_1CF263D78((uint64_t *)&unk_1ED2BC180);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t sub_1CF29D784(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_1CF37250C();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CF29DAFC(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1CF29D87C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  sub_1CF263D78((uint64_t *)&unk_1ED2BC1E0);
  result = sub_1CF3723BC();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_1CF37250C();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1CF29DAFC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1CF29D87C();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1CF29DC1C();
      goto LABEL_14;
    }
    sub_1CF29DDB0();
  }
  v8 = *v3;
  result = sub_1CF37250C();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_1CF3724C4();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void *sub_1CF29DC1C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_1CF263D78((uint64_t *)&unk_1ED2BC1E0);
  v2 = *v0;
  v3 = sub_1CF3723B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1CF29DDB0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  sub_1CF263D78((uint64_t *)&unk_1ED2BC1E0);
  result = sub_1CF3723BC();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_1CF37250C();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1CF29E010@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  __int128 v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  char v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
    goto LABEL_3;
  }
  v18 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
LABEL_28:
    __break(1u);
    return result;
  }
  v19 = (unint64_t)(v6 + 64) >> 6;
  if (v18 >= v19)
    goto LABEL_24;
  v20 = *(_QWORD *)(v4 + 8 * v18);
  if (!v20)
  {
    v21 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v19)
    {
      v20 = *(_QWORD *)(v4 + 8 * v21);
      if (v20)
      {
LABEL_12:
        v18 = v21;
        goto LABEL_9;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v19)
      {
        v20 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v20)
        {
          v18 = v5 + 3;
          goto LABEL_9;
        }
        v21 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v19)
        {
          v20 = *(_QWORD *)(v4 + 8 * v21);
          if (v20)
            goto LABEL_12;
          v18 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v19)
          {
            v20 = *(_QWORD *)(v4 + 8 * v18);
            if (v20)
              goto LABEL_9;
            v7 = v19 - 1;
            v22 = v5 + 6;
            while (v19 != v22)
            {
              v20 = *(_QWORD *)(v4 + 8 * v22++);
              if (v20)
              {
                v18 = v22 - 1;
                goto LABEL_9;
              }
            }
          }
        }
      }
    }
LABEL_24:
    v28 = 0u;
    v29 = 0u;
    v27 = 0u;
    *v1 = v3;
    v1[1] = v4;
    v1[2] = v6;
    v1[3] = v7;
    v1[4] = 0;
    goto LABEL_25;
  }
LABEL_9:
  v9 = (v20 - 1) & v20;
  v10 = __clz(__rbit64(v20)) + (v18 << 6);
  v7 = v18;
LABEL_3:
  v11 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
  v13 = *v11;
  v12 = v11[1];
  sub_1CF298548(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)&v23);
  *(_QWORD *)&v27 = v13;
  *((_QWORD *)&v27 + 1) = v12;
  sub_1CF298584(&v23, &v28);
  v14 = *((_QWORD *)&v27 + 1);
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  result = swift_bridgeObjectRetain();
  if (v14)
  {
    v24 = v27;
    v25 = v28;
    v26 = v29;
    v16 = v1[5];
    if (!__OFADD__(v16, 1))
    {
      v1[5] = v16 + 1;
      *(_QWORD *)a1 = v16;
      v17 = v25;
      *(_OWORD *)(a1 + 8) = v24;
      *(_OWORD *)(a1 + 24) = v17;
      *(_OWORD *)(a1 + 40) = v26;
      return result;
    }
    __break(1u);
    goto LABEL_28;
  }
LABEL_25:
  result = sub_1CF263DB8((uint64_t)&v27, &qword_1ED2BC1B0);
  *(_QWORD *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_1CF29E218(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1CF263D78((uint64_t *)&unk_1ED2BC1E0);
    v3 = sub_1CF3723C8();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    v7 = ~(-1 << *(_BYTE *)(v3 + 32));
    while (1)
    {
      v8 = *(_QWORD *)(v6 + 8 * v4);
      result = sub_1CF37250C();
      v10 = result & v7;
      v11 = (result & (unint64_t)v7) >> 6;
      v12 = *(_QWORD *)(v5 + 8 * v11);
      v13 = 1 << (result & v7);
      v14 = *(_QWORD *)(v3 + 48);
      if ((v13 & v12) != 0)
      {
        while (*(_QWORD *)(v14 + 8 * v10) != v8)
        {
          v10 = (v10 + 1) & v7;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            goto LABEL_7;
        }
      }
      else
      {
LABEL_7:
        *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
        *(_QWORD *)(v14 + 8 * v10) = v8;
        v15 = *(_QWORD *)(v3 + 16);
        v16 = __OFADD__(v15, 1);
        v17 = v15 + 1;
        if (v16)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v3 + 16) = v17;
      }
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

APFoundation::BundleID __swiftcall BundleID.init(stringLiteral:)(APFoundation::BundleID stringLiteral)
{
  APFoundation::BundleID *v1;

  *v1 = stringLiteral;
  return stringLiteral;
}

uint64_t static BundleID.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1CF3724AC();
}

uint64_t sub_1CF29E35C(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1CF3724AC();
}

_QWORD *sub_1CF29E38C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t BundleID.debugDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1CF29E3C8()
{
  unint64_t result;

  result = qword_1EFB8D290;
  if (!qword_1EFB8D290)
  {
    result = MEMORY[0x1D17CC2F0](&protocol conformance descriptor for BundleID, &type metadata for BundleID);
    atomic_store(result, (unint64_t *)&qword_1EFB8D290);
  }
  return result;
}

uint64_t sub_1CF29E40C()
{
  return MEMORY[0x1E0DEA9F0];
}

unint64_t sub_1CF29E41C()
{
  unint64_t result;

  result = qword_1EFB8D298;
  if (!qword_1EFB8D298)
  {
    result = MEMORY[0x1D17CC2F0](&protocol conformance descriptor for BundleID, &type metadata for BundleID);
    atomic_store(result, (unint64_t *)&qword_1EFB8D298);
  }
  return result;
}

uint64_t sub_1CF29E460()
{
  return MEMORY[0x1E0DEAA00];
}

uint64_t sub_1CF29E46C()
{
  return MEMORY[0x1E0DEA9F8];
}

uint64_t sub_1CF29E478()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

ValueMetadata *type metadata accessor for BundleID()
{
  return &type metadata for BundleID;
}

uint64_t sub_1CF29E4C0()
{
  return 1;
}

uint64_t sub_1CF29E4C8()
{
  sub_1CF372518();
  sub_1CF372524();
  return sub_1CF37253C();
}

uint64_t sub_1CF29E508()
{
  return sub_1CF372524();
}

uint64_t sub_1CF29E52C()
{
  sub_1CF372518();
  sub_1CF372524();
  return sub_1CF37253C();
}

void sub_1CF29E578(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *);
  void (*v31)(char *, uint64_t);
  void (*v32)(char *);
  void (*v33)(char *, uint64_t);
  void (*v34)(char *);
  char *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  id v39;
  char *v40;
  void *v41;
  unsigned int v42;
  void (*v43)(char *);
  void (*v44)(char *, uint64_t);
  void (*v45)(char *);
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *);
  void *v58;
  char *v59;
  _QWORD v60[2];
  unsigned int v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *);
  uint64_t v70;
  void (*v71)(char *);
  void *v72;
  void (*v73)(char *);
  uint64_t v74;
  uint64_t v75;

  v70 = a2;
  v67 = a3;
  v68 = a4;
  v69 = (void (*)(char *))a1;
  v75 = *MEMORY[0x1E0C80C00];
  v5 = sub_1CF371E70();
  v65 = *(_QWORD *)(v5 - 8);
  v66 = v5;
  MEMORY[0x1E0C80A78](v5, v6);
  v64 = (char *)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CF371EDC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CF263D78(&qword_1ED2BB3D8);
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1CF371F3C();
  v18 = *(_QWORD *)(v17 - 8);
  v20 = MEMORY[0x1E0C80A78](v17, v19);
  v63 = (char *)v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v20, v22);
  v25 = (char *)v60 - v24;
  MEMORY[0x1E0C80A78](v23, v26);
  v28 = (char *)v60 - v27;
  v29 = v4 + OBJC_IVAR____TtC12APFoundation13WorkDataStore_basePath;
  swift_beginAccess();
  sub_1CF29F694(v29, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1CF29F6DC((uint64_t)v16);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v28, v16, v17);
    v73 = v69;
    v74 = v70;
    v30 = *(void (**)(char *))(v9 + 104);
    v61 = *MEMORY[0x1E0CAFD78];
    v30(v12);
    v60[1] = sub_1CF28DE8C();
    sub_1CF371F30();
    v31 = *(void (**)(char *, uint64_t))(v9 + 8);
    v31(v12, v8);
    v32 = v71;
    sub_1CF371F78();
    if (v32)
    {
      v60[0] = v31;
      v71 = v30;
      v62 = v28;
      v33 = *(void (**)(char *, uint64_t))(v18 + 8);
      v33(v25, v17);
      v34 = v32;
      v35 = v64;
      sub_1CF371E64();
      sub_1CF29F760();
      v36 = v66;
      v37 = sub_1CF371EC4();

      (*(void (**)(char *, uint64_t))(v65 + 8))(v35, v36);
      v38 = v17;
      if ((v37 & 1) != 0)
      {

        v39 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
        v40 = v62;
        v41 = (void *)sub_1CF371EF4();
        v73 = 0;
        v42 = objc_msgSend(v39, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v41, 1, 0, &v73);

        if (v42)
        {
          v43 = v73;
        }
        else
        {
          v57 = v73;
          v58 = (void *)sub_1CF371ED0();

          swift_willThrow();
        }
        v59 = v63;
        v73 = v69;
        v74 = v70;
        ((void (*)(char *, _QWORD, uint64_t))v71)(v12, v61, v8);
        sub_1CF371F30();
        ((void (*)(char *, uint64_t))v60[0])(v12, v8);
        sub_1CF371F78();
        v33(v59, v38);
        v33(v40, v38);
      }
      else
      {
        v73 = v32;
        v45 = v32;
        sub_1CF263D78(&qword_1EFB8D2A0);
        sub_1CF290438(0, &qword_1EFB8D2A8);
        if (swift_dynamicCast())
        {

          v46 = v72;
          LODWORD(v71) = sub_1CF3722F0();
          sub_1CF290438(0, (unint64_t *)&qword_1ED2BBE60);
          v47 = (void *)sub_1CF37235C();
          sub_1CF263D78(&qword_1ED2BC230);
          v48 = swift_allocObject();
          *(_OWORD *)(v48 + 16) = xmmword_1CF376E70;
          v68 = v17;
          v49 = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v48 + 56) = MEMORY[0x1E0DEA968];
          v50 = sub_1CF290470();
          *(_QWORD *)(v48 + 64) = v50;
          v51 = v70;
          *(_QWORD *)(v48 + 32) = v69;
          *(_QWORD *)(v48 + 40) = v51;
          swift_bridgeObjectRetain();
          v52 = v33;
          v53 = objc_msgSend(v46, sel_localizedDescription);
          v54 = sub_1CF37214C();
          v56 = v55;

          *(_QWORD *)(v48 + 96) = v49;
          *(_QWORD *)(v48 + 104) = v50;
          *(_QWORD *)(v48 + 72) = v54;
          *(_QWORD *)(v48 + 80) = v56;
          sub_1CF372068();

          swift_bridgeObjectRelease();
          swift_willThrow();
          v52(v62, v68);
        }
        else
        {
          v33(v62, v17);
        }

      }
    }
    else
    {
      v44 = *(void (**)(char *, uint64_t))(v18 + 8);
      v44(v25, v17);
      v44(v28, v17);
    }
  }
}

char *sub_1CF29ED18(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  _DWORD v40[2];
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void *v47;

  v42 = a1;
  v3 = v2;
  v43 = a2;
  v4 = sub_1CF371EDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CF263D78(&qword_1ED2BB3D8);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CF371F3C();
  v14 = *(_QWORD *)(v13 - 8);
  v16 = MEMORY[0x1E0C80A78](v13, v15);
  v18 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16, v19);
  v21 = (char *)v40 - v20;
  v22 = v3 + OBJC_IVAR____TtC12APFoundation13WorkDataStore_basePath;
  swift_beginAccess();
  sub_1CF29F694(v22, (uint64_t)v12);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v44 = v13;
  if (v23(v12, 1, v13) == 1)
  {
    sub_1CF29F6DC((uint64_t)v12);
    sub_1CF29F71C();
    swift_allocError();
    swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v21, v12, v44);
    v45 = v42;
    v46 = v43;
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0CAFD78], v4);
    sub_1CF28DE8C();
    sub_1CF371F30();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v24 = v41;
    v25 = sub_1CF371F48();
    if (v24)
    {
      v41 = v21;
      v26 = *(void (**)(char *, uint64_t))(v14 + 8);
      v26(v18, v44);
      v45 = v24;
      v27 = v24;
      v12 = (char *)sub_1CF263D78(&qword_1EFB8D2A0);
      sub_1CF290438(0, &qword_1EFB8D2A8);
      if (swift_dynamicCast())
      {

        v28 = v47;
        v40[1] = sub_1CF3722F0();
        sub_1CF290438(0, (unint64_t *)&qword_1ED2BBE60);
        v12 = (char *)sub_1CF37235C();
        sub_1CF263D78(&qword_1ED2BC230);
        v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_1CF376E70;
        v30 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v29 + 56) = MEMORY[0x1E0DEA968];
        v31 = sub_1CF290470();
        *(_QWORD *)(v29 + 64) = v31;
        v32 = v43;
        *(_QWORD *)(v29 + 32) = v42;
        *(_QWORD *)(v29 + 40) = v32;
        swift_bridgeObjectRetain();
        v33 = objc_msgSend(v28, sel_localizedDescription);
        v34 = sub_1CF37214C();
        v36 = v35;

        *(_QWORD *)(v29 + 96) = v30;
        *(_QWORD *)(v29 + 104) = v31;
        *(_QWORD *)(v29 + 72) = v34;
        *(_QWORD *)(v29 + 80) = v36;
        sub_1CF372068();

        swift_bridgeObjectRelease();
        swift_willThrow();
      }
      v26(v41, v44);

    }
    else
    {
      v12 = (char *)v25;
      v38 = *(void (**)(char *, uint64_t))(v14 + 8);
      v39 = v44;
      v38(v18, v44);
      v38(v21, v39);
    }
  }
  return v12;
}

void sub_1CF29F10C(void *a1, void (*a2)(char *, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  void *v24;
  void (*v25)(char *, uint64_t);
  unsigned int v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(char *, uint64_t);
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  void *v44;
  id v45[6];

  v42 = a2;
  v3 = v2;
  v41 = a1;
  v45[5] = *(id *)MEMORY[0x1E0C80C00];
  v4 = sub_1CF371EDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CF263D78(&qword_1ED2BB3D8);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CF371F3C();
  v14 = *(_QWORD *)(v13 - 8);
  v16 = MEMORY[0x1E0C80A78](v13, v15);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16, v19);
  v21 = (char *)&v41 - v20;
  v22 = v3 + OBJC_IVAR____TtC12APFoundation13WorkDataStore_basePath;
  swift_beginAccess();
  sub_1CF29F694(v22, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1CF29F6DC((uint64_t)v12);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v21, v12, v13);
    v23 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v45[0] = v41;
    v45[1] = v42;
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0CAFD78], v4);
    sub_1CF28DE8C();
    sub_1CF371F30();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v24 = (void *)sub_1CF371EF4();
    v25 = *(void (**)(char *, uint64_t))(v14 + 8);
    v25(v18, v13);
    v45[0] = 0;
    v26 = objc_msgSend(v23, sel_removeItemAtURL_error_, v24, v45);

    v27 = v45[0];
    if (v26)
    {
      v25(v21, v13);
    }
    else
    {
      v28 = v27;
      v29 = (void *)sub_1CF371ED0();

      swift_willThrow();
      v45[0] = v29;
      v30 = v29;
      sub_1CF263D78(&qword_1EFB8D2A0);
      sub_1CF290438(0, &qword_1EFB8D2A8);
      if (swift_dynamicCast())
      {

        v31 = v44;
        LODWORD(v43) = sub_1CF3722F0();
        sub_1CF290438(0, (unint64_t *)&qword_1ED2BBE60);
        v32 = (void *)sub_1CF37235C();
        sub_1CF263D78(&qword_1ED2BC230);
        v33 = swift_allocObject();
        *(_OWORD *)(v33 + 16) = xmmword_1CF376E70;
        *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEA968];
        v34 = sub_1CF290470();
        *(_QWORD *)(v33 + 64) = v34;
        v35 = v42;
        *(_QWORD *)(v33 + 32) = v41;
        *(_QWORD *)(v33 + 40) = v35;
        swift_bridgeObjectRetain();
        v36 = objc_msgSend(v31, sel_localizedDescription);
        v42 = v25;
        v37 = v36;
        v38 = sub_1CF37214C();
        v40 = v39;

        *(_QWORD *)(v33 + 96) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v33 + 104) = v34;
        *(_QWORD *)(v33 + 72) = v38;
        *(_QWORD *)(v33 + 80) = v40;
        sub_1CF372068();

        swift_bridgeObjectRelease();
        swift_willThrow();
        v42(v21, v13);
      }
      else
      {
        v25(v21, v13);
      }

    }
  }
}

uint64_t sub_1CF29F560()
{
  uint64_t v0;

  sub_1CF29F6DC(v0 + OBJC_IVAR____TtC12APFoundation13WorkDataStore_basePath);
  return swift_deallocClassInstance();
}

uint64_t sub_1CF29F590()
{
  return type metadata accessor for WorkDataStore();
}

uint64_t type metadata accessor for WorkDataStore()
{
  uint64_t result;

  result = qword_1ED2BBDE8;
  if (!qword_1ED2BBDE8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1CF29F5D4()
{
  unint64_t v0;

  sub_1CF29F640();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1CF29F640()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED2BBD98)
  {
    sub_1CF371F3C();
    v0 = sub_1CF372368();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED2BBD98);
  }
}

uint64_t sub_1CF29F694(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CF263D78(&qword_1ED2BB3D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CF29F6DC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CF263D78(&qword_1ED2BB3D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1CF29F71C()
{
  unint64_t result;

  result = qword_1EFB8D2B0;
  if (!qword_1EFB8D2B0)
  {
    result = MEMORY[0x1D17CC2F0](&unk_1CF3777DC, &type metadata for WorkDataStoreError);
    atomic_store(result, (unint64_t *)&qword_1EFB8D2B0);
  }
  return result;
}

unint64_t sub_1CF29F760()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2BC150;
  if (!qword_1ED2BC150)
  {
    v1 = sub_1CF371E70();
    result = MEMORY[0x1D17CC2F0](MEMORY[0x1E0CADE18], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2BC150);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WorkDataStoreError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for WorkDataStoreError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CF29F83C + 4 * asc_1CF377710[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CF29F85C + 4 * byte_1CF377715[v4]))();
}

_BYTE *sub_1CF29F83C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CF29F85C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CF29F864(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CF29F86C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CF29F874(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CF29F87C(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1CF29F888()
{
  return 0;
}

ValueMetadata *type metadata accessor for WorkDataStoreError()
{
  return &type metadata for WorkDataStoreError;
}

unint64_t sub_1CF29F8A4()
{
  unint64_t result;

  result = qword_1EFB8D2B8;
  if (!qword_1EFB8D2B8)
  {
    result = MEMORY[0x1D17CC2F0](&unk_1CF3777B4, &type metadata for WorkDataStoreError);
    atomic_store(result, (unint64_t *)&qword_1EFB8D2B8);
  }
  return result;
}

uint64_t DatabaseManager.__allocating_init(database:log:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

id sub_1CF29F924@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD *)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  sqlite3_stmt *v7;
  int v8;
  void *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  id v13;
  _QWORD v16[5];

  objc_msgSend(*(id *)(a1 + 32), sel_lock);
  v7 = *(sqlite3_stmt **)(a1 + 24);
  if (!v7)
    goto LABEL_6;
  v8 = sqlite3_step(v7);
  *(_DWORD *)(a1 + 16) = v8;
  if (v8 == 100)
  {
    v16[3] = type metadata accessor for DatabaseCursorInternal();
    v16[4] = &off_1E8C49AA0;
    v16[0] = a1;
    swift_retain();
    a2(v16);
    sub_1CF263E18((uint64_t)v16);
    return objc_msgSend(*(id *)(a1 + 32), sel_unlock);
  }
  if (*(_QWORD *)(a1 + 24))
  {
    sqlite3_finalize(*(sqlite3_stmt **)(a1 + 24));
    *(_QWORD *)(a1 + 24) = 0;
LABEL_6:
    v8 = *(_DWORD *)(a1 + 16);
  }
  if (v8 != 101)
  {
    sub_1CF3722F0();
    v9 = *(void **)(a1 + 40);
    sub_1CF263D78(&qword_1ED2BC230);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1CF376C00;
    v11 = *(_DWORD *)(a1 + 16);
    v12 = MEMORY[0x1E0DEDC38];
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEDBC8];
    *(_QWORD *)(v10 + 64) = v12;
    *(_DWORD *)(v10 + 32) = v11;
    v13 = v9;
    sub_1CF372068();

    swift_bridgeObjectRelease();
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, 1, 1, a3);
  return objc_msgSend(*(id *)(a1 + 32), sel_unlock);
}

uint64_t sub_1CF29FC30()
{
  return 0;
}

uint64_t sub_1CF29FC38()
{
  return 2;
}

uint64_t sub_1CF29FC40()
{
  uint64_t v0;

  v0 = sub_1CF2A175C();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1CF29FC84()
{
  return sub_1CF372260();
}

id sub_1CF29FCA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1CF29F924(*(_QWORD *)v2, *(void (**)(_QWORD *))(v2 + 8), *(_QWORD *)(a1 + 16), a2);
}

uint64_t sub_1CF29FCB8()
{
  uint64_t v0;
  sqlite3_stmt *v1;

  objc_msgSend(*(id *)(v0 + 32), sel_lock);
  v1 = *(sqlite3_stmt **)(v0 + 24);
  if (v1)
  {
    sqlite3_finalize(v1);
    *(_QWORD *)(v0 + 24) = 0;
  }
  objc_msgSend(*(id *)(v0 + 32), sel_unlock);

  return swift_deallocClassInstance();
}

sqlite3_int64 sub_1CF29FD14(int iCol)
{
  uint64_t *v1;
  uint64_t v3;
  char *v4;

  v3 = *v1;
  if (sqlite3_column_type(*(sqlite3_stmt **)(v3 + 24), iCol) != 5)
    return sqlite3_column_int64(*(sqlite3_stmt **)(v3 + 24), iCol);
  sub_1CF29C4D4();
  swift_allocError();
  strcpy(v4, "Int64 is nil");
  v4[13] = 0;
  *((_WORD *)v4 + 7) = -5120;
  return swift_willThrow();
}

sqlite3_int64 sub_1CF29FDB0(int iCol)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  if (sqlite3_column_type(*(sqlite3_stmt **)(v3 + 24), iCol) == 5)
    return 0;
  else
    return sqlite3_column_int64(*(sqlite3_stmt **)(v3 + 24), iCol);
}

sqlite3_int64 sub_1CF29FE0C(int iCol)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;

  v3 = *v1;
  if (sqlite3_column_type(*(sqlite3_stmt **)(v3 + 24), iCol) != 5)
    return sqlite3_column_int64(*(sqlite3_stmt **)(v3 + 24), iCol);
  sub_1CF29C4D4();
  swift_allocError();
  *v4 = 0x6E20736920746E49;
  v4[1] = 0xEA00000000006C69;
  return swift_willThrow();
}

void sub_1CF29FEA4(int iCol)
{
  uint64_t *v1;
  uint64_t v3;
  char *v4;

  v3 = *v1;
  if (sqlite3_column_type(*(sqlite3_stmt **)(v3 + 24), iCol) == 5)
  {
    sub_1CF29C4D4();
    swift_allocError();
    strcpy(v4, "Double is nil");
    *((_WORD *)v4 + 7) = -4864;
    swift_willThrow();
  }
  else
  {
    sqlite3_column_double(*(sqlite3_stmt **)(v3 + 24), iCol);
  }
}

double sub_1CF29FF44(int iCol)
{
  uint64_t *v1;
  uint64_t v3;
  double result;

  v3 = *v1;
  if (sqlite3_column_type(*(sqlite3_stmt **)(v3 + 24), iCol) != 5)
    return sqlite3_column_double(*(sqlite3_stmt **)(v3 + 24), iCol);
  return result;
}

const unsigned __int8 *sub_1CF29FFA4(int a1)
{
  return sub_1CF29FFC4(a1);
}

const unsigned __int8 *sub_1CF29FFC4(int iCol)
{
  uint64_t v1;
  char *v3;
  const unsigned __int8 *result;

  if (sqlite3_column_type(*(sqlite3_stmt **)(v1 + 24), iCol) == 5)
  {
    sub_1CF29C4D4();
    swift_allocError();
    strcpy(v3, "String is nil");
    *((_WORD *)v3 + 7) = -4864;
    return (const unsigned __int8 *)swift_willThrow();
  }
  else if (sqlite3_column_bytes(*(sqlite3_stmt **)(v1 + 24), iCol) < 1)
  {
    return 0;
  }
  else
  {
    result = sqlite3_column_text(*(sqlite3_stmt **)(v1 + 24), iCol);
    if (result)
      return (const unsigned __int8 *)sub_1CF3721D0();
  }
  return result;
}

const unsigned __int8 *sub_1CF2A0080(int a1)
{
  return sub_1CF2A00A0(a1);
}

const unsigned __int8 *sub_1CF2A00A0(int iCol)
{
  uint64_t v1;
  const unsigned __int8 *result;

  if (sqlite3_column_type(*(sqlite3_stmt **)(v1 + 24), iCol) == 5)
    return 0;
  if (sqlite3_column_bytes(*(sqlite3_stmt **)(v1 + 24), iCol) < 1)
    return 0;
  result = sqlite3_column_text(*(sqlite3_stmt **)(v1 + 24), iCol);
  if (result)
    return (const unsigned __int8 *)sub_1CF3721D0();
  return result;
}

uint64_t sub_1CF2A0110@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return sub_1CF2A0130(a1, a2);
}

uint64_t sub_1CF2A0130@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  v5 = sub_1CF263D78(&qword_1ED2BBDA8);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sqlite3_column_type(*(sqlite3_stmt **)(v2 + 24), a1) == 5)
  {
    v9 = sub_1CF371FF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
LABEL_4:
    sub_1CF263DB8((uint64_t)v8, &qword_1ED2BBDA8);
    sub_1CF29C4D4();
    swift_allocError();
    *v12 = 0x2073692065746144;
    v12[1] = 0xEB000000006C696ELL;
    return swift_willThrow();
  }
  sqlite3_column_double(*(sqlite3_stmt **)(v2 + 24), a1);
  sub_1CF371FCC();
  v10 = sub_1CF371FF0();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
    goto LABEL_4;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v8, v10);
}

uint64_t sub_1CF2A02A8@<X0>(int iCol@<W0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  if (sqlite3_column_type(*(sqlite3_stmt **)(v5 + 24), iCol) == 5)
  {
    v6 = sub_1CF371FF0();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a2;
    v9 = 1;
  }
  else
  {
    sqlite3_column_double(*(sqlite3_stmt **)(v5 + 24), iCol);
    sub_1CF371FCC();
    v6 = sub_1CF371FF0();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a2;
    v9 = 0;
  }
  return v7(v8, v9, 1, v6);
}

uint64_t DatabaseManager.init(database:log:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

const char *sub_1CF2A0348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  const char *result;
  const char *v7;
  sqlite3_stmt *v8;
  int v9;
  sqlite3_stmt *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD v17[5];
  int v18;

  result = sub_1CF2A0E10(a1, a2, a3);
  if (!v4)
  {
    v7 = result;
    objc_msgSend(*((id *)result + 4), sel_lock);
    v8 = (sqlite3_stmt *)*((_QWORD *)v7 + 3);
    if (v8)
    {
      v9 = sqlite3_step(v8);
      *((_DWORD *)v7 + 4) = v9;
      if (v9 == 100)
      {
        v17[3] = type metadata accessor for DatabaseCursorInternal();
        v17[4] = &off_1E8C49AA0;
        v17[0] = v7;
        swift_retain();
        sub_1CF29B6EC(v17, a4);
        v16 = type metadata accessor for WorkOrder();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a4, 0, 1, v16);
        sub_1CF263E18((uint64_t)v17);
LABEL_10:
        objc_msgSend(*((id *)v7 + 4), sel_unlock);
        return (const char *)swift_release();
      }
      v10 = (sqlite3_stmt *)*((_QWORD *)v7 + 3);
      if (v10)
      {
        sqlite3_finalize(v10);
        *((_QWORD *)v7 + 3) = 0;
      }
    }
    if (*((_DWORD *)v7 + 4) == 101)
    {
      v11 = type metadata accessor for WorkOrder();
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a4, 1, 1, v11);
    }
    else
    {
      sub_1CF3722F0();
      sub_1CF263D78(&qword_1ED2BC230);
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1CF376C00;
      v13 = *((_DWORD *)v7 + 4);
      v14 = MEMORY[0x1E0DEDC38];
      *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEDBC8];
      *(_QWORD *)(v12 + 64) = v14;
      *(_DWORD *)(v12 + 32) = v13;
      sub_1CF372068();
      swift_bridgeObjectRelease();
      sub_1CF3723EC();
      swift_bridgeObjectRelease();
      v17[0] = 0xD00000000000001BLL;
      v17[1] = 0x80000001CF381590;
      v18 = *((_DWORD *)v7 + 4);
      sub_1CF37247C();
      sub_1CF3721C4();
      swift_bridgeObjectRelease();
      sub_1CF29C4D4();
      swift_allocError();
      *v15 = 0xD00000000000001BLL;
      v15[1] = 0x80000001CF381590;
      swift_willThrow();
    }
    goto LABEL_10;
  }
  return result;
}

const char *sub_1CF2A05CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(_QWORD *)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v6;
  const char *result;
  const char *v11;
  sqlite3_stmt *v12;
  int v13;
  sqlite3_stmt *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  _QWORD v20[5];

  result = sub_1CF2A0E10(a1, a2, a3);
  if (!v6)
  {
    v11 = result;
    objc_msgSend(*((id *)result + 4), sel_lock);
    v12 = (sqlite3_stmt *)*((_QWORD *)v11 + 3);
    if (v12)
    {
      v13 = sqlite3_step(v12);
      *((_DWORD *)v11 + 4) = v13;
      if (v13 == 100)
      {
        v20[3] = type metadata accessor for DatabaseCursorInternal();
        v20[4] = &off_1E8C49AA0;
        v20[0] = v11;
        swift_retain();
        a4(v20);
        sub_1CF263E18((uint64_t)v20);
LABEL_10:
        objc_msgSend(*((id *)v11 + 4), sel_unlock, v19);
        return (const char *)swift_release();
      }
      v14 = (sqlite3_stmt *)*((_QWORD *)v11 + 3);
      if (v14)
      {
        sqlite3_finalize(v14);
        *((_QWORD *)v11 + 3) = 0;
      }
    }
    if (*((_DWORD *)v11 + 4) == 101)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 56))(a6, 1, 1, a5);
    }
    else
    {
      sub_1CF3722F0();
      sub_1CF263D78(&qword_1ED2BC230);
      v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1CF376C00;
      v16 = *((_DWORD *)v11 + 4);
      v17 = MEMORY[0x1E0DEDC38];
      *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEDBC8];
      *(_QWORD *)(v15 + 64) = v17;
      *(_DWORD *)(v15 + 32) = v16;
      sub_1CF372068();
      swift_bridgeObjectRelease();
      sub_1CF3723EC();
      swift_bridgeObjectRelease();
      v20[0] = 0xD00000000000001BLL;
      v20[1] = 0x80000001CF381590;
      LODWORD(v19) = *((_DWORD *)v11 + 4);
      sub_1CF37247C();
      sub_1CF3721C4();
      swift_bridgeObjectRelease();
      sub_1CF29C4D4();
      swift_allocError();
      *v18 = 0xD00000000000001BLL;
      v18[1] = 0x80000001CF381590;
      swift_willThrow();
    }
    goto LABEL_10;
  }
  return result;
}

const char *sub_1CF2A0988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, const char *a4@<X3>, const char *a5@<X4>, uint64_t a6@<X5>, const char **a7@<X8>)
{
  uint64_t v7;
  const char *result;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;

  result = sub_1CF2A0E10(a1, a2, a3);
  if (!v7)
  {
    v15 = result;
    v16 = type metadata accessor for DatabaseResults(0, a6, v13, v14);
    a7[3] = (const char *)v16;
    a7[4] = (const char *)MEMORY[0x1D17CC2F0](&unk_1CF3779B8, v16);
    *a7 = v15;
    a7[1] = a4;
    a7[2] = a5;
    return (const char *)swift_retain();
  }
  return result;
}

const char *sub_1CF2A0A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void (*a4)(char *, unint64_t *)@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  const char *result;
  const char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  sqlite3_stmt *v22;
  void (*v23)(char *, unint64_t *);
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t *);
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _UNKNOWN **v43;
  uint64_t v44;

  v37 = *(_QWORD *)(a6 - 8);
  v14 = MEMORY[0x1E0C80A78](a1, a2);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v7;
  result = sub_1CF2A0E10(v14, v17, v18);
  if (v8)
    return result;
  v20 = result;
  v38 = a4;
  v39 = a5;
  objc_msgSend(*((id *)result + 4), sel_lock);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
  v34 = a6;
  v21(v16, a3, a6);
  v22 = (sqlite3_stmt *)*((_QWORD *)v20 + 3);
  v33 = a7;
  if (v22)
  {
    v36 = xmmword_1CF376C00;
    v23 = v38;
    while (1)
    {
      v24 = sqlite3_step(v22);
      *((_DWORD *)v20 + 4) = v24;
      if (v24 != 100)
        break;
      v42 = type metadata accessor for DatabaseCursorInternal();
      v43 = &off_1E8C49AA0;
      v40 = (unint64_t)v20;
      swift_retain();
      v23(v16, &v40);
      sub_1CF263E18((uint64_t)&v40);
      v22 = (sqlite3_stmt *)*((_QWORD *)v20 + 3);
      if (!v22)
        goto LABEL_9;
    }
    if (!*((_QWORD *)v20 + 3))
      goto LABEL_10;
    sqlite3_finalize(*((sqlite3_stmt **)v20 + 3));
    *((_QWORD *)v20 + 3) = 0;
  }
LABEL_9:
  v24 = *((_DWORD *)v20 + 4);
LABEL_10:
  v25 = v34;
  if (v24 == 101)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v33, v16, v34);
  }
  else
  {
    sub_1CF3722F0();
    sub_1CF263D78(&qword_1ED2BC230);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1CF376C00;
    v27 = *((_DWORD *)v20 + 4);
    v28 = MEMORY[0x1E0DEDC38];
    *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEDBC8];
    *(_QWORD *)(v26 + 64) = v28;
    *(_DWORD *)(v26 + 32) = v27;
    sub_1CF372068();
    swift_bridgeObjectRelease();
    v40 = 0;
    v41 = 0xE000000000000000;
    sub_1CF3723EC();
    swift_bridgeObjectRelease();
    v40 = 0xD00000000000001BLL;
    v41 = 0x80000001CF381590;
    LODWORD(v44) = *((_DWORD *)v20 + 4);
    sub_1CF37247C();
    sub_1CF3721C4();
    swift_bridgeObjectRelease();
    v29 = v40;
    v30 = v41;
    sub_1CF29C4D4();
    swift_allocError();
    *v31 = v29;
    v31[1] = v30;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v25);
  }
  objc_msgSend(*((id *)v20 + 4), sel_unlock);
  return (const char *)swift_release();
}

const char *sub_1CF2A0E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  const char *v23;
  id v24;
  _QWORD *v25;
  _QWORD v27[5];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  _BYTE v31[40];
  uint64_t v32;

  if (a3)
  {
    v5 = *(_QWORD *)(a3 + 16);
    if (v5)
    {
      v27[2] = a1;
      v27[3] = a2;
      v32 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1CF372428();
      v27[1] = a3;
      v6 = a3 + 32;
      do
      {
        sub_1CF263D30(v6, (uint64_t)v31);
        sub_1CF263D30((uint64_t)v31, (uint64_t)&v28);
        v8 = *((_QWORD *)&v29 + 1);
        if (*((_QWORD *)&v29 + 1))
        {
          v7 = v30;
          sub_1CF263DF4(&v28, *((uint64_t *)&v29 + 1));
          (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v7);
          sub_1CF263E18((uint64_t)&v28);
        }
        else
        {
          sub_1CF263DB8((uint64_t)&v28, qword_1ED2BB3E8);
          v28 = 0u;
          v29 = 0u;
          v9 = (void *)sub_1CF372140();
          v10 = *((_QWORD *)&v29 + 1);
          if (*((_QWORD *)&v29 + 1))
          {
            v11 = sub_1CF263DF4(&v28, *((uint64_t *)&v29 + 1));
            v12 = *(_QWORD *)(v10 - 8);
            MEMORY[0x1E0C80A78](v11, v11);
            v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v12 + 16))(v14);
            v15 = sub_1CF3724A0();
            (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v10);
            sub_1CF263E18((uint64_t)&v28);
          }
          else
          {
            v15 = 0;
          }
          objc_msgSend(objc_allocWithZone((Class)APDatabaseColumn), sel_initWithName_forColumnType_withValue_, v9, 1, v15);

          swift_unknownObjectRelease();
        }
        sub_1CF263DB8((uint64_t)v31, qword_1ED2BB3E8);
        sub_1CF372410();
        sub_1CF372434();
        sub_1CF372440();
        sub_1CF37241C();
        v6 += 40;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
      v3 = v27[4];
    }
  }
  v16 = *(void **)(v3 + 16);
  v17 = (void *)sub_1CF372140();
  sub_1CF263E94();
  v18 = (void *)sub_1CF37226C();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v16, sel_getCursorForQuery_parameters_, v17, v18);

  if (v19)
  {
    v20 = objc_msgSend(v19, sel_statement);
    v21 = objc_msgSend(v19, sel_lock);

    v22 = *(void **)(v3 + 24);
    type metadata accessor for DatabaseCursorInternal();
    v23 = (const char *)swift_allocObject();
    *((_DWORD *)v23 + 4) = 0;
    *((_QWORD *)v23 + 3) = v20;
    *((_QWORD *)v23 + 4) = v21;
    *((_QWORD *)v23 + 5) = v22;
    v24 = v22;
  }
  else
  {
    sub_1CF3722F0();
    v23 = "Failed to open a cursor.";
    sub_1CF372068();
    sub_1CF29C4D4();
    swift_allocError();
    *v25 = 0xD000000000000018;
    v25[1] = 0x80000001CF381660;
    swift_willThrow();
  }
  return v23;
}

uint64_t type metadata accessor for DatabaseCursorInternal()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DatabaseResults(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CF2979B0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DatabaseResults);
}

uint64_t DatabaseManager.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DatabaseManager.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

id Int64.dbParam.getter(uint64_t a1)
{
  return sub_1CF2A120C(a1, MEMORY[0x1E0DEDC60], 1);
}

id sub_1CF2A11F4(uint64_t a1, uint64_t a2)
{
  return sub_1CF263E38(a1, a2, 1);
}

id Int.dbParam.getter(uint64_t a1)
{
  return sub_1CF2A120C(a1, MEMORY[0x1E0DEB418], 0);
}

id sub_1CF2A120C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v7[4];

  sub_1CF263E94();
  v7[3] = a2;
  v7[0] = a1;
  return sub_1CF263ED0(0, 0xE000000000000000, a3, v7);
}

id String.dbParam.getter(uint64_t a1, uint64_t a2)
{
  _QWORD v5[4];

  sub_1CF263E94();
  v5[3] = MEMORY[0x1E0DEA968];
  v5[0] = a1;
  v5[1] = a2;
  swift_bridgeObjectRetain();
  return sub_1CF263ED0(0, 0xE000000000000000, 3, v5);
}

id Double.dbParam.getter(double a1)
{
  _QWORD v3[4];

  sub_1CF263E94();
  v3[3] = MEMORY[0x1E0DEB070];
  *(double *)v3 = a1;
  return sub_1CF263ED0(0, 0xE000000000000000, 2, v3);
}

id Date.dbParam.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4[4];

  sub_1CF263E94();
  v1 = sub_1CF371FF0();
  v4[3] = v1;
  v2 = sub_1CF29530C(v4);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v2, v0, v1);
  return sub_1CF263ED0(0, 0xE000000000000000, 4, v4);
}

id sub_1CF2A13AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v5[4];

  sub_1CF263E94();
  v5[3] = a1;
  v3 = sub_1CF29530C(v5);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v3, v1, a1);
  return sub_1CF263ED0(0, 0xE000000000000000, 4, v5);
}

ValueMetadata *type metadata accessor for DBError()
{
  return &type metadata for DBError;
}

uint64_t dispatch thunk of DatabaseCursor.read(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t type metadata accessor for DatabaseManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for DatabaseManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DatabaseManager.__allocating_init(database:log:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of DatabaseManager.singleValueFromQuery<A>(_:parameters:transform:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of DatabaseManager.multipleValuesFromQuery<A>(_:parameters:transform:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of DatabaseManager.reduceFromQuery<A>(_:parameters:into:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of APDBParameter.dbParam.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1CF2A15B0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1CF2A15BC()
{
  swift_release();
  return swift_release();
}

uint64_t sub_1CF2A15E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_1CF2A1624(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1CF2A1680(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t sub_1CF2A16C4(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1CF2A170C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void sub_1CF2A174C()
{
  JUMPOUT(0x1D17CC2F0);
}

_QWORD *sub_1CF2A1760(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1CF371FF0();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v11);
    v14 = a3[6];
    v15 = a3[7];
    v16 = (_QWORD *)((char *)v4 + v14);
    v17 = (_QWORD *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    *((_BYTE *)v4 + v15) = *((_BYTE *)a2 + v15);
    v19 = a3[8];
    v20 = a3[9];
    v21 = (_QWORD *)((char *)v4 + v19);
    v22 = (_QWORD *)((char *)a2 + v19);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = (char *)v4 + v20;
    v25 = (char *)a2 + v20;
    v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26(v25, 1, v11))
    {
      v27 = sub_1CF263D78(&qword_1ED2BBDA8);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v13(v24, v25, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
    }
    v29 = a3[11];
    *(_QWORD *)((char *)v4 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
    v30 = (_QWORD *)((char *)v4 + v29);
    v31 = (_QWORD *)((char *)a2 + v29);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = a3[12];
    v34 = a3[13];
    v35 = (_QWORD *)((char *)v4 + v33);
    v36 = (_QWORD *)((char *)a2 + v33);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = (_QWORD *)((char *)v4 + v34);
    v39 = (_QWORD *)((char *)a2 + v34);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    v41 = a3[14];
    v42 = (_QWORD *)((char *)v4 + v41);
    v43 = (_QWORD *)((char *)a2 + v41);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1CF2A192C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1CF371FF0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = a1 + *(int *)(a2 + 36);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
    v7(v8, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1CF2A1A14(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1CF371FF0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = a3[7];
  v15 = (_QWORD *)((char *)a1 + v13);
  v16 = (_QWORD *)((char *)a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
  v18 = a3[8];
  v19 = a3[9];
  v20 = (_QWORD *)((char *)a1 + v18);
  v21 = (_QWORD *)((char *)a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = (char *)a1 + v19;
  v24 = (char *)a2 + v19;
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25(v24, 1, v10))
  {
    v26 = sub_1CF263D78(&qword_1ED2BBDA8);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v12(v23, v24, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v23, 0, 1, v10);
  }
  v27 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (_QWORD *)((char *)a2 + v27);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a3[12];
  v32 = a3[13];
  v33 = (_QWORD *)((char *)a1 + v31);
  v34 = (_QWORD *)((char *)a2 + v31);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v36 = (_QWORD *)((char *)a1 + v32);
  v37 = (_QWORD *)((char *)a2 + v32);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  v39 = a3[14];
  v40 = (_QWORD *)((char *)a1 + v39);
  v41 = (_QWORD *)((char *)a2 + v39);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1CF2A1BB4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1CF371FF0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v15 = a3[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[9];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v22 = v21((char *)a1 + v18, 1, v9);
  v23 = v21(v20, 1, v9);
  if (!v22)
  {
    if (!v23)
    {
      v11(v19, v20, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    v24 = sub_1CF263D78(&qword_1ED2BBDA8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  v25 = a3[11];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = a3[12];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = a3[13];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = a3[14];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1CF2A1E20(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1CF371FF0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  v13 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))((char *)a2 + v13, 1, v9))
  {
    v16 = sub_1CF263D78(&qword_1ED2BBDA8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v11(v14, v15, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  v17 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v17) = *(_OWORD *)((char *)a2 + v17);
  v18 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  *(_OWORD *)((char *)a1 + v18) = *(_OWORD *)((char *)a2 + v18);
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
  return a1;
}

_QWORD *sub_1CF2A1F58(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1CF371FF0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = a3[9];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v27 = v26((char *)a1 + v23, 1, v10);
  v28 = v26(v25, 1, v10);
  if (!v27)
  {
    if (!v28)
    {
      v12(v24, v25, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    v29 = sub_1CF263D78(&qword_1ED2BBDA8);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v24, v25, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v24, 0, 1, v10);
LABEL_7:
  v30 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v34 = *v32;
  v33 = v32[1];
  *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  v35 = a3[12];
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = (_QWORD *)((char *)a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  v40 = a3[13];
  v41 = (_QWORD *)((char *)a1 + v40);
  v42 = (_QWORD *)((char *)a2 + v40);
  v44 = *v42;
  v43 = v42[1];
  *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  v45 = a3[14];
  v46 = (_QWORD *)((char *)a1 + v45);
  v47 = (_QWORD *)((char *)a2 + v45);
  v49 = *v47;
  v48 = v47[1];
  *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CF2A214C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CF2A2158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1CF371FF0();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_1CF263D78(&qword_1ED2BBDA8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1CF2A21FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CF2A2208(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1CF371FF0();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_1CF263D78(&qword_1ED2BBDA8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for WorkOrder()
{
  uint64_t result;

  result = qword_1ED2BB480;
  if (!qword_1ED2BB480)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1CF2A22E4()
{
  unint64_t v0;
  unint64_t v1;

  sub_1CF371FF0();
  if (v0 <= 0x3F)
  {
    sub_1CF2A23A4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1CF2A23A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED2BBDB0)
  {
    sub_1CF371FF0();
    v0 = sub_1CF372368();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED2BBDB0);
  }
}

uint64_t sub_1CF2A23FC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v24;
  uint64_t result;
  int *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  char v42;
  void (*v43)(char *, uint64_t);
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char v55;
  char v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  char v62;
  char v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;

  v72 = sub_1CF371FF0();
  v4 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72, v5);
  v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CF263D78(qword_1EFB8D2C0);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CF263D78(&qword_1ED2BBDA8);
  v14 = MEMORY[0x1E0C80A78](v12, v13);
  v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v14, v17);
  v20 = (char *)&v69 - v19;
  MEMORY[0x1E0C80A78](v18, v21);
  v23 = (char *)&v69 - v22;
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    v24 = sub_1CF3724AC();
    result = 0;
    if ((v24 & 1) == 0)
      return result;
  }
  v26 = (int *)type metadata accessor for WorkOrder();
  if ((sub_1CF371FD8() & 1) == 0)
    return 0;
  v27 = v26[6];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = *(_QWORD *)((char *)a1 + v27 + 8);
  v30 = (_QWORD *)((char *)a2 + v27);
  v31 = v30[1];
  if (v29)
  {
    if (!v31)
      return 0;
    if (*v28 != *v30 || v29 != v31)
    {
      v32 = sub_1CF3724AC();
      result = 0;
      if ((v32 & 1) == 0)
        return result;
    }
  }
  else if (v31)
  {
    return 0;
  }
  if (qword_1CF377AB0[*((char *)a1 + v26[7])] != qword_1CF377AB0[*((char *)a2 + v26[7])])
    return 0;
  v33 = v26[8];
  v34 = (_QWORD *)((char *)a1 + v33);
  v35 = *(_QWORD *)((char *)a1 + v33 + 8);
  v36 = (_QWORD *)((char *)a2 + v33);
  v37 = v36[1];
  if (v35)
  {
    if (!v37)
      return 0;
    if (*v34 != *v36 || v35 != v37)
    {
      v38 = sub_1CF3724AC();
      result = 0;
      if ((v38 & 1) == 0)
        return result;
    }
  }
  else if (v37)
  {
    return 0;
  }
  sub_1CF29C5E0((uint64_t)a1 + v26[9], (uint64_t)v23);
  v70 = v26;
  sub_1CF29C5E0((uint64_t)a2 + v26[9], (uint64_t)v20);
  v39 = (uint64_t)&v11[*(int *)(v8 + 48)];
  sub_1CF29C5E0((uint64_t)v23, (uint64_t)v11);
  v71 = v39;
  sub_1CF29C5E0((uint64_t)v20, v39);
  v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v41 = v72;
  if (v40((uint64_t)v11, 1, v72) == 1)
  {
    sub_1CF263DB8((uint64_t)v20, &qword_1ED2BBDA8);
    sub_1CF263DB8((uint64_t)v23, &qword_1ED2BBDA8);
    if (v40(v71, 1, v41) == 1)
    {
      sub_1CF263DB8((uint64_t)v11, &qword_1ED2BBDA8);
      goto LABEL_27;
    }
LABEL_25:
    sub_1CF263DB8((uint64_t)v11, qword_1EFB8D2C0);
    return 0;
  }
  sub_1CF29C5E0((uint64_t)v11, (uint64_t)v16);
  if (v40(v71, 1, v41) == 1)
  {
    sub_1CF263DB8((uint64_t)v20, &qword_1ED2BBDA8);
    sub_1CF263DB8((uint64_t)v23, &qword_1ED2BBDA8);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v16, v41);
    goto LABEL_25;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v7, v71, v41);
  sub_1CF2A2904();
  v42 = sub_1CF372134();
  v43 = *(void (**)(char *, uint64_t))(v4 + 8);
  v43(v7, v41);
  sub_1CF263DB8((uint64_t)v20, &qword_1ED2BBDA8);
  sub_1CF263DB8((uint64_t)v23, &qword_1ED2BBDA8);
  v43(v16, v41);
  sub_1CF263DB8((uint64_t)v11, &qword_1ED2BBDA8);
  if ((v42 & 1) == 0)
    return 0;
LABEL_27:
  v44 = v70;
  if (*(_QWORD *)((char *)a1 + v70[10]) != *(_QWORD *)((char *)a2 + v70[10]))
    return 0;
  v45 = v70[11];
  v46 = *(_QWORD *)((char *)a1 + v45);
  v47 = *(_QWORD *)((char *)a1 + v45 + 8);
  v48 = (_QWORD *)((char *)a2 + v45);
  if (v46 == *v48 && v47 == v48[1] || (v49 = sub_1CF3724AC(), v44 = v70, v50 = v49, result = 0, (v50 & 1) != 0))
  {
    v51 = v44[12];
    v52 = *(_QWORD *)((char *)a1 + v51);
    v53 = *(_QWORD *)((char *)a1 + v51 + 8);
    v54 = (_QWORD *)((char *)a2 + v51);
    if (v52 == *v54 && v53 == v54[1])
      goto LABEL_34;
    v55 = sub_1CF3724AC();
    v44 = v70;
    v56 = v55;
    result = 0;
    if ((v56 & 1) != 0)
    {
LABEL_34:
      v57 = v44[13];
      v58 = (_QWORD *)((char *)a1 + v57);
      v59 = *(_QWORD *)((char *)a1 + v57 + 8);
      v60 = (_QWORD *)((char *)a2 + v57);
      v61 = v60[1];
      if (v59)
      {
        if (!v61)
          return 0;
        if (*v58 != *v60 || v59 != v61)
        {
          v62 = sub_1CF3724AC();
          v44 = v70;
          v63 = v62;
          result = 0;
          if ((v63 & 1) == 0)
            return result;
        }
      }
      else if (v61)
      {
        return 0;
      }
      v64 = v44[14];
      v65 = (_QWORD *)((char *)a1 + v64);
      v66 = *(_QWORD *)((char *)a1 + v64 + 8);
      v67 = (_QWORD *)((char *)a2 + v64);
      v68 = v67[1];
      if (v66)
      {
        if (v68 && (*v65 == *v67 && v66 == v68 || (sub_1CF3724AC() & 1) != 0))
          return 1;
      }
      else if (!v68)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

unint64_t sub_1CF2A2904()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2BBEA8;
  if (!qword_1ED2BBEA8)
  {
    v1 = sub_1CF371FF0();
    result = MEMORY[0x1D17CC2F0](MEMORY[0x1E0CB08B8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2BBEA8);
  }
  return result;
}

uint64_t EntropyLimitedString.value.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

APFoundation::EntropyLimitedString __swiftcall EntropyLimitedString.init(value:)(APFoundation::EntropyLimitedString value)
{
  APFoundation::EntropyLimitedString *v1;

  *v1 = value;
  return value;
}

uint64_t static EntropyLimitedString.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1CF3724AC();
}

ValueMetadata *type metadata accessor for EntropyLimitedString()
{
  return &type metadata for EntropyLimitedString;
}

uint64_t dispatch thunk of IntBucketStrategy.bucketFor(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1CF2A2CB8()
{
  unint64_t v0;
  char v1;
  unint64_t v2;
  char v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v0 = sub_1CF372020();
  v1 = v0;
  v3 = v2;
  v4 = v0 >> 8;
  v5 = v0 >> 16;
  v6 = v0 >> 24;
  v7 = HIDWORD(v0);
  v8 = v0 >> 40;
  v9 = HIWORD(v0);
  v10 = HIBYTE(v0);
  v14 = v2 >> 8;
  v15 = v2 >> 16;
  v16 = v2 >> 24;
  v17 = HIDWORD(v2);
  v18 = v2 >> 40;
  v19 = HIWORD(v2);
  v20 = HIBYTE(v2);
  sub_1CF263D78(&qword_1ED2BC218);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1CF377B40;
  *(_BYTE *)(v11 + 32) = v1;
  *(_BYTE *)(v11 + 33) = v4;
  *(_BYTE *)(v11 + 34) = v5;
  *(_BYTE *)(v11 + 35) = v6;
  *(_BYTE *)(v11 + 36) = v7;
  *(_BYTE *)(v11 + 37) = v8;
  *(_BYTE *)(v11 + 38) = v9;
  *(_BYTE *)(v11 + 39) = v10;
  *(_BYTE *)(v11 + 40) = v3;
  *(_BYTE *)(v11 + 41) = v14;
  *(_BYTE *)(v11 + 42) = v15;
  *(_BYTE *)(v11 + 43) = v16;
  *(_BYTE *)(v11 + 44) = v17;
  *(_BYTE *)(v11 + 45) = v18;
  *(_BYTE *)(v11 + 46) = v19;
  *(_BYTE *)(v11 + 47) = v20;
  v12 = sub_1CF28F144(v11);
  swift_bridgeObjectRelease();
  return v12;
}

BOOL Collection.isPopulated.getter()
{
  return (sub_1CF3722C0() & 1) == 0;
}

uint64_t PopulatedArray.init(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  sub_1CF2A2FD8(a2, a2);
  v6 = *(_QWORD *)(a2 - 8);
  swift_allocObject();
  sub_1CF372284();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v7, a1, a2);
  sub_1CF3722A8();
  v8 = sub_1CF372290();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  *a3 = v8;
  return result;
}

uint64_t PopulatedArray.init(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1CF3722A8();
  MEMORY[0x1D17CC2F0](MEMORY[0x1E0DEAF50], v4);
  result = Collection.isPopulated.getter();
  if ((result & 1) == 0)
  {
    result = swift_bridgeObjectRelease();
    a1 = 0;
  }
  *a2 = a1;
  return result;
}

uint64_t static PopulatedArray.== infix(_:_:)()
{
  return sub_1CF3722B4();
}

uint64_t sub_1CF2A2F60()
{
  return static PopulatedArray.== infix(_:_:)();
}

uint64_t PopulatedArray.debugDescription.getter()
{
  uint64_t v0;

  v0 = sub_1CF3722A8();
  MEMORY[0x1D17CC2F0](MEMORY[0x1E0DEAF68], v0);
  sub_1CF372494();
  return 0;
}

uint64_t sub_1CF2A2FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return sub_1CF263D78(&qword_1ED2BB4A8);
  else
    return sub_1CF372488();
}

uint64_t sub_1CF2A3024()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for PopulatedArray(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CF2979B0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PopulatedArray);
}

uint64_t CachingPurposeConfigurationStore.__allocating_init(backingStore:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 56) = sub_1CF2A39F0(MEMORY[0x1E0DEE9D8]);
  sub_1CF290894(a1, v2 + 16);
  return v2;
}

uint64_t CachingPurposeConfigurationStore.init(backingStore:)(__int128 *a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = sub_1CF2A39F0(MEMORY[0x1E0DEE9D8]);
  sub_1CF290894(a1, v1 + 16);
  return v1;
}

uint64_t CachingPurposeConfigurationStore.deinit()
{
  uint64_t v0;

  sub_1CF263E18(v0 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CachingPurposeConfigurationStore.__deallocating_deinit()
{
  uint64_t v0;

  sub_1CF263E18(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t CachingPurposeConfigurationStore.configurationFor(_:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  unint64_t result;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  _QWORD v14[3];

  v3 = v2;
  swift_beginAccess();
  v6 = v2[7];
  if (*(_QWORD *)(v6 + 16) && (result = sub_1CF2A32A4(a1), (v8 & 1) != 0))
  {
    v9 = *(_BYTE *)(*(_QWORD *)(v6 + 56) + result);
  }
  else
  {
    v10 = v3[5];
    v11 = v3[6];
    sub_1CF263DF4(v3 + 2, v10);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))(v11 + 8))(v14, a1, v10, v11);
    v9 = v14[0];
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = v3[7];
    v3[7] = 0x8000000000000000;
    sub_1CF2A373C(v9, a1, isUniquelyReferenced_nonNull_native);
    v3[7] = v13;
    swift_bridgeObjectRelease();
    result = swift_endAccess();
  }
  *a2 = v9;
  return result;
}

unint64_t sub_1CF2A3220@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return CachingPurposeConfigurationStore.configurationFor(_:)(a1, a2);
}

unint64_t sub_1CF2A3240(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1CF372518();
  sub_1CF3721AC();
  v4 = sub_1CF37253C();
  return sub_1CF2A32FC(a1, a2, v4);
}

unint64_t sub_1CF2A32A4(uint64_t a1)
{
  uint64_t v2;

  sub_1CF372518();
  sub_1CF372524();
  v2 = sub_1CF37253C();
  return sub_1CF2A33DC(a1, v2);
}

unint64_t sub_1CF2A32FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1CF3724AC() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1CF3724AC() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1CF2A33DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1CF2A3478(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;

  v3 = v2;
  v5 = *v2;
  sub_1CF263D78(qword_1ED2BBE70);
  result = sub_1CF372464();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v30 = a2;
    v8 = 0;
    v31 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v12)
          goto LABEL_31;
        v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_31;
          v18 = v31[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_40;
                if (v8 >= v12)
                  goto LABEL_31;
                v18 = v31[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
      v21 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v16);
      sub_1CF372518();
      sub_1CF372524();
      result = sub_1CF37253C();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v20;
      *(_BYTE *)(*(_QWORD *)(v7 + 56) + v14) = v21;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1CF2A373C(char a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1CF2A32A4(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
  {
LABEL_9:
    v17 = a1 & 1;
    v18 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
      *(_BYTE *)(v18[7] + v10) = v17;
      return result;
    }
    v18[(v10 >> 6) + 8] |= 1 << v10;
    *(_QWORD *)(v18[6] + 8 * v10) = a2;
    *(_BYTE *)(v18[7] + v10) = v17;
    v19 = v18[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v18[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1CF2A3864();
    goto LABEL_9;
  }
  sub_1CF2A3478(result, a3 & 1);
  result = sub_1CF2A32A4(a2);
  if ((v14 & 1) == (v16 & 1))
  {
    v10 = result;
    goto LABEL_9;
  }
LABEL_15:
  type metadata accessor for APMetricPurposeType();
  result = sub_1CF3724D0();
  __break(1u);
  return result;
}

void *sub_1CF2A3864()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  sub_1CF263D78(qword_1ED2BBE70);
  v2 = *v0;
  v3 = sub_1CF372458();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_1CF2A39F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *i;
  uint64_t v5;
  char v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1CF263D78(qword_1ED2BBE70);
    v3 = (_QWORD *)sub_1CF372470();
    for (i = (_BYTE *)(a1 + 40); ; i += 16)
    {
      v5 = *((_QWORD *)i - 1);
      v6 = *i;
      result = sub_1CF2A32A4(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      *(_BYTE *)(v3[7] + result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

uint64_t type metadata accessor for CachingPurposeConfigurationStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for CachingPurposeConfigurationStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CachingPurposeConfigurationStore.__allocating_init(backingStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1CF2A3AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v6 = v5;
  v55 = a2;
  v56 = a4;
  v53 = a1;
  v54 = a3;
  v8 = sub_1CF263D78(&qword_1ED2BBDA8);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CF371FF0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1CF372038();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17, v19);
  v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CF37202C();
  v22 = sub_1CF372008();
  v50 = v23;
  v51 = v22;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  sub_1CF29C5E0((uint64_t)v5 + OBJC_IVAR____TtC12APFoundation16WorkOrderBuilder_created, (uint64_t)v11);
  v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  v52 = v16;
  if (v24 == 1)
  {
    sub_1CF371FE4();
    sub_1CF29C518((uint64_t)v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v11, v12);
  }
  v25 = v5[2];
  v48 = v5[3];
  v49 = v25;
  v47 = *((unsigned __int8 *)v5 + OBJC_IVAR____TtC12APFoundation16WorkOrderBuilder_state);
  v26 = *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC12APFoundation16WorkOrderBuilder_retryState + 8);
  v46 = *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC12APFoundation16WorkOrderBuilder_retryState);
  v27 = (uint64_t)v5 + OBJC_IVAR____TtC12APFoundation16WorkOrderBuilder_scheduledTime;
  swift_beginAccess();
  v28 = (int *)type metadata accessor for WorkOrder();
  sub_1CF29C5E0(v27, (uint64_t)&a5[v28[9]]);
  v29 = v5[4];
  v31 = *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC12APFoundation16WorkOrderBuilder_requestorId);
  v30 = *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC12APFoundation16WorkOrderBuilder_requestorId + 8);
  v32 = *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC12APFoundation16WorkOrderBuilder_requestorData);
  v33 = *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC12APFoundation16WorkOrderBuilder_requestorData + 8);
  v34 = v52;
  v35 = v50;
  *(_QWORD *)a5 = v51;
  *((_QWORD *)a5 + 1) = v35;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&a5[v28[5]], v34, v12);
  v36 = &a5[v28[6]];
  v37 = v48;
  *(_QWORD *)v36 = v49;
  *((_QWORD *)v36 + 1) = v37;
  a5[v28[7]] = v47;
  v38 = &a5[v28[8]];
  *(_QWORD *)v38 = v46;
  *((_QWORD *)v38 + 1) = v26;
  *(_QWORD *)&a5[v28[10]] = v29;
  v39 = &a5[v28[11]];
  v41 = v55;
  v40 = v56;
  *(_QWORD *)v39 = v53;
  *((_QWORD *)v39 + 1) = v41;
  v42 = &a5[v28[12]];
  *(_QWORD *)v42 = v54;
  *((_QWORD *)v42 + 1) = v40;
  v43 = &a5[v28[13]];
  *(_QWORD *)v43 = v31;
  *((_QWORD *)v43 + 1) = v30;
  v44 = &a5[v28[14]];
  *(_QWORD *)v44 = v32;
  *((_QWORD *)v44 + 1) = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CF2A3DC0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1CF29C518(v0 + OBJC_IVAR____TtC12APFoundation16WorkOrderBuilder_scheduledTime);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CF29C518(v0 + OBJC_IVAR____TtC12APFoundation16WorkOrderBuilder_created);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CF2A3E44()
{
  return type metadata accessor for WorkOrderBuilder();
}

uint64_t type metadata accessor for WorkOrderBuilder()
{
  uint64_t result;

  result = qword_1ED2BB470;
  if (!qword_1ED2BB470)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1CF2A3E88()
{
  unint64_t v0;

  sub_1CF2A23A4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

APFoundation::BundleID __swiftcall BundleID.init(bundle:)(NSBundle bundle)
{
  uint64_t *v1;
  uint64_t *v3;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  APFoundation::BundleID result;

  v3 = v1;
  v4 = -[objc_class bundleIdentifier](bundle.super.isa, sel_bundleIdentifier);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1CF37214C();
    v8 = v7;

  }
  else
  {

    v8 = 0xE700000000000000;
    v6 = 0x6E776F6E6B6E75;
  }
  *v3 = v6;
  v3[1] = v8;
  result.value._object = v10;
  result.value._countAndFlagsBits = v9;
  return result;
}

uint64_t dispatch thunk of WorkCreating.createAndSchedule(workerName:group:workData:scheduledTime:requestorId:requestorData:flags:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(a14 + 8))();
}

uint64_t dispatch thunk of WorkCreating.createAndRun(workerName:group:workData:requestorId:requestorData:flags:configClosure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return (*(uint64_t (**)(void))(a15 + 16))();
}

uint64_t dispatch thunk of WorkerProtocol.run(retryState:workDataProvider:workCompletion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8))();
}

uint64_t dispatch thunk of WorkerProtocol.init(workCreator:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

void sub_1CF2A3FF4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (228215629 * ((a1 - 67920375 - 2 * (a1 & 0xFBF39E09)) ^ 0xC34CEE5C));
  __asm { BR              X9 }
}

uint64_t sub_1CF2A40A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * (((((LODWORD(STACK[0x32C]) - 388) | 0x602) ^ 0x9D)
                                          * (a3 == *(_QWORD *)(a1 + 48))) ^ (LODWORD(STACK[0x32C]) + 381)))
                            - 8))();
}

uint64_t sub_1CF2A40E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  int v5;
  BOOL v6;
  int v7;

  LOBYTE(STACK[0x640]) = *v3;
  LOBYTE(STACK[0x641]) = v3[1];
  LOBYTE(STACK[0x642]) = v3[2];
  LOBYTE(STACK[0x643]) = v3[3];
  LOBYTE(STACK[0x644]) = v3[4];
  LOBYTE(STACK[0x645]) = v3[5];
  LOBYTE(STACK[0x646]) = v3[6];
  LOBYTE(STACK[0x647]) = v3[7];
  LOBYTE(STACK[0x648]) = v3[8];
  LOBYTE(STACK[0x649]) = v3[9];
  LOBYTE(STACK[0x64A]) = v3[10];
  LOBYTE(STACK[0x64B]) = v3[11];
  LOBYTE(STACK[0x64C]) = v3[12];
  LOBYTE(STACK[0x64D]) = v3[13];
  LOBYTE(STACK[0x64E]) = v3[14];
  LOBYTE(STACK[0x64F]) = v3[15];
  STACK[0x430] = *(_QWORD *)v3;
  STACK[0x438] = *((_QWORD *)v3 + 1);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  v7 = !v6;
  return (*(uint64_t (**)(void))(a3 + 8 * ((377 * v7) ^ v5 ^ 0x503)))();
}

uint64_t sub_1CF2A41C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  BOOL v6;
  int v7;

  if (v5)
    v6 = v3 == 0;
  else
    v6 = 1;
  v7 = !v6;
  return (*(uint64_t (**)(void))(a3 + 8 * ((377 * v7) ^ v4)))();
}

uint64_t sub_1CF2A420C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  _BOOL4 v8;

  v6 = ((2 * (1852281983 * (v4 + v3) + 747989792)) & 0xF7E656BE) + ((1852281983 * (v4 + v3) + 747989792) ^ 0x7BF32B5F);
  v8 = (((v5 - 11) ^ 0x18B) & (v6 + 1)) != 0 || v6 == 2079533919;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((1099 * (((v5 ^ 0x78D ^ v8) & 1) == 0)) ^ v5)) - 8))();
}

uint64_t sub_1CF2A428C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  BOOL v4;
  char v5;

  if (v2)
    v4 = a2 == 0x5A513810B009C351;
  else
    v4 = 1;
  v5 = v4;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((((v5 ^ (v3 - 1)) & 1) * (97 * (v3 ^ 0x606) - 325)) ^ v3)))();
}

#error "1CF2A5140: call analysis failed (funcsize=806)"

uint64_t sub_1CF2A5144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,unsigned int a40)
{
  int v40;
  _BOOL4 v41;
  unsigned int v42;
  int v43;
  _BOOL4 v44;

  v41 = a40 < 0x8CD86751;
  v42 = LODWORD(STACK[0x330]) + 668392063;
  v43 = v41 ^ (v42 < 0x8CD86751);
  v44 = v42 < a40;
  if (!v43)
    v41 = v44;
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * (v40 ^ (1415 * !v41))) - (((v40 - 315) | 0x601u) ^ 0x62BLL)))();
}

void sub_1CF2A51C4()
{
  int v0;
  int v1;

  LODWORD(STACK[0x428]) = 0;
  LODWORD(STACK[0x330]) = v1 + v0 - 1019;
  JUMPOUT(0x1CF2A47F4);
}

uint64_t sub_1CF2A5228@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, int a4@<W5>, uint64_t a5@<X6>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v31;
  int v32;
  int v33;
  int v34;
  unsigned __int8 v35;
  unsigned __int8 v36;
  uint64_t v37;
  unsigned __int8 v38;
  unsigned __int8 v39;
  int v40;
  char v41;
  int v42;
  int v43;
  int v44;
  int v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  int v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t (*v106)(unint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v107;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;

  v46 = ((a3 ^ 0xEBu) + 0x48360B022C71880ALL - ((2 * (a3 ^ 0xFFFFFFEB)) & 0x14)) ^ (((a4 ^ 0x63u) + 0xD432CC41177EBBLL - ((2 * (a4 ^ 0x63u)) & 0x176)) << 8) ^ (((unint64_t)((v31 ^ 0xEB) - 1746743883 - ((2 * (v31 ^ 0xFFFFFFEB)) & 0x16A)) << 32) ^ 0x97E2CDB500000000 | ((unint64_t)((v43 ^ 0xEB) - ((2 * (v43 ^ 0xFFFFFFEB)) & 0x14C) + 48550) << 48) ^ 0xBDA6000000000000 | (((a6 ^ 0x63u) + 0x41B6B9039FLL - ((2 * (a6 ^ 0x63u)) & 0x13ELL)) << 24) ^ 0x41B6B9039F000000 | (((unint64_t)((v34 ^ 0x63) + 6042046 - ((2 * (v34 ^ 0x63)) & 0x17Cu)) << 40) ^ 0x5C31BE0000000000 | ((unint64_t)((a2 ^ 0x63) - (((unint64_t)(a2 ^ 0x63u) << (v41 - 92)) & 0x32) + 153) << 56)) ^ 0x9900000000000000 | (((v45 ^ 0xEBu) + 0xFEF419B14488 - ((2 * (v45 ^ 0xFFFFFFEB)) & 0x110)) << 16) ^ 0xFEF419B144880000);
  v47 = ((((unint64_t)((a1 ^ 0x53) + 4280512 - ((2 * (a1 ^ 0x53)) & 0x180u)) << 40) ^ 0x4150C00000000000 | ((a5 << 48) | ((unint64_t)((v33 ^ 0x63) - ((2 * (v33 ^ 0x63)) & 0xB6u) + 219) << 56)) ^ 0xDB00000000000000 | ((unint64_t)((v42 ^ 0xDB) + 1067942422 - ((2 * (v42 ^ 0xFFFFFFDB)) & 0x2C)) << 32) ^ 0x3FA7821600000000 | (((v40 ^ 0x53u) + 0x1D81673CDALL - ((2 * (v40 ^ 0x53u)) & 0x1B4)) << 24) ^ 0x1D81673CDA000000 | (((v32 ^ 0xDBu) + 0x85BC71874ECFLL + (~(2 * (v32 ^ 0xFFFFFFDB)) | 0xFFFFFFFFFE63)) << 16) ^ 0x85BC71874ECE0000)
       + ((unint64_t)(v35 ^ 0x53u) << 8)) ^ ((v44 ^ 0xDBu)
                                                  - 0x663BF13E3CABA565
                                                  - ((2 * (v44 ^ 0xFFFFFFDB)) & 0x136));
  v48 = v46 ^ a27;
  v49 = v46 ^ a25;
  v50 = v47 ^ a26;
  v51 = v47 ^ a24;
  v52 = (STACK[0x3D0] << 48) | (v37 << 56) | ((unint64_t)LODWORD(STACK[0x3C0]) << 40) | ((unint64_t)LODWORD(STACK[0x3B0]) << 32) | ((unint64_t)STACK[0x3D8] << 16) | ((unint64_t)STACK[0x3C8] << 8) | STACK[0x3B8] | ((unint64_t)STACK[0x3E0] << 24);
  v53 = v39 | ((unint64_t)STACK[0x388] << 8) | (STACK[0x3A8] << 56) | ((unint64_t)LODWORD(STACK[0x390]) << 48) | ((unint64_t)v36 << 40) | ((unint64_t)v38 << 32) | ((unint64_t)STACK[0x3A0] << 24) | ((unint64_t)STACK[0x398] << 16);
  v54 = ((unint64_t)(STACK[0x2A8] ^ 0x54u) << 48) | ((unint64_t)(STACK[0x2A0] ^ 0x7F) << 56) | ((unint64_t)(STACK[0x2C8] ^ 0xD5u) << 32) | ((unint64_t)(STACK[0x280] ^ 0x92u) << 40) | ((unint64_t)(STACK[0x298] ^ 0x1Fu) << 24) | ((unint64_t)(STACK[0x238] ^ 0xA9u) << 16) | ((unint64_t)(STACK[0x290] ^ 0x4Au) << 8);
  v55 = STACK[0x348] ^ STACK[0x278] ^ 0xDu;
  v112 = v48 ^ 0x9C04C7433B0F330ALL;
  STACK[0x2F0] ^= 0x17 ^ v52;
  v56 = v55 ^ v54;
  LOBYTE(v55) = STACK[0x270] ^ 0x37;
  STACK[0x2D8] = v56 ^ v52;
  v110 = v49 ^ 0x9C04C7433B0F330ALL;
  v111 = v50 ^ 0x99C40EC1C3545A9BLL;
  v57 = STACK[0x2F8] ^ 0xEB ^ v53;
  STACK[0x2D0] = STACK[0x350] ^ (((STACK[0x260] ^ 0xEFu) << 8) | ((unint64_t)v55 << 16)) ^ (((unint64_t)(STACK[0x2B8] ^ 0x45u) << 48) | ((unint64_t)(STACK[0x2B0] ^ 0x3F) << 56) | ((unint64_t)(LODWORD(STACK[0x244]) ^ 0x46u) << 40) | ((unint64_t)(STACK[0x288] ^ 0x45u) << 32) | ((unint64_t)(STACK[0x268] ^ 0x82u) << 24) | STACK[0x258] ^ 0xCEu) ^ 0xEB ^ v53;
  v109 = v51 ^ 0x99C40EC1C3545A9BLL;
  STACK[0x2E8] = v51 ^ 0xF7D1248CB4E9B707;
  STACK[0x2E0] = v48 ^ 0xB124D0773705AC48;
  STACK[0x310] = v49 ^ 0xD6B048F27BBBD430;
  STACK[0x308] = v50 ^ 0x8FB86727093DDE1ALL;
  v58 = STACK[0x330];
  LODWORD(STACK[0x304]) = 0;
  v59 = STACK[0x2F0];
  STACK[0x2F8] = v57;
  LODWORD(STACK[0x330]) = v58;
  LODWORD(STACK[0x340]) = 0;
  STACK[0x320] = v59;
  STACK[0x348] = 0xDC0C1185A29A2766;
  STACK[0x350] = 0xDC0C1185A29A2766;
  v60 = STACK[0x2E8];
  v61 = STACK[0x2E0];
  STACK[0x318] = v57;
  LODWORD(STACK[0x418]) = 0;
  v62 = HIDWORD(v61) ^ 0xDC0C11857E9636E3;
  v63 = HIDWORD(v59) ^ 0xDC0C11857E9636E3;
  v64 = ((v61 ^ v60) >> 32) - 0x23F3EE7A5D65D89ALL - ((2 * ((v61 ^ v60) >> 32)) & 0x145344ECCLL);
  v65 = ((v57 ^ v59) >> 32) - 0x23F3EE7A5D65D89ALL - ((2 * ((v57 ^ v59) >> 32)) & 0x145344ECCLL);
  STACK[0x3C8] = v60;
  STACK[0x3A0] = v60 ^ 0xDC0C1185 ^ HIDWORD(v60);
  STACK[0x3B8] = v57;
  STACK[0x398] = v57 ^ 0xDC0C1185 ^ HIDWORD(v57);
  STACK[0x390] = v57 ^ v59 ^ 0xDC0C1185A29A2766;
  STACK[0x388] = v61 ^ v60 ^ 0xDC0C1185A29A2766;
  STACK[0x3D0] = v59;
  STACK[0x380] = v59 ^ 0xDC0C1185 ^ HIDWORD(v59);
  STACK[0x3C0] = v61;
  STACK[0x378] = v61 ^ 0xDC0C1185A29A2766 ^ v62;
  STACK[0x3B0] = v64;
  STACK[0x370] = v61 ^ v60 ^ v64;
  STACK[0x3A8] = v65;
  STACK[0x368] = v57 ^ v59 ^ v65;
  STACK[0x360] = HIDWORD(v57) ^ 0xDC0C11857E9636E3;
  STACK[0x358] = HIDWORD(v60) ^ 0xDC0C11857E9636E3;
  STACK[0x3D8] = 0x4CA2C987C7B56AE3;
  STACK[0x420] = 0xD95DC07419F87CB0;
  STACK[0x428] = 0x78490F4CC1A64621;
  STACK[0x3E0] = 0xCF309439E91A7173;
  while (1)
  {
    v67 = (((2 * (v63 ^ 0x15A7B01FLL)) & 0x169D04730)
         - (v63 ^ 0x15A7B01FLL)
         - 0x682F4804B4E82399) ^ 0x94F607FBC93A5C5ELL;
    v68 = (((2 * v67) & 0x4015AC68ED50) - v67 - 0x64C02EFAD63476A9) ^ 0x981961051CDB9E17;
    STACK[0x410] = v68 >> (~(32 * v62) & 0x20);
    STACK[0x408] = v68 >> ((16 * v62) & 0x20);
    STACK[0x400] = v68 >> ((8 * v62) & 0x20);
    STACK[0x3F8] = v68 >> (~(4 * v62) & 0x20);
    STACK[0x3F0] = v68 >> (~(2 * v62) & 0x20);
    STACK[0x3E8] = v68 >> (v62 & 0x20);
    v69 = v68 >> ((v62 >> 3) & 0x20);
    v70 = v68 >> ((v62 >> 4) & 0x20);
    v71 = v68 >> (BYTE1(v62) & 0x20);
    v72 = v68 >> (~(v62 >> 11) & 0x20);
    v73 = v68 >> (~(v62 >> 13) & 0x20);
    v74 = v68 >> ((v62 >> 18) & 0x20);
    v75 = v68 >> ((v62 >> 20) & 0x20);
    v76 = v68 >> (~(v62 >> 22) & 0x20);
    v77 = v68 >> (~(v62 >> 23) & 0x20);
    v78 = v68 >> (BYTE3(v62) & 0x20);
    v79 = v68 >> (~(v62 >> 25) & 0x20);
    v80 = (v68 >> ((v62 >> 26) & 0x20)) - ((2 * (v68 >> ((v62 >> 26) & 0x20))) & 0x3E4F3483FBF48364);
    v81 = (4 * STACK[0x408]) ^ (2 * STACK[0x410]) ^ (8 * STACK[0x400]) ^ (16 * STACK[0x3F8]) ^ (32 * STACK[0x3F0]) ^ (STACK[0x3E8] << 6) ^ (v68 >> ((v62 >> 1) & 0x20) << 7) ^ (v68 >> (~(v62 >> 2) & 0x20) << 8) ^ (v69 << 9) ^ (v70 << 10) ^ (v68 >> ((v62 >> 5) & 0x20) << 11) ^ (v68 >> (~(v62 >> 6) & 0x20) << 12) ^ (v68 >> (~(v62 >> 7) & 0x20) << 13) ^ (v71 << 14) ^ (v68 >> (~(v62 >> 9) & 0x20) << 15) ^ (v68 >> (~(v62 >> 10) & 0x20) << 16) ^ (v72 << 17) ^ (v68 >> ((v62 >> 12) & 0x20) << 18) ^ (v73 << 19) ^ (v68 >> ((v62 >> 14) & 0x20) << 20) ^ (v68 >> ((v62 >> 15) & 0x20) << 21) ^ (v68 >> (~BYTE2(v62) & 0x20) << 22) ^ (v68 >> (~(v62 >> 17) & 0x20) << 23) ^ (v74 << 24) ^ (v68 >> (~(v62 >> 19) & 0x20) << 25) ^ (v75 << 26) ^ (v68 >> (~(v62 >> 21) & 0x20) << 27);
    v82 = v80 + 0x1F279A41FDFA41B2;
    v83 = v81 ^ (v76 << 28);
    v84 = (v77 << 29) ^ (v78 << 30) ^ v83;
    v85 = v84 ^ (v79 << 31);
    v86 = v85 ^ (v82 << 32);
    v87 = v86 ^ 0xB24B06BBDF01821ALL;
    switch(LODWORD(STACK[0x418]))
    {
      case 0:
        v88 = 0x8CAF150C6B1C9789 - ((v81 << 33) & 0x195E2A1800000000) + (v85 << 32);
        v89 = (v86 ^ STACK[0x428] ^ 0x85B34EFEC1A64621)
            - 0x7350EAF394E36877
            - 2 * ((v86 ^ STACK[0x428] ^ 0x85B34EFEC1A64621) & 0xCAF150C6B1C978BLL ^ (v86 ^ STACK[0x428]) & 2);
        STACK[0x3E0] ^= v86 ^ 0xFDFA41B2FDFA41B2 ^ HIDWORD(v86);
        STACK[0x428] = HIDWORD(v86) ^ v88 ^ 0x78490F4C3C5C0793 ^ v89;
        STACK[0x420] ^= 0x8CAF150C6B1C9789 ^ v88;
        LODWORD(STACK[0x418]) = 1;
        v62 = STACK[0x3C0];
        v63 = STACK[0x3D0];
        break;
      case 1:
        STACK[0x3E0] ^= 0xFDFA41B2 ^ HIDWORD(v86);
        v95 = (v85 << 32) - ((v84 << 33) & 0x9F7F925600000000) - 0x304036D4C531D420;
        STACK[0x420] ^= v86 ^ v95 ^ 0x324588993ACE2BE0;
        v96 = ((HIDWORD(v86) ^ 0xFDFA41B2)
             + 0x4FB14709DF01821ALL
             - 2 * ((HIDWORD(v86) ^ 0xFDFA41B2) & 0xDF01821B ^ HIDWORD(v86) & 1)) ^ v87;
        STACK[0x428] ^= v95 ^ 0xB7F6C667FB686DC1 ^ (v96 + 0x78490F4CC1A64621 - ((2 * v96) & 0xF0921E99834C8C42));
        LODWORD(STACK[0x418]) = 2;
        v62 = STACK[0x358];
        v63 = STACK[0x360];
        break;
      case 2:
        v90 = (v85 << 32) + 0x46FF87A3BAE488BBLL - ((v84 << 33) & 0x8DFF0F4600000000);
        v91 = v86 ^ STACK[0x420];
        STACK[0x428] ^= v86 ^ 0xFDFA41B2FDFA41B2 ^ HIDWORD(v86);
        STACK[0x420] = HIDWORD(v86) ^ v90 ^ 0xD95DC074E4023D02 ^ ((v91 ^ 0x24A781C619F87CB0)
                                                                  + 0x46FF87A3BAE488BBLL
                                                                  - 2
                                                                  * ((v91 ^ 0x24A781C619F87CB0) & 0x46FF87A3BAE488BFLL ^ v91 & 4));
        STACK[0x3D8] ^= 0x46FF87A3BAE488BBLL ^ v90;
        LODWORD(STACK[0x418]) = 3;
        v62 = STACK[0x3C8];
        v63 = STACK[0x3B8];
        break;
      case 3:
        v92 = 0x140E2EE2BD5CDED6 - ((v83 << 33) & 0x281C5DC400000000) + (v85 << 32);
        STACK[0x428] ^= 0xFDFA41B2 ^ HIDWORD(v86);
        v93 = ((HIDWORD(v86) ^ 0xFDFA41B2) - 0x26A23F8BE6078350 - ((2 * (HIDWORD(v86) ^ 0xFDFA41B2)) & 0x33F0F960)) ^ STACK[0x420];
        STACK[0x420] = v86 ^ 0x24A781C619F87CB0 ^ v92 ^ (v93
                                                         + 0x140E2EE2BD5CDED6
                                                         - ((2 * v93) & 0x281C5DC57AB9BDACLL));
        STACK[0x3D8] ^= v86 ^ v92 ^ 0xE9F46F50BD5CDED6;
        LODWORD(STACK[0x418]) = 4;
        v62 = STACK[0x378];
        v63 = STACK[0x380];
        break;
      case 4:
        STACK[0x3E0] ^= 0xFDFA41B2 ^ HIDWORD(v86);
        v66 = (v85 << 32) - 0x2B510ADC31A2B597 - ((v84 << 33) & 0xA95DEA4600000000);
        STACK[0x428] ^= HIDWORD(v86) ^ v66 ^ 0xD4AEF52333A70BDBLL;
        STACK[0x420] ^= 0xD4AEF523CE5D4A69 ^ v66;
        LODWORD(STACK[0x418]) = 5;
        v62 = STACK[0x3B0];
        v63 = STACK[0x3A8];
        break;
      case 5:
        STACK[0x428] ^= v87 ^ ((HIDWORD(v86) ^ 0xFDFA41B2)
                             + 0x4FB14709DF01821ALL
                             - ((2 * (HIDWORD(v86) ^ 0xFDFA41B2)) & 0x1BE030434));
        STACK[0x420] ^= v85 << 32;
        LODWORD(STACK[0x418]) = 6;
        v62 = STACK[0x388];
        v63 = STACK[0x390];
        break;
      case 6:
        STACK[0x428] ^= 0xFDFA41B2 ^ HIDWORD(v86);
        STACK[0x420] ^= 0x8BBF5A7F46257256 ^ v85 ^ ((((unint64_t)(v85 ^ v82) << 32) ^ 0xFDFA41B200000000)
                                                    - 0x7440A580B9DA8DAALL
                                                    - ((2
                                                      * (((unint64_t)(v85 ^ v82) << 32) ^ 0xFDFA41B200000000)) & 0x177EB4FE00000000));
        LODWORD(STACK[0x418]) = 7;
        v62 = STACK[0x3A0];
        v63 = STACK[0x398];
        break;
      case 7:
        STACK[0x428] ^= 0xFDFA41B2 ^ HIDWORD(v86);
        v94 = 0xEC92FCD20085D42 - ((v81 << 33) & 0x1D925F9A00000000) + (v85 << 32);
        STACK[0x420] ^= v94 ^ HIDWORD(v86) ^ 0xEC92FCDDDF21CF0;
        STACK[0x3D8] ^= 0xEC92FCD20085D42 ^ v94;
        LODWORD(STACK[0x418]) = 8;
        v62 = STACK[0x370];
        v63 = STACK[0x368];
        break;
      default:
        v97 = STACK[0x420] ^ (v85 << 32);
        v98 = (STACK[0x420] << 57) ^ (STACK[0x420] << 62) ^ (STACK[0x3D8] >> 2) ^ (STACK[0x3D8] >> 7) ^ 0x55E09331E042C4AELL ^ ((STACK[0x3D8] >> (LODWORD(STACK[0x32C]) ^ 0x85u)) ^ HIDWORD(v86) | (STACK[0x420] << 63));
        v99 = STACK[0x428] ^ STACK[0x3D8] ^ (v98 + 0x78490F4CC1A64621 - ((2 * v98) & 0xF0921E99834C8C42));
        v100 = (~STACK[0x3D8] << 62) ^ (~STACK[0x3D8] << 63) ^ (STACK[0x3D8] << 57);
        v101 = (v100 >> 2) ^ (v100 >> 1) ^ (v100 >> 7) ^ (v97 >> 2) ^ (v97 >> 1) ^ (v97 >> 7) ^ 0x8472BA7E2B1D18DLL;
        v102 = STACK[0x350] ^ v99 & 0x90630B72258D01EELL ^ 0xDC2E1887A71F2784 ^ ((v99 & 0x6F9CF48DDA72FE11 ^ 0x4C80C085C2306A01)
                                                                                 - 0x23F3EE7A5D65D89ALL
                                                                                 - ((2
                                                                                   * (v99 & 0x6F9CF48DDA72FE11 ^ 0x4C80C085C2306A01)) & 0x9818210B04244C00));
        v103 = (v101 - 0x23F3EE7A5D65D89ALL - ((2 * v101) & 0xB818230B45344ECCLL)) ^ STACK[0x348];
        v104 = v97 ^ 0x9743A47AF47701DDLL ^ (v103 - ((2 * v103) & 0x9C3CC81DDB1EFADALL) + 0x4E1E640EED8F7D6DLL);
        v105 = v100 ^ STACK[0x3E0] ^ 0x1A0C1185A29A2766 ^ (v104
                                                           - 0x30CF6BC616E58E8DLL
                                                           - ((2 * v104) & 0x9E612873D234E2E6));
        v106 = (uint64_t (*)(unint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x338] + 8 * ((LODWORD(STACK[0x32C]) + 593) ^ (47 * (STACK[0x340] & 1)))) - 4);
        v107 = LODWORD(STACK[0x330]);
        STACK[0x350] = v102;
        STACK[0x348] = v105;
        return v106(v73, v107, v72, v71, v74, v75, v70, v69, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
                 a18,
                 a19,
                 a20,
                 a21,
                 a22,
                 a23,
                 v109,
                 v110,
                 v111,
                 v112,
                 a28,
                 a29,
                 a30,
                 a31);
    }
  }
}

void sub_1CF2A63B4()
{
  LODWORD(STACK[0x340]) = 1;
  JUMPOUT(0x1CF2A57C8);
}

uint64_t sub_1CF2A63D0()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ (127 * (STACK[0x304] & 1))))
                            - (((v0 ^ 0xBAu) + 647) ^ 0x403)))();
}

void sub_1CF2A6404()
{
  unint64_t v0;
  unint64_t v1;

  LODWORD(STACK[0x304]) = 1;
  STACK[0x2F0] = v1;
  STACK[0x2F8] = v0;
  JUMPOUT(0x1CF2A5794);
}

uint64_t sub_1CF2A6420@<X0>(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,unsigned int a25)
{
  uint64_t v25;
  _BOOL4 v26;
  unsigned int v27;
  int v28;
  _BOOL4 v29;

  v26 = a25 < 0x2E84B3EF;
  v27 = ((a2 + 521749447) & 0xE0E6BF2D ^ 0xC983201D) + a1;
  v28 = v26 ^ (v27 < 0x2E84B3EF);
  v29 = v27 < a25;
  if (!v28)
    v26 = v29;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v25 + 8 * ((!v26 * (((a2 - 859) | 0x401) ^ 0x543)) ^ a2)) - 8))((a1 + 16));
}

uint64_t sub_1CF2A64D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39)
{
  int v39;
  uint64_t v40;

  return ((uint64_t (*)(void))(*(_QWORD *)(v40 + 8 * (v39 ^ (15 * (a39 != 105))))
                            - ((7 * (v39 ^ 0x77F) - 819551676) & 0x30D95EF3)
                            + 1193))();
}

void sub_1CF2A6520(int a1@<W1>, int a2@<W8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  STACK[0x2D0] = v2 ^ v3 ^ (v4
                          + 8 * (a1 - 1694600402)
                          - ((16 * (a1 - 1694600402)) & 0xB45344EC0)
                          + (a2 - 571)
                          - 318);
  STACK[0x2D8] = v3;
  JUMPOUT(0x1CF2A5784);
}

uint64_t sub_1CF2A657C@<X0>(unsigned __int8 a1@<W0>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W8>, uint64_t a7, unsigned __int8 *a8, unsigned __int8 *a9, unsigned __int8 *a10, unsigned __int8 *a11, unsigned __int8 *a12, unsigned __int8 *a13, unsigned __int8 *a14, unsigned __int8 *a15, _BYTE *a16, unsigned __int8 *a17, unsigned __int8 *a18, unsigned __int8 *a19, unsigned __int8 *a20,unsigned __int8 *a21,_BYTE *a22,unsigned __int8 *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  unsigned __int8 v33;
  int v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  __int128 v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unsigned int v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  int v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  int v147;
  uint64_t v148;
  int v149;
  int v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  int v154;
  int v155;
  int v156;
  int v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  char *v170;
  unint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;

  v41 = v28 ^ 0xFFFFFFEB;
  v42 = (2 * v41) & 0x16A;
  v43 = v41 - 1746743883;
  v44 = (v29 - 2020146962) & 0x7868FFB7;
  LODWORD(STACK[0x330]) = v34;
  v45 = (((unint64_t)((v32 ^ 0x63) + 6042046 - ((2 * (v32 ^ 0x63)) & 0x17Cu)) << 40) ^ 0x5C31BE0000000000 | ((unint64_t)((v38 ^ 0xEB) - ((2 * (v38 ^ 0xFFFFFFEB)) & 0x14C) + 48550) << 48) ^ 0xBDA6000000000000 | ((unint64_t)(v43 - v42) << 32) ^ 0x97E2CDB500000000 | (((a6 ^ 0x63u) + 0x41B6B9039FLL - ((2 * (a6 ^ 0x63u)) & 0x13ELL)) << 24) ^ 0x41B6B9039F000000 | ((unint64_t)((a3 ^ 0x63) - (((unint64_t)(a3 ^ 0x63u) << (((v29 - 18) & 0xB7u) + 80)) & 0x32) + 153) << 56) ^ 0x9900000000000000 | (((v40 ^ 0xEBu) + 0xFEF419B14488 - ((2 * (v40 ^ 0xFFFFFFEB)) & 0x110)) << 16) ^ 0xFEF419B144880000) ^ (((a5 ^ 0x63u) + 0xD432CC41177EBBLL - ((2 * (a5 ^ 0x63u)) & 0x176)) << 8);
  v46 = (a4 ^ 0xEBu) + 0x48360B022C71880ALL - ((2 * (a4 ^ 0xFFFFFFEB)) & 0x14);
  v47 = v35 - (LODWORD(STACK[0x330]) - 1694600402);
  v48 = v46 ^ v45 ^ 0x63FB38BCC4F0CCF5;
  v46 ^= 0x48360B022C71880AuLL;
  v49 = (v46 + v48 + 1) ^ ((v45 ^ 0x2BCD33BEE88144FFLL) + 1);
  v50 = (v45 ^ 0x9137EF444B2FEFEALL ^ (v49 - ((2 * v49) & 0x8A0A460AB8A2A9D4) + 0x450523055C5154EALL))
      + v46
      - ((2 * ((v45 ^ 0x9137EF444B2FEFEALL ^ (v49 - ((2 * v49) & 0x8A0A460AB8A2A9D4) + 0x450523055C5154EALL)) + v46)) & 0x839CE379F752472ALL)
      - 0x3E318E430456DC6BLL;
  v173 = v50 ^ 0x5776EF881987E3C9;
  v51 = ((v39 ^ 0xDBu) - 0x663BF13E3CABA565 - ((2 * (v39 ^ 0xFFFFFFDB)) & 0x136)) ^ ((unint64_t)(v33 ^ 0x53u) << 8) ^ (((unint64_t)((a2 ^ 0x53) + 4280512 - ((2 * (a2 ^ 0x53)) & 0x180u)) << 40) ^ 0x4150C00000000000 | ((unint64_t)a1 << 48) | ((unint64_t)((v31 ^ 0x63) - ((2 * (v31 ^ 0x63)) & 0xB6u) + 219) << 56) | ((unint64_t)((v37 ^ 0xDB) + 1067942422 - ((2 * (v37 ^ 0xFFFFFFDB)) & 0x2C)) << 32) ^ 0x3FA7821600000000 | (((v36 ^ 0x53u) + 0x1D81673CDALL - ((2 * (v36 ^ 0x53u)) & 0x1B4)) << 24) ^ 0x1D81673CDA000000 | (((v30 ^ 0xDBu) + 0x85BC71874ECFLL + (~(2 * (v30 ^ 0xFFFFFFDB)) | 0xFFFFFFFFFE63)) << 16) ^ 0x85BC71874ECE0000);
  v174 = v51 ^ 0x88B476A2ABA7F97CLL;
  v175 = v50 ^ 0x58F56C42A7AD9B77;
  v172 = v51 ^ 0x9551459BA295D8F8;
  STACK[0x268] = *a12 - ((2 * *a12) & 4u) - 126;
  STACK[0x298] = *a22 - 2 * (*a22 & 0x1Fu) + 31;
  STACK[0x2A8] = *a21 - ((2 * *a21) & 0xFFA8u) + 84;
  STACK[0x2C8] = *a19 - ((2 * *a19) & 0xFFAAu) - 43;
  STACK[0x280] = *a20 - ((2 * *a20) & 0x24u) - 110;
  STACK[0x278] = *a15 - ((2 * *a15) & 0x34u) + 26;
  STACK[0x2A0] = 127 - *a23;
  STACK[0x288] = *a10 - ((2 * *a10) & 0xFF8Au) + 69;
  STACK[0x238] = *a18 - ((2 * *a18) & 0x52u) - 87;
  STACK[0x2B8] = *a14 + (~(2 * *a14) | 0x75u) + 70;
  STACK[0x290] = *a17 - ((2 * *a17) & 0xFF94u) + 74;
  STACK[0x270] = *a13 - ((2 * *a13) & 0x6Eu) + 55;
  LODWORD(STACK[0x244]) = *a11 - ((2 * *a11) & 0xFF8C) + 70;
  STACK[0x260] = *a9 + (~(2 * *a9) | 0x21u) - 16;
  STACK[0x2B0] = *a16 - 2 * (*a16 & 0x3Fu) + 63;
  STACK[0x258] = *a8 - ((2 * *a8) & 0xFF9Cu) - 50;
  LODWORD(a28) = 1694600418;
  v52 = STACK[0x338];
  STACK[0x428] = (v44 + 130);
  v53 = v47 - 0x16478E5001E5BA42 - ((2 * (v47 - 0x16478E5001E5BA42)) & 0x3DD58D21ABD737C8) - 0x6115396F2A14641CLL;
  v54 = ((v53 >> (v44 + 87)) | (v53 >> 3 << 59)) ^ 0xE09EEAC690D5EB9BLL;
  v55 = v54 - ((2 * v54 + 0x2E3C939B149931ACLL) & 0x39476A3CC713A43CLL);
  *((_QWORD *)&v56 + 1) = ((_DWORD)v55 - 304715020) ^ 0x80u;
  *(_QWORD *)&v56 = (v55 + 0x73C1FEEBEDD66AF4) ^ 0x2B2E924BCC374200;
  v57 = (v56 >> 8) + ((v55 + 0x73C1FEEBEDD66AF4) ^ 0x93DCDC279E538432);
  v58 = v57 + 0x753A7A1AAD455CE4 - ((2 * v57) & 0xEA74F4355A8AB9C8);
  *((_QWORD *)&v56 + 1) = (v55 + 0x73C1FEEBEDD66AF4) ^ 0x13DCDC279E538432;
  *(_QWORD *)&v56 = v55 - 0xC3E01141229950CLL;
  v59 = (v56 >> 61) + 0x753A7A1AAD455CE4 - ((2 * (v56 >> 61)) & 0xEA74F4355A8AB9C8);
  *((_QWORD *)&v56 + 1) = v58 ^ 0xD2;
  *(_QWORD *)&v56 = v58 ^ 0x9AC69BFFB46A0B00;
  v60 = (v56 >> 8) + (v58 ^ v59 ^ 0xEFFCE1E5192F5736);
  *((_QWORD *)&v56 + 1) = v58 ^ v59 ^ 0xFFCE1E5192F5736;
  *(_QWORD *)&v56 = v58 ^ ~v59;
  v61 = v60 ^ (v56 >> 61);
  *((_QWORD *)&v56 + 1) = v60 ^ 0xFFFFFFBF;
  *(_QWORD *)&v56 = v60 ^ 0xC8B778E8A8EE8A00;
  v62 = (v56 >> 8)
      + (v61 ^ 0xC8B778E8A8EE8ABFLL)
      + 0x504FD215748DB947
      - ((2 * ((v56 >> 8) + (v61 ^ 0xC8B778E8A8EE8ABFLL))) & 0xA09FA42AE91B728ELL);
  *((_QWORD *)&v56 + 1) = v61 ^ 0x8B778E8A8EE8ABFLL;
  *(_QWORD *)&v56 = v61 ^ 0xC000000000000000;
  v63 = (v56 >> 61) + 0x504FD215748DB947 - ((2 * (v56 >> 61)) & 0xA09FA42AE91B728ELL);
  *((_QWORD *)&v56 + 1) = v62 ^ 0x49;
  *(_QWORD *)&v56 = v62 ^ 0xC49ADC305AA9F200;
  v64 = v63 ^ v62;
  v65 = (v56 >> 8)
      + (v64 ^ 0x94D50E252E244B0ELL)
      + 0x31F569880DC5228FLL
      - ((2 * ((v56 >> 8) + (v64 ^ 0x94D50E252E244B0ELL))) & 0x63EAD3101B8A451ELL);
  *((_QWORD *)&v56 + 1) = v64 ^ 0x14D50E252E244B0ELL;
  *(_QWORD *)&v56 = v64 ^ 0x8000000000000000;
  v66 = ((v56 >> 61) + 0x31F569880DC5228FLL - ((2 * (v56 >> 61)) & 0x63EAD3101B8A451ELL)) ^ v65;
  *((_QWORD *)&v56 + 1) = v66 ^ 0x30E0DC7FFAFC35BLL;
  *(_QWORD *)&v56 = v66 ^ 0x2000000000000000;
  v67 = v56 >> 61;
  LOBYTE(v60) = 8 * ((v47 - 66) & 7);
  *((_QWORD *)&v56 + 1) = v65 ^ 0xD4;
  *(_QWORD *)&v56 = v65 ^ 0x12FB644FF26AE100;
  v68 = (v66 ^ 0x230E0DC7FFAFC35BLL)
      + (v56 >> 8)
      + 0x26B271576023B5CCLL
      - ((2 * ((v66 ^ 0x230E0DC7FFAFC35BLL) + (v56 >> 8))) & 0x4D64E2AEC0476B98);
  v69 = (v67 + 0x26B271576023B5CCLL - ((2 * v67) & 0x4D64E2AEC0476B98)) ^ v68;
  *((_QWORD *)&v56 + 1) = v68 ^ 0xFFFFFFE7;
  *(_QWORD *)&v56 = v68 ^ 0x6C51AB2C7363FF00;
  v70 = (v69 ^ 0x4AE3DA7B13404A2BLL)
      + (v56 >> 8)
      - 0x7BE5E55373E729A1
      - ((2 * ((v69 ^ 0x4AE3DA7B13404A2BLL) + (v56 >> 8))) & 0x83435591831ACBELL);
  *((_QWORD *)&v56 + 1) = v69 ^ 0xAE3DA7B13404A2BLL;
  *(_QWORD *)&v56 = v69 ^ 0x4000000000000000;
  v71 = (v56 >> 61) - 0x7BE5E55373E729A1 - ((2 * (v56 >> 61)) & 0x83435591831ACBELL);
  *((_QWORD *)&v56 + 1) = v70 ^ 0x7B;
  *(_QWORD *)&v56 = v70 ^ 0xEE32A75B4E340F00;
  v72 = (((unint64_t)(v56 >> 8) + (v71 ^ 0x6A28BDF7C22CD924 ^ v70)) ^ 0xB9201BDBE0E3CE89) >> v60;
  v73 = v47 - 0x755C0303427B5F21 - ((2 * (v47 - 0x16478E5001E5BA3ALL)) & 0x41D716997ED4B632);
  v74 = (v73 ^ 0xA0EB8B4CBF6A5B1ELL) + (v73 & 7 ^ 0xFFFFFFFFFFFFFFF9) + 1;
  *((_QWORD *)&v56 + 1) = v74 ^ 0x2652878F;
  *(_QWORD *)&v56 = v74 ^ 0x1A34208BC0000000;
  v75 = v56 >> 30;
  *((_QWORD *)&v56 + 1) = v75 ^ 0x68D0822F;
  *(_QWORD *)&v56 = v75 ^ 0x994A1E3C00000000;
  v76 = (v56 >> 34) - ((2 * (v56 >> 34)) & 0xE310CC3AC0F17204) - 0xE7799E29F8746FELL;
  *((_QWORD *)&v56 + 1) = __ROR8__(v76, 36) ^ 0x42A234BEFLL;
  *(_QWORD *)&v56 = (v76 << 28) ^ 0x9995EC7000000000;
  v77 = ((v56 >> 36) ^ 0x4053BCD8E4F9267ELL)
      - ((2 * ((v56 >> 36) ^ 0x4053BCD8E4F9267ELL) - 0x51C36C64EB66CE54) & 0xAAF11F8C4C322D86)
      - 0x5369266C4F9A5067;
  *((_QWORD *)&v56 + 1) = (((v56 >> 36) ^ 0xE4F9267E)
                         - ((2 * ((v56 >> 36) ^ 0xE4F9267E) + 345584044) & 0x4C322D86)
                         - 1335513191) ^ 0x5D;
  *(_QWORD *)&v56 = v77 ^ 0x62F5A89389A78600;
  v78 = (v56 >> 8)
      + (v77 ^ 0xDA07E6FFDBC340EFLL)
      - 0x55735E904EE88449
      - ((2 * ((v56 >> 8) + (v77 ^ 0xDA07E6FFDBC340EFLL))) & 0x551942DF622EF76ELL);
  *((_QWORD *)&v56 + 1) = v77 ^ 0x1A07E6FFDBC340EFLL;
  *(_QWORD *)&v56 = v77 ^ 0xC000000000000000;
  v79 = (v56 >> 61) - 0x55735E904EE88449 - ((2 * (v56 >> 61)) & 0x551942DF622EF76ELL);
  *((_QWORD *)&v56 + 1) = v78 ^ 0xFFFFFF81;
  *(_QWORD *)&v56 = v78 ^ 0x4570408AA8382C00;
  v80 = (v78 ^ v79 ^ 0xEFFCE1E5192F5736) + (v56 >> 8);
  v81 = v80 + 0x4B788AB75A895DC9 - ((2 * v80) & 0x96F1156EB512BB92);
  *((_QWORD *)&v56 + 1) = v78 ^ v79 ^ 0xFFCE1E5192F5736;
  *(_QWORD *)&v56 = v78 ^ ~v79;
  v82 = (v56 >> 61) + 0x4B788AB75A895DC9 - ((2 * (v56 >> 61)) & 0x96F1156EB512BB92);
  *((_QWORD *)&v56 + 1) = v81 ^ 0x76;
  *(_QWORD *)&v56 = v81 ^ 0x83CFF25FF267D700;
  v83 = v56 >> 8;
  v84 = v82 ^ v81;
  v85 = v84 ^ 0xC8B778E8A8EE8ABFLL;
  *((_QWORD *)&v56 + 1) = v84 ^ 0x8B778E8A8EE8ABFLL;
  *(_QWORD *)&v56 = v84 ^ 0xC000000000000000;
  v86 = v56 >> 61;
  v87 = v85 + v83;
  *((_QWORD *)&v56 + 1) = v87 ^ 0xE;
  *(_QWORD *)&v56 = v87 ^ 0x94D50E252E244B00;
  v88 = v87 ^ v86;
  v89 = (v88 ^ 0x94D50E252E244B0ELL) + (v56 >> 8);
  *((_QWORD *)&v56 + 1) = ((v88 ^ 0x2E244B0E) + ((uint64_t)v56 >> 8)) ^ 0x5B;
  *(_QWORD *)&v56 = v89 ^ 0x230E0DC7FFAFC300;
  v90 = v56 >> 8;
  *((_QWORD *)&v56 + 1) = v88 ^ 0x14D50E252E244B0ELL;
  *(_QWORD *)&v56 = v88 ^ 0x8000000000000000;
  v91 = ((2 * v72) & 0xEF9FF6C7FD6FFB4ELL) + (v72 ^ 0x77CFFB63FEB7FDA7);
  v92 = v89 ^ (v56 >> 61);
  v93 = v90
      + (v92 ^ 0x230E0DC7FFAFC35BLL)
      + 0x19ED6F61242B1385
      - ((2 * (v90 + (v92 ^ 0x230E0DC7FFAFC35BLL))) & 0x33DADEC24856270ALL);
  *((_QWORD *)&v56 + 1) = v92 ^ 0x30E0DC7FFAFC35BLL;
  *(_QWORD *)&v56 = v92 ^ 0x2000000000000000;
  v94 = (v56 >> 61) + 0x19ED6F61242B1385 - ((2 * (v56 >> 61)) & 0x33DADEC24856270ALL);
  *((_QWORD *)&v56 + 1) = v93 ^ 0xAE;
  *(_QWORD *)&v56 = v93 ^ 0x530EB51A376B5900;
  v95 = v94 ^ v93;
  v96 = (v95 ^ 0x4AE3DA7B13404A2BLL) + (v56 >> 8);
  *((_QWORD *)&v56 + 1) = ((v95 ^ 0x13404A2B) + ((uint64_t)v56 >> 8)) ^ 0x24;
  *(_QWORD *)&v56 = v96 ^ 0x6A28BDF7C22CD900;
  v97 = v56 >> 8;
  *((_QWORD *)&v56 + 1) = v95 ^ 0xAE3DA7B13404A2BLL;
  *(_QWORD *)&v56 = v95 ^ 0x4000000000000000;
  v98 = (v96 ^ 0xA666FD479D07625DLL ^ ((v56 >> 61) - ((2 * (v56 >> 61)) & 0x989C8160BE5776F2) - 0x33B1BF4FA0D44487))
      + v97;
  v99 = ((2 * ((v98 ^ 0xB9201BDBE0E3CE89) >> v60)) & 0xFFEAACFD7FEDFFF6)
      + (((v98 ^ 0xB9201BDBE0E3CE89) >> v60) ^ 0x7FF5567EBFF6FFFBLL);
  LOBYTE(v60) = v60 ^ 0x3F;
  v100 = v91 - 0x77CFFB63FEB7FDA7 + 2 * ((v98 ^ 0x39201BDBE0E3CE89) << v60);
  v101 = v100 & 0x2FAA43EF8D025EBDLL ^ (v91 - 0x77CFFB63FEB7FDA7) & 8;
  *(_QWORD *)&v56 = __ROR8__(v47- 0x16478E5001E5BA32- ((2 * (v47 - 0x16478E5001E5BA32)) & 0xA1FA7722F253A016)+ 0x50FD3B917929D00BLL, 8);
  v102 = (v56 & 0xF8FFFFFFFFFFFFFFLL ^ 0x850FD3B917929D0)
       - ((2 * (v56 & 0xF8FFFFFFFFFFFFFFLL ^ 0x850FD3B917929D0) - 0x51C36C64EB66CE54) & 0x9ED3B7C97FEF7B9ELL)
       + 0x268825B24A4456A5;
  *((_QWORD *)&v56 + 1) = ((v56 ^ 0x917929D0)
                         - ((2 * (v56 ^ 0x917929D0) + 345584044) & 0x7FEF7B9E)
                         + 1245992613) ^ 0x51;
  *(_QWORD *)&v56 = v102 ^ 0xF8E4FCB110492D00;
  v103 = v100 + 0x2FAA43EF8D025EB5;
  v104 = (v56 >> 8)
       + (v102 ^ 0x4016B2DD422DEBE3)
       - 0x5AE21A6AF5040B60
       - ((2 * ((v56 >> 8) + (v102 ^ 0x4016B2DD422DEBE3))) & 0x4A3BCB2A15F7E940);
  *((_QWORD *)&v56 + 1) = v102 ^ 0x16B2DD422DEBE3;
  *(_QWORD *)&v56 = v102 ^ 0x4000000000000000;
  v105 = (v56 >> 61) - 0x5AE21A6AF5040B60 - ((2 * (v56 >> 61)) & 0x4A3BCB2A15F7E940);
  *((_QWORD *)&v56 + 1) = v104 ^ 0x96;
  *(_QWORD *)&v56 = v104 ^ 0x4AE1047013D4A300;
  v106 = (v56 >> 8) + (v104 ^ v105 ^ 0xEFFCE1E5192F5736);
  v107 = v106 - 0x5EECA6A9AEF175B6 - ((2 * v106) & 0x4226B2ACA21D1494);
  *((_QWORD *)&v56 + 1) = v104 ^ v105 ^ 0xFFCE1E5192F5736;
  *(_QWORD *)&v56 = v104 ^ ~v105;
  v108 = ((v56 >> 61) - 0x5EECA6A9AEF175B6 - ((2 * (v56 >> 61)) & 0x4226B2ACA21D1494)) ^ v107;
  v109 = ((v107 >> 8) ^ 0x69A421BEF9E000)
       + (v108 ^ 0xC8B778E8A8EE8ABFLL)
       + ((v107 << 56) ^ 0xF500000000000000)
       - 0x4BD2DFB460BD4A6CLL
       - 2
       * ((((v107 >> 8) ^ 0x69A421BEF9E000) + (v108 ^ 0xC8B778E8A8EE8ABFLL) + ((v107 << 56) ^ 0xF500000000000000)) & 0x342D204B9F42B5B7 ^ (((v107 >> 8) ^ 0x69A421BEF9E000) + (v108 ^ 0xC8B778E8A8EE8ABFLL)) & 0x23);
  *((_QWORD *)&v56 + 1) = v108 ^ 0x8B778E8A8EE8ABFLL;
  *(_QWORD *)&v56 = v108 ^ 0xC000000000000000;
  v110 = v109 ^ ((v56 >> 61) - 0x4BD2DFB460BD4A6CLL - ((2 * (v56 >> 61)) & 0x685A40973E856B28));
  *((_QWORD *)&v56 + 1) = v109 ^ 0x9A;
  *(_QWORD *)&v56 = v109 ^ 0x20F82E6EB166FE00;
  v111 = (v110 ^ 0x94D50E252E244B0ELL)
       + (v56 >> 8)
       + 0x32D4B9FECD676B35
       - ((2 * ((v110 ^ 0x94D50E252E244B0ELL) + (v56 >> 8))) & 0x65A973FD9ACED66ALL);
  *((_QWORD *)&v56 + 1) = v110 ^ 0x14D50E252E244B0ELL;
  *(_QWORD *)&v56 = v110 ^ 0x8000000000000000;
  v112 = v56 >> 61;
  *((_QWORD *)&v56 + 1) = v111 ^ 0x6E;
  *(_QWORD *)&v56 = v111 ^ 0x11DAB43932C8A800;
  v113 = v56 >> 8;
  v114 = v103 - 2 * v101;
  v115 = (v112 + 0x32D4B9FECD676B35 - ((2 * v112) & 0x65A973FD9ACED66ALL)) ^ v111;
  *((_QWORD *)&v56 + 1) = v115 ^ 0x30E0DC7FFAFC35BLL;
  *(_QWORD *)&v56 = v115 ^ 0x2000000000000000;
  v116 = (v115 ^ 0x230E0DC7FFAFC35BLL)
       + v113
       + 0x3B0D73AB934E2783
       - ((2 * ((v115 ^ 0x230E0DC7FFAFC35BLL) + v113)) & 0x761AE757269C4F06);
  v117 = ((v56 >> 61) + 0x3B0D73AB934E2783 - ((2 * (v56 >> 61)) & 0x761AE757269C4F06)) ^ v116;
  *((_QWORD *)&v56 + 1) = v116 ^ 0xA8;
  *(_QWORD *)&v56 = v116 ^ 0x71EEA9D0800E6D00;
  v118 = (v56 >> 8) + (v117 ^ 0x4AE3DA7B13404A2BLL);
  *((_QWORD *)&v56 + 1) = v117 ^ 0xAE3DA7B13404A2BLL;
  *(_QWORD *)&v56 = v117 ^ 0x4000000000000000;
  v119 = v118 + 0x495E866AE1ECE53CLL - ((2 * v118) & 0x92BD0CD5C3D9CA78);
  v120 = (v56 >> 61) + 0x495E866AE1ECE53CLL - ((2 * (v56 >> 61)) & 0x92BD0CD5C3D9CA78);
  *((_QWORD *)&v56 + 1) = v119 ^ 0x18;
  *(_QWORD *)&v56 = v119 ^ 0x23763B9D23C03C00;
  v121 = (((unint64_t)(v56 >> 8) + (v120 ^ 0x6A28BDF7C22CD924 ^ v119)) ^ 0x39201BDBE0E3CE89) << v60;
  v122 = v99
       - 0x7FF5567EBFF6FFFBLL
       + 2 * v121
       + 0x5726BEEA43E6C97BLL
       - 2 * ((v99 - 0x7FF5567EBFF6FFFBLL + 2 * v121) & 0x5726BEEA43E6C97FLL ^ (v99 - 0x7FF5567EBFF6FFFBLL) & 4);
  STACK[0x2A8] = *(unsigned __int8 *)(v47 - 0x16478E5001E5BA41) ^ STACK[0x2A8];
  STACK[0x2A0] = *(unsigned __int8 *)(v47 - 0x16478E5001E5BA42) ^ STACK[0x2A0];
  v123 = *(unsigned __int8 *)(v47 - 0x16478E5001E5BA3DLL) ^ STACK[0x238];
  v124 = STACK[0x428];
  HIDWORD(v176) = v91 - ((2 * v91 - 78) & 0xFFFFFFA2) - 86;
  HIDWORD(v177) = ((v114 >> 16) ^ 2) - ((2 * (v114 >> 16)) & 0xFFFFFF98) - 52;
  v125 = *(unsigned __int8 *)(v47 - 0x16478E5001E5BA3ALL) ^ STACK[0x2B0];
  LODWORD(v178) = ((v122 >> 16) ^ 0xFFFFFFE6) - ((2 * ((v122 >> 16) ^ 0xFFFFFFE6)) & 0xFFFFFF96) + 75;
  HIDWORD(v178) = (HIWORD(v114) ^ 0xFFFFFFAA) - ((2 * (HIWORD(v114) ^ 0xFFFFFFAA)) & 0x5E) + 47;
  LODWORD(v177) = ((v122 >> 40) ^ 0xFFFFFFBE) - ((2 * ((v122 >> 40) ^ 0xFFFFFFBE)) & 0x2C) - 106;
  v126 = *(unsigned __int8 *)(v47 - 0x16478E5001E5BA40) ^ STACK[0x280];
  v127 = *(unsigned __int8 *)(v47 - 0x16478E5001E5BA39) ^ STACK[0x2B8];
  v128 = *(unsigned __int8 *)(v47 - 0x16478E5001E5BA3ELL) ^ STACK[0x298];
  v129 = *(unsigned __int8 *)(v47 - 0x16478E5001E5BA37) ^ STACK[0x288];
  v130 = *(unsigned __int8 *)(v47 - 0x16478E5001E5BA3BLL) ^ STACK[0x278];
  v131 = *(unsigned __int8 *)(v47 - 0x16478E5001E5BA38) ^ LODWORD(STACK[0x244]);
  v132 = *(unsigned __int8 *)(v47 - 0x16478E5001E5BA35) ^ STACK[0x270];
  v133 = *(unsigned __int8 *)(v47 - 0x16478E5001E5BA3CLL) ^ STACK[0x290];
  v134 = *(unsigned __int8 *)(v47 - 0x16478E5001E5BA36) ^ STACK[0x268];
  v135 = *(unsigned __int8 *)(v47 - 0x16478E5001E5BA3FLL) ^ STACK[0x2C8];
  LODWORD(v176) = (HIWORD(v122) ^ 0x26) - ((2 * HIWORD(v122)) & 0x1FFA0) + 80;
  v136 = *(unsigned __int8 *)(v47 - 0x16478E5001E5BA34) ^ STACK[0x260];
  v137 = *(unsigned __int8 *)(v47 - 0x16478E5001E5BA33) ^ STACK[0x258];
  v138 = STACK[0x2F8];
  LODWORD(STACK[0x428]) = 1;
  LODWORD(STACK[0x400]) = v124 ^ 0x7EF;
  v139 = STACK[0x2F0];
  LODWORD(STACK[0x304]) = (HIWORD(STACK[0x2F0]) ^ 0xC) - ((v124 ^ 0xFFFFF85D) & (2 * (HIWORD(STACK[0x2F0]) ^ 0xC))) - 73;
  LODWORD(STACK[0x2E8]) = (HIDWORD(v139) ^ 0xFFFFFF85) + (~(2 * (HIDWORD(v139) ^ 0xFFFFFF85)) | 0x71) + 72;
  LODWORD(STACK[0x2E0]) = ((v139 >> 40) ^ 0x11) - ((2 * (v139 >> 40)) & 0x1FFFFD0) - 24;
  LODWORD(STACK[0x2D8]) = ((v139 >> 16) ^ 0xFFFFFF9A) - 2 * (((v139 >> 16) ^ 0xFFFFFF9A) & 0x59 ^ (v139 >> 16) & 1) + 88;
  LODWORD(STACK[0x2D0]) = (HIBYTE(v139) ^ 0xFFFFFFDC) - ((2 * (HIBYTE(v139) ^ 0xFFFFFFDC)) & 0x74) + 58;
  LODWORD(STACK[0x244]) = ((v139 >> 24) ^ 0xFFFFFFA2) - ((2 * ((v139 >> 24) ^ 0xFFFFFFA2)) & 0xC) + 6;
  LODWORD(STACK[0x238]) = v139 ^ 0x4F;
  LODWORD(STACK[0x234]) = ((v139 >> 8) ^ 0x27) - ((2 * ((v139 >> 8) ^ 0x27)) & 0xFFFFFFA2) + 81;
  LODWORD(STACK[0x230]) = (HIBYTE(v138) ^ 0xFFFFFFDC) - 2 * ((HIBYTE(v138) ^ 0xFFFFFFDC) & 0x77 ^ HIBYTE(v138) & 2) - 11;
  LODWORD(STACK[0x22C]) = ((v138 >> 40) ^ 0x11) + (~(2 * ((v138 >> 40) ^ 0x11)) | 0xFFFFFFD1) - 104;
  LODWORD(STACK[0x228]) = (HIWORD(v138) ^ 0xC) - ((2 * (HIWORD(v138) ^ 0xC)) & 0x36) - 101;
  LODWORD(STACK[0x224]) = (HIDWORD(v138) ^ 0xFFFFFF85) - ((2 * (HIDWORD(v138) ^ 0xFFFFFF85)) & 0x72) + 57;
  LODWORD(STACK[0x220]) = ((v138 >> 16) ^ 0xFFFFFF9A) + ((v138 >> 16) >> 6 << 7) - 64;
  LODWORD(STACK[0x21C]) = ((v138 >> 24) ^ 0xFFFFFFA2) - ((2 * ((v138 >> 24) ^ 0xFFFFFFA2)) & 0xFFFFFFD8) + 108;
  LODWORD(STACK[0x218]) = v138 ^ 0x55;
  STACK[0x2F8] = v138;
  LODWORD(STACK[0x214]) = ((v138 >> 8) ^ 0x27) - (((v138 >> 8) ^ 0x27) >> 5 << 6) - 32;
  LODWORD(STACK[0x420]) = 1;
  v140 = v135;
  v141 = v128;
  v142 = v129;
  v143 = STACK[0x2A8];
  LODWORD(v112) = v123;
  v144 = v126;
  v145 = v130;
  v146 = STACK[0x2A0];
  v147 = v131;
  v148 = LODWORD(STACK[0x400]);
  LODWORD(v124) = (v148 - 676) | 0x201;
  LODWORD(STACK[0x3F0]) = v124;
  LODWORD(STACK[0x3F8]) = v148 - 1619858339;
  LODWORD(v121) = ((v143 ^ v146 ^ 0x2B)
                 + ~(((v143 ^ v146 ^ 0x2B) & 0x16 ^ (v143 ^ v146) & (v124 ^ 0x3D)) << ((v148 + 93) ^ 0x38))
                 - 109) ^ v144;
  LODWORD(v121) = (v121 - ((2 * v121) & 0xFFFFFFAA) - 43) ^ v140;
  LODWORD(v121) = v141 ^ (v121 - 2 * (v121 & 0x1F) + 31);
  LODWORD(v121) = (v121 - ((2 * v121) & 0x52) - 87) ^ v112;
  LODWORD(v121) = (v121 + (~(2 * v121) | 0xFFFFFF81) + 64) ^ v125;
  LODWORD(v121) = (v121 - ((2 * v121) & 0xFFFFFF8A) + 69) ^ v129;
  LODWORD(v121) = (v121 - ((2 * v121) & 0xFFFFFF94) + 74) ^ v133;
  LODWORD(v121) = (v121 - ((2 * v121) & 0xFFFFFF8A) + 69) ^ v127;
  LODWORD(v121) = (v121 - ((2 * v121) & 0x6E) + 55) ^ v132;
  v149 = v134 ^ v130 ^ (v121 - ((2 * v121) & 4) - 126);
  v150 = v136 ^ v137;
  v151 = v133;
  v152 = v125;
  v153 = v137;
  v154 = v112;
  v155 = v136 ^ v137 ^ 0x21;
  if ((v149 & 0x20 & v155) != 0)
    v156 = -112 - (v149 & 0x20 | 0x48);
  else
    v156 = v149 & 0x20 | 0x48;
  v157 = v155 + v156;
  v158 = STACK[0x2C0];
  v159 = *(_QWORD *)(STACK[0x2C0] + 8 * (v146 ^ 0x49u));
  v160 = *(_QWORD *)(STACK[0x2C0] + 8 * (v143 ^ 0x163));
  v161 = *(_QWORD *)(STACK[0x2C0] + 8 * (v144 ^ 0x1A6));
  v162 = *(_QWORD *)(STACK[0x2C0] + 8 * (v140 ^ 0xE0u));
  v163 = v141;
  v164 = *(_QWORD *)(STACK[0x2C0] + 8 * (v151 ^ 0x17ALL)) ^ 0x1F;
  STACK[0x260] = v136;
  v165 = *(_QWORD *)(v158 + 8 * (v136 ^ 0x1DFLL)) ^ 0x1F;
  STACK[0x258] = v153;
  v166 = *(_QWORD *)(v158 + 8 * ~(_BYTE)v153) ^ 0x1F;
  LODWORD(v159) = v160 ^ v161 ^ v159 ^ v162 ^ *(_QWORD *)(v158 + 8 * (v163 ^ 0x12DLL)) ^ *(_QWORD *)(v158 + 8 * (v154 ^ 0x9Au)) ^ *(_QWORD *)(v158 + 8 * (v145 ^ 0x2Bu)) ^ *(_QWORD *)(v158 + 8 * (v152 ^ 9u)) ^ *(_QWORD *)(v158 + 8 * (v127 ^ 0x172));
  STACK[0x290] = v151;
  LODWORD(v159) = 127
                - (v150 ^ v151 ^ v159 ^ (v164 - ((2 * v164) & 0x20) - 112) ^ *(_QWORD *)(v158
                                                                                       + 8
                                                                                       * (v147 ^ 0x72u)) ^ *(_QWORD *)(v158 + 8 * (v142 ^ 0x170)) ^ *(_QWORD *)(v158 + 8 * (v134 ^ 0xB0u)) ^ *(_QWORD *)(v158 + 8 * (v132 ^ 4u)) ^ (v165 - ((2 * v165) & 0xFFFFFFD6) + 107) ^ (v166 - ((2 * v166) & 0xFFFFFF9C) - 50) ^ v149 & 0xFFFFFFDF ^ 0x5B ^ (v157 - 72));
  STACK[0x2A0] = v146;
  STACK[0x2A8] = v143;
  LODWORD(v159) = v143 ^ 0xFFFFFFF5 ^ ((v159 ^ v146) - ((2 * (v159 ^ v146)) & 0x40) - 96);
  STACK[0x280] = v144;
  LODWORD(v159) = v144 ^ (v159 - ((2 * v159) & 0x38) - 100) ^ 0xC;
  STACK[0x2C8] = v140;
  LODWORD(v159) = (v159 - ((2 * v159) & 0xFFFFFFAA) - 43) ^ v140;
  STACK[0x298] = v163;
  LODWORD(v159) = (v159 - ((2 * v159) & 0xFFFFFFD6) + 107) ^ v163;
  LODWORD(v159) = ((v159 ^ 0x70) - 2 * ((v159 ^ 0x70) & 0x2B ^ v159 & 2) - 87) ^ v154;
  STACK[0x278] = v145;
  LODWORD(v159) = (v159 - ((2 * v159) & 0x34) + 26) ^ v145;
  STACK[0x2B0] = v152;
  LODWORD(v159) = (v159 - 2 * (v159 & 0x3F) + 63) ^ v152;
  STACK[0x2B8] = v127;
  LODWORD(v159) = (v159 - ((2 * v159) & 0xFFFFFF8A) + 69) ^ v127;
  LODWORD(v159) = (v159 - ((2 * v159) & 0xFFFFFF8C) + 70) ^ v147;
  STACK[0x288] = v142;
  LODWORD(v159) = (v159 - 2 * (v159 & 0x3F) - 65) ^ v142;
  STACK[0x270] = v132;
  STACK[0x268] = v134;
  v167 = v132 ^ v134 ^ ((v159 ^ 0xFFFFFFF9) - ((2 * v159) & 4) - 126);
  LODWORD(v159) = (v167 & 2 | (4 * (((v167 & 2) >> 1) & 1)) | 0x71) ^ 4;
  v168 = v159 - 17;
  v169 = -43 - v159;
  if (((((v167 & 2 | (4 * ((v167 & 2) != 0)) | 0x71) ^ 4) - 115) & (v147 ^ 0x46) & 0xFE) == 0)
    v169 = v168;
  v170 = (char *)*(&off_1E8C4D9A0 + (int)(v148 ^ 0x2D0)) - 8;
  STACK[0x418] = (unint64_t)v170;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, _QWORD, uint64_t, unint64_t, uint64_t, unsigned __int8 *, unsigned __int8 *, unsigned __int8 *, unsigned __int8 *, unsigned __int8 *, unsigned __int8 *, unsigned __int8 *, unsigned __int8 *, _BYTE *, unsigned __int8 *, unsigned __int8 *, unsigned __int8 *, unsigned __int8 *, unsigned __int8 *, _BYTE *, unsigned __int8 *, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 8 * (int)((59 * (LODWORD(STACK[0x420]) & LODWORD(STACK[0x428]) & 1)) ^ v148)))(43, 4294967285, 4294967254, v170[(((v147 ^ 0x46) + v169 - 98) ^ v167 & 0xFD) ^ 0x3BLL], v132, ((v147 ^ 0x46) + v169 - 98) ^ v167 & 0xFFFFFFFD, v148, v151, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           v172,
           v173,
           v174,
           v175,
           a28,
           v176,
           v177,
           v178);
}

uint64_t sub_1CF2A84C0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  char v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD, _QWORD, _QWORD);

  v8 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v7
                                                                  + 8
                                                                  * ((31 * (LODWORD(STACK[0x3F0]) ^ 0x220)) ^ (13 * ((v6 & 1) == 0))))
                                                      - (((31 * (LODWORD(STACK[0x3F0]) ^ 0x220) - 643) | 0x100u)
                                                       + ((31 * (LODWORD(STACK[0x3F0]) ^ 0x220) - 206120744) & 0xC4927BB ^ 0xFFFFFFFFFFFFFD1FLL)));
  STACK[0x410] = a6;
  STACK[0x408] = a4;
  return v8(a6 ^ 0x5E, a6 ^ 0x77, a6 ^ 0xF);
}

uint64_t sub_1CF2A8640@<X0>(unsigned __int8 a1@<W0>, unsigned __int8 a2@<W1>, unsigned __int8 a3@<W4>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  unsigned __int8 v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 v59;
  unsigned __int8 v60;
  unsigned __int8 v61;
  uint64_t v62;
  int v63;
  int v64;
  unsigned int v65;
  unint64_t v66;
  int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  int v71;
  int v72;
  unsigned int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  uint64_t v79;
  int v80;

  v62 = v57 | v58;
  v63 = (v56 ^ 0x85) - 1246924652 - ((2 * (v56 ^ 0x85)) & 0x128);
  v64 = ((v63 ^ 0x4A528F6B) + 1) ^ (145 - (v56 ^ 0x14));
  v65 = (v64 - 1246924652 + (~(2 * v64) | 0x94A51ED7) + 1) ^ v63;
  v66 = STACK[0x418];
  v67 = *(unsigned __int8 *)(STACK[0x418] + (v60 ^ 0x92));
  v68 = *(unsigned __int8 *)(STACK[0x418] + (a2 ^ 0x24));
  v69 = *(unsigned __int8 *)(STACK[0x418] + (v59 ^ 0x90));
  v70 = *(unsigned __int8 *)(STACK[0x418] + (a3 ^ 0x5BLL));
  v71 = *(unsigned __int8 *)(STACK[0x418] + (v61 ^ 0x9DLL));
  LODWORD(STACK[0x3E8]) = *(unsigned __int8 *)(STACK[0x418] + (a1 ^ 0x58));
  v72 = *(unsigned __int8 *)(v66 + (v55 ^ 0xE0));
  v73 = *(unsigned __int8 *)(v66 + ((v65 + 145) ^ 0x42));
  v74 = *(unsigned __int8 *)(v66 + (STACK[0x2A8] ^ 0x5ELL)) ^ v69;
  v75 = *(unsigned __int8 *)(v66 + (STACK[0x280] ^ 0x98));
  LODWORD(STACK[0x3F0]) = *(unsigned __int8 *)(v66 + (STACK[0x2A0] ^ 0x75)) ^ v67;
  v76 = *(unsigned __int8 *)(v66 + (STACK[0x2C8] ^ 0xDFLL));
  STACK[0x400] = v75 ^ v68;
  LODWORD(STACK[0x370]) = STACK[0x410] ^ 1;
  v77 = *(unsigned __int8 *)(v66 + (STACK[0x270] ^ 0x3DLL));
  v78 = *(unsigned __int8 *)(v66 + (STACK[0x258] ^ 0xC4));
  STACK[0x3F8] = v71 ^ *(unsigned __int8 *)(v66 + (STACK[0x278] ^ 0x10)) ^ 0x2Cu;
  v79 = (v74 << 8) | ((v76 ^ v70) << 24);
  v80 = (((STACK[0x408] & 7 ^ 4) & 7 | 0x181FC5A0) ^ 0x181FC5A0)
      - 475320235
      - 2 * ((((STACK[0x408] & 7 ^ 4) & 7 | 0x181FC5A0) ^ 0x181FC5A0) & ((a4 ^ 0x168) + 1672162666));
  *(_QWORD *)(a55
            + 8
            * ((((STACK[0x408] >> 3) ^ 1) + 50591924 - ((STACK[0x408] >> 2) & 0x28)) ^ 0x303F8B4)) = v62 ^ *(_QWORD *)(STACK[0x2C0] + 8 * (v80 ^ 0xE3AB3063)) ^ ((v80 ^ 0xE3AB3055) - (unint64_t)((2 * (v80 ^ 0xE3AB3055)) & 0x4A1D143E) - 0x1F7935F0DAF175E1) ^ 0x5D86282D57A7C788;
  return ((uint64_t (*)(_QWORD, uint64_t))(*(_QWORD *)(STACK[0x338] + 8 * a4) - 4))(((v77 ^ v72) << 8) | ((v78 ^ v73) << 24), v79);
}

uint64_t sub_1CF2A8CB8(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  int v63;
  unsigned __int8 v64;
  int v65;
  int v66;
  uint64_t v67;
  unint64_t v68;
  int v69;
  unsigned int v70;
  int v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unsigned int v78;
  unsigned int v79;
  uint64_t v80;
  unsigned int v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  unint64_t v99;
  unsigned int v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t (*v176)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v177;
  uint64_t v178;
  int v179;
  int v180;
  int v181;
  uint64_t v182;
  uint64_t v183;

  LODWORD(STACK[0x408]) = v65;
  v68 = STACK[0x400];
  v69 = STACK[0x400] | (LODWORD(STACK[0x3F0]) << 16);
  v70 = (v65 + 471287041) & 0xE3E8B98F;
  LODWORD(STACK[0x378]) = v70;
  v71 = a1 + (v61 | (v59 << 16));
  v72 = (((a8 << (v70 ^ 0x9C)) | (v66 << 16) | v63) + STACK[0x3F8]) ^ 0x6A4C757C;
  v73 = v72 - ((2 * v72) & 0x1B5B07A4ALL) - 0x28BA67AA2527C2DBLL;
  v74 = ((a2 + v69) ^ 0xBE12D24F) - ((2 * ((a2 + v69) ^ 0xBE12D24F)) & 0x12084C3AALL) + 0x64499DC3904261D5;
  v75 = ((((unint64_t)v64 << 24) | ((unint64_t)v62 << 16) | (v60 << 8) | v58) ^ 0xE90BAF4B)
      - ((2 * (((v64 << 24) | (v62 << 16) | ((_DWORD)v60 << 8) | v58) ^ 0xE90BAF4B)) & 0x3CDB816C)
      + 0x580B0CB71E6DC0B6;
  v76 = (v71 ^ 0xAD8E46C2) - (unint64_t)((2 * (v71 ^ 0xAD8E46C2)) & 0xA7EDCF56) + 0x53FF64F653F6E7ABLL;
  v77 = (uint64_t)*(&off_1E8C4D9A0 + (v65 ^ 0x2CA));
  LODWORD(v72) = (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (BYTE2(v73) ^ 0xD8)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (BYTE2(v74) ^ 0x42)) ^ 0x9FLL)) >> 16) ^ *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (((unsigned __int16)(((((_WORD)v60 << 8) | v58) ^ 0xAF4B) - ((2 * ((((_WORD)v60 << 8) | v58) ^ 0xAF4B)) & 0x816C) - 16202) >> 8) ^ 0xC0)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((v76 >> 24) ^ 0x53FF64F653)) ^ 0x9FLL)) >> 8);
  v78 = (*(_QWORD *)(v77
                   + 8
                   * (*(unsigned __int8 *)(a58
                                         + ((((((v64 << 24) | (v62 << 16) | ((_DWORD)v60 << 8) | v58) ^ 0xE90BAF4B)
                                                             - ((2
                                                               * (((v64 << 24) | (v62 << 16) | ((_DWORD)v60 << 8) | v58) ^ 0xE90BAF4B)) & 0x3CDB816C)
                                                             + 510509238) >> 16) ^ 0x6DLL)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((v73 >> 24) ^ 0xD7459855DALL)) ^ 0x9FLL)) >> 16) ^ *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (v61 ^ 0xC2)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((v74 >> 24) ^ 0x64499DC390)) ^ 0x9FLL)) >> 8);
  v79 = (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (BYTE1(v76) ^ 0xE7)) ^ 0x9FLL)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((v75 >> 24) ^ 0x580B0CB71ELL)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (v68 ^ 0x4F)) ^ 0x9FLL)) >> 24) ^ *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (STACK[0x3F8] ^ 0x7C)) ^ 0x9FLL) + 4);
  LODWORD(v75) = *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (BYTE1(v74) ^ 0x61)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (BYTE2(v76) ^ 0xF6)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (BYTE1(v73) ^ 0x3DLL)) ^ 0x9FLL)) >> 8);
  v80 = *(unsigned __int8 *)(a58 + (v78 ^ 0x9FLL));
  v81 = v75 ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (v58 ^ 0x4B)) ^ 0x9FLL)) >> 16);
  v82 = *(unsigned __int8 *)(a58 + (v79 ^ 0xE3));
  v83 = (v78 ^ 0x6992C19FLL) - ((2 * (v78 ^ 0x6992C19FLL)) & 0x15B129CD4) + 0x18564470AD894E6ALL;
  v84 = (v79 ^ 0xDBBD10E3) - 2 * ((v79 ^ 0xDBBD10E3) & 0xB1B1A5B5 ^ v79 & 4) + 0x28AE3AF4B1B1A5B1;
  v85 = *(unsigned __int8 *)(a58
                           + ((((v72 ^ 0x6164C107)
                              - (unint64_t)((2 * (v72 ^ 0x6164C107)) & 0xC6D2A260)
                              + 0x288820CF63695130) >> 24) ^ 0x288820CF63));
  v86 = *(unsigned __int8 *)(a58 + (v72 ^ 7));
  LODWORD(v80) = *(_DWORD *)(v77
                           + 8
                           * (*(unsigned __int8 *)(a58
                                                 + (((unsigned __int16)((v72 ^ 0xC107)
                                                                                       - ((2 * (v72 ^ 0xC107)) & 0xA260)
                                                                                       + 20784) >> 8) ^ 0x51)) ^ 0x9FLL)
                           + 4) ^ (*(_QWORD *)(v77 + 8 * (v80 ^ 0x9F)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (v82 ^ 0x9F)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (((unsigned __int16)((v81 ^ 0x2518) - 2 * ((v81 ^ 0x2518) & 0xC8F ^ v81 & 1) + 3214) >> 8) ^ 0xCLL)) ^ 0x9FLL)) >> 24);
  LODWORD(v72) = *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (BYTE1(v83) ^ 0x4ELL)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (BYTE1(v84) ^ 0xA5)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((((v81 ^ 0xE5AE2518) - 2 * ((v81 ^ 0xE5AE2518) & 0x1A880C8F ^ v81 & 1) + 445123726) >> 16) ^ 0x88)) ^ 0x9FLL)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((((v72 ^ 0x6164C107) - ((2 * (v72 ^ 0x6164C107)) & 0xC6D2A260) + 1667846448) >> 16) ^ 0x69)) ^ 0x9FLL)) >> 24);
  LODWORD(v85) = *(_DWORD *)(v77
                           + 8
                           * (*(unsigned __int8 *)(a58
                                                 + ((((v81 ^ 0xE5AE2518)
                                                    - 2
                                                    * ((v81 ^ 0xE5AE2518) & 0x1A880C8F ^ (unint64_t)(v81 & 1))
                                                    + 0x2E41D6B11A880C8ELL) >> 24) ^ 0x2E41D6B11ALL)) ^ 0x9FLL)
                           + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (BYTE2(v84) ^ 0xB1)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (v85 ^ 0x9F)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (BYTE2(v83) ^ 0x89)) ^ 0x9FLL)) >> 16);
  v87 = (*(_QWORD *)(v77 + 8 * (v86 ^ 0x9F)) >> 24) ^ (*(_QWORD *)(v77
                                                                 + 8
                                                                 * (*(unsigned __int8 *)(a58
                                                                                       + (v81 ^ 0x18)) ^ 0x9FLL)) >> 16) ^ *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((v83 >> 24) ^ 0x18564470ADLL)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((v84 >> 24) ^ 0x28AE3AF4B1)) ^ 0x9FLL)) >> 8);
  v88 = (v72 ^ 0xBC92D77ELL)
      - ((2 * (v72 ^ 0xBC92D77ELL)) & 0x15171C296)
      + 0x16CCBAFA8B8E14BLL;
  v89 = *(unsigned __int8 *)(a58
                           + (((unsigned __int16)((v80 ^ 0xA9BB)
                                                                 - ((2 * (v80 ^ 0xA9BB)) & 0x21FA)
                                                                 + 4349) >> 8) ^ 0x10));
  v90 = *(unsigned __int8 *)(a58
                           + ((((v80 ^ 0xE2A8A9BB)
                                               - ((2 * (v80 ^ 0xE2A8A9BB)) & 0x47A21FA)
                                               - 2109927171) >> 16) ^ 0x3DLL));
  LODWORD(v82) = *(_DWORD *)(v77
                           + 8
                           * (*(unsigned __int8 *)(a58
                                                 + ((((v80 ^ 0xE2A8A9BBLL)
                                                    - ((2 * (v80 ^ 0xE2A8A9BBLL)) & 0x1047A21FAuLL)
                                                    - 0x7D843F4F7DC2EF03) >> 24) ^ 0x827BC0B082)) ^ 0x9FLL)
                           + 4) ^ (*(_QWORD *)(v77
                                             + 8
                                             * (*(unsigned __int8 *)(a58
                                                                   + ((((v72 ^ 0xBC92D77E)
                                                                                       - ((2
                                                                                         * (v72 ^ 0xBC92D77E)) & 0x5171C296)
                                                                                       - 1464278709) >> 16) ^ 0xB8)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (((unint64_t)((v85 ^ 0x24C1C7C8) - 2 * ((v85 ^ 0x24C1C7C8) & 0x3F5815DF ^ v85 & 0x10) + 1062737359) >> 16) ^ 0x58)) ^ 0x9FLL)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((((v87 ^ 0x2EF7B0BE) - ((2 * (v87 ^ 0x2EF7B0BE)) & 0x80E03A0) + 67568080) >> 16) ^ 7)) ^ 0x9FLL)) >> 24);
  LODWORD(v80) = (*(_QWORD *)(v77
                            + 8
                            * (*(unsigned __int8 *)(a58
                                                  + ((((v85 ^ 0x24C1C7C8)
                                                     - 2
                                                     * ((v85 ^ 0x24C1C7C8) & 0x3F5815DF ^ (unint64_t)(v85 & 0x10))
                                                     + 0x6005F3683F5815CFLL) >> 24) ^ 0x6005F3683FLL)) ^ 0x9FLL)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((v88 >> 24) ^ 0x16CCBAFA8)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((((v87 ^ 0x2EF7B0BELL) - (unint64_t)((2 * (v87 ^ 0x2EF7B0BE)) & 0x80E03A0) - 0x36E3A270FBF8FE30) >> 24) ^ 0xC91C5D8F04)) ^ 0x9FLL)) >> 24) ^ *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (v80 ^ 0xBBLL)) ^ 0x9FLL) + 4);
  LODWORD(v72) = *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (v85 ^ 0xC8)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (v87 ^ 0xBELL)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (v89 ^ 0x9F)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (v72 ^ 0x7ELL)) ^ 0x9FLL)) >> 24);
  LODWORD(v83) = (*(_QWORD *)(v77
                            + 8
                            * (*(unsigned __int8 *)(a58
                                                  + (((unsigned __int16)((v87 ^ 0xB0BE)
                                                                                        - ((2 * (v87 ^ 0xB0BE)) & 0x3A0)
                                                                                        + 464) >> 8) ^ 1)) ^ 0x9FLL)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (v90 ^ 0x9F)) >> 24) ^ *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (BYTE1(v88) ^ 0xE1)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (((unsigned __int16)((v85 ^ 0xC7C8) - 2 * ((v85 ^ 0xC7C8) & 0x15DF ^ v85 & 0x10) + 5583) >> 8) ^ 0x15)) ^ 0x9FLL)) >> 8);
  v91 = *(unsigned __int8 *)(v67 + (v72 ^ 0xE0));
  v92 = *(_DWORD *)(v77
                  + 8
                  * (*(unsigned __int8 *)(v67
                                        + (((unsigned __int16)((v80 ^ 0xA137)
                                                                              - ((2 * (v80 ^ 0xA137)) & 0xD120)
                                                                              + 26768) >> 8) ^ 0x68)) ^ 0x9FLL)
                  + 4) ^ (*(_QWORD *)(v77
                                    + 8
                                    * (*(unsigned __int8 *)(v67
                                                          + ((((v82 ^ 0x7DC52339)
                                                             - 2
                                                             * ((v82 ^ 0x7DC52339) & 0x3935E2ED ^ (unint64_t)(v82 & 4))
                                                             - 0x1228F19FC6CA1D17) >> 24) ^ 0xEDD70E6039)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (((unsigned __int16)((v72 ^ 0x4DE0) - ((2 * (v72 ^ 0x4DE0)) & 0xE2E2) + 29041) >> 8) ^ 0x71)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((((v83 ^ 0xA21D8E5F) - ((2 * (v83 ^ 0xA21D8E5F)) & 0xEEE28D1A) + 2003912333) >> 16) ^ 0x71)) ^ 0x9FLL)) >> 16);
  LODWORD(v88) = (*(_QWORD *)(v77
                            + 8
                            * (*(unsigned __int8 *)(v67
                                                  + ((((v72 ^ 0x7FD54DE0)
                                                                      - ((2 * (v72 ^ 0x7FD54DE0)) & 0x3130E2E2)
                                                                      - 1734839951) >> 16) ^ 0x98)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((((v80 ^ 0xADDCA137) - ((2 * (v80 ^ 0xADDCA137)) & 0x6930D120) + 882403472) >> 16) ^ 0x98)) ^ 0x9FLL)) >> 16) ^ *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((((v83 ^ 0xA21D8E5FLL) - (unint64_t)((2 * (v83 ^ 0xA21D8E5F)) & 0xEEE28D1A) + 0x6CBB27347771468DLL) >> 24) ^ 0x6CBB273477)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (v82 ^ 0x39)) ^ 0x9FLL)) >> 8);
  LODWORD(v72) = *(_DWORD *)(v77
                           + 8
                           * (*(unsigned __int8 *)(v67
                                                 + ((((v72 ^ 0x7FD54DE0)
                                                    - ((2 * (v72 ^ 0x7FD54DE0)) & 0x13130E2E2uLL)
                                                    + 0x2D5E97AB98987171) >> 24) ^ 0x2D5E97AB98)) ^ 0x9FLL)
                           + 4) ^ (*(_QWORD *)(v77
                                             + 8
                                             * (*(unsigned __int8 *)(v67 + (v83 ^ 0x5FLL)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((((v80 ^ 0xADDCA137) - (unint64_t)((2 * (v80 ^ 0xADDCA137)) & 0x6930D120) - 0x657F82BECB679770) >> 24) ^ 0x9A807D4134)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (((unsigned __int16)((v82 ^ 0x2339) - 2 * ((v82 ^ 0x2339) & 0xE2ED ^ v82 & 4) - 7447) >> 8) ^ 0xE2)) ^ 0x9FLL)) >> 16);
  LODWORD(v82) = (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (v80 ^ 0x37)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (((unsigned __int16)((v83 ^ 0x8E5F) - ((2 * (v83 ^ 0x8E5F)) & 0x8D1A) + 18061) >> 8) ^ 0x46)) ^ 0x9FLL)) >> 24) ^ *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (((unint64_t)((v82 ^ 0x7DC52339) - 2 * ((v82 ^ 0x7DC52339) & 0x3935E2ED ^ v82 & 4) + 959832809) >> 16) ^ 0x35)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (v91 ^ 0x9F)) >> 16);
  v93 = (v92 ^ 0x1DC8756FLL) - ((2 * (v92 ^ 0x1DC8756F)) & 0x442CB0A) + 0x29FEC8B802216585;
  v94 = *(unsigned __int8 *)(v67
                           + ((((v72 ^ 0xA11EABB3)
                                               + 1465875162
                                               + (~(2 * (v72 ^ 0xA11EABB3)) | 0x51410A4D)) >> 16) ^ 0x5FLL));
  v95 = *(unsigned __int8 *)(v67
                           + ((((v72 ^ 0xA11EABB3)
                              - 0xF03A0B8A8A08526
                              + (~(2 * (v72 ^ 0xA11EABB3)) | 0xFFFFFFFF51410A4DLL)) >> 24) ^ 0xF0FC5F4757));
  LODWORD(v91) = *(unsigned __int8 *)(v67
                                    + ((((v92 ^ 0x1DC8756F)
                                                        - ((2 * (v92 ^ 0x1DC8756F)) & 0x442CB0A)
                                                        + 35743109) >> 16) ^ 0x21));
  v96 = *(unsigned __int8 *)(v67 + (v72 ^ 0xB3));
  LODWORD(v72) = (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (v88 ^ 0x23)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (v92 ^ 0x6FLL)) ^ 0x9FLL)) >> 16) ^ *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (((unsigned __int16)((v72 ^ 0xABB3) + 31450 + (~(2 * (v72 ^ 0xABB3)) | 0xA4D)) >> 8) ^ 0x7ALL)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (((unsigned __int16)((v82 ^ 0xF187) - ((2 * (v82 ^ 0xF187)) & 0xE000) - 4096) >> 8) ^ 0xF0)) ^ 0x9FLL)) >> 8);
  LODWORD(v80) = *(_DWORD *)(v77 + 8 * (v94 ^ 0x9F) + 4) ^ (*(_QWORD *)(v77
                                                                      + 8
                                                                      * (*(unsigned __int8 *)(v67
                                                                                            + (((unsigned __int16)((v88 ^ 0x2F23) - 2 * ((v88 ^ 0x2F23) & 0xBE4E ^ v88 & 0xC) - 16830) >> 8) ^ 0xBELL)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((((v82 ^ 0x538F187) - ((2 * (v82 ^ 0x538F187)) & 0xDF7BE000) - 272764928) >> 16) ^ 0xBDLL)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (((unsigned __int16)((v92 ^ 0x756F) - ((2 * (v92 ^ 0x756F)) & 0xCB0A) + 25989) >> 8) ^ 0x65)) ^ 0x9FLL)) >> 16);
  v97 = *(_QWORD *)(v77 + 8 * (v95 ^ 0x9F)) >> 24;
  v98 = *(_DWORD *)(v77
                  + 8
                  * (*(unsigned __int8 *)(v67
                                        + ((((v82 ^ 0x538F187)
                                           - ((2 * (v82 ^ 0x538F187)) & 0x1DF7BE000uLL)
                                           + 0x60F9598FEFBDF000) >> 24) ^ 0x60F9598FEFLL)) ^ 0x9FLL)
                  + 4) ^ 0x588124EE;
  LODWORD(v97) = v98 + (v97 ^ 0x8124EEC8) - 2 * (v98 & (v97 ^ 0x124EEC8));
  v99 = *(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (v82 ^ 0x87)) ^ 0x9FLL));
  LODWORD(v82) = v97 ^ (*(_QWORD *)(v77
                                  + 8
                                  * (*(unsigned __int8 *)(v67
                                                        + ((((v88 ^ 0xE7F2F23)
                                                                            - 2
                                                                            * ((v88 ^ 0xE7F2F23) & 0xEE2EBE4E ^ v88 & 0xC)
                                                                            - 298926526) >> 16) ^ 0x2ELL)) ^ 0x9FLL)) >> 16) ^ (*(_QWORD *)(v77 + 8 * ((v91 - 2 * (v91 & 0xFFFFFF83) + 131) ^ 0x1C)) >> 8);
  v100 = (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((v93 >> 24) ^ 0x29FEC8B802)) ^ 0x9FLL)) >> 16) ^ (v99 >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((((v88 ^ 0xE7F2F23) - 2 * ((v88 ^ 0xE7F2F23) & 0xEE2EBE4ELL ^ v88 & 0xC) - 0x5F5DC5C411D141BELL) >> 24) ^ 0xA0A23A3BEELL)) ^ 0x9FLL)) >> 24) ^ *(_DWORD *)(v77 + 8 * (v96 ^ 0x9F) + 4);
  v101 = (v82 ^ 0x2E92AB38)
       - (unint64_t)((2 * (v82 ^ 0x2E92AB38)) & 0x7F2B2B36)
       + 0x1E154A953F95959BLL;
  v102 = (v100 ^ 0xC29E1D0ALL) - 2 * ((v100 ^ 0xC29E1D0ALL) & 0xE002E9DBLL ^ v100 & 1) + 0x7FDD282BE002E9DALL;
  v103 = *(unsigned __int8 *)(v67
                            + ((((v80 ^ 0xE0E5C4BBLL)
                               - (unint64_t)((2 * (v80 ^ 0xE0E5C4BB)) & 0xA65BFF32)
                               - 0x5FE8AC3CACD20067) >> 24) ^ 0xA01753C353));
  v104 = *(unsigned __int8 *)(v67 + (v80 ^ 0xBBLL));
  v105 = *(unsigned __int8 *)(v67 + (v100 ^ 0xALL));
  v106 = *(unsigned __int8 *)(v67
                            + (((unint64_t)((v72 ^ 0x96BBDBA3)
                                                                  - 2
                                                                  * ((v72 ^ 0x96BBDBA3) & 0x7DBA089E ^ v72 & 4)
                                                                  + 2109343898) >> 16) ^ 0xBALL));
  v107 = *(unsigned __int8 *)(v67
                            + ((((v72 ^ 0x96BBDBA3)
                               - 2 * ((v72 ^ 0x96BBDBA3) & 0x7DBA089E ^ (unint64_t)(v72 & 4))
                               - 0x2BAADA738245F766) >> 24) ^ 0xD455258C7DLL));
  v108 = *(unsigned __int8 *)(v67
                            + ((v97 ^ WORD1(*(_QWORD *)(v77
                                                                       + 8
                                                                       * (*(unsigned __int8 *)(v67
                                                                                             + ((((v88 ^ 0xE7F2F23) - 2 * ((v88 ^ 0xE7F2F23) & 0xEE2EBE4E ^ v88 & 0xC) - 298926526) >> 16) ^ 0x2ELL)) ^ 0x9FLL))) ^ BYTE1(*(_QWORD *)(v77 + 8 * ((v91 - 2 * (v91 & 0xFFFFFF83) + 131) ^ 0x1C)))) ^ 0x38));
  v109 = *(unsigned __int8 *)(v67
                            + ~((unsigned __int16)((v80 ^ 0xC4BB)
                                                                  - ((2 * (v80 ^ 0xC4BB)) & 0xFF32)
                                                                  - 103) >> 8));
  v110 = *(unsigned __int8 *)(v67
                            + ((((v80 ^ 0xE0E5C4BB)
                                                - ((2 * (v80 ^ 0xE0E5C4BB)) & 0xA65BFF32)
                                                + 1395523481) >> 16) ^ 0x2DLL));
  v111 = *(unsigned __int8 *)(v67 + (v72 ^ 0xA3));
  v112 = *(unsigned __int8 *)(v67 + (BYTE1(v101) ^ 0x95));
  LODWORD(v72) = *(_DWORD *)(v77 + 8 * (v103 ^ 0x9F) + 4) ^ (*(_QWORD *)(v77
                                                                       + 8
                                                                       * (*(unsigned __int8 *)(v67
                                                                                             + (((unsigned __int16)((v72 ^ 0xDBA3) - 2 * ((v72 ^ 0xDBA3) & 0x89E ^ v72 & 4) + 2202) >> 8) ^ 8)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (BYTE2(v101) ^ 0x95)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((v102 >> 24) ^ 0x7FDD282BE0)) ^ 0x9FLL)) >> 16);
  LODWORD(v101) = (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((v101 >> 24) ^ 0x1E154A953FLL)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (v104 ^ 0x9F)) >> 16) ^ *(_DWORD *)(v77 + 8 * (v105 ^ 0x9F) + 4) ^ (*(_QWORD *)(v77 + 8 * (v106 ^ 0x9F)) >> 8);
  v113 = *(unsigned int *)(v77 + 8 * (v111 ^ 0x9F) + 4) ^ (unint64_t)*(unsigned int *)(v77
                                                                                            + 8
                                                                                            * (*(unsigned __int8 *)(v67 + (BYTE2(v102) ^ 2)) ^ 0x9FLL)
                                                                                            + 3);
  LODWORD(v110) = (*(_QWORD *)(v77 + 8 * (v112 ^ 0x9F)) >> 16) ^ __ROR4__(((*(_QWORD *)(v77 + 8 * (v110 ^ 0x9F)) >> 18) & 0x3FFFFF | ((unsigned __int16)(*(_QWORD *)(v77 + 8 * (v110 ^ 0x9F)) >> 8) << 22)) ^ ((v113 >> 10) | ((_DWORD)v113 << 22)), 22);
  v114 = *(unsigned __int8 *)(v67 + (v72 ^ 0x36));
  v115 = (v110 ^ 0x8404AABB)
       - (unint64_t)((2 * (v110 ^ 0x8404AABB)) & 0x83828F7C)
       - 0x446C6754BE3EB842;
  v116 = (v101 ^ 0x2E4D4267)
       - ((2 * (v101 ^ 0x2E4D4267)) & 0x8DEC5310)
       - 0x1FC97DC2B909D678;
  v117 = *(unsigned __int8 *)(v67 + (v101 ^ 0x67));
  v118 = *(unsigned __int8 *)(v67
                            + ((WORD1(*(_QWORD *)(v77
                                                                 + 8
                                                                 * (*(unsigned __int8 *)(v67 + (BYTE1(v102) ^ 0xE9)) ^ 0x9FLL))) ^ BYTE1(*(_QWORD *)(v77 + 8 * (v108 ^ 0x9F))) ^ BYTE3(*(_QWORD *)(v77 + 8 * (v107 ^ 0x9F))) ^ *(_BYTE *)(v77 + 8 * (v109 ^ 0x9F) + 4)) ^ 0xF5));
  v119 = (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (BYTE1(v102) ^ 0xE9)) ^ 0x9FLL)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (v108 ^ 0x9F)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (v107 ^ 0x9F)) >> 24) ^ *(_DWORD *)(v77 + 8 * (v109 ^ 0x9F) + 4) ^ 0x8E21F2F5;
  v120 = v119 + 0x546C42ECFEABE491 + (~(2 * v119) | 0xFFFFFFFE02A836DFLL);
  v121 = *(unsigned __int8 *)(v67 + (BYTE2(v115) ^ 0xC1));
  v122 = *(unsigned __int8 *)(v67 + (BYTE1(v116) ^ 0x29));
  v123 = (v72 ^ 0x7E3CF536)
       - ((2 * (v72 ^ 0x7E3CF536)) & 0x5DDD7396)
       - 0x41816240D1114635;
  v124 = *(unsigned __int8 *)(v67 + (BYTE1(v123) ^ 0xB9));
  v125 = *(unsigned __int8 *)(v67 + (BYTE2(v123) ^ 0xEELL));
  v126 = *(unsigned __int8 *)(v67 + ((v115 >> 24) ^ 0xBB9398AB41));
  v127 = *(unsigned __int8 *)(v67 + (BYTE2(v116) ^ 0xF6));
  v128 = *(unsigned __int8 *)(v67 + ((v123 >> 24) ^ 0xBE7E9DBF2ELL));
  v129 = *(unsigned int *)(v77 + 8 * (v117 ^ 0x9F) + 4) ^ (*(_QWORD *)(v77 + 8 * (v114 ^ 0x9F)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (v118 ^ 0x9F)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (BYTE1(v115) ^ 0x47)) ^ 0x9FLL)) >> 16);
  v130 = *(unsigned int *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (BYTE1(v120) ^ 0xE4)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (v122 ^ 0x9F)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (v121 ^ 0x9F)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (v124 ^ 0x9F)) >> 16);
  v131 = *(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (v110 ^ 0xBBLL)) ^ 0x9FLL));
  *((_QWORD *)&v133 + 1) = v131 ^ 0x1106D222FLL;
  *(_QWORD *)&v133 = v131 ^ 0xDBFDFA600000000;
  v132 = v133 >> 33;
  *((_QWORD *)&v133 + 1) = v132 ^ 0x29A4568F;
  *(_QWORD *)&v133 = v132;
  v134 = *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (BYTE1(v120) ^ 0xE4)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (v122 ^ 0x9F)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (v121 ^ 0x9F)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (v124 ^ 0x9F)) >> 16) ^ 0x1F6FAAD5;
  v135 = v134 - 2 * (v134 & 0xD51883F ^ v130 & 0x22) - 0x79827E51F2AE77E3;
  v136 = *(unsigned __int8 *)(v67 + v129);
  LODWORD(v116) = (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((v116 >> 24) ^ 0xE036823D46)) ^ 0x9FLL)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (v128 ^ 0x9F)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((v120 >> 24) ^ 0x546C42ECFELL)) ^ 0x9FLL)) >> 24) ^ ((unint64_t)(v133 >> 31) >> 32);
  v137 = (*(_QWORD *)(v77 + 8 * (v126 ^ 0x9F)) >> 24) ^ (*(_QWORD *)(v77
                                                                                               + 8
                                                                                               * (*(unsigned __int8 *)(v67 + (BYTE2(v120) ^ 0xABLL)) ^ 0x9FLL)) >> 16) ^ *(_DWORD *)(v77 + 8 * (v125 ^ 0x9F) + 4) ^ (*(_QWORD *)(v77 + 8 * (v127 ^ 0x9F)) >> 8) ^ 0x79283019;
  v138 = v137 - ((2 * v137) & 0x12A1E53CCLL) - 0x35D5529C6AF0D61ALL;
  v139 = (v129 ^ 0xC2399600)
       - 2 * ((v129 ^ 0xC2399600) & 0x6735AE9F ^ v129 & 0x13)
       + 0x211E41F86735AE8CLL;
  v140 = *(unsigned __int8 *)(v67
                            + (BYTE3(*(_QWORD *)(v77 + 8 * (v126 ^ 0x9F))) ^ BYTE2(*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (BYTE2(v120) ^ 0xABLL)) ^ 0x9FLL))) ^ *(_BYTE *)(v77 + 8 * (v125 ^ 0x9F) + 4) ^ BYTE1(*(_QWORD *)(v77 + 8 * (v127 ^ 0x9F))) ^ 0x19));
  v141 = *(unsigned __int8 *)(v67 + (BYTE1(v139) ^ 0xAELL));
  v142 = *(unsigned __int8 *)(v67 + ((v139 >> 24) ^ 0x211E41F867));
  v143 = *(unsigned __int8 *)(v67 + (BYTE2(v139) ^ 0x35));
  LODWORD(v139) = (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((v135 >> 24) ^ 0x867D81AE0DLL)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (v136 ^ 0x9F)) >> 16) ^ *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((v138 >> 24) ^ 0xCA2AAD6395)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (v116 ^ 0x22)) ^ 0x9FLL)) >> 8);
  LODWORD(v114) = *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (v130 ^ 0xD5)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (v140 ^ 0x9F)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (((unsigned __int16)((v116 ^ 0xB22) - ((2 * (v116 ^ 0xB22)) & 0xC698) - 7348) >> 8) ^ 0xE3)) ^ 0x9FLL)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (v141 ^ 0x9F)) >> 24);
  LODWORD(v115) = *(_DWORD *)(v77
                            + 8
                            * (*(unsigned __int8 *)(v67
                                                  + ((((v116 ^ 0x50E60B22)
                                                                      - ((2 * (v116 ^ 0x50E60B22)) & 0xFACBC698)
                                                                      + 2103829324) >> 16) ^ 0x65)) ^ 0x9FLL)
                            + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (BYTE1(v138) ^ 0x29)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (v143 ^ 0x9F)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (BYTE1(v135) ^ 0x88)) ^ 0x9FLL)) >> 16);
  LODWORD(v140) = *(_DWORD *)(v77
                            + 8
                            * (*(unsigned __int8 *)(v67
                                                  + ((((v116 ^ 0x50E60B22)
                                                     - (unint64_t)((2 * (v116 ^ 0x50E60B22)) & 0xFACBC698)
                                                     - 0x3FF4E9DF829A1CB4) >> 24) ^ 0xC00B16207DLL)) ^ 0x9FLL)
                            + 4) ^ (*(_QWORD *)(v77 + 8 * (v142 ^ 0x9F)) >> 8) ^ (*(_QWORD *)(v77
                                                                                            + 8
                                                                                            * (*(unsigned __int8 *)(v67 + (BYTE2(v135) ^ 0x51)) ^ 0x9FLL)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (BYTE2(v138) ^ 0xFLL)) ^ 0x9FLL)) >> 24);
  v144 = *(unsigned __int8 *)(v67
                            + ((((v139 ^ 0x9A17455A)
                                                - ((2 * (v139 ^ 0x9A17455A)) & 0x75A49516)
                                                - 1160623477) >> 16) ^ 0xD2));
  v145 = (v140 ^ 0xDD38CE19)
       - 2 * ((v140 ^ 0xDD38CE19) & 0xA7A2C0B3 ^ v140 & 0x20)
       - 0x60D92A1F585D3F6DLL;
  v146 = *(unsigned __int8 *)(v67
                            + ((((v139 ^ 0x9A17455ALL)
                               - ((2 * (v139 ^ 0x9A17455ALL)) & 0x175A49516uLL)
                               + 0x540E4A77BAD24A8BLL) >> 24) ^ 0x540E4A77BALL));
  v147 = *(unsigned __int8 *)(v67
                            + (BYTE3(*(_QWORD *)(v77
                                               + 8
                                               * (*(unsigned __int8 *)(v67 + ((v135 >> 24) ^ 0x867D81AE0DLL)) ^ 0x9FLL))) ^ BYTE2(*(_QWORD *)(v77 + 8 * (v136 ^ 0x9F))) ^ *(_BYTE *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((v138 >> 24) ^ 0xCA2AAD6395)) ^ 0x9FLL) + 4) ^ BYTE1(*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (v116 ^ 0x22)) ^ 0x9FLL))) ^ 0x5ALL));
  LODWORD(v139) = *(_DWORD *)(v77
                            + 8
                            * (*(unsigned __int8 *)(v67
                                                  + ((((v114 ^ 0xFAA72996)
                                                                      - ((2 * (v114 ^ 0xFAA72996)) & 0x5B84C44)
                                                                      - 2099501534) >> 16) ^ 0xDCLL)) ^ 0x9FLL)
                            + 4) ^ (*(_QWORD *)(v77
                                              + 8
                                              * (*(unsigned __int8 *)(v67
                                                                    + (((unsigned __int16)((v139 ^ 0x455A) - ((2 * (v139 ^ 0x455A)) & 0x9516) + 19083) >> 8) ^ 0x4ALL)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((((v115 ^ 0x761207AF) - ((2 * (v115 ^ 0x761207AF)) & 0xC1780768) - 524549196) >> 16) ^ 0xBCLL)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((*(_BYTE *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((((v116 ^ 0x50E60B22) - (unint64_t)((2 * (v116 ^ 0x50E60B22)) & 0xFACBC698) - 0x3FF4E9DF829A1CB4) >> 24) ^ 0xC00B16207DLL)) ^ 0x9FLL) + 4) ^ BYTE1(*(_QWORD *)(v77 + 8 * (v142 ^ 0x9F))) ^ WORD1(*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (BYTE2(v135) ^ 0x51)) ^ 0x9FLL))) ^ BYTE3(*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (BYTE2(v138) ^ 0xFLL)) ^ 0x9FLL)))) ^ 0x19)) ^ 0x9FLL)) >> 16);
  LODWORD(v138) = (*(_QWORD *)(v77
                             + 8
                             * (*(unsigned __int8 *)(v67
                                                   + ((((v115 ^ 0x761207AFLL)
                                                      - ((2 * (v115 ^ 0x761207AFLL)) & 0x1C1780768uLL)
                                                      + 0x9C61AE8E0BC03B4) >> 24) ^ 0x9C61AE8E0)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((((v114 ^ 0xFAA72996) - ((2 * (v114 ^ 0xFAA72996)) & 0x105B84C44uLL) + 0x320EACFF82DC2622) >> 24) ^ 0x320EACFF82)) ^ 0x9FLL)) >> 16) ^ *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (BYTE1(v145) ^ 0xC0)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (v144 ^ 0x9F)) >> 8);
  LODWORD(v146) = (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (BYTE2(v145) ^ 0xA2)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (v115 ^ 0xAFLL)) ^ 0x9FLL)) >> 16) ^ *(_DWORD *)(v77 + 8 * (v146 ^ 0x9F) + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (v114 ^ 0x96)) ^ 0x9FLL)) >> 8);
  LODWORD(v116) = (*(_QWORD *)(v77 + 8 * (v147 ^ 0x9F)) >> 16) ^ (*(_QWORD *)(v77
                                                                            + 8
                                                                            * (*(unsigned __int8 *)(v67
                                                                                                  + ((v145 >> 24) ^ 0x9F26D5E0A7)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (((unsigned __int16)((v114 ^ 0x2996) - ((2 * (v114 ^ 0x2996)) & 0x4C44) + 9762) >> 8) ^ 0x26)) ^ 0x9FLL)) >> 24) ^ *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (((unsigned __int16)((v115 ^ 0x7AF) - ((2 * (v115 ^ 0x7AF)) & 0x768) + 948) >> 8) ^ 3)) ^ 0x9FLL) + 4);
  v148 = (v116 ^ 0x704F519BLL)
       - ((2 * (v116 ^ 0x704F519BLL)) & 0x1D6C00F54)
       - 0x4D95CD45149FF856;
  v149 = (v139 ^ 0x4A090732)
       - ((2 * (v139 ^ 0x4A090732)) & 0x23ED5DD8)
       + 0x47E730A311F6AEECLL;
  LODWORD(v144) = *(_DWORD *)(v77
                            + 8
                            * (*(unsigned __int8 *)(v67
                                                  + (BYTE3(*(_QWORD *)(v77
                                                                     + 8
                                                                     * (*(unsigned __int8 *)(v67
                                                                                           + ((((v115 ^ 0x761207AFLL)
                                                                                              - ((2
                                                                                                * (v115 ^ 0x761207AFLL)) & 0x1C1780768uLL)
                                                                                              + 0x9C61AE8E0BC03B4) >> 24) ^ 0x9C61AE8E0)) ^ 0x9FLL))) ^ BYTE2(*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((((v114 ^ 0xFAA72996) - ((2 * (v114 ^ 0xFAA72996)) & 0x105B84C44uLL) + 0x320EACFF82DC2622) >> 24) ^ 0x320EACFF82)) ^ 0x9FLL))) ^ *(_BYTE *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (BYTE1(v145) ^ 0xC0)) ^ 0x9FLL) + 4) ^ BYTE1(*(_QWORD *)(v77 + 8 * (v144 ^ 0x9F))) ^ 0xCDLL)) ^ 0x9FLL)
                            + 4) ^ (*(_QWORD *)(v77
                                              + 8
                                              * (*(unsigned __int8 *)(v67 + (v139 ^ 0x32)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((((v146 ^ 0x95EF0B01) - (unint64_t)((2 * (v146 ^ 0x95EF0B01)) & 0x85342EEE) - 0x4FD5095EBD65E889) >> 24) ^ 0xB02AF6A142)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((v148 >> 24) ^ 0xB26A32BAEBLL)) ^ 0x9FLL)) >> 16);
  LODWORD(v114) = *(_DWORD *)(v77
                            + 8
                            * (*(unsigned __int8 *)(v67
                                                  + (((unsigned __int16)((v138 ^ 0x74CD)
                                                                                        - 2
                                                                                        * ((v138 ^ 0x74CD) & 0x297F ^ v138 & 2)
                                                                                        + 10621) >> 8) ^ 0x29)) ^ 0x9FLL)
                            + 4) ^ (*(_QWORD *)(v77
                                              + 8 * (*(unsigned __int8 *)(v67 + (v146 ^ 1)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((WORD1(*(_QWORD *)(v77 + 8 * (v147 ^ 0x9F))) ^ BYTE1(*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((v145 >> 24) ^ 0x9F26D5E0A7)) ^ 0x9FLL))) ^ BYTE3(*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (((unsigned __int16)((v114 ^ 0x2996) - ((2 * (v114 ^ 0x2996)) & 0x4C44) + 9762) >> 8) ^ 0x26)) ^ 0x9FLL))) ^ *(_BYTE *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (((unsigned __int16)((v115 ^ 0x7AF) - ((2 * (v115 ^ 0x7AF)) & 0x768) + 948) >> 8) ^ 3)) ^ 0x9FLL) + 4)) ^ 0x9BLL)) ^ 0x9FLL)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (((unsigned __int16)((v139 ^ 0x732) - ((2 * (v139 ^ 0x732)) & 0x5DD8) - 20756) >> 8) ^ 0xAELL)) ^ 0x9FLL)) >> 24);
  v150 = *(unsigned int *)(v77
                         + 8
                         * (*(unsigned __int8 *)(v67
                                               + (((unsigned __int16)((v146 ^ 0xB01)
                                                                                     - ((2 * (v146 ^ 0xB01)) & 0x2EEE)
                                                                                     + 6007) >> 8) ^ 0x17)) ^ 0x9FLL)
                         + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (BYTE1(v148) ^ 7)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((((v139 ^ 0x4A090732) - ((2 * (v139 ^ 0x4A090732)) & 0x23ED5DD8) + 301379308) >> 16) ^ 0xF6)) ^ 0x9FLL)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((((v138 ^ 0x1FCA74CD) - 2 * ((v138 ^ 0x1FCA74CD) & 0x3852297F ^ v138 & 2) + 944908669) >> 16) ^ 0x52)) ^ 0x9FLL)) >> 24);
  LODWORD(v137) = (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((v149 >> 24) ^ 0x47E730A311)) ^ 0x9FLL)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (BYTE2(v148) ^ 0x60)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((((v138 ^ 0x1FCA74CDLL) - 2 * ((v138 ^ 0x1FCA74CDLL) & 0x3852297F ^ v138 & 2) - 0x41D4BF9BC7ADD683) >> 24) ^ 0xBE2B406438)) ^ 0x9FLL)) >> 24);
  v151 = (v114 ^ 0xC2B8A894)
       - ((2 * (v114 ^ 0xC2B8A894)) & 0x1E217D4B6)
       + 0x759E1661F10BEA5BLL;
  LODWORD(v137) = v137 ^ *(_DWORD *)(v77
                                   + 8
                                   * (*(unsigned __int8 *)(v67
                                                         + ((((v146 ^ 0x95EF0B01)
                                                                             - ((2 * (v146 ^ 0x95EF0B01)) & 0x85342EEE)
                                                                             + 1117394807) >> 16) ^ 0x9ALL)) ^ 0x9FLL)
                                   + 4);
  LODWORD(v116) = *(unsigned __int8 *)(v67
                                     + ((((v114 ^ 0xC2B8A894)
                                                         - ((2 * (v114 ^ 0xC2B8A894)) & 0xE217D4B6)
                                                         - 250877349) >> 16) ^ 0xBLL));
  v152 = *(unsigned __int8 *)(v67
                            + ((((v150 ^ 0x9AF33156)
                                                - ((2 * (v150 ^ 0x9AF33156)) & 0x5CF2AE1E)
                                                - 1367779569) >> 16) ^ 0x79));
  v153 = *(unsigned __int8 *)(v67 + (BYTE3(v150) ^ 0x9ALL));
  v154 = *(unsigned __int8 *)(v67
                            + (((unsigned __int16)((v137 ^ 0x36F0)
                                                                  - 2 * ((v137 ^ 0x36F0) & 0x6BAE ^ v137 & 2)
                                                                  + 27564) >> 8) ^ 0x6BLL));
  v155 = *(unsigned __int8 *)(v67
                            + (((unint64_t)((v137 ^ 0x212236F0)
                                                                  - 2
                                                                  * ((v137 ^ 0x212236F0) & 0x8A3B6BAE ^ v137 & 2)
                                                                  - 1975817300) >> 16) ^ 0x3BLL));
  v156 = *(unsigned __int8 *)(v67 + (v150 ^ 0x56));
  LODWORD(v150) = (*(_QWORD *)(v77
                             + 8
                             * (((((v116 ^ 0x3F85EFB7)
                                 - 1065742263
                                 + ((2 * (_DWORD)v116) & 0x16E)
                                 - (v116 ^ 0x83)) ^ 0xFFFFFFFE)
                               + (v116 ^ 0x3F85EFB7)
                               - 1065742263
                               + ((2 * (_DWORD)v116) & 0x16E)) ^ 0x1C)) >> 16) ^ (*(_QWORD *)(v77
                                                                                            + 8
                                                                                            * (*(unsigned __int8 *)(v67 + (v144 ^ 0xC2)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (((unsigned __int16)((v150 ^ 0x3156) - ((2 * (v150 ^ 0x3156)) & 0xAE1E) + 22287) >> 8) ^ 0x57)) ^ 0x9FLL)) >> 24) ^ *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((((v137 ^ 0x212236F0) - 2 * ((v137 ^ 0x212236F0) & 0x8A3B6BAELL ^ (unint64_t)(v137 & 2)) - 0x46263D5D75C49454) >> 24) ^ 0xB9D9C2A28ALL)) ^ 0x9FLL) + 4);
  LODWORD(v137) = *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((v151 >> 24) ^ 0x759E1661F1)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (v152 ^ 0x9F)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (v137 ^ 0xF0)) ^ 0x9FLL)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (((unsigned __int16)((v144 ^ 0xC1C2) - ((2 * (v144 ^ 0xC1C2)) & 0x2530) + 4760) >> 8) ^ 0x12)) ^ 0x9FLL)) >> 24);
  LODWORD(v114) = (*(_QWORD *)(v77
                             + 8
                             * (*(unsigned __int8 *)(v67
                                                   + ((((v144 ^ 0x7AA2C1C2)
                                                                       - ((2 * (v144 ^ 0x7AA2C1C2)) & 0x84202530)
                                                                       + 1108349592) >> 16) ^ 0x10)) ^ 0x9FLL)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (v154 ^ 0x9F)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (v114 ^ 0x94)) ^ 0x9FLL)) >> 24) ^ (((*(_QWORD *)(v77 + 8 * (v153 ^ 0x9F)) ^ 0xDBFDFA7106D222FLL) + 0x7D5554D9612B175DLL + ((2 * *(_QWORD *)(v77 + 8 * (v153 ^ 0x9F))) & 0xFAAAA9B2C2562EB8 ^ 0xE5D556FDFFADFBE7)) >> 32);
  v157 = (v150 ^ 0x3D2FC777)
       - ((2 * (v150 ^ 0x3D2FC777)) & 0xEDD9252C)
       - 0x63AFCFBC89136D6ALL;
  LODWORD(v155) = (*(_QWORD *)(v77
                             + 8
                             * (*(unsigned __int8 *)(v67
                                                   + ((((v144 ^ 0x7AA2C1C2)
                                                      - (unint64_t)((2 * (v144 ^ 0x7AA2C1C2)) & 0x84202530)
                                                      - 0x63B191F0BDEFED68) >> 24) ^ 0x9C4E6E0F42)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (v155 ^ 0x9F)) >> 16) ^ *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (BYTE1(v151) ^ 0xEALL)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (v156 ^ 0x9F)) >> 8);
  v158 = *(unsigned __int8 *)(v67 + (v150 ^ 0x77));
  LODWORD(v150) = *(_DWORD *)(v77
                            + 8
                            * (*(unsigned __int8 *)(v67
                                                  + ((((v137 ^ 0x72709AD9)
                                                                      - ((2 * (v137 ^ 0x72709AD9)) & 0x3DB59E60)
                                                                      + 517656368) >> 16) ^ 0xDALL)) ^ 0x9FLL)
                            + 4) ^ (*(_QWORD *)(v77
                                              + 8
                                              * (*(unsigned __int8 *)(v67
                                                                    + ((((v150 ^ 0x3D2FC777)
                                                                                        - ((2
                                                                                          * (v150 ^ 0x3D2FC777)) & 0xEDD9252C)
                                                                                        + 1995215510) >> 16) ^ 0xECLL)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (((unsigned __int16)((v114 ^ 0x7992) - 2 * ((v114 ^ 0x7992) & 0xA3BD ^ v114 & 0x20) - 23651) >> 8) ^ 0xA3)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((((v155 ^ 0x940826F6) - ((2 * (v155 ^ 0x940826F6)) & 0xF029D96) + 125914827) >> 16) ^ 0x81)) ^ 0x9FLL)) >> 16);
  LODWORD(v156) = (*(_QWORD *)(v77
                             + 8
                             * (*(unsigned __int8 *)(v67
                                                   + (((unint64_t)((v114 ^ 0x90717992)
                                                                                         - 2
                                                                                         * ((v114 ^ 0x90717992) & 0xFB5CA3BD ^ v114 & 0x20)
                                                                                         - 77814883) >> 16) ^ 0x5CLL)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((((v137 ^ 0x72709AD9) - (unint64_t)((2 * (v137 ^ 0x72709AD9)) & 0x3DB59E60) + 0x388CD61D1EDACF30) >> 24) ^ 0x388CD61D1ELL)) ^ 0x9FLL)) >> 16) ^ *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((((v155 ^ 0x940826F6) - (unint64_t)((2 * (v155 ^ 0x940826F6)) & 0xF029D96) + 0x5D71FDEF07814ECBLL) >> 24) ^ 0x5D71FDEF07)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((v157 >> 24) ^ 0x9C50304376)) ^ 0x9FLL)) >> 8);
  LODWORD(v97) = (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (v155 ^ 0xF6)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((((v114 ^ 0x90717992) - 2 * ((v114 ^ 0x90717992) & 0xFB5CA3BDLL ^ (unint64_t)(v114 & 0x20)) + 0x6E0E86CDFB5CA39DLL) >> 24) ^ 0x6E0E86CDFBLL)) ^ 0x9FLL)) >> 16) ^ *(_DWORD *)(v77 + 8 * (v158 ^ 0x9F) + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (v137 ^ 0xD9)) ^ 0x9FLL)) >> 8);
  LODWORD(v151) = *(_DWORD *)(v77
                            + 8
                            * (*(unsigned __int8 *)(v67
                                                  + (((unsigned __int16)((v155 ^ 0x26F6)
                                                                                        - ((2 * (v155 ^ 0x26F6)) & 0x9D96)
                                                                                        + 20171) >> 8) ^ 0x4ELL)) ^ 0x9FLL)
                            + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (BYTE1(v157) ^ 0x92)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (((unsigned __int16)((v137 ^ 0x9AD9) - ((2 * (v137 ^ 0x9AD9)) & 0x9E60) - 12496) >> 8) ^ 0xCFLL)) ^ 0x9FLL)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (v114 ^ 0x92)) ^ 0x9FLL)) >> 24);
  v159 = *(unsigned __int8 *)(v67 + (v150 ^ 7));
  v160 = (v97 ^ 0xB3A22EF5)
       - 0x4E158E264FA37929
       + (~(2 * (v97 ^ 0xB3A22EF5)) | 0xFFFFFFFE9F46F253);
  v161 = (v150 ^ 0xED7A0907)
       - ((2 * (v150 ^ 0xED7A0907)) & 0xF94D8260)
       + 0x2D1A2867CA6C130;
  v162 = *(unsigned __int8 *)(v67 + (BYTE2(v161) ^ 0xA6));
  v163 = *(unsigned __int8 *)(v67 + ((v161 >> 24) ^ 0x2D1A2867CLL));
  v164 = *(unsigned int *)(v77 + 8 * (v159 ^ 0x9F) + 4) ^ (*(_QWORD *)(v77
                                                                     + 8
                                                                     * (*(unsigned __int8 *)(v67
                                                                                           + (v156 ^ 0x7ELL)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((v160 >> 24) ^ 0xB1EA71D9B0)) ^ 0x9FLL)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (v151 ^ 0x2CLL)) ^ 0x9FLL)) >> 24);
  LODWORD(v161) = (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (v97 ^ 0xF5)) ^ 0x9FLL)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (((unsigned __int16)((v156 ^ 0xA37E) - ((2 * (v156 ^ 0xA37E)) & 0xB69E) - 9393) >> 8) ^ 0xDBLL)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (((unsigned __int16)((v151 ^ 0x782C) - ((2 * (v151 ^ 0x782C)) & 0x32F6) + 6523) >> 8) ^ 0x19)) ^ 0x9FLL)) >> 24) ^ *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (BYTE1(v161) ^ 0xC1)) ^ 0x9FLL) + 4);
  LODWORD(v144) = (*(_QWORD *)(v77
                             + 8
                             * (*(unsigned __int8 *)(v67
                                                   + ((((v151 ^ 0x462D782C)
                                                                       - ((2 * (v151 ^ 0x462D782C)) & 0xBB5032F6)
                                                                       + 1571297659) >> 16) ^ 0xA8)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (BYTE1(v160) ^ 0x86)) ^ 0x9FLL)) >> 16) ^ *(_DWORD *)(v77 + 8 * (v162 ^ 0x9F) + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((((v156 ^ 0xF6F0A37E) - ((2 * (v156 ^ 0xF6F0A37E)) & 0xF87FB69E) + 2084559695) >> 16) ^ 0x3FLL)) ^ 0x9FLL)) >> 8);
  LODWORD(v160) = (*(_QWORD *)(v77 + 8 * (v163 ^ 0x9F)) >> 16) ^ (*(_QWORD *)(v77
                                                                            + 8
                                                                            * (*(unsigned __int8 *)(v67
                                                                                                  + ((((v151 ^ 0x462D782CLL) - (unint64_t)((2 * (v151 ^ 0x462D782C)) & 0xBB5032F6) + 0x66E633E55DA8197BLL) >> 24) ^ 0x66E633E55DLL)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + ((((v156 ^ 0xF6F0A37ELL) - (unint64_t)((2 * (v156 ^ 0xF6F0A37E)) & 0xF87FB69E) - 0x1D3044A783C024B1) >> 24) ^ 0xE2CFBB587CLL)) ^ 0x9FLL)) >> 24) ^ *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(v67 + (BYTE2(v160) ^ 0x5CLL)) ^ 0x9FLL) + 4);
  LODWORD(v156) = (v160 ^ 0xCAD705F8) + 1219259074 - 2 * ((v160 ^ 0xCAD705F8) & 0x48AC6AC6 ^ v160 & 4);
  v165 = (v164 ^ 0xC93E6E08)
       - 2 * ((v164 ^ 0xC93E6E08) & 0xE7FC993FLL ^ v164 & 0x22)
       - 0x3E1EE2D1180366E3;
  LODWORD(v155) = ((2 * ((((v156 ^ 0xD3145F25) + (v156 ^ 0x91F8C89A) + 1) ^ 0xFFFFFF80) + (v156 ^ 0x91F8C89A))) & 0xEFBBFFFC)
                + (((((v156 ^ 0xD3145F25) + (v156 ^ 0x91F8C89A) + 1) ^ 0xFFFFFF80) + (v156 ^ 0x91F8C89A)) ^ 0xF7DDFFFE);
  v166 = (v155 + 136445954)
       - ((2 * (v155 + 136445954)) & 0x1795E8732)
       - 0x188825F54350BC67;
  v167 = *(unsigned __int8 *)(a58 + (v164 ^ 8));
  LODWORD(v146) = *(unsigned __int8 *)(a58
                                     + (((unsigned __int16)((v164 ^ 0x6E08)
                                                                           - 2
                                                                           * ((v164 ^ 0x6E08) & 0x993F ^ v164 & 0x22)
                                                                           - 26339) >> 8) ^ 0x99));
  v168 = *(unsigned __int8 *)(a58
                            + ((((v144 ^ 0x31E6C95B)
                                                - ((2 * (v144 ^ 0x31E6C95B)) & 0x24B2CE46)
                                                - 1839634653) >> 16) ^ 0x59));
  v169 = *(unsigned __int8 *)(a58 + (v161 ^ 0x1BLL));
  LODWORD(v164) = (*(_QWORD *)(v77
                             + 8
                             * (*(unsigned __int8 *)(a58
                                                   + (((unsigned __int16)((v161 ^ 0x681B)
                                                                                         - ((2 * (v161 ^ 0x681B)) & 0x6064)
                                                                                         - 20430) >> 8) ^ 0xB0)) ^ 0x9FLL)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((v165 >> 24) ^ 0xC1E11D2EE7)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((((v144 ^ 0x31E6C95BLL) - ((2 * (v144 ^ 0x31E6C95BLL)) & 0x124B2CE46uLL) - 0x4967013D6DA698DDLL) >> 24) ^ 0xB698FEC292)) ^ 0x9FLL)) >> 24) ^ *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((v166 >> 24) ^ 0xE777DA0ABCLL)) ^ 0x9FLL) + 4);
  LODWORD(v160) = *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (v144 ^ 0x5BLL)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((((v161 ^ 0xC44C681B) - ((2 * (v161 ^ 0xC44C681B)) & 0xA3A16064) + 1372631090) >> 16) ^ 0xD0)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (v155 + 2)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (v167 ^ 0x9F)) >> 16);
  LODWORD(v161) = *(_DWORD *)(v77
                            + 8
                            * (*(unsigned __int8 *)(a58
                                                  + (((unsigned __int16)((v144 ^ 0xC95B)
                                                                                        - ((2 * (v144 ^ 0xC95B)) & 0xCE46)
                                                                                        + 26403) >> 8) ^ 0x67)) ^ 0x9FLL)
                            + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (BYTE1(v166) ^ 0x43)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * ((((2 * (_DWORD)v146) & 0xFFFFFFDF) + (v146 ^ 0x3F9BFEEF) - ((2 * (((2 * (_DWORD)v146) & 0xFFFFFFDF) + (v146 ^ 0x3F9BFEEF)) + 34) & 0x106) - 1067187820) ^ 0x1C)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((((v161 ^ 0xC44C681BLL) - (unint64_t)((2 * (v161 ^ 0xC44C681B)) & 0xA3A16064) - 0x55E6D2AAE2F4FCELL) >> 24) ^ 0xFAA192D551)) ^ 0x9FLL)) >> 24);
  v170 = *(unsigned int *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (BYTE2(v166) ^ 0xAFLL)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (BYTE2(v165) ^ 0xFCLL)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (v169 ^ 0x9F)) >> 16);
  v171 = (v164 ^ 0x2EA33FC2)
       - ((2 * (v164 ^ 0x2EA33FC2)) & 0x7F688568)
       - 0x7DE777F7C04BBD4CLL;
  v172 = v170 ^ (*(_QWORD *)(v77 + 8 * (v168 ^ 0x9F)) >> 24);
  v173 = (v172 ^ 0x88058186)
       - 2 * ((v172 ^ 0x88058186) & 0xDD56317ALL ^ v172 & 0x28)
       + 0x3659B902DD563152;
  v174 = *(unsigned __int8 *)(a58 + (v164 ^ 0xC2));
  LODWORD(v164) = (*(_QWORD *)(v77
                             + 8
                             * (*(unsigned __int8 *)(a58
                                                   + ((((v160 ^ 0x24E24639)
                                                      - (unint64_t)((2 * (v160 ^ 0x24E24639)) & 0x7C10C8EC)
                                                      - 0x4B983A18C1F79B8ALL) >> 24) ^ 0xB467C5E73ELL)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((((v164 ^ 0x2EA33FC2) - ((2 * (v164 ^ 0x2EA33FC2)) & 0x7F688568) + 1068778164) >> 16) ^ 0xB4)) ^ 0x9FLL)) >> 16) ^ *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (((unsigned __int16)((v161 ^ 0xD6F3) - 2 * ((v161 ^ 0xD6F3) & 0xE35B ^ v161 & 8) - 7341) >> 8) ^ 0xE3)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((v170 ^ BYTE3(*(_QWORD *)(v77 + 8 * (v168 ^ 0x9F)))) ^ 0x86)) ^ 0x9FLL)) >> 8);
  v175 = (*(_QWORD *)(v77
                    + 8
                    * (*(unsigned __int8 *)(a58
                                          + ((((v161 ^ 0xC0DFD6F3)
                                                              - 2
                                                              * ((v161 ^ 0xC0DFD6F3) & 0xE94BE35B ^ v161 & 8)
                                                              - 380902573) >> 16) ^ 0x4BLL)) ^ 0x9FLL)) >> 16) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (v160 ^ 0x39)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (BYTE1(v173) ^ 0x31)) ^ 0x9FLL)) >> 24);
  LODWORD(v155) = *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (BYTE2(v173) ^ 0x56)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((((v161 ^ 0xC0DFD6F3) - 2 * ((v161 ^ 0xC0DFD6F3) & 0xE94BE35BLL ^ v161 & 8) + 0x652D4277E94BE353) >> 24) ^ 0x652D4277E9)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (v174 ^ 0x9F)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (((unsigned __int16)((v160 ^ 0x4639) - ((2 * (v160 ^ 0x4639)) & 0xC8EC) + 25718) >> 8) ^ 0x64)) ^ 0x9FLL)) >> 16);
  LODWORD(v161) = *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (BYTE1(v171) ^ 0x42)) ^ 0x9FLL) + 4) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((v173 >> 24) ^ 0x3659B902DDLL)) ^ 0x9FLL)) >> 24) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((((v160 ^ 0x24E24639) - ((2 * (v160 ^ 0x24E24639)) & 0x7C10C8EC) + 1040737398) >> 16) ^ 8)) ^ 0x9FLL)) >> 8) ^ (*(_QWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + (v161 ^ 0xF3)) ^ 0x9FLL)) >> 16);
  LODWORD(v175) = v175 ^ *(_DWORD *)(v77 + 8 * (*(unsigned __int8 *)(a58 + ((v171 >> 24) ^ 0x821888083FLL)) ^ 0x9FLL) + 4);
  LODWORD(v174) = STACK[0x408];
  LODWORD(STACK[0x390]) = *(unsigned __int8 *)(a58
                                             + (((unsigned __int16)((v164 ^ 0x6EFA)
                                                                                   - ((2 * (v164 ^ 0x6EFA)) & 0x9C20)
                                                                                   - 12784) >> 8) ^ 0xCELL));
  LODWORD(STACK[0x3A8]) = *(unsigned __int8 *)(a58
                                             + ((((v155 ^ 0xFCB64C23)
                                                                 - ((2 * (v155 ^ 0xFCB64C23)) & 0x4EB3FC82)
                                                                 - 1487274431) >> 16) ^ 0x59));
  STACK[0x388] = *(unsigned __int8 *)(a58
                                    + (((unsigned __int16)((v175 ^ 0x53C9)
                                                                          - 2 * ((v175 ^ 0x53C9) & 0x4D3B ^ v175 & 2)
                                                                          + 19769) >> 8) ^ 0x4DLL));
  LODWORD(STACK[0x3B0]) = *(unsigned __int8 *)(a58
                                             + (((unsigned __int16)((v161 ^ 0xF9F0)
                                                                                   - ((2 * (v161 ^ 0xF9F0)) & 0x6172)
                                                                                   + 12473) >> 8) ^ 0x30));
  LODWORD(v77) = *(unsigned __int8 *)(a58
                                    + ((((v161 ^ 0x240FF9F0)
                                                        - ((2 * (v161 ^ 0x240FF9F0)) & 0x57AE6172)
                                                        - 1411960647) >> 16) ^ 0xD7));
  LODWORD(v171) = v174 ^ ((2 * (STACK[0x428] & 1)) | ((STACK[0x428] & 1) << 8));
  LODWORD(STACK[0x380]) = *(unsigned __int8 *)(a58 + (BYTE2(v175) ^ 0xE7));
  v176 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x338] + 8 * (int)v171) - 8);
  LODWORD(STACK[0x398]) = *(unsigned __int8 *)(a58
                                             + ((((v155 ^ 0xFCB64C23)
                                                - ((2 * (v155 ^ 0xFCB64C23)) & 0x14EB3FC82uLL)
                                                + 0x46C2A98BA759FE41) >> 24) ^ 0x46C2A98BA7));
  LODWORD(STACK[0x3C8]) = *(unsigned __int8 *)(a58 + (v155 ^ 0x23));
  v177 = LODWORD(STACK[0x214]);
  v178 = LODWORD(STACK[0x304]);
  v179 = *(unsigned __int8 *)(a58
                            + ((((v161 ^ 0x240FF9F0)
                               - ((2 * (v161 ^ 0x240FF9F0)) & 0x157AE6172uLL)
                               + 0x3D73DF51ABD730B9) >> 24) ^ 0x3D73DF51ABLL));
  LODWORD(STACK[0x3A0]) = *(unsigned __int8 *)(a58
                                             + ((((v164 ^ 0x7FCE6EFA)
                                                                 - ((2 * (v164 ^ 0x7FCE6EFA)) & 0xA2B39C20)
                                                                 + 1364839952) >> 16) ^ 0x59));
  v180 = *(unsigned __int8 *)(a58 + (v161 ^ 0xF0));
  v181 = *(unsigned __int8 *)(a58 + (v164 ^ 0xFALL));
  LODWORD(v127) = *(unsigned __int8 *)(a58 + (v175 ^ 0xC9));
  v182 = LODWORD(STACK[0x234]);
  LODWORD(STACK[0x3B8]) = *(unsigned __int8 *)(a58
                                             + ((((v164 ^ 0x7FCE6EFALL)
                                                - (unint64_t)((2 * (v164 ^ 0x7FCE6EFA)) & 0xA2B39C20)
                                                + 0x319477835159CE10) >> 24) ^ 0x3194778351));
  LODWORD(v173) = *(unsigned __int8 *)(a58
                                     + ((((v175 ^ 0xE6E753C9)
                                        - 2
                                        * ((v175 ^ 0xE6E753C9) & 0xBB514D3BLL ^ (unint64_t)(v175 & 2))
                                        + 0x5F92F2DBB514D39) >> 24) ^ 0x5F92F2DBBLL));
  v183 = LODWORD(STACK[0x220]);
  LODWORD(STACK[0x3F8]) = *(unsigned __int8 *)(a58
                                             + (((unsigned __int16)((v155 ^ 0x4C23)
                                                                                   - ((2 * (v155 ^ 0x4C23)) & 0xFC82)
                                                                                   - 447) >> 8) ^ 0xFELL));
  LODWORD(STACK[0x3F0]) = v127;
  LODWORD(STACK[0x3E8]) = v77;
  LODWORD(STACK[0x3E0]) = v181;
  LODWORD(STACK[0x3D8]) = v180;
  LODWORD(STACK[0x3D0]) = v179;
  LODWORD(STACK[0x3C0]) = v173;
  return v176(v182, v183, v177, v178);
}

uint64_t sub_1CF2AB998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * ((LODWORD(STACK[0x378]) + 367) ^ (477 * (v5 & 1))))
                                                                                                - 8))(81, 192, 224, 183, a5, 155, 245);
}

uint64_t sub_1CF2ABA00()
{
  int v0;
  unint64_t v1;
  int v2;
  unint64_t v3;
  int v4;
  int v5;
  unint64_t v6;
  char v7;
  int v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  char v23;
  int v24;
  int v25;
  unsigned int v26;
  uint64_t v27;

  v0 = STACK[0x378];
  LODWORD(STACK[0x408]) = LODWORD(STACK[0x378]) + 943;
  v1 = STACK[0x410];
  STACK[0x368] = (v0 + 1056) ^ STACK[0x410];
  HIDWORD(v3) = STACK[0x370];
  LODWORD(v3) = (v1 ^ 0x30) << 24;
  v2 = v3 >> 28;
  HIDWORD(v3) = v2 ^ 4;
  LODWORD(v3) = (v2 ^ 0xFFFFFFBF) << 24;
  STACK[0x378] = v1 ^ 0x27;
  v4 = STACK[0x408];
  v5 = (LODWORD(STACK[0x408]) - 1061252661) & 0x3F416BDD;
  LODWORD(STACK[0x400]) = v5;
  v6 = STACK[0x418];
  v7 = *(_BYTE *)(STACK[0x418] + (v1 ^ 0xD3));
  v8 = *(unsigned __int8 *)(STACK[0x418] + (v1 ^ 0x23));
  v9 = *(_BYTE *)(STACK[0x418] + (v1 ^ 0x2Au ^ (v5 - 71)));
  v10 = *(unsigned __int8 *)(STACK[0x418] + (v1 ^ 0x33));
  LODWORD(STACK[0x308]) = *(unsigned __int8 *)(STACK[0x418] + (v1 ^ 0x8FLL));
  LODWORD(STACK[0x318]) = *(unsigned __int8 *)(v6 + ((v3 >> 28) ^ 0x82));
  v11 = STACK[0x378] ^ 0x6BLL;
  LODWORD(STACK[0x310]) = *(unsigned __int8 *)(v6 + (v1 ^ 0xB4));
  LODWORD(STACK[0x320]) = *(unsigned __int8 *)(v6 + v11);
  LODWORD(STACK[0x330]) = *(unsigned __int8 *)(v6 + (v1 ^ 0x75));
  LODWORD(STACK[0x340]) = *(unsigned __int8 *)(v6 + (v1 ^ 0x72));
  LODWORD(STACK[0x358]) = *(unsigned __int8 *)(v6 + (v1 ^ 0xD0));
  LODWORD(STACK[0x360]) = *(unsigned __int8 *)(v6 + (v1 ^ 0xDBLL));
  LODWORD(STACK[0x370]) = *(unsigned __int8 *)(v6 + (v1 ^ 0x6ELL));
  LODWORD(STACK[0x378]) = *(unsigned __int8 *)(v6 + (STACK[0x368] ^ 0x81));
  LODWORD(STACK[0x368]) = *(unsigned __int8 *)(v6 + (v1 ^ 0x56));
  LOBYTE(v6) = (LOBYTE(STACK[0x3A8]) ^ 0x6F) - ((2 * (LOBYTE(STACK[0x3A8]) ^ 0x6F)) & 0xDD);
  v12 = (v8 ^ 0xC2) + (STACK[0x388] ^ 0x87) - 2 * ((v8 ^ 0xC2) & (STACK[0x388] ^ 0x87));
  v13 = ((2 * LODWORD(STACK[0x3B0])) & 0x1FC ^ 0x1DC) + (LODWORD(STACK[0x3B0]) ^ 0xF7FFF711);
  v14 = (LOBYTE(STACK[0x398]) ^ 0x83) - ((2 * (LOBYTE(STACK[0x398]) ^ 0x83)) & 0xDC);
  v15 = (LOBYTE(STACK[0x3E8]) ^ 0xF2) - 2 * ((LOBYTE(STACK[0x3E8]) ^ 0xF2) & 0x6F ^ STACK[0x3E8] & 1);
  v16 = (LOBYTE(STACK[0x3C8]) ^ 0xF6) + ~(2 * ((LOBYTE(STACK[0x3C8]) ^ 0xF6) & 0x6F ^ STACK[0x3C8] & 1));
  v17 = (LOBYTE(STACK[0x3E0]) ^ 0xBB) - ((2 * (LOBYTE(STACK[0x3E0]) ^ 0xBB)) & 0xDC);
  v18 = (uint64_t)*(&off_1E8C4D9A0 + (int)(v4 & 0xF97C2ACC));
  HIDWORD(v3) = *(unsigned __int8 *)(v18
                                   + (((LOBYTE(STACK[0x390]) ^ 0x31)
                                                      + (~(2 * (LOBYTE(STACK[0x390]) ^ 0x31)) | 0x23)
                                                      - 17) ^ v7 ^ 0xD0));
  LODWORD(v3) = (HIDWORD(v3) ^ 0xAAAAAAAA) << 24;
  v19 = (v3 >> 28) - ((2 * (v3 >> 28)) & 0xFFFFFFCF);
  HIDWORD(v3) = *(unsigned __int8 *)(v18 + (v12 ^ 0xFC));
  LODWORD(v3) = (HIDWORD(v3) ^ 0xAAAAAAAA) << 24;
  LODWORD(STACK[0x410]) = (4 * ((v19 + 103) ^ 0x27) * ((v19 + 103) ^ 0x27)
                         - ((8 * ((v19 + 103) ^ 0x27) * ((v19 + 103) ^ 0x27)) & 0xFFFFFFCF)
                         + 103) ^ (v19 + 103);
  LODWORD(v12) = (v3 >> 28) - ((2 * (v3 >> 28)) & 8) + 4;
  LODWORD(STACK[0x418]) = ((~(8 * (v12 ^ 4) * (v12 ^ 4)) | 0xFFFFFFF7) + 4 * (v12 ^ 4) * (v12 ^ 4) + 5) ^ v12;
  HIDWORD(v3) = *(unsigned __int8 *)(v18 + ((v6 - 18) ^ v9 ^ 0xD0));
  LODWORD(v3) = (HIDWORD(v3) ^ 0xAAAAAAAA) << 24;
  LODWORD(v12) = (v3 >> 28) - ((2 * (v3 >> 28)) & 0xFFFFFFFB) - 3;
  v20 = (~(8 * (v12 ^ 0x3D) * (v12 ^ 0x3D)) + 4 * (v12 ^ 0x3D) * (v12 ^ 0x3D) - 2) ^ v12;
  HIDWORD(v3) = *(unsigned __int8 *)(v18 + ((v13 + (v10 ^ 0xC2) - 2 * ((v10 ^ 0xC2) & (v13 + 2)) + 134219778) ^ 0xFCLL));
  LODWORD(v3) = (HIDWORD(v3) ^ 0xAAAAAAAA) << 24;
  v21 = (v3 >> 28) - 4 * ((v3 >> 28) >> 1) - 2;
  HIDWORD(v3) = *(unsigned __int8 *)(v18 + ((v14 - 18) ^ LODWORD(STACK[0x308]) ^ 0xD0));
  LODWORD(v3) = (HIDWORD(v3) ^ 0xAAAAAAAA) << 24;
  v22 = (v3 >> 28) - ((2 * (v3 >> 28)) & 0xFFFFFF9F) + 79;
  v23 = v16 - 17;
  HIDWORD(v3) = *(unsigned __int8 *)(v18 + ((v15 - 18) ^ LODWORD(STACK[0x310]) ^ 0xD0));
  LODWORD(v3) = (HIDWORD(v3) ^ 0xAAAAAAAA) << 24;
  v24 = (v3 >> 28) - ((2 * (v3 >> 28)) & 0x64) - 78;
  v25 = (4 * (v24 ^ 0x32) * (v24 ^ 0x32) - ((8 * (v24 ^ 0x32) * (v24 ^ 0x32)) & 0x60) - 78) ^ v24;
  HIDWORD(v3) = *(unsigned __int8 *)(v18 + (v23 ^ LODWORD(STACK[0x320]) ^ 0xD0));
  LODWORD(v3) = (HIDWORD(v3) ^ 0xAAAAAAAA) << 24;
  v26 = (v3 >> 28) - ((2 * (v3 >> 28)) & 0x56) - 85;
  HIDWORD(v3) = *(unsigned __int8 *)(v18 + ((v17 - 18) ^ LODWORD(STACK[0x370]) ^ 0xD0));
  LODWORD(v3) = (HIDWORD(v3) ^ 0xAAAAAAAA) << 24;
  LODWORD(v12) = (v3 >> 28) + (~(2 * (v3 >> 28)) | 0xFFFFFFC3) - 97;
  LODWORD(STACK[0x3F0]) = v20;
  v27 = (-4 * (v21 ^ 0x3E) * (v21 ^ 0x3E) - 2) ^ v21;
  STACK[0x2C8] = v27 ^ 0x45;
  LODWORD(STACK[0x3F8]) = (4 * (v22 ^ 0xF) * (v22 ^ 0xF) - ((8 * (v22 ^ 0xF) * (v22 ^ 0xF)) & 0xFFFFFF9F) + 79) ^ v22;
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t))(STACK[0x338]
                                                                    + 8
                                                                    * (LODWORD(STACK[0x408]) ^ (99 * (STACK[0x428] & 1)))))((4 * (v26 ^ 0x2B) * (v26 ^ 0x2B) - ((8 * (v26 ^ 0x2B) * (v26 ^ 0x2B)) & 0x50) - 85) ^ v26, (4 * (v12 ^ 0x1E) * (v12 ^ 0x1E)- 8 * (((v12 ^ 0x1E) * (v12 ^ 0x1E)) & 7)- 98) ^ v12 ^ 0xFFFFFFA7, v25 ^ 0xFFFFFFDA, v27);
}

void sub_1CF2AC66C()
{
  LODWORD(STACK[0x420]) = 0;
  STACK[0x250] += 16;
  LODWORD(STACK[0x428]) = 1;
  JUMPOUT(0x1CF2A7F64);
}

uint64_t sub_1CF2AC73C@<X0>(int a1@<W0>, unint64_t a2@<X1>, unint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W8>)
{
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  int v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  unint64_t v24;
  unint64_t v25;

  LODWORD(STACK[0x3B8]) = a6;
  LODWORD(STACK[0x3C0]) = a7;
  LODWORD(STACK[0x3C8]) = v11;
  LODWORD(STACK[0x3B0]) = a5;
  LODWORD(STACK[0x3D0]) = v12;
  LODWORD(STACK[0x3D8]) = v14;
  LODWORD(STACK[0x3E0]) = v23;
  LODWORD(STACK[0x3E8]) = a1;
  LODWORD(STACK[0x408]) = a4;
  LODWORD(STACK[0x428]) = v16;
  LODWORD(STACK[0x244]) = v22;
  STACK[0x2A0] = v17;
  STACK[0x258] = v19;
  STACK[0x2B0] = v13;
  STACK[0x2B8] = v8;
  STACK[0x260] = v10;
  STACK[0x268] = v7;
  STACK[0x270] = a2;
  STACK[0x278] = v20;
  STACK[0x280] = v21;
  STACK[0x238] = v24;
  STACK[0x2A8] = v25;
  STACK[0x288] = v15;
  STACK[0x290] = a3;
  STACK[0x298] = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * ((LODWORD(STACK[0x400]) + 481) | (2 * (STACK[0x420] & 1))))
                            - ((LODWORD(STACK[0x400]) + 822) ^ 0x616)))();
}

void sub_1CF2AC7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  char v40;
  char v41;

  *(_BYTE *)(a40 - 0xD34969E05D76D92) = LODWORD(STACK[0x408]) ^ 0x90;
  *(_BYTE *)(a40 - 0xD34969E05D76D93) = v41;
  *(_BYTE *)(a40 - 0xD34969E05D76D8FLL) = a8 ^ 0x90;
  *(_BYTE *)(a40 - 0xD34969E05D76D95) = LODWORD(STACK[0x410]) ^ 0x90;
  *(_BYTE *)(a40 - 0xD34969E05D76D8ELL) = a7 ^ 0x90;
  *(_BYTE *)(a40 - 0xD34969E05D76D91) = LODWORD(STACK[0x428]) ^ 0x90;
  *(_BYTE *)(a40 - 0xD34969E05D76D8DLL) = (((v40 + 107) & 0xDF) + 51) ^ LODWORD(STACK[0x3E8]);
  *(_BYTE *)(a40 - 0xD34969E05D76D8ALL) = LODWORD(STACK[0x3D0]) ^ 0x90;
  *(_BYTE *)(a40 - 0xD34969E05D76D89) = LODWORD(STACK[0x3B0]) ^ 0x90;
  *(_BYTE *)(a40 - 0xD34969E05D76D8CLL) = LODWORD(STACK[0x3E0]) ^ 0x90;
  *(_BYTE *)(a40 - 0xD34969E05D76D94) = LODWORD(STACK[0x418]) ^ 0x90;
  *(_BYTE *)(a40 - 0xD34969E05D76D87) = LODWORD(STACK[0x3B8]) ^ 0x90;
  *(_BYTE *)(a40 - 0xD34969E05D76D86) = LODWORD(STACK[0x3C0]) ^ 0x90;
  *(_BYTE *)(a40 - 0xD34969E05D76D88) = LODWORD(STACK[0x3C8]) ^ 0x90;
  *(_BYTE *)(a40 - 0xD34969E05D76D8BLL) = LODWORD(STACK[0x3D8]) ^ 0x90;
  *(_BYTE *)(a40 - 0xD34969E05D76D90) = LODWORD(STACK[0x3F8]) ^ 0x90;
  JUMPOUT(0x1CF2A47D0);
}

uint64_t sub_1CF2ACA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  char v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;

  *(_BYTE *)(v28 - 0x7DFCD096AD127B33) = v55 ^ 0x90;
  *(_BYTE *)(v28 - 0x7DFCD096AD127B31) = v8;
  *(_BYTE *)(v28 - 0x7DFCD096AD127B2ELL) = v53 ^ 0x90;
  *(_BYTE *)(v28 - 0x7DFCD096AD127B32) = (v9 + 1) ^ v56;
  *(_BYTE *)(v28 - 0x7DFCD096AD127B30) = v54 ^ 0x90;
  *(_BYTE *)(v28 - 0x7DFCD096AD127B2DLL) = a8 ^ 0x90;
  *(_BYTE *)(v28 - 0x7DFCD096AD127B2CLL) = a7 ^ 0x90;
  *(_BYTE *)(v28 - 0x7DFCD096AD127B25) = v46 ^ 0x90;
  *(_BYTE *)(v28 - 0x7DFCD096AD127B2BLL) = v52 ^ 0x90;
  *(_BYTE *)(v28 - 0x7DFCD096AD127B24) = v47 ^ 0x90;
  *(_BYTE *)(v28 - 0x7DFCD096AD127B29) = v50 ^ 0x90;
  *(_BYTE *)(v28 - 0x7DFCD096AD127B2ALL) = v51 ^ 0x90;
  *(_BYTE *)(v28 - 0x7DFCD096AD127B28) = v49 ^ 0x90;
  *(_BYTE *)(v28 - 0x7DFCD096AD127B2FLL) = v57 ^ 0x90;
  *(_BYTE *)(v28 - 0x7DFCD096AD127B27) = v45 ^ 0x90;
  *(_BYTE *)(v28 - 0x7DFCD096AD127B26) = v48 ^ 0x90;
  *(_BYTE *)(v28 - 0x7DFCD096AD127B43) = v18 ^ (((2 * v36) ^ 0x47) + (v36 ^ 0x5C));
  *(_BYTE *)(v28 - 0x7DFCD096AD127B41) = v12 ^ ((v34 ^ 0x11) - 2 * ((v34 ^ 0x11) & 0x16 ^ v34 & 4) - 110);
  *(_BYTE *)(v28 - 0x7DFCD096AD127B40) = v14 ^ ((v33 ^ 0x85) - ((2 * (v33 ^ 0x85)) & 0xAA) - 43);
  *(_BYTE *)(v28 - 0x7DFCD096AD127B42) = v15 ^ ((v35 ^ 0xC) - ((2 * (v35 ^ 0xC)) & 0xA8) + 84);
  *(_BYTE *)(v28 - 0x7DFCD096AD127B3ELL) = v19 ^ ((v31 ^ 0x9A) - ((2 * (v31 ^ 0x9A)) & 0x52) - 87);
  *(_BYTE *)(v28 - 0x7DFCD096AD127B3FLL) = v16 ^ ((v32 ^ 0xA2) - 2 * ((v32 ^ 0xA2) & 0x1F) + 31);
  *(_BYTE *)(v28 - 0x7DFCD096AD127B3CLL) = v13 ^ ((v29 ^ 0x66) - ((2 * (v29 ^ 0x66)) & 0x34) + 26);
  *(_BYTE *)(v28 - 0x7DFCD096AD127B3DLL) = v23 ^ ((v30 ^ 0x27) - ((2 * (v30 ^ 0x27)) & 0x94) + 74);
  *(_BYTE *)(v28 - 0x7DFCD096AD127B3BLL) = v20 ^ ((v44 ^ 0xDC) - 2 * ((v44 ^ 0xDC) & 0x3F) + 63);
  *(_BYTE *)(v28 - 0x7DFCD096AD127B3ALL) = v17 ^ ((v43 ^ 0xC) - ((2 * (v43 ^ 0xC)) & 0x8A) + 69);
  *(_BYTE *)(v28 - 0x7DFCD096AD127B39) = v21 ^ ((v42 ^ 0x11) + (~(2 * v42) | 0x73) + 71);
  *(_BYTE *)(v28 - 0x7DFCD096AD127B38) = v24 ^ ((v41 ^ 0x85) - 2 * ((v41 ^ 0x85) & 0xC7 ^ v41 & 2) + 69);
  *(_BYTE *)(v28 - 0x7DFCD096AD127B36) = v27 ^ ((v39 ^ 0x9A) - ((2 * (v39 ^ 0x9A)) & 0x6E) + 55);
  *(_BYTE *)(v28 - 0x7DFCD096AD127B37) = v22 ^ ((v40 ^ 0xA2) + ~(2 * ((v40 ^ 0xA2) & 7 ^ v40 & 5)) - 125);
  *(_BYTE *)(v28 - 0x7DFCD096AD127B34) = v26 ^ ((v37 ^ 0x66) - 2 * ((v37 ^ 0x66) & 0xCF ^ v37 & 1) - 50);
  *(_BYTE *)(v28 - 0x7DFCD096AD127B35) = v25 ^ ((v38 ^ 0x27) + (~(2 * (v38 ^ 0x27)) | 0x21) - 16);
  result = v11;
  *(_DWORD *)(v11 + 20) = -1393729084;
  return result;
}

void sub_1CF2ACFA8()
{
  unint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v0 = (unint64_t *)*(&off_1E8C4D9A0
                           + (byte_1CF37BD80[byte_1CF37A580[(-79
                                                                                             * ((dword_1EFB8D338
                                                                                               - qword_1EFB8D318) ^ 0x63))] ^ 0x49] ^ (-79 * ((dword_1EFB8D338 - qword_1EFB8D318) ^ 0x63)))
                           - 56);
  v1 = (*v0 ^ qword_1EFB8D318) - (_QWORD)&v4;
  v2 = 565822129 * v1 - 0x145FA26765C3F29DLL;
  v3 = 565822129 * (v1 ^ 0xEBA05D989A3C0D63);
  qword_1EFB8D318 = v2;
  *v0 = v3;
  *(_DWORD *)*(&off_1E8C4D9A0
             + (byte_1CF37A380[byte_1CF37D7B8[(-79 * ((v3 - qword_1EFB8D318) ^ 0x63))
                                                             - 8] ^ 0x98] ^ (-79 * ((v3 - qword_1EFB8D318) ^ 0x63)))
             - 91) = 819828057;
  __asm { BR              X8 }
}

void sub_1CF2AD124(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unsigned int v3;
  _QWORD *v4;
  unint64_t *v5;
  unsigned int *v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  unint64_t v18;
  _QWORD *v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _BYTE *v38;
  _QWORD v39[18];

  v35 = v1;
  *(_QWORD *)(v2[13] - 4) = 0x7C0202938A437A00;
  *(_QWORD *)(v2[73] - 4) = 0x3452201F95571001;
  *(_QWORD *)(v2[54] - 4) = 0;
  *(_QWORD *)(v2[10] - 4) = 0;
  v4 = (_QWORD *)(v2[1] - 12);
  v37 = v2[1] + 4;
  while (1)
  {
    v5 = (unint64_t *)v2[71];
    if (!*v5)
    {
      v6 = (unsigned int *)v2[102];
      do
        v7 = __ldaxr(v6);
      while (__stlxr(v3, v6));
      if (v7)
      {
        v8 = 0;
        while (1)
        {
          if (!*v6)
          {
            do
              v9 = __ldaxr(v6);
            while (__stlxr(v3, v6));
            if (!v9)
              break;
          }
          if ((++v8 & 0x3F) == 0)
            ((void (*)(void))v2[58])();
        }
      }
      if (!*v5)
      {
        v5[1] = ((uint64_t (*)(uint64_t))v2[61])(29);
        *((_OWORD *)v5 + 1) = xmmword_1CF37DAB0;
        v5[4] = 0x200000;
        *((_DWORD *)v5 + 10) = 7;
        v39[1] = (unint64_t)v39 ^ 0x55555558;
        *v5 = (unint64_t)v39 ^ 0x55555558;
      }
      atomic_store(0, v6);
    }
    if (v5[1] == -1040
      || (v10 = v2[76] - 8,
          v11 = v2[32] - 4,
          v12 = (2 * v5[2] - 1) & -(uint64_t)v5[2],
          v13 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))v2[(*(_BYTE *)(v11 + (*(unsigned __int8 *)(v10 + (-79 * ((*v38 - qword_1EFB8D318) ^ 0x63))) ^ 0x65u)) ^ (-79 * ((*v38 - qword_1EFB8D318) ^ 0x63)))
                                                                                              - 14])(0, v12, 3, 4098, 0xFFFFFFFFLL, 0), v13 == -1))
    {
      *v4 = 0;
      __asm { BR              X9 }
    }
    v14 = v13;
    v36 = v10;
    if (((v13 + 16) & 0xF) != 0)
      v15 = -((_DWORD)v13 + 16) & 0xFLL;
    else
      v15 = 0;
    v16 = v13 + v15;
    v17 = (_BYTE *)(v13 + v15 + 16);
    sub_1CF36FDF0(v17, 0, 0x3C0uLL);
    *(_DWORD *)(v16 + 900) = 0;
    *(_QWORD *)(v16 + 8) = 963;
    *(_QWORD *)(v16 + 40) = v14;
    *(_QWORD *)(v16 + 904) = v14;
    *(_QWORD *)(v16 + 880) = v12;
    *(_QWORD *)(v16 + 872) = v12;
    *(_QWORD *)(v16 + 912) = v12;
    v18 = *v5;
    *(_QWORD *)(v16 + 72) = 4095;
    *(_QWORD *)(v16 + 80) = v18;
    v19 = v2;
    v20 = *((_DWORD *)v5 + 10) | 4;
    sub_1CF36FDF0((_BYTE *)(v16 + 936), 0, 0x10uLL);
    *(_DWORD *)(v16 + 896) = v20;
    v2 = v19;
    *(_QWORD *)(v16 + 112) = v16 + 88;
    *(_QWORD *)(v16 + 104) = v16 + 88;
    *(_QWORD *)(v16 + 128) = v16 + 104;
    *(_QWORD *)(v16 + 120) = v16 + 104;
    *(_QWORD *)(v16 + 144) = v16 + 120;
    *(_QWORD *)(v16 + 136) = v16 + 120;
    *(_QWORD *)(v16 + 160) = v16 + 136;
    *(_QWORD *)(v16 + 152) = v16 + 136;
    *(_QWORD *)(v16 + 176) = v16 + 152;
    *(_QWORD *)(v16 + 168) = v16 + 152;
    *(_QWORD *)(v16 + 192) = v16 + 168;
    *(_QWORD *)(v16 + 184) = v16 + 168;
    *(_QWORD *)(v16 + 208) = v16 + 184;
    *(_QWORD *)(v16 + 200) = v16 + 184;
    *(_QWORD *)(v16 + 224) = v16 + 200;
    *(_QWORD *)(v16 + 216) = v16 + 200;
    *(_QWORD *)(v16 + 240) = v16 + 216;
    *(_QWORD *)(v16 + 232) = v16 + 216;
    *(_QWORD *)(v16 + 248) = v16 + 232;
    *(_QWORD *)(v16 + 256) = v16 + 232;
    *(_QWORD *)(v16 + 264) = v16 + 248;
    *(_QWORD *)(v16 + 272) = v16 + 248;
    *(_QWORD *)(v16 + 280) = v16 + 264;
    *(_QWORD *)(v16 + 288) = v16 + 264;
    *(_QWORD *)(v16 + 296) = v16 + 280;
    *(_QWORD *)(v16 + 304) = v16 + 280;
    *(_QWORD *)(v16 + 312) = v16 + 296;
    *(_QWORD *)(v16 + 320) = v16 + 296;
    *(_QWORD *)(v16 + 328) = v16 + 312;
    *(_QWORD *)(v16 + 336) = v16 + 312;
    *(_QWORD *)(v16 + 344) = v16 + 328;
    *(_QWORD *)(v16 + 352) = v16 + 328;
    *(_QWORD *)(v16 + 360) = v16 + 344;
    *(_QWORD *)(v16 + 368) = v16 + 344;
    *(_QWORD *)(v16 + 376) = v16 + 360;
    *(_QWORD *)(v16 + 384) = v16 + 360;
    *(_QWORD *)(v16 + 392) = v16 + 376;
    *(_QWORD *)(v16 + 400) = v16 + 376;
    *(_QWORD *)(v16 + 408) = v16 + 392;
    *(_QWORD *)(v16 + 416) = v16 + 392;
    *(_QWORD *)(v16 + 424) = v16 + 408;
    *(_QWORD *)(v16 + 432) = v16 + 408;
    *(_QWORD *)(v16 + 440) = v16 + 424;
    *(_QWORD *)(v16 + 448) = v16 + 424;
    *(_QWORD *)(v16 + 456) = v16 + 440;
    *(_QWORD *)(v16 + 464) = v16 + 440;
    *(_QWORD *)(v16 + 472) = v16 + 456;
    *(_QWORD *)(v16 + 480) = v16 + 456;
    *(_QWORD *)(v16 + 488) = v16 + 472;
    *(_QWORD *)(v16 + 504) = v16 + 488;
    *(_QWORD *)(v16 + 512) = v16 + 488;
    *(_QWORD *)(v16 + 496) = v16 + 472;
    *(_QWORD *)(v16 + 528) = v16 + 504;
    *(_QWORD *)(v16 + 520) = v16 + 504;
    *(_QWORD *)(v16 + 544) = v16 + 520;
    *(_QWORD *)(v16 + 536) = v16 + 520;
    *(_QWORD *)(v16 + 560) = v16 + 536;
    *(_QWORD *)(v16 + 552) = v16 + 536;
    *(_QWORD *)(v16 + 576) = v16 + 552;
    *(_QWORD *)(v16 + 568) = v16 + 552;
    *(_QWORD *)(v16 + 592) = v16 + 568;
    *(_QWORD *)(v16 + 584) = v16 + 568;
    *(_QWORD *)(v16 + 608) = v16 + 584;
    *(_QWORD *)(v16 + 600) = v16 + 584;
    v21 = v16 + (*(_QWORD *)(v16 + 8) & 0xFFFFFFFFFFFFFFF8);
    v22 = v14 + v12 - v21;
    if (((v21 + 16) & 0xF) != 0)
      v23 = -((_DWORD)v21 + 16) & 0xFLL;
    else
      v23 = 0;
    v24 = v21 + v23;
    v25 = v22 - v23 - 80;
    *(_QWORD *)(v16 + 56) = v24;
    *(_QWORD *)(v16 + 32) = v25;
    *(_QWORD *)(v24 + 8) = v25 | 1;
    *(_QWORD *)(v14 + v12 - 72) = 80;
    *(_QWORD *)(v16 + 64) = v5[4];
    *(_DWORD *)(v16 + 928) = v3;
    *(_DWORD *)(v16 + 896) |= 2u;
    *v4++ = v17;
    if ((unint64_t)v4 >= v37)
    {
      v26 = (_QWORD *)((uint64_t (*)(uint64_t))(v19[42] - 8))(128);
      *(_QWORD *)(v19[79] - 4) = v26;
      if (v26)
      {
        v27 = 0;
        *v26 = v19[((-79 * ((*(_DWORD *)v38 + qword_1EFB8D318) ^ 0x63)) ^ *(_BYTE *)(v11 + (*(unsigned __int8 *)(v36 + (-79 * ((*(_DWORD *)v38 + qword_1EFB8D318) ^ 0x63))) ^ 0x65u)))
                 - 48];
        v28 = qword_1EFB8D318;
        v26[1] = v19[((-79 * ((*(_DWORD *)v38 + qword_1EFB8D318) ^ 0x63)) ^ *(_BYTE *)(v11 + (*(unsigned __int8 *)(v36 + (-79 * ((*(_DWORD *)v38 + qword_1EFB8D318) ^ 0x63))) ^ 0x72u)))
                   + 13]
               - 4;
        v26[2] = v19[((-79 * ((*(_DWORD *)v38 + v28) ^ 0x63)) ^ *(_BYTE *)(a1
                                                                                          + (*(unsigned __int8 *)(v35 + (-79 * ((*(_DWORD *)v38 + v28) ^ 0x63))) ^ 0x49u)))
                   - 85]
               - 4;
        v26[3] = v19[96];
        v29 = v19[7] - 4;
        v26[4] = v19[78] - 8;
        v26[5] = v29;
        v30 = v19[107];
        v26[6] = v19[80] - 4;
        v26[7] = v30;
        v26[8] = v19[((-79 * ((*(_DWORD *)v38 + v28) ^ 0x63)) ^ *(_BYTE *)(a1
                                                                                          + (*(unsigned __int8 *)(v35 + (-79 * ((*(_DWORD *)v38 + v28) ^ 0x63))) ^ 0xE4u)))
                   - 98];
        v26[9] = v19[17] - 12;
        v31 = v19[50] - 8;
        v32 = v19[35] - 8;
        v26[10] = v19[(*(_BYTE *)(v32
                                                 + (*(unsigned __int8 *)(v31
                                                                       + (-79
                                                                                         * ((*(_DWORD *)v38
                                                                                           + qword_1EFB8D318) ^ 0x63))) ^ 0x4Bu)) ^ (-79 * ((*(_DWORD *)v38 + qword_1EFB8D318) ^ 0x63)))];
        v26[11] = v19[((-79 * ((*(_DWORD *)v38 - qword_1EFB8D318) ^ 0x63)) ^ *(_BYTE *)(v32 + (*(unsigned __int8 *)(v31 + (-79 * ((*(_DWORD *)v38 - qword_1EFB8D318) ^ 0x63))) ^ 0x4Bu)))
                    - 53];
        v33 = -79 * ((*(_DWORD *)v38 + qword_1EFB8D318) ^ 0x63);
        v26[12] = v19[(*(_BYTE *)(v19[119] + (*(unsigned __int8 *)(v19[104] + v33 - 4) ^ 0xCDu) - 4) ^ v33)
                    - 45]
                - 12;
        v26[13] = v19[34];
        v26[14] = v19[56];
        v26[15] = v19[(*(_BYTE *)(v19[11]
                                                 + (*(unsigned __int8 *)(v19[88]
                                                                       + (-79
                                                                                         * ((*(_DWORD *)v38
                                                                                           + qword_1EFB8D318) ^ 0x63))) ^ 1u)
                                                 - 8) ^ (-79 * ((*(_DWORD *)v38 + qword_1EFB8D318) ^ 0x63)))
                    - 31]
                - 4;
      }
      else
      {
        v27 = -1;
      }
      __asm { BR              X9 }
    }
  }
}

void sub_1CF2ADC68(int a1)
{
  _QWORD *v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD v17[8];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v2 = *(&off_1E8C4D9A0
       + (byte_1CF37BD84[(byte_1CF37A58C[(-79
                                                                          * ((dword_1EFB8D338 + qword_1EFB8D3F0) ^ 0x63))
                                                        - 12] ^ 0x49)
                                        - 4] ^ (-79 * ((dword_1EFB8D338 + qword_1EFB8D3F0) ^ 0x63)))
       - 56);
  v3 = *v2 - qword_1EFB8D3F0 - (_QWORD)&v6;
  qword_1EFB8D3F0 = 565822129 * (v3 + 0x145FA26765C3F29DLL);
  *v2 = 565822129 * (v3 ^ 0xEBA05D989A3C0D63);
  v17[0] = (248152243
          * (((v17 ^ 0x8A604C | 0x5F059FB1) + (v17 ^ 0x53001191 | 0xA0FA604E)) ^ 0x494F3C7E)) ^ 0x56EDD32D;
  sub_1CF370E18(v17);
  v7 = 0x3576B614D2428711;
  v8 = 590879205;
  v9 = 0;
  v10 = 0x1500B922FLL;
  v11 = 0x2446220BDLL;
  v12 = 0x3576B614D2428711;
  v13 = a1 - ((2 * a1) & 0x24FC3522) + 310254225;
  v14 = 0;
  v15 = 0x129EC5C36;
  v16 = 0x2446220BDLL;
  v4 = -79 * (qword_1EFB8D3F0 ^ 0x63 ^ *(_DWORD *)v2);
  v5 = qword_1E8C49C70[(957
                      * (((uint64_t (*)(uint64_t))*(&off_1E8C4D9A0
                                                           + (byte_1CF37D9B4[(byte_1CF37CA48[v4 - 8] ^ 0x65)
                                                                                            - 4] ^ v4)
                                                           - 15))(128) != 0)) ^ 0x5F4u];
  __asm { BR              X8 }
}

uint64_t sub_1CF2ADF34()
{
  uint64_t (*v0)(uint64_t);
  int v1;
  _BOOL4 v2;

  v2 = v0(112) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x310] + 8 * ((v2 * ((v1 + 219) ^ 0x47DFB1C)) | 0x724u)) - 4))();
}

uint64_t sub_1CF2ADF98(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  BOOL v4;
  int v5;

  *(_WORD *)(a1 + 80) = 25175;
  *(_QWORD *)a1 = 0x65EE1E795321A838;
  memset((void *)(a1 + 8), 79, 64);
  *(_QWORD *)(a1 + 72) = 0x116585BF116585BFLL;
  *(_DWORD *)(a1 + 84) = 1095089643;
  *(_DWORD *)(a1 + 104) = 2126566836;
  memset((void *)(a1 + 88), 79, 16);
  *(_BYTE *)(a1 + 108) = 42;
  if (v1)
    v4 = a1 == 0;
  else
    v4 = 1;
  v5 = !v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((226 * v5) ^ 0x126u)) - (((v2 + 226) ^ 0x126u) - 75364910)))();
}

uint64_t sub_1CF2AE060(uint64_t a1)
{
  int v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  int v5;

  v5 = (v1 - 289) | 0x104;
  *(_DWORD *)(v2 + 16) = *(_DWORD *)a1;
  *(_DWORD *)(v2 + 88) = *(_DWORD *)(a1 + 72);
  *(_DWORD *)(v2 + 92) = *(_DWORD *)(a1 + 76);
  *(_BYTE *)(v2 + 96) = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(v2 + 97) = *(_BYTE *)(a1 + 81);
  *(_DWORD *)(v2 + 120) = *(_DWORD *)(a1 + 104);
  *(_DWORD *)(v2 + 100) = *(_DWORD *)(a1 + 84);
  *(_BYTE *)(v2 + 124) = v5 + (*(_BYTE *)(a1 + 108) & 1) - 29;
  *(_BYTE *)(v2 + 55) = (*(_BYTE *)(a1 + 39)
                       + (~*(_BYTE *)(a1 + 39) | 0x1B)
                       + (((v5 ^ (v3 - 61)) - 31) | *(_BYTE *)(a1 + 39))
                       - 105) ^ 0x61 ^ *((_BYTE *)*(&off_1E8C4D9A0 + v5 - 948) + 11) ^ *((_BYTE *)*(&off_1E8C4D9A0
                                                                                                  + v5
                                                                                                  - 874)
                                                                                       + 13) ^ *((_BYTE *)*(&off_1E8C4D9A0 + (v5 ^ 0x396))
                                                                                               + 16);
  return (*(uint64_t (**)(void))(v4 + 8 * (v5 ^ 0x23)))();
}

void sub_1CF2AE17C()
{
  JUMPOUT(0x1CF2AE0F4);
}

uint64_t sub_1CF2AE184()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1181 * (v0 == -1393729084)) ^ 0x45)) - 4))();
}

uint64_t sub_1CF2AE1E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;

  v8 = v6 + v4;
  *(_BYTE *)(v5 + 87) = *(_BYTE *)(v2 + 17) ^ *(_BYTE *)(v1 + 15) ^ *(_BYTE *)(v3 + 16) ^ 0x61 ^ (*(_BYTE *)(a1 + 71)
                                                                                                + (*(_BYTE *)(a1 + 71) | 0x1B)
                                                                                                + ((v8 + 113) ^ *(_BYTE *)(a1 + 71) ^ 0x20 | 0x1B)
                                                                                                - 105);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (v8 + 223)) - 4))();
}

void sub_1CF2AE274()
{
  JUMPOUT(0x1CF2AE1F4);
}

uint64_t sub_1CF2AE27C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 + 119) = *(_BYTE *)(a1 + 103);
  *(_BYTE *)(v3 + 118) = *(_BYTE *)(a1 + 102);
  *(_BYTE *)(v3 + 117) = *(_BYTE *)(a1 + 101);
  *(_BYTE *)(v3 + 116) = *(_BYTE *)(a1 + 100);
  *(_BYTE *)(v3 + 115) = *(_BYTE *)(a1 + 99);
  *(_BYTE *)(v3 + 114) = *(_BYTE *)(a1 + 98);
  *(_BYTE *)(v3 + 113) = *(_BYTE *)(a1 + 97);
  *(_BYTE *)(v3 + 112) = *(_BYTE *)(a1 + 96);
  *(_BYTE *)(v3 + 111) = *(_BYTE *)(a1 + 95);
  *(_BYTE *)(v3 + 110) = *(_BYTE *)(a1 + 94);
  *(_BYTE *)(v3 + 109) = *(_BYTE *)(a1 + 93);
  *(_BYTE *)(v3 + 108) = *(_BYTE *)(a1 + 92);
  *(_BYTE *)(v3 + 107) = *(_BYTE *)(a1 + 91);
  *(_BYTE *)(v3 + 106) = *(_BYTE *)(a1 + 90);
  *(_BYTE *)(v3 + 105) = *(_BYTE *)(a1 + 89);
  *(_BYTE *)(v3 + 104) = *(_BYTE *)(a1 + 88);
  *(_DWORD *)(v3 + 20) = *(_DWORD *)(a1 + 4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1463 * (*(_DWORD *)(a1 + 4) == a2)) ^ v2))
                            - (((v2 + 73426539) | 0x1D900Au) ^ 0x47DFA3ELL)))();
}

uint64_t sub_1CF2AE350(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(75364918
                            - (v2 ^ (v3 - 59))
                            + *(_QWORD *)(v4 + 8 * ((1385 * (*(_DWORD *)(a1 + 72) != v1)) ^ v2))))();
}

uint64_t sub_1CF2AE388@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  *(_DWORD *)(v2 + 20) = a2 + 1;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v4 + v3 + 169) ^ (912 * (a1 != 0)))))();
}

uint64_t sub_1CF2AE3B4()
{
  int v0;
  int v1;
  int v2;
  _BOOL4 v3;

  sub_1CF370D34();
  v3 = ((uint64_t (*)(uint64_t))STACK[0x280])(16) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x310]
                                        + 8 * ((v3 * ((21 * (v0 ^ (v2 - 6))) ^ 0x178)) ^ (v1 + v0 + 1237)))
                            - 8))();
}

uint64_t sub_1CF2AE40C(_QWORD *a1)
{
  uint64_t v1;
  int v2;
  _BOOL4 v3;

  *a1 = 0x23120F4208F8DDDLL;
  a1[1] = 0x23120F4208F8DDDLL;
  *(_QWORD *)(v1 + 8) = (char *)a1 + 0x373C0AAD4CE136CBLL;
  v3 = ((uint64_t (*)(uint64_t))STACK[0x280])(16) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x310] + 8 * ((v3 * (v2 + 1707)) ^ v2))
                            - (((v2 + 68962058) | 0x61B20Au) ^ 0x47DFA36)))();
}

uint64_t sub_1CF2AE498(_QWORD *a1)
{
  _QWORD *v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *a1 = 0x23120F4208F8DDDLL;
  a1[1] = 0x23120F4208F8DDDLL;
  *v1 = (char *)a1 + v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((((&STACK[0x350] == 0) ^ (v2 + 57)) & 1)
                                          * (((v2 + 6635748) | 0x418B830) ^ (v4 + 1348))) ^ (v2 + 593)))
                            - 12))();
}

uint64_t sub_1CF2AE500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  unint64_t *v10;
  int v11;
  int v12;
  uint64_t v13;

  LODWORD(STACK[0x244]) = 1122207380;
  STACK[0x2B0] = *(_QWORD *)(v13 + 8 * (v11 + v9 - 215)) - 8;
  STACK[0x208] = *v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((v9 + v11) ^ (879 * (&a9 != (uint64_t *)-848))))
                            - (v9 - v12 + 340)
                            + 328))();
}

uint64_t sub_1CF2AE5E8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1815
                                          * ((((v0 - 16) | 0x20) ^ 0xC184E3B1) + 1048255787 < ((v0 - 1266680533) & 0x4FFDFBBA ^ (v1 - 2)))) ^ v0))
                            - 12))();
}

uint64_t sub_1CF2AE650()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  LODWORD(STACK[0x2C0]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((593 * (v2 == ((v3 + v4 - 246) ^ (v0 - 42)))) ^ (v3 + v4 - 46)))
                            - 12))();
}

uint64_t sub_1CF2AE694@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  STACK[0x210] = (unint64_t)&STACK[0x344];
  LODWORD(STACK[0x2D4]) = 537102449;
  v5 = v3 + ((a2 + 6092738) | 0x421021A) + 1381;
  v6 = *(_QWORD *)(v2 - 0x29E41201BECB3986);
  STACK[0x330] = 0x23120F4208F8DDDLL;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * ((91 * (v6 == 0x373C0AAD4CE136CBLL)) ^ v5))
                                                   - 8))(a1, 0x3DFAA278BA90592BLL);
}

uint64_t sub_1CF2AEA90@<X0>(uint64_t a1@<X8>)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  STACK[0x270] = (unint64_t)&STACK[0x330];
  STACK[0x2E8] = 0x3DFAA278BA90592BLL;
  LODWORD(STACK[0x2F0]) = -1129976585;
  STACK[0x2F8] = v2;
  v6 = *(_QWORD *)(STACK[0x310] + 8 * (v1 - 169)) - 12;
  v7 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x310] + 8 * ((863 * (a1 != 0x373C0AAD4CE136CBLL)) ^ (v4 + v5 + 1101)))
                         - (v5 - 75364473)
                         + 441);
  STACK[0x308] = v3;
  STACK[0x220] = v6;
  return v7();
}

uint64_t sub_1CF2AEB24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, unint64_t))(*(_QWORD *)(v3
                                                                        + 8
                                                                        * (int)(((((((v2 - 40) & 0x77) - 26) ^ (*(_QWORD *)(a2 - 0x373C0AAD4CE136CBLL) == 0x23120F4208F8DDDLL)) & 1)
                                                                               * ((((v2 + 1949912536) & 0x8BC6B477) + 400) ^ 0x4B0)) ^ (v2 + 1949912536) & 0x8BC6B477))
                                                            - 4))(a1, 0xCD091F17C02FDE51);
}

uint64_t sub_1CF2AEB7C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, unint64_t);

  return v2(a1, a2, STACK[0x2A0]);
}

uint64_t sub_1CF2AEB94(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  STACK[0x2A0] = a3;
  if (v4 == -1393729084)
  {
    v8 = STACK[0x328];
    v9 = *(_QWORD *)(STACK[0x328] - 0x23120F4208F8DD5);
    v10 = STACK[0x288];
    *(_QWORD *)(STACK[0x288] - 0x23120F4208F8DD5) = v9;
    *(_QWORD *)(v10 - 0x23120F4208F8DDDLL) = *(_QWORD *)(v8 - 0x23120F4208F8DDDLL);
    return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((v5 + v3 + 593) ^ (2 * (v9 == 0x23120F4208F8DDDLL))))
                              - ((85 * (v3 ^ (v3 - 9)) - 100593080) & 0x5FEEEFC)
                              + 1256))();
  }
  else if (v4 == 1393700935)
  {
    return (*(uint64_t (**)(void))(v6
                                + 8
                                * (((*(_QWORD *)(STACK[0x218] - 0x373C0AAD4CE136C3) == 0x23120F4208F8DDDLL)
                                  * ((193 * (v3 ^ (v3 - 2)) + 109) ^ (v3 + 441761152) & 0x212D49C7)) ^ (v5 + v3 + 1129))))();
  }
  else
  {
    return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                          + 8
                                          * ((66
                                            * (((*(_QWORD *)(STACK[0x288] - 0x23120F4208F8DC5) == 0) ^ 0x45) & 1)) ^ (v5 + 75366276)))
                              - 12))();
  }
}

void sub_1CF2AEE40(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0x288];
  *(_QWORD *)(v1 - 0x23120F4208F8DDDLL) = STACK[0x288];
  *(_QWORD *)(v2 - 0x23120F4208F8DD5) = *a1;
  *a1 = v2;
  JUMPOUT(0x1CF2AEE74);
}

uint64_t sub_1CF2AEE88@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v4 + v5) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((*a2 == v3) * ((v2 + 362) ^ 0x4EC)) ^ (v2 + 325)))
                            - ((v2 + 625101228) & 0xDABDB3AF)
                            + 255))();
}

uint64_t sub_1CF2AEED8()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((*v0 == 0x23120F4208F8DDDLL) * (((v1 - 193) | 0x384) ^ 0x6D9)) ^ v1)))();
}

uint64_t sub_1CF2AEF18@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((*a1 == 0x23120F4208F8DDDLL) * (262 * (v1 ^ 0x3C5) - 748)) ^ v1)))();
}

uint64_t sub_1CF2AEFA8()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  int v3;
  int v4;
  uint64_t v5;
  unint64_t v6;

  v5 = sub_1CF370D34();
  v6 = STACK[0x310];
  *v2 = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v6
                                                      + 8
                                                      * ((((v1 + 7) ^ (v3 + 263) ^ (v1 - v4 - 39))
                                                        * (v0 == 0x23120F4208F8DDDLL)) ^ v1))
                                          - 4))(v5);
}

uint64_t sub_1CF2AF018()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((v1 + 7) ^ (v2 + 263) ^ (v1 - v3 - 39)) * (v0 == 0x23120F4208F8DDDLL)) ^ v1))
                            - 4))();
}

uint64_t sub_1CF2AF074()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  v0 = sub_1CF370D34();
  v1 = (uint64_t (*)(uint64_t))STACK[0x2A8];
  STACK[0x328] = 0x23120F4208F8DDDLL;
  STACK[0x2A8] = (unint64_t)v1;
  return v1(v0);
}

void sub_1CF2AF0BC()
{
  int v0;

  LODWORD(STACK[0x2BC]) = v0;
  JUMPOUT(0x1CF2AF0F0);
}

uint64_t sub_1CF2AF1B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((*(_QWORD *)(a5 + a1) != a2) * a3) ^ v5))
                            - ((v5 - v6 - 339) ^ (v5 - 428) ^ 0x47DFAC9)))();
}

uint64_t sub_1CF2AF1F4@<X0>(unint64_t a1@<X4>, unint64_t a2@<X6>, uint64_t a3@<X8>)
{
  int v3;
  unint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  STACK[0x2E8] = a2;
  STACK[0x2F0] = a1;
  STACK[0x2F8] = v4;
  STACK[0x308] = a3 - 0x29E41201BECB398ELL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (((a3 != 0x29E41201BECB3986) * (v7 + ((v3 + 76 + v5) & v6) - 325)) ^ (v3 + 76)))
                            - 8))();
}

uint64_t sub_1CF2AF270@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((*v2 != v1) * (a1 + a1 + 171 - 126)) ^ a1)) - 8))();
}

uint64_t sub_1CF2AF29C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((((v0 + 902898653) & 0xCA2EDB77) - 257) ^ ((v0 - 338) | 0x301))
                                     * (*(_QWORD *)(v1 - 0x373C0AAD4CE136CBLL) + v2 == 0x3B8DC19D22EBDA52)) ^ v0)))();
}

uint64_t sub_1CF2AF30C()
{
  uint64_t (*v0)(unint64_t);
  _QWORD *v1;

  sub_1CF370D34();
  *v1 = 0x373C0AAD4CE136CBLL;
  return v0(STACK[0x308]);
}

void sub_1CF2AF358()
{
  JUMPOUT(0x1CF2AF244);
}

uint64_t sub_1CF2AF378()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v4 = sub_1CF370D34();
  return (*(uint64_t (**)(uint64_t))(STACK[0x310]
                                            + 8
                                            * ((((((v3 - 241) | 0x46) ^ v0) + ((v3 + 46) | 0x181))
                                              * (v1 + v2 == 0x3B8DC19D22EBDA52)) ^ v3)))(v4);
}

uint64_t sub_1CF2AF3D4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((*(_QWORD *)(a1 - 0x23120F4208F8DC5) != 0)
                                          * ((83 * (v1 ^ 0x3A7)) ^ 0x75D)) ^ v1))
                            - 4))();
}

uint64_t sub_1CF2AF438()
{
  _QWORD *v0;

  sub_1CF370D34();
  *v0 = 0;
  return sub_1CF2AF378();
}

uint64_t sub_1CF2AF44C()
{
  int v0;
  int v1;

  sub_1CF370D34();
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x310] + 8 * ((v0 + v1 + 339) ^ (1219 * (STACK[0x2F0] != 0x703BDE3807C31C91))))
                                                                                       - 8))(0x8FC421C7F83CE36FLL, 0x29E41201BECB398ELL, 2037, STACK[0x2D8]);
}

uint64_t sub_1CF2AF4D8()
{
  _QWORD *v0;
  uint64_t (*v1)(void);

  *v0 = 0x29E41201BECB398ELL;
  return v1();
}

void sub_1CF2AF500()
{
  JUMPOUT(0x1CF2AF180);
}

uint64_t sub_1CF2AF520()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((820 * (LODWORD(STACK[0x2BC]) == ((v1 + 1870882757) & 0xBFE9FA5) - 1393729505)) ^ (v0 + v1 + 81))))();
}

uint64_t sub_1CF2AF570@<X0>(char a1@<W8>)
{
  unsigned int v1;
  char v2;
  char v3;
  int v5;

  return (v5 + v1 - ((v5 << (v2 + (a1 ^ (v3 + 101)) - 83)) & 0x59DAC388)) ^ v1;
}

uint64_t sub_1CF2AF5F0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  STACK[0x2A0] = a3;
  return (*(uint64_t (**)(uint64_t, unint64_t))(v6
                                                              + 8 * ((1608 * (v4 == -1393729084)) ^ (v5 + v3 + 529))))(a1, STACK[0x2E8]);
}

uint64_t sub_1CF2AF638()
{
  unsigned int v0;

  STACK[0x2E0] = 0;
  return (*(uint64_t (**)(void))(STACK[0x310]
                              + 8
                              * ((1696
                                * ((((v0 + 75364923) ^ (*(_QWORD *)(STACK[0x330] - 0x23120F4208F8DC5) == 0)) & 1) == 0)) ^ v0)))();
}

uint64_t sub_1CF2AF698@<X0>(unint64_t a1@<X1>, unint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t (*v6)(void);

  v5 = (*(_DWORD *)(v3 - 0x23120F4208F8DCDLL) - 1508655795);
  STACK[0x268] = v5;
  v6 = *(uint64_t (**)(void))(STACK[0x310]
                           + 8
                           * (((0x3DFAA278BA90592BLL - a1 + v5 - 10 < (unint64_t)((v2 + 243137498) & 0x47DFAFA)
                                                                    - 75364932)
                             * ((v2 - v4 - 529) ^ 0x47DFAE0)) ^ v2));
  STACK[0x2E0] = a2;
  STACK[0x260] = a1;
  return v6();
}

uint64_t sub_1CF2AF744@<X0>(unint64_t a1@<X1>, unint64_t a2@<X8>)
{
  int v2;
  int v3;
  unint64_t v4;
  int v5;
  uint64_t (*v6)(unint64_t);
  unint64_t v7;
  unint64_t v8;

  STACK[0x2E0] = a2;
  STACK[0x260] = a1;
  v4 = STACK[0x268];
  v5 = STACK[0x304];
  v6 = (uint64_t (*)(unint64_t))(((v3 + v2 - 17) | 0x210u)
                                                + *(_QWORD *)(STACK[0x310] + 8 * (v3 + v2 - 110))
                                                - 855);
  v7 = ((STACK[0x260] - 0x3DFAA278BA905925) ^ 0x17FBDE7FB5FFC7FFLL)
     - 0x620018300E40BALL
     + ((2 * (STACK[0x260] - 0x3DFAA278BA905925)) & 0x2FF7BCFF6BFF8FFELL);
  v8 = STACK[0x260] - 0x3DFAA278BA905921;
  STACK[0x268] = STACK[0x268];
  STACK[0x248] = v4 + 3591908751u;
  STACK[0x230] = (v8 ^ 0x7FBDDE67BFF5BF6FLL) - 0x682400003A04382ALL + ((2 * v8) & 0xFF7BBCCF7FEB7EDELL);
  LODWORD(STACK[0x304]) = v5;
  return v6(v7);
}

void sub_1CF2B0528()
{
  unsigned __int8 *v0;
  _BYTE *v1;
  int v2;
  unsigned __int8 v3;
  int v4;

  v4 = (*v1 ^ v3) | ((*v0 ^ v2) << 8);
  LODWORD(STACK[0x304]) = v4 - 2 * (v4 & 0x2C3F ^ (*v1 ^ v3) & 1) - 21442;
  JUMPOUT(0x1CF2AFD84);
}

uint64_t sub_1CF2B0584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unint64_t v4;
  unint64_t v5;
  _BOOL4 v7;

  v4 = (v3 ^ 0xBCA5ECF7) + STACK[0x260];
  STACK[0x258] = v4 + 10;
  v5 = v4 - 0x3DFAA277E4782B92;
  v7 = v5 < 0xD6182D8F || v5 > STACK[0x248];
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x310] + 8 * (((2 * v7) | (16 * v7)) ^ 0x66F))
                                                                                       - 8))(a1, STACK[0x2E8], a3, STACK[0x2D8]);
}

uint64_t sub_1CF2B0620(uint64_t a1)
{
  uint64_t (*v1)(void);
  int v2;
  int v3;

  v3 = (unsigned __int16)LODWORD(STACK[0x304]);
  if (v3 == 15177)
    JUMPOUT(0x1CF2AFD78);
  if (v3 == 10427 || v3 == 64741)
    return ((uint64_t (*)(uint64_t, unint64_t))(*(_QWORD *)(STACK[0x310]
                                                                          + 8
                                                                          * ((495
                                                                            * ((unsigned __int16)LODWORD(STACK[0x304]) == 15177)) ^ (v2 + 75366344)))
                                                              - 8))(a1, STACK[0x258]);
  else
    return v1();
}

uint64_t sub_1CF2B066C(uint64_t a1)
{
  int v1;

  return ((uint64_t (*)(uint64_t, unint64_t))(*(_QWORD *)(STACK[0x310]
                                                                        + 8
                                                                        * ((88
                                                                          * ((((v1 ^ 0xBCA5ECF7) == LODWORD(STACK[0x2D4]) - 695024179) ^ 0xF9) & 1)) ^ 0x411))
                                                            - 4))(a1, 0xCD091F17C02FDE51);
}

void sub_1CF2B070C()
{
  JUMPOUT(0x1CF2B0730);
}

void sub_1CF2B079C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  STACK[0x2A0] = a3;
  JUMPOUT(0x1CF2AF78CLL);
}

uint64_t sub_1CF2B07DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, unint64_t);

  *(_QWORD *)STACK[0x270] = v3;
  return v4(a1, a2, a3, STACK[0x2D8]);
}

uint64_t sub_1CF2B07F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x310] + 8 * ((495 * ((unsigned __int16)LODWORD(STACK[0x304]) == 15177)) ^ 0x6E2))
                                                                                       - 8))(a1, STACK[0x258], a3, STACK[0x2D8]);
}

void sub_1CF2B0874(int a1@<W8>)
{
  int v1;
  int v2;

  *(_DWORD *)STACK[0x210] = v1 ^ (a1 - v2 - 529) ^ 0xB8D816CD;
  LODWORD(STACK[0x304]) = 15177;
  JUMPOUT(0x1CF2B08A8);
}

uint64_t sub_1CF2B0944()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1972
                                          * (*(_DWORD *)(STACK[0x290]
                                                       - 0x27E07A2C9BAA8BEELL
                                                       + 40 * (v1 - 1048255787)
                                                       + 36)
                                           - LODWORD(STACK[0x244]) == -1122207378)) ^ v0))
                            - (((v0 + 214) | 1u) ^ 0x237)))();
}

uint64_t sub_1CF2B09B8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;

  v5 = *(_DWORD *)(v1 + 40 * v0 + 28);
  switch(v5)
  {
    case 1:
      LODWORD(STACK[0x2D4]) = *(_DWORD *)(v1 + 40 * v0 + 24);
      JUMPOUT(0x1CF2B0AC4);
    case 3:
      return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                            + 8 * ((953 * (*(_QWORD *)(v1 + 40 * v0 + 16) != 0)) ^ (v2 + v3 + 16)))
                                - (((v3 ^ (v3 - 569)) + 834) ^ 0x571)))();
    case 2:
      return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                            + 8 * ((1301 * (STACK[0x208] != 0x373C0AAD4CE136CBLL)) ^ (v2 + v3 - 116)))
                                - 4))();
  }
  return ((uint64_t (*)(void))STACK[0x2B0])();
}

void sub_1CF2B0B44()
{
  LODWORD(STACK[0x270]) = 1147281597;
  JUMPOUT(0x1CF2B0B84);
}

uint64_t sub_1CF2B0BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v63;
  unsigned int v64;
  int v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  STACK[0x2A8] = v63;
  LODWORD(STACK[0x2C0]) = v65;
  STACK[0x308] = v66;
  v68 = ((uint64_t (*)(uint64_t))STACK[0x280])(32);
  STACK[0x288] = v68 + 0x23120F4208F8DDDLL;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(75364918 - (v64 ^ 0x47DF9D0) + *(_QWORD *)(v67 + 8 * ((1548 * (v68 != 0)) ^ v64)) - 4))(v68, v69, v70, v71, v72, v73, v74, v75, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_1CF2B0C60(uint64_t a1)
{
  unsigned int v1;
  uint64_t v2;
  int v3;
  int v5;
  uint64_t v6;

  *(_QWORD *)a1 = 0x23120F4208F8DDDLL;
  *(_QWORD *)(a1 + 8) = 0x23120F4208F8DDDLL;
  v5 = STACK[0x270];
  *(_DWORD *)(a1 + 16) = LODWORD(STACK[0x270]) + 361374020 + v1 - 810;
  v6 = ((uint64_t (*)(_QWORD))STACK[0x280])(v5 - 1222646505 + v1 - v3 - 662);
  *(_QWORD *)(a1 + 24) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((30 * (v6 != 0)) ^ v1)) - 8))();
}

uint64_t sub_1CF2B0CEC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t (*v7)(_QWORD);
  _BYTE *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;

  v6 = LODWORD(STACK[0x2D4])
     - 1861141255
     + ~(((v2 - 671221122) & 0x2C7FFEFA ^ 0x7081146C) & (2 * LODWORD(STACK[0x2D4]) + 757435290));
  v7 = (uint64_t (*)(_QWORD))(*(_QWORD *)(v3 + 8 * v2) - 12);
  LODWORD(STACK[0x248]) = v5;
  LODWORD(STACK[0x230]) = LODWORD(STACK[0x270]) - ((2 * LODWORD(STACK[0x270]) + 2000404110) & 0x74FCEE56) + 1981568626;
  LODWORD(STACK[0x220]) = v4 ^ 0xA8006DBA;
  v8 = *(_BYTE **)(v1 + 24);
  v9 = __ROR8__(v8, 8);
  v10 = (0x150C087CC469144DLL - (v9 & 0xF8FFFFFFFFFFFFFFLL)) & 0x19A889ECFF1A1ED8 | ((v9 & 0xF8FFFFFFFFFFFFFFLL)
                                                                                     - 0x550C087CC469144ELL) & 0xE057761300E5E127;
  v11 = __ROR8__(v10 ^ 0xA2238B49AE9B5874, 8);
  v10 ^= 0xF5BC3750722C05E1;
  v12 = (v11 + v10) ^ 0x50D4D0E13CBD7177;
  v13 = v12 ^ __ROR8__(v10, 61);
  v14 = __ROR8__(v12, 8) + v13;
  v15 = v14 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v13, 61);
  *((_QWORD *)&v16 + 1) = v14;
  *(_QWORD *)&v16 = v14 ^ 0xE5D7DAAEED85A300;
  v17 = ((v16 >> 8) + v15) ^ v0;
  v18 = v17 ^ __ROR8__(v15, 61);
  v19 = (__ROR8__(v17, 8) + v18) ^ 0xCD091F17C02FDE51;
  v20 = v19 ^ __ROR8__(v18, 61);
  v21 = (__ROR8__(v19, 8) + v20) ^ 0x628ABC52894BE762;
  v22 = v21 ^ __ROR8__(v20, 61);
  *(_QWORD *)&v16 = __ROR8__(v21, 8);
  v23 = (((2 * (v16 + v22)) & 0xFCA17D98F44813EALL) - (v16 + v22) - 0x7E50BECC7A2409F6) ^ 0xDB6FDD30BA50D16BLL;
  *v8 = (((__ROR8__(v23, 8) + (v23 ^ __ROR8__(v22, 61))) ^ 0x1B0BD1982B59C071) >> (8 * (v8 & 7u))) ^ HIBYTE(v6) ^ 0xBA;
  v24 = (__ROR8__(v8 + 1, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL;
  *(_QWORD *)&v16 = __ROR8__(v24 ^ 0xB98B02A5518146ACLL, 8);
  v24 ^= 0xEE14BEBC8D361B39;
  v25 = (v16 + v24) ^ 0x50D4D0E13CBD7177;
  v26 = v25 ^ __ROR8__(v24, 61);
  *(_QWORD *)&v16 = __ROR8__(v25, 8);
  v27 = (((2 * (v16 + v26)) & 0xA793A7F6AC829AE6) - (v16 + v26) - 0x53C9D3FB56414D74) ^ 0x49E1F6AA443B118CLL;
  v28 = v27 ^ __ROR8__(v26, 61);
  v29 = (__ROR8__(v27, 8) + v28) ^ 0x8E85997BF8A3092DLL;
  v30 = __ROR8__(v29, 8);
  v31 = v29 ^ __ROR8__(v28, 61);
  v32 = (((2 * (v30 + v31)) & 0xF0BAF55B447DEC8ELL) - (v30 + v31) + 0x7A285525DC109B8) ^ 0xCAAB9A459DEED7E9;
  v33 = v32 ^ __ROR8__(v31, 61);
  *(_QWORD *)&v16 = __ROR8__(v32, 8);
  v34 = (-2 - ((~(v16 + v33) | 0x1FF46385B66E09DELL) + ((v16 + v33) | 0xE00B9C7A4991F621))) ^ 0x7D7EDFD73F25EEBCLL;
  v35 = v34 ^ __ROR8__(v33, 61);
  *(_QWORD *)&v16 = __ROR8__(v34, 8);
  v36 = (0xA4E31C196FB07E65 - ((v16 + v35) | 0xA4E31C196FB07E65) + ((v16 + v35) | 0x5B1CE3E6904F819ALL)) ^ 0x1DC7FE5AFC4A6FBLL;
  v37 = v36 ^ __ROR8__(v35, 61);
  *(_QWORD *)&v16 = __ROR8__(v36, 8);
  v8[1] = (((-2 - ((~((_QWORD)v16 + v37) | 0x75B531B3FC4CDC6BLL) + (((_QWORD)v16 + v37) | 0x8A4ACE4C03B32394))) ^ 0x6EBEE02BD7151C1ALL) >> (8 * (((_BYTE)v8 + 1) & 7u))) ^ BYTE2(v6) ^ 0x7E;
  v38 = (__ROR8__(v8 + 2, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL;
  v39 = v38 ^ 0xB98B02A5518146ACLL;
  v38 ^= 0xEE14BEBC8D361B39;
  *(_QWORD *)&v16 = __ROR8__(v39, 8);
  v40 = (((2 * (v16 + v38)) & 0x9D263FB38571CE96) - (v16 + v38) + 0x316CE0263D4718B4) ^ 0x61B830C701FA69C3;
  v41 = v40 ^ __ROR8__(v38, 61);
  *((_QWORD *)&v16 + 1) = __ROR8__(v40, 8) + v41;
  *(_QWORD *)&v16 = *((_QWORD *)&v16 + 1) ^ 0xE5D7DAAEED85A300;
  v42 = v16 >> 8;
  *(_QWORD *)&v16 = __ROR8__(v41, 61);
  v43 = (0x8EEAB8D098054CA2
       - ((v42 + (*((_QWORD *)&v16 + 1) ^ 0xE5D7DAAEED85A300 ^ v16)) | 0x8EEAB8D098054CA2)
       + ((v42 + (*((_QWORD *)&v16 + 1) ^ 0xE5D7DAAEED85A300 ^ v16)) | 0x7115472F67FAB35DLL)) ^ 0xFF90DE549F59BA70;
  v44 = v43 ^ __ROR8__(*((_QWORD *)&v16 + 1) ^ 0xE5D7DAAEED85A300 ^ v16, 61);
  *(_QWORD *)&v16 = __ROR8__(v43, 8);
  v45 = __ROR8__((-2 - ((~(v16 + v44) | 0x978199C1D991797DLL) + ((v16 + v44) | 0x687E663E266E8682))) ^ 0x5A8886D619BEA72CLL, 8);
  v46 = (-2 - ((~(v16 + v44) | 0x978199C1D991797DLL) + ((v16 + v44) | 0x687E663E266E8682))) ^ 0x5A8886D619BEA72CLL ^ __ROR8__(v44, 61);
  v47 = (((2 * (v45 + v46)) & 0x9D3B31D97DA9F9B8) - (v45 + v46) - 0x4E9D98ECBED4FCDDLL) ^ 0xD3E8DB41C860E441;
  v48 = v47 ^ __ROR8__(v46, 61);
  v49 = (__ROR8__(v47, 8) + v48) ^ 0x5AC09C033F8B2761;
  *(_QWORD *)&v16 = __ROR8__(v8 + 3, 8);
  v8[2] = (((__ROR8__(v49, 8) + (v49 ^ __ROR8__(v48, 61))) ^ 0x1B0BD1982B59C071uLL) >> (8 * (((_BYTE)v8 + 2) & 7u))) ^ BYTE1(v6) ^ 0x77;
  v50 = ((2 * ((v16 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0x20EB39D37CA90794)
      - ((v16 & 0xF8FFFFFFFFFFFFFFLL)
       - 0x550C087CC469144ELL)
      - 0x10759CE9BE5483CALL;
  v51 = v50 ^ 0xA9FE9E4CEFD5C566;
  v50 ^= 0xFE612255336298F3;
  *(_QWORD *)&v16 = __ROR8__(v51, 8);
  v52 = __ROR8__((-2 - ((~(v16 + v50) | 0x3D54A62DE74C24CLL) + ((v16 + v50) | 0xFC2AB59D218B3DB3))) ^ 0x53019A83E2C9B33BLL, 8);
  v53 = (-2 - ((~(v16 + v50) | 0x3D54A62DE74C24CLL) + ((v16 + v50) | 0xFC2AB59D218B3DB3))) ^ 0x53019A83E2C9B33BLL ^ __ROR8__(v50, 61);
  v54 = (-2 - ((~(v52 + v53) | 0x1730E72B835C4191) + ((v52 + v53) | 0xE8CF18D47CA3BE6ELL))) ^ 0xF2E73D856ED9E291;
  v55 = v54 ^ __ROR8__(v53, 61);
  *(_QWORD *)&v16 = __ROR8__(v54, 8);
  v56 = (v16 + v55 - ((2 * (v16 + v55)) & 0x9B516F8D43D1232ELL) - 0x325748395E176E69) ^ 0x432D2EBD594B98BALL;
  v57 = v56 ^ __ROR8__(v55, 61);
  v58 = (__ROR8__(v56, 8) + v57) ^ 0xCD091F17C02FDE51;
  v59 = v58 ^ __ROR8__(v57, 61);
  *(_QWORD *)&v16 = __ROR8__(v58, 8);
  v60 = __ROR8__((((2 * (v16 + v59)) | 0x70B9105F53F81A68) - (v16 + v59) + 0x47A377D05603F2CCLL) ^ 0xDAD6347D20B7EA56, 8);
  v61 = (((2 * (v16 + v59)) | 0x70B9105F53F81A68) - (v16 + v59) + 0x47A377D05603F2CCLL) ^ 0xDAD6347D20B7EA56 ^ __ROR8__(v59, 61);
  v62 = __ROR8__((v60 + v61) ^ 0x5AC09C033F8B2761, 8) + ((v60 + v61) ^ 0x5AC09C033F8B2761 ^ __ROR8__(v61, 61));
  v8[3] = v6 ^ 0x2B ^ (((v62 - ((2 * v62) & 0xCDE279B6265D5694) - 0x190EC324ECD154B6) ^ 0xFDFAED4338776B3BLL) >> (8 * (((_BYTE)v8 + 3) & 7u)));
  return v7(v5 + 16145 + (~(2 * v5 + 1052) | 0xFFFF85FB));
}

void sub_1CF2B153C(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v6 = *(_QWORD *)(v5 + 24);
  v7 = ((v6 + 4) << 56) & 0xF800000000000000 | ((unint64_t)(v6 + 4) >> 8);
  v8 = ((2 * v7 + 0x55E7EF06772DD764) & 0xD17A6150FAA5B8D2) - v7 - 0x17B1282BB8E9C81CLL;
  v9 = v8 ^ 0x2AC9CDF2D32C653ALL;
  v8 ^= 0x7D5671EB0F9B38AFuLL;
  v10 = __ROR8__(v9, 8);
  v11 = __ROR8__((0xEA5C9FBCC4FD8D11 - ((v10 + v8) | 0xEA5C9FBCC4FD8D11) + ((v10 + v8) | 0x15A360433B0272EELL)) ^ 0x4577B0A207BF0399, 8);
  v12 = (0xEA5C9FBCC4FD8D11 - ((v10 + v8) | 0xEA5C9FBCC4FD8D11) + ((v10 + v8) | 0x15A360433B0272EELL)) ^ 0x4577B0A207BF0399 ^ __ROR8__(v8, 61);
  v13 = v11 + v12;
  v14 = (v11 + v12) ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v12, 61);
  *((_QWORD *)&v15 + 1) = v13;
  *(_QWORD *)&v15 = v13 ^ 0xE5D7DAAEED85A300;
  v16 = ((v15 >> 8) + v14) ^ 0x8E85997BF8A3092DLL;
  v17 = v16 ^ __ROR8__(v14, 61);
  *(_QWORD *)&v15 = __ROR8__(v16, 8);
  v18 = __ROR8__((((2 * (v15 + v17)) & 0xBEA5F7515F2482F2) - (v15 + v17) - 0x5F52FBA8AF92417ALL) ^ 0x6DA41B40904260D7, 8);
  v19 = (((2 * (v15 + v17)) & 0xBEA5F7515F2482F2) - (v15 + v17) - 0x5F52FBA8AF92417ALL) ^ 0x6DA41B40904260D7 ^ __ROR8__(v17, 61);
  v20 = (v18 + v19) ^ 0x628ABC52894BE762;
  v21 = v20 ^ __ROR8__(v19, 61);
  *(_QWORD *)&v15 = __ROR8__(v20, 8);
  v22 = (((2 * (v15 + v21)) & 0x62CE37D9528FDA6ELL) - (v15 + v21) - 0x31671BECA947ED38) ^ 0x94587810693335A9;
  v23 = v22 ^ __ROR8__(v21, 61);
  *(_QWORD *)&v15 = __ROR8__(v22, 8);
  *(_BYTE *)(v6 + 4) = (((((2 * ((_QWORD)v15 + v23)) & 0x58C0DF2CE6674DD2) - ((_QWORD)v15 + v23) + 0x539F90698CCC5916) ^ 0x489441F1A7959967) >> (8 * ((v6 + 4) & 7))) ^ HIBYTE(a1) ^ 0xBD;
  *(_QWORD *)&v15 = __ROR8__(v6 + 5, 8);
  v24 = (0x550C087CC469144DLL - (v15 & 0xF8FFFFFFFFFFFFFFLL)) & 0xD9C4CD82C8A7886DLL | ((v15 & 0xF8FFFFFFFFFFFFFFLL)
                                                                                      + 0x2AF3F7833B96EBB2) & 0x203B327D37587792;
  v25 = v24 ^ 0x624FCF279926CEC1;
  v24 ^= 0x35D0733E45919354uLL;
  *(_QWORD *)&v15 = __ROR8__(v25, 8);
  v26 = (0x714EDB6BFC016577 - ((v15 + v24) | 0x714EDB6BFC016577) + ((v15 + v24) | 0x8EB1249403FE9A88)) ^ 0xDE65F4753F43EBFFLL;
  v27 = v26 ^ __ROR8__(v24, 61);
  *(_QWORD *)&v15 = __ROR8__(v26, 8);
  v28 = (0xA9C89FF8F7166594 - ((v15 + v27) | 0xA9C89FF8F7166594) + ((v15 + v27) | 0x5637600708E99A6BLL)) ^ 0xB3E0BAA9E56C396BLL;
  v29 = v28 ^ __ROR8__(v27, 61);
  *(_QWORD *)&v15 = __ROR8__(v28, 8);
  v30 = (a5 - ((~(v15 + v29) | 0x70EDA6000D5D3F7ALL) + ((v15 + v29) | 0x8F1259FFF2A2C085))) ^ 0xFE683F7BF5FE3657;
  v31 = v30 ^ __ROR8__(v29, 61);
  v32 = (__ROR8__(v30, 8) + v31) ^ 0xCD091F17C02FDE51;
  v33 = v32 ^ __ROR8__(v31, 61);
  *(_QWORD *)&v15 = __ROR8__(v32, 8);
  v34 = __ROR8__((a5 - ((~(v15 + v33) | 0x9885A61A4D26BB90) + ((v15 + v33) | 0x677A59E5B2D9446FLL))) ^ 0xFA0F1A48C46D5CF2, 8);
  v35 = (a5 - ((~(v15 + v33) | 0x9885A61A4D26BB90) + ((v15 + v33) | 0x677A59E5B2D9446FLL))) ^ 0xFA0F1A48C46D5CF2 ^ __ROR8__(v33, 61);
  v36 = __ROR8__((v34 + v35) ^ 0x5AC09C033F8B2761, 8) + ((v34 + v35) ^ 0x5AC09C033F8B2761 ^ __ROR8__(v35, 61));
  *(_BYTE *)(v6 + 5) = a1 ^ (((a5 - ((~v36 | 0xC973D85EECBA4145) + (v36 | 0x368C27A11345BEBALL))) ^ 0xD27809C6C7E38134) >> (8 * ((v6 + 5) & 7))) ^ 2;
  JUMPOUT(0x1CF2B0E94);
}

uint64_t sub_1CF2B1A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a67;
  int v67;

  v67 = STACK[0x248];
  if (LODWORD(STACK[0x248]) == 5481)
    return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x310] + 8
                                                         * ((1912 * (LODWORD(STACK[0x270]) == 1147281597)) ^ 0x3EA))
                              - 8))();
  if (v67 == 631)
    return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x310] + 8
                                                         * ((1820 * (LODWORD(STACK[0x270]) == 1147281601)) ^ 0x3EA))
                              - 8))();
  if (v67 != 52941)
    JUMPOUT(0x1CF2B3718);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x310]
                                        + 8
                                        * ((1258
                                          * (((2 * (LODWORD(STACK[0x270]) - (a67 & 0x9C147D78) + 162012675)) & 0xFFBEF7BA ^ 0x9C147538)
                                           + ((LODWORD(STACK[0x270]) - (a67 & 0x9C147D78) + 162012675) ^ 0x31D54561)
                                           - 1284854297 != 860498372)) ^ 0x9A))
                            - 8))();
}

void sub_1CF2B1A98()
{
  JUMPOUT(0x1CF2B0E54);
}

uint64_t sub_1CF2B1B20()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((v1 + (v0 ^ (v2 + 1293)) + v0 - 1200 - 290)
                                          * (STACK[0x208] == 0x373C0AAD4CE136CBLL)) ^ v0))
                            - 4))();
}

void sub_1CF2B1B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + 40 * v0;
  LODWORD(STACK[0x270]) = *(_DWORD *)(v2 + 32);
  LODWORD(STACK[0x2D4]) = *(_DWORD *)(v2 + 24);
  JUMPOUT(0x1CF2B1BCCLL);
}

uint64_t sub_1CF2B1CB8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  int v64;
  int v65;
  uint64_t v66;

  STACK[0x270] = *(_QWORD *)(v66 + 24);
  STACK[0x248] = a64 - 0x2DD266C5A2519723;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x310]
                                        + 8
                                        * (((((a1 + 6) ^ 0x78E) + ((a1 + 6) | 1) - 2084)
                                          * ((v65 + v64 - 2145352669) < 8)) ^ a1))
                            - 8))();
}

uint64_t sub_1CF2B1D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a71;
  unsigned int v71;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x310]
                                        + 8
                                        * ((387
                                          * (((a71 - STACK[0x270] - 0x2DD266C5A251972DLL < 0x10) ^ v71) & 1)) ^ v71))
                            - (v71 ^ 0x78F)
                            + 970))();
}

uint64_t sub_1CF2B1D88()
{
  unsigned int v0;
  int v1;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x310]
                                                     + 8
                                                     * (((((((v1 ^ 0x48) - 1022) | 0x140) + 234) ^ ((v1 ^ 0x48) - 416))
                                                       * (v0 < 0x10)) ^ v1 ^ 0x48))
                                         - 8))(0);
}

#error "1CF2B26C4: call analysis failed (funcsize=508)"

void sub_1CF2B26C8()
{
  JUMPOUT(0x1CF2B2000);
}

void sub_1CF2B2740(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v62;
  _BYTE *v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;

  v63 = *(_BYTE **)(v62 + 24);
  v64 = a62 - ((2 * a62 - 0x6AED6C29A4850E22) & 0xF6B04CCF712B80C0) - 0x3A1E8FAD19ACC6B1;
  v65 = __ROR8__(v63 + 10, 8);
  v66 = ((2 * (v65 & 0xF8FFFFFFFFFFFFFFLL) + 0x55E7EF06772DD764) & 0x90B16B7D1B79A6A2)
      - (v65 & 0xF8FFFFFFFFFFFFFFLL)
      + 0xCB352BE36AC40FCLL;
  v67 = v66 ^ 0xE2C48E423C26A02;
  v66 ^= 0x59B3F4FDFF753797uLL;
  v68 = __ROR8__(v67, 8);
  v69 = __ROR8__((((2 * (v68 + v66)) | 0x17FE78BC45B94652) - (v68 + v66) + 0x7400C3A1DD235CD7) ^ 0xDB2BECBF1E61D25ELL, 8);
  v70 = (((2 * (v68 + v66)) | 0x17FE78BC45B94652) - (v68 + v66) + 0x7400C3A1DD235CD7) ^ 0xDB2BECBF1E61D25ELL ^ __ROR8__(v66, 61);
  v71 = v69 + v70;
  v72 = (v69 + v70) ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v70, 61);
  *((_QWORD *)&v73 + 1) = v71;
  *(_QWORD *)&v73 = v71 ^ 0xE5D7DAAEED85A300;
  v74 = (((2 * ((v73 >> 8) + v72)) | 0x706FEFFD119E6122) - ((v73 >> 8) + v72) - 0x3837F7FE88CF3091) ^ 0xB6B26E85706C39BCLL;
  v75 = v74 ^ __ROR8__(v72, 61);
  *(_QWORD *)&v73 = __ROR8__(v74, 8);
  v76 = (((v73 + v75) | 0xE7F54DC4843AFB99) - ((v73 + v75) | 0x180AB23B7BC50466) + 0x180AB23B7BC50466) ^ 0x2AFC52D3441525C8;
  v77 = v76 ^ __ROR8__(v75, 61);
  v78 = (__ROR8__(v76, 8) + v77) ^ 0x628ABC52894BE762;
  v79 = v78 ^ __ROR8__(v77, 61);
  v80 = (__ROR8__(v78, 8) + v79) ^ 0x5AC09C033F8B2761;
  v81 = v80 ^ __ROR8__(v79, 61);
  *(_QWORD *)&v73 = __ROR8__(v80, 8);
  v63[10] = (((((2 * ((_QWORD)v73 + v81)) & 0x5BA874AF5D38F1CELL) - ((_QWORD)v73 + v81) + 0x522BC5A851638718) ^ 0x492014307A3A4769uLL) >> (8 * (((_BYTE)v63 + 10) & 7u))) ^ (v64 >> (a1 - 28)) ^ 0xFB;
  *(_QWORD *)&v73 = __ROR8__(v63 + 11, 8);
  v82 = (v73 & 0xF8FFFFFFFFFFFFFFLL)
      - ((2 * (v73 & 0xF8FFFFFFFFFFFFFFLL) + 0x15E7EF06772DD764) & 0x355AB94138DC40D0)
      + 0x45A15423D8050C1ALL;
  *(_QWORD *)&v73 = __ROR8__(v82 ^ 0x23265E05CDEF66C4, 8);
  v83 = (-2
       - ((~(v73 + (v82 ^ 0x74B9E21C11583B51)) | 0xC11DED4DEE4C92CCLL)
        + ((v73 + (v82 ^ 0x74B9E21C11583B51)) | 0x3EE212B211B36D33))) ^ 0x91C93DACD2F1E3BBLL;
  v84 = v83 ^ __ROR8__(v82 ^ 0x74B9E21C11583B51, 61);
  v85 = __ROR8__(v83, 8) + v84;
  v86 = v85 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v84, 61);
  *((_QWORD *)&v73 + 1) = v85;
  *(_QWORD *)&v73 = v85 ^ 0xE5D7DAAEED85A300;
  v87 = (-2 - ((~((v73 >> 8) + v86) | 0x77956CCF89056578) + (((v73 >> 8) + v86) | 0x886A933076FA9A87))) ^ 0xF910F5B471A66C55;
  v88 = v87 ^ __ROR8__(v86, 61);
  v89 = (__ROR8__(v87, 8) + v88) ^ 0xCD091F17C02FDE51;
  v90 = v89 ^ __ROR8__(v88, 61);
  *(_QWORD *)&v73 = __ROR8__(v89, 8);
  v91 = (v73 + v90 - ((2 * (v73 + v90)) & 0xA9BB3F9CB54546FALL) - 0x2B226031A55D5C83) ^ 0xB657239CD3E9441FLL;
  v92 = v91 ^ __ROR8__(v90, 61);
  *(_QWORD *)&v73 = __ROR8__(v91, 8);
  v93 = (((2 * ((v73 + v92) ^ 0x42D0978BF5AB05F8)) & 0x28E8EE91FE510F3CLL)
       - ((v73 + v92) ^ 0x42D0978BF5AB05F8)
       - 0x14747748FF28879FLL) ^ 0xF39B833FCAF75AF8;
  v94 = v93 ^ __ROR8__(v92, 61);
  *(_QWORD *)&v73 = __ROR8__(v93, 8);
  v63[11] = (((((2 * ((_QWORD)v73 + v94)) & 0x3AD738EFF2AEAA6ELL) - ((_QWORD)v73 + v94) - 0x1D6B9C77F9575538) ^ 0xF99FB2102DF16AB9) >> (8 * (((_BYTE)v63 + 11) & 7u))) ^ BYTE6(v64) ^ 0x58;
  v95 = (((unint64_t)(v63 + 12) >> 8) - 0x550C087CC469144ELL + ((unint64_t)(v63 + 12) >> 3 << 59)) & 0xF9FFFFFFFFFFFFFFLL;
  v96 = v95 ^ 0xBB8B02A5518146ACLL;
  v95 ^= 0xEC14BEBC8D361B39;
  *(_QWORD *)&v73 = __ROR8__(v96, 8);
  v97 = (-2 - ((~(v73 + v95) | 0xD61356B240505818) + ((v73 + v95) | 0x29ECA94DBFAFA7E7))) ^ 0x86C786537CED296FLL;
  v98 = v97 ^ __ROR8__(v95, 61);
  *(_QWORD *)&v73 = __ROR8__(v97, 8);
  v99 = (v73 + v98 - ((2 * (v73 + v98)) & 0xA73BF08C7129AAFALL) - 0x2C6207B9C76B2A83) ^ 0x364A22E8D511767DLL;
  v100 = v99 ^ __ROR8__(v98, 61);
  v101 = (__ROR8__(v99, 8) + v100) ^ 0x8E85997BF8A3092DLL;
  v102 = v101 ^ __ROR8__(v100, 61);
  v103 = (__ROR8__(v101, 8) + v102) ^ 0xCD091F17C02FDE51;
  v104 = v103 ^ __ROR8__(v102, 61);
  v105 = (__ROR8__(v103, 8) + v104) ^ 0x628ABC52894BE762;
  v106 = v105 ^ __ROR8__(v104, 61);
  v107 = (__ROR8__(v105, 8) + v106) ^ 0x5AC09C033F8B2761;
  v63[12] = (((__ROR8__(v107, 8) + (v107 ^ __ROR8__(v106, 61))) ^ 0x1B0BD1982B59C071uLL) >> (8 * (((_BYTE)v63 + 12) & 7u))) ^ BYTE5(v64) ^ 0x26;
  *(_QWORD *)&v73 = __ROR8__(v63 + 13, 8);
  v108 = ((0x150C087CC469144DLL - (v73 & 0xF8FFFFFFFFFFFFFFLL)) & 0x28C891185D033579)
       + (v73 & 0xF8FFFFFFFFFFFFFFLL)
       - 0x550C087CC469144ELL
       - (((v73 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL) & 0x28C891185D033579);
  v109 = v108 ^ 0x914393BD0C8273D5;
  v108 ^= 0xC6DC2FA4D0352E40;
  v110 = (__ROR8__(v109, 8) + v108) ^ 0x50D4D0E13CBD7177;
  v111 = v110 ^ __ROR8__(v108, 61);
  v112 = __ROR8__(v110, 8) + v111;
  v113 = v112 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v111, 61);
  *((_QWORD *)&v73 + 1) = v112;
  *(_QWORD *)&v73 = v112 ^ 0xE5D7DAAEED85A300;
  v114 = __ROR8__(((v73 >> 8) + v113) ^ 0x8E85997BF8A3092DLL, 8);
  v115 = ((v73 >> 8) + v113) ^ 0x8E85997BF8A3092DLL ^ __ROR8__(v113, 61);
  v116 = (((v114 + v115) | 0x44E79080D479A43CLL) - ((v114 + v115) | 0xBB186F7F2B865BC3) - 0x44E79080D479A43DLL) ^ 0x89EE8F9714567A6DLL;
  v117 = __ROR8__(v116, 8);
  v118 = v116 ^ __ROR8__(v115, 61);
  v119 = (v117 + v118 - ((2 * (v117 + v118)) & 0x52EBE49C49841E16) - 0x568A0DB1DB3DF0F5) ^ 0xCBFF4E1CAD89E869;
  v120 = v119 ^ __ROR8__(v118, 61);
  *(_QWORD *)&v73 = __ROR8__(v119, 8);
  v121 = (((2 * (v73 + v120)) & 0x2CE91245637A82CELL) - (v73 + v120) - 0x16748922B1BD4168) ^ 0xB34BEADE71C999F9;
  v122 = v121 ^ __ROR8__(v120, 61);
  *(_QWORD *)&v73 = __ROR8__(v121, 8);
  v63[13] = ((((((_QWORD)v73 + v122) | 0x65D87B9400A7D7E8)
             - (((_QWORD)v73 + v122) | 0x9A27846BFF582817)
             - 0x65D87B9400A7D7E9) ^ 0x7ED3AA0C2BFE1799) >> (8 * (((_BYTE)v63 + 13) & 7u))) ^ BYTE4(v64) ^ 0x67;
  v123 = (__ROR8__(v63 + 14, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL;
  v124 = v123 ^ 0xB98B02A5518146ACLL;
  v123 ^= 0xEE14BEBC8D361B39;
  *(_QWORD *)&v73 = __ROR8__(v124, 8);
  v125 = (-2 - ((~(v73 + v123) | 0xE9A79F6B661C85EELL) + ((v73 + v123) | 0x1658609499E37A11))) ^ 0xB9734F8A5AA1F499;
  v126 = v125 ^ __ROR8__(v123, 61);
  *(_QWORD *)&v73 = __ROR8__(v125, 8);
  v127 = (-2 - ((~(v73 + v126) | 0x4D951D4085C79FFCLL) + ((v73 + v126) | 0xB26AE2BF7A386003))) ^ 0xA842C7EE68423CFCLL;
  v128 = v127 ^ __ROR8__(v126, 61);
  *(_QWORD *)&v73 = __ROR8__(v127, 8);
  v129 = (v73 + v128 - ((2 * (v73 + v128)) & 0x21DC1477A93D02AELL) - 0x6F11F5C42B617EA9) ^ 0x1E6B93402C3D887ALL;
  v130 = v129 ^ __ROR8__(v128, 61);
  v131 = (__ROR8__(v129, 8) + v130) ^ 0xCD091F17C02FDE51;
  v132 = v131 ^ __ROR8__(v130, 61);
  v133 = (__ROR8__(v131, 8) + v132) ^ 0x628ABC52894BE762;
  v134 = v133 ^ __ROR8__(v132, 61);
  *(_QWORD *)&v73 = __ROR8__(v133, 8);
  v135 = (((v73 + v134) ^ 0xDA4A082A2E95835ALL)
        - ((2 * ((v73 + v134) ^ 0xDA4A082A2E95835ALL)) & 0xC06B33C43F36BFCLL)
        + 0x603599E21F9B5FELL) ^ 0x8689CDB730E711C5;
  v136 = v135 ^ __ROR8__(v134, 61);
  *(_QWORD *)&v73 = __ROR8__(v135, 8);
  v63[14] = ((((((_QWORD)v73 + v136) | 0x66A3B2E4FFC0348)
             - (((_QWORD)v73 + v136) | 0xF995C4D1B003FCB7)
             - 0x66A3B2E4FFC0349) ^ 0x1D61EAB664A5C339) >> (8 * (((_BYTE)v63 + 14) & 7u))) ^ ((a62
                                                                                                 - ((2 * (_DWORD)a62 + 1534783966) & 0x712B80C0)
                                                                                                 - 430753457) >> 24) ^ 0xB8;
  v137 = (((unint64_t)(v63 + 15) >> 8) - 0x550C087CC469144ELL + ((unint64_t)(v63 + 15) >> 3 << 59)) & 0xF9FFFFFFFFFFFFFFLL;
  *(_QWORD *)&v73 = __ROR8__(v137 ^ 0xBB8B02A5518146ACLL, 8);
  v138 = (((2 * (v73 + (v137 ^ 0xEC14BEBC8D361B39))) & 0x816ACA45F412BB72)
        - (v73
         + (v137 ^ 0xEC14BEBC8D361B39))
        + 0x3F4A9ADD05F6A246) ^ 0x6F9E4A3C394BD331;
  v139 = v138 ^ __ROR8__(v137 ^ 0xEC14BEBC8D361B39, 61);
  *(_QWORD *)&v73 = __ROR8__(v138, 8);
  v140 = (((v73 + v139) ^ 0x2692AA20E73CE799 | 0x9DC1EBBF7BCB2010)
        - ((v73 + v139) ^ 0x2692AA20E73CE799 | 0x623E14408434DFEFLL)
        + 0x623E14408434DFEFLL) ^ 0x5E849B3171726489;
  v141 = v140 ^ __ROR8__(v139, 61);
  *(_QWORD *)&v73 = __ROR8__(v140, 8);
  v142 = (((v73 + v141) ^ 0x919E5F45A3B0DF24)
        - ((2 * ((v73 + v141) ^ 0x919E5F45A3B0DF24)) & 0x371B0A0EEE8C1D3ELL)
        - 0x64727AF888B9F161) ^ 0x849643392C55D896 ^ __ROR8__(v141, 61);
  v143 = (__ROR8__((((v73 + v141) ^ 0x919E5F45A3B0DF24)- ((2 * ((v73 + v141) ^ 0x919E5F45A3B0DF24)) & 0x371B0A0EEE8C1D3ELL)- 0x64727AF888B9F161) ^ 0x849643392C55D896, 8)+ v142) ^ 0xCD091F17C02FDE51;
  v144 = v143 ^ __ROR8__(v142, 61);
  v145 = (__ROR8__(v143, 8) + v144) ^ 0x628ABC52894BE762;
  v146 = v145 ^ __ROR8__(v144, 61);
  *(_QWORD *)&v73 = __ROR8__(v145, 8);
  v147 = (-2 - ((~(v73 + v146) | 0xC967FA94AB04334ELL) + ((v73 + v146) | 0x3698056B54FBCCB1))) ^ 0x93A76697948F142FLL;
  v148 = v147 ^ __ROR8__(v146, 61);
  *(_QWORD *)&v73 = __ROR8__(v147, 8);
  v63[15] = (((-2 - ((~((_QWORD)v73 + v148) | 0x87F6A9D2E02A807ELL) + (((_QWORD)v73 + v148) | 0x7809562D1FD57F81))) ^ 0x9CFD784ACB73400FLL) >> (8 * (((_BYTE)v63 + 15) & 7u))) ^ ((a62 - ((2 * (_DWORD)a62 + 1534783966) & 0x712B80C0) - 430753457) >> 16) ^ 0x95;
  *(_QWORD *)&v73 = __ROR8__(v63 + 16, 8);
  v149 = -2
       - (((0x150C087CC469144DLL - (v73 & 0xF8FFFFFFFFFFFFFFLL)) | 0xD42E87D37243C3E6)
        + (((v73 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL) | 0x2BD1782C8DBC3C19));
  v150 = v149 ^ 0x6DA5857623C2854ALL;
  v149 ^= 0x3A3A396FFF75D8DFuLL;
  *(_QWORD *)&v73 = __ROR8__(v150, 8);
  v151 = (((v73 + v149) | 0x96F726EF6CD2AD87) - ((v73 + v149) | 0x6908D910932D5278) + 0x6908D910932D5278) ^ 0xC623F60E506FDCF0;
  v152 = v151 ^ __ROR8__(v149, 61);
  v153 = __ROR8__(v151, 8) + v152;
  v154 = v153 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v152, 61);
  *((_QWORD *)&v73 + 1) = v153;
  *(_QWORD *)&v73 = v153 ^ 0xE5D7DAAEED85A300;
  v155 = (-2 - ((~((v73 >> 8) + v154) | 0x3BD37CAD8A56413ELL) + (((v73 >> 8) + v154) | 0xC42C835275A9BEC1))) ^ 0xB556E5D672F54813;
  v156 = v155 ^ __ROR8__(v154, 61);
  v157 = (__ROR8__(v155, 8) + v156) ^ 0xCD091F17C02FDE51;
  v158 = __ROR8__(v157, 8);
  v159 = v157 ^ __ROR8__(v156, 61);
  v160 = (v158 + v159) ^ 0x628ABC52894BE762;
  v161 = v160 ^ __ROR8__(v159, 61);
  v162 = (__ROR8__(v160, 8) + v161) ^ 0x5AC09C033F8B2761;
  v63[16] = (((__ROR8__(v162, 8) + (v162 ^ __ROR8__(v161, 61))) ^ 0x1B0BD1982B59C071uLL) >> (8 * (((_BYTE)v63 + 16) & 7u))) ^ BYTE1(v64) ^ 0xC0;
  v163 = (((unint64_t)(v63 + 17) >> 8) - 0x550C087CC469144ELL + ((unint64_t)(v63 + 17) >> 3 << 59)) ^ 0xF5E6268322329A2;
  v164 = ((2 * v163) & 0xB425A4BB16C91CCLL) - v163 - 0x5A12D25D8B648E7;
  v165 = (__ROR8__(v164 ^ 0x4C8BB21744EBD817, 8) + (v164 ^ 0x1B140E0E985C8582)) ^ 0x50D4D0E13CBD7177;
  *((_QWORD *)&v73 + 1) = v164 ^ 0x1B140E0E985C8582;
  *(_QWORD *)&v73 = v164;
  v166 = v165 ^ (v73 >> 61);
  v167 = __ROR8__(v165, 8) + v166;
  v168 = v167 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v166, 61);
  *((_QWORD *)&v73 + 1) = v167;
  *(_QWORD *)&v73 = v167 ^ 0xE5D7DAAEED85A300;
  v169 = ((v73 >> 8) + v168) ^ 0x8E85997BF8A3092DLL;
  v170 = v169 ^ __ROR8__(v168, 61);
  *(_QWORD *)&v73 = __ROR8__(v169, 8);
  v171 = (((2 * (v73 + v170)) | 0xC2F682CA4CC09A3CLL) - (v73 + v170) - 0x617B416526604D1ELL) ^ 0xAC725E72E64F934FLL;
  v172 = v171 ^ __ROR8__(v170, 61);
  *(_QWORD *)&v73 = __ROR8__(v171, 8);
  v173 = (((2 * (v73 + v172)) | 0xC157B57B1A348C68) - (v73 + v172) - 0x60ABDABD8D1A4634) ^ 0x22166EF0451A156;
  v174 = v173 ^ __ROR8__(v172, 61);
  *(_QWORD *)&v73 = __ROR8__(v173, 8);
  v175 = (((v73 + v174) | 0xD97D8D1C4B94792ALL) - ((v73 + v174) | 0x268272E3B46B86D5) + 0x268272E3B46B86D5) ^ 0x83BD111F741F5E4BLL;
  v63[17] = (((__ROR8__(v175, 8) + (v175 ^ __ROR8__(v174, 61))) ^ 0x1B0BD1982B59C071) >> (8 * (((_BYTE)v63 + 17) & 7u))) ^ (a62 - ((2 * a62 - 34) & 0xC0) + 79) ^ 0x60;
  STACK[0x328] = 0x23120F4208F8DDDLL;
  STACK[0x270] = (unint64_t)&STACK[0x328];
  JUMPOUT(0x1CF2AEAB8);
}

uint64_t sub_1CF2B3780@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  int v2;
  unsigned int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = (a1 + 1244722391) & 0xB5CF07CF;
  v4 = sub_1CF370D34();
  v5 = STACK[0x288];
  v6 = STACK[0x310];
  *v1 = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v6
                                                      + 8
                                                      * (int)((1375
                                                             * (((v3 ^ (v2 - 1) ^ (v5 == 0x23120F4208F8DDDLL)) & 1) == 0)) ^ v3))
                                          - ((v3 - 451) ^ 0x18ALL)))(v4);
}

void sub_1CF2B3818()
{
  sub_1CF370D34();
  JUMPOUT(0x1CF2B384CLL);
}

uint64_t sub_1CF2B385C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  _BOOL4 v5;

  v5 = v2 == ((v0 - 75364351) ^ (v1 + 571));
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((16 * v5) | (32 * v5)) ^ (v0 + v3))) - 12))();
}

uint64_t sub_1CF2B3898()
{
  return ((uint64_t (*)(void))STACK[0x250])();
}

uint64_t sub_1CF2B38A8()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  LODWORD(STACK[0x2C0]) = v1;
  v6 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((v3 + v4 - 46) ^ (1209 * (v2 == v0)))) - 12);
  LODWORD(STACK[0x2C4]) = -1393729084;
  return v6();
}

uint64_t sub_1CF2B38EC()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v3 + v2) ^ ((16 * (v1 == v0)) | (32 * (v1 == v0)))))
                            - ((v3 - 207902587) & 0x7E65F7B ^ 0x237)))();
}

uint64_t sub_1CF2B3930()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v1 == v0) * (v2 + 75364630)) ^ (v2 + 75364922))) - 12))();
}

uint64_t sub_1CF2B3960@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((1815
                                               * (((a1 + 1700862748) & 0x9A9EE3FC)
                                                + v1
                                                - 339
                                                + (((((a1 + 1700862748) & 0x9A9EE3FC) - 16) | 0x20) ^ 0xC184E3B1) < ((((a1 + 1700862748) & 0x9A9EE3FC) - 1266680533) & 0x4FFDFBBA ^ (v2 - 2)))) ^ (a1 + 1700862748) & 0x9A9EE3FC))
                            - 12))();
}

uint64_t sub_1CF2B39E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  int v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((1223 * (v7 != v8)) ^ a6)) - 8))();
}

#error "1CF2B4AD4: call analysis failed (funcsize=999)"

void sub_1CF2B4AD8()
{
  JUMPOUT(0x1CF2B3CD0);
}

uint64_t sub_1CF2B4AE0(int a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v2 + v1 + v5 - 154 + 806) * (v4 != a1)) ^ v5))
                            - ((v5 + 903) ^ 0x429)))();
}

uint64_t sub_1CF2B4B20(uint64_t a1, int a2)
{
  char v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x310] + 8 * ((124 * ((v2 & 8) == ((a2 - 223) | 0x90) - 978)) ^ a2))
                            - 8))();
}

uint64_t sub_1CF2B4B60@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v3 = 22 * (v2 ^ 0x3D5);
  v4 = v3 - v1;
  v5 = (a1 - 860498373);
  v6 = v5 + STACK[0x270];
  v7 = (((v4 + 186) ^ 0xF8000000047DFA3ALL) & ((v6 + 10) << 56) & 0xFF00000000000000 | ((unint64_t)(v6 + 10) >> 8))
     - 0x550C087CC469144ELL;
  v8 = (v7 | 0x991A82D9727F8A1ELL) - (v7 | 0x66E57D268D8075E1) + 0x66E57D268D8075E1;
  v9 = v8 ^ 0x2091807C23FECCB2;
  v8 ^= 0x770E3C65FF499127uLL;
  v10 = (__ROR8__(v9, 8) + v8) ^ 0x50D4D0E13CBD7177;
  v11 = v10 ^ __ROR8__(v8, 61);
  v12 = __ROR8__(v10, 8);
  v13 = (((2 * (v12 + v11)) & 0x8B37078EC418761ELL) - (v12 + v11) - 0x459B83C7620C3B10) ^ 0x5FB3A696707667F0;
  v14 = v13 ^ __ROR8__(v11, 61);
  v15 = __ROR8__(v13, 8);
  v16 = (((2 * (v15 + v14)) | 0x909803455169E568) - (v15 + v14) - 0x484C01A2A8B4F2B4) ^ 0xC6C998D95017FB99;
  v17 = v16 ^ __ROR8__(v14, 61);
  v18 = __ROR8__(v16, 8);
  v19 = (((2 * (v18 + v17)) | 0x661703085D1D211ALL) - (v18 + v17) - 0x330B81842E8E908DLL) ^ 0xFE029E93EEA14EDCLL;
  v20 = v19 ^ __ROR8__(v17, 61);
  v21 = __ROR8__(v19, 8);
  v22 = (((2 * (v21 + v20)) | 0x88D82846AB8C19D8) - (v21 + v20) - 0x446C142355C60CECLL) ^ 0x26E6A871DC8DEB8ELL;
  v23 = v22 ^ __ROR8__(v20, 61);
  v24 = __ROR8__(v22, 8);
  *(_BYTE *)(v6 + 10) = (((__ROR8__((0x96EEEB3C2090953ELL- ((v24 + v23) | 0x96EEEB3C2090953ELL)+ ((v24 + v23) | 0x691114C3DF6F6AC1)) ^ 0x33D188C0E0E44DA0, 8)+ ((0x96EEEB3C2090953ELL- ((v24 + v23) | 0x96EEEB3C2090953ELL)+ ((v24 + v23) | 0x691114C3DF6F6AC1)) ^ 0x33D188C0E0E44DA0 ^ __ROR8__(v23, 61))) ^ 0x1B0BD1982B59C071) >> (8 * ((v6 + 10) & 7))) ^ *(_BYTE *)(STACK[0x248] + v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x310] + 8 * ((840 * (a1 != 860498373)) ^ v3)) - 8))();
}

void sub_1CF2B4E1C(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 8) ^ (1966835309 * ((2 * (a1 & 0x715F28E4) - a1 + 245421851) ^ 0xBDC5D47B));
  v2 = *(_QWORD *)((char *)*(&off_1E8C4D9A0 + (v1 ^ 0x328))
                 + 8
                 * ((1399
                   * (((uint64_t (*)(char *, _QWORD, _QWORD))*(&off_1E8C4D9A0 + (v1 ^ 0x332)))((char *)*(&off_1E8C4D9A0 + (v1 ^ 0x35F)) - 12, 0, 0) != 0)) ^ v1)- 12);
  __asm { BR              X8 }
}

uint64_t sub_1CF2B4ED0()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t result;

  (*(void (**)(uint64_t, _QWORD))(v3 + 8 * (v2 ^ 0x37B)))(v1, *(_QWORD *)(v3 + 8 * (v2 - 766)));
  result = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v2 ^ 0x35A)))(v1);
  *v0 = v1;
  return result;
}

void sub_1CF2B4F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v4;
  int v6;

  if (a2)
    v4 = a3 == 0;
  else
    v4 = 1;
  v6 = !v4 && a4 != 0;
  __asm { BR              X8 }
}

uint64_t sub_1CF2B4FDC(int a1)
{
  unint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v9;
  unint64_t v10;

  STACK[0x360] = v1;
  STACK[0x278] = (unint64_t)&STACK[0x37751F3B52EEF7D9];
  STACK[0x2C0] = v3 + 0x703BDE3807C31B99;
  STACK[0x298] = v3 + 0x37751F3B52EEF34DLL;
  STACK[0x248] = v3 + 0x37751F3B52EEF351;
  STACK[0x240] = (unint64_t)&STACK[0x37751F3B52EEF7C9];
  STACK[0x308] = (unint64_t)&STACK[0x703BDE3807C32001];
  *(_DWORD *)(v3 - 192) = (v2 - 853713405) ^ (248152243 * ((v3 - 192) ^ 0x1AC54DA2));
  v5 = sub_1CF370E18((_DWORD *)(v3 - 192));
  STACK[0x318] = (unint64_t)&STACK[0x703BDE3807C32011];
  STACK[0x250] = (unint64_t)sub_1CF36FD10;
  if (a1 == -1500155138)
  {
    sub_1CF36FDF0((_BYTE *)(v3 - 232), 0, 0x18uLL);
    *(_DWORD *)(v3 - 224) = 1168152686;
    *(_QWORD *)(v3 - 208) = 0x1269E57FCLL;
    *(_QWORD *)(v3 - 200) = 0x200000004;
    LODWORD(STACK[0x38C]) = 0;
    v7 = sub_1CF36FD10();
    STACK[0x358] = v7 + 0x29E41201BECB398ELL;
    return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x360] + 8 * ((49 * (((v7 == 0) ^ 0xBF) & 1)) ^ 0x40E)) - 12))();
  }
  else
  {
    if (a1 == 1453005652)
    {
      *(_DWORD *)STACK[0x2E8] = 1;
      *(_DWORD *)STACK[0x2F0] = 10;
      v6 = STACK[0x360];
      *(_DWORD *)STACK[0x2D0] = 0;
      v9 = -1393729084;
    }
    else
    {
      v9 = 1393700936;
      v6 = STACK[0x360];
    }
    v10 = STACK[0x308];
    LODWORD(STACK[0x314]) = v9;
    LODWORD(STACK[0x348]) = -1982827232;
    return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((52 * (v10 == 0x703BDE3807C31C91)) ^ 0x598)))(v5);
  }
}

uint64_t sub_1CF2B5F10()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((26 * (*(_QWORD *)(v1 - 0x703BDE3807C31C91) != 0x29E41201BECB398ELL)) ^ v0))
                            - 16 * ((v0 - 1141084089) & 0xDD3FDFF ^ LODWORD(STACK[0x348]))
                            + 156))();
}

uint64_t sub_1CF2B5F80@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;

  STACK[0x330] = v5;
  STACK[0x338] = v4;
  STACK[0x340] = v3;
  STACK[0x350] = a2 - 0x29E41201BECB398ELL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((14 * (a2 == 0x29E41201BECB3986)) | v2 ^ 0x220))
                            - (((v2 ^ 0x220u) - a1 - 193) ^ (unint64_t)(v7 + 638) ^ ((v2 ^ 0x220 ^ v8) * v6))))();
}

uint64_t sub_1CF2B6010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (int)(((*v7 != v6) * ((v5 + v8) & 0x9DD27D2F ^ (a5 - 285))) ^ v5))
                            - ((9 * (v5 ^ 0x2B4u)) ^ 0x202)))();
}

uint64_t sub_1CF2B605C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  STACK[0x358] = v1 - 0x373C0AAD4CE136CBLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((*(_QWORD *)(v1 - 0x373C0AAD4CE136CBLL) + v2 == 0x1ABC67CC39675493)
                                          * ((a1 + 858) ^ 0x544)) ^ a1))
                            - 8))();
}

uint64_t sub_1CF2B60B4()
{
  _QWORD *v0;
  uint64_t (*v1)(unint64_t);

  sub_1CF370D34();
  *v0 = 0x373C0AAD4CE136CBLL;
  return v1(STACK[0x350]);
}

void sub_1CF2B6100()
{
  JUMPOUT(0x1CF2B5FD4);
}

uint64_t sub_1CF2B6124()
{
  uint64_t v0;
  unsigned int v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v5 = sub_1CF370D34();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x360]
                                                      + 8
                                                      * (int)(((((v2 + 970324845) & 0xC62A07EC) - 1348)
                                                             * (v3 + v0 == 0x1ABC67CC39675493)) | v2))
                                          - ((v2 | v1) ^ v4)))(v5);
}

uint64_t sub_1CF2B6188()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((162 * (*(_QWORD *)(v0 - 0x23120F4208F8DC5) == 0)) ^ v1))
                            - 2 * ((v1 - 175122201) & 0xA7023BE ^ 0xE9u)
                            + 1466))();
}

uint64_t sub_1CF2B6200()
{
  _QWORD *v0;

  sub_1CF370D34();
  *v0 = 0;
  return sub_1CF2B6124();
}

uint64_t sub_1CF2B621C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  v5 = a3 + a5;
  v6 = sub_1CF370D34();
  return (*(uint64_t (**)(uint64_t))(STACK[0x360]
                                            + 8
                                            * (((v5 - 440) * (STACK[0x340] == 0x703BDE3807C31C91)) ^ (v5 + 1004))))(v6);
}

uint64_t sub_1CF2B6290()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = 0x29E41201BECB398ELL;
  return ((uint64_t (*)(void))(v1 - 4))();
}

void sub_1CF2B62C0()
{
  JUMPOUT(0x1CF2B5EC4);
}

uint64_t sub_1CF2B62D8()
{
  int v1;

  return v1 ^ 0xACED61C4;
}

uint64_t sub_1CF2B63DC@<X0>(uint64_t a1@<X0>, int a2@<W4>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  STACK[0x260] = v5 - 240;
  STACK[0x348] = 0x4E4BAAA3757F331FLL;
  LODWORD(STACK[0x340]) = -1129976585;
  v6 = STACK[0x360];
  LODWORD(STACK[0x210]) = a2 - 1253;
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                     + 8
                                                                     * ((795 * (a3 != 0x373C0AAD4CE136CBLL)) ^ (v4 + 1982828707)))
                                                         - (v4 ^ (a2 - 1253))
                                                         + 1379);
  STACK[0x200] = *(_QWORD *)(v6 + 8 * (v3 - 436)) - 4;
  return v7(a1, 0x628ABC52894BE762, 1982827669);
}

uint64_t sub_1CF2B64C0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((*(_QWORD *)(a1 - 0x373C0AAD4CE136CBLL) != 0x23120F4208F8DDDLL)
                                          * (((((v1 - 365) | 0x44) - 901) | 0x50C) ^ 0x6C0)) ^ ((v1 - 365) | 0x44)))
                            - ((((v1 - 365) | 0x44u) - 1037) ^ 0x31)))();
}

void sub_1CF2B7B68()
{
  unint64_t v0;

  STACK[0x2F8] = v0;
  JUMPOUT(0x1CF2B6BACLL);
}

uint64_t sub_1CF2B7BB0()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  *(_QWORD *)STACK[0x260] = v0;
  return v1();
}

uint64_t sub_1CF2B7BC0()
{
  int v0;
  uint64_t (*v1)(void);

  v1 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x360]
                                     + 8 * ((973 * ((unsigned __int16)LODWORD(STACK[0x32C]) == 15177)) ^ 0x1E2))
                         - 12);
  LODWORD(STACK[0x340]) = v0;
  STACK[0x348] = STACK[0x258];
  return v1();
}

void sub_1CF2B7C38(int a1@<W4>, int a2@<W8>)
{
  *(_DWORD *)(STACK[0x280] - 0x37751F3B52EEF44DLL) = LODWORD(STACK[0x340]) ^ (a1 - 98) ^ a2 ^ 0x357599DD;
  LODWORD(STACK[0x32C]) = 15177;
  STACK[0x348] = STACK[0x258];
  JUMPOUT(0x1CF2B7C84);
}

uint64_t sub_1CF2B7D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a71;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(void);

  v74 = (uint64_t (*)(void))(*(_QWORD *)(v73
                                      + 8
                                      * (((*(_DWORD *)(v72 + 36) - a71 == ((v71 + 474) | 0x74) - 1973932794)
                                        * (((v71 - 2008022540) | 0x1807108) ^ (a5 - 718))) ^ v71))
                          - 12);
  LODWORD(STACK[0x304]) = 1240599315;
  return v74();
}

uint64_t sub_1CF2B81A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v63;
  int v64;
  unint64_t v65;
  int v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  LODWORD(STACK[0x260]) = v64;
  STACK[0x200] = v65;
  STACK[0x2D8] = v67;
  v70 = v66 ^ v63;
  v71 = ((uint64_t (*)(uint64_t))STACK[0x250])(32);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 + 8 * ((2042 * (v71 != 0)) ^ v66)) - (v70 ^ (v68 - 12))))(v71, v72, v73, v74, v75, v76, v77, v78, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_1CF2B8218(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v4;

  *(_QWORD *)a1 = 0x23120F4208F8DDDLL;
  *(_QWORD *)(a1 + 8) = 0x23120F4208F8DDDLL;
  *(_DWORD *)(a1 + 16) = v2 + 1193583449;
  v4 = ((uint64_t (*)(_QWORD))STACK[0x250])(((109 * (v1 ^ 0x3F2)) ^ 0xED38607C) + v2);
  *(_QWORD *)(a1 + 24) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x360]
                                        + 8 * ((1766 * ((((v1 + 164646970) ^ (v4 == 0)) & 1) == 0)) ^ v1))
                            - 8))();
}

uint64_t sub_1CF2B82B4()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t (*v5)(unint64_t);
  _BYTE *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;

  v4 = LODWORD(STACK[0x330]) - ((2 * LODWORD(STACK[0x330]) + 1935266602) & 0x74FCEE56) - 1272225600;
  v5 = (uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x360] + 8 * v0) - 4);
  LODWORD(STACK[0x230]) = v3;
  LODWORD(STACK[0x220]) = v3 - ((2 * v3 + 1517338936) & 0x74FCEE56) - 1481189433;
  LODWORD(STACK[0x210]) = v2 ^ 0x9588D2B3;
  v6 = *(_BYTE **)(v1 + 24);
  v7 = __ROR8__(v6, 8);
  v8 = (0x150C087CC469144DLL - (v7 & 0xF8FFFFFFFFFFFFFFLL)) & 0x19A889ECFF1A1ED8 | ((v7 & 0xF8FFFFFFFFFFFFFFLL)
                                                                                    - 0x550C087CC469144ELL) & 0xE057761300E5E127;
  v9 = __ROR8__(v8 ^ 0xA2238B49AE9B5874, 8);
  v8 ^= 0xF5BC3750722C05E1;
  v10 = (v9 + v8) ^ 0x50D4D0E13CBD7177;
  v11 = v10 ^ __ROR8__(v8, 61);
  v12 = __ROR8__(v10, 8) + v11;
  v13 = v12 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v11, 61);
  *((_QWORD *)&v14 + 1) = v12;
  *(_QWORD *)&v14 = v12 ^ 0xE5D7DAAEED85A300;
  v15 = ((v14 >> 8) + v13) ^ 0x8E85997BF8A3092DLL;
  v16 = v15 ^ __ROR8__(v13, 61);
  v17 = (__ROR8__(v15, 8) + v16) ^ 0xCD091F17C02FDE51;
  v18 = v17 ^ __ROR8__(v16, 61);
  v19 = (__ROR8__(v17, 8) + v18) ^ 0x628ABC52894BE762;
  v20 = v19 ^ __ROR8__(v18, 61);
  *(_QWORD *)&v14 = __ROR8__(v19, 8);
  v21 = (((2 * (v14 + v20)) & 0xFCA17D98F44813EALL) - (v14 + v20) - 0x7E50BECC7A2409F6) ^ 0xDB6FDD30BA50D16BLL;
  *v6 = (((__ROR8__(v21, 8) + (v21 ^ __ROR8__(v20, 61))) ^ 0x1B0BD1982B59C071) >> (8 * (v6 & 7u))) ^ HIBYTE(v4) ^ 0xBA;
  v22 = (__ROR8__(v6 + 1, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL;
  *(_QWORD *)&v14 = __ROR8__(v22 ^ 0xB98B02A5518146ACLL, 8);
  v22 ^= 0xEE14BEBC8D361B39;
  v23 = (v14 + v22) ^ 0x50D4D0E13CBD7177;
  v24 = v23 ^ __ROR8__(v22, 61);
  *(_QWORD *)&v14 = __ROR8__(v23, 8);
  v25 = (((2 * (v14 + v24)) & 0xA793A7F6AC829AE6) - (v14 + v24) - 0x53C9D3FB56414D74) ^ 0x49E1F6AA443B118CLL;
  v26 = v25 ^ __ROR8__(v24, 61);
  v27 = (__ROR8__(v25, 8) + v26) ^ 0x8E85997BF8A3092DLL;
  v28 = __ROR8__(v27, 8);
  v29 = v27 ^ __ROR8__(v26, 61);
  v30 = (((2 * (v28 + v29)) & 0xF0BAF55B447DEC8ELL) - (v28 + v29) + 0x7A285525DC109B8) ^ 0xCAAB9A459DEED7E9;
  v31 = v30 ^ __ROR8__(v29, 61);
  *(_QWORD *)&v14 = __ROR8__(v30, 8);
  v32 = (-2 - ((~(v14 + v31) | 0x1FF46385B66E09DELL) + ((v14 + v31) | 0xE00B9C7A4991F621))) ^ 0x7D7EDFD73F25EEBCLL;
  v33 = v32 ^ __ROR8__(v31, 61);
  *(_QWORD *)&v14 = __ROR8__(v32, 8);
  v34 = (0xA4E31C196FB07E65 - ((v14 + v33) | 0xA4E31C196FB07E65) + ((v14 + v33) | 0x5B1CE3E6904F819ALL)) ^ 0x1DC7FE5AFC4A6FBLL;
  v35 = v34 ^ __ROR8__(v33, 61);
  *(_QWORD *)&v14 = __ROR8__(v34, 8);
  v6[1] = (((-2 - ((~((_QWORD)v14 + v35) | 0x75B531B3FC4CDC6BLL) + (((_QWORD)v14 + v35) | 0x8A4ACE4C03B32394))) ^ 0x6EBEE02BD7151C1ALL) >> (8 * (((_BYTE)v6 + 1) & 7u))) ^ BYTE2(v4) ^ 0x7E;
  v36 = (__ROR8__(v6 + 2, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL;
  v37 = v36 ^ 0xB98B02A5518146ACLL;
  v36 ^= 0xEE14BEBC8D361B39;
  *(_QWORD *)&v14 = __ROR8__(v37, 8);
  v38 = (((2 * (v14 + v36)) & 0x9D263FB38571CE96) - (v14 + v36) + 0x316CE0263D4718B4) ^ 0x61B830C701FA69C3;
  v39 = v38 ^ __ROR8__(v36, 61);
  *((_QWORD *)&v14 + 1) = __ROR8__(v38, 8) + v39;
  *(_QWORD *)&v14 = *((_QWORD *)&v14 + 1) ^ 0xE5D7DAAEED85A300;
  v40 = v14 >> 8;
  *(_QWORD *)&v14 = __ROR8__(v39, 61);
  v41 = (0x8EEAB8D098054CA2
       - ((v40 + (*((_QWORD *)&v14 + 1) ^ 0xE5D7DAAEED85A300 ^ v14)) | 0x8EEAB8D098054CA2)
       + ((v40 + (*((_QWORD *)&v14 + 1) ^ 0xE5D7DAAEED85A300 ^ v14)) | 0x7115472F67FAB35DLL)) ^ 0xFF90DE549F59BA70;
  v42 = v41 ^ __ROR8__(*((_QWORD *)&v14 + 1) ^ 0xE5D7DAAEED85A300 ^ v14, 61);
  *(_QWORD *)&v14 = __ROR8__(v41, 8);
  v43 = __ROR8__((-2 - ((~(v14 + v42) | 0x978199C1D991797DLL) + ((v14 + v42) | 0x687E663E266E8682))) ^ 0x5A8886D619BEA72CLL, 8);
  v44 = (-2 - ((~(v14 + v42) | 0x978199C1D991797DLL) + ((v14 + v42) | 0x687E663E266E8682))) ^ 0x5A8886D619BEA72CLL ^ __ROR8__(v42, 61);
  v45 = (((2 * (v43 + v44)) & 0x9D3B31D97DA9F9B8) - (v43 + v44) - 0x4E9D98ECBED4FCDDLL) ^ 0xD3E8DB41C860E441;
  v46 = v45 ^ __ROR8__(v44, 61);
  v47 = (__ROR8__(v45, 8) + v46) ^ 0x5AC09C033F8B2761;
  *(_QWORD *)&v14 = __ROR8__(v6 + 3, 8);
  v6[2] = (((__ROR8__(v47, 8) + (v47 ^ __ROR8__(v46, 61))) ^ 0x1B0BD1982B59C071uLL) >> (8 * (((_BYTE)v6 + 2) & 7u))) ^ BYTE1(v4) ^ 0x77;
  v48 = ((2 * ((v14 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0x20EB39D37CA90794)
      - ((v14 & 0xF8FFFFFFFFFFFFFFLL)
       - 0x550C087CC469144ELL)
      - 0x10759CE9BE5483CALL;
  v49 = v48 ^ 0xA9FE9E4CEFD5C566;
  v48 ^= 0xFE612255336298F3;
  *(_QWORD *)&v14 = __ROR8__(v49, 8);
  v50 = __ROR8__((-2 - ((~(v14 + v48) | 0x3D54A62DE74C24CLL) + ((v14 + v48) | 0xFC2AB59D218B3DB3))) ^ 0x53019A83E2C9B33BLL, 8);
  v51 = (-2 - ((~(v14 + v48) | 0x3D54A62DE74C24CLL) + ((v14 + v48) | 0xFC2AB59D218B3DB3))) ^ 0x53019A83E2C9B33BLL ^ __ROR8__(v48, 61);
  v52 = (-2 - ((~(v50 + v51) | 0x1730E72B835C4191) + ((v50 + v51) | 0xE8CF18D47CA3BE6ELL))) ^ 0xF2E73D856ED9E291;
  v53 = v52 ^ __ROR8__(v51, 61);
  *(_QWORD *)&v14 = __ROR8__(v52, 8);
  v54 = (v14 + v53 - ((2 * (v14 + v53)) & 0x9B516F8D43D1232ELL) - 0x325748395E176E69) ^ 0x432D2EBD594B98BALL;
  v55 = v54 ^ __ROR8__(v53, 61);
  v56 = (__ROR8__(v54, 8) + v55) ^ 0xCD091F17C02FDE51;
  v57 = v56 ^ __ROR8__(v55, 61);
  *(_QWORD *)&v14 = __ROR8__(v56, 8);
  v58 = __ROR8__((((2 * (v14 + v57)) | 0x70B9105F53F81A68) - (v14 + v57) + 0x47A377D05603F2CCLL) ^ 0xDAD6347D20B7EA56, 8);
  v59 = (((2 * (v14 + v57)) | 0x70B9105F53F81A68) - (v14 + v57) + 0x47A377D05603F2CCLL) ^ 0xDAD6347D20B7EA56 ^ __ROR8__(v57, 61);
  v60 = __ROR8__((v58 + v59) ^ 0x5AC09C033F8B2761, 8) + ((v58 + v59) ^ 0x5AC09C033F8B2761 ^ __ROR8__(v59, 61));
  v6[3] = v4 ^ 0x2B ^ (((v60 - ((2 * v60) & 0xCDE279B6265D5694) - 0x190EC324ECD154B6) ^ 0xFDFAED4338776B3BLL) >> (8 * (((_BYTE)v6 + 3) & 7u)));
  return v5(0xEE14BEBC8D361B39);
}

uint64_t sub_1CF2B8B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int v63;
  int v65;

  v63 = STACK[0x260];
  if (LODWORD(STACK[0x260]) == 49819)
    return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x360] + 8 * ((1969 * (LODWORD(STACK[0x230]) == 315072360)) ^ 0x3F0))
                              - 8))();
  v65 = STACK[0x230];
  if (v63 == 31743)
    return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x360]
                                          + 8
                                          * ((505
                                            * (((2 * (v65 - ((a63 - 630144712) & 0x9C147D78) + 994221912)) & 0xFFBEF7BA ^ 0x9C147538)
                                             + ((v65 - ((a63 - 630144712) & 0x9C147D78) + 994221912) ^ 0x31D54561)
                                             - 1284854297 != 860498372)) ^ 0x4E9))
                              - 4))();
  if (v63 != 44969)
    JUMPOUT(0x1CF2BB2F8);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x360] + 8 * ((2027 * (v65 == 315072364)) ^ 0x3F0)) - 8))(a1, a2, a3, a4, a5, a6, a7, 0x628ABC52894BE762);
}

uint64_t sub_1CF2BB358()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v3 = sub_1CF370D34();
  v4 = STACK[0x360];
  *v1 = 0;
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((1131 * ((((v0 - 1982827221) ^ (v2 == 0x23120F4208F8DDDLL)) & 1) == 0)) ^ v0)))(v3);
}

void sub_1CF2BB3BC()
{
  sub_1CF370D34();
  JUMPOUT(0x1CF2BB3ECLL);
}

uint64_t sub_1CF2BB3FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((287 * ((((287 * (v5 ^ (a5 + 4))) ^ (v6 == -1393729084)) & 1) == 0)) ^ (a3 + v5 + 111)))
                            - 12))();
}

uint64_t sub_1CF2BB448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t (*a69)(void);

  return a69();
}

uint64_t sub_1CF2BB450(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((287 * (((v5 == -1393729084) ^ (a3 + a5 - 66)) & 1)) ^ (a3 + a5 + 111)))
                            - 12))();
}

uint64_t sub_1CF2BB494(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((287 * (v5 != -1393729084)) ^ (a3 + a5 + 111)))
                            - ((a5 + 369316437) & 0x602C3CFC)
                            + 1136))();
}

uint64_t sub_1CF2BB4E4@<X0>(int a1@<W4>, int a2@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;

  v5 = a2 - 427 + LODWORD(STACK[0x304]) - 720;
  LODWORD(STACK[0x304]) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((480 * (v5 != ((a2 + 311181811) & 0xED73BBBE ^ 0x49F2093D))) ^ (a2 - 427)))
                            - ((a2 - 427) ^ (a1 + 721) ^ (unint64_t)(v3 - 8))))();
}

uint64_t sub_1CF2BB4F8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8
                                   * ((1131 * ((((v0 - 1982827221) ^ (v1 == 0x23120F4208F8DDDLL)) & 1) == 0)) ^ v0)))();
}

uint64_t sub_1CF2BB548(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8
                                        * ((295 * ((((a6 + 136) ^ 0x89D0714A ^ (v6 == a4)) & 1) == 0)) ^ (a6 - 775)))
                            - 12))();
}

uint64_t sub_1CF2BB59C()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x360] + 8 * ((603 * (((v0 - 1112) & v1) == v0 - 1120)) ^ v0)))();
}

uint64_t sub_1CF2BB5D8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  int v62;
  int v63;
  int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  int64x2_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int8x16_t v76;
  int8x16_t v77;
  int8x16_t v78;
  int8x16_t v79;
  int64x2_t v80;
  int8x16_t v81;
  int8x16_t v82;
  int64x2_t v83;
  int8x16_t v84;
  int8x16_t v85;
  int64x2_t v86;
  int8x16_t v87;
  int8x16_t v88;
  int64x2_t v89;
  int8x16_t v90;
  int8x16_t v91;
  int64x2_t v92;
  int8x16_t v93;
  int8x16_t v94;
  unint64_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int8x16_t v100;
  int8x16_t v101;
  int8x16_t v102;
  int8x16_t v103;
  int8x16_t v104;
  int64x2_t v105;
  int64x2_t v106;
  int64x2_t v107;
  int64x2_t v108;
  int64x2_t v109;
  int8x16_t v110;
  int8x16_t v111;
  int64x2_t v112;
  int64x2_t v113;
  int64x2_t v114;
  int64x2_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int64x2_t v121;
  int64x2_t v122;
  int64x2_t v123;
  int64x2_t v124;
  int64x2_t v125;
  int64x2_t v126;
  int64x2_t v127;
  int64x2_t v128;
  int64x2_t v129;
  int64x2_t v130;
  int64x2_t v131;
  int64x2_t v132;
  int64x2_t v133;
  int64x2_t v134;
  int64x2_t v135;
  int64x2_t v136;
  int64x2_t v137;
  int64x2_t v138;
  int64x2_t v139;
  int64x2_t v140;
  int64x2_t v141;
  int64x2_t v142;
  int64x2_t v143;
  int8x16_t v144;
  int8x16_t v145;
  int64x2_t v146;
  int64x2_t v147;
  int8x16_t v148;
  int64x2_t v149;
  int64x2_t v150;
  int64x2_t v151;
  int64x2_t v152;
  int64x2_t v153;
  int64x2_t v154;
  int64x2_t v155;
  int64x2_t v156;
  int64x2_t v157;
  int64x2_t v158;
  int64x2_t v159;
  int64x2_t v160;
  int64x2_t v161;
  int64x2_t v162;
  int64x2_t v163;
  int64x2_t v164;
  int8x16_t v165;
  int64x2_t v166;
  int8x16_t v167;
  int8x16_t v168;
  int64x2_t v169;
  int64x2_t v170;
  int64x2_t v171;
  int64x2_t v172;
  int64x2_t v173;
  int64x2_t v174;
  int64x2_t v175;
  int64x2_t v176;
  int64x2_t v177;
  int64x2_t v178;
  int64x2_t v179;
  int64x2_t v180;
  int64x2_t v181;
  int64x2_t v182;
  int64x2_t v183;
  int64x2_t v184;
  int8x16_t v185;
  int64x2_t v186;
  uint64_t (*v187)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int8x16x4_t v189;

  v65 = a4 - (v62 & 0xFFFFFFF8) + 8;
  v66 = v64 + v63 + v60;
  v67 = v66 - a4;
  v68 = v66 - a4 + 1;
  v69 = v66 - a4 + 2;
  v70 = (v66 - a4 + 3);
  v71 = (v66 + v58 - a4 - 1431);
  *(int64x2_t *)&STACK[0x220] = vdupq_n_s64(0xF8FFFFFFFFFFFFFFLL);
  *(int64x2_t *)&STACK[0x230] = vdupq_n_s64(0x38uLL);
  *(int64x2_t *)&STACK[0x200] = vdupq_n_s64(0x991A82D9727F8A1ELL);
  *(int64x2_t *)&STACK[0x210] = vdupq_n_s64(0xAAF3F7833B96EBB2);
  v72 = vdupq_n_s64(0x66E57D268D8075E1uLL);
  v73 = v67 + 5;
  v74 = v67 + 6;
  v75 = v67 + 7;
  v76 = (int8x16_t)vdupq_n_s64(0x2091807C23FECCB2uLL);
  v77 = (int8x16_t)vdupq_n_s64(0x770E3C65FF499127uLL);
  v78 = (int8x16_t)vdupq_n_s64(0x50D4D0E13CBD7177uLL);
  v79 = (int8x16_t)vdupq_n_s64(0x8B37078EC418761ELL);
  v80 = vdupq_n_s64(0xBA647C389DF3C4F0);
  v81 = (int8x16_t)vdupq_n_s64(0x5FB3A696707667F0uLL);
  v82 = (int8x16_t)vdupq_n_s64(0x909803455169E568);
  v83 = vdupq_n_s64(0xB7B3FE5D574B0D4CLL);
  v84 = (int8x16_t)vdupq_n_s64(0xC6C998D95017FB99);
  v85 = (int8x16_t)vdupq_n_s64(0x661703085D1D211AuLL);
  v86 = vdupq_n_s64(0xCCF47E7BD1716F73);
  v87 = (int8x16_t)vdupq_n_s64(0xFE029E93EEA14EDCLL);
  v88 = (int8x16_t)vdupq_n_s64(0x88D82846AB8C19D8);
  v89 = vdupq_n_s64(0xBB93EBDCAA39F314);
  v90 = (int8x16_t)vdupq_n_s64(0x26E6A871DC8DEB8EuLL);
  v91 = (int8x16_t)vdupq_n_s64(0x691114C3DF6F6AC1uLL);
  v92 = vdupq_n_s64(0x96EEEB3C2090953ELL);
  v93 = (int8x16_t)vdupq_n_s64(0x33D188C0E0E44DA0uLL);
  v94 = (int8x16_t)vdupq_n_s64(0x1B0BD1982B59C071uLL);
  v95 = STACK[0x360];
  v96.i64[0] = v75 + v59 + 10;
  v96.i64[1] = v74 + v59 + 10;
  v97.i64[0] = v73 + v59 + 10;
  v97.i64[1] = v71 + v59 + 10;
  v98.i64[0] = v70 + v59 + 10;
  v98.i64[1] = v69 + v59 + 10;
  v99.i64[0] = v68 + v59 + 10;
  v99.i64[1] = v67 + v59 + 10;
  v100 = *(int8x16_t *)&STACK[0x200];
  v101 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v96, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v96, 8uLL)), *(int8x16_t *)&STACK[0x220]), *(int64x2_t *)&STACK[0x210]);
  v102 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v97, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v97, 8uLL)), *(int8x16_t *)&STACK[0x220]), *(int64x2_t *)&STACK[0x210]);
  v103 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v98, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v98, 8uLL)), *(int8x16_t *)&STACK[0x220]), *(int64x2_t *)&STACK[0x210]);
  v104 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v99, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v99, 8uLL)), *(int8x16_t *)&STACK[0x220]), *(int64x2_t *)&STACK[0x210]);
  v105 = (int64x2_t)vorrq_s8(v104, *(int8x16_t *)&STACK[0x200]);
  v106 = (int64x2_t)vorrq_s8(v103, *(int8x16_t *)&STACK[0x200]);
  *(int64x2_t *)&STACK[0x260] = vsubq_s64((int64x2_t)vorrq_s8(v101, *(int8x16_t *)&STACK[0x200]), (int64x2_t)vorrq_s8(v101, (int8x16_t)v72));
  v107 = (int64x2_t)vorrq_s8(v103, (int8x16_t)v72);
  v108 = vsubq_s64((int64x2_t)vorrq_s8(v102, v100), (int64x2_t)vorrq_s8(v102, (int8x16_t)v72));
  v109 = vsubq_s64(v106, v107);
  v110 = (int8x16_t)vaddq_s64(vsubq_s64(v105, (int64x2_t)vorrq_s8(v104, (int8x16_t)v72)), v72);
  v111 = (int8x16_t)vaddq_s64(v109, v72);
  v112 = (int64x2_t)veorq_s8(v111, v76);
  v113 = (int64x2_t)veorq_s8(v110, v76);
  v114 = (int64x2_t)veorq_s8(v110, v77);
  v115 = (int64x2_t)veorq_s8(v111, v77);
  v116 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v113, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v113, 8uLL)), v114), v78);
  v117 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v112, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v112, 8uLL)), v115), v78);
  v118 = (int64x2_t)veorq_s8((int8x16_t)v117, vorrq_s8((int8x16_t)vshlq_n_s64(v115, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v115, 0x3DuLL)));
  v119 = (int64x2_t)veorq_s8((int8x16_t)v116, vorrq_s8((int8x16_t)vshlq_n_s64(v114, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v114, 0x3DuLL)));
  v120 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v116, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v116, 8uLL)), v119);
  v121 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v117, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v117, 8uLL)), v118);
  v122 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v121, v121), v79), v121), v80), v81);
  v123 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v120, v120), v79), v120), v80), v81);
  v124 = (int64x2_t)veorq_s8((int8x16_t)v123, vorrq_s8((int8x16_t)vshlq_n_s64(v119, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v119, 0x3DuLL)));
  v125 = (int64x2_t)veorq_s8((int8x16_t)v122, vorrq_s8((int8x16_t)vshlq_n_s64(v118, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v118, 0x3DuLL)));
  v126 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v122, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v122, 8uLL)), v125);
  v127 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v123, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v123, 8uLL)), v124);
  v128 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v127, v127), v82), v127), v83), v84);
  v129 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v126, v126), v82), v126), v83), v84);
  v130 = (int64x2_t)veorq_s8((int8x16_t)v129, vorrq_s8((int8x16_t)vshlq_n_s64(v125, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v125, 0x3DuLL)));
  v131 = (int64x2_t)veorq_s8((int8x16_t)v128, vorrq_s8((int8x16_t)vshlq_n_s64(v124, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v124, 0x3DuLL)));
  v132 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v128, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v128, 8uLL)), v131);
  v133 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v129, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v129, 8uLL)), v130);
  v134 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v133, v133), v85), v133), v86), v87);
  v135 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v132, v132), v85), v132), v86), v87);
  v136 = (int64x2_t)veorq_s8((int8x16_t)v135, vorrq_s8((int8x16_t)vshlq_n_s64(v131, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v131, 0x3DuLL)));
  v137 = (int64x2_t)veorq_s8((int8x16_t)v134, vorrq_s8((int8x16_t)vshlq_n_s64(v130, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v130, 0x3DuLL)));
  v138 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v134, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v134, 8uLL)), v137);
  v139 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v135, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v135, 8uLL)), v136);
  v140 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v139, v139), v88), v139), v89), v90);
  v141 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v138, v138), v88), v138), v89), v90);
  v142 = (int64x2_t)veorq_s8((int8x16_t)v141, vorrq_s8((int8x16_t)vshlq_n_s64(v137, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v137, 0x3DuLL)));
  v143 = (int64x2_t)veorq_s8((int8x16_t)v140, vorrq_s8((int8x16_t)vshlq_n_s64(v136, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v136, 0x3DuLL)));
  v144 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v140, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v140, 8uLL)), v143);
  v145 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v141, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v141, 8uLL)), v142);
  v146 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v144, v91), (int64x2_t)vorrq_s8(v144, (int8x16_t)v92)), v92), v93);
  v147 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v145, v91), (int64x2_t)vorrq_s8(v145, (int8x16_t)v92)), v92), v93);
  v148 = (int8x16_t)vaddq_s64(v108, v72);
  v189.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v146, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v146, vorrq_s8((int8x16_t)vshlq_n_s64(v143, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v143, 0x3DuLL)))), v94), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v99, 3uLL), *(int8x16_t *)&STACK[0x230])));
  v189.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v147, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v147, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v147, vorrq_s8((int8x16_t)vshlq_n_s64(v142, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v142, 0x3DuLL)))), v94), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v98, 3uLL), *(int8x16_t *)&STACK[0x230])));
  v149 = (int64x2_t)veorq_s8(v148, v76);
  v150 = (int64x2_t)veorq_s8(v148, v77);
  v151 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v149, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v149, 8uLL)), v150), v78);
  v152 = (int64x2_t)veorq_s8((int8x16_t)v151, vorrq_s8((int8x16_t)vshlq_n_s64(v150, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v150, 0x3DuLL)));
  v153 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v151, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v151, 8uLL)), v152);
  v154 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v153, v153), v79), v153), v80), v81);
  v155 = (int64x2_t)veorq_s8((int8x16_t)v154, vorrq_s8((int8x16_t)vshlq_n_s64(v152, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152, 0x3DuLL)));
  v156 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v154, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v154, 8uLL)), v155);
  v157 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v156, v156), v82), v156), v83), v84);
  v158 = (int64x2_t)veorq_s8((int8x16_t)v157, vorrq_s8((int8x16_t)vshlq_n_s64(v155, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v155, 0x3DuLL)));
  v159 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v157, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v157, 8uLL)), v158);
  v160 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v159, v159), v85), v159), v86), v87);
  v161 = (int64x2_t)veorq_s8((int8x16_t)v160, vorrq_s8((int8x16_t)vshlq_n_s64(v158, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v158, 0x3DuLL)));
  v162 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v160, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v160, 8uLL)), v161);
  v163 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v162, v162), v88), v162), v89), v90);
  v164 = (int64x2_t)veorq_s8((int8x16_t)v163, vorrq_s8((int8x16_t)vshlq_n_s64(v161, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v161, 0x3DuLL)));
  v165 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v163, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v163, 8uLL)), v164);
  v166 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v165, v91), (int64x2_t)vorrq_s8(v165, (int8x16_t)v92)), v92), v93);
  v167 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v166, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v166, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v166, vorrq_s8((int8x16_t)vshlq_n_s64(v164, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v164, 0x3DuLL))));
  v168 = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x260], v72);
  v189.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8(v167, v94), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v97, 3uLL), *(int8x16_t *)&STACK[0x230])));
  v169 = (int64x2_t)veorq_s8(v168, v76);
  v170 = (int64x2_t)veorq_s8(v168, v77);
  v171 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v169, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v169, 8uLL)), v170), v78);
  v172 = (int64x2_t)veorq_s8((int8x16_t)v171, vorrq_s8((int8x16_t)vshlq_n_s64(v170, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v170, 0x3DuLL)));
  v173 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v171, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v171, 8uLL)), v172);
  v174 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v173, v173), v79), v173), v80), v81);
  v175 = (int64x2_t)veorq_s8((int8x16_t)v174, vorrq_s8((int8x16_t)vshlq_n_s64(v172, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v172, 0x3DuLL)));
  v176 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v174, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v174, 8uLL)), v175);
  v177 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v176, v176), v82), v176), v83), v84);
  v178 = (int64x2_t)veorq_s8((int8x16_t)v177, vorrq_s8((int8x16_t)vshlq_n_s64(v175, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v175, 0x3DuLL)));
  v179 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v177, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177, 8uLL)), v178);
  v180 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v179, v179), v85), v179), v86), v87);
  v181 = (int64x2_t)veorq_s8((int8x16_t)v180, vorrq_s8((int8x16_t)vshlq_n_s64(v178, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v178, 0x3DuLL)));
  v182 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v180, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v180, 8uLL)), v181);
  v183 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v182, v182), v88), v182), v89), v90);
  v184 = (int64x2_t)veorq_s8((int8x16_t)v183, vorrq_s8((int8x16_t)vshlq_n_s64(v181, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v181, 0x3DuLL)));
  v185 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v183, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183, 8uLL)), v184);
  v186 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v185, v91), (int64x2_t)vorrq_s8(v185, (int8x16_t)v92)), v92), v93);
  v189.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v186, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v186, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v186, vorrq_s8((int8x16_t)vshlq_n_s64(v184, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184, 0x3DuLL)))), v94), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v96, 3uLL), *(int8x16_t *)&STACK[0x230])));
  *(int8x8_t *)(v75 + v59 + 3) = veor_s8(vrev64_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v189, (int8x16_t)xmmword_1CF37DAD0)), *(int8x8_t *)(v61 - 7 + v75));
  v187 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v95 + 8 * ((46 * (v65 == 0)) ^ v58));
  return v187(v70, v71, (v58 - 335), v73, v74, v75, 46, v187, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

void sub_1CF2BBEB4()
{
  JUMPOUT(0x1CF2BB810);
}

uint64_t sub_1CF2BBEBC(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((((a3 - 932) | 0x253) - 598) * (v4 == v3)) ^ a3))
                            - (((a3 - 2143272770) | 0x9903020u) ^ 0x89D0752ELL)))();
}

uint64_t sub_1CF2BBF78@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v7 = (_BYTE *)(v2 + (a1 - 860498373) + ((v1 - 1345095100) & 0xD9FCF7EA ^ 0x89D07520));
  v8 = __ROR8__(v7, 8);
  v9 = (((v8 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL) | 0x991A82D9727F8A1ELL)
     - (((v8 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL) | v4)
     + v4;
  v10 = __ROR8__(v9 ^ 0x2091807C23FECCB2, 8);
  v9 ^= 0x770E3C65FF499127uLL;
  v11 = (v10 + v9) ^ 0x50D4D0E13CBD7177;
  v12 = v11 ^ __ROR8__(v9, 61);
  v13 = __ROR8__(v11, 8);
  v14 = (((2 * (v13 + v12)) & 0x8B37078EC418761ELL) - (v13 + v12) - 0x459B83C7620C3B10) ^ 0x5FB3A696707667F0;
  v15 = v14 ^ __ROR8__(v12, 61);
  v16 = __ROR8__(v14, 8);
  v17 = (((2 * (v16 + v15)) | 0x909803455169E568) - (v16 + v15) - 0x484C01A2A8B4F2B4) ^ 0xC6C998D95017FB99;
  v18 = v17 ^ __ROR8__(v15, 61);
  v19 = __ROR8__(v17, 8);
  v20 = (((2 * (v19 + v18)) | 0x661703085D1D211ALL) - (v19 + v18) - 0x330B81842E8E908DLL) ^ 0xFE029E93EEA14EDCLL;
  v21 = v20 ^ __ROR8__(v18, 61);
  v22 = __ROR8__(v20, 8);
  v23 = (((2 * (v22 + v21)) | 0x88D82846AB8C19D8) - (v22 + v21) - 0x446C142355C60CECLL) ^ 0x26E6A871DC8DEB8ELL;
  v24 = v23 ^ __ROR8__(v21, 61);
  v25 = __ROR8__(v23, 8);
  v26 = (v3 - ((v25 + v24) | v3) + ((v25 + v24) | 0x691114C3DF6F6AC1)) ^ 0x33D188C0E0E44DA0;
  *v7 = (((__ROR8__(v26, 8) + (v26 ^ __ROR8__(v24, 61))) ^ 0x1B0BD1982B59C071uLL) >> (8
                                                                                    * ((v2
                                                                                      + a1
                                                                                      + 59
                                                                                      + ((v1 + 68) & 0xEA ^ 0x20)) & 7))) ^ *(_BYTE *)(v5 + (a1 - 860498373));
  return (*(uint64_t (**)(void))(STACK[0x360] + 8 * ((405 * (a1 - 1 == v6)) ^ v1)))();
}

void sub_1CF2BC200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5;
  int v7;

  if (a1)
    v5 = a4 == 0;
  else
    v5 = 1;
  v7 = !v5 && a5 != 0;
  __asm { BR              X8 }
}

#error "1CF2BC504: call analysis failed (funcsize=107)"

uint64_t sub_1CF2BC508()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  unint64_t v2;

  v1 = v0(112);
  v2 = STACK[0x2F8];
  STACK[0x330] = v1 + 0xFCF3D5A857A9B08;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((35 * (v1 == 0)) ^ 0x61Du)) - 4))();
}

uint64_t sub_1CF2BC570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  _BOOL4 v11;

  *(_DWORD *)a1 = 1394714680;
  *(_DWORD *)(a1 + 4) = 1710104185;
  *(_QWORD *)(a1 + 72) = 0x116585BF116585BFLL;
  *(_WORD *)(a1 + 80) = 25175;
  memset((void *)(a1 + 8), 79, 64);
  v9 = STACK[0x330];
  *(_DWORD *)(STACK[0x330] - 0xFCF3D5A857A9AB4) = 1095089643;
  *(_DWORD *)(v9 - 0xFCF3D5A857A9AA0) = 2126566836;
  memset((void *)(v9 - 0xFCF3D5A857A9AB0), 79, 16);
  *(_BYTE *)(v9 - 0xFCF3D5A857A9A9CLL) = 42;
  v11 = v9 == v7 || STACK[0x368] == 0x29E41201BECB398ELL;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((v11 * (((v8 + 101) | 0x100) ^ 0x8A)) ^ v8))
                            - ((v8 + 650083876) & 0x4082E2 ^ 0x2E6)))();
}

uint64_t sub_1CF2BC6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  uint64_t v61;
  uint64_t v62;
  _DWORD *v63;
  _DWORD *v64;
  _BYTE *v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t (*v71)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  STACK[0x2E0] = v61 - 0xFCF3D5A857A9AAFLL;
  STACK[0x2D0] = v61 - 0xFCF3D5A857A9AAELL;
  STACK[0x2C0] = v61 - 0xFCF3D5A857A9AADLL;
  STACK[0x2B0] = v61 - 0xFCF3D5A857A9AACLL;
  STACK[0x2A0] = v61 - 0xFCF3D5A857A9AABLL;
  STACK[0x270] = v61 - 0xFCF3D5A857A9AAALL;
  STACK[0x260] = v61 - 0xFCF3D5A857A9AA9;
  STACK[0x250] = v61 - 0xFCF3D5A857A9AA7;
  *(_DWORD *)(v62 - 0x29E41201BECB397ELL) = *(_DWORD *)(v61 - 0xFCF3D5A857A9B08);
  *(_DWORD *)(v62 - 0x29E41201BECB3936) = *(_DWORD *)(v61 - 0xFCF3D5A857A9AC0);
  *(_DWORD *)(v62 - 0x29E41201BECB3932) = *(_DWORD *)(v61 - 0xFCF3D5A857A9ABCLL);
  *(_BYTE *)(v62 - 0x29E41201BECB392ELL) = *(_BYTE *)(v61 - 0xFCF3D5A857A9AB8);
  *(_BYTE *)(v62 - 0x29E41201BECB392DLL) = *(_BYTE *)(v61 - 0xFCF3D5A857A9AB7);
  *(_DWORD *)(v62 - 0x29E41201BECB3916) = *v64;
  *(_DWORD *)(v62 - 0x29E41201BECB392ALL) = *v63;
  *(_BYTE *)(v62 - 0x29E41201BECB3912) = (-(*v65 & 1) - 79) ^ 0x1B;
  v66 = ((((_DWORD)a5 - 706) | 0x508u) - 1305) & 0x1F;
  v67 = *((_BYTE *)*(&off_1E8C4D9A0 + (a5 ^ 0x2F1)) + v66 - 4);
  v68 = *((unsigned __int8 *)*(&off_1E8C4D9A0 + (a5 ^ 0x2BF)) + v66 - 2);
  v69 = *((unsigned __int8 *)*(&off_1E8C4D9A0 + (int)a5 - 657) + v66 + 1);
  v70 = (-113 * v66);
  *(_BYTE *)(v62 - 0x29E41201BECB3957) = (*(_BYTE *)(v61 - 0xFCF3D5A857A9AE1)
                                          + (~*(_BYTE *)(v61 - 0xFCF3D5A857A9AE1) | 0x1B)
                                          + (*(_BYTE *)(v61 - 0xFCF3D5A857A9AE1) | 0x1B)
                                          - 105) ^ v67 ^ v68 ^ v70 ^ v69;
  v71 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x2F8] + 8 * a5) - 8);
  return v71(v71, v61 - 0xFCF3D5A857A9AC0, v70 ^ v69, v70, a5, v68, STACK[0x2F8], v61 - 0xFCF3D5A857A9AA5, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

void sub_1CF2BCA04()
{
  JUMPOUT(0x1CF2BC96CLL);
}

uint64_t sub_1CF2BCA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;

  return (*(uint64_t (**)(void))(a7 + 8 * ((947 * (v7 == v8 + 560939000)) ^ 0x57C)))();
}

uint64_t sub_1CF2BCA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(v8 - 0x29E41201BECB3937) = *(_BYTE *)(v11 + 17) ^ *(_BYTE *)(v10 + 15) ^ *(_BYTE *)(v12 + 16) ^ 0x61 ^ (((v9 - 24) ^ 0x87) + *(_BYTE *)(v7 - 0xFCF3D5A857A9AC1) + (~*(_BYTE *)(v7 - 0xFCF3D5A857A9AC1) | 0x1B) + (*(_BYTE *)(v7 - 0xFCF3D5A857A9AC1) | 0x1B));
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * v9) - 4))();
}

void sub_1CF2BCB0C()
{
  JUMPOUT(0x1CF2BCAA0);
}

uint64_t sub_1CF2BCB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, _BYTE *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _BYTE *a69;
  uint64_t v69;
  _BYTE *v70;
  _BYTE *v71;
  _BYTE *v72;
  _BYTE *v73;
  uint64_t v74;
  _BYTE *v75;
  _BYTE *v76;

  *(_BYTE *)(v74 - 0x29E41201BECB3917) = *v76;
  *(_BYTE *)(v74 - 0x29E41201BECB3918) = *v75;
  *(_BYTE *)(v74 - 0x29E41201BECB3919) = *v73;
  *(_BYTE *)(v74 - 0x29E41201BECB391ALL) = *v72;
  *(_BYTE *)(v74 - 0x29E41201BECB391BLL) = *a8;
  *(_BYTE *)(v74 - 0x29E41201BECB391CLL) = *a69;
  *(_BYTE *)(v74 - 0x29E41201BECB391DLL) = *(_BYTE *)STACK[0x250];
  *(_BYTE *)(v74 - 0x29E41201BECB391ELL) = *v71;
  *(_BYTE *)(v74 - 0x29E41201BECB391FLL) = *(_BYTE *)STACK[0x260];
  *(_BYTE *)(v74 - 0x29E41201BECB3920) = *(_BYTE *)STACK[0x270];
  *(_BYTE *)(v74 - 0x29E41201BECB3921) = *(_BYTE *)STACK[0x2A0];
  *(_BYTE *)(v74 - 0x29E41201BECB3922) = *(_BYTE *)STACK[0x2B0];
  *(_BYTE *)(v74 - 0x29E41201BECB3923) = *(_BYTE *)STACK[0x2C0];
  *(_BYTE *)(v74 - 0x29E41201BECB3924) = *(_BYTE *)STACK[0x2D0];
  *(_BYTE *)(v74 - 0x29E41201BECB3925) = *(_BYTE *)STACK[0x2E0];
  *(_BYTE *)(v74 - 0x29E41201BECB3926) = *v70;
  *(_DWORD *)(v74 - 0x29E41201BECB397ALL) = *(_DWORD *)(v69 - 0xFCF3D5A857A9B04);
  return (*(uint64_t (**)(void))(a7
                              + 8
                              * ((70
                                * (*(_DWORD *)(v69 - 0xFCF3D5A857A9B04) != (((122 * (a5 ^ 0x317) + 267) | 2) ^ 0x65EE1A1A))) | a5)))();
}

uint64_t sub_1CF2BCD28(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return (*(uint64_t (**)(void))(a7 + 8 * ((1112 * (*a2 != ((v7 + 1215347741) & 0xB78F44EF ^ 0x116581DC))) ^ v7)))();
}

uint64_t sub_1CF2BCD70@<X0>(uint64_t a1@<X6>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;

  *a2 = v3 + 1120;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((551
                                          * (((v2 == 0xFCF3D5A857A9B08) ^ ((v4 ^ 0x35) - 106)) & 1)) ^ v4 ^ 0x735))
                            + 560938992
                            - (((v4 ^ 0x735) + 1811921817) & 0xB56F7FFB)))();
}

uint64_t sub_1CF2BCE00()
{
  int v0;
  int v1;
  _BOOL4 v2;

  sub_1CF370D34();
  v2 = ((uint64_t (*)(uint64_t))STACK[0x210])(16) != 0;
  return (*(uint64_t (**)(void))(STACK[0x2F8] + 8 * ((v2 * (((v1 + v0 + 288) | 0x200) ^ 0x322)) ^ (v1 + v0 + 258))))();
}

uint64_t sub_1CF2BCE54(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;

  *a1 = 0x23120F4208F8DDDLL;
  a1[1] = 0x23120F4208F8DDDLL;
  *(_QWORD *)(v7 - 0x29E41201BECB3986) = (char *)a1 + 0x373C0AAD4CE136CBLL;
  return (*(uint64_t (**)(void))(a7 + 8 * ((((v8 ^ 0x262) + 194) * (v7 != 0x29E41201BECB398ELL)) ^ v8)))();
}

uint64_t sub_1CF2BCED0()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))STACK[0x210])(16);
  return (*(uint64_t (**)(void))(STACK[0x2F8]
                              + 8
                              * (((((v0 + 13) ^ (v1 == 0)) & 1) * (((v0 - 34) | 0x240) - 823)) | v0)))();
}

uint64_t sub_1CF2BCF18(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  int v10;
  int v11;

  *a1 = 0x23120F4208F8DDDLL;
  a1[1] = 0x23120F4208F8DDDLL;
  *v9 = (char *)a1 + 0x373C0AAD4CE136CBLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((((v10 + 558434865) | 0x262E98) ^ (v11 - 84)) * (&a9 != (uint64_t *)-1096)) ^ v10))
                            - (v10 ^ (v11 - 1825) ^ 0x216F3FF4)))();
}

uint64_t sub_1CF2BCF98@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  unint64_t *v2;
  int v3;
  int v4;
  unint64_t v5;

  v5 = *v2;
  STACK[0x3E0] = *(_QWORD *)(a1 + 8 * (a2 - 560938731)) - 12;
  STACK[0x308] = v5;
  LODWORD(STACK[0x3A4]) = v3 + 1;
  STACK[0x348] = STACK[0x228];
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((((370 * (a2 ^ (v4 + 2))) ^ 0x5D2) * (&STACK[0x448] == 0)) ^ (a2 - 560938726)))
                            - 8))();
}

uint64_t sub_1CF2BD094@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t sub_1CF2BD0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  uint64_t v9;

  v9 = *(_QWORD *)(a7 + 8 * (v7 ^ 0x773));
  LODWORD(STACK[0x3D0]) = 1184670846;
  return ((uint64_t (*)(void))(v9 - ((v8 + v7 - 2010199837) & 0x5661F7FB) + 947))();
}

uint64_t sub_1CF2BD108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((v9 + v10 + 497) | (1222 * (v7 == v8))))
                            - ((v10 + 879137751) & 0x2A2A2F70 ^ 0x344)))();
}

void sub_1CF2BD150()
{
  JUMPOUT(0x1CF2BD15CLL);
}

uint64_t sub_1CF2BD1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (((v7 == 1393700935) * ((v9 + 1892673509) & 0x6DC0DB62 ^ 0x4FB)) ^ (v8 + v9 + 920))))();
}

uint64_t sub_1CF2BD1F4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  *(_DWORD *)(v1 - 184) = v0 - 1498267367 * ((v1 - 192) ^ 0x28FB3C08) + 884;
  v2 = ((uint64_t (*)(uint64_t))*(&off_1E8C4D9A0 + (v0 ^ 0x50u)))(v1 - 192);
  v3 = STACK[0x2F8];
  v4 = *(_QWORD *)(STACK[0x368] - 0x29E41201BECB3986);
  STACK[0x3B0] = *(_QWORD *)(STACK[0x2F8] + 8 * v0) - 8;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * ((1544 * (v4 != 0x373C0AAD4CE136CBLL)) ^ (v0 + 218997395) & 0x3EB))
                                          - ((43 * ((v0 + 218997395) & 0x3EB ^ 0x2EF) - 1577074905) & 0x7F6F7FF9 ^ 0x216F3FFCLL)))(v2);
}

uint64_t sub_1CF2BD284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  LODWORD(STACK[0x390]) = v8;
  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (((v8 == ((v7 - 1461817025) & 0x57218BFE ^ (v9 - 10))) * ((v7 ^ 0x167) + 1177)) ^ v7)))();
}

uint64_t sub_1CF2BD2D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unint64_t v8;
  int v9;

  STACK[0x3C0] = v8;
  return (*(uint64_t (**)(void))(a7 + 8 * ((947 * (v9 == ((v7 - 110133803) & 0x27FFBFFB) - 1954668084)) ^ (v7 + 853))))();
}

uint64_t sub_1CF2BD324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((v9 + v10 + 497) ^ (1089 * (v7 == v8))))
                            - ((v9 + v10 + 800) ^ 0x344)))();
}

uint64_t sub_1CF2BD358@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  int v2;

  LODWORD(STACK[0x390]) = v2;
  STACK[0x3C0] = STACK[0x368];
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((947 * (v2 == ((((a2 + 485) | 0x22) - 110133803) & 0x27FFBFFB) - 1954668084)) ^ (((a2 + 485) | 0x22) + 853))))();
}

uint64_t sub_1CF2BD3C8()
{
  int v0;

  LODWORD(STACK[0x390]) = v0;
  return sub_1CF2BD3E8();
}

uint64_t sub_1CF2BD3E8@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  unint64_t v2;
  unint64_t v3;
  int v4;

  STACK[0x370] = v2;
  v3 = STACK[0x248];
  v4 = ((((a2 + 982) | 0x200) - 209716828) & 0x2DEF3FFF) - 560938221;
  STACK[0x358] = *(_QWORD *)(a1 + 8 * a2) - 8;
  return (*(uint64_t (**)(void))(a1 + 8 * ((55 * ((v4 ^ (v3 == 0x703BDE3807C31C91)) & 1)) ^ v4)))();
}

uint64_t sub_1CF2BD408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  STACK[0x368] = 0x29E41201BECB398ELL;
  v7 = STACK[0x390];
  STACK[0x3C0] = 0x29E41201BECB398ELL;
  return (*(uint64_t (**)(void))(a7 + 8 * ((947 * (v7 == -1393729084)) ^ 0x57C)))();
}

uint64_t sub_1CF2BD47C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 - 168) = (v1 - 1041) ^ (1894094617
                                       * (((((v2 - 192) | 0x5FA72DC0) ^ 0xFFFFFFFE) - (~(v2 - 192) | 0xA058D23F)) ^ 0xBD571CAF));
  *(_QWORD *)(v2 - 176) = v0;
  *(_QWORD *)(v2 - 192) = STACK[0x288];
  v3 = ((uint64_t (*)(uint64_t))((char *)*(&off_1E8C4D9A0 + (v1 ^ 0x537)) - 12))(v2 - 192);
  return (*(uint64_t (**)(uint64_t))(STACK[0x2F8]
                                            + 8
                                            * ((970
                                              * (*(_DWORD *)(v2 - 184) == ((v1 + 956226043) & 0xC70120AB ^ 0x8B7E21EF)
                                                                        + ((v1 + 560148636) | 0xC09E0))) ^ v1)))(v3);
}

uint64_t sub_1CF2BD55C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  char v8;
  unint64_t v9;
  BOOL v10;
  char v11;

  v9 = STACK[0x3C8];
  STACK[0x300] = STACK[0x3C8];
  if (&STACK[0x354])
    v10 = v9 == 0x29E41201BECB398ELL;
  else
    v10 = 1;
  v11 = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((((v7 - v8 - 2) ^ v11) & 1)
                                          * ((v7 ^ 0x29) + 1477)) ^ v7))
                            - 4))();
}

void sub_1CF2BD5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  STACK[0x3A8] = *(_QWORD *)(a7 + 8 * v7);
  JUMPOUT(0x1CF2BD5F8);
}

uint64_t sub_1CF2BD698@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL4 v7;

  v4 = (v2 + 1318);
  STACK[0x398] = *(_QWORD *)(a1 + 8 * v2) + v4 - 1548;
  v5 = ((v2 + 988358) | 0x21602A50u) - v3 + 1779;
  v7 = STACK[0x220] == 0x38251E1110FFE8C8 || a2 == 0x373C0AAD4CE136CBLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)((55 * v7) | v4)) - (v5 ^ 0x6FF)))();
}

uint64_t sub_1CF2BD718()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1CF2BD724()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1CF2BD738@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  int v2;
  unsigned int v3;
  unint64_t *v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v3 = (v2 + 1071263467) & 0xC025CEAB;
  v4 = (unint64_t *)(a2 - 0x373C0AAD4CE136CBLL);
  v5 = 23 * (v3 ^ 0x488);
  v6 = *v4;
  v7 = *(_QWORD *)(a1 + 8 * (int)((30 * (v6 == 0x23120F4208F8DDDLL)) ^ v3));
  STACK[0x318] = v6;
  return ((uint64_t (*)(void))(v7 - ((v5 + 1316093905) & 0xB18E063F ^ 0x633)))();
}

uint64_t sub_1CF2BD7E8@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(unint64_t);
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v2 = *(_QWORD *)(a1 + 8 * a2);
  v3 = a2 ^ 0x25Au;
  v4 = (uint64_t (*)(unint64_t))((v3 ^ 0xFFFFFFFFFFFFFD88) + v2);
  v5 = STACK[0x440] - 0x3C185B3585E247D0;
  v6 = STACK[0x400];
  STACK[0x2E0] = (v5 ^ 0x55B6DF6DE363E7F5) - 0x40101101C36180E4 + ((2 * v5) & 0xAB6DBEDBC6C7CFEALL);
  v7 = STACK[0x430];
  v8 = STACK[0x430] + ((((_DWORD)v3 + 17169876) | 0x20693FB0u) ^ 0xF41D35F5DAD8957CLL);
  v9 = STACK[0x428];
  STACK[0x2C0] = STACK[0x428];
  STACK[0x2B0] = v9 + 3741337711u;
  STACK[0x2D0] = v7;
  STACK[0x2A0] = ((v7 - 0xBE2CA0A04485582) ^ 0x5DB6EFECE47E7719)
               - 0x48102180C47C1008
               + ((2 * (v7 - 0xBE2CA0A04485582)) & 0xBB6DDFD9C8FCEE32);
  STACK[0x270] = ((v5 + 2) ^ 0x77FDDEFF9DF1A77DLL) - 0x6064009818002038 + ((2 * (v5 + 2)) & 0xEFFBBDFF3BE34EFALL);
  STACK[0x260] = ((v7 - 0xBE2CA0A04485580) ^ 0xB7F9FEE7F7FF8F47)
               + 0x5F9FDF7F8DF1F7FELL
               + ((2 * (v7 - 0xBE2CA0A04485580)) & 0x6FF3FDCFEFFF1E8ELL);
  STACK[0x250] = (v8 ^ 0xD7FBDF6FF7F3C7CFLL) + 0x3F9DFEF78DFDBF76 + ((2 * v8) & 0xAFF7BEDFEFE78F9ELL);
  return v4(v6);
}

uint64_t sub_1CF2BD838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((1753 * (((v7 == v8) ^ (5 * (v10 ^ (v10 + 7)))) & 1)) ^ (v9 + v10 + 3)))
                            - 4))();
}

void sub_1CF2BD874()
{
  JUMPOUT(0x1CF2BD5F0);
}

uint64_t sub_1CF2BD8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;

  return (*(uint64_t (**)(void))(a7 + 8 * ((206 * (v7 == v9 + 5 * (v8 ^ (v11 - 280)) - 1400)) ^ (v10 + v8 + 1372))))();
}

uint64_t sub_1CF2BD8F4@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  int v2;
  int v3;
  unint64_t v4;

  v4 = STACK[0x3C8];
  STACK[0x388] = STACK[0x3C8];
  return (*(uint64_t (**)(void))(a1 + 8 * (((v4 == 0x29E41201BECB398ELL) * ((a2 - v2 - 1368) ^ (v3 + 4))) ^ a2)))();
}

uint64_t sub_1CF2BD93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;

  v10 = *(_QWORD *)(v7 - 0x29E41201BECB3986);
  STACK[0x338] = *(_QWORD *)(a7 + 8 * (v9 + v8 + 45));
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((1852 * (v10 != 0x373C0AAD4CE136CBLL)) ^ (v9 + v8 + 298)))
                            - (((v9 + v8 + 228) | 0x282u) ^ 0x382)))();
}

uint64_t sub_1CF2BDA14@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  int v4;

  STACK[0x340] = 0x23120F4208F8DDDLL;
  STACK[0x3F8] = 0;
  STACK[0x3F0] = 0x3C185B3585E247D4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((((a2 == v3) ^ (v2 + 87)) & 1)
                                          * (((v2 + 544094786) | 0x1010230) ^ (v4 - 1766))) ^ v2))
                            - 4))();
}

void sub_1CF2BDA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  STACK[0x398] = *(_QWORD *)(a7 + 8 * v7) + ((8 * v7) ^ 0xE0u) - 1556;
  JUMPOUT(0x1CF2BD6B0);
}

void sub_1CF2BDAC0()
{
  *(_QWORD *)STACK[0x238] = STACK[0x3E8];
  *(_DWORD *)STACK[0x240] = LODWORD(STACK[0x314]) ^ 0xBCA5ECF7;
  LODWORD(STACK[0x3D4]) = -1393729084;
  JUMPOUT(0x1CF2BDB54);
}

uint64_t sub_1CF2BDC10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  return (*(uint64_t (**)(void))(a7 + 8 * (((*(_QWORD *)(v10 + v8) != v9) * (v7 - 666)) ^ v7)))();
}

uint64_t sub_1CF2BDC34(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unint64_t v8;
  int v9;
  int v10;
  int v11;

  STACK[0x2A0] = a2;
  STACK[0x2B0] = a1;
  STACK[0x2C0] = v8;
  STACK[0x2D0] = a3;
  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (((a3 == 0x29E41201BECB3986) * ((v7 - v10 - 747 - v11 + 565) ^ v9)) | (v7 - 231))))();
}

uint64_t sub_1CF2BDC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  _QWORD *v9;
  int v10;
  int v11;
  int v12;

  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (((((*v9 == v8) ^ (v7 + 82)) & 1) * (((v7 + v10) | v11) ^ (v12 - 1371))) ^ v7)))();
}

uint64_t sub_1CF2BDCDC@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(a2 - 0x373C0AAD4CE136CBLL);
  STACK[0x2E0] = (unint64_t)v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (int)(((*v4 + v3 == 0x3898885F79094877)
                                               * ((((v2 + 409638225) & 0xE7956DFF) - 1013) ^ 0x1AB)) ^ (v2 + 409638225) & 0xE7956DFF))
                            - 8))();
}

uint64_t sub_1CF2BDD4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_1CF370D34();
  *v0 = 0x373C0AAD4CE136CBLL;
  return ((uint64_t (*)(uint64_t))(v2 + v1))(v3);
}

void sub_1CF2BDD9C()
{
  JUMPOUT(0x1CF2BDC6CLL);
}

uint64_t sub_1CF2BDDC4()
{
  int v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = sub_1CF370D34();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x2F8]
                                                      + 8
                                                      * ((((5 * (v0 ^ 0x5F7)) ^ 0x20F)
                                                        * (v3 + v2 == 0x3898885F79094877)) ^ v0))
                                          - ((v0 - 1141851023) & 0x440F3F99 ^ v1)))(v4);
}

uint64_t sub_1CF2BDE34@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((15 * (*(_QWORD *)(a2 - 0x23120F4208F8DC5) != 0)) ^ v2))
                            - (v2 ^ 0x417u)
                            + 1410))();
}

uint64_t sub_1CF2BDE90()
{
  _QWORD *v0;

  sub_1CF370D34();
  *v0 = 0;
  return sub_1CF2BDDC4();
}

uint64_t sub_1CF2BDE9C()
{
  int v0;
  int v1;

  sub_1CF370D34();
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x2F8]
                                                               + 8
                                                               * ((v0 + v1 + 1416) ^ (113
                                                                                    * (STACK[0x2C0] != 0x703BDE3807C31C91))))
                                                   - 4))(STACK[0x2B0]);
}

uint64_t sub_1CF2BDF34()
{
  _QWORD *v0;

  *v0 = 0x29E41201BECB398ELL;
  return ((uint64_t (*)(void))STACK[0x358])();
}

void sub_1CF2BDF50()
{
  JUMPOUT(0x1CF2BDBDCLL);
}

uint64_t sub_1CF2BDF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  v9 = STACK[0x3D4];
  LODWORD(STACK[0x294]) = STACK[0x3D4];
  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (int)(v7
                                    + v8
                                    + (v9 == -1393729084) * (v7 + v8 + 461 + ((v7 + v8 + 461) ^ 0xFFFFFFF2))
                                    + 1632)))();
}

uint64_t sub_1CF2BDFA8@<X0>(int a1@<W8>)
{
  unsigned int v1;
  int v3;

  return (v3 + v1 - ((a1 + 1507508635) & (2 * v3))) ^ v1;
}

uint64_t sub_1CF2BE05C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  int v60;
  int v61;
  int v62;
  int v63;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7 + 8 * (((((v63 - 876751742) & 0x12D2EFFD) - 901) * (v60 == v61)) ^ (v62 + v63 + 1112))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

uint64_t sub_1CF2BE0AC@<X0>(int a1@<W8>)
{
  unint64_t v1;

  v1 = *(_QWORD *)(STACK[0x3B8] - 0x23120F4208F8DC5);
  STACK[0x408] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2F8] + 8 * (((v1 != 0) * (a1 - 673)) ^ a1)) - 12))();
}

uint64_t sub_1CF2BE108@<X0>(unsigned int a1@<W8>)
{
  int v1;
  int v2;
  unint64_t v3;
  unint64_t v4;

  v3 = v1 + v2 + ((a1 + 1877982081) & 0xB17F7FFE) - 1508655827;
  STACK[0x428] = v3;
  v4 = STACK[0x360];
  STACK[0x430] = STACK[0x360];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2F8] + 8 * ((549 * (0xBE2CA0A04485586 - v4 + v3 > 9)) ^ a1)) - 12))();
}

void sub_1CF2BE18C()
{
  JUMPOUT(0x1CF2BE1B8);
}

void sub_1CF2BE44C()
{
  __int16 v0;

  LOWORD(STACK[0x416]) = v0;
  JUMPOUT(0x1CF2BE474);
}

uint64_t sub_1CF2BEC38()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2F8] + 8 * (v0 - 560938854)) - 8))();
}

void sub_1CF2BF1B8()
{
  __int16 v0;

  LOWORD(STACK[0x426]) = v0;
  JUMPOUT(0x1CF2BE464);
}

uint64_t sub_1CF2BF204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a69;
  int v69;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2F8] + 8 * ((513 * ((v69 ^ a6) != a69 - 1492555513)) ^ 0x494)) - 12))();
}

void sub_1CF2BF290()
{
  JUMPOUT(0x1CF2BD764);
}

uint64_t sub_1CF2BF2B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 0x38251E1110FFE8C8) = v0;
  return ((uint64_t (*)(void))STACK[0x398])();
}

uint64_t sub_1CF2BF2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  if (v7 == -1393729084)
  {
    v11 = STACK[0x380];
    v12 = *(_QWORD *)(STACK[0x380] - 0x23120F4208F8DD5);
    v13 = STACK[0x3D8];
    *(_QWORD *)(STACK[0x3D8] - 0x23120F4208F8DD5) = v12;
    *(_QWORD *)(v13 - 0x23120F4208F8DDDLL) = *(_QWORD *)(v11 - 0x23120F4208F8DDDLL);
    return (*(uint64_t (**)(void))(a7 + 8 * ((298 * (v12 != 0x23120F4208F8DDDLL)) ^ (v8 + v9 + 1163))))();
  }
  else if (v7 == 1393700935)
  {
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7 + 8 * ((366 * (*(_QWORD *)(STACK[0x328] - 0x373C0AAD4CE136C3) == 0x23120F4208F8DDDLL)) ^ 0x67B))
                                                                                                  - 8))(a1, a2, a3, a4, a5, a6, a7);
  }
  else
  {
    return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                          + 8
                                          * ((9 * (*(_QWORD *)(STACK[0x3D8] - 0x23120F4208F8DC5) != 0)) ^ 0x687))
                              - 12))();
  }
}

uint64_t sub_1CF2BF388@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  *(_QWORD *)(v1 - 0x373C0AAD4CE136CBLL) = v2;
  return ((uint64_t (*)(void))STACK[0x320])();
}

uint64_t sub_1CF2BF3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  int v10;

  return (*(uint64_t (**)(void))(a7 + 8 * ((1132 * (v7 == v8 + v9 + v10 + 870 - 902)) ^ (v9 + v10 + 364))))();
}

uint64_t sub_1CF2BF3DC@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  int v2;
  unint64_t v3;

  v3 = *(_QWORD *)(STACK[0x340] - 0x23120F4208F8DC5);
  STACK[0x400] = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8 * (int)(((v3 != 0) * ((a2 + 1803517044) & 0xB5EFBFFD ^ (v2 - 1299))) ^ a2))
                            - 4))();
}

uint64_t sub_1CF2BF450@<X0>(uint64_t a1@<X6>, unsigned int a2@<W8>)
{
  int v2;
  unint64_t v3;
  unint64_t v4;

  v3 = v2 + ((a2 + 1677687929) & 0xBD6FBFF8) - 2069594795;
  STACK[0x438] = v3;
  v4 = STACK[0x3F0];
  STACK[0x440] = STACK[0x3F0];
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)((1319 * ((a2 ^ 0x3C185B3585E24452) - v4 + v3 > 9)) ^ a2))
                            - 4))();
}

void sub_1CF2BF4D8()
{
  JUMPOUT(0x1CF2BD834);
}

uint64_t sub_1CF2BF50C()
{
  int v0;
  int v1;
  int v2;

  v1 = LOWORD(STACK[0x416]);
  STACK[0x360] = STACK[0x418];
  v2 = v1 == ((unsigned __int16)(v0 - 14718) ^ 0x3D33);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2F8] + 8 * (((8 * v2) | (v2 << 7)) ^ (v0 - 560937856))) - 12))();
}

void sub_1CF2BF570(int a1@<W5>, int a2@<W8>)
{
  *(_DWORD *)(STACK[0x378] - 0x5553B5C79ABA8DF5) = (((a2 + 2071951749) & 0xA5EFBFF8) - 1690915585) ^ a1;
  JUMPOUT(0x1CF2BF5B8);
}

uint64_t sub_1CF2BF5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  unint64_t v7;
  _BOOL4 v8;
  _BOOL4 v9;

  v7 = STACK[0x440] + (a6 ^ v6) - 0x3C185B35039F1D65;
  v8 = v7 < 0x82432A65;
  v9 = v7 > STACK[0x438] + 2185439845u;
  if (STACK[0x438] > 0xFFFFFFFF7DBCD59ALL != v8)
    v9 = v8;
  return (*(uint64_t (**)(void))(STACK[0x2F8] + 8 * ((233 * v9) ^ 0x165)))();
}

uint64_t sub_1CF2BF674@<X0>(int a1@<W5>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  int v5;
  unint64_t v6;
  int v7;

  v6 = v3 + 10;
  v7 = LOWORD(STACK[0x426]);
  if (v7 == 10427 || v7 == 15177)
    goto LABEL_5;
  if (v7 == 64741)
  {
    STACK[0x3F8] = STACK[0x400] + a3 - 0x3C185B3585E247CALL;
LABEL_5:
    STACK[0x3F0] = v6;
    LODWORD(STACK[0x314]) = a1;
    return (*(uint64_t (**)(void))(a2 + 8 * ((((v4 + v5 + 870) ^ 0x4A3) * (v7 == 64741)) ^ (v4 + v5 + 364))))();
  }
  STACK[0x3E8] = 0;
  LODWORD(STACK[0x314]) = -1129976585;
  return ((uint64_t (*)(void))STACK[0x338])();
}

uint64_t sub_1CF2C0A3C@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 + v5) = a2;
  return (*(uint64_t (**)(void))(a1 + 8 * ((942 * (*v2 != v4)) ^ 0x1EFu)))();
}

uint64_t sub_1CF2C0A80@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  int v4;

  *(_QWORD *)(v3 - 0x23120F4208F8DD5) = a2;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((((((v4 + 253) ^ (*v2 == 0x23120F4208F8DDDLL)) & 1) == 0) * (v4 - 438)) ^ (v4 + 230))))();
}

uint64_t sub_1CF2C0ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((((v8 + 36) ^ (*v7 == 0x23120F4208F8DDDLL)) & 1)
                                          * (v8 - 289)) ^ v8))
                            - 4))();
}

uint64_t sub_1CF2C0B20@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  int v2;

  *(_QWORD *)(STACK[0x328] - 0x373C0AAD4CE136C3) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((107 * (*(_QWORD *)(STACK[0x380] - 0x23120F4208F8DC5) != 0)) ^ (v2 + 404)))
                            - ((2 * ((v2 + 404) ^ 0x5B7u)) ^ 0x200)))();
}

uint64_t sub_1CF2C0B84()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  unint64_t v4;

  v2 = v0 - 689;
  v3 = sub_1CF370D34();
  v4 = STACK[0x2F8];
  *(_QWORD *)(STACK[0x380] - 0x23120F4208F8DC5) = 0;
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * (((STACK[0x380] != 0x23120F4208F8DDDLL)
                                              * (v1 + ((v2 + 537464052) | 0x1663100) + 109)) ^ v2)))(v3);
}

void sub_1CF2C0BFC(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 0x23120F4208F8DDDLL) = v1;
  *(_QWORD *)(v1 - 0x23120F4208F8DD5) = *a1;
  *a1 = v1;
  JUMPOUT(0x1CF2C0C2CLL);
}

uint64_t sub_1CF2C0C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(a7 + 8 * ((942 * (v7 != v8)) ^ 0x1EFu)))();
}

uint64_t sub_1CF2C0C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  int v8;

  return (*(uint64_t (**)(void))(a7 + 8 * ((((((v8 + 23) ^ (*v7 == 0x23120F4208F8DDDLL)) & 1) == 0) * (v8 - 668)) ^ v8)))();
}

uint64_t sub_1CF2C0CAC@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  int v3;

  *(_QWORD *)(STACK[0x328] - 0x373C0AAD4CE136CBLL) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((((45 * (v3 ^ 0xFD) + 36) ^ (*v2 == 0x23120F4208F8DDDLL)) & 1)
                                          * (45 * (v3 ^ 0x2FD) - 289)) ^ (45 * (v3 ^ 0x2FD))))
                            - 4))();
}

uint64_t sub_1CF2C0D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8 * ((107 * (*(_QWORD *)(STACK[0x380] - 0x23120F4208F8DC5) != 0)) ^ v7))
                            - ((2 * (v7 ^ 0x5B7)) ^ 0x200)))();
}

uint64_t sub_1CF2C0D60@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(a1
                              + 8 * (((a2 != 0x23120F4208F8DDDLL) * (v3 + ((v2 + 537464052) | 0x1663100) + 109)) ^ v2)))();
}

uint64_t sub_1CF2C0DB0()
{
  uint64_t v0;

  v0 = sub_1CF370D34();
  STACK[0x380] = 0x23120F4208F8DDDLL;
  return ((uint64_t (*)(uint64_t))STACK[0x320])(v0);
}

uint64_t sub_1CF2C0DE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  int v15;
  int v16;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(a7
                                                               + 8
                                                               * (int)((((a3 + 1129118595) & 0xBCB306DE ^ (v16 - 1540) ^ (a3 + 1030700057) & 0xE3FFFFF8)
                                                                      * (a15 == v15)) | (a3 + 850)))
                                                   - 8))(a13, 0x5C571E88BAF69BF8);
}

uint64_t sub_1CF2C0E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  char v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (v7 ^ (371 * ((v8 & 8) == 0))))
                            - ((v7 - v9 - 1096225569) & 0x1FE7CF8F ^ 0x287)))();
}

uint64_t sub_1CF2C0EB0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  uint64_t v46;
  unsigned int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64x2_t v52;
  int64x2_t v53;
  int8x16_t v54;
  int8x16_t v55;
  int8x16_t v56;
  int8x16_t v57;
  int8x16_t v58;
  int64x2_t v59;
  int8x16_t v60;
  int8x16_t v61;
  int8x16_t v62;
  int8x16_t v63;
  int8x16_t v64;
  int8x16_t v65;
  int8x16_t v66;
  int8x16_t v67;
  int8x16_t v68;
  int8x16_t v69;
  int8x16_t v70;
  int64x2_t v71;
  int8x16_t v72;
  uint64_t v73;
  uint64_t v74;
  int64x2_t v75;
  int64x2_t v76;
  int64x2_t v77;
  int64x2_t v78;
  int8x16_t v79;
  int8x16_t v80;
  int64x2_t v81;
  int64x2_t v82;
  int64x2_t v83;
  int64x2_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int64x2_t v90;
  int8x16_t v91;
  int8x16_t v92;
  int64x2_t v93;
  int64x2_t v94;
  int64x2_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int64x2_t v100;
  int64x2_t v101;
  int64x2_t v102;
  int64x2_t v103;
  int64x2_t v104;
  int8x16_t v105;
  int8x16_t v106;
  int64x2_t v107;
  int64x2_t v108;
  int64x2_t v109;
  int64x2_t v110;
  int8x16_t v111;
  int8x16_t v112;
  int64x2_t v113;
  int8x16_t v114;
  int64x2_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int8x16_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int64x2_t v121;
  int64x2_t v122;
  int64x2_t v123;
  int64x2_t v124;
  int64x2_t v125;
  int8x16_t v126;
  int64x2_t v127;
  int64x2_t v128;
  int64x2_t v129;
  int64x2_t v130;
  int64x2_t v131;
  int64x2_t v132;
  int8x16_t v133;
  int64x2_t v134;
  int64x2_t v135;
  int8x16_t v136;
  int64x2_t v137;
  int64x2_t v138;
  int64x2_t v139;
  int8x16_t v140;
  int64x2_t v141;
  int64x2_t v142;
  int64x2_t v143;
  int64x2_t v144;
  int64x2_t v145;
  int8x16_t v146;
  int64x2_t v147;
  int64x2_t v148;
  int64x2_t v149;
  int64x2_t v150;
  int64x2_t v151;
  int64x2_t v152;
  int8x16_t v153;
  int64x2_t v154;
  int64x2_t v155;
  int8x16_t v156;
  int64x2_t v157;
  int64x2_t v158;
  int64x2_t v159;
  uint64_t (*v160)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int8x16x4_t v162;

  v47 = -(v42 & 0xFFFFFFF8);
  *(int64x2_t *)&STACK[0x2A0] = vdupq_n_s64(0xF8FFFFFFFFFFFFFFLL);
  *(int64x2_t *)&STACK[0x2B0] = vdupq_n_s64(0x38uLL);
  v48 = v43 + v44 + a4;
  v49 = (v48 + 4);
  *(int64x2_t *)&STACK[0x2E0] = vdupq_n_s64(0xB98B02A5518146ACLL);
  v50 = (v48 + 5);
  v51 = (v48 + 6);
  *(int64x2_t *)&STACK[0x260] = vdupq_n_s64(0xEE14BEBC8D361B39);
  *(int64x2_t *)&STACK[0x270] = vdupq_n_s64(0xAAF3F7833B96EBB2);
  *(int64x2_t *)&STACK[0x250] = vdupq_n_s64(0xB1594B094AC1844ELL);
  v52 = vdupq_n_s64(0x5C571E88BAF69BF8uLL);
  v53 = vdupq_n_s64(0x7C3185684655E497uLL);
  v54 = (int8x16_t)vdupq_n_s64(0xC266F8D17762409ALL);
  v56 = *(int8x16_t *)&STACK[0x2A0];
  v55 = *(int8x16_t *)&STACK[0x2B0];
  v58 = *(int8x16_t *)&STACK[0x250];
  v57 = *(int8x16_t *)&STACK[0x260];
  v60 = (int8x16_t)vdupq_n_s64(0x878756599DDB350uLL);
  v59 = vdupq_n_s64(0xA7535A7B5A9F3DD9);
  v62 = (int8x16_t)vdupq_n_s64(0x467F3BD9A88CC707uLL);
  v61 = (int8x16_t)vdupq_n_s64(0xA3A8E17745096407);
  v64 = (int8x16_t)vdupq_n_s64(0xCD091F17C02FDE51);
  v63 = (int8x16_t)vdupq_n_s64(0x8E85997BF8A3092DLL);
  v66 = (int8x16_t)vdupq_n_s64(0xE144C6C530E1FC0ALL);
  v65 = (int8x16_t)vdupq_n_s64(0x83CE7A97B9AA1B68);
  v68 = (int8x16_t)vdupq_n_s64(0xC246D05015220090);
  v67 = (int8x16_t)vdupq_n_s64(0x31312E8DEADC702EuLL);
  v69 = (int8x16_t)vdupq_n_s64(0xA9974A5FA23517D5);
  v71 = vdupq_n_s64(0x5AF7040FCBE4BA6AuLL);
  v70 = (int8x16_t)vdupq_n_s64(0xB5EE081F97C974D4);
  v72 = (int8x16_t)vdupq_n_s64(0x41FCD597E0BD7A1BuLL);
  v73 = (v40 + 956);
  v74 = v41 - v45 + (v73 ^ 0x8A9FC78E);
  v75.i64[0] = v46 + (v48 + 1 - v45);
  v75.i64[1] = v46 + (v48 - v45);
  v76.i64[0] = v46 + (v48 + 3 - v45);
  v76.i64[1] = v46 + (v48 + 2 - v45);
  v77.i64[0] = v46 + (v50 - v45);
  v77.i64[1] = v46 + (v49 - v45);
  v78.i64[0] = v46 + v74;
  v78.i64[1] = v46 + (v51 - v45);
  *(int64x2_t *)&STACK[0x2D0] = v78;
  *(int8x16_t *)&STACK[0x2C0] = vorrq_s8((int8x16_t)vshlq_n_s64(v78, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v78, 8uLL));
  v79 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v75, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v75, 8uLL)), v56), *(int64x2_t *)&STACK[0x270]);
  v80 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v76, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v76, 8uLL)), v56), *(int64x2_t *)&STACK[0x270]);
  v81 = (int64x2_t)veorq_s8(v80, *(int8x16_t *)&STACK[0x2E0]);
  v82 = (int64x2_t)veorq_s8(v79, *(int8x16_t *)&STACK[0x2E0]);
  v83 = (int64x2_t)veorq_s8(v79, v57);
  v84 = (int64x2_t)veorq_s8(v80, v57);
  v85 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v81, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v81, 8uLL)), v84);
  v86 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v82, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v82, 8uLL)), v83);
  v87 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v86, v86), v58), v86), v59), v60);
  v88 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v85, v85), v58), v85), v59), v60);
  v89 = (int64x2_t)veorq_s8((int8x16_t)v88, vorrq_s8((int8x16_t)vshlq_n_s64(v84, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v84, 0x3DuLL)));
  v90 = (int64x2_t)veorq_s8((int8x16_t)v87, vorrq_s8((int8x16_t)vshlq_n_s64(v83, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v83, 0x3DuLL)));
  v91 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v87, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v87, 8uLL)), v90);
  v92 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v88, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v88, 8uLL)), v89);
  v93 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v91, v61), (int64x2_t)vorrq_s8(v91, (int8x16_t)v52)), v52), v62);
  v94 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v92, v61), (int64x2_t)vorrq_s8(v92, (int8x16_t)v52)), v52), v62);
  v95 = (int64x2_t)veorq_s8((int8x16_t)v94, vorrq_s8((int8x16_t)vshlq_n_s64(v89, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v89, 0x3DuLL)));
  v96 = (int64x2_t)veorq_s8((int8x16_t)v93, vorrq_s8((int8x16_t)vshlq_n_s64(v90, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 0x3DuLL)));
  v97 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v94, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v94, 8uLL)), v95), v63);
  v98 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v93, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v93, 8uLL)), v96), v63);
  v99 = (int64x2_t)veorq_s8((int8x16_t)v98, vorrq_s8((int8x16_t)vshlq_n_s64(v96, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v96, 0x3DuLL)));
  v100 = (int64x2_t)veorq_s8((int8x16_t)v97, vorrq_s8((int8x16_t)vshlq_n_s64(v95, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v95, 0x3DuLL)));
  v101 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v98, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v98, 8uLL)), v99), v64);
  v102 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v97, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v97, 8uLL)), v100), v64);
  v103 = (int64x2_t)veorq_s8((int8x16_t)v102, vorrq_s8((int8x16_t)vshlq_n_s64(v100, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v100, 0x3DuLL)));
  v104 = (int64x2_t)veorq_s8((int8x16_t)v101, vorrq_s8((int8x16_t)vshlq_n_s64(v99, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v99, 0x3DuLL)));
  v105 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v101, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v101, 8uLL)), v104);
  v106 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v102, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v102, 8uLL)), v103);
  v107 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v105, v65), (int64x2_t)vorrq_s8(v105, (int8x16_t)v53)), v53), v66);
  v108 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v106, v65), (int64x2_t)vorrq_s8(v106, (int8x16_t)v53)), v53), v66);
  v109 = (int64x2_t)veorq_s8((int8x16_t)v108, vorrq_s8((int8x16_t)vshlq_n_s64(v103, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v103, 0x3DuLL)));
  v110 = (int64x2_t)veorq_s8((int8x16_t)v107, vorrq_s8((int8x16_t)vshlq_n_s64(v104, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 0x3DuLL)));
  v111 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v107, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v107, 8uLL)), v110);
  v112 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v108, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v108, 8uLL)), v109);
  v113 = (int64x2_t)veorq_s8(v112, v67);
  v114 = (int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v112, v54), v68), v113), (int64x2_t)vandq_s8((int8x16_t)v113, v54));
  v115 = (int64x2_t)veorq_s8(v111, v67);
  v116 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v111, v54), v68), v115), (int64x2_t)vandq_s8((int8x16_t)v115, v54)), v69);
  v117 = (int64x2_t)veorq_s8(v114, v69);
  v118 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v77, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v77, 8uLL)), v56), *(int64x2_t *)&STACK[0x270]);
  v119 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v116, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v116, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v116, vorrq_s8((int8x16_t)vshlq_n_s64(v110, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v110, 0x3DuLL))));
  v120 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v117, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v117, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v117, vorrq_s8((int8x16_t)vshlq_n_s64(v109, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v109, 0x3DuLL))));
  v162.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v119, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v119, v119), v70)), v71), v72), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v75, 3uLL), v55)));
  v162.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v120, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v120, v120), v70)), v71), v72), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v76, 3uLL), v55)));
  v121 = (int64x2_t)veorq_s8(v118, *(int8x16_t *)&STACK[0x2E0]);
  v122 = (int64x2_t)veorq_s8(v118, v57);
  v123 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v121, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v121, 8uLL)), v122);
  v124 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v123, v123), v58), v123), v59), v60);
  v125 = (int64x2_t)veorq_s8((int8x16_t)v124, vorrq_s8((int8x16_t)vshlq_n_s64(v122, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v122, 0x3DuLL)));
  v126 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v124, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v124, 8uLL)), v125);
  v127 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v126, v61), (int64x2_t)vorrq_s8(v126, (int8x16_t)v52)), v52), v62);
  v128 = (int64x2_t)veorq_s8((int8x16_t)v127, vorrq_s8((int8x16_t)vshlq_n_s64(v125, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v125, 0x3DuLL)));
  v129 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v127, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v127, 8uLL)), v128), v63);
  v130 = (int64x2_t)veorq_s8((int8x16_t)v129, vorrq_s8((int8x16_t)vshlq_n_s64(v128, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v128, 0x3DuLL)));
  v131 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v129, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v129, 8uLL)), v130), v64);
  v132 = (int64x2_t)veorq_s8((int8x16_t)v131, vorrq_s8((int8x16_t)vshlq_n_s64(v130, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v130, 0x3DuLL)));
  v133 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v131, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v131, 8uLL)), v132);
  v134 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v133, v65), (int64x2_t)vorrq_s8(v133, (int8x16_t)v53)), v53), v66);
  v135 = (int64x2_t)veorq_s8((int8x16_t)v134, vorrq_s8((int8x16_t)vshlq_n_s64(v132, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v132, 0x3DuLL)));
  v136 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v134, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v134, 8uLL)), v135);
  v137 = (int64x2_t)veorq_s8(v136, v67);
  v138 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v136, v54), v68), v137), (int64x2_t)vandq_s8((int8x16_t)v137, v54)), v69);
  v139 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v138, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v138, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v138, vorrq_s8((int8x16_t)vshlq_n_s64(v135, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v135, 0x3DuLL))));
  v140 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x2C0], v56), *(int64x2_t *)&STACK[0x270]);
  v162.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v139, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v139, v139), v70)), v71), v72), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v77, 3uLL), v55)));
  v141 = (int64x2_t)veorq_s8(v140, *(int8x16_t *)&STACK[0x2E0]);
  v142 = (int64x2_t)veorq_s8(v140, v57);
  v143 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v141, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v141, 8uLL)), v142);
  v144 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v143, v143), v58), v143), v59), v60);
  v145 = (int64x2_t)veorq_s8((int8x16_t)v144, vorrq_s8((int8x16_t)vshlq_n_s64(v142, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v142, 0x3DuLL)));
  v146 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v144, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v144, 8uLL)), v145);
  v147 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v146, v61), (int64x2_t)vorrq_s8(v146, (int8x16_t)v52)), v52), v62);
  v148 = (int64x2_t)veorq_s8((int8x16_t)v147, vorrq_s8((int8x16_t)vshlq_n_s64(v145, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v145, 0x3DuLL)));
  v149 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v147, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v147, 8uLL)), v148), v63);
  v150 = (int64x2_t)veorq_s8((int8x16_t)v149, vorrq_s8((int8x16_t)vshlq_n_s64(v148, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v148, 0x3DuLL)));
  v151 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v149, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v149, 8uLL)), v150), v64);
  v152 = (int64x2_t)veorq_s8((int8x16_t)v151, vorrq_s8((int8x16_t)vshlq_n_s64(v150, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v150, 0x3DuLL)));
  v153 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v151, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v151, 8uLL)), v152);
  v154 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v153, v65), (int64x2_t)vorrq_s8(v153, (int8x16_t)v53)), v53), v66);
  v155 = (int64x2_t)veorq_s8((int8x16_t)v154, vorrq_s8((int8x16_t)vshlq_n_s64(v152, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152, 0x3DuLL)));
  v156 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v154, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v154, 8uLL)), v155);
  v157 = (int64x2_t)veorq_s8(v156, v67);
  v158 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v156, v54), v68), v157), (int64x2_t)vandq_s8((int8x16_t)v157, v54)), v69);
  v159 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v158, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v158, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v158, vorrq_s8((int8x16_t)vshlq_n_s64(v155, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v155, 0x3DuLL))));
  v162.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v159, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v159, v159), v70)), v71), v72), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x2D0], 3uLL), v55)));
  *(int8x8_t *)(a1 - 7 + v74) = veor_s8(vrev64_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v162, (int8x16_t)xmmword_1CF37DAD0)), *(int8x8_t *)(v46 + v74 - 7));
  v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x2F8] + 8 * ((1963 * (v47 == -8 - v45)) ^ v40)) - 4);
  return v160(a1, v49, v50, v51, v73, 1963, v160, STACK[0x2F8], a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           v72.i64[0],
           v72.i64[1],
           v71.i64[0],
           v71.i64[1],
           v70.i64[0],
           v70.i64[1],
           0x3830282018100800,
           -1,
           v69.i64[0],
           v69.i64[1],
           v68.i64[0],
           v68.i64[1],
           v67.i64[0],
           v67.i64[1],
           v66.i64[0],
           v66.i64[1],
           v65.i64[0],
           v65.i64[1],
           v64.i64[0],
           v64.i64[1],
           v63.i64[0],
           v63.i64[1]);
}

void sub_1CF2C17B0()
{
  JUMPOUT(0x1CF2C1104);
}

uint64_t sub_1CF2C17B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  int v15;
  int v16;

  return (*(uint64_t (**)(uint64_t, uint64_t))(STACK[0x2F8]
                                                     + 8
                                                     * (((a5 ^ (v16 - 1605) ^ 0x96 ^ (v16 + a5 - 1611)) * (a15 == v15)) ^ a5)))(a1, 0x5C571E88BAF69BF8);
}

uint64_t sub_1CF2C1834(unint64_t a1)
{
  STACK[0x3E8] = a1;
  return ((uint64_t (*)(void))STACK[0x338])();
}

uint64_t sub_1CF2C1848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X6>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v10 = (a4 - 1969241659);
  v11 = (__ROR8__(v5 + v10, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL;
  v12 = __ROR8__(v11 ^ 0xB98B02A5518146ACLL, 8);
  v11 ^= 0xEE14BEBC8D361B39;
  v13 = (((2 * (v12 + v11)) | 0xB1594B094AC1844ELL) - (v12 + v11) - 0x58ACA584A560C227) ^ 0x878756599DDB350;
  v14 = v13 ^ __ROR8__(v11, 61);
  v15 = __ROR8__(v13, 8);
  v16 = (a2 - ((v15 + v14) | a2) + ((v15 + v14) | 0xA3A8E17745096407)) ^ 0x467F3BD9A88CC707;
  v17 = v16 ^ __ROR8__(v14, 61);
  v18 = (__ROR8__(v16, 8) + v17) ^ 0x8E85997BF8A3092DLL;
  v19 = v18 ^ __ROR8__(v17, 61);
  v20 = (__ROR8__(v18, 8) + v19) ^ 0xCD091F17C02FDE51;
  v21 = v20 ^ __ROR8__(v19, 61);
  v22 = __ROR8__(v20, 8);
  v23 = (v9 - ((v22 + v21) | v9) + ((v22 + v21) | 0x83CE7A97B9AA1B68)) ^ 0xE144C6C530E1FC0ALL;
  v24 = v23 ^ __ROR8__(v21, 61);
  v25 = __ROR8__(v23, 8);
  v26 = __ROR8__((((v25 + v24) & v8 ^ 0xC246D05015220090)+ ((v25 + v24) ^ 0x31312E8DEADC702ELL)- (((v25 + v24) ^ 0x31312E8DEADC702ELL) & v8)) ^ 0xA9974A5FA23517D5, 8)+ ((((v25 + v24) & v8 ^ 0xC246D05015220090)+ ((v25 + v24) ^ 0x31312E8DEADC702ELL)- (((v25 + v24) ^ 0x31312E8DEADC702ELL) & v8)) ^ 0xA9974A5FA23517D5 ^ __ROR8__(v24, 61));
  *(_BYTE *)(a1 + v10) = (((v26 - ((2 * v26) & 0xB5EE081F97C974D4) + 0x5AF7040FCBE4BA6ALL) ^ 0x41FCD597E0BD7A1BLL) >> (8 * ((v5 + a4 - 59) & 7))) ^ *(_BYTE *)(v5 + v10);
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((172 * (a4 - 1 != v7)) ^ (v6 + v4 + 827))) - 12))();
}

uint64_t sub_1CF2C1A88@<X0>(uint64_t a1@<X6>, unsigned int a2@<W8>)
{
  unsigned int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((102
                                          * (*(_DWORD *)(STACK[0x348]
                                                       - 0x5FF4F7D2A39C074
                                                       + 40
                                                       * ((a2 | ((unint64_t)(a2 < 0x469CA47E) << 32))
                                                        + 0x48E71B172D302B39
                                                        + ((2 * (v2 ^ 0x332)) ^ 0xB718E4E88C33315BLL))
                                                       + 36)
                                           - LODWORD(STACK[0x3A4]) == -537444777)) ^ v2))
                            - (v2 ^ (v3 - 949) ^ 0x216F3FF4)))();
}

uint64_t sub_1CF2C1B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;

  v11 = *(_DWORD *)(v8 + 40 * v7 + 28);
  switch(v11)
  {
    case 1:
      JUMPOUT(0x1CF2C1C48);
    case 3:
      return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                            + 8
                                            * (((*(_QWORD *)(v8 + 40 * v7 + 16) != 0) * ((v10 + v9 + 708) ^ 0x465)) ^ (v10 + v9 + 923)))
                                - ((v10 + v9 + 242) ^ 0x11ELL)))();
    case 2:
      return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                            + 8
                                            * (((STACK[0x308] != 0x373C0AAD4CE136CBLL)
                                              * ((3 * (v10 ^ (v10 - 68))) ^ 0x725)) ^ (v9 + v10 + 708)))
                                - 8))();
  }
  return ((uint64_t (*)(void))STACK[0x3E0])();
}

void sub_1CF2C1CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  STACK[0x320] = *(_QWORD *)(a7 + 8 * v7) + ((v7 - 195) | 0x320u) - 824;
  LODWORD(STACK[0x2D0]) = 54704;
  LODWORD(STACK[0x2E0]) = 1285092971;
  JUMPOUT(0x1CF2C1E34);
}

uint64_t sub_1CF2C1D10()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1CF2C1D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  char v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((1064
                                          * ((((STACK[0x308] == 0x373C0AAD4CE136CBLL) ^ ((v7 ^ (v8 + 36)) + 1)) ^ (111 * (v7 ^ 0xE6))) & 1)) ^ v7))
                            - 8))();
}

void sub_1CF2C1DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  int v9;

  LODWORD(STACK[0x2E0]) = *(_DWORD *)(v8 + 40 * v7 + 32);
  STACK[0x320] = ((v9 + 66) | 0x214u) + *(_QWORD *)(a7 + 8 * v9) - 832;
  LODWORD(STACK[0x2D0]) = 36628;
  JUMPOUT(0x1CF2C1E2CLL);
}

uint64_t sub_1CF2C1E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  int v60;
  unint64_t v61;
  unint64_t v62;
  int v63;
  int v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  STACK[0x270] = v62;
  STACK[0x2A0] = v61;
  v64 = v60 - 177;
  v66 = ((uint64_t (*)(uint64_t))STACK[0x210])(32);
  STACK[0x3D8] = v66 + 0x23120F4208F8DDDLL;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7 + 8 * (((v66 != 0) * ((v63 + v64 - 643) ^ (v63 - 2))) ^ v64)) - 12))(v66, v67, v68, v69, v70, v71, v72, v73, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

uint64_t sub_1CF2C1F08(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v5;
  uint64_t v6;

  *(_QWORD *)a1 = 0x23120F4208F8DDDLL;
  *(_QWORD *)(a1 + 8) = 0x23120F4208F8DDDLL;
  v5 = STACK[0x2E0];
  *(_DWORD *)(a1 + 16) = ((v2 - v1 + 723437427) & 0xB371F63D ^ 0xD534C5A) + LODWORD(STACK[0x2E0]);
  v6 = ((uint64_t (*)(_QWORD))STACK[0x210])((v5 - 1285092957));
  *(_QWORD *)(a1 + 24) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1474 * (v6 != 0)) ^ v2)) - 12))();
}

uint64_t sub_1CF2C1F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a69;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t (*v74)(uint64_t);
  uint64_t v75;
  int v76;
  int v77;
  _BYTE *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;

  v73 = a69 - (((a69 << (v71 - 11)) + 1309856270) & 0x74FCEE56) + 1636294706;
  v74 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v72 + 8 * v71) - 4);
  v75 = LODWORD(STACK[0x2D0]) - ((2 * LODWORD(STACK[0x2D0]) + 910) & 0x7A04u) + 32457;
  v76 = STACK[0x2E0];
  v77 = 2 * LODWORD(STACK[0x2E0]) + 1724781362;
  LODWORD(STACK[0x260]) = v77;
  LODWORD(STACK[0x2C0]) = v76 - (v77 & 0x74FCEE56) + 1843757252;
  LODWORD(STACK[0x2B0]) = v69 ^ 0x4CB0CD7B;
  v78 = *(_BYTE **)(v70 + 24);
  v79 = __ROR8__(v78, 8);
  v80 = (0x150C087CC469144DLL - (v79 & 0xF8FFFFFFFFFFFFFFLL)) & 0x19A889ECFF1A1ED8 | ((v79 & 0xF8FFFFFFFFFFFFFFLL)
                                                                                      - 0x550C087CC469144ELL) & 0xE057761300E5E127;
  v81 = __ROR8__(v80 ^ 0xA2238B49AE9B5874, 8);
  v80 ^= 0xF5BC3750722C05E1;
  v82 = (v81 + v80) ^ 0x50D4D0E13CBD7177;
  v83 = v82 ^ __ROR8__(v80, 61);
  v84 = __ROR8__(v82, 8) + v83;
  v85 = v84 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v83, 61);
  *((_QWORD *)&v86 + 1) = v84;
  *(_QWORD *)&v86 = v84 ^ 0xE5D7DAAEED85A300;
  v87 = ((v86 >> 8) + v85) ^ 0x8E85997BF8A3092DLL;
  v88 = v87 ^ __ROR8__(v85, 61);
  v89 = (__ROR8__(v87, 8) + v88) ^ 0xCD091F17C02FDE51;
  v90 = v89 ^ __ROR8__(v88, 61);
  v91 = (__ROR8__(v89, 8) + v90) ^ 0x628ABC52894BE762;
  v92 = v91 ^ __ROR8__(v90, 61);
  *(_QWORD *)&v86 = __ROR8__(v91, 8);
  v93 = (((2 * (v86 + v92)) & 0xFCA17D98F44813EALL) - (v86 + v92) - 0x7E50BECC7A2409F6) ^ 0xDB6FDD30BA50D16BLL;
  *v78 = (((__ROR8__(v93, 8) + (v93 ^ __ROR8__(v92, 61))) ^ 0x1B0BD1982B59C071) >> (8 * (v78 & 7u))) ^ HIBYTE(v73) ^ 0xBA;
  v94 = (__ROR8__(v78 + 1, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL;
  *(_QWORD *)&v86 = __ROR8__(v94 ^ 0xB98B02A5518146ACLL, 8);
  v94 ^= 0xEE14BEBC8D361B39;
  v95 = (v86 + v94) ^ 0x50D4D0E13CBD7177;
  v96 = v95 ^ __ROR8__(v94, 61);
  *(_QWORD *)&v86 = __ROR8__(v95, 8);
  v97 = (((2 * (v86 + v96)) & 0xA793A7F6AC829AE6) - (v86 + v96) - 0x53C9D3FB56414D74) ^ 0x49E1F6AA443B118CLL;
  v98 = v97 ^ __ROR8__(v96, 61);
  v99 = (__ROR8__(v97, 8) + v98) ^ 0x8E85997BF8A3092DLL;
  v100 = __ROR8__(v99, 8);
  v101 = v99 ^ __ROR8__(v98, 61);
  v102 = (((2 * (v100 + v101)) & 0xF0BAF55B447DEC8ELL) - (v100 + v101) + 0x7A285525DC109B8) ^ 0xCAAB9A459DEED7E9;
  v103 = v102 ^ __ROR8__(v101, 61);
  *(_QWORD *)&v86 = __ROR8__(v102, 8);
  v104 = (-2 - ((~(v86 + v103) | 0x1FF46385B66E09DELL) + ((v86 + v103) | 0xE00B9C7A4991F621))) ^ 0x7D7EDFD73F25EEBCLL;
  v105 = v104 ^ __ROR8__(v103, 61);
  *(_QWORD *)&v86 = __ROR8__(v104, 8);
  v106 = (0xA4E31C196FB07E65 - ((v86 + v105) | 0xA4E31C196FB07E65) + ((v86 + v105) | 0x5B1CE3E6904F819ALL)) ^ 0x1DC7FE5AFC4A6FBLL;
  v107 = v106 ^ __ROR8__(v105, 61);
  *(_QWORD *)&v86 = __ROR8__(v106, 8);
  v78[1] = (((-2 - ((~((_QWORD)v86 + v107) | 0x75B531B3FC4CDC6BLL) + (((_QWORD)v86 + v107) | 0x8A4ACE4C03B32394))) ^ 0x6EBEE02BD7151C1ALL) >> (8 * (((_BYTE)v78 + 1) & 7u))) ^ BYTE2(v73) ^ 0x7E;
  v108 = (__ROR8__(v78 + 2, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL;
  v109 = v108 ^ 0xB98B02A5518146ACLL;
  v108 ^= 0xEE14BEBC8D361B39;
  *(_QWORD *)&v86 = __ROR8__(v109, 8);
  v110 = (((2 * (v86 + v108)) & 0x9D263FB38571CE96) - (v86 + v108) + 0x316CE0263D4718B4) ^ 0x61B830C701FA69C3;
  v111 = v110 ^ __ROR8__(v108, 61);
  *((_QWORD *)&v86 + 1) = __ROR8__(v110, 8) + v111;
  *(_QWORD *)&v86 = *((_QWORD *)&v86 + 1) ^ 0xE5D7DAAEED85A300;
  v112 = v86 >> 8;
  *(_QWORD *)&v86 = __ROR8__(v111, 61);
  v113 = (0x8EEAB8D098054CA2
        - ((v112 + (*((_QWORD *)&v86 + 1) ^ 0xE5D7DAAEED85A300 ^ v86)) | 0x8EEAB8D098054CA2)
        + ((v112 + (*((_QWORD *)&v86 + 1) ^ 0xE5D7DAAEED85A300 ^ v86)) | 0x7115472F67FAB35DLL)) ^ 0xFF90DE549F59BA70;
  v114 = v113 ^ __ROR8__(*((_QWORD *)&v86 + 1) ^ 0xE5D7DAAEED85A300 ^ v86, 61);
  *(_QWORD *)&v86 = __ROR8__(v113, 8);
  v115 = __ROR8__((-2 - ((~(v86 + v114) | 0x978199C1D991797DLL) + ((v86 + v114) | 0x687E663E266E8682))) ^ 0x5A8886D619BEA72CLL, 8);
  v116 = (-2 - ((~(v86 + v114) | 0x978199C1D991797DLL) + ((v86 + v114) | 0x687E663E266E8682))) ^ 0x5A8886D619BEA72CLL ^ __ROR8__(v114, 61);
  v117 = (((2 * (v115 + v116)) & 0x9D3B31D97DA9F9B8) - (v115 + v116) - 0x4E9D98ECBED4FCDDLL) ^ 0xD3E8DB41C860E441;
  v118 = v117 ^ __ROR8__(v116, 61);
  v119 = (__ROR8__(v117, 8) + v118) ^ 0x5AC09C033F8B2761;
  *(_QWORD *)&v86 = __ROR8__(v78 + 3, 8);
  v78[2] = (((__ROR8__(v119, 8) + (v119 ^ __ROR8__(v118, 61))) ^ 0x1B0BD1982B59C071uLL) >> (8 * (((_BYTE)v78 + 2) & 7u))) ^ BYTE1(v73) ^ 0x77;
  v120 = ((2 * ((v86 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0x20EB39D37CA90794)
       - ((v86 & 0xF8FFFFFFFFFFFFFFLL)
        - 0x550C087CC469144ELL)
       - 0x10759CE9BE5483CALL;
  v121 = v120 ^ 0xA9FE9E4CEFD5C566;
  v120 ^= 0xFE612255336298F3;
  *(_QWORD *)&v86 = __ROR8__(v121, 8);
  v122 = __ROR8__((-2 - ((~(v86 + v120) | 0x3D54A62DE74C24CLL) + ((v86 + v120) | 0xFC2AB59D218B3DB3))) ^ 0x53019A83E2C9B33BLL, 8);
  v123 = (-2 - ((~(v86 + v120) | 0x3D54A62DE74C24CLL) + ((v86 + v120) | 0xFC2AB59D218B3DB3))) ^ 0x53019A83E2C9B33BLL ^ __ROR8__(v120, 61);
  v124 = (-2 - ((~(v122 + v123) | 0x1730E72B835C4191) + ((v122 + v123) | 0xE8CF18D47CA3BE6ELL))) ^ 0xF2E73D856ED9E291;
  v125 = v124 ^ __ROR8__(v123, 61);
  *(_QWORD *)&v86 = __ROR8__(v124, 8);
  v126 = (v86 + v125 - ((2 * (v86 + v125)) & 0x9B516F8D43D1232ELL) - 0x325748395E176E69) ^ 0x432D2EBD594B98BALL;
  v127 = v126 ^ __ROR8__(v125, 61);
  v128 = (__ROR8__(v126, 8) + v127) ^ 0xCD091F17C02FDE51;
  v129 = v128 ^ __ROR8__(v127, 61);
  *(_QWORD *)&v86 = __ROR8__(v128, 8);
  v130 = __ROR8__((((2 * (v86 + v129)) | 0x70B9105F53F81A68) - (v86 + v129) + 0x47A377D05603F2CCLL) ^ 0xDAD6347D20B7EA56, 8);
  v131 = (((2 * (v86 + v129)) | 0x70B9105F53F81A68) - (v86 + v129) + 0x47A377D05603F2CCLL) ^ 0xDAD6347D20B7EA56 ^ __ROR8__(v129, 61);
  v132 = __ROR8__((v130 + v131) ^ 0x5AC09C033F8B2761, 8) + ((v130 + v131) ^ 0x5AC09C033F8B2761 ^ __ROR8__(v131, 61));
  v78[3] = v73 ^ 0x2B ^ (((v132 - ((2 * v132) & 0xCDE279B6265D5694) - 0x190EC324ECD154B6) ^ 0xFDFAED4338776B3BLL) >> (8 * (((_BYTE)v78 + 3) & 7u)));
  return v74(v75);
}

uint64_t sub_1CF2C2C8C()
{
  int v0;
  unint64_t v2;
  unsigned int v3;

  v0 = (unsigned __int16)LODWORD(STACK[0x2D0]);
  if (v0 == 54704)
    return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2F8] + 8
                                                         * ((1089 * (LODWORD(STACK[0x2E0]) == 1285092971)) ^ 0x283))
                              - 12))();
  if (v0 == 36628)
  {
    v3 = LODWORD(STACK[0x2E0]) - (STACK[0x260] & 0x9C147D78) + 24201301;
    return (*(uint64_t (**)(void))(STACK[0x2F8]
                                + 8
                                * ((78
                                  * (((2 * v3) & 0xFFBEF7BA ^ 0x9C147538) + (v3 ^ 0x31D54561) - 1284854297 != 860498372)) ^ 0x29E)))();
  }
  else
  {
    v2 = STACK[0x2F8];
    if (v0 == 49854)
      return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((47 * (LODWORD(STACK[0x2E0]) == 1285092975)) ^ 0x283)) - 12))();
    else
      return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                            + 8
                                            * ((9 * (*(_QWORD *)(STACK[0x3D8] - 0x23120F4208F8DC5) != 0)) ^ 0x687))
                                - 12))();
  }
}

void sub_1CF2C2CFC()
{
  JUMPOUT(0x1CF2C25A8);
}

void sub_1CF2C2DBC(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  _BYTE *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;

  v2 = a1 ^ (v1 - 658);
  v3 = *(_BYTE **)(STACK[0x3D8] - 0x23120F4208F8DC5);
  v4 = STACK[0x270] - (((v2 ^ 0xD13091714F086694) + 2 * STACK[0x270]) & 0xF6B04CCF712B80C0) - 0x1C0F90DF903692EALL;
  v5 = __ROR8__(v3 + 10, 8);
  v6 = ((2 * (v5 & 0xF8FFFFFFFFFFFFFFLL) + 0x55E7EF06772DD764) & 0x90B16B7D1B79A6A2)
     - (v5 & 0xF8FFFFFFFFFFFFFFLL)
     + 0xCB352BE36AC40FCLL;
  v7 = __ROR8__(v6 ^ 0xE2C48E423C26A02, 8);
  v6 ^= 0x59B3F4FDFF753797uLL;
  v8 = (((2 * (v7 + v6)) | 0x17FE78BC45B94652) - (v7 + v6) + 0x7400C3A1DD235CD7) ^ 0xDB2BECBF1E61D25ELL;
  v9 = v8 ^ __ROR8__(v6, 61);
  v10 = __ROR8__(v8, 8) + v9;
  v11 = v10 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v9, 61);
  *((_QWORD *)&v12 + 1) = v10;
  *(_QWORD *)&v12 = v10 ^ 0xE5D7DAAEED85A300;
  v13 = (((2 * ((v12 >> 8) + v11)) | 0x706FEFFD119E6122) - ((v12 >> 8) + v11) - 0x3837F7FE88CF3091) ^ 0xB6B26E85706C39BCLL;
  v14 = v13 ^ __ROR8__(v11, 61);
  *(_QWORD *)&v12 = __ROR8__(v13, 8);
  v15 = (((v12 + v14) | 0xE7F54DC4843AFB99) - ((v12 + v14) | 0x180AB23B7BC50466) + 0x180AB23B7BC50466) ^ 0x2AFC52D3441525C8;
  v16 = v15 ^ __ROR8__(v14, 61);
  v17 = (__ROR8__(v15, 8) + v16) ^ 0x628ABC52894BE762;
  v18 = v17 ^ __ROR8__(v16, 61);
  v19 = (__ROR8__(v17, 8) + v18) ^ 0x5AC09C033F8B2761;
  v20 = v19 ^ __ROR8__(v18, 61);
  *(_QWORD *)&v12 = __ROR8__(v19, 8);
  v3[10] = (((((2 * ((_QWORD)v12 + v20)) & 0x5BA874AF5D38F1CELL) - ((_QWORD)v12 + v20) + 0x522BC5A851638718) ^ 0x492014307A3A4769uLL) >> (8 * (((_BYTE)v3 + 10) & 7u))) ^ HIBYTE(v4) ^ 0xFB;
  *(_QWORD *)&v12 = __ROR8__(v3 + 11, 8);
  v21 = (v12 & 0xF8FFFFFFFFFFFFFFLL)
      - ((2 * (v12 & 0xF8FFFFFFFFFFFFFFLL) + 0x15E7EF06772DD764) & 0x355AB94138DC40D0)
      + 0x45A15423D8050C1ALL;
  *(_QWORD *)&v12 = __ROR8__(v21 ^ 0x23265E05CDEF66C4, 8);
  v22 = (-2
       - ((~(v12 + (v21 ^ 0x74B9E21C11583B51)) | 0xC11DED4DEE4C92CCLL)
        + ((v12 + (v21 ^ 0x74B9E21C11583B51)) | 0x3EE212B211B36D33))) ^ 0x91C93DACD2F1E3BBLL;
  v23 = v22 ^ __ROR8__(v21 ^ 0x74B9E21C11583B51, 61);
  v24 = __ROR8__(v22, 8) + v23;
  v25 = v24 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v23, 61);
  *((_QWORD *)&v12 + 1) = v24;
  *(_QWORD *)&v12 = v24 ^ 0xE5D7DAAEED85A300;
  v26 = (-2 - ((~((v12 >> 8) + v25) | 0x77956CCF89056578) + (((v12 >> 8) + v25) | 0x886A933076FA9A87))) ^ 0xF910F5B471A66C55;
  v27 = v26 ^ __ROR8__(v25, 61);
  v28 = (__ROR8__(v26, 8) + v27) ^ 0xCD091F17C02FDE51;
  v29 = v28 ^ __ROR8__(v27, 61);
  *(_QWORD *)&v12 = __ROR8__(v28, 8);
  v30 = (v12 + v29 - ((2 * (v12 + v29)) & 0xA9BB3F9CB54546FALL) - 0x2B226031A55D5C83) ^ 0xB657239CD3E9441FLL;
  v31 = v30 ^ __ROR8__(v29, 61);
  *(_QWORD *)&v12 = __ROR8__(v30, 8);
  v32 = (((2 * ((v12 + v31) ^ 0x42D0978BF5AB05F8)) & 0x28E8EE91FE510F3CLL)
       - ((v12 + v31) ^ 0x42D0978BF5AB05F8)
       - 0x14747748FF28879FLL) ^ 0xF39B833FCAF75AF8;
  v33 = v32 ^ __ROR8__(v31, 61);
  *(_QWORD *)&v12 = __ROR8__(v32, 8);
  v3[11] = (((((2 * ((_QWORD)v12 + v33)) & 0x3AD738EFF2AEAA6ELL) - ((_QWORD)v12 + v33) - 0x1D6B9C77F9575538) ^ 0xF99FB2102DF16AB9) >> (8 * (((_BYTE)v3 + 11) & 7u))) ^ BYTE6(v4) ^ 0x58;
  v34 = (((unint64_t)(v3 + 12) >> 8) - 0x550C087CC469144ELL + ((unint64_t)(v3 + 12) >> 3 << 59)) & 0xF9FFFFFFFFFFFFFFLL;
  v35 = v34 ^ 0xBB8B02A5518146ACLL;
  v34 ^= 0xEC14BEBC8D361B39;
  *(_QWORD *)&v12 = __ROR8__(v35, 8);
  v36 = (-2 - ((~(v12 + v34) | 0xD61356B240505818) + ((v12 + v34) | 0x29ECA94DBFAFA7E7))) ^ 0x86C786537CED296FLL;
  v37 = v36 ^ __ROR8__(v34, 61);
  *(_QWORD *)&v12 = __ROR8__(v36, 8);
  v38 = (v12 + v37 - ((2 * (v12 + v37)) & 0xA73BF08C7129AAFALL) - 0x2C6207B9C76B2A83) ^ 0x364A22E8D511767DLL;
  v39 = v38 ^ __ROR8__(v37, 61);
  v40 = (__ROR8__(v38, 8) + v39) ^ 0x8E85997BF8A3092DLL;
  v41 = v40 ^ __ROR8__(v39, 61);
  v42 = (__ROR8__(v40, 8) + v41) ^ 0xCD091F17C02FDE51;
  v43 = v42 ^ __ROR8__(v41, 61);
  v44 = (__ROR8__(v42, 8) + v43) ^ 0x628ABC52894BE762;
  v45 = v44 ^ __ROR8__(v43, 61);
  v46 = (__ROR8__(v44, 8) + v45) ^ 0x5AC09C033F8B2761;
  v3[12] = (((__ROR8__(v46, 8) + (v46 ^ __ROR8__(v45, 61))) ^ 0x1B0BD1982B59C071uLL) >> (8 * (((_BYTE)v3 + 12) & 7u))) ^ BYTE5(v4) ^ 0x26;
  *(_QWORD *)&v12 = __ROR8__(v3 + 13, 8);
  v47 = ((0x150C087CC469144DLL - (v12 & 0xF8FFFFFFFFFFFFFFLL)) & 0x28C891185D033579)
      + (v12 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x550C087CC469144ELL
      - (((v12 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL) & 0x28C891185D033579);
  v48 = v47 ^ 0x914393BD0C8273D5;
  v47 ^= 0xC6DC2FA4D0352E40;
  v49 = (__ROR8__(v48, 8) + v47) ^ 0x50D4D0E13CBD7177;
  v50 = v49 ^ __ROR8__(v47, 61);
  v51 = __ROR8__(v49, 8) + v50;
  v52 = v51 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v50, 61);
  *((_QWORD *)&v12 + 1) = v51;
  *(_QWORD *)&v12 = v51 ^ 0xE5D7DAAEED85A300;
  v53 = __ROR8__(((v12 >> 8) + v52) ^ 0x8E85997BF8A3092DLL, 8);
  v54 = ((v12 >> 8) + v52) ^ 0x8E85997BF8A3092DLL ^ __ROR8__(v52, 61);
  v55 = (((v53 + v54) | 0x44E79080D479A43CLL) - ((v53 + v54) | 0xBB186F7F2B865BC3) - 0x44E79080D479A43DLL) ^ 0x89EE8F9714567A6DLL;
  v56 = __ROR8__(v55, 8);
  v57 = v55 ^ __ROR8__(v54, 61);
  v58 = (v56 + v57 - ((2 * (v56 + v57)) & 0x52EBE49C49841E16) - 0x568A0DB1DB3DF0F5) ^ 0xCBFF4E1CAD89E869;
  v59 = v58 ^ __ROR8__(v57, 61);
  *(_QWORD *)&v12 = __ROR8__(v58, 8);
  v60 = (((2 * (v12 + v59)) & 0x2CE91245637A82CELL) - (v12 + v59) - 0x16748922B1BD4168) ^ 0xB34BEADE71C999F9;
  v61 = v60 ^ __ROR8__(v59, 61);
  *(_QWORD *)&v12 = __ROR8__(v60, 8);
  v3[13] = ((((((_QWORD)v12 + v61) | 0x65D87B9400A7D7E8)
            - (((_QWORD)v12 + v61) | 0x9A27846BFF582817)
            - 0x65D87B9400A7D7E9) ^ 0x7ED3AA0C2BFE1799) >> (8 * (((_BYTE)v3 + 13) & 7u))) ^ BYTE4(v4) ^ 0x67;
  v62 = (__ROR8__(v3 + 14, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL;
  v63 = v62 ^ 0xB98B02A5518146ACLL;
  v62 ^= 0xEE14BEBC8D361B39;
  *(_QWORD *)&v12 = __ROR8__(v63, 8);
  v64 = (-2 - ((~(v12 + v62) | 0xE9A79F6B661C85EELL) + ((v12 + v62) | 0x1658609499E37A11))) ^ 0xB9734F8A5AA1F499;
  v65 = v64 ^ __ROR8__(v62, 61);
  *(_QWORD *)&v12 = __ROR8__(v64, 8);
  v66 = (-2 - ((~(v12 + v65) | 0x4D951D4085C79FFCLL) + ((v12 + v65) | 0xB26AE2BF7A386003))) ^ 0xA842C7EE68423CFCLL;
  v67 = v66 ^ __ROR8__(v65, 61);
  *(_QWORD *)&v12 = __ROR8__(v66, 8);
  v68 = (v12 + v67 - ((2 * (v12 + v67)) & 0x21DC1477A93D02AELL) - 0x6F11F5C42B617EA9) ^ 0x1E6B93402C3D887ALL;
  v69 = v68 ^ __ROR8__(v67, 61);
  v70 = (__ROR8__(v68, 8) + v69) ^ 0xCD091F17C02FDE51;
  v71 = v70 ^ __ROR8__(v69, 61);
  v72 = (__ROR8__(v70, 8) + v71) ^ 0x628ABC52894BE762;
  v73 = v72 ^ __ROR8__(v71, 61);
  *(_QWORD *)&v12 = __ROR8__(v72, 8);
  v74 = (((v12 + v73) ^ 0xDA4A082A2E95835ALL)
       - ((2 * ((v12 + v73) ^ 0xDA4A082A2E95835ALL)) & 0xC06B33C43F36BFCLL)
       + 0x603599E21F9B5FELL) ^ 0x8689CDB730E711C5;
  v75 = v74 ^ __ROR8__(v73, 61);
  *(_QWORD *)&v12 = __ROR8__(v74, 8);
  v3[14] = ((((((_QWORD)v12 + v75) | 0x66A3B2E4FFC0348)
            - (((_QWORD)v12 + v75) | 0xF995C4D1B003FCB7)
            - 0x66A3B2E4FFC0349) ^ 0x1D61EAB664A5C339) >> (8 * (((_BYTE)v3 + 14) & 7u))) ^ BYTE3(v4) ^ 0xB8;
  v76 = (((unint64_t)(v3 + 15) >> 8) - 0x550C087CC469144ELL + ((unint64_t)(v3 + 15) >> 3 << 59)) & 0xF9FFFFFFFFFFFFFFLL;
  *(_QWORD *)&v12 = __ROR8__(v76 ^ 0xBB8B02A5518146ACLL, 8);
  v77 = (((2 * (v12 + (v76 ^ 0xEC14BEBC8D361B39))) & 0x816ACA45F412BB72)
       - (v12
        + (v76 ^ 0xEC14BEBC8D361B39))
       + 0x3F4A9ADD05F6A246) ^ 0x6F9E4A3C394BD331;
  v78 = v77 ^ __ROR8__(v76 ^ 0xEC14BEBC8D361B39, 61);
  *(_QWORD *)&v12 = __ROR8__(v77, 8);
  v79 = (((v12 + v78) ^ 0x2692AA20E73CE799 | 0x9DC1EBBF7BCB2010)
       - ((v12 + v78) ^ 0x2692AA20E73CE799 | 0x623E14408434DFEFLL)
       + 0x623E14408434DFEFLL) ^ 0x5E849B3171726489;
  v80 = v79 ^ __ROR8__(v78, 61);
  *(_QWORD *)&v12 = __ROR8__(v79, 8);
  v81 = (((v12 + v80) ^ 0x919E5F45A3B0DF24)
       - ((2 * ((v12 + v80) ^ 0x919E5F45A3B0DF24)) & 0x371B0A0EEE8C1D3ELL)
       - 0x64727AF888B9F161) ^ 0x849643392C55D896 ^ __ROR8__(v80, 61);
  v82 = (__ROR8__((((v12 + v80) ^ 0x919E5F45A3B0DF24)- ((2 * ((v12 + v80) ^ 0x919E5F45A3B0DF24)) & 0x371B0A0EEE8C1D3ELL)- 0x64727AF888B9F161) ^ 0x849643392C55D896, 8)+ v81) ^ 0xCD091F17C02FDE51;
  v83 = v82 ^ __ROR8__(v81, 61);
  v84 = (__ROR8__(v82, 8) + v83) ^ 0x628ABC52894BE762;
  v85 = v84 ^ __ROR8__(v83, 61);
  *(_QWORD *)&v12 = __ROR8__(v84, 8);
  v86 = (-2 - ((~(v12 + v85) | 0xC967FA94AB04334ELL) + ((v12 + v85) | 0x3698056B54FBCCB1))) ^ 0x93A76697948F142FLL;
  v87 = v86 ^ __ROR8__(v85, 61);
  *(_QWORD *)&v12 = __ROR8__(v86, 8);
  v3[15] = (((-2 - ((~((_QWORD)v12 + v87) | 0x87F6A9D2E02A807ELL) + (((_QWORD)v12 + v87) | 0x7809562D1FD57F81))) ^ 0x9CFD784ACB73400FLL) >> (8 * (((_BYTE)v3 + 15) & 7u))) ^ BYTE2(v4) ^ 0x95;
  *(_QWORD *)&v12 = __ROR8__(v3 + 16, 8);
  v88 = -2
      - (((0x150C087CC469144DLL - (v12 & 0xF8FFFFFFFFFFFFFFLL)) | 0xD42E87D37243C3E6)
       + (((v12 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL) | 0x2BD1782C8DBC3C19));
  v89 = v88 ^ 0x6DA5857623C2854ALL;
  v88 ^= 0x3A3A396FFF75D8DFuLL;
  *(_QWORD *)&v12 = __ROR8__(v89, 8);
  v90 = (((v12 + v88) | 0x96F726EF6CD2AD87) - ((v12 + v88) | 0x6908D910932D5278) + 0x6908D910932D5278) ^ 0xC623F60E506FDCF0;
  v91 = v90 ^ __ROR8__(v88, 61);
  v92 = __ROR8__(v90, 8) + v91;
  v93 = v92 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v91, 61);
  *((_QWORD *)&v12 + 1) = v92;
  *(_QWORD *)&v12 = v92 ^ 0xE5D7DAAEED85A300;
  v94 = (-2 - ((~((v12 >> 8) + v93) | 0x3BD37CAD8A56413ELL) + (((v12 >> 8) + v93) | 0xC42C835275A9BEC1))) ^ 0xB556E5D672F54813;
  v95 = v94 ^ __ROR8__(v93, 61);
  v96 = (__ROR8__(v94, 8) + v95) ^ 0xCD091F17C02FDE51;
  v97 = __ROR8__(v96, 8);
  v98 = v96 ^ __ROR8__(v95, 61);
  v99 = (v97 + v98) ^ 0x628ABC52894BE762;
  v100 = v99 ^ __ROR8__(v98, 61);
  v101 = (__ROR8__(v99, 8) + v100) ^ 0x5AC09C033F8B2761;
  v3[16] = (((__ROR8__(v101, 8) + (v101 ^ __ROR8__(v100, 61))) ^ 0x1B0BD1982B59C071uLL) >> (8 * (((_BYTE)v3 + 16) & 7u))) ^ BYTE1(v4) ^ 0xC0;
  v102 = (((unint64_t)(v3 + 17) >> 8) - 0x550C087CC469144ELL + ((unint64_t)(v3 + 17) >> 3 << 59)) ^ 0xF5E6268322329A2;
  v103 = ((2 * v102) & 0xB425A4BB16C91CCLL) - v102 - 0x5A12D25D8B648E7;
  v104 = (__ROR8__(v103 ^ 0x4C8BB21744EBD817, 8) + (v103 ^ 0x1B140E0E985C8582)) ^ 0x50D4D0E13CBD7177;
  *((_QWORD *)&v12 + 1) = v103 ^ 0x1B140E0E985C8582;
  *(_QWORD *)&v12 = v103;
  v105 = v104 ^ (v12 >> 61);
  v106 = __ROR8__(v104, 8) + v105;
  v107 = v106 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v105, 61);
  *((_QWORD *)&v12 + 1) = v106;
  *(_QWORD *)&v12 = v106 ^ 0xE5D7DAAEED85A300;
  v108 = ((v12 >> 8) + v107) ^ 0x8E85997BF8A3092DLL;
  v109 = v108 ^ __ROR8__(v107, 61);
  *(_QWORD *)&v12 = __ROR8__(v108, 8);
  v110 = (((2 * (v12 + v109)) | 0xC2F682CA4CC09A3CLL) - (v12 + v109) - 0x617B416526604D1ELL) ^ 0xAC725E72E64F934FLL;
  v111 = v110 ^ __ROR8__(v109, 61);
  *(_QWORD *)&v12 = __ROR8__(v110, 8);
  v112 = (((2 * (v12 + v111)) | 0xC157B57B1A348C68) - (v12 + v111) - 0x60ABDABD8D1A4634) ^ 0x22166EF0451A156;
  v113 = v112 ^ __ROR8__(v111, 61);
  *(_QWORD *)&v12 = __ROR8__(v112, 8);
  v114 = (((v12 + v113) | 0xD97D8D1C4B94792ALL) - ((v12 + v113) | 0x268272E3B46B86D5) + 0x268272E3B46B86D5) ^ 0x83BD111F741F5E4BLL;
  v3[17] = (((__ROR8__(v114, 8) + (v114 ^ __ROR8__(v113, 61))) ^ 0x1B0BD1982B59C071) >> (8 * (((_BYTE)v3 + 17) & 7u))) ^ v4 ^ 0x60;
  STACK[0x380] = 0x23120F4208F8DDDLL;
  STACK[0x398] = *(_QWORD *)(STACK[0x2F8] + 8 * ((int)v2 - 560938766));
  JUMPOUT(0x1CF2BD6B0);
}

uint64_t sub_1CF2C3D94()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  int v3;
  uint64_t v4;
  unint64_t v5;

  v3 = v0 - 815;
  v4 = sub_1CF370D34();
  v5 = STACK[0x2F8];
  *v2 = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * ((1334 * (v1 != 0x23120F4208F8DDDLL)) ^ v3)) - 12))(v4);
}

void sub_1CF2C3DDC()
{
  sub_1CF370D34();
  JUMPOUT(0x1CF2C3DF8);
}

uint64_t sub_1CF2C3E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((((v10 ^ (v10 - 949)) - 454) * (v7 == v8)) ^ (v9 + v10 + 708)))
                            - 8))();
}

uint64_t sub_1CF2C3E30()
{
  return ((uint64_t (*)(void))STACK[0x3B0])();
}

uint64_t sub_1CF2C3E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((v9 + v10 + 708) ^ (501 * (v7 == v8))))
                            - ((v10 - 617184249) & 0x35A3FBB ^ 0x3B3)))();
}

uint64_t sub_1CF2C3E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((v9 + v10 + 708) ^ (501 * (v7 == v8))))
                            - ((v9 + v10 + 923) ^ 0x3B3)))();
}

uint64_t sub_1CF2C3EB8@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  int v2;
  int v3;
  int v4;

  v3 = (((a2 - 937) | 0x100) - 579327259) & 0x2287D6EC;
  v4 = (v3 ^ 0x2E5) + LODWORD(STACK[0x3D0]);
  LODWORD(STACK[0x3D0]) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((1907 * ((v4 - 1184670846) < 3)) ^ v3))
                            - ((v2 - 2010199837 + v3) & 0x5661F7FB)
                            + 947))();
}

uint64_t sub_1CF2C3F48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((1334 * (v7 != 0x23120F4208F8DDDLL)) ^ (a7 + 824)))
                                                                                                - 12))(a1, a2, a3, a4, a5, a6, v8);
}

uint64_t sub_1CF2C4028()
{
  int v0;
  int v1;

  STACK[0x2E0] = *(_QWORD *)(STACK[0x3D8] - 0x23120F4208F8DC5);
  STACK[0x2D0] = STACK[0x2A0] - 0x2DD266C5A2519723;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2F8]
                                        + 8 * ((487 * ((v1 + v0 - 2145352669) < 8)) ^ 0x6ECu))
                            - 8))();
}

uint64_t sub_1CF2C40D0()
{
  unsigned int v0;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x2F8]
                                                     + 8
                                                     * ((7
                                                       * (STACK[0x2A0] - STACK[0x2E0] - 0x2DD266C5A251972DLL >= ((v0 + 92) ^ 0x2BDuLL))) ^ v0))
                                         - 12))((v0 - 1876212436) & 0x1AB3);
}

uint64_t sub_1CF2C4138(uint64_t a1, uint64_t a2, unsigned int a3)
{
  unsigned int v3;
  unsigned int v4;

  return (*(uint64_t (**)(void))(STACK[0x2F8] + 8 * (((v3 >= (v4 ^ a3)) * ((v4 + 647493969) & 0x8070D ^ 0x36D)) ^ v4)))();
}

uint64_t sub_1CF2C4184(uint64_t a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unint64_t v7;
  unsigned int v8;
  int8x16_t v9;
  int64x2_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int64x2_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int64x2_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int8x16_t v19;
  unint64_t v20;
  int64x2_t v21;
  unint64_t v22;
  int64x2_t v23;
  int64x2_t v24;
  int64x2_t v25;
  int64x2_t v26;
  int64x2_t v27;
  int64x2_t v28;
  int8x16_t v29;
  int8x16_t v30;
  int8x16_t v31;
  int8x16_t v32;
  int64x2_t v33;
  int8x16_t v34;
  int8x16_t v35;
  int64x2_t v36;
  int64x2_t v37;
  int64x2_t v38;
  int64x2_t v39;
  int64x2_t v40;
  int64x2_t v41;
  int64x2_t v42;
  int64x2_t v43;
  int64x2_t v44;
  int64x2_t v45;
  int64x2_t v46;
  int64x2_t v47;
  int64x2_t v48;
  int64x2_t v49;
  int64x2_t v50;
  int64x2_t v51;
  int64x2_t v52;
  int64x2_t v53;
  int64x2_t v54;
  int64x2_t v55;
  int64x2_t v56;
  int64x2_t v57;
  int64x2_t v58;
  int64x2_t v59;
  int64x2_t v60;
  int64x2_t v61;
  int64x2_t v62;
  int64x2_t v63;
  int64x2_t v64;
  int64x2_t v65;
  int64x2_t v66;
  int64x2_t v67;
  int8x16_t v68;
  int8x16_t v69;
  int64x2_t v70;
  int64x2_t v71;
  int8x16_t v72;
  int64x2_t v73;
  int64x2_t v74;
  int64x2_t v75;
  int64x2_t v76;
  int64x2_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int64x2_t v81;
  int64x2_t v82;
  int64x2_t v83;
  int64x2_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int8x16_t v89;
  int64x2_t v90;
  int8x16_t v91;
  int8x16_t v92;
  int64x2_t v93;
  int64x2_t v94;
  int64x2_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int64x2_t v100;
  int64x2_t v101;
  int64x2_t v102;
  int64x2_t v103;
  int64x2_t v104;
  int64x2_t v105;
  int64x2_t v106;
  int64x2_t v107;
  int64x2_t v108;
  int8x16_t v109;
  int64x2_t v110;
  int8x16_t v111;
  int8x16_t v112;
  int8x16_t v113;
  int8x16_t v114;
  int8x16_t v115;
  int8x16_t v116;
  int8x16_t v117;
  int64x2_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int64x2_t v121;
  int64x2_t v122;
  int64x2_t v123;
  int64x2_t v124;
  int64x2_t v125;
  int64x2_t v126;
  int64x2_t v127;
  int64x2_t v128;
  int64x2_t v129;
  int64x2_t v130;
  int64x2_t v131;
  int64x2_t v132;
  int64x2_t v133;
  int64x2_t v134;
  int64x2_t v135;
  int64x2_t v136;
  int64x2_t v137;
  int64x2_t v138;
  int64x2_t v139;
  int8x16_t v140;
  int64x2_t v141;
  int8x16_t v142;
  uint64x2_t v143;
  int64x2_t v144;
  int64x2_t v145;
  int64x2_t v146;
  int64x2_t v147;
  int64x2_t v148;
  int64x2_t v149;
  int64x2_t v150;
  int64x2_t v151;
  int64x2_t v152;
  int64x2_t v153;
  int64x2_t v154;
  int64x2_t v155;
  int64x2_t v156;
  int64x2_t v157;
  int64x2_t v158;
  int64x2_t v159;
  int8x16_t v160;
  int64x2_t v161;
  int8x16_t v162;
  int8x16_t v163;
  int64x2_t v164;
  int64x2_t v165;
  int64x2_t v166;
  int64x2_t v167;
  int64x2_t v168;
  int64x2_t v169;
  int64x2_t v170;
  int64x2_t v171;
  int64x2_t v172;
  int64x2_t v173;
  int64x2_t v174;
  int64x2_t v175;
  int64x2_t v176;
  int64x2_t v177;
  int64x2_t v178;
  int64x2_t v179;
  int8x16_t v180;
  int64x2_t v181;
  int8x16_t v182;
  int64x2_t v184;
  int64x2_t v185;
  int8x16_t v186;
  int8x16_t v187;
  int64x2_t v188;
  int8x16_t v189;
  int8x16_t v190;
  int8x16_t v191;
  int8x16_t v192;
  int64x2_t v193;
  int8x16_t v194;
  int8x16_t v195;
  int64x2_t v196;
  int64x2_t v197;
  int8x16x4_t v198;

  v7 = STACK[0x2D0] - 15;
  v8 = v5 + v4 + v6;
  v192 = (int8x16_t)vdupq_n_s64(0x38uLL);
  *(int64x2_t *)&STACK[0x2B0] = vdupq_n_s64(0xAAF3F7833B96EBB2);
  *(int64x2_t *)&STACK[0x2C0] = vdupq_n_s64(0xF8FFFFFFFFFFFFFFLL);
  *(int64x2_t *)&STACK[0x2A0] = vdupq_n_s64(0x991A82D9727F8A1ELL);
  v190 = (int8x16_t)vdupq_n_s64(0x770E3C65FF499127uLL);
  v191 = (int8x16_t)vdupq_n_s64(0x2091807C23FECCB2uLL);
  v189 = (int8x16_t)vdupq_n_s64(0x50D4D0E13CBD7177uLL);
  v187 = (int8x16_t)vdupq_n_s64(0x5FB3A696707667F0uLL);
  v188 = vdupq_n_s64(0xBA647C389DF3C4F0);
  v186 = (int8x16_t)vdupq_n_s64(0x661703085D1D211AuLL);
  *(int64x2_t *)&STACK[0x270] = vdupq_n_s64(0xFE029E93EEA14EDCLL);
  v185 = vdupq_n_s64(0xCCF47E7BD1716F73);
  v184 = vdupq_n_s64(0x96EEEB3C2090953ELL);
  *(_OWORD *)&STACK[0x260] = xmmword_1CF37DAC0;
  v10 = vdupq_n_s64(0x66E57D268D8075E1uLL);
  v9 = (int8x16_t)vdupq_n_s64(0x1B0BD1982B59C071uLL);
  v11 = (int8x16_t)vdupq_n_s64(0x8B37078EC418761ELL);
  v13 = vdupq_n_s64(0xB7B3FE5D574B0D4CLL);
  v12 = (int8x16_t)vdupq_n_s64(0x909803455169E568);
  v14 = (int8x16_t)vdupq_n_s64(0xC6C998D95017FB99);
  v16 = vdupq_n_s64(0xBB93EBDCAA39F314);
  v15 = (int8x16_t)vdupq_n_s64(0x88D82846AB8C19D8);
  v17 = (int8x16_t)vdupq_n_s64(0x691114C3DF6F6AC1uLL);
  v18 = (int8x16_t)vdupq_n_s64(0x26E6A871DC8DEB8EuLL);
  v19 = (int8x16_t)vdupq_n_s64(0x33D188C0E0E44DA0uLL);
  v20 = STACK[0x2E0];
  v21.i64[0] = v8 + STACK[0x2E0] + 10;
  v21.i64[1] = v3 + ((a2 - 748) ^ 0xCCB5D614) + STACK[0x2E0] + 10;
  v22 = v8 + 6 + STACK[0x2E0];
  v23.i64[0] = v22 + 10;
  v23.i64[1] = v8 + 5 + STACK[0x2E0] + 10;
  v24.i64[0] = v8 + 4 + STACK[0x2E0] + 10;
  v24.i64[1] = v8 + 3 + STACK[0x2E0] + 10;
  v25.i64[0] = v8 + 2 + STACK[0x2E0] + 10;
  v25.i64[1] = v8 + 1 + STACK[0x2E0] + 10;
  v26.i64[0] = v8 - 4 + STACK[0x2E0] + 10;
  v26.i64[1] = v8 - 5 + STACK[0x2E0] + 10;
  *(int64x2_t *)&STACK[0x250] = v26;
  v27.i64[0] = v8 - 6 + v20 + 10;
  v27.i64[1] = v8 - 7 + v20 + 10;
  v28.i64[0] = v8 - 8 + v20 + 10;
  v28.i64[1] = v8 - 9 + v20 + 10;
  v197 = v27;
  v194 = vorrq_s8((int8x16_t)vshlq_n_s64(v27, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v27, 8uLL));
  v195 = vorrq_s8((int8x16_t)vshlq_n_s64(v26, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v26, 8uLL));
  v29 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v21, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v21, 8uLL)), *(int8x16_t *)&STACK[0x2C0]), *(int64x2_t *)&STACK[0x2B0]);
  v30 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v23, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v23, 8uLL)), *(int8x16_t *)&STACK[0x2C0]), *(int64x2_t *)&STACK[0x2B0]);
  v31 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v24, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v24, 8uLL)), *(int8x16_t *)&STACK[0x2C0]), *(int64x2_t *)&STACK[0x2B0]);
  v32 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v25, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v25, 8uLL)), *(int8x16_t *)&STACK[0x2C0]), *(int64x2_t *)&STACK[0x2B0]);
  v193 = vsubq_s64((int64x2_t)vorrq_s8(v29, *(int8x16_t *)&STACK[0x2A0]), (int64x2_t)vorrq_s8(v29, (int8x16_t)v10));
  v33 = vsubq_s64((int64x2_t)vorrq_s8(v30, *(int8x16_t *)&STACK[0x2A0]), (int64x2_t)vorrq_s8(v30, (int8x16_t)v10));
  v34 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v32, *(int8x16_t *)&STACK[0x2A0]), (int64x2_t)vorrq_s8(v32, (int8x16_t)v10)), v10);
  v35 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v31, *(int8x16_t *)&STACK[0x2A0]), (int64x2_t)vorrq_s8(v31, (int8x16_t)v10)), v10);
  v36 = (int64x2_t)veorq_s8(v35, v191);
  v37 = (int64x2_t)veorq_s8(v34, v191);
  v38 = (int64x2_t)veorq_s8(v34, v190);
  v39 = (int64x2_t)veorq_s8(v35, v190);
  v40 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v37, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v37, 8uLL)), v38), v189);
  v41 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v36, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v36, 8uLL)), v39), v189);
  v42 = (int64x2_t)veorq_s8((int8x16_t)v41, vorrq_s8((int8x16_t)vshlq_n_s64(v39, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v39, 0x3DuLL)));
  v43 = (int64x2_t)veorq_s8((int8x16_t)v40, vorrq_s8((int8x16_t)vshlq_n_s64(v38, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v38, 0x3DuLL)));
  v44 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v40, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v40, 8uLL)), v43);
  v45 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v41, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v41, 8uLL)), v42);
  v46 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v45, v45), v11), v45), v188), v187);
  v47 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v44, v44), v11), v44), v188), v187);
  v48 = (int64x2_t)veorq_s8((int8x16_t)v47, vorrq_s8((int8x16_t)vshlq_n_s64(v43, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v43, 0x3DuLL)));
  v49 = (int64x2_t)veorq_s8((int8x16_t)v46, vorrq_s8((int8x16_t)vshlq_n_s64(v42, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v42, 0x3DuLL)));
  v50 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v46, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v46, 8uLL)), v49);
  v51 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v47, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v47, 8uLL)), v48);
  v52 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v51, v51), v12), v51), v13), v14);
  v53 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v50, v50), v12), v50), v13), v14);
  v54 = (int64x2_t)veorq_s8((int8x16_t)v53, vorrq_s8((int8x16_t)vshlq_n_s64(v49, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v49, 0x3DuLL)));
  v55 = (int64x2_t)veorq_s8((int8x16_t)v52, vorrq_s8((int8x16_t)vshlq_n_s64(v48, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v48, 0x3DuLL)));
  v56 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v52, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v52, 8uLL)), v55);
  v57 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v53, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v53, 8uLL)), v54);
  v58 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v57, v57), v186), v57), v185), *(int8x16_t *)&STACK[0x270]);
  v59 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v56, v56), v186), v56), v185), *(int8x16_t *)&STACK[0x270]);
  v60 = (int64x2_t)veorq_s8((int8x16_t)v59, vorrq_s8((int8x16_t)vshlq_n_s64(v55, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v55, 0x3DuLL)));
  v61 = (int64x2_t)veorq_s8((int8x16_t)v58, vorrq_s8((int8x16_t)vshlq_n_s64(v54, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v54, 0x3DuLL)));
  v62 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v58, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v58, 8uLL)), v61);
  v63 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v59, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v59, 8uLL)), v60);
  v64 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v63, v63), v15), v63), v16), v18);
  v65 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v62, v62), v15), v62), v16), v18);
  v66 = (int64x2_t)veorq_s8((int8x16_t)v65, vorrq_s8((int8x16_t)vshlq_n_s64(v61, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v61, 0x3DuLL)));
  v67 = (int64x2_t)veorq_s8((int8x16_t)v64, vorrq_s8((int8x16_t)vshlq_n_s64(v60, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v60, 0x3DuLL)));
  v68 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v64, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v64, 8uLL)), v67);
  v69 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v65, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v65, 8uLL)), v66);
  v70 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v68, v17), (int64x2_t)vorrq_s8(v68, (int8x16_t)v184)), v184), v19);
  v71 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v69, v17), (int64x2_t)vorrq_s8(v69, (int8x16_t)v184)), v184), v19);
  v72 = (int8x16_t)vaddq_s64(v33, v10);
  v198.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v70, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v70, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v70, vorrq_s8((int8x16_t)vshlq_n_s64(v67, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v67, 0x3DuLL)))), v9), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v25, 3uLL), v192)));
  v198.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v71, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v71, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v71, vorrq_s8((int8x16_t)vshlq_n_s64(v66, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v66, 0x3DuLL)))), v9), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v24, 3uLL), v192)));
  v73 = (int64x2_t)veorq_s8(v72, v191);
  v74 = (int64x2_t)veorq_s8(v72, v190);
  v75 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v73, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v73, 8uLL)), v74), v189);
  v76 = (int64x2_t)veorq_s8((int8x16_t)v75, vorrq_s8((int8x16_t)vshlq_n_s64(v74, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v74, 0x3DuLL)));
  v77 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v75, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v75, 8uLL)), v76);
  v78 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v77, v77), v11), v77), v188), v187);
  v79 = (int64x2_t)veorq_s8((int8x16_t)v78, vorrq_s8((int8x16_t)vshlq_n_s64(v76, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v76, 0x3DuLL)));
  v80 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v78, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v78, 8uLL)), v79);
  v81 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v80, v80), v12), v80), v13), v14);
  v82 = (int64x2_t)veorq_s8((int8x16_t)v81, vorrq_s8((int8x16_t)vshlq_n_s64(v79, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v79, 0x3DuLL)));
  v83 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v81, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v81, 8uLL)), v82);
  v84 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v83, v83), v186), v83), v185), *(int8x16_t *)&STACK[0x270]);
  v85 = (int64x2_t)veorq_s8((int8x16_t)v84, vorrq_s8((int8x16_t)vshlq_n_s64(v82, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v82, 0x3DuLL)));
  v86 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v84, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v84, 8uLL)), v85);
  v87 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v86, v86), v15), v86), v16), v18);
  v88 = (int64x2_t)veorq_s8((int8x16_t)v87, vorrq_s8((int8x16_t)vshlq_n_s64(v85, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v85, 0x3DuLL)));
  v89 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v87, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v87, 8uLL)), v88);
  v90 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v89, v17), (int64x2_t)vorrq_s8(v89, (int8x16_t)v184)), v184), v19);
  v91 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v90, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v90, vorrq_s8((int8x16_t)vshlq_n_s64(v88, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v88, 0x3DuLL))));
  v92 = (int8x16_t)vaddq_s64(v193, v10);
  v198.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8(v91, v9), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v23, 3uLL), v192)));
  v93 = (int64x2_t)veorq_s8(v92, v191);
  v94 = (int64x2_t)veorq_s8(v92, v190);
  v95 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v93, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v93, 8uLL)), v94), v189);
  v96 = (int64x2_t)veorq_s8((int8x16_t)v95, vorrq_s8((int8x16_t)vshlq_n_s64(v94, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v94, 0x3DuLL)));
  v97 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v95, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v95, 8uLL)), v96);
  v98 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v97, v97), v11), v97), v188), v187);
  v99 = (int64x2_t)veorq_s8((int8x16_t)v98, vorrq_s8((int8x16_t)vshlq_n_s64(v96, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v96, 0x3DuLL)));
  v100 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v98, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v98, 8uLL)), v99);
  v101 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v100, v100), v12), v100), v13), v14);
  v102 = (int64x2_t)veorq_s8((int8x16_t)v101, vorrq_s8((int8x16_t)vshlq_n_s64(v99, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v99, 0x3DuLL)));
  v103 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v101, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v101, 8uLL)), v102);
  v104 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v103, v103), v186), v103), v185), *(int8x16_t *)&STACK[0x270]);
  v105 = (int64x2_t)veorq_s8((int8x16_t)v104, vorrq_s8((int8x16_t)vshlq_n_s64(v102, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v102, 0x3DuLL)));
  v106 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v104, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 8uLL)), v105);
  v107 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v106, v106), v15), v106), v16), v18);
  v108 = (int64x2_t)veorq_s8((int8x16_t)v107, vorrq_s8((int8x16_t)vshlq_n_s64(v105, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v105, 0x3DuLL)));
  v109 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v107, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v107, 8uLL)), v108);
  v110 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v109, v17), (int64x2_t)vorrq_s8(v109, (int8x16_t)v184)), v184), v19);
  v111 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v110, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v110, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v110, vorrq_s8((int8x16_t)vshlq_n_s64(v108, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v108, 0x3DuLL))));
  v110.i64[0] = v8 - 2 + v20 + 10;
  v110.i64[1] = v8 - 3 + v20 + 10;
  v198.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8(v111, v9), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v21, 3uLL), v192)));
  v112 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v110, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v110, 8uLL)), *(int8x16_t *)&STACK[0x2C0]), *(int64x2_t *)&STACK[0x2B0]);
  v113 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(v195, *(int8x16_t *)&STACK[0x2C0]), *(int64x2_t *)&STACK[0x2B0]);
  v114 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(v194, *(int8x16_t *)&STACK[0x2C0]), *(int64x2_t *)&STACK[0x2B0]);
  v115 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v28, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v28, 8uLL)), *(int8x16_t *)&STACK[0x2C0]), *(int64x2_t *)&STACK[0x2B0]);
  v196 = vsubq_s64((int64x2_t)vorrq_s8(v112, *(int8x16_t *)&STACK[0x2A0]), (int64x2_t)vorrq_s8(v112, (int8x16_t)v10));
  v116 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v115, *(int8x16_t *)&STACK[0x2A0]), (int64x2_t)vorrq_s8(v115, (int8x16_t)v10)), v10);
  v117 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v114, *(int8x16_t *)&STACK[0x2A0]), (int64x2_t)vorrq_s8(v114, (int8x16_t)v10)), v10);
  v114.i64[0] = vqtbl4q_s8(v198, *(int8x16_t *)&STACK[0x260]).u64[0];
  v198.val[3] = veorq_s8(v117, v191);
  v118 = (int64x2_t)veorq_s8(v116, v191);
  v119 = (int64x2_t)veorq_s8(v116, v190);
  v120 = (int64x2_t)veorq_s8(v117, v190);
  v121 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v118, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v118, 8uLL)), v119), v189);
  v198.val[3] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v198.val[3], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v198.val[3], 8uLL)), v120), v189);
  v122 = (int64x2_t)veorq_s8(v198.val[3], vorrq_s8((int8x16_t)vshlq_n_s64(v120, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v120, 0x3DuLL)));
  v123 = (int64x2_t)veorq_s8((int8x16_t)v121, vorrq_s8((int8x16_t)vshlq_n_s64(v119, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v119, 0x3DuLL)));
  v124 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v121, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v121, 8uLL)), v123);
  v198.val[3] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v198.val[3], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v198.val[3], 8uLL)), v122);
  v198.val[3] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v198.val[3], (int64x2_t)v198.val[3]), v11), (int64x2_t)v198.val[3]), v188), v187);
  v125 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v124, v124), v11), v124), v188), v187);
  v126 = (int64x2_t)veorq_s8((int8x16_t)v125, vorrq_s8((int8x16_t)vshlq_n_s64(v123, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v123, 0x3DuLL)));
  v127 = (int64x2_t)veorq_s8(v198.val[3], vorrq_s8((int8x16_t)vshlq_n_s64(v122, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v122, 0x3DuLL)));
  v198.val[3] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v198.val[3], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v198.val[3], 8uLL)), v127);
  v128 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v125, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v125, 8uLL)), v126);
  v129 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v128, v128), v12), v128), v13), v14);
  v198.val[3] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64((int64x2_t)v198.val[3], (int64x2_t)v198.val[3]), v12), (int64x2_t)v198.val[3]), v13), v14);
  v130 = (int64x2_t)veorq_s8(v198.val[3], vorrq_s8((int8x16_t)vshlq_n_s64(v127, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v127, 0x3DuLL)));
  v131 = (int64x2_t)veorq_s8((int8x16_t)v129, vorrq_s8((int8x16_t)vshlq_n_s64(v126, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v126, 0x3DuLL)));
  v132 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v129, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v129, 8uLL)), v131);
  v198.val[3] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v198.val[3], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v198.val[3], 8uLL)), v130);
  v198.val[3] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64((int64x2_t)v198.val[3], (int64x2_t)v198.val[3]), v186), (int64x2_t)v198.val[3]), v185), *(int8x16_t *)&STACK[0x270]);
  v133 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v132, v132), v186), v132), v185), *(int8x16_t *)&STACK[0x270]);
  v134 = (int64x2_t)veorq_s8((int8x16_t)v133, vorrq_s8((int8x16_t)vshlq_n_s64(v131, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v131, 0x3DuLL)));
  v135 = (int64x2_t)veorq_s8(v198.val[3], vorrq_s8((int8x16_t)vshlq_n_s64(v130, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v130, 0x3DuLL)));
  v198.val[3] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v198.val[3], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v198.val[3], 8uLL)), v135);
  v136 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v133, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133, 8uLL)), v134);
  v137 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v136, v136), v15), v136), v16), v18);
  v198.val[3] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64((int64x2_t)v198.val[3], (int64x2_t)v198.val[3]), v15), (int64x2_t)v198.val[3]), v16), v18);
  v138 = (int64x2_t)veorq_s8(v198.val[3], vorrq_s8((int8x16_t)vshlq_n_s64(v135, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v135, 0x3DuLL)));
  v139 = (int64x2_t)veorq_s8((int8x16_t)v137, vorrq_s8((int8x16_t)vshlq_n_s64(v134, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v134, 0x3DuLL)));
  v140 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v137, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v137, 8uLL)), v139);
  v198.val[3] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v198.val[3], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v198.val[3], 8uLL)), v138);
  v141 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v140, v17), (int64x2_t)vorrq_s8(v140, (int8x16_t)v184)), v184), v19);
  v198.val[3] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v198.val[3], v17), (int64x2_t)vorrq_s8(v198.val[3], (int8x16_t)v184)), v184), v19);
  v142 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v113, *(int8x16_t *)&STACK[0x2A0]), (int64x2_t)vorrq_s8(v113, (int8x16_t)v10)), v10);
  v143 = (uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v198.val[3], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v198.val[3], 8uLL)), (int64x2_t)veorq_s8(v198.val[3], vorrq_s8((int8x16_t)vshlq_n_s64(v138, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v138, 0x3DuLL)))), v9);
  v198.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v141, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v141, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v141, vorrq_s8((int8x16_t)vshlq_n_s64(v139, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v139, 0x3DuLL)))), v9), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v28, 3uLL), v192)));
  v198.val[2] = (int8x16_t)vshlq_u64(v143, (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v197, 3uLL), v192)));
  v144 = (int64x2_t)veorq_s8(v142, v191);
  v145 = (int64x2_t)veorq_s8(v142, v190);
  v146 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v144, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v144, 8uLL)), v145), v189);
  v147 = (int64x2_t)veorq_s8((int8x16_t)v146, vorrq_s8((int8x16_t)vshlq_n_s64(v145, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v145, 0x3DuLL)));
  v148 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v146, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146, 8uLL)), v147);
  v149 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v148, v148), v11), v148), v188), v187);
  v150 = (int64x2_t)veorq_s8((int8x16_t)v149, vorrq_s8((int8x16_t)vshlq_n_s64(v147, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v147, 0x3DuLL)));
  v151 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v149, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v149, 8uLL)), v150);
  v152 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v151, v151), v12), v151), v13), v14);
  v153 = (int64x2_t)veorq_s8((int8x16_t)v152, vorrq_s8((int8x16_t)vshlq_n_s64(v150, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v150, 0x3DuLL)));
  v154 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v152, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152, 8uLL)), v153);
  v155 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v154, v154), v186), v154), v185), *(int8x16_t *)&STACK[0x270]);
  v156 = (int64x2_t)veorq_s8((int8x16_t)v155, vorrq_s8((int8x16_t)vshlq_n_s64(v153, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v153, 0x3DuLL)));
  v157 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v155, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v155, 8uLL)), v156);
  v158 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v157, v157), v15), v157), v16), v18);
  v159 = (int64x2_t)veorq_s8((int8x16_t)v158, vorrq_s8((int8x16_t)vshlq_n_s64(v156, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v156, 0x3DuLL)));
  v160 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v158, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v158, 8uLL)), v159);
  v161 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v160, v17), (int64x2_t)vorrq_s8(v160, (int8x16_t)v184)), v184), v19);
  v162 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v161, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v161, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v161, vorrq_s8((int8x16_t)vshlq_n_s64(v159, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v159, 0x3DuLL))));
  v163 = (int8x16_t)vaddq_s64(v196, v10);
  v198.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8(v162, v9), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x250], 3uLL), v192)));
  v164 = (int64x2_t)veorq_s8(v163, v191);
  v165 = (int64x2_t)veorq_s8(v163, v190);
  v166 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v164, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v164, 8uLL)), v165), v189);
  v167 = (int64x2_t)veorq_s8((int8x16_t)v166, vorrq_s8((int8x16_t)vshlq_n_s64(v165, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v165, 0x3DuLL)));
  v168 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v166, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v166, 8uLL)), v167);
  v169 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v168, v168), v11), v168), v188), v187);
  v170 = (int64x2_t)veorq_s8((int8x16_t)v169, vorrq_s8((int8x16_t)vshlq_n_s64(v167, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v167, 0x3DuLL)));
  v171 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v169, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v169, 8uLL)), v170);
  v172 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v171, v171), v12), v171), v13), v14);
  v173 = (int64x2_t)veorq_s8((int8x16_t)v172, vorrq_s8((int8x16_t)vshlq_n_s64(v170, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v170, 0x3DuLL)));
  v174 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v172, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v172, 8uLL)), v173);
  v175 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v174, v174), v186), v174), v185), *(int8x16_t *)&STACK[0x270]);
  v176 = (int64x2_t)veorq_s8((int8x16_t)v175, vorrq_s8((int8x16_t)vshlq_n_s64(v173, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v173, 0x3DuLL)));
  v177 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v175, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v175, 8uLL)), v176);
  v178 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v177, v177), v15), v177), v16), v18);
  v179 = (int64x2_t)veorq_s8((int8x16_t)v178, vorrq_s8((int8x16_t)vshlq_n_s64(v176, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v176, 0x3DuLL)));
  v180 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v178, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v178, 8uLL)), v179);
  v181 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v180, v17), (int64x2_t)vorrq_s8(v180, (int8x16_t)v184)), v184), v19);
  v198.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v181, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v181, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v181, vorrq_s8((int8x16_t)vshlq_n_s64(v179, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v179, 0x3DuLL)))), v9), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v110, 3uLL), v192)));
  v114.i64[1] = vqtbl4q_s8(v198, *(int8x16_t *)&STACK[0x260]).u64[0];
  v182 = vrev64q_s8(v114);
  *(int8x16_t *)(v22 - 5) = veorq_s8(vextq_s8(v182, v182, 8uLL), *(int8x16_t *)(v7 + v8 + 6));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x2F8] + 8 * ((1690 * (-(v2 & 0xFFFFFFF0) == -16)) ^ a2))
                                          - 8))(4294967280);
}

void sub_1CF2C5234()
{
  JUMPOUT(0x1CF2C4424);
}

uint64_t sub_1CF2C523C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2F8]
                                        + 8 * ((((v3 - v1) ^ (v0 - 1241) ^ (v3 + 653)) * (v2 != v4)) ^ v3))
                            - 4))();
}

uint64_t sub_1CF2C5270()
{
  char v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x2F8]
                              + 8
                              * ((1548 * ((v0 & 8) == ((61 * ((v1 - 892464956) & 0x3531EEBF ^ 0x238)) ^ 0x225))) ^ v1)))();
}

uint64_t sub_1CF2C52C8()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unint64_t v7;
  int v8;
  int v9;
  int64x2_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int8x16_t v14;
  int64x2_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int64x2_t v18;
  int8x16_t v19;
  int8x16_t v20;
  int64x2_t v21;
  int8x16_t v22;
  int8x16_t v23;
  int64x2_t v24;
  int8x16_t v25;
  int8x16_t v26;
  int64x2_t v27;
  int8x16_t v28;
  int8x16_t v29;
  uint64_t v30;
  uint64_t v31;
  int64x2_t v32;
  int64x2_t v33;
  int64x2_t v34;
  int64x2_t v35;
  int8x16_t v36;
  int8x16_t v37;
  int8x16_t v38;
  int8x16_t v39;
  int8x16_t v40;
  int64x2_t v41;
  int64x2_t v42;
  int64x2_t v43;
  int64x2_t v44;
  int64x2_t v45;
  int8x16_t v46;
  int8x16_t v47;
  int64x2_t v48;
  int64x2_t v49;
  int64x2_t v50;
  int64x2_t v51;
  int64x2_t v52;
  int64x2_t v53;
  int64x2_t v54;
  int64x2_t v55;
  int64x2_t v56;
  int64x2_t v57;
  int64x2_t v58;
  int64x2_t v59;
  int64x2_t v60;
  int64x2_t v61;
  int64x2_t v62;
  int64x2_t v63;
  int64x2_t v64;
  int64x2_t v65;
  int64x2_t v66;
  int64x2_t v67;
  int64x2_t v68;
  int64x2_t v69;
  int64x2_t v70;
  int64x2_t v71;
  int64x2_t v72;
  int64x2_t v73;
  int64x2_t v74;
  int64x2_t v75;
  int64x2_t v76;
  int64x2_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int8x16_t v80;
  int8x16_t v81;
  int64x2_t v82;
  int64x2_t v83;
  int8x16_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int64x2_t v90;
  int64x2_t v91;
  int64x2_t v92;
  int64x2_t v93;
  int64x2_t v94;
  int64x2_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int64x2_t v100;
  int8x16_t v101;
  int64x2_t v102;
  int8x16_t v103;
  int8x16_t v104;
  int64x2_t v105;
  int64x2_t v106;
  int64x2_t v107;
  int64x2_t v108;
  int64x2_t v109;
  int64x2_t v110;
  int64x2_t v111;
  int64x2_t v112;
  int64x2_t v113;
  int64x2_t v114;
  int64x2_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int8x16_t v121;
  int64x2_t v122;
  int8x16x4_t v124;

  v7 = STACK[0x2D0] - 7;
  v8 = -8 - v6;
  v9 = v4 + v3 + v5;
  *(int64x2_t *)&STACK[0x2A0] = vdupq_n_s64(0xF8FFFFFFFFFFFFFFLL);
  *(int64x2_t *)&STACK[0x2B0] = vdupq_n_s64(0x38uLL);
  *(int64x2_t *)&STACK[0x260] = vdupq_n_s64(0x991A82D9727F8A1ELL);
  *(int64x2_t *)&STACK[0x270] = vdupq_n_s64(0xAAF3F7833B96EBB2);
  v10 = vdupq_n_s64(0x66E57D268D8075E1uLL);
  v11 = (int8x16_t)vdupq_n_s64(0x2091807C23FECCB2uLL);
  v12 = (int8x16_t)vdupq_n_s64(0x770E3C65FF499127uLL);
  v13 = (int8x16_t)vdupq_n_s64(0x50D4D0E13CBD7177uLL);
  v14 = (int8x16_t)vdupq_n_s64(0x8B37078EC418761ELL);
  v15 = vdupq_n_s64(0xBA647C389DF3C4F0);
  v16 = (int8x16_t)vdupq_n_s64(0x5FB3A696707667F0uLL);
  v17 = (int8x16_t)vdupq_n_s64(0x909803455169E568);
  v18 = vdupq_n_s64(0xB7B3FE5D574B0D4CLL);
  v19 = (int8x16_t)vdupq_n_s64(0xC6C998D95017FB99);
  v20 = (int8x16_t)vdupq_n_s64(0x661703085D1D211AuLL);
  v21 = vdupq_n_s64(0xCCF47E7BD1716F73);
  v22 = (int8x16_t)vdupq_n_s64(0xFE029E93EEA14EDCLL);
  v23 = (int8x16_t)vdupq_n_s64(0x88D82846AB8C19D8);
  v24 = vdupq_n_s64(0xBB93EBDCAA39F314);
  v25 = (int8x16_t)vdupq_n_s64(0x26E6A871DC8DEB8EuLL);
  v26 = (int8x16_t)vdupq_n_s64(0x691114C3DF6F6AC1uLL);
  v27 = vdupq_n_s64(0x96EEEB3C2090953ELL);
  v28 = (int8x16_t)vdupq_n_s64(0x33D188C0E0E44DA0uLL);
  v29 = (int8x16_t)vdupq_n_s64(0x1B0BD1982B59C071uLL);
  *(_OWORD *)&STACK[0x250] = xmmword_1CF37DAD0;
  v30 = (v9 + 6 - v6);
  v31 = v30 + STACK[0x2E0];
  v32.i64[0] = v1 + v8 + (v2 ^ 0xCCB5D412) + 8 + STACK[0x2E0] + 10;
  v32.i64[1] = (v9 + 1 + v8 + 8) + STACK[0x2E0] + 10;
  v33.i64[0] = v31 + 10;
  v33.i64[1] = (v9 + 5 + v8 + 8) + STACK[0x2E0] + 10;
  v34.i64[0] = (v9 + 4 + v8 + 8) + STACK[0x2E0] + 10;
  v34.i64[1] = (v9 + 3 + v8 + 8) + STACK[0x2E0] + 10;
  v35.i64[0] = (v9 + v8 + 8) + STACK[0x2E0] + 10;
  v35.i64[1] = (v9 - 1 + v8 + 8) + STACK[0x2E0] + 10;
  v36 = *(int8x16_t *)&STACK[0x260];
  v37 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v32, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v32, 8uLL)), *(int8x16_t *)&STACK[0x2A0]), *(int64x2_t *)&STACK[0x270]);
  v38 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v33, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v33, 8uLL)), *(int8x16_t *)&STACK[0x2A0]), *(int64x2_t *)&STACK[0x270]);
  v39 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v34, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v34, 8uLL)), *(int8x16_t *)&STACK[0x2A0]), *(int64x2_t *)&STACK[0x270]);
  v40 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v35, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v35, 8uLL)), *(int8x16_t *)&STACK[0x2A0]), *(int64x2_t *)&STACK[0x270]);
  v41 = (int64x2_t)vorrq_s8(v40, *(int8x16_t *)&STACK[0x260]);
  v42 = (int64x2_t)vorrq_s8(v39, *(int8x16_t *)&STACK[0x260]);
  *(int64x2_t *)&STACK[0x2C0] = vsubq_s64((int64x2_t)vorrq_s8(v37, *(int8x16_t *)&STACK[0x260]), (int64x2_t)vorrq_s8(v37, (int8x16_t)v10));
  v43 = (int64x2_t)vorrq_s8(v39, (int8x16_t)v10);
  v44 = vsubq_s64((int64x2_t)vorrq_s8(v38, v36), (int64x2_t)vorrq_s8(v38, (int8x16_t)v10));
  v45 = vsubq_s64(v42, v43);
  v46 = (int8x16_t)vaddq_s64(vsubq_s64(v41, (int64x2_t)vorrq_s8(v40, (int8x16_t)v10)), v10);
  v47 = (int8x16_t)vaddq_s64(v45, v10);
  v48 = (int64x2_t)veorq_s8(v47, v11);
  v49 = (int64x2_t)veorq_s8(v46, v11);
  v50 = (int64x2_t)veorq_s8(v46, v12);
  v51 = (int64x2_t)veorq_s8(v47, v12);
  v52 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v49, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v49, 8uLL)), v50), v13);
  v53 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v48, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v48, 8uLL)), v51), v13);
  v54 = (int64x2_t)veorq_s8((int8x16_t)v53, vorrq_s8((int8x16_t)vshlq_n_s64(v51, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v51, 0x3DuLL)));
  v55 = (int64x2_t)veorq_s8((int8x16_t)v52, vorrq_s8((int8x16_t)vshlq_n_s64(v50, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v50, 0x3DuLL)));
  v56 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v52, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v52, 8uLL)), v55);
  v57 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v53, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v53, 8uLL)), v54);
  v58 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v57, v57), v14), v57), v15), v16);
  v59 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v56, v56), v14), v56), v15), v16);
  v60 = (int64x2_t)veorq_s8((int8x16_t)v59, vorrq_s8((int8x16_t)vshlq_n_s64(v55, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v55, 0x3DuLL)));
  v61 = (int64x2_t)veorq_s8((int8x16_t)v58, vorrq_s8((int8x16_t)vshlq_n_s64(v54, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v54, 0x3DuLL)));
  v62 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v58, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v58, 8uLL)), v61);
  v63 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v59, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v59, 8uLL)), v60);
  v64 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v63, v63), v17), v63), v18), v19);
  v65 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v62, v62), v17), v62), v18), v19);
  v66 = (int64x2_t)veorq_s8((int8x16_t)v65, vorrq_s8((int8x16_t)vshlq_n_s64(v61, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v61, 0x3DuLL)));
  v67 = (int64x2_t)veorq_s8((int8x16_t)v64, vorrq_s8((int8x16_t)vshlq_n_s64(v60, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v60, 0x3DuLL)));
  v68 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v64, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v64, 8uLL)), v67);
  v69 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v65, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v65, 8uLL)), v66);
  v70 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v69, v69), v20), v69), v21), v22);
  v71 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v68, v68), v20), v68), v21), v22);
  v72 = (int64x2_t)veorq_s8((int8x16_t)v71, vorrq_s8((int8x16_t)vshlq_n_s64(v67, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v67, 0x3DuLL)));
  v73 = (int64x2_t)veorq_s8((int8x16_t)v70, vorrq_s8((int8x16_t)vshlq_n_s64(v66, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v66, 0x3DuLL)));
  v74 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v70, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v70, 8uLL)), v73);
  v75 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v71, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v71, 8uLL)), v72);
  v76 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v75, v75), v23), v75), v24), v25);
  v77 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v74, v74), v23), v74), v24), v25);
  v78 = (int64x2_t)veorq_s8((int8x16_t)v77, vorrq_s8((int8x16_t)vshlq_n_s64(v73, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v73, 0x3DuLL)));
  v79 = (int64x2_t)veorq_s8((int8x16_t)v76, vorrq_s8((int8x16_t)vshlq_n_s64(v72, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v72, 0x3DuLL)));
  v80 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v76, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v76, 8uLL)), v79);
  v81 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v77, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v77, 8uLL)), v78);
  v82 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v80, v26), (int64x2_t)vorrq_s8(v80, (int8x16_t)v27)), v27), v28);
  v83 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v81, v26), (int64x2_t)vorrq_s8(v81, (int8x16_t)v27)), v27), v28);
  v84 = (int8x16_t)vaddq_s64(v44, v10);
  v124.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v82, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v82, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v82, vorrq_s8((int8x16_t)vshlq_n_s64(v79, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v79, 0x3DuLL)))), v29), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v35, 3uLL), *(int8x16_t *)&STACK[0x2B0])));
  v124.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v83, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v83, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v83, vorrq_s8((int8x16_t)vshlq_n_s64(v78, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v78, 0x3DuLL)))), v29), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v34, 3uLL), *(int8x16_t *)&STACK[0x2B0])));
  v85 = (int64x2_t)veorq_s8(v84, v11);
  v86 = (int64x2_t)veorq_s8(v84, v12);
  v87 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v85, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v85, 8uLL)), v86), v13);
  v88 = (int64x2_t)veorq_s8((int8x16_t)v87, vorrq_s8((int8x16_t)vshlq_n_s64(v86, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v86, 0x3DuLL)));
  v89 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v87, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v87, 8uLL)), v88);
  v90 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v89, v89), v14), v89), v15), v16);
  v91 = (int64x2_t)veorq_s8((int8x16_t)v90, vorrq_s8((int8x16_t)vshlq_n_s64(v88, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v88, 0x3DuLL)));
  v92 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v90, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 8uLL)), v91);
  v93 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v92, v92), v17), v92), v18), v19);
  v94 = (int64x2_t)veorq_s8((int8x16_t)v93, vorrq_s8((int8x16_t)vshlq_n_s64(v91, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v91, 0x3DuLL)));
  v95 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v93, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v93, 8uLL)), v94);
  v96 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v95, v95), v20), v95), v21), v22);
  v97 = (int64x2_t)veorq_s8((int8x16_t)v96, vorrq_s8((int8x16_t)vshlq_n_s64(v94, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v94, 0x3DuLL)));
  v98 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v96, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v96, 8uLL)), v97);
  v99 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v98, v98), v23), v98), v24), v25);
  v100 = (int64x2_t)veorq_s8((int8x16_t)v99, vorrq_s8((int8x16_t)vshlq_n_s64(v97, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v97, 0x3DuLL)));
  v101 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v99, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v99, 8uLL)), v100);
  v102 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v101, v26), (int64x2_t)vorrq_s8(v101, (int8x16_t)v27)), v27), v28);
  v103 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v102, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v102, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v102, vorrq_s8((int8x16_t)vshlq_n_s64(v100, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v100, 0x3DuLL))));
  v104 = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x2C0], v10);
  v124.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8(v103, v29), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v33, 3uLL), *(int8x16_t *)&STACK[0x2B0])));
  v105 = (int64x2_t)veorq_s8(v104, v11);
  v106 = (int64x2_t)veorq_s8(v104, v12);
  v107 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v105, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v105, 8uLL)), v106), v13);
  v108 = (int64x2_t)veorq_s8((int8x16_t)v107, vorrq_s8((int8x16_t)vshlq_n_s64(v106, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v106, 0x3DuLL)));
  v109 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v107, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v107, 8uLL)), v108);
  v110 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v109, v109), v14), v109), v15), v16);
  v111 = (int64x2_t)veorq_s8((int8x16_t)v110, vorrq_s8((int8x16_t)vshlq_n_s64(v108, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v108, 0x3DuLL)));
  v112 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v110, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v110, 8uLL)), v111);
  v113 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v112, v112), v17), v112), v18), v19);
  v114 = (int64x2_t)veorq_s8((int8x16_t)v113, vorrq_s8((int8x16_t)vshlq_n_s64(v111, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v111, 0x3DuLL)));
  v115 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v113, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v113, 8uLL)), v114);
  v116 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v115, v115), v20), v115), v21), v22);
  v117 = (int64x2_t)veorq_s8((int8x16_t)v116, vorrq_s8((int8x16_t)vshlq_n_s64(v114, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v114, 0x3DuLL)));
  v118 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v116, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v116, 8uLL)), v117);
  v119 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v118, v118), v23), v118), v24), v25);
  v120 = (int64x2_t)veorq_s8((int8x16_t)v119, vorrq_s8((int8x16_t)vshlq_n_s64(v117, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v117, 0x3DuLL)));
  v121 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v119, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v119, 8uLL)), v120);
  v122 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v121, v26), (int64x2_t)vorrq_s8(v121, (int8x16_t)v27)), v27), v28);
  v124.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v122, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v122, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v122, vorrq_s8((int8x16_t)vshlq_n_s64(v120, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v120, 0x3DuLL)))), v29), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v32, 3uLL), *(int8x16_t *)&STACK[0x2B0])));
  *(int8x8_t *)(v31 + 3) = veor_s8(vrev64_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v124, *(int8x16_t *)&STACK[0x250])), *(int8x8_t *)(v7 + v30));
  return (*(uint64_t (**)(void))(STACK[0x2F8] + 8 * ((1139 * (-(v0 & 0xFFFFFFF8) == v8)) ^ v2)))();
}

void sub_1CF2C5BC8()
{
  JUMPOUT(0x1CF2C54ECLL);
}

uint64_t sub_1CF2C5BD0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2F8] + 8 * (a4 ^ (267 * (v4 == v5))))
                            + 560938992
                            - (((a4 - 1890008088) & 0x70A73BF7u)
                             + 560938439)
                            - 4))();
}

uint64_t sub_1CF2C5C84@<X0>(int a1@<W0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v2 = (a2 - 860498373);
  v3 = v2 + STACK[0x2E0];
  v4 = (((unint64_t)(v3 + 10) >> ((a1 - 57) ^ 0xF0u)) | ((unint64_t)(v3 + 10) >> 3 << 59))
     - 0x550C087CC469144ELL;
  v5 = (v4 | 0x991A82D9727F8A1ELL) - (v4 | 0x66E57D268D8075E1) + 0x66E57D268D8075E1;
  v6 = v5 ^ 0x2091807C23FECCB2;
  v5 ^= 0x770E3C65FF499127uLL;
  v7 = (__ROR8__(v6, 8) + v5) ^ 0x50D4D0E13CBD7177;
  v8 = v7 ^ __ROR8__(v5, 61);
  v9 = __ROR8__(v7, 8);
  v10 = (((2 * (v9 + v8)) & 0x8B37078EC418761ELL) - (v9 + v8) - 0x459B83C7620C3B10) ^ 0x5FB3A696707667F0;
  v11 = v10 ^ __ROR8__(v8, 61);
  v12 = __ROR8__(v10, 8);
  v13 = (((2 * (v12 + v11)) | 0x909803455169E568) - (v12 + v11) - 0x484C01A2A8B4F2B4) ^ 0xC6C998D95017FB99;
  v14 = v13 ^ __ROR8__(v11, 61);
  v15 = __ROR8__(v13, 8);
  v16 = (((2 * (v15 + v14)) | 0x661703085D1D211ALL) - (v15 + v14) - 0x330B81842E8E908DLL) ^ 0xFE029E93EEA14EDCLL;
  v17 = v16 ^ __ROR8__(v14, 61);
  v18 = __ROR8__(v16, 8);
  v19 = (((2 * (v18 + v17)) | 0x88D82846AB8C19D8) - (v18 + v17) - 0x446C142355C60CECLL) ^ 0x26E6A871DC8DEB8ELL;
  v20 = v19 ^ __ROR8__(v17, 61);
  v21 = __ROR8__(v19, 8);
  *(_BYTE *)(v3 + 10) = (((__ROR8__((0x96EEEB3C2090953ELL- ((v21 + v20) | 0x96EEEB3C2090953ELL)+ ((v21 + v20) | 0x691114C3DF6F6AC1)) ^ 0x33D188C0E0E44DA0, 8)+ ((0x96EEEB3C2090953ELL- ((v21 + v20) | 0x96EEEB3C2090953ELL)+ ((v21 + v20) | 0x691114C3DF6F6AC1)) ^ 0x33D188C0E0E44DA0 ^ __ROR8__(v20, 61))) ^ 0x1B0BD1982B59C071) >> (8 * ((v3 + 10) & 7))) ^ *(_BYTE *)(STACK[0x2D0] + v2);
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, unint64_t, unint64_t, unint64_t))(*(_QWORD *)(STACK[0x2F8] + 8 * ((529 * (a2 != 860498373)) | (a1 - 529))) - 4))(0x2091807C23FECCB2, 0x770E3C65FF499127, 0x8B37078EC418761ELL, 0xBA647C389DF3C4F0, 0x5FB3A696707667F0, 0x909803455169E568, 0xB7B3FE5D574B0D4CLL, 0xC6C998D95017FB99);
}

uint64_t sub_1CF2C5F3C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (1498267367 * (a1 ^ 0x28FB3C08));
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1E8C4D9A0 + v1 - 954)
                                        + 8 * ((1729 * (*(_QWORD *)a1 != 0)) ^ v1)
                                        - 12)
                            - 8))();
}

uint64_t sub_1CF2C5F9C@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  unsigned int *v2;

  *v2 = (*(_DWORD *)(result + 8) - a2) ^ 0x9A4BF576;
  *(_DWORD *)(result + 12) = 1365375791;
  return result;
}

uint64_t sub_1CF2C5FC4(uint64_t result)
{
  *(_DWORD *)(result + 12) = -1477864491;
  return result;
}

void sub_1CF2C5FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  BOOL v7;
  int v8;
  _BYTE v9[2688];
  uint64_t v10;

  v2 = MEMORY[0x1E0C80A78](a1, a2);
  v10 = *MEMORY[0x1E0C80C00];
  v3 = 55633441 * (v2 ^ 0x38833BBF);
  v4 = *(_DWORD *)(v2 + 48) - v3;
  v5 = *(_QWORD *)(v2 + 8);
  v6 = *(_DWORD *)v2 + v3;
  sub_1CF36FDF0(v9, 0, 0x128uLL);
  if (v5)
    v7 = ((2 * (1082261625 * v6 - 503497081)) & 0xF7DBFFAC) + ((1082261625 * v6 - 503497081) ^ 0xFBEDFFD6) == -68288522;
  else
    v7 = 1;
  v8 = v7;
  __asm { BR              X9 }
}

uint64_t sub_1CF2C60FC@<X0>(int a1@<W8>)
{
  unint64_t v1;
  int v2;
  unint64_t v3;
  int v4;
  unint64_t v5;

  STACK[0x3E8] = v5;
  LODWORD(STACK[0x3D8]) = v4;
  STACK[0x308] = v3;
  LODWORD(STACK[0x688]) = v2;
  LODWORD(STACK[0x680]) = 2053762176;
  STACK[0x690] = v1;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1
                                                      + 8
                                                      * ((208 * (((((a1 ^ 0x336) + 91) ^ (v2 == 2053762176)) & 1) == 0)) ^ a1))
                                          - 4))(4105729087);
}

uint64_t sub_1CF2C61A8(uint64_t a1, int a2)
{
  unsigned int v2;
  _BOOL4 v3;

  v2 = LODWORD(STACK[0x670]) + 1417000835;
  v3 = v2 > 0x5063B75A;
  if (v2 < 0x5063B759)
    v3 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x690] + 8 * ((486 * !v3) ^ (a2 + 1316))) - 4))();
}

void sub_1CF2C646C()
{
  JUMPOUT(0x1CF2C6218);
}

uint64_t sub_1CF2C6478(int a1, int a2)
{
  unsigned int v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  unint64_t v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  _BOOL4 v23;

  v5 = LODWORD(STACK[0x670]) + 821989492;
  v6 = (v3 ^ 0x7880F268)
     - a1
     - 257
     * (((-1784321533 * *(unsigned __int8 *)STACK[0x3E8]
        - ((((127 * (a2 ^ 0x1DB)) ^ 0xA3AAA1F) + 189453318 * *(unsigned __int8 *)STACK[0x3E8]) & 0xC73DFA6)
        + 1264010628) ^ v2)
      / 0x101)
     + 39845602;
  v7 = (v6 - 1375773513 - ((2 * v6) & 0x5BFEB96E)) ^ v4;
  v8 = a1 - 39845602 + (v7 ^ 0xBF4A91A);
  v9 = v3 ^ 0x73745B72 ^ v7;
  v10 = (v7 ^ 0xBF4A91A) + (v4 ^ 0xADFF5CB7);
  HIDWORD(v11) = v7 ^ 0xBF4A91A;
  LODWORD(v11) = v7;
  v12 = (v9 - v8 + (v11 >> 30)) ^ v10;
  v13 = v12 - ((2 * v12 + 622161042) & 0x2B616190) - 2009372911;
  v14 = v13 ^ (v10 - ((2 * v10) & 0x2B616190) + 363901128);
  v15 = (v13 ^ 0xEA4F4F37) + 1;
  v16 = v15 + v8;
  v17 = v15 + v9;
  LODWORD(v11) = __ROR4__(v13, 29);
  v18 = ((v16 + v17 + (v11 ^ 0xAD858640)) ^ v14)
      - ((2 * ((v16 + v17 + (v11 ^ 0xAD858640)) ^ v14) + 642241738) & 0x66C8C576);
  HIDWORD(v11) = (v18 - 964145888) ^ 0x336462BB;
  LODWORD(v11) = v18 + 1183337760;
  v19 = ((v18 - 964145888) ^ 0x4C9B9D44) + 1;
  v20 = v19 + v16;
  v21 = (((v11 >> 30) ^ (v18 - 964145888) ^ (v17 - ((2 * v17) & 0x66C8C576) - 1285266757)) + v20) ^ (v19 + v14);
  v22 = v21 - ((2 * v21 + 83217406) & 0xC73DFA6) - 2135632430;
  v23 = v5 > 0x2CEC904B;
  if (v5 < 0x2CEC904A)
    v23 = 1;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x690] + 8 * ((67 * !v23) ^ (a2 + 48))) - 4))((((v22 ^ 0xF9C6102C) + 1 + v20) ^ 0x17FFFEF2)- 362807312+ ((2 * ((v22 ^ 0xF9C6102C) + 1 + v20)) & 0x2FFFFDE4));
}

void sub_1CF2C6770()
{
  JUMPOUT(0x1CF2C64E8);
}

uint64_t sub_1CF2C6778()
{
  int v0;
  unint64_t v1;

  STACK[0x678] = (unint64_t)&STACK[0xB90];
  v1 = STACK[0x690];
  *((_BYTE *)&STACK[0x7C0] + (unsigned __int16)(11179 - 3225 * ((v0 + 799) ^ 0x47F)) % 0x3C6u) = 42;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - 12))();
}

void sub_1CF2C6804()
{
  JUMPOUT(0x1CF2C67ACLL);
}

uint64_t sub_1CF2C680C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  char v14;
  int v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  int v29;
  char v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  char v48;
  unsigned int v49;

  v13 = (unsigned __int16)(-966 * ((unsigned __int16)((492817 * (a7 & 0xF ^ 7u)) >> 16) >> 5) + 227 * (a7 & 0xF ^ 7));
  v14 = STACK[0x7C0];
  v15 = (a7 ^ 0x16C2A867) + (v8 ^ v9);
  LOBYTE(STACK[0x7C0]) = *((_BYTE *)&STACK[0x7C0] + v13);
  *((_BYTE *)&STACK[0x7C0] + v13) = v14;
  LODWORD(STACK[0x3D4]) = 227;
  v16 = (unsigned __int16)(227 * ((v8 ^ v9) % 0xF)
                         + 227
                         - 966
                         * ((unsigned __int16)((2171 * (unsigned __int16)(227 * ((v8 ^ v9) % 0xF) + 227)) >> 16) >> 5));
  LOBYTE(v13) = STACK[0x8A3];
  LOBYTE(STACK[0x8A3]) = *((_BYTE *)&STACK[0x7C0] + v16);
  *((_BYTE *)&STACK[0x7C0] + v16) = v13;
  v17 = STACK[0x986];
  v18 = (unsigned __int16)(227 * ((v11 ^ 0xE2A33414) % 0xE)
                         + 454
                         - 966
                         * ((unsigned __int16)((2171
                                              * (unsigned __int16)(227 * ((v11 ^ 0xE2A33414) % 0xE) + 454)) >> 16) >> 5));
  LOBYTE(STACK[0x986]) = *((_BYTE *)&STACK[0x7C0] + v18);
  *((_BYTE *)&STACK[0x7C0] + v18) = v17;
  LODWORD(v16) = (a7 ^ 0xE93D5798) + (v10 ^ v12) + 1;
  LODWORD(STACK[0x668]) = 681;
  v19 = STACK[0xA69];
  v20 = (v11 ^ 0x4F071B89) + (v8 ^ 0xDD4797BC);
  v21 = (unsigned __int16)(227 * ((v10 ^ v12) % 0xD)
                         + 681
                         - 966
                         * ((unsigned __int16)((2171 * (unsigned __int16)(227 * ((v10 ^ v12) % 0xD) + 681)) >> 16) >> 5));
  v22 = v20 + 1 + v16;
  LOBYTE(STACK[0xA69]) = *((_BYTE *)&STACK[0x7C0] + v21);
  v23 = v16 + (v8 ^ 0xDD4797BC);
  v24 = v23 % 0xA - ((2 * (v23 % 0xA)) & 0x14) - 1178323398;
  LODWORD(STACK[0x650]) = 908;
  *((_BYTE *)&STACK[0x7C0] + v21) = v19;
  v25 = STACK[0xB4C];
  v26 = (unsigned __int16)(227 * ((v15 - 1019380025) % 0xCu)
                         + 908
                         - 966
                         * ((unsigned __int16)((2171
                                              * (unsigned __int16)(227 * ((v15 - 1019380025) % 0xCu) + 908)) >> 16) >> 5));
  LOBYTE(STACK[0xB4C]) = *((_BYTE *)&STACK[0x7C0] + v26);
  *((_BYTE *)&STACK[0x7C0] + v26) = v25;
  v27 = STACK[0x869];
  v28 = (unsigned __int16)(227 * ((v20 + 1) % 0xB)
                         + 1135
                         - 966
                         * ((unsigned __int16)((2171 * (unsigned __int16)(227 * ((v20 + 1) % 0xB) + 1135)) >> 16) >> 5));
  LOBYTE(STACK[0x869]) = *((_BYTE *)&STACK[0x7C0] + v28);
  *((_BYTE *)&STACK[0x7C0] + v28) = v27;
  v29 = v22 + v15;
  v30 = STACK[0x94C];
  v31 = (unsigned __int16)(227 * ((v23 % 0xA - ((2 * (v23 % 0xA)) & 0x14) + 13882) ^ 0x363A) + 1362) % 0x3C6u;
  v32 = *((_BYTE *)&STACK[0x7C0] + v31);
  LODWORD(STACK[0x658]) = 1589;
  LOBYTE(STACK[0x94C]) = v32;
  *((_BYTE *)&STACK[0x7C0] + v31) = v30;
  v33 = STACK[0xA2F];
  v34 = (unsigned __int16)(227 * (v22 % 9)
                         + 1589
                         - 966
                         * ((unsigned __int16)((2171 * (unsigned __int16)(227 * (v22 % 9) + 1589)) >> 16) >> 5));
  LOBYTE(STACK[0xA2F]) = *((_BYTE *)&STACK[0x7C0] + v34);
  *((_BYTE *)&STACK[0x7C0] + v34) = v33;
  LODWORD(v34) = 227 * (((_BYTE)v29 + 5) & 7) + 1816;
  v35 = STACK[0xB12];
  v36 = (unsigned __int16)(v34 - 966 * ((unsigned __int16)((2171 * v34) >> 16) >> 5));
  LOBYTE(STACK[0xB12]) = *((_BYTE *)&STACK[0x7C0] + v36);
  *((_BYTE *)&STACK[0x7C0] + v36) = v35;
  LODWORD(v36) = (v29 - 2003339811) ^ (v22 - 983959786);
  v37 = v23 - v22 - v29 - 1307667699;
  v38 = (unsigned __int16)(227
                         * ((((v35 & 0x3B ^ 0xAAAA) + (v35 & 0x3B ^ 0x1111)) & (v24 & 0xD ^ 8 | v24 & 0xD ^ 0x45))
                          + (v20 + 1) % 7))
      % 0x3C6u;
  LOBYTE(v24) = STACK[0x82F];
  LOBYTE(STACK[0x82F]) = *((_BYTE *)&STACK[0x7C0] + v38);
  *((_BYTE *)&STACK[0x7C0] + v38) = v24;
  LODWORD(v38) = v37 + 1636492477;
  v39 = (unsigned __int16)(227 * (v37 % 6)
                         + 2270
                         - 966
                         * ((unsigned __int16)((2171 * (unsigned __int16)(227 * (v37 % 6) + 2270)) >> 16) >> 5));
  v40 = STACK[0x912];
  LOBYTE(STACK[0x912]) = *((_BYTE *)&STACK[0x7C0] + v39);
  *((_BYTE *)&STACK[0x7C0] + v39) = v40;
  LODWORD(STACK[0x660]) = 2497;
  LODWORD(v39) = (v38 ^ v36) + v29;
  LODWORD(v18) = v20 - 1063713346 + v39;
  v41 = (unsigned __int16)(227 * (v36 % 5)
                         + 2497
                         - 966
                         * ((unsigned __int16)((2171
                                              * (unsigned __int16)(227 * (v36 % 5) + 2497)) >> 16) >> 5));
  v42 = STACK[0x9F5];
  LOBYTE(STACK[0x9F5]) = *((_BYTE *)&STACK[0x7C0] + v41);
  *((_BYTE *)&STACK[0x7C0] + v41) = v42;
  LOBYTE(v41) = STACK[0xAD8];
  v43 = 227 * (((_BYTE)v29 + 1) & 3) + 2724;
  v44 = (unsigned __int16)(v43 - 966 * ((unsigned __int16)((2171 * v43) >> 16) >> 5));
  LOBYTE(STACK[0xAD8]) = *((_BYTE *)&STACK[0x7C0] + v44);
  *((_BYTE *)&STACK[0x7C0] + v44) = v41;
  LOBYTE(v41) = v39 + 1;
  LOBYTE(v39) = STACK[0x7F5];
  v45 = (unsigned __int16)(227 * (v18 % 3)
                         + 2951
                         - 966
                         * ((unsigned __int16)((2171
                                              * (unsigned __int16)(227 * (v18 % 3) + 2951)) >> 16) >> 5));
  LOBYTE(STACK[0x7F5]) = *((_BYTE *)&STACK[0x7C0] + v45);
  *((_BYTE *)&STACK[0x7C0] + v45) = v39;
  v46 = ((v41 ^ v38) & 1) == 0;
  v47 = 507;
  if (v46)
    v47 = 280;
  v48 = STACK[0x8D8];
  LOBYTE(STACK[0x8D8]) = *((_BYTE *)&STACK[0x7C0] + v47);
  *((_BYTE *)&STACK[0x7C0] + v47) = v48;
  v49 = 227 * ((a8 - 55) ^ 0x4F ^ LOBYTE(STACK[0x7C0])) + 16117;
  *((_BYTE *)&STACK[0x7C0] + (v49 - 966 * ((4446136 * (unint64_t)v49) >> 32))) = 42;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x690] + 8 * a8) - 12))();
}

uint64_t sub_1CF2C6DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v6;
  uint64_t v7;

  *((_BYTE *)&STACK[0x7C0] + (unsigned __int16)(227 * a6 - 20474) % 0x3C6u) = v6 - 81 + a6 + (~(2 * a6 + 4) | 0xAB) - 39;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((560 * (a6 + 1 == a5 + 16)) ^ v6)) - 12))();
}

uint64_t sub_1CF2C6E1C@<X0>(int a1@<W0>, int a2@<W7>, __int16 a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  __int16 v10;
  __int16 v11;
  __int16 v12;
  unsigned __int16 v13;
  char v14;
  uint64_t v15;
  int v16;
  char v17;
  char v18;
  uint64_t v19;
  int v20;
  unsigned int v21;
  char v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  unsigned __int16 v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  char v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  uint64_t v39;
  int v40;
  char v41;
  uint64_t v42;
  int v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  int v48;
  char v49;
  BOOL v50;
  uint64_t v51;
  char v52;
  unsigned int v53;
  unsigned int v54;

  v13 = (v3 - 817) * (v4 & 0xF ^ 3) - ((454 * (v4 & 0xF ^ 3)) & 0x10A) + 12421;
  v14 = STACK[0x7C0];
  LOBYTE(STACK[0x7C0]) = *(_BYTE *)(v9
                                  + (unsigned __int16)((v13 ^ 0x3085)
                                                     - ((unsigned __int16)((((unsigned __int16)(v13 ^ 0x3085) >> 1)
                                                                          * v7) >> 16) >> 4)
                                                     * v8));
  *(_BYTE *)(v9
           + (v13 ^ 0x3085u)
           % ((((v13 ^ 0xCF7A) & 0xC0E8 | v13 & 0xE8 ^ 0x80) + (v13 & 0x2DE ^ 0x84 | (v13 ^ 0xCF7A) & 0x42DE)) & 0xFFFEu)) = v14;
  v15 = (unsigned __int16)(LODWORD(STACK[0x3D4])
                         + (v5 ^ 0x7880F268u) % 0xF * a2
                         - ((unsigned __int16)(((unsigned __int16)(LODWORD(STACK[0x3D4])
                                                                               + (v5 ^ 0x7880F268u) % 0xF * a2)
                                              * v7) >> 16) >> 5)
                         * v8);
  v16 = a1 - 39845602;
  v17 = STACK[0x8A3];
  LOBYTE(STACK[0x8A3]) = *(_BYTE *)(v9 + v15);
  *(_BYTE *)(v9 + v15) = v17;
  v18 = STACK[0x986];
  v19 = (unsigned __int16)(v11
                         + (a1 - 39845602) % 0xEu * a2
                         - ((unsigned __int16)(((unsigned __int16)(v11 + (a1 - 39845602) % 0xEu * a2) * v7) >> 16) >> 5)
                         * v8);
  v20 = (v5 ^ 0x7880F268) + (v4 ^ 0x639EFD3);
  LOBYTE(STACK[0x986]) = *(_BYTE *)(v9 + v19);
  v21 = v6 ^ 0xADFF5CB7;
  *(_BYTE *)(v9 + v19) = v18;
  v22 = STACK[0xA69];
  v23 = (unsigned __int16)(LODWORD(STACK[0x668])
                         + v21 % 0xD * a2
                         - ((unsigned __int16)(((unsigned __int16)(LODWORD(STACK[0x668]) + v21 % 0xD * a2)
                                              * v7) >> 16) >> 5)
                         * v8);
  v24 = v5 ^ 0xDAE1EDF9;
  LOBYTE(STACK[0xA69]) = *(_BYTE *)(v9 + v23);
  v25 = (v4 ^ 0xF9C6102C) + v21 + 1;
  v26 = (v16 ^ 0xADA42F9D) + (v5 ^ 0xDAE1EDF9);
  *(_BYTE *)(v9 + v23) = v22;
  v27 = v25 + v26;
  LOBYTE(v16) = STACK[0xB4C];
  v28 = (unsigned __int16)(LODWORD(STACK[0x650])
                         + (v20 - 1019380025) % 0xCu * a2
                         - ((unsigned __int16)(((unsigned __int16)(LODWORD(STACK[0x650])
                                                                               + (v20 - 1019380025) % 0xCu * a2)
                                              * v7) >> 16) >> 5)
                         * v8);
  LOBYTE(STACK[0xB4C]) = *(_BYTE *)(v9 + v28);
  *(_BYTE *)(v9 + v28) = v16;
  v29 = a3 + (v26 + 1) % 0xB * a2;
  v30 = (unsigned __int16)(v29 - ((unsigned __int16)((v29 * v7) >> 16) >> 5) * v8);
  LODWORD(v23) = v25 + v24;
  LOBYTE(v24) = STACK[0x869];
  LOBYTE(STACK[0x869]) = *(_BYTE *)(v9 + v30);
  *(_BYTE *)(v9 + v30) = v24;
  v31 = v25 + v26 + 1;
  LOBYTE(v24) = STACK[0x94C];
  v32 = (unsigned __int16)(v12
                         + v23 % 0xA * a2
                         - ((unsigned __int16)(((unsigned __int16)(v12 + v23 % 0xA * a2) * v7) >> 16) >> 5)
                         * v8);
  LOBYTE(STACK[0x94C]) = *(_BYTE *)(v9 + v32);
  *(_BYTE *)(v9 + v32) = v24;
  v33 = (unsigned __int16)(LOWORD(STACK[0x658])
                         + v31 % 9 * a2
                         - ((unsigned __int16)(((unsigned __int16)(LOWORD(STACK[0x658]) + v31 % 9 * a2)
                                              * v7) >> 16) >> 5)
                         * v8)
      - ((2
        * (LODWORD(STACK[0x658])
         + v31 % 9 * a2
         - (((unsigned __int16)(LOWORD(STACK[0x658]) + v31 % 9 * a2) * v7) >> 21) * v8)) & 0x660)
      + 1602420528;
  v34 = v33 ^ 0x5F82FF30;
  v35 = STACK[0xA2F];
  LOBYTE(STACK[0xA2F]) = *(_BYTE *)(v9 + v34);
  v36 = v20 + v27;
  *(_BYTE *)(v9 + v34) = v35;
  LODWORD(v34) = v20 + v27 + 492467901;
  LOBYTE(v20) = v20 + v27 - 66;
  LODWORD(v23) = v23 - v27 - v34 - 815199800;
  v37 = (v36 - 2003339810) ^ (v31 - 983959786);
  v38 = ((v33 & 0x3C ^ 0xC) + (v33 & 0x3C ^ 0x30)) & 0x48 | v20 & 7;
  LOBYTE(v21) = STACK[0xB12];
  v39 = (unsigned __int16)(v38 * a2 - ((unsigned __int16)((492817 * v38) >> 16) >> 5) * v8);
  LOBYTE(STACK[0xB12]) = *(_BYTE *)(v9 + v39);
  *(_BYTE *)(v9 + v39) = v21;
  v40 = v23 + 1636492477;
  v41 = STACK[0x82F];
  LOWORD(v39) = v10
              + v23 % 6 * a2
              - ((unsigned __int16)(((unsigned __int16)(v10 + v23 % 6 * a2) * v7) >> 16) >> 5)
              * v8;
  v42 = (unsigned __int16)((v26 + 1) % 7 * a2
                         + 2043
                         - ((unsigned __int16)(((unsigned __int16)((v26 + 1) % 7 * a2 + 2043) * v7) >> 16) >> 5)
                         * v8);
  LOBYTE(STACK[0x82F]) = *(_BYTE *)(v9 + v42);
  v43 = v3 - 8;
  v44 = v37 % 5;
  LODWORD(v28) = v37 ^ v40;
  *(_BYTE *)(v9 + v42) = v41;
  v45 = (unsigned __int16)v39;
  LOBYTE(v42) = *(_BYTE *)(v9 + (unsigned __int16)v39);
  LOBYTE(v39) = STACK[0x912];
  LOBYTE(STACK[0x912]) = v42;
  *(_BYTE *)(v9 + v45) = v39;
  LOBYTE(v45) = STACK[0x9F5];
  v46 = (unsigned __int16)(LODWORD(STACK[0x660])
                         + v44 * a2
                         - ((unsigned __int16)(((unsigned __int16)(LODWORD(STACK[0x660]) + v44 * a2) * v7) >> 16) >> 5)
                         * v8);
  LOBYTE(STACK[0x9F5]) = *(_BYTE *)(v9 + v46);
  *(_BYTE *)(v9 + v46) = v45;
  LODWORD(v45) = (v26 + v34 - 1556181246 + v28) % 3;
  v47 = STACK[0xAD8];
  v48 = v20 & 3;
  LOBYTE(STACK[0xAD8]) = *(_BYTE *)(v9
                                  + (unsigned __int16)(v48 * a2
                                                     - ((492817 * v48 + 3816618) >> 21) * v8
                                                     + 1758));
  *(_BYTE *)(v9
           + (unsigned __int16)(v48 * a2
                              + 2724
                              - ((unsigned __int16)(((v48 * a2 + 2724) * v7) >> 16) >> 5) * v8)) = v47;
  LOBYTE(v27) = STACK[0x7F5];
  LOBYTE(STACK[0x7F5]) = *(_BYTE *)(v9
                                  + (unsigned __int16)(((v45 * a2 - ((454 * v45 + 1806) & 0x50C) + 28173) ^ 0x6286)
                                                     - ((unsigned __int16)((((unsigned __int16)((v45 * a2 - ((454 * v45 + 1806) & 0x50C) + 28173) ^ 0x6286) >> 1)
                                                                          * v7) >> 16) >> 4)
                                                     * v8));
  *(_BYTE *)(v9
           + ((unsigned __int16)(v45 * a2 - ((454 * v45 + 1806) & 0x50C) + 28173) ^ 0x6286u)
           % (((766 - (_DWORD)v45 * a2 - ((58 * (_DWORD)v45 + 240) & 0x10C)) ^ ((_DWORD)v45 * a2
                                                                              - ((454 * (_DWORD)v45 + 1806) & 0x50C)
                                                                              + 707948045)) & v8)) = v27;
  v49 = STACK[0x8D8];
  v50 = (((v28 + v20) ^ v40) & 1) == 0;
  v51 = 507;
  if (v50)
    v51 = 280;
  LOBYTE(STACK[0x8D8]) = *(_BYTE *)(v9 + v51);
  *(_BYTE *)(v9 + v51) = v49;
  v52 = (16
       * *(_BYTE *)(v9
                  + (unsigned __int16)(71 * a2
                                     - ((unsigned __int16)((((unsigned __int16)(71 * a2) >> 1) * v7) >> 16) >> 4)
                                     * v8))) ^ 0xA0;
  v53 = 509
      * (*(unsigned __int8 *)(v9
                            + (unsigned __int16)(16117 - ((unsigned __int16)((16117 * v7) >> 16) >> 5)
                                                       * v8)) ^ (v52 - ((2 * v52) & 0x40) + 42) & 0xFE ^ 8)
      + 24432;
  v54 = (*((unsigned __int8 *)*(&off_1E8C4D9A0 + v43 - 1021)
         + (v53 - 944 * ((4549754 * (unint64_t)v53) >> 32))
         - 12) ^ 0x2D)
      * a2;
  *(_BYTE *)(v9 + 151732635 * a2 - 83469216 - (151732635 * a2 - 83469216) / 0x3C6u * v8) = *(_BYTE *)(v9 + (unsigned __int16)(v54 - ((unsigned __int16)(((v54 >> 1) * v7) >> 16) >> 4) * v8));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x690] + 8 * (v43 ^ 0x18)) - 8))(4294967200, 509, 24432);
}

void sub_1CF2C7540()
{
  JUMPOUT(0x1CF2C7444);
}

uint64_t sub_1CF2C7548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  char v8;
  unsigned int v9;
  int v10;
  char v11;

  v7 = 227 * (((_BYTE)v5 + 14) & 0xF) + 16117;
  v8 = (16
      * *((_BYTE *)&STACK[0x7C0]
        + (unsigned __int16)(227 * ((unsigned __int16)(v5 + 2366) >> (((4 * v4) ^ 0x34) & 0xFC)) + 16117)
        % 0x3C6u)) ^ 0xA0;
  v9 = 509
     * (*((unsigned __int8 *)&STACK[0x7C0]
        + (unsigned __int16)(v7 - 966 * ((unsigned __int16)((2171 * v7) >> 16) >> 5))) ^ 0x92 ^ (v8 + (~(2 * v8) | 0xBF) + 43) & 0xFE)
     + 181713;
  v10 = (*(unsigned __int8 *)(a4 + (v9 - 944 * ((4549754 * (unint64_t)v9) >> 32))) >> 4) ^ 0xB;
  v11 = (16
       * *((_BYTE *)&STACK[0x7C0]
         + (unsigned __int16)(227 * v10 - 966 * ((unsigned __int16)((492817 * v10) >> 16) >> 5)))) ^ 0xA0;
  *((_BYTE *)&STACK[0x7C0] + (227 * v5 + 1267340361) % 0x3C6u) = v11 - ((2 * v11) & 0x40) + 42;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((267 * (v5 == 1999996865)) ^ v4)) - 8))();
}

uint64_t sub_1CF2C769C@<X0>(uint64_t a1@<X0>, int a2@<W1>, unsigned int a3@<W2>, uint64_t a4@<X3>, int a5@<W7>, int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unint64_t v19;
  unsigned int v20;

  v14 = v10 + (((_BYTE)v8 + 10) & 0xF) * v9;
  v15 = v10 + ((a6 - 1029) & ((unsigned __int16)((v8 + 666) & 0xFFF0) >> 4)) * v9;
  v16 = v15 - ((((unsigned __int16)v15 >> 1) * v11) >> 20) * v6;
  v17 = (unsigned __int16)v16 - 1696402888 - ((2 * v16) & 0x470);
  v18 = *(unsigned __int8 *)(a1 + (v17 ^ 0x9AE2F238));
  LOBYTE(v14) = *(_BYTE *)(a1 + (unsigned __int16)(v14 - ((unsigned __int16)((v14 * v11) >> 16) >> 5) * v6));
  v19 = (unint64_t)(v18 ^ 0x2Au) << (((v17 & 0xF8 ^ 0x38 | v17 & 0xF8 ^ 0xC0)
                                           - ((v18 & 0xF4 ^ 0xD4)
                                            + (v18 & 0xF4 ^ 0x20))) & 0xFC);
  LOBYTE(v19) = (v19 - ((2 * v19) & 0x54) + 42) ^ v14;
  LODWORD(v19) = (*(unsigned __int8 *)(a4
                                     + ((v19 ^ 0xCE) * a2
                                                    + 326269
                                                    - ((((v19 ^ 0xCEu) * a2 + 326269)
                                                      * (unint64_t)a3) >> 32)
                                                    * a5)) ^ ((v19 ^ 0x69)
                                                                             + (~(2 * (v19 ^ 0x69) + 96) | 0x97)
                                                                             + 37) ^ 0x86)
               * v9;
  v20 = ((v14 & 0xE3 ^ 0xC1) + (v14 & 0xE3 ^ 0x22)) * (v8 - 160156328);
  *(_BYTE *)(a1 + v20 - (((v20 * (unint64_t)v12) >> 32) >> 8) * v6) = *(_BYTE *)(a1 + (unsigned __int16)(v19 - ((unsigned __int16)(((v19 >> 1) * v11) >> 16) >> 4) * v6));
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * (((v8 + 1 != v7 + 256) | (2 * (v8 + 1 != v7 + 256))) ^ a6)) - 8))();
}

uint64_t sub_1CF2C7828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  unint64_t v9;

  v7 = *((unsigned __int8 *)&STACK[0x7C0] + (unsigned __int16)(227 * v5 + 4939) % 0x3C6u) ^ 0x2E;
  v8 = *(unsigned __int8 *)(a4
                          + (509 * v7
                                         + 160335
                                         - 944 * ((4549754 * (unint64_t)(509 * v7 + 160335)) >> 32)));
  HIDWORD(v9) = v8 ^ 0x34;
  LODWORD(v9) = v8 << 24;
  *((_BYTE *)&STACK[0x7C0] + (227 * v5 + 109398664) % 0x3C6u) = (v9 >> 31) ^ 0xAD;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((507 * (v5 != 888784861)) ^ v4)) - 8))();
}

uint64_t sub_1CF2C7900@<X0>(uint64_t a1@<X3>, int a2@<W5>, int a3@<W8>)
{
  int v3;
  int v4;
  __int16 v5;
  uint64_t v6;
  __int16 v7;
  char v8;
  uint64_t v9;
  char v10;
  unsigned int v11;

  v10 = *(_BYTE *)(a1 + (unsigned __int16)((a2 ^ 2) * v7 - 29315) % (((v4 + 2010875328) & 0x882477D8 ^ 0x128) & 0x3FFF8)) ^ v8;
  v11 = (((91 * v10) ^ (4 * ((91 * v10) ^ (24 * v10)))) ^ 0x7C) * a3;
  *(_BYTE *)(v6
           + (unsigned __int16)(a2 * a3
                              - 2747
                              - ((unsigned __int16)((((unsigned __int16)(a2 * a3 - 2747) >> 1) * v3) >> 16) >> 4)
                              * v5)) = *(_BYTE *)(v6
                                                + (unsigned __int16)(v11
                                                                   - ((unsigned __int16)(((v11 >> 1) * v3) >> 16) >> 4)
                                                                   * v5));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((472 * (a2 == 1434463903)) ^ v4)) - 8))();
}

uint64_t sub_1CF2C79CC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  uint64_t v5;
  _BOOL4 v6;
  unsigned int v7;

  STACK[0x3C8] = a4;
  v6 = LODWORD(STACK[0x688]) == LODWORD(STACK[0x680]);
  LODWORD(STACK[0x688]) = 335114106;
  v7 = (v4 + 1259979911) & 0xB4E63DF7;
  LODWORD(STACK[0x680]) = v7;
  return (*(uint64_t (**)(void))(v5 + 8 * (int)((((((v4 - 648) | 0x1C8) + 871) ^ v7) * v6) ^ v4)))();
}

uint64_t sub_1CF2C7A64()
{
  int v0;
  uint64_t (*v1)(void);

  LODWORD(STACK[0x3B4]) = 0;
  v0 = LODWORD(STACK[0x680]) + 72;
  LODWORD(STACK[0x3C4]) = LODWORD(STACK[0x670]) + 1715558376;
  LODWORD(STACK[0x3C0]) = v0 ^ 0x622F52E1;
  LODWORD(STACK[0x3BC]) = 37724566;
  LODWORD(STACK[0x310]) = (LODWORD(STACK[0x3D8]) + 350207295) & 0xEB2045FF;
  LODWORD(STACK[0x3B8]) = 52139230;
  LODWORD(STACK[0x330]) = 35040854;
  LODWORD(STACK[0x348]) = 38326241;
  LODWORD(STACK[0x384]) = 49190428;
  LODWORD(STACK[0x34C]) = -1973520781;
  LODWORD(STACK[0x360]) = 1422291737;
  LODWORD(STACK[0x33C]) = -1066567512;
  LODWORD(STACK[0x3A4]) = -560635280;
  LODWORD(STACK[0x354]) = -813529142;
  LODWORD(STACK[0x320]) = 1477794491;
  LODWORD(STACK[0x39C]) = -1347243428;
  LODWORD(STACK[0x32C]) = 364514548;
  LODWORD(STACK[0x344]) = -326080927;
  LODWORD(STACK[0x380]) = -787340449;
  LODWORD(STACK[0x328]) = -1450490207;
  LODWORD(STACK[0x314]) = -1095204035;
  LODWORD(STACK[0x398]) = 1726438288;
  LODWORD(STACK[0x388]) = 1250305700;
  LODWORD(STACK[0x318]) = -1658285599;
  LODWORD(STACK[0x368]) = -2082704254;
  LODWORD(STACK[0x394]) = -422776531;
  LODWORD(STACK[0x378]) = -1603554358;
  LODWORD(STACK[0x31C]) = 1495562363;
  LODWORD(STACK[0x350]) = -969563367;
  LODWORD(STACK[0x334]) = -604130306;
  LODWORD(STACK[0x3A0]) = 1865102673;
  LODWORD(STACK[0x324]) = 2034896359;
  LODWORD(STACK[0x3A8]) = 1305346715;
  LODWORD(STACK[0x338]) = -1908015128;
  LODWORD(STACK[0x340]) = 820607293;
  LODWORD(STACK[0x370]) = -645681663;
  LODWORD(STACK[0x358]) = 1703892619;
  LODWORD(STACK[0x35C]) = 1682408577;
  v1 = *(uint64_t (**)(void))(STACK[0x690] + 8 * (v0 ^ 0xD0));
  LODWORD(STACK[0x3E4]) = 52;
  return v1();
}

uint64_t sub_1CF2C8068(int a1, int a2, int a3, int a4, int a5, int a6)
{
  char v6;
  int v7;
  char v8;
  int v9;
  int v10;
  int v11;
  char v12;
  int v13;
  int v14;
  char v15;
  int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  int v20;
  char v21;
  char v22;
  unsigned int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  char v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  int v111;
  int v112;
  unsigned int v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  int v125;
  unsigned int v126;
  int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  unsigned int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  int v154;
  int v155;
  unsigned int v156;
  unsigned int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  unsigned int v162;
  int v163;
  int v164;
  unsigned int v165;
  int v166;
  int v167;
  int v168;
  unsigned int v169;
  unsigned int v170;
  int v171;
  int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  int v184;
  unsigned int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  int v189;
  unsigned int v190;
  int v191;
  unsigned int v192;
  unsigned int v193;
  int v194;
  unsigned int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  int v208;
  unsigned int v209;
  int v210;
  int v211;
  unsigned int v212;

  v13 = 3 * (a1 ^ 0x11);
  v14 = a5 - v7;
  v15 = a5 + v6 + 22;
  v16 = v10 + a6 - 486521049;
  v17 = (((v13 ^ 0xB704CB92) + a3) ^ 0xE57D1AB8)
      - 1170623475
      - ((2 * (((v13 ^ 0xB704CB92) + a3) ^ 0xE57D1AB8)) & 0x7473681A);
  v18 = a6 - v9 + 2046817262;
  v19 = ((a4 - 387968672) ^ 0xE57D1AB8) - 1792968019 - ((2 * ((a4 - 387968672) ^ 0xE57D1AB8)) & 0x2A42F55A);
  v20 = a2 - ((2 * a2 + 919297844) & 0x539A7A4C) - 986518336;
  v21 = v15;
  v22 = v8 ^ 0x29;
  v13 -= 359;
  LODWORD(STACK[0x4D0]) = v10 + a6 - 717686385;
  LODWORD(STACK[0x62C]) = 784189957 - v9 - ((-1977252080 - 2 * v9) & 0xD3560CFA);
  LODWORD(STACK[0x4C8]) = v13 + v7 - 1918979697;
  v23 = ((2 * ((v19 ^ 0x95217AAD) + 1375919915)) & 0xF2FF6B74) + (((v19 ^ 0x95217AAD) + 1375919915) ^ 0x797FB5BA);
  LODWORD(STACK[0x4C4]) = v23 - 538194056;
  v24 = v9 - 1900798146;
  v25 = ((v18 + 146140405) ^ v24) + 868670245 - ((2 * ((v18 + 146140405) ^ v24)) & 0x678DB64A);
  LODWORD(STACK[0x4D4]) = v18 - 111887200;
  v26 = (v16 - ((2 * v16 + 525009402) & 0x7473681A) - 1981860598) ^ v17;
  LODWORD(STACK[0x61C]) = (v17 ^ 0x45C64BF2) - ((2 * (v17 ^ 0x45C64BF2) + 826735998) & 0x6C679D86) - 1898492542;
  LODWORD(STACK[0x5EC]) = (v20 ^ 0xD632C2D9)
                        + (v17 & 0x442E9C21 ^ 0x289401 | v17 & 0x442E9C21 ^ 0x44060820)
                        - 1697793725
                        - ((2 * ((v20 ^ 0xD632C2D9) + (v17 & 0x442E9C21 ^ 0x289401 | v17 & 0x442E9C21 ^ 0x44060820) + 1)) & 0x359B7284);
  v27 = v7 - 1042218478;
  v28 = (v27 ^ (v14 + 944182056)) + 341318645 - ((2 * (v27 ^ (v14 + 944182056))) & 0x28B037EA);
  v29 = (v20 ^ v19 ^ 0xBCEC478B) + (v28 ^ 0xEBA7E40A);
  LODWORD(STACK[0x4E0]) = -680625301 - v14 - ((-1994273812 - 2 * (v14 + 985557255)) & v11);
  v30 = ((2 * ((v28 ^ 0x14581BF5) + (v27 ^ 0x39EB3AFD))) & 0xF5B56DB6)
      + (((v28 ^ 0x14581BF5) + (v27 ^ 0x39EB3AFD)) ^ 0xFADAB6DB);
  v31 = (v16 + 1258983755) & 0x44DAE5B6;
  v32 = (v25 ^ 0xCC3924DA) + v26 + 1971721948 - ((2 * ((v25 ^ 0xCC3924DA) + v26 + 1)) & 0xEB0C2DB6);
  LODWORD(STACK[0x4D8]) = v29 + 745452767;
  v33 = ((2 * ((v25 ^ 0x33C6DB25) + (v24 ^ 0x39EB3AFD))) & 0xFECFFEDC)
      + (((v25 ^ 0x33C6DB25) + (v24 ^ 0x39EB3AFD)) ^ 0x7F67FF6E);
  LODWORD(STACK[0x4C0]) = v33 - 1671858457;
  v34 = (v32 & 0x149AEFB2 ^ 0x18E920 | v32 & 0x149AEFB2 ^ 0x14820692) & (((v31 ^ 0x44DAE5B6) + v31) | (((v18 + 2003667631) & 0x88520A02) + ((-2003667632 - v18) & 0x88520A02)));
  v35 = v28 ^ v19;
  v36 = (v32 ^ 0x758616DB) - 77262770 + v34;
  v37 = ((2 * ((v29 + 1) ^ v28 ^ v19)) & 0xF76EFE5E ^ 0x262C210) + ((v29 + 1) ^ v28 ^ v19 ^ 0xFACE1E77);
  v38 = v28 ^ 0xDF0C227C;
  v39 = v25 ^ v17 ^ (v36 + 868670245 - ((2 * v36) & 0x678DB64A));
  v40 = (v32 ^ 0x8A79E924) + 197463964 - ((2 * (v32 ^ 0x8A79E924) + 908151096) & 0x6168C1E0);
  v41 = v25 ^ 0xF892E2AC;
  v42 = (v28 ^ 0xDF0C227C) - v37 + 2075623215;
  v43 = v32 ^ 0xCFBFA2D6 ^ v39;
  v44 = (v25 ^ 0xF892E2AC) + (v39 ^ 0x45C64BF2);
  LODWORD(STACK[0x620]) = 58467372 - v41 - ((464685454 - 2 * v41) & 0x6B45BECA);
  v39 ^= 0xBA39B40D;
  LODWORD(STACK[0x4CC]) = ((v39 + 605731873) ^ 0xE8FF7BDC) + 2141695480 + ((2 * (v39 + 605731873)) & 0xD1FEF7B8);
  LODWORD(STACK[0x628]) = 930142671 - v30 - ((-1806660298 - 2 * v30) & 0xDA912668);
  v45 = v39 - v33 + 2137522030;
  v46 = v37 - v30 + 2133014444;
  LODWORD(STACK[0x3B0]) = v33;
  v47 = (v44 + 1) ^ (v33 - v43 - 2137522030);
  v48 = v42 ^ ((v35 ^ 0x7E869EA7) + 86329638 + v30);
  v49 = v45 - v47 + 360984210 - ((2 * (v45 - v47)) & 0x2B085D24);
  v50 = ((v46 + (v35 ^ 0x81796158)) ^ 0xD77EBFC7) + 687832254 + ((2 * (v46 + (v35 ^ 0x81796158))) & 0xAEFD7F8E);
  v51 = v46 - v48 - 548306620 - ((2 * (v46 - v48)) & 0xBEA30288);
  LODWORD(STACK[0x3AC]) = v38;
  LODWORD(STACK[0x4BC]) = v38 - 990666292;
  LODWORD(STACK[0x624]) = v40 - 2576;
  LODWORD(STACK[0x4DC]) = 400422421 - v37;
  v52 = v42 - ((2 * v42 + 427326176) & 0x394F1F9C) - 1989948098;
  v53 = v45 + v43 - (((v23 + 109070918) ^ ((v19 ^ 0x2DE8552) + 100475093)) & 0x49AEFB2);
  v54 = (v53 ^ 0x479AFF9E) - 1115685130 + ((2 * v53) & 0x8F35FF3C);
  LODWORD(STACK[0x4B8]) = 1007561360;
  LODWORD(STACK[0x3F8]) = 1383912048;
  LOBYTE(v23) = v22 ^ (v44 + 95 - ((2 * (v44 + 113)) & 0xDC));
  v55 = (v13 ^ 0x3D9 ^ v47 ^ 0xFFFFFDFE) + v54 - 8392418 + 1;
  v56 = ((2 * v55) & 0xAF3F7FFE) + (v55 ^ 0x579FBFFF);
  LOBYTE(v37) = v23 ^ (v54 + 30);
  LOBYTE(v43) = (v42 - ((2 * v42 - 32) & 0x9C) + 62) ^ v21 ^ 0x61;
  LOBYTE(v42) = (v37 + 9 - ((2 * v37) & 0x12)) ^ v47 ^ 9;
  LOBYTE(STACK[0xA16]) = v23 ^ 0xF6;
  LOBYTE(STACK[0x7C0]) = v43 - ((2 * v43) & 0x55) + 42;
  LOBYTE(v43) = v43 ^ (v50 + 123);
  v57 = ((2 * (v50 - 8273029 + ~v48 + 1)) & 0xDFFD22FE) + ((v50 - 8273029 + ~v48 + 1) ^ 0x6FFE917F);
  LOBYTE(STACK[0x8A3]) = v43 - ((2 * v43) & 0x55) + 42;
  LOBYTE(v43) = (v43 + 18 - ((2 * v43) & 0x24)) ^ v48 ^ 0x12;
  LOBYTE(STACK[0x986]) = v43 - ((2 * v43) & 0x55) + 42;
  LOBYTE(STACK[0x816]) = v42 ^ 0xF6;
  LOBYTE(STACK[0xAF9]) = v37 ^ 0xF6;
  v58 = (v56 - 1470087167) ^ (v44 + 1824275825);
  v59 = v47;
  LOBYTE(v46) = (v42 - 110 - ((2 * v42) & 0x24)) ^ (v45 - v47 - 110 - ((2 * (v45 - v47)) & 0x24));
  v60 = ((2 * ((v57 - 1878954367) ^ v52)) & 0xFBA6DFB6 ^ 0x39061F94) + ((v57 - 1878954367) ^ v52 ^ 0x6174E015);
  LOBYTE(v43) = (v43 + 68 - ((2 * v43) & 0x88)) ^ v51;
  LOBYTE(STACK[0x8F9]) = v46 ^ 0xF6;
  v61 = v51 ^ 0xDF518144;
  v62 = v57 + 305004198 + v60;
  v63 = v56 - ((2 * v56 + 43472946) & 0x7B85C14) - 1993876957;
  v64 = v58 + v56;
  LOBYTE(STACK[0xA69]) = v43 - ((2 * v43) & 0x55) + 42;
  LOBYTE(v43) = v43 ^ (2 * (v50 + 123 + ~(_BYTE)v48 + 1) + ((v50 + 123 + ~(_BYTE)v48 + 1) ^ 0x7F) - 90 + v60);
  LOBYTE(v46) = v46 ^ (((v56 + 1) ^ (v44 + 113)) + v56 + 1);
  v65 = v59 - 1199002441 + v58 + v56 - ((2 * (v59 - 1199002441 + v58 + v56) - 326792486) & 0xF6E0651A) - 239929350;
  LOBYTE(STACK[0xB4C]) = v43 - ((2 * v43) & 0x55) + 42;
  v66 = v57 - ((2 * v57 + 165262642) & 0xB3FE3EA) - 225653618;
  v67 = (v49 ^ 0x15842E92) + v58 + (v63 ^ 0xFC23D1F5) + 1;
  v68 = ((2 * v67) & 0xFBDFFFBE) + (v67 ^ 0x7DEFFFDF);
  LOBYTE(v43) = (v43 - 11 - ((2 * v43) & 0xEA)) ^ v66;
  LOBYTE(STACK[0x869]) = v43 + (~(2 * v43) | 0xAB) + 43;
  LOBYTE(v38) = (v46 - ((2 * v46) & 0x14) + 10) ^ (v56 - ((2 * v56 + 50) & 0x14) + 35);
  v69 = v60 + v50 - ((2 * (v60 + v50) + 271780742) & 0xE25685AE) - 112932710;
  LOBYTE(v43) = (v43 - 41 - ((2 * v43) & 0xAE)) ^ v69;
  v70 = v63 ^ 0x78AC1C87 ^ v65;
  LOBYTE(v52) = v38 ^ 0xF6;
  LOBYTE(v38) = (v38 - 115 - ((2 * v38) & 0x1A)) ^ v65;
  v71 = v68 - 2112880607;
  v72 = v38 ^ (v68 + 33);
  LOBYTE(STACK[0xABF]) = v52;
  v73 = v64 + 711999522 + v68;
  v74 = v66 ^ 0x74B4B322 ^ v69;
  v75 = ((v61 + (v66 ^ 0x7A600E0A) + v60 - 2111008730) ^ 0x77FCED36)
      - 2013064502
      + ((2 * (v61 + (v66 ^ 0x7A600E0A) + v60 - 2111008730)) & 0xEFF9DA6C);
  v76 = v75 + v62 + 1545823350 - ((2 * (v75 + v62)) & 0xB846C8EC);
  LOBYTE(STACK[0x94C]) = v43 - ((2 * v43) & 0x55) + 42;
  LOBYTE(v43) = (v43 ^ v75) - ((2 * (v43 ^ v75)) & 0x7E) + 63;
  LOBYTE(STACK[0x7DC]) = v38 ^ 0xF6;
  LOBYTE(STACK[0xA2F]) = v43 ^ 0x15;
  v77 = ((2 * v73) & 0xDD6F3B74) + (v73 ^ 0x6EB79DBA);
  LOBYTE(STACK[0x9DC]) = v46 ^ 0xF6;
  v78 = v56 - v70 + 378801759 + v77 - 1164339911 - ((2 * (v56 - v70 + 378801759 + v77)) & 0x75332A72);
  LOBYTE(STACK[0x8BF]) = v72 ^ 0xF6;
  v79 = (v76 ^ 0x5C236476)
      + (v66 ^ 0x859FF1F5)
      - v74
      - 643638046
      - ((2 * ((v76 ^ 0x5C236476) + (v66 ^ 0x859FF1F5) - v74)) & 0xB345B9C4);
  v80 = v77 - 1857527226;
  v81 = (v69 ^ 0xF12B42D7) + v75;
  v82 = (v77 - ((2 * (v77 - 1857527226)) & 0x75332A72) + 1273100159) ^ v78;
  v83 = ((2 * ((v76 ^ 0x5C236476) + v74)) & 0xFD7F69CA) + (((v76 ^ 0x5C236476) + v74) ^ 0x7EBFB4E5);
  v84 = v80 + v70 - 1613441778 - ((2 * (v80 + v70)) & 0x3FA9AA1C);
  LOBYTE(v66) = (v82 + (v79 & 0x46 ^ 4) + (v79 & 0x46 ^ 0x42) - 70) ^ v72;
  LOBYTE(STACK[0x9A2]) = v66 ^ 0xF6;
  LOBYTE(v66) = (v66 + 57 - ((2 * v66) & 0x72)) ^ v78;
  v85 = v76 ^ 0x8581B894 ^ v79;
  LOBYTE(v70) = (v85 - 2 * (v85 & 0x3F) + 63) ^ v43;
  LOBYTE(v74) = (v66 + 14 - ((2 * v66) & 0x1C)) ^ v84;
  LOBYTE(STACK[0xB12]) = v70 - ((2 * v70) & 0x55) + 42;
  v86 = (v71 + (v65 ^ 0x7B70328D)) ^ 0xA3384F73;
  LOBYTE(v43) = v76 ^ 0x49 ^ v43;
  LOBYTE(STACK[0x82F]) = v43 - ((2 * v43) & 0x55) + 42;
  v87 = v83 - 2126492901;
  LOBYTE(v43) = v43 ^ (v83 + 27);
  v88 = (v78 ^ 0xBA999539) + (v84 ^ 0x602B2AF1) + 1;
  LOBYTE(STACK[0x912]) = v43 - ((2 * v43) & 0x55) + 42;
  v89 = (v79 ^ 0x265D231D) + v85 + 1;
  v81 ^= 0xA3384F73;
  LOBYTE(STACK[0x885]) = v74 ^ v86 ^ 0xF6;
  LOBYTE(v43) = v43 ^ v81;
  LOBYTE(STACK[0xA85]) = v66 ^ 0xF6;
  LOBYTE(STACK[0x9F5]) = v43 - ((2 * v43) & 0x55) + 42;
  LOBYTE(STACK[0xB68]) = v74 ^ 0xF6;
  v90 = (v78 ^ 0x45666AC6) + v82 + 742676160 - ((2 * ((v78 ^ 0x45666AC6) + v82 + 1)) & 0x5888AD7E);
  v91 = v84 ^ 0x9FD4D50E;
  v92 = (v79 ^ 0xD9A2DCE2) - v83;
  v93 = v92 + v81 - 848814802;
  LOBYTE(v79) = v90 ^ ((v74 ^ v86) - ((2 * (v74 ^ v86)) & 0x5E) + 47);
  v94 = v88 + 418069790;
  LOBYTE(v74) = v79 ^ (v88 + 30);
  v92 -= 1750404605;
  v95 = v87 + v89 + (v89 ^ 0x8BCEF97A) + 1;
  v96 = (v90 ^ 0xA78AAFC5) + 1;
  v97 = v96 + v91 + (v90 ^ 0x2C4456BF);
  LOBYTE(v82) = v74 ^ v97;
  LOBYTE(v91) = v89 ^ 3 ^ (v43 - ((2 * v43) & 0xC) - 122);
  LOBYTE(STACK[0xAD8]) = v91 + (~(2 * v91) | 0xAB) + 43;
  LOBYTE(v43) = v79 ^ 0xE3;
  LOBYTE(v91) = v91 ^ v92;
  LOBYTE(STACK[0x7F5]) = v91 - ((2 * v91) & 0x55) + 42;
  v98 = v86 + 1319659593 + v88;
  LOBYTE(v79) = v74 ^ v97 ^ v98;
  LOBYTE(STACK[0x968]) = v43;
  LOBYTE(v91) = v91 ^ v95;
  LOBYTE(v70) = v74 ^ 0xE3;
  LOBYTE(STACK[0x8D8]) = v91 - ((2 * v91) & 0x55) + 42;
  v99 = v96 + v98 + 1672884870 - ((2 * (v96 + v98)) & 0xC76C650C);
  v100 = v90 ^ 0x7F8C6B4C ^ v99;
  LOBYTE(v74) = v79 ^ v100;
  LOBYTE(v88) = v91 ^ v93;
  LOBYTE(STACK[0xA4B]) = v70;
  LOBYTE(STACK[0x9BB]) = (v91 ^ v93) + (~(2 * (v91 ^ v93)) | 0xAB) + 43;
  v101 = ((2 * (v94 + (v99 ^ 0x9C49CD79) + 1)) & 0xFEFEF27E) + ((v94 + (v99 ^ 0x9C49CD79) + 1) ^ 0xFF7F793F);
  v102 = v93 + (v89 ^ 0x8BCEF97A) + 492960852 - ((2 * (v93 + (v89 ^ 0x8BCEF97A) + 1)) & 0x3AC3F8A6);
  LOBYTE(STACK[0xB2E]) = v82 ^ 0xE3;
  v103 = ((2 * (v92 + (v102 ^ 0xE29E03AC) + 1)) & 0xF7FED6F6) + ((v92 + (v102 ^ 0xE29E03AC) + 1) ^ 0xFBFF6B7B);
  v104 = v102 ^ (v95 + 492960851 - ((2 * v95) & 0x3AC3F8A6));
  LOBYTE(STACK[0x84B]) = v79 ^ 0xE3;
  v105 = v89 ^ 0x2D1FF326 ^ v102;
  v106 = v104 - 67146885 - v103 + 674441151 - ((2 * (v104 - 67146885 - v103)) & 0x50664F7E);
  LOBYTE(STACK[0xA9E]) = (v88 ^ v105) - ((2 * (v88 ^ v105)) & 0x55) + 42;
  v107 = ((v97 + 1672884870 - ((2 * v97) & 0xC76C650C)) ^ v99) - 8423105 - v101;
  v108 = v107 - 52984645 - ((2 * v107) & 0xF9AF0976);
  LOBYTE(v89) = (v103 - 113) ^ v88 ^ v105;
  LOBYTE(STACK[0xB81]) = v89 - ((2 * v89) & 0x55) + 42;
  LOBYTE(v89) = (v89 - 65 - ((2 * v89) & 0x7E)) ^ v106;
  v109 = (v108 ^ 0xFCD784BB) + v100;
  LOBYTE(STACK[0x89E]) = v89 - ((2 * v89) & 0x55) + 42;
  LOBYTE(STACK[0xA11]) = v74 ^ (v101 - 53) ^ 0xE3;
  LOBYTE(v95) = ((v74 ^ (v101 - 53) ^ 0x15) - 69 - ((2 * (v74 ^ (v101 - 53) ^ 0x15)) & 0x76)) ^ v108;
  LOBYTE(STACK[0x92E]) = v74 ^ 0xE3;
  v102 ^= 0x1126C408u;
  v110 = (v106 ^ 0x283327BF) + v105;
  LOBYTE(v89) = v89 ^ v102;
  v99 ^= 0x6FF10ADDu;
  LOBYTE(STACK[0xAF4]) = v95 ^ 0xF6;
  v111 = (v103 - 1655847546) ^ v102;
  LOBYTE(v97) = ((v95 ^ v99) + 106 - ((2 * (v95 ^ v99)) & 0xD4)) ^ v109 ^ 0xBC;
  v112 = v90 & 0x551B56DF ^ 0x50A06C5 | v90 & 0x551B56DF ^ 0x5011501A;
  v113 = (v108 ^ 0xA9CCD264) + ((v101 - 1714571326) ^ v99);
  LOBYTE(STACK[0x811]) = v95 ^ v99 ^ 0xF6;
  LOBYTE(STACK[0x981]) = v89 + (~(2 * v89) | 0xAB) + 43;
  LOBYTE(v95) = (v89 - 93 - ((2 * v89) & 0x46)) ^ v110 ^ 0x75;
  LOBYTE(STACK[0xA64]) = v95 - ((2 * v95) & 0x55) + 42;
  LOBYTE(STACK[0x9D7]) = v97 ^ (((2 * (v101 + 80)) & 0x64) + ((v101 + 80) ^ 0xB2)) ^ 0xF6;
  LOBYTE(v70) = v97 ^ (((2 * (v101 + 80)) & 0x64) + ((v101 + 80) ^ 0xB2)) ^ v108 ^ 0xB3;
  v114 = v106 ^ (v112 + 674441151 - ((2 * v112) & 0x260D3E));
  v115 = v114 + v111;
  v116 = ((v108 ^ 0x106A66B3) - 1182670998 - 2 * ((v108 ^ 0x106A66B3) & 0x3981DF6E ^ v108 & 4)) ^ v109 ^ 0x220485BC;
  LOBYTE(v108) = v95 ^ (v103 - 58);
  LOBYTE(v89) = v70 ^ v113;
  LOBYTE(STACK[0xB47]) = v108 - ((2 * v108) & 0x55) + 42;
  LOBYTE(v95) = v70 ^ 0xF6;
  v114 ^= 0xB9A6B4D7;
  LOBYTE(v108) = v108 ^ v114;
  LOBYTE(v70) = v108 - ((2 * v108) & 0x55) + 42;
  v117 = (v109 ^ 0x9B855AD6) - v116 + 256283529 - ((2 * ((v109 ^ 0x9B855AD6) - v116 - 1572295205)) & 0xD9FBCB5C);
  LOBYTE(STACK[0xABA]) = v95;
  LOBYTE(STACK[0x8F4]) = v97 ^ 0xF6;
  LOBYTE(v108) = v108 ^ v115;
  v118 = (v114 - 1797200733 - ((2 * v114) & 0x29C1C946)) ^ v110 ^ 0xF65BE75;
  LOBYTE(STACK[0x864]) = v70;
  LOBYTE(v88) = (v89 - 82 - ((2 * v89) & 0x5C)) ^ v117;
  LOBYTE(STACK[0x7D7]) = v89 ^ 0xF6;
  LOBYTE(STACK[0x947]) = v108 - ((2 * v108) & 0x55) + 42;
  v119 = (v110 ^ 0x9B855AD6) - v118 - ((2 * ((v110 ^ 0x9B855AD6) - v118) + 76635062) & 0x3CB43FBC) + 1084411321;
  LOBYTE(v108) = (v108 - ((2 * v108) & 0xBC) - 34) ^ v119;
  v120 = (v119 ^ 0x61A5E021) + v115 - ((2 * ((v119 ^ 0x61A5E021) + v115) + 1941064586) & 0xBE0047E4) + 416893367;
  v121 = v103
       + 200388641
       + (v118 ^ 0xBECEFA58)
       - 1679759343
       - ((2 * (v103 + 200388641 + (v118 ^ 0xBECEFA58))) & 0x37C1D022);
  LOBYTE(STACK[0xA2A]) = v108 - ((2 * v108) & 0x55) + 42;
  v122 = v101
       + 141664861
       + (v116 ^ 0xBECEFA58)
       + 1751249305
       - ((2 * (v101 + 141664861 + (v116 ^ 0xBECEFA58))) & 0xD0C3E332);
  LOBYTE(STACK[0x8BA]) = v88 ^ 0xF6;
  LOBYTE(v108) = (v108 + 17 - ((2 * v108) & 0x22)) ^ v121;
  v123 = (v117 ^ 0x93021A51) + v113 - ((2 * ((v117 ^ 0x93021A51) + v113) + 867322762) & 0x23BA3F96) - 877247088;
  LOBYTE(STACK[0xB0D]) = v108 - ((2 * v108) & 0x55) + 42;
  LOBYTE(v70) = (v88 - 103 - ((2 * v88) & 0x32)) ^ v122;
  v124 = v122 ^ 0x6861F199;
  LOBYTE(v108) = v118 ^ 0xAD ^ (v108 - ((2 * v108) & 0xEA) - 11);
  LOBYTE(v111) = v70 ^ 0xF6;
  LOBYTE(v70) = v116 ^ (v70 - ((2 * v70) & 0x5A) - 83);
  LOBYTE(STACK[0x82A]) = v108 - ((2 * v108) & 0x55) + 42;
  LOBYTE(v88) = ((v70 ^ 0xF5) - 53 - ((2 * (v70 ^ 0xF5)) & 0x96)) ^ v123;
  LOBYTE(STACK[0x99D]) = v111;
  LOBYTE(v108) = (v108 - ((2 * v108) & 0xE4) - 14) ^ ((v119 ^ 0x21)
                                                    + v115
                                                    - ((2 * ((v119 ^ 0x21) + v115) - 118) & 0xE4)
                                                    - 73);
  LOBYTE(STACK[0x90D]) = v108 - ((2 * v108) & 0x55) + 42;
  v125 = (v122 ^ 0x6861F199) + 324670164;
  LOBYTE(STACK[0xA80]) = v70 ^ 3;
  v126 = ((2 * (v121 ^ v118)) & 0x37FE7FFE ^ 0x25C2492) + (v121 ^ v118 ^ 0xBED12DB6);
  v127 = (v121 & 0x6E339CB8 ^ 0x641314A8) + (v121 & 0x6E339CB8 ^ 0xA208810);
  v128 = (v121 ^ 0x9BE0E811) + 324670164;
  v129 = v122 ^ v116;
  v130 = ((2 * v129) & 0xDFFB5DFE ^ 0x8D5A1582) + (v129 ^ 0xB952A53E);
  LOBYTE(STACK[0xB63]) = v88 ^ 0xF6;
  v131 = (v117 ^ 0x44D26541) + v124 + (v127 | 0x4869D3A) - 1532857062;
  LOBYTE(v117) = v88 ^ v131;
  v132 = v128 + (v119 ^ 0xB6759F31);
  v133 = v126 + 1677770753;
  v134 = v126 + 1677770753 - v132;
  v135 = v123 ^ v125;
  v136 = v120 ^ 0xB1B9006D ^ v128;
  LOBYTE(v132) = v108 ^ v132;
  LOBYTE(STACK[0x9F0]) = v132 - ((2 * v132) & 0x55) + 42;
  LOBYTE(STACK[0x880]) = v88 ^ v131 ^ 0xF6;
  v131 = -1878896383 - v131;
  LOBYTE(v117) = v117 ^ v135 ^ 0x54;
  LOBYTE(v108) = v117 ^ (v131 + ((2 * v129) ^ 0x82) + (v129 ^ 0x3E));
  LOBYTE(v132) = v132 ^ v136;
  LOBYTE(STACK[0x963]) = v117 ^ 0xF6;
  LOBYTE(STACK[0xA46]) = v108 ^ 0xF6;
  LOBYTE(v117) = (v108 - 53 - ((2 * v108) & 0x96)) ^ v123;
  LOBYTE(STACK[0xAD3]) = v132 - ((2 * v132) & 0x55) + 42;
  LOBYTE(v132) = v132 ^ v134;
  LOBYTE(STACK[0x7F0]) = v132 - ((2 * v132) & 0x55) + 42;
  LOBYTE(v132) = v132 ^ v120 ^ 0x6D;
  v137 = (v123 ^ 0x9C7E3832) - v130;
  v138 = (v135 ^ 0x8AD5A898) - v137 - 1878896383;
  v139 = v131 - ((2 * v131 + 1811626504) & 0xD66C081C) - 1590451950;
  LOBYTE(STACK[0xB29]) = v117 ^ 0x69;
  v140 = v138 - v137;
  v141 = (v120 ^ 0xD2A3040B) - v126;
  LOBYTE(v117) = v117 ^ (((2 * v129) ^ 0x82) + (v129 ^ 0x3E) - 88);
  v142 = (v136 ^ 0x75B194CC) - v141 + 1677770753;
  v143 = v134 - v126 - 2 * ((v134 - v126 + 1644113412) & 0x5097F469 ^ (v134 - v126) & 1) - 1298718100;
  v144 = ((v135 ^ 0xFF643C54) & 0xC2A03DA7 | v135 & 0xC2A03DA7 ^ 0x8001A3) + v133;
  LOBYTE(STACK[0x8D3]) = v132 - ((2 * v132) & 0x55) + 42;
  LOBYTE(v132) = v132 ^ v144;
  LOBYTE(v135) = v117 ^ ((v135 ^ 0x98) - v137 + 1);
  LOBYTE(STACK[0x9B6]) = v132 - ((2 * v132) & 0x55) + 42;
  LOBYTE(v132) = v132 ^ v142;
  LOBYTE(STACK[0x846]) = v117 ^ 0x69;
  LOBYTE(STACK[0xA99]) = v132 - ((2 * v132) & 0x55) + 42;
  LOBYTE(v117) = (v132 + 104 - ((2 * v132) & 0xD0)) ^ v143;
  LOBYTE(STACK[0xB7C]) = v117 - ((2 * v117) & 0x55) + 42;
  LOBYTE(v117) = v117 ^ (v141 - 1);
  LOBYTE(v108) = (v135 + 14 - ((2 * v135) & 0x1C)) ^ v139;
  v145 = v137 - (v138 - v137) + 1402424400;
  LOBYTE(v137) = v108 ^ (v137 - 1);
  v146 = (v139 ^ (v130 - 2 * ((v130 + 1386385064) & 0x6B36040F ^ v129 & 1) - 1109880138)) + v140 - 1878896383;
  LOBYTE(v138) = v137 ^ v146;
  v147 = v145 - ((2 * v145 + 819858898) & 0x66FC851E) - 873641608;
  v148 = ((v139 ^ 0x6B36040E ^ (v140 - 1878896383))
        - ((2 * ((v139 ^ 0x6B36040E ^ (v140 - 1878896383)) + 1978158291)) & 0x66FC851E)
        + 694587234) ^ v147;
  LOBYTE(STACK[0x929]) = v135 ^ 0x69;
  LOBYTE(STACK[0xAEF]) = v137 ^ 0x69;
  v149 = v142 - v141;
  LOBYTE(STACK[0x899]) = v117 + (~(2 * v117) | 0xAB) + 43;
  v150 = v142 - v141 + 1677770753;
  v151 = ((v144 + 1352135784 - ((2 * v144) & 0xA12FE8D0)) ^ v143) + v150;
  LOBYTE(STACK[0xA0C]) = v108 ^ 0x69;
  v152 = v141 - (v142 - v141) - ((2 * (v141 - (v142 - v141)) + 135457394) & 0x74EA0AC8) - 25265507;
  LOBYTE(v117) = v117 ^ v151;
  LOBYTE(v142) = v138 ^ (v140 + 5);
  LOBYTE(STACK[0x97C]) = v117 - ((2 * v117) & 0x55) + 42;
  v153 = (v143 ^ 0x5097F468 ^ v150) - ((2 * (v143 ^ 0x5097F468 ^ v150) - 338650714) & 0xE7ECC914) - 371281571;
  LOBYTE(v117) = (v117 ^ (v149 + 5)) + 27 - ((2 * (v117 ^ (v149 + 5))) & 0x36);
  LOBYTE(STACK[0xA5F]) = v117 ^ 0x31;
  LOBYTE(v139) = v142 ^ ((v139 ^ 0xE ^ (v140 + 1)) - 45);
  LOBYTE(STACK[0x80C]) = v138 ^ 0x69;
  v154 = v140 - v148 - 421166509;
  LOBYTE(v138) = ((v153 ^ 0x8A) + (v153 ^ 0x6E ^ v117) + 1) ^ ((v117 ^ 0xE4) + 1);
  LOBYTE(v117) = ((v138 + 27 - ((2 * v138) & 0x36)) ^ v117)
               + (((v143 ^ 0x68 ^ v150) - ((2 * (v143 ^ 0x68 ^ v150) - 90) & 0x14) + 93) ^ 0x8A);
  LOBYTE(v138) = v117 - ((2 * v117) & 0x55) + 42;
  LOBYTE(STACK[0x8EF]) = v142 ^ 0x69;
  LOBYTE(v117) = (v117 + 100 - ((2 * v117) & 0xC8)) ^ v152;
  LOBYTE(v143) = v139 ^ v147;
  v155 = v152 ^ 0x498361EE ^ v153;
  v156 = (v147 ^ 0xB37E428F) - (v140 - 343903739);
  LOBYTE(STACK[0x85F]) = v117 - ((2 * v117) & 0x55) + 42;
  v157 = (v152 ^ 0x3A750564) - v149;
  v158 = v154 + v146;
  v159 = v148 - v156 + 607511164 - ((2 * (v148 - v156)) & 0x486BC4F8);
  LOBYTE(STACK[0xB42]) = v138;
  LOBYTE(STACK[0x9D2]) = v139 ^ 0x69;
  v160 = v149 - 1082203899 - v155;
  v161 = v155 - (v157 + 1082203899) - 1489731011 - ((2 * (v155 - (v157 + 1082203899))) & 0x4E69047A);
  v162 = v160 + v151;
  v163 = v159 ^ (v158 + 77262770);
  LOBYTE(v147) = v143 ^ v159 ^ (v158 - 78);
  v164 = v158 + v154;
  LOBYTE(STACK[0xAB5]) = v143 ^ 0xE6;
  v165 = v162 + v160;
  v166 = (v162 - 1489731011 - ((2 * v162) & 0x4E69047A)) ^ v161;
  LOBYTE(v117) = v117 ^ (v162 + 61 - ((2 * v162) & 0x7A)) ^ v161;
  v167 = v157 - ((2 * (v157 + 1082203899) + 340309556) & 0x18CE87F4) + 118275599;
  LOBYTE(v143) = v147 ^ (v164 + 100) ^ 0x9F;
  LOBYTE(STACK[0x942]) = v117 - ((2 * v117) & 0x55) + 42;
  LOBYTE(STACK[0x7D2]) = v147 ^ 0x9A;
  LOBYTE(v117) = v117 ^ v165;
  LOBYTE(STACK[0xA25]) = v117 - ((2 * v117) & 0x55) + 42;
  LOBYTE(v147) = ((v143 ^ 0xF3) + 124 - ((2 * (v143 ^ 0xF3)) & 0xF8)) ^ v159;
  v168 = v156 - ((2 * v156 + 1950922292) & 0x63D14F86) + 1812792029;
  LOBYTE(v138) = (v147 - 61 - ((2 * v147) & 0x86)) ^ v168;
  LOBYTE(STACK[0x8B5]) = v143 ^ 5;
  LOBYTE(v117) = (v117 + 61 - ((2 * v117) & 0x7A)) ^ v161;
  LOBYTE(STACK[0xB08]) = v117 - ((2 * v117) & 0x55) + 42;
  v169 = ((2 * ((v161 ^ 0xA734823D) - v165)) & 0x7EFEFEBA) + (((v161 ^ 0xA734823D) - v165) ^ 0xBF7F7F5D);
  LOBYTE(v117) = (v117 - 6 - ((2 * v117) & 0xF4)) ^ (v157 - ((2 * (v157 - 5) + 52) & 0xF4) + 15);
  LOBYTE(STACK[0x825]) = v117 - ((2 * v117) & 0x55) + 42;
  LOBYTE(STACK[0xA7B]) = v138 ^ 0xF6;
  LOBYTE(STACK[0x998]) = v147 ^ 0xF6;
  v170 = (v163 ^ 0x2435E27C) - ((2 * (v163 ^ 0x2435E27C) - 1267544852) & 0xFF70E9F2) - 638461073;
  v171 = v166 + ((v169 + 1082163363) & 0x7F9746B8) + ((v169 + 1082163363) & 0x7F9746B8 ^ 0x7F9746B8) + 1520574398;
  LOBYTE(v117) = v117 ^ v171;
  LOBYTE(v143) = (v138 - ((2 * v138) & 0xF2) - 7) ^ ((v163 ^ 0x7C) - ((2 * (v163 ^ 0x7C) - 20) & 0xF2) + 111);
  LOBYTE(STACK[0x908]) = v117 - ((2 * v117) & 0x55) + 42;
  LOBYTE(v117) = v117 ^ (v165 + 94);
  v172 = (v159 ^ 0x2435E27C) - 154525540;
  LOBYTE(STACK[0x9EB]) = v117 - ((2 * v117) & 0x55) + 42;
  v173 = v169 + v165;
  v174 = v173 + 1052965377;
  LOBYTE(v111) = v117 ^ (v173 + 1);
  LOBYTE(STACK[0x87B]) = v143 ^ (v164 - 62) ^ 0xF6;
  LOBYTE(v117) = (v143 ^ (v164 - 62) ^ (v172 - 62)) - ((2 * (v143 ^ (v164 - 62) ^ (v172 - 62))) & 0xC6) - 29;
  LOBYTE(STACK[0xB5E]) = v143 ^ 0xF6;
  LOBYTE(STACK[0x95E]) = v117 ^ 0x15;
  LOBYTE(STACK[0xACE]) = v111 - ((2 * v111) & 0x55) + 42;
  LOBYTE(v143) = v117 ^ v168;
  LOBYTE(v147) = v117 ^ v168 ^ 0x20;
  v175 = (v172 + v164 - ((2 * (v172 + v164) + 501310216) & 0x63D14F86) - 1059497657) ^ v168;
  LOBYTE(v111) = (v111 - 6 - ((2 * v111) & 0xF4)) ^ v167;
  LOBYTE(STACK[0xA41]) = v117 ^ v168 ^ 0xD6;
  v176 = ((v170 ^ 0x4C25F6EA)
        + 1857527226
        + ((((v163 ^ 0xDBCA1D83) - ((2 * (v163 ^ 0xDBCA1D83) + 193803028) & 0x1F70E9F2) + 92212867) ^ v170) & 0x10000004 | (((29197985 - v165) & 0x81486242) + ((v165 - 29197986) & 0x81486242)))) ^ (v172 + 125327554 - v175);
  v177 = v165 + 1023767391 + v173;
  v178 = v177 ^ v167 ^ 0x89FA961C;
  v179 = v176 ^ v175;
  v180 = v176 ^ v175 ^ 0x84C9DD29;
  LOBYTE(STACK[0x7EB]) = v111 - ((2 * v111) & 0x55) + 42;
  v181 = v174 + (v177 ^ v167 ^ 0xF398BC05) + 1;
  v182 = v168 ^ 0xB1E8A7C3 ^ v176;
  v183 = v181 ^ v171;
  v184 = v181 ^ v171 ^ v178;
  LOBYTE(v143) = (v147 - 37 - 2 * (v147 & 0xDF ^ v143 & 4)) ^ v180 ^ ((v163 ^ 0x7C)
                                                                    - ((2 * (v163 ^ 0x7C) - 20) & 0xF2)
                                                                    + 111) ^ 0xEE;
  LOBYTE(v147) = v111 ^ v181;
  v185 = v167 ^ 0xBFFAC1E9 ^ v181 ^ v171;
  LOBYTE(v178) = ((v111 ^ v181) - 26 - ((2 * (v111 ^ v181)) & 0xCC)) ^ v178;
  LOBYTE(STACK[0x841]) = v143 ^ v182;
  LOBYTE(STACK[0x924]) = v117 ^ v180 ^ ((v163 ^ 0x7C) - ((2 * (v163 ^ 0x7C) - 20) & 0xF2) + 111) ^ 0xD6;
  LOBYTE(STACK[0x8CE]) = v178 - ((2 * v178) & 0x55) + 42;
  LOBYTE(v181) = v182 - v179;
  v186 = (v163 & 0x91486246 ^ 0x91480002) + 1857527226 + (v163 & 0x91486246 ^ 0x6244) + (v180 ^ v170 ^ 0xC8EC2BC3);
  v187 = (v186 - 2067145431 - ((2 * v186) & 0x993BA52)) ^ v180;
  v188 = v176 + 1692992880;
  v189 = (v182 - v179) ^ (v176 + 1692992880);
  v190 = ((v189 - 77262770) ^ 0xFB65104D) - ((2 * (v189 - 77262770)) & 0x935DF64) + v187 + 1;
  v191 = ((2 * v190) & 0x7F2FFDF6) + (v190 ^ 0x3F97FEFB);
  LOBYTE(STACK[0xB24]) = v143;
  LOBYTE(STACK[0x9B1]) = (v178 ^ v185) - ((2 * (v178 ^ v185)) & 0x55) + 42;
  LOBYTE(v177) = v147 ^ v177;
  LOBYTE(STACK[0xA94]) = v177 - ((2 * v177) & 0x55) + 42;
  LOBYTE(STACK[0xA07]) = v170 ^ ~(_BYTE)v117;
  LOBYTE(v177) = v184 ^ 0x57 ^ (v177 - 93 + (~(2 * v177) | 0xBB));
  v192 = v185 + (v184 ^ 0xC9FFA80A) + 1;
  LOBYTE(STACK[0xB77]) = v177 - ((2 * v177) & 0x55) + 42;
  v193 = (v183 ^ 0xB39D8213) - ((2 * (v183 ^ 0xB39D8213) - 908981536) & 0xD9556512) - 778848263;
  v194 = ((v184 ^ 0x360057F5) + 1692992880) ^ v171;
  LODWORD(STACK[0x688]) = v194;
  v195 = (v171 ^ 0xB39D8213) + (v193 ^ v192 ^ 0x93554D76) + 1;
  LOBYTE(v140) = v195 + 122;
  v196 = v195 + 875889530 - ((2 * v195) & 0x686A06F4);
  LOBYTE(v177) = v177 ^ v196;
  LOBYTE(STACK[0x894]) = v177 ^ 0x50;
  v197 = v191 - 1066925819;
  LOBYTE(v117) = (v170 ^ (v191 + 5) ^ 9 ^ v117) - 13 - ((2 * (v170 ^ (v191 + 5) ^ 9 ^ v117)) & 0xE6);
  v198 = v187 ^ (v179 + 1692992880);
  LOBYTE(v179) = v117 ^ (v181 - 13 - ((2 * v181) & 0xE6));
  LOBYTE(v117) = v117 ^ 5;
  LOBYTE(STACK[0x977]) = (v177 ^ v193 ^ v192 ^ 0xF3)
                       - 2 * ((v177 ^ v193 ^ v192 ^ 0xF3) & 0x2E ^ (v177 ^ v193 ^ v192) & 4)
                       + 42;
  LOBYTE(v177) = (v192 - ((2 * v192) & 0x46) - 93) ^ 0xD9 ^ v177;
  LOBYTE(STACK[0x807]) = v117 ^ v189;
  LOBYTE(STACK[0xA5A]) = v177 - ((2 * v177) & 0x55) + 42;
  LOBYTE(v177) = (v177 + 14 - ((2 * v177) & 0x1C)) ^ v194 ^ 0x1D;
  LOBYTE(STACK[0xAEA]) = v117;
  LOBYTE(STACK[0x8EA]) = v179 ^ 0xF6;
  LOBYTE(v117) = (v179 - 67 - ((2 * v179) & 0x7A)) ^ v198 ^ 0xBD;
  LOBYTE(STACK[0xB3D]) = v177 - ((2 * v177) & 0x55) + 42;
  LOBYTE(STACK[0x9CD]) = v117 ^ 0xF6;
  v199 = v193 ^ v192 ^ 0x589FB1F3 ^ v196;
  LOBYTE(v117) = v117 ^ (v191 + 27);
  v200 = (v196 ^ 0x3435037A) + (v193 ^ 0x6CAAB289);
  v201 = ((2 * v196) & 0x4336CC2C ^ 0x40220424) + (v196 ^ 0x15AE656C);
  v202 = v201 - 774428355 - 2 * (v201 & 0x51D7293F ^ v140 & 2);
  v203 = v191 + 1354433749;
  LOBYTE(v189) = (v191 + 5) ^ v189;
  v191 -= 503093477;
  LOBYTE(v177) = (v177 + 61 - ((2 * v177) & 0x7A)) ^ v202;
  LOBYTE(STACK[0x85A]) = v177 - ((2 * v177) & 0x55) + 42;
  LOBYTE(STACK[0xAB0]) = v117 ^ 0xF6;
  v204 = (v202 ^ 0xD1D7293D) + v199;
  LOBYTE(v189) = (((v183 ^ 0xEC) - 112) & 0x4E) - 78 + (v193 & 0x4E ^ 8) + v191 + v189;
  LOBYTE(v177) = v177 ^ v204;
  LOBYTE(STACK[0x93D]) = v177 - ((2 * v177) & 0x55) + 42;
  LOBYTE(v117) = v117 ^ v189;
  v205 = v197 + v188 + (v203 ^ 0x91486246) + ((2 * v203) & 0x2290C48C);
  v206 = v205 + 403687509 - ((2 * v205) & 0x301F90AA);
  LOBYTE(v205) = (v117 + 85 - ((2 * v117) & 0xAA)) ^ (v205 + 85 - ((2 * v205) & 0xAA));
  LOBYTE(v181) = (v205 - 67 - ((2 * v205) & 0x7A)) ^ v198 ^ 0xBD;
  LOBYTE(STACK[0x8B0]) = v205 ^ 0xF6;
  v207 = v200 + (v202 ^ 0xD1D7293D) + 1293750434 - ((2 * (v200 + (v202 ^ 0xD1D7293D))) & 0x9A3A2144);
  LOBYTE(v188) = (v177 - 94 - ((2 * v177) & 0x44)) ^ (v200 + (v202 ^ 0x3D) - 94 - ((2 * (v200 + (v202 ^ 0x3D))) & 0x44));
  LOBYTE(STACK[0xA20]) = v188 - ((2 * v188) & 0x55) + 42;
  LOBYTE(STACK[0x7CD]) = v117 ^ 0xF6;
  v208 = v206 ^ v191;
  LOBYTE(v177) = (v188 + 14 - ((2 * v188) & 0x1C)) ^ v194 ^ 0x1D;
  LOBYTE(STACK[0x993]) = v181 ^ 0xF6;
  LOBYTE(STACK[0xB03]) = v177 - ((2 * v177) & 0x55) + 42;
  LOBYTE(v200) = v189 + (v208 ^ 0xAA) + 32 - ((2 * (v189 + (v208 ^ 0xAA) + 1)) & 0x3E);
  v209 = ((2 * (v204 + (v207 ^ v202 ^ 0x6335C660) + 1)) & 0xEED7BFFE)
       + ((v204 + (v207 ^ v202 ^ 0x6335C660) + 1) ^ 0x776BDFFF);
  v210 = v198 - 237375593 + (v208 ^ 0x180FC855);
  LOBYTE(v192) = v207 ^ v202 ^ 0x9F;
  LOBYTE(v198) = v200 ^ 0x1F;
  LOBYTE(v189) = (v200 ^ 0x1F) + (v206 & 0x38 ^ 0x10 | v206 & 0x38 ^ 0x28);
  LOBYTE(v193) = v189 - ((2 * v189 - 112) & 0xAA);
  v211 = STACK[0x3C4];
  v212 = LODWORD(STACK[0x688]) ^ 0xB39D8213;
  LOBYTE(v189) = v200 ^ v208;
  LOBYTE(v208) = (v177 + 30 - ((2 * v177) & 0x3C)) ^ ((v192 ^ (v209 + 1)) + 30 - ((2 * (v192 ^ (v209 + 1))) & 0x3C));
  LOBYTE(STACK[0x820]) = v208 - ((2 * v208) & 0x55) + 42;
  LOBYTE(STACK[0xA76]) = v189 ^ (v181 - ((2 * v181) & 0x24) + 18) ^ 0xAE;
  LOBYTE(v200) = v189 ^ (v181 - ((2 * v181) & 0x24) + 18) ^ ((v200 ^ 0x1F) - 35) ^ (((v193 + 29) ^ v206)
                                                                                  + 31
                                                                                  - ((2 * ((v193 + 29) ^ v206)) & 0x3E)) ^ v200;
  LODWORD(STACK[0x680]) = v209 + 837745374;
  LOBYTE(STACK[0xB59]) = v189 ^ (v181 - ((2 * v181) & 0x24) + 18) ^ (v198 - 35) ^ 0xAE;
  LOBYTE(v193) = 2 * (v208 ^ (v209 - 34));
  LOBYTE(STACK[0x876]) = v200 ^ 0xAE;
  LODWORD(STACK[0x688]) = v210;
  LOBYTE(STACK[0x959]) = v200 ^ 0x58 ^ v210 ^ 0xF6;
  LOBYTE(STACK[0x903]) = (v208 ^ (v209 - 34)) - (v193 & 0x55) + 42;
  LOBYTE(STACK[0x9E6]) = (((v208 ^ (v209 - 34)) - 94 - (v193 & 0x44)) ^ v207)
                       - ((2 * (((v208 ^ (v209 - 34)) - 94 - (v193 & 0x44)) ^ v207)) & 0x55)
                       + 42;
  LOBYTE(STACK[0xAC9]) = ((v208 ^ (v209 - 34)) - 94 - (v193 & 0x44)) ^ v207 ^ (v212 - 105 + v192) ^ v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x690] + 8 * ((v13 + 14) ^ (2033 * (v211 != 1647269822)))) - 8))();
}

uint64_t sub_1CF2CA9F8()
{
  int v0;
  uint64_t v1;
  _BYTE *v2;
  unsigned int v3;
  unsigned int v4;
  char v5;
  _BOOL4 v6;

  LOBYTE(STACK[0xA16]) ^= *(_BYTE *)(v1 + (LODWORD(STACK[0x4B8]) - 1007561360));
  LOBYTE(STACK[0x7C0]) ^= v5 ^ *v2;
  v6 = v3 > 0x622F57BF;
  if (v3 < v4)
    v6 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x690] + 8 * ((56 * !v6) ^ (v0 + 6))) - 8))();
}

void sub_1CF2CAB90()
{
  JUMPOUT(0x1CF2CAA1CLL);
}

uint64_t sub_1CF2CAB98(int a1, int a2, int a3, int a4, int a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  unint64_t *v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  int v30;
  _DWORD *v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  unsigned int v52;
  int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  int v71;
  int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;

  v10 = a4 + (a2 ^ 0xB8AD064A);
  v11 = v8 - v10 + 1890068792 - ((2 * (v8 - v10 - 1899081870)) & 0xC3B3B38C);
  v12 = (((a2 ^ 0x4752F9B5) - 1363266325 + v10) ^ 0xCFEFFF95)
      + 2094749440
      + ((2 * ((a2 ^ 0x4752F9B5) - 1363266325 + v10)) & 0x9FDFFF2A);
  LODWORD(STACK[0x3F4]) = a6 ^ 0xD0ACADAF;
  v13 = LODWORD(STACK[0x680]) + a5;
  v14 = v9 ^ 0x39DA801E;
  v15 = (v9 ^ 0x39DA801E) + (v6 ^ 0x4D1D10A2);
  v16 = v9;
  v17 = a1 - v15 + 1124216396 - ((2 * (a1 - v15 + 392327027)) & 0x573F7DB2);
  LODWORD(STACK[0x668]) = LODWORD(STACK[0x688]) + 1903131381 + v8;
  LODWORD(STACK[0x3F0]) = a3 ^ 0x6B6EDDEE;
  LODWORD(STACK[0x650]) = v13 - 2 * ((v13 + 799944906) & 0x71EFDA73 ^ v13 & 1) - 1583477956;
  v18 = (((v16 ^ 0xC6257FE1) - 1363266325 + v15) ^ 0xEF731BFA)
      + 939392574
      + ((2 * ((v16 ^ 0xC6257FE1) - 1363266325 + v15)) & 0xDEE637F4);
  v19 = ((v14 + 1398581866) ^ 0xFCB07BED) + 1543499259 + ((2 * (v14 + 1398581866)) & 0xF960F7DA);
  LODWORD(STACK[0x680]) = v7 - 19;
  v20 = ((((v7 - 19) ^ 0xB00F5C49) + (a2 ^ 0xB8AD064A)) ^ 0x3FBFFFCF)
      - 36307584
      + ((2 * (((v7 - 19) ^ 0xB00F5C49) + (a2 ^ 0xB8AD064A))) & 0x7F7FFF9E);
  LODWORD(STACK[0x670]) = 0;
  v21 = (LODWORD(STACK[0x680]) - 485) | 0x220;
  LODWORD(STACK[0x688]) = v21;
  v22 = &STACK[0x7C0];
  v23 = *((unsigned __int8 *)&STACK[0x7C0]
        + (((1804735157 * (v21 ^ 0x2CAu) - 1652966408) % 0x3C6
          + 712431994
          - ((2 * ((1804735157 * (v21 ^ 0x2CAu) - 1652966408) % 0x3C6)) & 0x2F4)) ^ 0x2A76D97A));
  v24 = *((unsigned __int8 *)&STACK[0x7C0] + (1804735157 * (v21 ^ 0x2CAu) - 1652966635) % 0x3C6) ^ 0xF6;
  v25 = !(((1804735157 * (v21 ^ 0x2CAu) - 1652966408) % 0x3C6) & 1)
      + (((1804735157 * (v21 ^ 0x2CAu) - 1652966408) % 0x3C6) & 1)
      + 1804735157;
  LODWORD(STACK[0x660]) = v25;
  v26 = ((v24 << 24) | ((v23 ^ 0xF6) << 16)) - 1095603631 - ((2 * ((v24 << 24) | ((v23 ^ 0xF6) << 16))) & 0x7D640000);
  v27 = 227 * v25 - 1652966408;
  LODWORD(STACK[0x658]) = 227 * v25;
  v28 = 227 * v25 - 1652987746;
  v29 = *((unsigned __int8 *)v22
        + (-1120379584 - 391251167 * (v26 & 0x581B0000 ^ 0x18120000 | v26 & 0x581B0000 ^ 0x4009AA43))
        * (v25 - 1804735063)
        % 0x3C6) ^ (v20 + 1706512244) ^ ((*((unsigned __int8 *)v22 + v27 % 0x3C6) ^ 0xF6) << ((v23 & 8 ^ 8) + (v23 & 8))) ^ v26;
  v30 = v29 ^ 0x2A;
  v31 = (_DWORD *)STACK[0x678];
  *(_DWORD *)STACK[0x678] = v29 ^ 0xE3D5A2F0;
  v32 = ((*((unsigned __int8 *)v22 + 227 * (v25 - 1804735157) % 0x3C6) ^ 0x2A) << 16) | ((*((unsigned __int8 *)v22
                                                                                          + v28 % 0x3C6) ^ 0x2A) << 24) | ((*((unsigned __int8 *)v22 + (227 * v25 - 1652987292) % 0x3C6) ^ 0x2A) << 8) | *((unsigned __int8 *)v22 + (227 * v25 - 1652987065) % 0x3C6) ^ 0x2A;
  v33 = (v32 ^ (v19 - 1487956456)) + 1987330913 - ((2 * (v32 ^ (v19 - 1487956456))) & 0xECE886C2);
  v34 = ((v20 + 1706512244) ^ v11 ^ v30 ^ 0xA0944CB4)
      + ((((v20 + 1706512244) ^ v11 ^ v30 ^ 0x5F6BB397)
        + 1987330913
        - ((2 * ((v20 + 1706512244) ^ v11 ^ v30 ^ 0x5F6BB397)) & 0xECE886C2)) ^ v33 ^ 0xDC)
      + 1;
  v35 = (v17 ^ 0xD4604126) + (v17 ^ 0x5DEBFDB8 ^ v33) + 1;
  v31[189] = v33;
  v36 = v30 ^ 0xBEB26A8D;
  v37 = v11 ^ 0xE1D9D9C6 ^ (v12 - 1288394389);
  v38 = (v18 - 661723704) ^ v17 ^ 0x2B9FBED9;
  v39 = (v34 ^ (1487956456 - v19 + v32) ^ v35) - v18;
  v40 = v18 + v19;
  v41 = (LODWORD(STACK[0x668]) - 409366350) ^ 0x7448085F;
  v42 = v37 - v41 + 1744891712 - ((2 * (v37 - v41)) & 0xD001DE80);
  v43 = v19 - 1487956456 + v38;
  v44 = v37 + v20;
  v45 = v12 + v20;
  v31[209] = v12 + 563031451 + v36 + 1987330915 - ((2 * (v12 + 563031451 + v36 + 2)) & 0xECE886C2);
  v31[43] = v39 - ((2 * v39 - 1594713454) & 0xECE886C2) + 1189974186;
  v46 = LODWORD(STACK[0x650]) ^ 0x85A7D22D;
  v47 = v38 - v46 - 1733504486 - ((2 * (v38 - v46)) & 0x3159A434);
  v48 = *((unsigned __int8 *)&STACK[0x7C0] + (v27 + 1135) % 0x3C6) ^ 0x2A;
  v49 = ((*((unsigned __int8 *)v22 + (v27 + 454) % 0x3C6) ^ 0xF6) << 24) | ((*((unsigned __int8 *)v22
                                                                             + (v27 + 681) % 0x3C6) ^ 0xF6) << 16) | ((*((unsigned __int8 *)v22 + (v27 + 908) % (v42 & 0x3C6 ^ 0x340 | v42 & 0x3C6 ^ 0x86)) ^ 0xF6) << 8) | v48;
  v50 = (v49 + 1744891712 - 2 * (v49 & 0x6800EF46 ^ v48 & 6)) ^ v42;
  v31[149] = v50 ^ 0x5D67C88B;
  v51 = ((*((unsigned __int8 *)v22 + (v28 + 1135) % 0x3C6) ^ 0x2A) << 16) | ((*((unsigned __int8 *)v22
                                                                              + (v28 + 908) % 0x3C6) ^ 0x2A) << 24) | ((*((unsigned __int8 *)v22 + (v28 + 1362) % 0x3C6) ^ 0x2A) << 8) | *((unsigned __int8 *)v22 + (v28 + 1589) % 0x3C6) ^ 0x2A;
  v52 = v43 - 479199612;
  v31[63] = v51 ^ v47 ^ 0xEED8917B;
  v53 = (v50 ^ 0xDC) + v45 + 1883982990;
  v54 = (v45 + 1883982990) ^ 0x6800EF40 ^ v42;
  v55 = v45 - 1183671674 + v44;
  v56 = ((((v43 - 479199612) ^ 0x98ACD21A ^ v51 ^ v47) - v43 + 479199612) ^ ((v47 ^ 0x67532DE5) + v51 + 1) ^ ((v49 ^ (v44 + 1227312632) ^ 0xFFFFFF23) + (((v49 ^ (v44 + 1227312632)) + 1987330913 - ((2 * (v49 ^ (v44 + 1227312632))) & 0xECE886C2)) ^ v51 ^ v47 ^ 0xEED891A7) + 1))
      - (v40
       + 1205970539);
  v57 = v41 - v44 + 106791038;
  v58 = v47 ^ (v40 - 683815025) ^ 0x98ACD21A;
  v59 = v40 - 1163014637 + v43;
  v60 = v46 - v43 + 1813303282;
  v61 = ((2 * (v54 - (v57 ^ v55))) & 0xEFBF768E) + ((v54 - (v57 ^ v55)) ^ 0x77DFBB47);
  v62 = v52 - v60;
  v63 = v59 ^ v60;
  v31[83] = v53 - 456210541 - ((2 * v53 - 592115612) & 0xECE886C2);
  v31[192] = v56 - ((2 * v56 + 861410266) & 0xECE886C2) - 1876931250;
  v64 = v44 - v57 - 783838543 + v61;
  v65 = v59 - v58 + 40944101 - ((2 * (v59 - v58)) & 0x4E183CA);
  v66 = ((2 * (v58 - v63)) & 0xBBFE9BE8) + ((v58 - v63) ^ 0x5DFF4DF4);
  v67 = v55 - v54 + 623238536 - ((2 * (v55 - v54)) & 0x4A4BBB10);
  v68 = (((*((unsigned __int8 *)v22 + (v27 + 1362) % 0x3C6) ^ 0xF6) << 24) | ((*((unsigned __int8 *)v22
                                                                               + (v27 + 1589) % 0x3C6) ^ 0xF6) << 16) | ((*((unsigned __int8 *)v22 + (v27 + 1816) % 0x3C6) ^ 0xF6) << 8) | *((unsigned __int8 *)v22 + (v27 + 2043) % 0x3C6) ^ 0x2A) ^ v67;
  v31[23] = v68 ^ 0x78421503;
  v69 = *((unsigned __int8 *)&STACK[0x7C0] + (v28 + 1816) % 0x3C6);
  v70 = v66 + v62;
  v71 = LODWORD(STACK[0x660]) - 576727681;
  v72 = LODWORD(STACK[0x658]) - 2068164707;
  LOBYTE(v53) = *((_BYTE *)&STACK[0x7C0]
                + (LODWORD(STACK[0x660]) - 1804735149) * (((v69 ^ 0xC1) & 0xFFFFFFE3) + (v69 & 0xFFFFFFE3 ^ 0x22))
                % 0x3C6);
  v73 = (((v69 ^ 0x2A) << 24) | ((v53 ^ 0x2A) << 16) | ((*((unsigned __int8 *)v22
                                                                          + (LODWORD(STACK[0x658]) - 1652985476)
                                                                          % 0x3C6u) ^ 0x2A) << 8) | *((unsigned __int8 *)v22 + (LODWORD(STACK[0x658]) - 1652985249) % 0x3C6u) ^ 0x2A) ^ v65;
  v31[212] = v73 ^ 0x74048284;
  v74 = ((2 * (v65 ^ v63)) & 0xFFD5F7DA ^ 0x4C183CA) + (v65 ^ v63 ^ 0x7D9A3A08);
  v75 = ((2 * (v67 ^ v57 ^ v55)) & 0xBE157FDE ^ 0xA013B10) + (v67 ^ v57 ^ v55 ^ 0x7A2F6267);
  v76 = v61 - 2011151175;
  v77 = (v64 + 1987330913 - ((2 * v64) & 0xECE886C2)) ^ (v61 - 2011151175) ^ v73 ^ 0x74048284;
  v78 = ((2 * ((v73 ^ 0x270C1E5) + (v67 ^ 0x2525DD88))) & 0x8FBFD36E)
      + (((v73 ^ 0x270C1E5) + (v67 ^ 0x2525DD88)) ^ 0x47DFE9B7);
  v79 = v61 - v75;
  v80 = (v65 ^ 0xFD8F3E1A)
      + ((1577012724 - v66 + (v68 ^ 0x2525DD54 ^ (v66 - 1577012724))) ^ (1577012724
                                                                       - v70
                                                                       + (v68 ^ 0x2525DD54 ^ (v70 - 1577012724))) ^ ((v68 ^ 0x5FC922EA ^ (v77 - ((2 * v77) & 0xF5D9FF7C) + 2062352318)) - v77))
      + 1;
  v81 = v76 + v64;
  v82 = ((2 * ((v67 ^ 0x2525DD88) - v79 + 416611160)) & 0x6B1FF2F6)
      + (((v67 ^ 0x2525DD88) - v79 + 416611160) ^ 0xB58FF97B);
  v83 = ((2 * ((v65 ^ 0x270C1E5) - (v66 - v74) - 569093625)) & 0x7DFF93AE)
      + (((v65 ^ 0x270C1E5) - (v66 - v74) - 569093625) ^ 0x3EFFC9D7);
  v84 = ((2 * ((v82 + 1248855685) ^ v81)) & 0xF8DFFB9E) + ((v82 + 1248855685) ^ v81 ^ 0x7C6FFDCF);
  v31[232] = v78 - ((2 * v78 + 1291138294) & 0xECE886C2) - 1662067236;
  v85 = ((2 * ((v83 - 1056950743) ^ (v66 + 1140941848 + v70))) & 0xDDF0EDFC)
      + ((v83 - 1056950743) ^ (v66 + 1140941848 + v70) ^ 0xEEF876FE);
  v31[66] = v80 + 528250482 - ((2 * v80 + 1376806434) & 0xECE886C2);
  v86 = v71 + ((((v53 & 0xC6 ^ 2) + (v53 & 0xC6 ^ 0xC4)) ^ 0x43) + 124);
  v87 = ((*((unsigned __int8 *)v22 + (v72 + 415200569) % 0x3C6u) ^ 0xF6) << 24) | ((*((unsigned __int8 *)v22
                                                                                    + (v72 + 415200796) % 0x3C6u) ^ 0xF6) << 16) | ((*((unsigned __int8 *)v22 + (227 * v86 + 415200796) % 0x3C6u) ^ 0xF6) << 8);
  v88 = v75 - ((2 * v75 + 1286864780) & 0xF48B1B44) + 547327336;
  v89 = (v87 | *((unsigned __int8 *)&STACK[0x7C0] + (227 * v86 + 415201023) % 0x3C6u) ^ 0x2A) ^ v88;
  v31[172] = v89 ^ 0xA7224529;
  v90 = (227 * v86 + 415179685) % 0x3C6u - 26587733 - ((2 * ((227 * v86 + 415179685) % 0x3C6u)) & 0x356);
  v91 = (((*((unsigned __int8 *)v22 + (v90 ^ 0xFE6A4DAB)) ^ 0x2A) << 16) | ((*((unsigned __int8 *)v22
                                                                             + (227 * v86 + 415179458) % 0x3C6u) ^ 0x2A) << 24) | ((*((unsigned __int8 *)v22 + (((v90 & 0x61 ^ 0x21) + (v90 & 0x61 ^ 0x40)) | ((219 - v75 - ((114 - 2 * v75) & 0x44444444)) ^ v88) & 0xC2) * (v86 - 1228007464) % 0x3C6) ^ 0x2A) << 8) | *((unsigned __int8 *)&STACK[0x7C0] + (227 * v86 + 415180139) % 0x3C6u) ^ 0x2A) ^ (v74 + 91866056);
  v31[86] = v91 ^ 0x76744361;
  v92 = STACK[0x670];
  v93 = ((-285706498 - v85 + (v89 ^ 0xFA458D7E ^ (v85 + 285706498))) ^ ((v89 ^ 0xFA458D7E ^ (v66 - v74 - v83 + 1626044368))
                                                                      - (v66
                                                                       - v74
                                                                       - v83)
                                                                      - 1626044368) ^ ((v89 ^ 0x3FA6472E ^ (((v84 - 2087714255) ^ (v79 - v82 - 1665466845) ^ v91) - ((2 * ((v84 - 2087714255) ^ (v79 - v82 - 1665466845) ^ v91)) & 0x8BC794A0) - 974927280))
                                                                                     - ((v84 - 2087714255) ^ (v79 - v82 - 1665466845) ^ v91)))
      - (v83
       + v74);
  v31[106] = v82 + v75 - 345684330 + v91 - 456210541 - ((2 * (v82 + v75 - 345684330 + v91) - 592115612) & 0xECE886C2);
  v31[215] = v93 - ((2 * v93 - 807013974) & 0xECE886C2) - 563659722;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x690]
                                        + 8 * ((1007 * ((v92 + 4) < 0x10)) ^ LODWORD(STACK[0x680])))
                            - 4))();
}

void sub_1CF2CC054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;

  LODWORD(STACK[0x668]) = v6;
  LODWORD(STACK[0x650]) = a6 ^ 0x46D7C0D3;
  JUMPOUT(0x1CF2CAD9CLL);
}

uint64_t sub_1CF2CC08C(int a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  unint64_t v18;
  unsigned int v19;
  __int16 v20;
  unsigned int v21;
  int v22;
  unint64_t v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  int v29;
  unsigned int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unint64_t *v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  int v71;
  int v72;
  unsigned int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  int v97;
  int v98;
  unsigned int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  unsigned int v104;
  int v105;
  char v106;
  int v107;
  unsigned int v108;
  int v109;
  int v110;
  int v111;
  unsigned int v112;
  int v113;
  int v114;
  int v115;
  unsigned int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  unsigned int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  int v128;
  int v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  int v152;
  int v153;
  unsigned int v154;
  int v155;
  int v156;
  unsigned int v157;
  int v158;
  int v159;

  v13 = v9 + 1231986752;
  v14 = (((a1 ^ 0xA8B023C4) - 77262770) ^ 0x8FF9B6BF) + 1962921840 + ((2 * ((a1 ^ 0xA8B023C4) - 77262770)) & 0x1FF36D7E);
  v15 = (((a6 ^ a8) + 710647145) ^ 0xDDFBFFEF) + 1919343519 + ((2 * ((a6 ^ a8) + 710647145)) & 0xBBF7FFDE);
  v16 = -1535016912 - a5;
  LODWORD(STACK[0x638]) = 16 * (LOBYTE(STACK[0xA55]) ^ v10);
  v17 = STACK[0x688];
  LODWORD(STACK[0x680]) = 0;
  LODWORD(STACK[0x63C]) = 149;
  v18 = STACK[0x678];
  v19 = *(_DWORD *)(STACK[0x678] + 596);
  LODWORD(STACK[0x630]) = (v17 + 1820454333) & 0x937E15BB;
  v20 = 23908 * (((v17 - 4675) & 0x15BB) - 1293);
  v21 = *(_DWORD *)(v18
                  + 4
                  * (unsigned __int16)(v20
                                     - 2935
                                     - 275
                                     * ((unsigned __int16)(((56481
                                                                            * (unsigned __int16)(v20 - 2935)) >> 16)
                                                                          + ((unsigned __int16)((v20
                                                                                               - 2935
                                                                                               - ((56481
                                                                                                 * (unsigned __int16)(v20 - 2935)) >> 16)) & 0xFFFE) >> 1)) >> 8)));
  LODWORD(STACK[0x640]) = 2086;
  HIDWORD(v23) = v19 ^ 0x3C857;
  LODWORD(v23) = v19 ^ 0x5D640000;
  v22 = v23 >> 18;
  HIDWORD(v23) = v21 ^ 0x4361;
  LODWORD(v23) = v21 ^ 0x76740000;
  v24 = v23 >> 18;
  v25 = (v21 ^ 0x76744361) >> ((v19 >> 3) & 7 ^ 2 | (v19 >> 3) & 7 ^ 5);
  HIDWORD(v23) = v19 ^ 0x57;
  LODWORD(v23) = v19 ^ 0x5D67C800;
  v26 = *(_DWORD *)(v18 + 644);
  v27 = *(_DWORD *)(v18
                  + 4
                  * (unsigned __int16)(v20
                                     - 998
                                     - 275
                                     * ((unsigned __int16)(((56481
                                                                            * (unsigned __int16)(v20 - 998)) >> 16)
                                                                          + ((unsigned __int16)((v20
                                                                                               - 998
                                                                                               - ((56481
                                                                                                 * (unsigned __int16)(v20 - 998)) >> 16)) & 0xFFFE) >> 1)) >> 8)));
  v28 = (v23 >> 7) ^ (v19 >> 3) ^ v22;
  HIDWORD(v23) = v26 ^ 0x1C857;
  LODWORD(v23) = v26 ^ 0x5D660000;
  v29 = v23 >> 17;
  v30 = v25 + ((v21 << 25) ^ 0xC2000000);
  HIDWORD(v23) = v26 ^ 0x7C857;
  LODWORD(v23) = v26 ^ 0x5D600000;
  v31 = v23 >> 19;
  HIDWORD(v23) = v27 ^ 0x4361;
  LODWORD(v23) = v27 ^ 0x76740000;
  v32 = (v26 >> 10) ^ 0x1759F2 ^ v29 ^ v31;
  v33 = (v23 >> 17) ^ (v27 >> 10);
  HIDWORD(v23) = v27 ^ 0x44361;
  LODWORD(v23) = v27 ^ 0x76700000;
  v34 = v33 ^ (v23 >> 19);
  v35 = v24 ^ (v21 >> 3) ^ v30 ^ 0xECE886C;
  v13 += 474525492;
  v36 = v16 + 409366350 + v13;
  v37 = a4 - v15;
  v38 = ((a7 ^ 0xD4604126) + (a7 ^ 0x203347D3 ^ v28) + 1) ^ (1487956456 - a4 + ((a4 - 1487956456) ^ 0xBACF90A ^ v28)) ^ ((v28 ^ 0xEADA23D2 ^ ((v13 ^ (v14 - 6198909) ^ v35) - ((2 * (v13 ^ (v14 - 6198909) ^ v35)) & 0xC2EDB5B0) - 512304424)) - (v13 ^ (v14 - 6198909) ^ v35));
  v39 = ((v11 - 1288394389) ^ (v8 - 409366350))
      - v36
      + 882026134
      - ((2 * (((v11 - 1288394389) ^ (v8 - 409366350)) - v36)) & 0x69254D2C);
  v40 = ((a4 + 659527192) & 0x4C874FA0) + v8 - 409366350 + ((a4 + 659527192) & 0x4C874FA0 ^ 0x4C874FA0);
  v41 = v36 - v40;
  v42 = v36 - v40 + 1857527226;
  v43 = (v15 - 2059303159) ^ (v12 - 661723704);
  v44 = v14 + 988955029 + v42;
  v45 = v15 - 775366999;
  v46 = a4 - v15 - v15;
  v47 = v46 + (a7 ^ 0x2B9FBED9);
  v48 = v11;
  v49 = ((2 * (v43 + v37 - 2 * v37 - 571346703)) & 0x87FDFFD4) + ((v43 + v37 - 2 * v37 - 571346703) ^ 0xC3FEFFEA);
  v50 = ((v49 + 1006698518) ^ v45) - v46 - 1346713702;
  LODWORD(STACK[0x668]) = v50;
  LODWORD(STACK[0x670]) = v39;
  v51 = (v40 + 882026134 - 2 * (v40 & 0x3492A697 ^ v8 & 1)) ^ v39;
  HIDWORD(v23) = v49 + 65558;
  LODWORD(v23) = v49 + 1006698518;
  LODWORD(STACK[0x660]) = v23 >> 26;
  v52 = v51 - v41 + 80068585 - ((2 * (v51 - v41)) & 0x98B7FD2);
  LODWORD(STACK[0x658]) = v46 - v49;
  LODWORD(STACK[0x648]) = v44 + (v39 ^ 0x3492A696) + 80068585 - ((2 * (v44 + (v39 ^ 0x3492A696))) & 0x98B7FD2);
  LODWORD(STACK[0x64C]) = (v39 ^ 0xCB6D5969) + v42 - ((2 * ((v39 ^ 0xCB6D5969) + v42) + 579912846) & 0x69254D2C);
  LODWORD(STACK[0x650]) = v47 + 911126088 + v49;
  v53 = v48
      + (*(_DWORD *)(v18
                   + 4
                   * (unsigned __int16)(v20
                                      - 13514
                                      - 275
                                      * ((unsigned __int16)(((56481
                                                                             * (unsigned __int16)(v20 - 13514)) >> 16)
                                                                           + ((unsigned __int16)((v20
                                                                                                - 13514
                                                                                                - ((56481
                                                                                                  * (unsigned __int16)(v20 - 13514)) >> 16)) & 0xFFFE) >> 1)) >> 8))) ^ 0x76744361)
      - v49
      + (*(_DWORD *)(v18
                   + 4
                   * (unsigned __int16)(v20
                                      - 12173
                                      - 275
                                      * ((unsigned __int16)(((56481
                                                                             * (unsigned __int16)(v20 - 12173)) >> 16)
                                                                           + ((unsigned __int16)((v20
                                                                                                - 12173
                                                                                                - ((56481
                                                                                                  * (unsigned __int16)(v20 - 12173)) >> 16)) & 0xFFFE) >> 1)) >> 8))) ^ 0x76744361)
      + v35
      - 1702977295
      + (((v34 ^ 0x1D9D10 ^ (v47 - 95572430)) - v47 + 95572430) ^ (-1346713702
                                                                 - v46
                                                                 + (v34 ^ 0x1D9D10 ^ (v46 + 1346713702))) ^ ((v34 ^ ((v44 ^ v41 ^ v32) - ((2 * (v44 ^ v41 ^ v32)) & 0x252E5344) + 311896482) ^ 0x128AB4B2) - (v44 ^ v41 ^ v32)));
  v54 = (v50 ^ 0xEBB34B6F) + v53;
  *(_DWORD *)(v18
            + 4
            * (unsigned __int16)(v20
                               - 11130
                               - 275
                               * ((unsigned __int16)(((56481
                                                                      * (unsigned __int16)(v20 - 11130)) >> 16)
                                                                    + ((unsigned __int16)((v20
                                                                                         - 11130
                                                                                         - ((56481
                                                                                           * (unsigned __int16)(v20 - 11130)) >> 16)) & 0xFFFE) >> 1)) >> 8))) = v53 - 456210541 - ((2 * v53 - 592115612) & 0xECE886C2);
  LOWORD(v43) = v20;
  v55 = (v39 ^ 0x3492A696)
      - v12
      + v32
      + (*(_DWORD *)(v18
                   + 4
                   * (unsigned __int16)(v20
                                      + 7495
                                      - 275
                                      * ((unsigned __int16)(((56481
                                                                             * (unsigned __int16)(v20 + 7495)) >> 16)
                                                                           + ((unsigned __int16)((v20
                                                                                                + 7495
                                                                                                - ((56481
                                                                                                  * (unsigned __int16)(v20 + 7495)) >> 16)) & 0xFFFE) >> 1)) >> 8))) ^ 0x76744361)
      + (*(_DWORD *)(v18
                   + 4
                   * (unsigned __int16)(v20
                                      + 8836
                                      - 275
                                      * ((unsigned __int16)(((56481
                                                                             * (unsigned __int16)(v20 + 8836)) >> 16)
                                                                           + ((unsigned __int16)((v20
                                                                                                + 8836
                                                                                                - ((56481
                                                                                                  * (unsigned __int16)(v20 + 8836)) >> 16)) & 0xFFFE) >> 1)) >> 8))) ^ 0x76744361)
      - 715082730
      + v38;
  LOWORD(v38) = v20
              + 9879
              - 275
              * ((unsigned __int16)(((56481 * (unsigned __int16)(v20 + 9879)) >> 16)
                                                   + ((unsigned __int16)((v20
                                                                        + 9879
                                                                        - ((56481
                                                                          * (unsigned __int16)(v20 + 9879)) >> 16)) & 0xFFFE) >> 1)) >> 8);
  v56 = v55 + (v52 ^ 0x10890B79) + 171119850 - ((2 * (v55 + (v52 ^ 0x10890B79))) & 0x146629D4);
  *(_DWORD *)(v18 + 4 * (unsigned __int16)v38) = v55 + 528250482 - ((2 * v55 + 1376806434) & 0xECE886C2);
  LOBYTE(v27) = v54 - 7;
  v57 = v54 + 348224761 - ((2 * v54 + 2) & 0x2982F9F0);
  v58 = &STACK[0x7C0];
  v59 = 227 * (HIBYTE(v56) & 0xF ^ 0xA) + 16117;
  v60 = ((*((unsigned __int8 *)v58
          + (unsigned __int16)(v59 - 966 * ((unsigned __int16)((2171 * v59) >> 16) >> 5))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v58 + (unsigned __int16)(227 * (v56 >> 28) + 16117 - 966 * ((unsigned __int16)((2171 * (227 * (v56 >> 28) + 16117)) >> 16) >> 5))) ^ 0x2A) << 12);
  v61 = 227 * ((v56 >> 20) & 0xF ^ 3) + 16117;
  v62 = 227 * (HIWORD(v56) & 0xF ^ 3) + 16117;
  v63 = v60 | *((unsigned __int8 *)&STACK[0x7C0]
              + (unsigned __int16)(v62 - 966 * ((unsigned __int16)((2171 * v62) >> 16) >> 5))) ^ 0x2A;
  v64 = 227 * (((unsigned __int16)v56 >> 12) ^ 1) + 16117;
  v65 = (v63 << 8) ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                       + (unsigned __int16)(v61 - 966 * ((unsigned __int16)((2171 * v61) >> 16) >> 5))) ^ 0x2A) << 12);
  v66 = 227 * ((v56 >> 8) & 0xF ^ 4) + 16117;
  v67 = v65 | *((unsigned __int8 *)&STACK[0x7C0]
              + (unsigned __int16)(v66 - 966 * ((unsigned __int16)((2171 * v66) >> 16) >> 5))) ^ 0x2A;
  v68 = (v67 << 8) + 731310686 - ((v67 << 9) & 0x572DD400);
  v69 = v68 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                + (unsigned __int16)(v64 - 966 * ((unsigned __int16)((2171 * v64) >> 16) >> 5))) ^ 0x2A) << 12);
  v70 = 227 * ((v56 >> 4) ^ 0xE) + 16117;
  v71 = *((unsigned __int8 *)&STACK[0x7C0]
        + (unsigned __int16)(227 * (v56 & 0xF ^ 0xA)
                           + 16117
                           - 966 * ((unsigned __int16)((2171 * (227 * (v56 & 0xF ^ 0xA) + 16117)) >> 16) >> 5))) ^ 0x2A;
  v72 = 227 * (HIBYTE(v57) & 0xF ^ 4) + 16117;
  LOWORD(v35) = v72 - 966 * ((unsigned __int16)((2171 * v72) >> 16) >> 5);
  v73 = (v69 ^ 0x2B96EA5E | v71) ^ (16
                                  * (*((unsigned __int8 *)&STACK[0x7C0]
                                     + (unsigned __int16)(v70
                                                        - 966
                                                        * ((unsigned __int16)((2171 * v70) >> 16) >> 5))) ^ 0x2A));
  v74 = 227 * ((v57 >> 20) & 0xF ^ 0xC) + 16117;
  v75 = *((unsigned __int8 *)&STACK[0x7C0] + (unsigned __int16)v35) ^ 0x2A;
  v76 = 227 * (HIWORD(v57) & 0xF ^ 1) + 16117;
  v77 = ((v75 << 8) ^ ((*((unsigned __int8 *)v58
                        + (unsigned __int16)(227 * ((v57 >> 28) ^ 1)
                                           + 16117
                                           - 966
                                           * ((unsigned __int16)((2171 * (227 * ((v57 >> 28) ^ 1) + 16117)) >> 16) >> 5))) ^ 0x2A) << 12) | *((unsigned __int8 *)v58 + (unsigned __int16)(v76 - 966 * ((unsigned __int16)((2171 * v76) >> 16) >> 5))) ^ 0x2A) ^ (16 * (*((unsigned __int8 *)v58 + (unsigned __int16)(v74 - 966 * ((unsigned __int16)((2171 * v74) >> 16) >> 5))) ^ 0x2A));
  v78 = 227 * (((unsigned __int16)v57 >> 12) ^ 7) + 16117;
  v79 = 227 * ((v57 >> 8) & 0xF ^ 0xC) + 16117;
  v80 = 227 * (~(v57 >> 4) & 0xF) + 16117;
  v81 = *((unsigned __int8 *)&STACK[0x7C0]
        + (unsigned __int16)(v80 - 966 * ((unsigned __int16)((2171 * v80) >> 16) >> 5))) ^ 0x2A;
  LOBYTE(v47) = 16 * v81;
  v82 = v71 & 0xF;
  v83 = (v77 << 16) + 1628914614 - ((v77 << 17) & 0xC22E0000);
  v84 = (v83 ^ 0x611743B6)
      + ((*((unsigned __int8 *)&STACK[0x7C0]
          + (unsigned __int16)(v79 - 966 * ((unsigned __int16)((2171 * v79) >> 16) >> 5))) ^ 0x2A) << 8);
  v85 = v84 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                + (unsigned __int16)(v78 - 966 * ((unsigned __int16)((2171 * v78) >> 16) >> 5))) ^ 0x2A) << 12);
  v86 = v84 ^ (16 * v81 - ((32 * v81) & 0xFFFFFE3F) + 1819);
  LOBYTE(v78) = *((_BYTE *)&STACK[0x7C0]
                + (unsigned __int16)(227 * (v27 & 0xF ^ 8)
                                   + 16117
                                   - 966 * ((unsigned __int16)((2171 * (227 * (v27 & 0xF ^ 8) + 16117)) >> 16) >> 5))) ^ 0x2A;
  LOBYTE(v84) = v47 ^ v78;
  v87 = 227 * (v82 & 0xFFFFFF0F | (16 * (v78 & 0xF)));
  v88 = *((unsigned __int8 *)&STACK[0x7C0]
        + (v87 + 100561 - 966 * ((4446136 * (unint64_t)(v87 + 100561)) >> 32))) ^ LODWORD(STACK[0x638]) ^ 0x2A;
  v89 = (*((unsigned __int8 *)&STACK[0x7C0]
         + (227 * v88
                        + 36489
                        - 966 * ((4446136 * (unint64_t)(227 * v88 + 36489)) >> 32))) >> 4) ^ 2;
  v90 = 227
      * ((v89 + (~(2 * v89) | 0xEB) + 43) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                             + (v87
                                                                            + 37455
                                                                            - 966
                                                                            * ((4446136 * (unint64_t)(v87 + 37455)) >> 32))))
      + 100561;
  v91 = 227 * (v84 & 0xF0 | (v73 >> 4));
  v92 = 227
      * (*((unsigned __int8 *)v58
         + (v91 + 100561 - 966 * ((4446136 * (unint64_t)(v91 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v58 + (v90 - 966 * ((4446136 * (unint64_t)v90) >> 32))) ^ 0x2A)) ^ 0x2A);
  v93 = v92 + 100561 - 966 * ((4446136 * (unint64_t)(v92 + 100561)) >> 32);
  v94 = *((unsigned __int8 *)&STACK[0x7C0]
        + (v92 + 37455 - 966 * ((4446136 * (unint64_t)(v92 + 37455)) >> 32)));
  v95 = 227
      * ((((v94 >> 4) ^ 2) + ((v94 >> 3) & 0x14 ^ 0xFB) + 43) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                                 + (v91
                                                                                                + 37455
                                                                                                - 966
                                                                                                * ((4446136
                                                                                                  * (unint64_t)(v91 + 37455)) >> 32))))
      + 100561;
  v96 = 227 * (((v86 >> 4) & 0xF0 | (v73 >> 8) & 0xF) ^ 0x70);
  v97 = ((unsigned __int16)v69 >> 12) ^ 0xE;
  v98 = 227
      * (*((unsigned __int8 *)v58
         + (v96 + 100561 - 966 * ((4446136 * (unint64_t)(v96 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v58 + (v95 - 966 * ((4446136 * (unint64_t)v95) >> 32))) ^ 0x2A)) ^ 0x2A);
  v99 = v98 + 100561 - 966 * ((4446136 * (unint64_t)(v98 + 100561)) >> 32);
  v100 = (*((unsigned __int8 *)&STACK[0x7C0]
          + (v98 + 37455 - 966 * ((4446136 * (unint64_t)(v98 + 37455)) >> 32))) >> 4) ^ 2;
  v101 = (v100 - ((2 * v100) & 0x55) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                              + (v96
                                                                             + 37455
                                                                             - 966
                                                                             * ((4446136
                                                                               * (unint64_t)(v96 + 37455)) >> 32)));
  v102 = 227 * ((v85 >> 8) & 0xF0 | v97);
  v103 = 227
       * (*((unsigned __int8 *)v58
          + (v102 + 100561 - 966 * ((4446136 * (unint64_t)(v102 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v58 + (227 * v101 + 100561 - 966 * ((4446136 * (unint64_t)(227 * v101 + 100561)) >> 32))) ^ 0x2A)) ^ 0x2A);
  v104 = v103 + 100561 - 966 * ((4446136 * (unint64_t)(v103 + 100561)) >> 32);
  v105 = *((unsigned __int8 *)&STACK[0x7C0]
         + (v103 + 37455 - 966 * ((4446136 * (unint64_t)(v103 + 37455)) >> 32))) >> 4;
  LOBYTE(v42) = v105 ^ 2;
  v106 = (v105 ^ 2) & 0xE ^ v105 & 4;
  v107 = *((unsigned __int8 *)&STACK[0x7C0] + v99) ^ 0x2A;
  v108 = 227
       * ((v42 - 2 * v106 + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                   + (v102
                                                                  + 37455
                                                                  - 966
                                                                  * ((4446136
                                                                    * (unint64_t)(v102 + 37455)) >> 32))))
       + 100561;
  v109 = v108 - 966 * ((4446136 * (unint64_t)v108) >> 32);
  v110 = HIWORD(v69) & 0xF ^ 6;
  v111 = 227 * ((v85 >> 12) & 0xF0 | v110);
  v112 = ((*((unsigned __int8 *)&STACK[0x7C0] + v104) ^ 0x2A) << 12) ^ (v107 << 8);
  v113 = 227
       * (*((unsigned __int8 *)v58
          + (v111 + 100561 - 966 * ((4446136 * (unint64_t)(v111 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v58 + ((v109 + 599731824 - ((2 * v109) & 0x4E0)) ^ 0x23BF2E70u)) ^ 0x2A)) ^ 0x2A);
  v114 = *((unsigned __int8 *)&STACK[0x7C0]
         + (v113 + 100561 - 966 * ((4446136 * (unint64_t)(v113 + 100561)) >> 32)));
  v115 = *((unsigned __int8 *)&STACK[0x7C0]
         + (v113 + 37455 - 966 * ((4446136 * (unint64_t)(v113 + 37455)) >> 32))) >> 4;
  v116 = 227
       * (((v115 ^ 2) - 2 * ((v115 ^ 2) & 0xE ^ v115 & 4) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                                   + (v111
                                                                                                  + 37455
                                                                                                  - 966 * ((4446136 * (unint64_t)(v111 + 37455)) >> 32))))
       + 100561;
  v117 = v116 - 966 * ((4446136 * (unint64_t)v116) >> 32);
  v118 = v117 + 1917486729 - ((2 * v117) & 0x512);
  v119 = 227
       * ((v68 >> 20) & 0xF ^ 9 ^ ((unint64_t)((v83 >> 20) & 0xF ^ 1) << ((v118 & 0xF8 ^ 0x88 | v118 & 0xF8 ^ 0x70) ^ 0xFCu)));
  v120 = *((unsigned __int8 *)&STACK[0x7C0] + (v119 + 100561) % 0x3C6u);
  v121 = 227
       * (((v120 ^ 0x2A) - 1389490175 - 2 * (v120 & 1)) ^ (16
                                                         * (*((unsigned __int8 *)&STACK[0x7C0] + (v118 ^ 0x724A8689u)) ^ 0x2A)
                                                         - 1389490175));
  v122 = (*((unsigned __int8 *)&STACK[0x7C0] + (v121 + 37455) % 0x3C6u) >> 4) ^ 2;
  v123 = ((*((unsigned __int8 *)&STACK[0x7C0] + (v121 + 100561) % 0x3C6u) ^ 0x2A) << 20) ^ ((v114 ^ 0x2A) << 16);
  v124 = (v122 - ((2 * v122) & 0x55) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                              + (v119 + 37455) % 0x3C6u);
  v125 = ((v83 >> 20) & 0xF0 | HIBYTE(v68) & 0xF) ^ 0x1B;
  v126 = 227
       * (*((unsigned __int8 *)v58
          + (227 * v125
                         + 100561
                         - 966 * ((4446136 * (unint64_t)(227 * v125 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v58 + (227 * v124 + 100561 - 966 * ((4446136 * (unint64_t)(227 * v124 + 100561)) >> 32))) ^ 0x2A)) ^ 0x2A);
  v127 = (v125 + 165) * ((v77 & 0xE3 ^ 0xE3) + (v77 & 0xE3))
       - 966 * ((4446136 * (unint64_t)((v125 + 165) * ((v77 & 0xE3 ^ 0xE3) + (v77 & 0xE3u)))) >> 32);
  v128 = *((unsigned __int8 *)&STACK[0x7C0]
         + (v126 + 37455 - 966 * ((4446136 * (unint64_t)(v126 + 37455)) >> 32))) >> 4;
  v129 = *((unsigned __int8 *)&STACK[0x7C0]
         + (227 * v88
                        + 100561
                        - 966 * ((4446136 * (unint64_t)(227 * v88 + 100561)) >> 32))) ^ 0x2A;
  v130 = v129 ^ (16 * (*((unsigned __int8 *)&STACK[0x7C0] + v93) ^ 0x2A));
  v131 = 227
       * (((v128 ^ 2) - 2 * ((v128 ^ 2) & 0xE ^ v128 & 4) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                                   + v127))
       + 100561;
  v132 = 227 * ((HIBYTE(v83) & 0xF0 | (v68 >> 28)) ^ 0x62) + 100561;
  v133 = 227
       * (*((unsigned __int8 *)v58 + (v132 - 966 * ((4446136 * (unint64_t)v132) >> 32))) ^ (16 * (*((unsigned __int8 *)v58 + (v131 - 966 * ((4446136 * (unint64_t)v131) >> 32))) ^ 0x2A)) ^ 0x2A)
       + 100561;
  v134 = v123 ^ v112 ^ v130;
  v135 = v134 ^ ((*((unsigned __int8 *)v58
                  + (v126
                                 + 100561
                                 - 966 * ((4446136 * (unint64_t)(v126 + 100561)) >> 32))) ^ 0x2A) << 24) ^ ((*((unsigned __int8 *)v58 + (v133 - 966 * ((4446136 * (unint64_t)v133) >> 32))) ^ 0xAAAAAAAA) << 28);
  v136 = 227 * (v82 & 0xFFFFFF0F | (16 * (v129 & 0xF))) + 159354;
  v137 = v136 - 966 * ((4446136 * (unint64_t)v136) >> 32);
  v138 = v137 - 809568807 - ((2 * v137) & 0x3B2);
  v139 = (227 * ((v130 & 0xF0 | (v73 >> 4)) + (v138 & 0x2B6 ^ 0x90 | v138 & 0x2B6 ^ 0xDFE14E26))
        + 2067374872)
       % 0x3C6;
  v140 = 227 * (((v112 ^ v130) >> 4) & 0xF0 | (v73 >> 8) & 0xF) + 159354;
  v141 = 227 * ((v112 >> 8) & 0xF0 | v97) + 159354;
  v142 = *((unsigned __int8 *)v58 + (v138 ^ 0xCFBEF5D9)) ^ (16 * (*((unsigned __int8 *)v58 + v139) ^ 0x2A)) ^ ((*((unsigned __int8 *)v58 + (v140 - 966 * ((4446136 * (unint64_t)v140) >> 32))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v58 + (v141 - 966 * ((4446136 * (unint64_t)v141) >> 32))) ^ 0x2A) << 12) ^ ((*((unsigned __int8 *)v58 + (227 * ((v134 >> 12) & 0xF0 | v110) + 158388) % 0x3C6) ^ 0x2A) << 16);
  v143 = HIWORD(v123) & 0xF0 | (v68 >> 20) & 0xF;
  v144 = (v143 ^ 9) - 915613310 - ((2 * v143) & 0x104);
  v145 = (227 * (v144 ^ 0xC96CD982) + 159354) % 0x3C6
       - 1307689925
       - ((2 * ((227 * (v144 ^ 0xC96CD982) + 159354) % 0x3C6)) & 0x76);
  v146 = v142 ^ ((*((unsigned __int8 *)v58 + (v145 ^ 0xB20E3C3B)) ^ 0x2A) << 20) ^ ((unint64_t)(*((unsigned __int8 *)v58 + (227 * (HIBYTE(v68) & 0xF ^ 0xB ^ ((HIBYTE(v135) & 0xF) << ((v145 & 4 ^ 4) + (v145 & 4)))) + 159354) % 0x3C6u) ^ 0x2Au) << ((v144 & 0x18 ^ 0x18) + (v144 & 0x18u)));
  v147 = 227 * ((HIBYTE(v135) & 0xF0 | (v68 >> 28)) ^ 2) + 159354;
  v148 = *((unsigned __int8 *)&STACK[0x7C0] + (v147 - 966 * ((4446136 * (unint64_t)v147) >> 32)));
  v149 = 227 * ((((((v148 ^ 0xAAAAAAAA) << 28) + 310177590 - ((v148 & 1) << 29) - 3393) ^ v146) >> 28) ^ 1) + 95794;
  v150 = *((unsigned __int8 *)&STACK[0x7C0]
         + (227 * ((v146 >> 20) & 0xF)
                        + 95794
                        - 966 * ((4446136 * (unint64_t)(227 * ((v146 >> 20) & 0xF) + 95794)) >> 32)));
  v151 = ((HIWORD(v146) & 0xF) + 422) * ((v150 & 0xE3 ^ 0xC1) + (v150 & 0xE3 ^ 0x22));
  v152 = v151 - 966 * ((4446136 * (unint64_t)v151) >> 32);
  v153 = v152 + 1436351755 - ((2 * v152) & 0x216);
  v154 = ((*((unsigned __int8 *)v58
           + (227 * (HIBYTE(v146) & 0xF)
                          + 95794
                          - 966 * ((4446136 * (unint64_t)(227 * (HIBYTE(v146) & 0xF) + 95794)) >> 32))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v58 + (v149 - 966 * ((4446136 * (unint64_t)v149) >> 32))) ^ 0xAAAAAAAA) << 12);
  v155 = *((unsigned __int8 *)&STACK[0x7C0] + (v153 ^ 0x559CFD0Bu));
  v156 = *((unsigned __int8 *)&STACK[0x7C0]
         + (227 * ((v146 ^ 0x2A) >> 4) + 95794)
         % (((461 - 227 * ((v146 ^ 0x2A) >> 4)) ^ (227 * ((v146 ^ 0x2A) >> 4) + 95794)) & 0x3C6u));
  *(_DWORD *)(v18
            + 4
            * (unsigned __int16)(v43
                               - 20964
                               - 275
                               * ((unsigned __int16)(((56481
                                                                      * (unsigned __int16)(v43 - 20964)) >> 16)
                                                                    + ((unsigned __int16)((v43
                                                                                         - 20964
                                                                                         - ((56481
                                                                                           * (unsigned __int16)(v43 - 20964)) >> 16)) & 0xFFFE) >> 1)) >> 8))) = ((v52 ^ LODWORD(STACK[0x648]) ^ 0x144CB490) + 171119850 - 2 * ((v52 ^ LODWORD(STACK[0x648]) ^ 0x144CB490) & 0xA3314EF ^ (v52 ^ LODWORD(STACK[0x648])) & 5)) ^ 0x5D67C857 ^ v56;
  v157 = LODWORD(STACK[0x668]) ^ LODWORD(STACK[0x650]) ^ (16 * (v156 ^ 0x2A)) ^ 0x6238F7F1 ^ ((((*((unsigned __int8 *)v58
                                                                                                 + (227 * ((v146 >> 8) & 0xF) + 95794 - 966 * ((4446136 * (unint64_t)(227 * ((v146 >> 8) & 0xF) + 95794)) >> 32))) ^ 0x2A) << 8) | ((((unint64_t)(v150 ^ 0x2Au) << (((v153 & 0x2E ^ 0xA) + (v153 & 0x2E ^ 0x24)) & 0x55)) ^ (v154 | v155 ^ 0x2A)) << 16)) ^ ((*((unsigned __int8 *)v58 + (227 * ((unsigned __int16)v146 >> 12) + 95794 - 966 * ((4446136 * (unint64_t)(227 * ((unsigned __int16)v146 >> 12) + 95794)) >> 32))) ^ 0x2A) << 12) | *((unsigned __int8 *)&STACK[0x7C0] + (227 * ((v146 ^ 0x2A) & 0xF) + 95794 - 966 * ((4446136 * (unint64_t)(227 * ((v146 ^ 0x2A) & 0xF) + 95794)) >> 32))) ^ 0x2A);
  v158 = STACK[0x680];
  v159 = STACK[0x688];
  *(_DWORD *)(v18
            + 4
            * (unsigned __int16)(v43
                               - 700
                               - 275
                               * ((unsigned __int16)(((56481
                                                                      * (unsigned __int16)(v43 - 700)) >> 16)
                                                                    + ((unsigned __int16)((v43
                                                                                         - 700
                                                                                         - ((56481
                                                                                           * (unsigned __int16)(v43 - 700)) >> 16)) & 0xFFFE) >> 1)) >> 8))) = v157;
  return (*(uint64_t (**)(void))(STACK[0x690] + 8 * (v159 | (2 * (v158 == 47)))))();
}

void sub_1CF2CD748()
{
  JUMPOUT(0x1CF2CC13CLL);
}

uint64_t sub_1CF2CD784(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  char v16;
  unsigned int v17;
  unint64_t *v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  unsigned __int8 v27;
  int v28;
  int v29;
  unsigned int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  int v60;
  int v61;
  unsigned int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  int v72;
  unint64_t v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  __int16 v104;
  unsigned __int16 v105;
  int v106;
  unsigned int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  int v130;
  int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  unsigned int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  unsigned int v169;
  int v170;
  int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  int v190;
  int v191;
  int v192;
  unsigned int v193;
  unsigned int v194;
  int v195;
  int v196;
  int v197;
  unsigned int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  unsigned int v204;
  int v205;
  unsigned int v206;
  int v207;
  int v208;
  unsigned int v209;
  int v210;
  int v211;
  unsigned int v212;
  int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  unsigned int v226;
  unsigned int v227;
  int v228;
  unsigned int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  unsigned int v234;
  unsigned int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  unsigned int v248;
  int v249;
  int v250;
  unsigned int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  unsigned int v258;
  unsigned int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  int v265;
  unsigned int v266;
  unsigned int v267;
  int v268;
  int v269;
  unsigned int v270;
  int v271;
  unsigned int v272;
  unsigned int v273;
  int v274;
  int v275;
  int v276;
  unsigned int v277;
  int v278;
  int v279;
  unsigned int v280;
  int v281;
  int v282;
  unsigned int v283;
  unsigned int v284;
  int v285;
  int v286;
  unsigned int v287;
  int v288;
  unsigned int v289;
  int v290;
  int v291;
  unsigned int v292;
  int v293;
  unsigned int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  unsigned int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  unsigned int v305;
  int v306;
  unsigned int v307;
  unsigned int v308;
  int v309;
  unsigned int v310;
  int v311;
  unsigned int v312;
  unsigned int v313;
  int v314;
  int v315;
  int v316;
  unsigned int v317;
  int v318;
  int v319;
  int v320;
  unsigned int v321;
  int v322;
  int v323;
  unsigned int v324;
  int v325;
  unsigned int v326;
  int v327;
  unsigned int v328;
  unsigned int v329;
  int v330;
  unsigned int v331;
  int v332;
  int v333;
  int v334;
  unsigned int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  int v340;
  int v341;
  int v342;
  int v343;
  unsigned int v344;
  int v345;
  int v346;
  int v347;
  unsigned int v348;
  int v349;
  unint64_t v350;
  int v351;
  unsigned int v352;
  int v353;
  unsigned int v354;
  unsigned int v355;
  int v356;
  unsigned int v357;
  int v358;
  unsigned int v359;
  unsigned int v360;
  unsigned int v361;
  int v362;
  unsigned int v363;
  unsigned int v364;
  int v365;
  int v366;
  int v367;
  int v368;
  int v369;
  unsigned int v370;
  int v371;
  unsigned int v372;
  unsigned int v373;
  int v374;
  int v375;
  int v376;
  int v377;
  int v378;
  int v379;
  unsigned int v380;
  unsigned int v381;
  int v382;
  int v383;
  int v384;
  int v385;
  int v386;
  int v387;
  int v388;
  int v389;
  int v390;
  int v391;
  int v392;
  int v393;
  int v394;
  unsigned int v395;
  int v396;
  unsigned int v397;
  unsigned int v398;
  unint64_t v399;
  int v400;
  int v401;
  unsigned int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  int v406;
  int v407;
  int v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  int v412;
  unsigned int v413;
  unsigned int v414;
  unsigned int v415;
  unsigned int v416;
  unsigned int v417;
  int v418;
  unsigned int v419;
  unsigned int v420;
  int v421;
  unsigned int v422;
  int v423;
  int v424;
  unsigned int v425;
  int v426;
  int v427;
  int v428;
  int v429;
  unsigned int v430;
  int v431;
  unsigned int v432;
  int v433;
  unsigned int v434;
  int v435;
  unsigned int v436;
  int v437;
  unsigned int v438;
  unsigned int v439;
  unsigned int v440;
  int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  int v446;
  unsigned int v447;
  int v448;
  int v449;
  unsigned int v450;
  int v451;
  int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  int v459;
  int v460;
  int v461;
  unsigned int v462;
  unsigned int v463;
  unsigned int v464;
  unsigned int v465;
  unsigned int v466;
  unsigned int v467;
  unsigned int v468;
  unsigned int v469;
  unsigned int v470;
  unsigned int v471;
  unsigned int v472;
  int v473;
  int v474;
  int v475;
  unsigned int v476;
  unsigned int v477;
  unsigned int v478;
  int v479;
  int v480;
  int v481;
  unsigned int v482;
  unsigned int v483;
  unsigned int v484;
  int v485;
  unsigned int v486;
  unsigned int v487;
  unsigned int v488;
  int v489;
  int v490;
  unsigned int v491;
  unsigned int v492;
  unsigned int v493;
  unsigned int v494;
  unsigned int v495;
  int v496;
  int v497;
  int v498;
  unsigned int v499;
  unsigned int v500;
  unsigned int v501;
  int v502;
  int v503;
  unsigned int v504;
  unsigned int v505;
  unsigned int v506;
  int v507;
  unsigned int v508;
  int v509;
  int v510;
  unsigned int v511;
  int v512;
  unsigned int v513;
  unsigned int v514;
  unsigned int v515;
  unsigned int v516;
  unsigned int v517;
  int v518;
  int v519;
  int v520;
  int v521;
  unsigned int v522;
  unsigned int v523;
  int v524;
  unsigned int v525;
  unsigned int v526;
  unsigned int v527;
  int v528;
  unsigned int v529;
  unsigned int v530;
  int v531;
  int v532;
  unsigned int v533;
  unsigned int v534;
  unsigned int v535;
  unsigned int v536;
  unsigned int v537;
  unsigned int v538;
  unsigned int v539;
  int v540;
  unsigned int v541;
  int v542;
  int v543;
  unsigned int v544;
  unsigned int v545;
  int v546;
  unsigned int v547;
  unsigned int v548;
  unsigned int v549;
  unsigned int v550;
  unsigned int v551;
  int v552;
  int v553;
  int v554;
  int v555;
  unsigned int v556;
  unsigned int v557;
  unsigned int v558;
  int v559;
  unsigned int v560;
  unsigned int v561;
  unsigned int v562;
  unsigned int v563;
  int v564;
  int v565;
  int v566;
  unsigned int v567;
  int v568;
  int v569;
  unsigned int v570;
  int v571;
  unsigned int v572;
  int v573;
  int v574;
  unsigned int v575;
  unsigned int v576;
  int v577;
  int v578;
  unsigned int v579;
  int v580;
  int v581;
  unsigned int v582;
  int v583;
  unsigned int v584;
  unsigned int v585;
  unsigned int v586;
  unsigned int v587;
  unsigned int v588;
  unsigned int v589;
  unsigned int v590;
  int v591;
  unsigned int v592;
  unsigned int v593;
  unsigned int v594;
  unsigned int v595;
  int v596;
  unsigned int v597;
  int v598;
  int v599;
  unsigned int v600;
  int v601;
  unsigned int v602;
  unsigned int v603;
  unsigned int v604;
  unsigned int v605;
  int v606;
  unsigned int v607;
  int v608;
  int v609;
  unsigned int v610;
  int v611;
  int v612;
  int v613;
  unsigned int v614;
  unsigned int v615;
  int v616;
  unsigned int v617;
  int v618;
  unsigned int v619;
  unsigned int v620;
  unsigned int v621;
  unsigned int v622;
  unsigned int v623;
  int v624;
  int v625;
  unsigned int v626;
  unsigned int v627;
  unsigned int v628;
  unsigned int v629;
  unsigned int v630;
  unsigned int v631;
  unsigned int v632;
  unsigned int v633;
  unsigned int v634;
  unsigned int v635;
  unsigned int v636;
  unsigned int v637;
  unsigned int v638;
  unsigned int v639;
  int v640;
  int v641;
  unsigned int v642;
  int v643;
  unsigned int v644;
  unsigned int v645;
  unsigned int v646;
  unsigned int v647;
  int v648;
  int v649;
  unsigned int v650;
  int v651;
  int v652;
  int v653;
  int v654;
  int v655;
  int v656;
  int v657;
  int v658;
  int v659;
  int v660;
  int v661;
  int v662;
  int v663;
  int v664;
  int v665;
  int v666;
  int v667;
  unsigned int v668;
  int v669;
  int v670;
  int v671;
  int v672;
  unsigned int v673;
  unsigned int v674;
  int v675;
  int v676;
  int v677;
  int v678;
  int v679;
  unsigned int v680;
  int v681;
  unsigned int v682;
  int v683;
  unsigned int v684;
  unsigned int v685;
  int v686;
  int v687;
  unsigned int v688;
  int v689;
  unsigned int v690;
  unsigned int v691;
  unsigned int v692;
  unsigned int v693;
  unsigned int v694;
  unsigned int v695;
  unsigned int v696;
  unsigned int v697;
  unsigned int v698;
  unsigned int v699;
  char *v700;
  int v701;
  unsigned int v702;
  unsigned int v703;
  unsigned int v704;
  unsigned int v705;
  unsigned int v706;
  int v707;
  unint64_t v708;
  int v709;
  int v710;
  int v711;
  int v712;
  unsigned int v713;
  int v714;
  unsigned int v715;
  int v716;
  unsigned int v717;
  unsigned int v718;
  unsigned int v719;
  unsigned int v720;
  unsigned int v721;
  unsigned int v722;
  unsigned int v723;
  int v724;
  int v725;
  int v726;
  unsigned int v727;
  unsigned int v728;
  int v729;
  int v730;
  int v731;
  int v732;
  int v733;
  int v734;
  int v735;
  int v736;
  int v737;
  unsigned int v738;
  int v739;
  unsigned int v740;
  unsigned int v741;
  int v742;
  int v743;
  int v744;
  int v745;
  int v746;
  int v747;
  int v748;
  int v749;
  unsigned int v750;
  unsigned int v751;
  int v752;
  unsigned int v753;
  unsigned int v754;
  int v755;
  unsigned int v756;
  int v757;
  int v758;
  int v759;
  int v760;
  int v761;
  unsigned int v762;
  int v763;
  int v764;
  unsigned int v765;
  unsigned int v766;
  int v767;
  int v768;
  unsigned int v769;
  unsigned int v770;
  unsigned int v771;
  BOOL v772;
  unsigned int v773;
  unsigned int v774;
  unsigned int v775;
  int v776;
  unint64_t v777;
  unsigned int v778;
  int v779;
  int v780;
  int v781;
  unsigned int v782;
  int v783;
  int v784;
  int v785;
  int v786;
  int v787;
  int v788;
  int v789;
  unsigned int v790;
  unsigned int v791;
  unsigned int v792;
  unint64_t *v793;
  int v794;
  int v795;
  unsigned __int16 v796;
  int v797;
  int v798;
  int v799;
  int v800;
  int v801;
  unsigned __int16 v802;
  int v803;
  unsigned int v804;
  unsigned int v805;
  int v806;
  int v807;
  int v808;
  int v809;
  int v810;
  int v811;
  int v812;
  int v813;
  int v814;
  int v815;
  int v816;
  int v817;
  unsigned int v818;
  unsigned int v819;
  int v820;
  int v821;
  char v822;
  int v823;
  int v824;
  int v825;
  int v826;
  int v827;
  unsigned int v828;
  unsigned int v829;
  unsigned int v830;
  unsigned int v831;
  int v832;
  unsigned int v833;
  unsigned int v834;
  unsigned int v835;
  __int16 v836;
  int v837;
  int v838;
  int v839;
  unsigned int v840;
  unsigned int v841;
  unsigned int v842;
  unsigned int v843;
  char v844;
  int v845;
  int v846;
  int v847;
  int v848;
  int v849;
  int v850;
  char v851;
  int v852;
  int v853;
  unsigned int v854;
  unint64_t v855;
  int v856;
  int v857;
  int v858;
  unsigned int v859;
  unsigned int v860;
  int v861;
  int v862;
  unsigned int v863;
  int v864;
  unsigned int v865;
  int v866;
  int v867;
  int v868;
  unsigned int v869;
  int v870;
  unsigned int v871;
  unsigned int v872;
  int v873;
  int v874;
  unsigned int v875;
  int v876;
  int v877;
  unsigned int v878;
  int v879;
  unint64_t v880;
  int v881;
  int v882;
  unsigned int v883;
  unsigned int v884;
  int v885;
  unsigned int v886;
  int v887;
  int v888;
  unsigned int v889;
  unsigned int v890;
  int v891;
  unsigned int v892;
  int v893;
  int v894;
  unsigned int v895;
  unsigned int v896;
  int v897;
  int v898;
  int v899;
  int v900;
  int v901;
  int v902;
  int v903;
  unsigned int v904;
  int v905;
  int v906;
  int v907;
  int v908;
  int v909;
  int v910;
  unsigned int v911;
  int v912;
  int v913;
  int v914;
  unsigned int v915;
  unsigned int v916;
  unsigned int v917;
  uint64_t (*v918)(void);

  LODWORD(STACK[0x64C]) = 0;
  LODWORD(STACK[0x634]) = 0;
  v14 = 13 * (LODWORD(STACK[0x630]) ^ 0x5CF);
  v15 = (LODWORD(STACK[0x4E0]) ^ 0xCD9BFE7C) - 409366350 + v8;
  LODWORD(STACK[0x630]) = v14;
  v16 = v15 - 104;
  v17 = v15 + 1436817304 - ((v15 << (v14 + 120)) & 0xAB482F30);
  LODWORD(STACK[0x670]) = v12;
  LODWORD(STACK[0x668]) = v13;
  v18 = &STACK[0x7C0];
  v19 = 227 * (HIBYTE(v17) & 0xF ^ 5) + 16117;
  v20 = v17;
  v21 = 227 * ((v17 >> 20) & 0xF ^ 0xA) + 16117;
  v22 = *((unsigned __int8 *)&STACK[0x7C0]
        + (unsigned __int16)(v21 - 966 * ((unsigned __int16)((2171 * v21) >> 16) >> 5)));
  v23 = ((*((unsigned __int8 *)v18
          + (unsigned __int16)(v19 - 966 * ((unsigned __int16)((2171 * v19) >> 16) >> 5))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (unsigned __int16)(227 * ((v17 >> 28) ^ 5) + 16117 - 966 * ((unsigned __int16)((2171 * (227 * ((v17 >> 28) ^ 5) + 16117)) >> 16) >> 5))) ^ 0x2A) << 12);
  v24 = 227 * (HIWORD(v17) & 0xF ^ 4) + 16117;
  v25 = *((unsigned __int8 *)&STACK[0x7C0]
        + (unsigned __int16)(v24 - 966 * ((unsigned __int16)((2171 * v24) >> 16) >> 5))) ^ 0x2A;
  v26 = v23 | v25;
  LODWORD(STACK[0x660]) = a4;
  v27 = v17;
  v28 = 227 * (((unsigned __int16)v17 >> 12) ^ 1) + 16117;
  v29 = *((unsigned __int8 *)&STACK[0x7C0]
        + (unsigned __int16)(v28 - 966 * ((unsigned __int16)((2171 * v28) >> 16) >> 5)));
  v30 = LODWORD(STACK[0x4D4]) - v7 - ((2 * (LODWORD(STACK[0x4D4]) - v7) + 601528042) & 0xC0F0403C) - 228234349;
  LODWORD(STACK[0x658]) = v20;
  v31 = 227 * ((v20 >> 8) & 0xF ^ 7) + 16117;
  v32 = (v22 ^ 0x2A) << (v25 & 4) << (v25 & 4 ^ 4);
  v33 = *((unsigned __int8 *)&STACK[0x7C0]
        + (unsigned __int16)(v31 - 966 * ((unsigned __int16)((2171 * v31) >> 16) >> 5))) ^ 0x2A;
  v34 = 227 * ((v27 >> 4) ^ 9) + 16117;
  v35 = v32 ^ v26;
  v36 = *((unsigned __int8 *)&STACK[0x7C0]
        + (unsigned __int16)(v34 - 966 * ((unsigned __int16)((2171 * v34) >> 16) >> 5))) ^ 0x2A;
  v37 = (v35 << 16) + 1284501605 - ((v35 << 17) & 0x991E0000);
  LODWORD(STACK[0x680]) = v37;
  v38 = ((v37 ^ 0x4C8FF065) + (v33 << 8)) ^ ((v29 ^ 0x2A) << 12);
  v39 = *((unsigned __int8 *)&STACK[0x7C0]
        + (unsigned __int16)(227 * (v16 & 0xF ^ 8)
                           + 16117
                           - 966 * ((unsigned __int16)((2171 * (227 * (v16 & 0xF ^ 8u) + 16117)) >> 16) >> 5))) ^ 0x2A;
  v40 = (v38 | v39) ^ (16 * v36);
  v41 = 227 * ((v30 >> 20) & 0xF ^ 7) + 16117;
  v42 = 227 * (HIWORD(v30) & 0xF ^ 8) + 16117;
  v43 = 227 * (((unsigned __int16)v30 >> 12) ^ 2) + 16117;
  v44 = ((((*((unsigned __int8 *)v18
            + (unsigned __int16)(227 * (HIBYTE(v30) & 0xF)
                               + 16117
                               - 966
                               * ((unsigned __int16)((2171 * (227 * (HIBYTE(v30) & 0xF) + 16117)) >> 16) >> 5))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (unsigned __int16)(227 * ((v30 >> 28) ^ 6) + 16117 - 966 * ((unsigned __int16)((2171 * (227 * ((v30 >> 28) ^ 6) + 16117)) >> 16) >> 5))) ^ 0x2A) << 12) | *((unsigned __int8 *)v18 + (unsigned __int16)(v42 - 966 * ((unsigned __int16)((2171 * v42) >> 16) >> 5))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (unsigned __int16)(v41 - 966 * ((unsigned __int16)((2171 * v41) >> 16) >> 5))) ^ 0x2A) << 12);
  v45 = 16
      * (*((unsigned __int8 *)&STACK[0x7C0]
         + (unsigned __int16)(v43 - 966 * ((unsigned __int16)((2171 * v43) >> 16) >> 5))) ^ 0x2A);
  v46 = 227 * ((v30 >> 4) ^ 1) + 16117;
  v47 = v44 | *((unsigned __int8 *)&STACK[0x7C0]
              + (unsigned __int16)(227 * ((v30 >> 8) & 0xF)
                                 + 16117
                                 - 966 * ((unsigned __int16)((2171 * (227 * ((v30 >> 8) & 0xF) + 16117)) >> 16) >> 5))) ^ 0x2A;
  v48 = v39 & 0xF;
  v49 = ((v47 + v45) << 8)
      - ((v47 & v45) << 9)
      - 2019523910
      - ((2 * (((v47 + v45) << 8) - ((v47 & v45) << 9))) & 0xF410400);
  v50 = *((unsigned __int8 *)&STACK[0x7C0]
        + (unsigned __int16)(227 * (v30 & 0xF ^ 0xE)
                           + 16117
                           - 966 * ((unsigned __int16)((2171 * (227 * (v30 & 0xF ^ 0xE) + 16117)) >> 16) >> 5))) ^ 0x2A;
  v51 = (v49 ^ 0x87A082BA | v50) ^ (16
                                  * (*((unsigned __int8 *)&STACK[0x7C0]
                                     + (unsigned __int16)(v46
                                                        - 966
                                                        * ((unsigned __int16)((2171 * v46) >> 16) >> 5))) ^ 0x2A));
  v52 = 227 * (v48 & 0xFFFFFF0F | (16 * (v50 & 0xF)));
  v53 = *((unsigned __int8 *)&STACK[0x7C0]
        + (v52 + 100561 - 966 * ((4446136 * (unint64_t)(v52 + 100561)) >> 32)));
  v54 = LOBYTE(STACK[0xA55]) ^ 0x2A;
  LODWORD(STACK[0x4F4]) = 16 * v54;
  v55 = 16 * v54 + 1504922731 - ((32 * v54) & 0x18C0);
  LODWORD(STACK[0x688]) = v55;
  v56 = 227 * (((v53 ^ 0x2A) + 1504922731 - ((2 * (v53 ^ 0x2A)) & 0xD6)) ^ v55);
  v57 = (v56 + 100561) % 0x3C6u;
  v58 = *((unsigned __int8 *)&STACK[0x7C0] + (v56 + 37455) % 0x3C6u);
  v59 = 227
      * ((((v58 >> 4) ^ 2) - 2 * (((v58 >> 4) ^ 2) & 0xFB ^ ((v58 & 0x10) != 0)) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0] + (v52 + 37455 - 966 * ((4446136 * (unint64_t)(v52 + 37455)) >> 32))));
  v60 = 227 * (v51 & 0xF0 | (v40 >> 4));
  v61 = 227
      * (*((unsigned __int8 *)v18
         + (v60 + 100561 - 966 * ((4446136 * (unint64_t)(v60 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v59 + 100561) % (((268334894 - v59) & 0xCDE0B10) + ((v59 + 100561) & 0x20B10u) - 215877450)) ^ 0x2A)) ^ 0x2A);
  v62 = v61 + 100561 - 966 * ((4446136 * (unint64_t)(v61 + 100561)) >> 32);
  v63 = *((unsigned __int8 *)&STACK[0x7C0]
        + (v61 + 37455 - 966 * ((4446136 * (unint64_t)(v61 + 37455)) >> 32))) >> 4;
  v64 = ((v63 ^ 2) - 2 * ((v63 ^ 2) & 0xE ^ v63 & 4) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                              + (v60
                                                                                             + 37455
                                                                                             - 966
                                                                                             * ((4446136
                                                                                               * (unint64_t)(v60 + 37455)) >> 32)));
  v65 = 227 * ((v51 >> 4) & 0xF0 | (v40 >> 8) & 0xF);
  v66 = 227
      * (*((unsigned __int8 *)v18
         + (v65 + 100561 - 966 * ((4446136 * (unint64_t)(v65 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (227 * v64 + 100561 - 966 * ((4446136 * (unint64_t)(227 * v64 + 100561)) >> 32))) ^ 0x2A)) ^ 0x2A);
  v67 = v66 + 100561 - 966 * ((4446136 * (unint64_t)(v66 + 100561)) >> 32);
  v68 = *((unsigned __int8 *)&STACK[0x7C0]
        + (v66 + 37455 - 966 * ((4446136 * (unint64_t)(v66 + 37455)) >> 32)));
  LOBYTE(v65) = *((_BYTE *)&STACK[0x7C0]
                + (v65 + 37455 - 966 * ((4446136 * (unint64_t)(v65 + 37455)) >> 32)));
  v69 = ((*((unsigned __int8 *)v18 + v67) ^ 0x2A) << 8) ^ (16 * (*((unsigned __int8 *)v18 + v62) ^ 0x2A));
  v70 = 227 * ((((v68 >> 4) ^ 2) - 2 * (((v68 >> 4) ^ 2) & 0xFB ^ ((v68 & 0x10) != 0)) + 42) ^ v65)
      + 100561;
  v71 = 227 * (((v49 >> 8) & 0xF0 | ((unsigned __int16)v38 >> 12)) ^ 0x80);
  v72 = *((unsigned __int8 *)&STACK[0x7C0] + (v70 - 966 * ((4446136 * (unint64_t)v70) >> 32)));
  v73 = (unint64_t)(v72 ^ 0x2Au) << ((((v72 & 0x8D ^ 0x85) + (v72 & 0x8D ^ 8))
                                           * ((v65 & 0x14 ^ 0x14) + (v65 & 0x14))) & 0xFC);
  v74 = v71 + 37455 - 966 * ((4446136 * (unint64_t)(v71 + 37455)) >> 32);
  LODWORD(v73) = 227
               * (*((unsigned __int8 *)&STACK[0x7C0]
                  + (v71
                                 + 100561
                                 - 966 * ((4446136 * (unint64_t)(v71 + 100561)) >> 32))) ^ 0x2A ^ v73);
  v75 = ((int)v73 + 100561) % 0x3C6u;
  LODWORD(v73) = *((unsigned __int8 *)&STACK[0x7C0] + ((int)v73 + 37455) % 0x3C6u);
  v76 = *((unsigned __int8 *)&STACK[0x7C0] + v75);
  LODWORD(v73) = 227
               * ((((v73 >> 4) ^ 2)
                                  - 2 * (((v73 >> 4) ^ 2) & 0xFB ^ ((v73 & 0x10) != 0))
                                  + 42) ^ *((unsigned __int8 *)&STACK[0x7C0] + v74))
               + 100561;
  v77 = 227 * (((v76 & 0xF ^ 0xA) + (v76 & 0xF ^ 5)) & HIWORD(v38) ^ (v49 >> 12) & 0xF0);
  v78 = 227
      * (*((unsigned __int8 *)v18
         + (v77 + 100561 - 966 * ((4446136 * (unint64_t)(v77 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ 0x2A)) ^ 0x2A);
  LODWORD(v73) = 227
               * ((((*((_BYTE *)v18
                                      + (v78
                                                     + 37455
                                                     - 966
                                                     * ((4446136 * (unint64_t)(v78 + 37455)) >> 32))) >> 4) ^ 2)
                                  + ((*((_BYTE *)v18
                                      + (v78
                                                     + 37455
                                                     - 966
                                                     * ((4446136 * (unint64_t)(v78 + 37455)) >> 32))) >> 3) & 0x14 ^ 0xFB)
                                  + 43) ^ *((unsigned __int8 *)v18
                                          + (v77
                                                         + 37455
                                                         - 966
                                                         * ((4446136 * (unint64_t)(v77 + 37455)) >> 32))))
               + 100561;
  LODWORD(STACK[0x5F8]) = v49;
  v79 = STACK[0x680];
  v80 = 227 * ((HIWORD(v49) & 0xF0 | (LODWORD(STACK[0x680]) >> 20) & 0xF) ^ 0xA8);
  v81 = *((unsigned __int8 *)&STACK[0x7C0]
        + (v80 + 100561 - 966 * ((4446136 * (unint64_t)(v80 + 100561)) >> 32)));
  LODWORD(v73) = v81 ^ (16
                      * (*((unsigned __int8 *)&STACK[0x7C0]
                         + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ 0x2A)) ^ 0x2A;
  v82 = (v73 + 165) * (v81 & 0xFFFFFFE3 ^ 0x22 | v81 & 0xFFFFFFE3 ^ 0xC1);
  v83 = *((unsigned __int8 *)&STACK[0x7C0] + (v82 - 966 * ((4446136 * (unint64_t)v82) >> 32)));
  v84 = 227
      * ((((v83 >> 4) ^ 0x32) + ((v83 >> 3) & 0x14 ^ 0xFB) - 5) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                                   + (v80
                                                                                                  + 37455
                                                                                                  - 966 * ((4446136 * (unint64_t)(v80 + 37455)) >> 32))))
      + 100561;
  v85 = 227 * (((v49 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x680])) & 0xF) ^ 0x7C);
  LODWORD(STACK[0x5F4]) = v85;
  v86 = 227
      * (*((unsigned __int8 *)v18
         + (v85 + 100561 - 966 * ((4446136 * (unint64_t)(v85 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v84 - 966 * ((4446136 * (unint64_t)v84) >> 32))) ^ 0x2A)) ^ 0x2A);
  LODWORD(STACK[0x5F0]) = v86;
  v87 = *((unsigned __int8 *)&STACK[0x7C0] + v57) ^ 0x2A;
  v88 = v69 ^ v87 ^ ((v76 ^ 0x2A) << 12);
  v89 = v88 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                + (v78 + 100561 - 966 * ((4446136 * (unint64_t)(v78 + 100561)) >> 32))) ^ 0x2A) << 16);
  v90 = v89 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                + (227 * v73
                               + 100561
                               - 966 * ((4446136 * (unint64_t)(227 * v73 + 100561)) >> 32))) ^ 0x2A) << 20);
  v91 = v90 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                + (v86 + 100561 - 966 * ((4446136 * (unint64_t)(v86 + 100561)) >> 32))) ^ 0x2A) << 24);
  LODWORD(STACK[0x60C]) = v91;
  LODWORD(v73) = 227 * ((HIWORD(v90) & 0xF0 | (v79 >> 20) & 0xF) ^ 8) + 159354;
  LODWORD(v73) = v73 - 966 * ((4446136 * (unint64_t)v73) >> 32);
  LODWORD(v73) = v73 - 208005300 - ((2 * v73) & 0x698);
  v92 = *((unsigned __int8 *)&STACK[0x7C0] + (v73 ^ 0xF39A174C));
  v93 = ((v92 ^ 0x2A) << 20) - ((v92 << 21) & 0x8A00000) - 2074762172;
  LODWORD(STACK[0x63C]) = v93;
  LODWORD(STACK[0x610]) = (((v91 >> 20) & 0xF0 | HIBYTE(v79) & 0xF) ^ 0xC)
                        + (v73 & 0xD2 ^ 0x67650492 | v73 & 0xD2 ^ 0x40)
                        * ((v93 & 0xF100000 ^ 0xB03DC87) + (v93 & 0xF100000 ^ 0x4100000));
  LODWORD(v73) = 227 * (v48 & 0xFFFFFF0F | (16 * (v87 & 0xF))) + 159354;
  v94 = 227 * ((v69 ^ v87) & 0xF0 | (v40 >> 4)) + 159354;
  v95 = 227 * ((v69 >> 4) & 0xF0 | (v40 >> 8) & 0xF) + 159354;
  v96 = 227 * ((v88 >> 8) & 0xF0 | ((unsigned __int16)v38 >> 12)) + 159354;
  v97 = *((unsigned __int8 *)&STACK[0x7C0]
        + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32)));
  LODWORD(STACK[0x648]) = v97;
  LODWORD(v73) = 227 * ((v89 >> 12) & 0xF0 | HIWORD(v38) & 0xF) + 159354;
  v98 = *((unsigned __int8 *)&STACK[0x7C0] + (v95 - 966 * ((4446136 * (unint64_t)v95) >> 32)));
  v99 = v97 ^ (16
             * (*((unsigned __int8 *)&STACK[0x7C0]
                + (v94 - 966 * ((4446136 * (unint64_t)v94) >> 32))) ^ 0x2A)) ^ 0x2A;
  LODWORD(STACK[0x640]) = v99;
  v100 = v99 ^ ((v98 ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                                       + (v96 - 966 * ((4446136 * (unint64_t)v96) >> 32))) ^ 0x2A) << 12);
  LODWORD(STACK[0x638]) = v100;
  v101 = v100 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                  + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ 0x2A) << 16);
  LODWORD(STACK[0x5FC]) = v101;
  LODWORD(STACK[0x600]) = (227 * (HIWORD(v101) & 0xF) + 95794)
                        % (1916004188
                                       - (((2147387853 - 227 * (HIWORD(v101) & 0xF)) & 0x7232E396)
                                        + ((227 * (HIWORD(v101) & 0xF) + 95794) & 0x1E396)));
  v102 = LODWORD(STACK[0x670]) + v8;
  LODWORD(STACK[0x650]) = v102;
  v103 = LODWORD(STACK[0x4D0])
       + 177236701
       + v102
       - 1381881206
       - ((2 * (LODWORD(STACK[0x4D0]) + 177236701 + v102)) & 0x5B445514);
  v104 = ((BYTE2(v103) ^ 0xA2) & 0xF ^ 0x47) + 2 * ((BYTE2(v103) ^ 0xA2) & 7);
  v105 = 227 * v104 - ((454 * v104) & 0x3D58) + 7852;
  v106 = v7 + LODWORD(STACK[0x668]) + 545983845;
  LODWORD(STACK[0x5A0]) = v106;
  v107 = LODWORD(STACK[0x5EC]) ^ 0x9ACDB942;
  LODWORD(STACK[0x4B4]) = v107;
  v108 = v107 - v106 - 2021942106 - ((2 * (v107 - v106 - 2021942106)) & 0x47F432C);
  v109 = 227 * (HIBYTE(v103) & 0xF ^ 0xD) + 16117;
  v110 = 227 * ((v103 >> 20) & 0xF ^ 0xA) + 16117;
  v111 = ((*((unsigned __int8 *)v18 + (v105 ^ 0x1EACu) % (18145 - (v105 & 0x431B ^ 0x208 | v105 & 0x431B ^ 0x4113u))) ^ 0x2A | ((*((unsigned __int8 *)v18 + (unsigned __int16)(v109 - 966 * ((unsigned __int16)((2171 * v109) >> 16) >> 5))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (unsigned __int16)(227 * ((v103 >> 28) ^ 0xA) + 16117 - 966 * ((unsigned __int16)((2171 * (227 * ((v103 >> 28) ^ 0xA) + 16117)) >> 16) >> 5))) ^ 0x2A) << 12)) << 8) ^ ((*((unsigned __int8 *)v18 + (unsigned __int16)(v110 - 966 * ((unsigned __int16)((2171 * v110) >> 16) >> 5))) ^ 0x2A) << 12);
  LODWORD(v73) = 227 * (((unsigned __int16)v103 >> 12) ^ 2) + 16117;
  v112 = 227 * ((v103 >> 8) & 0xF ^ 0xA) + 16117;
  LODWORD(STACK[0x5AC]) = v103;
  v113 = 227 * ((v103 >> 4) ^ 8) + 16117;
  v114 = v111 | *((unsigned __int8 *)&STACK[0x7C0]
                + (unsigned __int16)(v112 - 966 * ((unsigned __int16)((2171 * v112) >> 16) >> 5))) ^ 0x2A;
  v115 = (v114 << 8) - 572711819 - ((v114 << 9) & 0xBBBA3800);
  v116 = 227 * ((v108 + LODWORD(STACK[0x3BC])) >> 28) + 16117;
  v117 = v115 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                  + (unsigned __int16)(v73 - 966 * ((unsigned __int16)((2171 * v73) >> 16) >> 5))) ^ 0x2A) << 12);
  v118 = v115;
  v119 = *((unsigned __int8 *)&STACK[0x7C0]
         + (unsigned __int16)(227 * (v103 & 0xF ^ 0xA)
                            + 16117
                            - 966 * ((unsigned __int16)((2171 * (227 * (v103 & 0xF ^ 0xA) + 16117)) >> 16) >> 5))) ^ 0x2A;
  v120 = (v117 ^ 0xDDDD1C75 | v119) ^ (16
                                     * (*((unsigned __int8 *)&STACK[0x7C0]
                                        + (unsigned __int16)(v113
                                                           - 966
                                                           * ((unsigned __int16)((2171 * v113) >> 16) >> 5))) ^ 0x2A));
  v121 = v108 - 2109759082;
  LODWORD(v73) = 227 * (((v108 - 2109759082) >> 24) & 0xF ^ 2) + 16117;
  v122 = 227 * (((v108 - 2109759082) >> 20) & 0xF ^ 3) + 16117;
  v123 = 227 * (~HIWORD(v121) & 0xF) + 16117;
  LODWORD(v73) = ((*((unsigned __int8 *)v18
                   + (unsigned __int16)(v73 - 966 * ((unsigned __int16)((2171 * v73) >> 16) >> 5))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (unsigned __int16)(v116 - 966 * ((unsigned __int16)((2171 * v116) >> 16) >> 5))) ^ 0x2A) << 12) | *((unsigned __int8 *)v18 + (unsigned __int16)(v123 - 966 * ((unsigned __int16)((2171 * v123) >> 16) >> 5))) ^ 0x2A;
  v124 = (((184 - (((unsigned __int16)v121 >> 12) ^ 0xA)) | ((((unsigned __int16)v121 >> 12) ^ 0xA) + 71)) & 0xFFFFFFE3)
       * ((((unsigned __int16)v121 >> 12) ^ 0xA) + 71);
  v125 = 227 * ((v121 >> 8) & 0xF ^ 1) + 16117;
  LODWORD(v73) = ((_DWORD)v73 << 8) ^ ((*((unsigned __int8 *)v18
                                        + (unsigned __int16)(v122 - 966 * ((unsigned __int16)((2171 * v122) >> 16) >> 5))) ^ 0x2A) << 12) | *((unsigned __int8 *)v18 + (unsigned __int16)(v125 - 966 * ((unsigned __int16)((2171 * v125) >> 16) >> 5))) ^ 0x2A;
  v126 = ((_DWORD)v73 << 8) + 1299665406 - (((_DWORD)v73 << 9) & 0x9AEEA200);
  LODWORD(v73) = 227 * ((v121 >> 4) ^ 9) + 16117;
  v127 = v126 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                  + (unsigned __int16)(v124 - 966 * ((unsigned __int16)((2171 * v124) >> 16) >> 5))) ^ 0x2A) << 12);
  v128 = *((unsigned __int8 *)&STACK[0x7C0]
         + (unsigned __int16)(227 * (v121 & 0xF ^ 6)
                            + 16117
                            - 966 * ((unsigned __int16)((2171 * (227 * (v121 & 0xF ^ 6) + 16117)) >> 16) >> 5))) ^ 0x2A;
  v129 = (v127 ^ 0x4D7751FE | v128) ^ (16
                                     * (*((unsigned __int8 *)&STACK[0x7C0]
                                        + (unsigned __int16)(v73
                                                           - 966
                                                           * ((unsigned __int16)((2171 * v73) >> 16) >> 5))) ^ 0x2A));
  LODWORD(STACK[0x5D8]) = v119 & 0xF;
  LODWORD(v73) = 227 * (((v119 & 0xF) + 390679792 + 16 * (v128 & 0xF) - 32 * (v128 & 0xF)) ^ 0x17494CF0);
  v130 = *((unsigned __int8 *)&STACK[0x7C0] + ((int)v73 + 100561) % 0x3C6u) ^ LODWORD(STACK[0x688]) ^ 0x2A;
  v131 = 227 * (v130 ^ 0x59B34C6B);
  v132 = (-2
        - ((~(((v120 >> 4) ^ 0x43963E1E) & 0x48519986) | 0x68D90971)
         + (((v120 >> 4) ^ 0x43963E1E) & 0x48510900 | 0x9726F68E))) ^ ((v120 >> 4) ^ 0x43963E1E) & 0x48519989;
  LODWORD(v73) = 227
               * ((((*((_BYTE *)v18 + (v131 + 37455) % 0x3C6u) >> 4) ^ 2)
                                  + ((*((_BYTE *)v18 + (v131 + 37455) % 0x3C6u) >> 3) & 0x14 ^ 0xFB)
                                  + 43) ^ *((unsigned __int8 *)v18 + ((int)v73 + 37455) % 0x3C6u))
               + 100561;
  LODWORD(v73) = *((unsigned __int8 *)&STACK[0x7C0]
                 + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ 0x2A;
  v133 = 16 * v73 + 829023985 - ((32 * v73) & 0xDE0);
  v134 = (v132 & 0x2A156A0B ^ 0x2146A08) + (v132 & 0xD5EA95F4 ^ 0xC81175) - 1;
  v135 = (v134 | v129 & 0xF0) ^ 0x6A057203;
  v136 = 227 * (v135 + (v130 & 0xA5 ^ 0x84 | v130 & 0xA5 ^ 0x21u)) % ((v133 & 0x3C0 ^ 0x2C0) + (v133 & 0x3C0 ^ 0x106u));
  LODWORD(STACK[0x5E8]) = v126;
  LODWORD(STACK[0x5E4]) = v118;
  v137 = 227 * (((v126 >> 20) & 0xF0 | HIBYTE(v118) & 0xF) ^ 0xDD);
  LODWORD(STACK[0x5EC]) = v137;
  v138 = (v137 + 100561) % (((814 - v137) ^ (v137 + 100561)) & 0x3C6u);
  LODWORD(v73) = *((unsigned __int8 *)&STACK[0x7C0] + (227 * v135 + 100561) % 0x3C6u) ^ 0x2A;
  LODWORD(v73) = 227 * ((v73 + 829023985 - ((2 * v73) & 0xFFFFFFE3)) ^ v133);
  v139 = ((int)v73 + 100561) % 0x3C6u;
  LODWORD(v73) = (*((unsigned __int8 *)&STACK[0x7C0] + ((int)v73 + 37455) % 0x3C6u) >> 4) ^ 2;
  LODWORD(v73) = 227 * ((v73 - ((2 * v73) & 0x55) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0] + v136))
               + 100561;
  v140 = 227 * ((v129 >> 4) & 0xF0 | (v120 >> 8) & 0xF);
  LODWORD(v73) = 227
               * (*((unsigned __int8 *)v18
                  + (v140
                                 + 100561
                                 - 966 * ((4446136 * (unint64_t)(v140 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ 0x2A)) ^ 0x2A);
  v141 = v73 + 100561 - 966 * ((4446136 * (unint64_t)(v73 + 100561)) >> 32);
  LODWORD(v73) = *((unsigned __int8 *)&STACK[0x7C0]
                 + (v73 + 37455 - 966 * ((4446136 * (unint64_t)(v73 + 37455)) >> 32))) >> 4;
  LODWORD(v73) = 227
               * (((v73 ^ 2) - 2 * ((v73 ^ 2) & 0xE ^ v73 & 4) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                                        + (v140 + 37455 - 966 * ((4446136 * (unint64_t)(v140 + 37455)) >> 32))))
               + 100561;
  v142 = 227 * (((v127 >> 8) & 0xF0 | ((unsigned __int16)v117 >> 12)) ^ 0x51);
  LODWORD(v73) = 227
               * (*((unsigned __int8 *)v18
                  + (v142
                                 + 100561
                                 - 966 * ((4446136 * (unint64_t)(v142 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ 0x2A)) ^ 0x2A);
  v143 = ((*((unsigned __int8 *)v18
           + (v73 + 100561 - 966 * ((4446136 * (unint64_t)(v73 + 100561)) >> 32))) ^ 0x2A) << 12) ^ ((*((unsigned __int8 *)v18 + v141) ^ 0x2A) << 8);
  LODWORD(v73) = (*((unsigned __int8 *)&STACK[0x7C0]
                  + (v73 + 37455 - 966 * ((4446136 * (unint64_t)(v73 + 37455)) >> 32))) >> 4) ^ 2;
  LODWORD(v73) = 227
               * ((v73 - ((2 * v73) & 0x55) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                     + (v142
                                                                                    + 37455
                                                                                    - 966
                                                                                    * ((4446136
                                                                                      * (unint64_t)(v142 + 37455)) >> 32))))
               + 100561;
  v144 = 227 * (((v127 >> 12) & 0xF0 | HIWORD(v117) & 0xF) ^ 0x7D);
  LODWORD(v73) = 227
               * (*((unsigned __int8 *)v18
                  + (v144
                                 + 100561
                                 - 966 * ((4446136 * (unint64_t)(v144 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ 0x2A)) ^ 0x2A);
  v145 = v73 + 100561 - 966 * ((4446136 * (unint64_t)(v73 + 100561)) >> 32);
  LODWORD(v73) = *((unsigned __int8 *)&STACK[0x7C0]
                 + (v73 + 37455 - 966 * ((4446136 * (unint64_t)(v73 + 37455)) >> 32)));
  LODWORD(v73) = 227
               * ((((v73 >> 4) ^ 2)
                                  - 2 * (((v73 >> 4) ^ 2) & 0xFB ^ ((v73 & 0x10) != 0))
                                  + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                          + (v144
                                                         + 37455
                                                         - 966
                                                         * ((4446136 * (unint64_t)(v144 + 37455)) >> 32))))
               + 100561;
  v146 = (HIWORD(v126) & 0xF0 | (v118 >> 20) & 0xF) ^ 0x7D;
  v147 = (HIWORD(v126) & 0xB0 ^ 0x18B) + (HIWORD(v126) & 0xB0 ^ 0x30) + v146;
  LODWORD(v73) = 227
               * (*((unsigned __int8 *)v18
                  + (227 * v147 - 966 * ((4446136 * (unint64_t)(227 * v147)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ 0x2A)) ^ 0x2A);
  v148 = v73 + 100561 - 966 * ((4446136 * (unint64_t)(v73 + 100561)) >> 32);
  LODWORD(v73) = (*((unsigned __int8 *)&STACK[0x7C0]
                  + (v73 + 37455 - 966 * ((4446136 * (unint64_t)(v73 + 37455)) >> 32))) >> 4) ^ 2;
  LODWORD(v73) = (v73 - ((2 * v73) & 0x55) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                    + (227 * v146
                                                                                   + 37455
                                                                                   - 966
                                                                                   * ((4446136
                                                                                     * (unint64_t)(227 * v146 + 37455)) >> 32)));
  v149 = ((*((unsigned __int8 *)v18 + v148) ^ 0x2A) << 20) ^ ((*((unsigned __int8 *)v18 + v145) ^ 0x2A) << 16);
  LODWORD(STACK[0x5B8]) = v149;
  LODWORD(v73) = 227 * (((2 * v73) & 0x77777777) + (v73 ^ 0x1BB));
  LOBYTE(v146) = *((_BYTE *)&STACK[0x7C0] + (v131 + 100561) % 0x3C6u) ^ 0x2A;
  v150 = 227 * (STACK[0x5D8] & 0xFFFFFF0F | (16 * (v146 & 0xF))) + 159354;
  v151 = 16 * (*((unsigned __int8 *)&STACK[0x7C0] + v139) ^ 0x2A);
  v152 = *((unsigned __int8 *)&STACK[0x7C0] + (v150 - 966 * ((4446136 * (unint64_t)v150) >> 32)));
  v153 = *((unsigned __int8 *)&STACK[0x7C0]
         + (227 * (((v151 ^ v146) & 0xF0 | v134) ^ 0x6A057203) + 159354) % 0x3C6);
  v154 = *((unsigned __int8 *)v18 + v138) ^ (16
                                           * (*((unsigned __int8 *)v18
                                              + (v73
                                                             - 966
                                                             * ((4446136 * (unint64_t)v73) >> 32))) ^ 0x2A));
  LODWORD(STACK[0x5C0]) = v154;
  v155 = v152 ^ (16 * (v153 ^ 0x2A));
  LODWORD(STACK[0x5D8]) = v155;
  v156 = v143 ^ v151;
  v157 = (v120 >> 8) & 0xF | (16
                            * (((v134 ^ 3 | ~(v120 >> 4) & 0xF)
                              + (v154 & 0xD5)
                              + (v154 & 0xD5 ^ 0xD5)
                              + 43) & BYTE1(v156)));
  LODWORD(v73) = *((unsigned __int8 *)&STACK[0x7C0]
                 + (227 * v157
                                + 159354
                                - 966 * ((4446136 * (unint64_t)(227 * v157 + 159354)) >> 32))) ^ 0x2A;
  v158 = 227 * (((v143 >> 8) & 0xF0 | ((unsigned __int16)v117 >> 12)) ^ 1) + 159354;
  LODWORD(v73) = (((_DWORD)v73 << 8) - 30514918 - (((_DWORD)v73 << 9) & 0xC200)) ^ v155;
  v159 = *((unsigned __int8 *)&STACK[0x7C0] + (v158 - 966 * ((4446136 * (unint64_t)v158) >> 32))) ^ 0x2A;
  v160 = (v73 ^ 0xFE2E6130) & 0x92B | (((v159 >> 6) & 1) << 18) | (v73 ^ 0xFE2E6130) & 0xF6D4 ^ (v159 << 12) & 0xFFFBFFFF;
  v161 = v160 + 478156880 - 2 * (v160 & 0x1852 ^ v73 & 2);
  LODWORD(STACK[0x5C8]) = v161;
  LODWORD(STACK[0x5B0]) = v156 ^ v149;
  LODWORD(STACK[0x5BC]) = (227 * ((((v156 ^ v149) >> 12) & 0xF0 | HIWORD(v117) & 0xF) ^ 0xD) + 159354)
                        % ((HIWORD(v117) & 0x184A ^ 0x1848)
                         + (HIWORD(v117) & 0x184A ^ 0xDE210002)
                         + (v161 & 0xEEB7C ^ 0x21DEE32C)
                         + (v161 & 0xEEB7C ^ 0x850));
  v162 = STACK[0x5A0];
  v163 = (a7 ^ 0x2B9FBED9) - v7 - LODWORD(STACK[0x5A0]) - 46943939;
  v164 = ((2 * v163) & 0xFFFFFB2E) + (v163 ^ 0xFFFFFD97);
  v165 = v164 - ((2 * v164 + 116159626) & 0xCC96D0C) + 1910173899;
  LODWORD(STACK[0x594]) = v165;
  LODWORD(STACK[0x5D4]) = v164;
  v166 = ((((v165 ^ 0x11174E8A) + 1754007540) ^ (344573371 - v164))
        - ((2 * (((v165 ^ 0x11174E8A) + 1754007540) ^ (344573371 - v164))) & 0xCC96D0C)
        - 2040220026) ^ v165;
  v167 = LODWORD(STACK[0x660]) + LODWORD(STACK[0x668]);
  LODWORD(v73) = (LODWORD(STACK[0x668]) - 661723704) ^ 0xF96FE0BB;
  LODWORD(STACK[0x530]) = v73;
  LODWORD(v73) = ((2 * (v167 - v162 - v73 - v164 - 782231680)) & 0xBB7DAAC6)
               + ((v167 - v162 - v73 - v164 - 782231680) ^ 0x5DBED563);
  LODWORD(STACK[0x668]) = v73;
  v168 = v166 - ((2 * v166 + 286789606) & 0x3A8E6FCE) - 2049753126;
  LODWORD(STACK[0x660]) = v168;
  v169 = ((2 * (v162 - 1822289359 + (v168 ^ 0xE2B8C818))) & 0xFEEBF7FE)
       + ((v162 - 1822289359 + (v168 ^ 0xE2B8C818)) ^ 0x7F75FBFF);
  v170 = (v169 - 486425780) ^ (v73 + 60186376);
  LODWORD(STACK[0x508]) = v170;
  v171 = LODWORD(STACK[0x61C]) ^ 0x3633CEC3;
  LODWORD(STACK[0x4B0]) = v171;
  v172 = v171 - v170 - ((2 * (v171 - v170)) & 0x93C5F4FA) - 907871619;
  v173 = 227
       * (((v171 - ((v169 + 76) ^ (v73 + 8)) - ((2 * (v171 - ((v169 + 76) ^ (v73 + 8)))) & 0xFA) + 125) >> 4) ^ 7);
  v174 = (v173 + 16117)
       % (((((v173 + 16117) & 0x3FFB) + ((-16118 - v173) & 0xF0FFBFFB)) & 0xF05FFAD5)
        + (((v173 + 16117) | (-16118 - v173)) & 0xFA048F5));
  v175 = STACK[0x650];
  LODWORD(v73) = ((2 * (v10 - v11 - LODWORD(STACK[0x650]) - 1575509601)) & 0x7EFFD5AE)
               + ((v10 - v11 - LODWORD(STACK[0x650]) - 1575509601) ^ 0xBF7FEAD7);
  v176 = v73 - ((2 * v73 + 1475123722) & 0x95C00720) + 1993756821;
  LODWORD(STACK[0x4A4]) = v176;
  v177 = v176 ^ (-737561861 - v73) ^ ((v176 ^ 0xDD93FB9C) + 1754007540);
  v178 = ((2 * v177) & 0xB33DDFEA ^ 0x91000720) + (v177 ^ 0x937EEC65);
  v179 = v9 + LODWORD(STACK[0x670]);
  v180 = (LODWORD(STACK[0x670]) - 1288394389) ^ 0xF96FE0BB;
  LODWORD(STACK[0x4A0]) = v180;
  v181 = ((2 * (v179 - v175 - v180 - v73 - 1558660363)) & 0xFF9FBEFE)
       + ((v179 - v175 - v180 - v73 - 1558660363) ^ 0x7FCFDF7F);
  LODWORD(STACK[0x474]) = v181;
  v182 = v178 - ((2 * v178 + 500838396) & 0x93228BBE) + 1484676573;
  LODWORD(STACK[0x670]) = v182;
  v183 = ((2 * (v175 - 792184645 + (v182 ^ 0x366EBA20))) & 0x9FF8F74E)
       + ((v175 - 792184645 + (v182 ^ 0x366EBA20)) ^ 0x4FFC7BA7);
  LODWORD(STACK[0x478]) = v183;
  v184 = (v183 + 310066084) ^ (v181 - 511355668);
  LODWORD(STACK[0x650]) = v184;
  v185 = LODWORD(STACK[0x658]) ^ (v10 - 498460948);
  LODWORD(STACK[0x658]) = v185;
  v186 = ((v73 + 1082135849) ^ LODWORD(STACK[0x5AC]) ^ 0xADA22A8A)
       - 756216529
       - 2
       * (((v73 + 1082135849) ^ LODWORD(STACK[0x5AC]) ^ 0xADA22A8A) & 0x52ED0D3F ^ ((v73 + 1082135849) ^ LODWORD(STACK[0x5AC])) & 0x10);
  v187 = LODWORD(STACK[0x4C8]) - 1662361769;
  LODWORD(STACK[0x3E0]) = v187;
  v188 = v187 - 1341946791 + v183;
  LODWORD(STACK[0x570]) = v188;
  v189 = v188 - ((2 * v188) & 0x36F891E0) + 461129968;
  LODWORD(STACK[0x430]) = v189;
  v190 = 227 * (HIBYTE(v189) & 0xF ^ 0xB) + 16117;
  v191 = 227 * ((v189 >> 20) & 0xF ^ 7) + 16117;
  v192 = *((unsigned __int8 *)&STACK[0x7C0]
         + (unsigned __int16)(v191 - 966 * ((unsigned __int16)((2171 * v191) >> 16) >> 5)));
  LODWORD(v73) = *((unsigned __int8 *)v18
                 + (unsigned __int16)(v190 - 966 * ((unsigned __int16)((2171 * v190) >> 16) >> 5))) ^ 0x2A ^ ((*((unsigned __int8 *)v18 + (unsigned __int16)(227 * ((v189 >> 28) ^ 1) + 16117 - 966 * ((unsigned __int16)((2171 * (227 * ((v189 >> 28) ^ 1) + 16117)) >> 16) >> 5))) ^ 0x2A) << (((v73 + 1) & 4 ^ 4) + ((v73 + 1) & 4)));
  v193 = LODWORD(STACK[0x62C]) ^ 0xE9AB067D;
  LODWORD(STACK[0x4AC]) = v193;
  v194 = v193 + 2138438655 - v169 - 1874931182 + (~(2 * (v193 + 2138438655 - v169)) | 0xDF825BDD);
  v195 = 227 * (HIWORD(v189) & 0xF ^ 0xC) + 16117;
  LOWORD(v161) = v195 - 966 * ((unsigned __int16)((2171 * v195) >> 16) >> 5);
  v196 = 227 * (((unsigned __int16)v189 >> 12) ^ 4) + 16117;
  v197 = 227 * ((v189 >> 8) & 0xF ^ 8) + 16117;
  LODWORD(v73) = (((_DWORD)v73 << 16) | ((*((unsigned __int8 *)v18 + (unsigned __int16)v161) ^ 0x2A) << 8)) ^ ((v192 ^ 0x2A) << 12) | *((unsigned __int8 *)v18 + (unsigned __int16)(v197 - 966 * ((unsigned __int16)((2171 * v197) >> 16) >> 5))) ^ 0x2A;
  v198 = ((_DWORD)v73 << 8) + 1403783739 - (((_DWORD)v73 << 9) & 0xA7581400);
  LODWORD(STACK[0x528]) = v198;
  LODWORD(STACK[0x62C]) = v186;
  v199 = 227 * ((v194 >> 20) & 0xF ^ 3) + 16117;
  LOWORD(v197) = v199 - 966 * ((unsigned __int16)((2171 * v199) >> 16) >> 5);
  LODWORD(v73) = ((*((unsigned __int8 *)v18
                   + (LODWORD(STACK[0x3D4])
                    + 227 * ((HIBYTE(v194) & 0xF) + ~(v186 & 0xFFFFFFB9 ^ 0x2D12F290 | v186 & 0xFFFFFFB9 ^ 0xD2ED0D29)))
                   % 0x3C6) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18
                                              + (unsigned __int16)(227 * ((v194 >> 28) ^ 9)
                                                                 + 16117
                                                                 - 966
                                                                 * ((unsigned __int16)((2171
                                                                                      * (227 * ((v194 >> 28) ^ 9) + 16117)) >> 16) >> 5))) ^ 0x2A) << 12);
  v200 = 227 * (HIWORD(v194) & 0xF ^ 0xE) + 16117;
  LODWORD(STACK[0x538]) = v194;
  v201 = 227
       * (((unsigned __int16)((v193 - 1025 - v169 - 11758 + (~(2 * (v193 - 1025 - v169)) | 0x5BDD)) & 0xF000) >> 12) ^ 0xD)
       + 16117;
  LOWORD(v152) = v201 - 966 * ((unsigned __int16)((2171 * v201) >> 16) >> 5);
  LODWORD(v73) = ((v73 | *((unsigned __int8 *)v18
                                       + (unsigned __int16)(v200
                                                          - 966
                                                          * ((unsigned __int16)((2171 * v200) >> 16) >> 5))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (unsigned __int16)v197) ^ 0x2A) << 12);
  v202 = 227 * ((v194 >> 8) & 0xF ^ 2) + 16117;
  LODWORD(v73) = v73 | *((unsigned __int8 *)&STACK[0x7C0]
                       + (unsigned __int16)(v202 - 966 * ((unsigned __int16)((2171 * v202) >> 16) >> 5))) ^ 0x2A;
  v203 = ((_DWORD)v73 << 8) - 2117969163 - (((_DWORD)v73 << 9) & 0x384B400);
  LODWORD(STACK[0x520]) = v203;
  v204 = (((v169 - 2138438655) & 0xB8FD5516 ^ 0xB8FD5516) + ((v169 - 2138438655) & 0xB8FD5516)) & (((v178 + 173156428) & 0x5BFED436)
                                                                                                 + ((1974327219 - v178) & 0x5BFED436));
  v205 = LODWORD(STACK[0x4C4]) - 1589767649;
  LODWORD(STACK[0x3DC]) = v205;
  v206 = v184 + v205 - 1376620299 - ((2 * (v184 + v205)) & 0x5BE4E1EA);
  LODWORD(STACK[0x61C]) = v206;
  v207 = 227 * (HIBYTE(v206) & 0xF ^ 0xD) + 16117;
  v208 = 227 * (~(v206 >> 20) & 0xF) + 16117;
  v209 = 227 * (((v185 & 0xF ^ 7) + (v185 & 0xF ^ 8)) & (HIWORD(v206) ^ 0x12)) + 16117;
  v210 = *((unsigned __int8 *)&STACK[0x7C0]
         + (unsigned __int16)(v209 - 966 * ((unsigned __int16)((2171 * ((v209 >> 1) & 0x3FFF)) >> 16) >> 4)));
  LODWORD(v73) = ((*((unsigned __int8 *)v18
                   + (unsigned __int16)(v207 - 966 * ((unsigned __int16)((2171 * v207) >> 16) >> 5))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (unsigned __int16)(227 * ((v206 >> 28) ^ 0xA) + 16117 - 966 * ((unsigned __int16)((2171 * (227 * ((v206 >> 28) ^ 0xA) + 16117)) >> 16) >> 5))) ^ 0x2A) << 12) | v210 ^ 0x2A;
  v211 = 227 * (~(v206 >> 4) & 0xF) + 16117;
  LOWORD(v136) = 227 * (v206 & 0xF ^ 5)
               + 16117
               - 966 * ((unsigned __int16)((2171 * (227 * (v206 & 0xF ^ 5) + 16117)) >> 16) >> 5);
  LODWORD(v73) = ((_DWORD)v73 << 8) ^ ((*((unsigned __int8 *)v18
                                        + (unsigned __int16)(v208
                                                           - 966
                                                           * ((unsigned __int16)((2171 * v208) >> 16) >> 5))) ^ 0x2A) << 12) | *((unsigned __int8 *)v18 + (unsigned __int16)(227 * ((v206 >> 8) & 0xF) + 16117 - 966 * ((unsigned __int16)((2171 * (227 * ((v206 >> 8) & 0xF) + 16117)) >> 16) >> 5))) ^ 0x2A;
  v212 = ((_DWORD)v73 << 8) - 1559874357 - (((_DWORD)v73 << 9) & 0x460C6800);
  LODWORD(v73) = *((unsigned __int8 *)&STACK[0x7C0]
                 + (unsigned __int16)(227
                                    * ((v210 & 0x47 ^ 0x45 | v210 & 0x47 ^ 2)
                                     + (((unsigned __int16)(v184 + v205 + 28917 - ((2 * (v184 + v205)) & 0xE1EA)) >> 12) ^ 7)))
                 % 0x3C6u) ^ 0x2A;
  v213 = *((unsigned __int8 *)&STACK[0x7C0]
         + (unsigned __int16)(v211 - 966 * ((unsigned __int16)((2171 * v211) >> 16) >> 5))) ^ 0x2A;
  v214 = v212 ^ ((_DWORD)v73 << 12);
  LODWORD(STACK[0x560]) = v212;
  LODWORD(v73) = *((unsigned __int8 *)&STACK[0x7C0] + (unsigned __int16)v136) ^ 0x2A;
  v215 = (v214 ^ 0xA30634CB | v73) ^ (16 * v213);
  v216 = 227 * (HIBYTE(v172) & 0xF ^ 9) + 16117;
  v217 = 227 * ((v172 >> 20) & 0xF ^ 0xE) + 16117;
  v218 = ((*((unsigned __int8 *)v18
           + (unsigned __int16)(v216 - 966 * ((unsigned __int16)((2171 * v216) >> 16) >> 5))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (unsigned __int16)(227 * ((v172 >> 28) ^ 0xC) + 16117 - 966 * ((unsigned __int16)((2171 * (227 * ((v172 >> 28) ^ 0xC) + 16117)) >> 16) >> 5))) ^ 0x2A) << 12);
  v219 = 227 * (HIWORD(v172) & 0xF ^ 2) + 16117;
  v220 = v218 | *((unsigned __int8 *)&STACK[0x7C0]
                + (unsigned __int16)(v219 - 966 * ((unsigned __int16)((2171 * v219) >> 16) >> 5))) ^ 0x2A;
  v221 = 227 * ((unsigned __int16)~(_WORD)v172 >> 12) + 16117;
  v222 = (v220 << 8) ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                         + (unsigned __int16)(v217 - 966 * ((unsigned __int16)((2171 * v217) >> 16) >> 5))) ^ 0x2A) << 12);
  v223 = 227 * ((v172 >> 8) & 0xF ^ 0xA) + 16117;
  v224 = v222 | *((unsigned __int8 *)&STACK[0x7C0]
                + (unsigned __int16)(v223 - 966 * ((unsigned __int16)((2171 * v223) >> 16) >> 5))) ^ 0x2A;
  v225 = (v224 << 8) - 1333072414 - ((v224 << 9) & 0x6115DA00);
  LOWORD(v224) = 227 * (v172 & 0xF ^ 0xD)
               + 16117
               - 966 * ((unsigned __int16)((2171 * (227 * (v172 & 0xF ^ 0xD) + 16117)) >> 16) >> 5);
  v226 = v225 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                  + (unsigned __int16)(v221 - 966 * ((unsigned __int16)((2171 * v221) >> 16) >> 5))) ^ 0x2A) << 12);
  v227 = v225;
  LODWORD(STACK[0x558]) = v225;
  v228 = *((unsigned __int8 *)&STACK[0x7C0] + (unsigned __int16)v224) ^ 0x2A;
  v229 = (v226 ^ 0xB08AEDE2 | v228) ^ (16 * (*((unsigned __int8 *)&STACK[0x7C0] + v174) ^ 0x2A));
  v230 = (v73 & 0xF ^ 0xDFEFDBDF) + 2 * (v73 & 0xF) + 537928737;
  LODWORD(STACK[0x5AC]) = v230;
  LODWORD(v73) = 227 * ((16 * (v228 & 0xF)) | v230);
  v231 = *((unsigned __int8 *)&STACK[0x7C0] + ((int)v73 + 100561) % 0x3C6u) ^ 0x2A;
  v232 = STACK[0x688];
  v233 = 227 * ((v231 + 1504922731 - ((2 * v231) & 0xD6)) ^ LODWORD(STACK[0x688]));
  v234 = (v233 + 100561) % 0x3C6u;
  v235 = *((unsigned __int8 *)&STACK[0x7C0] + (v233 + 37455) % 0x3C6u);
  LODWORD(v73) = 227
               * ((((v235 >> 4) ^ 2) + ((v235 >> 3) & 0x14 ^ 0xFB) + 43) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                                            + ((int)v73 + 37455)
                                                                                            % 0x3C6u))
               + 100561;
  v236 = *((unsigned __int8 *)&STACK[0x7C0] + v234);
  v237 = (v236 ^ 0x2A) - ((2 * (v236 ^ 0x2A)) & 0x112);
  LODWORD(STACK[0x5A0]) = v215;
  v238 = 227 * (v229 & 0xF0 | (v215 >> 4));
  v239 = 227
       * (*((unsigned __int8 *)v18
          + (v238 + 100561 - 966 * ((4446136 * (unint64_t)(v238 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ 0x2A)) ^ 0x2A);
  LODWORD(STACK[0x584]) = v239;
  LODWORD(v73) = (*((unsigned __int8 *)&STACK[0x7C0]
                  + (v239
                                 + 37455
                                 - 966 * ((4446136 * (unint64_t)(v239 + 37455)) >> 32))) ^ 0x2Au) >> ((v236 & 4 ^ 4) + (v236 & 4));
  LODWORD(v73) = 227
               * ((v73 - ((2 * v73) & 0x55) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                     + (v238
                                                                                    + 37455
                                                                                    - 966
                                                                                    * ((4446136
                                                                                      * (unint64_t)(v238 + 37455)) >> 32))))
               + 100561;
  v240 = (v229 >> 4) & 0xF0 | (v215 >> 8) & 0xF;
  LODWORD(STACK[0x598]) = v237 - 2115736183;
  v241 = ((v237 - 2115736183) & 0xA5 ^ 0x24) + (v236 & 0xA5 ^ 0x20) + v240;
  v242 = 227
       * (*((unsigned __int8 *)v18
          + (227 * v240
                         + 100561
                         - 966 * ((4446136 * (unint64_t)(227 * v240 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ 0x2A)) ^ 0x2A);
  LODWORD(STACK[0x580]) = v242;
  LODWORD(v73) = (*((unsigned __int8 *)&STACK[0x7C0]
                  + (v242
                                 + 37455
                                 - 966 * ((4446136 * (unint64_t)(v242 + 37455)) >> 32))) >> 4) ^ 2;
  LODWORD(v73) = 227
               * ((v73 - ((2 * v73) & 0x55) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                     + (227 * v241
                                                                                    - 966
                                                                                    * ((4446136
                                                                                      * (unint64_t)(227 * v241)) >> 32))))
               + 100561;
  LODWORD(STACK[0x588]) = v214;
  v243 = 227 * (((v226 >> 8) & 0xF0 | ((unsigned __int16)v214 >> 12)) ^ 0xE3);
  v244 = 227
       * (*((unsigned __int8 *)v18
          + (v243 + 100561 - 966 * ((4446136 * (unint64_t)(v243 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ 0x2A)) ^ 0x2A);
  LODWORD(STACK[0x578]) = v244;
  LODWORD(v73) = *((unsigned __int8 *)&STACK[0x7C0]
                 + (v244 + 37455 - 966
                                               * ((4446136 * (unint64_t)(v244 + 37455)) >> 32))) >> 4;
  LODWORD(v73) = 227
               * (((v73 ^ 2) - 2 * ((v73 ^ 2) & 0xE ^ v73 & 4) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                                        + (v243 + 37455 - 966 * ((4446136 * (unint64_t)(v243 + 37455)) >> 32))))
               + 100561;
  v245 = 227 * (((v226 >> 12) & 0xF0 | HIWORD(v214) & 0xF) ^ 0xA6);
  v246 = 227
       * (*((unsigned __int8 *)v18
          + (v245 + 100561 - 966 * ((4446136 * (unint64_t)(v245 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ 0x2A)) ^ 0x2A);
  LODWORD(STACK[0x568]) = v246;
  LODWORD(v73) = v246 + 37455 - 966 * ((4446136 * (unint64_t)(v246 + 37455)) >> 32);
  v247 = v198 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                  + (unsigned __int16)(v196 - 966 * ((unsigned __int16)((2171 * v196) >> 16) >> 5))) ^ 0x2A) << 12);
  LODWORD(STACK[0x4FC]) = v247;
  v248 = v203 ^ ((*((unsigned __int8 *)&STACK[0x7C0] + (unsigned __int16)v152) ^ 0x2A) << 12);
  LODWORD(STACK[0x500]) = v248;
  v249 = 227 * (((v248 >> 8) & 0xF0 | ((unsigned __int16)v247 >> 12)) ^ 0x50);
  LODWORD(STACK[0x510]) = v249;
  v250 = *((unsigned __int8 *)&STACK[0x7C0]
         + (v245 + 37455 - 966 * ((4446136 * (unint64_t)(v245 + 37455)) >> 32)));
  LODWORD(v73) = *((unsigned __int8 *)&STACK[0x7C0] + v73);
  LODWORD(STACK[0x518]) = (v249 + 37455) % (v204 - 419188816);
  v251 = v250 ^ (v73 >> 4);
  LODWORD(STACK[0x548]) = v251;
  LOBYTE(v73) = (v251 & 6 ^ 6) + (v251 & 6);
  v252 = 227 * ((HIWORD(v227) & 0xF0 | (v212 >> 20) & 0xF) ^ 0x80);
  LODWORD(STACK[0x540]) = v252;
  LODWORD(STACK[0x550]) = (v252 + 37455) % (v73 & 8 | ((v252 + 37455) ^ (432 - v252)) & 0x3C6);
  LODWORD(v73) = LODWORD(STACK[0x530]) + (LODWORD(STACK[0x594]) ^ 0x799B4979);
  v253 = ((LODWORD(STACK[0x668]) - 1572787555) ^ 0x1D4737E7 ^ LODWORD(STACK[0x660])) + LODWORD(STACK[0x668]);
  LODWORD(STACK[0x594]) = v253;
  v254 = STACK[0x508];
  LODWORD(v73) = v73 - v253 - v169 - LODWORD(STACK[0x508]) - 1761874753;
  v255 = v73 - ((2 * v73) & 0xD72B4D9E);
  v256 = LODWORD(STACK[0x620]) ^ 0x35A2DF65;
  v257 = LODWORD(STACK[0x650]) ^ 0x6B56220B;
  LODWORD(STACK[0x4A8]) = v256;
  v258 = v257 + v256 - ((2 * (v257 + v256)) & 0xDF312B6E);
  LODWORD(v73) = 227 * (((v258 - 275212873) >> 28) ^ 0xE) + 16117;
  v259 = 227 * (~((v258 - 275212873) >> 24) & 0xF) + 16117;
  LODWORD(STACK[0x620]) = v254 ^ 0x6B56220B;
  v260 = LODWORD(STACK[0x4BC])
       - (v254 ^ 0x6B56220B)
       - 1103008788
       - ((2 * (LODWORD(STACK[0x4BC]) - (v254 ^ 0x6B56220B) - 1103008788)) & 0xFA541EDA);
  v261 = 227 * (((v258 - 275212873) >> 20) & 0xF ^ 9) + 16117;
  LODWORD(v73) = ((*((unsigned __int8 *)v18
                   + (unsigned __int16)(v259 - 966 * ((unsigned __int16)((2171 * v259) >> 16) >> 5))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (unsigned __int16)(v73 - 966 * ((unsigned __int16)((2171 * v73) >> 16) >> 5))) ^ 0x2A) << 12);
  v262 = 227 * (((v258 - 275212873) >> 16) & 0xF ^ 8) + 16117;
  v263 = (-459621308
        - ((((v258 - 275212873) >> 12) ^ 0x3719D1E7) & 0x11077008)
        + ((2 * (((v258 - 275212873) >> 12) ^ 0x3719D1E7)) & 0x220A8000)
        + 38) & 0xE6FFFC4A ^ (((v258 - 275212873) >> 12) ^ 0x3719D1E7) & 0x77007;
  LODWORD(v73) = v73 | *((unsigned __int8 *)&STACK[0x7C0]
                       + (unsigned __int16)(v262 - 966 * ((unsigned __int16)((2171 * v262) >> 16) >> 5))) ^ 0x2A;
  LODWORD(STACK[0x530]) = v258 - 275212873;
  v264 = ((v263 ^ 0x9ABC44) + (v263 ^ 0x9ABC4B)) & (((v258 - 275212873) >> 8) ^ 0xEF9895);
  LODWORD(v73) = ((_DWORD)v73 << 8) ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                                        + (unsigned __int16)(v261 - 966 * ((unsigned __int16)((2171 * v261) >> 16) >> 5))) ^ 0x2A) << 12);
  v265 = STACK[0x474];
  v266 = ((LODWORD(STACK[0x474]) - 2144329599) ^ 0xC99145DF ^ LODWORD(STACK[0x670])) + LODWORD(STACK[0x474]);
  v267 = v266;
  v268 = 227 * (((v258 - 73) >> 4) ^ 0xB) + 16117;
  v269 = 227 * (((_BYTE)v258 - 57) & 0xF ^ 7) + 16117;
  LODWORD(v73) = ((v73 | *((unsigned __int8 *)v18
                                       + (227 * ((v264 + 475664639 - ((2 * v264) & 0xB421BE)) ^ 0x1C5A10FF) + 16117)
                                       % 0x3C6) ^ 0x2A) ^ (16
                                                         * (*((unsigned __int8 *)v18
                                                            + (227 * (v263 ^ 0xE49ABC44) + 16117) % 0x3C6) ^ 0x2A))) << (((3 - v266) & 8) + ((v266 + 12) & 8));
  v270 = v73 + 1892969416 - ((2 * v73) & 0xE1A8D790);
  LODWORD(v73) = *((unsigned __int8 *)&STACK[0x7C0]
                 + (unsigned __int16)(v269 - 966 * ((unsigned __int16)((2171 * v269) >> 16) >> 5))) ^ 0x2A;
  v271 = v73 + 1892969416 - ((2 * v73) & 0x190);
  v272 = v260 - 47575187;
  LODWORD(v73) = 227 * (((v260 - 47575187) >> 24) & 0xF ^ 0xD) + 16117;
  LODWORD(v73) = ((*((unsigned __int8 *)v18
                   + (unsigned __int16)(v73 - 966 * ((unsigned __int16)((2171 * v73) >> 16) >> 5))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (unsigned __int16)(227 * ((47575186 - v260) >> 28) + 16117 - 966 * ((unsigned __int16)((2171 * (227 * ((47575186 - v260) >> 28) + 16117)) >> 16) >> 5))) ^ 0x2A) << 12);
  v273 = 227 * (((v260 - 47575187) >> 16) & 0xF ^ 0xA) + 16117;
  v274 = 227 * ((unsigned __int16)(v260 + 3949) >> 12) + 16117;
  v275 = 227 * ((v272 >> 20) & 0xF ^ 2) + 16117;
  LODWORD(v73) = v73 | *((unsigned __int8 *)&STACK[0x7C0]
                       + (unsigned __int16)(v273 - 966 * ((unsigned __int16)((2171 * v273) >> 16) >> 5))) ^ 0x2A;
  v276 = 227 * (~(v272 >> 8) & 0xF) + 16117;
  v277 = (unsigned __int16)(v276 - 966 * ((unsigned __int16)((2171 * v276) >> 16) >> 5))
       + 107005994
       - ((2 * (v276 - 966 * ((2171 * v276) >> 21))) & 0x54);
  v278 = (*((unsigned __int8 *)&STACK[0x7C0]
          + (unsigned __int16)(v275 - 966 * ((unsigned __int16)((2171 * v275) >> 16) >> 5))) ^ 0x2A) << 12;
  v279 = *((unsigned __int8 *)&STACK[0x7C0] + (v277 ^ 0x660C82A));
  LODWORD(v73) = ((v278 ^ ((_DWORD)v73 << 8) | v279 ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                                                                      + (unsigned __int16)(v274
                                                                                         - 966
                                                                                         * ((unsigned __int16)((2171 * v274) >> 16) >> 5))) ^ 0x2A) << 12);
  v280 = v73 + 614187443 - ((2 * v73) & 0x49378200);
  LODWORD(v73) = (v277 & 0xCB ^ 0xFFFFFFC1) + (v277 & 0xCB ^ 0xA);
  v281 = 227 * ((v272 >> 4) ^ 6) + 16117;
  LODWORD(v73) = 227 * ((v73 + 68) & (v272 & 0xDF ^ 0x4D)) + 16117;
  LODWORD(v73) = *((unsigned __int8 *)&STACK[0x7C0]
                 + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ 0x2A;
  v282 = v270 ^ v271;
  v283 = v282 ^ (16
               * (*((unsigned __int8 *)&STACK[0x7C0]
                  + (unsigned __int16)(v268 - 966 * ((unsigned __int16)((2171 * v268) >> 16) >> 5))) ^ 0x2A));
  LODWORD(STACK[0x508]) = v282 & 0xF;
  LODWORD(v73) = v280 ^ (v73 + 614187443 - ((2 * v73) & 0x166));
  v284 = v73 ^ (16
              * (*((unsigned __int8 *)&STACK[0x7C0]
                 + (unsigned __int16)(v281 - 966 * ((unsigned __int16)((2171 * v281) >> 16) >> 5))) ^ 0x2A));
  LODWORD(v73) = 227 * (v282 & 0xF | (16 * (v73 & 0xF)));
  v285 = *((unsigned __int8 *)&STACK[0x7C0]
         + (v73 + 100561 - 966 * ((4446136 * (unint64_t)(v73 + 100561)) >> 32))) ^ 0x2A;
  LOBYTE(v73) = *((_BYTE *)&STACK[0x7C0]
                + (v73 + 37455 - 966 * ((4446136 * (unint64_t)(v73 + 37455)) >> 32)));
  v286 = (v285 + 1504922731 - ((2 * v285) & 0xD6)) ^ v232;
  v287 = 227 * v286 + 100561;
  LOBYTE(v73) = v73 ^ (*((_BYTE *)&STACK[0x7C0]
                       + 227
                       * (v286
                        + (((v73 & 0xBD ^ 0x95) + (v73 & 0xBD ^ 0x28)) & ((v279 & 0xE7 ^ (v279 ^ 0xC5) & 0xE7 ^ 0x22)
                                                                                         + 2
                                                                                         * ((v279 ^ 0xC5) & 0xE7 & (v279 ^ 0x22)))))
                       % 0x3C6) >> 4);
  LODWORD(v73) = ((v73 & 0xE3 ^ 0x20 | v73 & 0xE3 ^ 0xC3)
                                 - (((4 - (v73 ^ 0x28)) ^ ((v73 ^ 0x28) - 69)) & 0x22)
                                 + 34)
               * ((v73 ^ 0x28) + 443);
  LODWORD(STACK[0x4F8]) = v283;
  v288 = 227 * (v284 & 0xF0 | (v283 >> 4));
  LODWORD(v73) = 227
               * (*((unsigned __int8 *)v18
                  + (v288
                                 + 100561
                                 - 966 * ((4446136 * (unint64_t)(v288 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ 0x2A)) ^ 0x2A);
  v289 = v73 + 100561 - 966 * ((4446136 * (unint64_t)(v73 + 100561)) >> 32);
  LODWORD(v73) = *((unsigned __int8 *)&STACK[0x7C0]
                 + (v73 + 37455 - 966 * ((4446136 * (unint64_t)(v73 + 37455)) >> 32)));
  LODWORD(v73) = 227
               * ((((v73 >> 4) ^ 2) + ((v73 >> 3) & 0x14 ^ 0xFB) + 43) ^ *((unsigned __int8 *)&STACK[0x7C0] + (v288 + 37455 - 966 * ((4446136 * (unint64_t)(v288 + 37455)) >> 32))))
               + 100561;
  v290 = *((unsigned __int8 *)v18 + v287 % 0x3C6) ^ (16 * (*((unsigned __int8 *)v18 + v289) ^ 0x2A));
  v291 = 227 * ((v284 >> 4) & 0xF0 | (v283 >> 8) & 0xF);
  LODWORD(v73) = 227
               * (*((unsigned __int8 *)v18
                  + (v291
                                 + 100561
                                 - 966 * ((4446136 * (unint64_t)(v291 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ 0x2A)) ^ 0x2A);
  v292 = v73 + 100561 - 966 * ((4446136 * (unint64_t)(v73 + 100561)) >> 32);
  LODWORD(v73) = (*((unsigned __int8 *)&STACK[0x7C0]
                  + (v73 + 37455 - 966 * ((4446136 * (unint64_t)(v73 + 37455)) >> 32))) >> 4) ^ 2;
  LODWORD(v73) = 227
               * ((v73 - ((2 * v73) & 0x55) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                     + (v291
                                                                                    + 37455
                                                                                    - 966
                                                                                    * ((4446136
                                                                                      * (unint64_t)(v291 + 37455)) >> 32))))
               + 100561;
  v293 = ((unsigned __int16)v270 >> 12) ^ 6;
  LODWORD(STACK[0x4F0]) = v293;
  v294 = 227 * ((((v280 << 9) & 0x1E00000 | (v293 << 17)) >> 17) ^ 0xC0);
  v295 = 227
       * (*((unsigned __int8 *)v18
          + (v294 + 100561 - 966 * ((4446136 * (unint64_t)(v294 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ 0x2A)) ^ 0x2A);
  LODWORD(STACK[0x4E4]) = v295;
  LODWORD(v73) = *((unsigned __int8 *)&STACK[0x7C0]
                 + (v295 + 37455 - 966
                                               * ((4446136 * (unint64_t)(v295 + 37455)) >> 32))) >> 4;
  LODWORD(v73) = 227
               * (((v73 ^ 2) - 2 * ((v73 ^ 2) & 0xE ^ v73 & 4) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                                        + (v294 + 37455 - 966 * ((4446136 * (unint64_t)(v294 + 37455)) >> 32))))
               + 100561;
  LODWORD(STACK[0x480]) = v270;
  v296 = HIWORD(v270) & 0xF ^ 4;
  LODWORD(STACK[0x4EC]) = v296;
  LODWORD(STACK[0x48C]) = v280;
  v297 = ((v280 >> 12) & 0xF0 | v296) ^ 0xB0;
  v298 = v255 - 342513969;
  v299 = 227 * (v297 + ((v255 - 342513969) & 0xA5 ^ 5 | (v255 - 342513969) & 0xA5 ^ 0xA0));
  v300 = 227
       * (*((unsigned __int8 *)v18
          + (227 * v297
                         + 100561
                         - 966 * ((4446136 * (unint64_t)(227 * v297 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ 0x2A)) ^ 0x2A);
  LODWORD(STACK[0x494]) = v300;
  LODWORD(v73) = v300 + 37455 - 966 * ((4446136 * (unint64_t)(v300 + 37455)) >> 32);
  LODWORD(STACK[0x49C]) = v290 ^ 0x2A;
  v301 = v290 ^ 0x2A ^ ((*((unsigned __int8 *)&STACK[0x7C0] + v292) ^ 0x2A) << 8);
  LODWORD(STACK[0x4E8]) = v301;
  LODWORD(STACK[0x490]) = (227
                         * ((((*((_BYTE *)&STACK[0x7C0] + v73) >> 4) ^ 2)
                                            + ((*((_BYTE *)&STACK[0x7C0] + v73) >> 3) & 0x14 ^ 0xFB)
                                            + 43) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                  + (v299
                                                                                 - 966
                                                                                 * ((4446136 * (unint64_t)v299) >> 32))))
                         + 100561)
                        % ((v301 & 0x3C6 ^ 0x3C6) + (v301 & 0x3C6u));
  v302 = 227 * (((v280 >> 20) & 0xF0 | HIBYTE(v270) & 0xF) ^ 0x40);
  LODWORD(STACK[0x488]) = v302;
  LODWORD(STACK[0x484]) = (v302 + 37455) % (((v302 + 37455) ^ (432 - v302)) & 0x3C6u);
  LODWORD(v73) = (v298 ^ 0x146A5930) + LODWORD(STACK[0x668]);
  v303 = v73 - 2055039487;
  LODWORD(STACK[0x498]) = 484162786;
  v304 = v73 - ((2 * (v73 - 2055039487)) & 0x1CDBBCE2);
  v305 = LODWORD(STACK[0x4A0]) + (LODWORD(STACK[0x4A4]) ^ 0xB51FFC6F);
  LODWORD(STACK[0x47C]) = v267;
  v306 = v305 - v267 - LODWORD(STACK[0x478]) - LODWORD(STACK[0x650]) - 1986824573;
  v307 = v306 - ((2 * v306) & 0xC00D941A) - 536425971;
  v308 = v267 - 1984028996 + (v307 ^ 0xA4771D38);
  LODWORD(STACK[0x668]) = v308;
  v309 = (v307 ^ 0x1FF935F2) + v265 - ((2 * ((v307 ^ 0x1FF935F2) + v265) + 115546058) & 0x362E0FA4) - 24603721;
  v310 = (v308 + (v307 ^ v257 ^ 0xA4771D38)) ^ v307 ^ v257;
  v311 = v307 ^ v257 ^ 0x3F601AEA ^ v309;
  v312 = LODWORD(STACK[0x624]) ^ 0xB0B460F0;
  LODWORD(STACK[0x4A4]) = v312;
  v313 = v311 + v312 - ((2 * (v311 + v312)) & 0x29B83068) - 1797515212;
  v314 = *((unsigned __int8 *)&STACK[0x7C0]
         + (unsigned __int16)(227 * ((v313 >> 28) ^ 9)
                            + 16117
                            - 966 * ((unsigned __int16)((2171 * (227 * ((v313 >> 28) ^ 9) + 16117)) >> 16) >> 5))) ^ 0x2A;
  LODWORD(v73) = 16 * v314 - ((32 * v314) & 0xBC0);
  v315 = 227 * (HIBYTE(v313) & 0xF ^ 4) + 16117;
  LOWORD(v267) = v315 - 966 * ((unsigned __int16)((2171 * v315) >> 16) >> 5);
  v316 = v298 ^ LODWORD(STACK[0x620]);
  LODWORD(STACK[0x470]) = v316;
  LODWORD(STACK[0x474]) = v316 ^ 0xA189AF8B;
  v317 = (v304 - 1812958094) ^ v316 ^ 0xA189AF8B;
  v318 = *((unsigned __int8 *)&STACK[0x7C0] + (unsigned __int16)v267);
  v319 = LODWORD(STACK[0x4D8]) - v317 + 327552787 - ((2 * (LODWORD(STACK[0x4D8]) - v317 + 327552787)) & 0x63729BC);
  v320 = 227 * ((v313 >> 20) & 0xF ^ 0xD) + 16117;
  LOWORD(v304) = v320 - 966 * ((unsigned __int16)((2171 * v320) >> 16) >> 5);
  v321 = (v318 ^ 0x2A) - 1458462065 - ((2 * (v318 ^ 0x2A)) & 0xFFFFFF1F);
  LODWORD(v73) = v73 - 1662454294;
  v322 = ((v73 ^ v321 ^ 0xCA06A89A) + (v321 ^ 0xA911A28F) + 1) ^ ((v73 ^ 0x63170A15) + 1);
  LODWORD(v73) = ((v322 - ((2 * v322) & 0xEBD4) + 62954) ^ v73) + (v321 ^ 0xA28F);
  v323 = 227 * (HIWORD(v313) & 0xF ^ 0xC) + 16117;
  LOWORD(v322) = v323 - 966 * ((unsigned __int16)((2171 * v323) >> 16) >> 5);
  v324 = STACK[0x430];
  v325 = LODWORD(STACK[0x430]) ^ LODWORD(STACK[0x670]);
  LODWORD(STACK[0x670]) = v325;
  v326 = v319 - 2095344418;
  LOWORD(v308) = 227
               * ((((v319 - 27426) & 0x47 | ((v325 & 0x40 ^ 0x40) + (v325 & 0x40))) ^ 1 | (v319 - 27426) & 0x47 ^ 0x46)
                + (((unsigned __int16)v313 >> 12) ^ 1));
  v327 = 227 * ((v313 >> 8) & 0xF ^ 8) + 16117;
  v328 = (unsigned __int16)(v327 - 966 * ((unsigned __int16)((2171 * v327) >> 16) >> 5))
       - 1161839024
       - ((2 * (v327 - 966 * ((2171 * v327) >> 21))) & 0x4A0);
  LODWORD(v73) = (((*((unsigned __int8 *)v18 + (unsigned __int16)v322) ^ 0x2A) << 8) | ((_DWORD)v73 << 16)) ^ ((*((unsigned __int8 *)v18 + (unsigned __int16)v304) ^ 0x2A) << 12) | *((unsigned __int8 *)v18 + (v328 ^ 0xBABFBE50)) ^ 0x2A;
  LODWORD(STACK[0x650]) = v313;
  v329 = ((_DWORD)v73 << 8) + 1090978403 - (((_DWORD)v73 << 9) & 0x820E0400);
  LODWORD(STACK[0x624]) = v329;
  LOWORD(v73) = 227 * (((v313 >> 4) ^ 3) + ((73 * (v328 & 0xCF ^ 0x40 | v328 & 0xCF ^ 0xFF8F)) & 0xBB))
              + 15436;
  v330 = 227 * (v313 & 0xF ^ 4) + 16117;
  v331 = ((((((v319 + LODWORD(STACK[0x3B8])) >> 28) + 71) & 2)
         + (-((v319 + LODWORD(STACK[0x3B8])) >> 28) & 2)) | 0xE1)
       * (((v319 + LODWORD(STACK[0x3B8])) >> 28) + 71);
  v332 = 227 * (HIBYTE(v326) & 0xF ^ 3) + 16117;
  v333 = v329 ^ ((*((unsigned __int8 *)&STACK[0x7C0] + (unsigned __int16)v308 % 0x3C6u) ^ 0x2A) << 12);
  LODWORD(STACK[0x478]) = v333;
  LODWORD(v73) = *((unsigned __int8 *)&STACK[0x7C0] + (unsigned __int16)v73 % 0x3C6u) ^ 0x2A;
  v334 = *((unsigned __int8 *)&STACK[0x7C0]
         + (unsigned __int16)(v330 - 966 * ((unsigned __int16)((2171 * v330) >> 16) >> 5))) ^ 0x2A;
  LODWORD(STACK[0x454]) = v334;
  v335 = (v333 ^ 0x41070263 | v334) ^ (16 * v73);
  LODWORD(STACK[0x450]) = v335;
  LODWORD(v73) = 227 * ((v326 >> 20) & 0xF ^ 1) + 16117;
  v336 = ((*((unsigned __int8 *)v18
           + (unsigned __int16)(v332 - 966 * ((unsigned __int16)((2171 * v332) >> 16) >> 5))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (unsigned __int16)(v331 - 966 * ((unsigned __int16)((2171 * v331) >> 16) >> 5))) ^ 0x2A) << 12);
  v337 = 227 * (HIWORD(v326) & 0xF ^ 0xB) + 16117;
  v338 = v336 | *((unsigned __int8 *)&STACK[0x7C0]
                + (unsigned __int16)(v337 - 966 * ((unsigned __int16)((2171 * v337) >> 16) >> 5))) ^ 0x2A;
  v339 = 227 * (((unsigned __int16)(v326 & 0xF000) >> 12) ^ 9) + 16117;
  v340 = 227 * ((v326 >> 8) & 0xF ^ 4) + 16117;
  LODWORD(v73) = (v338 << 8) ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                                 + (unsigned __int16)(v73
                                                    - 966 * ((unsigned __int16)((2171 * v73) >> 16) >> 5))) ^ 0x2A) << 12);
  LOWORD(v338) = 227 * (v326 & 0xF ^ 0xE)
               + 16117
               - 966 * ((unsigned __int16)((2171 * (227 * (v326 & 0xF ^ 0xE) + 16117)) >> 16) >> 5);
  v341 = 227 * ((v326 >> 4) ^ 0xD) + 16117;
  LODWORD(v73) = ((v73 | *((unsigned __int8 *)v18
                                       + (unsigned __int16)(v340
                                                          - 966
                                                          * ((unsigned __int16)((2171 * v340) >> 16) >> 5))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (unsigned __int16)(v339 - 966 * ((unsigned __int16)((2171 * v339) >> 16) >> 5))) ^ 0x2A) << 12);
  v342 = *((unsigned __int8 *)&STACK[0x7C0]
         + (unsigned __int16)(v341 - 966 * ((unsigned __int16)((2171 * v341) >> 16) >> 5)));
  v343 = *((unsigned __int8 *)&STACK[0x7C0] + (unsigned __int16)v338) ^ 0x2A;
  LODWORD(STACK[0x448]) = v343;
  v344 = (v73 | v343) ^ (16 * (v342 ^ 0x2A));
  LODWORD(STACK[0x44C]) = v344;
  LODWORD(STACK[0x46C]) = v310;
  v345 = 227 * ((v344 >> 4) & 0xF0 | (v335 >> 8) & 0xF);
  LODWORD(STACK[0x440]) = v345;
  LODWORD(STACK[0x43C]) = (v345 + 37455) % ((((v310 ^ 0x138) + 78) | ((v310 ^ 0x2C6) + 946)) & 0x3C6);
  LODWORD(STACK[0x45C]) = v307 ^ 0x403D9C8E;
  v346 = 2 * (v307 ^ 0x403D9C8E);
  LODWORD(STACK[0x458]) = v346;
  LODWORD(v73) = v309 ^ ((v307 ^ 0x403D9C8E) - 1692992880 - (v346 & 0x362E0FA4) + 3394);
  LODWORD(STACK[0x468]) = v73;
  v347 = (v309 ^ 0xE5659BF8) + 2 * (v73 & (v307 ^ 0x3E4F00A4));
  v348 = v347 - 400943257 - ((2 * v347) & 0xD0342ECE);
  LODWORD(STACK[0x464]) = v348;
  v349 = v311 + (v348 ^ 0x17E5E898) + 1;
  LODWORD(STACK[0x460]) = v349;
  LODWORD(STACK[0x434]) = v298;
  HIDWORD(v350) = v298 ^ 2;
  LODWORD(v350) = v298 ^ 0xAFE471F8;
  LODWORD(v73) = (v311 + (v348 ^ 0x17E5E898) - 400943256 - ((2 * v349) & 0xD0342ECE)) ^ v348;
  LODWORD(STACK[0x444]) = v73;
  v351 = LODWORD(STACK[0x4C0]) - 1267412074 + v73 - ((2 * (LODWORD(STACK[0x4C0]) - 1267412074 + v73)) & 0xE0B3DCD0);
  v352 = (227 * ((v351 - 262541720) & 0xF ^ 8u) + 16117)
       % (((227 * ((v351 - 262541720) & 0xF ^ 8) + 16117) & 0x3C6)
        + ((266 - 227 * ((v351 - 262541720) & 0xF ^ 8)) & 0x3C6u));
  HIDWORD(v350) = (v350 >> 2) ^ 0xDA31188E;
  LODWORD(v350) = HIDWORD(v350);
  v353 = v350 >> 30;
  v354 = v303 ^ 0x8C8EE38D ^ v353;
  LODWORD(STACK[0x428]) = v354;
  LODWORD(STACK[0x424]) = v353 ^ 0xF2FC7FA7;
  v355 = v354 + (v353 ^ 0xF2FC7FA7) - 102542651 - ((2 * (v354 + (v353 ^ 0xF2FC7FA7))) & 0xF3C6A58A);
  LODWORD(STACK[0x42C]) = v355;
  v356 = v317 + (v355 ^ 0x61CAD3A) + 1;
  LODWORD(STACK[0x420]) = v356;
  v357 = LODWORD(STACK[0x628]) ^ 0xED489334;
  v358 = v356 ^ v355;
  LODWORD(STACK[0x628]) = v358;
  LODWORD(STACK[0x4A0]) = v357;
  v359 = v357 + (v358 ^ 0x61CAD3A) + 1 - ((2 * (v357 + (v358 ^ 0x61CAD3A) + 1)) & 0xAEE098CA) + 1466977381;
  v360 = 227
       * ((((*((_BYTE *)v18
                              + (LODWORD(STACK[0x5F0])
                                             + 37455
                                             - 966
                                             * ((4446136
                                               * (unint64_t)(LODWORD(STACK[0x5F0]) + 37455)) >> 32))) >> 4) ^ 2)
                          + ((*((_BYTE *)v18
                              + (LODWORD(STACK[0x5F0])
                                             + 37455
                                             - 966
                                             * ((4446136
                                               * (unint64_t)(LODWORD(STACK[0x5F0]) + 37455)) >> 32))) >> 3) & 0x14 ^ 0xFB)
                          + 43) ^ *((unsigned __int8 *)v18
                                  + (LODWORD(STACK[0x5F4])
                                                 + 37455
                                                 - 966
                                                 * ((4446136
                                                   * (unint64_t)(LODWORD(STACK[0x5F4]) + 37455)) >> 32))))
       + 100561;
  v361 = STACK[0x680];
  LODWORD(v73) = 227 * ((HIBYTE(LODWORD(STACK[0x5F8])) & 0xF0 | (LODWORD(STACK[0x680]) >> 28)) ^ 0x84) + 100561;
  v362 = *((unsigned __int8 *)v18 + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v360 - 966 * ((4446136 * (unint64_t)v360) >> 32))) ^ 0x2A));
  LOWORD(v360) = 227 * ((262541719 - v351) >> 28)
               + 16117
               - 966
               * ((unsigned __int16)((2171 * (227 * ((262541719 - v351) >> 28) + 16117)) >> 16) >> 5);
  v363 = v351 - 262541720;
  LODWORD(v73) = 227 * (((v351 - 262541720) >> 24) & 0xF) + 16117;
  v364 = (((v351 - 262541720) >> 15) & 6 ^ 2)
       + (((v351 - 262541720) >> 16) & 0xF ^ 0x7EFFDFFA);
  v365 = ((*((unsigned __int8 *)v18
           + (unsigned __int16)(v73 - 966 * ((unsigned __int16)((2171 * v73) >> 16) >> 5))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (unsigned __int16)v360) ^ 0x2A) << 12) | *((unsigned __int8 *)v18 + (unsigned __int16)((((v364 + ((-85 - v364) & 0x9F) + 84) & ((v364 + 84) & 0x59 | (-85 - v364) & 0xB9)) + 10) * (v364 + 8276)) % 0x3C6u) ^ 0x2A;
  LODWORD(STACK[0x438]) = v363;
  v366 = 227 * (((unsigned __int16)v363 >> 12) ^ 0xE) + 16117;
  v367 = 227 * ((v363 >> 8) & 0xF ^ 0xE) + 16117;
  v368 = 227 * ((v363 >> 4) ^ 6) + 16117;
  v369 = (v365 << 8) ^ ((*((unsigned __int8 *)v18
                         + (unsigned __int16)(227 * ((v363 >> 20) & 0xF ^ 5)
                                            + 16117
                                            - 966
                                            * ((unsigned __int16)((2171 * (227 * ((v363 >> 20) & 0xF ^ 5) + 16117)) >> 16) >> 5))) ^ 0x2A) << 12) | *((unsigned __int8 *)v18 + (unsigned __int16)(v367 - 966 * ((unsigned __int16)((2171 * v367) >> 16) >> 5))) ^ 0x2A;
  v370 = (v369 << 8) - 323384521 - ((v369 << 9) & 0xD9731600);
  LODWORD(STACK[0x5F4]) = v370;
  v371 = *((unsigned __int8 *)&STACK[0x7C0] + v352) ^ 0x2A;
  v372 = v370 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                  + (unsigned __int16)(v366 - 966 * ((unsigned __int16)((2171 * v366) >> 16) >> 5))) ^ 0x2A) << 12);
  v373 = (v372 ^ 0xECB98B37 | v371) ^ (16
                                     * (*((unsigned __int8 *)&STACK[0x7C0]
                                        + (unsigned __int16)(v368
                                                           - 966
                                                           * ((unsigned __int16)((2171 * v368) >> 16) >> 5))) ^ 0x2A));
  v374 = 227 * (HIBYTE(v359) & 0xF ^ 7) + 16117;
  v375 = 227 * ((v359 >> 20) & 0xF ^ 7) + 16117;
  LODWORD(v73) = ((*((unsigned __int8 *)v18
                   + (unsigned __int16)(v374 - 966 * ((unsigned __int16)((2171 * v374) >> 16) >> 5))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (unsigned __int16)(227 * ((v359 >> 28) ^ 5) + 16117 - 966 * ((unsigned __int16)((2171 * (227 * ((v359 >> 28) ^ 5) + 16117)) >> 16) >> 5))) ^ 0x2A) << 12) | *((unsigned __int8 *)v18 + (unsigned __int16)(227 * (BYTE2(v359) & 0xF) + 16117 - 966 * ((unsigned __int16)((2171 * (227 * (HIWORD(v359) & 0xF) + 16117)) >> 16) >> 5))) ^ 0x2A;
  v376 = 227 * (((unsigned __int16)v359 >> 12) ^ 4) + 16117;
  v377 = 227 * ((v359 >> 4) ^ 6) + 16117;
  LODWORD(v73) = ((_DWORD)v73 << 8) ^ ((*((unsigned __int8 *)v18
                                        + (unsigned __int16)(v375
                                                           - 966
                                                           * ((unsigned __int16)((2171 * v375) >> 16) >> 5))) ^ 0x2A) << 12) | *((unsigned __int8 *)v18 + (227 * ((v359 >> 8) & 0xF ^ 0xC) + 16117) % (((266 - 227 * ((v359 >> 8) & 0xF ^ 0xC)) ^ (227 * ((v359 >> 8) & 0xF ^ 0xC) + 16117)) & 0x3C6)) ^ 0x2A;
  v378 = *((unsigned __int8 *)&STACK[0x7C0]
         + (unsigned __int16)(v376 - 966 * ((unsigned __int16)((2171 * v376) >> 16) >> 5))) ^ 0x2A;
  v379 = *((unsigned __int8 *)&STACK[0x7C0]
         + (unsigned __int16)(v377 - 966 * ((unsigned __int16)((2171 * v377) >> 16) >> 5))) ^ 0x2A;
  LODWORD(v73) = ((_DWORD)v73 << 8) + 1909537855 + (~((_DWORD)v73 << 9) | 0x1C5D87FF) + 1;
  LODWORD(STACK[0x414]) = v73;
  v380 = v73 ^ (v378 << 12);
  LODWORD(v73) = *((unsigned __int8 *)&STACK[0x7C0]
                 + (unsigned __int16)(227 * (v359 & 0xF ^ 5)
                                    + 16117
                                    - 966 * ((unsigned __int16)((2171 * (227 * (v359 & 0xF ^ 5) + 16117)) >> 16) >> 5))) ^ 0x2A;
  v381 = (v380 ^ 0x71D13C3F | v73) ^ (16 * v379);
  v382 = v371 & 0xF;
  LODWORD(STACK[0x418]) = v382;
  LODWORD(v73) = 227 * (v382 & 0xFFFFFF0F | (16 * (v73 & 0xF)));
  v383 = *((unsigned __int8 *)&STACK[0x7C0]
         + (v73 + 100561 - 966 * ((4446136 * (unint64_t)(v73 + 100561)) >> 32))) ^ 0x2A;
  v384 = STACK[0x688];
  v385 = 227 * ((v383 + 1504922731 - ((2 * v383) & 0xD6)) ^ LODWORD(STACK[0x688]));
  LODWORD(STACK[0x410]) = v385;
  v386 = (*((unsigned __int8 *)&STACK[0x7C0] + (v385 + 37455) % 0x3C6u) >> 4) ^ 2;
  LODWORD(v73) = 227
               * ((v386 - ((2 * v386) & 0x55) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                       + (v73
                                                                                      + 37455
                                                                                      - 966
                                                                                      * ((4446136
                                                                                        * (unint64_t)(v73 + 37455)) >> 32))))
               + 100561;
  LODWORD(STACK[0x5F0]) = v373;
  v387 = 227 * (v381 & 0xF0 | (v373 >> 4));
  LODWORD(v73) = 227
               * (*((unsigned __int8 *)v18
                  + (v387
                                 + 100561
                                 - 966 * ((4446136 * (unint64_t)(v387 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ 0x2A)) ^ 0x2A);
  LODWORD(STACK[0x40C]) = v73;
  LODWORD(v73) = *((unsigned __int8 *)&STACK[0x7C0]
                 + (v73 + 37455 - 966 * ((4446136 * (unint64_t)(v73 + 37455)) >> 32)));
  LODWORD(v73) = 227
               * ((((v73 >> 4) ^ 2)
                                  + ~(2 * (((v73 >> 4) ^ 2) & 0xFB ^ ((v73 & 0x10) != 0)))
                                  + 43) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                          + (v387
                                                         + 37455
                                                         - 966
                                                         * ((4446136 * (unint64_t)(v387 + 37455)) >> 32))))
               + 100561;
  v388 = 227 * ((v381 >> 4) & 0xF0 | (v373 >> 8) & 0xF);
  v389 = 227
       * (*((unsigned __int8 *)v18
          + (v388 + 100561 - 966 * ((4446136 * (unint64_t)(v388 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ 0x2A)) ^ 0x2A);
  LODWORD(STACK[0x408]) = v389;
  LODWORD(v73) = *((unsigned __int8 *)&STACK[0x7C0]
                 + (v389 + 37455 - 966
                                               * ((4446136 * (unint64_t)(v389 + 37455)) >> 32))) >> 4;
  LODWORD(v73) = 227
               * (((v73 ^ 2) - 2 * ((v73 ^ 2) & 0xE ^ v73 & 4) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                                        + (v388 + 37455 - 966 * ((4446136 * (unint64_t)(v388 + 37455)) >> 32))))
               + 100561;
  LODWORD(STACK[0x41C]) = v372;
  v390 = 227 * (((v380 >> 8) & 0xF0 | ((unsigned __int16)v372 >> 12)) ^ 0x38);
  v391 = 227
       * (*((unsigned __int8 *)v18
          + (v390 + 100561 - 966 * ((4446136 * (unint64_t)(v390 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v73 - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ 0x2A)) ^ 0x2A);
  LODWORD(STACK[0x404]) = v391;
  LODWORD(v73) = *((unsigned __int8 *)&STACK[0x7C0]
                 + (v391 + 37455 - 966
                                               * ((4446136 * (unint64_t)(v391 + 37455)) >> 32)));
  LODWORD(v73) = (((v73 >> 4) ^ 2)
                                 + ~(2 * (((v73 >> 4) ^ 2) & 0xFB ^ ((v73 & 0x10) != 0)))
                                 + 43) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                         + (v390
                                                        + 37455
                                                        - 966
                                                        * ((4446136 * (unint64_t)(v390 + 37455)) >> 32)));
  v392 = 227 * (((v380 >> 12) & 0xF0 | HIWORD(v372) & 0xF) ^ 0x19);
  v393 = 227
       * (*((unsigned __int8 *)v18
          + (v392 + 100561 - 966 * ((4446136 * (unint64_t)(v392 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (227 * v73 + 100561 - 966 * ((4446136 * (unint64_t)(227 * v73 + 100561)) >> 32))) ^ 0x2A)) ^ 0x2A);
  LODWORD(STACK[0x3FC]) = v393;
  LODWORD(v73) = *((unsigned __int8 *)&STACK[0x7C0]
                 + (v393 + 37455 - 966
                                               * ((4446136 * (unint64_t)(v393 + 37455)) >> 32))) >> 4;
  v394 = *((unsigned __int8 *)&STACK[0x7C0]
         + (227 * (v362 ^ 0x2A)
                        + 100561
                        - 966 * ((4446136 * (unint64_t)(227 * (v362 ^ 0x2Au) + 100561)) >> 32)));
  LODWORD(v73) = 227
               * (((v73 ^ 2) + ~(2 * ((v73 ^ 2) & 0xE ^ v73 & 4)) + 43) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                                           + (v392 + 37455 - 966 * ((4446136 * (unint64_t)(v392 + 37455)) >> 32))));
  LODWORD(STACK[0x400]) = ((int)v73 + 100561) % ((((_DWORD)v73 + 100561) ^ (814 - (_DWORD)v73)) & 0x3C6u);
  LODWORD(v73) = LODWORD(STACK[0x60C]) ^ ((v394 ^ 0xAAAAAAAA) << 28);
  v395 = LODWORD(STACK[0x63C]) ^ LODWORD(STACK[0x5FC]);
  LODWORD(v73) = 227 * ((BYTE3(v73) & 0xF0 | (v361 >> 28)) ^ 4) + 159354;
  v396 = *((unsigned __int8 *)&STACK[0x7C0] + 227 * LODWORD(STACK[0x610]) % 0x3C6u) ^ 0x2A;
  LODWORD(v73) = v395 ^ 0x8DC5F18C ^ ((((*((unsigned __int8 *)&STACK[0x7C0]
                                         + (v73
                                                        - 966 * ((4446136 * (unint64_t)v73) >> 32))) ^ 0xAAAAAAAA) << 28) ^ (v396 << 24))
                                    - ((v396 << 25) & 0x12000000)
                                    + 160454088);
  v397 = 227 * (v73 >> 28)
       + 95794
       - 966 * ((4446136 * (unint64_t)(227 * (v73 >> 28) + 95794)) >> 32);
  LODWORD(v73) = 227 * (BYTE3(v73) & 0xF)
               + 95794
               - 966 * ((4446136 * (unint64_t)(227 * (BYTE3(v73) & 0xF) + 95794)) >> 32);
  LOBYTE(v381) = v395 & 0x68 ^ 0x40 | v395 & 0x68 ^ 0x28;
  v398 = 227 * ((v395 >> 20) & 0xF ^ 5) + 95794;
  v399 = (unint64_t)(*((unsigned __int8 *)v18
                            + (((_DWORD)v73 + 814517909 - ((2 * (_DWORD)v73) & 0x52A)) ^ 0x308C8E95u)) ^ (16 * (*((unsigned __int8 *)v18 + v397) ^ 0x2A)) ^ 0x2Au) << ((((v73 - 107 - ((2 * v73) & 0x2A)) & 0x25 ^ 5) + ((v73 - 107 - ((2 * v73) & 0x2A)) & 0x25 ^ 0x20)) * v381);
  v400 = LODWORD(STACK[0x600]) + 776045903 - ((2 * LODWORD(STACK[0x600])) & 0x30A9E);
  LOBYTE(v381) = ((-17 - v400) & 4 ^ 4) + ((-17 - v400) & 4);
  v401 = *((unsigned __int8 *)v18 + (v400 ^ 0x2E41854Fu)) ^ ((*((unsigned __int8 *)v18
                                                              + (v398
                                                                             - 966
                                                                             * ((4446136 * (unint64_t)v398) >> 32))) ^ 0x2A) << v381);
  v402 = 227 * (BYTE1(LODWORD(STACK[0x638])) >> v381) + 95794;
  v403 = 227 * ((LODWORD(STACK[0x638]) >> 8) & 0xF) + 95794;
  LODWORD(v399) = (((*((unsigned __int8 *)v18 + (v403 - 966 * ((4446136 * (unint64_t)v403) >> 32))) ^ 0x2A) << 8) | ((v401 ^ 0x2A ^ v399) << 16)) ^ ((*((unsigned __int8 *)v18 + (v402 - 966 * ((4446136 * (unint64_t)v402) >> 32))) ^ 0x2A) << 12);
  v404 = 227 * (LODWORD(STACK[0x640]) >> 4) + 95794;
  v405 = 227 * (STACK[0x648] & 0xF ^ 0xA) + 95794;
  v406 = *((unsigned __int8 *)&STACK[0x7C0] + (v405 - 966 * ((4446136 * (unint64_t)v405) >> 32))) ^ 0x2A;
  LODWORD(v399) = (v399 | v406) ^ (16
                                 * (*((unsigned __int8 *)&STACK[0x7C0]
                                    + (v404 - 966 * ((4446136 * (unint64_t)v404) >> 32))) ^ 0x2A));
  LODWORD(STACK[0x63C]) = ((v399 + 731889369 - 2 * (v399 & 0x2B9FBEDF ^ v406 & 6)) ^ a7) & 0xD40D88AF | ((v399 + 731889369 - ((2 * v399) & 0x173F7DB2)) ^ a7) & 0x2BF27750;
  v407 = 227 * (LODWORD(STACK[0x5C0]) ^ 0x2A);
  v408 = *((unsigned __int8 *)&STACK[0x7C0] + (v407 + 37455) % 0x3C6u) >> 4;
  LODWORD(v399) = ((v408 ^ 2) - 2 * ((v408 ^ 2) & 0xE ^ v408 & 4) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                                           + (LODWORD(STACK[0x5EC]) + 37455 - 966 * ((4446136 * (unint64_t)(LODWORD(STACK[0x5EC]) + 37455)) >> 32)));
  HIDWORD(v350) = (LODWORD(STACK[0x5E8]) >> 28) ^ 4;
  LODWORD(v350) = LODWORD(STACK[0x5E4]) ^ 0xD0000000;
  LODWORD(v399) = 227
                * (*((unsigned __int8 *)v18
                   + (227 * (v350 >> 28)
                                  + 100561
                                  - 966
                                  * ((4446136 * (unint64_t)(227 * (v350 >> 28) + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (227 * v399 + 100561 - 966 * ((4446136 * (unint64_t)(227 * v399 + 100561)) >> 32))) ^ 0x2A)) ^ 0x2A)
                + 100561;
  v409 = LODWORD(STACK[0x5B0]) ^ ((*((unsigned __int8 *)&STACK[0x7C0] + (v407 + 100561) % 0x3C6u) ^ 0x2A) << 24);
  v410 = (LODWORD(STACK[0x5E4]) >> 20) ^ 0xDDD;
  v411 = 227 * (v410 & 0xF | (16 * ((LODWORD(STACK[0x5B8]) >> 20) & 0xF))) + 159354;
  LODWORD(v399) = v409 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                           + (v399 - 966 * ((4446136 * (unint64_t)v399) >> 32))) ^ 0xAAAAAAAA) << 28);
  v412 = (v410 >> 4) - ((v410 >> 3) & 0xD4) + 429855594;
  v413 = 227 * ((v412 & 0xF | (16 * (HIBYTE(v409) & 0xF))) ^ 0xA) + 159354;
  v414 = ((*((unsigned __int8 *)v18 + (v411 - 966 * ((4446136 * (unint64_t)v411) >> 32))) ^ 0x2A) << 20) ^ ((*((unsigned __int8 *)v18 + LODWORD(STACK[0x5BC])) ^ 0x2A) << 16) ^ ((*((unsigned __int8 *)v18 + (v413 - 966 * ((4446136 * (unint64_t)v413) >> 32))) ^ 0x2A) << 24);
  LODWORD(v399) = 227 * ((BYTE3(v399) & 0xF0 | (v412 >> 4)) ^ 6) + 159354;
  LODWORD(v399) = v414 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                           + (v399 - 966 * ((4446136 * (unint64_t)v399) >> 32))) ^ 0xAAAAAAAA) << 28);
  v415 = 227 * (v399 >> 28)
       + 95794
       - 966 * ((4446136 * (unint64_t)(227 * (v399 >> 28) + 95794)) >> 32);
  LODWORD(v399) = LODWORD(STACK[0x5C8]) ^ v399;
  v416 = (v399 ^ 0x1C801850) >> ((STACK[0x5D8] & 0x10 ^ 0x10) + (STACK[0x5D8] & 0x10));
  v417 = 227 * (v416 >> 4)
       + 95794
       - 966 * ((4446136 * (unint64_t)(227 * (v416 >> 4) + 95794)) >> 32);
  v418 = ((*((unsigned __int8 *)v18
           + (227 * (HIBYTE(v414) & 0xF)
                          + 95794
                          - 966 * ((4446136 * (unint64_t)(227 * (HIBYTE(v414) & 0xF) + 95794)) >> 32))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + v415) ^ 0x2A) << 12);
  v419 = 227 * (v416 & 0xF) + 95794 - 966 * ((4446136 * (unint64_t)(227 * (v416 & 0xF) + 95794)) >> 32);
  v420 = 227 * (((unsigned __int16)v399 >> 12) ^ 1) + 95794;
  v421 = v420 - 966 * ((4446136 * (unint64_t)v420) >> 32);
  LODWORD(v399) = 227 * ((v399 >> 8) & 0xF ^ 8) + 95794;
  v422 = 227 * ((LODWORD(STACK[0x5C8]) ^ 0x50u) >> (v412 & 4) >> (v412 & 4 ^ 4)) + 95794;
  LODWORD(v399) = (LODWORD(STACK[0x5D4]) + 617) ^ (16
                                                 * (*((unsigned __int8 *)v18
                                                    + (v422
                                                                   - 966 * ((4446136 * (unint64_t)v422) >> 32))) ^ 0x2A)) ^ (((((v418 | *((unsigned __int8 *)v18 + v419) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + v417) ^ 0x2A) << 12) | *((unsigned __int8 *)v18 + (v399 - 966 * ((4446136 * (unint64_t)v399) >> 32))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + ((v421 + 1213896635 - ((2 * v421) & 0x776)) ^ 0x485A97BBu)) ^ 0x2A) << 12) | *((unsigned __int8 *)v18 + (227 * (STACK[0x5C8] & 0xF) + 95794 - 966 * ((4446136 * (227 * (STACK[0x5C8] & 0xF) + 95794)) >> 32))) ^ 0x2A);
  LODWORD(STACK[0x620]) = v399 - 1873031475 - ((2 * v399) & 0x20B79D9A);
  LODWORD(v399) = 227 * (~(v324 >> 4) & 0xF) + 16117;
  v423 = *((unsigned __int8 *)&STACK[0x7C0]
         + (unsigned __int16)(227 * (STACK[0x570] & 0xF)
                            + 16117
                            - 966 * ((unsigned __int16)((2171 * (227 * (STACK[0x570] & 0xF) + 16117)) >> 16) >> 5))) ^ 0x2A;
  v424 = v423 + 1812651036 - ((2 * v423) & 0x38);
  v425 = (LODWORD(STACK[0x4FC]) ^ 0x53AC0A3B | v424 ^ 0x6C0ADC1C) ^ (16
                                                                   * (*((unsigned __int8 *)&STACK[0x7C0]
                                                                      + (unsigned __int16)(v399
                                                                                         - 966
                                                                                         * ((unsigned __int16)((2171 * v399) >> 16) >> 5))) ^ 0x2A));
  LODWORD(v399) = 227 * ((LODWORD(STACK[0x538]) >> 4) ^ 1) + 16117;
  v426 = 227 * (STACK[0x538] & 0xF ^ 1) + 16117;
  v427 = *((unsigned __int8 *)&STACK[0x7C0]
         + (unsigned __int16)(v426 - 966 * ((unsigned __int16)((2171 * v426) >> 16) >> 5)));
  LODWORD(v399) = (LODWORD(STACK[0x500]) ^ 0x81C25AF5 | v427 ^ 0x2A) ^ (16
                                                                      * (*((unsigned __int8 *)&STACK[0x7C0]
                                                                         + (unsigned __int16)(v399
                                                                                            - 966
                                                                                            * ((unsigned __int16)((2171 * v399) >> 16) >> 5))) ^ 0x2A));
  LOBYTE(v427) = 16 * (v427 ^ 0x2A) - ((32 * v427) & 0x20) + 30;
  v428 = (v427 & 0xF0 | v424 & 0xF) ^ 0x1C;
  v429 = *((unsigned __int8 *)&STACK[0x7C0]
         + (227 * v428
                        + 100561
                        - 966 * ((4446136 * (unint64_t)(227 * v428 + 100561)) >> 32))) ^ 0x2A;
  v430 = (v428 + 165)
       * (((v427 & 0xE0 ^ 0x3F73EEB) + (v427 & 0xE0)) & (STACK[0x658] & 0x40041E7 ^ 0x4067 | STACK[0x658] & 0x40041E7 ^ 0x4000180));
  v431 = 227 * ((v429 + 1504922731 - ((2 * v429) & 0xD6)) ^ v384);
  v432 = (v431 + 100561) % 0x3C6u;
  v433 = (*((unsigned __int8 *)&STACK[0x7C0] + (v431 + 37455) % 0x3C6u) >> 4) ^ 2;
  v434 = 227
       * ((v433 - ((2 * v433) & 0x55) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                               + (v430
                                                                              - 966
                                                                              * ((4446136 * (unint64_t)v430) >> 32))))
       + 100561;
  v435 = 227 * (v399 & 0xF0 | (v425 >> 4));
  v436 = v435 + 37455 - 966 * ((4446136 * (unint64_t)(v435 + 37455)) >> 32);
  v437 = 227
       * (*((unsigned __int8 *)v18
          + (v435 + 100561 - 966 * ((4446136 * (unint64_t)(v435 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v434 - 966 * ((4446136 * (unint64_t)v434) >> 32))) ^ 0x2A)) ^ 0x2A);
  v438 = v437 + 100561 - 966 * ((4446136 * (unint64_t)(v437 + 100561)) >> 32);
  v439 = *((unsigned __int8 *)&STACK[0x7C0]
         + (v437 + 37455 - 966 * ((4446136 * (unint64_t)(v437 + 37455)) >> 32)));
  v440 = 227
       * ((((v439 >> 4) ^ 2) - 2 * (((v439 >> 4) ^ 2) & 0xFB ^ ((v439 & 0x10) != 0)) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0] + v436))
       + 100561;
  LODWORD(v399) = 227 * ((v399 >> 4) & 0xF0 | (v425 >> 8) & 0xF);
  v441 = 227
       * (*((unsigned __int8 *)v18
          + (v399 + 100561 - 966 * ((4446136 * (unint64_t)(v399 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v440 - 966 * ((4446136 * (unint64_t)v440) >> 32))) ^ 0x2A)) ^ 0x2A);
  v442 = v441 + 100561 - 966 * ((4446136 * (unint64_t)(v441 + 100561)) >> 32);
  v443 = *((unsigned __int8 *)&STACK[0x7C0]
         + (v441 + 37455 - 966 * ((4446136 * (unint64_t)(v441 + 37455)) >> 32)));
  LODWORD(v399) = 227
                * ((((v443 >> 4) ^ 2) - 2 * (((v443 >> 4) ^ 2) & 0xFB ^ ((v443 & 0x10) != 0)) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0] + (v399 + 37455 - 966 * ((4446136 * (unint64_t)(v399 + 37455)) >> 32))))
                + 100561;
  LODWORD(v399) = 227
                * (*((unsigned __int8 *)v18
                   + (LODWORD(STACK[0x510])
                                  + 100561
                                  - 966
                                  * ((4446136 * (unint64_t)(LODWORD(STACK[0x510]) + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v399 - 966 * ((4446136 * (unint64_t)v399) >> 32))) ^ 0x2A)) ^ 0x2A);
  v444 = v399 + 100561 - 966 * ((4446136 * (unint64_t)(v399 + 100561)) >> 32);
  LODWORD(v399) = (*((unsigned __int8 *)&STACK[0x7C0]
                   + (v399
                                  + 37455
                                  - 966 * ((4446136 * (unint64_t)(v399 + 37455)) >> 32))) >> 4) ^ 2;
  LODWORD(v399) = 227
                * ((v399 - ((2 * v399) & 0x55) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                        + LODWORD(STACK[0x518])))
                + 100561;
  v445 = ((*((unsigned __int8 *)v18 + v444) ^ 0x2A) << 12) ^ ((*((unsigned __int8 *)v18 + v442) ^ 0x2A) << 8);
  v446 = 227 * (((LODWORD(STACK[0x500]) >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x4FC])) & 0xF) ^ 0x2C);
  LODWORD(v399) = 227
                * (*((unsigned __int8 *)v18
                   + (v446
                                  + 100561
                                  - 966 * ((4446136 * (unint64_t)(v446 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v399 - 966 * ((4446136 * (unint64_t)v399) >> 32))) ^ 0x2A)) ^ 0x2A);
  v447 = v399 + 100561 - 966 * ((4446136 * (unint64_t)(v399 + 100561)) >> 32);
  LODWORD(v399) = *((unsigned __int8 *)&STACK[0x7C0]
                  + (v399
                                 + 37455
                                 - 966 * ((4446136 * (unint64_t)(v399 + 37455)) >> 32))) >> 4;
  LODWORD(v399) = 227
                * (((v399 ^ 2) - 2 * ((v399 ^ 2) & 0xE ^ v399 & 4) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                                            + (v446 + 37455 - 966 * ((4446136 * (unint64_t)(v446 + 37455)) >> 32))))
                + 100561;
  v448 = 227 * ((HIWORD(LODWORD(STACK[0x520])) & 0xF0 | (LODWORD(STACK[0x528]) >> 20) & 0xF) ^ 0xCA);
  LODWORD(v399) = 227
                * (*((unsigned __int8 *)v18
                   + (v448
                                  + 100561
                                  - 966 * ((4446136 * (unint64_t)(v448 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v399 - 966 * ((4446136 * (unint64_t)v399) >> 32))) ^ 0x2A)) ^ 0x2A);
  v449 = *((unsigned __int8 *)&STACK[0x7C0]
         + (v399 + 37455 - 966 * ((4446136 * (unint64_t)(v399 + 37455)) >> 32))) >> 4;
  v450 = 227
       * (((v449 ^ 2) + ~(2 * ((v449 ^ 2) & 0xE ^ v449 & 4)) + 43) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                                      + (v448 + 37455 - 966 * ((4446136 * (unint64_t)(v448 + 37455)) >> 32))))
       + 100561;
  v451 = 227 * (((LODWORD(STACK[0x520]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x528])) & 0xF) ^ 0x13);
  LODWORD(v399) = ((*((unsigned __int8 *)v18
                    + (v399
                                   + 100561
                                   - 966 * ((4446136 * (unint64_t)(v399 + 100561)) >> 32))) ^ 0x2A) << 20) ^ ((*((unsigned __int8 *)v18 + v447) ^ 0x2A) << 16);
  v452 = 227
       * (*((unsigned __int8 *)v18
          + (v451 + 100561 - 966 * ((4446136 * (unint64_t)(v451 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v450 - 966 * ((4446136 * (unint64_t)v450) >> 32))) ^ 0x2A)) ^ 0x2A);
  v453 = v452 + 100561 - 966 * ((4446136 * (unint64_t)(v452 + 100561)) >> 32);
  v454 = *((unsigned __int8 *)&STACK[0x7C0]
         + (v452 + 37455 - 966 * ((4446136 * (unint64_t)(v452 + 37455)) >> 32)));
  v455 = 227
       * ((((v454 >> 4) ^ 2) - 2 * (((v454 >> 4) ^ 2) & 0xFB ^ ((v454 & 0x10) != 0)) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0] + (v451 + 37455 - 966 * ((4446136 * (unint64_t)(v451 + 37455)) >> 32))))
       + 100561;
  v456 = 227 * ((HIBYTE(LODWORD(STACK[0x520])) & 0xF0 | (LODWORD(STACK[0x528]) >> 28)) ^ 0x85) + 100561;
  v457 = 227
       * (*((unsigned __int8 *)v18 + (v456 - 966 * ((4446136 * (unint64_t)v456) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v455 - 966 * ((4446136 * (unint64_t)v455) >> 32))) ^ 0x2A)) ^ 0x2A)
       + 100561;
  LOBYTE(v432) = *((_BYTE *)&STACK[0x7C0] + v432) ^ 0x2A;
  v458 = 227 * ((v424 & 0xF | (16 * (v432 & 0xF))) ^ 0xC) + 159354;
  v459 = v458 - 966 * ((4446136 * (unint64_t)v458) >> 32);
  v460 = v459 - 1014493259 - ((2 * v459) & 0x76A);
  v461 = 16 * (*((unsigned __int8 *)&STACK[0x7C0] + v438) ^ 0x2A);
  v462 = 227
       * (((v461 ^ v432) & 0xF0 | (v425 >> 4))
        + (v460 & 0x19B ^ 0xE86FA80A | v460 & 0x19B ^ 0x191))
       - 453047799;
  v463 = v445 ^ v461;
  v464 = 227 * ((v463 >> 4) & 0xF0 | (v425 >> 8) & 0xF) + 159354;
  v465 = 227 * ((v445 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x4FC]) >> 12)) + 159354;
  v466 = v399 ^ v463;
  v467 = v466 ^ ((*((unsigned __int8 *)&STACK[0x7C0] + v453) ^ 0x2A) << 24);
  v468 = 227 * (((v466 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x4FC])) & 0xF) ^ 0xC) + 159354;
  LODWORD(v399) = 227 * ((WORD1(v399) & 0xF0 | (LODWORD(STACK[0x528]) >> 20) & 0xF) ^ 0xA) + 159354;
  v469 = ((*((unsigned __int8 *)v18 + (v468 - 966 * ((4446136 * (unint64_t)v468) >> 32))) ^ 0x2A) << 16) ^ ((*((unsigned __int8 *)v18 + (v465 - 966 * ((4446136 * (unint64_t)v465) >> 32))) ^ 0x2A) << 12);
  v470 = 227 * (((v467 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x528])) & 0xF) ^ 3) + 159354;
  LODWORD(v399) = ((*((unsigned __int8 *)v18 + (v470 - 966 * ((4446136 * (unint64_t)v470) >> 32))) ^ 0x2A) << 24) ^ ((*((unsigned __int8 *)v18 + (v399 - 966 * ((4446136 * (unint64_t)v399) >> 32))) ^ 0x2A) << 20) ^ (v469 - ((2 * v469) & 0x8D4000) - 1840861450);
  v471 = 227
       * ((((v467 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                      + (v457 - 966 * ((4446136 * (unint64_t)v457) >> 32))) ^ 0xAAAAAAAA) << 28)) >> 24) & 0xF0 | (LODWORD(STACK[0x528]) >> 28)) ^ 5)
       + 159354;
  v472 = *((unsigned __int8 *)&STACK[0x7C0] + (v471 - 966 * ((4446136 * (unint64_t)v471) >> 32))) ^ 0xA;
  v473 = *((unsigned __int8 *)&STACK[0x7C0] + (v460 ^ 0xC3880FB5));
  v474 = v473 ^ (16
               * (*((unsigned __int8 *)&STACK[0x7C0]
                  + (v462 - 966 * ((4446136 * (unint64_t)v462) >> 32))) ^ 0x2A)) ^ 0x2A;
  v475 = v474 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                  + (v464 - 966 * ((4446136 * (unint64_t)v464) >> 32))) ^ 0x2A) << 8);
  v476 = v475 ^ v399 ^ 0xFE8BF7F2 ^ ((v472 << 28) - (v472 >> 1 << 30) + 1825396996);
  v477 = 227 * ((v475 & 0x1A6 ^ 0x1A6) + (v475 & 0x1A6) + (v476 >> 28));
  v478 = 227 * (BYTE3(v399) & 0xF ^ 2) + 95794;
  v479 = 227 * (HIWORD(v469) & 0xF)
       + 95794
       - 966 * ((4446136 * (unint64_t)(227 * (HIWORD(v469) & 0xF) + 95794)) >> 32);
  v480 = v479 - 346194096 - ((2 * v479) & 0x6A0);
  LODWORD(v399) = 227 * ((v399 >> 20) & 0xF ^ 4) + 95794;
  v481 = ((*((unsigned __int8 *)v18 + (v478 - 966 * ((4446136 * (unint64_t)v478) >> 32))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (v477 - 966 * ((4446136 * (unint64_t)v477) >> 32))) ^ 0x2A) << 12);
  v482 = v476 >> (((v480 & 0x2A ^ 0xAA) + (v480 & 0x2A)) & 0x58);
  LODWORD(v399) = *((unsigned __int8 *)v18
                  + (227 * (v473 & 0xF ^ 0xA)
                                 + 95794
                                 - 966 * ((4446136 * (unint64_t)(227 * (v473 & 0xF ^ 0xAu) + 95794)) >> 32))) ^ (((*((unsigned __int8 *)v18 + ((v481 & 0xF500 ^ 0xEDA0F59B) + (v481 & 0xF500)) * ((HIWORD(LODWORD(STACK[0x4FC])) & 9 ^ 8) + (HIWORD(LODWORD(STACK[0x4FC])) & 9 ^ 0x6748BA51)) * ((v482 >> 4) + 422) % 0x3C6) ^ 0x2A) << 12) | (16 * (*((unsigned __int8 *)v18 + (227 * (v474 >> 4) + 95794 - 966 * ((4446136 * (unint64_t)(227 * (v474 >> 4) + 95794)) >> 32))) ^ 0x2A))) ^ ((((v481 | *((unsigned __int8 *)v18 + (v480 ^ 0xEB5D7F50)) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (v399 - 966 * ((4446136 * (unint64_t)v399) >> 32))) ^ 0x2A) << 12) | *((unsigned __int8 *)v18 + (227 * (v482 & 0xF) + 95794 - 966 * ((4446136 * (unint64_t)(227 * (v482 & 0xF) + 95794)) >> 32))) ^ 0x2A) << 8) ^ 0x2A;
  LODWORD(STACK[0x638]) = v399 + 491206631 - ((2 * v399) & 0x3A8E6FCE);
  v483 = ((*((unsigned __int8 *)v18
           + (LODWORD(STACK[0x580])
                          + 100561
                          - 966 * ((4446136 * (unint64_t)(LODWORD(STACK[0x580]) + 100561)) >> 32))) ^ 0x2A) << 8) ^ (16 * (*((unsigned __int8 *)v18 + (LODWORD(STACK[0x584]) + 100561 - 966 * ((4446136 * (unint64_t)(LODWORD(STACK[0x584]) + 100561)) >> 32))) ^ 0x2A));
  v484 = 227 * (LODWORD(STACK[0x548]) ^ 0x28) + 100561;
  v485 = 227
       * (*((unsigned __int8 *)v18
          + (LODWORD(STACK[0x540])
                         + 100561
                         - 966 * ((4446136 * (unint64_t)(LODWORD(STACK[0x540]) + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v484 - 966 * ((4446136 * (unint64_t)v484) >> 32))) ^ 0x2A)) ^ 0x2A);
  v486 = v485 + 100561 - 966 * ((4446136 * (unint64_t)(v485 + 100561)) >> 32);
  v487 = *((unsigned __int8 *)&STACK[0x7C0]
         + (v485 + 37455 - 966 * ((4446136 * (unint64_t)(v485 + 37455)) >> 32)));
  v488 = 227
       * ((((v487 >> 4) ^ 2) - 2 * (((v487 >> 4) ^ 2) & 0xFB ^ ((v487 & 0x10) != 0)) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0] + LODWORD(STACK[0x550])))
       + 100561;
  v489 = 227 * (((LODWORD(STACK[0x558]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x560])) & 0xF) ^ 3);
  v490 = 227
       * (*((unsigned __int8 *)v18
          + (v489 + 100561 - 966 * ((4446136 * (unint64_t)(v489 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v488 - 966 * ((4446136 * (unint64_t)v488) >> 32))) ^ 0x2A)) ^ 0x2A);
  v491 = v490 + 100561 - 966 * ((4446136 * (unint64_t)(v490 + 100561)) >> 32);
  v492 = *((unsigned __int8 *)&STACK[0x7C0]
         + (v490 + 37455 - 966 * ((4446136 * (unint64_t)(v490 + 37455)) >> 32)));
  v493 = 227
       * ((((v492 >> 4) ^ 2) - 2 * (((v492 >> 4) ^ 2) & 0xFB ^ ((v492 & 0x10) != 0)) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0] + (v489 + 37455 - 966 * ((4446136 * (unint64_t)(v489 + 37455)) >> 32))))
       + 100561;
  v494 = 227 * ((HIBYTE(LODWORD(STACK[0x558])) & 0xF0 | (LODWORD(STACK[0x560]) >> 28)) ^ 0xBA) + 100561;
  v495 = 227
       * (*((unsigned __int8 *)v18 + (v494 - 966 * ((4446136 * (unint64_t)v494) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v493 - 966 * ((4446136 * (unint64_t)v493) >> 32))) ^ 0x2A)) ^ 0x2A)
       + 100561;
  v496 = (*((unsigned __int8 *)&STACK[0x7C0]
          + (LODWORD(STACK[0x568])
                         + 100561
                         - 966 * ((4446136 * (unint64_t)(LODWORD(STACK[0x568]) + 100561)) >> 32))) ^ 0x2A) << 16;
  LODWORD(v399) = v496 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                           + (LODWORD(STACK[0x578])
                                          + 100561
                                          - 966
                                          * ((4446136 * (unint64_t)(LODWORD(STACK[0x578]) + 100561)) >> 32))) ^ 0x2A) << 12);
  v497 = (*((unsigned __int8 *)&STACK[0x7C0] + v486) ^ 0x2A) << 20;
  v498 = (*((unsigned __int8 *)&STACK[0x7C0] + v491) ^ 0x2A) << 24;
  v499 = v498 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                  + (v495 - 966 * ((4446136 * (unint64_t)v495) >> 32))) ^ 0xAAAAAAAA) << 28);
  v500 = v498 ^ v497;
  v501 = v497 ^ v496;
  v502 = 16 * (STACK[0x598] & 0xF);
  v503 = LODWORD(STACK[0x5AC]) - (v502 ^ 0x90 | LODWORD(STACK[0x5AC]));
  v504 = 227
       * ((v502 ^ 0xDB5E8DF2 ^ ((v503 ^ ((v502 ^ 0xFFFFFF6F) + 1))
                              - 614560414
                              - 2 * ((v503 ^ ((v502 ^ 0xFFFFFF6F) + 1)) & 0x5B5E8D63 ^ v503 & 1)))
        + LODWORD(STACK[0x5AC]))
       + 159354;
  v505 = v399 ^ v483;
  LODWORD(v350) = __ROR4__(((LODWORD(STACK[0x5A0]) << 21) & 0x1E000000 | (((v399 ^ v483 ^ LODWORD(STACK[0x598])) >> 4) << 29) | ((v399 ^ v483 ^ LODWORD(STACK[0x598])) >> 7) & 1) ^ 0x1E4FE3B7, 25);
  v506 = 227 * ((v483 >> 4) & 0xF0 | (LODWORD(STACK[0x5A0]) >> 8) & 0xF) + 159354;
  v507 = *((unsigned __int8 *)v18 + v504 % 0x3C6) ^ (16
                                                   * (*((unsigned __int8 *)v18
                                                      + (227 * (v350 ^ 0x27F1DB0F) + 159354) % 0x3C6) ^ 0x2A)) ^ ((*((unsigned __int8 *)v18 + (v506 - 966 * ((4446136 * (unint64_t)v506) >> 32))) ^ 0x2A) << 8);
  v508 = 227 * (((v505 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x588]) >> 12)) ^ 3) + 159354;
  LODWORD(v399) = 227 * (((v399 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x588])) & 0xF) ^ 6) + 159354;
  LODWORD(v399) = *((unsigned __int8 *)&STACK[0x7C0]
                  + (v399 - 966 * ((4446136 * (unint64_t)v399) >> 32))) ^ 0x2A;
  LODWORD(v399) = ((_DWORD)v399 << 16) + 1541479099 - (((_DWORD)v399 << 17) & 0xFFC3FFFF);
  v509 = v507 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                  + (v508 - 966 * ((4446136 * (unint64_t)v508) >> 32))) ^ 0x2A) << 12) ^ 0x2A;
  v510 = (v509 + (v509 ^ v399 ^ 0xA41EE544) + 1) ^ ((v399 ^ 0xA41EE544) + 1);
  v511 = 227 * (HIWORD(v501) & 0xF0 | (LODWORD(STACK[0x560]) >> 20) & 0xF) + 159354;
  LODWORD(v399) = ((v510 + 1541479099 + (~(2 * v510) | 0x483DCA89) + 1) ^ v399) + v509;
  LODWORD(v399) = v399 + 2120963958 - ((2 * v399) & 0xFCD6AEEC);
  v512 = *((unsigned __int8 *)&STACK[0x7C0] + (v511 - 966 * ((4446136 * (unint64_t)v511) >> 32))) ^ 0x2A;
  v513 = 227 * (((v500 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x560])) & 0xF) ^ 3) + 159354;
  v514 = 227 * ((HIBYTE(v499) & 0xF0 | (LODWORD(STACK[0x560]) >> 28)) ^ 0xA) + 159354;
  v515 = v399 ^ ((v512 << 20) + 2120963958 - ((v512 << 21) & 0x1CC00000));
  v516 = v515 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                  + (v513 - 966 * ((4446136 * (unint64_t)v513) >> 32))) ^ 0x2A) << 24);
  v517 = 227
       * ((v516 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                    + (v514 - 966 * ((4446136 * (unint64_t)v514) >> 32))) ^ 0xAAAAAAAA) << 28)) >> 28)
       + 95794;
  v518 = *((unsigned __int8 *)&STACK[0x7C0] + (v517 - 966 * ((4446136 * (unint64_t)v517) >> 32))) ^ 0x2A;
  v519 = 227 * (HIBYTE(v516) & 0xF)
       + 95794
       - 966 * ((4446136 * (unint64_t)(227 * (HIBYTE(v516) & 0xF) + 95794)) >> 32);
  v520 = *((unsigned __int8 *)&STACK[0x7C0] + ((v519 + 471894518 - ((2 * v519) & 0x3EC)) ^ 0x1C2089F6u)) ^ 0x2A;
  v521 = 16 * v518 - ((32 * v518) & 0x6E0) + 2006713212;
  v522 = 227 * (((unsigned __int16)v399 >> 12) ^ 5) + 95794;
  v523 = 227 * ((v399 >> 8) & 0xF ^ 7) + 95794;
  v524 = (((*((unsigned __int8 *)v18
            + (227 * ((WORD1(v399) & 0xF ^ 0xB) - (v521 & 0xC40 ^ 0x40 | v521 & 0xC40 ^ 0xD6AA0C08)) + 1489656330)
            % 0x3C6) ^ 0x2A) << 8) | (((v520 - ((2 * v520) & 0xF8) + 892) ^ v521) << 16)) ^ ((*((unsigned __int8 *)v18
                                                                                              + (227 * ((v515 >> 20) & 0xF) + 95794 - 966 * ((4446136 * (unint64_t)(227 * ((v515 >> 20) & 0xF) + 95794)) >> 32))) ^ 0x2A) << 12);
  v525 = 227 * ((v399 >> 4) ^ 7) + 95794;
  LODWORD(v399) = ((v524 | *((unsigned __int8 *)v18
                           + (v523 - 966 * ((4446136 * (unint64_t)v523) >> 32))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (v522 - 966 * ((4446136 * (unint64_t)v522) >> 32))) ^ 0x2A) << 12) | *((unsigned __int8 *)v18 + (227 * (v399 & 0xF ^ 6) + 95794 - 966 * ((4446136 * (227 * (v399 & 0xF ^ 6) + 95794)) >> 32))) ^ 0x2A;
  v526 = (LODWORD(STACK[0x47C]) - 511355668) ^ 0xADF270F5 ^ LODWORD(STACK[0x61C]);
  v527 = v526 - 756216529 - ((2 * v526) & 0xA5DA1A5E);
  v528 = STACK[0x594];
  LODWORD(v399) = (LODWORD(STACK[0x594]) + 60186376) ^ (16
                                                      * (*((unsigned __int8 *)&STACK[0x7C0]
                                                         + (v525
                                                                        - 966
                                                                        * ((4446136 * (unint64_t)v525) >> 32))) ^ 0x2A)) ^ v399;
  LODWORD(STACK[0x5F8]) = v399 - 770208570 - ((2 * v399) & 0xA42F198C);
  v529 = v528 - 1412486952 + (LODWORD(STACK[0x434]) ^ 0xAFE471FA);
  v530 = ((*((unsigned __int8 *)v18
           + (LODWORD(STACK[0x494])
                          + 100561
                          - 966 * ((4446136 * (unint64_t)(LODWORD(STACK[0x494]) + 100561)) >> 32))) ^ 0x2A) << 16) ^ ((*((unsigned __int8 *)v18 + (LODWORD(STACK[0x4E4]) + 100561 - 966 * ((4446136 * (unint64_t)(LODWORD(STACK[0x4E4]) + 100561)) >> 32))) ^ 0x2A) << 12);
  LOBYTE(v526) = (LOBYTE(STACK[0x490]) - 107 - ((2 * LOBYTE(STACK[0x490])) & 0x2A)) & 0x32;
  v531 = (LODWORD(STACK[0x480]) >> 20) & 0xF ^ 0xD;
  LODWORD(v399) = 227
                * (((unint64_t)((LODWORD(STACK[0x48C]) >> 20) & 0xF ^ 9) << (((v307 & 0x2E ^ 0xD7)
                                                                                   + (v307 & 0x2E ^ 0xF9)
                                                                                   + (v526 ^ 0x22)
                                                                                   + (v526 ^ 0x10)
                                                                                   + 2) & 0xFE)) ^ v531);
  v532 = 227
       * (*((unsigned __int8 *)v18 + ((int)v399 + 100561) % 0x3C6u) ^ (16
                                                                     * (*((unsigned __int8 *)v18
                                                                        + ((LODWORD(STACK[0x490])
                                                                          + 248531093
                                                                          - ((2 * LODWORD(STACK[0x490])) & 0x12A)) ^ 0xED04895u)) ^ 0x2A)) ^ 0x2A);
  LODWORD(v399) = 227
                * ((((*((_BYTE *)v18
                                       + (v532
                                                      + 37455
                                                      - 966
                                                      * ((4446136 * (unint64_t)(v532 + 37455)) >> 32))) >> 4) ^ 2)
                                   + ((*((_BYTE *)v18
                                       + (v532
                                                      + 37455
                                                      - 966
                                                      * ((4446136 * (unint64_t)(v532 + 37455)) >> 32))) >> 3) & 0x14 ^ 0xFB)
                                   + 43) ^ *((unsigned __int8 *)v18 + ((int)v399 + 37455) % 0x3C6u))
                + 100561;
  LODWORD(v399) = 227
                * (*((unsigned __int8 *)v18
                   + (LODWORD(STACK[0x488])
                                  + 100561
                                  - 966
                                  * ((4446136 * (unint64_t)(LODWORD(STACK[0x488]) + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v399 - 966 * ((4446136 * (unint64_t)v399) >> 32))) ^ 0x2A)) ^ 0x2A);
  v533 = v399 + 100561 - 966 * ((4446136 * (unint64_t)(v399 + 100561)) >> 32);
  LODWORD(v399) = *((unsigned __int8 *)&STACK[0x7C0]
                  + (v399
                                 + 37455
                                 - 966 * ((4446136 * (unint64_t)(v399 + 37455)) >> 32)));
  LODWORD(v399) = 227
                * ((((v399 >> 4) ^ 2) + ((v399 >> 3) & 0x14 ^ 0xFB) + 43) ^ *((unsigned __int8 *)&STACK[0x7C0] + LODWORD(STACK[0x484])))
                + 100561;
  v534 = 227 * ((HIBYTE(LODWORD(STACK[0x48C])) & 0xF0 | (LODWORD(STACK[0x480]) >> 28)) ^ 0x27) + 100561;
  LODWORD(v399) = 227
                * (*((unsigned __int8 *)v18 + (v534 - 966 * ((4446136 * (unint64_t)v534) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v399 - 966 * ((4446136 * (unint64_t)v399) >> 32))) ^ 0x2A)) ^ 0x2A)
                + 100561;
  LODWORD(v399) = ((*((unsigned __int8 *)v18
                    + (v399 - 966 * ((4446136 * (unint64_t)v399) >> 32))) ^ 0xAAAAAAAA) << 28) ^ ((*((unsigned __int8 *)v18 + v533) ^ 0x2A) << 24);
  v535 = 227 * (STACK[0x49C] & 0xF0 | (LODWORD(STACK[0x4F8]) >> 4)) + 159354;
  v536 = v530 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                  + (v532
                                 + 100561
                                 - 966 * ((4446136 * (unint64_t)(v532 + 100561)) >> 32))) ^ 0x2A) << 20);
  v537 = v399 ^ v536;
  v538 = v399 ^ v536 ^ LODWORD(STACK[0x4E8]);
  v539 = 227 * (STACK[0x508] & 0xFFFFFF0F | (16 * (v538 & 0xF))) + 159354;
  v540 = *((unsigned __int8 *)v18 + (v539 - 966 * ((4446136 * (unint64_t)v539) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v535 - 966 * ((4446136 * (unint64_t)v535) >> 32))) ^ 0x2A));
  v541 = 227 * ((v538 >> 4) & 0xF0 | (LODWORD(STACK[0x4F8]) >> 8) & 0xF) + 159354;
  v542 = (LODWORD(STACK[0x4F0]) | (16 * (((v538 >> 12) ^ 0xFFFFFF0) + ((v538 >> 12) | 0xF)))) + 16;
  v543 = v542 + 849959782 - 2 * (v542 & 0x32A95B67 ^ (LODWORD(STACK[0x480]) >> 12) & 1);
  v544 = v540 ^ ((*((unsigned __int8 *)v18 + (v541 - 966 * ((4446136 * (unint64_t)v541) >> 32))) ^ 0x2A) << 8) ^ ((unint64_t)(*((unsigned __int8 *)v18 + (227 * (v543 ^ 0x32A95B66u) + 159354) % 0x3C6) ^ 0x2Au) << (60 * ((v543 & 0x8D ^ 0x89) + (v543 & 0x8D ^ 4u))));
  v545 = 227 * ((v530 >> 12) & 0xF0 | LODWORD(STACK[0x4EC])) + 159354;
  v546 = *((unsigned __int8 *)&STACK[0x7C0] + (v545 - 966 * ((4446136 * (unint64_t)v545) >> 32))) ^ 0x2A;
  v547 = 227 * (HIWORD(v536) & 0xF0 | v531) + 159354;
  v548 = 227 * ((v537 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x480])) & 0xF) + 159354;
  LODWORD(v399) = 227 * ((BYTE3(v399) & 0xF0 | (LODWORD(STACK[0x480]) >> 28)) ^ 7) + 159354;
  v549 = ((v546 << 16) - 2094133758 - ((v546 << 17) & 0x5C0000)) ^ 0x832E0E02 ^ v544 ^ 0x2A;
  v550 = v549 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                  + (v547 - 966 * ((4446136 * (unint64_t)v547) >> 32))) ^ 0x2A) << 20);
  LODWORD(v399) = ((*((unsigned __int8 *)v18
                    + (v399 - 966 * ((4446136 * (unint64_t)v399) >> 32))) ^ 0xAAAAAAAA) << 28) ^ ((*((unsigned __int8 *)v18 + (v548 - 966 * ((4446136 * (unint64_t)v548) >> 32))) ^ 0x2A) << 24) ^ v550;
  LODWORD(v399) = (((((*((unsigned __int8 *)v18
                       + (227 * (BYTE3(v399) & 0xF)
                                      + 95794
                                      - 966 * ((4446136 * (unint64_t)(227 * (BYTE3(v399) & 0xF) + 95794)) >> 32))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (227 * (v399 >> 28) + 95794 - 966 * ((4446136 * (unint64_t)(227 * (v399 >> 28) + 95794)) >> 32))) ^ 0x2A) << 12) | *((unsigned __int8 *)v18 + (227 * (HIWORD(v549) & 0xF) + 95794 - 966 * ((4446136 * (unint64_t)(227 * (HIWORD(v549) & 0xF) + 95794)) >> 32))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (227 * ((v550 >> 20) & 0xF) + 95794 - 966 * ((4446136 * (unint64_t)(227 * ((v550 >> 20) & 0xF) + 95794)) >> 32))) ^ 0x2A) << 12) | *((unsigned __int8 *)v18 + (227 * ((v544 >> 8) & 0xF) + 95794 - 966 * ((4446136 * (unint64_t)(227 * ((v544 >> 8) & 0xF) + 95794)) >> 32))) ^ 0x2A) ^ (16 * (*((unsigned __int8 *)v18 + (227 * ((unsigned __int16)v544 >> 12) + 95794 - 966 * ((4446136 * (unint64_t)(227 * ((unsigned __int16)v544 >> 12) + 95794)) >> 32))) ^ 0x2A));
  v551 = 227 * ((v544 ^ 0x2A) >> 4) + 95794;
  LODWORD(v350) = __ROR4__(v399 ^ 0xF6B576, 5) ^ 0xB007B5AB;
  HIDWORD(v350) = v350;
  v552 = *((unsigned __int8 *)&STACK[0x7C0]
         + (227 * ((v544 ^ 0x2A) & 0xF)
                        + 95794
                        - 966 * ((4446136 * (unint64_t)(227 * ((v544 ^ 0x2A) & 0xF) + 95794)) >> 32)));
  LODWORD(STACK[0x668]) ^= LODWORD(STACK[0x530]) ^ 0x13334A2;
  LODWORD(STACK[0x648]) = v529 ^ 0xA50480FF ^ (16
                                             * (*((unsigned __int8 *)&STACK[0x7C0]
                                                + (v551 - 966 * ((4446136 * (unint64_t)v551) >> 32))) ^ 0x2A)) ^ (v552 ^ 0x2A | ((v350 >> 27) << 8));
  LODWORD(v399) = v529
                + (LODWORD(STACK[0x470]) ^ 0xAFE471FA)
                - (STACK[0x498] & (2 * (v529 + (LODWORD(STACK[0x470]) ^ 0xAFE471FA))));
  v553 = STACK[0x454] & 0xF;
  v554 = 227 * (v553 | (16 * (STACK[0x448] & 0xF)));
  v555 = (v399 + 242081393) ^ LODWORD(STACK[0x474]);
  LODWORD(v399) = *((unsigned __int8 *)&STACK[0x7C0]
                  + (v554
                                 + 100561
                                 - 966 * ((4446136 * (unint64_t)(v554 + 100561)) >> 32))) ^ 0x2A;
  LODWORD(v399) = 227 * ((v399 + 1504922731 - ((2 * v399) & 0xD6)) ^ LODWORD(STACK[0x688]));
  v556 = ((int)v399 + 100561) % 0x3C6u;
  LODWORD(v399) = *((unsigned __int8 *)&STACK[0x7C0] + ((int)v399 + 37455) % 0x3C6u) >> 4;
  LODWORD(v399) = 227
                * (((v399 ^ 2) - 2 * ((v399 ^ 2) & 0xE ^ v399 & 4) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                                            + (v554 + 36489 - 966 * ((4446136 * (unint64_t)(v554 + 36489)) >> 32))))
                + 100561;
  v557 = STACK[0x44C];
  v558 = STACK[0x450];
  v559 = 227 * (STACK[0x44C] & 0xF0 | (LODWORD(STACK[0x450]) >> 4));
  LODWORD(v399) = 227
                * (*((unsigned __int8 *)v18
                   + (v559
                                  + 100561
                                  - 966 * ((4446136 * (unint64_t)(v559 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v399 - 966 * ((4446136 * (unint64_t)v399) >> 32))) ^ 0x2A)) ^ 0x2A);
  v560 = v399 + 100561 - 966 * ((4446136 * (unint64_t)(v399 + 100561)) >> 32);
  LODWORD(v399) = *((unsigned __int8 *)&STACK[0x7C0]
                  + (v399
                                 + 37455
                                 - 966 * ((4446136 * (unint64_t)(v399 + 37455)) >> 32)));
  LODWORD(v399) = 227
                * ((((v399 >> 4) ^ 2) + ((v399 >> 3) & 0x14 ^ 0xFB) + 43) ^ *((unsigned __int8 *)&STACK[0x7C0] + (v559 + 37455 - 966 * ((4446136 * (unint64_t)(v559 + 37455)) >> 32))))
                + 100561;
  LODWORD(v399) = 227
                * (*((unsigned __int8 *)v18
                   + (LODWORD(STACK[0x440])
                                  + 100561
                                  - 966
                                  * ((4446136 * (unint64_t)(LODWORD(STACK[0x440]) + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v399 - 966 * ((4446136 * (unint64_t)v399) >> 32))) ^ 0x2A)) ^ 0x2A);
  v561 = v399 + 100561 - 966 * ((4446136 * (unint64_t)(v399 + 100561)) >> 32);
  LODWORD(v399) = (*((unsigned __int8 *)&STACK[0x7C0]
                   + (v399
                                  + 37455
                                  - 966 * ((4446136 * (unint64_t)(v399 + 37455)) >> 32))) >> 4) ^ 2;
  LODWORD(v399) = (v399 - ((2 * v399) & 0x55) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                       + LODWORD(STACK[0x43C]));
  LODWORD(STACK[0x610]) = v527;
  LODWORD(v399) = 227 * v399 + 100561 - 966 * ((4446136 * (unint64_t)(227 * v399 + 100561)) >> 32);
  LODWORD(v399) = v399 + 2042088654 - ((2 * v399) & 0x19C);
  v562 = v557 >> 8 >> (((-25 - v527) & 4 ^ 4) + ((-25 - v527) & 4));
  v563 = v562 - 38488722 - ((2 * v562) & 0x1696ADC);
  v564 = (unsigned __int16)LODWORD(STACK[0x478]) >> 12;
  v565 = 227 * (v564 | (16 * ((v399 & 0xF ^ 0xE | v399 & 0xF ^ 1) & (v563 ^ 0xFDB4B56E))));
  LODWORD(v399) = 227
                * (*((unsigned __int8 *)v18 + (v565 + 100561) % 0x3C6u) ^ (16
                                                                         * (*((unsigned __int8 *)v18
                                                                            + (v399 ^ 0x79B7CCCE)) ^ 0x2A)) ^ 0x2A);
  v566 = (*((unsigned __int8 *)&STACK[0x7C0]
          + (v399 + 37455 - 966 * ((4446136 * (unint64_t)(v399 + 37455)) >> 32))) >> 4) ^ 2;
  v567 = 227
       * ((v566 - ((2 * v566) & 0x55) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                               + (v565 + 37455) % 0x3C6u))
       + 100561;
  v568 = 227 * ((v563 & 0xF0 | HIWORD(LODWORD(STACK[0x478])) & 0xF) ^ 0x67);
  v569 = *((unsigned __int8 *)v18
         + (v568 + 100561 - 966 * ((4446136 * (unint64_t)(v568 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v567 - 966 * ((4446136 * (unint64_t)v567) >> 32))) ^ 0x2A));
  v570 = 227 * (v569 ^ 0x2A) + 100561;
  v571 = *((unsigned __int8 *)&STACK[0x7C0] + 227 * (((2 * v569) & 0x14A ^ 0x40) + (v569 ^ 0x8Fu)) % 0x3C6) >> 4;
  v572 = 227
       * (((v571 ^ 2) - 2 * ((v571 ^ 2) & 0xE ^ v571 & 4) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                                   + (v568
                                                                                                  + 37455
                                                                                                  - 966 * ((4446136 * (unint64_t)(v568 + 37455)) >> 32))))
       + 100561;
  v573 = 227 * (((v563 >> 4) & 0xF0 | (LODWORD(STACK[0x624]) >> 20) & 0xF) ^ 0x50);
  v574 = 227
       * (*((unsigned __int8 *)v18
          + (v573 + 100561 - 966 * ((4446136 * (unint64_t)(v573 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v572 - 966 * ((4446136 * (unint64_t)v572) >> 32))) ^ 0x2A)) ^ 0x2A);
  v575 = v574 + 100561 - 966 * ((4446136 * (unint64_t)(v574 + 100561)) >> 32);
  v576 = *((unsigned __int8 *)&STACK[0x7C0]
         + (v574 + 37455 - 966 * ((4446136 * (unint64_t)(v574 + 37455)) >> 32)));
  v577 = (((v576 >> 4) ^ 2) + ((v576 >> 3) & 0x14 ^ 0xFB) + 43) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                                   + (v573
                                                                                                  + 37455
                                                                                                  - 966 * ((4446136 * (unint64_t)(v573 + 37455)) >> 32)));
  v578 = 16 * (*((unsigned __int8 *)&STACK[0x7C0] + v560) ^ 0x2A);
  v579 = v578 ^ ((*((unsigned __int8 *)&STACK[0x7C0] + v561) ^ 0x2A) << 8);
  LODWORD(v399) = v579 ^ ((*((unsigned __int8 *)v18
                           + (v399
                                          + 100561
                                          - 966 * ((4446136 * (unint64_t)(v399 + 100561)) >> 32))) ^ 0x2A) << 12) ^ ((*((unsigned __int8 *)v18 + v570 % 0x3C6) ^ 0x2A) << 16) ^ ((*((unsigned __int8 *)v18 + v575) ^ 0x2A) << 20);
  v580 = 227 * (((v563 >> 8) & 0xF0 | HIBYTE(LODWORD(STACK[0x624])) & 0xF) ^ 0xB1);
  v581 = 227
       * (*((unsigned __int8 *)v18
          + (v580 + 100561 - 966 * ((4446136 * (unint64_t)(v580 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (227 * v577 + 100561 - 966 * ((4446136 * (unint64_t)(227 * v577 + 100561)) >> 32))) ^ 0x2A)) ^ 0x2A);
  v582 = v581 + 100561 - 966 * ((4446136 * (unint64_t)(v581 + 100561)) >> 32);
  v583 = *((unsigned __int8 *)&STACK[0x7C0]
         + (v581 + 37455 - 966 * ((4446136 * (unint64_t)(v581 + 37455)) >> 32))) >> 4;
  v584 = 227
       * (((v583 ^ 2) - 2 * ((v583 ^ 2) & 0xE ^ v583 & 4) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                                   + (v580
                                                                                                  + 37455
                                                                                                  - 966 * ((4446136 * (unint64_t)(v580 + 37455)) >> 32))))
       + 100561;
  v585 = 227 * (((v563 >> 12) & 0xF0 | (LODWORD(STACK[0x624]) >> 28)) ^ 0x44) + 100561;
  v586 = 227
       * (*((unsigned __int8 *)v18 + (v585 - 966 * ((4446136 * (unint64_t)v585) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v584 - 966 * ((4446136 * (unint64_t)v584) >> 32))) ^ 0x2A)) ^ 0x2A)
       + 100561;
  v587 = ((*((unsigned __int8 *)v18 + (v586 - 966 * ((4446136 * (unint64_t)v586) >> 32))) ^ 0xAAAAAAAA) << 28) ^ ((*((unsigned __int8 *)v18 + v582) ^ 0x2A) << 24);
  LOBYTE(v556) = *((_BYTE *)&STACK[0x7C0] + v556) ^ 0x2A;
  v588 = 227 * (v553 & 0xFFFFFF0F | (16 * (v556 & 0xF))) + 159354;
  v589 = 227 * ((v578 ^ v556) & 0xF0 | (v558 >> 4)) + 159354;
  v590 = 227 * ((v579 >> 4) & 0xF0 | (v558 >> 8) & 0xF) + 159354;
  v591 = *((unsigned __int8 *)&STACK[0x7C0] + (v590 - 966 * ((4446136 * (unint64_t)v590) >> 32)));
  v592 = 227 * (v564 | (16 * (((v591 & 0xF ^ 0xA) + (v591 & 0xF ^ 5)) & (v399 >> 12)))) + 159354;
  v593 = 227 * (((v399 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x478])) & 0xF) ^ 7) + 159354;
  v594 = (v587 + (v587 >> 30 << 31) + 1088710902) ^ v399;
  LODWORD(v399) = 227 * (WORD1(v399) & 0xF0 | (LODWORD(STACK[0x624]) >> 20) & 0xF) + 159354;
  v595 = 227 * (((v594 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x624])) & 0xF) ^ 1) + 159354;
  v596 = HIBYTE(v594) & 0xF0 | (LODWORD(STACK[0x624]) >> 28);
  LODWORD(v399) = *((unsigned __int8 *)&STACK[0x7C0]
                  + (v399 - 966 * ((4446136 * (unint64_t)v399) >> 32)));
  LOBYTE(v335) = (v399 & 4 ^ 4) + (v399 & 4);
  v597 = 227 * (((2 * v596) & 0x17C ^ 8) + (v596 ^ 0x2FA));
  v598 = *((unsigned __int8 *)&STACK[0x7C0] + (v588 - 966 * ((4446136 * (unint64_t)v588) >> 32)));
  v599 = v598 ^ (16
               * (*((unsigned __int8 *)&STACK[0x7C0]
                  + (v589 - 966 * ((4446136 * (unint64_t)v589) >> 32))) ^ 0x2A)) ^ 0x2A;
  v600 = v599 ^ ((v591 ^ 0x2A) << 8);
  v601 = v600 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                  + (v592 - 966 * ((4446136 * (unint64_t)v592) >> 32))) ^ 0x2A) << 12);
  v602 = v601 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                  + (v593 - 966 * ((4446136 * (unint64_t)v593) >> 32))) ^ 0x2A) << 16);
  LODWORD(v399) = v602 ^ ((v399 ^ 0x2A) << 20);
  v603 = v399 ^ ((*((unsigned __int8 *)v18 + (v595 - 966 * ((4446136 * (unint64_t)v595) >> 32))) ^ 0x2A) << 24) ^ ((*((unsigned __int8 *)v18 + (v597 - 966 * ((4446136 * (unint64_t)v597) >> 32))) ^ 0xAAAAAAAA) << 28);
  LODWORD(v399) = ((((((*((unsigned __int8 *)v18
                        + (227 * (HIBYTE(v603) & 0xF)
                                       + 95794
                                       - 966
                                       * ((4446136 * (unint64_t)(227 * (HIBYTE(v603) & 0xF) + 95794)) >> 32))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (227 * (HIBYTE(v603) >> v335) + 95794 - 966 * ((4446136 * (unint64_t)(227 * (HIBYTE(v603) >> v335) + 95794)) >> 32))) ^ 0x2A) << 12) | *((unsigned __int8 *)v18 + (227 * (HIWORD(v602) & 0xF) + 95794 - 966 * ((4446136 * (unint64_t)(227 * (HIWORD(v602) & 0xF) + 95794)) >> 32))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (227 * ((v399 >> 20) & 0xF) + 95794 - 966 * ((4446136 * (unint64_t)(227 * ((v399 >> 20) & 0xF) + 95794)) >> 32))) ^ 0x2A) << 12) | *((unsigned __int8 *)v18 + (227 * ((v600 >> 8) & 0xF) + 95794 - 966 * ((4446136 * (unint64_t)(227 * ((v600 >> 8) & 0xF) + 95794)) >> 32))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (227 * ((unsigned __int16)v601 >> 12) + 95794 - 966 * ((4446136 * (unint64_t)(227 * ((unsigned __int16)v601 >> 12) + 95794)) >> 32))) ^ 0x2A) << 12);
  v604 = 227 * (v598 & 0xF ^ 0xA)
       + 95794
       - 966 * ((4446136 * (unint64_t)(227 * (v598 & 0xF ^ 0xAu) + 95794)) >> 32);
  v605 = LODWORD(STACK[0x45C]) - (STACK[0x458] & 0xF4EF7242);
  LODWORD(STACK[0x640]) = v555 ^ 0xA50480FF ^ (16
                                             * (*((unsigned __int8 *)&STACK[0x7C0]
                                                + (227 * (v599 >> 4)
                                                               + 95794
                                                               - 966
                                                               * ((4446136
                                                                 * (unint64_t)(227
                                                                                    * (v599 >> 4)
                                                                                    + 95794)) >> 32))) ^ 0x2A)) ^ (v399 | *((unsigned __int8 *)&STACK[0x7C0] + v604) ^ 0x2A);
  LODWORD(v399) = LODWORD(STACK[0x46C]) ^ 0xDE00A419;
  v606 = LODWORD(STACK[0x650]) ^ v399;
  v607 = LODWORD(STACK[0x468]) - ((2 * LODWORD(STACK[0x468]) - 1856913450) & 0xD0342ECE);
  v608 = LODWORD(STACK[0x460]) + ((v605 + 2054666529) ^ v399 ^ 0x7E729C2A);
  LODWORD(STACK[0x650]) = LODWORD(STACK[0x420]) + (v555 ^ LODWORD(STACK[0x424]));
  v609 = STACK[0x464];
  LODWORD(STACK[0x688]) = LODWORD(STACK[0x464]) ^ (v607 + 818083666);
  v610 = ((2 * ((v609 ^ 0xE81A1767) - 1603327675)) & 0xC675E7BC) + (((v609 ^ 0xE81A1767) - 1603327675) ^ 0x633AF3DE);
  LODWORD(STACK[0x680]) = LODWORD(STACK[0x428]) - ((2 * LODWORD(STACK[0x428]) - 1856913450) & 0xF3C6A58A);
  v611 = STACK[0x42C];
  LODWORD(STACK[0x624]) = ((2 * ((LODWORD(STACK[0x42C]) ^ 0xF9E352C5) - 1603327675)) & 0xFBFCF5FA)
                        + (((LODWORD(STACK[0x42C]) ^ 0xF9E352C5) - 1603327675) ^ 0xFDFE7AFD);
  v612 = 227 * ((HIWORD(LODWORD(STACK[0x414])) & 0xF0 | (LODWORD(STACK[0x5F4]) >> 20) & 0xF) ^ 0xDB);
  v613 = *((unsigned __int8 *)v18
         + (v612 + 100561 - 966 * ((4446136 * (unint64_t)(v612 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + LODWORD(STACK[0x400])) ^ 0x2A));
  v614 = *((unsigned __int8 *)&STACK[0x7C0]
         + ((((v613 ^ 0x55555555) + 27) ^ ((v613 ^ 0x2A) + 165)) & 0x36 ^ 0xD5) * ((v613 ^ 0x2Au) + 165) % 0x3C6);
  v615 = ((*((unsigned __int8 *)v18 + (227 * (v613 ^ 0x2Au) + 100561) % 0x3C6) ^ 0x2A) << 20) ^ ((*((unsigned __int8 *)v18
                                                                                                  + (LODWORD(STACK[0x3FC]) + 100561 - 966 * ((4446136 * (unint64_t)(LODWORD(STACK[0x3FC]) + 100561)) >> 32))) ^ 0x2A) << 16);
  LODWORD(v399) = 227
                * ((((v614 >> 4) ^ 2) - 2 * (((v614 >> 4) ^ 2) & 0xFB ^ ((v614 & 0x10) != 0)) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0] + (v612 + 37455 - 966 * ((4446136 * (unint64_t)(v612 + 37455)) >> 32))))
                + 100561;
  v616 = (LODWORD(STACK[0x414]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x5F4])) & 0xF;
  LOBYTE(v379) = v616 ^ 0x42;
  v617 = ((2 * v616) & 0xBC ^ 0x38) + (v616 ^ 0x8C9EF642) + 1935739298;
  v618 = STACK[0x628];
  v619 = ((((v617 - 69) | (2 - v379)) & 2 | 0xE1) & ((STACK[0x628] & 0xE ^ 0xF5)
                                                                                     + (STACK[0x628] & 0xE ^ 0xA)))
       * (v617 + 443);
  v620 = v619 % 0x3C6 + 527837389 - ((2 * (v619 % 0x3C6)) & 0x19A);
  v621 = 227 * (v617 + ((v620 & 0xA5 ^ 0x20) + (v620 & 0xA5 ^ 0x85)));
  LODWORD(v399) = 227
                * (*((unsigned __int8 *)v18 + (v620 ^ 0x1F7628CD)) ^ (16
                                                                    * (*((unsigned __int8 *)v18
                                                                       + (v399
                                                                                      - 966
                                                                                      * ((4446136
                                                                                        * (unint64_t)v399) >> 32))) ^ 0x2A)) ^ 0x2A);
  v622 = v399 + 100561 - 966 * ((4446136 * (unint64_t)(v399 + 100561)) >> 32);
  LODWORD(v399) = *((unsigned __int8 *)&STACK[0x7C0]
                  + (v399
                                 + 37455
                                 - 966 * ((4446136 * (unint64_t)(v399 + 37455)) >> 32))) >> 4;
  v623 = 227 * ((HIBYTE(LODWORD(STACK[0x414])) & 0xF0 | (LODWORD(STACK[0x5F4]) >> 28)) ^ 0x7E) + 100561;
  LODWORD(v399) = 227
                * (((v399 ^ 2) - 2 * ((v399 ^ 2) & 0xE ^ v399 & 4) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                                            + v621 % 0x3C6))
                + 100561;
  LODWORD(v399) = 227
                * (*((unsigned __int8 *)v18 + (v623 - 966 * ((4446136 * (unint64_t)v623) >> 32))) ^ (16 * (*((unsigned __int8 *)v18 + (v399 - 966 * ((4446136 * (unint64_t)v399) >> 32))) ^ 0x2A)) ^ 0x2A)
                + 100561;
  v624 = *((unsigned __int8 *)&STACK[0x7C0] + (LODWORD(STACK[0x410]) + 100561) % 0x3C6u) ^ 0x2A;
  v625 = v624 ^ (16
               * (*((unsigned __int8 *)&STACK[0x7C0]
                  + (LODWORD(STACK[0x40C])
                                 + 100561
                                 - 966
                                 * ((4446136 * (unint64_t)(LODWORD(STACK[0x40C]) + 100561)) >> 32))) ^ 0x2A));
  v626 = 227 * (STACK[0x418] & 0xFFFFFF0F | (16 * (v624 & 0xF))) + 159354;
  v627 = v625 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                  + (LODWORD(STACK[0x408])
                                 + 100561
                                 - 966
                                 * ((4446136 * (unint64_t)(LODWORD(STACK[0x408]) + 100561)) >> 32))) ^ 0x2A) << 8);
  v628 = 227 * (v625 & 0xF0 | (LODWORD(STACK[0x5F0]) >> 4)) + 159354;
  v629 = v615 ^ v627 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                         + (LODWORD(STACK[0x404])
                                        + 100561
                                        - 966
                                        * ((4446136 * (unint64_t)(LODWORD(STACK[0x404]) + 100561)) >> 32))) ^ 0x2A) << 12);
  v630 = v629 ^ ((*((unsigned __int8 *)&STACK[0x7C0] + v622) ^ 0x2A) << 24);
  LODWORD(v399) = v630 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                           + (v399 - 966 * ((4446136 * (unint64_t)v399) >> 32))) ^ 0xAAAAAAAA) << 28);
  v631 = 227 * ((v627 >> 4) & 0xF0 | (LODWORD(STACK[0x5F0]) >> 8) & 0xF) + 159354;
  v632 = 227
       * ((((HIBYTE(LOWORD(STACK[0x41C])) >> 4) | (16
                                                                  * (((v399 >> 12) ^ 0xFFFFFF0)
                                                                   + ((v399 >> 12) | 0xF))))
         + 16) ^ 8)
       + 159354;
  v633 = 227 * (((v629 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x41C])) & 0xF) ^ 9) + 159354;
  v634 = v633 - 966 * ((4446136 * (unint64_t)v633) >> 32);
  v635 = 227 * ((HIWORD(v615) & 0xF0 | (LODWORD(STACK[0x5F4]) >> 20) & 0xF) ^ 0xB) + 159354;
  v636 = v635 - 966 * ((4446136 * (unint64_t)v635) >> 32);
  v637 = 227 * (((v630 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x5F4])) & 0xF) ^ 0xC) + 159354;
  v638 = v637 - 966 * ((4446136 * (unint64_t)v637) >> 32);
  v639 = 227 * ((BYTE3(v399) & 0xF0 | (LODWORD(STACK[0x5F4]) >> 28)) ^ 0xE) + 159354;
  LODWORD(v399) = v639 - 966 * ((4446136 * (unint64_t)v639) >> 32);
  v640 = *((unsigned __int8 *)&STACK[0x7C0] + (v626 - 966 * ((4446136 * (unint64_t)v626) >> 32)));
  v641 = v640 ^ (16
               * (*((unsigned __int8 *)&STACK[0x7C0]
                  + (v628 - 966 * ((4446136 * (unint64_t)v628) >> 32))) ^ 0x2A)) ^ 0x2A;
  v642 = v641 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                  + (v631 - 966 * ((4446136 * (unint64_t)v631) >> 32))) ^ 0x2A) << 8);
  v643 = v642 ^ ((*((unsigned __int8 *)&STACK[0x7C0] + v632 % 0x3C6) ^ 0x2A) << 12);
  v644 = v643 ^ ((*((unsigned __int8 *)&STACK[0x7C0] + v634) ^ 0x2A) << 16);
  v645 = v644 ^ ((*((unsigned __int8 *)&STACK[0x7C0] + v636) ^ 0x2A) << 20);
  v646 = v645 ^ ((*((unsigned __int8 *)&STACK[0x7C0] + v638) ^ 0x2A) << 24);
  LODWORD(v399) = 227 * ((v646 ^ ((*((unsigned __int8 *)&STACK[0x7C0] + v399) ^ 0xAAAAAAAA) << 28)) >> 28)
                + 95794;
  LODWORD(v399) = ((*((unsigned __int8 *)v18
                    + (227 * (HIBYTE(v646) & 0xF)
                                   + 95794
                                   - 966 * ((4446136 * (unint64_t)(227 * (HIBYTE(v646) & 0xF) + 95794)) >> 32))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (v399 - 966 * ((4446136 * (unint64_t)v399) >> 32))) ^ 0x2A) << 12);
  v647 = 227 * ((unsigned __int16)v643 >> 12)
       + 95794
       - 966 * ((4446136 * (unint64_t)(227 * ((unsigned __int16)v643 >> 12) + 95794)) >> 32);
  v648 = (LODWORD(STACK[0x680]) + 1116484272) ^ v611;
  v649 = STACK[0x624];
  v650 = (((BYTE1(v642) + 2) & 3 ^ 0x43 | (((v642 >> 8) & 0xF) + 166) & 0xFFFFFFE3) & ((LODWORD(STACK[0x624]) + 3) ^ ((v611 ^ 0x3A) + 187)))
       * (((v642 >> 8) & 0xF) + 422);
  v651 = v641 >> 4;
  v652 = STACK[0x648];
  LODWORD(v399) = ((((v399 | *((unsigned __int8 *)v18
                                           + (227 * (HIWORD(v644) & 0xF)
                                                          + 95794
                                                          - 966
                                                          * ((4446136
                                                            * (unint64_t)(227 * (HIWORD(v644) & 0xF) + 95794)) >> 32))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + (227 * ((v645 >> 20) & 0xF) + 95794 - 966 * ((4446136 * (unint64_t)(227 * ((v645 >> 20) & 0xF) + 95794)) >> 32))) ^ 0x2A) << 12) | *((unsigned __int8 *)v18 + (v650 - 966 * ((4446136 * (unint64_t)v650) >> 32))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v18 + v647) ^ 0x2A) << 12);
  v653 = v610 - 1664807902 + LODWORD(STACK[0x444]);
  v654 = STACK[0x650];
  v655 = LODWORD(STACK[0x650]) ^ 0xEEABA115 ^ (16
                                             * (*((unsigned __int8 *)v18
                                                + (227 * v651
                                                               + 95794
                                                               - 966
                                                               * ((4446136
                                                                 * (unint64_t)(227 * v651 + 95794)) >> 32))) ^ 0x2A)) ^ (v399 | *((unsigned __int8 *)v18 + (227 * (v640 & 0xF ^ 0xA) + 95794 - 966 * ((4446136 * (unint64_t)(227 * (v640 & 0xF ^ 0xAu) + 95794)) >> 32))) ^ 0x2A);
  v656 = v608 ^ 0x555D6E97 ^ LODWORD(STACK[0x438]);
  v657 = v610 + v608 - 1664807902;
  LODWORD(STACK[0x680]) = (v657 ^ 0xFF822023) - 1488683538 - ((2 * (v657 ^ 0xFF822023)) & 0x4E88FBDC);
  v658 = STACK[0x640];
  v659 = v657 + LODWORD(STACK[0x688]);
  LODWORD(v399) = -LODWORD(STACK[0x688]) - v608;
  LODWORD(STACK[0x688]) = LODWORD(STACK[0x660]) ^ 0xE1D124FE ^ LODWORD(STACK[0x638]);
  v660 = v653 ^ 0x636C93A2 ^ v659 ^ v399;
  v661 = ((2 * ((v659 ^ v399) + 1857527226)) & 0x79EFF762) + (((v659 ^ v399) + 1857527226) ^ 0xBCF7FBB1);
  LODWORD(STACK[0x660]) = LODWORD(STACK[0x658]) ^ 0x87491AB7;
  v662 = v649 + 33654019 + v654;
  v663 = v662 + v648;
  v664 = v649 + 33654019 - v663;
  v665 = v664 ^ v663;
  v666 = v664 + 1248267750;
  v667 = STACK[0x64C];
  LODWORD(STACK[0x658]) = v662 ^ 0xF184D063;
  LODWORD(v18) = v665;
  v668 = (v649 + 33654019 + (v618 ^ 0xF9E352C5)) ^ 0x88BD9F70 ^ v665;
  v669 = v399 - 20960916;
  LODWORD(v399) = STACK[0x634];
  v670 = STACK[0x63C];
  LODWORD(STACK[0x5C0]) = LODWORD(STACK[0x63C]) ^ 0xA1D641C3;
  LODWORD(STACK[0x624]) = v670 ^ 0x905BCECD;
  LODWORD(STACK[0x638]) = LODWORD(STACK[0x4CC]) - 181093980;
  LODWORD(STACK[0x650]) = 30843;
  LODWORD(STACK[0x63C]) = STACK[0x4DC];
  LODWORD(STACK[0x600]) = v656;
  LODWORD(STACK[0x64C]) = v667;
  LODWORD(STACK[0x5FC]) = 9154;
  LODWORD(STACK[0x634]) = v399;
  v671 = v667 - 1022654106 - (v399 & 0x861712CC);
  LODWORD(STACK[0x528]) = v671;
  v672 = STACK[0x630];
  v673 = (((LODWORD(STACK[0x630]) + 1564258416) & 0xA2C34BDE) + v661 + 1124598391) ^ 0xD1D93B1F;
  v674 = ((-1124598863 - v661 + v673) ^ 0xFFFFFFFE) + v673;
  LODWORD(STACK[0x628]) = v606;
  v606 ^= 0xEEABA115;
  HIDWORD(v350) = ~v652;
  LODWORD(v350) = v652 ^ 0xA50480C0;
  v675 = v350 >> 6;
  HIDWORD(v350) = v652 ^ 0xFF;
  LODWORD(v350) = v652 ^ 0xA5048000;
  LODWORD(STACK[0x640]) = v658;
  LODWORD(v399) = v658 ^ 0xA50480FF;
  v676 = STACK[0x668];
  v677 = (v350 >> 11) ^ v675;
  LODWORD(STACK[0x648]) = v652;
  HIDWORD(v350) = v652 ^ 0x10480FF;
  LODWORD(v350) = v652 ^ 0xA4000000;
  v678 = v677 ^ (v350 >> 25);
  LODWORD(STACK[0x61C]) = v656 ^ 0xA50480FF;
  LODWORD(STACK[0x60C]) = v655;
  v679 = (v676 ^ 0xEEABA115) & (v656 ^ 0xA50480FF) ^ (v676 ^ 0xEEABA115) & v399 ^ (v652 ^ 0xA50480FF) & (v655 ^ 0xEEABA115) ^ (v652 ^ 0xA50480FF) & v606;
  v680 = v679 - 290741995 - ((2 * v679) & 0xDD57422A);
  LODWORD(STACK[0x4F0]) = v399;
  LODWORD(STACK[0x4E8]) = v606;
  LODWORD(STACK[0x4E4]) = v676 ^ 0xEEABA115;
  LODWORD(STACK[0x4EC]) = v652 ^ 0xA50480FF;
  v681 = (v676 ^ 0xEEABA115) & (v655 ^ 0xEEABA115) ^ v656 ^ (v676 ^ 0xEEABA115) & v606 ^ (v652 ^ 0xA50480FF) & v399 ^ (v652 ^ 0xA50480FF) & (v656 ^ 0xA50480FF);
  v682 = ((2 * (v665 - 1629421811)) & 0xDF77F74C) + ((v665 - 1629421811) ^ 0x6FBBFBA6);
  v683 = v680 ^ v655;
  LODWORD(STACK[0x540]) = v683;
  v684 = (v674 + 456478494) ^ ((LODWORD(STACK[0x680]) ^ 0xA7447DEE) - 1913586030);
  v685 = v684 ^ 0x5E560DE2 ^ ((v683 ^ (v674 + 808018259)) + 1582697954 - ((2 * (v683 ^ (v674 + 808018259))) & 0xBCAC1BC4));
  LODWORD(STACK[0x5B0]) = v666;
  LODWORD(STACK[0x538]) = v665;
  v686 = LODWORD(STACK[0x658]) ^ 0xE06F040;
  v687 = ((_DWORD)v18 - 1980961576) ^ (v686 - 1913586030);
  v688 = (v18 ^ (v666 - 2057587880)) + (_DWORD)v18 - 1980961576;
  v689 = ((v669 - 788359214) ^ (v674 - 1857527226)) + v674 + 456478494;
  LODWORD(STACK[0x530]) = v689;
  v690 = v682 - 1874590630;
  v691 = ((v681 ^ 0xA50480FF ^ v687) - v687) ^ (1874590630 - v682 + (v681 ^ 0xA50480FF ^ (v682 - 1874590630))) ^ ((v681 ^ 0x4859CE81 ^ (v685 - ((2 * v685) & 0xDABA9CFC) - 312652162)) - v685);
  v692 = v674 - v684 - (v676 & 0x91486246 ^ 0x11404242 | v676 & 0x91486246 ^ 0x80082004) - 1049508967;
  v693 = (v660 ^ 0xFB22DF1C) + v674 + 808018259 + v692;
  v694 = v684;
  LODWORD(STACK[0x588]) = v684;
  LODWORD(v18) = v692 ^ (v684 + 511376840);
  v695 = v689 + v684 + 511376840 - v693 + 1512682128 - ((2 * (v689 + v684 + 511376840 - v693)) & 0xB4536520);
  v696 = v690 + (v668 ^ 0x10F3D3CE);
  v697 = v690 - v687;
  v698 = v687 - (v681 & 0xE1850238 ^ 0x40810200 | v681 & 0xE1850238 ^ 0xA1040038);
  v699 = ((2 * v698) & 0xB17FFFCE) + (v698 ^ 0xD8BFFFE7);
  v700 = (char *)*(&off_1E8C4D9A0 + (v672 ^ 0x5A6)) - 8;
  v701 = *(_DWORD *)&v700[4 * ((173 * (v671 ^ 0xC30B897A) + 12110) % 0xC0)];
  HIDWORD(v350) = v701 ^ 0xEDA;
  LODWORD(v350) = v701 ^ 0x735A0000;
  v702 = v699 - ((2 * v699 + 550796594) & 0x3C24B8B2);
  v699 += 658505753;
  v703 = v696 + v697;
  v704 = (v699 ^ v697) - 699278037 - ((2 * (v699 ^ v697)) & 0xACA3BA56);
  v705 = v699 - v703 + v688;
  v706 = LODWORD(STACK[0x638]) + v669 - v688;
  v707 = LODWORD(STACK[0x5FC]) >> 8;
  LODWORD(STACK[0x4F8]) = 9834;
  v708 = STACK[0x678];
  v709 = *(_DWORD *)(STACK[0x678] + 4 * (9834 - 275 * v707));
  v710 = (v709 ^ 0x76744361) - 1851425842;
  v711 = v706
       + v678
       + v710
       + v691
       + 764139962
       + ((v350 >> 17) ^ 0xE3428217 ^ ((v350 >> 17) >> 1) & 0x6D14778);
  LODWORD(STACK[0x598]) = v711;
  LODWORD(STACK[0x5B8]) = v705;
  v712 = v693 ^ 0x430F3944;
  v713 = v18 ^ 0x5A29B290 ^ v695;
  LODWORD(STACK[0x548]) = v695;
  LODWORD(STACK[0x584]) = v694 + 51006614;
  v714 = (v693 ^ 0x430F3944) + v694 + 51006614 - (v713 + (_DWORD)v18);
  LODWORD(STACK[0x594]) = v704;
  v715 = (v705 - 699278037 - ((2 * v705) & 0xACA3BA56)) ^ v704;
  v716 = v703 ^ 0x430F3944;
  v717 = (v703 ^ 0x430F3944) - 814053747 + (v704 ^ 0xD651DD2B) - v715;
  v718 = v715 + (v704 ^ 0xD651DD2B);
  v719 = (v704 ^ 0xD651DD2B) - 2 * (((v704 ^ 0xD651DD2B) + 329813596) & 0x103B1585 ^ (v704 ^ 0xD651DD2B) & 1);
  LODWORD(STACK[0x558]) = v702 + 779918066;
  v720 = v716 + 814053747 + ((v702 + 779918066) ^ 0x1E125C59) - v718;
  LODWORD(STACK[0x5AC]) = v718;
  v721 = v720 + 1534873502 - ((2 * v720) & 0xB6F89F3C);
  LODWORD(STACK[0x568]) = (_DWORD)v18;
  v722 = (_DWORD)v18 + v712 - v713;
  v723 = v714 - 139633312 - ((2 * v714 + 1782633034) & 0x8519F204) + 1223;
  v724 = (_DWORD)v18 - 743928228;
  LODWORD(STACK[0x580]) = (_DWORD)v18 - 743928228;
  LODWORD(STACK[0x520]) = v723;
  v725 = v713 + (_DWORD)v18 - 814053747;
  LODWORD(STACK[0x5A0]) = v725;
  v726 = v725
       - (v724
        + (v723 ^ 0x3D7306FD)
        + 1)
       + 109340893
       - ((2 * (v725 - (v724 + (v723 ^ 0x3D7306FD) + 1))) & 0xD08D1BA);
  LODWORD(STACK[0x560]) = v719 + 1675863008;
  LODWORD(STACK[0x570]) = v721;
  v727 = (v721 ^ 0xA483B061) + 1;
  LODWORD(STACK[0x578]) = v727;
  v728 = v727 + ((v719 + 1675863008) ^ 0x903B1584);
  v729 = v718 - 814053747 - v728 + 962348683 - ((2 * (v718 - 814053747 - v728)) & 0x72B88D16);
  v730 = v726 ^ (v722 - 494961570);
  LODWORD(v399) = (v730 & 0x6EB79DBA ^ 0x6840898)
                + (v726 ^ (v724 + (v723 ^ 0x3D7306FD) + 109340894 - ((2 * (v724 + (v723 ^ 0x3D7306FD) + 1)) & 0xD08D1BA)))
                + (v730 & 0x6EB79DBA ^ 0x68339522);
  v731 = v721 ^ (v718 - 814053747);
  v732 = v729 ^ v728;
  v733 = v731 ^ 0xBE479A5;
  v734 = v731;
  LODWORD(STACK[0x5C8]) = v731;
  v735 = (v729 ^ 0x395C468B) + (v731 ^ 0xBE479A5);
  LODWORD(STACK[0x5F4]) = v735;
  LODWORD(STACK[0x5EC]) = v729 ^ v728;
  v736 = (v735 - ((2 * v735) & 0x29BFDCB4) - 1797263782) ^ v729 ^ v728;
  v737 = (v729 ^ (v717 + 1281440861 + ~((2 * v717 + 638184354) & 0x72B88D16))) + (v736 ^ 0x527C572E) + 1;
  v738 = ((2 * v737) & 0xFD7EF7BE) + (v737 ^ 0x7EBF7BDF);
  v739 = (v732 ^ 0x395C468B) + v733 + 920096245 - ((2 * ((v732 ^ 0x395C468B) + v733)) & 0x6DAF1BEA);
  v740 = v723 ^ v725 ^ 0x9214CF39;
  v741 = (v726 ^ 0x68468DD) + v740;
  LODWORD(STACK[0x5E8]) = v741;
  v742 = v730 ^ 0x68468DD;
  LODWORD(STACK[0x5D8]) = v399;
  LODWORD(STACK[0x5E4]) = v399 - 1857527226;
  v743 = (v399 - 1857527226) ^ v741;
  v744 = v742 - v743;
  v745 = (v742 - v743 + 1075863482) ^ v743;
  LODWORD(STACK[0x5D4]) = v723 ^ v725 ^ 0x14067048;
  v746 = v399 + v740;
  v747 = v399 + v740 - ((2 * (v399 + v740) + 43041932) & 0xC257EE2) + 391848375;
  v748 = v744 ^ v723 ^ v725 ^ 0x14067048;
  v749 = v748 ^ v747;
  v750 = (((v748 ^ v747) - 77262770) & 0xB5723793) + (((v748 ^ ~v747) + 77262770) & 0xB5723793);
  v751 = (v746 - 1857527226) ^ 0xB5723793;
  v752 = STACK[0x5F8];
  v753 = (v751 - 770208570 - ((2 * v751) & 0xA42F198C)) ^ LODWORD(STACK[0x5F8]);
  v754 = v749 ^ 0x1C5D0A0 ^ (v753 + 29741216 + (~(2 * v753) | 0xFC745EBF) + 1);
  v755 = v739 ^ v734 ^ (v738 - 2126478303);
  LODWORD(v399) = STACK[0x610];
  v756 = ((v754 - 756216529 - ((2 * v754) & 0xA5DA1A5E)) ^ LODWORD(STACK[0x610])) - v754;
  v757 = (v750 + 920096245 - ((2 * v750) & 0x6DAC1B6A)) ^ v739;
  LODWORD(STACK[0x508]) = v757;
  v758 = v399 ^ 0x5148B749 ^ v739;
  v759 = (v755 ^ 0xC2CC0BAF) + (v399 ^ 0xEFDEF97F ^ v755);
  v760 = (v738 - 1050614821) ^ v736;
  v761 = v756 ^ (v758 - v757) ^ (v759 + 1);
  v762 = v751 - ((2 * v751 - 24847614) & 0xD2BBCC5A);
  v763 = v749 ^ v745;
  v764 = v745;
  LODWORD(STACK[0x5FC]) = v745;
  v765 = v762 + 1755337646;
  v766 = ((2 * ((v765 ^ 0x16A219D2) + (v749 ^ v745) + 1)) & 0x1FFED73A)
       + (((v765 ^ 0x16A219D2) + (v749 ^ v745) + 1) ^ 0x8FFF6B9D);
  v767 = v744 + 1341127709 + v763;
  LODWORD(STACK[0x550]) = v767;
  LODWORD(STACK[0x638]) = v760 ^ 0x527C572E;
  LODWORD(STACK[0x610]) = v760;
  v768 = v711 + v767 + (v760 ^ 0x527C572E) + v761 + 1;
  v769 = v768 + 428714785 - ((2 * v768) & 0x331B5642);
  LODWORD(STACK[0x5F0]) = v766;
  v770 = (227 * (HIWORD(v769) & 0xF ^ 0xD) + 16117)
       % ((((10115918 - v766) & 0x11503C6) + ((v766 + 23438513) & 0x11503C6)) & 0x20007C6);
  v771 = 173
       * (LODWORD(STACK[0x528]) ^ (((((v709 ^ 0x1E) + 50) ^ v710) & 0x24)
                                 - 1022654106
                                 - 2 * ((((v709 ^ 0x1E) + 50) ^ v710) & 0x24)
                                 + 16) ^ 7);
  v772 = v771 >= 0xC0;
  v773 = (v771 - 192) % 0xC0;
  v774 = v771 + 711635070;
  v775 = (v773 ^ 0xBBEBBD7F) + 2 * (v773 & 0x7F) + 1853813503;
  if (v772)
    v774 = v775;
  HIDWORD(v777) = v676 ^ 0x115;
  LODWORD(v777) = v676 ^ 0xEEABA000;
  v776 = v777 >> 11;
  v778 = STACK[0x650];
  HIDWORD(v777) = v676 ^ 0x55555555;
  LODWORD(v777) = v676 ^ 0xEEABA100;
  v779 = (v777 >> 6) ^ v776;
  HIDWORD(v777) = v676 ^ 0xABA115;
  LODWORD(v777) = v676 ^ 0xEFFFFFFF;
  v780 = v779 ^ (v777 >> 25);
  v781 = (v674 - ((2 * v674 + 579912844) & 0x4E88FBDC) + 948756532) ^ LODWORD(STACK[0x680]) ^ v678;
  v782 = ((LODWORD(STACK[0x658]) ^ 0xF1F90FBF) + (v686 ^ v780) + 1) ^ ((v780 ^ LODWORD(STACK[0x538]))
                                                                     - LODWORD(STACK[0x538]));
  v783 = STACK[0x5C0];
  HIDWORD(v777) = LODWORD(STACK[0x5C0]) ^ 0x1C3;
  LODWORD(v777) = LODWORD(STACK[0x5C0]) ^ 0xA1D64000;
  LODWORD(STACK[0x4FC]) = v777 >> 13;
  v784 = *(_DWORD *)&v700[4 * v774 - 2846540280];
  v785 = v782 ^ ((v781 ^ v780) + v781 - 2 * v781);
  v786 = (v695 & 0x13F95249 ^ 0x1D04049) + (v695 & 0x13F95249 ^ 0x12291200);
  v787 = 2 * ((v786 - ((2 * v786) & 0x66B40DB4) + 1935281882) ^ v784);
  v788 = v784 ^ 0x1B330801;
  v789 = ((v784 ^ 0x1B330801) + (v784 ^ 0x6B36E802 ^ v787) + 1) ^ ((v787 ^ 0x7005E003) + 1);
  v790 = LODWORD(STACK[0x530])
       - LODWORD(STACK[0x5B0])
       + LODWORD(STACK[0x63C])
       + LODWORD(STACK[0x540])
       + (*(_DWORD *)(v708 + 4 * (v778 % 0x113)) ^ 0x76744361)
       + v785
       + v788
       - 1475365039
       + (v787 ^ 0xC4F4E5E0 ^ (v789 - ((2 * v789) & 0x961DF438) + 1259272732));
  LODWORD(STACK[0x63C]) = v790;
  v791 = v760 ^ v755 ^ 0x90B05C81;
  LODWORD(STACK[0x680]) = v791;
  v792 = v738 - 785350594 + v791;
  LODWORD(STACK[0x500]) = v792;
  v793 = &STACK[0x7C0];
  v794 = 227 * (HIBYTE(v769) & 0xF ^ 9) + 16117;
  v795 = 227 * ((v769 >> 20) & 0xF ^ 8) + 16117;
  v796 = v795 - 966 * ((unsigned __int16)((2171 * v795) >> 16) >> 5);
  v797 = *((unsigned __int8 *)v793 + v770) ^ 0x2A | ((*((unsigned __int8 *)v793
                                                      + (unsigned __int16)(v794
                                                                         - 966
                                                                         * ((unsigned __int16)((2171 * v794) >> 16) >> 5))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v793 + (unsigned __int16)(227 * ((v769 >> 28) ^ 1) + 16117 - 966 * ((unsigned __int16)((2171 * (227 * ((v769 >> 28) ^ 1) + 16117)) >> 16) >> 5))) ^ 0x2A) << 12);
  v798 = 227 * (((unsigned __int16)(v769 & 0xF000) >> 12) ^ 0xA) + 16117;
  LOWORD(v795) = v798 - 966 * ((unsigned __int16)((2171 * v798) >> 16) >> 5);
  v799 = (v797 << 8) ^ ((*((unsigned __int8 *)&STACK[0x7C0] + v796) ^ 0x2A) << 12);
  v800 = 227 * ((v769 >> 8) & 0xF ^ 0xB) + 16117;
  LODWORD(STACK[0x5BC]) = v769;
  v801 = 227 * ((v769 >> 4) ^ 2) + 16117;
  v802 = v801 - 966 * ((unsigned __int16)((2171 * v801) >> 16) >> 5);
  v803 = v799 | *((unsigned __int8 *)&STACK[0x7C0]
                + (unsigned __int16)(v800 - 966 * ((unsigned __int16)((2171 * v800) >> 16) >> 5))) ^ 0x2A;
  v804 = (v803 << 8) - ((v803 << 9) & 0xB9EC5000);
  v805 = v790
       + (v752 ^ 0xD2178CC6)
       + v764
       - v792
       - ((2 * (v790 + (v752 ^ 0xD2178CC6) + v764 - v792)) & 0x445B9D46)
       - 1574056285;
  v806 = 227 * (HIBYTE(v805) & 0xF ^ 2) + 16117;
  v807 = ((*((unsigned __int8 *)v793
           + (unsigned __int16)(v806 - 966 * ((unsigned __int16)((2171 * v806) >> 16) >> 5))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)v793 + (unsigned __int16)(227 * ((v805 >> 28) ^ 0xA) + 16117 - 966 * ((unsigned __int16)((2171 * (227 * ((v805 >> 28) ^ 0xA) + 16117)) >> 16) >> 5))) ^ 0x2A) << 12);
  v808 = 227 * ((v805 >> 20) & 0xF ^ 2) + 16117;
  v809 = 227 * (HIWORD(v805) & 0xF ^ 0xD) + 16117;
  v810 = v807 | *((unsigned __int8 *)&STACK[0x7C0]
                + (unsigned __int16)(v809 - 966 * ((unsigned __int16)((2171 * v809) >> 16) >> 5))) ^ 0x2A;
  v811 = STACK[0x620];
  v812 = *((unsigned __int8 *)&STACK[0x7C0]
         + (unsigned __int16)(v808 - 966 * ((unsigned __int16)((2171 * v808) >> 16) >> 5)));
  v813 = STACK[0x620];
  LODWORD(STACK[0x620]) = STACK[0x620];
  LOBYTE(v809) = (v811 & 0xED ^ 0xCD) + (v811 & 0xED ^ 0x20);
  v814 = 227 * (((unsigned __int16)v805 >> 12) ^ 0xC) + 16117;
  v815 = v810 ^ ((unint64_t)(v812 ^ 0x2Au) << (v809 + 23));
  v816 = 227 * ((v805 >> 8) & 0xF ^ 0xE) + 16117;
  v817 = 227 * ((v805 >> 4) ^ 0xA) + 16117;
  v818 = (v815 << 16) - 1961993058 - ((v815 << 17) & 0x161C0000);
  v819 = ((v818 ^ 0x8B0E5C9E)
        + ((*((unsigned __int8 *)v793
            + (unsigned __int16)(v816 - 966 * ((unsigned __int16)((2171 * v816) >> 16) >> 5))) ^ 0x2A) << 8)) ^ ((*((unsigned __int8 *)v793 + (unsigned __int16)(v814 - 966 * ((unsigned __int16)((2171 * v814) >> 16) >> 5))) ^ 0x2A) << 12);
  LOWORD(v816) = *((unsigned __int8 *)&STACK[0x7C0]
                 + (unsigned __int16)(227 * (v769 & 0xF ^ 1)
                                    + 16117
                                    - 966 * ((unsigned __int16)((2171 * (227 * (v769 & 0xF ^ 1) + 16117)) >> 16) >> 5))) ^ 0x2A;
  v820 = *((unsigned __int8 *)&STACK[0x7C0]
         + (unsigned __int16)(v817 - 966 * ((unsigned __int16)((2171 * v817) >> 16) >> 5))) ^ 0x2A;
  v821 = 16 * v820 - ((32 * v820) & 0x1360);
  LOBYTE(v817) = *((_BYTE *)&STACK[0x7C0]
                 + (unsigned __int16)(227 * (v805 & 0xF ^ 3)
                                    + 16117
                                    - 966 * ((unsigned __int16)((2171 * (227 * (v805 & 0xF ^ 3) + 16117)) >> 16) >> 5))) ^ 0x2A;
  v822 = (16 * v820) ^ v817;
  v823 = v816 & 0xF;
  v824 = 227 * (v823 | (16 * (v817 & 0xF)));
  v825 = *((unsigned __int8 *)&STACK[0x7C0]
         + (v824 + 100561 - 966 * ((4446136 * (unint64_t)(v824 + 100561)) >> 32)));
  v826 = LODWORD(STACK[0x4F4]) ^ 0x2A;
  LODWORD(STACK[0x658]) = v826;
  v827 = 227 * (v825 ^ v826);
  v828 = v827 + 100561 - 966 * ((4446136 * (unint64_t)(v827 + 100561)) >> 32);
  v829 = *((unsigned __int8 *)&STACK[0x7C0]
         + (v827 + 37455 - 966 * ((4446136 * (unint64_t)(v827 + 37455)) >> 32)));
  v830 = (((v819 ^ (v821 + 1480415675)) >> 8) ^ 0x583D59)
       - ((2 * (((v819 ^ (v821 + 1480415675)) >> 8) ^ 0x583D59)) & 0x151B726);
  v831 = 227
       * ((((v829 >> 4) ^ 2) + ((v829 >> 3) & 0x14 ^ 0xFB) + 43) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                                    + (v824 + 37455 - 966 * ((4446136 * (unint64_t)(v824 + 37455)) >> 32))))
       + 100561;
  v832 = *((unsigned __int8 *)&STACK[0x7C0] + (unsigned __int16)v795) ^ 0x2A;
  v833 = v804 - 587847459;
  v834 = (v804 - 587847459) ^ (v832 << 12);
  v835 = v834 ^ (16 * (*((unsigned __int8 *)&STACK[0x7C0] + v802) ^ 0x2A));
  v836 = v835 ^ v816;
  v837 = ((v835 ^ v816) >> 4) ^ 0xD;
  LODWORD(STACK[0x5B0]) = v837;
  v838 = 227 * (v822 & 0xF0 | v837);
  v839 = 227
       * (*((unsigned __int8 *)v793
          + (v838 + 100561 - 966 * ((4446136 * (unint64_t)(v838 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)v793 + (v831 - 966 * ((4446136 * (unint64_t)v831) >> 32))) ^ 0x2A)) ^ 0x2A);
  v840 = v839 + 100561 - 966 * ((4446136 * (unint64_t)(v839 + 100561)) >> 32);
  v841 = *((unsigned __int8 *)&STACK[0x7C0]
         + (v839 + 37455 - 966 * ((4446136 * (unint64_t)(v839 + 37455)) >> 32)));
  v842 = 227
       * ((((v841 >> 4) ^ 2) + ((v841 >> 3) & 0x14 ^ 0xFB) + 43) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                                                    + (v838 + 37455 - 966 * ((4446136 * (unint64_t)(v838 + 37455)) >> 32))))
       + 100561;
  v843 = v842 - 966 * ((4446136 * (unint64_t)v842) >> 32);
  v844 = v830 - 109;
  v845 = 227 * (((v835 >> 8) & 0xF | (16 * (((_BYTE)v830 - 109) & 0xF))) ^ 0x38);
  v846 = *((unsigned __int8 *)v793 + v828) ^ (16 * (*((unsigned __int8 *)v793 + v840) ^ 0x2A));
  v847 = *((unsigned __int8 *)&STACK[0x7C0]
         + (v845 + 100561 - 966 * ((4446136 * (unint64_t)(v845 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)&STACK[0x7C0] + v843) ^ 0x2A));
  v848 = v845 + 37455 - 1932 * ((2223068 * (unint64_t)(v845 + 37455)) >> 32);
  v849 = ((2 * v848) & 0xDF2) + (v848 ^ 0x7F7FFEF9);
  if ((v849 - 2139094777) >= 0x3C6)
    v850 = -672150543;
  else
    v850 = -672149577;
  v851 = *((_BYTE *)&STACK[0x7C0] + (v849 - 1466945200 + v850));
  v852 = 227 * (v847 ^ 0x2A);
  v853 = (*((unsigned __int8 *)&STACK[0x7C0]
          + (v852 + 37455 - 966 * ((4446136 * (unint64_t)(v852 + 37455)) >> 32))) >> 4) ^ 2;
  v854 = 227 * (v853 + (v851 ^ 0x2A) - 2 * (v853 & (v851 ^ 0xA))) + 100561;
  v855 = (unint64_t)(*((unsigned __int8 *)&STACK[0x7C0]
                            + (v852
                                           + 100561
                                           - 966 * ((4446136 * (unint64_t)(v852 + 100561)) >> 32))) ^ 0x2Au) << ((v844 & 0xFE ^ 0x6C | v844 & 0xFE ^ 0x92) ^ (v846 & 0xF6 ^ 0x22 | v846 & 0xF6 ^ 0xD4u));
  v856 = *((unsigned __int8 *)&STACK[0x7C0] + (v854 - 966 * ((4446136 * (unint64_t)v854) >> 32)));
  v857 = 227 * (((v819 >> 8) & 0xF0 | ((unsigned __int16)v834 >> 12)) ^ 2);
  v858 = 227
       * (*((unsigned __int8 *)&STACK[0x7C0]
          + (v857 + 100561 - 966 * ((4446136 * (unint64_t)(v857 + 100561)) >> 32))) ^ (16 * (v856 ^ 0x2A)) ^ 0x2A);
  v859 = v858 + 100561 - 966 * ((4446136 * (unint64_t)(v858 + 100561)) >> 32);
  v860 = *((unsigned __int8 *)&STACK[0x7C0]
         + (v858 + 37455 - 966 * ((4446136 * (unint64_t)(v858 + 37455)) >> 32)));
  v861 = v855 ^ ((*((unsigned __int8 *)&STACK[0x7C0] + v859) ^ 0x2A) << 12);
  LODWORD(STACK[0x510]) = v861;
  LODWORD(v855) = 227
                * ((((v860 >> 4) ^ 2) - 2 * (((v860 >> 4) ^ 2) & 0xE ^ (v860 >> 4) & 4) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0] + (v857 + 37455 - 966 * ((4446136 * (unint64_t)(v857 + 37455)) >> 32))))
                + 100561;
  v862 = ((v819 >> 12) & 0xF0 | HIWORD(v834) & 0xF) ^ 6;
  v863 = 227 * ((v836 & 0x1BB ^ 0x122) + (v836 & 0x1BB ^ 0x99) + v862);
  LODWORD(v855) = *((unsigned __int8 *)&STACK[0x7C0]
                  + (v863 - 966 * ((4446136 * (unint64_t)v863) >> 32))) ^ (16
                                                                                              * (*((unsigned __int8 *)&STACK[0x7C0]
                                                                                                 + (v855 - 966 * ((4446136 * (unint64_t)v855) >> 32))) ^ 0x2A));
  v864 = (HIWORD(v834) & 0xF3 ^ 1) + (HIWORD(v834) & 0xF3 ^ 0xF2);
  LODWORD(v855) = 227 * (v855 ^ 0x2A);
  v865 = v855 + 100561 - 966 * ((4446136 * (unint64_t)(v855 + 100561)) >> 32);
  LODWORD(v855) = 227
                * ((((*((_BYTE *)&STACK[0x7C0]
                                       + (v855
                                                      + 37455
                                                      - 966
                                                      * ((4446136 * (unint64_t)(v855 + 37455)) >> 32))) >> 4) ^ 2)
                                   + ((*((_BYTE *)&STACK[0x7C0]
                                       + (v855
                                                      + 37455
                                                      - 966
                                                      * ((4446136 * (unint64_t)(v855 + 37455)) >> 32))) >> 3) & 0x14 ^ 0xFB)
                                   + 43) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                           + ((v862 + 165) * (v864 & 0xE7)
                                                          - 966
                                                          * ((4446136 * (unint64_t)((v862 + 165) * (v864 & 0xE7u))) >> 32))))
                + 100561;
  v866 = 227 * ((v815 & 0xF0 | (v833 >> 20) & 0xF) ^ 0xF);
  LODWORD(v855) = *((unsigned __int8 *)&STACK[0x7C0]
                  + (v866
                                 + 100561
                                 - 966 * ((4446136 * (unint64_t)(v866 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)&STACK[0x7C0] + (v855 - 966 * ((4446136 * (unint64_t)v855) >> 32))) ^ 0x2A));
  v867 = ((2 * v855) & 0x1C8A) + (v855 ^ 0xFFFFFE6F);
  LODWORD(v855) = *((unsigned __int8 *)&STACK[0x7C0] + (227 * (v855 ^ 0x2A) + 37455) % 0x3C6);
  LODWORD(v855) = 227
                * ((((v855 >> 4) ^ 0x32) + ((v855 >> 3) & 0x14 ^ 0xFB) - 5) ^ *((unsigned __int8 *)&STACK[0x7C0] + (v866 + 37455 - 966 * ((4446136 * (unint64_t)(v866 + 37455)) >> 32))))
                + 100561;
  v868 = 227 * (((v818 >> 20) & 0xF0 | HIBYTE(v833) & 0xF) ^ 0xBC);
  LODWORD(v855) = 227
                * (*((unsigned __int8 *)&STACK[0x7C0]
                   + (v868
                                  + 100561
                                  - 966 * ((4446136 * (unint64_t)(v868 + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)&STACK[0x7C0] + (v855 - 966 * ((4446136 * (unint64_t)v855) >> 32))) ^ 0x2A)) ^ 0x2A);
  v869 = v855 + 100561 - 966 * ((4446136 * (unint64_t)(v855 + 100561)) >> 32);
  LODWORD(v855) = (*((unsigned __int8 *)&STACK[0x7C0]
                   + (v855
                                  + 37455
                                  - 966 * ((4446136 * (unint64_t)(v855 + 37455)) >> 32))) >> 4) ^ 2;
  v870 = HIBYTE(v818) & 0xF0 | (v833 >> 28);
  v871 = 227
       * ((v855 - ((2 * v855) & 0x55) + 42) ^ *((unsigned __int8 *)&STACK[0x7C0]
                                                               + (v868
                                                                              + 37455
                                                                              - 966
                                                                              * ((4446136
                                                                                * (unint64_t)(v868 + 37455)) >> 32))))
       + 100561;
  v872 = 227
       * (*((unsigned __int8 *)&STACK[0x7C0]
          + (227 * (v870 ^ 0x8D)
                         + 100561
                         - 966 * ((4446136 * (unint64_t)(227 * (v870 ^ 0x8Du) + 100561)) >> 32))) ^ (16 * (*((unsigned __int8 *)&STACK[0x7C0] + (v871 - 966 * ((4446136 * (unint64_t)v871) >> 32))) ^ 0x2A)) ^ 0x2A)
       + 100561;
  LODWORD(v855) = *((unsigned __int8 *)&STACK[0x7C0] + (227 * v867 + 201122) % 0x3C6u) ^ 0x2A;
  v873 = v861 ^ ((*((unsigned __int8 *)&STACK[0x7C0] + v865) ^ 0x2A) << 16);
  LODWORD(STACK[0x518]) = v873;
  v874 = v873 ^ ((_DWORD)v855 << 20);
  LODWORD(STACK[0x530]) = v874;
  v875 = *((unsigned __int8 *)&STACK[0x7C0] + (v872 - 966 * ((4446136 * (unint64_t)v872) >> 32))) ^ 0xAAAAAAAA;
  v876 = v874 ^ ((*((unsigned __int8 *)&STACK[0x7C0] + v869) ^ 0x2A) << 24);
  LODWORD(STACK[0x538]) = v876;
  v877 = v876 ^ (v875 << 28) ^ 0x3D5B900B;
  LODWORD(STACK[0x540]) = v877;
  v878 = 227 * ((v823 & 0xFFFFFF0F | (16 * ((v877 ^ v846) & 0xF))) ^ 0x10);
  LODWORD(STACK[0x528]) = (v878 + 159354) % ((((v878 + 159354) & 0xA3CE) + ((37253 - v878) & 0xA3CE)) & 0x107D6);
  v879 = STACK[0x660];
  HIDWORD(v880) = v783 ^ 0x1641C3;
  LODWORD(v880) = v783 ^ 0xA1C00000;
  LODWORD(v855) = v880 >> 22;
  HIDWORD(v880) = ~v783;
  LODWORD(v880) = v783 ^ 0xA1D641C0;
  v881 = (v880 >> 2) ^ LODWORD(STACK[0x4FC]) ^ v855;
  v882 = STACK[0x62C];
  v883 = LODWORD(STACK[0x688]) ^ 0xE1D124FE;
  v884 = LODWORD(STACK[0x62C]) ^ 0xD2ED0D2F;
  v885 = STACK[0x670];
  v886 = LODWORD(STACK[0x670]) ^ 0xD2ED0D2F;
  LODWORD(v855) = LODWORD(STACK[0x660]) ^ 0xD2ED0D2F;
  LODWORD(STACK[0x568]) = v886;
  LODWORD(STACK[0x5F8]) = v882;
  v887 = v886 & v884 ^ v883 & (v783 ^ 0xA1D641C3) ^ v855 & v886 ^ v855 & v884 ^ (v813 ^ 0x905BCECD) & v883 ^ (v813 ^ 0x905BCECD) & (v783 ^ 0xA1D641C3);
  LODWORD(STACK[0x558]) = v855;
  v888 = (v885 ^ v882) & (v783 ^ 0xA1D641C3) ^ v883 & v884 ^ v855 & v883 ^ (v813 ^ 0x905BCECD) & (v879 ^ v885);
  v889 = LODWORD(STACK[0x520]) ^ ((v888 ^ LODWORD(STACK[0x580]))
                                - ((2 * (v888 ^ LODWORD(STACK[0x580]))) & 0x8519F204)
                                - 1030948606);
  v890 = ((LODWORD(STACK[0x560]) ^ 0x6FC4EA7B) + (v887 ^ 0x903B1584 ^ LODWORD(STACK[0x560])) + 1) ^ (LODWORD(STACK[0x578]) + (v887 ^ 0x5B7C4F9E ^ LODWORD(STACK[0x570]))) ^ ((v887 ^ 0x5E6D2286 ^ (v889 + 1584210566 - ((2 * v889) & 0xBCDA450C))) - v889);
  v891 = LODWORD(STACK[0x508]) - ((2 * LODWORD(STACK[0x508]) + 2122636034) & 0x5E530DDE);
  v892 = ((2 * v765) & 0xDD6F3B74 ^ 0x84081364) + (v765 ^ 0xBDBBB408);
  LODWORD(STACK[0x62C]) = v892;
  v893 = (v892 - 1857527226) ^ LODWORD(STACK[0x550]);
  LODWORD(STACK[0x5C0]) = v893;
  v894 = v881 + 814053747 + (LODWORD(STACK[0x548]) ^ 0x5A29B290) - LODWORD(STACK[0x5AC]) + v890 + LODWORD(STACK[0x63C]);
  v895 = ((v894 - ((2 * v894) & 0x16589FDC) - 1960030226) ^ v893 ^ 0x8FA6FF65) + 2 * ((v893 ^ 0x48AB08B) & v894);
  LOBYTE(v881) = v895 + 40;
  v896 = v895 + 1034973992 - ((2 * v895) & 0x7B60E650);
  v897 = 227 * (HIBYTE(v896) & 0xF ^ 0xD) + 16117;
  LODWORD(STACK[0x5B8]) = (v891 + 778826864) ^ (LODWORD(STACK[0x500])
                                              - ((2 * LODWORD(STACK[0x500])) & 0x5E530DDE)
                                              - 1356232977) ^ 0x3EDB7F14;
  LODWORD(STACK[0x594]) = v891 + 778826864;
  v898 = 227 * ((v896 >> 20) & 0xF ^ 0xB) + 16117;
  LOWORD(v888) = v898 - 966 * ((unsigned __int16)((2171 * v898) >> 16) >> 5);
  v899 = 227 * (((unsigned __int16)v896 >> 12) ^ 7) + 16117;
  v900 = 227 * ((v896 >> 8) & 0xF ^ 3) + 16117;
  v901 = *((unsigned __int8 *)&STACK[0x7C0]
         + (unsigned __int16)(v900 - 966 * ((unsigned __int16)((2171 * v900) >> 16) >> 5)));
  v902 = ((((*((unsigned __int8 *)&STACK[0x7C0]
             + (unsigned __int16)(v897 - 966 * ((unsigned __int16)((2171 * v897) >> 16) >> 5))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)&STACK[0x7C0] + (unsigned __int16)(227 * ((v896 >> 28) ^ 3) + 16117 - 966 * ((unsigned __int16)((2171 * (227 * ((v896 >> 28) ^ 3) + 16117)) >> 16) >> 5))) ^ 0x2A) << 12) | *((unsigned __int8 *)&STACK[0x7C0] + (unsigned __int16)(227 * (BYTE2(v896) & 0xF) + 16117 - 966 * ((unsigned __int16)((2171 * (227 * (HIWORD(v896) & 0xF) + 16117)) >> 16) >> 5))) ^ 0x2A) << 8) ^ ((*((unsigned __int8 *)&STACK[0x7C0] + (unsigned __int16)v888) ^ 0x2A) << 12);
  LODWORD(STACK[0x5AC]) = v896;
  v903 = 227 * ((v896 >> 4) ^ 2) + 16117;
  v904 = ((v902 | v901 ^ 0x2A) << 8) + 1806716235 - (((v902 | v901 ^ 0x2A) << 9) & 0xD7609A00);
  LODWORD(STACK[0x5A0]) = v904;
  v905 = *((unsigned __int8 *)&STACK[0x7C0]
         + (unsigned __int16)(v903 - 966 * ((unsigned __int16)((2171 * v903) >> 16) >> 5)));
  v906 = *((unsigned __int8 *)&STACK[0x7C0]
         + (unsigned __int16)(227 * (v881 & 0xF ^ 8)
                            + 16117
                            - 966 * ((unsigned __int16)((2171 * (227 * (v881 & 0xF ^ 8u) + 16117)) >> 16) >> 5))) ^ 0x2A;
  v907 = v904 ^ ((*((unsigned __int8 *)&STACK[0x7C0]
                  + (unsigned __int16)(v899 - 966 * ((unsigned __int16)((2171 * v899) >> 16) >> 5))) ^ 0x2A) << 12);
  LODWORD(STACK[0x584]) = v907;
  LODWORD(STACK[0x598]) = v906 & 0xF;
  LODWORD(STACK[0x588]) = (v907 ^ 0x6BB04D4B | v906) ^ (16 * (v905 ^ 0x2A));
  v908 = (LODWORD(STACK[0x5D8]) - ((2 * LODWORD(STACK[0x5E4])) & 0x4A0901FE) + 911008581) ^ LODWORD(STACK[0x600]);
  v909 = (v908 - ((2 * v908) & 0xC257EE2) - 2045591695) ^ LODWORD(STACK[0x5D4]);
  v910 = STACK[0x60C];
  v911 = ((v909 - 290741995 - ((2 * v909) & 0xDD57422A)) ^ LODWORD(STACK[0x60C])) - v909;
  LODWORD(STACK[0x63C]) = ((LODWORD(STACK[0x5E8]) + LODWORD(STACK[0x61C])) ^ 0xB9DFF3EF)
                        + 1873571415
                        + ((2 * (LODWORD(STACK[0x5E8]) + LODWORD(STACK[0x61C]))) & 0x73BFE7DE);
  LODWORD(STACK[0x658]) = (((LODWORD(STACK[0x5EC]) ^ 0xC6A3B974) + (v910 ^ 0xD7F7E79E ^ LODWORD(STACK[0x5EC])) + 1) ^ ((LODWORD(STACK[0x5C8]) ^ 0xF41B865A) + (v910 ^ 0xE54FD8B0 ^ LODWORD(STACK[0x5C8])) + 1) ^ v911)
                        - LODWORD(STACK[0x5F4]);
  v912 = STACK[0x5F0];
  v913 = (LODWORD(STACK[0x5F0]) + 1879086179) ^ 0x198DAB21 ^ LODWORD(STACK[0x5BC]);
  LODWORD(STACK[0x61C]) = v913 - 1526431489 - ((2 * v913) & 0x4A0901FE);
  v914 = v912 - LODWORD(STACK[0x5FC]) - 1020073849;
  v915 = ((2 * (v914 ^ LODWORD(STACK[0x5C0]))) & 0xEEFD79BE ^ 0x426D6194) + (v914 ^ LODWORD(STACK[0x5C0]) ^ 0xD6494F35);
  v916 = LODWORD(STACK[0x62C]) - v915 - ((2 * (LODWORD(STACK[0x62C]) - v915) - 2115011786) & 0x85875E8E);
  LODWORD(STACK[0x680]) = (v914 ^ 0xC86BC240)
                        - 2004794591
                        + v915
                        - 1488683538
                        - ((2 * ((v914 ^ 0xC86BC240) - 2004794591 + v915)) & 0x4E88FBDC);
  v917 = (((v916 - 2084868894) & 0xDD75C550 ^ 0x9D344010) + ((v916 - 2084868894) & 0xDD75C550 ^ 0x40418540)) ^ LODWORD(STACK[0x620]);
  LODWORD(STACK[0x638]) = LODWORD(STACK[0x658]) - 1733302496;
  v918 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x690]
                                       + 8 * ((43 * (LODWORD(STACK[0x64C]) != 63)) ^ LODWORD(STACK[0x630])))
                           - 4);
  LODWORD(STACK[0x688]) = v917 ^ 0xACFF2F63;
  return v918();
}

void sub_1CF2D7510(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;

  LODWORD(STACK[0x658]) = a6;
  LODWORD(STACK[0x620]) = v10;
  LODWORD(STACK[0x624]) = v8;
  LODWORD(STACK[0x5C0]) = a3 ^ 0xCCE340D4;
  LODWORD(STACK[0x650]) += 149;
  LODWORD(STACK[0x610]) = STACK[0x670];
  LODWORD(STACK[0x62C]) = STACK[0x660];
  LODWORD(STACK[0x670]) = STACK[0x5F8];
  LODWORD(STACK[0x5F8]) = v9;
  LODWORD(STACK[0x668]) = a7;
  LODWORD(STACK[0x660]) = a8;
  JUMPOUT(0x1CF2D4474);
}

uint64_t sub_1CF2D7590(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  int v31;
  int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  int v42;
  unsigned int v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  int v53;
  int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  int v69;
  int v70;
  int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  unsigned int v90;
  uint64_t v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  unsigned int v128;
  uint64_t v129;
  unint64_t v130;
  int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  uint64_t (*v136)(void);

  v21 = a4 + v8;
  LODWORD(STACK[0x634]) = LODWORD(STACK[0x4E8]) + LODWORD(STACK[0x4A0]);
  LODWORD(STACK[0x64C]) = LODWORD(STACK[0x558]) + LODWORD(STACK[0x4B4]);
  LODWORD(STACK[0x650]) = LODWORD(STACK[0x4E4]) + LODWORD(STACK[0x4D8]);
  v22 = v10 ^ ((LODWORD(STACK[0x680]) ^ v19 ^ 0xE587D2A9)
             - 1873031475
             - ((2 * (LODWORD(STACK[0x680]) ^ v19 ^ 0xE587D2A9)) & 0x20B79D9A));
  v23 = ((v12 ^ 0xD2ED0D2F ^ a8) - v12) ^ ((a8 ^ (v22 - 756216529 - ((2 * v22) & 0xA5DA1A5E))) - v22);
  v24 = a6 ^ a8 ^ 0xDCEBFD6F;
  v25 = (a6 ^ 0xF1F90FBF) + 1;
  v26 = (v24 + v25) ^ v23;
  v27 = ((2 * (v12 + v18 - 2059390696)) & 0xA7FBF79E) + ((v12 + v18 - 2059390696) ^ 0xD3FDFBCF);
  v28 = (v14 ^ 0x88BD9F70) + v25;
  v29 = (LODWORD(STACK[0x680]) ^ 0x58BB8211) + (v17 ^ 0x636C93A2) + 1;
  v30 = ((2 * (v11 + 393703786 - v29)) & 0xFEFFF9B4) + ((v11 + 393703786 - v29) ^ 0x7F7FFCDA);
  LODWORD(STACK[0x680]) = (a3 ^ 0x6D350117) - 1862100916 + v9;
  v31 = v11 + v9;
  LODWORD(STACK[0x630]) = v26 - a2;
  v32 = (a6 ^ v13) + a2;
  v33 = ((2 * ((a6 ^ v13) + 393703786 - v28)) & 0xFBF7E8FE) + (((a6 ^ v13) + 393703786 - v28) ^ 0xFDFBF47F);
  v34 = v21 - 2 * ((v21 + 111285348) & 0xF8DFD5E ^ v21 & 2) + 1177555392;
  v35 = v30 - 2139094234;
  v36 = LODWORD(STACK[0x660]) ^ v34 ^ 0x5D60F073 ^ (v30 - 2139094234);
  v37 = v33 + 33819521;
  v38 = v32 - 925554445 + v27;
  v39 = v27 - ((2 * v27 + 983708764) & 0x32DAC70E);
  v40 = -738329649 - v27 + v28;
  v41 = ((v39 - 692159051) ^ 0x66929C78) + 1;
  v42 = v41 + (v20 ^ 0x936AD4A ^ (v39 - 692159051));
  v43 = v40 + v41;
  v44 = v31 + 1305281699 + v21;
  LODWORD(STACK[0x660]) = v44;
  v45 = v29 - v21 + (v34 ^ 0x707202A3);
  LODWORD(STACK[0x610]) = ((-33819521 - v33 + (v20 ^ 0x905BCECD ^ (v33 + 33819521))) ^ v42 ^ (((v36
                                                                                              - 1873031475
                                                                                              - ((2 * v36) & 0x20B79D9A)) ^ v20)
                                                                                            - v36))
                        - v38;
  v46 = v33 + v38;
  v47 = v30 - v45 + 634585484;
  v48 = v45 - v47;
  v49 = v35 + v44;
  v50 = v47 - (v35 + v44) + 1368444231 - ((2 * (v47 - (v35 + v44))) & 0xA3219A8E);
  v51 = v46 - 33819521 - 2 * v46 + v37 - v43;
  v52 = v51 + 1443173209 - ((2 * v51) & 0xAC0A26B2);
  v53 = v43 - (v37 - v43) - ((2 * (v43 - (v37 - v43)) + 740219964) & 0x2BD1E394);
  v54 = v50 ^ v34;
  v55 = v50 ^ v34 ^ 0xC8482B27 ^ ((LODWORD(STACK[0x688]) ^ 0xB041E9B9 ^ v50)
                                - ((2 * (LODWORD(STACK[0x688]) ^ 0xB041E9B9 ^ v50)) & 0x44A4D562)
                                + 575826609);
  v56 = v48 + 1521287578 - ((2 * (v48 + 1521287578) + 740219964) & 0x7DABAF72);
  v57 = v52 ^ (v39 - 692159051) ^ 0xFB6F0153;
  v58 = ((LODWORD(STACK[0x5F8]) ^ 0x3407718D ^ ((v52 ^ (v39 - 692159051) ^ 0xCF6870DE)
                                              - 756216529
                                              - ((2 * (v52 ^ (v39 - 692159051) ^ 0xCF6870DE)) & 0xA5DA1A5E)))
       - v57) ^ ((v52 ^ 0xA9FAECA6) + (LODWORD(STACK[0x5F8]) ^ 0x84E81E76 ^ v52) + 1) ^ (((v55
                                                                                         - 756216529
                                                                                         - ((2 * v55) & 0xA5DA1A5E)) ^ LODWORD(STACK[0x5F8]))
                                                                                       - v55);
  v59 = (v54 ^ 0xEA1A4196) - ((2 * (v54 ^ 0xEA1A4196) + 2129884124) & 0x7939DB18) + 2081859450;
  v60 = ((2 * ((v50 ^ 0x5190CD47) - 9681882 + (v59 ^ 0x43631273))) & 0xFE86FEAC)
      + (((v50 ^ 0x5190CD47) - 9681882 + (v59 ^ 0x43631273)) ^ 0xFF437F56);
  LODWORD(STACK[0x60C]) = v49 - 1128513674 + (a5 ^ 0x4D2E0B9D);
  v61 = v49 - ((2 * (v49 - 1128513674)) & 0x7DABAF72);
  LODWORD(STACK[0x688]) = v58 - (v46 - 1094694153);
  v53 -= 336044056;
  v62 = (v53 ^ 0xEA170E35) + (v53 ^ (v46 - ((2 * (v46 - 1094694153)) & 0x2BD1E394) - 727106367)) + 1;
  v63 = ((2 * v62) & 0xF5DDC79E) + (v62 ^ 0xFAEEE3CF);
  v64 = v57 - ((2 * v57 + 2129884124) & 0x52B20E86) + 1758642481;
  v65 = ((v56 + 350569943) ^ 0xC12A2846) + ((v56 + 350569943) ^ (v61 - 74311889)) + 1;
  v66 = ((2 * v65) & 0xE8DB5AE6) + (v65 ^ 0xF46DAD73);
  v67 = (((2 * (v60 - 64909064)) & 0x935DF64)
       + ((v60 - 64909064) ^ 0x49AEFB2)
       + 1054201785
       - 2
       * ((((2 * (v60 - 64909064)) & 0x935DF64) + ((v60 - 64909064) ^ 0x49AEFB2)) & 0x3ED5D7BB ^ ((v60 - 64909064) ^ 0x49AEFB2) & 2)) ^ (v56 + 350569943);
  v68 = (v64 ^ 0x56A6F8BC)
      + (v52 ^ 0x56051359)
      - ((2 * ((v64 ^ 0x56A6F8BC) + (v52 ^ 0x56051359)) - 19363764) & 0xB43A67AE)
      - 645302275;
  v69 = LODWORD(STACK[0x670]) ^ v59 ^ 0x6E71E0A3 ^ (v60 + 12353706);
  v70 = v60 + (v54 ^ 0x15E5BE69) - ((2 * (v60 + (v54 ^ 0x15E5BE69)) + 42306938) & 0x48B03D7C);
  v71 = (v64 ^ 0x56A6F8BC) + 1;
  v72 = ((v68 ^ 0x25E2CC28) + (v16 ^ 0x80ABF11 ^ v68) + 1) ^ (v71 + (v16 ^ 0x7B4E8B85 ^ v64)) ^ ((v16 ^ 0x23072187 ^ (v69 - 250565311 - ((2 * v69) & 0xE2215A82)))
                                                                                               + ((v69
                                                                                                 - 250565311
                                                                                                 - ((2 * v69) & 0xE2215A82)) ^ 0xF110AD41)
                                                                                               + ((2
                                                                                                 * (v69
                                                                                                  - 250565311
                                                                                                  - ((2 * v69) & 0xE2215A82))) ^ 0x1DDEA57D)
                                                                                               + 1);
  v73 = v67 - v66 - ((2 * (v67 - v66) + 1759206118) & 0x48B03D7C);
  v74 = v53 ^ 0xCFF5C21D ^ v68;
  v75 = (v68 ^ 0xDA1D33D7) + v71 - 1956842866 - ((2 * ((v68 ^ 0xDA1D33D7) + v71)) & 0x16B9E51C);
  v76 = v74 - v63 - ((2 * (v74 - v63) + 366856094) & 0x16B9E51C);
  v77 = v72 - v63;
  v78 = (v75 ^ 0x74A30D71) + v63 - ((2 * ((v75 ^ 0x74A30D71) + v63) + 170014820) & 0x16B9E51C);
  v79 = v64 ^ 0x1D482645;
  v80 = (v64 ^ 0x1D482645)
      + (v75 ^ 0x74A30D71)
      - 2048751665
      - ((2 * ((v64 ^ 0x1D482645) + (v75 ^ 0x74A30D71) + 1)) & 0xBC50F9C);
  v81 = (v76 - 2041850275) ^ v75;
  v82 = (v78 - 1871835456) ^ v75;
  v83 = ((2 * ((v75 ^ 0x8B5CF28E) - 1174160239)) & 0x9DED7F2E) + (((v75 ^ 0x8B5CF28E) - 1174160239) ^ 0xCEF6BF97);
  v84 = v59 ^ 0x88DCC8A;
  v85 = (v70 + 1704650107) ^ 0xDBA7E141;
  v86 = v84 + v85 + 1;
  v87 = (v73 + 415616049) ^ (v70 + 1704650107);
  v88 = (v66 + 194138765 + v85 + 1) ^ (v70 + 1704650107);
  v89 = ((v70 + 1704650107) ^ 0x24581EBE) - 1174160239;
  v90 = ((v86 ^ v89) - 290741995 - ((2 * (v86 ^ v89)) & 0xDD57422A)) ^ a7;
  v91 = (v88 ^ 0x24581EBEu) + v15;
  v92 = ((v90 - 1526431489 - ((2 * v90) & 0x4A0901FE)) ^ LODWORD(STACK[0x61C])) - v90;
  v93 = v87 - v89 + 1816833884 - ((2 * (v87 - v89)) & 0xD8955EB8);
  v94 = v81 - 822689897 - v83 - 1814852265 - ((2 * (v81 - 822689897 - v83)) & 0x27A71AAE);
  v95 = v88 ^ 0x5BEC4169 ^ (v86 - ((2 * v86) & 0x6A89CC00) - 1253775872);
  v96 = ((v80 ^ 0x7A1D7831) + (LODWORD(STACK[0x61C]) ^ 0x20E60731 ^ v80) + 1) ^ (-822689897
                                                                               - v83
                                                                               + (LODWORD(STACK[0x61C]) ^ 0xA50480FF ^ (v83 + 822689897))) ^ v92;
  v97 = v84 - 1174160239 + (v93 ^ 0x6C4AAF5C);
  v98 = ((2 * (v79 - 1174160239 + (v94 ^ 0x93D38D57))) & 0xFDFFEBF6)
      + ((v79 - 1174160239 + (v94 ^ 0x93D38D57)) ^ 0xFEFFF5FB);
  v99 = v96 - v82;
  v100 = v82 ^ 0xCAF0B9D7;
  v101 = ((v82 ^ 0xCAF0B9D7) - 2048751666 - ((2 * (v82 ^ 0xCAF0B9D7)) & 0xBC50F9C)) ^ v80;
  v102 = v93 ^ (v95 + 1816833884 - ((2 * v95) & 0xD8955EB8));
  v103 = v97 ^ LODWORD(STACK[0x668]) ^ (v102 - 290741995 - ((2 * v102) & 0xDD57422A));
  v104 = v95 + (v88 ^ 0xEEA8A769);
  v105 = v101 + v100;
  v106 = v101 ^ v94;
  v107 = ((2 * (v93 ^ v104)) & 0xFDCED3F8 ^ 0x198CD200) + (v93 ^ v104 ^ 0x723904FD);
  v108 = (-16779781 - v98 + (LODWORD(STACK[0x4EC]) ^ (v98 + 16779781))) ^ ((v106 ^ 0x6C2C72A8)
                                                                         + (LODWORD(STACK[0x648]) ^ 0x36D70DA8 ^ v106)
                                                                         + 1) ^ (((v103
                                                                                 - 1526431489
                                                                                 - ((2 * v103) & 0x4A0901FE)) ^ LODWORD(STACK[0x648]))
                                                                               - v103);
  v109 = v102 + v104;
  v110 = v104 + v97 - v107;
  v111 = v107 - ((2 * v107 + 71613092) & 0x46873D6);
  v112 = v107 + v109;
  v113 = v104 + 1027058911 + v109;
  v114 = ((2 * (v105 ^ v94)) & 0xCF9CDFDA ^ 0xC68C9E10) + (v105 ^ v94 ^ 0x148920E7);
  v115 = (v106 ^ 0x93D38D57) + v105;
  v116 = v108 - v105;
  v105 += 1027058911;
  v117 = v98 + v105 - v114 - 389121550 - ((2 * (v98 + v105 - v114 - 389121550)) & 0x63E3770C);
  v118 = (v110 - 1138813221) ^ LODWORD(STACK[0x628]) ^ (v112 + 1875130137 - ((2 * (v112 - 2129095164)) & 0xDD57422A));
  v119 = ((((v117 - 1309557882) ^ 0x4E0E4479) + (LODWORD(STACK[0x640]) ^ 0x14F53B79 ^ (v117 - 1309557882)) + 1) ^ ((LODWORD(STACK[0x4F0]) ^ (v114 + v115 + 405901331)) - (v114 + v115) - 405901331) ^ (((v118 - 1526431489 - ((2 * v118) & 0x4A0901FE)) ^ LODWORD(STACK[0x640])) - v118))
       - (v115
        + v105);
  v120 = (((v111 + 1616287549) ^ 0x823439EB) + v113) ^ 0xB0971909 ^ (v112
                                                                   - 271567938
                                                                   + ((v111 + 1616287549) ^ 0x823439EB)
                                                                   - 1857527226);
  v121 = LODWORD(STACK[0x634]) + v113 - 314010828 - ((2 * (LODWORD(STACK[0x634]) + v113)) & 0xDA912668);
  v122 = ((LODWORD(STACK[0x630]) - ((2 * (LODWORD(STACK[0x630]) + 2057587880)) & 0x9B37FCF8) + 1212173092) ^ LODWORD(STACK[0x4E0]))
       + 2 * ((LODWORD(STACK[0x630]) + 2057587880) & (LODWORD(STACK[0x4E0]) ^ 0x4D9BFE7C));
  LODWORD(STACK[0x4E0]) = v122 - 845414788 - ((2 * v122) & 0x9B37FCF8);
  v123 = LODWORD(STACK[0x680]) - 890;
  v124 = v116 + LODWORD(STACK[0x4A4]) - 1330355984 - ((2 * (v116 + LODWORD(STACK[0x4A4]))) & 0x6168C1E0);
  v125 = LODWORD(STACK[0x688])
       + LODWORD(STACK[0x4AC])
       - 374667651
       - ((2 * (LODWORD(STACK[0x688]) + LODWORD(STACK[0x4AC]))) & 0xD3560CFA);
  v126 = v99 + LODWORD(STACK[0x4A8]) + 899866469 - ((2 * (v99 + LODWORD(STACK[0x4A8]))) & 0x6B45BECA);
  LODWORD(STACK[0x4DC]) = LODWORD(STACK[0x4DC]) - 697066054 + LODWORD(STACK[0x63C]);
  v127 = LODWORD(STACK[0x64C])
       + LODWORD(STACK[0x660])
       - 1697793726
       - ((2 * (LODWORD(STACK[0x64C]) + LODWORD(STACK[0x660]))) & 0x359B7284);
  v128 = LODWORD(STACK[0x4B0]) + 194138765 + LODWORD(STACK[0x568]) + v66;
  v129 = v128 + 909364931 - ((2 * v128) & 0x6C679D86);
  LODWORD(STACK[0x4D8]) = LODWORD(STACK[0x650]) + v104;
  if (LODWORD(STACK[0x3E4]) == 52)
    JUMPOUT(0x1CF2C7C84);
  v130 = STACK[0x690];
  if (LODWORD(STACK[0x3E4]) != 86)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v130 + 8 * (((LODWORD(STACK[0x3D8]) + 120) * ((LODWORD(STACK[0x3F8]) - 1383911920) < 0x81)) ^ (LODWORD(STACK[0x3D8]) + 35))) - 4))(v119, v124, v120, v126, v125, v129, v91, (v114 - ((2 * v114 - 361320766) & 0xB84B1C56) - 782178932) ^ 0x61EE6FE1);
  v132 = LODWORD(STACK[0x638]) + LODWORD(STACK[0x4CC]);
  LODWORD(STACK[0x384]) = LODWORD(STACK[0x4D0])
                        + 1420157177
                        + LODWORD(STACK[0x610])
                        - 841158962
                        - ((2 * (LODWORD(STACK[0x4D0]) + 1420157177 + LODWORD(STACK[0x610]))) & 0x9BB9DD9C);
  v133 = STACK[0x310];
  LODWORD(STACK[0x378]) = LODWORD(STACK[0x60C])
                        + LODWORD(STACK[0x3E0])
                        - ((2 * (LODWORD(STACK[0x60C]) + LODWORD(STACK[0x3E0]))) & 0xA18E6D10)
                        + (LODWORD(STACK[0x310]) ^ 0xD0C7339F);
  v134 = LODWORD(STACK[0x4D4])
       + 928089765
       + v123
       - 605010638
       - ((2 * (LODWORD(STACK[0x4D4]) + 928089765 + v123)) & 0xB7E07AB2);
  LODWORD(STACK[0x388]) = LODWORD(STACK[0x3AC])
                        - 2093675080
                        + v91
                        + 1988461872
                        - ((2 * (LODWORD(STACK[0x3AC]) - 2093675080 + v91)) & 0xED0B0A60);
  LODWORD(STACK[0x35C]) = v77
                        - 85007409
                        + LODWORD(STACK[0x3DC])
                        - 910815261
                        - ((2 * (v77 - 85007409 + LODWORD(STACK[0x3DC]))) & 0x936C1FC6);
  LODWORD(STACK[0x398]) = LODWORD(STACK[0x3B0])
                        + 1355696765
                        + v119
                        - 2130637943
                        - ((2 * (LODWORD(STACK[0x3B0]) + 1355696765 + v119)) & 0x2021712);
  LODWORD(STACK[0x3A8]) = v132 - 756140775 - 2 * ((v132 + 64285540) & 0xF1949B7 ^ v132 & 2);
  v135 = LODWORD(STACK[0x4D8]) - ((2 * LODWORD(STACK[0x4D8]) + 655105574) & 0xF972E9CA);
  v136 = (uint64_t (*)(void))(*(_QWORD *)(v130 + 8
                                              * (int)(((((v133 + 50) | 0x16) ^ 0x554) * (STACK[0x3B4] & 1)) ^ v133))
                           - (v133 ^ 0x51FLL));
  LODWORD(STACK[0x334]) = v134 - 2009;
  LODWORD(STACK[0x368]) = v135 - 1874885640;
  LODWORD(STACK[0x340]) = v126;
  LODWORD(STACK[0x338]) = v129;
  LODWORD(STACK[0x394]) = STACK[0x4DC];
  LODWORD(STACK[0x344]) = v124;
  LODWORD(STACK[0x314]) = STACK[0x4E0];
  LODWORD(STACK[0x320]) = v127;
  LODWORD(STACK[0x330]) = v125;
  LODWORD(STACK[0x348]) = v121;
  return v136();
}

uint64_t sub_1CF2D87B4@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((((a1 + 881) | 0x16) ^ 0x554) * (STACK[0x3B4] & 1)) ^ (a1 + 831)))
                            - ((a1 + 831) ^ 0x51FLL)))();
}

uint64_t sub_1CF2D87FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  int v55;
  int v56;
  unsigned int v57;
  unint64_t v58;
  int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  uint64_t v63;

  v19 = LODWORD(STACK[0x314]) ^ 0x27E8595;
  v20 = (((v17 - 1955687968) & 0x74916F3F) + 1905815511) ^ LODWORD(STACK[0x318]);
  v21 = ((118 * (v17 ^ 0x51C)) ^ 0xFB872F1A) - 2009212831 * (LODWORD(STACK[0x32C]) ^ 0x9C68D40D);
  v22 = LODWORD(STACK[0x334]) ^ 0x7ADF0947;
  STACK[0x7B8] = 0x4157236804EEB048;
  v23 = LODWORD(STACK[0x360]) ^ 0x8A44079A;
  STACK[0x7B0] = 0x4B68D01B852A3E98;
  STACK[0x7A8] = 0x7602A59FCAD3DA4BLL;
  v24 = (LODWORD(STACK[0x358]) ^ 0x975FDFDC)
      - ((2 * (LODWORD(STACK[0x358]) ^ 0x975FDFDC) - 968328188) & 0xAB4BA7FA)
      + 952766975;
  v25 = LODWORD(STACK[0x358]) ^ 0x68A02023;
  v26 = LODWORD(STACK[0x324]) ^ 0x55A88E0E;
  v27 = LODWORD(STACK[0x320]) ^ 0x5528C2AB;
  v28 = -75026750 - 2009212831 * (LODWORD(STACK[0x31C]) ^ 0x26CE3131);
  LODWORD(STACK[0x6B8]) = -75026750 - 2009212831 * v20;
  LODWORD(STACK[0x6BC]) = v28;
  v29 = LODWORD(STACK[0x384]) ^ 0x6CF3DAD0;
  v30 = LODWORD(STACK[0x378]) ^ 0x71E80296;
  v31 = v25 - 1663319554;
  LODWORD(STACK[0x6D8]) = -75026750 - 2009212831 * v22;
  LODWORD(STACK[0x6DC]) = -75026750 - 2009212831 * v29;
  v32 = LODWORD(STACK[0x328]) ^ 0x8A3046B0;
  LODWORD(STACK[0x698]) = v21;
  LODWORD(STACK[0x69C]) = -75026750 - 2009212831 * v23;
  v33 = LODWORD(STACK[0x35C]) ^ 0x68993BFD;
  v34 = LODWORD(STACK[0x380]) ^ 0x8E2EE6B7;
  v35 = -75026750 - 2009212831 * (LODWORD(STACK[0x338]) ^ 0xF9D6B52A);
  LODWORD(STACK[0x700]) = -75026750 - 2009212831 * (LODWORD(STACK[0x330]) ^ 0x264E7D94);
  LODWORD(STACK[0x704]) = v35;
  LODWORD(STACK[0x6A0]) = (((v24 & 0x800C1820 ^ 0x80041020) + (v31 & 0x800C1820)) | 0x831D061) * (v24 ^ 0xD5A5D3FD);
  LODWORD(STACK[0x6A4]) = -75026750 - 2009212831 * v34;
  v36 = LODWORD(STACK[0x340]) ^ 0xFA47A48C;
  LODWORD(STACK[0x6C0]) = -75026750 - 2009212831 * v26;
  LODWORD(STACK[0x6C4]) = -75026750 - 2009212831 * v32;
  v37 = LODWORD(STACK[0x33C]) ^ 0x89A15716;
  v38 = v37 & 0x9CDBC1FE | STACK[0x33C] & 0x9CDBC1FE ^ 0x145A80E8;
  LODWORD(STACK[0x6E0]) = -75026750 - 2009212831 * v30;
  LODWORD(STACK[0x6E4]) = -75026750 - 2009212831 * v33;
  v39 = v37 - v38;
  v40 = LODWORD(STACK[0x368]) ^ 0xDD9640FB;
  v41 = LODWORD(STACK[0x388]) ^ 0xD7AAB12E;
  v42 = STACK[0x350] & 0x9CDBC1FE ^ 0x6FB7FE83;
  v43 = LODWORD(STACK[0x344]) ^ 0x7F511B19;
  v44 = LODWORD(STACK[0x39C]) ^ 0x311D6C64;
  v45 = LODWORD(STACK[0x350]) ^ 0xCB7E883;
  v46 = LODWORD(STACK[0x370]) ^ 0xCECB9221;
  v47 = LODWORD(STACK[0x348]) ^ 0x22ADE8DD;
  v48 = -2009212831 * ((STACK[0x39C] & 0x63243E02 ^ 0x42201202) + (v44 & 0x63243E02) + v45);
  LODWORD(STACK[0x6C8]) = -2009212831 * v39;
  LODWORD(STACK[0x6CC]) = v48;
  v49 = LODWORD(STACK[0x398]) ^ 0x202E3F97;
  LODWORD(STACK[0x6A8]) = -75026750 - 2009212831 * v44;
  LODWORD(STACK[0x6AC]) = -75026750 - 2009212831 * v46;
  v50 = (LODWORD(STACK[0x34C]) ^ 0x514B1B47) + v42 - (v45 & 0x9CDBC1FE);
  v51 = LODWORD(STACK[0x3A0]) ^ 0xC699E2DD;
  v52 = (LODWORD(STACK[0x354]) - 697066054) ^ 0xBC038873;
  LODWORD(STACK[0x708]) = -75026750 - 2009212831 * v36;
  LODWORD(STACK[0x70C]) = -75026750 - 2009212831 * v43;
  v53 = STACK[0x3A4];
  LODWORD(STACK[0x6E8]) = -75026750 - 2009212831 * v41;
  LODWORD(STACK[0x6EC]) = -75026750 - 2009212831 * v40;
  LODWORD(STACK[0x6B0]) = -75026750 - 2009212831 * v51;
  LODWORD(STACK[0x6B4]) = -75026750 - 2009212831 * (v53 ^ 0x4881A0E1);
  v54 = v24 & 0xE935F34E ^ 0xC125D34C;
  STACK[0x7A0] = 0x9EC0341AD833ECELL;
  STACK[0x798] = 0xCF65EA554AE45F56;
  v55 = v24 ^ 0x3C9020B3;
  v56 = v52 - ((2 * v52) & 0x79CE9962) - 1125692239;
  if (!v29)
    v55 = -382340274;
  v57 = LODWORD(STACK[0x3A8]) ^ 0xAE367DAB;
  HIDWORD(v58) = v56 ^ 0xB1;
  LODWORD(v58) = v56 ^ 0xBCE74C00;
  STACK[0x718] = 0xECE04A4036103B51;
  LODWORD(STACK[0x6F0]) = -2009212831 * v49 - 75026750;
  LODWORD(STACK[0x6F4]) = -2009212831 * v57 - 75026750;
  HIDWORD(v58) = (v58 >> 9) ^ 0x84F20331;
  LODWORD(v58) = HIDWORD(v58);
  LODWORD(STACK[0x75C]) = -969308869;
  LODWORD(STACK[0x758]) = (v55 & v31 | v54)
                        + ((((v58 >> 23) + 1021414577 - ((2 * (v58 >> 23)) & 0x79CE9962) + 376832) ^ v56) & 0x6FA1698C ^ 0xBA10884);
  STACK[0x768] = 0x9FC92AACDF331AALL;
  v59 = -2009212831 * v27;
  STACK[0x760] = 0x5ECA6D912BD066C1;
  STACK[0x724] = 0x457668149A935CALL;
  v60 = 75026749 - v59;
  v59 -= 75026750;
  LODWORD(STACK[0x6F8]) = -2009212831 * v19 - 75026750;
  LODWORD(STACK[0x6FC]) = v59;
  v61 = (v59 & 0x883DD861) + (v60 & 0x883DD861);
  STACK[0x72C] = 0x8984E8C2D449B231;
  v62 = -2009212831 * ((LODWORD(STACK[0x394]) - 697066054) ^ 0xCFE57BE9);
  LODWORD(STACK[0x710]) = -2009212831 * v47 - 75026750;
  LODWORD(STACK[0x714]) = v62 - 75026750;
  LODWORD(STACK[0x6D0]) = -2009212831 * v50 - 2009212831;
  LODWORD(STACK[0x6D4]) = ((v56 ^ 0xBCE74CB1) + 1663319554) * v61;
  LODWORD(STACK[0x778]) = -521989896;
  STACK[0x770] = 0x302712EEC0D48959;
  LODWORD(STACK[0x720]) = 121205098;
  LODWORD(STACK[0x738]) = -2105859805;
  *((_DWORD *)&STACK[0x698] + (((61 - v62) & 0xDA) + ((v62 - 62) & 0xDA) + 77)) = -1725272723;
  v63 = *(_QWORD *)(a17 + 32);
  STACK[0x780] = 0x2D58C53118B9C2D3;
  LODWORD(STACK[0x744]) = 563898282;
  LODWORD(STACK[0x77C]) = 955911580;
  STACK[0x78C] = 0x5CDAF80AFA5A93D0;
  STACK[0x73C] = 0x54E56F488693A1DFLL;
  STACK[0x748] = 0x3ABF250B3B94433DLL;
  STACK[0x750] = 0x2ECBC776BAAFE021;
  LODWORD(STACK[0x788]) = 1213043950;
  LODWORD(STACK[0x794]) = 906322421;
  return (*(uint64_t (**)(void))(v18
                              + 8 * ((69 * (*(_QWORD *)(v63 - 0x373C0AAD4CE136CBLL) != 0x23120F4208F8DDDLL)) | v17)))();
}

uint64_t sub_1CF2D8F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  int v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  int v69;
  int v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;

  v20 = *(_DWORD *)(a17 + 24) + STACK[0x308] + (v17 ^ 0xCA096CB1);
  LODWORD(STACK[0x4D8]) = 1394293;
  LODWORD(STACK[0x4D4]) = -134227714;
  STACK[0x688] = (unint64_t)&STACK[0xC40];
  v21 = *(_QWORD *)(v18 - 0x23120F4208F8DC5);
  v22 = ((v21 << ((((v17 ^ 0xFC) - 116) | 0x88) ^ 0xE0)) & 0xF800000000000000 | (v21 >> 8)) - 0x550C087CC469144ELL;
  v23 = (v17 ^ 0x9077E0949EF5BCCELL | (2 * v22)) - v22 - 0x483BF04A4F7ADD7BLL;
  v24 = v23 ^ 0xF1B0F2EF1EFB9BD7;
  v23 ^= 0xA62F4EF6C24CC642;
  v25 = __ROR8__(v24, 8);
  v26 = (-2 - ((~(v25 + v23) | 0x1577FAC35B609246) + ((v25 + v23) | 0xEA88053CA49F6DB9))) ^ 0x45A32A2267DDE331;
  v27 = v26 ^ __ROR8__(v23, 61);
  v28 = __ROR8__(v26, 8) + v27;
  v29 = v28 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v27, 61);
  *((_QWORD *)&v30 + 1) = v28;
  *(_QWORD *)&v30 = v28 ^ 0xE5D7DAAEED85A300;
  v31 = ((v30 >> 8) + v29) ^ 0x8E85997BF8A3092DLL;
  v32 = v31 ^ __ROR8__(v29, 61);
  v33 = (__ROR8__(v31, 8) + v32) ^ 0xCD091F17C02FDE51;
  v34 = v33 ^ __ROR8__(v32, 61);
  v35 = (__ROR8__(v33, 8) + v34) ^ 0x628ABC52894BE762;
  v36 = v35 ^ __ROR8__(v34, 61);
  v37 = (__ROR8__(v35, 8) + v36) ^ 0x5AC09C033F8B2761;
  v38 = v37 ^ __ROR8__(v36, 61);
  *(_QWORD *)&v30 = __ROR8__(v37, 8);
  v39 = ((((_QWORD)v30 + v38 - ((2 * ((_QWORD)v30 + v38)) & 0xFF58B2E6A226F750) + 0x7FAC597351137BA8) ^ 0x64A788EB7A4ABBD9) >> (8 * (*(_BYTE *)(v18 - 0x23120F4208F8DC5) & 7u))) ^ *(unsigned __int8 *)v21;
  *(_QWORD *)&v30 = __ROR8__(v21 + 1, 8);
  v40 = ((2 * (v30 & 0xF8FFFFFFFFFFFFFFLL) + 0x55E7EF06772DD764) & 0x442912AD23D5CC78)
      - (v30 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x4D0880D9CD81D1EFLL;
  v41 = v40 ^ 0xE460740C3F945F6FLL;
  v40 ^= 0xB3FFC815E32302FALL;
  *(_QWORD *)&v30 = __ROR8__(v41, 8);
  v42 = (0x30D989346C5478B8
       - ((v30 + v40) ^ 0xF1A2B85CC66DE86 | 0x30D989346C5478B8)
       + ((v30 + v40) ^ 0xF1A2B85CC66DE86 | 0xCF2676CB93AB8747)) ^ 0x90E88DAF637028B6;
  v43 = v42 ^ __ROR8__(v40, 61);
  *(_QWORD *)&v30 = __ROR8__(v42, 8);
  v44 = __ROR8__((0x598D3E4F2B46E74DLL - ((v30 + v43) | 0x598D3E4F2B46E74DLL) + ((v30 + v43) | 0xA672C1B0D4B918B2)) ^ 0x43A51B1E393CBBB2, 8);
  v45 = (0x598D3E4F2B46E74DLL - ((v30 + v43) | 0x598D3E4F2B46E74DLL) + ((v30 + v43) | 0xA672C1B0D4B918B2)) ^ 0x43A51B1E393CBBB2 ^ __ROR8__(v43, 61);
  v46 = (v44 + v45) ^ 0x8E85997BF8A3092DLL;
  v47 = v46 ^ __ROR8__(v45, 61);
  *(_QWORD *)&v30 = __ROR8__(v46, 8);
  v48 = (0xB69B3F5B468F8A56 - ((v30 + v47) | 0xB69B3F5B468F8A56) + ((v30 + v47) | 0x4964C0A4B97075A9)) ^ 0x846DDFB3795FABF8;
  v49 = v48 ^ __ROR8__(v47, 61);
  *(_QWORD *)&v30 = __ROR8__(v48, 8);
  v50 = (((2 * (v30 + v49)) & 0xA638E7B7477E3D7ALL) - (v30 + v49) - 0x531C73DBA3BF1EBELL) ^ 0xCE693076D50B0620;
  v51 = v50 ^ __ROR8__(v49, 61);
  *(_QWORD *)&v30 = __ROR8__(v50, 8);
  v52 = (-2 - ((~(v30 + v51) | 0xBFE1BEF766DF8CC9) + ((v30 + v51) | 0x401E410899207336))) ^ 0xE52122F45954ABA8;
  v53 = v52 ^ __ROR8__(v51, 61);
  *(_QWORD *)&v30 = __ROR8__(v52, 8);
  v54 = (v39 << 24) | (((((((2 * ((_QWORD)v30 + v53)) & 0x1892AEAF4EEC022CLL)
                                          - ((_QWORD)v30
                                           + v53)
                                          - 0xC495757A7760117) ^ 0xE8BD793073D03E98) >> (8 * ((v21 + 1) & 7))) ^ *(unsigned __int8 *)(v21 + 1)) << 16);
  *(_QWORD *)&v30 = __ROR8__(v21 + 2, 8);
  v55 = (v30 & 0xF8FFFFFFFFFFFFFFLL)
      - ((2 * (v30 & 0xF8FFFFFFFFFFFFFFLL) + 0x15E7EF06772DD764) & 0x26E74F7F1F24F14ALL)
      + 0x3E679F42CB296457;
  v56 = v55 ^ 0x2AF8A51ADE133E09;
  v55 ^= 0x7D67190302A4639CuLL;
  *(_QWORD *)&v30 = __ROR8__(v56, 8);
  v57 = (0x16F6A45EDF0B58BBLL - ((v30 + v55) | 0x16F6A45EDF0B58BBLL) + ((v30 + v55) | 0xE9095BA120F4A744)) ^ 0xB9DD8B401C49D633;
  v58 = v57 ^ __ROR8__(v55, 61);
  *(_QWORD *)&v30 = __ROR8__(v57, 8);
  v59 = (-2 - ((~(v30 + v58) | 0xFE9C6D911D4C30A4) + ((v30 + v58) | 0x163926EE2B3CF5BLL))) ^ 0x1B4BB73FF0C993A4;
  v60 = v59 ^ __ROR8__(v58, 61);
  *(_QWORD *)&v30 = __ROR8__(v59, 8);
  v61 = (((2 * (v30 + v60)) & 0xA406050F9C73BDA8) - (v30 + v60) + 0x2DFCFD7831C6212BLL) ^ 0xA3796403C9652806;
  v62 = v61 ^ __ROR8__(v60, 61);
  *(_QWORD *)&v30 = __ROR8__(v61, 8);
  v63 = __ROR8__((((2 * (v30 + v62)) & 0xBFAA761F45D5431ALL) - (v30 + v62) - 0x5FD53B0FA2EAA18ELL) ^ 0x6D23DBE79D3A8023, 8);
  v64 = (((2 * (v30 + v62)) & 0xBFAA761F45D5431ALL) - (v30 + v62) - 0x5FD53B0FA2EAA18ELL) ^ 0x6D23DBE79D3A8023 ^ __ROR8__(v62, 61);
  v65 = (v63 + v64) ^ 0x628ABC52894BE762;
  v66 = v65 ^ __ROR8__(v64, 61);
  *(_QWORD *)&v30 = __ROR8__(v65, 8);
  v67 = (-2 - ((~(v30 + v66) | 0x93BA3FB03D9D02EFLL) + ((v30 + v66) | 0x6C45C04FC262FD10))) ^ 0xC97AA3B30216258ELL;
  v68 = v67 ^ __ROR8__(v66, 61);
  *(_QWORD *)&v30 = __ROR8__(v67, 8);
  v69 = v54 | (((((((2 * ((_QWORD)v30 + v68)) & 0x57A4333711C5D1CLL)
                                  - ((_QWORD)v30
                                   + v68)
                                  + 0x7D42DE664771D171) ^ 0x66490FFE6C281100) >> (8 * ((v21 + 2) & 7))) ^ *(unsigned __int8 *)(v21 + 2)) << 8);
  v70 = *(unsigned __int8 *)(v21 + 3);
  v21 += 3;
  *(_QWORD *)&v30 = __ROR8__(v21, 8);
  v71 = ((2 * ((v30 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0xAADD163E4CA4D5AELL)
      - ((v30 & 0xF8FFFFFFFFFFFFFFLL)
       - 0x550C087CC469144ELL)
      - 0x556E8B1F26526AD7;
  v72 = v71 ^ 0xECE589BA77D32C7BLL;
  v71 ^= 0xBB7A35A3AB6471EELL;
  *(_QWORD *)&v30 = __ROR8__(v72, 8);
  v73 = (((2 * (v30 + v71)) | 0xB5389D3D2E60E81ALL) - (v30 + v71) + 0x2563B16168CF8BF3) ^ 0x8A489E7FAB8D057ALL;
  v74 = v73 ^ __ROR8__(v71, 61);
  v75 = __ROR8__(v73, 8) + v74;
  v76 = v75 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v74, 61);
  *((_QWORD *)&v30 + 1) = v75;
  *(_QWORD *)&v30 = v75 ^ 0xE5D7DAAEED85A300;
  v77 = ((v30 >> 8) + v76) ^ 0x8E85997BF8A3092DLL;
  v78 = v77 ^ __ROR8__(v76, 61);
  v79 = (__ROR8__(v77, 8) + v78) ^ 0xCD091F17C02FDE51;
  v80 = v79 ^ __ROR8__(v78, 61);
  v81 = (__ROR8__(v79, 8) + v80) ^ 0x628ABC52894BE762;
  v82 = __ROR8__(v81, 8);
  v83 = v81 ^ __ROR8__(v80, 61);
  v84 = (-2 - ((~(v82 + v83) | 0x890E405815C8236ELL) + ((v82 + v83) | 0x76F1BFA7EA37DC91))) ^ 0xD3CEDC5B2A43040FLL;
  LODWORD(v21) = v69 | (((__ROR8__(v84, 8) + (v84 ^ __ROR8__(v83, 61))) ^ 0x1B0BD1982B59C071) >> (8 * (v21 & 7u))) ^ v70;
  return ((uint64_t (*)(unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v19 + 8 * (int)((1993 * ((((_DWORD)v21 - 1129976585 + (~(2 * (_DWORD)v21) | 0x86B42611) + 1) ^ 0xBCA5ECF7) == v20)) ^ v17 ^ 0x5FC)) - 12))(0xCD091F17C02FDE51, 0xAAF3F7833B96EBB2, 0x8E85997BF8A3092DLL, 0x628ABC52894BE762, 0x598D3E4F2B46E74DLL, 0x30D989346C5478B8, -2, 0xE5D7DAAEED85A300);
}

uint64_t sub_1CF2D98F8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((800
                                * ((((v0 - 832) ^ (*(_QWORD *)(v1 - 0x23120F4208F8DDDLL) == 0x23120F4208F8DDDLL)) & 1) == 0)) ^ v0)))();
}

uint64_t sub_1CF2D991C()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 | (4 * (((*v1 == 0) ^ (v0 - 91)) & 1))))
                            - 8))();
}

uint64_t sub_1CF2D994C@<X0>(unint64_t a1@<X8>)
{
  int v1;
  unint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t (*v5)(void);

  STACK[0x2D0] = v2;
  v4 = ((2 * (*(_DWORD *)(v2 - 0x23120F4208F8DCDLL) - 1508655795)) & 0xEC9F56F2)
     + ((*(_DWORD *)(v2 - 0x23120F4208F8DCDLL) - 1508655795) ^ 0xF64FAB79);
  LODWORD(STACK[0x4D0]) = v4;
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v3
                                     + 8
                                     * ((((((v1 - 260731781) ^ (v4 == -162550919)) & 1) == 0)
                                       * (((v1 - 120) | 0x52) + 257)) ^ v1))
                         - 12);
  STACK[0x680] = a1;
  return v5();
}

uint64_t sub_1CF2D9A34()
{
  int v0;
  uint64_t v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;

  v2 = v0 & 0xF8A71DF;
  v3 = LODWORD(STACK[0x4D0]) - 1431021912;
  v4 = v3 < 0xA1040221 || v3 > 0xA1040222;
  return (*(uint64_t (**)(void))(v1 + 8 * ((259 * !v4) | (v2 + 1116))))();
}

void sub_1CF2D9CA0()
{
  JUMPOUT(0x1CF2D9A80);
}

uint64_t sub_1CF2D9CAC()
{
  int v0;
  uint64_t v1;
  unsigned int v2;
  _BOOL4 v3;

  v2 = LODWORD(STACK[0x4D0]) - 940977077;
  v3 = v2 < 0xBE397FC4;
  if (v2 >= 0xBE397FC4)
    v3 = v2 > 0xBE397FC5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (!v3 | (16 * !v3) | (v0 + 404))) - 12))();
}

void sub_1CF2D9F8C()
{
  JUMPOUT(0x1CF2D9D04);
}

uint64_t sub_1CF2D9F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v11 = (a1 + 918);
  v12 = STACK[0x688];
  *(_BYTE *)(STACK[0x688] + 0x32963 % (v11 ^ 0x524)) = 26 - (a7 & 0xC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * (int)a1))(a1, 207203, v11, *(_QWORD *)(v10 + 8 * (int)a1), 26 - (a7 & 0xC0), v12, a7, a8, a9, a10);
}

void sub_1CF2DA010()
{
  JUMPOUT(0x1CF2D9FC8);
}

uint64_t sub_1CF2DA01C(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  char v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  int v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  BOOL v43;
  uint64_t v44;
  unsigned int v45;

  v8 = a3 ^ 0x32;
  v9 = 383 * (((_BYTE)v5 + 8) & 0xF) + 207203;
  v10 = (v9 - 969 * ((4432371 * (unint64_t)v9) >> 32));
  v11 = STACK[0x688];
  v12 = STACK[0xF66];
  LOBYTE(STACK[0xF66]) = *(_BYTE *)(STACK[0x688] + v10);
  *(_BYTE *)(v11 + v10) = v12;
  v13 = (((a3 ^ 0x32) - 1376) * ((v4 ^ 0xB650B8FF) % 0xF) + 207586) % 0x3C9;
  v14 = STACK[0xD1C];
  v15 = v6 - 1505809885;
  LOBYTE(STACK[0xD1C]) = *(_BYTE *)(v11 + v13);
  *(_BYTE *)(v11 + v13) = v14;
  LOBYTE(v13) = STACK[0xE9B];
  v16 = (383 * (v15 % 0xE)
                     + 207969
                     - 969 * ((4432371 * (unint64_t)(383 * (v15 % 0xE) + 207969)) >> 32));
  LOBYTE(STACK[0xE9B]) = *(_BYTE *)(v11 + v16);
  *(_BYTE *)(v11 + v16) = v13;
  v17 = v15 + (v3 ^ 0x7CA04B97) + 1;
  LODWORD(v16) = v4 ^ 0x7C0FE790;
  v18 = (383 * ((v3 ^ 0x835FB468) % 0xD)
                     + 208352
                     - 969 * ((4432371 * (unint64_t)(383 * ((v3 ^ 0x835FB468) % 0xD) + 208352)) >> 32));
  v19 = STACK[0xC51];
  v20 = v5 - v17 + 1355773989 - ((2 * (v5 - v17 - 690255115)) & 0xF3E7DA60);
  v21 = (v4 ^ 0x7C0FE790) + 583277826;
  LOBYTE(STACK[0xC51]) = *(_BYTE *)(v11 + v18);
  v22 = v17 - (v4 ^ 0x7C0FE790);
  v23 = v22 ^ 0xEF;
  v24 = ((2 * v22) & 0xAEF6F7DE) + (v22 ^ 0x577B7BEF);
  *(_BYTE *)(v11 + v18) = v19;
  LOBYTE(v18) = STACK[0xDD0];
  v25 = (383 * ((v20 ^ 0x79F3ED30) % 0xC)
                     + 208735
                     - 969 * ((4432371 * (unint64_t)(383 * ((v20 ^ 0x79F3ED30) % 0xC) + 208735)) >> 32));
  LOBYTE(STACK[0xDD0]) = *(_BYTE *)(v11 + v25);
  *(_BYTE *)(v11 + v25) = v18;
  LOBYTE(v25) = STACK[0xF4F];
  v26 = (383 * (v21 % 0xB)
                     + 209118
                     - 969 * ((4432371 * (unint64_t)(383 * (v21 % 0xB) + 209118)) >> 32));
  LOBYTE(STACK[0xF4F]) = *(_BYTE *)(v11 + v26);
  *(_BYTE *)(v11 + v26) = v25;
  v27 = (383 * ((v24 - 1467710447) % 0xA)
                     + 209501
                     - 969 * ((4432371 * (unint64_t)(383 * ((v24 - 1467710447) % 0xA) + 209501)) >> 32));
  v28 = v3 ^ 0x4EC96665;
  v29 = (v16 - ((2 * v21) & 0x6BF68D0) - 1507602070) ^ v3;
  LOBYTE(v16) = STACK[0xD05];
  LODWORD(v26) = v24 - 1467710447 + v28;
  LOBYTE(STACK[0xD05]) = *(_BYTE *)(v11 + v27);
  *(_BYTE *)(v11 + v27) = v16;
  LOBYTE(v16) = STACK[0xE84];
  v30 = v26 + v24;
  v31 = (383 * (v28 % 9) + 209884 - 969 * ((4432371 * (unint64_t)(383 * (v28 % 9) + 209884)) >> 32));
  v32 = (v29 + 2046029104 - ((2 * v29) & 0xF3E7DA60)) ^ v20;
  LOBYTE(STACK[0xE84]) = *(_BYTE *)(v11 + v31);
  LOBYTE(v20) = (v30 + 33) ^ v20;
  *(_BYTE *)(v11 + v31) = v16;
  LOBYTE(v16) = STACK[0x1003];
  v33 = (383 * (v20 & 7 ^ 4)
                     + 210267
                     - 969 * ((4432371 * (unint64_t)(383 * (v20 & 7 ^ 4) + 210267)) >> 32));
  v34 = ((2 * v32) & 0x7F5FE7FE ^ 0x4E118112) + (v32 ^ 0x18E73F76);
  LOBYTE(STACK[0x1003]) = *(_BYTE *)(v11 + v33);
  *(_BYTE *)(v11 + v33) = v16;
  v35 = (383 * ((v34 - 1068495871) % 7u)
                     + 210650
                     - 969 * ((4432371 * (unint64_t)(383 * ((v34 - 1068495871) % 7u) + 210650)) >> 32));
  LOBYTE(v21) = STACK[0xDB9];
  LOBYTE(STACK[0xDB9]) = *(_BYTE *)(v11 + v35);
  *(_BYTE *)(v11 + v35) = v21;
  LOBYTE(v33) = STACK[0xF38];
  v36 = (383 * ((v30 + 133588257) % 6u)
                     + 211033
                     - 969 * ((4432371 * (unint64_t)(383 * ((v30 + 133588257) % 6u) + 211033)) >> 32));
  LOBYTE(STACK[0xF38]) = *(_BYTE *)(v11 + v36);
  *(_BYTE *)(v11 + v36) = v33;
  v37 = (383 * (((int)v26 + 1327770043) % 5u)
                     + 211416
                     - 969 * ((4432371 * (unint64_t)(383 * (((int)v26 + 1327770043) % 5u) + 211416)) >> 32));
  LOBYTE(v36) = STACK[0xCEE];
  LOBYTE(STACK[0xCEE]) = *(_BYTE *)(v11 + v37);
  v38 = v34 - v30;
  *(_BYTE *)(v11 + v37) = v36;
  v39 = 383 * (((_BYTE)v34 + (_BYTE)v20 + 1) & 3) + 211799;
  v40 = (v39 - 969 * ((4432371 * (unint64_t)v39) >> 32));
  LOBYTE(v37) = STACK[0xE6D];
  LOBYTE(STACK[0xE6D]) = *(_BYTE *)(v11 + v40);
  *(_BYTE *)(v11 + v40) = v37;
  v41 = (383 * (((v38 - 1202084128) ^ 0x46FFA5B0u) % 3)
                     + 212182
                     - 969
                     * ((4432371 * (unint64_t)(383 * (((v38 - 1202084128) ^ 0x46FFA5B0u) % 3) + 212182)) >> 32));
  LOBYTE(v38) = STACK[0xFEC];
  LOBYTE(STACK[0xFEC]) = *(_BYTE *)(v11 + v41);
  *(_BYTE *)(v11 + v41) = v38;
  v42 = STACK[0xDA2];
  v43 = (v23 & 1) == 0;
  v44 = 354;
  if (!v43)
    v44 = 737;
  LOBYTE(STACK[0xDA2]) = *(_BYTE *)(v11 + v44);
  *(_BYTE *)(v11 + v44) = v42;
  v45 = 383 * (*(unsigned __int8 *)(STACK[0x688] + 806) ^ 0x1A) + 242439;
  *(_BYTE *)(STACK[0x688] + (v45 - 969 * ((4432371 * (unint64_t)v45) >> 32))) = 26 - (((-98 << (((v8 + 33) | 0x75) - 116)) + 4) & 0x34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * (v8 ^ 0x32)))(1141, 2033487105, 817958498, 168, 4294951694, 8657, 2369637129);
}

uint64_t sub_1CF2DA5EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  unsigned int v15;
  uint64_t v16;

  *(_BYTE *)(v12
           + a3
           + v9 * v11
           - ((((a3 + v9 * v11) * (unint64_t)v15) >> 32) >> 9) * v14) = v9 - ((2 * v9 + 2) & a8) - 101;
  return (*(uint64_t (**)(void))(v16 + 8 * ((170 * ((v8 ^ v10) + v9 != v13 + 16)) ^ v8)))();
}

uint64_t sub_1CF2DA63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  char v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unsigned int v27;
  int v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  unsigned int v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unsigned int v39;
  int v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  unsigned int v50;

  v19 = (((_BYTE)v10 + 5) & 0xF) * v12 + 207203;
  v20 = (v19 - ((4432371 * (unint64_t)v19) >> 32) * v14);
  v21 = STACK[0xF66];
  LOBYTE(STACK[0xF66]) = *(_BYTE *)(v13 + v20);
  *(_BYTE *)(v13 + v20) = v21;
  LOBYTE(v20) = STACK[0xD1C];
  v22 = ((v8 ^ 0xC31697AC) % 0xF * v12
                     + 207586
                     - ((4432371 * (unint64_t)((v8 ^ 0xC31697AC) % 0xF * v12 + 207586)) >> 32) * v14);
  v23 = v9 - 1734308192;
  LOBYTE(STACK[0xD1C]) = *(_BYTE *)(v13 + v22);
  *(_BYTE *)(v13 + v22) = v20;
  v24 = (v23 % 0xE * v12 + 207969 - ((4432371 * (unint64_t)(v23 % 0xE * v12 + 207969)) >> 32) * v14);
  v25 = STACK[0xE9B];
  LOBYTE(STACK[0xE9B]) = *(_BYTE *)(v13 + v24);
  *(_BYTE *)(v13 + v24) = v25;
  LOBYTE(v24) = STACK[0xC51];
  v26 = ((v7 ^ 0xD24AEB0u) % 0xD * v12
                     + 208352
                     - ((4432371 * (unint64_t)((v7 ^ 0xD24AEB0u) % 0xD * v12 + 208352)) >> 32) * v14);
  v27 = v23 + (v7 ^ 0xF2DB514F) + 1;
  v28 = v10 + 2053758178 - v27 - 1839111531 - ((2 * (v10 + 2053758178 - v27)) & 0x24C2C52A);
  LOBYTE(STACK[0xC51]) = *(_BYTE *)(v13 + v26);
  *(_BYTE *)(v13 + v26) = v24;
  v29 = v8 ^ 0x949C8C3;
  v30 = ((v28 ^ 0x92616295) % 0xC * v12
                     + 208735
                     - 969 * ((4432371 * (unint64_t)((v28 ^ 0x92616295) % 0xC * v12 + 208735)) >> 32));
  LOBYTE(v26) = STACK[0xDD0];
  LOBYTE(STACK[0xDD0]) = *(_BYTE *)(v13 + v30);
  *(_BYTE *)(v13 + v30) = v26;
  LOBYTE(v30) = STACK[0xF4F];
  v31 = ((2 * (v27 - v29)) & 0xCDEBF174) + ((v27 - v29) ^ 0xE6F5F8BA);
  v32 = ((v29 + 583277826) % 0xBu * v12
                     + 209118
                     - 969 * ((4432371 * (unint64_t)((v29 + 583277826) % 0xBu * v12 + 209118)) >> 32));
  LOBYTE(STACK[0xF4F]) = *(_BYTE *)(v13 + v32);
  *(_BYTE *)(v13 + v32) = v30;
  v33 = ((v31 + 420087622) % 0xA * v12
                     + 209501
                     - 969 * ((4432371 * (unint64_t)((v31 + 420087622) % 0xA * v12 + 209501)) >> 32));
  v34 = (v29 - ((2 * (v29 + 583277826)) & 0x1A495D60) + 803785650) ^ v7;
  v35 = v7 ^ 0xC0B27CBD;
  v36 = STACK[0xD05];
  v37 = v31 + 420087622 + (v7 ^ 0xC0B27CBD);
  LOBYTE(STACK[0xD05]) = *(_BYTE *)(v13 + v33);
  *(_BYTE *)(v13 + v33) = v36;
  v38 = (v35 % 9 * v12 + 209884 - 969 * ((4432371 * (unint64_t)(v35 % 9 * v12 + 209884)) >> 32));
  LOBYTE(v32) = STACK[0xE84];
  LOBYTE(STACK[0xE84]) = *(_BYTE *)(v13 + v38);
  v39 = v37 + v31;
  *(_BYTE *)(v13 + v38) = v32;
  LOBYTE(v38) = v28 ^ 0x95 ^ (v39 + 86);
  v40 = (v34 - 1839111531 - ((2 * v34) & 0x24C2C52A)) ^ v28;
  LOBYTE(v28) = STACK[0x1003];
  LODWORD(v26) = ((((((_BYTE)v37 + 11) & 8 ^ 8) + (((_BYTE)v37 + 11) & 8)) & 0xFFFFFFF8 | v38 & 7) ^ 4) * v12 + 207203;
  v41 = v26 - 969 * (((v26 * (unint64_t)v17) >> 32) >> 9);
  LOBYTE(STACK[0x1003]) = *(_BYTE *)(v13 + v41);
  v42 = ((2 * v40) & 0xEBD7BFDA ^ 0x4A919912) + (v40 ^ 0x52A31364);
  *(_BYTE *)(v13 + v41) = v28;
  LOBYTE(v41) = STACK[0xDB9];
  v43 = ((v42 - 1978392557) % 7 * v12
                     + 210650
                     - 969 * ((4432371 * (unint64_t)((v42 - 1978392557) % 7 * v12 + 210650)) >> 32));
  LOBYTE(STACK[0xDB9]) = *(_BYTE *)(v13 + v43);
  *(_BYTE *)(v13 + v43) = v41;
  LOBYTE(v43) = STACK[0xF38];
  v44 = ((v39 + 2021386326) % 6 * v12
                     + 211033
                     - 969 * ((4432371 * (unint64_t)((v39 + 2021386326) % 6 * v12 + 211033)) >> 32));
  LOBYTE(STACK[0xF38]) = *(_BYTE *)(v13 + v44);
  *(_BYTE *)(v13 + v44) = v43;
  LOBYTE(v32) = STACK[0xCEE];
  LOBYTE(STACK[0xCEE]) = *(_BYTE *)(v13
                                  + ((v37 + 1327770043) % 5 * v12
                                                 + 210447
                                                 - 969
                                                 * ((4432371 * (unint64_t)((v37 + 1327770043) % 5 * v12 + 210447)) >> 32)));
  *(_BYTE *)(v13
           + ((v37 + 1327770043) % 5 * v12
                          + 211416
                          - 969 * ((4432371 * (unint64_t)((v37 + 1327770043) % 5 * v12 + 211416)) >> 32))) = v32;
  LODWORD(v43) = (((_BYTE)v38 + (_BYTE)v42 - 1) & 3) * v12 + 211799;
  v45 = (v43 - 969 * ((4432371 * (unint64_t)v43) >> 32));
  LOBYTE(v44) = STACK[0xE6D];
  LOBYTE(STACK[0xE6D]) = *(_BYTE *)(v13 + v45);
  *(_BYTE *)(v13 + v45) = v44;
  LOBYTE(v37) = v39 - v37;
  v46 = (v42 - v39 + 295188413) ^ 0x46FFA5B0;
  LOBYTE(v39) = STACK[0xFEC];
  v47 = (v46 % 3 * v12 + 212182 - 969 * ((4432371 * (unint64_t)(v46 % 3 * v12 + 212182)) >> 32));
  LOBYTE(STACK[0xFEC]) = *(_BYTE *)(v13 + v47);
  *(_BYTE *)(v13 + v47) = v39;
  v48 = ((v37 & 1) == 0) * v12 + 212565;
  v49 = (v48 - 969 * ((4432371 * (unint64_t)v48) >> 32));
  LOBYTE(v39) = STACK[0xDA2];
  LOBYTE(STACK[0xDA2]) = *(_BYTE *)(v13 + v49);
  *(_BYTE *)(v13 + v49) = v39;
  LODWORD(v47) = v11 ^ 0x2A1;
  LOBYTE(v49) = ((v16 ^ (16 * *(_BYTE *)(v13 + 189))) - 32 * (*(_BYTE *)(v13 + 189) & 1) + 26) ^ *(_BYTE *)(v13 + 242439 - 969 * (((242439 * (unint64_t)v17) >> 32) >> 9));
  v50 = 383
      * (*((unsigned __int8 *)*(&off_1E8C4D9A0 + (v11 ^ 0x2A1) - 1207)
         + (751 * (v49 ^ 0x7F)
                        + 399532
                        - 928 * ((4628198 * (unint64_t)(751 * (v49 ^ 0x7Fu) + 399532)) >> 32))
         - 12) ^ ((v49 ^ 0xE) + ~(2 * (((v49 ^ 0xE) + 72) & 0x57 ^ (v49 ^ 0xE) & 2)) - 98) ^ 0x1E)
      + 207203;
  *(_BYTE *)(v13 + 105708 - 969 * (((105708 * (unint64_t)v17) >> 32) >> 9)) = *(_BYTE *)(v13 + (v50 - 969 * ((4432371 * (unint64_t)v50) >> 32)));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8 * (int)((609 * (v15 == -820830380)) ^ v47)) - 4))(97, 3988284610, 500, a4, a5, a6, a7, 383);
}

uint64_t sub_1CF2DACC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  int v16;
  char v17;
  unsigned int v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;

  v21 = v19 + (((_BYTE)v10 + 11) & 0xF) * a8;
  v22 = v19 + ((v9 - 1462) & ((v10 + 2299) >> 4)) * a8;
  LOBYTE(v22) = *(_BYTE *)(v14 + v22 - (((v22 * (unint64_t)v18) >> 32) >> 9) * v16);
  LOBYTE(v21) = ((v17 ^ (16 * v22)) - 32 * (v22 & 1) + 26) ^ *(_BYTE *)(v14
                                                                      + (v21
                                                                                     - ((v21 * (unint64_t)v13) >> 32)
                                                                                     * v16));
  v23 = v15
      + ((((v21 - ((2 * v21) & 0xAA) - 43) ^ *(_BYTE *)(v8
                                                                       + ((v21 ^ 0x89)
                                                                                      * v12
                                                                                      - ((4628198
                                                                                        * (unint64_t)((v21 ^ 0x89u) * v12)) >> 32)
                                                                                      * v11))) >> 4) ^ 0xE)
      * a8;
  LOBYTE(v23) = *(_BYTE *)(v14 + (v23 - ((v23 * (unint64_t)v13) >> 32) * v16));
  *(_BYTE *)(v14
           + v10 * a8
           + 1651236420
           - ((((v10 * a8 + 1651236420) * (unint64_t)v18) >> 32) >> 9) * v16) = ((16 * v23) ^ 0xA0) - 32 * (v23 & 1) + 26;
  return ((uint64_t (*)(void))(*(_QWORD *)(v20 + 8 * ((511 * (v10 == 500320260)) ^ v9)) - 4))();
}

uint64_t sub_1CF2DADD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  char v14;
  uint64_t v15;
  int v16;
  int v17;
  char v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;

  v22 = v20 + (((_BYTE)v10 + 10) & 0xF) * a8;
  v23 = v20 + ((v10 + 442) >> 4) * a8;
  LOBYTE(v23) = *(_BYTE *)(v15 + (v23 - ((v23 * (unint64_t)v13) >> 32) * v17));
  LOBYTE(v22) = ((v18 ^ (16 * v23)) - 32 * (v23 & 1) + 26) ^ *(_BYTE *)(v15
                                                                      + (v22
                                                                                     - ((v22 * (unint64_t)v13) >> 32)
                                                                                     * v17));
  v24 = v16 + (v22 ^ 0x58) * v12 - 2180;
  v25 = v16
      + (((v22 ^ 0x26)
                         + (*(_BYTE *)(v8 + v24 - (((v24 * (unint64_t)a7) >> 32) >> 9) * v11) ^ v14)) ^ 0x31)
      * a8;
  *(_BYTE *)(v15
           + v10 * a8
           + 274800692
           - ((((v10 * a8 + 274800692) * (unint64_t)v19) >> 32) >> 9) * v17) = *(_BYTE *)(v15 + (v25 - ((v25 * (unint64_t)v13) >> 32) * v17));
  return (*(uint64_t (**)(void))(v21 + 8 * ((399 * (v10 != 436629317)) ^ v9)))();
}

uint64_t sub_1CF2DAEC8(uint64_t a1, uint64_t a2, char a3, char a4, __int16 a5, int a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  char v11;
  int v12;
  char v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  int v19;
  char v20;
  char v21;

  v18 = v10 * a8
      - 2019461611
      - ((((v10 * a8 - 2019461611) * (unint64_t)v16) >> 32) >> 9) * v15;
  v19 = v18 - 1762836544 - ((v18 << (v9 + 62)) & 0x780);
  v20 = *(_BYTE *)(v14 + (v19 ^ 0x96ED3FC0));
  LOBYTE(v19) = (v19 & 0xAA ^ 0x2A) + (v19 & 0xAA ^ 0x80);
  v21 = (v19 & a3) - ((2 * v19) & 0x20) + 26;
  *(_BYTE *)(v14
           + (unsigned __int16)(v10 * a8
                              + a5
                              - ((unsigned __int16)(((unsigned __int16)(v10 * a8 + a5) * a6) >> 16) >> 7)
                              * v15)) = ((*(_BYTE *)(v8
                                                   + ((v21 ^ v20 ^ a4) * v12
                                                                  + 645860
                                                                  - 928
                                                                  * ((4628198
                                                                    * (unint64_t)((v21 ^ v20 ^ a4)
                                                                                       * v12
                                                                                       + 645860)) >> 32))) ^ v13)
                                       + (v21 ^ v20 ^ 0x54)
                                       - 70) ^ v11;
  return (*(uint64_t (**)(void))(v17 + 8 * (v9 ^ (16 * (v10 == 442619933)))))();
}

uint64_t sub_1CF2DAFCC@<X0>(char a1@<W0>, int a2@<W1>, int a3@<W7>, int a4@<W8>)
{
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;

  v14 = v10
      + (*(unsigned __int8 *)(v4 + ((v6 ^ 0xF6DC326F) * v7 + 611314) % ((v5 - 815) ^ v7)) ^ ((v6 ^ a1) - 2 * ((v6 ^ a1) & 0x57 ^ v6 & 2) - 43) ^ a4)
      * a3;
  v15 = v6 ^ 0xF6DC3261;
  *(_BYTE *)(v9 + v15 * a3 + 232481 - ((((v15 * a3 + 232481) * (unint64_t)v12) >> 32) >> 9) * v11) = *(_BYTE *)(v9 + (v14 - ((v14 * (unint64_t)v8) >> 32) * v11));
  return ((uint64_t (*)(void))(*(_QWORD *)(v13
                                        + 8
                                        * ((255 * (((v15 - 153341343 - ((2 * v15 + 2) & a2) + 1) ^ 0xF6DC3260) < 0x10)) ^ v5))
                            - 4))();
}

uint64_t sub_1CF2DB098()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((59 * ((v0 + 702396554) & 0xD62247FE ^ 0x1D0) - 452)
                                     * (LODWORD(STACK[0x4D0]) == -162550919)) ^ v0)))();
}

#error "1CF2E4C08: call analysis failed (funcsize=7836)"

uint64_t sub_1CF2E4C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;

  v23 = ((2 * v22) & 0x6FA75836 ^ 0x6F020002) + (v22 ^ 0x487ABF5E);
  v24 = v23 + v20 - 189334660 + (~(2 * (v23 + v20) + 14317518) | 0xD76C80D7);
  LODWORD(STACK[0x668]) = v23
                        - 936619035
                        + (v24 ^ 0x9449BF94)
                        + 806209054
                        - ((2 * (v23 - 936619035 + (v24 ^ 0x9449BF94))) & 0x601B8C3C);
  LODWORD(STACK[0x4FC]) = (v24 ^ 0x71386F22) + 1103352123 + ((2 * v24) & 0xE00AC682 ^ 0xA0082);
  return (*(uint64_t (**)(void))(a5 + 8 * (((2 * (v21 != 38507951)) | (4 * (v21 != 38507951))) ^ a20)))();
}

uint64_t sub_1CF2E4E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;

  LODWORD(STACK[0x4F4]) = v8;
  LODWORD(STACK[0x4F8]) = v7;
  LODWORD(STACK[0x660]) = v6;
  v10 = 236 * ((((v9 ^ 0x18E) - 1190) | 0xD0) ^ 0x1DA);
  LODWORD(STACK[0x570]) = v10;
  return (*(uint64_t (**)(uint64_t))(a5
                                            + 8
                                            * (((v10 ^ 0x360) * ((a6 + 880828929) < 0x40)) ^ v9 ^ 0x18E)))(0x18C8D65A05264446);
}

uint64_t sub_1CF2E4F38@<X0>(uint64_t a1@<X0>, int a2@<W5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  __int128 v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  LODWORD(STACK[0x570]) = a3;
  v24 = STACK[0x688];
  v25 = a13 - 0x7FC3A13083546DB6 + (v13 - a2 - 919336880);
  *(_BYTE *)(v24 + (v13 * v19 - 1863436142) % 0x3C9u) = *(_BYTE *)v25 ^ *(_BYTE *)(STACK[0x688]
                                                                                 + (v13 * v19 - 1863436142) % 0x3C9u);
  v26 = v25 - ((2 * v25) & 0x1C) + v21;
  v27 = __ROR8__(v25 - ((2 * v25) & 0xD9FABA94B353491CLL) + v21, 8) & 0xF8FFFFFFFFFFFFFFLL ^ v22;
  *((_QWORD *)&v28 + 1) = (v27 + v23) ^ 0xE14BEBC8D361B39;
  *(_QWORD *)&v28 = 0x550C087CC469144DLL - v27;
  v29 = __ROR8__((v27 + v23) ^ 0xB98B02A5518146ACLL, 8) + ((v27 + v23) ^ v15);
  v30 = v29 ^ (v28 >> 61);
  *(_QWORD *)&v28 = __ROR8__(v29 ^ 0x50D4D0E13CBD7177, 8);
  v31 = (v30 ^ 0x50D4D0E13CBD7177) + v28 + v17 - (a1 & (2 * ((v30 ^ 0x50D4D0E13CBD7177) + v28)));
  *((_QWORD *)&v28 + 1) = v30 ^ 0x10D4D0E13CBD7177;
  *(_QWORD *)&v28 = v30 ^ 0x4000000000000000;
  v32 = (v28 >> 61) + v17 - (a1 & (2 * (v28 >> 61)));
  *((_QWORD *)&v28 + 1) = v31 ^ 0x23;
  *(_QWORD *)&v28 = v31 ^ (v17 - 35);
  v33 = ((v28 >> 8) ^ 0xE5D7DAAEED85A3) + (v32 ^ v31 ^ v16);
  *((_QWORD *)&v28 + 1) = v32 ^ v31 ^ 0x5D7DAAEED85A300;
  *(_QWORD *)&v28 = v32 ^ ~v31;
  v34 = v33 ^ (v28 >> 61);
  v35 = v34 ^ v14;
  *((_QWORD *)&v28 + 1) = v34 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v28 = v34 ^ 0x8000000000000000;
  v36 = v28 >> 61;
  v37 = __ROR8__(v33 ^ v14, 8) + v35;
  *((_QWORD *)&v28 + 1) = v37 ^ 0x51;
  *(_QWORD *)&v28 = v37 ^ (v18 - 81);
  v38 = v28 >> 8;
  v39 = v37 ^ v36;
  *((_QWORD *)&v28 + 1) = v39 ^ v20;
  *(_QWORD *)&v28 = v39 ^ 0xC000000000000000;
  v40 = (v39 ^ v18) + v38;
  v41 = (v28 >> 61) ^ v40;
  *((_QWORD *)&v28 + 1) = v41 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v28 = v41 ^ 0x6000000000000000;
  v42 = (__ROR8__(v40 ^ 0x628ABC52894BE762, 8) + (v41 ^ 0x628ABC52894BE762)) ^ 0x5AC09C033F8B2761;
  *(_BYTE *)(v24 + (v13 * v19 - 1863400906) % 0x3C9u) ^= ((__ROR8__(v42, 8) + (v42 ^ (unint64_t)(v28 >> 61))) ^ 0x1B0BD1982B59C071) >> ((8 * (v26 & 7)) ^ 0x30u);
  return (*(uint64_t (**)(void))(STACK[0x690] + 8 * ((290 * ((v13 - 38507950) > 0x3F)) ^ (a3 + 692))))();
}

uint64_t sub_1CF2E5204(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  int v65;
  int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  int v101;
  int v102;
  unsigned int v103;
  int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  unsigned int v135;
  int v136;
  int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  unsigned int v200;
  unsigned int v201;
  unsigned int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  int v207;
  int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  int v215;
  unsigned int v216;
  unsigned int v217;
  unsigned int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  unsigned int v225;
  int v226;
  unsigned int v227;
  int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  int v245;
  int v246;
  unsigned int v247;
  unsigned int v248;
  int v249;
  unsigned int v250;
  unsigned int v251;
  unsigned int v252;
  int v253;
  unsigned int v254;
  int v255;
  unsigned int v256;
  int v257;
  unsigned int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  unsigned int v263;
  unsigned int v264;
  int v265;
  unsigned int v266;
  unsigned int v267;
  int v268;
  int v269;
  int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  int v279;
  unsigned int v280;
  int v281;
  int v282;
  unsigned int v283;
  _BOOL4 v284;
  BOOL v285;
  unsigned int v286;
  unsigned int v287;
  uint64_t v288;
  uint64_t v289;
  unsigned int v290;
  _BOOL4 v291;
  int v292;
  int v293;

  LODWORD(STACK[0x49C]) = 857822819;
  v17 = STACK[0x668];
  v18 = STACK[0x4FC];
  LODWORD(STACK[0x680]) = v16;
  v19 = (v16 - 1483797797) & 0x5870F3EF;
  v20 = v12 ^ 0xCFAFF1AE;
  v21 = (v12 ^ 0xCFAFF1AE) + (v11 ^ 0xC950F3);
  v22 = a3 ^ v17 ^ 0xADA5C7FC;
  v23 = v14 - 1964241577 + v22;
  v24 = v14 + v18 - 652027685;
  LODWORD(STACK[0x5BC]) = v19;
  v25 = v15 ^ a1 ^ (v19 + v13 - 2119540830);
  v26 = ((v16 - 768) | 0x280) ^ 0xC0DC58D0 ^ v24;
  v27 = v23 ^ v22;
  v28 = v25 + v20;
  v29 = ((2 * v24) & 0xF3FDFFF2 ^ 0xB17DD640) + (v24 ^ 0x234014DB);
  v30 = v28 ^ v25;
  v31 = (v28 + 1685411705 - ((2 * v28) & 0xC8EAAEF2)) ^ v15 ^ 0x8F41C99;
  v32 = (v29 + 100728839 + (v23 ^ v17 ^ 0xCFF239E1 ^ (v29 + 100728839)) + 1) ^ ((v23 ^ v17 ^ 0xCFF239E1) + 1);
  v33 = (v23 ^ v17 ^ 0xAF5DCCE7 ^ (v32 - ((2 * v32) & 0x3EA015F2) - 1622144263)) + v29 + 100728839;
  v34 = (v21 ^ 0xC0DC5B70) + v30 + 1;
  v35 = (v33 ^ 0xF05E467) + v29;
  v36 = (v27 + v26 + 1) ^ v17 ^ 0x3F082279;
  v37 = (v34 + 1685411705 - ((2 * v34) & 0xC8EAAEF2)) ^ v15 ^ 0x8F41C99;
  v38 = v21 ^ 0x5098FE85 ^ (v31 - ((2 * v31) & 0x144C2B4E) - 1977215577);
  v39 = ((v21 ^ 0x254114DD) + (v15 ^ 0x6C814BE0) + v37 + 1) ^ 0x9CF11408;
  v21 ^= 0xDABEEB22;
  v40 = ((2 * (v38 + v21)) & 0xE3E4FDAE) + ((v38 + v21) ^ 0xF1F27ED7);
  v41 = v29 + 1983531253 + v35;
  v42 = v21 + 2017839632 + v40;
  v43 = ((v17 ^ 0x3F082279) + v36 - v29 - 100728839) ^ 0x9CF11408;
  v44 = v41 + v43;
  v41 ^= 0x5A1A4957u;
  v45 = v41 + 1879401281;
  v46 = v42 + v39;
  v47 = v36 + v43 - v35 - 126873339 + v41;
  v42 ^= 0x5A1A4957u;
  v48 = v37 - 235766057 + v39 - v40 + v42;
  v49 = v45 - v47;
  v50 = v47 + 1879401281 - (v45 - v47);
  v51 = v44 - (v45 - v47) - 116863351;
  v52 = v48 - 1294545627 * (((v48 & 0x3800891C ^ 0x3800891C) + (v48 & 0x3800891C)) | 0x503C4504);
  v53 = ((2 * (v42 - v52)) & 0xEFFFDABE) + ((v42 - v52) ^ 0xF7FFED5F);
  v54 = (v49 - 1879401281) ^ 0x8718D175;
  v55 = v35 - v44 + v50 + v51 + 642709877;
  v56 = v52 - 134222497 - v53;
  v57 = v50 + 820408386;
  v58 = v46 - v53;
  v59 = v56 + 820408386;
  v60 = v57 ^ 0x30CDC82C;
  v61 = v40 + v56 + -v53 - 1352740034;
  v62 = (v53 + 134222497) ^ 0x8718D175;
  v63 = v59 ^ 0x30CDC82C;
  v64 = ((2 * v57) & 0xB6F773DC ^ 0x36A521DC) + (v57 ^ 0x40292D01);
  v65 = v60 - v54 + v55 + 1535107117;
  v66 = v65 - ((2 * v65 + 143188128) & 0x46D3529C) + 1739463070;
  v67 = ((2 * v59) & 0xFFFADF6A ^ 0x36A0094A) + (v59 ^ 0x64AFFB5A);
  v68 = v63 - v62 + v61 - 2147379724;
  v69 = v68 - ((2 * v68 + 1065710866) & 0x85F9BB08) + 1656723469;
  v70 = v66 ^ (v64 - ((2 * v64 + 1673055430) & 0x46D3529C) - 716828751);
  v71 = ((2 * v70) & 0xD9FE3BE ^ 0x508E2A0) + (v70 ^ 0x855B8C8F);
  v72 = v54 + v51 - v55 + v65 - 2 * v64;
  v73 = ((v66 ^ 0xA369A94E)
       + ((v54 - 271935) ^ 0x742404D6)
       - 1553356466
       - ((2 * ((v66 ^ 0xA369A94E) + ((v54 - 271935) ^ 0x742404D6))) & 0x46D3529C)) ^ v66;
  v74 = ((v69 ^ 0xC2FCDD84)
       + ((v62 - 271935) ^ 0x742404D6)
       - 1023615612
       - ((2 * ((v69 ^ 0xC2FCDD84) + ((v62 - 271935) ^ 0x742404D6))) & 0x85F9BB08)) ^ v69;
  v75 = (v67 - 2 * ((v67 + 224047260) & 0x42FCDD87 ^ v67 & 3) - 799568352) ^ v69;
  v76 = v69 ^ 0x3D03227B;
  v77 = v73 + v64;
  v78 = v74 + v67 + 224047260;
  v79 = v58 + v62;
  v80 = (v75 ^ HIDWORD(a9)) + 1857968432 + v74;
  v81 = v79 - v61;
  v82 = v73 - v71 + 1972259598;
  v83 = v72 + (v66 ^ 0x5C9656B1) + v70 - v77 - 52217250;
  v84 = v81 + v68 - 2 * v67;
  v85 = v82 ^ 0x6FDE1B23;
  v86 = v84 + v76 + v75 - v78 - 733696209;
  v87 = v77 + v73 - ((2 * (v77 + v73) + 1295138364) & 0xF316430A) + 539246755;
  v88 = (v83 - 108322427 - ((2 * v83) & 0xF316430A)) ^ v87;
  v89 = v78 + v74;
  v90 = (v89 - 188958533) ^ v86;
  v91 = v87 ^ 0xF98B2185;
  v80 ^= 0x6FDE1B23u;
  v92 = ((v82 ^ 0x6FDE1B23) - 108322427 - 2 * ((v82 ^ 0x6FDE1B23) & 0x798B218D ^ v82 & 8)) ^ v87;
  v93 = v90 + v80;
  v94 = (v89 - 188958533) ^ v80;
  v95 = v88 + v85;
  v96 = v92 ^ 0x6BBFD6F8;
  v97 = v91 + (v92 ^ 0x6BBFD6F8);
  v98 = v71
      + ((v71 + 230830265) ^ 0x814D31FB)
      + v77
      - ((2 * (v71 + 230830265)) & 0xFD659C08)
      + v85
      + v91
      + v92
      + 556282657;
  v99 = (v94 ^ 0x6BBFD6F8) + v89 - 188958533;
  v100 = v95 + v96 - v98;
  v101 = v78 + v89 - v90 + v94 + v93 + 1469286075;
  v102 = (v94 ^ 0x6BBFD6F8) + v89 - 2132579091 + v93 - v101;
  v103 = ((2 * ((v98 ^ (v91 - 1943620558)) - v97 + 711011387)) & 0xFFFB665E)
       + (((v98 ^ (v91 - 1943620558)) - v97 + 711011387) ^ 0x7FFDB32F);
  v104 = v103 - v100 - 1166096307;
  v105 = v104 ^ (v97 + 1815107063);
  v106 = ((2 * ((v101 ^ (v89 - 2132579091)) - v99 + 711011387)) & 0x3FFFF7D0)
       + (((v101 ^ (v89 - 2132579091)) - v99 + 711011387) ^ 0x9FFFFBE8);
  v107 = v89 - v102 + 459271297 + v106 - ((2 * (v89 - v102 + 459271297 + v106)) & 0x80EE962A) - 1065923819;
  v108 = v107 & 0xEB6DDD68 ^ 0x2B089468 | v107 & 0xEB6DDD68 ^ 0xC0654900;
  v109 = v107 ^ (v99 - ((2 * v99 - 664753170) & 0x80EE962A) + 749183244);
  v110 = v106 - ((2 * v106 + 604402974) & 0x98193B0E) - 569386986;
  v111 = v91 + v100 + 582497892 + v105;
  v112 = v103 - 1194168860 + v105;
  v113 = (v102 - 1768848846 + v109 + 1275895175 - ((2 * (v102 - 1768848846 + v109)) & 0x98193B0E)) ^ v110;
  v114 = (v110 ^ 0x4C0C9D87) + v109 + 114092700;
  v115 = (v104 ^ (v103 - 1308261560)) - v103 + v112 - 1464968124;
  v116 = v115 + v112;
  v117 = -696865732 - v106 + (v107 ^ v110 ^ 0x8C7BD692) + v114;
  v118 = v114 - 231081791 + v117;
  v119 = v117 - ((2 * v117 + 65126452) & 0x8D4AE1A4) + 1217810668;
  v120 = v115 - ((2 * v115 + 527290034) & 0xE5741B58) + 40957189;
  v121 = -696865732 - v106 + (v110 ^ 0x4C0C9D87) + v118 + v113;
  v122 = v116
       + ((v103 - 963140128 + v108) ^ v111)
       + 1752819403
       + 2135097098
       - ((2 * (v116 + ((v103 - 963140128 + v108) ^ v111) + 1752819403)) & 0xFE85FE14);
  v123 = v118 + v106 + 1207572338 - 1908573308 - ((2 * (v118 + v106 + 1207572338)) & 0x1C7AF708);
  v124 = (v120 ^ (v103 + 1521905112 + ~((2 * v103 - 805781418) & 0xE5741B58))) + (v120 ^ 0xF2BA0DAC);
  v125 = v122 ^ (v103 + 1744592939 + v116);
  v126 = (v119 ^ (v106 - ((2 * (v106 + 1207572338)) & 0x8D4AE1A4) - 1902147516)) + (v119 ^ 0x46A570D2) + 144065885;
  v127 = (v122 ^ 0x7F42FF0A) - ((2 * (v122 ^ 0x7F42FF0A) + 93564336) & 0x1B3608FA) - 530261163;
  v128 = v120 ^ v122;
  v129 = v121 - 1908573308 - ((2 * v121) & 0x1C7AF708);
  v130 = v129 ^ v123;
  LOBYTE(STACK[0xF66]) = (v124 + 93) ^ 0x8F;
  v131 = v121 - 2 * ((v121 + 315217624) & 0x1E7BCF57 ^ v121 & 1) + 1900389934;
  LOBYTE(STACK[0xCFD]) = v126 - ((2 * v126) & 0x34) + 26;
  LOBYTE(STACK[0xC51]) = v127 ^ 0xF2;
  v132 = v129 ^ v119;
  v133 = v125 ^ 0x7F42FF0A;
  v134 = (v125 ^ 0x7F42FF0A) - 861484082;
  LOBYTE(STACK[0xDB1]) = (v121 - 2 * ((v121 - 40) & 0x57 ^ v121 & 1) + 46) ^ 0x4C;
  v135 = v127 ^ ((v128 ^ 0x8DF8F2A6) - ((2 * (v128 ^ 0x8DF8F2A6)) & 0x1B3608FA) + 228263037);
  v136 = v130 - ((2 * v130 + 424515484) & 0x56378716) - 138244263;
  LOBYTE(STACK[0xE7C]) = v136 ^ 0x91;
  LOBYTE(STACK[0xFFB]) = (v132 ^ 0x56) - ((2 * (v132 ^ 0x56)) & 0x34) + 26;
  v137 = v134 - v135 - ((2 * (v134 - v135)) & 0x5E74B7A8) - 1355129900;
  LOBYTE(STACK[0xD1C]) = ((v125 ^ 0xA) - 50) ^ 0x8F;
  v138 = v124 + (v125 ^ 0x7F42FF0A) - 717418196 + (v137 ^ 0x50C5A42B);
  v139 = ((2 * v138) & 0xCEDFFFEE) + (v138 ^ 0x676FFFF7);
  LOBYTE(STACK[0xE9B]) = v128 ^ 0x29;
  v140 = (v136 ^ 0x2B1BC38B) + v126;
  v141 = ((v132 ^ 0xC8980B56) - 2 * ((v132 ^ 0xC8980B56) & 0x1E7BCF5F ^ v132 & 9) - 1636053162) ^ v131;
  v142 = (v133 - ((2 * v134) & 0x1B3608FA) - 633221045) ^ v127;
  v143 = v139 - 1735393271;
  v144 = v139 - 1735393271 + v142 + 1380327226 - ((2 * (v139 - 1735393271 + v142)) & 0xA48C3E74);
  v145 = (v136 ^ 0x2B1BC38B) - v141;
  v146 = (v144 ^ 0x52461F3A) + v135;
  v147 = ((2 * (v140 - v145)) & 0x7DF5EF72) + ((v140 - v145) ^ 0x3EFAF7B9);
  LOBYTE(STACK[0xF4F]) = v137 ^ 0x96;
  v148 = (v131 ^ 0xB5600CDD ^ v136)
       - 1056634809
       + v147
       - 1385356481
       - ((2 * ((v131 ^ 0xB5600CDD ^ v136) - 1056634809 + v147)) & 0x5ADA467E);
  LOBYTE(STACK[0xCE6]) = v145 ^ 0xD7;
  LOBYTE(STACK[0xDD0]) = (v139 + 9) ^ 0x8F;
  LOBYTE(STACK[0xF30]) = v147 - ((2 * v147 + 14) & 0x34) + 97;
  v149 = (v148 ^ 0xAD6D233F) + v141;
  v150 = v144 ^ ((v137 ^ 0x406A7619) + 1380327226 - ((2 * (v137 ^ 0x406A7619)) & 0xA48C3E74));
  LOBYTE(STACK[0xD05]) = v146 ^ 0x8F;
  v151 = v139 - ((2 * v139 + 431438734) & 0xCEEEDC28) + 1951599579;
  v152 = v143 + (v151 ^ 0x988891EB) + v146 + 1;
  LOBYTE(STACK[0xE84]) = v144 ^ 0xB5;
  LOBYTE(STACK[0xE65]) = v149 - ((2 * v149) & 0x34) + 26;
  LOBYTE(STACK[0xFE4]) = v148 ^ 0x25;
  v153 = v145 ^ 0x423D0EF2 ^ v148;
  v154 = ((2 * v151) & 0x29244530 ^ 0x9240420) + (v151 ^ 0x7365F5CF);
  v155 = v149 - 1951112638;
  LOBYTE(STACK[0x1003]) = (v154 + 104) ^ 0x8F;
  LOBYTE(STACK[0xE4E]) = v153 - 119 - ((2 * (v153 - 119)) & 0x34) + 26;
  LOBYTE(STACK[0xCCF]) = v149 + 66 - ((2 * (v149 + 66)) & 0x34) + 26;
  LOBYTE(STACK[0xDB9]) = ((v137 ^ 0x19) + 63) ^ 0xCB;
  LOBYTE(STACK[0xF19]) = ((v145 ^ 0xCD) + 63) ^ 0x5E;
  v156 = (v147 + 894477829) ^ 0x80B943;
  LOBYTE(STACK[0xD9A]) = v156 - ((2 * v156) & 0x34) + 26;
  v157 = v152 + v150 + 1682411657;
  LOBYTE(STACK[0xCEE]) = (v150 - 119) ^ 0x8F;
  LOBYTE(STACK[0xF38]) = v152 ^ 0x8F;
  v158 = v150 - ((2 * v150 + 181977394) & 0xC3763398) - 416843163;
  v159 = ((v145 ^ 0xEF502DCD) - 1282739905) ^ 0x3644E844;
  v160 = v156 + v159;
  v161 = v159 - v160;
  LOBYTE(STACK[0xD83]) = (((v145 ^ 0xCD) + 63) ^ 0x44)
                       - v160
                       + 12
                       - ((2 * ((((v145 ^ 0xCD) + 63) ^ 0x44) - v160 + 12)) & 0x34)
                       + 26;
  LOBYTE(STACK[0xE6D]) = (v154
                        + (((v137 ^ 0x19) + 63) ^ 0x44)
                        - ((2 * (v154 + (((v137 ^ 0x19) + 63) ^ 0x44)) - 48) & 0x98)
                        + 52) ^ v158 ^ 0xCB;
  v162 = (v160 - ((2 * v160) & 0x3C84E1E) - 2115754225) ^ (v153 - 2056494951) ^ 0xD04CDD4B;
  LOBYTE(STACK[0xFEC]) = (-92 - v154) ^ 0x8F;
  v163 = ((2 * v158) & 0x7FDF7A5A ^ 0x60074210) + (v158 ^ 0xFFC5EA5);
  v164 = (v157 ^ 0x6B1B6B1A) - v163;
  LOBYTE(STACK[0xFCD]) = ((v160 - ((2 * v160) & 0x1E) + 15) ^ (v153 - 103) ^ 0x4B)
                       - ((2 * ((v160 - ((2 * v160) & 0x1E) + 15) ^ (v153 - 103) ^ 0x4B)) & 0x34)
                       + 26;
  v165 = 2145352282
       - v163
       + v164
       + ((v154
         + (((v137 ^ 0x406A7619) - 1282739905) ^ 0x3644E844)
         - ((2 * (v154 + (((v137 ^ 0x406A7619) - 1282739905) ^ 0x3644E844)) - 690242864) & 0xC3763398)
         + 1294530356) ^ v158 ^ 0x51A8FA44);
  LOBYTE(STACK[0xF21]) = v158 ^ 7;
  v166 = (v155 + v153 + 1682411657) ^ 0x6B1B6B1A;
  LOBYTE(STACK[0xCB8]) = (v153 - 103) ^ 0x5E;
  LOBYTE(STACK[0xF02]) = v166 + (~(2 * v166) | 0xCB) + 27;
  LOBYTE(STACK[0xDA2]) = v157 ^ 0x95;
  v167 = ((2 * (((v153 - 2056494951) ^ 0xAE5705BB) + 1 + v166)) & 0x5FFD5F26)
       + ((((v153 - 2056494951) ^ 0xAE5705BB) + 1 + v166) ^ 0xAFFEAF93);
  v168 = ((2 * ((v164 + 1072676141) ^ (1914865261 - v154))) & 0xFB73FF7E)
       + ((v164 + 1072676141) ^ (1914865261 - v154) ^ 0xFDB9FFBF);
  v169 = ((v167 + 1342263405) ^ (v161 + 1569743829))
       + 144664952
       - ((2 * ((v167 + 1342263405) ^ (v161 + 1569743829))) & 0x113ED2F0);
  v170 = ((v153 - 2056494951) ^ 0xAE5705BB) + 1342263406 + v162 + v167;
  v171 = (((v153 - 2056494951) ^ 0x51A8FA44) + 1851332755) ^ 0xB4E84733;
  LOBYTE(STACK[0xFB6]) = (((v167 + 109) ^ (v161 - 43)) + 120 - ((2 * ((v167 + 109) ^ (v161 - 43))) & 0xF0)) ^ 0x62;
  LOBYTE(STACK[0xEEB]) = ((((v153 - 103) ^ 0x44) - 109) ^ 0x33)
                       - ((2 * ((((v153 - 103) ^ 0x44) - 109) ^ 0x33)) & 0x34)
                       + 26;
  LOBYTE(STACK[0xE37]) = v170 + (~(2 * v170) | 0xCB) + 27;
  LOBYTE(STACK[0xFD5]) = (v164 + 28) ^ 0x8F;
  LOBYTE(STACK[0xE56]) = (v168 + 65) ^ 0x8F;
  LOBYTE(STACK[0xD8B]) = (v163 + 102) ^ 0xBC;
  v172 = (v163 + 778656614) ^ 0xB4E84733;
  v173 = v164 - v172;
  v174 = v164 - v172 + v168;
  v175 = v174 + 1534372116;
  v176 = ((2 * (v165 - v172 - v168 + 1349528503)) & 0x9BBD6DB6) + ((v165 - v172 - v168 + 1349528503) ^ 0x4DDEB6DB);
  LOBYTE(STACK[0xCD7]) = v165 ^ 0x8F;
  v177 = v173 - v172 - ((2 * (v173 - v172) + 475376152) & 0x3A8D55DE) - 881754117;
  LOBYTE(STACK[0xD6C]) = v167 - ((2 * v167 + 56) & 0x34) + 118;
  v178 = ((2 * (v170 - v171 + 1387670521 + (v169 ^ 0xF7609687))) & 0xF78BAFBA)
       + ((v170 - v171 + 1387670521 + (v169 ^ 0xF7609687)) ^ 0x7BC5D7DD);
  LOBYTE(STACK[0xF0A]) = (v176 + 37) ^ 0x8F;
  v179 = v167 - v171;
  LOBYTE(STACK[0xCC0]) = (v174 + 98) ^ 0x8F;
  v180 = v179 + 1803959380 + (v169 ^ 0x89F6978);
  LOBYTE(STACK[0xCA1]) = ((2 * (v170 - v171 - 7 + (v169 ^ 0x87))) & 0xBA)
                       + ((v170 - v171 - 7 + (v169 ^ 0x87)) ^ 0xDD)
                       - ((2
                         * (((2 * (v170 - v171 - 7 + (v169 ^ 0x87))) & 0xBA) + ((v170 - v171 - 7 + (v169 ^ 0x87)) ^ 0xDD))
                         + 6) & 0x34)
                       + 61;
  v181 = v179 - v171 - ((2 * (v179 - v171) + 2088292504) & 0xFFD59480) + 1042756236;
  v182 = v172 - v175;
  LOBYTE(STACK[0xF9F]) = v181 ^ 0x5A;
  LOBYTE(v170) = v177 ^ 0x60;
  v183 = (v177 ^ 0xE2B95510) + v175;
  v184 = (v176 - 1674145676 + ~((2 * (v176 + 2129651076)) & 0x3A8D55DE)) ^ v177;
  v185 = v184 + v176 + 2129651076 - 1944871030 - ((2 * (v184 + v176 + 2129651076)) & 0x18273F14);
  LOBYTE(STACK[0xE3F]) = v170;
  v186 = v171 - v180;
  LOBYTE(STACK[0xE20]) = v180 - ((2 * v180 + 26) & 0x34) + 39;
  v187 = v184 - ((2 * v184 - 261520936) & 0xAB0D769A) - 843350983;
  LOBYTE(STACK[0xFBE]) = (v182 - 70) ^ 0x8F;
  LOBYTE(STACK[0xD55]) = v186 - ((2 * v186 + 54) & 0x34) + 21;
  v188 = (v181 ^ 0x801535BF) + v180;
  v189 = v185 ^ (v183 - ((2 * v183 + 365386910) & 0x18273F14) + 385306073);
  v190 = (v178 - ((2 * (v178 + 1359529090)) & 0xFFD59480) - 789344574) ^ v181;
  v191 = v190 + v178 + 1359529090 + 2093878853 - ((2 * (v190 + v178 + 1359529090)) & 0xF99C1C8A);
  v192 = v189 + 1879401281;
  v193 = v191 ^ (v188 - ((2 * v188 + 289102876) & 0xF99C1C8A) + 90946643);
  LOBYTE(STACK[0xD74]) = v185 ^ 5;
  v190 += 2016723180;
  v194 = v185 ^ 0x8C139F8A;
  v195 = v182 - v176 + 1883561109 + (v185 ^ 0x8C139F8A);
  *(_BYTE *)(STACK[0x688] + (v187 & 0x294 ^ 0x204 | v187 & 0x294 ^ 0x90)) = v191 ^ 0x5F;
  v196 = v185 ^ v187;
  LOBYTE(STACK[0xE09]) = v190 - ((2 * v190) & 0x34) + 26;
  LOBYTE(STACK[0xC8A]) = v193 + (~(2 * v193) | 0xCB) + 27;
  LOBYTE(STACK[0xCA9]) = v187 ^ 0xC2;
  v197 = (2 * (v189 + 1879401281)) & 0x1FF5397E;
  LOBYTE(v187) = v189 ^ 0x8F;
  v198 = v191 ^ 0x7CCE0E45;
  v199 = v186 - v178 - 1603142184 + (v191 ^ 0x7CCE0E45);
  LOBYTE(STACK[0xEF3]) = v187;
  v200 = v192 ^ 0x8FFA9CBF;
  v201 = v196 ^ 0xD99524C7;
  v202 = ((2 * (v195 ^ v196)) & 0xEF7FFAE6 ^ 0xA32A4886) + (v195 ^ v196 ^ 0xAE2AD9B4);
  LOBYTE(STACK[0xF88]) = v199 - ((2 * v199) & 0x34) + 26;
  v203 = v191 ^ v190;
  v204 = ((2 * (v194 - 2009070963 + v202)) & 0x9BF3EF2A) + ((v194 - 2009070963 + v202) ^ 0xCDF9F795);
  v205 = ((2 * (v199 ^ v191 ^ v190)) & 0xBDCB7FFE ^ 0xB9881C8A) + (v199 ^ v191 ^ v190 ^ 0x222BB1BA);
  v206 = v201 + v200 + v197 - v202 + 2009070963;
  v207 = v203 ^ 0x7CCE0E45;
  v208 = v193 + (v203 ^ 0x7CCE0E45) - v205 + 1592115199;
  v209 = ((2 * (v198 - 1592115199 + v205)) & 0xDBB83FBC) + ((v198 - 1592115199 + v205) ^ 0x6DDC1FDE);
  v210 = v207 + 1843142622 - v209;
  v211 = v202 - 1169814792 + v204;
  v212 = v204 + v211;
  LOBYTE(STACK[0xE28]) = v195 ^ 0x8F;
  v213 = v201 - 839256171 - v204;
  LOBYTE(STACK[0xD3E]) = v209 - ((2 * v209 + 56) & 0x34) - 74;
  LOBYTE(STACK[0xFA7]) = (v204 - 27) ^ 0x8F;
  v214 = v206 ^ 0x77A128DD ^ (v213 - ((2 * v213) & 0xB98D07B4) + 1556513754);
  LOBYTE(STACK[0xD5D]) = v206 ^ 0x8F;
  LOBYTE(STACK[0xDF2]) = v209 + v205 - ((2 * (v209 + v205) + 6) & 0x34) + 61;
  v215 = v204 + v211 - 689535771;
  LOBYTE(STACK[0xC73]) = v210 - ((2 * v210) & 0x34) + 26;
  v216 = v214 + v215 + 1832285389 - ((2 * (v214 + v215)) & 0xDA6CE99A);
  v217 = v209 + v205 + v209;
  LOBYTE(STACK[0xEBD]) = v208 - ((2 * v208) & 0x34) + 26;
  v208 ^= 0x2B67AB07u;
  LOBYTE(STACK[0xEDC]) = v213 ^ 0x8F;
  v218 = v216 ^ (v204 - ((2 * v204 + 1787820458) & 0xDA6CE99A) - 1568771678);
  v219 = (v206 ^ 0x2B67AB07) - 1661954860;
  v220 = v217 + (v210 ^ v208) + 67067777 - ((2 * (v217 + (v210 ^ v208) + 1782742207)) & 0x3379C584);
  LOBYTE(STACK[0xC92]) = v211 ^ 0x8F;
  v221 = v208 - 1661954860;
  LOBYTE(STACK[0xF90]) = ((v206 ^ 7) - 44) ^ 0x8F;
  LOBYTE(STACK[0xD27]) = v208 - 44 + (~(2 * (v208 - 44)) | 0xCB) + 27;
  LOBYTE(STACK[0xEA6]) = v220 ^ 0xD8;
  LOBYTE(v206) = v216 ^ 0x42;
  v222 = v220 ^ (v209 + 790801224 - ((2 * v209 + 717990168) & 0x3379C584) + 3078);
  v223 = (v218 ^ (v212 + 548847993)) - ((2 * (v218 ^ (v212 + 548847993))) & 0x67355D0E) + 865775239;
  v224 = (v216 ^ 0x6D3674CD) + v212 + 548847993;
  v225 = v217 - ((2 * v217 + 1747284646) & 0xBE016582) + 320039956;
  v226 = v224 ^ v219;
  LOBYTE(STACK[0xD46]) = v206;
  LOBYTE(STACK[0xF71]) = v222 - ((2 * v222) & 0x34) + 26;
  LOBYTE(STACK[0xE11]) = v218 ^ 0x8F;
  v227 = (v220 ^ 0x99BCE2C2) + (v225 ^ 0x5F00B2C1);
  v228 = v227 ^ v221;
  v229 = (v222 + 1593881281 - ((2 * v222) & 0xBE016582)) ^ v225;
  LOBYTE(v222) = (v212 + 121) ^ 0x8F;
  v230 = ((2 * (v227 - v229)) & 0x5DFF3FFE) + ((v227 - v229) ^ 0xAEFF9FFF);
  LOBYTE(STACK[0xC5C]) = (v217 - ((2 * v217 - 90) & 0x82) + 20) ^ 0xDB;
  LOBYTE(STACK[0xEC5]) = v222;
  v231 = ((2 * (v224 + (v223 ^ 0xCC655178) + 1)) & 0xD79FFAFE) + ((v224 + (v223 ^ 0xCC655178) + 1) ^ 0xEBCFFD7F);
  v232 = v223 ^ 0xB2CADA6E;
  v233 = v230 + v217;
  LOBYTE(STACK[0xE8F]) = v233 - ((2 * v233 + 12) & 0x34) + 96;
  v234 = v231 + v215;
  LOBYTE(STACK[0xDFA]) = (v226 - 71) ^ 0x8F;
  LOBYTE(STACK[0xF5A]) = v228 - ((2 * v228 + 50) & 0x34) - 45;
  LOBYTE(STACK[0xC7B]) = v223 ^ 0xE1;
  LOBYTE(STACK[0xD10]) = v230 - ((2 * v230 + 2) & 0x34) + 27;
  LOBYTE(STACK[0xD2F]) = (2 * (v224 + (v223 ^ 0x78) + 1) + ((v224 + (v223 ^ 0x78) + 1) ^ 0x7F) + v215 + 7) ^ 0x8F;
  v235 = (v231 + v215 + 301330015) ^ v223 ^ 0xB2CADA6E;
  LOBYTE(STACK[0xDDB]) = v229 ^ 0xF3;
  v236 = v229 ^ 0x815074E9;
  LOBYTE(STACK[0xF79]) = ((v223 & 0x95 ^ 4) + (v223 & 0x95 ^ 0x91)) ^ 0x1A ^ (v231 - 127);
  v237 = v229 ^ 0x6E32342B ^ (v233 - 1469380255 + (~(2 * v233 + 1913753916) | 0x213B7E7B));
  v238 = v232 - v226 + v231;
  v239 = v238 + 338690689;
  LOBYTE(STACK[0xEAE]) = (v235 - 9) ^ 0x8F;
  v240 = v226 - (v238 + 338690689) - v234;
  v241 = v235 - (v238 + 338690689);
  LOBYTE(STACK[0xC45]) = v237 - ((2 * v237 + 46) & 0x34) + 17;
  v242 = v236 - v228 + 1358979073 + v230;
  LOBYTE(STACK[0xC64]) = (v240 - 61) ^ 0x8F;
  v243 = v228 - v242 - v233;
  LOBYTE(STACK[0xDE3]) = (v238 + 112) ^ 0x8F;
  v244 = v237 - v242;
  v245 = v237 - v242 - 265414829;
  LOBYTE(STACK[0xF43]) = v242 + (~(2 * v242 + 30) | 0xCB) + 10;
  LOBYTE(STACK[0xCF9]) = v228 - ((2 * v228 + 34) & 0x34) + 43;
  LOBYTE(STACK[0xDC4]) = v243 + 108 - ((2 * (v243 + 108) + 48) & 0x34) + 50;
  v246 = v228 - v245;
  v247 = ((v243 + 751325466) ^ (v242 - 1833433105))
       - 595254119
       - ((2 * ((v243 + 751325466) ^ (v242 - 1833433105))) & 0xB90A4932);
  v248 = v243 + 670315116 - v244;
  v249 = ((v240 - 740611239) ^ (v239 - 1833433105))
       + 564966733
       - ((2 * ((v240 - 740611239) ^ (v239 - 1833433105))) & 0x43596A9A);
  v250 = v240 - v241;
  v251 = (v247 ^ 0x237ADB66) + v245;
  LOBYTE(STACK[0xF62]) = (v226 + 17) ^ 0x8F;
  v252 = v241 - 1031029751 + (v249 ^ 0xDE534AB2);
  v253 = (v226 - v241 + 1284246161 - ((2 * (v226 - v241 + 1284246161) + 1012949744) & 0x43596A9A) + 2145183429) ^ v249;
  v254 = (v246 - ((2 * v246 + 903128760) & 0xB90A4932) + 2003793909) ^ v247;
  LOBYTE(STACK[0xFF7]) = v248 - ((2 * v248 + 12) & 0x34) - 64;
  LOBYTE(STACK[0xE97]) = (v240 - v241 + 81) ^ 0x8F;
  LOBYTE(STACK[0xD18]) = (v241 + 9 + (v249 ^ 0xB2)) ^ 0x8F;
  v255 = v253 - ((2 * v253 + 1069630008) & 0x52181B92) - 924012827;
  LOBYTE(STACK[0xDCC]) = v253 ^ 0x8F;
  LOBYTE(STACK[0xE78]) = v251 - ((2 * v251 + 44) & 0x34) - 48;
  LOBYTE(STACK[0xDAD]) = (v247 ^ 0x99) - ((2 * (v247 ^ 0x99) + 50) & 0x34) - 77;
  LOBYTE(STACK[0xF2C]) = ((v246 - ((2 * v246 - 72) & 0x32) - 11) ^ v247)
                       - ((2 * ((v246 - ((2 * v246 - 72) & 0x32) - 11) ^ v247)) & 0x34)
                       + 26;
  v256 = v248 + 1243274618;
  v257 = (v249 ^ 0x21ACB54D) + 30889794;
  LOBYTE(STACK[0xC4D]) = ((v249 ^ 0x4D) - 103) ^ 0x8F;
  v258 = v248 + 346425180 + v251;
  v259 = v250 + v252 + (v257 ^ 0x827EA7D) + 290418514;
  v260 = v254 - 6199116 - 2 * ((v254 + 534815004) & 0x5FC0C799 ^ v254 & 1);
  LOBYTE(STACK[0xD96]) = v260 ^ 0x82;
  LOBYTE(v248) = v260 ^ (v248 - ((2 * (v248 + 122)) & 0x30) + 18);
  v261 = (v257 ^ 0x827EA7D) + 1;
  v262 = v261 + v259 + 49399548 - ((2 * (v261 + v259)) & 0x5E38DF8);
  LOBYTE(STACK[0xE61]) = v248 - ((2 * v248) & 0x34) + 26;
  LOBYTE(STACK[0xF4B]) = v259 ^ 0x8F;
  v263 = ((v258 & 0xF7D81582 ^ 0xF7D81582) + (v258 & 0xF7D81582)) ^ ((v247 ^ 0xDC852499) + 30889794);
  LOBYTE(STACK[0xE80]) = v257 ^ 0xD;
  v264 = v258 - v263;
  LOBYTE(STACK[0xCE2]) = v258 - v263 - ((2 * (v258 - v263)) & 0x34) + 26;
  LOBYTE(v249) = v255 ^ (v250 - ((2 * v250 + 74) & 0x92) - 18) ^ 0x8F;
  v265 = v250 + 2101491161 + (v262 ^ 0x2F1C6FC);
  v266 = v264 - v263;
  LOBYTE(STACK[0xD01]) = v249;
  LOBYTE(STACK[0xFE0]) = v263 ^ 0x1A;
  v267 = (v260 ^ 0xDFC0C798) - v263;
  v268 = (v266 - ((2 * v266) & 0x49A2714A) + 617691301) ^ v263;
  v269 = v262 ^ v257;
  v270 = v268 ^ v267;
  LOBYTE(STACK[0xFFF]) = v255 ^ 0x46;
  LOBYTE(STACK[0xE4A]) = v268 ^ 0x47;
  v271 = v269 ^ 0x97C94586;
  v272 = v269 ^ ((v255 ^ 0xA90C0DC9) + v261);
  v273 = v266 - ((2 * v266 - 935291032) & 0x9B68166E) + 835999467;
  LOBYTE(STACK[0xDB5]) = ((v262 ^ 0xFC) - 76) ^ 0x8F;
  v274 = (v265 - ((2 * v265) & 0xC45B1E78) + 1647152956) ^ v272;
  LOBYTE(STACK[0xF15]) = (v266 - ((2 * v266 + 104) & 0x6E) - 21) ^ 0x2D;
  LOBYTE(v266) = v268 ^ 0x5D;
  v275 = v272 ^ ((v262 ^ 0x2F1C6FC) + 1679838132);
  v276 = (v273 ^ 0xCDB40B37) + v256;
  LOBYTE(STACK[0xCCB]) = v276 - ((2 * v276) & 0x34) + 26;
  LOBYTE(v268) = v272 ^ 9;
  v277 = (v272 ^ 0x97C94586) - ((2 * (v272 ^ 0x97C94586) + 719298720) & 0x27DD8CDE) - 379676993;
  LOBYTE(STACK[0xE69]) = v268;
  LOBYTE(STACK[0xCEA]) = v269 ^ 9;
  v278 = (v273 ^ 0x8B85A56A ^ v270) - ((2 * (v273 ^ 0x8B85A56A ^ v270) + 61246520) & 0xE0F28320) + 1917618092;
  v279 = v274 ^ v277;
  v280 = (v276 - ((2 * v276) & 0xA538C796) + 1385980875) ^ v270;
  LOBYTE(STACK[0xFC9]) = v270 ^ 0x47;
  v281 = v277 ^ (v271 - ((2 * v271 + 885784244) & 0x27DD8CDE) + 1851049417);
  LOBYTE(STACK[0xF34]) = v265 ^ 0x8F;
  v282 = (v270 ^ 0x4631AE5D)
       - 2 * (((v270 ^ 0x4631AE5D) + 1433391184) & 0x5F43AF7B ^ (v270 ^ 0x4631AE5D) & 9)
       - 1263304766;
  v283 = LODWORD(STACK[0x4D0]) + 1666297939;
  v284 = v283 < 0x59A15BCC;
  v285 = v283 < 0x59A15C0C;
  LOBYTE(v266) = v282 ^ (v266 - ((2 * v266 - 76) & 0xE4) - 52);
  LOBYTE(STACK[0xD7F]) = v278 ^ 0x8A;
  LOBYTE(STACK[0xE33]) = v282 ^ 0x68;
  LOBYTE(STACK[0xCB4]) = v266 - ((2 * v266) & 0x34) + 26;
  LOBYTE(STACK[0xF1D]) = v281 ^ 0x8F;
  v286 = (v277 ^ 0x93EEC66F) + (v275 ^ 0x97C94586) - 2116860388;
  v287 = v286 + v281;
  LOBYTE(STACK[0xCD3]) = v277 ^ 0xE0;
  v288 = v279 ^ 0x5Au;
  LOBYTE(STACK[0xD9E]) = v279 ^ 0x5A;
  v289 = (v278 ^ 0xAF3AEEE2 ^ v282) + 2 * ((v282 ^ 0x5F43AF72) & (v278 ^ 0x70794190));
  LOBYTE(STACK[0xEFE]) = v280 ^ v282 ^ 0xFE;
  v290 = (v279 ^ 0x99F5F32A) + 1;
  LOBYTE(STACK[0xFE8]) = ((v275 ^ 0x86) + 28) ^ 0x8F;
  LOBYTE(STACK[0xD68]) = v280 ^ v282 ^ 0xFE;
  LOBYTE(STACK[0xFB2]) = (v278 ^ 0x90) + 2 * (v289 + v266) - ((2 * ((v278 ^ 0x90) + 2 * (v289 + v266))) & 0x34) + 26;
  LOBYTE(STACK[0xE52]) = ((v275 ^ 0x86) + 28 + 2 * v287) ^ 0x8F;
  LOBYTE(STACK[0xC9D]) = v289 - 97 - ((2 * (v289 - 97)) & 0x34) + 26;
  LOBYTE(STACK[0xD87]) = (v290 + v287) ^ 0x8F;
  LOBYTE(STACK[0xF06]) = ((v277 ^ 0x6F) + (v275 ^ 0x86) + 28 - 97) ^ 0x8F;
  LOBYTE(STACK[0xFD1]) = v288;
  LOBYTE(STACK[0xEE7]) = v289
                       + v266
                       + (v280 ^ v282 ^ 0x1B)
                       + 1
                       - ((2 * (v289 + v266 + (v280 ^ v282 ^ 0x1B) + 1)) & 0x34)
                       + 26;
  v291 = v284;
  v292 = v285;
  if (v291)
    v293 = 0;
  else
    v293 = v292;
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x690] + 8 * ((828 * (v293 ^ 1)) ^ LODWORD(STACK[0x680]))))(v290 + v287, v286 - 1660778337, (v280 ^ v282 ^ 0xB4119D1B) + 1, 828, STACK[0x690], v288, v289, 2634188959, a9, a10, a11);
}

void sub_1CF2E5230()
{
  JUMPOUT(0x1CF2D90A4);
}

uint64_t sub_1CF2E5240(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  unint64_t v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unint64_t v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  unsigned int v88;
  int v89;
  int v90;
  int v91;
  unsigned int v92;
  int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  int v114;
  int v115;
  unsigned int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  int v124;
  unsigned int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  unsigned int v131;
  int v132;
  int v133;
  int v134;
  unsigned int v135;
  int v136;
  int v137;
  unsigned int v138;
  int v139;
  int v140;
  int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  int v171;
  int v172;
  int v173;
  int v174;

  LODWORD(STACK[0x63C]) = -a2;
  v12 = v9 + 1667622349;
  LODWORD(STACK[0x620]) = 16 * (LOBYTE(STACK[0xFBA]) ^ 0x1A);
  v13 = STACK[0x668];
  v14 = STACK[0x650];
  LODWORD(STACK[0x678]) = 0;
  LODWORD(STACK[0x624]) = 1827;
  LODWORD(STACK[0x638]) = 99;
  v15 = (v14 - 300) | 0x210;
  LODWORD(STACK[0x62C]) = -704845564;
  LODWORD(STACK[0x680]) = v15;
  v16 = STACK[0xA34];
  LODWORD(STACK[0x628]) = -704839605;
  v17 = *((_DWORD *)&STACK[0x7C0] + (unsigned __int16)(75 * (((v15 ^ 0x23F) & 0xE910) + 203)) % 0x120u);
  HIDWORD(v19) = v16 ^ 0x9106;
  LODWORD(v19) = v16 ^ 0x764C0000;
  v18 = v19 >> 18;
  v20 = STACK[0xAF0];
  LODWORD(STACK[0x630]) = 0;
  LODWORD(STACK[0x634]) = 0;
  HIDWORD(v19) = v17 ^ 0x11111111;
  LODWORD(v19) = v17 ^ 0x96855900;
  v21 = v19 >> 7;
  HIDWORD(v19) = v16 ^ 6;
  LODWORD(v19) = v16 ^ 0x764C9100;
  v22 = v19 >> 7;
  HIDWORD(v19) = v17 ^ 0x15911;
  LODWORD(v19) = v17 ^ 0x96840000;
  v23 = v22 ^ (v16 >> 3) ^ v18;
  v24 = v21 ^ (v17 >> 3) ^ (v19 >> 18) ^ 0x12D0AB22;
  HIDWORD(v19) = v20 ^ 0x9106;
  LODWORD(v19) = v20 ^ 0x764C0000;
  v25 = v19 >> 17;
  HIDWORD(v19) = v20 ^ 0x49106;
  LODWORD(v19) = v20 ^ 0x76480000;
  v26 = v19 >> 19;
  v27 = v8 - 1964241577;
  HIDWORD(v19) = LODWORD(STACK[0x7E0]) ^ 0x15911;
  LODWORD(v19) = LODWORD(STACK[0x7E0]) ^ 0x96840000;
  v28 = v19 >> 17;
  v29 = (v20 >> 10) ^ 0x1D9324 ^ v25 ^ v26;
  HIDWORD(v19) = LODWORD(STACK[0x7E0]) ^ 0x55911;
  LODWORD(v19) = LODWORD(STACK[0x7E0]) ^ 0x96800000;
  v30 = v28 ^ (LODWORD(STACK[0x7E0]) >> 10) ^ (v19 >> 19);
  v31 = v27 + (a3 ^ 0x9DA801E2);
  v32 = ((v10 ^ 0xFF36AF0C) + (v10 ^ 0xE00C2D3 ^ v23) + 1) ^ ((a8 ^ 0x30500E51) + (a8 ^ 0xC166638E ^ v23) + 1) ^ ((v23 ^ 0xF3C437EF ^ ((v27 ^ (a1 + 1312213892) ^ v24) - ((2 * (v27 ^ (a1 + 1312213892) ^ v24)) & 0xFA1B4B9E) - 49437233)) - (v27 ^ (a1 + 1312213892) ^ v24));
  v33 = a1 - 1103352123 + v31;
  v34 = v33 - 1879401281;
  v35 = (a3 ^ 0x9DA801E2) + 812042698;
  v36 = a2 - 2119540083 + (a8 ^ 0xCFAFF1AE);
  v37 = (v33 - ((2 * (v33 - 1879401281)) & 0x601B8C3C) - 1073192227) ^ v13;
  v38 = v37 ^ 0x70E5F04;
  v39 = v37 ^ v31;
  v34 ^= 0x718FCA13u;
  v40 = v39 ^ 0xF8AE0FCB ^ v34 ^ (v29 - 6270769 - ((2 * v29) & 0xFF40A19E));
  v41 = v36 + (v10 ^ 0xC950F3);
  v42 = v41 ^ (v12 - 551283262);
  v43 = a2 - 1307497385;
  v44 = v35 ^ 0x56992C0B;
  v45 = (a2 - 1307497385) ^ 0x29C30353;
  v46 = ((v41 ^ 0x8E7035EC) + (v41 ^ 0x71AA6B45 ^ v30) + 1) ^ ((v42 ^ v36 ^ 0xF8F1A0FB)
                                                             + (v42 ^ v36 ^ 0x72BFE52 ^ v30)
                                                             + 1) ^ ((v30 ^ 0x315A1B1A ^ (v40
                                                                                        - ((2 * v40) & 0x62FF7498)
                                                                                        + 830454348))
                                                                   - v40);
  v35 ^= 0xDA6C534u;
  v47 = v34 + v35;
  LODWORD(STACK[0x648]) = v34 + v35;
  v48 = (v38 - ((2 * v38) & 0xB67FD27E) + 1530915135) ^ v44;
  v49 = (v41 ^ 0x718FCA13) + ((a2 - 1307497385) ^ 0xDA6C534);
  LODWORD(STACK[0x658]) = v49;
  v50 = v43 ^ 0xF2593ACB;
  v51 = STACK[0x97C];
  LODWORD(STACK[0x670]) = v42 ^ v36 ^ 0x70E5F04;
  v52 = ((v42 ^ v36 ^ 0x70E5F04) - ((2 * (v42 ^ v36 ^ 0x70E5F04) + 2022970392) & 0x48CB8CCE) - 1599090573) ^ v45;
  LODWORD(STACK[0x660]) = (v52 - ((2 * v52) & 0x2A11B198) + 352901324) ^ v42 ^ v36;
  LODWORD(STACK[0x64C]) = v48 + v47;
  LODWORD(STACK[0x668]) = v39 ^ 0x70E5F04;
  v53 = ((v39 ^ 0x70E5F04) - ((2 * (v39 ^ 0x70E5F04) - 124513256) & 0xB67FD27E) - 678825141) ^ v44;
  v54 = (v53 - 6270769 - ((2 * v53) & 0xFF40A19E)) ^ v39 ^ 0xF8AE0FCB;
  v55 = (((v42 ^ 0x70E5F04) + 610649703 - 2 * ((v42 ^ 0x70E5F04) & 0x2465C66F ^ v42 & 8)) ^ v45) + v49;
  LODWORD(STACK[0x640]) = v55;
  v56 = (a3 ^ 0x9DA801E2) + v35 + (v51 ^ 0x96855911) + (LODWORD(STACK[0xB08]) ^ 0x96855911) + v29 + 917143766 + v24;
  v57 = v56 + 2066749606 - ((2 * v56 + 156598058) & 0x2D0AB222);
  v58 = v48 + v47 + v56;
  LOBYTE(v35) = v58 - 56;
  LODWORD(STACK[0xABC]) = v57;
  v59 = v58 - 1300692024 - ((2 * v58) & 0x64F20790);
  v60 = LODWORD(STACK[0x63C]) + (*((_DWORD *)&STACK[0x7C0] + LODWORD(STACK[0x634])) ^ 0x96855911) + 1204643963 + v32;
  v61 = ((2 * v60) & 0x7CEE3F9A) + (v60 ^ 0xBE771FCD);
  v62 = v50 + (*((_DWORD *)&STACK[0x7C0] + LODWORD(STACK[0x638])) ^ 0x96855911) + v46 + 184593212 + v61;
  LODWORD(STACK[0x900]) = v62 - 854749687 - ((2 * v62 + 756050416) & 0x2D0AB222);
  v63 = STACK[0x688];
  v64 = 383 * (HIBYTE(v59) & 0xF ^ 2) + 232481;
  v65 = 383 * ((v59 >> 20) & 0xF ^ 7) + 232481;
  v66 = 383 * (HIWORD(v59) & 0xF ^ 9) + 232481;
  v67 = v62 - v55;
  v68 = (2 * v67) & 0xAD6AC350;
  v69 = v67 + 1454727592;
  v70 = v69 - v68;
  v71 = ((((*(unsigned __int8 *)(STACK[0x688] + (v64 - 969 * ((4432371 * (unint64_t)v64) >> 32))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (383 * ((v59 >> 28) ^ 0xB) + 232481 - 969 * ((4432371 * (unint64_t)(383 * ((v59 >> 28) ^ 0xB) + 232481)) >> 32))) ^ 0x1A) << 12) | *(unsigned __int8 *)(STACK[0x688] + (v66 - 969 * ((4432371 * (unint64_t)v66) >> 32))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (v65 - 969 * ((4432371 * (unint64_t)v65) >> 32))) ^ 0x1A) << 12);
  v72 = 383 * (((v61 + 51) & 0x25F) + ((v59 >> 8) & 0xF ^ 3) + ((v61 + 51) & 0x25F ^ 0x25F));
  v73 = 383 * ((v59 >> 4) ^ 0xC) + 232481;
  v74 = *(unsigned __int8 *)(STACK[0x688] + (v73 - 969 * ((4432371 * (unint64_t)v73) >> 32))) ^ 0x1A;
  v75 = v71 | *(unsigned __int8 *)(STACK[0x688] + (v72 - 969 * ((4432371 * (unint64_t)v72) >> 32))) ^ 0x1A;
  v76 = (v75 << 8) - 165263864 - ((v75 << 9) & 0xEC4C8C00);
  v77 = v76 ^ ((*(unsigned __int8 *)(STACK[0x688]
                                   + (383 * ((unsigned __int16)v59 >> 12)
                                                  + 232481
                                                  - 969
                                                  * ((4432371
                                                    * (unint64_t)(383
                                                                       * ((unsigned __int16)v59 >> 12)
                                                                       + 232481)) >> 32))) ^ 0x1A) << 12);
  v78 = *(unsigned __int8 *)(STACK[0x688]
                           + (383 * (v35 & 0xF ^ 8)
                                          + 232481
                                          - 969 * ((4432371 * (unint64_t)(383 * (v35 & 0xF ^ 8) + 232481)) >> 32))) ^ 0x1A;
  v79 = (v77 ^ 0xF6264608 | v78) ^ (16 * v74);
  v80 = 383 * (HIBYTE(v70) & 0xF ^ 6) + 232481;
  v81 = 383 * ((v70 >> 20) & 0xF ^ 0xB) + 232481;
  v82 = ((*(unsigned __int8 *)(STACK[0x688] + (v80 - 969 * ((4432371 * (unint64_t)v80) >> 32))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (383 * ((v70 >> 28) ^ 5) + 232481 - 969 * ((4432371 * (unint64_t)(383 * ((v70 >> 28) ^ 5) + 232481)) >> 32))) ^ 0x1A) << 12);
  v83 = 383 * (HIWORD(v70) & 0xF ^ 5) + 232481;
  v84 = v83 - 1938 * ((2216186 * (unint64_t)v83) >> 32);
  v85 = v84 - 639517081 - ((2 * v84) & 0xCCE);
  v86 = *(unsigned __int8 *)(STACK[0x688] + (v81 - 969 * ((4432371 * (unint64_t)v81) >> 32))) ^ 0x1A;
  v87 = ((2 * v85) & 0x86E ^ 0x84E) + (v85 ^ 0x261E4250);
  v88 = v87 - 639517081 - ((2 * v87) & 0xB3C37CCE);
  v89 = (v70 >> 8) & 0xF ^ 1;
  if ((v85 ^ 0xD9E1BE67) >= 0x3C9)
    v85 = v88;
  v90 = v82 | *(unsigned __int8 *)(v63 + (v85 ^ 0xD9E1BE67)) ^ 0x1A;
  v91 = *(unsigned __int8 *)(v63
                           + (383 * (((unsigned __int16)v70 >> 12) ^ 6)
                                          + 232481
                                          - 969
                                          * ((4432371
                                            * (unint64_t)(383 * (((unsigned __int16)v70 >> 12) ^ 6u) + 232481)) >> 32))) ^ 0x1A;
  v92 = 383 * ((v70 >> 4) ^ 0xA) + 232481;
  v93 = *(unsigned __int8 *)(v63 + (v92 - 969 * ((4432371 * (unint64_t)v92) >> 32)));
  v94 = (v90 << 8) ^ (v86 << 12) | *(unsigned __int8 *)(v63
                                                      + (383 * v89
                                                                     + 232481
                                                                     - 969
                                                                     * ((4432371
                                                                       * (unint64_t)(383 * v89 + 232481)) >> 32))) ^ 0x1A;
  v95 = (v94 << 8) - 1279344417 - ((v94 << 9) & 0x677D8000);
  v96 = v95 ^ (v91 << 12);
  v97 = v78 & 0xF;
  v98 = *(unsigned __int8 *)(v63
                           + (383 * (v69 & 0xF ^ 8)
                                          + 232481
                                          - 969 * ((4432371 * (unint64_t)(383 * (v69 & 0xF ^ 8) + 232481)) >> 32))) ^ 0x1A;
  v99 = v98 + 1827417418 - ((2 * v98) & 0x94);
  v100 = v96 ^ 0xB3BEC0DF | v99 ^ 0x6CEC2D4A;
  v101 = v100 ^ (16 * (v93 ^ 0x1A));
  v102 = 383 * ((v97 & 0xFFFFFF0F | (16 * (v99 & 0xF))) ^ 0xA0);
  v103 = *(unsigned __int8 *)(v63 + (v102 + 270015) % ((v99 & 9 ^ 0x3C1) + (v99 & 9 ^ 8u)));
  v104 = 383
       * (*(unsigned __int8 *)(v63
                             + (v102 + 105708 - 969
                                                            * ((4432371 * (unint64_t)(v102 + 105708)) >> 32))) ^ LODWORD(STACK[0x620]) ^ 0x1A);
  v105 = v104 + 105708 - 969 * ((4432371 * (unint64_t)(v104 + 105708)) >> 32);
  v106 = (v101 >> 8) - ((v100 >> 7) & 0x20) + 16;
  v107 = 383
       * ((((*(_BYTE *)(v63
                                       + (v104
                                                      + 270015
                                                      - 969
                                                      * ((4432371 * (unint64_t)(v104 + 270015)) >> 32))) >> 4) ^ 1)
                          - ((*(_BYTE *)(v63
                                       + (v104
                                                      + 270015
                                                      - 969
                                                      * ((4432371 * (unint64_t)(v104 + 270015)) >> 32))) >> 3) & 0x14)
                          + 26) ^ v103)
       + 105708;
  v108 = 383 * (v101 & 0xF0 | (v79 >> 4));
  v109 = 383
       * (*(unsigned __int8 *)(v63
                             + (v108
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v108 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v63 + (v107 - 969 * ((4432371 * (unint64_t)v107) >> 32))) ^ 0x1A)) ^ 0x1A);
  v110 = v109 + 105708 - 969 * ((4432371 * (unint64_t)(v109 + 105708)) >> 32);
  v111 = *(unsigned __int8 *)(v63
                            + (v109
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v109 + 270015)) >> 32)));
  v112 = 383
       * ((((v111 >> 4) ^ 1) - ((v111 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v63
                                                                                                + (v108 + 270015 - 969 * ((4432371 * (unint64_t)(v108 + 270015)) >> 32))))
       + 105708;
  v113 = 383 * ((v101 >> 4) & 0xF0 | (v79 >> 8) & 0xF);
  v114 = 383
       * (*(unsigned __int8 *)(v63
                             + (v113
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v113 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v63 + (v112 - 969 * ((4432371 * (unint64_t)v112) >> 32))) ^ 0x1A)) ^ 0x1A);
  v115 = *(unsigned __int8 *)(v63
                            + (v114
                                           + 105708
                                           - 969 * ((4432371 * (unint64_t)(v114 + 105708)) >> 32)));
  v116 = *(unsigned __int8 *)(v63
                            + (v114
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v114 + 270015)) >> 32)));
  v117 = (((v116 >> 4) ^ 1) - ((v116 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v63
                                                                                               + (v113 + 270015 - 969 * ((4432371 * (unint64_t)(v113 + 270015)) >> 32)));
  v118 = ((unsigned __int16)v77 >> 12) ^ 4;
  v119 = 383 * (((v96 >> 8) & 0xF0 | v118) ^ 0xC0);
  v120 = *(unsigned __int8 *)(v63
                            + (v119
                                           + 105708
                                           - 969 * ((4432371 * (unint64_t)(v119 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v63 + (383 * v117 + 105708 - 969 * ((4432371 * (unint64_t)(383 * v117 + 105708)) >> 32))) ^ 0x1A)) ^ 0x1A;
  v121 = v119 + 270015 - 969 * ((4432371 * (unint64_t)(v119 + 270015)) >> 32);
  v122 = v106 & 0x17F;
  v120 *= 383;
  v123 = ((*(unsigned __int8 *)(v63
                              + (v120
                                             + 105708
                                             - 969 * ((4432371 * (unint64_t)(v120 + 105708)) >> 32))) ^ 0x1A) << 12) ^ ((v115 ^ 0x1A) << 8);
  v124 = *(unsigned __int8 *)(v63
                            + (v120
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v120 + 270015)) >> 32))) >> 4;
  v125 = ((((v124 ^ 1) + ((2 * ((v124 ^ 1 | 0x7A) ^ v124)) ^ 9) + 27) ^ *(unsigned __int8 *)(v63 + v121))
        + 276)
       * (v122 ^ 0x16F | v122 ^ 0x10);
  v126 = 383 * (((v96 >> 12) & 0xF0 | HIWORD(v77) & 0xF) ^ 0xE6);
  v127 = *(unsigned __int8 *)(v63
                            + (v126
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v126 + 270015)) >> 32)));
  v128 = 383
       * (*(unsigned __int8 *)(v63
                             + (v126
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v126 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v63 + (v125 - 969 * ((4432371 * (unint64_t)v125) >> 32))) ^ 0x1A)) ^ 0x1A);
  v129 = *(unsigned __int8 *)(v63
                            + (v128
                                           + 105708
                                           - 969 * ((4432371 * (unint64_t)(v128 + 105708)) >> 32))) ^ 0x1A;
  v130 = *(unsigned __int8 *)(v63
                            + (v128
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v128 + 270015)) >> 32))) >> 4;
  v131 = 383 * (((v130 ^ 1) + ((2 * ((v130 ^ 1 | 0x7A) ^ v130)) ^ 9) + 27) ^ v127) + 105708;
  v132 = 383 * ((HIWORD(v95) & 0xF0 | (v76 >> 20) & 0xF) ^ 0xB2);
  v133 = 383
       * (*(unsigned __int8 *)(v63
                             + (v132
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v132 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v63 + (v131 - 969 * ((4432371 * (unint64_t)v131) >> 32))) ^ 0x1A)) ^ 0x1A);
  v134 = (*(unsigned __int8 *)(v63
                             + (v133
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v133 + 105708)) >> 32))) ^ 0x1A) << 20;
  v135 = *(unsigned __int8 *)(v63
                            + (v133
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v133 + 270015)) >> 32)));
  v136 = (((v135 >> 4) ^ 1) - ((v135 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v63
                                                                                               + (v132 + 270015 - 969 * ((4432371 * (unint64_t)(v132 + 270015)) >> 32)));
  v137 = 383 * (((v95 >> 20) & 0xF0 | HIBYTE(v76) & 0xF) ^ 0x36);
  v138 = v134 ^ (v129 << 16);
  v139 = *(unsigned __int8 *)(v63
                            + (v137
                                           + 105708
                                           - 969 * ((4432371 * (unint64_t)(v137 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v63 + (383 * v136 + 105708 - 969 * ((4432371 * (unint64_t)(383 * v136 + 105708)) >> 32))) ^ 0x1A)) ^ 0x1A;
  v140 = 383 * v139 + 105708 - 969 * ((4432371 * (unint64_t)(383 * v139 + 105708)) >> 32);
  v141 = v140 + 1336090031 - ((2 * v140) & 0x35E);
  v142 = 383 * ((v141 & 0x2C1 ^ 0x81 | v141 & 0x2C1 ^ 0x240) + v139);
  v143 = *(unsigned __int8 *)(v63 + (v142 - 969 * ((4432371 * (unint64_t)v142) >> 32))) >> 4;
  v144 = 383
       * (((v143 ^ 1) + ((2 * ((v143 ^ 1 | 0x7A) ^ v143)) ^ 9) + 27) ^ *(unsigned __int8 *)(v63 + (v137 + 270015 - 969 * ((4432371 * (unint64_t)(v137 + 270015)) >> 32))))
       + 105708;
  v145 = 383 * ((HIBYTE(v95) & 0xF0 | ((-8 - v76) >> 28)) ^ 0xB0) + 105708;
  v146 = *(unsigned __int8 *)(v63 + v105) ^ 0x1A;
  v147 = v146 ^ (16 * (*(unsigned __int8 *)(v63 + v110) ^ 0x1A));
  v148 = 383
       * (*(unsigned __int8 *)(v63 + (v145 - 969 * ((4432371 * (unint64_t)v145) >> 32))) ^ (16 * (*(unsigned __int8 *)(v63 + (v144 - 969 * ((4432371 * (unint64_t)v144) >> 32))) ^ 0x1A)) ^ 0x1A)
       + 105708;
  v149 = v148 - 969 * ((4432371 * (unint64_t)v148) >> 32);
  v150 = 383 * (v97 & 0xFFFFFF0F | (16 * (v146 & 0xF))) + 6894;
  v151 = 383 * (v147 & 0xF0 | (v79 >> 4)) + 6894;
  v152 = 383 * (((v123 ^ v147) >> 4) & 0xF0 | (v79 >> 8) & 0xF) + 6894;
  v153 = 383 * ((v123 >> 8) & 0xF0 | v118) + 6894;
  v154 = v138 ^ v123 ^ v147;
  v155 = v154 ^ ((*(unsigned __int8 *)(v63 + (v141 ^ 0x4FA31DAFu)) ^ 0x1A) << 24);
  v156 = 383 * (((v154 >> 12) & 0xF0 | HIWORD(v77) & 0xF) ^ 6) + 6894;
  v157 = 383 * ((HIWORD(v138) & 0xF0 | (v76 >> 20) & 0xF) ^ 2) + 6894;
  v158 = v157 - 969 * ((4432371 * (unint64_t)v157) >> 32);
  v159 = v155 ^ ((*(unsigned __int8 *)(v63 + v149) ^ 0xAAAAAAAA) << 28);
  v160 = *(unsigned __int8 *)(v63 + (v150 - 969 * ((4432371 * (unint64_t)v150) >> 32)));
  v161 = v160 ^ (16
               * (*(unsigned __int8 *)(v63 + (v151 - 969 * ((4432371 * (unint64_t)v151) >> 32))) ^ 0x1A)) ^ 0x1A;
  v162 = v161 ^ ((*(unsigned __int8 *)(v63 + (v152 - 969 * ((4432371 * (unint64_t)v152) >> 32))) ^ 0x1A) << 8);
  v163 = v162 ^ ((*(unsigned __int8 *)(v63 + (v153 - 969 * ((4432371 * (unint64_t)v153) >> 32))) ^ 0x1A) << 12);
  v164 = v163 ^ ((*(unsigned __int8 *)(v63 + (v156 - 969 * ((4432371 * (unint64_t)v156) >> 32))) ^ 0x1A) << 16);
  v165 = 383 * (((v155 >> 20) & 0xF0 | HIBYTE(v76) & 0xF) ^ 6) + 6894;
  v166 = (HIBYTE(v159) & 0xF0 | ((-8 - v76) >> 28))
       - 758114517
       - 2 * ((HIBYTE(v159) & 0x30 | ((-8 - v76) >> 28) & 0x3B) ^ HIBYTE(v159) & 0x10);
  v167 = v164 ^ ((*(unsigned __int8 *)(v63 + v158) ^ 0x1A) << 20);
  v168 = v167 ^ ((*(unsigned __int8 *)(v63 + (v165 - 969 * ((4432371 * (unint64_t)v165) >> 32))) ^ 0x1A) << 24);
  v169 = *(unsigned __int8 *)(v63 + (383 * (v166 ^ 0xD2D0172B) + 6894) % 0x3C9) ^ 0xA;
  v170 = ((((v169 << 28) - ((v169 & 3) << 29) - 1149924201) ^ v168) >> 28) ^ 0xB;
  v171 = ((v166 & 0x7F ^ 0x154) + (v166 & 0x7F ^ 0x2B)) * ((v167 >> 20) & 0xF);
  v172 = ((((*(unsigned __int8 *)(v63
                                + (unsigned __int16)(383 * (HIBYTE(v168) & 0xF)
                                                   - 969
                                                   * ((unsigned __int16)((1658007 * (HIBYTE(v168) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v63 + (unsigned __int16)(383 * v170 - 969 * ((unsigned __int16)((1658007 * v170) >> 16) >> 6))) ^ 0x1A) << 12) | *(unsigned __int8 *)(v63 + (unsigned __int16)(383 * (BYTE2(v164) & 0xF) - 969 * ((unsigned __int16)((1658007 * (HIWORD(v164) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v63 + (unsigned __int16)(v171 - 969 * ((unsigned __int16)((4329 * v171) >> 16) >> 6))) ^ 0x1A) << 12);
  v173 = v59 ^ v54 ^ LODWORD(STACK[0x648]) ^ 0x24FC5AD9;
  LODWORD(STACK[0x848]) = LODWORD(STACK[0x660]) ^ LODWORD(STACK[0x658]) ^ (16
                                                                         * (*(unsigned __int8 *)(v63
                                                                                               + (unsigned __int16)(383 * (v161 >> 4) - 969 * ((unsigned __int16)((1658007 * (v161 >> 4)) >> 16) >> 6))) ^ 0x1A)) ^ 0x644A16CE ^ (((v172 | *(unsigned __int8 *)(v63 + (unsigned __int16)(383 * ((v162 >> 8) & 0xF) - 969 * ((unsigned __int16)((1658007 * ((v162 >> 8) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v63 + (unsigned __int16)(383 * ((unsigned __int16)v163 >> 12) - 969 * ((unsigned __int16)((1658007 * ((unsigned __int16)v163 >> 12)) >> 16) >> 6))) ^ 0x1A) << 12) | *(unsigned __int8 *)(v63 + (unsigned __int16)(383 * (v160 & 0xF ^ 0xA) - 969 * ((unsigned __int16)((1658007 * (v160 & 0xF ^ 0xAu)) >> 16) >> 6))) ^ 0x1A);
  v174 = STACK[0x650];
  LODWORD(STACK[0x9B8]) = v173;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x690] + 8 * ((1047 * (LODWORD(STACK[0x678]) == -47)) ^ v174)) - 4))();
}

void sub_1CF2E6790()
{
  int v0;

  LODWORD(STACK[0x63C]) = -902845178 - v0;
  JUMPOUT(0x1CF2E5294);
}

uint64_t sub_1CF2E67DC(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  int v42;
  unsigned int v43;
  int v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  unsigned int v53;
  int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  __int16 v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  int v132;
  int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  int v144;
  int v145;
  unsigned int v146;
  int v147;
  int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  int v161;
  unsigned int v162;
  int v163;
  int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  int v184;
  int v185;
  unsigned int v186;
  int v187;
  int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  unsigned int v202;
  int v203;
  int v204;
  unsigned int v205;
  unsigned int v206;
  int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  int v212;
  int v213;
  unsigned int v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  int v218;
  unsigned int v219;
  int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  int v225;
  int v226;
  int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  int v231;
  int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  int v237;
  int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  unsigned int v251;
  int v252;
  int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  int v257;
  int v258;
  int v259;
  unsigned int v260;
  int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  unsigned int v274;
  unsigned int v275;
  int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  int v280;
  unsigned int v281;
  unsigned int v282;
  int v283;
  unsigned int v284;
  unsigned int v285;
  int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  int v294;
  unsigned int v295;
  int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  int v301;
  unsigned int v302;
  int v303;
  unsigned int v304;
  int v305;
  unsigned int v306;
  unsigned int v307;
  int v308;
  int v309;
  int v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  int v314;
  int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  int v320;
  int v321;
  int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  int v327;
  int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  int v332;
  unsigned int v333;
  int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  int v338;
  int v339;
  unsigned int v340;
  int v341;
  unsigned int v342;
  unsigned int v343;
  unsigned int v344;
  int v345;
  int v346;
  int v347;
  int v348;
  int v349;
  int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  unsigned int v356;
  unsigned int v357;
  unsigned int v358;
  unsigned int v359;
  unsigned int v360;
  unsigned int v361;
  unsigned int v362;
  int v363;
  unsigned int v364;
  int v365;
  int v366;
  unsigned int v367;
  int v368;
  unsigned int v369;
  unsigned int v370;
  unsigned int v371;
  unsigned int v372;
  int v373;
  int v374;
  int v375;
  int v376;
  int v377;
  unsigned int v378;
  unsigned int v379;
  unsigned int v380;
  int v381;
  int v382;
  unsigned int v383;
  unsigned int v384;
  unsigned int v385;
  unsigned int v386;
  int v387;
  int v388;
  unsigned int v389;
  unsigned int v390;
  unsigned int v391;
  unsigned int v392;
  unsigned int v393;
  unsigned int v394;
  int v395;
  unsigned int v396;
  unsigned int v397;
  int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  int v408;
  unsigned int v409;
  unsigned int v410;
  int v411;
  unsigned int v412;
  int v413;
  unsigned int v414;
  unsigned int v415;
  int v416;
  unsigned int v417;
  unsigned int v418;
  int v419;
  int v420;
  int v421;
  int v422;
  int v423;
  unsigned int v424;
  unsigned int v425;
  int v426;
  int v427;
  int v428;
  unsigned int v429;
  unsigned int v430;
  int v431;
  int v432;
  unsigned int v433;
  unsigned int v434;
  int v435;
  unsigned int v436;
  int v437;
  unsigned int v438;
  int v439;
  int v440;
  int v441;
  int v442;
  unsigned int v443;
  unsigned int v444;
  int v445;
  int v446;
  int v447;
  unsigned int v448;
  unsigned int v449;
  int v450;
  unsigned int v451;
  int v452;
  int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  int v457;
  unsigned int v458;
  int v459;
  unsigned int v460;
  int v461;
  unsigned int v462;
  unsigned int v463;
  int v464;
  int v465;
  unsigned int v466;
  int v467;
  unsigned int v468;
  unsigned int v469;
  int v470;
  int v471;
  int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  unsigned int v476;
  unsigned int v477;
  unsigned int v478;
  unsigned int v479;
  unsigned int v480;
  unsigned int v481;
  unsigned int v482;
  unsigned int v483;
  unsigned int v484;
  unsigned int v485;
  unsigned int v486;
  unsigned int v487;
  unsigned int v488;
  int v489;
  int v490;
  unsigned int v491;
  int v492;
  unsigned int v493;
  unsigned int v494;
  unsigned int v495;
  unsigned int v496;
  int v497;
  int v498;
  int v499;
  int v500;
  unsigned int v501;
  int v502;
  int v503;
  unsigned int v504;
  unsigned int v505;
  int v506;
  unsigned int v507;
  unsigned int v508;
  unsigned int v509;
  int v510;
  unsigned int v511;
  unsigned int v512;
  int v513;
  unsigned int v514;
  unsigned int v515;
  int v516;
  unsigned int v517;
  uint64_t v518;
  unint64_t v519;
  unsigned int v520;
  unsigned int v521;
  unsigned int v522;
  unint64_t v523;
  unsigned int v524;
  int v525;
  unsigned int v526;
  int v527;
  int v528;
  unsigned int v529;
  int v530;
  unsigned int v531;
  unsigned int v532;
  int v533;
  unsigned int v534;
  unsigned int v535;
  unsigned int v536;
  unsigned int v537;
  unsigned int v538;
  int v539;
  unsigned int v540;
  unsigned int v541;
  unsigned int v542;
  unsigned int v543;
  unsigned int v544;
  int v545;
  unsigned int v546;
  int v547;
  unsigned int v548;
  unsigned int v549;
  int v550;
  unsigned int v551;
  unsigned int v552;
  int v553;
  unsigned int v554;
  int v555;
  unsigned int v556;
  unsigned int v557;
  unsigned int v558;
  unsigned int v559;
  int v560;
  unsigned int v561;
  unsigned int v562;
  unint64_t v563;
  unsigned int v564;
  int v565;
  unsigned int v566;
  int v567;
  unsigned int v568;
  unsigned int v569;
  unsigned int v570;
  unsigned int v571;
  unsigned int v572;
  unsigned int v573;
  int v574;
  int v575;
  unsigned int v576;
  int v577;
  unsigned int v578;
  unsigned int v579;
  unsigned int v580;
  unsigned int v581;
  unsigned int v582;
  int v583;
  unsigned int v584;
  int v585;
  unsigned int v586;
  int v587;
  unsigned int v588;
  unsigned int v589;
  unsigned int v590;
  unsigned int v591;
  int v592;
  unsigned int v593;
  unsigned int v594;
  int v595;
  int v596;
  int v597;
  unsigned int v598;
  int v599;
  int v600;
  unsigned int v601;
  int v602;
  int v603;
  int v604;
  int v605;
  unsigned int v606;
  unsigned int v607;
  int v608;
  int v609;
  int v610;
  unsigned int v611;
  int v612;
  int v613;
  int v614;
  int v615;
  int v616;
  unsigned int v617;
  int v618;
  unsigned int v619;
  unsigned int v620;
  int v621;
  unsigned int v622;
  unsigned int v623;
  int v624;
  unsigned int v625;
  unsigned int v626;
  int v627;
  unsigned int v628;
  unsigned int v629;
  unsigned int v630;
  int v631;
  unsigned int v632;
  int v633;
  int v634;
  int v635;
  unsigned int v636;
  unsigned int v637;
  int v638;
  unsigned int v639;
  int v640;
  unsigned int v641;
  unsigned int v642;
  unsigned int v643;
  unsigned int v644;
  unsigned int v645;
  unsigned int v646;
  int v647;
  int v648;
  unsigned int v649;
  int v650;
  unsigned int v651;
  unsigned int v652;
  int v653;
  int v654;
  unsigned int v655;
  unsigned int v656;
  int v657;
  unsigned int v658;
  int v659;
  unsigned int v660;
  int v661;
  unsigned int v662;
  unsigned int v663;
  unsigned int v664;
  unsigned int v665;
  unsigned int v666;
  unsigned int v667;
  unsigned int v668;
  unsigned int v669;
  int v670;
  unsigned int v671;
  unsigned int v672;
  int v673;
  unsigned int v674;
  int v675;
  unsigned int v676;
  int v677;
  int v678;
  int v679;
  unsigned int v680;
  int v681;
  int v682;
  unsigned int v683;
  int v684;
  int v685;
  int v686;
  unsigned int v687;
  unsigned int v688;
  int v689;
  int v690;
  unsigned int v691;
  unsigned int v692;
  int v693;
  unsigned int v694;
  unsigned int v695;
  int v696;
  int v697;
  unsigned int v698;
  unsigned int v699;
  int v700;
  int v701;
  unsigned int v702;
  unsigned int v703;
  unsigned int v704;
  int v705;
  int v706;
  int v707;
  unsigned int v708;
  int v709;
  unsigned int v710;
  unsigned int v711;
  int v712;
  int v713;
  int v714;
  int v715;
  int v716;
  int v717;
  unsigned int v718;
  unsigned int v719;
  unsigned int v720;
  unsigned int v721;
  int v722;
  unsigned int v723;
  int v724;
  unsigned int v725;
  unsigned int v726;
  unsigned int v727;
  unsigned int v728;
  unsigned int v729;
  unsigned int v730;
  unsigned int v731;
  unsigned int v732;
  int v733;
  unsigned int v734;
  unsigned int v735;
  unsigned int v736;
  unsigned int v737;
  int v738;
  int v739;
  int v740;
  int v741;
  int v742;
  int v743;
  int v744;
  int v745;
  int v746;
  unsigned int v747;
  unsigned int v748;
  unsigned int v749;
  unsigned int v750;
  int v751;
  unsigned int v752;
  unsigned int v753;
  int v754;
  int v755;
  unsigned int v756;
  int v757;
  unsigned int v758;
  unsigned int v759;
  unsigned int v760;
  int v761;
  unsigned int v762;
  int v763;
  int v764;
  int v765;
  unsigned int v766;
  unsigned int v767;
  unsigned int v768;
  unsigned int v769;
  int v770;
  int v771;
  int v772;
  int v773;
  int v774;
  int v775;
  int v776;
  int v777;
  unsigned int v778;
  int v779;
  int v780;
  int v781;
  int v782;
  unsigned int v783;
  int v784;
  int v785;
  int v786;
  int v787;
  int v788;
  unsigned int v789;
  unsigned int v790;
  unsigned int v791;
  int v792;
  int v793;
  int v794;
  int v795;
  int v796;
  unsigned int v797;
  int v798;
  int v799;
  unsigned int v800;
  int v801;
  unsigned int v802;
  int v803;
  unsigned int v804;
  unsigned int v805;
  unsigned int v806;
  int v807;
  int v808;
  unint64_t v809;
  unsigned int v810;
  int v811;
  int v812;
  unsigned int v813;
  int v814;
  int v815;
  int v816;
  int v817;
  int v818;
  int v819;
  int v820;
  unsigned int v821;
  unsigned int v822;
  int v823;
  int v824;
  int v825;
  unsigned int v826;
  int v827;
  int v828;
  unsigned int v829;
  unsigned int v830;
  unsigned int v831;
  int v832;
  int v833;
  unsigned int v834;
  int v835;
  unsigned int v836;
  int v837;
  unsigned int v838;
  unsigned int v839;
  unsigned int v840;
  unsigned int v841;
  unsigned int v842;
  unsigned int v843;
  unsigned int v844;
  unsigned int v845;
  int v846;
  int v847;
  int v848;
  int v849;
  unsigned int v850;
  int v851;
  int v852;
  int v853;
  int v854;
  unsigned int v855;
  unsigned int v856;
  unsigned int v857;
  int v858;
  unsigned int v859;
  int v860;
  unsigned int v861;
  unsigned int v862;
  unsigned int v863;
  unsigned int v864;
  unsigned int v865;
  int v866;
  int v867;
  unsigned int v868;
  unsigned int v869;
  int v870;
  unsigned int v871;
  unsigned int v872;
  unsigned int v873;
  unsigned int v874;
  unsigned int v875;
  unsigned int v876;
  unsigned int v877;
  unsigned int v878;
  unsigned int v879;
  unsigned int v880;
  unint64_t v881;
  int v882;
  unsigned int v883;
  unsigned int v884;
  int v885;
  unsigned int v886;
  unsigned int v887;
  unsigned int v888;
  unsigned int v889;
  unsigned int v890;
  unsigned int v891;
  unsigned int v892;
  unsigned int v893;
  int v894;
  int v895;
  int v896;
  unsigned int v897;
  unsigned int v898;
  int v899;
  unsigned int v900;
  unsigned int v901;
  int v902;
  unsigned int v903;
  int v904;
  int v905;
  int v906;
  unsigned int v907;
  int v908;
  unsigned int v909;
  unsigned int v910;
  int v911;
  int v912;
  int v913;
  unsigned int v914;
  int v915;
  int v916;
  unsigned int v917;
  int v918;
  int v919;
  int v920;
  unsigned int v921;
  int v922;
  unsigned int v923;
  unsigned int v924;
  unsigned int v925;
  unsigned int v926;
  unsigned int v927;
  unsigned int v928;
  int v929;
  unsigned int v930;
  unsigned int v931;
  unsigned int v932;
  int v933;
  unsigned int v934;
  unsigned int v935;
  int v936;
  unsigned int v937;
  unsigned int v938;
  int v939;
  int v940;
  unsigned int v941;
  unsigned int v942;
  unsigned int v943;
  int v944;
  unsigned int v945;
  unsigned int v946;
  unsigned int v947;
  unsigned int v948;
  int v949;
  int v950;
  unsigned int v951;
  int v952;
  unsigned int v953;
  int v954;
  unsigned int v955;
  unsigned int v956;
  int v957;
  unsigned int v958;
  unsigned int v959;
  int v960;
  unsigned int v961;
  int v962;
  unsigned int v963;
  int v964;
  unsigned int v965;
  unsigned int v966;
  int v967;
  int v968;
  int v969;
  unsigned int v970;
  unsigned int v971;
  int v972;
  int v973;
  int v974;
  unsigned int v975;
  int v976;
  int v977;
  unsigned int v978;
  unint64_t v979;
  int v980;
  int v981;
  int v982;
  int v983;
  int v984;
  unsigned int v985;
  int v986;
  unsigned int v987;
  unsigned int v988;
  int v989;
  unsigned int v990;
  int v991;
  unsigned int v992;
  int v993;
  int v994;
  unsigned int v995;
  int v996;
  int v997;
  unsigned int v998;
  int v999;
  unsigned int v1000;
  int v1001;
  unsigned int v1002;
  int v1003;
  int v1004;
  unsigned int v1005;
  unsigned int v1006;
  unsigned int v1007;
  unsigned int v1008;
  unsigned int v1009;
  unsigned int v1010;
  unsigned int v1011;
  unsigned int v1012;
  unsigned int v1013;
  unsigned int v1014;
  unsigned int v1015;
  unsigned int v1016;
  int v1017;
  int v1018;
  unsigned int v1019;
  int v1020;
  unsigned int v1021;
  unsigned int v1022;
  unsigned int v1023;
  unsigned int v1024;
  int v1025;
  int v1026;
  int v1027;
  int v1028;
  int v1029;
  int v1030;
  int v1031;
  unsigned int v1032;
  unsigned int v1033;
  int v1034;
  int v1035;
  unsigned int v1036;
  int v1037;
  unsigned int v1038;
  unsigned int v1039;
  int v1040;
  int v1041;
  int v1042;
  int v1043;
  int v1044;
  int v1045;
  unsigned int v1046;
  unsigned int v1047;
  unsigned int v1048;
  unsigned int v1049;
  unsigned int v1050;
  unsigned int v1051;
  int v1052;
  unsigned int v1053;
  unsigned int v1054;
  int v1055;
  unsigned int v1056;
  unsigned int v1057;
  unsigned int v1058;
  unsigned int v1059;
  unsigned int v1060;
  int v1061;
  int v1062;
  unsigned int v1063;
  int v1064;
  unsigned int v1065;
  unsigned int v1066;
  unsigned int v1067;
  unsigned int v1068;
  int v1069;
  int v1070;
  int v1071;
  unsigned int v1072;
  int v1073;
  unsigned int v1074;
  unsigned int v1075;

  LODWORD(STACK[0x64C]) = v20 ^ 0x300DC61E;
  LODWORD(STACK[0x670]) = v14 + v13 - 1619120145;
  LODWORD(STACK[0x648]) = v13 + v12;
  v21 = ((2 * (v13 - 942070175)) & 0xFE65EEBE) + ((v13 - 942070175) ^ 0xFF32F75F);
  LODWORD(STACK[0x668]) = v21;
  v22 = v14 + v13 - 1964241577;
  LODWORD(STACK[0x650]) = v22;
  v23 = v22 ^ (v13 + v12);
  LODWORD(STACK[0x658]) = v23;
  v21 += 13437089;
  LODWORD(STACK[0x640]) = v21;
  v24 = (v20 ^ 0x300DC61E) + v23 + v21;
  LODWORD(STACK[0x63C]) = v24;
  v25 = LODWORD(STACK[0x438]) - 19202626 + v24 - ((2 * (LODWORD(STACK[0x438]) - 19202626 + v24)) & 0xFD4932FE);
  v26 = (((v25 - 22767233) >> 24) & 0xF ^ 0xE) * v19 + 232481;
  v27 = v26 - ((4432371 * (unint64_t)v26) >> 32) * v17;
  v28 = (((v25 - 22767233) >> 20) & 0xF ^ 0xA) * v19 + 232481;
  v29 = v28 - ((4432371 * (unint64_t)v28) >> 32) * v17;
  v30 = (((v25 - 22767233) >> 16) & 0xF ^ 4) * v19 + 232481;
  v31 = LOBYTE(STACK[0xFBA]) ^ 0x1A;
  v32 = (32 * v31) & 0xFFFFF0FF;
  v33 = v30 - ((4432371 * (unint64_t)v30) >> 32) * v17;
  LODWORD(STACK[0x500]) = 16 * v31;
  v34 = 16 * v31 + 1784866936;
  v35 = (((unsigned __int16)(v25 - 26241) >> 12) ^ 9) * v19 + 232481;
  v36 = v34 - v32;
  v37 = v35 - ((4432371 * (unint64_t)v35) >> 32) * v17;
  LODWORD(STACK[0x634]) = v25 - 22767233;
  v38 = (((v25 - 22767233) >> 8) & 0xF ^ 9) * v19 + 232481;
  v39 = a4 - 2119540083 + (a8 ^ 0xCFAFF1AE) + 61516799 - ((2 * (a4 - 2119540083 + (a8 ^ 0xCFAFF1AE))) & 0x75557FE);
  v40 = v16 ^ 0x363FB0C ^ v39;
  LODWORD(STACK[0x638]) = v40;
  LODWORD(STACK[0x660]) = v16;
  v42 = a4 - 551283262 + a2;
  v43 = (((v25 + 127) >> 4) ^ 7) * v19 + 232481;
  v44 = v42 + v40;
  v45 = STACK[0x688];
  v46 = *(unsigned __int8 *)(STACK[0x688]
                           + (((22767232 - v25) >> 28) * v19
                                          + 232481
                                          - ((4432371 * (unint64_t)(((22767232 - v25) >> 28) * v19 + 232481)) >> 32)
                                          * v17));
  v47 = ((112 - (_BYTE)v25) & 0xF) * v19 + 232481;
  v48 = LODWORD(STACK[0x450]) - v44 - ((2 * (LODWORD(STACK[0x450]) - v44) + 1734798838) & 0x44781366) - 1779466066;
  v49 = ((*(unsigned __int8 *)(STACK[0x688] + v27) ^ 0x1A) << 8) ^ ((v46 ^ 0x1A) << 12) | *(unsigned __int8 *)(STACK[0x688] + v33) ^ 0x1A;
  v50 = (HIBYTE(v48) & 0xF ^ 2) * v19 + 232481;
  v51 = (v49 << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + v29) ^ 0x1A) << 12);
  v52 = *(unsigned __int8 *)(STACK[0x688] + (v38 - ((4432371 * (unint64_t)v38) >> 32) * v17));
  v53 = ((v48 >> 20) & 0xF ^ 3) * v19 + 232481;
  v54 = *(unsigned __int8 *)(STACK[0x688] + (v43 - ((4432371 * (unint64_t)v43) >> 32) * v17));
  v55 = *(unsigned __int8 *)(STACK[0x688] + v37) ^ 0x1A;
  v56 = (HIWORD(v48) & 0xF ^ 0xC) * v19 + 232481;
  v57 = ((v51 | v52 ^ 0x1A) << 8) - 174372305 - (((v51 | v52 ^ 0x1A) << 9) & 0xEB369400);
  LODWORD(STACK[0x628]) = v57;
  v58 = v57 ^ (v55 << 12);
  v59 = *(unsigned __int8 *)(v45 + (v47 - ((4432371 * (unint64_t)v47) >> 32) * v17)) ^ 0x1A;
  v60 = ((v48 >> 8) & 0xF ^ 9) * v19 + 232481;
  v61 = v60 - ((4432371 * (unint64_t)v60) >> 32) * v17;
  v62 = *(unsigned __int8 *)(v45 + (v53 - ((4432371 * (unint64_t)v53) >> 32) * v17)) ^ 0x1A;
  v63 = ((v48 >> 4) ^ 0xB) * v19 + 232481;
  v64 = (v58 ^ 0xF59B4A2F | v59) ^ (16 * (v54 ^ 0x1A));
  v65 = ((*(unsigned __int8 *)(v45 + (v50 - ((4432371 * (unint64_t)v50) >> 32) * v17)) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (((v48 >> 28) ^ 2) * v19 + 232481 - ((4432371 * (unint64_t)(((v48 >> 28) ^ 2) * v19 + 232481)) >> 32) * v17)) ^ 0x1A) << 12) | *(unsigned __int8 *)(v45 + (v56 - ((4432371 * (unint64_t)v56) >> 32) * v17)) ^ 0x1A;
  v66 = v63 - ((4432371 * (unint64_t)v63) >> 32) * v17;
  v67 = *(unsigned __int8 *)(v45
                           + (((unsigned __int16)v48 >> 12) * v19
                                          + 232481
                                          - ((4432371
                                            * (unint64_t)(((unsigned __int16)v48 >> 12) * v19
                                                               + 232481)) >> 32)
                                          * v17));
  v68 = (v48 & 0xF ^ 3) * v19 + 232481;
  v69 = (v65 << 8) ^ (v62 << 12);
  v70 = *(unsigned __int8 *)(v45 + (v68 - ((4432371 * (unint64_t)v68) >> 32) * v17));
  LODWORD(STACK[0x624]) = v59 & 0xF;
  v70 ^= 0x1Au;
  v71 = (v59 & 0xF | (16 * (v70 & 0xF))) * v19;
  v72 = *(unsigned __int8 *)(v45
                           + (v71
                                          + 105708
                                          - ((4432371 * (unint64_t)(v71 + 105708)) >> 32) * v17));
  v73 = *(unsigned __int8 *)(v45
                           + (v71
                                          + 270015
                                          - ((4432371 * (unint64_t)(v71 + 270015)) >> 32) * v17));
  v74 = (((v72 ^ 0x1A) + 1784866936 + (~(2 * (v72 ^ 0x1A)) | 0xFFFFFF0F) + 1) ^ v36) * v19;
  LODWORD(STACK[0x62C]) = v74;
  v75 = ((((*(_BYTE *)(v45
                                      + v74
                                      + 270015
                                      - ((((v74 + 270015) * (unint64_t)v18) >> 32) >> 9) * v17) >> 4) ^ 1)
                         - ((*(_BYTE *)(v45
                                      + v74
                                      + 270015
                                      - ((((v74 + 270015) * (unint64_t)v18) >> 32) >> 9) * v17) >> 3) & 0x14)
                         + 26) ^ v73)
      * v19
      + 105708;
  v76 = *(unsigned __int8 *)(v45 + v66) ^ 0x1A;
  v77 = v69 | *(unsigned __int8 *)(v45 + v61) ^ 0x1A;
  v78 = (v77 << 8) + 654944579 - ((v77 << 9) & 0x4E135200);
  LODWORD(STACK[0x600]) = v78;
  v79 = v78 ^ ((v67 ^ 0x1A) << 12);
  LODWORD(STACK[0x5F8]) = v79;
  v80 = (v79 ^ 0x2709A943 | v70) ^ (16 * v76);
  LODWORD(STACK[0x610]) = v64;
  v81 = (v80 & 0xF0 | (v64 >> 4)) * v19;
  v82 = (*(unsigned __int8 *)(v45
                            + (v81
                                           + 105708
                                           - ((4432371 * (unint64_t)(v81 + 105708)) >> 32) * v17)) ^ (16 * (*(unsigned __int8 *)(v45 + (v75 - ((4432371 * (unint64_t)v75) >> 32) * v17)) ^ 0x1A)) ^ 0x1A)
      * v19;
  LODWORD(STACK[0x5FC]) = v82;
  v83 = *(unsigned __int8 *)(v45
                           + (v82
                                          + 270015
                                          - ((4432371 * (unint64_t)(v82 + 270015)) >> 32) * v17));
  v84 = ((((v83 >> 4) ^ 1) + (~(v83 >> 3) | 0xEB) + 27) ^ *(unsigned __int8 *)(v45 + (v81 + 270015 - ((4432371 * (unint64_t)(v81 + 270015)) >> 32) * v17)))
      * v19
      + 105708;
  v85 = ((v80 >> 4) & 0xF0 | (v64 >> 8) & 0xF) * v19;
  v86 = *(unsigned __int8 *)(v45
                           + (v85
                                          + 105708
                                          - ((4432371 * (unint64_t)(v85 + 105708)) >> 32) * v17));
  v87 = *(unsigned __int8 *)(v45
                           + (v85
                                          + 270015
                                          - ((4432371 * (unint64_t)(v85 + 270015)) >> 32) * v17));
  v88 = (v86 ^ (16
              * (*(unsigned __int8 *)(v45 + (v84 - ((4432371 * (unint64_t)v84) >> 32) * v17)) ^ 0x1A)) ^ 0x1A)
      * v19;
  LODWORD(STACK[0x5F4]) = v88;
  v89 = *(unsigned __int8 *)(v45
                           + (v88
                                          + 270015
                                          - ((4432371 * (unint64_t)(v88 + 270015)) >> 32) * v17)) >> 4;
  v90 = (((v89 ^ 1) + ((2 * ((v89 ^ 1 | 0x7A) ^ v89)) ^ 9) + 27) ^ v87) * v19 + 105708;
  LODWORD(STACK[0x5F0]) = v58;
  v91 = (((v79 >> 8) & 0xF0 | ((unsigned __int16)v58 >> 12)) ^ 0xA4) * v19;
  LODWORD(STACK[0x5EC]) = v91;
  v92 = (*(unsigned __int8 *)(v45
                            + (v91
                                           + 105708
                                           - ((4432371 * (unint64_t)(v91 + 105708)) >> 32) * v17)) ^ (16 * (*(unsigned __int8 *)(v45 + (v90 - ((4432371 * (unint64_t)v90) >> 32) * v17)) ^ 0x1A)) ^ 0x1A)
      * v19;
  LODWORD(STACK[0x5E4]) = v92;
  LODWORD(STACK[0x5E8]) = (v92 + 105708) % (((v58 >> 12) & 9 ^ v17) + ((v58 >> 12) & 9));
  v93 = (v15 + 2136202216) ^ 0x3AAABFF ^ v39;
  LODWORD(STACK[0x620]) = v93;
  v44 += 1233357038;
  v94 = v44 + (v39 ^ 0x3AAABFF);
  LODWORD(STACK[0x5D8]) = v94;
  LODWORD(STACK[0x60C]) = v94 + v93;
  v95 = v44 - (v94 + v93);
  LODWORD(STACK[0x5D4]) = v95;
  v96 = ((2 * v95) & 0x7FF5B9DE ^ 0xCE5A05C) + (v95 ^ 0x798C2DD1);
  LODWORD(STACK[0x61C]) = v96;
  v97 = LODWORD(STACK[0x46C]) - v96 - ((2 * (LODWORD(STACK[0x46C]) - v96) + 1825897972) & 0x8A2F81A4) + 2072133580;
  LODWORD(STACK[0x5B0]) = v97;
  LODWORD(STACK[0x5BC]) = ((((unsigned __int16)v97 >> 12) ^ 0xCu) * v19 + 232481)
                        % ((715409587
                          * ((((((unsigned __int16)v97 >> 12) ^ 0xC) * v19 + 3105) & 0x2793 ^ 0xC68C2793)
                           + (((((unsigned __int16)v97 >> 12) ^ 0xC) * v19 + 101409) & 0x12793))) | 0x101);
  v98 = ((2 * (LODWORD(STACK[0x640]) ^ LODWORD(STACK[0x650]))) & 0xFFDBBB8E)
      + (LODWORD(STACK[0x640]) ^ LODWORD(STACK[0x650]) ^ 0xFFEDDDC7);
  LODWORD(STACK[0x640]) = v98;
  v99 = 343933023 - LODWORD(STACK[0x670]) - v98;
  LODWORD(STACK[0x580]) = v99;
  v100 = ((2 * v99) & 0xF2FDDEFC ^ 0x80EDC27C) + (v99 ^ 0x3F081E40);
  LODWORD(STACK[0x588]) = v100;
  v101 = v100 + LODWORD(STACK[0x444]) - ((2 * (v100 + LODWORD(STACK[0x444])) + 1513334340) & 0xFDE2A662);
  LODWORD(STACK[0x584]) = v101;
  LODWORD(STACK[0x650]) = v101 - 1408555437;
  v102 = ((v101 - 1408555437) & 0xF ^ 1) * v19 + 232481;
  v103 = *(unsigned __int8 *)(v45 + (v102 - ((4432371 * (unint64_t)v102) >> 32) * v17)) ^ 0x1A;
  LODWORD(STACK[0x5B8]) = v103;
  v104 = *(unsigned __int8 *)(v45
                            + ((v97 & 0xF ^ 2) * v19
                                           + 232481
                                           - ((4432371 * (unint64_t)((v97 & 0xF ^ 2) * v19 + 232481)) >> 32)
                                           * v17)) ^ 0x1A;
  LODWORD(STACK[0x5C8]) = v104;
  v105 = ((16 * v104) | v103 & 0xF) * v19;
  LODWORD(STACK[0x598]) = v105;
  v106 = *(unsigned __int8 *)(v45
                            + (v105
                                           + 105708
                                           - ((4432371 * (unint64_t)(v105 + 105708)) >> 32) * v17)) ^ 0x1A;
  v107 = v36;
  LODWORD(STACK[0x678]) = v36;
  v108 = ((v106 + 1784866936 - ((2 * v106) & 0xF0)) ^ v36) * v19;
  LODWORD(STACK[0x5AC]) = v108;
  LODWORD(STACK[0x594]) = (v108 + 270015) % (((v108 + 270015) & v17) + ((320 - v108) & v17));
  v109 = LODWORD(STACK[0x44C])
       - 989054623
       + LODWORD(STACK[0x64C])
       - ((2 * (LODWORD(STACK[0x44C]) - 989054623 + LODWORD(STACK[0x64C]))) & 0x3075DCF8)
       + 406515324;
  v110 = ((v109 >> 28) ^ 1) * v19
       + 232481
       - ((4432371 * (unint64_t)(((v109 >> 28) ^ 1) * v19 + 232481)) >> 32) * v17;
  v111 = (HIBYTE(v109) & 0xF ^ 8) * v19 + 232481;
  v112 = v111 - ((4432371 * (unint64_t)v111) >> 32) * v17;
  v113 = ((v109 >> 20) & 0xF ^ 3) * v19 + 232481;
  v114 = v113 - ((4432371 * (unint64_t)v113) >> 32) * v17;
  v115 = (HIWORD(v109) & 0xF ^ 0xA) * v19 + 232481;
  v116 = v115 - ((4432371 * (unint64_t)v115) >> 32) * v17;
  v117 = (((unsigned __int16)(LOWORD(STACK[0x44C])
                            + 14689
                            + LOWORD(STACK[0x64C])
                            - ((2 * (LOWORD(STACK[0x44C]) + 14689 + LOWORD(STACK[0x64C]))) & 0xDCF8)
                            - 4484) >> 12) ^ 0xE)
       * v19
       + 232481;
  v118 = v117 - ((4432371 * (unint64_t)v117) >> 32) * v17;
  v119 = ((v109 >> 8) & 0xF ^ 0xE) * v19 + 232481;
  v120 = v119 - ((4432371 * (unint64_t)v119) >> 32) * v17;
  v121 = (((LOBYTE(STACK[0x44C])
                           + 97
                           + LOBYTE(STACK[0x64C])
                           - ((2 * (LOBYTE(STACK[0x44C]) + 97 + LOBYTE(STACK[0x64C]))) & 0xF8)
                           + 124) >> 4) ^ 7)
       * v19
       + 232481;
  v122 = v121 - ((4432371 * (unint64_t)v121) >> 32) * v17;
  v123 = v109;
  LODWORD(STACK[0x630]) = v109;
  v124 = (v109 & 0xF ^ 0xC) * v19
       + 232481
       - ((4432371 * (unint64_t)((v109 & 0xF ^ 0xC) * v19 + 232481)) >> 32) * v17;
  v125 = LODWORD(STACK[0x454])
       - a2
       - 2 * ((LODWORD(STACK[0x454]) - a2 + 975477440) & 0x6053CD27 ^ (LODWORD(STACK[0x454]) - a2) & 4)
       + 444098531;
  v126 = ((v125 >> 28) ^ 6) * v19
       + 232481
       - ((4432371 * (unint64_t)(((v125 >> 28) ^ 6) * v19 + 232481)) >> 32) * v17;
  v127 = (HIBYTE(v125) & 0xF) * v19
       + 232481
       - ((4432371 * (unint64_t)((HIBYTE(v125) & 0xF) * v19 + 232481)) >> 32) * v17;
  v128 = ((*(unsigned __int8 *)(v45 + v112) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + v110) ^ 0x1A) << 12) ^ (16 * (*(unsigned __int8 *)(v45 + v114) ^ 0x1A));
  v129 = 383 * ((v125 >> 20) & 0xF ^ 5) + 232481;
  v130 = v129 - ((4432371 * (unint64_t)v129) >> 32) * v17;
  v131 = 383 * (HIWORD(v125) & 0xF ^ 3) + 232481;
  v132 = v131 - ((4432371 * (unint64_t)v131) >> 32) * v17;
  v133 = v132 - 1243686708 - ((2 * v132) & 0x198);
  v134 = 383 * (((unsigned __int16)v125 >> 12) ^ 0xC) + 231512;
  v135 = (LODWORD(STACK[0x494]) + 2) & 0x1E;
  v136 = 383 * (((v125 >> 8) ^ 0xD) & (v135 + (v135 ^ 0x1E) + 17) & (v133 & 0x1F ^ 0xC | v133 & 0x1F ^ 0x13)) + 232481;
  v137 = v136 - 969 * ((4432371 * (unint64_t)v136) >> 32);
  v138 = *(unsigned __int8 *)(v45 + v116) ^ 0x1A ^ v128;
  v139 = 383 * ((v125 >> 4) ^ 2) + 232481;
  v140 = v139 - 969 * ((4432371 * (unint64_t)v139) >> 32);
  v141 = (v123 & 0x17F ^ 0x103 | v123 & 0x17F ^ 0x7C) * ((v125 & 0xF ^ 3) + 607);
  v142 = (v138 << 16) - 525272783 - ((v138 << 17) & 0xC1600000);
  v143 = *(unsigned __int8 *)(v45 + v124) ^ 0x1A;
  LOBYTE(v125) = *(_BYTE *)(v45 + (v141 - 969 * ((4432371 * (unint64_t)v141) >> 32))) ^ 0x1A;
  v144 = v143 & 0xF;
  v145 = 383 * (v144 | (16 * (v125 & 0xF)));
  v146 = (v142 ^ 0xE0B0F931) + ((*(unsigned __int8 *)(v45 + v120) ^ 0x1A) << 8);
  v147 = *(unsigned __int8 *)(v45
                            + (v145
                                           + 105708
                                           - 969 * ((4432371 * (unint64_t)(v145 + 105708)) >> 32))) ^ 0x1A;
  v148 = 383 * ((v147 + 1784866936 - ((2 * v147) & 0xF0)) ^ v107);
  LODWORD(STACK[0x64C]) = (v148 + 105708) % 0x3C9u;
  v149 = *(unsigned __int8 *)(v45 + (v148 + 270015) % 0x3C9u);
  v150 = 383
       * ((((v149 >> 4) ^ 1) - ((v149 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v45
                                                                                                + (v145 + 270015 - 969 * ((4432371 * (unint64_t)(v145 + 270015)) >> 32))))
       + 105708;
  v151 = v150 - 969 * ((4432371 * (unint64_t)v150) >> 32);
  v152 = v146 ^ ((*(unsigned __int8 *)(v45 + v118) ^ 0x1A) << 12);
  v153 = (v152 | v143) ^ (16 * (*(unsigned __int8 *)(v45 + v122) ^ 0x1A));
  v154 = *(unsigned __int8 *)(v45 + (v133 ^ 0xB5DED8CC));
  v155 = *(unsigned __int8 *)(v45 + v137) ^ ((unint64_t)((((*(unsigned __int8 *)(v45 + v127) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + v126) ^ 0x1A) << 12) | v154 ^ 0x1A) ^ (16 * (*(unsigned __int8 *)(v45 + v130) ^ 0x1Au))) << ((13 * (v154 & 0x47 ^ 0x45 | v154 & 0x47 ^ 2)) & 0x4C)) ^ 0x1A;
  v156 = *(unsigned __int8 *)(v45 + v134 % 0x3C9) ^ 0x1A;
  v157 = (v156 << 12) - ((v156 << 13) & 0x9E000);
  v158 = (v155 << 8) - ((v155 << 9) & 0xF709EA00) + 2072311059;
  v159 = (v158 ^ (v157 + 2072311059)) + 1345158184 - ((2 * (v158 ^ (v157 + 2072311059))) & 0xA05AF800);
  v160 = *(unsigned __int8 *)(v45 + v140) ^ 0x1A;
  v161 = *(unsigned __int8 *)(v45 + v151);
  v162 = v159 ^ (16 * v160 + 1345158184 - ((32 * v160) & 0x1840));
  v163 = 383 * (((v162 ^ v125) >> 4 << ((v161 & 4 ^ 4) + (v161 & 4))) ^ (v153 >> 4));
  v164 = 383 * (*(unsigned __int8 *)(v45 + (v163 + 105708) % 0x3C9u) ^ (16 * (v161 ^ 0x1A)) ^ 0x1A);
  v165 = v164 + 105708 - 969 * ((4432371 * (unint64_t)(v164 + 105708)) >> 32);
  v166 = *(unsigned __int8 *)(v45
                            + (v164
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v164 + 270015)) >> 32))) >> 4;
  v167 = 383
       * (((v166 ^ 1) + ((2 * ((v166 ^ 1 | 0x7A) ^ v166)) ^ 9) + 27) ^ *(unsigned __int8 *)(v45 + (v163 + 270015) % 0x3C9u))
       + 105708;
  v168 = 383 * ((v162 >> 4) & 0xF0 | (v153 >> 8) & 0xF);
  v169 = 383
       * (*(unsigned __int8 *)(v45
                             + (v168
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v168 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v167 - 969 * ((4432371 * (unint64_t)v167) >> 32))) ^ 0x1A)) ^ 0x1A);
  v170 = v169 + 105708 - 969 * ((4432371 * (unint64_t)(v169 + 105708)) >> 32);
  v171 = *(unsigned __int8 *)(v45
                            + (v169
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v169 + 270015)) >> 32)));
  v172 = 383
       * ((((v171 >> 4) ^ 1) - ((v171 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v45
                                                                                                + (v168 + 270015 - 969 * ((4432371 * (unint64_t)(v168 + 270015)) >> 32))))
       + 105708;
  v173 = 383 * (((v159 >> 8) & 0xF0 | ((unsigned __int16)v152 >> 12)) ^ 0x70);
  v174 = 383
       * (*(unsigned __int8 *)(v45
                             + (v173
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v173 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v172 - 969 * ((4432371 * (unint64_t)v172) >> 32))) ^ 0x1A)) ^ 0x1A);
  v175 = v174 + 105708 - 969 * ((4432371 * (unint64_t)(v174 + 105708)) >> 32);
  v176 = *(unsigned __int8 *)(v45
                            + (v174
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v174 + 270015)) >> 32))) >> 4;
  v177 = 383
       * (((v176 ^ 1) + ((2 * ((v176 ^ 1 | 0x7A) ^ v176)) ^ 9) + 27) ^ *(unsigned __int8 *)(v45 + (v173 + 270015 - 969 * ((4432371 * (unint64_t)(v173 + 270015)) >> 32))))
       + 105708;
  v178 = 383 * (((v159 >> 12) & 0xF0 | HIWORD(v152) & 0xF) ^ 0xD0);
  v179 = 383
       * (*(unsigned __int8 *)(v45
                             + (v178
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v178 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v177 - 969 * ((4432371 * (unint64_t)v177) >> 32))) ^ 0x1A)) ^ 0x1A);
  v180 = v179 + 105708 - 969 * ((4432371 * (unint64_t)(v179 + 105708)) >> 32);
  v181 = *(unsigned __int8 *)(v45
                            + (v179
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v179 + 270015)) >> 32)));
  v182 = 383
       * ((((v181 >> 4) ^ 1) - ((v181 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v45
                                                                                                + (v178 + 270015 - 969 * ((4432371 * (unint64_t)(v178 + 270015)) >> 32))))
       + 105708;
  v183 = 383 * ((HIWORD(v158) & 0xF0 | (v142 >> 20) & 0xF) ^ 0x8B);
  v184 = 383
       * (*(unsigned __int8 *)(v45
                             + (v183
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v183 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v182 - 969 * ((4432371 * (unint64_t)v182) >> 32))) ^ 0x1A)) ^ 0x1A);
  v185 = *(unsigned __int8 *)(v45
                            + (v184
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v184 + 270015)) >> 32))) >> 4;
  v186 = 383
       * (((v185 ^ 1) + ((2 * ((v185 ^ 1 | 0x7A) ^ v185)) ^ 9) + 27) ^ *(unsigned __int8 *)(v45 + (v183 + 270015 - 969 * ((4432371 * (unint64_t)(v183 + 270015)) >> 32))))
       + 105708;
  v187 = 383 * (((v158 >> 20) & 0xF0 | HIBYTE(v142) & 0xF) ^ 0xB0);
  v188 = 383
       * (*(unsigned __int8 *)(v45
                             + (v187
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v187 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v186 - 969 * ((4432371 * (unint64_t)v186) >> 32))) ^ 0x1A)) ^ 0x1A);
  v189 = 383
       * (*(unsigned __int8 *)(v45
                             + (v187
                                            + 270015
                                            - 969 * ((4432371 * (unint64_t)(v187 + 270015)) >> 32))) ^ (*(unsigned __int8 *)(v45 + (v188 + 270015 - 969 * ((4432371 * (unint64_t)(v188 + 270015)) >> 32))) >> 4) ^ 0x1B)
       + 105708;
  v190 = 383 * ((HIBYTE(v158) & 0xF0 | (v142 >> 28)) ^ 0x7E) + 105708;
  v191 = 383
       * (*(unsigned __int8 *)(v45 + (v190 - 969 * ((4432371 * (unint64_t)v190) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v189 - 969 * ((4432371 * (unint64_t)v189) >> 32))) ^ 0x1A)) ^ 0x1A)
       + 105708;
  v192 = ((*(unsigned __int8 *)(v45 + v180) ^ 0x1A) << 16) ^ ((*(unsigned __int8 *)(v45 + v175) ^ 0x1A) << 12);
  v193 = ((*(unsigned __int8 *)(v45 + (v191 - 969 * ((4432371 * (unint64_t)v191) >> 32))) ^ 0xAAAAAAAA) << 28) ^ ((*(unsigned __int8 *)(v45 + (v188 + 105708 - 969 * ((4432371 * (unint64_t)(v188 + 105708)) >> 32))) ^ 0x1A) << 24);
  v194 = *(unsigned __int8 *)(v45 + LODWORD(STACK[0x64C])) ^ (16 * (*(unsigned __int8 *)(v45 + v165) ^ 0x1A)) ^ 0x1A;
  v195 = v192 ^ ((*(unsigned __int8 *)(v45
                                     + (v184
                                                    + 105708
                                                    - 969
                                                    * ((4432371 * (unint64_t)(v184 + 105708)) >> 32))) ^ 0x1A) << 20);
  v196 = v193 ^ v195;
  v197 = v194 ^ ((*(unsigned __int8 *)(v45 + v170) ^ 0x1A) << 8) ^ v193 ^ v195;
  v198 = 383 * (v144 & 0xFFFFFF0F | (16 * ((v194 ^ (v193 ^ v195)) & 0xF))) + 6894;
  v199 = (v153 >> 4) - ((v153 >> 3) & 0x33ACCCE) + 295528039;
  v200 = 383 * ((v194 & 0xF0 | v199 & 0xF) ^ 7) + 6894;
  v201 = 383 * (((v197 >> 4) & 0xF0 | (v199 >> 4)) ^ 6) + 6894;
  v202 = 383 * (((v197 >> 8) & 0xF0 | (v199 >> 8) & 0xF) ^ 6) + 6894;
  v203 = v202 - 969 * ((4432371 * (unint64_t)v202) >> 32);
  v204 = v203 + 246507546 - ((2 * v203) & 0x34);
  v205 = 383
       * ((((v192 >> 12) & 0xF0 | ((unsigned __int16)v199 >> 12)) ^ 6)
        + (v204 & 0x3EE ^ 0x1B)
        + (v204 & 0x3EE ^ 0xFFFFFFF5))
       + 766;
  v206 = 383 * ((HIWORD(v195) & 0xF0 | HIWORD(v199) & 0xF) ^ 0xD) + 6894;
  v207 = (398589444 - (((v196 >> 20) ^ 0x76BEFB1A) & 0x263C2996) + ((2 * ((v196 >> 20) ^ 0x76BEFB1A)) & 0x40780324)) & 0x5FFDFFFE ^ ((v196 >> 20) ^ 0x76BEFB1A) & 0x63C2966;
  v208 = ((v199 >> 20) & 0xF ^ 0xF5F7F7F6) + 168298497 + ((2 * ((v199 >> 20) & 0xF)) ^ 0x12);
  v209 = (v208 - (v207 ^ 0x17C1FE14 | v208)) ^ ((v207 ^ 0xE83E01EB) + 1);
  v210 = 383 * ((HIBYTE(v193) & 0xF0 | HIBYTE(v199) & 0xF) ^ 1) + 6894;
  v211 = ((*(unsigned __int8 *)(v45 + (v204 ^ 0xEB1681Au)) ^ 0x1A) << 12) ^ ((*(unsigned __int8 *)(v45
                                                                                                 + (v201 - 969 * ((4432371 * (unint64_t)v201) >> 32))) ^ 0x1A) << 8);
  v212 = *(unsigned __int8 *)(v45 + (v198 - 969 * ((4432371 * (unint64_t)v198) >> 32)));
  v213 = v212 ^ (16
               * (*(unsigned __int8 *)(v45 + (v200 - 969 * ((4432371 * (unint64_t)v200) >> 32))) ^ 0x1A)) ^ 0x1A;
  v214 = v211 ^ v213 ^ ((*(unsigned __int8 *)(v45 + v205 % 0x3C9) ^ 0x1A) << 16);
  v215 = v214 ^ ((*(unsigned __int8 *)(v45 + (v206 - 969 * ((4432371 * (unint64_t)v206) >> 32))) ^ 0x1A) << 20);
  v216 = v215 ^ ((*(unsigned __int8 *)(v45
                                     + (383
                                      * ((v207 ^ 0x5C60B121 ^ (v209 - ((2 * v209) & 0x97429E6A) + 1268862773)) + v208)
                                      + 6894)
                                     % 0x3C9) ^ 0x1A) << 24);
  v217 = (v216 ^ ((*(unsigned __int8 *)(v45 + (v210 - 969 * ((4432371 * (unint64_t)v210) >> 32))) ^ 0xAAAAAAAA) << 28)) >> 28;
  STACK[0x558] = 383 * v217 - 969 * ((1658007 * v217) >> 22);
  STACK[0x570] = 383 * (HIBYTE(v216) & 0xF) - 969 * ((1658007 * (HIBYTE(v216) & 0xF)) >> 22);
  STACK[0x568] = 383 * ((v215 >> 20) & 0xF) - 969 * ((1658007 * ((v215 >> 20) & 0xF)) >> 22);
  LOWORD(v170) = 383 * (BYTE2(v214) & 0xF)
               - 969 * ((unsigned __int16)((1658007 * (HIWORD(v214) & 0xF)) >> 16) >> 6);
  STACK[0x560] = 383 * ((unsigned __int16)v211 >> 12)
               - 969 * ((1658007 * ((unsigned __int16)v211 >> 12)) >> 22);
  STACK[0x578] = 383 * (((v211 ^ v213) >> 8) & 0xF)
               - 969 * ((1658007 * (((v211 ^ v213) >> 8) & 0xF)) >> 22);
  STACK[0x5C0] = 383 * (v213 >> 4)
               - 969 * ((1658007 * (v213 >> 4)) >> 22);
  STACK[0x5A0] = 383 * (v212 & 0xF ^ 0xA) - 969 * ((1658007 * (v212 & 0xF ^ 0xAu)) >> 22);
  v218 = LODWORD(STACK[0x63C]) + LODWORD(STACK[0x670]);
  v219 = (LODWORD(STACK[0x62C]) + 105708) % 0x3C9u;
  v220 = LODWORD(STACK[0x658]) - LODWORD(STACK[0x668]) - 13437089;
  LODWORD(STACK[0x62C]) = v220;
  v221 = LODWORD(STACK[0x5FC])
       + 105708
       - 969 * ((4432371 * (unint64_t)(LODWORD(STACK[0x5FC]) + 105708)) >> 32);
  v222 = ((2 * (((v218 - 345121432) ^ v220) - LODWORD(STACK[0x580]))) & 0xCBAFFE96)
       + ((((v218 - 345121432) ^ v220) - LODWORD(STACK[0x580])) ^ 0xE5D7FF4B);
  LODWORD(STACK[0x64C]) = v222;
  v223 = 383
       * ((((*(_BYTE *)(v45
                                       + (LODWORD(STACK[0x5E4])
                                                      + 270015
                                                      - 969
                                                      * ((4432371
                                                        * (unint64_t)(LODWORD(STACK[0x5E4]) + 270015)) >> 32))) >> 4) ^ 1)
                          - ((*(_BYTE *)(v45
                                       + (LODWORD(STACK[0x5E4])
                                                      + 270015
                                                      - 969
                                                      * ((4432371
                                                        * (unint64_t)(LODWORD(STACK[0x5E4]) + 270015)) >> 32))) >> 3) & 0x14)
                          + 26) ^ *(unsigned __int8 *)(v45
                                                     + (LODWORD(STACK[0x5EC])
                                                                    + 270015
                                                                    - 969
                                                                    * ((4432371
                                                                      * (unint64_t)(LODWORD(STACK[0x5EC]) + 270015)) >> 32))))
       + 105708;
  v224 = ((*(unsigned __int8 *)(v45
                              + (LODWORD(STACK[0x5F4])
                                             + 105708
                                             - 969
                                             * ((4432371
                                               * (unint64_t)(LODWORD(STACK[0x5F4]) + 105708)) >> 32))) ^ 0x1A) << 8) ^ (16 * (*(unsigned __int8 *)(v45 + v221) ^ 0x1A));
  v225 = 383 * (((LODWORD(STACK[0x5F8]) >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x5F0])) & 0xF) ^ 0x9B);
  v226 = *(unsigned __int8 *)(v45 + LODWORD(STACK[0x5E8]));
  v227 = 383
       * (*(unsigned __int8 *)(v45
                             + (v225
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v225 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v223 - 969 * ((4432371 * (unint64_t)v223) >> 32))) ^ 0x1A)) ^ 0x1A);
  v228 = v227 + 105708 - 969 * ((4432371 * (unint64_t)(v227 + 105708)) >> 32);
  v229 = *(unsigned __int8 *)(v45
                            + (v227
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v227 + 270015)) >> 32)));
  v230 = 383
       * ((((v229 >> 4) ^ 1) - ((v229 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v45
                                                                                                + (v225 + 270015 - 969 * ((4432371 * (unint64_t)(v225 + 270015)) >> 32))))
       + 105708;
  v231 = 383 * ((HIWORD(LODWORD(STACK[0x600])) & 0xF0 | (LODWORD(STACK[0x628]) >> 20) & 0xF) ^ 9);
  v232 = 383
       * (*(unsigned __int8 *)(v45
                             + (v231
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v231 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v230 - 969 * ((4432371 * (unint64_t)v230) >> 32))) ^ 0x1A)) ^ 0x1A);
  v233 = v232 + 105708 - 969 * ((4432371 * (unint64_t)(v232 + 105708)) >> 32);
  v234 = *(unsigned __int8 *)(v45
                            + (v232
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v232 + 270015)) >> 32)));
  v235 = (((v226 ^ 0x1A) << 12) + 1607336902 - ((v226 << 13) & 0x1C0000)) ^ v224;
  v236 = v235 ^ 0x5FCE03C6 ^ ((*(unsigned __int8 *)(v45 + v228) ^ 0x1A) << 16);
  v237 = 383 * (((LODWORD(STACK[0x600]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x628])) & 0xF) ^ 0x75);
  v238 = 383
       * (*(unsigned __int8 *)(v45
                             + (v237
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v237 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (383 * ((((v234 >> 4) ^ 0x21) - ((v234 >> 3) & 0x14) - 6) ^ *(unsigned __int8 *)(v45 + (v231 + 270015 - 969 * ((4432371 * (unint64_t)(v231 + 270015)) >> 32)))) + 104739) % 0x3C9) ^ 0x1A)) ^ 0x1A);
  v239 = v238 + 105708 - 969 * ((4432371 * (unint64_t)(v238 + 105708)) >> 32);
  v240 = *(unsigned __int8 *)(v45
                            + (v238
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v238 + 270015)) >> 32)));
  v241 = 383
       * ((((v240 >> 4) ^ 1) - ((v240 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v45
                                                                                                + (v237 + 270015 - 969 * ((4432371 * (unint64_t)(v237 + 270015)) >> 32))))
       + 104739;
  v242 = *(unsigned __int8 *)(v45 + v219) ^ 0x1A;
  LOBYTE(v219) = v224 ^ v242;
  v243 = ~LODWORD(STACK[0x628]);
  v244 = (((v224 ^ v242) & 0x17F ^ 0x17F) + ((v224 ^ v242) & 0x17F))
       * (((HIBYTE(LODWORD(STACK[0x600])) & 0xF0 | (v243 >> 28)) ^ 0x20) + 276);
  v245 = 383
       * (*(unsigned __int8 *)(v45 + (v244 - 969 * ((4432371 * (unint64_t)v244) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + v241 % 0x3C9) ^ 0x1A)) ^ 0x1A)
       + 105708;
  v246 = v236 ^ ((*(unsigned __int8 *)(v45 + v233) ^ 0x1A) << 20) ^ ((*(unsigned __int8 *)(v45 + v239) ^ 0x1A) << 24) ^ ((*(unsigned __int8 *)(v45 + (v245 - 969 * ((4432371 * (unint64_t)v245) >> 32))) ^ 0xAAAAAAAA) << 28);
  v247 = 383 * (STACK[0x624] & 0xFFFFFF0F | (16 * (v242 & 0xF))) + 6894;
  v248 = 383 * (v219 & 0xF0 | (LODWORD(STACK[0x610]) >> 4)) + 6894;
  v249 = 383 * ((v224 >> 4) & 0xF0 | (LODWORD(STACK[0x610]) >> 8) & 0xF) + 6894;
  v250 = 383 * (((v235 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x5F0]) >> 12)) ^ 4) + 6894;
  v251 = 383 * (((v236 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x5F0])) & 0xF) ^ 0xB) + 6894;
  v252 = v251 - 969 * ((4432371 * (unint64_t)v251) >> 32);
  v253 = v252 + 5155923 - ((2 * v252) & 0xA6);
  v254 = 383
       * (((LODWORD(STACK[0x628]) >> 20) & 0xF | (16 * (((v253 & 0xF ^ 0xC) + (v253 & 0xF ^ 3)) & (v246 >> 20)))) ^ 9)
       + 6894;
  v255 = 383 * (((v246 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x628])) & 0xF) ^ 5) + 6894;
  v256 = 383 * (HIBYTE(v246) & 0xF0 | (v243 >> 28)) + 6894;
  v257 = *(unsigned __int8 *)(v45 + (v247 - 969 * ((4432371 * (unint64_t)v247) >> 32)));
  LODWORD(STACK[0x658]) = v257;
  v258 = *(unsigned __int8 *)(v45 + (v249 - 969 * ((4432371 * (unint64_t)v249) >> 32)));
  v259 = v257 ^ (16
               * (*(unsigned __int8 *)(v45 + (v248 - 969 * ((4432371 * (unint64_t)v248) >> 32))) ^ 0x1A)) ^ 0x1A;
  LODWORD(STACK[0x628]) = v259;
  v260 = v259 ^ ((v258 ^ 0x1A) << 8);
  v261 = v260 ^ ((*(unsigned __int8 *)(v45 + (v250 - 969 * ((4432371 * (unint64_t)v250) >> 32))) ^ 0x1A) << 12);
  v262 = v261 ^ ((*(unsigned __int8 *)(v45 + (v253 ^ 0x4EAC53u)) ^ 0x1A) << 16);
  v263 = v262 ^ ((*(unsigned __int8 *)(v45 + v254 % 0x3C9) ^ 0x1A) << 20);
  v264 = v263 ^ ((*(unsigned __int8 *)(v45 + (v255 - 969 * ((4432371 * (unint64_t)v255) >> 32))) ^ 0x1A) << 24);
  v265 = (v264 ^ ((*(unsigned __int8 *)(v45 + (v256 - 969 * ((4432371 * (unint64_t)v256) >> 32))) ^ 0xAAAAAAAA) << 28)) >> 28;
  LOWORD(v140) = 383 * v265 - 969 * ((unsigned __int16)((1658007 * v265) >> 16) >> 6);
  v266 = v218 + 1071462403 + LODWORD(STACK[0x640]);
  v267 = LODWORD(STACK[0x640]) - 1916611357 + v266;
  LODWORD(STACK[0x668]) = v222 - 140974125;
  v268 = STACK[0x588];
  v269 = ((v222 - 140974125) ^ v267) - LODWORD(STACK[0x588]);
  LODWORD(STACK[0x63C]) = v269;
  LODWORD(STACK[0x624]) = v268 - ((2 * v268 + 835460660) & 0x538AC61A);
  v270 = v266
       + v222
       - 140974125
       - 948676072
       + v269
       - 1456251232
       - ((2 * (v266 + v222 - 140974125 - 948676072 + v269)) & 0x5266BD40);
  LODWORD(STACK[0x5F0]) = v270;
  STACK[0x600] = 383 * ((v263 >> 20) & 0xF) - 969 * ((1658007 * ((v263 >> 20) & 0xF)) >> 22);
  LODWORD(STACK[0x640]) = ((2 * v270) & 0x29244530 ^ 0x244010) + (v270 ^ 0x54C8CB90);
  LOWORD(v266) = 383 * (BYTE2(v262) & 0xF)
               - 969 * ((unsigned __int16)((1658007 * (HIWORD(v262) & 0xF)) >> 16) >> 6);
  v271 = ((*(unsigned __int8 *)(v45 + (unsigned __int16)STACK[0x570]) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (unsigned __int16)STACK[0x558]) ^ 0x1A) << 12);
  v272 = *(unsigned __int8 *)(v45 + (unsigned __int16)v170);
  STACK[0x670] = 383 * ((unsigned __int16)v261 >> 12)
               - 969 * ((1658007 * ((unsigned __int16)v261 >> 12)) >> 22);
  v273 = ((v271 | v272 ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (unsigned __int16)STACK[0x568]) ^ 0x1A) << 12);
  STACK[0x610] = 383 * ((v260 >> 8) & 0xF) - 969 * ((1658007 * ((v260 >> 8) & 0xF)) >> 22);
  v274 = 383 * ((1408555436 - LODWORD(STACK[0x584])) >> 28) + 232481;
  v275 = v274 - 969 * ((4432371 * (unint64_t)v274) >> 32);
  LODWORD(STACK[0x5F4]) = *(unsigned __int8 *)(v45 + (unsigned __int16)STACK[0x578]) ^ 0x1A ^ v273 ^ (16 * (*(unsigned __int8 *)(v45 + (unsigned __int16)STACK[0x560]) ^ 0x1A));
  v276 = LODWORD(STACK[0x638]) - v15;
  v277 = 383 * (HIBYTE(LODWORD(STACK[0x650])) & 0xF ^ 0xE) + 232481;
  v278 = 383 * (~(LODWORD(STACK[0x650]) >> 20) & 0xF) + 232481;
  v279 = 383 * (HIWORD(LODWORD(STACK[0x650])) & 0xF ^ 1) + 232481;
  v280 = ((*(unsigned __int8 *)(v45 + (v277 - 969 * ((4432371 * (unint64_t)v277) >> 32))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + v275) ^ 0x1A) << 12) | *(unsigned __int8 *)(v45 + (v279 - 969 * ((4432371 * (unint64_t)v279) >> 32))) ^ 0x1A;
  v281 = 383 * (((unsigned __int16)LODWORD(STACK[0x650]) >> 12) ^ 5) + 232481;
  v282 = 383 * ((LODWORD(STACK[0x650]) >> 8) & 0xF ^ 3) + 232481;
  v283 = (v280 << 8) ^ ((*(unsigned __int8 *)(v45
                                            + (v278 - 969 * ((4432371 * (unint64_t)v278) >> 32))) ^ 0x1A) << 12);
  v284 = 383 * ((LODWORD(STACK[0x650]) >> 4) ^ 3) + 232481;
  v285 = v284 - 969 * ((4432371 * (unint64_t)v284) >> 32);
  v286 = v283 | *(unsigned __int8 *)(v45 + (v282 - 969 * ((4432371 * (unint64_t)v282) >> 32))) ^ 0x1A;
  v287 = (v286 << 8) - 1485873307 - ((v286 << 9) & 0x4EDEBE00);
  v288 = 383 * ((LODWORD(STACK[0x5B0]) >> 28) ^ 4) + 232481;
  v289 = 383 * (HIBYTE(LODWORD(STACK[0x5B0])) & 0xF ^ 5) + 232481;
  v290 = ((*(unsigned __int8 *)(v45 + (v289 - 969 * ((4432371 * (unint64_t)v289) >> 32))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (v288 - 969 * ((4432371 * (unint64_t)v288) >> 32))) ^ 0x1A) << 12);
  v291 = (((((LODWORD(STACK[0x5B0]) >> 20) & 0xF ^ 1) + 607) & 0x7F)
        + ((416 - ((LODWORD(STACK[0x5B0]) >> 20) & 0xF ^ 1)) & 0xFFFFFF7F))
       * (((LODWORD(STACK[0x5B0]) >> 20) & 0xF ^ 1) + 607);
  v292 = 383 * (HIWORD(LODWORD(STACK[0x5B0])) & 0xF ^ 7) + 232481;
  v293 = v287 ^ ((*(unsigned __int8 *)(v45 + (v281 - 969 * ((4432371 * (unint64_t)v281) >> 32))) ^ 0x1A) << 12);
  v294 = STACK[0x5B8];
  v295 = (v293 ^ 0xA76F5F65 | LODWORD(STACK[0x5B8])) ^ (16 * (*(unsigned __int8 *)(v45 + v285) ^ 0x1A));
  v296 = ((v290 | *(unsigned __int8 *)(v45 + (v292 - 969 * ((4432371 * (unint64_t)v292) >> 32))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (v291 - 969 * ((4432371 * (unint64_t)v291) >> 32))) ^ 0x1A) << 12);
  v297 = 383
       * ((BYTE1(LODWORD(STACK[0x5B0])) ^ 0x30) + (BYTE1(LODWORD(STACK[0x5B0])) & 0xF0 ^ 0xCF) + 1)
       + 232481;
  v298 = 383 * ((LODWORD(STACK[0x5B0]) >> 4) ^ 0xD) + 232481;
  v299 = (((v296 | *(unsigned __int8 *)(v45 + (v297 - 969 * ((4432371 * (unint64_t)v297) >> 32))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + LODWORD(STACK[0x5BC])) ^ 0x1A) << 12) | LODWORD(STACK[0x5C8])) ^ (16 * (*(unsigned __int8 *)(v45 + (v298 - 969 * ((4432371 * (unint64_t)v298) >> 32))) ^ 0x1A));
  v300 = LODWORD(STACK[0x5AC]) + 105708;
  v301 = *(unsigned __int8 *)(v45 + LODWORD(STACK[0x594])) >> 4;
  v302 = 383
       * (((v301 ^ 1) + ((2 * ((v301 ^ 1 | 0x7A) ^ v301)) ^ 9) + 27) ^ *(unsigned __int8 *)(v45 + (LODWORD(STACK[0x598]) + 270015 - 969 * ((4432371 * (unint64_t)(LODWORD(STACK[0x598]) + 270015)) >> 32))))
       + 105708;
  v303 = 383 * (v299 & 0xF0 | (v295 >> 4));
  v304 = ((*(unsigned __int8 *)(v45
                              + (unsigned __int16)(383 * (HIBYTE(v264) & 0xF)
                                                 - 969
                                                 * ((unsigned __int16)((1658007 * (HIBYTE(v264) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (unsigned __int16)v140) ^ 0xAAAAAAAA) << 12);
  v305 = 383
       * (*(unsigned __int8 *)(v45
                             + (v303
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v303 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v302 - 969 * ((4432371 * (unint64_t)v302) >> 32))) ^ 0x1A)) ^ 0x1A);
  v306 = v305 + 105708 - 969 * ((4432371 * (unint64_t)(v305 + 105708)) >> 32);
  LODWORD(STACK[0x5E4]) = v304 | *(unsigned __int8 *)(v45 + (unsigned __int16)v266) ^ 0x1A;
  v307 = 383
       * ((((*(_BYTE *)(v45
                                       + (v305
                                                      + 270015
                                                      - 969
                                                      * ((4432371 * (unint64_t)(v305 + 270015)) >> 32))) >> 4) ^ 1)
                          + (~(*(_BYTE *)(v45
                                        + (v305
                                                       + 270015
                                                       - 969
                                                       * ((4432371 * (unint64_t)(v305 + 270015)) >> 32))) >> 3) | 0xEB)
                          + 27) ^ *(unsigned __int8 *)(v45
                                                     + (v303
                                                                    + 270015
                                                                    - 969
                                                                    * ((4432371
                                                                      * (unint64_t)(v303 + 270015)) >> 32))))
       + 105708;
  v276 -= 2136202216;
  LODWORD(STACK[0x638]) = v276;
  v308 = (LODWORD(STACK[0x5D8]) ^ v276) - LODWORD(STACK[0x5D4]);
  v309 = 383 * ((v299 >> 4) & 0xF0 | (v295 >> 8) & 0xF);
  v310 = 383
       * (*(unsigned __int8 *)(v45
                             + (v309
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v309 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v307 - 969 * ((4432371 * (unint64_t)v307) >> 32))) ^ 0x1A)) ^ 0x1A);
  v311 = v310 + 105708 - 969 * ((4432371 * (unint64_t)(v310 + 105708)) >> 32);
  v312 = *(unsigned __int8 *)(v45
                            + (v310
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v310 + 270015)) >> 32)));
  v313 = 383
       * ((((v312 >> 4) ^ 1) + (~(v312 >> 3) | 0xEB) + 27) ^ *(unsigned __int8 *)(v45 + (v309 + 270015 - 969 * ((4432371 * (unint64_t)(v309 + 270015)) >> 32))))
       + 105708;
  v314 = v313 - 969 * ((4432371 * (unint64_t)v313) >> 32);
  v315 = v314 + 1076520200 - ((2 * v314) & 0x210);
  v316 = v299 >> 8 >> ((v314 & 4 ^ 4) + (v314 & 4));
  v317 = v316 - ((2 * v316) & 0x2399C0);
  v318 = 383 * ((((unsigned __int16)v293 >> 12) & 0xFFFFFF0F | (16 * (v316 & 0xF))) ^ 5);
  v319 = v318 + 270015 - 969 * ((4432371 * (unint64_t)(v318 + 270015)) >> 32);
  v320 = *(unsigned __int8 *)(v45
                            + (v318 + 105708 - 969 * ((4432371 * (unint64_t)(v318 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v315 ^ 0x402A6508u)) ^ 0x1A)) ^ 0x1A;
  v321 = 383 * v320 + 105708 - 969 * ((4432371 * (unint64_t)(383 * v320 + 105708)) >> 32);
  v322 = v321 + 1290552840 - ((2 * v321) & 0x410);
  v323 = 383 * ((v322 & 0x2C1 ^ 0xC1 | v322 & 0x2C1 ^ 0x200) + v320);
  v324 = *(unsigned __int8 *)(v45 + (v323 - 969 * ((4432371 * (unint64_t)v323) >> 32)));
  v325 = 383 * ((((v324 >> 4) ^ 1) - ((v324 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v45 + v319))
       + 105708;
  v326 = v317 - 586036000;
  v327 = 383 * (((v317 - 586036000) & 0xF0 | HIWORD(v293) & 0xF) ^ 0xEF);
  v328 = 383
       * (*(unsigned __int8 *)(v45
                             + (v327
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v327 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v325 - 969 * ((4432371 * (unint64_t)v325) >> 32))) ^ 0x1A)) ^ 0x1A);
  v329 = v328 + 105708 - 969 * ((4432371 * (unint64_t)(v328 + 105708)) >> 32);
  v330 = *(unsigned __int8 *)(v45
                            + (v328
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v328 + 270015)) >> 32)));
  v331 = 383
       * ((((v330 >> 4) ^ 1) + (~(v330 >> 3) | 0xEB) + 27) ^ *(unsigned __int8 *)(v45 + (v327 + 270015 - 969 * ((4432371 * (unint64_t)(v327 + 270015)) >> 32))))
       + 105708;
  v332 = 383 * (((v326 >> 4) & 0xF0 | (v287 >> 20) & 0xF) ^ 0xC6);
  v333 = v332 + 270015 - 969 * ((4432371 * (unint64_t)(v332 + 270015)) >> 32);
  v334 = 383
       * (*(unsigned __int8 *)(v45
                             + (v332
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v332 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v331 - 969 * ((4432371 * (unint64_t)v331) >> 32))) ^ 0x1A)) ^ 0x1A);
  v335 = v334 + 105708 - 969 * ((4432371 * (unint64_t)(v334 + 105708)) >> 32);
  v336 = *(unsigned __int8 *)(v45
                            + (v334
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v334 + 270015)) >> 32)));
  v337 = 383
       * ((((v336 >> 4) ^ 1) + (~(v336 >> 3) | 0xEB) + 27) ^ *(unsigned __int8 *)(v45 + v333))
       + 105708;
  v338 = 383 * (((v326 >> 8) & 0xF0 | HIBYTE(v287) & 0xF) ^ 0xC7);
  v339 = 383
       * (*(unsigned __int8 *)(v45
                             + (v338
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v338 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v337 - 969 * ((4432371 * (unint64_t)v337) >> 32))) ^ 0x1A)) ^ 0x1A);
  v340 = v339 + 105708 - 969 * ((4432371 * (unint64_t)(v339 + 105708)) >> 32);
  v341 = *(unsigned __int8 *)(v45
                            + (v339
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v339 + 270015)) >> 32))) >> 4;
  v342 = 383
       * (((v341 ^ 1) + ((2 * ((v341 ^ 1 | 0x7A) ^ v341)) ^ 9) + 27) ^ *(unsigned __int8 *)(v45 + (v338 + 270015 - 969 * ((4432371 * (unint64_t)(v338 + 270015)) >> 32))))
       + 105708;
  v343 = 383 * (((v326 >> 12) & 0xF0 | (v287 >> 28)) ^ 0x1A) + 105708;
  v344 = 383
       * (*(unsigned __int8 *)(v45 + (v343 - 969 * ((4432371 * (unint64_t)v343) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v342 - 969 * ((4432371 * (unint64_t)v342) >> 32))) ^ 0x1A)) ^ 0x1A)
       + 105708;
  v345 = 16 * (*(unsigned __int8 *)(v45 + v306) ^ 0x1A);
  LOBYTE(v300) = *(_BYTE *)(v45 + v300 % 0x3C9) ^ 0x1A;
  v346 = (*(unsigned __int8 *)(v45 + v311) ^ 0x1A) << 8;
  v347 = (*(unsigned __int8 *)(v45 + (v322 ^ 0x4CEC4608u)) ^ 0x1A) << 12;
  v348 = (*(unsigned __int8 *)(v45 + v329) ^ 0x1A) << 16;
  v349 = (*(unsigned __int8 *)(v45 + v335) ^ 0x1A) << 20;
  v350 = (*(unsigned __int8 *)(v45 + v340) ^ 0x1A) << 24;
  v351 = v350 ^ ((*(unsigned __int8 *)(v45 + (v344 - 969 * ((4432371 * (unint64_t)v344) >> 32))) ^ 0xAAAAAAAA) << 28);
  v352 = v350 ^ v349;
  v353 = v349 ^ v348;
  v354 = v348 ^ v347;
  v355 = v347 ^ v346;
  v356 = v346 ^ v345;
  LOBYTE(v345) = v345 ^ v300;
  v357 = 383 * (v294 & 0xF | (16 * (v300 & 0xF))) + 6894;
  v358 = 383 * (v345 & 0xF0 | (v295 >> 4)) + 6894;
  v359 = 383 * ((v356 >> 4) & 0xF0 | (v295 >> 8) & 0xF) + 6894;
  v360 = 383 * (((v355 >> 8) & 0xF0 | ((unsigned __int16)v293 >> 12)) ^ 5) + 6894;
  v361 = 383 * (((v354 >> 12) & 0xF0 | HIWORD(v293) & 0xF) ^ 0xF) + 6894;
  v362 = 383 * ((HIWORD(v353) & 0xF0 | (v287 >> 20) & 0xF) ^ 6) + 6894;
  v363 = HIBYTE(v351) & 0xF0 | (v287 >> 28);
  v364 = 383 * (((v352 >> 20) & 0xF0 | HIBYTE(v287) & 0xF) ^ 7) + 6894;
  v365 = *(unsigned __int8 *)(v45 + (v357 - 969 * ((4432371 * (unint64_t)v357) >> 32)));
  v366 = v365 ^ (16
               * (*(unsigned __int8 *)(v45 + (v358 - 969 * ((4432371 * (unint64_t)v358) >> 32))) ^ 0x1A)) ^ 0x1A;
  v367 = v366 ^ ((*(unsigned __int8 *)(v45 + (v359 - 969 * ((4432371 * (unint64_t)v359) >> 32))) ^ 0x1A) << 8);
  v368 = v367 ^ ((*(unsigned __int8 *)(v45 + (v360 - 969 * ((4432371 * (unint64_t)v360) >> 32))) ^ 0x1A) << 12);
  v369 = v368 ^ ((*(unsigned __int8 *)(v45 + (v361 - 969 * ((4432371 * (unint64_t)v361) >> 32))) ^ 0x1A) << 16);
  v370 = v369 ^ ((*(unsigned __int8 *)(v45 + (v362 - 969 * ((4432371 * (unint64_t)v362) >> 32))) ^ 0x1A) << 20);
  v371 = v370 ^ ((*(unsigned __int8 *)(v45 + (v364 - 969 * ((4432371 * (unint64_t)v364) >> 32))) ^ 0x1A) << 24);
  v372 = (v371 ^ ((*(unsigned __int8 *)(v45
                                      + (383 * (v363 ^ 0xA)
                                                     + 6894
                                                     - 969
                                                     * ((4432371 * (unint64_t)(383 * (v363 ^ 0xAu) + 6894)) >> 32))) ^ 0xAAAAAAAA) << 28)) >> 28;
  LODWORD(STACK[0x5D8]) = ((((*(unsigned __int8 *)(v45
                                                 + (unsigned __int16)(383 * (HIBYTE(v371) & 0xF)
                                                                    - 969
                                                                    * ((unsigned __int16)((1658007 * (HIBYTE(v371) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (unsigned __int16)(383 * v372 - 969 * ((unsigned __int16)((1658007 * v372) >> 16) >> 6))) ^ 0x1A) << 12) | *(unsigned __int8 *)(v45 + (unsigned __int16)(383 * (BYTE2(v369) & 0xF) - 969 * ((unsigned __int16)((1658007 * (HIWORD(v369) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (unsigned __int16)(383 * ((v370 >> 20) & 0xF) - 969 * ((unsigned __int16)((1658007 * ((v370 >> 20) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 12) | *(unsigned __int8 *)(v45 + (unsigned __int16)(383 * ((v367 >> 8) & 0xF) - 969 * ((unsigned __int16)((1658007 * ((v367 >> 8) & 0xF)) >> 16) >> 6))) ^ 0x1A;
  v373 = ((*(unsigned __int8 *)(v45
                              + (unsigned __int16)(383 * ((unsigned __int16)v368 >> 12)
                                                 - 969
                                                 * ((unsigned __int16)((1658007
                                                                      * ((unsigned __int16)v368 >> 12)) >> 16) >> 6))) ^ 0x1A) << 12) | (16 * (*(unsigned __int8 *)(v45 + (unsigned __int16)(383 * (v366 >> 4) - 969 * ((unsigned __int16)((1658007 * (v366 >> 4)) >> 16) >> 6))) ^ 0x1A));
  v374 = LODWORD(STACK[0x628]) >> 4;
  LODWORD(STACK[0x5D4]) = *(unsigned __int8 *)(v45
                                             + (unsigned __int16)(383 * (v365 & 0xF ^ 0xA)
                                                                - 969
                                                                * ((unsigned __int16)((1658007 * (v365 & 0xF ^ 0xAu)) >> 16) >> 6))) ^ v308 ^ 0xD879F940 ^ v373;
  STACK[0x5C8] = 383 * v374 - 969 * ((1658007 * v374) >> 22);
  v375 = LODWORD(STACK[0x60C]) + 187559465;
  v376 = LODWORD(STACK[0x620]) - 689963805 + v375;
  LOWORD(v354) = 383 * (STACK[0x658] & 0xF ^ 0xA)
               - 969 * ((unsigned __int16)((1658007 * (STACK[0x658] & 0xF ^ 0xAu)) >> 16) >> 6);
  v377 = LODWORD(STACK[0x624]) - 1028951513;
  LODWORD(STACK[0x658]) = v377;
  v378 = v376 - 139067071 - ((2 * v376) & 0xEF6C0282);
  v379 = LODWORD(STACK[0x448])
       - 173274895
       + (v377 ^ 0x29C5630D)
       - ((2 * (LODWORD(STACK[0x448]) - 173274895 + (v377 ^ 0x29C5630D))) & 0xF75BD99A);
  v380 = v308 - ((2 * v308 - 1159606724) & 0xEF6C0282) - 718870433;
  LODWORD(STACK[0x5F8]) = v380;
  v381 = STACK[0x61C];
  v382 = (v380 ^ v378) - LODWORD(STACK[0x61C]) - 685796926;
  LODWORD(STACK[0x5FC]) = v382;
  LODWORD(STACK[0x5EC]) = v380 ^ 0xF7B60141;
  v383 = (v380 ^ 0xF7B60141) + v375 + v382 - 419249721 - ((2 * ((v380 ^ 0xF7B60141) + v375 + v382)) & 0xCE05838E);
  v384 = v379 + 2074995917;
  v385 = 383 * (((v379 + 2074995917) >> 28) ^ 7) + 232481;
  v386 = LODWORD(STACK[0x650]) ^ (LODWORD(STACK[0x64C]) + 438829237) ^ 0xFEF15331;
  v387 = v386 & 0x1F954677 ^ (LOBYTE(STACK[0x650]) ^ (LOBYTE(STACK[0x64C]) - 75)) & 2;
  v388 = *(unsigned __int8 *)(v45 + (unsigned __int16)STACK[0x5A0]);
  v389 = v381 - ((2 * v381 - 1529593006) & 0xA14DC28A) + 588317422;
  LODWORD(STACK[0x5E8]) = v389;
  v390 = (v389 ^ 0xAF591EBA)
       + LODWORD(STACK[0x468])
       - ((2 * ((v389 ^ 0xAF591EBA) + LODWORD(STACK[0x468])) - 474695704) & 0x9A76C5B2);
  LODWORD(STACK[0x650]) = v388 ^ 0x1A | (LODWORD(STACK[0x5F4]) << 8);
  v391 = 383 * (HIBYTE(v384) & 0xF ^ 0xB) + 232481;
  v392 = 383 * ((v384 >> 20) & 0xF ^ 0xA) + 232481;
  v393 = v392 - 969 * ((4432371 * (unint64_t)v392) >> 32);
  v394 = 383 * (HIWORD(v384) & 0xF ^ 0xD) + 232481;
  v395 = ((*(unsigned __int8 *)(v45 + (v391 - 969 * ((4432371 * (unint64_t)v391) >> 32))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (v385 - 969 * ((4432371 * (unint64_t)v385) >> 32))) ^ 0x1A) << 12) | *(unsigned __int8 *)(v45 + (v394 - 969 * ((4432371 * (unint64_t)v394) >> 32))) ^ 0x1A;
  LODWORD(STACK[0x628]) = LODWORD(STACK[0x660]) ^ (16
                                                 * (*(unsigned __int8 *)(v45 + (unsigned __int16)STACK[0x5C0]) ^ 0x1A));
  v396 = 383 * (((unsigned __int16)v384 >> 12) ^ 0xE) + 232481;
  v397 = v396 - 969 * ((4432371 * (unint64_t)v396) >> 32);
  v398 = (LODWORD(STACK[0x5E4]) << 16) ^ ((*(unsigned __int8 *)(v45 + (unsigned __int16)STACK[0x600]) ^ 0x1A) << 20);
  v399 = 383 * ((v384 >> 8) & 0xF ^ 0xC) + 232481;
  v400 = v399 - 969 * ((4432371 * (unint64_t)v399) >> 32);
  LODWORD(STACK[0x624]) = v384;
  v401 = 383 * ((v384 >> 4) ^ 0xC) + 232481;
  v402 = (v395 << 8) ^ ((*(unsigned __int8 *)(v45 + v393) ^ 0x1A) << 12) | *(unsigned __int8 *)(v45 + v400) ^ 0x1A;
  v403 = (v402 << 8) + 239998215 - ((v402 << 9) & 0x1C9C2A00);
  v404 = v390 + 1058389709;
  v405 = 383 * (((v390 + 1058389709) >> 28) ^ 0xC) + 232481;
  v406 = 383 * (HIBYTE(v404) & 0xF ^ 0xD) + 232481;
  v407 = 383 * ((v404 >> 20) & 0xF ^ 3) + 232481;
  v408 = ((*(unsigned __int8 *)(v45 + (v406 - 969 * ((4432371 * (unint64_t)v406) >> 32))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (v405 - 969 * ((4432371 * (unint64_t)v405) >> 32))) ^ 0x1A) << 12);
  v409 = 383 * (HIWORD(v404) & 0xF ^ 0xB) + 232481;
  v410 = 383 * (((unsigned __int16)v404 >> 12) ^ 6) + 232481;
  v411 = v408 | *(unsigned __int8 *)(v45 + (v409 - 969 * ((4432371 * (unint64_t)v409) >> 32))) ^ 0x1A;
  v412 = 383 * ((v404 >> 8) & 0xF ^ 2) + 232481;
  v413 = (v411 << 8) ^ ((*(unsigned __int8 *)(v45
                                            + (v407 - 969 * ((4432371 * (unint64_t)v407) >> 32))) ^ 0x1A) << 12);
  v414 = 383 * ((v404 >> 4) ^ 0xD) + 232481;
  v415 = 383 * (v404 & 0xF ^ 9) + 232481 - 969 * ((4432371 * (unint64_t)(383 * (v404 & 0xF ^ 9) + 232481)) >> 32);
  v416 = v413 | *(unsigned __int8 *)(v45 + (v412 - 969 * ((4432371 * (unint64_t)v412) >> 32))) ^ 0x1A;
  v417 = (v416 << 8) + 1405445046 - ((v416 << 9) & 0xA78AC600);
  v418 = v403 ^ ((*(unsigned __int8 *)(v45 + v397) ^ 0x1A) << 12);
  v419 = *(unsigned __int8 *)(v45
                            + (383 * (v384 & 0xF ^ 0xD)
                                           + 232481
                                           - 969
                                           * ((4432371 * (unint64_t)(383 * (v384 & 0xF ^ 0xD) + 232481)) >> 32))) ^ 0x1A;
  v420 = v418 ^ 0xE4E1507 | v419;
  v421 = *(unsigned __int8 *)(v45 + (v410 - 969 * ((4432371 * (unint64_t)v410) >> 32)));
  v422 = v419 & 0xF;
  v423 = *(unsigned __int8 *)(v45 + v415) ^ 0x1A;
  v424 = 383 * (v422 & 0xFFFFFF0F | (16 * (v423 & 0xF)));
  v425 = v417 ^ ((v421 ^ 0x1A) << 12);
  v426 = v425 ^ 0x53C563B6 | v423;
  v427 = *(unsigned __int8 *)(v45
                            + (v424 + 105708 - 969 * ((4432371 * (unint64_t)(v424 + 105708)) >> 32))) ^ 0x1A;
  v428 = 383 * ((v427 + 1784866936 - ((2 * v427) & 0xF0)) ^ LODWORD(STACK[0x678]));
  v429 = (v428 + 105708) % 0x3C9u;
  v430 = (v428 + 270015) % 0x3C9u + 1436171320 - ((2 * ((v428 + 270015) % 0x3C9u)) & 0x70);
  v431 = *(unsigned __int8 *)(v45 + (v430 ^ 0x559A3C38)) >> 4;
  v432 = (v430 & 0x114 ^ 0x104 | v430 & 0x114 ^ 0x10)
       + (((v431 ^ 1) + ((2 * ((v431 ^ 1 | 0x7A) ^ v431)) ^ 9) + 27) ^ *(unsigned __int8 *)(v45 + (v424 + 270015 - 969 * ((4432371 * (unint64_t)(v424 + 270015)) >> 32))));
  v433 = v420 ^ (16
               * (*(unsigned __int8 *)(v45 + (v401 - 969 * ((4432371 * (unint64_t)v401) >> 32))) ^ 0x1A));
  v434 = v426 ^ (16
               * (*(unsigned __int8 *)(v45 + (v414 - 969 * ((4432371 * (unint64_t)v414) >> 32))) ^ 0x1A));
  v435 = 383 * (v434 & 0xF0 | (v433 >> 4));
  v436 = v435 + 270015 - 969 * ((4432371 * (unint64_t)(v435 + 270015)) >> 32);
  v437 = 383
       * (*(unsigned __int8 *)(v45
                             + (v435
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v435 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (383 * v432 - 969 * ((4432371 * (unint64_t)(383 * v432)) >> 32))) ^ 0x1A)) ^ 0x1A);
  v438 = v437 + 105708 - 969 * ((4432371 * (unint64_t)(v437 + 105708)) >> 32);
  v439 = *(unsigned __int8 *)(v45
                            + (v437
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v437 + 270015)) >> 32))) >> 4;
  v440 = ((v439 ^ 1) + ((2 * ((v439 ^ 1 | 0x7A) ^ v439)) ^ 9) + 27) ^ *(unsigned __int8 *)(v45 + v436);
  LODWORD(STACK[0x61C]) = v398 | ((*(unsigned __int8 *)(v45 + (unsigned __int16)STACK[0x610]) ^ 0x1A) << 8);
  LODWORD(STACK[0x610]) = *(unsigned __int8 *)(v45 + (unsigned __int16)v354) ^ 0x1A | ((*(unsigned __int8 *)(v45 + (unsigned __int16)STACK[0x670]) ^ 0x1A) << 12);
  v441 = 383 * ((v434 >> 4) & 0xF0 | (v433 >> 8) & 0xF);
  v442 = 383
       * (*(unsigned __int8 *)(v45
                             + (v441
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v441 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (383 * v440 + 105708 - 969 * ((4432371 * (unint64_t)(383 * v440 + 105708)) >> 32))) ^ 0x1A)) ^ 0x1A);
  v443 = v442 + 105708 - 969 * ((4432371 * (unint64_t)(v442 + 105708)) >> 32);
  v444 = *(unsigned __int8 *)(v45
                            + (v442
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v442 + 270015)) >> 32)));
  v445 = (((v444 >> 4) ^ 1) - ((v444 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v45
                                                                                               + (v441 + 270015 - 969 * ((4432371 * (unint64_t)(v441 + 270015)) >> 32)));
  LODWORD(STACK[0x60C]) = LODWORD(STACK[0x638]) ^ 0x1F954675 ^ (16
                                                              * (*(unsigned __int8 *)(v45
                                                                                    + (unsigned __int16)STACK[0x5C8]) ^ 0x1A));
  LODWORD(STACK[0x620]) = LODWORD(STACK[0x5D4]) ^ (LODWORD(STACK[0x5D8]) << 8);
  LODWORD(STACK[0x670]) = v386 + 529876597 - 2 * v387;
  v446 = 383 * (((v425 >> 8) & 0xF0 | ((unsigned __int16)v418 >> 12)) ^ 0x61);
  v447 = 383
       * (*(unsigned __int8 *)(v45
                             + (v446
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v446 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (383 * v445 + 105708 - 969 * ((4432371 * (unint64_t)(383 * v445 + 105708)) >> 32))) ^ 0x1A)) ^ 0x1A);
  v448 = v447 + 105708 - 969 * ((4432371 * (unint64_t)(v447 + 105708)) >> 32);
  v449 = *(unsigned __int8 *)(v45
                            + (v447
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v447 + 270015)) >> 32)));
  v450 = (((v449 >> 4) ^ 1) - ((v449 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v45
                                                                                               + (v446 + 270015 - 969 * ((4432371 * (unint64_t)(v446 + 270015)) >> 32)));
  v451 = ((*(unsigned __int8 *)(v45 + v448) ^ 0x1A) << 12) ^ ((*(unsigned __int8 *)(v45 + v443) ^ 0x1A) << 8);
  v452 = 383 * (((v425 >> 12) & 0xF0 | HIWORD(v418) & 0xF) ^ 0x5E);
  v453 = 383
       * (*(unsigned __int8 *)(v45
                             + (v452
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v452 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (383 * v450 + 105708 - 969 * ((4432371 * (unint64_t)(383 * v450 + 105708)) >> 32))) ^ 0x1A)) ^ 0x1A);
  v454 = v453 + 105708 - 969 * ((4432371 * (unint64_t)(v453 + 105708)) >> 32);
  v455 = *(unsigned __int8 *)(v45
                            + (v453
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v453 + 270015)) >> 32)));
  v456 = 383
       * ((((v455 >> 4) ^ 0x21) - ((v455 >> 3) & 0x14) - 6) ^ *(unsigned __int8 *)(v45
                                                                                                  + (v452 + 270015 - 969 * ((4432371 * (unint64_t)(v452 + 270015)) >> 32))))
       + 105708;
  v457 = 383 * ((HIWORD(v417) & 0xF0 | (v403 >> 20) & 0xF) ^ 0xC4);
  v458 = v457 + 270015 - 969 * ((4432371 * (unint64_t)(v457 + 270015)) >> 32);
  v459 = 383
       * (*(unsigned __int8 *)(v45
                             + (v457
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v457 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v456 - 969 * ((4432371 * (unint64_t)v456) >> 32))) ^ 0x1A)) ^ 0x1A);
  v460 = ((*(unsigned __int8 *)(v45
                              + (v459
                                             + 105708
                                             - 969 * ((4432371 * (unint64_t)(v459 + 105708)) >> 32))) ^ 0x1A) << 20) ^ ((*(unsigned __int8 *)(v45 + v454) ^ 0x1A) << 16);
  v461 = v459 + 270015 - 969 * ((4432371 * (unint64_t)(v459 + 270015)) >> 32);
  v462 = *(unsigned __int8 *)(v45 + ((v461 + 23461172 - ((2 * v461) & 0x268)) ^ 0x165FD34u));
  v463 = 383 * ((((v462 >> 4) ^ 1) - ((v462 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v45 + v458))
       + 105708;
  v464 = 383 * (((v417 >> 20) & 0xF0 | HIBYTE(v403) & 0xF) ^ 0x3E);
  v465 = 383
       * (*(unsigned __int8 *)(v45
                             + (v464
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v464 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v463 - 969 * ((4432371 * (unint64_t)v463) >> 32))) ^ 0x1A)) ^ 0x1A);
  v466 = v465 + 105708 - 969 * ((4432371 * (unint64_t)(v465 + 105708)) >> 32);
  v467 = *(unsigned __int8 *)(v45
                            + (v465
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v465 + 270015)) >> 32))) >> 4;
  v468 = 383
       * (((v467 ^ 1) + ((2 * ((v467 ^ 1 | 0x7A) ^ v467)) ^ 9) + 27) ^ *(unsigned __int8 *)(v45 + (v464 + 270015 - 969 * ((4432371 * (unint64_t)(v464 + 270015)) >> 32))))
       + 105708;
  v469 = 383 * ((HIBYTE(v417) & 0xF0 | (v403 >> 28)) ^ 0x50) + 105708;
  v470 = *(unsigned __int8 *)(v45 + (v469 - 969 * ((4432371 * (unint64_t)v469) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v468 - 969 * ((4432371 * (unint64_t)v468) >> 32))) ^ 0x1A));
  v471 = *(unsigned __int8 *)(v45 + v429) ^ 0x1A;
  v472 = v471 ^ (16 * (*(unsigned __int8 *)(v45 + v438) ^ 0x1A));
  v473 = 383 * (v422 & 0xFFFFFF0F | (16 * (v471 & 0xF))) + 6894;
  v474 = v451 ^ v472;
  v475 = 383 * (v472 & 0xF0 | (v433 >> 4)) + 6894;
  v476 = v475 - 969 * ((4432371 * (unint64_t)v475) >> 32);
  v477 = 383 * ((v474 >> 4) & 0xF0 | (v433 >> 8) & 0xF) + 6894;
  v478 = v477 - 969 * ((4432371 * (unint64_t)v477) >> 32);
  v479 = 383 * (((v451 >> 8) & 0xF0 | ((unsigned __int16)v418 >> 12)) ^ 1) + 6894;
  v480 = v479 - 969 * ((4432371 * (unint64_t)v479) >> 32);
  v481 = v460 ^ v474 ^ ((*(unsigned __int8 *)(v45 + v466) ^ 0x1A) << 24);
  v482 = 383 * ((((v460 ^ v474) >> 12) & 0xF0 | HIWORD(v418) & 0xF) ^ 0xE) + 6894;
  v483 = v482 - 969 * ((4432371 * (unint64_t)v482) >> 32);
  v484 = 383 * ((HIWORD(v460) & 0xF0 | (v403 >> 20) & 0xF) ^ 4) + 6894;
  v485 = v484 - 969 * ((4432371 * (unint64_t)v484) >> 32);
  v486 = ((v481 ^ ((*(unsigned __int8 *)(v45
                                       + (383 * (v470 ^ 0x1A)
                                                      + 105708
                                                      - 969
                                                      * ((4432371 * (unint64_t)(383 * (v470 ^ 0x1Au) + 105708)) >> 32))) ^ 0xAAAAAAAA) << 28)) >> 24) & 0xF0 | (v403 >> 28);
  v487 = 383 * (((v481 >> 20) & 0xF0 | HIBYTE(v403) & 0xF) ^ 0xE) + 6894;
  v488 = v487 - 969 * ((4432371 * (unint64_t)v487) >> 32);
  v489 = *(unsigned __int8 *)(v45 + (v473 - 969 * ((4432371 * (unint64_t)v473) >> 32)));
  v490 = v489 ^ (16 * (*(unsigned __int8 *)(v45 + v476) ^ 0x1A)) ^ 0x1A;
  v491 = v490 ^ ((*(unsigned __int8 *)(v45 + v478) ^ 0x1A) << 8);
  v492 = v491 ^ ((*(unsigned __int8 *)(v45 + v480) ^ 0x1A) << 12);
  v493 = v492 ^ ((*(unsigned __int8 *)(v45 + v483) ^ 0x1A) << 16);
  v494 = v493 ^ ((*(unsigned __int8 *)(v45 + v485) ^ 0x1A) << 20);
  v495 = v494 ^ ((*(unsigned __int8 *)(v45 + v488) ^ 0x1A) << 24);
  v496 = (v495 ^ ((*(unsigned __int8 *)(v45
                                      + (383 * v486
                                                     + 6894
                                                     - 969 * ((4432371 * (unint64_t)(383 * v486 + 6894)) >> 32))) ^ 0xAAAAAAAA) << 28)) >> 28;
  v497 = STACK[0x5F0];
  v498 = ((((*(unsigned __int8 *)(v45
                                + (unsigned __int16)(383 * (HIBYTE(v495) & 0xF)
                                                   - 969
                                                   * ((unsigned __int16)((1658007 * (HIBYTE(v495) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (unsigned __int16)(383 * v496 - 969 * ((unsigned __int16)((1658007 * v496) >> 16) >> 6))) ^ 0x1A) << 12) | *(unsigned __int8 *)(v45 + (unsigned __int16)(383 * (BYTE2(v493) & 0xF) - 969 * ((unsigned __int16)((1658007 * (HIWORD(v493) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (unsigned __int16)(383 * ((v494 >> 20) & 0xF) - 969 * ((unsigned __int16)((1658007 * ((v494 >> 20) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 12) | *(unsigned __int8 *)(v45 + (unsigned __int16)(383 * ((v491 >> 8) & 0xF) - 969 * ((unsigned __int16)((1658007 * ((v491 >> 8) & 0xF)) >> 16) >> 6))) ^ 0x1A;
  LOWORD(v495) = 383 * (v489 & 0xF ^ 0xA) - 969 * ((unsigned __int16)((1658007 * (v489 & 0xF ^ 0xAu)) >> 16) >> 6);
  v499 = STACK[0x640];
  v500 = LODWORD(STACK[0x640]) - 345121432;
  v501 = (LODWORD(STACK[0x658]) ^ 0x95A92BF0 ^ LODWORD(STACK[0x5F0])) - v500;
  LODWORD(STACK[0x638]) = v501;
  v502 = *(unsigned __int8 *)(v45 + (unsigned __int16)v495) ^ 0x1A | ((*(unsigned __int8 *)(v45
                                                                                          + (unsigned __int16)(383 * ((unsigned __int16)v492 >> 12) - 969 * ((unsigned __int16)((1658007 * ((unsigned __int16)v492 >> 12)) >> 16) >> 6))) ^ 0x1A) << 12);
  v503 = STACK[0x5E8];
  LODWORD(STACK[0x600]) = LODWORD(STACK[0x5F8]) ^ LODWORD(STACK[0x5E8]) ^ (16
                                                                         * (*(unsigned __int8 *)(v45
                                                                                               + (unsigned __int16)(383 * (v490 >> 4) - 969 * ((unsigned __int16)((1658007 * (v490 >> 4)) >> 16) >> 6))) ^ 0x1A)) ^ v502 ^ (v498 << 8);
  LODWORD(STACK[0x5E4]) = (v383 ^ 0xE702C1C7) + LODWORD(STACK[0x5FC]) + (v383 ^ 0xF25DD79A);
  LODWORD(STACK[0x660]) = ((2 * (LODWORD(STACK[0x668]) - v500)) & 0xFBFBBFAE)
                        + ((LODWORD(STACK[0x668]) - v500) ^ 0xFDFDDFD7);
  v504 = LODWORD(STACK[0x45C])
       - 416927446
       + v501
       + 1687731942
       - ((2 * (LODWORD(STACK[0x45C]) - 416927446 + v501)) & 0xC9317DCC);
  v505 = v504;
  v506 = ((*(unsigned __int8 *)(v45
                              + (383 * (HIBYTE(v504) & 0xF ^ 4)
                                             + 232481
                                             - 969
                                             * ((4432371 * (unint64_t)(383 * (HIBYTE(v504) & 0xF ^ 4) + 232481)) >> 32))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (383 * ((v504 >> 28) ^ 6) + 232481 - 969 * ((4432371 * (unint64_t)(383 * ((v504 >> 28) ^ 6) + 232481)) >> 32))) ^ 0x1A) << 12);
  v507 = ((2 * v383) & 0x8D97F8DA ^ 0xC96E8DA) + (v383 ^ 0x48A08A02);
  v508 = (((v383 ^ 0xF25DD79A) - ((2 * (v383 ^ 0xF25DD79A)) & 0xA14DC28A) + 1353113925) ^ v503) - v507;
  LODWORD(STACK[0x5D8]) = v508;
  v509 = 383 * ((v505 >> 20) & 0xF ^ 9) + 232481;
  v510 = LODWORD(STACK[0x464]) - v508 - ((2 * (LODWORD(STACK[0x464]) - v508) + 1051422762) & 0x4EABAF6C);
  v511 = 383 * (HIWORD(v505) & 0xF ^ 8) + 232481;
  LODWORD(STACK[0x5FC]) = v505;
  v512 = 383 * (((unsigned __int16)v505 >> 12) ^ 0xB) + 232481;
  v513 = v506 | *(unsigned __int8 *)(v45 + (v511 - 969 * ((4432371 * (unint64_t)v511) >> 32))) ^ 0x1A;
  v514 = 383 * ((v505 >> 4) ^ 0xE) + 232481;
  v515 = 383 * ((v505 >> 8) & 0xF ^ 0xE) + 232481;
  v516 = (v513 << 8) ^ ((*(unsigned __int8 *)(v45
                                            + (v509 - 969 * ((4432371 * (unint64_t)v509) >> 32))) ^ 0x1A) << 12);
  v517 = 383 * (v505 & 0xF ^ 6) + 232481;
  v518 = *(unsigned __int8 *)(v45 + (v517 - 969 * ((4432371 * (unint64_t)v517) >> 32)));
  v519 = ((v516 | *(unsigned __int8 *)(v45 + (v515 - 969 * ((4432371 * (unint64_t)v515) >> 32))) ^ 0x1Au) << 8) ^ ((*(unsigned __int8 *)(v45 + (v512 - 969 * ((4432371 * (unint64_t)v512) >> 32))) ^ 0x1ALL) << 12) | v518 ^ 0x10;
  v520 = v510 - 961835061;
  v521 = 383 * (((v510 - 961835061) >> 28) ^ 2) + 232481;
  v522 = v521 - 969 * ((4432371 * (unint64_t)v521) >> 32);
  v523 = *(unsigned __int8 *)(v45 + (v514 - 969 * ((4432371 * (unint64_t)v514) >> 32))) ^ 0x36110D95 ^ (((v518 ^ 0xAAAAAAAA) << 28) | (v519 >> 4));
  LODWORD(v519) = 383 * (HIBYTE(v520) & 0xF ^ 7) + 232481;
  LODWORD(v519) = v519 - 969 * ((4432371 * (unint64_t)v519) >> 32);
  v524 = 383 * ((BYTE2(v520) ^ 0x55) >> 4) + 232481;
  LODWORD(v518) = 383 * ((HIWORD(v520) ^ 0x2755) & 0xF) + 232481;
  LODWORD(v519) = ((*(unsigned __int8 *)(v45 + (((_DWORD)v519 + 1469569788 - ((2 * (_DWORD)v519) & 0x5F8)) ^ 0x5797DAFCu)) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + v522) ^ 0x1A) << 12) | *(unsigned __int8 *)(v45 + (v518 - 969 * ((4432371 * (unint64_t)v518) >> 32))) ^ 0x1A;
  LODWORD(v518) = 383 * (((unsigned __int16)v520 >> 12) ^ 0xD) + 232481;
  LODWORD(v518) = v518 - 969 * ((4432371 * (unint64_t)v518) >> 32);
  v525 = v518 + 1102052368 - ((2 * v518) & 0x20);
  LODWORD(v519) = ((_DWORD)v519 << 8) ^ ((*(unsigned __int8 *)(v45
                                                             + (v524
                                                                            - 969
                                                                            * ((4432371 * (unint64_t)v524) >> 32))) ^ 0x1A) << 12);
  LODWORD(v518) = 383 * ((v520 >> 8) & 0xF ^ 7) + 232481;
  v526 = 383 * ((v520 >> 4) ^ 0xB) + 232481;
  LODWORD(v519) = v519 | *(unsigned __int8 *)(v45
                                            + (v518
                                                           - 969
                                                           * ((4432371 * (unint64_t)v518) >> 32))) ^ 0x1A;
  v527 = ((_DWORD)v519 << 8) - (((_DWORD)v519 << 9) & 0x1B40C400);
  LODWORD(v519) = 383 * (v520 & 0xF ^ 6)
                + 232481
                - 969 * ((4432371 * (unint64_t)(383 * (v520 & 0xF ^ 6) + 232481)) >> 32);
  LODWORD(v518) = *(unsigned __int8 *)(v45 + (v526 - 969 * ((4432371 * (unint64_t)v526) >> 32))) ^ 0x1A;
  v528 = 16 * v518 - ((32 * v518) & 0x4C0);
  LOBYTE(v519) = *(_BYTE *)(v45 + v519) ^ 0x1A;
  LOBYTE(v526) = (16 * v518) ^ v519;
  LODWORD(v518) = (v523 >> 28) ^ 3;
  LODWORD(v519) = (16 * (v519 & 0xF)) | v518;
  v529 = (383 * (int)v519 + 105708) % 0x3C9u + 1738673191 - ((2 * ((383 * (int)v519 + 105708) % 0x3C9u)) & 0x4E);
  v530 = *(unsigned __int8 *)(v45 + (v529 ^ 0x67A20C27)) ^ LODWORD(STACK[0x678]) ^ 0x1A;
  LODWORD(v519) = 383 * (v519 + (v529 & 0xCD ^ 0x71FEFCC8 | v529 & 0xCD ^ 5)) + 1938286604;
  v531 = 383 * (((2 * v530) & 0x228 ^ 0x20) + (v530 ^ 0x6A62E96C));
  v532 = *(unsigned __int8 *)(v45 + (383 * (v530 ^ 0x6A62E878u) + 270015) % 0x3C9);
  LODWORD(v519) = 383
                * ((((v532 >> 4) ^ 1) - ((v532 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v45 + v519 % 0x3C9))
                + 105708;
  v533 = 383 * (v526 & 0xF0 | ~(_BYTE)v523 & 0xF);
  LODWORD(v519) = *(unsigned __int8 *)(v45
                                     + (v533
                                                    + 105708
                                                    - 969
                                                    * ((4432371 * (unint64_t)(v533 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v519 - 969 * ((4432371 * (unint64_t)v519) >> 32))) ^ 0x1A)) ^ 0x1A;
  v534 = 383 * (v519 + (v523 & 0x114 ^ 0x10 | v523 & 0x114 ^ 0x104));
  v535 = v534 - 969 * ((4432371 * (unint64_t)v534) >> 32);
  LODWORD(v519) = *(unsigned __int8 *)(v45
                                     + (383 * v519
                                                    + 270015
                                                    - 969
                                                    * ((4432371 * (unint64_t)(383 * v519 + 270015)) >> 32)));
  LODWORD(v519) = 383
                * ((((v519 >> 4) ^ 1) - ((v519 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v45 + (v533 + 270015 - 969 * ((4432371 * (unint64_t)(v533 + 270015)) >> 32))))
                + 105708;
  v536 = v527 + 228614881;
  v537 = 383 * (((((v527 + 228614881) ^ (v528 + 609)) >> 4) & 0xF0 | (v523 >> 4)) ^ 8);
  LODWORD(v519) = *(unsigned __int8 *)(v45
                                     + (v537
                                                    + 105708
                                                    - 969 * ((4432371 * (unint64_t)(v537 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v519 - 969 * ((4432371 * (unint64_t)v519) >> 32))) ^ 0x1A));
  v538 = v537 + 270015 - 969 * ((4432371 * (unint64_t)(v537 + 270015)) >> 32);
  v539 = *(unsigned __int8 *)(v45 + v531 % 0x3C9) ^ 0x1A;
  v540 = v539 - 878843407 - ((2 * v539) & 0xFFFFFFE3);
  v541 = 16 * (*(unsigned __int8 *)(v45 + v535) ^ 0x1A)
       - 878843407
       - ((32 * (*(unsigned __int8 *)(v45 + v535) ^ 0x1A)) & 0xFFFFF3FF);
  LODWORD(v519) = 383 * (v519 ^ 0x1A);
  v542 = v519 + 105708 - 969 * ((4432371 * (unint64_t)(v519 + 105708)) >> 32);
  LODWORD(v519) = *(unsigned __int8 *)(v45
                                     + (v519
                                                    + 270015
                                                    - 969
                                                    * ((4432371 * (unint64_t)(v519 + 270015)) >> 32)));
  LODWORD(v519) = 383
                * ((((v519 >> 4) ^ 1) - ((v519 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v45 + v538))
                + 105708;
  v543 = v536 ^ ((*(unsigned __int8 *)(v45 + (v525 ^ 0x41AFFC10u)) ^ 0x1A) << 12);
  v544 = (v523 >> 8) & 0xF ^ 0xD;
  v545 = 383 * (((v543 >> 8) & 0xF0 | v544) ^ 0x60);
  LODWORD(v519) = 383
                * (*(unsigned __int8 *)(v45
                                      + (v545
                                                     + 105708
                                                     - 969
                                                     * ((4432371 * (unint64_t)(v545 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v519 - 969 * ((4432371 * (unint64_t)v519) >> 32))) ^ 0x1A)) ^ 0x1A);
  v546 = v519 + 105708 - 969 * ((4432371 * (unint64_t)(v519 + 105708)) >> 32);
  LODWORD(v519) = *(unsigned __int8 *)(v45
                                     + (v519
                                                    + 270015
                                                    - 969
                                                    * ((4432371 * (unint64_t)(v519 + 270015)) >> 32))) >> 4;
  LODWORD(v519) = 383
                * (((v519 ^ 1) + ((2 * ((v519 ^ 1 | 0x7A) ^ v519)) ^ 9) + 27) ^ *(unsigned __int8 *)(v45 + (v545 + 270015 - 969 * ((4432371 * (unint64_t)(v545 + 270015)) >> 32))))
                + 105708;
  v547 = 383 * ((v543 >> 12) & 0xF0 | ((unsigned __int16)v523 >> 12));
  LODWORD(v519) = *(unsigned __int8 *)(v45
                                     + (v547
                                                    + 105708
                                                    - 969
                                                    * ((4432371 * (unint64_t)(v547 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v519 - 969 * ((4432371 * (unint64_t)v519) >> 32))) ^ 0x1A));
  v548 = v547 + 270015 - 969 * ((4432371 * (unint64_t)(v547 + 270015)) >> 32);
  v549 = ((*(unsigned __int8 *)(v45 + v546) ^ 0x1A) << 12) ^ ((*(unsigned __int8 *)(v45 + v542) ^ 0x1A) << 8);
  v550 = 383 * (v519 ^ 0x1A);
  LODWORD(v519) = *(unsigned __int8 *)(v45
                                     + (v550
                                                    + 270015
                                                    - 969
                                                    * ((4432371 * (unint64_t)(v550 + 270015)) >> 32))) >> 4;
  LODWORD(v519) = 383
                * (((v519 ^ 1) + ((2 * ((v519 ^ 1 | 0x7A) ^ v519)) ^ 9) + 27) ^ *(unsigned __int8 *)(v45 + v548))
                + 105708;
  v551 = 383 * ((HIWORD(v536) & 0xF0 | WORD1(v523) & 0xF) ^ 0xA1);
  v552 = v551 + 270015 - 969 * ((4432371 * (unint64_t)(v551 + 270015)) >> 32);
  v553 = 383
       * (*(unsigned __int8 *)(v45
                             + (v551 + 105708 - 969
                                                            * ((4432371 * (unint64_t)(v551 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v519 - 969 * ((4432371 * (unint64_t)v519) >> 32))) ^ 0x1A)) ^ 0x1A);
  LODWORD(v519) = 383
                * ((((*(_BYTE *)(v45
                                                + (v553
                                                               + 270015
                                                               - 969
                                                               * ((4432371
                                                                 * (unint64_t)(v553 + 270015)) >> 32))) >> 4) ^ 1)
                                   - ((*(_BYTE *)(v45
                                                + (v553
                                                               + 270015
                                                               - 969
                                                               * ((4432371
                                                                 * (unint64_t)(v553 + 270015)) >> 32))) >> 3) & 0x14)
                                   + 26) ^ *(unsigned __int8 *)(v45 + v552))
                + 105708;
  v554 = 383 * (((v536 >> 20) & 0xF0 | (v523 >> 20) & 0xF) ^ 0xD1);
  LODWORD(v519) = 383
                * (*(unsigned __int8 *)(v45
                                      + (v554
                                                     + 105708
                                                     - 969 * ((4432371 * (unint64_t)(v554 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v519 - 969 * ((4432371 * (unint64_t)v519) >> 32))) ^ 0x1A)) ^ 0x1A);
  v555 = *(unsigned __int8 *)(v45
                            + (v519
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v519 + 270015)) >> 32))) >> 4;
  v556 = 383
       * (((v555 ^ 1) + ((2 * ((v555 ^ 1 | 0x7A) ^ v555)) ^ 9) + 27) ^ *(unsigned __int8 *)(v45 + (v554 + 270015 - 969 * ((4432371 * (unint64_t)(v554 + 270015)) >> 32))))
       + 105708;
  v557 = 383 * ((HIBYTE(v536) & 0xF0 | BYTE3(v523) & 0xF) ^ 6) + 105708;
  v558 = 383
       * (*(unsigned __int8 *)(v45 + (v557 - 969 * ((4432371 * (unint64_t)v557) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v556 - 969 * ((4432371 * (unint64_t)v556) >> 32))) ^ 0x1A)) ^ 0x1A)
       + 105708;
  LODWORD(v519) = ((*(unsigned __int8 *)(v45 + (v558 - 969 * ((4432371 * (unint64_t)v558) >> 32))) ^ 0xAAAAAAAA) << 28) ^ ((*(unsigned __int8 *)(v45 + (v519 + 105708 - 969 * ((4432371 * (unint64_t)(v519 + 105708)) >> 32))) ^ 0x1A) << 24);
  v559 = v553 + 105708 - 969 * ((4432371 * (unint64_t)(v553 + 105708)) >> 32);
  v560 = v541 ^ v540;
  v561 = v549 ^ v541 ^ v540 ^ ((*(unsigned __int8 *)(v45
                                                   + (v550
                                                                  + 105708
                                                                  - 969
                                                                  * ((4432371
                                                                    * (unint64_t)(v550 + 105708)) >> 32))) ^ 0x1A) << 16);
  v562 = v561 ^ ((*(unsigned __int8 *)(v45 + v559) ^ 0x1A) << 20);
  HIDWORD(v563) = v540;
  LODWORD(v563) = v540;
  v564 = v562 ^ 0xE6FCE12E ^ (v519 - 419634898 - ((2 * v519) & 0xCC000000));
  LODWORD(v519) = (v563 >> 3) & 0xE0000001 | ((_DWORD)v518 << 25);
  LODWORD(v518) = 383 * (v560 & 0xF0 | ~(_BYTE)v523 & 0xF) + 6894;
  v565 = (v549 >> 8) & 0xF0 | v544;
  v566 = 383 * ((((v549 ^ v560) >> 4) & 0xF0 | (v523 >> 4)) ^ 8) + 6894;
  LODWORD(v518) = ((*(unsigned __int8 *)(v45 + (v566 - 969 * ((4432371 * (unint64_t)v566) >> 32))) ^ 0x1A) << 8) ^ (16 * (*(unsigned __int8 *)(v45 + (v518 - 969 * ((4432371 * (unint64_t)v518) >> 32))) ^ 0x1A));
  v567 = *(unsigned __int8 *)(v45 + (383 * (__ROR4__(v519 ^ 0x950F13BB, 25) ^ 0x8789DDDA) + 6894) % 0x3C9);
  LODWORD(STACK[0x5F8]) = v567;
  LODWORD(v519) = 383 * ((v561 >> 12) & 0xF0 | ((unsigned __int16)v523 >> 12)) + 6894;
  v568 = 383 * ((HIWORD(v562) & 0xF0 | WORD1(v523) & 0xF) ^ 1) + 6894;
  v569 = (v564 >> 20) & 0xF0 | (v523 >> 20) & 0xF;
  v570 = HIBYTE(v564) & 0xF0 | BYTE3(v523) & 0xF;
  LODWORD(v523) = v518 ^ ((*(unsigned __int8 *)(v45
                                              + (383 * v565
                                                             + 6894
                                                             - 969
                                                             * ((4432371
                                                               * (unint64_t)(383 * v565 + 6894)) >> 32))) ^ 0x1A) << 12);
  v571 = (v567 ^ 0x1A | ((*(unsigned __int8 *)(v45
                                             + (v519
                                                            - 969
                                                            * ((4432371 * (unint64_t)v519) >> 32))) ^ 0x1A) << 16)) ^ v523;
  v572 = ((*(unsigned __int8 *)(v45
                              + (383 * (v569 ^ 1)
                                             + 6894
                                             - 969 * ((4432371 * (unint64_t)(383 * (v569 ^ 1) + 6894)) >> 32))) ^ 0x1A) << 24) ^ ((*(unsigned __int8 *)(v45 + (v568 - 969 * ((4432371 * (unint64_t)v568) >> 32))) ^ 0x1A) << 20) ^ v571;
  LODWORD(v519) = ((v572 ^ (((*(unsigned __int8 *)(v45
                                                 + (383 * (v570 ^ 6)
                                                                + 6894
                                                                - 969
                                                                * ((4432371 * (unint64_t)(383 * (v570 ^ 6) + 6894)) >> 32))) ^ 0xAAAAAAAA) << 28)
                          - 1911714361)) >> 28) ^ 8;
  LODWORD(STACK[0x5F4]) = ((((((*(unsigned __int8 *)(v45
                                                   + (unsigned __int16)(383 * (HIBYTE(v572) & 0xF)
                                                                      - 969
                                                                      * ((unsigned __int16)((1658007 * (HIBYTE(v572) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (unsigned __int16)(383 * v519 - 969 * ((unsigned __int16)((1658007 * v519) >> 16) >> 6))) ^ 0x1A) << 12) | *(unsigned __int8 *)(v45 + (unsigned __int16)(383 * (BYTE2(v571) & 0xF) - 969 * ((unsigned __int16)((1658007 * (HIWORD(v571) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (unsigned __int16)(383 * ((v572 >> 20) & 0xF) - 969 * ((unsigned __int16)((1658007 * ((v572 >> 20) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 12) | *(unsigned __int8 *)(v45 + (unsigned __int16)(383 * ((v518 >> 8) & 0xF) - 969 * ((unsigned __int16)((1658007 * ((v518 >> 8) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (unsigned __int16)(383 * ((unsigned __int16)v523 >> 12) - 969 * ((unsigned __int16)((1658007 * ((unsigned __int16)v523 >> 12)) >> 16) >> 6))) ^ 0x1A) << 12);
  v573 = LODWORD(STACK[0x63C])
       + (v497 ^ 0xA9335EA0)
       + (v497 ^ 0xBC6C48FD)
       + (v497 & 0xEB6DDD68 ^ 0xA86C4868)
       + (v497 & 0xEB6DDD68 ^ 0x43019500)
       + v499
       + 624281321;
  LODWORD(STACK[0x5F0]) = v573;
  v574 = 345121432 - v573 + LODWORD(STACK[0x638]) + LODWORD(STACK[0x660]);
  LODWORD(STACK[0x638]) = v574;
  LODWORD(v519) = v574
                + LODWORD(STACK[0x460])
                - 2 * ((v574 + LODWORD(STACK[0x460]) + 652636874) & 0x2009DF1F ^ (v574 + LODWORD(STACK[0x460])) & 1);
  LODWORD(STACK[0x5E8]) = v507;
  v575 = LODWORD(STACK[0x5EC]) - v507 + 1187773549;
  v576 = LODWORD(STACK[0x5E4]) + v507;
  LODWORD(STACK[0x5E4]) = v576;
  LODWORD(STACK[0x5C8]) = v575;
  v577 = v575 - 418868579 - v576 + LODWORD(STACK[0x5D8]);
  LODWORD(STACK[0x5EC]) = v577;
  LODWORD(STACK[0x63C]) = v577 - 3992;
  v578 = LODWORD(STACK[0x43C])
       - (v577
        - 3992)
       - 1866507099
       - ((2 * (LODWORD(STACK[0x43C]) - (v577 - 3992) - 1866507099) + 821898870) & 0xECF98E96);
  v579 = v519 + 116412904;
  LODWORD(v519) = 383 * (((v519 + 116412904) >> 28) ^ 0xA) + 232481;
  LODWORD(v518) = 383 * (HIWORD(v579) & 0xF ^ 9) + 232481;
  v580 = 383 * (~(v579 >> 8) & 0xF) + 232481;
  LODWORD(v519) = ((((*(unsigned __int8 *)(v45
                                         + (383 * (HIBYTE(v579) & 0xF)
                                                        + 232481
                                                        - 969
                                                        * ((4432371
                                                          * (unint64_t)(383 * (HIBYTE(v579) & 0xF) + 232481)) >> 32))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (v519 - 969 * ((4432371 * (unint64_t)v519) >> 32))) ^ 0x1A) << 12) | *(unsigned __int8 *)(v45 + (v518 - 969 * ((4432371 * (unint64_t)v518) >> 32))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (383 * ((v579 >> 20) & 0xF) + 232481 - 969 * ((4432371 * (unint64_t)(383 * ((v579 >> 20) & 0xF) + 232481)) >> 32))) ^ 0x1A) << 12) | *(unsigned __int8 *)(v45 + (v580 - 969 * ((4432371 * (unint64_t)v580) >> 32))) ^ 0x1A;
  LODWORD(v523) = ((_DWORD)v519 << 8) - (((_DWORD)v519 << 9) & 0xD03C5600);
  v581 = v579;
  LODWORD(v519) = ((2 * (v579 & 0xF)) ^ 0x1C) + (v579 & 0xF ^ 0x251);
  v582 = 383 * ((-251354759 - v578) >> 28)
       + 232481
       - 969 * ((4432371 * (unint64_t)(383 * ((-251354759 - v578) >> 28) + 232481)) >> 32);
  v578 += 251354758;
  LODWORD(v518) = 383 * (HIBYTE(v578) & 0xF ^ 6) + 232481;
  v583 = ((*(unsigned __int8 *)(v45
                              + (v518 - 969 * ((4432371 * (unint64_t)v518) >> 32))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + v582) ^ 0x1A) << 12);
  LODWORD(v518) = 383 * ((v578 >> 20) & 0xF ^ 7) + 232481;
  v584 = 383 * (HIWORD(v578) & 0xF ^ 0xC) + 232481;
  v585 = v583 | *(unsigned __int8 *)(v45 + (v584 - 969 * ((4432371 * (unint64_t)v584) >> 32))) ^ 0x1A;
  v586 = 383 * (((unsigned __int16)v578 >> 12) ^ 0xC) + 232481;
  v587 = v585 ^ (16
               * (*(unsigned __int8 *)(v45
                                     + (v518
                                                    - 969 * ((4432371 * (unint64_t)v518) >> 32))) ^ 0x1A));
  v588 = 383 * ((v578 >> 8) & 0xF ^ 7) + 232481;
  v589 = (v587 << 16) - 1628826750 - ((v587 << 17) & 0x3DD40000);
  v590 = 383 * ((v578 >> 4) ^ 4) + 232481;
  v591 = ((v589 ^ 0x9EEA1382)
        + ((*(unsigned __int8 *)(v45 + (v588 - 969 * ((4432371 * (unint64_t)v588) >> 32))) ^ 0x1A) << 8)) ^ ((*(unsigned __int8 *)(v45 + (v586 - 969 * ((4432371 * (unint64_t)v586) >> 32))) ^ 0x1A) << 12);
  LODWORD(v518) = *(unsigned __int8 *)(v45 + (v590 - 969 * ((4432371 * (unint64_t)v590) >> 32)));
  v592 = *(unsigned __int8 *)(v45
                            + (383 * (v578 & 0xF ^ 0xB)
                                           + 232481
                                           - 969
                                           * ((4432371 * (unint64_t)(383 * (v578 & 0xF ^ 0xB) + 232481)) >> 32))) ^ 0x1A;
  v593 = (v591 | v592) ^ (16 * (v518 ^ 0x1A));
  LOWORD(v588) = v581;
  LODWORD(STACK[0x5D8]) = v581;
  v594 = 383 * ((v581 >> 4) ^ 1) + 232481;
  v595 = *(unsigned __int8 *)(v45 + (v594 - 969 * ((4432371 * (unint64_t)v594) >> 32))) ^ 0x1A;
  v596 = 16 * v595 - ((32 * v595) & 0x1EC0);
  LOBYTE(v519) = *(_BYTE *)(v45
                          + (383 * v519
                                         - 969 * ((4432371 * (unint64_t)(383 * v519)) >> 32))) ^ 0x1A;
  LOBYTE(v595) = (16 * v595) ^ v519;
  LODWORD(v519) = v519 & 0xF;
  v597 = (v519 & 0xFFFFFF0F | (16 * (v592 & 0xF)))
       + 1407643548
       - ((2 * (v519 & 0xFFFFFF0F | (16 * (v592 & 0xF)))) & 0x138);
  v598 = 383 * (((2 * v597) & 0x182 ^ 0x100) + (v597 ^ 0x53E6ED5Du)) % 0x3C9;
  v599 = *(unsigned __int8 *)(v45 + (383 * (v597 ^ 0x53E6EF9Cu) + 105708) % 0x3C9) ^ 0x1A;
  v600 = 383 * ((v599 + 1784866936 - ((2 * v599) & 0xF0)) ^ LODWORD(STACK[0x678]));
  v601 = 383
       * ((((*(_BYTE *)(v45 + (v600 + 270015) % 0x3C9u) >> 4) ^ 1)
                          + (~(*(_BYTE *)(v45 + (v600 + 270015) % 0x3C9u) >> 3) | 0xEB)
                          + 27) ^ *(unsigned __int8 *)(v45 + v598))
       + 105708;
  v602 = 383 * (v593 & 0xF0 | (v595 >> 4));
  v603 = v518 & 0xF ^ 5 | v518 & 0xF ^ 0xA;
  v604 = 383
       * (*(unsigned __int8 *)(v45
                             + (v602
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v602 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v601 - 969 * ((4432371 * (unint64_t)v601) >> 32))) ^ 0x1A)) ^ 0x1A);
  LODWORD(v518) = *(unsigned __int8 *)(v45
                                     + (v604
                                                    + 270015
                                                    - 969
                                                    * ((4432371 * (unint64_t)(v604 + 270015)) >> 32))) >> 4;
  v605 = ((v518 ^ 1) + ((2 * ((v518 ^ 1 | 0x7A) ^ v518)) ^ 9) + 27) ^ *(unsigned __int8 *)(v45 + (v602 + 270015 - 969 * ((4432371 * (unint64_t)(v602 + 270015)) >> 32)));
  LODWORD(v518) = 383 * (((unsigned __int16)v588 >> 12) ^ 0xD) + 232481;
  LODWORD(v523) = v523 - 400675857;
  LODWORD(v518) = v523 ^ ((*(unsigned __int8 *)(v45
                                              + (v518
                                                             - 969
                                                             * ((4432371 * (unint64_t)v518) >> 32))) ^ 0x1A) << 12);
  v606 = ((v518 ^ (v596 - 1476022429)) >> 8) ^ 0x401B84;
  v607 = 383 * v605 + 105708 - 969 * ((4432371 * (unint64_t)(383 * v605 + 105708)) >> 32);
  v608 = 383 * ((v593 >> 4) & 0xF0 | v603 & v606);
  v609 = 383
       * (*(unsigned __int8 *)(v45
                             + (v608
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v608 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + v607) ^ 0x1A)) ^ 0x1A);
  v610 = *(unsigned __int8 *)(v45
                            + (v609
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v609 + 270015)) >> 32))) >> 4;
  v611 = 383
       * (((v610 ^ 1) + ((2 * ((v610 ^ 1 | 0x7A) ^ v610)) ^ 9) + 27) ^ *(unsigned __int8 *)(v45 + (v608 + 270015 - 969 * ((4432371 * (unint64_t)(v608 + 270015)) >> 32))))
       + 105708;
  v612 = 383 * (((v591 >> 8) & 0xF0 | ((unsigned __int16)v518 >> 12)) ^ 2);
  v613 = *(unsigned __int8 *)(v45 + (v611 - 969 * ((4432371 * (unint64_t)v611) >> 32)));
  v614 = *(unsigned __int8 *)(v45
                            + (v612
                                           + 105708
                                           - 969 * ((4432371 * (unint64_t)(v612 + 105708)) >> 32)));
  LODWORD(STACK[0x5D4]) = v575 ^ 0x6DA3B63F ^ (16
                                             * (*(unsigned __int8 *)(v45
                                                                   + (unsigned __int16)(383
                                                                                      * (v571 >> 4)
                                                                                      - 969
                                                                                      * ((unsigned __int16)((1658007 * (v571 >> 4)) >> 16) >> 6))) ^ 0x1A));
  v615 = v614 ^ (16 * (v613 ^ 0x1A));
  v616 = v615 ^ 0x1A;
  v617 = *(unsigned __int8 *)(v45
                            + ((((v615 ^ 0x1E5) + 319) & 0x17F) + (((v615 ^ 0x1A) + 705) & 0x17F))
                            * ((v615 ^ 0x1Au) + 705)
                            % 0x3C9);
  v618 = (((v617 >> 4) ^ 1) - ((v617 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v45
                                                                                               + (v612 + 270015 - 969 * ((4432371 * (unint64_t)(v612 + 270015)) >> 32)));
  v619 = ((*(unsigned __int8 *)(v45 + (383 * v616 + 105708) % 0x3C9u) ^ 0x1A) << 12) ^ ((*(unsigned __int8 *)(v45 + (v609 + 105708 - 969 * ((4432371 * (unint64_t)(v609 + 105708)) >> 32))) ^ 0x1A) << 8);
  v620 = 383 * (((v591 >> 12) & 0xF0 | WORD1(v518) & 0xF) ^ 0xE);
  v621 = 383
       * (*(unsigned __int8 *)(v45
                             + (v620 + 105708 - 969
                                                            * ((4432371 * (unint64_t)(v620 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (383 * v618 + 105708 - 969 * ((4432371 * (unint64_t)(383 * v618 + 105708)) >> 32))) ^ 0x1A)) ^ 0x1A);
  v622 = 383
       * ((((*(_BYTE *)(v45
                                       + (v621
                                                      + 270015
                                                      - 969
                                                      * ((4432371 * (unint64_t)(v621 + 270015)) >> 32))) >> 4) ^ 0x21)
                          - ((*(_BYTE *)(v45
                                       + (v621
                                                      + 270015
                                                      - 969
                                                      * ((4432371 * (unint64_t)(v621 + 270015)) >> 32))) >> 3) & 0x14)
                          - 6) ^ *(unsigned __int8 *)(v45
                                                    + (v620
                                                                   + 270015
                                                                   - 969
                                                                   * ((4432371 * (unint64_t)(v620 + 270015)) >> 32))))
       + 105708;
  v623 = 383 * ((v587 & 0xF0 | (v523 >> 20) & 0xF) ^ 1);
  v624 = 383
       * (*(unsigned __int8 *)(v45
                             + (v623 + 105708 - 969
                                                            * ((4432371 * (unint64_t)(v623 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v622 - 969 * ((4432371 * (unint64_t)v622) >> 32))) ^ 0x1A)) ^ 0x1A);
  v625 = 383
       * ((((*(_BYTE *)(v45
                                       + (v624
                                                      + 270015
                                                      - 969
                                                      * ((4432371 * (unint64_t)(v624 + 270015)) >> 32))) >> 4) ^ 1)
                          - ((*(_BYTE *)(v45
                                       + (v624
                                                      + 270015
                                                      - 969
                                                      * ((4432371 * (unint64_t)(v624 + 270015)) >> 32))) >> 3) & 0x14)
                          + 26) ^ *(unsigned __int8 *)(v45
                                                     + (v623
                                                                    + 270015
                                                                    - 969
                                                                    * ((4432371 * (unint64_t)(v623 + 270015)) >> 32))))
       + 105708;
  v626 = 383 * (((v589 >> 20) & 0xF0 | BYTE3(v523) & 0xF) ^ 0xE8);
  v627 = 383
       * (*(unsigned __int8 *)(v45
                             + (v626 + 105708 - 969
                                                            * ((4432371 * (unint64_t)(v626 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v625 - 969 * ((4432371 * (unint64_t)v625) >> 32))) ^ 0x1A)) ^ 0x1A);
  v628 = 383
       * ((((*(_BYTE *)(v45
                                       + (v627
                                                      + 270015
                                                      - 969
                                                      * ((4432371 * (unint64_t)(v627 + 270015)) >> 32))) >> 4) ^ 1)
                          - ((*(_BYTE *)(v45
                                       + (v627
                                                      + 270015
                                                      - 969
                                                      * ((4432371 * (unint64_t)(v627 + 270015)) >> 32))) >> 3) & 0x14)
                          + 26) ^ *(unsigned __int8 *)(v45
                                                     + (v626
                                                                    + 270015
                                                                    - 969
                                                                    * ((4432371 * (unint64_t)(v626 + 270015)) >> 32))))
       + 105708;
  v629 = 383 * ((HIBYTE(v589) & 0xF0 | (v523 >> 28)) ^ 0x9E) + 105708;
  v630 = 383
       * (*(unsigned __int8 *)(v45 + (v629 - 969 * ((4432371 * (unint64_t)v629) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v628 - 969 * ((4432371 * (unint64_t)v628) >> 32))) ^ 0x1A)) ^ 0x1A)
       + 105708;
  v631 = *(unsigned __int8 *)(v45
                            + (v627
                                           + 105708
                                           - 969 * ((4432371 * (unint64_t)(v627 + 105708)) >> 32))) ^ 0x1A;
  v632 = (((*(unsigned __int8 *)(v45 + (v630 - 969 * ((4432371 * (unint64_t)v630) >> 32))) ^ 0xAAAAAAAA) << 28) ^ (v631 << 24))
       - ((v631 << 25) & 0x18000000);
  v633 = *(unsigned __int8 *)(v45 + (v600 + 105708) % 0x3C9u) ^ 0x1A;
  v634 = v633 ^ (16
               * (*(unsigned __int8 *)(v45
                                     + (v604
                                                    + 105708
                                                    - 969
                                                    * ((4432371 * (unint64_t)(v604 + 105708)) >> 32))) ^ 0x1A));
  LODWORD(v519) = v519 & 0xFFFFFF0F | (16 * (v633 & 0xF));
  v635 = v634 & 0xF0 | (v595 >> 4);
  v636 = v619 ^ v634;
  v637 = v636 ^ ((*(unsigned __int8 *)(v45
                                     + (v621
                                                    + 105708
                                                    - 969
                                                    * ((4432371 * (unint64_t)(v621 + 105708)) >> 32))) ^ 0x1A) << 16);
  v638 = v606 & 0xF | (16 * ((v636 >> 8) & 0xF));
  v639 = v637 ^ ((*(unsigned __int8 *)(v45
                                     + (v624
                                                    + 105708
                                                    - 969
                                                    * ((4432371 * (unint64_t)(v624 + 105708)) >> 32))) ^ 0x1A) << 20);
  v640 = (v619 >> 8) & 0xF0 | ((unsigned __int16)v518 >> 12);
  v641 = (v637 >> 12) & 0xF0 | WORD1(v518) & 0xF;
  LODWORD(v518) = (v632 + 217250321) ^ v639;
  v642 = HIWORD(v639) & 0xF0 | (v523 >> 20) & 0xF;
  v643 = (v518 >> 20) & 0xF0 | BYTE3(v523) & 0xF;
  HIDWORD(v563) = v518 >> 28;
  LODWORD(v563) = v523 ^ 0xE0000000;
  LODWORD(v518) = 383 * (v640 ^ 2) + 6894 - 969 * ((4432371 * (unint64_t)(383 * (v640 ^ 2u) + 6894)) >> 32);
  v644 = 383 * (v641 ^ 0xE) + 6894 - 969 * ((4432371 * (unint64_t)(383 * (v641 ^ 0xE) + 6894)) >> 32);
  v645 = 383 * (v642 ^ 1) + 6894 - 969 * ((4432371 * (unint64_t)(383 * (v642 ^ 1) + 6894)) >> 32);
  v646 = 383 * (v643 ^ 0xC8) + 6894 - 969 * ((4432371 * (unint64_t)(383 * (v643 ^ 0xC8) + 6894)) >> 32);
  v647 = *(unsigned __int8 *)(v45
                            + (383 * v519
                                           + 6894
                                           - 969
                                           * ((4432371 * (unint64_t)(383 * v519 + 6894)) >> 32)));
  LODWORD(STACK[0x5BC]) = v647;
  v648 = v647 ^ (16
               * (*(unsigned __int8 *)(v45
                                     + (383 * v635
                                                    + 6894
                                                    - 969
                                                    * ((4432371 * (unint64_t)(383 * v635 + 6894)) >> 32))) ^ 0x1A)) ^ 0x1A;
  v649 = v648 ^ ((*(unsigned __int8 *)(v45
                                     + (383 * v638
                                                    + 6894
                                                    - 969
                                                    * ((4432371 * (unint64_t)(383 * v638 + 6894)) >> 32))) ^ 0x1A) << 8);
  v650 = v649 ^ ((*(unsigned __int8 *)(v45 + v518) ^ 0x1A) << 12);
  v651 = v650 ^ ((*(unsigned __int8 *)(v45 + v644) ^ 0x1A) << 16);
  v652 = v651 ^ ((*(unsigned __int8 *)(v45 + v645) ^ 0x1A) << 20);
  LODWORD(v523) = v652 ^ ((*(unsigned __int8 *)(v45 + v646) ^ 0x1A) << 24);
  LODWORD(v519) = (v523 ^ ((*(unsigned __int8 *)(v45
                                                             + (383 * (v563 >> 28)
                                                                            + 6894
                                                                            - 969
                                                                            * ((4432371
                                                                              * (unint64_t)(383
                                                                                                 * (v563 >> 28)
                                                                                                 + 6894)) >> 32))) ^ 0xAAAAAAAA) << 28)) >> 28;
  v653 = ((((*(unsigned __int8 *)(v45
                                + (unsigned __int16)(383 * (BYTE3(v523) & 0xF)
                                                   - 969
                                                   * ((unsigned __int16)((1658007 * (BYTE3(v523) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (unsigned __int16)(383 * v519 - 969 * ((unsigned __int16)((1658007 * v519) >> 16) >> 6))) ^ 0x1A) << 12) | *(unsigned __int8 *)(v45 + (unsigned __int16)(383 * (BYTE2(v651) & 0xF) - 969 * ((unsigned __int16)((1658007 * (HIWORD(v651) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (unsigned __int16)(383 * ((v652 >> 20) & 0xF) - 969 * ((unsigned __int16)((1658007 * ((v652 >> 20) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 12);
  v654 = LODWORD(STACK[0x638]) - 234048039;
  LODWORD(STACK[0x5C0]) = v654;
  LODWORD(v519) = LODWORD(STACK[0x458])
                - LODWORD(STACK[0x63C])
                - ((2 * (LODWORD(STACK[0x458]) - LODWORD(STACK[0x63C])) + 482064204) & 0x1EFB7214);
  v655 = LODWORD(STACK[0x440])
       - 1138698122
       + v654
       - ((2 * (LODWORD(STACK[0x440]) - 1138698122 + v654)) & 0x43BCDF2E)
       - 1579257961;
  v656 = 383 * (HIBYTE(v655) & 0xF ^ 1) + 232481;
  v657 = ((*(unsigned __int8 *)(v45 + (v656 - 969 * ((4432371 * (unint64_t)v656) >> 32))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (383 * ((v655 >> 28) ^ 0xA) + 232481 - 969 * ((4432371 * (unint64_t)(383 * ((v655 >> 28) ^ 0xA) + 232481)) >> 32))) ^ 0xA) << 12);
  v658 = 383 * (HIWORD(v655) & 0xF ^ 0xE) + 232481;
  v659 = v657 | *(unsigned __int8 *)(v45 + (v658 - 969 * ((4432371 * (unint64_t)v658) >> 32))) ^ 0x1A;
  v660 = 383 * ((v655 >> 20) & 0xF ^ 0xD) + 232481;
  v661 = v659 ^ (16
               * (*(unsigned __int8 *)(v45 + (v660 - 969 * ((4432371 * (unint64_t)v660) >> 32))) ^ 0x1A));
  LODWORD(v523) = (v661 << 16) + 805206446 - ((v661 << 17) & 0x5FFC0000);
  v662 = 383 * (~(v655 >> 8) & 0xF) + 232481;
  v663 = 383 * (((unsigned __int16)v655 >> 12) ^ 6) + 232481;
  v664 = ((v523 ^ 0x2FFE79AE)
        + ((*(unsigned __int8 *)(v45 + (v662 - 969 * ((4432371 * (unint64_t)v662) >> 32))) ^ 0x1A) << 8)) ^ ((*(unsigned __int8 *)(v45 + (v663 - 969 * ((4432371 * (unint64_t)v663) >> 32))) ^ 0x1A) << 12);
  v665 = v519 + 2111542448;
  v666 = ((v519 + 2111542448) >> 20) & 0xF ^ 7;
  LODWORD(v518) = v666 + 607;
  v667 = (v666 + 607) & 0x7F ^ (416 - v666) & 0xFFFFFF7F;
  v668 = 383 * (~((v519 + 2111542448) >> 24) & 0xF) + 232481;
  LODWORD(v519) = ((*(unsigned __int8 *)(v45 + (v668 - 969 * ((4432371 * (unint64_t)v668) >> 32))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (383 * ((v519 + a12) >> 28) + 232481 - 969 * ((4432371 * (unint64_t)(383 * ((v519 + a12) >> 28) + 232481)) >> 32))) ^ 0xA) << 12);
  LODWORD(STACK[0x5B8]) = v655;
  v669 = 383 * ((v655 >> 4) ^ 9) + 232481;
  v670 = *(unsigned __int8 *)(v45
                            + (383 * (v655 & 0xF ^ 7)
                                           + 232481
                                           - 969
                                           * ((4432371 * (unint64_t)(383 * (v655 & 0xF ^ 7) + 232481)) >> 32))) ^ 0x1A;
  v671 = (v664 | v670) ^ (16
                        * (*(unsigned __int8 *)(v45
                                              + (v669 - 969 * ((4432371 * (unint64_t)v669) >> 32))) ^ 0x1A));
  LODWORD(v518) = v667 * v518 - 969 * ((4432371 * (unint64_t)(v667 * v518)) >> 32);
  v672 = 383 * (HIWORD(v665) & 0xF ^ 0xD) + 232481;
  v673 = *(unsigned __int8 *)(v45 + (v672 - 969 * ((4432371 * (unint64_t)v672) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + v518) ^ 0x1A)) ^ 0x1A;
  v674 = ((v519 ^ v673) << 16) + 575740961 - (((v519 ^ v673) << 17) & 0x44A20000);
  LODWORD(v519) = 383 * ((v665 >> 8) & 0xF ^ 9) + 232481;
  LODWORD(v518) = 383 * (((unsigned __int16)v665 >> 12) ^ 0xB) + 232481;
  LODWORD(v519) = ((v674 ^ 0x22511C21)
                 + ((*(unsigned __int8 *)(v45
                                        + (v519
                                                       - 969 * ((4432371 * (unint64_t)v519) >> 32))) ^ 0x1A) << 8)) ^ ((*(unsigned __int8 *)(v45 + (v518 - 969 * ((4432371 * (unint64_t)v518) >> 32))) ^ 0x1A) << 12);
  v675 = *(unsigned __int8 *)(v45
                            + (383 * (v665 & 0xF ^ 0xA)
                                           + 232481
                                           - 969
                                           * ((4432371 * (unint64_t)(383 * (v665 & 0xF ^ 0xA) + 232481)) >> 32))) ^ 0x1A;
  v676 = (v519 | v675) ^ (16
                        * (*(unsigned __int8 *)(v45
                                              + (383 * (v665 >> 4)
                                                             + 232481
                                                             - 969
                                                             * ((4432371
                                                               * (unint64_t)(383
                                                                                  * (v665 >> 4)
                                                                                  + 232481)) >> 32))) ^ 0x1A));
  LODWORD(v518) = v670 & 0xF;
  v677 = 383
       * (((v518 | (16 * (v675 & 0xF))) - 228183783 - 2 * ((v670 & 0xB | (16 * (v675 & 0xF)) & 0x1B) ^ v670 & 2)) ^ 0xF2663119);
  v678 = *(unsigned __int8 *)(v45 + (v677 + 105708) % 0x3C9u) ^ 0x1A;
  v679 = 383 * ((v678 + 1784866936 - ((2 * v678) & 0xF0)) ^ LODWORD(STACK[0x678]));
  v680 = 383
       * ((((*(_BYTE *)(v45 + (v679 + 270015) % 0x3C9u) >> 4) ^ 1)
                          - ((*(_BYTE *)(v45 + (v679 + 270015) % 0x3C9u) >> 3) & 0x14)
                          + 26) ^ *(unsigned __int8 *)(v45 + (v677 + 270015) % 0x3C9u))
       + 105708;
  v681 = 383 * (v676 & 0xF0 | (v671 >> 4));
  v682 = 383
       * (*(unsigned __int8 *)(v45
                             + (v681
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v681 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v680 - 969 * ((4432371 * (unint64_t)v680) >> 32))) ^ 0x1A)) ^ 0x1A);
  v683 = 383
       * ((((*(_BYTE *)(v45
                                       + (v682
                                                      + 270015
                                                      - 969
                                                      * ((4432371 * (unint64_t)(v682 + 270015)) >> 32))) >> 4) ^ 1)
                          - ((*(_BYTE *)(v45
                                       + (v682
                                                      + 270015
                                                      - 969
                                                      * ((4432371 * (unint64_t)(v682 + 270015)) >> 32))) >> 3) & 0x14)
                          + 26) ^ *(unsigned __int8 *)(v45
                                                     + (v681
                                                                    + 270015
                                                                    - 969
                                                                    * ((4432371
                                                                      * (unint64_t)(v681 + 270015)) >> 32))))
       + 105708;
  v684 = 383 * ((v676 >> 4) & 0xF0 | (v671 >> 8) & 0xF);
  LOWORD(v152) = 383 * ((v649 >> 8) & 0xF) - 969 * ((unsigned __int16)((1658007 * ((v649 >> 8) & 0xF)) >> 16) >> 6);
  v685 = 383
       * (*(unsigned __int8 *)(v45
                             + (v684
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v684 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v683 - 969 * ((4432371 * (unint64_t)v683) >> 32))) ^ 0x1A)) ^ 0x1A);
  v686 = v653 | *(unsigned __int8 *)(v45 + (unsigned __int16)v152) ^ 0x1A;
  v687 = 383
       * ((((*(_BYTE *)(v45
                                       + (v685
                                                      + 270015
                                                      - 969
                                                      * ((4432371 * (unint64_t)(v685 + 270015)) >> 32))) >> 4) ^ 1)
                          - ((*(_BYTE *)(v45
                                       + (v685
                                                      + 270015
                                                      - 969
                                                      * ((4432371 * (unint64_t)(v685 + 270015)) >> 32))) >> 3) & 0x14)
                          + 26) ^ *(unsigned __int8 *)(v45
                                                     + (v684
                                                                    + 270015
                                                                    - 969
                                                                    * ((4432371
                                                                      * (unint64_t)(v684 + 270015)) >> 32))))
       + 105708;
  v688 = 383 * ((v519 >> 8) & 0xF0 | ((unsigned __int16)v664 >> 12));
  v689 = 383
       * (*(unsigned __int8 *)(v45
                             + (v688 + 105708 - 969
                                                            * ((4432371 * (unint64_t)(v688 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v687 - 969 * ((4432371 * (unint64_t)v687) >> 32))) ^ 0x1A)) ^ 0x1A);
  v690 = *(unsigned __int8 *)(v45
                            + (v689
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v689 + 270015)) >> 32))) >> 4;
  v691 = 383
       * (((v690 ^ 1) + ((2 * ((v690 ^ 1 | 0x7A) ^ v690)) ^ 9) + 27) ^ *(unsigned __int8 *)(v45 + (v688 + 270015 - 969 * ((4432371 * (unint64_t)(v688 + 270015)) >> 32))))
       + 105708;
  v692 = 383 * ((v519 >> 12) & 0xF0 | HIWORD(v664) & 0xF);
  LODWORD(v519) = 383
                * (*(unsigned __int8 *)(v45
                                      + (v692
                                                     + 105708
                                                     - 969 * ((4432371 * (unint64_t)(v692 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v691 - 969 * ((4432371 * (unint64_t)v691) >> 32))) ^ 0x1A)) ^ 0x1A);
  v693 = *(unsigned __int8 *)(v45
                            + (v519
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v519 + 270015)) >> 32))) >> 4;
  v694 = 383
       * (((v693 ^ 1) + ((2 * ((v693 ^ 1 | 0x7A) ^ v693)) ^ 9) + 27) ^ *(unsigned __int8 *)(v45 + (v692 + 270015 - 969 * ((4432371 * (unint64_t)(v692 + 270015)) >> 32))))
       + 105708;
  v695 = 383 * ((v673 & 0xF0 | (v523 >> 20) & 0xF) ^ 0xF);
  v696 = 383
       * (*(unsigned __int8 *)(v45
                             + (v695 + 105708 - 969
                                                            * ((4432371 * (unint64_t)(v695 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v694 - 969 * ((4432371 * (unint64_t)v694) >> 32))) ^ 0x1A)) ^ 0x1A);
  v697 = *(unsigned __int8 *)(v45
                            + (v696
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v696 + 270015)) >> 32))) >> 4;
  v698 = 383
       * (((v697 ^ 1) + ((2 * ((v697 ^ 1 | 0x7A) ^ v697)) ^ 9) + 27) ^ *(unsigned __int8 *)(v45 + (v695 + 270015 - 969 * ((4432371 * (unint64_t)(v695 + 270015)) >> 32))))
       + 105708;
  v699 = 383 * (((v674 >> 20) & 0xF0 | BYTE3(v523) & 0xF) ^ 0x2F);
  v700 = 383
       * (*(unsigned __int8 *)(v45
                             + (v699 + 105708 - 969
                                                            * ((4432371 * (unint64_t)(v699 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + (v698 - 969 * ((4432371 * (unint64_t)v698) >> 32))) ^ 0x1A)) ^ 0x1A);
  v701 = (v686 << 8) ^ ((*(unsigned __int8 *)(v45
                                            + (unsigned __int16)(383 * ((unsigned __int16)v650 >> 12)
                                                               - 969
                                                               * ((unsigned __int16)((1658007
                                                                                    * ((unsigned __int16)v650 >> 12)) >> 16) >> 6))) ^ 0x1A) << 12);
  LOWORD(v686) = 383 * (v648 >> 4)
               - 969 * ((unsigned __int16)((1658007 * (v648 >> 4)) >> 16) >> 6);
  v702 = 383
       * ((((*(_BYTE *)(v45
                                       + (v700
                                                      + 270015
                                                      - 969
                                                      * ((4432371 * (unint64_t)(v700 + 270015)) >> 32))) >> 4) ^ 1)
                          - ((*(_BYTE *)(v45
                                       + (v700
                                                      + 270015
                                                      - 969
                                                      * ((4432371 * (unint64_t)(v700 + 270015)) >> 32))) >> 3) & 0x14)
                          + 26) ^ *(unsigned __int8 *)(v45
                                                     + (v699
                                                                    + 270015
                                                                    - 969
                                                                    * ((4432371 * (unint64_t)(v699 + 270015)) >> 32))))
       + 105708;
  v703 = v702 - 969 * ((4432371 * (unint64_t)v702) >> 32);
  v704 = 383 * ((HIBYTE(v674) & 0xF0 | (v523 >> 28)) ^ 0x22) + 105708;
  v705 = STACK[0x5E4];
  v706 = STACK[0x5C8];
  v707 = LODWORD(STACK[0x5C8]) + LODWORD(STACK[0x5E4]) + 1500547627;
  v708 = v707 ^ 0xDEA11BDD ^ (16 * (*(unsigned __int8 *)(v45 + (unsigned __int16)v686) ^ 0x1A));
  v709 = *(unsigned __int8 *)(v45 + (v704 - 969 * ((4432371 * (unint64_t)v704) >> 32))) ^ (16 * (*(unsigned __int8 *)(v45 + v703) ^ 0x1A));
  v710 = v685 + 105708 - 969 * ((4432371 * (unint64_t)(v685 + 105708)) >> 32);
  v711 = v519 + 105708 - 969 * ((4432371 * (unint64_t)(v519 + 105708)) >> 32);
  v712 = (*(unsigned __int8 *)(v45
                             + (v700
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v700 + 105708)) >> 32))) ^ 0x1A) << 24;
  LODWORD(v519) = v712 ^ ((*(unsigned __int8 *)(v45
                                              + (383 * (v709 ^ 0x1A)
                                                             + 105708
                                                             - 969
                                                             * ((4432371
                                                               * (unint64_t)(383 * (v709 ^ 0x1Au) + 105708)) >> 32))) ^ 0xAAAAAAAA) << 28);
  v713 = 16
       * (*(unsigned __int8 *)(v45
                             + (v682
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v682 + 105708)) >> 32))) ^ 0x1A);
  LOBYTE(v709) = *(_BYTE *)(v45 + (v679 + 105708) % 0x3C9u) ^ 0x1A;
  v714 = (*(unsigned __int8 *)(v45 + v710) ^ 0x1A) << 8;
  v715 = (*(unsigned __int8 *)(v45
                             + (v689
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v689 + 105708)) >> 32))) ^ 0x1A) << 12;
  v716 = (*(unsigned __int8 *)(v45 + v711) ^ 0x1A) << 16;
  v717 = (*(unsigned __int8 *)(v45
                             + (v696
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v696 + 105708)) >> 32))) ^ 0x1A) << 20;
  v718 = v712 ^ v717;
  v719 = v717 ^ v716;
  v720 = v716 ^ v715;
  v721 = v715 ^ v714;
  LODWORD(v518) = v518 & 0xFFFFFF0F | (16 * (v709 & 0xF));
  v722 = (v713 ^ v709) & 0xF0 | (v671 >> 4);
  v723 = ((v714 ^ v713) >> 4) & 0xF0 | (v671 >> 8) & 0xF;
  v724 = (v720 >> 12) & 0xF0 | HIWORD(v664) & 0xF;
  v725 = HIWORD(v719) & 0xF0 | (v523 >> 20) & 0xF;
  v726 = (v718 >> 20) & 0xF0 | BYTE3(v523) & 0xF;
  v727 = BYTE3(v519) & 0xF0 | (v523 >> 28);
  v728 = 383 * ((v721 >> 8) & 0xF0 | ((unsigned __int16)v664 >> 12)) + 6894;
  v729 = 383 * (v725 ^ 0xF) + 6894 - 969 * ((4432371 * (unint64_t)(383 * (v725 ^ 0xF) + 6894)) >> 32);
  v730 = 383 * (v726 ^ 0xF) + 6894 - 969 * ((4432371 * (unint64_t)(383 * (v726 ^ 0xF) + 6894)) >> 32);
  LODWORD(v519) = *(unsigned __int8 *)(v45
                                     + (383 * v518
                                                    + 6894
                                                    - 969
                                                    * ((4432371 * (unint64_t)(383 * v518 + 6894)) >> 32)));
  v731 = 383 * (v727 ^ 2) + 6894 - 969 * ((4432371 * (unint64_t)(383 * (v727 ^ 2) + 6894)) >> 32);
  LODWORD(v518) = v519 ^ (16
                        * (*(unsigned __int8 *)(v45
                                              + (383 * v722
                                                             + 6894
                                                             - 969
                                                             * ((4432371
                                                               * (unint64_t)(383 * v722 + 6894)) >> 32))) ^ 0x1A)) ^ 0x1A;
  v732 = v518 ^ ((*(unsigned __int8 *)(v45
                                     + (383 * v723
                                                    + 6894
                                                    - 969 * ((4432371 * (unint64_t)(383 * v723 + 6894)) >> 32))) ^ 0x1A) << 8);
  v733 = v732 ^ ((*(unsigned __int8 *)(v45 + (v728 - 969 * ((4432371 * (unint64_t)v728) >> 32))) ^ 0x1A) << 12);
  v734 = v733 ^ ((*(unsigned __int8 *)(v45
                                     + (383 * v724
                                                    + 6894
                                                    - 969
                                                    * ((4432371 * (unint64_t)(383 * v724 + 6894)) >> 32))) ^ 0x1A) << 16);
  v735 = v734 ^ ((*(unsigned __int8 *)(v45 + v729) ^ 0x1A) << 20);
  v736 = v735 ^ ((*(unsigned __int8 *)(v45 + v730) ^ 0x1A) << 24);
  v737 = ((v736 ^ (((*(unsigned __int8 *)(v45 + v731) ^ 0xAAAAAAAA) << 28) - 1935297545)) >> 28) ^ 8;
  v738 = ((*(unsigned __int8 *)(v45
                              + (unsigned __int16)(383 * (HIBYTE(v736) & 0xF)
                                                 - 969
                                                 * ((unsigned __int16)((1658007 * (HIBYTE(v736) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (unsigned __int16)(383 * v737 - 969 * ((unsigned __int16)((1658007 * v737) >> 16) >> 6))) ^ 0x1A) << 12);
  LODWORD(STACK[0x678]) = LODWORD(STACK[0x648]) ^ 0x7AFA809 ^ LODWORD(STACK[0x630]);
  LODWORD(STACK[0x648]) = LODWORD(STACK[0x628]) ^ 0xD8B0A9B3 ^ LODWORD(STACK[0x650]);
  LODWORD(STACK[0x650]) = LODWORD(STACK[0x62C]) ^ 0x26DD603F ^ LODWORD(STACK[0x634]);
  LODWORD(STACK[0x61C]) ^= LODWORD(STACK[0x60C]) ^ LODWORD(STACK[0x610]);
  LODWORD(STACK[0x668]) = (LODWORD(STACK[0x64C]) + 559827681 + ~((2 * LODWORD(STACK[0x668])) & 0x538AC61A)) ^ LODWORD(STACK[0x658]) ^ 0xA3D4158D ^ LODWORD(STACK[0x624]);
  v739 = LODWORD(STACK[0x5D4]) ^ (LODWORD(STACK[0x5F4]) | *(unsigned __int8 *)(v45
                                                                             + (unsigned __int16)(383
                                                                                                * (STACK[0x5F8] & 0xF ^ 0xA)
                                                                                                - 969
                                                                                                * ((unsigned __int16)((1658007 * (STACK[0x5F8] & 0xF ^ 0xAu)) >> 16) >> 6))) ^ 0x1A);
  v740 = LODWORD(STACK[0x5FC]) ^ 0x6498BEE6 ^ (LODWORD(STACK[0x660]) + 33693737);
  v741 = LODWORD(STACK[0x5E8]) - 2053253658 - v706;
  v742 = LODWORD(STACK[0x640]) - LODWORD(STACK[0x660]);
  v743 = STACK[0x5F0];
  v744 = LODWORD(STACK[0x5F0]) - 1918073815 + LODWORD(STACK[0x660]);
  LODWORD(STACK[0x660]) = v708 ^ (v701 | *(unsigned __int8 *)(v45
                                                            + (unsigned __int16)(383 * (STACK[0x5BC] & 0xF ^ 0xA)
                                                                               - 969
                                                                               * ((unsigned __int16)((1658007 * (STACK[0x5BC] & 0xF ^ 0xAu)) >> 16) >> 6))) ^ 0x1A);
  v745 = STACK[0x638];
  v746 = LODWORD(STACK[0x638]) + 1976399680;
  v747 = ((2 * (((v742 - 1244292774) ^ 0xD7989BB4) - v746)) & 0xEFD1BFFE)
       + ((((v742 - 1244292774) ^ 0xD7989BB4) - v746) ^ 0x77E8DFFF);
  v748 = v744 ^ 0xCDAA6921 ^ LODWORD(STACK[0x5D8]);
  v749 = (v743 - 345121432) ^ 0x83350F56;
  v750 = (v746 ^ v744 ^ (v747 - 2011750399)) - 864167512 - ((2 * (v746 ^ v744 ^ (v747 - 2011750399))) & 0x98FBB350);
  v751 = LODWORD(STACK[0x5EC]) + 442154324;
  v752 = ((2 * (((v741 + 2504) ^ 0xD7989BB4) - v751)) & 0x9AFFE4FA)
       + ((((v741 + 2504) ^ 0xD7989BB4) - v751) ^ 0x4D7FF27D);
  v753 = (v751 ^ v707 ^ (v752 - 1300230781)) - 353318014 - ((2 * (v751 ^ v707 ^ (v752 - 1300230781))) & 0xD5E19704);
  LODWORD(v518) = ((v518 >> 4) - ((v518 >> 3) & 6) + 11) & 0xF ^ 0xB;
  v754 = ((((v738 | *(unsigned __int8 *)(v45
                                       + (unsigned __int16)(383 * (BYTE2(v734) & 0xF)
                                                          - 969
                                                          * ((unsigned __int16)((1658007
                                                                                             * (HIWORD(v734) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (unsigned __int16)(383 * ((v735 >> 20) & 0xF) - 969 * ((unsigned __int16)((1658007 * ((v735 >> 20) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 12) | *(unsigned __int8 *)(v45 + (unsigned __int16)(383 * ((v732 >> 8) & 0xF) - 969 * ((unsigned __int16)((1658007 * ((v732 >> 8) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v45 + (unsigned __int16)(383 * ((unsigned __int16)v733 >> 12) - 969 * ((unsigned __int16)((1658007 * ((unsigned __int16)v733 >> 12)) >> 16) >> 6))) ^ 0x1A) << 12);
  LODWORD(v518) = v753 ^ (16
                        * (*(unsigned __int8 *)(v45
                                              + (unsigned __int16)(383 * v518
                                                                 - 969
                                                                 * ((unsigned __int16)((1658007 * v518) >> 16) >> 6))) ^ 0x1A));
  LODWORD(STACK[0x640]) = LODWORD(STACK[0x494]) + 1316645952;
  v755 = LODWORD(STACK[0x620]) ^ 0x1A;
  LODWORD(STACK[0x658]) = LODWORD(STACK[0x600]) ^ 0xB885A671;
  LODWORD(v519) = v754 | *(unsigned __int8 *)(v45
                                            + (unsigned __int16)(383 * (v519 & 0xF ^ 0xA)
                                                               - 969
                                                               * ((unsigned __int16)((1658007 * (v519 & 0xF ^ 0xA)) >> 16) >> 6))) ^ 0x1A;
  v756 = v747 + 1435627674;
  v757 = v749 - v745 + v747 - 438798015 + (v750 ^ 0x33822657);
  v758 = ((v705 - 1187773549) ^ 0x83350F56) - LODWORD(STACK[0x63C]) + v752 + 1806962967 + (v753 ^ 0x150F347D);
  v759 = v753 ^ 0xEAF0CB82;
  v760 = (v750 ^ 0x27779B48) - v757;
  v761 = v518 ^ 0x3451D05F ^ v519;
  v762 = v760 - 1248059857;
  v763 = v756 ^ 0x6E49B54E ^ v750;
  LODWORD(v518) = (((v750 ^ 0xCC7DD9A8) + LODWORD(STACK[0x5C0]) + v760) ^ 0x7F7F6F7B)
                - 134365457
                + ((2 * ((v750 ^ 0xCC7DD9A8) + LODWORD(STACK[0x5C0]) + v760)) & 0xFEFEDEF6);
  v764 = v750 ^ LODWORD(STACK[0x5B8]);
  v765 = v753 ^ 0x1FA8962;
  v766 = (v752 + 2147147292) ^ 0x9CB7A2C1 ^ v753;
  v767 = v765 - v758;
  v768 = LODWORD(STACK[0x63C]) + v759 - 1529852642 + v767;
  v769 = v767 - 298840504;
  v770 = v518;
  v771 = v757 - v518 - 1107884220;
  LODWORD(STACK[0x62C]) = v768;
  LODWORD(v523) = v758 - v768;
  v772 = STACK[0x660];
  v773 = v523 + 928593583;
  LODWORD(STACK[0x64C]) = STACK[0x470];
  HIDWORD(v563) = ~v739;
  LODWORD(v563) = v739 ^ 0x6DA3B600;
  LODWORD(v523) = v563 >> 6;
  LODWORD(v519) = v740 - 559866915 - ((2 * v740) & 0xBD4237BA);
  HIDWORD(v563) = v739 ^ 0xFFFFFE3F;
  LODWORD(v563) = v739 ^ 0x6DA3B000;
  v775 = v563 >> 11;
  v776 = LODWORD(STACK[0x680]) + 215;
  HIDWORD(v563) = v519 ^ 0xDDDDDDDD;
  LODWORD(v563) = v519 ^ 0xDEA11BC0;
  v777 = v563 >> 6;
  LODWORD(STACK[0x660]) = v772;
  v778 = v772 ^ 0xDEA11BDD;
  LODWORD(STACK[0x508]) = v776;
  v779 = v776 ^ 0xDEA11816 ^ v519;
  HIDWORD(v563) = v739 ^ 0x1A3B63F;
  LODWORD(v563) = v739 ^ 0x6C000000;
  v780 = v775 ^ v523 ^ (v563 >> 25);
  HIDWORD(v563) = v519 ^ 0x3DD;
  LODWORD(v563) = v519 ^ 0xDEA11800;
  LODWORD(v523) = v777 ^ (v563 >> 11);
  HIDWORD(v563) = v519 ^ 0xA11BDD;
  LODWORD(v563) = v519 ^ 0xDFFFFFFF;
  LODWORD(STACK[0x63C]) = v739;
  v781 = v739 ^ 0x6DA3B63F;
  v782 = v523 ^ (v563 >> 25);
  LODWORD(STACK[0x624]) = v761 ^ 0xDEA11BDD;
  LODWORD(STACK[0x4E8]) = v748 ^ 0x6DA3B63F;
  LODWORD(STACK[0x628]) = v764 ^ 0x6DA3B63F;
  v783 = v779 & (v761 ^ 0xDEA11BDD) ^ v761 ^ (v772 ^ 0xDEA11BDD) & v779 ^ v781 & (v748 ^ 0x6DA3B63F) ^ v781 & (v764 ^ 0x6DA3B63F);
  LODWORD(v523) = v762 - (v780 & 0x70056341) + (v780 | 0x8FFA9CBE) - 1167506157;
  LODWORD(v523) = v780 ^ 0x636D9402 ^ (v523 + 1668125698 - ((2 * v523) & 0xC6DB2804));
  LODWORD(STACK[0x620]) = v764;
  v784 = v523 + 1228811782 - ((2 * v523) & 0x927C5C0C);
  LODWORD(STACK[0x4FC]) = v778;
  v785 = (v739 ^ 0x6DA3B63F) & v778 ^ v779 & (v764 ^ 0x6DA3B63F);
  LODWORD(STACK[0x60C]) = STACK[0x668];
  v786 = v755;
  v787 = STACK[0x650];
  LODWORD(STACK[0x630]) = v519;
  v788 = v748 ^ v519 ^ 0x215EE422;
  LODWORD(STACK[0x638]) = v748;
  if (v787 == -663094976)
    v788 = v748;
  LODWORD(STACK[0x4EC]) = v779;
  LODWORD(STACK[0x4F8]) = v781;
  v789 = v785 ^ (v788 ^ 0x6DA3B63F) & v779 ^ v781 & (v761 ^ 0xDEA11BDD);
  v790 = v789 + 1839445567 - ((2 * v789) & 0xDB476C7E);
  v774 = v767 + 1412853577 + (~(2 * v767) | 0x5793216D) + 1;
  v791 = ((v766 ^ 0x62B2D45C) + (v766 ^ 0x9D4D2BA3 ^ v782) + 1) ^ ((v774 ^ 0xABC990B6) + (v774 ^ 0x54366F49 ^ v782) + 1) ^ ((v782 ^ 0x637E8673 ^ ((v784 ^ v763) + 1669236339 - ((2 * (v784 ^ v763)) & 0xC6FD0CE6))) - (v784 ^ v763));
  v792 = v770 - 1689530542 + v762 + 1581592059;
  v793 = v762 + 1581592059 + v771 - v770 + 507140052;
  v794 = v773 - LODWORD(STACK[0x62C]);
  v795 = (v766 ^ 0x9D4D2BA3) - v794;
  LODWORD(STACK[0x610]) = LODWORD(STACK[0x62C]) + v769;
  v796 = v769 + v794;
  v797 = v783 ^ 0xDEA11BDD ^ (v769 + v794 - 134509399);
  v798 = v790 ^ v764;
  v799 = (v763 ^ 0x493E2E06) - (v771 - v770);
  v800 = (v797 - v796 + 134509399) ^ ((v783 ^ 0xDEA11BDD ^ (v795 + 1230746691)) - v795 - 1230746691) ^ ((v783 ^ 0x7C328534 ^ (((v799 - 43275466) ^ v793 ^ v798) - ((2 * ((v799 - 43275466) ^ v793 ^ v798)) & 0x45273DD2) - 1567383831)) - ((v799 - 43275466) ^ v793 ^ v798));
  v801 = v771 - v770 - 2 * v799 - ((2 * (v771 - v770 - 2 * v799) + 1805464088) & 0x6656710A);
  LODWORD(STACK[0x62C]) = 0;
  v802 = LODWORD(STACK[0x640])
       - v773
       - v794
       + (*((_DWORD *)*(&off_1E8C4D9A0 + LODWORD(STACK[0x680]) - 693) + 186) ^ 0x82E1AF45)
       + v800;
  v803 = *((_DWORD *)*(&off_1E8C4D9A0 + LODWORD(STACK[0x680]) - 693) + 69);
  v804 = v802 + (LODWORD(STACK[0x97C]) ^ 0x96855911) + 1082984610 + v791;
  LODWORD(STACK[0x598]) = v804;
  v805 = STACK[0x648];
  v806 = v771 + LODWORD(STACK[0x64C]) + v771 - v770 + v780 + v798 + (LODWORD(STACK[0x7C0]) ^ 0x96855911);
  v807 = STACK[0x678];
  HIDWORD(v809) = LODWORD(STACK[0x678]) ^ 1;
  LODWORD(v809) = LODWORD(STACK[0x678]) ^ 0x1F954674;
  v808 = v809 >> 2;
  v810 = v806 + (((v803 ^ 0xD3B74A21) + 1480276334) ^ 0xCE4EAC65);
  HIDWORD(v809) = LODWORD(STACK[0x648]) ^ 0x1940;
  LODWORD(v809) = LODWORD(STACK[0x648]) ^ 0xD879E000;
  v811 = v809 >> 13;
  HIDWORD(v809) = LODWORD(STACK[0x648]) ^ 0x39F940;
  LODWORD(v809) = LODWORD(STACK[0x648]) ^ 0xD8400000;
  v812 = v809 >> 22;
  v813 = LODWORD(STACK[0x648]) ^ 0xD879F940;
  LODWORD(STACK[0x650]) = STACK[0x648];
  HIDWORD(v809) = v807 ^ 0x675;
  LODWORD(v809) = v807 ^ 0x1F954000;
  v814 = (v809 >> 13) ^ v808;
  v815 = (__PAIR64__(v805, v813) >> 2) ^ v811 ^ v812;
  HIDWORD(v809) = v807 ^ LODWORD(STACK[0x4D8]);
  LODWORD(v809) = v807 ^ 0x1F800000;
  v816 = STACK[0x658];
  v817 = STACK[0x670];
  v818 = STACK[0x61C];
  v819 = v814 ^ (v809 >> 22);
  LODWORD(STACK[0x5A0]) = v819;
  LODWORD(STACK[0x658]) = v817;
  v820 = v817 ^ 0x1F954675;
  LODWORD(STACK[0x670]) = v818;
  v818 ^= 0x1F954675u;
  LODWORD(STACK[0x668]) = v786;
  LODWORD(STACK[0x634]) = v787;
  v821 = (v807 ^ 0x1F954675) & (v817 ^ 0x1F954675) ^ (v817 ^ 0x1F954675) & v818 ^ (v807 ^ 0x1F954675) & v818 ^ (v786 ^ 0xD879F940) & (v787 ^ 0xD879F940) ^ (v786 ^ v787) & v813;
  LODWORD(STACK[0x594]) = v821;
  LODWORD(STACK[0x4E4]) = v813;
  LODWORD(STACK[0x4F0]) = v807 ^ 0x1F954675;
  LODWORD(STACK[0x4E0]) = v820;
  LODWORD(STACK[0x4DC]) = v787 ^ 0xD879F940;
  LODWORD(STACK[0x4F4]) = v786 ^ 0xD879F940;
  v822 = v813 & v818 ^ v813 & v820 ^ (v787 ^ 0xD879F940) & v820 ^ (v786 ^ v787) & (v807 ^ 0x1F954675) ^ (v786 ^ 0xD879F940) & v818;
  v823 = v801 - 1460022895;
  v824 = (v801 - 1460022895) ^ (v793 - ((2 * v793 + 1222995296) & 0x6656710A) - 677515467);
  v825 = v795 - ((2 * v795 + 839363074) & 0x65854876) - 1949927108;
  v826 = v794 - 2 * v795 - ((2 * (v794 - 2 * v795) + 603782090) & 0x94379618) - 602257167;
  v827 = (v796 - 1670495399) ^ v826;
  v828 = v827 ^ 0x4A1BCB0C;
  v829 = ((v815 ^ 0x777FC9C7 ^ ((v819 ^ (v799 - 1928082444) ^ v824)
                              + 2004863431
                              - ((2 * (v819 ^ (v799 - 1928082444) ^ v824)) & 0xEEFF938E)))
        - (v819 ^ (v799 - 1928082444) ^ v824)) ^ ((v825 ^ 0x4D3D5BC4) + (v815 ^ 0xB2C2A43B ^ v825) + 1) ^ ((v827 ^ 0xB5E434F3) + (v827 ^ 0x4A1BCB0C ^ v815) + 1);
  v830 = ((2 * (v828 + (v825 ^ 0xB2C2A43B))) & 0xF7FBB9BC) + ((v828 + (v825 ^ 0xB2C2A43B)) ^ 0xFBFDDCDE);
  v831 = (v792 ^ 0xC75770F2) + 1260187680 + (v823 ^ 0xCCD4C77A);
  v832 = v823 ^ (v799 - ((2 * (v799 - 1928082444)) & 0x6656710A) - 1069611911);
  v833 = v823 ^ 0x332B3885;
  v834 = ((2 * ((v823 ^ 0x332B3885) - v831 - 58529245)) & 0xBBDB9D7E)
       + (((v823 ^ 0x332B3885) - v831 - 58529245) ^ 0x5DEDCEBF);
  v835 = v799 + v824;
  v836 = v832 - 1575866047 + v834;
  v837 = v835 + 2070966096;
  v838 = v835 + 2070966096 - v834;
  LODWORD(STACK[0x5EC]) = v835 + 2070966096;
  v839 = (v826 ^ 0xB5E434F3) + 1;
  v840 = v839 + ((LODWORD(STACK[0x610]) + 709097989) ^ 0xC75770F2);
  v841 = v825 ^ 0xF8D96F37 ^ v826;
  v842 = (v826 ^ 0x4A1BCB0C) - v840;
  v843 = v842 + v841;
  v844 = v830 - v842;
  v845 = v839
       + 1318716924
       - v842
       + v829
       + (((v822 ^ 0x81CFDA67 ^ (((v838 + 1871784803) ^ v821 ^ v836)
                               - 2117084569
                               - ((2 * ((v838 + 1871784803) ^ v821 ^ v836)) & 0x39FB4CE)))
         - ((v838 + 1871784803) ^ v821 ^ v836)) ^ (1318716924 - v843 + ((v843 - 1318716924) ^ v822)) ^ (((v830 - v842 + 1385965854) ^ v822) - (v830 - v842) - 1385965854));
  v846 = (v836 + v835 - 1225678056) ^ (v838 - 1720778105);
  v847 = (v838 - 1720778105) ^ (v835 + 613351752);
  LODWORD(STACK[0x64C]) = v847;
  v848 = v831 - 376443707 + v835 - 1225678056;
  v849 = v840 + 883743972 + v830 + 769653318;
  LODWORD(STACK[0x640]) = v846;
  v850 = ((2 * (v846 + v847)) & 0xECED5B7A) + ((v846 + v847) ^ 0x7676ADBD);
  v851 = ((2 * (v846 + v848)) & 0x296EBFDE) + ((v846 + v848) ^ 0x14B75FEF);
  v852 = (v844 + 2088370242) ^ (v830 + 769653318 + v843 - 1318716924);
  LODWORD(STACK[0x5F0]) = v852;
  LODWORD(STACK[0x5F8]) = v830 - 1686284170;
  v853 = (v844 + 2088370242) ^ (v830 - 1686284170);
  LODWORD(STACK[0x5F4]) = v853;
  v854 = ((2 * (v852 + v853)) & 0x5F3FEFBE) + ((v852 + v853) ^ 0x2F9FF7DF);
  v855 = ((2 * (v852 + v849)) & 0xEDFDDFFE) + ((v852 + v849) ^ 0xF6FEEFFF);
  v856 = v837 - v850;
  v857 = v850 - (v837 - v850);
  v858 = v851 - (v837 - v850) - 1518362351;
  v859 = (((2 * (v857 - 1278888316)) & 0x1FF5397E) + ((v857 - 1278888316) ^ 0x8FFA9CBF)) ^ v858;
  v860 = STACK[0x60C];
  v861 = (v859 - 663094976 - ((2 * v859) & 0xB0F3F280)) ^ LODWORD(STACK[0x60C]);
  v862 = ((v861 + 529876597 - ((2 * v861) & 0x3F2A8CEA)) ^ v816) - v861;
  v863 = v830 - v854;
  v864 = v855 - (v830 - v854);
  v865 = v854 - v863;
  v866 = v854 - v863 - 1139125433;
  v867 = ((v816 ^ 0x1F954675 ^ (v864 + 397410401)) - v864 - 397410401) ^ ((v816 ^ 0x1F954675 ^ (v854 - v863 - 552667007))
                                                                        - v866
                                                                        - 586458426) ^ v862;
  v868 = v849 + v854 - v863 + v864;
  LODWORD(STACK[0x61C]) = v837 - v850;
  v869 = v860 ^ 0xD879F940;
  LODWORD(STACK[0x648]) = v857 + 1047556647;
  v870 = (v848 + v850 - v856 + 1136677699 + v858) ^ (v857 + 1047556647);
  v871 = v869
       + v856
       + v804
       + 1170800384
       + v870
       - 1302545965
       - ((2 * (v869 + v856 + v804 + 1170800384 + v870)) & 0x64B973A6);
  v872 = v865 - ((2 * v866 + 994674748) & 0x8D2DC5F2) + 542505566;
  LODWORD(STACK[0x60C]) = v872;
  LODWORD(STACK[0x610]) = v863;
  v873 = ((2 * (v863 - 894551804 + (v872 ^ 0x4696E2F9))) & 0xFEBBBFDA)
       + ((v863 - 894551804 + (v872 ^ 0x4696E2F9)) ^ 0x7F5DDFED);
  LODWORD(STACK[0x5FC]) = v873;
  v874 = 383 * (HIBYTE(v871) & 0xF ^ 2) + 232481;
  v875 = (v868 + 479017588 - ((2 * (v868 + 479017588) - 1268548388) & 0x8D2DC5F2) + 550019431) ^ v872;
  v876 = v810 + 696562032;
  v877 = v810 + 696562032 - v863 - v875 - 668550296 + v867;
  v878 = 383 * ((v871 >> 20) & 0xF ^ 5) + 232481;
  v879 = v871;
  LODWORD(STACK[0x600]) = v871;
  v880 = 383 * (HIWORD(v871) & 0xF ^ 0xC) + 232481;
  v881 = STACK[0x688];
  v882 = ((*(unsigned __int8 *)(STACK[0x688] + (v874 - 969 * ((4432371 * (unint64_t)v874) >> 32))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (383 * ((v871 >> 28) ^ 0xB) + 232481 - 969 * ((4432371 * (unint64_t)(383 * ((v871 >> 28) ^ 0xB) + 232481)) >> 32))) ^ 0x1A) << 12);
  v883 = 383 * (((unsigned __int16)v871 >> 12) ^ 0xB) + 232481;
  v884 = v883 - 969 * ((4432371 * (unint64_t)v883) >> 32);
  v885 = *(unsigned __int8 *)(STACK[0x688] + (v880 - 969 * ((4432371 * (unint64_t)v880) >> 32))) ^ 0x1A ^ v882 ^ (16 * (*(unsigned __int8 *)(STACK[0x688] + (v878 - 969 * ((4432371 * (unint64_t)v878) >> 32))) ^ 0x1A));
  v886 = 383 * ((v879 >> 8) & 0xF ^ 9) + 232481;
  v887 = v886 - 969 * ((4432371 * (unint64_t)v886) >> 32);
  v888 = 383 * ((v879 >> 4) ^ 0xD) + 232481;
  v889 = v888 - 969 * ((4432371 * (unint64_t)v888) >> 32);
  v890 = v877 - ((2 * v877) & 0x980DD7E0) - 871961616;
  v891 = (v885 << 16) + 1524883810 - ((v885 << 17) & 0xB5C60000);
  LODWORD(STACK[0x5E8]) = v891;
  v892 = ((v891 ^ 0x5AE3E162) + ((*(unsigned __int8 *)(v881 + v887) ^ 0x1A) << 8)) ^ ((*(unsigned __int8 *)(v881 + v884) ^ 0x1A) << 12);
  v893 = 383 * (HIBYTE(v890) & 0xF ^ 0xC) + 232481;
  v894 = ((*(unsigned __int8 *)(v881 + (v893 - 969 * ((4432371 * (unint64_t)v893) >> 32))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v881 + (383 * ((v890 >> 28) ^ 0xC) + 232481 - 969 * ((4432371 * (unint64_t)(383 * ((v890 >> 28) ^ 0xC) + 232481)) >> 32))) ^ 0xA) << 12);
  v895 = *(unsigned __int8 *)(v881
                            + (383 * (v879 & 0xF ^ 3)
                                           + 232481
                                           - 969
                                           * ((4432371 * (unint64_t)(383 * (v879 & 0xF ^ 3) + 232481)) >> 32))) ^ 0x1A;
  v896 = (v892 | v895) ^ (16 * (*(unsigned __int8 *)(v881 + v889) ^ 0x1A));
  LODWORD(STACK[0x5BC]) = v896;
  v897 = 383 * (HIWORD(v890) & 0xF ^ 6) + 232481;
  v898 = 383 * (((unsigned __int16)v890 >> 12) ^ 0xE) + 232481;
  v899 = *(unsigned __int8 *)(v881 + (v897 - 969 * ((4432371 * (unint64_t)v897) >> 32))) ^ (16 * (*(unsigned __int8 *)(v881 + (383 * ((v890 >> 20) & 0xF) + 232481 - 969 * ((4432371 * (unint64_t)(383 * ((v890 >> 20) & 0xF) + 232481)) >> 32))) ^ 0x1A));
  v900 = (((v890 >> 8) & 0xF ^ 0xB) + 607) * (((v873 + 19) & 0x17F ^ 0x17F) + ((v873 + 19) & 0x17F));
  v901 = 383 * (~(v890 >> 4) & 0xF) + 232481;
  LODWORD(STACK[0x5D8]) = v899 ^ 0x1A;
  v902 = ((v894 ^ v899 ^ 0x1A) << 16) - 1759726433 - (((v894 ^ v899 ^ 0x1A) << 17) & 0x2E380000);
  LODWORD(STACK[0x5E4]) = v902;
  v903 = ((v902 ^ 0x971CB49F)
        + ((*(unsigned __int8 *)(v881 + (v900 - 969 * ((4432371 * (unint64_t)v900) >> 32))) ^ 0x1A) << 8)) ^ ((*(unsigned __int8 *)(v881 + (v898 - 969 * ((4432371 * (unint64_t)v898) >> 32))) ^ 0x1A) << 12);
  LODWORD(STACK[0x5C8]) = v903;
  v904 = *(unsigned __int8 *)(v881
                            + (383 * (v877 & 0xF)
                                           + 232481
                                           - 969 * ((4432371 * (unint64_t)(383 * (v877 & 0xF) + 232481)) >> 32))) ^ 0x1A;
  v905 = (v903 | v904) ^ (16
                        * (*(unsigned __int8 *)(v881
                                              + (v901 - 969 * ((4432371 * (unint64_t)v901) >> 32))) ^ 0x1A));
  LODWORD(STACK[0x5C0]) = v905;
  v906 = 383 * (v905 & 0xF0 | (v896 >> 4));
  LODWORD(STACK[0x5B8]) = v906;
  v907 = (v906 + 105708) % ((v845 & 0x3C9 ^ 0x3C9) + (v845 & 0x3C9));
  v908 = v895 & 0xF;
  LODWORD(STACK[0x5D4]) = v908;
  v909 = 383 * (v908 & 0xFFFFFF0F | (16 * (v904 & 0xF)));
  v910 = v909 + 105708 - 969 * ((4432371 * (unint64_t)(v909 + 105708)) >> 32);
  v911 = *(unsigned __int8 *)(v881
                            + (v909 + 270015 - 969 * ((4432371 * (unint64_t)(v909 + 270015)) >> 32)));
  v912 = LODWORD(STACK[0x500]) ^ 0x1A;
  v913 = 383 * (*(unsigned __int8 *)(v881 + v910) ^ v912);
  LODWORD(STACK[0x5B0]) = v913;
  v914 = 383
       * ((((*(_BYTE *)(v881
                                       + (v913
                                                      + 270015
                                                      - 969
                                                      * ((4432371 * (unint64_t)(v913 + 270015)) >> 32))) >> 4) ^ 1)
                          - ((*(_BYTE *)(v881
                                       + (v913
                                                      + 270015
                                                      - 969
                                                      * ((4432371 * (unint64_t)(v913 + 270015)) >> 32))) >> 3) & 0x14)
                          + 26) ^ v911)
       + 105708;
  v915 = 383
       * (*(unsigned __int8 *)(v881 + v907) ^ (16
                                             * (*(unsigned __int8 *)(v881
                                                                   + (v914
                                                                                  - 969
                                                                                  * ((4432371 * (unint64_t)v914) >> 32))) ^ 0x1A)) ^ 0x1A);
  LODWORD(STACK[0x5AC]) = (v915 + 270015)
                        % ((((v810 + 696564856) & 0x17EB ^ 0x17EB) + ((v810 + 696564856) & 0x17EB)) & 0x2BC9);
  v916 = v875 ^ (v855 + 2114560819);
  LODWORD(STACK[0x570]) = v916;
  v917 = v845 + LODWORD(STACK[0x598]);
  LODWORD(STACK[0x578]) = v851 + 1615934275;
  v918 = v870 ^ (v851 + 1615934275);
  LODWORD(STACK[0x580]) = v918;
  v919 = v851 - ((2 * v851 + 443601174) & 0x1A530192) - 631117484;
  LODWORD(STACK[0x598]) = v919;
  v920 = (v919 ^ 0x72D67F36) + v918 + 1;
  LODWORD(STACK[0x588]) = v920;
  v921 = v920 + v917;
  v922 = (2 * v921) & 0x36A188B0;
  v921 += 458277976;
  v923 = v921 - v922;
  v924 = 383 * (((v921 - v922) >> 28) ^ 1) + 232481;
  v925 = v924 - 969 * ((4432371 * (unint64_t)v924) >> 32);
  v926 = LODWORD(STACK[0x5A0]) + LODWORD(STACK[0x594]) + v833 + v834 + 1804205129 + v876;
  LODWORD(STACK[0x584]) = v926;
  v927 = 383 * (HIBYTE(v923) & 0xF ^ 0xB) + 232481;
  v928 = v927 - 969 * ((4432371 * (unint64_t)v927) >> 32);
  LODWORD(STACK[0x568]) = v855;
  v929 = v855 - ((2 * v855 + 98676982) & 0x591D300) + 1840890363;
  LODWORD(STACK[0x5A0]) = v929;
  v930 = (v929 ^ 0xFD37167F) + v916 + 1;
  LODWORD(STACK[0x594]) = v930;
  v931 = v926 - v930 - ((2 * (v926 - v930)) & 0xD74513D4);
  v932 = 383 * ((v923 >> 20) & 0xF ^ 5) + 232481;
  v933 = ((*(unsigned __int8 *)(v881 + v928) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v881 + v925) ^ 0x1A) << 12) | *(unsigned __int8 *)(v881 + (383 * (HIWORD(v923) & 0xF) + 232481 - 969 * ((4432371 * (unint64_t)(383 * (HIWORD(v923) & 0xF) + 232481)) >> 32))) ^ 0x1A;
  v934 = 383 * (((unsigned __int16)v923 >> 12) ^ 0xC) + 232481;
  LODWORD(STACK[0x510]) = v923;
  v935 = 383 * ((v923 >> 8) & 0xF ^ 4) + 232481;
  v936 = (v933 << 8) ^ ((*(unsigned __int8 *)(v881
                                            + (v932 - 969 * ((4432371 * (unint64_t)v932) >> 32))) ^ 0x1A) << 12);
  v937 = 383 * ((v923 >> 4) ^ 5) + 232481;
  v938 = 383 * (v921 & 0xF ^ 8) + 232481 - 969 * ((4432371 * (unint64_t)(383 * (v921 & 0xF ^ 8) + 232481)) >> 32);
  v939 = v936 | *(unsigned __int8 *)(v881 + (v935 - 969 * ((4432371 * (unint64_t)v935) >> 32))) ^ 0x1A;
  v940 = (v939 << 8) + 1052126676 - ((v939 << 9) & 0x7D6C5A00);
  LODWORD(STACK[0x558]) = v940;
  v941 = v931 + 1805814250;
  v942 = 383 * (((v931 + 1805814250) >> 28) ^ 6) + 232481;
  v943 = v942 - 969 * ((4432371 * (unint64_t)v942) >> 32);
  v944 = *(unsigned __int8 *)(v881 + v938) ^ 0x1A;
  v945 = v940 ^ ((*(unsigned __int8 *)(v881 + (v934 - 969 * ((4432371 * (unint64_t)v934) >> 32))) ^ 0x1A) << 12);
  v946 = (v945 ^ 0x3EB62DD4 | v944) ^ (16
                                     * (*(unsigned __int8 *)(v881
                                                           + (v937
                                                                          - 969
                                                                          * ((4432371 * (unint64_t)v937) >> 32))) ^ 0x1A));
  v947 = 383 * (HIBYTE(v941) & 0xF ^ 0xB) + 232481;
  v948 = 383 * ((v941 >> 20) & 0xF ^ 0xA) + 232481;
  v949 = v948 - 969 * ((4432371 * (unint64_t)v948) >> 32);
  v950 = v949 - 2026388911 - ((2 * v949) & 0x4A2);
  v951 = 383 * ((HIWORD(v941) & 0xF ^ 2) + (v950 & 0x10A) + (v950 & 0x10A ^ 0x5A42ED0A)) - 169678293;
  v952 = ((*(unsigned __int8 *)(v881 + (v947 - 969 * ((4432371 * (unint64_t)v947) >> 32))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v881 + v943) ^ 0x1A) << 12) | *(unsigned __int8 *)(v881 + (v951 - 969 * ((4432371 * (unint64_t)v951) >> 32))) ^ 0x1A;
  v953 = 383 * (((unsigned __int16)v941 >> 12) ^ 8) + 232481;
  v954 = (v952 << 8) ^ ((*(unsigned __int8 *)(v881 + (v950 ^ 0x8737C251)) ^ 0x1A) << 12);
  v955 = 383 * ((v941 >> 8) & 0xF ^ 9) + 232481;
  v956 = 383 * ((v941 >> 4) ^ 0xE) + 232481;
  v957 = v954 | *(unsigned __int8 *)(v881 + (v955 - 969 * ((4432371 * (unint64_t)v955) >> 32))) ^ 0x1A;
  v958 = (v957 << 8) - 746295771 - ((v957 << 9) & 0xA708DC00);
  LODWORD(STACK[0x550]) = v958;
  v959 = v958 ^ ((*(unsigned __int8 *)(v881 + (v953 - 969 * ((4432371 * (unint64_t)v953) >> 32))) ^ 0x1A) << 12);
  v960 = *(unsigned __int8 *)(v881
                            + (383 * (v941 & 0xF ^ 0xA)
                                           + 232481
                                           - 969
                                           * ((4432371 * (unint64_t)(383 * (v941 & 0xF ^ 0xA) + 232481)) >> 32))) ^ 0x1A;
  v961 = (v959 ^ 0xD3846E25 | v960) ^ (16
                                     * (*(unsigned __int8 *)(v881
                                                           + (v956
                                                                          - 969
                                                                          * ((4432371 * (unint64_t)v956) >> 32))) ^ 0x1A));
  v962 = v944 & 0xF;
  LODWORD(STACK[0x560]) = v962;
  v963 = 383 * (v962 & 0xFFFFFF0F | (16 * (v960 & 0xF)));
  v964 = 383
       * (*(unsigned __int8 *)(v881
                             + (v963 + 105708 - 969
                                                            * ((4432371 * (unint64_t)(v963 + 105708)) >> 32))) ^ v912);
  LODWORD(STACK[0x540]) = v964;
  v965 = *(unsigned __int8 *)(v881
                            + (v964
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v964 + 270015)) >> 32)));
  v966 = 383
       * ((((v965 >> 4) ^ 1) - ((v965 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v881
                                                                                                + (v963 + 270015 - 969 * ((4432371 * (unint64_t)(v963 + 270015)) >> 32))))
       + 105708;
  v967 = *(unsigned __int8 *)(v881 + (v966 - 969 * ((4432371 * (unint64_t)v966) >> 32)));
  LODWORD(STACK[0x548]) = v946;
  v968 = 383 * (v961 & 0xF0 | (v946 >> 4));
  v969 = 383
       * (*(unsigned __int8 *)(v881
                             + (v968
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v968 + 105708)) >> 32))) ^ (16 * (v967 ^ 0x1A)) ^ 0x1A);
  LODWORD(STACK[0x528]) = v969;
  v970 = *(unsigned __int8 *)(v881
                            + (v969
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v969 + 270015)) >> 32)));
  v971 = 383
       * ((((v970 >> 4) ^ 1) - ((v970 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v881
                                                                                                + (v968 + 270015 - 969 * ((4432371 * (unint64_t)(v968 + 270015)) >> 32))))
       + 105708;
  v972 = 383 * ((v961 >> 4) & 0xF0 | (v946 >> 8) & 0xF);
  v973 = 383
       * (*(unsigned __int8 *)(v881
                             + (v972
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v972 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v881 + (v971 - 969 * ((4432371 * (unint64_t)v971) >> 32))) ^ 0x1A)) ^ 0x1A);
  LODWORD(STACK[0x520]) = v973;
  v974 = *(unsigned __int8 *)(v881
                            + (v973
                                           + 270015
                                           - 969 * ((4432371 * (unint64_t)(v973 + 270015)) >> 32))) >> 4;
  v975 = 383
       * (((v974 ^ 1) + ((2 * ((v974 ^ 1 | 0x7A) ^ v974)) ^ 9) + 27) ^ *(unsigned __int8 *)(v881 + (v972 + 270015 - 969 * ((4432371 * (unint64_t)(v972 + 270015)) >> 32))))
       + 105708;
  LODWORD(STACK[0x530]) = v945;
  v976 = ((unsigned __int16)v945 >> 12) ^ 2;
  LODWORD(STACK[0x538]) = v976;
  v977 = 383 * (((v959 >> 8) & 0xF0 | v976) ^ 0x60);
  v978 = v977 + 105708 - 969 * ((4432371 * (unint64_t)(v977 + 105708)) >> 32);
  v979 = *(unsigned __int8 *)(v881 + (v975 - 969 * ((4432371 * (unint64_t)v975) >> 32))) ^ (((*(unsigned __int8 *)(v881 + v978) ^ 0xAAAAAAAA) << 28) | ((unint64_t)*(unsigned __int8 *)(v881 + v978) >> 4) ^ 1) ^ 0x6AE5562D;
  v980 = 383 * (((v979 >> 28) + 16 * v979) ^ 0xAE556376);
  LODWORD(v979) = 383
                * ((((*(_BYTE *)(v881 + (v980 + 270015) % 0x3C9u) >> 4) ^ 1)
                                   - ((*(_BYTE *)(v881 + (v980 + 270015) % 0x3C9u) >> 3) & 0x14)
                                   + 26) ^ *(unsigned __int8 *)(v881
                                                              + (v977
                                                                             + 270015
                                                                             - 969
                                                                             * ((4432371
                                                                               * (unint64_t)(v977 + 270015)) >> 32))))
                + 105708;
  v981 = 383 * (((v959 >> 12) & 0xF0 | HIWORD(v945) & 0xF) ^ 0x46);
  v982 = 383
       * (*(unsigned __int8 *)(v881
                             + (v981
                                            + 105708
                                            - 969 * ((4432371 * (unint64_t)(v981 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v881 + (v979 - 969 * ((4432371 * (unint64_t)v979) >> 32))) ^ 0x1A)) ^ 0x1A);
  LODWORD(STACK[0x518]) = (383
                         * ((((*(_BYTE *)(v881
                                                         + (v982
                                                                        + 270015
                                                                        - 969
                                                                        * ((4432371
                                                                          * (unint64_t)(v982 + 270015)) >> 32))) >> 4) ^ 1)
                                            - ((*(_BYTE *)(v881
                                                         + (v982
                                                                        + 270015
                                                                        - 969
                                                                        * ((4432371
                                                                          * (unint64_t)(v982 + 270015)) >> 32))) >> 3) & 0x14)
                                            + 26) ^ *(unsigned __int8 *)(v881
                                                                                     + (v981 + 270015 - 969 * ((4432371 * (unint64_t)(v981 + 270015)) >> 32))))
                         + 105708)
                        % (((HIWORD(v959) & 0xF6 ^ 0x37B) + (HIWORD(v959) & 0xF6 ^ 0x84)) & 0x3C9);
  LODWORD(v979) = LODWORD(STACK[0x624]) ^ LODWORD(STACK[0x64C]) ^ LODWORD(STACK[0x640]);
  LODWORD(v979) = ((v979 + 1839445567 - ((2 * v979) & 0xDB476C7E)) ^ LODWORD(STACK[0x620])) - v979;
  v983 = STACK[0x628];
  v984 = (LODWORD(STACK[0x628]) ^ LODWORD(STACK[0x5F0])) - LODWORD(STACK[0x5F0]);
  LODWORD(STACK[0x640]) = LODWORD(STACK[0x624]) + 311260520 + LODWORD(STACK[0x5EC]);
  LODWORD(v979) = (((v983 ^ LODWORD(STACK[0x5F4])) - LODWORD(STACK[0x5F4])) ^ v984 ^ v979) - LODWORD(STACK[0x5F8]);
  LODWORD(STACK[0x64C]) = (v979 ^ 0xFFAF77FF) + 2012938235 + ((2 * v979) & 0xFF5EEFFE);
  v985 = v915 + 105708 - 969 * ((4432371 * (unint64_t)(v915 + 105708)) >> 32);
  LODWORD(v979) = 383
                * ((((*(_BYTE *)(v881 + LODWORD(STACK[0x5AC])) >> 4) ^ 1)
                                   - ((*(_BYTE *)(v881 + LODWORD(STACK[0x5AC])) >> 3) & 0x14)
                                   + 26) ^ *(unsigned __int8 *)(v881
                                                              + (LODWORD(STACK[0x5B8])
                                                                             + 270015
                                                                             - 969
                                                                             * ((4432371
                                                                               * (unint64_t)(LODWORD(STACK[0x5B8]) + 270015)) >> 32))))
                + 105708;
  v986 = 383 * ((LODWORD(STACK[0x5C0]) >> 4) & 0xF0 | (LODWORD(STACK[0x5BC]) >> 8) & 0xF);
  LODWORD(v979) = 383
                * (*(unsigned __int8 *)(v881
                                      + (v986
                                                     + 105708
                                                     - 969
                                                     * ((4432371 * (unint64_t)(v986 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v881 + (v979 - 969 * ((4432371 * (unint64_t)v979) >> 32))) ^ 0x1A)) ^ 0x1A);
  v987 = v979 + 105708 - 969 * ((4432371 * (unint64_t)(v979 + 105708)) >> 32);
  LODWORD(v979) = *(unsigned __int8 *)(v881
                                     + (v979
                                                    + 270015
                                                    - 969
                                                    * ((4432371 * (unint64_t)(v979 + 270015)) >> 32)));
  LODWORD(v979) = 383
                * ((((v979 >> 4) ^ 1) - ((v979 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v881 + (v986 + 270015 - 969 * ((4432371 * (unint64_t)(v986 + 270015)) >> 32))))
                + 105708;
  v988 = v892;
  v989 = 383 * ((LODWORD(STACK[0x5C8]) >> 8) & 0xF0 | ((unsigned __int16)v892 >> 12));
  LODWORD(v979) = 383
                * (*(unsigned __int8 *)(v881
                                      + (v989
                                                     + 105708
                                                     - 969
                                                     * ((4432371 * (unint64_t)(v989 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v881 + (v979 - 969 * ((4432371 * (unint64_t)v979) >> 32))) ^ 0x1A)) ^ 0x1A);
  v990 = v979 + 105708 - 969 * ((4432371 * (unint64_t)(v979 + 105708)) >> 32);
  LODWORD(v979) = *(unsigned __int8 *)(v881
                                     + (v979
                                                    + 270015
                                                    - 969
                                                    * ((4432371 * (unint64_t)(v979 + 270015)) >> 32)));
  LODWORD(v979) = 383
                * ((((v979 >> 4) ^ 1) - ((v979 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v881 + (v989 + 270015 - 969 * ((4432371 * (unint64_t)(v989 + 270015)) >> 32))))
                + 105708;
  v991 = 383 * ((LODWORD(STACK[0x5C8]) >> 12) & 0xF0 | HIWORD(v892) & 0xF);
  LODWORD(v979) = 383
                * (*(unsigned __int8 *)(v881
                                      + (v991
                                                     + 105708
                                                     - 969
                                                     * ((4432371 * (unint64_t)(v991 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v881 + (v979 - 969 * ((4432371 * (unint64_t)v979) >> 32))) ^ 0x1A)) ^ 0x1A);
  v992 = v979 + 105708 - 969 * ((4432371 * (unint64_t)(v979 + 105708)) >> 32);
  LODWORD(v979) = *(unsigned __int8 *)(v881
                                     + (v979
                                                    + 270015
                                                    - 969
                                                    * ((4432371 * (unint64_t)(v979 + 270015)) >> 32)));
  LODWORD(v979) = 383
                * ((((v979 >> 4) ^ 1) - ((v979 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v881 + (v991 + 270015 - 969 * ((4432371 * (unint64_t)(v991 + 270015)) >> 32))))
                + 105708;
  v993 = (LODWORD(STACK[0x5E8]) >> 20) & 0xF ^ 0xE;
  v994 = 383 * (STACK[0x5D8] & 0xF0 | v993);
  LODWORD(v979) = 383
                * (*(unsigned __int8 *)(v881
                                      + (v994
                                                     + 105708
                                                     - 969
                                                     * ((4432371 * (unint64_t)(v994 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v881 + (v979 - 969 * ((4432371 * (unint64_t)v979) >> 32))) ^ 0x1A)) ^ 0x1A);
  v995 = v979 + 105708 - 969 * ((4432371 * (unint64_t)(v979 + 105708)) >> 32);
  LODWORD(v979) = *(unsigned __int8 *)(v881
                                     + (v979
                                                    + 270015
                                                    - 969
                                                    * ((4432371 * (unint64_t)(v979 + 270015)) >> 32)));
  LODWORD(v979) = 383
                * ((((v979 >> 4) ^ 1) - ((v979 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v881 + (v994 + 270015 - 969 * ((4432371 * (unint64_t)(v994 + 270015)) >> 32))))
                + 105708;
  v996 = HIBYTE(LODWORD(STACK[0x5E8])) & 0xF ^ 0xA;
  v997 = 383 * (((LODWORD(STACK[0x5E4]) >> 20) & 0xF0 | v996) ^ 0x70);
  LODWORD(v979) = 383
                * (*(unsigned __int8 *)(v881
                                      + (v997
                                                     + 105708
                                                     - 969
                                                     * ((4432371 * (unint64_t)(v997 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v881 + (v979 - 969 * ((4432371 * (unint64_t)v979) >> 32))) ^ 0x1A)) ^ 0x1A);
  v998 = v979 + 105708 - 969 * ((4432371 * (unint64_t)(v979 + 105708)) >> 32);
  LODWORD(v979) = *(unsigned __int8 *)(v881
                                     + (v979
                                                    + 270015
                                                    - 969
                                                    * ((4432371 * (unint64_t)(v979 + 270015)) >> 32)));
  LODWORD(v979) = 383
                * ((((v979 >> 4) ^ 1) - ((v979 >> 3) & 0x14) + 26) ^ *(unsigned __int8 *)(v881 + (v997 + 270015 - 969 * ((4432371 * (unint64_t)(v997 + 270015)) >> 32))))
                + 105708;
  v999 = (LODWORD(STACK[0x5E8]) >> 28) ^ 5;
  v1000 = 383 * ((v999 | (16 * (LODWORD(STACK[0x5E4]) >> 28))) ^ 0x90) + 105708;
  LODWORD(v979) = *(unsigned __int8 *)(v881
                                     + (v979
                                                    - 969 * ((4432371 * (unint64_t)v979) >> 32)));
  LODWORD(v979) = 16 * (v979 ^ 0x1A) - 348721636 - ((32 * v979) & 0xFFFFFC3F);
  v1001 = *(unsigned __int8 *)(v881 + (v1000 - 969 * ((4432371 * (unint64_t)v1000) >> 32))) ^ 0x1A;
  v1002 = 383 * ((v1001 - 348721636 - ((2 * v1001) & 0x38)) ^ v979) + 105708;
  v1003 = *(unsigned __int8 *)(v881
                             + (LODWORD(STACK[0x5B0])
                                            + 105708
                                            - 969
                                            * ((4432371
                                              * (unint64_t)(LODWORD(STACK[0x5B0]) + 105708)) >> 32))) ^ 0x1A;
  v1004 = v1003 ^ (16 * (*(unsigned __int8 *)(v881 + v985) ^ 0x1A));
  LODWORD(v979) = 383
                * ((STACK[0x5D4] & 0xFFFFFF0F | (16 * (v1003 & 0xF)))
                 + (((v979 & 0x670 ^ 0x610 | v979 & 0x670 ^ 0xD06C) + 10646) & 0xFFFE));
  LODWORD(v979) = v979 - 969 * (((70917933 * (unint64_t)v979) >> 32) >> 4);
  LODWORD(v979) = v979 - 1281949128 - ((2 * v979) & 0x470);
  v1005 = v1004 ^ ((*(unsigned __int8 *)(v881 + v987) ^ 0x1A) << 8);
  v1006 = 383
        * ((v1004 & 0xF0 | (LODWORD(STACK[0x5BC]) >> 4)) + (v979 & 0x12 ^ 0x10) + (v979 & 0x12 ^ 2));
  v1007 = v1005 ^ ((*(unsigned __int8 *)(v881 + v990) ^ 0x1A) << 12);
  v1008 = 383 * ((v1005 >> 4) & 0xF0 | (LODWORD(STACK[0x5BC]) >> 8) & 0xF) + 6894;
  v1009 = v1007 ^ ((*(unsigned __int8 *)(v881 + v992) ^ 0x1A) << 16);
  v1010 = v1009 ^ ((*(unsigned __int8 *)(v881 + v995) ^ 0x1A) << 20);
  v1011 = v1010 ^ ((*(unsigned __int8 *)(v881 + v998) ^ 0x1A) << 24);
  v1012 = v1011 ^ ((*(unsigned __int8 *)(v881 + v1002 % 0x3C9) ^ 0xAAAAAAAA) << 28);
  v1013 = 383
        * (((unsigned __int16)v988 >> 12)
         + ((v1007 >> 8) & 0xF0)
         + ((v1012 >> 12) & 0x8C569)
         + ((v1012 >> 12) & 0x8C569 ^ 0x8E08C569))
        - 2132753705;
  v1014 = 383 * ((v1009 >> 12) & 0xF0 | HIWORD(v988) & 0xF) + 6894;
  v1015 = 383 * (HIWORD(v1010) & 0xF0 | v993) + 6894;
  v1016 = 383 * ((v1011 >> 20) & 0xF0 | v996) + 6894;
  LODWORD(v979) = *(unsigned __int8 *)(v881 + (v979 ^ 0xB3970238));
  v1017 = v999 | (16 * (v1012 >> 28));
  v1018 = v979 ^ (16
                * (*(unsigned __int8 *)(v881 + (v1006 - 969 * ((4432371 * (unint64_t)v1006) >> 32))) ^ 0x1A)) ^ 0x1A;
  v1019 = v1018 ^ ((*(unsigned __int8 *)(v881 + (v1008 - 969 * ((4432371 * (unint64_t)v1008) >> 32))) ^ 0x1A) << 8);
  v1020 = v1019 ^ ((*(unsigned __int8 *)(v881 + v1013 % 0x3C9) ^ 0x1A) << 12);
  v1021 = v1020 ^ ((*(unsigned __int8 *)(v881 + (v1014 - 969 * ((4432371 * (unint64_t)v1014) >> 32))) ^ 0x1A) << 16);
  v1022 = v1021 ^ ((*(unsigned __int8 *)(v881 + (v1015 - 969 * ((4432371 * (unint64_t)v1015) >> 32))) ^ 0x1A) << 20);
  v1023 = v1022 ^ ((*(unsigned __int8 *)(v881 + (v1016 - 969 * ((4432371 * (unint64_t)v1016) >> 32))) ^ 0x1A) << 24);
  v1024 = ((v1023 ^ (((*(unsigned __int8 *)(v881
                                          + (383 * v1017
                                                         + 6894
                                                         - 969
                                                         * ((4432371
                                                           * (unint64_t)(383 * v1017 + 6894)) >> 32))) ^ 0xAAAAAAAA) << 28)
                   - 2034909846)) >> 28) ^ 8;
  v1025 = ((*(unsigned __int8 *)(v881
                               + (unsigned __int16)(383 * (HIBYTE(v1023) & 0xF)
                                                  - 969
                                                  * ((unsigned __int16)((1658007 * (HIBYTE(v1023) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v881 + (unsigned __int16)(383 * v1024 - 969 * ((unsigned __int16)((1658007 * v1024) >> 16) >> 6))) ^ 0x1A) << 12);
  v1026 = *(unsigned __int8 *)(v881
                             + (unsigned __int16)(383 * ((unsigned __int16)v1020 >> 12)
                                                - 969
                                                * ((unsigned __int16)((1658007
                                                                     * ((unsigned __int16)v1020 >> 12)) >> 16) >> 6)));
  v1027 = 16 * (v1026 ^ 0x1A) + 724290973 - ((32 * (v1026 ^ 0x1A)) & 0x1B20);
  v1028 = ((v1025 | *(unsigned __int8 *)(v881
                                       + (unsigned __int16)(383 * (BYTE2(v1021) & 0xF)
                                                          - 969
                                                          * ((unsigned __int16)((1658007
                                                                                             * (HIWORD(v1021) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v881 + (unsigned __int16)(383 * ((v1022 >> 20) & 0xF) - 969 * ((unsigned __int16)((1658007 * ((v1022 >> 20) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 12);
  LODWORD(STACK[0x628]) = *(unsigned __int8 *)(v881
                                             + (unsigned __int16)(383 * (v979 & 0xF ^ 0xA)
                                                                - 969
                                                                * ((unsigned __int16)((1658007 * (v979 & 0xF ^ 0xA)) >> 16) >> 6))) ^ LODWORD(STACK[0x60C]) ^ (16 * (*(unsigned __int8 *)(v881 + (unsigned __int16)(383 * (v1018 >> 4) - 969 * ((unsigned __int16)((1658007 * (v1018 >> 4)) >> 16) >> 6))) ^ 0x1A)) ^ ((*(unsigned __int8 *)(v881 + (unsigned __int16)(383 * ((v1019 >> 8) & 0xF) - 969 * ((unsigned __int16)((1658007 * ((v1019 >> 8) & 0xF)) >> 16) >> 6))) ^ 0x1A ^ ((v1028 ^ 0x505DF9 ^ ((((v1028 ^ v1027 ^ 0xD4D43262) + 1 + (v1027 ^ 0x2B2BCD9D)) ^ -v1028) - 2 * ((((v1028 ^ v1027 ^ 0xD4D43262) + 1 + (v1027 ^ 0x2B2BCD9D)) ^ -v1028) & 0x79505DFD ^ ((v1028 ^ v1027 ^ 0xD4D43262) + 1) & 4) + 2052087289)) + (v1027 ^ 0x2BCD9D))) << 8);
  v1029 = LODWORD(STACK[0x570]) ^ (894551804 - LODWORD(STACK[0x610]));
  v1030 = 383 * ((HIWORD(LODWORD(STACK[0x550])) & 0xF0 | (LODWORD(STACK[0x558]) >> 20) & 0xF) ^ 0x8B);
  v1031 = 383
        * (*(unsigned __int8 *)(v881
                              + (v1030
                                             + 105708
                                             - 969
                                             * ((4432371 * (unint64_t)(v1030 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v881 + LODWORD(STACK[0x518])) ^ 0x1A)) ^ 0x1A);
  v1032 = v1031 + 270015 - 969 * ((4432371 * (unint64_t)(v1031 + 270015)) >> 32);
  v1033 = 383
        * ((((*(_BYTE *)(v881 + v1032) >> 4) ^ 0x21) - ((*(_BYTE *)(v881 + v1032) >> 3) & 0x14) - 6) ^ *(unsigned __int8 *)(v881 + (v1030 + 270015 - 969 * ((4432371 * (unint64_t)(v1030 + 270015)) >> 32))))
        + 105708;
  v1034 = 383 * (((LODWORD(STACK[0x550]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x558])) & 0xF) ^ 0x3E);
  v1035 = 383
        * (*(unsigned __int8 *)(v881
                              + (v1034
                                             + 105708
                                             - 969
                                             * ((4432371 * (unint64_t)(v1034 + 105708)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v881 + (v1033 - 969 * ((4432371 * (unint64_t)v1033) >> 32))) ^ 0x1A)) ^ 0x1A);
  v1036 = v1035 + 105708 - 969 * ((4432371 * (unint64_t)(v1035 + 105708)) >> 32);
  v1037 = *(unsigned __int8 *)(v881
                             + (v1034
                                            + 270015
                                            - 969 * ((4432371 * (unint64_t)(v1034 + 270015)) >> 32))) ^ (*(unsigned __int8 *)(v881 + (v1035 + 270015 - 969 * ((4432371 * (unint64_t)(v1035 + 270015)) >> 32))) >> 4);
  v1038 = 383 * ((HIBYTE(LODWORD(STACK[0x550])) & 0xF0 | (LODWORD(STACK[0x558]) >> 28)) ^ 0xD3) + 105708;
  v1039 = 383
        * (*(unsigned __int8 *)(v881 + (v1038 - 969 * ((4432371 * (unint64_t)v1038) >> 32))) ^ (16 * (*(unsigned __int8 *)(v881 + 383 * ((v1037 ^ 0x1B) - 1313080096 - (v1037 & 0xF3 ^ 0xB1BBFCE0 | (v1037 ^ 0x1F) & 0xF3) + 295) % 0x3C9) ^ 0x1A)) ^ 0x1A)
        + 105708;
  v1040 = 16
        * (*(unsigned __int8 *)(v881
                              + (LODWORD(STACK[0x528])
                                             + 105708
                                             - 969
                                             * ((4432371
                                               * (unint64_t)(LODWORD(STACK[0x528]) + 105708)) >> 32))) ^ 0x1A);
  LOBYTE(v979) = *(_BYTE *)(v881
                          + (LODWORD(STACK[0x540])
                                         + 105708
                                         - 969
                                         * ((4432371 * (unint64_t)(LODWORD(STACK[0x540]) + 105708)) >> 32))) ^ 0x1A;
  v1041 = (*(unsigned __int8 *)(v881
                              + (LODWORD(STACK[0x520])
                                             + 105708
                                             - 969
                                             * ((4432371
                                               * (unint64_t)(LODWORD(STACK[0x520]) + 105708)) >> 32))) ^ 0x1A) << 8;
  v1042 = (*(unsigned __int8 *)(v881 + (v980 + 105708) % 0x3C9u) ^ 0x1A) << 12;
  v1043 = (*(unsigned __int8 *)(v881
                              + (v982
                                             + 105708
                                             - 969 * ((4432371 * (unint64_t)(v982 + 105708)) >> 32))) ^ 0x1A) << 16;
  v1044 = (*(unsigned __int8 *)(v881
                              + (v1031
                                             + 105708
                                             - 969
                                             * ((4432371 * (unint64_t)(v1031 + 105708)) >> 32))) ^ 0x1A) << 20;
  v1045 = (*(unsigned __int8 *)(v881 + v1036) ^ 0x1A) << 24;
  v1046 = v1045 ^ ((*(unsigned __int8 *)(v881 + (v1039 - 969 * ((4432371 * (unint64_t)v1039) >> 32))) ^ 0xAAAAAAAA) << 28);
  v1047 = v1045 ^ v1044;
  v1048 = v1044 ^ v1043;
  v1049 = v1043 ^ v1042;
  v1050 = v1042 ^ v1041;
  v1051 = v1041 ^ v1040;
  v1052 = STACK[0x560] & 0xFFFFFF0F | (16 * (v979 & 0xF));
  LOBYTE(v979) = v1040 ^ v979;
  v1053 = 383 * v1052 + 6894 - 969 * ((4432371 * (unint64_t)(383 * v1052 + 6894)) >> 32);
  LODWORD(v979) = 383 * (v979 & 0xF0 | (LODWORD(STACK[0x548]) >> 4)) + 6894;
  v1054 = v979 - 969 * ((4432371 * (unint64_t)v979) >> 32);
  LODWORD(v979) = 383 * ((v1051 >> 4) & 0xF0 | (LODWORD(STACK[0x548]) >> 8) & 0xF) + 6894;
  LODWORD(v979) = v979 - 969 * ((4432371 * (unint64_t)v979) >> 32);
  v1055 = v979 + 1972308441 - ((2 * v979) & 0x3B2);
  LODWORD(v979) = ((v1050 >> 8) & 0xF0 | LODWORD(STACK[0x538]))
                + (((_BYTE)v979 - 39 - ((2 * (_BYTE)v979) & 0xB2)) & 0x12 ^ 0x10 | ((_BYTE)v979
                                                                                  - 39
                                                                                  - ((2 * (_BYTE)v979) & 0xB2)) & 0x12 ^ 2);
  v1056 = 383 * v979 - 969 * ((4432371 * (unint64_t)(383 * v979)) >> 32);
  LODWORD(v979) = 383 * (((v1049 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x530])) & 0xF) ^ 6) + 6894;
  v1057 = v979 - 969 * ((4432371 * (unint64_t)v979) >> 32);
  LODWORD(v979) = (LODWORD(STACK[0x558]) >> 20) ^ 0x3EB;
  v1058 = v979 >> (STACK[0x584] & 4) >> (STACK[0x584] & 4 ^ 4);
  LODWORD(v979) = 383 * (v979 & 0xF | (16 * ((v1048 >> 20) & 0xF))) + 6894;
  v1059 = v979 - 969 * ((4432371 * (unint64_t)v979) >> 32);
  LODWORD(v979) = 383 * (v1058 & 0xF | (16 * (HIBYTE(v1047) & 0xF))) + 6894;
  v1060 = v979 - 969 * ((4432371 * (unint64_t)v979) >> 32);
  LODWORD(v979) = *(unsigned __int8 *)(v881 + v1053);
  v1061 = HIBYTE(v1046) & 0xF0 | (v1058 >> 4);
  v1062 = v979 ^ (16 * (*(unsigned __int8 *)(v881 + v1054) ^ 0x1A)) ^ 0x1A;
  v1063 = v1062 ^ ((*(unsigned __int8 *)(v881 + (v1055 ^ 0x758F09D9u)) ^ 0x1A) << 8);
  v1064 = v1063 ^ ((*(unsigned __int8 *)(v881 + v1056) ^ 0x1A) << 12);
  v1065 = v1064 ^ ((*(unsigned __int8 *)(v881 + v1057) ^ 0x1A) << 16);
  v1066 = v1065 ^ ((*(unsigned __int8 *)(v881 + v1059) ^ 0x1A) << 20);
  v1067 = v1066 ^ ((*(unsigned __int8 *)(v881 + v1060) ^ 0x1A) << 24);
  v1068 = (v1067 ^ ((*(unsigned __int8 *)(v881
                                        + (383 * v1061
                                                       + 6894
                                                       - 969
                                                       * ((4432371 * (unint64_t)(383 * v1061 + 6894)) >> 32))) ^ 0xAAAAAAAA) << 28)) >> 28;
  v1069 = STACK[0x680];
  v1070 = *(unsigned __int8 *)(v881
                             + (unsigned __int16)(383 * ((v1063 >> 8) & 0xF)
                                                - 969
                                                * ((unsigned __int16)((1658007 * ((v1063 >> 8) & 0xF)) >> 16) >> 6))) ^ 0x1A ^ ((((*(unsigned __int8 *)(v881 + (unsigned __int16)(383 * (HIBYTE(v1067) & 0xF) - 969 * ((unsigned __int16)((1658007 * (HIBYTE(v1067) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v881 + (unsigned __int16)(383 * v1068 - 969 * ((unsigned __int16)((1658007 * v1068) >> 16) >> 6))) ^ 0x1A) << 12) | *(unsigned __int8 *)(v881 + (unsigned __int16)(383 * (BYTE2(v1065) & 0xF) - 969 * ((unsigned __int16)((1658007 * (HIWORD(v1065) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 8) ^ ((*(unsigned __int8 *)(v881 + (unsigned __int16)(383 * ((v1066 >> 20) & 0xF) - 969 * ((unsigned __int16)((1658007 * ((v1066 >> 20) & 0xF)) >> 16) >> 6))) ^ 0x1A) << 12) ^ (16 * (*(unsigned __int8 *)(v881 + (unsigned __int16)(383 * ((unsigned __int16)v1064 >> 12) - 969 * ((unsigned __int16)((1658007 * ((unsigned __int16)v1064 >> 12)) >> 16) >> 6))) ^ 0x1A));
  v1071 = v1029 ^ 0x1F1966 ^ (LODWORD(STACK[0x594]) + 2038118 - ((2 * LODWORD(STACK[0x594])) & 0x3E32CC));
  v1072 = *(unsigned __int8 *)(v881
                             + (unsigned __int16)(383 * (v979 & 0xF ^ 0xA)
                                                - 969 * ((unsigned __int16)((1658007 * (v979 & 0xF ^ 0xA)) >> 16) >> 6))) ^ v1029 ^ 0xD879F940 ^ (16 * (*(unsigned __int8 *)(v881 + (unsigned __int16)(383 * (v1062 >> 4) - 969 * ((unsigned __int16)((1658007 * (v1062 >> 4)) >> 16) >> 6))) ^ 0x1A)) ^ (v1070 << 8);
  v1073 = ((2 * (v1071 - (v1029 ^ 0x16B08F63))) & 0x1DFEBBBE) + ((v1071 - (v1029 ^ 0x16B08F63)) ^ 0xEFF5DDF);
  v1074 = LODWORD(STACK[0x5A0]) ^ 0xD40B7751;
  v1075 = LODWORD(STACK[0x62C]) - 209057949 - ((2 * LODWORD(STACK[0x62C]) + 2) & 0xE7140EC6) + 1;
  LODWORD(STACK[0x648]) = v1072 ^ 0x1A;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x690]
                                                     + 8 * ((1860 * ((v1075 ^ 0xF38A0740) > 0x3F)) ^ v1069))
                                         - 8))(v1074
                                               + 251616735
                                               - v1073
                                               - 1655886941
                                               + (~(2 * (v1074 + 251616735 - v1073)) | 0xC565A8B9) + 1);
}

void sub_1CF2EF040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;

  LODWORD(STACK[0x62C]) = a5;
  LODWORD(STACK[0x61C]) = STACK[0x678];
  LODWORD(STACK[0x678]) = v5;
  JUMPOUT(0x1CF2EC7C4);
}

uint64_t sub_1CF2EF08C(int a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  BOOL v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  int v66;
  unsigned int v67;
  int v68;
  int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  int v130;
  int v131;
  BOOL v132;
  unsigned int v133;
  int v134;
  char v135;
  unsigned int v136;
  char v137;
  int v138;
  char v139;
  char v140;
  char v141;
  char v142;
  char v143;
  char v144;
  char v145;
  char v146;
  char v147;
  char v148;
  char v149;
  char v150;
  char v151;
  char v152;
  char v153;
  char v154;
  char v155;
  char v156;
  char v157;
  char v158;
  char v159;
  char v160;
  char v161;
  char v162;
  char v163;
  char v164;
  char v165;
  char v166;
  char v167;
  char v168;
  char v169;
  char v170;
  char v171;
  char v172;
  char v173;
  char v174;
  char v175;
  char v176;
  char v177;
  char v178;
  char v179;
  char v180;
  char v181;
  char v182;
  char v183;
  char v184;
  char v185;
  char v186;
  char v187;
  char v188;
  char v189;
  char v190;
  char v191;
  char v192;
  char v193;
  char v194;
  char v195;
  char v196;
  char v197;
  char v198;
  char v199;
  char v200;
  char v201;
  char v202;
  char v203;
  char v204;
  char v205;
  char v206;
  char v207;
  char v208;
  char v209;
  char v210;
  char v211;
  char v212;
  char v213;
  char v214;
  char v215;
  char v216;
  char v217;
  char v218;
  char v219;
  char v220;
  char v221;
  char v222;

  LODWORD(STACK[0x62C]) = LODWORD(STACK[0x4E4]) + LODWORD(STACK[0x438]);
  LODWORD(STACK[0x49C]) += 64;
  LODWORD(STACK[0x61C]) = LODWORD(STACK[0x448]) + LODWORD(STACK[0x4E0]);
  LODWORD(STACK[0x620]) = LODWORD(STACK[0x4DC]) + LODWORD(STACK[0x444]);
  LODWORD(STACK[0x624]) = LODWORD(STACK[0x4EC]) + LODWORD(STACK[0x43C]);
  LODWORD(STACK[0x680]) = LODWORD(STACK[0x4E8]) + LODWORD(STACK[0x440]);
  LODWORD(STACK[0x640]) += LODWORD(STACK[0x494]);
  v32 = LODWORD(STACK[0x4D0]) - 1838399208;
  LODWORD(STACK[0x60C]) = (a22 + 1610755360) < 0x88BBEC91;
  LODWORD(STACK[0x610]) = v32 < 0x88BBEC91;
  v33 = a22 + 1610755360 >= v32;
  v34 = v23 ^ (a3 - 1182390490);
  v35 = (v34 ^ 0xB6C1D1F9) + v26;
  v36 = (v22 - 690156822) ^ a1;
  v37 = (v36 ^ 0x62B2D45C) + a5;
  v38 = (v30 - 251616735) ^ v24;
  v39 = v36 ^ v38;
  LODWORD(STACK[0x5E8]) = v36 ^ v38;
  v40 = v38 ^ 0x54366F49;
  v41 = v22 + v37;
  v42 = v37 - 783464535 + v22 + v37 - 383565807;
  LODWORD(STACK[0x5F0]) = v41 - 383565807;
  LODWORD(STACK[0x5FC]) = a3;
  v43 = ((2 * (v40 - v42)) & 0xABBEB7DE) + ((v40 - v42) ^ 0x55DF5BEF);
  LODWORD(STACK[0x5D4]) = v43;
  LODWORD(STACK[0x5B0]) = v27 - 1074293394;
  v44 = (v28 + 134) ^ (v27 - 1074293394);
  v45 = a3 + v35;
  LODWORD(STACK[0x600]) = a3 + v35;
  v46 = v35 + 1958035026 + a3 + v35 + 1440123906;
  v47 = v34 ^ v44;
  LODWORD(STACK[0x5C0]) = v47;
  v48 = v44 - v46;
  LODWORD(STACK[0x5C8]) = v44 - v46;
  v49 = v47 ^ a4;
  v50 = v43 + 855021399 - ((2 * (v43 + 855021399)) & 0x9EC7E902);
  v51 = v49 - ((2 * v49 - 1251018074) & 0xCF095344) + 1111238389;
  v52 = (v45 + 1440123906 - 2 * ((v45 + 1769823530) & 0x6784A9A7 ^ (v45 + 1440123906) & 5) + 2066447050) ^ v51;
  LODWORD(STACK[0x5F8]) = v52;
  v53 = ((v46 ^ (v49 - 2041295702)) + 1736747426 - ((2 * (v46 ^ (v49 - 2041295702))) & 0xCF095344)) ^ v51;
  v54 = ((2 * (v52 - v53)) & 0x3F7FDAFE) + ((v52 - v53) ^ 0x1FBFED7F);
  v55 = ((2 * ((v51 ^ 0x6784A9A2) + 532671871 - v54)) & 0xDDFB7F8E)
      + (((v51 ^ 0x6784A9A2) + 532671871 - v54) ^ 0x6EFDBFC7);
  v56 = (v39 ^ 0xC97B44EA) - ((2 * (v39 ^ 0xC97B44EA) + 896465574) & 0x58A76254) - 2029310339;
  v57 = (v41 - 383565807 - ((2 * v41 - 533308546) & 0x58A76254) - 1286889768) ^ v56;
  LODWORD(STACK[0x5BC]) = v57;
  v58 = ((v42 ^ ((v39 ^ 0xC97B44EA) - 2041295702))
       - 1403801302
       - ((2 * (v42 ^ ((v39 ^ 0xC97B44EA) - 2041295702))) & 0x58A76254)) ^ v56;
  v59 = ((2 * (v57 - v58)) & 0xEF9DFFBA) + ((v57 - v58) ^ 0x77CEFFDD);
  v60 = ((2 * ((v56 ^ 0xAC53B12A) + 2010054621 - v59)) & 0x5B7AF62A)
      + (((v56 ^ 0xAC53B12A) + 2010054621 - v59) ^ 0xADBD7B15);
  LODWORD(STACK[0x548]) = v48 - 119843193;
  LODWORD(STACK[0x5F4]) = v54;
  v61 = ((v48 - 1999244474) ^ 0xBEB8AA9) + 532671871 - v54;
  LODWORD(STACK[0x5A0]) = v61;
  v62 = v55 - ((2 * v55 + 6292822) & 0x6EA660) - 672705061;
  LODWORD(STACK[0x594]) = v62;
  v63 = (a12 & (2 * (v61 + (v62 ^ 0x7FC8ACCF) + 1))) + ((v61 + (v62 ^ 0x7FC8ACCF) + 1) ^ 0xF3B76BEF);
  v50 -= 815532927;
  LODWORD(STACK[0x558]) = v50;
  v64 = (v50 ^ 0xC4887E28) - v59;
  LODWORD(STACK[0x598]) = v64;
  LODWORD(STACK[0x5EC]) = v59;
  v65 = v60 - ((2 * v60 + 836800186) & 0x6D0763A2) - 814483154;
  LODWORD(STACK[0x578]) = v65;
  v66 = (v65 ^ 0x497C4E2E) + 1;
  LODWORD(STACK[0x570]) = v66;
  LODWORD(STACK[0x584]) = v64 + 2010054621;
  v67 = ((2 * (v66 + v64 + 2010054621)) & 0x7DDDBDDE) + ((v66 + v64 + 2010054621) ^ 0xBEEEDEEF);
  v68 = (((v55 - 1862123463) ^ v53) - ((2 * ((v55 - 1862123463) ^ v53)) & 0x6EA660) - 2143857872) ^ (v55 - ((2 * v55 + 6292822) & 0x6EA660) - 672705061);
  v69 = (v63 + 206083089) ^ v68;
  v70 = v69;
  LODWORD(STACK[0x588]) = v69;
  v71 = ((2 * (v54 + v63 + 309283328 + (v69 ^ 0x2874F4FA))) & 0xF5F977DE)
      + ((v54 + v63 + 309283328 + (v69 ^ 0x2874F4FA)) ^ 0x7AFCBBEF);
  LODWORD(STACK[0x5E4]) = v71;
  v72 = v55 - v63;
  v73 = (v60 - ((2 * v60 + 836800186) & 0x6D0763A2) - 814483154) ^ 0xD78B0B05 ^ (((v60 + 1380091115) ^ v58)
                                                                               - ((2 * ((v60 + 1380091115) ^ v58)) & 0x6D0763A2)
                                                                               - 1232883247);
  v74 = ((v67 + 1091641617) ^ v73) - 1943178775 - ((2 * ((v67 + 1091641617) ^ v73)) & 0x185AE3D2);
  v75 = v60 - v67;
  LODWORD(STACK[0x568]) = v74 ^ 0x73D28E16;
  v76 = v74;
  LODWORD(STACK[0x580]) = v74;
  v77 = ((2 * (v59 + v67 - 282540894 + (v74 ^ 0x73D28E16))) & 0xBFBFD954)
      + ((v59 + v67 - 282540894 + (v74 ^ 0x73D28E16)) ^ 0xDFDFECAA);
  LODWORD(STACK[0x5D8]) = v77;
  v78 = ((2 * ((v77 + 538973014) ^ v73)) & 0xFB397FFC) + ((v77 + 538973014) ^ v73 ^ 0x7D9CBFFE);
  v79 = ((2 * ((v71 - 2063383535) ^ v68)) & 0x4F660F72 ^ 0xF060602) + ((v71 - 2063383535) ^ v68 ^ 0xF0380CBC);
  LODWORD(STACK[0x550]) = v72;
  v80 = (v72 - v79 + 1943774169) ^ (v79 - 891762817);
  v81 = (v78 + 1961824058) ^ (v75 - v78 + 1446843344);
  v82 = v77 + v75;
  v83 = v77 + v75 + 1254361884;
  LODWORD(STACK[0x560]) = v83;
  LODWORD(STACK[0x520]) = v70 ^ 0xD78B0B05;
  v84 = 2 * (v70 ^ 0xD78B0B05) + 66210976;
  LODWORD(STACK[0x518]) = v84;
  v79 -= 1433974711;
  v85 = v72 + 590316581 + v71;
  LODWORD(STACK[0x5B8]) = v85;
  v86 = (((v70 ^ 0xD78B0B05) - (v84 & 0xE89AD982) + 1984336657) ^ 0x744D6CC1 ^ v80) - v79;
  LODWORD(STACK[0x538]) = v86 + 9023263;
  v87 = v79 - (v86 + 9023263);
  LODWORD(STACK[0x530]) = v80 + 2112307709;
  v88 = (v80 + 2112307709) ^ v85;
  LODWORD(STACK[0x5AC]) = v88;
  v89 = v87 ^ v88;
  v90 = ((2 * (v80 + v86 + 2121330973 + (v89 ^ 0x132BA752))) & 0xFB5DF3BE)
      + ((v80 + v86 + 2121330973 + (v89 ^ 0x132BA752)) ^ 0x7DAEF9DF);
  v91 = v81 ^ ((v76 ^ 0x8C2D71E9) + 33105488);
  LODWORD(STACK[0x500]) = v91;
  v92 = v91 - v78 - 1419612164;
  LODWORD(STACK[0x528]) = v92;
  v93 = v81 - ((2 * v81 + 198083578) & 0xBF9EF08) + 65288577;
  v94 = v78 - v92 + 1410588901;
  v95 = v93 ^ (v82 - 2 * (v83 & 0x5FCF786 ^ v82 & 2) - 792657248);
  LODWORD(STACK[0x540]) = v95;
  LODWORD(STACK[0x4E8]) = v92 + 9023263;
  v96 = v95 ^ v94;
  v97 = v95 ^ v94 ^ 0x132BA752;
  v98 = v92 + 9023263 + (v93 ^ 0x85FCF784) + v97 + 1;
  v99 = ((2 * v98) & 0xFFFFFFDF) + (v98 ^ 0x7FFFFFEF);
  v100 = (v80 + 793567060 + (~(2 * v80 + 950512828) | 0xDA0DEE15)) ^ 0xFE2D5058 ^ v87 ^ v88;
  LOBYTE(STACK[0xFFB]) = (v95 ^ v94 ^ 0xAD) - ((2 * (v95 ^ v94 ^ 0xAD) + 52) & 0x34) - 12;
  LOBYTE(STACK[0xF66]) = (((2 * (((v80 + 84 + (~(2 * v80 - 68) | 0x15)) ^ 0x58 ^ v87 ^ v88) - 104)) & 0xD0)
                        + ((((v80 + 84 + (~(2 * v80 - 68) | 0x15)) ^ 0x58 ^ v87 ^ v88) - 104) ^ 0x68)) ^ 0x8F;
  LOBYTE(STACK[0xE7C]) = v99 - ((2 * v99 + 34) & 0x34) + 43;
  LOBYTE(STACK[0xCFD]) = ((v81 - ((2 * v81 - 68) & 0xA) - 29) ^ 0x28 ^ v95 ^ v94)
                       - ((2 * ((v81 - ((2 * v81 - 68) & 0xA) - 29) ^ 0x28 ^ v95 ^ v94)) & 0x34)
                       + 26;
  v101 = v87 - v90 - ((2 * (v87 - v90) + 300589336) & 0x654394D4) + 999758582;
  v102 = ((2 * (v100 + (v101 ^ 0x4D5E3595) + 1)) & 0xAFDEFB7E) + ((v100 + (v101 ^ 0x4D5E3595) + 1) ^ a10);
  LOBYTE(STACK[0xD1C]) = (v90 + 33) ^ 0x8F;
  LOBYTE(STACK[0xE9B]) = ((v87 ^ v88 ^ 0xAD) - 38) ^ 0x8F;
  v103 = v94 - v99 - ((2 * (v94 - v99) + 378318136) & 0xE7AEE3C4) + 2132658302;
  LODWORD(STACK[0x4E4]) = v103;
  LOBYTE(STACK[0xDB1]) = v103 ^ 0xF8;
  v104 = (v90 - 2108619231) ^ 0xB2A1CA6A ^ v101;
  LOBYTE(STACK[0xC51]) = v101 ^ 0xE5;
  v105 = ((v81 - ((2 * v81 + 413641916) & 0x18611D0A) - 1467718429) ^ 0x60E4D628 ^ v95 ^ v94) + (v103 ^ 0xC288E1D) + 1;
  v106 = ((2 * (v97 + v99 - 805738877 + v105)) & 0xDFFDB7CC) + ((v97 + v99 - 805738877 + v105) ^ 0x6FFEDBE6);
  LODWORD(STACK[0x510]) = 2 * v106;
  LOBYTE(STACK[0xCE6]) = ((2 * (v97 + v99 - 125 + v105)) & 0xCC)
                       + ((v97 + v99 - 125 + v105) ^ 0xE6)
                       - ((2 * (((2 * (v97 + v99 - 125 + v105)) & 0xCC) + ((v97 + v99 - 125 + v105) ^ 0xE6)) + 52) & 0x34)
                       + 52;
  LODWORD(STACK[0x4EC]) = v102;
  v107 = ((2 * ((v89 ^ 0x132BA752) + v90 - 94703916 + v102)) & 0xFBEFEFBA)
       + (((v89 ^ 0x132BA752) + v90 - 94703916 + v102) ^ 0x7DF7F7DD);
  v108 = v96 ^ 0xECD458AD;
  v109 = ((2 * (v108 + 473586368)) & 0x4C6FF36A) + ((v108 + 473586368) ^ 0x2637F9B5);
  v110 = v89 ^ 0xECD458AD;
  LOBYTE(STACK[0xF30]) = v105 - ((2 * v105 + 30) & 0x34) + 9;
  LOBYTE(STACK[0xDD0]) = (v102 + 48) ^ 0x8F;
  LOBYTE(STACK[0xF4F]) = (((2 * ((v89 ^ 0x52) + v90 - 44 + v102)) & 0xBA)
                        + (((v89 ^ 0x52) + v90 - 44 + v102) ^ 0xDD)
                        + 35) ^ 0x8F;
  LOBYTE(STACK[0xE65]) = ((2 * (v108 - 64)) & 0x6A)
                       + ((v108 - 64) ^ 0xB5)
                       - ((2 * (((2 * (v108 - 64)) & 0x6A) + ((v108 - 64) ^ 0xB5)) + 22) & 0x34)
                       + 101;
  LOBYTE(v97) = (((v89 ^ 0xAD) - 2 * (((v89 ^ 0xAD) - 64) & 0xB7 ^ (v89 ^ 0xAD) & 1) + 118) & 0x95 ^ 0x94)
              + (((v89 ^ 0x52) + 64) & 0x95);
  LOBYTE(v97) = (v97 - ((2 * v97) & 0x6C) - 74) ^ ((v89 ^ 0xAD)
                                                 - 2 * (((v89 ^ 0xAD) - 64) & 0xB7 ^ (v89 ^ 0xAD) & 1)
                                                 + 118);
  LOBYTE(STACK[0xD05]) = v97 + (~(2 * v97) | 0xCB) + 27;
  LODWORD(STACK[0x4E0]) = v104 - 365262893;
  *(_BYTE *)(STACK[0x688]
           + ((((v109 + 1506281035) & 0x406DF20D ^ 0x406DF20D) + ((v109 + 1506281035) & 0x406DF20D)) ^ 0x406DF049u)) = (v104 - 45) ^ 0x8F;
  v111 = (LODWORD(STACK[0x508]) - 969) | 0x198;
  v112 = STACK[0x648];
  v113 = a1 ^ LODWORD(STACK[0x648]);
  LODWORD(STACK[0x4DC]) = v111;
  LODWORD(STACK[0x648]) = ((v112 ^ ((LODWORD(STACK[0x5B0]) ^ v29 ^ 0x56AB6873 ^ v23)
                                  - 663094976
                                  - ((2 * (LODWORD(STACK[0x5B0]) ^ v29 ^ 0x56AB6873 ^ v23)) & 0xB0F3F280)))
                         - (LODWORD(STACK[0x5B0]) ^ v29 ^ 0x56AB6873 ^ v23)) ^ ((v24 ^ 0xABC990B6)
                                                                              + (v24 ^ v112 ^ 0x8C4F9609)
                                                                              + 1) ^ ((a1 ^ 0x62B2D45C)
                                                                                    + (v113 ^ v111 ^ 0x4534D379)
                                                                                    + 1);
  v114 = LODWORD(STACK[0x5C0]) ^ LODWORD(STACK[0x650]) ^ LODWORD(STACK[0x5C8]);
  v115 = ((((v114 ^ 0x9147D746) + 529876597 - 2 * ((v114 ^ 0x9147D746) & 0x1F95467D ^ v114 & 8)) ^ LODWORD(STACK[0x678]))
        - (v114 ^ 0x9147D746)) ^ ((LODWORD(STACK[0x5E8]) ^ 0x3684BB15)
                                + (LODWORD(STACK[0x678]) ^ 0xD6EE029F ^ LODWORD(STACK[0x5E8]))
                                + 1) ^ (1440701423
                                      - LODWORD(STACK[0x5D4])
                                      + (LODWORD(STACK[0x4F0]) ^ (LODWORD(STACK[0x5D4]) - 1440701423)));
  v116 = (LODWORD(STACK[0x548]) - 142653854 + ~((2 * LODWORD(STACK[0x548]) + 536164734) & 0xCF095344)) ^ v51;
  v117 = (v116 - 663094976 - ((2 * v116) & 0xB0F3F280)) ^ LODWORD(STACK[0x634]);
  v118 = ((((v117 + 529876597 - ((2 * v117) & 0x3F2A8CEA)) ^ LODWORD(STACK[0x670])) - v117) ^ ((v56 ^ 0x53AC4ED5)
                                                                                             + (LODWORD(STACK[0x670]) ^ 0xB3C6F75F ^ v56)
                                                                                             + 1) ^ ((LODWORD(STACK[0x558]) ^ a13) + (LODWORD(STACK[0x670]) ^ 0xD0F6B2F4 ^ LODWORD(STACK[0x558])) + 1))
       - LODWORD(STACK[0x5BC]);
  v119 = LODWORD(STACK[0x658]) ^ LODWORD(STACK[0x5A0]) ^ 0x9FA21545 ^ LODWORD(STACK[0x594]);
  v120 = (((v119 - 663094976 - ((2 * v119) & 0xB0F3F280)) ^ LODWORD(STACK[0x668])) - v119) ^ ((LODWORD(STACK[0x4F4]) ^ LODWORD(STACK[0x584]))
                                                                                            - LODWORD(STACK[0x598])
                                                                                            - 2010054621) ^ (LODWORD(STACK[0x570]) + (LODWORD(STACK[0x668]) ^ 0x6EFA4891 ^ LODWORD(STACK[0x578])));
  v121 = LODWORD(STACK[0x628]) ^ 0x1A;
  v122 = LODWORD(STACK[0x588]) ^ a11 ^ (((LODWORD(STACK[0x550]) + 1277729824) ^ 0x4696E2F9 ^ v121)
                                      - ((2 * ((LODWORD(STACK[0x550]) + 1277729824) ^ 0x4696E2F9 ^ v121)) & 0xF584EE56)
                                      - 87918805);
  v123 = (LODWORD(STACK[0x568]) + (v31 ^ 0x3E71C83A ^ LODWORD(STACK[0x580])) + 1) ^ ((v31 ^ 0xB25CB9D3 ^ (v75 - 660581422))
                                                                                   - v75
                                                                                   + 660581422) ^ (((v122 + 1839445567 - ((2 * v122) & 0xDB476C7E)) ^ v25)
                                                                                                 - v122);
  v124 = (LODWORD(STACK[0x520]) - (STACK[0x518] & 0xBD4237BA) - 526761427) ^ LODWORD(STACK[0x630]);
  v125 = (((LODWORD(STACK[0x4F8]) ^ v81) - v81) ^ (((v124 + 1839445567 - ((2 * v124) & 0xDB476C7E)) ^ LODWORD(STACK[0x63C]))
                                                 - v124) ^ ((LODWORD(STACK[0x4F8]) ^ LODWORD(STACK[0x500]))
                                                          - LODWORD(STACK[0x500])))
       - LODWORD(STACK[0x560]);
  v126 = LODWORD(STACK[0x538]) ^ LODWORD(STACK[0x638]) ^ (v80 - ((2 * LODWORD(STACK[0x530])) & 0xDB476C7E) - 343214020);
  v127 = ((LODWORD(STACK[0x4FC]) ^ LODWORD(STACK[0x4E8])) - LODWORD(STACK[0x528]) - 9023263) ^ (((v126
                                                                                                - 559866915
                                                                                                - ((2 * v126) & 0xBD4237BA)) ^ LODWORD(STACK[0x660]))
                                                                                              - v126) ^ ((v93 ^ 0x7A03087B) + (LODWORD(STACK[0x660]) ^ 0x5B5DEC59 ^ v93) + 1);
  LODWORD(STACK[0x454]) = LODWORD(STACK[0x454]) - 1182390490 + (v29 ^ 0x1F954675) + LODWORD(STACK[0x5FC]);
  LODWORD(STACK[0x44C]) = LODWORD(STACK[0x44C]) - v22 + 690156822 + LODWORD(STACK[0x648]);
  LODWORD(STACK[0x45C]) = LODWORD(STACK[0x45C]) - 2063383535 + LODWORD(STACK[0x5E4]) + (v121 ^ 0x4696E2F9);
  LODWORD(STACK[0x450]) = LODWORD(STACK[0x450]) - LODWORD(STACK[0x5F0]) - 2116156008 + v115;
  LODWORD(STACK[0x46C]) += v118;
  LODWORD(STACK[0x468]) = LODWORD(STACK[0x468]) - LODWORD(STACK[0x5EC]) + 1374182512 + v120;
  v128 = LODWORD(STACK[0x458]) + (LODWORD(STACK[0x540]) ^ 0x132BA752) + v127;
  LODWORD(STACK[0x464]) = LODWORD(STACK[0x464]) - 538973014 - LODWORD(STACK[0x5D8]) + v123;
  LODWORD(STACK[0x470]) = LODWORD(STACK[0x470]) - 2007660538 + LODWORD(STACK[0x64C]);
  LODWORD(STACK[0x448]) = LODWORD(STACK[0x61C]) + 103200238 + LODWORD(STACK[0x5F4]);
  LODWORD(STACK[0x444]) = LODWORD(STACK[0x620]) + LODWORD(STACK[0x5F8]);
  LODWORD(STACK[0x43C]) = LODWORD(STACK[0x624]) + LODWORD(STACK[0x5B8]);
  LODWORD(STACK[0x438]) = LODWORD(STACK[0x600]) + LODWORD(STACK[0x62C]) - 525899292;
  LODWORD(STACK[0x440]) = LODWORD(STACK[0x680]) + (LODWORD(STACK[0x5AC]) ^ 0xECD458AD);
  LODWORD(STACK[0x460]) += v125;
  v129 = STACK[0x508];
  LODWORD(STACK[0x680]) = LODWORD(STACK[0x508]) + 66;
  LODWORD(STACK[0x458]) = v128 + 1;
  LODWORD(STACK[0x494]) = LODWORD(STACK[0x640]) - 1768874864;
  v130 = STACK[0x610];
  v131 = !v33;
  v132 = v130 == LODWORD(STACK[0x60C]);
  v133 = ((v99 - 2147483631) ^ 0xF3D771E2 ^ LODWORD(STACK[0x4E4])) - 365262893;
  v134 = v107 - LODWORD(STACK[0x4EC]) + 1490105331;
  v135 = v110 + 73;
  v136 = ((v110 - 2 * ((v110 + 473586368) & 0x303EFEB7 ^ v110 & 1) - 864462474) ^ 0xB03EFEB6)
       + LODWORD(STACK[0x4E0])
       - 2113402845
       + v107;
  LOBYTE(v136) = v136 - ((2 * v136) & 0xDA) + 109;
  LOBYTE(STACK[0xFE4]) = v133 - ((2 * v133) & 0x34) + 26;
  LOBYTE(STACK[0x1003]) = v136 ^ 0xE2;
  v137 = v136 ^ (v110 - ((2 * (v110 + 73)) & 0xDA) - 74);
  LOBYTE(v133) = v109 + v133 + 101 + v106 - ((2 * (v109 + v133 + 101 + v106)) & 0x98) + 76;
  LOBYTE(STACK[0xD9A]) = v133 ^ 0x56;
  v138 = -1955483477 - v106 - ((536721356 - LODWORD(STACK[0x510])) & 0x36E5A98A);
  v139 = 43 - v107 - ((-70 - 2 * v107) & 0x9C);
  LOBYTE(STACK[0xDB9]) = v134 ^ 0xBD;
  LOBYTE(STACK[0xF19]) = (v106 - v105 + 43) ^ 0x28;
  LOBYTE(v136) = v136 ^ v139;
  LOBYTE(STACK[0xCCF]) = (v133 ^ (v108 - ((2 * v108 - 110) & 0x98) - 107))
                       - ((2 * (v133 ^ (v108 - ((2 * v108 - 110) & 0x98) - 107))) & 0x34)
                       + 26;
  LOBYTE(STACK[0xF38]) = v137 ^ 0x8F;
  LOBYTE(STACK[0xE4E]) = v138 ^ 0xDF;
  LOBYTE(v133) = v133 ^ v138;
  v140 = (v106 - v105 + 43) ^ 0xA7;
  LOBYTE(STACK[0xCEE]) = v139 ^ 0xC1;
  LOBYTE(STACK[0xE6D]) = ((v136 ^ 0x23) + 5) ^ 0x8F;
  LOBYTE(v138) = (v140 - ((2 * v140) & 0x8A) - 59) ^ v138;
  LOBYTE(v133) = v133 ^ 0x89;
  v141 = v140 - ((2 * v140 - 84) & 0x56) + 1;
  LOBYTE(STACK[0xD83]) = v141 ^ 0xB1;
  LOBYTE(v138) = v138 - 2 * ((v138 + 44) ^ v138 & 3) + 40;
  LOBYTE(STACK[0xF02]) = (v141 ^ (v108 - ((2 * v108 - 110) & 0x56) - 12))
                       + (~(2 * (v141 ^ (v108 - ((2 * v108 - 110) & 0x56) - 12))) | 0xCB)
                       + 27;
  LOBYTE(STACK[0xCB8]) = v138 ^ 0xE6;
  v142 = (v134 ^ 0xA7) + 86;
  v143 = (v134 ^ 0xE9 ^ v139) - ((2 * (v134 ^ 0xE9 ^ v139) + 88) & 0xA4) - 2;
  v144 = v142 ^ v135;
  LOBYTE(STACK[0xFEC]) = v142 ^ 0x8F;
  LOBYTE(STACK[0xFCD]) = v133 - ((2 * v133 + 10) & 0x34) + 31;
  LOBYTE(v136) = v136 ^ 0x23;
  v145 = v143 ^ ((v134 ^ 0xA7) - ((2 * v142) & 0xA4) + 40);
  LOBYTE(STACK[0xDA2]) = v144 ^ 0x8F;
  v146 = v136 + v144;
  v147 = (v136 + v144 + 5) ^ 0xD2 ^ v143;
  v148 = (v141 ^ (v108 - ((2 * v108 - 110) & 0x56) - 12)) + v133;
  v149 = v141 ^ 0x57 ^ v138;
  LOBYTE(v136) = v147 ^ (v136 + 89);
  LOBYTE(v138) = (v148 + 5) ^ 0xFC ^ v138;
  v150 = v147 - v146;
  v151 = v145 - 5 + v150 - ((2 * (v145 - 5 + v150)) & 0xDA) - 19;
  LOBYTE(v133) = v138 ^ (v133 + 89);
  LOBYTE(STACK[0xF21]) = v143 ^ 0x5D;
  v152 = v138 - v148;
  *(_BYTE *)(STACK[0x688] + ((((v134 ^ 0x58) + 191) ^ ((v134 ^ 0xA7u) + 65)) & 0x97)) = v136 ^ 0x8F;
  LOBYTE(STACK[0xE37]) = v133 - ((2 * v133) & 0x34) + 26;
  LOBYTE(STACK[0xE56]) = v151 ^ 0x62;
  v153 = v149 - 5 + v138 - v148 - 18 - ((2 * (v149 - 5 + v138 - v148)) & 0xDC);
  LOBYTE(STACK[0xFD5]) = (v146 - 100) ^ 0x8F;
  LOBYTE(v136) = ((2 * (v151 ^ v136)) ^ 0xDA) + (v151 ^ v136 ^ 0x12);
  LOBYTE(v134) = v153 ^ (v133 - 18 - ((2 * v133) & 0xDC));
  LOBYTE(STACK[0xEEB]) = v138 - v148 - ((2 * (v138 - v148) + 54) & 0x34) + 21;
  LOBYTE(STACK[0xD6C]) = v148 - 100 - ((2 * (v148 - 100)) & 0x34) + 26;
  LOBYTE(STACK[0xD8B]) = (v150 - 5) ^ 0x8F;
  LOBYTE(v133) = v150 - 65;
  v154 = v151 ^ (v150 - ((2 * (v150 - 65)) & 0xDA) - 84);
  LOBYTE(STACK[0xFB6]) = v153 ^ 0xF4;
  LOBYTE(v138) = (v153 ^ (v148 - 2 * ((v148 - 100) & 0xEF ^ v148 & 1) - 118)) + v134;
  v155 = v152 - 65;
  LOBYTE(STACK[0xF9F]) = v138 - ((2 * v138) & 0x34) + 26;
  v156 = v153 ^ (v152 - ((2 * (v152 - 65)) & 0xDC) - 83);
  v157 = v151 ^ (v146 - ((2 * (v146 - 100)) & 0xDA) - 119);
  v158 = (v136 + 59) ^ 0x8F;
  v159 = v154 - v136 - 126 - ((2 * (v154 - v136 - 59)) & 0x7A);
  LOBYTE(v136) = v136 + v157;
  LOBYTE(STACK[0xF0A]) = v158;
  LOBYTE(v133) = v133 - v154;
  v160 = v155 - v156;
  LOBYTE(STACK[0xCC0]) = v159 ^ 0x32;
  v161 = v156 - v134 - ((2 * (v156 - v134) - 116) & 0xEE) + 61;
  LOBYTE(STACK[0xE20]) = v161 ^ 0x6D;
  LOBYTE(STACK[0xCA1]) = v134 - ((2 * v134 + 52) & 0x34) + 84;
  LOBYTE(STACK[0xE3F]) = (v136 + 1) ^ 0x8F;
  LOBYTE(STACK[0xD55]) = v160 - ((2 * v160) & 0x34) + 26;
  v162 = ((2 * (v157 + 17 + v136)) & 0xDC) + ((v157 + 17 + v136) ^ 0x6E);
  v163 = v133 ^ 0x8F;
  LOBYTE(v133) = ((2 * (v133 - v136 - 74 + (v159 ^ 0x42))) & 0x5A) + ((v133 - v136 - 74 + (v159 ^ 0x42)) ^ 0x2D);
  v164 = v133 - v157;
  LOBYTE(v136) = v164 + 79;
  v165 = v164 + 79 - ((2 * v164 + 74) & 0x38) - 14;
  LOBYTE(v134) = v134 - v138 + 58;
  LOBYTE(STACK[0xFBE]) = v163;
  LOBYTE(STACK[0xD74]) = ((v165 ^ 0x9C) + 104) ^ 0x8F;
  v166 = 2 * (v160 - v138 - 73 + (v161 ^ 0x88)) + ~(v160 - v138 - 73 + (v161 ^ 0x88));
  LOBYTE(v138) = ((2 * (v138 - v134 + 74)) & 0xB6) + ((v138 - v134 + 74) ^ 0xDB);
  LOBYTE(STACK[0xEF3]) = v159 ^ 0x32;
  LOBYTE(STACK[0xE09]) = v138 - ((2 * v138 + 10) & 0x34) + 63;
  LOBYTE(STACK[0xC8A]) = v161 ^ 0x6D;
  LOBYTE(STACK[0xCA9]) = (v162 - 110) ^ 0x8F;
  LOBYTE(v134) = v134 + v166;
  LOBYTE(STACK[0xED4]) = v134 + 1 - ((2 * (v134 + 1)) & 0x34) + 26;
  LOBYTE(STACK[0xF88]) = v166 - ((2 * v166 + 2) & 0x34) + 27;
  v167 = v133 + v162;
  v168 = ((v165 & 0xFE ^ 0x9C) & 0xFE | v136 & 1) - 126;
  LOBYTE(v136) = v162 - 56;
  v169 = (v162 - 56) ^ v159;
  LOBYTE(v134) = v134 + 27;
  LOBYTE(STACK[0xE28]) = (v133 - 45) ^ 0x8F;
  v170 = v166 + v138;
  LOBYTE(v138) = v138 + 91;
  LOBYTE(STACK[0xFA7]) = v168 ^ 0x23;
  LOBYTE(v133) = v138 ^ v161;
  v171 = v167 + (v168 ^ 0x53) - ((2 * (v167 + (v168 ^ 0x53)) - 52) & 0x18) + 114;
  LOBYTE(STACK[0xD5D]) = ((v169 ^ 0xBD) - 22) ^ 0x8F;
  LOBYTE(v136) = v136 + (v169 ^ 0x42) + 1;
  LOBYTE(STACK[0xD3E]) = v134 ^ 0xB6;
  LOBYTE(v138) = v138 + (v138 ^ v161 ^ 0x88) + 1;
  v172 = v170 + (v134 ^ 0x53) - ((2 * (v170 + (v134 ^ 0x53)) + 78) & 0x28) - 69;
  LOBYTE(STACK[0xEDC]) = v136 ^ 0x8F;
  LOBYTE(STACK[0xEBD]) = (v133 ^ 0x77) - ((2 * (v133 ^ 0x77) + 20) & 0x34) + 4;
  LOBYTE(STACK[0xDF2]) = v172 ^ 0x8E;
  v173 = v171 ^ 0x32 ^ ((v168 ^ 0xAC) - ((2 * (v168 ^ 0xAC) + 112) & 0xD6) + 35);
  LOBYTE(STACK[0xC73]) = v138 - ((2 * v138) & 0x34) + 26;
  v174 = v171 ^ 0xD9;
  v175 = (v169 ^ 0xBD) + 66 + (v171 ^ 0xD9);
  LOBYTE(v136) = ((v171 ^ 0xC) + v136 - ((2 * ((v171 ^ 0xC) + v136)) & 0xD6) - 21) ^ v171 ^ 0x32;
  LOBYTE(STACK[0xC92]) = v171 ^ 0x83;
  v176 = ((2 * ((v171 ^ 0xD9) + 49)) & 0xDE) + (((v171 ^ 0xD9) + 49) ^ 0xEF);
  v177 = v173 ^ 0x8F;
  v178 = v176 + v173;
  LOBYTE(STACK[0xE11]) = v177;
  LOBYTE(STACK[0xF90]) = v175 ^ 0x8F;
  LOBYTE(v134) = v172 ^ 0xCD ^ ((v134 ^ 0xAC) - 2 * (((v134 ^ 0xAC) + 56) & 0x8E ^ v134 & 2) - 60);
  v179 = v136 - v176 - ((2 * (v136 - v176) - 34) & 0xE) + 118;
  v180 = v172 ^ 0x41;
  LOBYTE(v133) = (v133 ^ 0x77) + 66 + (v172 ^ 0x41);
  LOBYTE(v138) = ((v172 ^ 0x94) + v138 - ((2 * ((v172 ^ 0x94) + v138)) & 0x18) - 116) ^ v172 ^ 0xCD;
  LOBYTE(STACK[0xF71]) = v134 - ((2 * v134) & 0x34) + 26;
  v181 = ((2 * ((v172 ^ 0x41) + 49)) & 0x5C) + (((v172 ^ 0x41) + 49) ^ 0xAE);
  LOBYTE(STACK[0xD27]) = v133 + (~(2 * v133) | 0xCB) + 27;
  v182 = v134 + 82 + v181;
  LOBYTE(STACK[0xEA6]) = v138 - ((2 * v138) & 0x34) + 26;
  LOBYTE(STACK[0xC5C]) = v181 - ((2 * v181 + 36) & 0x34) + 108;
  LOBYTE(v134) = ((2 * (v179 ^ (v174 + 64))) & 0xF6 ^ 6) + (v179 ^ (v174 + 64) ^ 0x7C);
  LOBYTE(STACK[0xD46]) = v136 ^ 0x8F;
  LOBYTE(v138) = v138 - v181 - ((2 * (v138 - v181) + 92) & 0x7E) - 19;
  LOBYTE(STACK[0xC7B]) = (v178 + 63) ^ 0x8F;
  v183 = v179 ^ (v175 - 17 - v178);
  LOBYTE(v136) = (v133 - v182 + 63 - ((2 * (v133 - v182)) & 0x7E)) ^ v138;
  v184 = (v179 ^ 0x87) - 79;
  LOBYTE(v133) = v178 - v134;
  v185 = ((2 * (v138 ^ (v180 + 64))) & 0xBE ^ 0x3E) + (v138 ^ (v180 + 64) ^ 0xE0);
  LOBYTE(STACK[0xF5A]) = v136 - ((2 * v136) & 0x34) + 26;
  LOBYTE(STACK[0xEC5]) = (v176 + 17) ^ 0x8F;
  LOBYTE(STACK[0xDFA]) = v183 ^ 8;
  LOBYTE(STACK[0xE8F]) = v185 - ((2 * v185 + 2) & 0x34) + 59;
  LOBYTE(v136) = v136 + 33 + v185;
  v186 = (v183 ^ 0x87) + 5 + v134;
  LOBYTE(STACK[0xF79]) = v184 ^ 0x8F;
  LOBYTE(STACK[0xDDB]) = v182 - ((2 * v182 + 28) & 0x34) + 72;
  v187 = v182 - v185 + 13;
  LOBYTE(STACK[0xD10]) = (v138 ^ 0x3F) - 79 - ((2 * ((v138 ^ 0x3F) - 79)) & 0x34) + 26;
  LOBYTE(STACK[0xD2F]) = (v134 + 5) ^ 0x8F;
  v188 = ((v138 ^ 0x3F) - 79 - v136) ^ v187;
  LOBYTE(STACK[0xEAE]) = (v133 - 82) ^ 0x8F;
  LOBYTE(v138) = (v133 + 58) ^ ((v183 ^ 0x78) + v184 - v134 - 4);
  LOBYTE(STACK[0xC64]) = v186 ^ 0x1B;
  LOBYTE(STACK[0xF43]) = v188 - ((2 * v188) & 0x34) + 26;
  v189 = v187 - ((2 * v187 - 24) & 0x8E) + 59;
  LOBYTE(STACK[0xC45]) = v189 ^ 0xDD;
  v190 = 2 * (v185 + 47);
  LOBYTE(STACK[0xCF9]) = v185 + 47 - (v190 & 0x34) + 26;
  LOBYTE(STACK[0xDE3]) = v138 ^ 0x8F;
  LOBYTE(STACK[0xDC4]) = v136 ^ 0x8E;
  LOBYTE(v133) = v133 - 82;
  v191 = v133 + (v186 ^ 0x6B) + 1;
  v192 = (v188 - 57 - ((2 * v188) & 0x8E)) ^ v189;
  v193 = (v136 ^ 0x6B) + (v189 ^ 0xC7) + 1;
  v194 = v192 - v193;
  LOBYTE(v136) = v136 ^ 0x30 ^ (v185 - (v190 & 0x48) - 45);
  v195 = v186 ^ (v134 + 19) ^ 0x94;
  v196 = ((2 * (v195 + v191)) & 0xBE) + ((v195 + v191) ^ 0xDF);
  LOBYTE(STACK[0xF62]) = (v134 + 19) ^ 0x8F;
  v197 = v193 + v136;
  v185 += 110;
  LOBYTE(v136) = v136 + 126;
  LOBYTE(v133) = (v138 ^ v133) - v191;
  LOBYTE(STACK[0xFF7]) = v136 - ((2 * v136) & 0x34) + 26;
  LOBYTE(STACK[0xD18]) = (v196 + 33) ^ 0x8F;
  LOBYTE(STACK[0xE97]) = (v195 + 126) ^ 0x8F;
  LOBYTE(STACK[0xF2C]) = v185 - ((2 * v185) & 0x34) + 26;
  v198 = v134 - v196 + 49;
  v199 = v185 - v197;
  LOBYTE(v138) = (v195 + 126) ^ 0x7B;
  LOBYTE(STACK[0xDAD]) = v194 - ((2 * v194) & 0x34) + 26;
  v200 = v194 + v199;
  LOBYTE(STACK[0xE78]) = v197 - ((2 * v197) & 0x34) + 26;
  LOBYTE(STACK[0xC4D]) = v133 ^ 0x8F;
  v201 = v198 + v133;
  v202 = v138 + 33 + v196 - 106 + (~(2 * (v138 + 33 + v196)) | 0xD3) + 1;
  LOBYTE(v133) = v202 ^ v198;
  LOBYTE(v136) = v136 ^ 0x7B;
  v203 = v197 + v136 + 25 - ((2 * (v197 + v136)) & 0x32);
  v204 = v203 ^ v199;
  v205 = (v202 ^ v198 ^ 0x96) + v138;
  LOBYTE(v136) = (v204 ^ 0x19) + v136;
  LOBYTE(v138) = v201 + (v202 ^ 0x96) + 113 - ((2 * (v201 + (v202 ^ 0x96))) & 0xE2);
  LOBYTE(STACK[0xDCC]) = (v134 + 82) ^ 0x8F;
  LOBYTE(STACK[0xE61]) = v136 - ((2 * v136) & 0x34) + 26;
  v206 = v200 + (v203 ^ 0x19) + 110 - ((2 * (v200 + (v203 ^ 0x19))) & 0xDC);
  v207 = ((2 * ((v138 ^ 0x71) + v205)) & 0xEE) + (((v138 ^ 0x71) + v205) ^ 0xF7);
  v203 ^= 0x46u;
  LOBYTE(STACK[0xFE0]) = v206 ^ 0x74;
  LOBYTE(STACK[0xF4B]) = v202 ^ 0x46;
  LOBYTE(STACK[0xCE2]) = v203 - ((2 * v203) & 0x34) + 26;
  LOBYTE(STACK[0xD01]) = v205 ^ 0x8F;
  LOBYTE(STACK[0xD96]) = v204 ^ 3;
  v208 = (v202 ^ 0xC9) - 9 - v207 - ((2 * ((v202 ^ 0xC9) - 9 - v207)) & 0x28) - 108;
  LOBYTE(STACK[0xE80]) = v138 ^ 0xFE;
  LOBYTE(v136) = ((2 * ((v206 ^ 0x6E) + v136)) & 0xBE) + (((v206 ^ 0x6E) + v136) ^ 0xDF);
  v209 = (v138 ^ 0x2C) + 9 + v207 - ((2 * ((v138 ^ 0x2C) + 9 + v207)) & 0xAE) + 87;
  v210 = v203 - 33 - v136;
  LOBYTE(STACK[0xFFF]) = v133 ^ 0x19;
  v211 = v206 ^ 0x33;
  v212 = (v208 ^ 0x6B) + v207 - 2 * (((v208 ^ 0x6B) + v207 + 10) & 0xEF ^ ((v208 ^ 0x6B) + v207) & 1) - 8;
  LOBYTE(v138) = v136 + 33;
  LOBYTE(v136) = v136 + 33 + v211 - ((2 * (v136 + 33 + v211)) & 0xBA) - 35;
  v213 = v138 - v210 + 11 - ((2 * (v138 - v210)) & 0x16);
  LOBYTE(STACK[0xDB5]) = v208 ^ 0x68;
  LOBYTE(STACK[0xCCB]) = v213 ^ 0x11;
  LOBYTE(v133) = (v133 ^ 0xB3) + (v209 ^ 0xA8) + 1 - ((2 * ((v133 ^ 0xB3) + (v209 ^ 0xA8) + 1)) & 0x36) + 27;
  v214 = (v133 ^ 0xE4) + (v212 ^ 0xEE) + 1;
  v210 ^= 0x73u;
  LOBYTE(STACK[0xCEA]) = v209 ^ 0xD8;
  LOBYTE(STACK[0xF15]) = v210 - ((2 * v210) & 0x34) + 26;
  v215 = (v204 ^ 0x3C) + (v136 ^ 0x22) + 1 - ((2 * ((v204 ^ 0x3C) + (v136 ^ 0x22) + 1)) & 0x64) + 50;
  LOBYTE(STACK[0xF34]) = v212 ^ 0x61;
  v216 = v212 ^ v209;
  v217 = v133 ^ 0xEA;
  LOBYTE(STACK[0xE4A]) = v136 ^ 0xC7;
  LOBYTE(STACK[0xFC9]) = v215 ^ 0x28;
  LOBYTE(v138) = (v208 ^ 0xE7) - v217 + 90 - ((2 * ((v208 ^ 0xE7) - v217)) & 0xB4);
  LOBYTE(STACK[0xE69]) = v133 ^ 0x94;
  LOBYTE(v134) = v138 ^ v214;
  v218 = v215 ^ 0xC3;
  LOBYTE(v133) = v210 - (v215 ^ 0xC3);
  v219 = ((v213 ^ 0xB) + (v215 ^ 0xCD) + 1) ^ v133;
  LOBYTE(STACK[0xEFE]) = v219 ^ 0x1A;
  v220 = (v138 ^ 0xF6) + 1;
  LOBYTE(STACK[0xFE8]) = v138 ^ 0x86;
  v221 = v213 ^ 0xA2 ^ v136;
  LOBYTE(STACK[0xCB4]) = v221 - ((2 * v221) & 0x34) + 26;
  v222 = (v133 ^ 0xAC) + 1 + v218;
  LOBYTE(STACK[0xE33]) = v222 - ((2 * v222) & 0x34) + 26;
  LOBYTE(STACK[0xF1D]) = v216 ^ 0x42;
  LOBYTE(STACK[0xD9E]) = v134 ^ 0xD5;
  LOBYTE(STACK[0xD7F]) = v133 ^ 0x49;
  LOBYTE(STACK[0xD68]) = v219 ^ 0x1A;
  LOBYTE(STACK[0xFB2]) = v133 ^ 0x49;
  LOBYTE(STACK[0xCD3]) = (v220 + v217) ^ 0x8F;
  LOBYTE(STACK[0xE52]) = (((2 * v138) & 0x30 ^ 0x10) + (v138 ^ 0x91) + 104) ^ 0x8F;
  LOBYTE(STACK[0xFD1]) = v134 ^ 0xD5;
  LOBYTE(STACK[0xC9D]) = (v222 + v219) ^ v219 ^ 0x1A;
  LOBYTE(STACK[0xEE7]) = (((v133 ^ 0xAC) + 1 + v221) ^ 0x4F) - ((2 * (((v133 ^ 0xAC) + 1 + v221) ^ 0x4F)) & 0x34) + 26;
  LOBYTE(STACK[0xD87]) = (v220 + (v216 ^ 0xCD)) ^ 0xC0;
  LOBYTE(STACK[0xF06]) = ((v134 ^ 0x5A) + v220 + v217) ^ v134 ^ 0xD5;
  if (!v132)
    v131 = v130;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x690] + 8 * (v129 ^ (1970 * v131))) - 12))();
}

void sub_1CF2F16F4()
{
  JUMPOUT(0x1CF2F1864);
}

uint64_t sub_1CF2F3A04(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  int v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int v42;
  unint64_t v43;
  unint64_t v44;
  __int128 v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  __int128 v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unsigned int v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  unint64_t v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  unint64_t v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  unint64_t v207;
  unint64_t v208;
  unint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  unsigned int v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  unint64_t v224;
  int v225;
  unsigned int v226;
  int v227;
  unint64_t v228;
  char v229;
  unint64_t v230;
  unint64_t v231;
  __int128 v232;
  uint64_t v233;
  unint64_t v234;
  unint64_t v235;
  unint64_t v236;
  unint64_t v237;
  unint64_t v238;
  unint64_t v239;
  uint64_t v240;
  unsigned int v241;
  unint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  uint64_t v248;
  _BYTE *v249;
  unint64_t v250;
  unint64_t v251;
  unint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  unint64_t v258;
  uint64_t v259;
  unint64_t v260;
  uint64_t v261;
  unint64_t v262;
  uint64_t v263;
  unint64_t v264;
  unint64_t v265;
  uint64_t v266;
  uint64_t v267;
  unint64_t v268;
  _BYTE *v269;
  unint64_t v270;
  unint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  unint64_t v275;
  uint64_t v276;
  unint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  unint64_t v282;
  unint64_t v283;
  uint64_t v284;
  unint64_t v285;
  uint64_t v286;
  uint64_t v287;
  unint64_t v288;
  unint64_t v289;
  unint64_t v290;
  uint64_t v291;
  unint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  unint64_t v302;
  uint64_t v303;
  uint64_t v304;
  unint64_t v305;
  unint64_t v306;
  uint64_t v307;
  unint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  unint64_t v314;
  unint64_t v315;
  unint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  unint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  unint64_t v324;
  unint64_t v325;
  unint64_t v326;
  uint64_t v327;
  unint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  unint64_t v334;
  uint64_t v335;
  unint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  unint64_t v340;
  unint64_t v341;
  unint64_t v342;
  uint64_t v343;
  unint64_t v344;
  unint64_t v345;
  uint64_t v346;
  unint64_t v347;
  unint64_t v348;
  uint64_t v349;
  unint64_t v350;
  unint64_t v351;
  uint64_t v352;
  unint64_t v353;
  uint64_t v354;
  unint64_t v355;
  unint64_t v356;
  uint64_t v357;
  unint64_t v358;
  uint64_t v359;

  v27 = (v20 ^ 0x717DAA06) + v24;
  v28 = v22 + a2;
  LODWORD(STACK[0x4F0]) = (v20 ^ 0x4015C0EA ^ (v28 - ((2 * v28) & 0xFCCDD202) + 2120673537)) + 1964241577;
  LODWORD(STACK[0x658]) = (v20 ^ 0x717DAA06)
                        + a1
                        + v27
                        - 1649933854
                        - ((2 * ((v20 ^ 0x717DAA06) + a1 + v27)) & 0x3B5003C4);
  v29 = (v19 ^ 0x717DAA06) + v18;
  LODWORD(STACK[0x4F8]) = v23 + 2119540083 + (v19 ^ 0x717DAA06) + v29;
  LODWORD(STACK[0x668]) = v28 ^ 0x7F0345F3;
  LODWORD(STACK[0x4FC]) = (v28 ^ 0x4F0E83ED) - 1312213892 + v27;
  LODWORD(STACK[0x4F4]) = (v21 + a3) ^ 0x2C8A2C6A;
  LODWORD(STACK[0x4EC]) = (v21 + a3) ^ 0xF1DCD845 ^ v19;
  LODWORD(STACK[0x660]) = v29
                        + ((v21 + a3) ^ 0x4F0E83ED)
                        + 13193459
                        - ((2 * (v29 + ((v21 + a3) ^ 0x4F0E83ED))) & 0x192A1E6);
  STACK[0x500] = a18 - 0x7FC3A13083546DB6;
  STACK[0x568] = (v25 - 683261803);
  STACK[0x560] = (v25 - 683261804);
  STACK[0x558] = (v25 - 683261795);
  STACK[0x550] = (v25 - 683261796);
  STACK[0x548] = (v25 - 683261797);
  STACK[0x540] = (v25 - 683261798);
  STACK[0x538] = (v25 - 683261799);
  STACK[0x530] = (v25 - 683261801);
  STACK[0x528] = (v25 - 683261802);
  STACK[0x520] = (v25 - 683261805);
  STACK[0x518] = (v25 - 683261806);
  STACK[0x510] = (v25 - 683261807);
  STACK[0x678] = (v25 - 683261809);
  STACK[0x508] = (v25 - 683261808);
  LODWORD(STACK[0x64C]) = 207586;
  LODWORD(STACK[0x648]) = 207969;
  LODWORD(STACK[0x640]) = 208735;
  LODWORD(STACK[0x63C]) = 209501;
  LODWORD(STACK[0x638]) = 209884;
  LODWORD(STACK[0x634]) = 210267;
  LODWORD(STACK[0x630]) = 210650;
  LODWORD(STACK[0x62C]) = 211033;
  LODWORD(STACK[0x628]) = 211416;
  LODWORD(STACK[0x624]) = 211799;
  LODWORD(STACK[0x620]) = 212182;
  LODWORD(STACK[0x5B8]) = 212948;
  LODWORD(STACK[0x61C]) = 242822;
  LODWORD(STACK[0x610]) = 243205;
  LODWORD(STACK[0x60C]) = 243588;
  LODWORD(STACK[0x600]) = 244737;
  LODWORD(STACK[0x5FC]) = 245120;
  LODWORD(STACK[0x5F8]) = 245503;
  LODWORD(STACK[0x5F4]) = 245886;
  LODWORD(STACK[0x5F0]) = 246269;
  LODWORD(STACK[0x5EC]) = 247035;
  LODWORD(STACK[0x5E8]) = 247418;
  LODWORD(STACK[0x5E4]) = 247801;
  LODWORD(STACK[0x5B0]) = 248184;
  LODWORD(STACK[0x5D8]) = 18;
  LODWORD(STACK[0x5AC]) = -118123536;
  LODWORD(STACK[0x5D4]) = 208352;
  LODWORD(STACK[0x5C8]) = 246652;
  LODWORD(STACK[0x5C0]) = 212565;
  v30 = STACK[0x688];
  STACK[0x680] = 16;
  v31 = 59 * (LODWORD(STACK[0x5BC]) ^ 0x2E3);
  LODWORD(STACK[0x594]) = 206731;
  v32 = 969 * ((v31 + 206731) / 0x3C9u);
  v33 = v31 - v32 + 206731;
  v34 = (2 * v33) & 0x40E;
  LODWORD(STACK[0x580]) = 244354;
  LODWORD(STACK[0x5A0]) = -1749;
  LODWORD(STACK[0x588]) = 209118;
  STACK[0x598] = 215;
  LODWORD(STACK[0x584]) = 243971;
  LODWORD(STACK[0x650]) = -780;
  v35 = STACK[0x500];
  v36 = STACK[0x500] + STACK[0x678];
  LOBYTE(v33) = *(_BYTE *)v36 ^ *(_BYTE *)(v30 + v33);
  LODWORD(STACK[0x570]) = v31;
  v37 = v31 - v34 - v32 - 1285491310;
  *(_BYTE *)(STACK[0x688] + (v37 ^ 0xB35DCE07)) = v33;
  v38 = v37 & 0x279;
  v39 = v36 - ((2 * v36) & 0x3A) + 29;
  v40 = __ROR8__(v36 - ((2 * v36) & 0x3FE9CABD6358A83ALL) - 0x600B1AA14E53ABE3, 8) & 0xF8FFFFFFFFFFFFFFLL ^ 0x189FF4E55EB1AC54;
  v41 = __ROR8__((v40 + v26) ^ 0xB98B02A5518146ACLL, 8);
  v42 = 383 * (v38 ^ 0x201 | v38 ^ 0x78u) % 0x3C9;
  v43 = v41
      + ((v40 + v26) ^ 0xEE14BEBC8D361B39)
      + 0x1D9BB7A8082E4C9FLL
      - ((2 * (v41 + ((v40 + v26) ^ 0xEE14BEBC8D361B39))) & 0x3B376F50105C993ELL);
  v44 = v43 & 0xE5D7DAAEED85A300 ^ 0x4547420824812100;
  *((_QWORD *)&v45 + 1) = (v40 + v26) ^ 0xE14BEBC8D361B39;
  *(_QWORD *)&v45 = 0x550C087CC469144DLL - v40;
  v46 = v43 & 0xE5D7DAAEED85A300 ^ 0xA09098A6C9048200;
  v47 = (v43 >> 8) ^ 0x4D4F674934933DLL;
  v48 = v43 ^ ((v45 >> 61) + 0x1D9BB7A8082E4C9FLL - ((2 * (v45 >> 61)) & 0x3B376F50105C993ELL));
  v49 = ((v43 << 56) ^ 0xE800000000000000) + (v48 ^ 0x50D4D0E13CBD7177);
  *((_QWORD *)&v45 + 1) = v48 ^ 0x10D4D0E13CBD7177;
  *(_QWORD *)&v45 = v48 ^ 0x4000000000000000;
  v50 = v45 >> 61;
  v51 = v49 + v47;
  v52 = v51 ^ (v46 + v44);
  v53 = (v52 & 0x1000000 ^ 0x77DF3E66DFFCFDBELL) + 2 * (v52 & 0x1000000);
  v54 = v53 - 0x2881044826018B8;
  v55 = v53 - 0x77DF3E66DFFCFDBELL;
  v56 = 0xED366C893D99E2C4 - v53;
  if ((v55 & v50) == 0)
    v56 = v54;
  v57 = (v50 - 0x75572E225D9CE506 + v56) ^ v52 & 0xFFFFFFFFFEFFFFFFLL;
  *((_QWORD *)&v58 + 1) = v51;
  *(_QWORD *)&v58 = v52;
  v59 = v57 + (v58 >> 8);
  *(_QWORD *)&v58 = __ROR8__(v57, 61);
  v60 = v58 - 0xEAD3035EE6B2878 - ((2 * v58) & 0xE2A59F942329AF10);
  v61 = (v60 & 0x9FA599FBFEF70B7DLL ^ 0xEA51031EE630875) + (v60 & 0x9FA599FBFEF70B7DLL ^ 0x910089CA10940308);
  v62 = (v59 - 0xEAD3035EE6B2878 - ((2 * v59) & 0xE2A59F942329AF10)) ^ v60;
  v63 = __ROR8__(v61 & 0x8E85997BF8A31DAFLL ^ v59, 8) + (v62 ^ 0x8E85997BF8A3092DLL);
  *((_QWORD *)&v58 + 1) = v62 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v58 = v62 ^ 0x8000000000000000;
  v64 = v63 ^ (v58 >> 61);
  STACK[0x670] = 0xCD091F17C02FDE00;
  *((_QWORD *)&v58 + 1) = v63 ^ 0x51;
  *(_QWORD *)&v58 = v63 ^ 0xCD091F17C02FDE00;
  v65 = (v58 >> 8) + (v64 ^ 0xCD091F17C02FDE51);
  *((_QWORD *)&v58 + 1) = v64 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v58 = v64 ^ 0xC000000000000000;
  v66 = v65 ^ (v58 >> 61);
  *((_QWORD *)&v58 + 1) = v66 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v58 = v66 ^ 0x6000000000000000;
  v67 = (v66 ^ 0x628ABC52894BE762) + ((v65 << 56) ^ 0x6200000000000000) + ((v65 >> 8) ^ 0x628ABC52894BE7);
  v68 = ((v67 ^ 0x5AC09C033F8B2761uLL) >> 8)
      - 0x33CD24DA504206B2
      - (((v67 ^ 0x5AC09C033F8B2761uLL) >> 7) & 0x65B64B5F7BF29CLL);
  v69 = v68 ^ 0xCC32DB25AFBDF94ELL | ((v67 ^ 0x5AC09C033F8B2761) << 56);
  v70 = STACK[0x5D4];
  v71 = v67 ^ (v58 >> 61);
  LODWORD(v67) = 207203 - 969 * (LODWORD(STACK[0x64C]) / 0x3C9);
  LODWORD(STACK[0x578]) = 242439;
  *(_BYTE *)(STACK[0x688] + 189) = ((((v71 ^ (v68 & 0xC09C033F8B2761 ^ 0x5AC0040210020621 | v68 & 0xC09C033F8B2761 ^ 0x98012F892140))
                                    + v69) ^ 0x1B0BD1982B59C071) >> ((8 * (v39 & 7)) ^ 0x28u)) ^ *(_BYTE *)(STACK[0x688] + v42);
  v72 = v35 + STACK[0x508];
  *(_BYTE *)(STACK[0x688] + (v67 + 383)) ^= *(_BYTE *)v72;
  v73 = (2 * v72) & 0xA00AE724850C2AA8;
  v72 += 0x5005739242861554;
  v74 = __ROR8__(v72 - v73, 8) & 0xF8FFFFFFFFFFFFFFLL ^ 0x5050057392428615;
  v75 = v74 - 0x550C087CC469144ELL;
  v76 = (v74 - 0x550C087CC469144ELL) ^ 0xB98B02A5518146ACLL;
  *((_QWORD *)&v58 + 1) = (v74 - 0x550C087CC469144ELL) ^ 0xE14BEBC8D361B39;
  *(_QWORD *)&v58 = 0x550C087CC469144DLL - v74;
  v77 = v58 >> 61;
  LOBYTE(v68) = v77 & 8;
  v78 = __ROR8__(v76, 8) + (v75 ^ 0xEE14BEBC8D361B39);
  v79 = v78 ^ v77;
  v78 ^= 0x50D4D0E13CBD7177uLL;
  *((_QWORD *)&v58 + 1) = v79 ^ 0x10D4D0E13CBD7177;
  *(_QWORD *)&v58 = v79 ^ 0x4000000000000000;
  v80 = v58 >> 61;
  v81 = (v78 >> v68 >> (v68 ^ 8u)) + (v79 ^ 0x50D4D0E13CBD7177);
  v82 = v81 + (v78 << 56);
  v83 = (v82 ^ v80 ^ 0xE5D7DAAEED85A300) + (v81 << 56) + ((v82 >> 8) ^ 0xE5D7DAAEED85A3);
  v84 = 242439 - 969 * (LODWORD(STACK[0x610]) / 0x3C9);
  *((_QWORD *)&v58 + 1) = v82 ^ v80 ^ 0x5D7DAAEED85A300;
  *(_QWORD *)&v58 = v82 ^ ~v80;
  v85 = __ROR8__(v83 ^ 0x8E85997BF8A3092DLL, 8);
  v86 = v83 ^ (v58 >> 61);
  *((_QWORD *)&v58 + 1) = v86 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v58 = v86 ^ 0x8000000000000000;
  v87 = v85 + (v86 ^ 0x8E85997BF8A3092DLL);
  v88 = (v58 >> 61) ^ v87;
  v89 = (v88 ^ 0xCD091F17C02FDE51) + __ROR8__(v87 ^ 0xCD091F17C02FDE51, 8);
  *((_QWORD *)&v58 + 1) = v88 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v58 = v88 ^ 0xC000000000000000;
  v90 = v89 ^ (v58 >> 61);
  *((_QWORD *)&v58 + 1) = v90 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v58 = v90 ^ 0x6000000000000000;
  v91 = v58 >> 61;
  *(_QWORD *)&v58 = __ROR8__(v89 ^ 0x628ABC52894BE762, 8);
  v92 = 242822 - 969 * (LODWORD(STACK[0x61C]) / 0x3C9);
  LODWORD(v68) = 207203 - 969 * (LODWORD(STACK[0x648]) / 0x3C9);
  v93 = ((__ROR8__(((v90 ^ 0x628ABC52894BE762) + v58) ^ 0x5AC09C033F8B2761, 8)
        + (((v90 ^ 0x628ABC52894BE762) + (_QWORD)v58) ^ 0x5AC09C033F8B2761 ^ v91)) ^ 0x1B0BD1982B59C071uLL) >> ((8 * (v72 & 7)) ^ 0x20);
  v94 = STACK[0x510];
  *(_BYTE *)(STACK[0x688] + v92) ^= v93;
  *(_BYTE *)(STACK[0x688] + (v68 + 766)) ^= *(_BYTE *)(v35 + v94);
  v95 = v35 + v94 - ((2 * (v35 + v94)) & 0x6C017DF1F8DE112CLL) + 0x3600BEF8FC6F0896;
  v96 = __ROR8__(v95, 8) & 0xF8FFFFFFFFFFFFFFLL ^ 0x903600BEF8FC6F08;
  *((_QWORD *)&v58 + 1) = (v96 - 0x550C087CC469144ELL) ^ 0xE14BEBC8D361B39;
  *(_QWORD *)&v58 = 0x550C087CC469144DLL - v96;
  v97 = __ROR8__((v96 - 0x550C087CC469144ELL) ^ 0xB98B02A5518146ACLL, 8)
      + ((v96 - 0x550C087CC469144ELL) ^ 0xEE14BEBC8D361B39);
  v98 = v97 ^ (v58 >> 61);
  v97 ^= 0x50D4D0E13CBD7177uLL;
  v99 = (v98 ^ 0x50D4D0E13CBD7177) + (v97 >> 8);
  v100 = v99 + (v97 << 56);
  *((_QWORD *)&v58 + 1) = v98 ^ 0x10D4D0E13CBD7177;
  *(_QWORD *)&v58 = v98 ^ 0x4000000000000000;
  v101 = v58 >> 61;
  *((_QWORD *)&v58 + 1) = v99;
  *(_QWORD *)&v58 = v100;
  v102 = (v58 >> 8) ^ 0xE5D7DAAEED85A3;
  *((_QWORD *)&v58 + 1) = v100 ^ v101 ^ 0x5D7DAAEED85A300;
  *(_QWORD *)&v58 = v100 ^ ~v101;
  v103 = (v100 ^ v101 ^ 0xE5D7DAAEED85A300) + v102;
  v104 = (v58 >> 61) ^ v103;
  *((_QWORD *)&v58 + 1) = v104 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v58 = v104 ^ 0x8000000000000000;
  v105 = (v104 ^ 0x8E85997BF8A3092DLL) + __ROR8__(v103 ^ 0x8E85997BF8A3092DLL, 8);
  v106 = v105 ^ 0xCD091F17C02FDE51;
  v107 = v105 ^ (v58 >> 61);
  v108 = (v107 ^ 0xCD091F17C02FDE51) + (v106 >> 8) + (v106 << 56);
  *((_QWORD *)&v58 + 1) = v107 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v58 = v107 ^ 0xC000000000000000;
  v109 = v108 ^ (v58 >> 61);
  v110 = (v109 ^ 0x628ABC52894BE762) + __ROR8__(v108 ^ 0x628ABC52894BE762, 8);
  *((_QWORD *)&v58 + 1) = v109 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v58 = v109 ^ 0x6000000000000000;
  v111 = (v110 ^ 0x5AC09C033F8B2761 ^ (v58 >> 61)) + __ROR8__(v110 ^ 0x5AC09C033F8B2761, 8);
  v112 = STACK[0x518];
  *(_BYTE *)(STACK[0x688] + v84 + 766) ^= (v111 ^ 0x1B0BD1982B59C071uLL) >> ((8 * (v95 & 7)) ^ 0x30);
  *(_BYTE *)(STACK[0x688] + 208352 - 969 * (v70 / 0x3C9)) ^= *(_BYTE *)(v35 + v112);
  v113 = STACK[0x650];
  LOBYTE(v73) = v35 + v112 - ((2 * (v35 + v112)) & 0xE4) + 114;
  v114 = __ROR8__(v35 + v112 - ((2 * (v35 + v112)) & 0xF15B4C2B947136E4) + 0x78ADA615CA389B72, 8) & 0xF8FFFFFFFFFFFFFFLL ^ 0x7078ADA615CA389BLL;
  *(_QWORD *)&v58 = __ROR8__((v114 - 0x550C087CC469144ELL) ^ 0xB98B02A5518146ACLL, 8);
  v115 = v58
       + ((v114 - 0x550C087CC469144ELL) ^ 0xEE14BEBC8D361B39)
       - ((2 * (v58 + ((v114 - 0x550C087CC469144ELL) ^ 0xEE14BEBC8D361B39))) & 0xBE718EDA5B3B3DC6)
       - 0x20C73892D262611DLL;
  *((_QWORD *)&v58 + 1) = (v114 - 0x550C087CC469144ELL) ^ 0xE14BEBC8D361B39;
  *(_QWORD *)&v58 = 0x550C087CC469144DLL - v114;
  v116 = v115 ^ (v58 >> 61);
  *((_QWORD *)&v58 + 1) = v116 ^ 0xFEC178C1120EF94;
  *(_QWORD *)&v58 = v116 ^ 0x8000000000000000;
  LODWORD(v95) = 208352 - 969 * (LODWORD(STACK[0x640]) / 0x3C9);
  v117 = (v116 ^ 0x8FEC178C1120EF94)
       + ((v115 >> 8) ^ 0x8FEC178C1120EFLL)
       + ((v115 ^ 0x8FEC178C1120EF94) << (v116 & 0x28 ^ 8 | v116 & 0x28 ^ 0x20 | ((v115 & 0x38 ^ 0x10)
                                                                                  + (v115 & 0x38 ^ 0x28))));
  v118 = v117 - 0x123784ADDD55758BLL - ((2 * v117) & 0xDB90F6A4455514EALL);
  v119 = (v58 >> 61) - 0x123784ADDD55758BLL - ((2 * (v58 >> 61)) & 0xDB90F6A4455514EALL);
  *((_QWORD *)&v58 + 1) = v118 ^ 0x75;
  *(_QWORD *)&v58 = v118 ^ 0xEDC87B5222AA8A00;
  v120 = ((v58 >> 8) ^ 0xE5D7DAAEED85A3) + (v118 ^ v119 ^ 0xE5D7DAAEED85A300);
  v121 = 243588 - 969 * (LODWORD(STACK[0x60C]) / 0x3C9);
  *((_QWORD *)&v58 + 1) = v118 ^ v119 ^ 0x5D7DAAEED85A300;
  *(_QWORD *)&v58 = v118 ^ ~v119;
  v122 = v120 ^ (v58 >> 61);
  *((_QWORD *)&v58 + 1) = v122 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v58 = v122 ^ 0x8000000000000000;
  v123 = __ROR8__(v120 ^ 0x8E85997BF8A3092DLL, 8) + (v122 ^ 0x8E85997BF8A3092DLL);
  v124 = v123 ^ (v58 >> 61);
  *((_QWORD *)&v58 + 1) = v124 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v58 = v124 ^ 0xC000000000000000;
  v125 = ((v123 << 56) ^ 0x5100000000000000) + (v124 ^ 0xCD091F17C02FDE51) + ((v123 >> 8) ^ 0xCD091F17C02FDELL);
  v126 = v125 ^ (v58 >> 61);
  v127 = __ROR8__(v125 ^ 0x628ABC52894BE762, 8) + (v126 ^ 0x628ABC52894BE762);
  *((_QWORD *)&v58 + 1) = v126 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v58 = v126 ^ 0x6000000000000000;
  v128 = STACK[0x520];
  *(_BYTE *)(STACK[0x688] + v121) ^= (((v127 ^ 0x8FE608541D10EBEFLL ^ ((unint64_t)(v58 >> 61)
                                                                     - ((2 * (unint64_t)(v58 >> 61)) & 0xAA4D28AE4537991CLL)
                                                                     - 0x2AD96BA8DD643372))
                                     + (__ROR8__(v127, 8) ^ 0x615AC09C033F8B27)) ^ 0x1B0BD1982B59C071) >> ((((8 * v73) ^ 0x90) - ((2 * ((8 * v73) ^ 0x90)) & 0x20) + 52) & 0x38 ^ 0x30);
  *(_BYTE *)(STACK[0x688]
           + ((v127 >> 8) & 0x17F ^ 0x58 | (v127 >> 8) & 0x17F ^ 0x127)
           * (STACK[0x680] + 529)
           % 0x3C9) = *(_BYTE *)(STACK[0x688] + (v95 + 383)) ^ *(_BYTE *)(v35 + v128);
  v129 = v35 + v128 + 0x5382952753EC7B78 + (~(2 * (v35 + v128)) | 0x58FAD5B158270911);
  v130 = ((v129 << 56) ^ 0x7700000000000000)
       - ((2 * ((v129 << 56) ^ 0x7700000000000000)) & 0x6666666666666666)
       + 0x33F19C243FAE63B8;
  v131 = (v113 + 1532);
  LOBYTE(v121) = *(_BYTE *)(STACK[0x688] + v131);
  v132 = ((v129 >> 8) & 0x6C12155C0AE4F4 ^ 0x4002150402E470)
       + ((v129 >> 8) & 0x6C12155C0AE4F4 ^ 0x392C100058080084)
       + (v130 & 0x7000000000000000 ^ 0x4187E56DDF8C06BELL | v130 & 0x7000000000000000 ^ 0x3000000000000000)
       + ((v130 & 0xF800000000000000 | (v129 >> 8)) ^ 0x305382952753EC7BLL);
  v133 = (v132 ^ 0xEE14BEBC8D361B39) + ((v132 ^ 0xB98B02A5518146ACLL) >> 8) + ((v132 ^ 0xB98B02A5518146ACLL) << 56);
  *((_QWORD *)&v58 + 1) = v132 ^ 0xE14BEBC8D361B39;
  *(_QWORD *)&v58 = ~v132;
  v134 = v133 ^ (v58 >> 61);
  *(_QWORD *)&v58 = __ROR8__(v133 ^ 0x50D4D0E13CBD7177, 8);
  v135 = (v134 ^ 0x50D4D0E13CBD7177)
       + v58
       + 0x664626CC4429C1F4
       - ((2 * ((v134 ^ 0x50D4D0E13CBD7177) + v58)) & 0xCC8C4D98885383E8);
  *((_QWORD *)&v58 + 1) = v134 ^ 0x10D4D0E13CBD7177;
  *(_QWORD *)&v58 = v134 ^ 0x4000000000000000;
  v136 = (v58 >> 61) + 0x664626CC4429C1F4 - ((2 * (v58 >> 61)) & 0xCC8C4D98885383E8);
  *((_QWORD *)&v58 + 1) = v135 ^ 0xF4;
  *(_QWORD *)&v58 = v135 ^ 0x664626CC4429C100;
  v137 = ((v58 >> 8) ^ 0xE5D7DAAEED85A3) + (v136 ^ v135 ^ 0xE5D7DAAEED85A300);
  v138 = v137 - 0x5AD93D3210F58000 - ((2 * v137) & 0x4A4D859BDE151E3ELL) + 3871;
  *((_QWORD *)&v58 + 1) = v136 ^ v135 ^ 0x5D7DAAEED85A300;
  *(_QWORD *)&v58 = v136 ^ ~v135;
  v139 = v58 >> 61;
  *((_QWORD *)&v58 + 1) = v138 ^ 0xF1F;
  *(_QWORD *)&v58 = v138 ^ 0xA526C2CDEF0A8000;
  v140 = v139 ^ __ROR8__((v58 >> 13) ^ 0x10D484C22995FA55, 51);
  v141 = (v140 ^ 0x1E1DDC4947E9AB37) + __ROR8__(v138 ^ 0x2BA35BB617A98632, 8);
  *((_QWORD *)&v58 + 1) = v140 ^ 0x1E1DDC4947E9AB37;
  *(_QWORD *)&v58 = v140;
  v142 = v141 ^ (v58 >> 61);
  v143 = STACK[0x670];
  *((_QWORD *)&v58 + 1) = v141 ^ 0x51;
  *(_QWORD *)&v58 = v141 ^ STACK[0x670];
  v144 = (v142 ^ 0xCD091F17C02FDE51) + (v58 >> 8);
  STACK[0x650] = 0x628ABC52894BE700;
  *((_QWORD *)&v58 + 1) = ((v142 ^ 0xC02FDE51) + ((uint64_t)v58 >> 8)) ^ 0x62;
  *(_QWORD *)&v58 = v144 ^ 0x628ABC52894BE700;
  v145 = v58 >> 8;
  v146 = 208352 - 969 * STACK[0x598];
  *((_QWORD *)&v58 + 1) = v142 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v58 = v142 ^ 0xC000000000000000;
  v147 = v144 ^ (v58 >> 61);
  v148 = (v147 ^ 0x628ABC52894BE762) + v145;
  *((_QWORD *)&v58 + 1) = v147 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v58 = v147 ^ 0x6000000000000000;
  v149 = v148 ^ 0xFC1409E9F5A06441 ^ ((v58 >> 61) - ((2 * (v58 >> 61)) & 0x4DA92BD594568640) - 0x592B6A1535D4BCE0);
  *((_QWORD *)&v58 + 1) = v148 ^ 0x61;
  *(_QWORD *)&v58 = v148 ^ 0x5AC09C033F8B2700;
  *(_BYTE *)(STACK[0x688] + v131) = (((v149 + (unint64_t)(v58 >> 8)) ^ 0x1B0BD1982B59C071) >> (~(8 * v129) & 0x38)) ^ v121;
  v150 = v35 + STACK[0x560];
  *(_BYTE *)(STACK[0x688] + (v146 + 766)) ^= *(_BYTE *)v150;
  LOBYTE(v121) = v150 - 92;
  LOBYTE(v149) = v150 - 92 - ((2 * v150) & 0x48);
  v151 = (LODWORD(STACK[0x5A0]) + 1915);
  v152 = __ROR8__(v150 - 0x2625A1C7664EAA5CLL - ((2 * v150) & 0xB3B4BC713362AB48), 8) & 0xF8FFFFFFFFFFFFFFLL ^ 0xA0D9DA5E3899B155;
  LOBYTE(v131) = *(_BYTE *)(STACK[0x688] + v151);
  v153 = v152 - 0x550C087CC469144ELL;
  v154 = (v152 - 0x550C087CC469144ELL) ^ 0xB98B02A5518146ACLL;
  *((_QWORD *)&v58 + 1) = (v152 - 0x550C087CC469144ELL) ^ 0xE14BEBC8D361B39;
  *(_QWORD *)&v58 = 0x550C087CC469144DLL - v152;
  v155 = (v58 >> 61) + 0x1B5B6F554692259DLL - ((2 * (v58 >> 61)) & 0x36B6DEAA8D244B3ALL);
  v156 = ((v155 & 0x40D4D0E13CBD7177 ^ 0x508490A0382D5062) + (v155 & 0x40D4D0E13CBD7177 ^ 0x50404104902115)) ^ (__ROR8__(v154, 8) + (v153 ^ 0xEE14BEBC8D361B39));
  v157 = v156 ^ v155;
  v158 = (v156 << ((v149 & 0x38 ^ 0x18) + (v149 & 0x38 ^ 0x20))) | (v156 >> 8);
  v159 = (v157 ^ 0x1B5B6F554692259DLL)
       + v158
       - 0x4EBDB175D57211E6
       - ((2 * ((v157 ^ 0x1B5B6F554692259DLL) + v158)) & 0x62849D14551BDC34);
  *((_QWORD *)&v58 + 1) = v157 ^ 0x1B5B6F554692259DLL;
  *(_QWORD *)&v58 = v157;
  v160 = (v58 >> 61) - 0x4EBDB175D57211E6 - ((2 * (v58 >> 61)) & 0x62849D14551BDC34);
  *((_QWORD *)&v58 + 1) = v159 ^ 0x1A;
  *(_QWORD *)&v58 = v159 ^ 0xB1424E8A2A8DEE00;
  v161 = ((v58 >> 8) ^ 0xE5D7DAAEED85A3) + (v160 ^ v159 ^ 0xE5D7DAAEED85A300);
  *((_QWORD *)&v58 + 1) = v160 ^ v159 ^ 0x5D7DAAEED85A300;
  *(_QWORD *)&v58 = v160 ^ ~v159;
  v162 = v161 ^ (v58 >> 61);
  STACK[0x5A0] = 0x8E85997BF8A30900;
  *((_QWORD *)&v58 + 1) = v161 ^ 0x2D;
  *(_QWORD *)&v58 = v161 ^ 0x8E85997BF8A30900;
  v163 = (v162 ^ 0x8E85997BF8A3092DLL) + (v58 >> 8);
  *((_QWORD *)&v58 + 1) = v162 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v58 = v162 ^ 0x8000000000000000;
  v164 = v163 ^ (v58 >> 61);
  *((_QWORD *)&v58 + 1) = v163 ^ 0x51;
  *(_QWORD *)&v58 = v163 ^ v143;
  v165 = (v164 ^ 0xCD091F17C02FDE51) + (v58 >> 8);
  *((_QWORD *)&v58 + 1) = v164 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v58 = v164 ^ 0xC000000000000000;
  v166 = (v58 >> 61) ^ v165;
  *((_QWORD *)&v58 + 1) = v166 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v58 = v166 ^ 0x6000000000000000;
  LODWORD(v161) = 208352 - 969 * (LODWORD(STACK[0x63C]) / 0x3C9);
  v167 = ((v166 ^ 0x628ABC52894BE762) + __ROR8__(v165 ^ 0x628ABC52894BE762, 8)) ^ 0x5AC09C033F8B2761;
  v168 = v167 ^ (v58 >> 61);
  v169 = (v167 >> (((((2 * v131) ^ 0xFB) + (v131 ^ 0xAA)) | ~(_BYTE)v131) & 8)) ^ (v167 << 56);
  LODWORD(v167) = 208352 - 969 * (LODWORD(STACK[0x638]) / 0x3C9);
  v170 = v169 + v168;
  LOBYTE(v169) = (8 * (v121 & 7)) ^ 0x20;
  v171 = STACK[0x568];
  *(_BYTE *)(STACK[0x688] + v151) = ((v170 ^ 0x1B0BD1982B59C071uLL) >> v169) ^ v131;
  *(_BYTE *)(STACK[0x688] + (v161 + 1149)) ^= *(_BYTE *)(v35 + v171);
  LOBYTE(v131) = v35 + v171 - ((2 * (v35 + v171)) & 0x5C) - 82;
  v172 = __ROR8__(v35 + v171 - ((2 * (v35 + v171)) & 0xAE9C59CFA8E74D5CLL) + 0x574E2CE7D473A6AELL, 8) & 0xF8FFFFFFFFFFFFFFLL ^ 0xA8574E2CE7D473A6;
  v173 = __ROR8__((v172 - 0x550C087CC469144ELL) ^ 0xB98B02A5518146ACLL, 8)
       + ((v172 - 0x550C087CC469144ELL) ^ 0xEE14BEBC8D361B39);
  *((_QWORD *)&v58 + 1) = (v172 - 0x550C087CC469144ELL) ^ 0xE14BEBC8D361B39;
  *(_QWORD *)&v58 = 0x550C087CC469144DLL - v172;
  v174 = v173 ^ (v58 >> 61);
  STACK[0x598] = 0x50D4D0E13CBD7100;
  *((_QWORD *)&v58 + 1) = v173 ^ 0x77777777;
  *(_QWORD *)&v58 = v173 ^ 0x50D4D0E13CBD7100;
  *((_QWORD *)&v58 + 1) = (v58 >> 8) + (v174 ^ 0x50D4D0E13CBD7177);
  v175 = *((_QWORD *)&v58 + 1);
  *(_QWORD *)&v58 = *((_QWORD *)&v58 + 1) ^ 0xE5D7DAAEED85A300;
  v176 = v58 >> 8;
  *((_QWORD *)&v58 + 1) = v174;
  *(_QWORD *)&v58 = v174 ^ 0x50D4D0E13CBD7177;
  v177 = (v58 >> 61) ^ v175;
  v178 = (v177 ^ 0x63715DA7086E28B8) + v176;
  *((_QWORD *)&v58 + 1) = v177 ^ 0x3715DA7086E28B8;
  *(_QWORD *)&v58 = v177 ^ 0x6000000000000000;
  v179 = v58 >> 61;
  *((_QWORD *)&v58 + 1) = v178 ^ 0x2D;
  *(_QWORD *)&v58 = v178 ^ 0x8E85997BF8A30900;
  v180 = 244737 - 969 * (LODWORD(STACK[0x600]) / 0x3C9);
  v181 = v178 ^ v179;
  v182 = (v181 ^ 0x8E85997BF8A3092DLL) + (v58 >> 8);
  *((_QWORD *)&v58 + 1) = v181 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v58 = v181 ^ 0x8000000000000000;
  v183 = v182 ^ (v58 >> 61);
  v184 = __ROR8__(v182 ^ 0xCD091F17C02FDE51, 8) + (v183 ^ 0xCD091F17C02FDE51);
  *((_QWORD *)&v58 + 1) = v183 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v58 = v183 ^ 0xC000000000000000;
  v185 = v184 ^ (v58 >> 61);
  v186 = __ROR8__(v184 ^ 0x628ABC52894BE762, 8) + (v185 ^ 0x628ABC52894BE762);
  *((_QWORD *)&v58 + 1) = v185 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v58 = v185 ^ 0x6000000000000000;
  v187 = v186 ^ 0xEB44366EA1C4097 ^ ((v58 >> 61) - ((2 * (v58 >> 61)) & 0xA8E9BECBAB2ECFECLL) + 0x5474DF65D59767F6);
  *((_QWORD *)&v58 + 1) = v186 ^ 0x61;
  *(_QWORD *)&v58 = v186 ^ 0x5AC09C033F8B2700;
  *(_BYTE *)(STACK[0x688] + v180) ^= ((v187 + (unint64_t)(v58 >> 8)) ^ 0x1B0BD1982B59C071) >> ((8 * (v131 & 7)) ^ 0x30);
  v188 = v35 + STACK[0x528];
  *(_BYTE *)(STACK[0x688] + (v167 + 1532)) ^= *(_BYTE *)v188;
  LOBYTE(v167) = v188 - ((2 * v188) & 0x8A) - 59;
  v189 = __ROR8__(v188 - ((2 * v188) & 0x2BF005A4365DC98ALL) + 0x15F802D21B2EE4C5, 8) & 0xF8FFFFFFFFFFFFFFLL ^ 0xC015F802D21B2EE4;
  *(_QWORD *)&v58 = __ROR8__((v189 - 0x550C087CC469144ELL) ^ 0xB98B02A5518146ACLL, 8);
  v190 = ((v189 - 0x550C087CC469144ELL) ^ 0xC225204907759384 ^ (v58
                                                                - ((2 * v58) & 0x58633DEB1487117ALL)
                                                                + 0x2C319EF58A4388BDLL))
       + 2 * (v58 & ((v189 - 0x550C087CC469144ELL) ^ 0x6E14BEBC8D361B39));
  v191 = v190 - 0x7210439ED1881347 - ((2 * v190) & 0x1BDF78C25CEFD972);
  *((_QWORD *)&v58 + 1) = (v189 - 0x550C087CC469144ELL) ^ 0xE14BEBC8D361B39;
  *(_QWORD *)&v58 = 0x550C087CC469144DLL - v189;
  v192 = (v191 & 0x50D4D0E13CBD7177 ^ 0x5010408010881146) + (v191 & 0x50D4D0E13CBD7177 ^ 0xC490612C356031);
  v193 = v191 ^ ((v58 >> 61) - 0x7210439ED1881347 - ((2 * (v58 >> 61)) & 0x1BDF78C25CEFD972));
  *(_QWORD *)&v58 = __ROR8__((v192 - 0x7210439ED1881347 - ((2 * v192) & 0x3DB60C258EFC172)) ^ v191, 8);
  v194 = v58
       + (v193 ^ 0x50D4D0E13CBD7177)
       - 0x5445996698D333BFLL
       - ((2 * (v58 + (v193 ^ 0x50D4D0E13CBD7177))) & 0x5774CD32CE599882);
  *((_QWORD *)&v58 + 1) = v193 ^ 0x10D4D0E13CBD7177;
  *(_QWORD *)&v58 = v193 ^ 0x4000000000000000;
  v195 = (v58 >> 61) - 0x5445996698D333BFLL - ((2 * (v58 >> 61)) & 0x5774CD32CE599882);
  v196 = ((v194 >> 8) ^ 0x4E6DBC378AA96FLL)
       + (v194 ^ v195 ^ 0xE5D7DAAEED85A300)
       + ((v194 << 56) ^ 0x4100000000000000);
  LODWORD(v180) = 208352 - 969 * (LODWORD(STACK[0x634]) / 0x3C9);
  *((_QWORD *)&v58 + 1) = v194 ^ v195 ^ 0x5D7DAAEED85A300;
  *(_QWORD *)&v58 = v194 ^ ~v195;
  v197 = v196 ^ (v58 >> 61);
  v198 = (v197 ^ 0x8E85997BF8A3092DLL) + __ROR8__(v196 ^ 0x8E85997BF8A3092DLL, 8);
  *((_QWORD *)&v58 + 1) = v197 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v58 = v197 ^ 0x8000000000000000;
  v199 = v58 >> 61;
  *(_QWORD *)&v58 = __ROR8__(v198 ^ 0xCD091F17C02FDE51, 8);
  v200 = v199 ^ v198;
  v201 = (v200 ^ 0xCD091F17C02FDE51 ^ v58) + 2 * ((v200 ^ 0x4D091F17C02FDE51) & v58);
  *((_QWORD *)&v58 + 1) = v200 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v58 = v200 ^ 0xC000000000000000;
  v202 = v201 ^ (v58 >> 61);
  *((_QWORD *)&v58 + 1) = v202 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v58 = v202 ^ 0x6000000000000000;
  v203 = v58 >> 61;
  v204 = 245120 - 969 * (LODWORD(STACK[0x5FC]) / 0x3C9);
  v205 = __ROR8__(v201 ^ 0x628ABC52894BE762, 8) + (v202 ^ 0x628ABC52894BE762);
  *((_QWORD *)&v58 + 1) = v205 ^ 0x61;
  *(_QWORD *)&v58 = v205 ^ 0x5AC09C033F8B2700;
  *(_BYTE *)(STACK[0x688] + v204) ^= (((v205 ^ 0xF9C4B4BC5A74932CLL ^ (v203
                                                                     - ((2 * v203) & 0x4608517ECBFF689ALL)
                                                                     - 0x5CFBD7409A004BB3))
                                     + (unint64_t)(v58 >> 8)) ^ 0x1B0BD1982B59C071) >> ((8 * (v167 & 7)) ^ 0x28);
  v206 = v35 + STACK[0x530];
  *(_BYTE *)(STACK[0x688] + (v180 + 1915)) ^= *(_BYTE *)v206;
  LOBYTE(v167) = v206 - ((2 * v206) & 0x14) - 118;
  *(_QWORD *)&v58 = __ROR8__(v206 - ((2 * v206) & 0xEC737A93D5C35514) - 0x9C642B6151E5576, 8);
  v207 = v58 & 0xF8FFFFFFFFFFFFFFLL ^ 0x88F639BD49EAE1AALL;
  v208 = (((v207 - 0x550C087CC469144ELL) ^ 0xB98B02A5518146ACLL) << (((unsigned __int16)(((v58 ^ 0xE1AA) - 5198) ^ 0x46AC) >> 8) & 0x38) << (((unsigned __int16)(((v58 ^ 0xE1AA) - 5198) ^ 0x46AC) >> 8) & 0x38 ^ 0x38u)) ^ (((v207 - 0x550C087CC469144ELL) ^ 0xB98B02A5518146ACLL) >> 8);
  *((_QWORD *)&v58 + 1) = (v207 - 0x550C087CC469144ELL) ^ 0xE14BEBC8D361B39;
  *(_QWORD *)&v58 = 0x550C087CC469144DLL - v207;
  v209 = v208 + ((v207 - 0x550C087CC469144ELL) ^ 0xEE14BEBC8D361B39);
  v210 = v209 ^ (v58 >> 61);
  v211 = (v210 ^ 0x50D4D0E13CBD7177) + __ROR8__(v209 ^ 0x50D4D0E13CBD7177, 8);
  *((_QWORD *)&v58 + 1) = v210 ^ 0x10D4D0E13CBD7177;
  *(_QWORD *)&v58 = v210 ^ 0x4000000000000000;
  v212 = v58 >> 61;
  *((_QWORD *)&v58 + 1) = v211;
  *(_QWORD *)&v58 = v211 ^ 0xE5D7DAAEED85A300;
  v213 = (v211 ^ v212 ^ 0xE5D7DAAEED85A300) + (v58 >> 8);
  *((_QWORD *)&v58 + 1) = v211 ^ v212 ^ 0x5D7DAAEED85A300;
  *(_QWORD *)&v58 = v211 ^ ~v212;
  v214 = v213 ^ (v58 >> 61);
  *((_QWORD *)&v58 + 1) = v214 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v58 = v214 ^ 0x8000000000000000;
  v215 = 208352 - 969 * (LODWORD(STACK[0x630]) / 0x3C9);
  v216 = (v214 ^ 0x8E85997BF8A3092DLL) + __ROR8__(v213 ^ 0x8E85997BF8A3092DLL, 8);
  v217 = __ROR8__(v216 ^ 0xCD091F17C02FDE51, 8);
  v218 = v216 ^ (v58 >> 61);
  *((_QWORD *)&v58 + 1) = v218 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v58 = v218 ^ 0xC000000000000000;
  v219 = v217 + (v218 ^ 0xCD091F17C02FDE51);
  v220 = v219 ^ (v58 >> 61);
  v221 = __ROR8__(v219 ^ 0x628ABC52894BE762, 8) + (v220 ^ 0x628ABC52894BE762);
  *((_QWORD *)&v58 + 1) = v221 ^ 0x61;
  *(_QWORD *)&v58 = v221 ^ 0x5AC09C033F8B2700;
  v222 = v58 >> 8;
  *((_QWORD *)&v58 + 1) = v220 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v58 = v220 ^ 0x6000000000000000;
  v223 = 245503 - 969 * (LODWORD(STACK[0x5F8]) / 0x3C9);
  LODWORD(v151) = STACK[0x5D8];
  v224 = (((v221 ^ 0x6C37530822989E43 ^ ((unint64_t)(v58 >> 61)
                                         - ((2 * (unint64_t)(v58 >> 61)) & 0x6DEF9E163A277244)
                                         + 0x36F7CF0B1D13B922))
         + v222) ^ 0x1B0BD1982B59C071) >> ((8 * (v167 & 7)) ^ 0x10);
  LODWORD(v167) = STACK[0x680] - (STACK[0x5D8] & 0xBB426960) + 1570845869;
  v225 = (v167 ^ 0x5DA134B4) + STACK[0x678];
  *(_BYTE *)(STACK[0x688] + v223) ^= v224;
  v226 = 383 * (((v151 - 1153275552 - 2 * (v151 & 0xBB426960) + 8) & 0x43A ^ 0x28) + (v167 ^ 0x5DA136A9));
  if (v226 >= 0xB0C6DEA9)
    v227 = -1315709740;
  else
    v227 = 1650113405;
  v228 = v35 + (v225 ^ 0xEEEB2F4D) + 286576819 + ((2 * v225) & 0xDDD65E9A);
  *(_BYTE *)(STACK[0x688] + v215 + 2298) = *(_BYTE *)v228 ^ *(_BYTE *)(STACK[0x688] + (v226 - 1650113405 + v227) % 0x3C9);
  v229 = v228 - ((2 * v228) & 0x76) + 59;
  v230 = __ROR8__(v228 - ((2 * v228) & 0xAD46901E86FFE676) + 0x56A3480F437FF33BLL, 8) & 0xF8FFFFFFFFFFFFFFLL ^ 0x3856A3480F437FF3;
  v231 = __ROR8__((v230 - 0x550C087CC469144ELL) ^ 0xB98B02A5518146ACLL, 8)
       + ((v230 - 0x550C087CC469144ELL) ^ 0xEE14BEBC8D361B39);
  *((_QWORD *)&v232 + 1) = (v230 - 0x550C087CC469144ELL) ^ 0xE14BEBC8D361B39;
  *(_QWORD *)&v232 = 0x550C087CC469144DLL - v230;
  v233 = v231 ^ (v232 >> 61);
  v234 = (v233 ^ 0x50D4D0E13CBD7177uLL) >> ((v233 & 0x3D ^ 0x35) + (v233 & 0x3D ^ 8));
  v235 = (__ROR8__(v231 ^ 0x50D4D0E13CBD7177, 8) + (v233 ^ 0x50D4D0E13CBD7177)) ^ 0xE5D7DAAEED85A300;
  v236 = ((v234 - ((2 * v234) & 0xB8) + 92) ^ 0x5CLL | (8 * v233) ^ 0x86A68709E5EB8BB8) ^ v235;
  v237 = v236 + __ROR8__(v235, 8);
  v238 = v237 ^ __ROR8__(v236, 61);
  v239 = __ROR8__(v237 ^ 0x8E85997BF8A3092DLL, 8) + (v238 ^ 0x8E85997BF8A3092DLL);
  *((_QWORD *)&v232 + 1) = v238 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v232 = v238 ^ 0x8000000000000000;
  v240 = v239 ^ (v232 >> 61);
  *((_QWORD *)&v232 + 1) = v240 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v232 = v240 ^ 0xC000000000000000;
  v241 = 208352 - 969 * (LODWORD(STACK[0x62C]) / 0x3C9);
  v242 = __ROR8__(v239 ^ 0xCD091F17C02FDE51, 8) + (v240 ^ 0xCD091F17C02FDE51);
  v243 = v242 ^ (v232 >> 61);
  *((_QWORD *)&v232 + 1) = v242 ^ 0x62;
  *(_QWORD *)&v232 = v242 ^ STACK[0x650];
  v244 = (v243 ^ 0x628ABC52894BE762) + (v232 >> 8);
  *((_QWORD *)&v232 + 1) = v243 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v232 = v243 ^ 0x6000000000000000;
  v245 = v244 ^ 0xF3195EC36174FF32 ^ ((v232 >> 61) - ((2 * (v232 >> 61)) & 0x53B38580BDFFB0A6) - 0x56263D3FA10027ADLL);
  v246 = 245886 - 969 * (LODWORD(STACK[0x5F4]) / 0x3C9);
  *((_QWORD *)&v232 + 1) = v244 ^ 0x61;
  *(_QWORD *)&v232 = v244 ^ 0x5AC09C033F8B2700;
  v247 = (v245 + (v232 >> 8)) ^ 0x1B0BD1982B59C071;
  v248 = STACK[0x538];
  *(_BYTE *)(STACK[0x688] + v246) ^= v247 >> ((8 * (v229 & 7)) ^ 0x18u);
  v249 = (_BYTE *)(v35 + v248);
  *(_BYTE *)(STACK[0x688] + v241 + 2681) ^= *v249;
  v250 = (unint64_t)&v249[(~(2 * (_QWORD)v249) | 0xF22D3CDC99DDCB3) + 0x786E96191B3111A7];
  v251 = ((v250 >> 8) ^ 0x786E96191B3111) - 0x550C087CC469144ELL + ((v250 >> 3 << 59) ^ 0xA000000000000000);
  v252 = __ROR8__(v251 ^ 0xB98B02A5518146ACLL, 8) + (v251 ^ 0xEE14BEBC8D361B39);
  *((_QWORD *)&v232 + 1) = v251 ^ 0xE14BEBC8D361B39;
  *(_QWORD *)&v232 = ~v251;
  v253 = __ROR8__(v252 ^ 0x50D4D0E13CBD7177, 8);
  v254 = v252 ^ (v232 >> 61);
  v255 = v254 ^ 0x50D4D0E13CBD7177;
  *((_QWORD *)&v232 + 1) = v254 ^ 0x10D4D0E13CBD7177;
  *(_QWORD *)&v232 = v254 ^ 0x4000000000000000;
  v256 = v232 >> 61;
  v257 = v255 + v253;
  *((_QWORD *)&v232 + 1) = v257;
  *(_QWORD *)&v232 = v257 ^ 0xE5D7DAAEED85A300;
  v258 = (v232 >> 8) + (v257 ^ v256 ^ 0xE5D7DAAEED85A300);
  LODWORD(v255) = 208352 - 969 * (LODWORD(STACK[0x624]) / 0x3C9);
  *((_QWORD *)&v232 + 1) = v257 ^ v256 ^ 0x5D7DAAEED85A300;
  *(_QWORD *)&v232 = v257 ^ ~v256;
  v259 = v258 ^ (v232 >> 61);
  *((_QWORD *)&v232 + 1) = v259 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v232 = v259 ^ 0x8000000000000000;
  v260 = ((v258 >> 8) ^ 0x8E85997BF8A309) + (v259 ^ 0x8E85997BF8A3092DLL) + ((v258 << 56) ^ 0x2D00000000000000);
  v261 = v260 ^ (v232 >> 61);
  v262 = (v261 ^ 0xCD091F17C02FDE51) + __ROR8__(v260 ^ 0xCD091F17C02FDE51, 8);
  *((_QWORD *)&v232 + 1) = v261 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v232 = v261 ^ 0xC000000000000000;
  v263 = v262 ^ (v232 >> 61);
  *((_QWORD *)&v232 + 1) = v263 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v232 = v263 ^ 0x6000000000000000;
  LODWORD(v258) = 208352 - 969 * (LODWORD(STACK[0x628]) / 0x3C9);
  v264 = (__ROR8__(v262 ^ 0x628ABC52894BE762, 8) + (v263 ^ 0x628ABC52894BE762)) ^ 0x5AC09C033F8B2761;
  v265 = (v264 << ((v250 & 0x38 ^ 0x18) + (v250 & 0x38 ^ 0x20))) + (v264 >> 8);
  v266 = v264 ^ (v232 >> 61);
  v267 = 246269 - 969 * (LODWORD(STACK[0x5F0]) / 0x3C9);
  *(_BYTE *)(STACK[0x688] + v267) ^= ((v265 + v266) ^ 0x1B0BD1982B59C071) >> ((8 * (v250 & 7)) ^ 0x30);
  v268 = v35 + STACK[0x540];
  *(_BYTE *)(STACK[0x688] + (v258 + 3064)) ^= *(_BYTE *)v268;
  v269 = (_BYTE *)(v268 - ((2 * v268) & 0xEA9FBC3F2D7B8C1CLL));
  v270 = (((unint64_t)(v269 - 0xAB021E0694239F2) >> 8) ^ 0xF54FDE1F96BDC6)
       - 0x550C087CC469144ELL
       + (((_QWORD)(v269 - 0xAB021E0694239F2) << 56) & 0xF800000000000000 ^ 0x800000000000000);
  *(_QWORD *)&v232 = __ROR8__(v270 ^ 0xB98B02A5518146ACLL, 8);
  v271 = ~v270;
  v270 ^= 0xEE14BEBC8D361B39;
  v272 = v232 + v270;
  v273 = ((v270 << (v232 & 3) << (v232 & 3 ^ 3)) | (v271 >> 61)) ^ (v232 + v270);
  *((_QWORD *)&v232 + 1) = v273 ^ 0x10D4D0E13CBD7177;
  *(_QWORD *)&v232 = v273 ^ 0x4000000000000000;
  v274 = (v232 >> 61) - ((2 * (v232 >> 61)) & 0xB6502898B7529862) + 0x5B28144C5BA94C31;
  v275 = STACK[0x598];
  *((_QWORD *)&v232 + 1) = v272 ^ 0x77777777;
  *(_QWORD *)&v232 = v272 ^ STACK[0x598];
  v276 = (v273 ^ 0x50D4D0E13CBD7177)
       + (v232 >> 8)
       + 0x1A3BC9C250B75D22
       - ((2 * ((v273 ^ 0x50D4D0E13CBD7177) + (v232 >> 8))) & 0x34779384A16EBA44);
  v277 = (v274 & 0xE5D7DAAEED85A300 ^ 0x4100100C49810000) + (v274 & 0xE5D7DAAEED85A300 ^ 0xA4D7CAA2A404A300);
  v278 = v274 ^ v276;
  *((_QWORD *)&v232 + 1) = v276 ^ 0x22222222;
  *(_QWORD *)&v232 = (v277 + 0x1A3BC9C250B75D22 - ((2 * v277) & 0x14779384A10E8A00)) ^ v276;
  v279 = (v232 >> 8) + (v278 ^ 0xA4C40720E69BB213);
  *((_QWORD *)&v232 + 1) = v278 ^ 0x4C40720E69BB213;
  *(_QWORD *)&v232 = v278 ^ 0xBFFFFFFFFFFFFFFFLL;
  v280 = v279 ^ (v232 >> 61);
  *((_QWORD *)&v232 + 1) = v280 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v232 = v280 ^ 0x8000000000000000;
  v281 = 246652 - 969 * (LODWORD(STACK[0x5C8]) / 0x3C9);
  v282 = (v280 ^ 0x8E85997BF8A3092DLL) + __ROR8__(v279 ^ 0x8E85997BF8A3092DLL, 8);
  v283 = v282 ^ 0xCD091F17C02FDE51;
  v284 = (v232 >> 61) ^ v282;
  v285 = (v284 ^ 0xCD091F17C02FDE51) + __ROR8__(v283, 8);
  *((_QWORD *)&v232 + 1) = v284 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v232 = v284 ^ 0xC000000000000000;
  v286 = (v232 >> 61) ^ v285;
  *((_QWORD *)&v232 + 1) = v286 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v232 = v286 ^ 0x6000000000000000;
  v287 = (__ROR8__(v285 ^ 0x628ABC52894BE762, 8) + (v286 ^ 0x628ABC52894BE762)) ^ 0x5AC09C033F8B2761;
  *(_BYTE *)(STACK[0x688] + v281) ^= (((v287 ^ (unint64_t)(v232 >> 61)) + __ROR8__(v287, 8)) ^ 0x1B0BD1982B59C071) >> ((8 * (_BYTE)v269 - 80) & 0x38 ^ 0x30u);
  v288 = v35 + STACK[0x548];
  *(_BYTE *)(STACK[0x688] + (v255 + 3447)) ^= *(_BYTE *)v288;
  LOBYTE(v255) = v288 - 52;
  v289 = (((v288 + 0x6EE38043254B0DCCLL - ((2 * v288) & 0xDDC700864A961B98)) >> 8) ^ 0x6EE38043254B0DLL)
       - 0x550C087CC469144ELL
       + (((v288 + 0x6EE38043254B0DCCLL - ((2 * v288) & 0xDDC700864A961B98)) >> 3 << 59) ^ 0xC800000000000000);
  v290 = __ROR8__(v289 ^ 0xB98B02A5518146ACLL, 8) + (v289 ^ 0xEE14BEBC8D361B39);
  *((_QWORD *)&v232 + 1) = v289 ^ 0xE14BEBC8D361B39;
  *(_QWORD *)&v232 = ~v289;
  v291 = v232 >> 61;
  *((_QWORD *)&v232 + 1) = v290 ^ 0x77777777;
  *(_QWORD *)&v232 = v290 ^ v275;
  v292 = v290 ^ v291;
  v293 = (v232 >> 8)
       + (v292 ^ 0x50D4D0E13CBD7177)
       - 0x21AD37C1EA6F30A9
       - ((2 * ((v232 >> 8) + (v292 ^ 0x50D4D0E13CBD7177))) & 0xBCA5907C2B219EAELL);
  *((_QWORD *)&v232 + 1) = v292 ^ 0x10D4D0E13CBD7177;
  *(_QWORD *)&v232 = v292 ^ 0x4000000000000000;
  v294 = (v232 >> 61) - 0x21AD37C1EA6F30A9 - ((2 * (v232 >> 61)) & 0xBCA5907C2B219EAELL);
  *((_QWORD *)&v232 + 1) = v293 ^ 0x57;
  *(_QWORD *)&v232 = v293 ^ 0xDE52C83E1590CF00;
  v295 = v294 ^ v293;
  v296 = ((v232 >> 8) ^ 0xE5D7DAAEED85A3) + (v294 ^ v293 ^ 0xE5D7DAAEED85A300);
  v297 = v294 ^ ~v293;
  v298 = 247035 - 969 * (LODWORD(STACK[0x5EC]) / 0x3C9);
  *((_QWORD *)&v232 + 1) = v295 ^ 0x5D7DAAEED85A300;
  *(_QWORD *)&v232 = v297;
  LODWORD(v281) = 208352 - 969 * (LODWORD(STACK[0x620]) / 0x3C9);
  v299 = v296 ^ (v232 >> 61);
  *((_QWORD *)&v232 + 1) = v296 ^ 0x2D;
  *(_QWORD *)&v232 = v296 ^ STACK[0x5A0];
  v300 = (v299 ^ 0x8E85997BF8A3092DLL) + (v232 >> 8);
  *((_QWORD *)&v232 + 1) = v299 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v232 = v299 ^ 0x8000000000000000;
  v301 = (v232 >> 61) ^ v300;
  v302 = __ROR8__(v300 ^ 0xCD091F17C02FDE51, 8) + (v301 ^ 0xCD091F17C02FDE51);
  *((_QWORD *)&v232 + 1) = v301 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v232 = v301 ^ 0xC000000000000000;
  v303 = (v232 >> 61) ^ v302;
  *((_QWORD *)&v232 + 1) = v303 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v232 = v303 ^ 0x6000000000000000;
  v304 = (__ROR8__(v302 ^ 0x628ABC52894BE762, 8) + (v303 ^ 0x628ABC52894BE762)) ^ 0x5AC09C033F8B2761;
  *(_BYTE *)(STACK[0x688] + v298) ^= ((__ROR8__(v304, 8) + (v304 ^ (unint64_t)(v232 >> 61))) ^ 0x1B0BD1982B59C071) >> ((8 * (v255 & 7)) ^ 0x20);
  v305 = v35 + STACK[0x550];
  *(_BYTE *)(STACK[0x688] + (v281 + 3830)) ^= *(_BYTE *)v305;
  LOBYTE(v304) = v305 - ((2 * v305) & 0xAA) + 85;
  v306 = __ROR8__(v305 - ((2 * v305) & 0xDDE6A0809C048CAALL) - 0x110CAFBFB1FDB9ABLL, 8) & 0xF8FFFFFFFFFFFFFFLL ^ 0x50EEF350404E0246;
  v307 = __ROR8__((v306 - 0x550C087CC469144ELL) ^ 0xB98B02A5518146ACLL, 8);
  v308 = (v306 - 0x550C087CC469144ELL) ^ 0xEE14BEBC8D361B39;
  *((_QWORD *)&v232 + 1) = (v306 - 0x550C087CC469144ELL) ^ 0xE14BEBC8D361B39;
  *(_QWORD *)&v232 = 0x550C087CC469144DLL - v306;
  v309 = (v307 + v308) ^ (v232 >> 61);
  *((_QWORD *)&v232 + 1) = ((_DWORD)v307 + (_DWORD)v308) ^ 0x77777777u;
  *(_QWORD *)&v232 = (v307 + v308) ^ v275;
  v310 = (v309 ^ 0x50D4D0E13CBD7177)
       + (v232 >> 8)
       - 0x6D514171B3DCA0BLL
       - ((2 * ((v309 ^ 0x50D4D0E13CBD7177) + (v232 >> 8))) & 0xF255D7D1C9846BEALL);
  *((_QWORD *)&v232 + 1) = v309 ^ 0x10D4D0E13CBD7177;
  *(_QWORD *)&v232 = v309 ^ 0x4000000000000000;
  v311 = (v232 >> 61) - 0x6D514171B3DCA0BLL - ((2 * (v232 >> 61)) & 0xF255D7D1C9846BEALL);
  *((_QWORD *)&v232 + 1) = v310 ^ 0xF5;
  *(_QWORD *)&v232 = v310 ^ 0xF92AEBE8E4C23500;
  v312 = (v232 >> 8) ^ 0xE5D7DAAEED85A3;
  *((_QWORD *)&v232 + 1) = v311 ^ v310 ^ 0x5D7DAAEED85A300;
  *(_QWORD *)&v232 = v311 ^ ~v310;
  v313 = v312 + (v311 ^ v310 ^ 0xE5D7DAAEED85A300);
  v314 = v313 - 0x34E511265FEA8134 - ((2 * v313) & 0x9635DDB3402AFD98);
  v315 = 0x3C67A
       % (0xD0FF3DF1A2F59185
        * (v314 & 0x3721906593191A75 ^ 0x3220804583090814 | v314 & 0x3721906593191A75 ^ 0x501102010101261));
  v316 = STACK[0x688];
  v317 = v314 ^ ((v232 >> 61) - 0x34E511265FEA8134 - ((2 * (v232 >> 61)) & 0x9635DDB3402AFD98));
  *((_QWORD *)&v232 + 1) = v314 ^ 0xFFFFFFE1;
  *(_QWORD *)&v232 = v314 ^ 0x459F77A258B67700;
  v318 = (v232 >> 8) + (v317 ^ 0x8E85997BF8A3092DLL);
  *((_QWORD *)&v232 + 1) = v317 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v232 = v317 ^ 0x8000000000000000;
  v319 = v318 ^ (v232 >> 61);
  v320 = STACK[0x670];
  *((_QWORD *)&v232 + 1) = v318 ^ 0x51;
  *(_QWORD *)&v232 = v318 ^ STACK[0x670];
  v321 = (v232 >> 8) + (v319 ^ 0xCD091F17C02FDE51);
  *((_QWORD *)&v232 + 1) = v319 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v232 = v319 ^ 0xC000000000000000;
  LODWORD(v295) = 212565 - 969 * (LODWORD(STACK[0x5C0]) / 0x3C9);
  v322 = v321 ^ (v232 >> 61);
  *((_QWORD *)&v232 + 1) = v321 ^ 0x62;
  *(_QWORD *)&v232 = v321 ^ STACK[0x650];
  v323 = (v232 >> 8) + (v322 ^ 0x628ABC52894BE762);
  *((_QWORD *)&v232 + 1) = v322 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v232 = v322 ^ 0x6000000000000000;
  *(_BYTE *)(v316 + v315) = *(_BYTE *)(STACK[0x688] + 247418 - 969 * (LODWORD(STACK[0x5E8]) / 0x3C9)) ^ (((__ROR8__(v323 ^ 0x5AC09C033F8B2761, 8) + (v323 ^ 0x5AC09C033F8B2761 ^ (unint64_t)(v232 >> 61))) ^ 0x1B0BD1982B59C071) >> ((8 * (v304 & 7)) ^ 0x28));
  v324 = v35 + STACK[0x558];
  *(_BYTE *)(v316 + v295) ^= *(_BYTE *)v324;
  LOBYTE(v323) = v324 - ((2 * v324) & 0xF4) + 122;
  v325 = __ROR8__(v324 - ((2 * v324) & 0xF464D87A7150BAF4) - 0x5CD93C2C757A286, 8) & 0xF8FFFFFFFFFFFFFFLL ^ 0x78FA326C3D38A85DLL;
  v326 = __ROR8__((v325 - 0x550C087CC469144ELL) ^ 0xB98B02A5518146ACLL, 8)
       + ((v325 - 0x550C087CC469144ELL) ^ 0xEE14BEBC8D361B39);
  *((_QWORD *)&v232 + 1) = (v325 - 0x550C087CC469144ELL) ^ 0xE14BEBC8D361B39;
  *(_QWORD *)&v232 = 0x550C087CC469144DLL - v325;
  v327 = v232 >> 61;
  *((_QWORD *)&v232 + 1) = v326 ^ 0x77777777;
  *(_QWORD *)&v232 = v326 ^ v275;
  v328 = v326 ^ v327;
  v329 = (v232 >> 8) + (v328 ^ 0x50D4D0E13CBD7177);
  *((_QWORD *)&v232 + 1) = v328 ^ 0x10D4D0E13CBD7177;
  *(_QWORD *)&v232 = v328 ^ 0x4000000000000000;
  v330 = v232 >> 61;
  *((_QWORD *)&v232 + 1) = v329;
  *(_QWORD *)&v232 = v329 ^ 0xE5D7DAAEED85A300;
  v331 = (v232 >> 8) + (v330 ^ v329 ^ 0xE5D7DAAEED85A300);
  v332 = 247801 - 969 * (LODWORD(STACK[0x5E4]) / 0x3C9);
  *((_QWORD *)&v232 + 1) = v330 ^ v329 ^ 0x5D7DAAEED85A300;
  *(_QWORD *)&v232 = v330 ^ ~v329;
  v333 = (v232 >> 61) ^ v331;
  v334 = (v333 ^ 0x8E85997BF8A3092DLL) + __ROR8__(v331 ^ 0x8E85997BF8A3092DLL, 8);
  *((_QWORD *)&v232 + 1) = v333 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v232 = v333 ^ 0x8000000000000000;
  v335 = (v232 >> 61) ^ v334;
  v336 = __ROR8__(v334 ^ 0xCD091F17C02FDE51, 8) + (v335 ^ 0xCD091F17C02FDE51);
  *((_QWORD *)&v232 + 1) = v335 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v232 = v335 ^ 0xC000000000000000;
  v337 = (v232 >> 61) ^ v336;
  v338 = (v337 ^ 0x628ABC52894BE762) + __ROR8__(v336 ^ 0x628ABC52894BE762, 8);
  *((_QWORD *)&v232 + 1) = v337 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v232 = v337 ^ 0x6000000000000000;
  v339 = (v338 ^ 0x1476C2758E5C2EADLL ^ ((v232 >> 61)
                                       - ((2 * (v232 >> 61)) & 0x9D6CBCED63AE1398)
                                       + 0x4EB65E76B1D709CCLL))
       + (__ROR8__(v338, 8) ^ 0x615AC09C033F8B27);
  *(_BYTE *)(v316 + v332) ^= (v339 ^ 0x1B0BD1982B59C071uLL) >> ((8 * (v323 & 7)) ^ 0x10);
  LODWORD(v339) = (((v339 & 0x1024017F ^ 0x1024010E) + ((v339 ^ 0x2B59C071) & 0x1024017F)) & 0x2008017F | (((v338 >> 8) & 0x34 ^ 0x10) + ((v338 >> 8) & 0x34 ^ 0x24)))
                * (STACK[0x680] + 540);
  v340 = v35 + STACK[0x678] + 15;
  *(_BYTE *)(v316 + 212948 - 969 * (LODWORD(STACK[0x5B8]) / 0x3C9)) = *(_BYTE *)v340 ^ *(_BYTE *)(v316
                                                                                                + v339
                                                                                                % 0x3C9);
  v341 = __ROR8__(v340 - ((2 * v340) & 0x42F0C174E4C4459ALL) - 0x5E879F458D9DDD33, 8) & 0xF8FFFFFFFFFFFFFFLL ^ 0xC8A17860BA726222;
  v342 = __ROR8__((v341 - 0x550C087CC469144ELL) ^ 0xB98B02A5518146ACLL, 8)
       + ((v341 - 0x550C087CC469144ELL) ^ 0xEE14BEBC8D361B39);
  *((_QWORD *)&v232 + 1) = (v341 - 0x550C087CC469144ELL) ^ 0xE14BEBC8D361B39;
  *(_QWORD *)&v232 = 0x550C087CC469144DLL - v341;
  v343 = v232 >> 61;
  *((_QWORD *)&v232 + 1) = v342 ^ 0x77777777;
  *(_QWORD *)&v232 = v342 ^ v275;
  v344 = v342 ^ v343;
  v345 = (v232 >> 8)
       + (v344 ^ 0x50D4D0E13CBD7177)
       - 0x9EA5A522AF3B408
       - ((2 * ((v232 >> 8) + (v344 ^ 0x50D4D0E13CBD7177))) & 0xEC2B4B5BAA1897F0);
  *((_QWORD *)&v232 + 1) = v344 ^ 0x10D4D0E13CBD7177;
  *(_QWORD *)&v232 = v344 ^ 0x4000000000000000;
  v346 = (v232 >> 61) - 0x9EA5A522AF3B408 - ((2 * (v232 >> 61)) & 0xEC2B4B5BAA1897F0);
  v347 = ((v345 << 56) ^ 0xF800000000000000)
       + (v346 ^ v345 ^ 0xE5D7DAAEED85A300)
       + ((v345 >> 8) ^ 0x13C27F033889E8);
  v348 = v347 - 0x22BB6E14440F8B54 - ((2 * v347) & 0xBA8923D777E0E958);
  *((_QWORD *)&v232 + 1) = v346 ^ v345 ^ 0x5D7DAAEED85A300;
  *(_QWORD *)&v232 = v346 ^ ~v345;
  v349 = (v232 >> 61) - 0x4CCAFEE15239D9C1 - ((2 * (v232 >> 61)) & 0x666A023D5B8C4C7ELL);
  v350 = ((v349 ^ 0x918E6F0AE9C9AD6CLL ^ v348) + (v348 ^ 0xDD4491EBBBF074ACLL) + 1) ^ ((v349 ^ 0x4CCAFEE15239D9C0) + 1);
  v351 = ((v350 - 0x4CCAFEE15239D9C1 - ((2 * v350) & 0x666A023D5B8C4C7ELL)) ^ v349) + (v348 ^ 0xDD4491EBBBF074ACLL);
  *((_QWORD *)&v232 + 1) = v351 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v232 = v351 ^ 0x8000000000000000;
  v352 = v232 >> 61;
  v353 = (v351 ^ 0x8E85997BF8A3092DLL) + __ROR8__(v348 ^ 0x53C1089043537D81, 8);
  *((_QWORD *)&v232 + 1) = v353 ^ 0x51;
  *(_QWORD *)&v232 = v353 ^ v320;
  v354 = v232 >> 8;
  v355 = v353 ^ v352;
  *((_QWORD *)&v232 + 1) = v355 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v232 = v355 ^ 0xC000000000000000;
  v356 = STACK[0x680];
  v357 = (v355 ^ 0xCD091F17C02FDE51) + v354;
  v358 = (v232 >> 61) ^ v357;
  v359 = __ROR8__(v357 ^ 0x628ABC52894BE762, 8) + (v358 ^ 0x628ABC52894BE762);
  *(_BYTE *)(v316 + 0x3C978 % (STACK[0x5AC] & 0x3C0 ^ 9u)) = *(_BYTE *)(v316
                                                                      + 248184
                                                                      - 969 * (LODWORD(STACK[0x5B0]) / 0x3C9)) ^ (((((v358 >> 61) ^ 0x5AC09C033F8B2762 ^ ((v358 ^ 0x628ABC52894BE762) << (v313 & 3 ^ 2 | v313 & 3 ^ 1)) ^ v359) + __ROR8__(v359 ^ 0x5AC09C033F8B2761, 8)) ^ 0x1B0BD1982B59C071) >> ((8 * ((v340 - ((2 * v340) & 0x9A) - 51) & 7)) ^ 0x28));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x690] + 8 * ((374 * (v356 > 0x3F)) ^ LODWORD(STACK[0x5BC]))) - 8))();
}

void sub_1CF2F7080()
{
  int v0;
  int v1;
  int v2;

  LODWORD(STACK[0x5B8]) = v2 + 6128;
  LODWORD(STACK[0x63C]) += 6128;
  LODWORD(STACK[0x5D8]) += 32;
  LODWORD(STACK[0x5AC]) = v1 - 16;
  LODWORD(STACK[0x5B0]) = v0 + 6128;
  LODWORD(STACK[0x5E4]) += 6128;
  LODWORD(STACK[0x5C0]) += 6128;
  LODWORD(STACK[0x5E8]) += 6128;
  LODWORD(STACK[0x620]) += 6128;
  LODWORD(STACK[0x5EC]) += 6128;
  LODWORD(STACK[0x624]) += 6128;
  LODWORD(STACK[0x5C8]) += 6128;
  LODWORD(STACK[0x628]) += 6128;
  LODWORD(STACK[0x5F0]) += 6128;
  LODWORD(STACK[0x62C]) += 6128;
  LODWORD(STACK[0x5F4]) += 6128;
  LODWORD(STACK[0x630]) += 6128;
  LODWORD(STACK[0x5F8]) += 6128;
  LODWORD(STACK[0x634]) += 6128;
  LODWORD(STACK[0x5FC]) += 6128;
  LODWORD(STACK[0x638]) += 6128;
  LODWORD(STACK[0x600]) += 6128;
  LODWORD(STACK[0x640]) += 6128;
  LODWORD(STACK[0x60C]) += 6128;
  LODWORD(STACK[0x5D4]) += 6128;
  LODWORD(STACK[0x610]) += 6128;
  LODWORD(STACK[0x648]) += 6128;
  LODWORD(STACK[0x61C]) += 6128;
  LODWORD(STACK[0x64C]) += 6128;
  JUMPOUT(0x1CF2F3D10);
}

uint64_t sub_1CF2F7220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  int v7;
  int v8;

  LODWORD(STACK[0x680]) = v5 + 109;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 + 8 * ((107 * (((v5 - 67) ^ (v6 - 38507951 < (v7 + v6 - v8 + 807304777))) & 1)) ^ v5)) - 12))(a1, a2, a3, a5, 0xE5D7DAAEED85A300, 0x8E85997BF8A3092DLL, 1639759853, 0x705E70C96ECA7BECLL);
}

void sub_1CF2F72FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,int a24,int a25,int a26,int a27,int a28,int a29,int a30,char a31,int a32,char a33,int a34,int a35,int a36,int a37,int a38,int a39,int a40,int a41,int a42,int a43,int a44,int a45,int a46,int a47,unint64_t a48,int a49,int a50,int a51,int a52,int a53,int a54,int a55,int a56,int a57,int a58,int a59,int a60,int a61,int a62,int a63)
{
  int a64;
  int a65;
  int a66;
  int a67;
  int a68;
  int a69;
  int a70;
  int a71;
  unsigned int a72;
  int a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  int a80;
  int a81;
  int a82;
  int a83;
  int a84;
  int a85;
  int a86;
  int a87;
  int a88;
  int a89;
  int a90;
  int a91;
  int a92;
  int a93;
  int a94;
  int a95;
  int a96;
  int a97;
  int a98;
  int a99;
  int a100;
  int a101;
  int a102;
  int a103;
  int a104;
  int a105;
  int a106;
  int a107;
  int a108;
  int a109;
  int a110;
  int a111;
  int a112;
  int a113;
  int a114;
  int a115;
  int a116;
  int a117;
  int a118;
  unsigned int a119;
  unsigned int a120;
  int a121;
  int a122;
  int a123;
  int a124;
  int a125;
  int a126;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  int v152;
  int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  int v190;
  int v191;
  unsigned int v192;
  int v193;
  unsigned int v194;
  int v195;
  int v196;
  int v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  int v201;
  unsigned int v202;
  unint64_t v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  int v207;
  unsigned int v208;
  unsigned int v209;
  int v210;
  int v211;
  int v212;
  unsigned int v213;
  unsigned int v214;
  int v215;
  unsigned int v216;
  unsigned int v217;
  int v218;
  int v219;
  int v220;
  unsigned int v221;
  int v222;
  int v223;
  unsigned int v224;
  int v225;
  int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  int v230;
  unint64_t v231;
  unsigned int v232;
  int v233;
  int v234;
  unsigned int v235;
  int v236;
  unsigned int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  unsigned int v242;
  int v243;
  unsigned int v244;
  int v245;
  int v246;
  int v247;
  unsigned int v248;
  int v249;
  unsigned int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  unsigned int v255;
  unsigned int v256;
  int v257;
  int v258;
  unsigned int v259;
  unsigned int v260;
  unsigned int v261;
  int v262;
  unsigned int v263;
  int v264;
  BOOL v265;
  int v266;
  unint64_t v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  int v274;
  int v275;
  unsigned int v276;
  int v277;
  int v278;
  int v279;
  unsigned int v280;
  int v281;
  unsigned int v282;
  int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  int v287;
  int v288;
  unsigned int v289;
  unsigned int v290;
  int v291;
  int v292;
  int v293;
  int v294;
  unsigned int v295;
  int v296;
  unsigned int v297;
  int v298;
  int v299;
  int v300;
  unsigned int v301;
  int v302;
  int v303;
  int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  int v308;
  int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  int v313;
  int v314;
  int v315;
  unsigned int v316;
  unsigned int v317;
  int v318;
  int v319;
  unsigned int v320;
  unsigned int v321;
  unsigned int v322;
  int v323;
  int v324;
  unsigned int v325;
  unsigned int v326;
  unint64_t v327;
  unsigned int v328;
  unsigned int v329;
  unsigned int v330;
  int v331;
  int v332;
  int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  int v338;
  unint64_t v339;
  int v340;
  int v341;
  unsigned int v342;
  unsigned int v343;
  unsigned int v344;
  int v345;
  int v346;
  int v347;
  unsigned int v348;
  unsigned int v349;
  int v350;
  int v351;
  unsigned int v352;
  int v353;
  int v354;
  int v355;
  int v356;
  unsigned int v357;
  int v358;
  int v359;
  unsigned int v360;
  int v361;
  int v362;
  int v363;
  unsigned int v364;
  unsigned int v365;
  int v366;
  int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  unsigned int v373;
  unsigned int v374;
  unsigned int v375;
  unsigned int v376;
  int v377;
  unsigned int v378;
  unsigned int v379;
  int v380;
  int v381;
  int v382;
  int v383;
  unsigned int v384;
  unint64_t v385;
  int v386;
  int v387;
  int v388;
  int v389;
  unsigned int v390;
  unsigned int v391;
  uint64_t v392;
  int v393;
  int v394;
  int v395;
  int v396;
  int v397;
  int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  int v402;
  unsigned int v403;
  unsigned int v404;
  int v405;
  int v406;
  unsigned int v407;
  unsigned int v408;
  int v409;
  int v410;
  int v411;
  int v412;
  int v413;
  unsigned int v414;
  int v415;
  unsigned int v416;
  int v417;
  unsigned int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  unsigned int v424;
  int v425;
  int v426;
  unsigned int v427;
  int v428;
  unsigned int v429;
  unsigned int v430;
  unsigned int v431;
  unsigned int v432;
  unsigned int v433;
  unsigned int v434;
  unsigned int v435;
  int v436;
  int v437;
  unsigned int v438;
  int v439;
  int v440;
  unsigned int v441;
  unsigned int v442;
  int v443;
  unsigned int v444;
  int v445;
  int v446;
  int v447;
  int v448;
  unsigned int v449;
  unsigned int v450;
  int v451;
  int v452;
  unsigned int v453;
  unsigned int v454;
  int v455;
  unsigned int v456;
  int v457;
  int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  int v462;
  int v463;
  int v464;
  unsigned int v465;
  int v466;
  int v467;
  unsigned int v468;
  int v469;
  unsigned int v470;
  int v471;
  int v472;
  int v473;
  int v474;
  unsigned int v475;
  __int16 v476;
  __int16 v477;
  unsigned __int16 v478;
  int v479;
  int v480;
  int v481;
  unsigned int v482;
  unsigned int v483;
  int v484;
  unsigned int v485;
  int v486;
  int v487;
  unsigned int v488;
  int v489;
  int v490;
  int v491;
  int v492;
  int v493;
  unsigned int v494;
  unsigned int v495;
  uint64_t v496;
  uint64_t v497;
  unsigned int v498;
  unsigned int v499;
  unsigned int v500;
  unsigned int v501;
  int v502;
  int v503;
  unsigned int v504;
  unsigned int v505;
  int v506;
  unsigned int v507;
  int v508;
  unsigned int v509;
  unsigned int v510;
  int v511;
  int v512;
  int v513;
  int v514;
  int v515;
  int v516;
  unsigned int v517;
  int v518;
  unsigned int v519;
  unsigned int v520;
  unsigned int v521;
  unsigned int v522;
  unsigned int v523;
  unint64_t v524;
  unsigned int v525;
  unsigned int v526;
  int v527;
  int v528;
  unsigned int v529;
  int v530;
  unsigned int v531;
  unsigned int v532;
  int v533;
  unsigned int v534;
  int v535;
  unsigned int v536;
  unsigned int v537;
  int v538;
  unsigned int v539;
  int v540;
  unsigned int v541;
  unsigned int v542;
  int v543;
  unsigned int v544;
  int v545;
  int v546;
  int v547;
  unsigned int v548;
  unsigned int v549;
  unsigned int v550;
  int v551;
  int v552;
  int v553;
  unsigned int v554;
  unsigned int v555;
  unsigned int v556;
  unsigned int v557;
  unsigned int v558;
  int v559;
  int v560;
  int v561;
  unsigned int v562;
  int v563;
  int v564;
  int v565;
  int v566;
  unsigned int v567;
  int v568;
  int v569;
  int v570;
  int v571;
  int v572;
  int v573;
  int v574;
  unsigned int v575;
  unsigned int v576;
  unsigned int v577;
  unsigned int v578;
  unsigned int v579;
  int v580;
  unsigned int v581;
  int v582;
  unsigned int v583;
  int v584;
  unsigned int v585;
  int v586;
  int v587;
  unsigned int v588;
  int v589;
  int v590;
  unsigned int v591;
  int v592;
  unsigned int v593;
  unsigned int v594;
  int v595;
  int v596;
  int v597;
  unsigned int v598;
  unsigned int v599;
  int v600;
  int v601;
  int v602;
  unsigned int v603;
  int v604;
  unsigned int v605;
  int v606;
  unsigned int v607;
  int v608;
  unsigned int v609;
  unsigned int v610;
  int v611;
  int v612;
  int v613;
  int v614;
  int v615;
  unint64_t v616;
  unsigned int v617;
  int v618;
  unsigned int v619;
  unsigned int v620;
  unsigned int v621;
  int v622;
  unsigned int v623;
  int v624;
  int v625;
  unsigned int v626;
  int v627;
  int v628;
  int v629;
  unsigned int v630;
  int v631;
  int v632;
  unsigned int v633;
  int v634;
  int v635;
  int v636;
  int v637;
  int v638;
  int v639;
  unsigned int v640;
  int v641;
  unsigned int v642;
  int v643;
  int v644;
  unsigned int v645;
  unsigned int v646;
  unsigned int v647;
  unsigned int v648;
  int v649;
  unsigned int v650;
  unsigned int v651;
  int v652;
  unsigned int v653;
  int v654;
  unsigned int v655;
  unsigned int v656;
  unsigned int v657;
  int v658;
  int v659;
  int v660;
  unsigned int v661;
  unsigned int v662;
  int v663;
  int v664;
  int v665;
  int v666;
  int v667;
  int v668;
  int v669;
  int v670;
  int v671;
  int v672;
  int v673;
  int v674;
  int v675;
  unsigned int v676;
  int v677;
  unsigned int v678;
  int v679;
  int v680;
  unsigned int v681;
  unsigned int v682;
  int v683;
  int v684;
  unsigned int v685;
  unsigned int v686;
  unsigned int v687;
  int v688;
  int v689;
  int v690;
  int v691;
  int v692;
  unsigned int v693;
  int v694;
  unsigned int v695;
  int v696;
  unsigned int v697;
  unsigned int v698;
  int v699;
  unsigned int v700;
  int v701;
  unsigned int v702;
  unsigned int v703;
  unsigned int v704;
  unsigned int v705;
  unsigned int v706;
  unsigned int v707;
  int v708;
  unsigned int v709;
  int v710;
  unsigned int v711;
  unsigned int v712;
  unsigned int v713;
  unsigned int v714;
  int v715;
  unsigned int v716;
  int v717;
  unsigned int v718;
  int v719;
  unsigned int v720;
  unsigned int v721;
  int v722;
  int v723;
  unsigned int v724;
  unsigned int v725;
  unsigned int v726;
  int v727;
  int v728;
  int v729;
  int v730;
  int v731;
  unsigned int v732;
  unsigned int v733;
  int v734;
  unsigned int v735;
  int v736;
  unsigned int v737;
  unsigned int v738;
  unsigned int v739;
  unsigned int v740;
  unsigned int v741;
  unsigned int v742;
  unsigned int v743;
  unsigned int v744;
  int v745;
  int v746;
  unsigned int v747;
  int v748;
  int v749;
  int v750;
  int v751;
  unsigned int v752;
  int v753;
  unsigned int v754;
  int v755;
  unsigned int v756;
  unsigned int v757;
  unsigned int v758;
  int v759;
  unsigned int v760;
  unsigned int v761;
  int v762;
  unsigned int v763;
  int v764;
  unsigned int v765;
  unsigned int v766;
  int v767;
  unsigned int v768;
  unsigned int v769;
  int v770;
  int v771;
  int v772;
  unsigned int v773;
  int v774;
  unsigned int v775;
  unsigned int v776;
  unsigned int v777;
  int v778;
  int v779;
  int v780;
  int v781;
  unsigned int v782;
  unsigned int v783;
  unsigned int v784;
  int v785;
  int v786;
  unsigned int v787;
  int v788;
  unsigned int v789;
  unsigned int v790;
  int v791;
  int v792;
  int v793;
  int v794;
  unsigned int v795;
  int v796;
  unint64_t v797;
  int v798;
  int v799;
  int v800;
  int v801;
  unsigned int v802;
  int v803;
  unsigned int v804;
  int v805;
  int v806;
  int v807;
  int v808;
  int v809;
  int v810;
  int v811;
  int v812;
  int v813;
  int v814;
  int v815;
  int v816;
  int v817;
  unsigned int v818;
  int v819;
  int v820;
  int v821;
  int v822;
  int v823;
  unsigned int v824;
  unsigned int v825;
  unsigned int v826;
  int v827;
  int v828;
  int v829;
  unsigned int v830;
  int v831;
  unsigned int v832;
  int v833;
  int v834;
  int v835;
  int v836;
  unsigned int v837;
  unsigned int v838;
  int v839;
  int v840;
  int v841;
  int v842;
  int v843;
  int v844;
  int v845;
  int v846;
  int v847;
  int v848;
  int v849;
  int v850;
  int v851;
  unsigned int v852;
  unsigned int v853;
  unsigned int v854;
  int v855;
  int v856;
  int v857;
  int v858;
  unsigned int v859;
  int v860;
  int v861;
  unsigned int v862;
  int v863;
  int v864;
  int v865;
  int v866;
  int v867;
  int v868;
  int v869;
  int v870;
  int v871;
  int v872;
  int v873;
  int v874;
  int v875;
  int v876;
  int v877;
  int v878;
  int v879;
  int v880;
  int v881;
  unsigned int v882;
  int v883;
  int v884;
  unsigned int v885;

  v126 = LODWORD(STACK[0x31C]) ^ (LODWORD(STACK[0x350]) >> 27);
  LODWORD(STACK[0x5C8]) = LODWORD(STACK[0x378]) ^ a107 ^ a115;
  LODWORD(STACK[0x5F8]) = a116 ^ a108;
  LODWORD(STACK[0x5FC]) = a101 ^ LODWORD(STACK[0x370]);
  LODWORD(STACK[0x600]) = LODWORD(STACK[0x368]) ^ a105;
  LODWORD(STACK[0x60C]) = a86 ^ a89;
  LODWORD(STACK[0x610]) = a95 ^ a94;
  LODWORD(STACK[0x61C]) = a91 ^ a92;
  LODWORD(STACK[0x620]) = a87 ^ a90 ^ a93;
  LODWORD(STACK[0x624]) = a110 ^ a111;
  LODWORD(STACK[0x628]) = a109 ^ a112;
  LODWORD(STACK[0x62C]) = LODWORD(STACK[0x490]) ^ a46;
  LODWORD(STACK[0x630]) = a85 ^ a88;
  LODWORD(STACK[0x634]) = LODWORD(STACK[0x48C]) ^ a84;
  LODWORD(STACK[0x638]) = a53 ^ LODWORD(STACK[0x358]);
  LODWORD(STACK[0x5E8]) = a51 ^ a52;
  LODWORD(STACK[0x5EC]) = LODWORD(STACK[0x354]) ^ a50;
  LODWORD(STACK[0x5F4]) = a37 ^ LODWORD(STACK[0x314]) ^ a26;
  v127 = a22 ^ LODWORD(STACK[0x2E8]);
  v128 = a24 ^ LODWORD(STACK[0x2E4]);
  v129 = LODWORD(STACK[0x340]) ^ a44 ^ a28;
  v130 = a41 ^ LODWORD(STACK[0x318]);
  v131 = LODWORD(STACK[0x34C]) ^ a27;
  v132 = a42 ^ a43 ^ LODWORD(STACK[0x47C]);
  LODWORD(STACK[0x640]) = a39 ^ a40;
  LODWORD(STACK[0x648]) = a34 ^ LODWORD(STACK[0x2F4]);
  LODWORD(STACK[0x5F0]) = a23 ^ LODWORD(STACK[0x310]);
  LODWORD(STACK[0x5E4]) = LODWORD(STACK[0x308]) ^ a38;
  v133 = (LODWORD(STACK[0x32C]) >> 20) ^ (LODWORD(STACK[0x478]) >> 1) ^ 0x73E276DB ^ (STACK[0x2D8] >> ((((a33 & 0xE7 ^ 0x61) + (a33 & 0xE7 ^ 0x86)) & 0xABu) + 100));
  v134 = (v133 + 1674763623 - ((2 * v133) & 0xC7A5BACE)) ^ LODWORD(STACK[0x300]);
  v135 = (v134 + 1420044402 - ((2 * v134) & 0xA94850E4)) ^ LODWORD(STACK[0x2FC]);
  v136 = (v135 + 2129401924 - ((2 * v135) & 0xFDD83088)) ^ a35;
  v137 = v127 ^ (v136 + 1248485057 - ((2 * v136) & 0x94D4BD82));
  v138 = (v137 - 631880518 - ((2 * v137) & 0xB4AC8974)) ^ LODWORD(STACK[0x2F8]);
  v139 = a25 ^ a30 ^ (v138 - 2032281238 - ((2 * v138) & 0xDBBB2D4));
  v140 = (v139 - 2005398641 - ((2 * v139) & 0x10F0171E)) ^ LODWORD(STACK[0x304]);
  v141 = (v140 - 947675974 - ((2 * v140) & 0x8F073974)) ^ a36;
  v142 = v128 ^ (v141 + 2135104768 - ((2 * v141) & 0xFE863A00));
  v143 = (v142 >> 27) ^ (v133 >> 30);
  v144 = v126 ^ (a48 >> ((a55 & 0x1C ^ 0x14) + (a55 & 0x1C ^ 8u))) ^ 0x18;
  v145 = (v144 + 1724121041 - ((2 * v144) & 0x1A2)) ^ a57;
  v146 = (v145 - 923718577 - ((2 * v145) & 0x11E2589E)) ^ LODWORD(STACK[0x480]);
  v147 = v129 ^ (v146 - 2026909529 - ((2 * v146) & 0xE5FA14E));
  v148 = (a48 >> (v147 & 0xB ^ 9 | v147 & 0xB ^ 2)) ^ (a72 >> 2) ^ 0x315E6A83;
  v149 = v147 ^ 0xD61F9433 ^ (v148 - ((2 * v148) & 0xAC3903AA) - 702774827);
  v150 = v130 ^ ((v149 ^ a56) - 1427255185 - ((2 * (v149 ^ a56)) & 0x55DBA0DE));
  v151 = a55 ^ a54 ^ (v150 + 554734166 - ((2 * v150) & 0x422124AC));
  v152 = (a120 >> 26) ^ (a120 >> 31) ^ a67 ^ a75 ^ a78 ^ a81 ^ (a119 >> 3) ^ a80 ^ a79 ^ 0xC067419;
  v153 = (v152 + 1058130239 - ((2 * v152) & 0x7E23927E)) ^ a98;
  v154 = a66 ^ a65 ^ a76 ^ a82 ^ (v153 + 1327482417 - ((2 * v153) & 0x9E3F8C62));
  v155 = (v154 - 242321061 - ((2 * v154) & 0xE31CF2B6)) ^ a97;
  v156 = a77 ^ a68 ^ (v155 + 522760912 - ((2 * v155) & 0x3E5165A0));
  v157 = (32 * a72) ^ (a72 << 30) ^ (16 * a72) ^ ((_DWORD)a48 << (a31 & 3 ^ 1 | a31 & 3 ^ 2)) ^ 0x78AFE120;
  v158 = (v157 - 792019190 - 2 * (v157 & 0x50CABF0E ^ ((_DWORD)a48 << (a31 & 3 ^ 1 | a31 & 3 ^ 2)) & 4)) ^ LODWORD(STACK[0x488]);
  v159 = (v158 + 419258933 - ((2 * v158) & 0x31FAC46A)) ^ a63;
  v160 = (v159 - 846653928 - ((2 * v159) & 0x9B122C30)) ^ LODWORD(STACK[0x35C]);
  v161 = v131 ^ (v160 + 1992971139 - ((2 * v160) & 0xED94A706));
  v162 = (v161 - 630696036 - ((2 * v161) & 0xB4D0AF38)) ^ a62;
  v163 = ((v162 ^ a61) - 1782520382 - 2 * ((v162 ^ a61) & 0x15C0E5D3 ^ v162 & 0x11)) ^ a64;
  v164 = v132 ^ (v163 - 269301636 - ((2 * v163) & 0xDFE590F8));
  v165 = (v164 + 1640770748 - 2 * (v164 & 0x61CC2CBD ^ v161 & 1)) ^ LODWORD(STACK[0x484]);
  v166 = ((LODWORD(STACK[0x478]) << 31) | 0x4F14E000) ^ (LODWORD(STACK[0x478]) << 12);
  v167 = (v166 - 1665112971 - ((2 * v166) & 0x3980C000)) ^ LODWORD(STACK[0x338]);
  v168 = (v167 - 1652068963 - ((2 * v167) & 0x3B0EDB3A)) ^ a29;
  v169 = (v168 + 336981580 - ((2 * v168) & 0x282BDC98)) ^ LODWORD(STACK[0x344]);
  v170 = (v169 + 2118486602 - ((2 * v169) & 0xFC8B1494)) ^ LODWORD(STACK[0x324]);
  v171 = (v170 - 1208934767 - ((2 * v170) & 0x6FE23D22)) ^ LODWORD(STACK[0x474]);
  v172 = (v171 - 215858123 - ((2 * v171) & 0xE644886A)) ^ LODWORD(STACK[0x2EC]);
  v173 = (v172 - 956784420 - ((2 * v172) & 0x8DF141B8)) ^ LODWORD(STACK[0x348]);
  v174 = (v173 + 1434306544 - ((2 * v173) & 0xAAFB8FE0)) ^ LODWORD(STACK[0x328]);
  v175 = ((v174 ^ a32) + 380962793 - 2 * ((v174 ^ a32) & 0x16B507FD ^ v174 & 0x14)) ^ LODWORD(STACK[0x334]);
  v176 = (v175 + 1905352469 - ((2 * v175) & 0xE322BE2A)) ^ LODWORD(STACK[0x320]);
  v177 = (v176 - 1823642136 - ((2 * v176) & 0x269ADBD0)) ^ LODWORD(STACK[0x33C]);
  v178 = (v177 + 1685624941 - ((2 * v177) & 0xC8F130DA)) ^ LODWORD(STACK[0x330]);
  v179 = v178 + 1315557241 - ((2 * v178) & 0x9CD39EF2);
  v180 = (v156 >> 21) ^ (v156 >> 27);
  v181 = (v151 >> 27) ^ (v149 >> 30) ^ ((v151 ^ a45) >> 21);
  v182 = (2 * a119) ^ (a119 << 6) ^ (a119 << 29) ^ (4 * v156) ^ (32 * v156) ^ (v156 << 11) ^ (4 * v180) ^ (32 * v180) ^ (v180 << 11) ^ LODWORD(STACK[0x360]) ^ (4 * (v151 ^ a45)) ^ (32 * (v151 ^ a45)) ^ ((v151 ^ a45) << 11) ^ (4 * v181) ^ (32 * v181) ^ (v181 << 11) ^ (v165 + 1055882269 - ((2 * v165) & 0x7DDEF83A)) ^ LODWORD(STACK[0x2F0]);
  v183 = v143 ^ (v142 >> 21);
  v184 = v182 ^ (4 * v142) ^ (32 * v142) ^ (v142 << 11) ^ (4 * v183) ^ (32 * v183) ^ (v183 << 11) ^ v179 ^ 0x399880A6;
  v185 = a83 ^ a73 ^ (v184 - 1464073504 - ((2 * v184) & 0x517805C0));
  v186 = ((v185 ^ a117) + 162335706 - 2 * ((v185 ^ a117) & 0x9AD0BDE ^ v185 & 4)) ^ LODWORD(STACK[0x39C]);
  v187 = (v186 - 888929740 - ((2 * v186) & 0x96080468)) ^ LODWORD(STACK[0x3A0]);
  v188 = (v187 + 1464796046 - ((2 * v187) & 0xAE9E071C)) ^ a118;
  v189 = (v188 - 1992394853 - ((2 * v188) & 0x127CEF36)) ^ LODWORD(STACK[0x388]);
  v190 = (v189 + 132829738 - ((2 * v189) & 0xFD5A454)) ^ LODWORD(STACK[0x380]);
  v191 = ((v190 ^ a114) + 554271369 - 2 * ((v190 ^ a114) & 0x2109829B ^ v190 & 0x12)) ^ LODWORD(STACK[0x384]);
  v192 = (v191 - 922912071 - ((2 * v191) & 0x91FAF572)) ^ a113;
  v193 = ((v192 ^ a104) - 1479688554 - 2 * ((v192 ^ a104) & 0x27CDBE9E ^ v192 & 8)) ^ LODWORD(STACK[0x394]);
  v194 = (v193 + 1707573760 - ((2 * v193) & 0xCB8F0400)) ^ LODWORD(STACK[0x398]);
  v195 = (v194 - 1515815399 - ((2 * v194) & 0x4B4CFC32)) ^ LODWORD(STACK[0x498]);
  v196 = v156 ^ 0x3C21C363 ^ (v195 - ((2 * v195) & 0x62500FF8) + 824707068);
  v197 = v180 ^ 0x7BF9835 ^ (v196 + 129996853 - ((2 * v196) & 0xF7F30B8) + 39);
  v198 = (v197 - ((2 * v197) & 0xF6698100) - 80428928) ^ v151 ^ a45;
  v199 = v181 ^ 0x4C0C4DE4 ^ ((v198 ^ 0xFCAB848C) + 1275874776 - 2 * ((v198 ^ 0xFCAB848C) & 0x4C0C4DDB ^ v198 & 3));
  v200 = v142 ^ 0x591DFD0D ^ (v199 - ((2 * v199) & 0xA5BB7DD0) + 1390264040);
  v201 = v183 ^ 0x6C72F4D4 ^ (v200 - ((2 * v200) & 0x4BF82302) + 637276545);
  LODWORD(STACK[0x5D4]) = v201;
  v202 = STACK[0x4CC];
  v203 = LODWORD(STACK[0x4CC]) ^ 0x7C3FA49Cu;
  STACK[0x5D8] = v203;
  STACK[0x578] = v203 - 0x1E5CB771A45F5B9BLL - ((2 * (_DWORD)v203) & 0xB74148CA);
  v204 = ((4 * v202) ^ 0xF0FE9270) + 2136688531 - 2 * (((4 * v202) ^ 0xF0FE9270) & 0x7F5B479C ^ (4 * v202) & 0xC);
  LODWORD(STACK[0x5B8]) = v204;
  v205 = ((8 * v202) ^ 0xE1FD24E0) + 286116197 - ((2 * ((8 * v202) ^ 0xE1FD24E0)) & 0x221B92C0);
  LODWORD(STACK[0x5BC]) = v205;
  v206 = ((v202 << 10) ^ 0xFE927000) - 118489552 - ((2 * ((v202 << 10) ^ 0xFE927000)) & 0xF1DFF800);
  LODWORD(STACK[0x660]) = v206;
  v207 = ((v202 << 7) ^ 0x1FD24E00) - 1334929180 - ((2 * ((v202 << 7) ^ 0x1FD24E00)) & 0x60DD3100);
  LODWORD(STACK[0x670]) = v207;
  v208 = ((v202 << 13) ^ 0xF4938000) + 1189210545 - ((2 * ((v202 << 13) ^ 0xF4938000)) & 0x8DC3C000);
  LODWORD(STACK[0x64C]) = v208;
  v209 = ((v202 << 16) ^ 0xA49C0000) - 1427620225 - ((2 * ((v202 << 16) ^ 0xA49C0000)) & 0x55D00000);
  LODWORD(STACK[0x668]) = v209;
  v210 = ((v202 << 22) ^ 0x27000000) - 1545678429 - ((2 * ((v202 << 22) ^ 0x27000000)) & 0x47800000);
  LODWORD(STACK[0x650]) = v210;
  v211 = ((v202 << 25) ^ 0x38000000) - 1515396721 - ((2 * ((v202 << 25) ^ 0x38000000)) & 0x48000000);
  LODWORD(STACK[0x658]) = v211;
  v212 = ((v202 << 26) ^ 0x70000000) - 1906215805 - ((v202 << 27) & 0x18000000);
  LODWORD(STACK[0x678]) = v212;
  v213 = ((v202 << 11) ^ 0xFD24E000) - 1943089905 - ((2 * ((v202 << 11) ^ 0xFD24E000)) & 0x185D9000);
  LODWORD(STACK[0x5AC]) = v213;
  v214 = ((v202 << 18) ^ 0x92700000) + 625406815 - ((2 * ((v202 << 18) ^ 0x92700000)) & 0x4A880000);
  LODWORD(STACK[0x5A0]) = v214;
  v215 = ((v202 << 23) ^ 0x4E000000) + 887389874 - ((2 * ((v202 << 23) ^ 0x4E000000)) & 0x69000000);
  LODWORD(STACK[0x5B0]) = v215;
  v216 = ((v202 << 27) ^ 0xE0000000) + 1582031385 - ((2 * ((v202 << 27) ^ 0xE0000000)) & 0xB0000000);
  LODWORD(STACK[0x5C0]) = v216;
  v217 = STACK[0x3A8];
  v218 = (HIBYTE(LODWORD(STACK[0x3A8])) ^ 0x7C)
       + 2064310780
       - 2 * ((HIBYTE(LODWORD(STACK[0x3A8])) ^ 0x7C) & 0xFE ^ HIBYTE(LODWORD(STACK[0x3A8])) & 2);
  v219 = ((LODWORD(STACK[0x3A8]) >> 17) ^ 0x3E1F) - 70226321 - ((2 * ((LODWORD(STACK[0x3A8]) >> 17) ^ 0x3E1F)) & 0xDCDE);
  v220 = LODWORD(STACK[0x3A8]) >> 22;
  LODWORD(STACK[0x500]) = v220;
  LODWORD(STACK[0x570]) = v220 ^ 0xFBD06F9F;
  v221 = (v217 >> 30) ^ 0x9BAC348D;
  LODWORD(STACK[0x510]) = v221;
  v222 = (v217 >> 25) ^ 0x7B0AE1C2;
  LODWORD(STACK[0x63C]) = v222;
  v223 = v218 ^ v222;
  v224 = (v217 >> 29) ^ 0xA358E18D;
  LODWORD(STACK[0x508]) = v224;
  v225 = v221 ^ v224;
  LODWORD(STACK[0x560]) = v225;
  v226 = v223 ^ v225;
  v227 = v226 ^ 0x9095502F ^ ((v219 ^ v220 ^ 0xFBD06F9F) - ((2 * (v219 ^ v220 ^ 0xFBD06F9F)) & 0x50C30A5A) - 1470003923);
  v228 = (v217 >> 21) ^ 0x8E1C07FB;
  LODWORD(STACK[0x568]) = v228;
  v229 = v217;
  v230 = (v227 - 1910766566 - ((2 * v227) & 0x1C380834)) ^ v228;
  LOBYTE(v228) = v226 & 0x15;
  LOBYTE(v223) = (((2 * v223) & 0x20) + 48 + (v226 & 0x15 ^ 0xFE)) ^ 0xF;
  LOBYTE(v223) = (v223 | 0x7C) - (v223 | 0x83) - 125;
  LOBYTE(v226) = ((v226 & 0x15 ^ 0xB7 ^ v223) + (v223 ^ 0x5D) + 1) ^ ((v226 | 0xEA) + 1);
  v231 = (unint64_t)(((_DWORD)v203 + 1537254501 - ((2 * (_DWORD)v203) & 0xB74148CA)) ^ 0x5BA0A465) << ((v228 ^ (v226 - ((2 * v226) & 0xA4) - 46) ^ 0xC7) + (v223 ^ 0x5D));
  LODWORD(STACK[0x538]) = v202 >> 10;
  LODWORD(STACK[0x530]) = v217 >> 11;
  v232 = (v217 >> 14) ^ 0xF3146156;
  LODWORD(STACK[0x558]) = v232;
  v233 = (((v217 >> 11) ^ (v202 >> 10) ^ 0x10881D)
        - 216690264
        - ((2 * ((v217 >> 11) ^ (v202 >> 10) ^ 0x10881D)) & 0x2B2350)) ^ v232;
  v217 >>= 19;
  LODWORD(STACK[0x4F4]) = v217;
  v217 ^= 0x53591654u;
  LODWORD(STACK[0x548]) = v217;
  LODWORD(STACK[0x4FC]) = HIWORD(v229);
  v234 = HIWORD(v229) ^ v217 ^ (v233 - ((2 * v233) & 0x7B231334) + 1032948122) ^ 0x3D91F5A5 ^ (v230
                                                                                             + 1398348243
                                                                                             - ((2 * v230) & 0x26B233A6));
  LODWORD(STACK[0x4EC]) = v229 >> 12;
  v235 = (v229 >> 12) ^ 0x996E3BF7;
  LODWORD(STACK[0x550]) = v235;
  v236 = (v234 - 1721108467 - ((2 * v234) & 0x32D3F01A)) ^ v235;
  v237 = (v202 >> 9) ^ 0x942D3334;
  LODWORD(STACK[0x520]) = v237;
  v238 = (v236 - 1810682650 - ((2 * v236) & 0x282659CC)) ^ v237;
  LODWORD(STACK[0x4E8]) = v202 >> 7;
  v239 = (v202 >> 7) ^ 0x3312533B;
  LODWORD(STACK[0x540]) = v239;
  v240 = (v238 + 870984818 - ((2 * v238) & 0x67D458E4)) ^ v239;
  v241 = (v202 >> 8) ^ 0x4FA61FE3;
  LODWORD(STACK[0x4F8]) = v241;
  v242 = (v240 + 1339695175 - ((2 * v240) & 0x9FB4408E)) ^ v241;
  LODWORD(STACK[0x4E0]) = v202 >> 6;
  v243 = (v202 >> 6) ^ 0x20DC6EBE;
  LODWORD(STACK[0x528]) = v243;
  LODWORD(STACK[0x518]) = v202 >> 5;
  v244 = v243 ^ (v202 >> 5) ^ (v242 + 556568620 - ((2 * v242) & 0x42592058));
  LODWORD(STACK[0x4F0]) = v202 << 24;
  v245 = (32 * (v244 >> 21)) ^ (v244 >> 21 << 11) ^ 0xDD918116 ^ (v202 << 8) ^ (v202 << 15) ^ (v202 << 24) ^ ((_DWORD)v203 << 20) ^ v212 ^ v216 ^ v231 ^ (4 * v244) ^ (32 * v244) ^ (v244 << 11) ^ (4 * (v244 >> 21));
  LODWORD(STACK[0x4E4]) = v204 ^ v205;
  v246 = (v245
        + 1851166454
        - 2
        * (v245 & 0x6E568EFF ^ (v231 ^ 0x9A ^ (4 * v244) ^ (32 * v244) ^ (4 * (v244 >> 21))) & 9)) ^ v204 ^ v205;
  v247 = (v246 - 1334929180 - ((2 * v246) & 0x60DD31C8)) ^ v207;
  v248 = (v247 - 118489552 - ((2 * v247) & 0xF1DFFC60)) ^ v206;
  v249 = (v248 - 1943089905 - ((2 * v248) & 0x185D9A1E)) ^ v213;
  v250 = (v249 + 1189210545 - ((2 * v249) & 0x8DC3D362)) ^ v208;
  v251 = (v250 - 1427620225 - ((2 * v250) & 0x55D07CFE)) ^ v209;
  v252 = (v251 + 625406815 - ((2 * v251) & 0x4A8DE6BE)) ^ v214;
  v253 = (v252 - 1545678429 - ((2 * v252) & 0x47BDA346)) ^ v210;
  v254 = (v253 + 887389874 - ((2 * v253) & 0x69C8FD64)) ^ v215;
  v255 = v201 ^ v211 ^ v244 ^ (v254 - 1515396721 - ((2 * v254) & 0x4B59C31E));
  v256 = v255 ^ (v244 >> 21) ^ 0x453E19E1;
  v257 = v255 ^ (v244 >> 21);
  LODWORD(STACK[0x498]) = v257;
  v258 = ((4 * v256) ^ 0x1B7F9368) - 1609269974 - 2 * (((4 * v256) ^ 0x1B7F9368) & 0x20147D2C ^ (4 * v256) & 4);
  LODWORD(STACK[0x47C]) = v258;
  v259 = ((v256 << 10) ^ 0x7F936800) - 275449882 - ((2 * ((v256 << 10) ^ 0x7F936800)) & 0xDF29E800);
  LODWORD(STACK[0x490]) = v259;
  v260 = ((v256 << 7) ^ 0x6FF26D00) + 1279413109 - ((2 * ((v256 << 7) ^ 0x6FF26D00)) & 0x98849600);
  LODWORD(STACK[0x48C]) = v260;
  LODWORD(STACK[0x480]) = v256 >> 6;
  LODWORD(STACK[0x4DC]) = v256 >> 7;
  LODWORD(STACK[0x474]) = v256 >> 4;
  LODWORD(STACK[0x398]) = v256;
  LODWORD(STACK[0x488]) = v255;
  v261 = (v256 >> 4) ^ (v255 >> 20) ^ ((v256 >> 7) ^ (v256 >> 1) ^ 0x3E24DA4) & ((v256 >> 6) ^ 0x11B7F93) ^ ((v256 >> 7) ^ (v256 >> 1) ^ 0x23E24DA4 | (v256 >> 6) ^ 0x11B7F93);
  LODWORD(STACK[0x484]) = v261;
  v262 = ((v255 >> 31) | 0x73E1A972) ^ (v261 >> 27);
  LODWORD(STACK[0x478]) = v262;
  LODWORD(v231) = ((-2 - v259) & 0x4000000 ^ 0x7FE779FF) + 2 * ((-2 - v259) & 0x4000000);
  LODWORD(STACK[0x3A0]) = v231;
  v263 = ((v257 ^ 0x3E1FD3B) << (v262 & 3 ^ 1 | v262 & 3 ^ 2)) ^ (v256 << 8) ^ 0xDFE4DA00;
  v264 = v258 ^ v260 ^ (v263 - 1609269974 - ((2 * v263) & 0x4028FA54));
  LODWORD(STACK[0x39C]) = v264;
  v265 = ((v264 ^ 0x4C000000) & ((_DWORD)v231 - 2145876479)) == 0;
  v266 = LODWORD(STACK[0x5C8]) ^ ((a47 ^ (LODWORD(STACK[0x434]) >> 26) ^ 0x15)
                                - 1159121183
                                + ((2
                                  * ((a47 ^ (LODWORD(STACK[0x434]) >> 26) ^ 0x15 | 0x7FFFFFE1) ^ a47 ^ (LODWORD(STACK[0x434]) >> 26))) ^ 0x17)
                                + 1);
  v267 = STACK[0x2B8] << ((v266 & 0x31 ^ 0x20 | v266 & 0x31 ^ 0x91) ^ 0xBBu);
  v268 = (((LODWORD(STACK[0x434]) >> 3) ^ 0xA95D5E0)
        - 867352936
        - 2 * (((LODWORD(STACK[0x434]) >> 3) ^ 0xA95D5E0) & 0xC4D3E9E ^ (LODWORD(STACK[0x434]) >> 3) & 6)) ^ 0xCC4D3EB2 ^ v266;
  v269 = (v268 + 2088532169 - ((2 * v268) & 0xF8F8F192)) ^ LODWORD(STACK[0x2A8]);
  v270 = (v269 + 1168933234 - ((2 * v269) & 0x8B5902E4)) ^ LODWORD(STACK[0x428]);
  v271 = (v270 + 1405429925 - ((2 * v270) & 0xA78A514A)) ^ LODWORD(STACK[0x42C]);
  v272 = LODWORD(STACK[0x5F8]) ^ (v271 + 1415044310 - ((2 * v271) & 0xA8AFB9AC));
  v273 = (v272 + 1332700756 - ((2 * v272) & 0x9EDECCA8)) ^ LODWORD(STACK[0x2A4]);
  v274 = LODWORD(STACK[0x5FC]) ^ (v273 + 870084201 - ((2 * v273) & 0x67B8DCD2));
  v275 = (v274 + 471363989 - ((2 * v274) & 0x3830E32A)) ^ LODWORD(STACK[0x2A0]);
  LODWORD(v231) = LODWORD(STACK[0x600]) ^ (v275 + 539889556 - ((2 * v275) & 0x405C1F28));
  v276 = (LODWORD(STACK[0x298]) >> 28) ^ (LODWORD(STACK[0x298]) >> 27) ^ (LODWORD(STACK[0x290]) >> 2) ^ LODWORD(STACK[0x60C]);
  v277 = ((LODWORD(STACK[0x41C]) ^ 0x9FD37CD ^ v276)
        - 1455488220
        - ((2 * (LODWORD(STACK[0x41C]) ^ 0x9FD37CD ^ v276)) & 0x527E0648)) ^ LODWORD(STACK[0x28C]);
  v278 = (v277 - 1078485763 - ((2 * v277) & 0x7F6F39FA)) ^ LODWORD(STACK[0x284]);
  v279 = LODWORD(STACK[0x610]) ^ (v278 - 1861812294 - ((2 * v278) & 0x220DFF74));
  v280 = LODWORD(STACK[0x61C]) ^ ((v279 ^ 0x54A) - 811660624 - ((2 * v279) & 0x9F3E1560));
  v281 = (v280 - 1191011389 - ((2 * v280) & 0x72053786)) ^ LODWORD(STACK[0x410]);
  v282 = LODWORD(STACK[0x620]) ^ (v281 + 717831854 - ((2 * v281) & 0x55927D5C));
  v283 = (v282 >> 21) ^ (v276 >> 27);
  v284 = (LODWORD(STACK[0x280]) + 2085724261 - ((2 * LODWORD(STACK[0x280])) & 0xF8A340CA)) ^ LODWORD(STACK[0x288]);
  v285 = (v231 >> 21) ^ (v231 >> 27);
  LODWORD(v267) = (LODWORD(STACK[0x2CC]) << 29) ^ (LODWORD(STACK[0x434]) << 6) ^ (2 * LODWORD(STACK[0x434])) ^ v267 ^ (4 * v231) ^ ((_DWORD)v231 << 11) ^ (32 * v231) ^ (4 * v285) ^ (32 * v285) ^ (v285 << 11) ^ (LODWORD(STACK[0x294]) << 30) ^ LODWORD(STACK[0x4BC]) ^ (v284 + 1449052756 - ((2 * v284) & 0xACBD94A8)) ^ (4 * v282) ^ (32 * v282) ^ (v282 << 11) ^ (4 * v283) ^ (32 * v283) ^ (v283 << 11) ^ 0x3BEA4EE2;
  LODWORD(v267) = LODWORD(STACK[0x624]) ^ LODWORD(STACK[0x434]) ^ (v267 + 1420734211 - ((2 * v267) & 0xA95D5E06));
  LODWORD(v267) = (v267 - 1066362848 + (~(2 * v267) | 0x7F1ECFBF) + 1) ^ LODWORD(STACK[0x2B4]);
  LODWORD(v267) = (v267 + 1734574955 - ((2 * v267) & 0xCEC706D6)) ^ LODWORD(STACK[0x2C8]);
  LODWORD(v267) = (v267 + 1491163134 - ((2 * v267) & 0xB1C2AFFC)) ^ LODWORD(STACK[0x2C0]);
  LODWORD(v267) = ((LODWORD(STACK[0x628]) ^ (v267 + 773257545 - ((2 * v267) & 0x5C2DF292)))
                 - 1595200588
                 - 2
                 * ((LODWORD(STACK[0x628]) ^ (v267 + 773257545 - ((2 * v267) & 0x5C2DF292))) & 0x20EB2BB6 ^ (v267 + 773257545 - ((2 * v267) & 0x5C2DF292)) & 2)) ^ LODWORD(STACK[0x2AC]);
  LODWORD(v267) = (v267 + 1391680051 - ((2 * v267) & 0xA5E6B466)) ^ LODWORD(STACK[0x420]);
  LODWORD(v267) = (v267 - 1072973060 - ((2 * v267) & 0x801775F8)) ^ LODWORD(STACK[0x2B0]);
  LODWORD(v267) = ((v267 ^ LODWORD(STACK[0x29C]))
                 - 1414231860
                 - 2 * ((v267 ^ LODWORD(STACK[0x29C])) & 0x2BB488DF ^ v267 & 0x13)) ^ LODWORD(STACK[0x424]);
  LODWORD(v267) = (v267 + 1616977495 - ((2 * v267) & 0xC0C23CAE)) ^ LODWORD(STACK[0x430]);
  LODWORD(v267) = (v267 - ((2 * v267) & 0x60194A58) - 1341348564) ^ v231;
  LODWORD(v267) = ((v267 ^ 0xB5464FDC) + 1461904158 - 2 * ((v267 ^ 0xB5464FDC) & 0x5722E336 ^ v267 & 2) + 22) ^ v285;
  LODWORD(v267) = ((v267 ^ 0x5722E31E) + 450156312 - 2 * ((v267 ^ 0x5722E31E) & 0x1AD4D719 ^ v267 & 1)) ^ LODWORD(STACK[0x4C4]);
  LODWORD(v267) = (v267 - 52698766 - ((2 * v267) & 0xF9B7C2E4)) ^ LODWORD(STACK[0x414]);
  LODWORD(v267) = LODWORD(STACK[0x62C]) ^ (v267 - 392463529 - ((2 * v267) & 0xD136F6AE));
  LODWORD(v267) = (v267 + 1531634703 - ((2 * v267) & 0xB695C81E)) ^ LODWORD(STACK[0x418]);
  LODWORD(v267) = (LODWORD(STACK[0x630]) ^ v267)
                + 2008545637
                - 2 * ((LODWORD(STACK[0x630]) ^ v267) & 0x77B7F977 ^ v267 & 0x12);
  LODWORD(v267) = ((LODWORD(STACK[0x634]) ^ v267)
                 + 794671461
                 - 2 * ((LODWORD(STACK[0x634]) ^ v267) & 0x2F5DB977 ^ v267 & 0x12)) ^ LODWORD(STACK[0x4C0]);
  LODWORD(v267) = v282 ^ 0x3E9BFE9F ^ (v267 - ((2 * v267) & 0x7A0424B2) + 1023545945);
  LODWORD(v231) = (LODWORD(STACK[0x4B8]) >> 20) ^ (LODWORD(STACK[0x27C]) >> 1) ^ 0x55F1BE5B;
  LODWORD(v231) = (v231 - ((2 * v231) & 0x7EC05E52) - 1084215511) ^ LODWORD(STACK[0x3F4]);
  v286 = v231 ^ 0xB5DE18EC;
  LODWORD(v231) = ((v231 ^ 0xB5DE18EC) + 588704549 - 2 * ((v231 ^ 0xB5DE18EC) & 0x2316EB37 ^ v231 & 0x12)) ^ LODWORD(STACK[0x3DC]);
  LODWORD(v231) = (v231 + 1695296188 - ((2 * v231) & 0xCA185578)) ^ LODWORD(STACK[0x3F8]);
  v287 = (v231 + 1843997782 - ((2 * v231) & 0xDBD258AC)) ^ LODWORD(STACK[0x3F0]);
  v288 = (v287 + 967978306 - ((2 * v287) & 0x73645A84)) ^ LODWORD(STACK[0x3E8]);
  v289 = (v288 + 1288678425 - ((2 * v288) & 0x999F5832)) ^ LODWORD(STACK[0x264]);
  v290 = LODWORD(STACK[0x638]) ^ (v289 + 1131724639 - ((2 * v289) & 0x86E97EBE));
  v291 = (v290 + 1065406985 - ((2 * v290) & 0x7F01A412)) ^ LODWORD(STACK[0x3E4]);
  v292 = LODWORD(STACK[0x5E8]) ^ (v291 + 389889567 - ((2 * v291) & 0x2E7A7C3E));
  v293 = LODWORD(STACK[0x5EC]) ^ (v292 + 474399894 - (STACK[0x3E0] & (2 * v292)));
  LODWORD(v231) = a100 ^ (v286 >> 27) ^ (v231 >> 21);
  v294 = STACK[0x244];
  v295 = ((LODWORD(STACK[0x5F4]) ^ 0xB5ACAAD7) + 810786598 - ((2 * (LODWORD(STACK[0x5F4]) ^ 0xB5ACAAD7)) & 0x60A73E4C)) ^ LODWORD(STACK[0x244]);
  v296 = STACK[0x25C];
  v297 = (v295 - 684162079 - ((2 * v295) & 0xAE7107C2)) ^ LODWORD(STACK[0x25C]);
  v298 = (v297 + 517580677 - ((2 * v297) & 0x3DB34F0A)) ^ LODWORD(STACK[0x23C]);
  v299 = STACK[0x228];
  v300 = (v283 | (LODWORD(STACK[0x40C]) << 31)) ^ (LODWORD(STACK[0x27C]) << 12) ^ (4 * v231) ^ (32 * v231) ^ ((_DWORD)v231 << 11) ^ (v267 - ((2 * v267) & 0x19FB2AA) - 2133862059) ^ (4 * v293) ^ (32 * v293) ^ (v293 << 11) ^ LODWORD(STACK[0x230]) ^ LODWORD(STACK[0x228]) ^ (v298 + 680694937 - ((2 * v298) & 0x51252932)) ^ (4 * a69) ^ (32 * a69) ^ (a69 << 11) ^ (4 * a71) ^ (a71 << 11) ^ 0x9ED6D094;
  v301 = (v300 - 495065157 - ((2 * v300) & 0xC4FBCF76)) ^ LODWORD(STACK[0x4B4]);
  v302 = (v301 - 1967576381 - ((2 * v301) & 0x15725586)) ^ a99;
  v303 = ((v302 ^ a102) - 1771373524 - 2 * ((v302 ^ a102) & 0x166AFC3C ^ v302 & 0x10)) ^ LODWORD(STACK[0x274]);
  v304 = (v303 - 1983238108 - ((2 * v303) & 0x13946048)) ^ LODWORD(STACK[0x408]);
  v305 = (v304 - 1029895411 - ((2 * v304) & 0x853A161A)) ^ LODWORD(STACK[0x400]);
  v306 = (v305 - 583248050 - ((2 * v305) & 0xBA78AE9C)) ^ LODWORD(STACK[0x4B0]);
  v307 = (v306 - 529074777 - ((2 * v306) & 0xC0EDEB4E)) ^ LODWORD(STACK[0x270]);
  v308 = ((v307 ^ LODWORD(STACK[0x268])) - 1718757750 - 2 * ((v307 ^ LODWORD(STACK[0x268])) & 0x198DD69E ^ v307 & 0x14)) ^ LODWORD(STACK[0x4AC]);
  v309 = (v308 - 1250507984 - ((2 * v308) & 0x6AED8660)) ^ LODWORD(STACK[0x26C]);
  v310 = (v309 - 1006956552 - ((2 * v309) & 0x87F61FF0)) ^ LODWORD(STACK[0x4A8]);
  v311 = (v310 - 587939189 - ((2 * v310) & 0xB9E98516)) ^ LODWORD(STACK[0x404]);
  v312 = (v311 - 427744593 - ((2 * v311) & 0xCD02455E)) ^ LODWORD(STACK[0x3FC]);
  v313 = v293 ^ 0x885FD3B ^ (v312 - ((2 * v312) & 0x110A3680) + 142940992);
  v314 = (v313 - 1381061945 + (~(2 * v313) | 0xA4A2AA71) + 1) ^ v231;
  LODWORD(v267) = ((v314 ^ 0xADAEAAC7) - 1653536160 - ((2 * (v314 ^ 0xADAEAAC7)) & 0x3AE214C0)) ^ LODWORD(STACK[0x24C]);
  v315 = STACK[0x248];
  LODWORD(v267) = (v267 + 41545615 - 2 * (v267 & 0x279EF9F ^ v314 & 0x10)) ^ LODWORD(STACK[0x248]);
  v316 = STACK[0x3D4];
  v317 = (LODWORD(STACK[0x3D4]) << 23) ^ 0x87000000;
  LODWORD(v267) = (v267 ^ v317) - 1678454752 - 2 * ((v267 ^ v317) & 0x1BF4D033 ^ v267 & 0x13);
  v318 = STACK[0x250];
  LODWORD(v267) = ((LODWORD(STACK[0x250]) ^ LODWORD(STACK[0x224]) ^ v267)
                 + 1636265029
                 - 2 * ((LODWORD(STACK[0x250]) ^ LODWORD(STACK[0x224]) ^ v267) & 0x61876C4F ^ v267 & 0xA)) ^ LODWORD(STACK[0x240]);
  v319 = STACK[0x254];
  LODWORD(v267) = (v267 + 1170429070 - ((2 * v267) & 0x8B86A91C)) ^ LODWORD(STACK[0x254]);
  v320 = a69 ^ 0xAC9F26B7 ^ (v267 - ((2 * v267) & 0x5200951E) - 1459598705);
  v321 = a71 ^ 0x6F7B9479 ^ (v320 + 1870369877 - ((2 * v320) & 0xDEF728AA));
  v322 = (v321 + 452258044 - ((2 * v321) & 0x35E9D1F8)) ^ a70;
  LODWORD(STACK[0x594]) = -1673081951 * a58 + 469468063 - ((948803394 * a58 + 968328188) & 0xFE3F8342);
  LODWORD(STACK[0x588]) = -1673081951 * a59 + 469468063 - ((948803394 * a59 + 968328188) & 0xFE3F8342);
  LODWORD(STACK[0x584]) = -1673081951 * a60 + 469468063 - ((948803394 * a60 + 968328188) & 0xFE3F8342);
  LODWORD(v231) = (LODWORD(STACK[0x3C4]) >> 27) ^ (LODWORD(STACK[0x3C4]) >> 28) ^ LODWORD(STACK[0x3BC]) ^ (v316 >> 2) ^ 0x2CFB61CD;
  LODWORD(v231) = (v231 - 646465274 - ((2 * v231) & 0x32EF720C)) ^ LODWORD(STACK[0x3C8]);
  LODWORD(v231) = (v231 + 869226416 - ((2 * v231) & 0x679EAF60)) ^ LODWORD(STACK[0x3B8]);
  LODWORD(v231) = (v231 + 521153876 - ((2 * v231) & 0x3E205AA8)) ^ LODWORD(STACK[0x3B0]);
  LODWORD(v231) = LODWORD(STACK[0x640]) ^ (v231 - 869529638 - ((2 * v231) & 0x98580FB4));
  LODWORD(v231) = LODWORD(STACK[0x648]) ^ (v231 + 185747477 - ((2 * v231) & 0x1624902A));
  LODWORD(v231) = (v231 - 447102850 - ((2 * v231) & 0xCAB380FC)) ^ LODWORD(STACK[0x3AC]);
  LODWORD(v231) = LODWORD(STACK[0x5F0]) ^ (v231 + 115974212 - ((2 * v231) & 0xDD34088));
  LODWORD(v231) = LODWORD(STACK[0x5E4]) ^ (v231 + 1855213765 - ((2 * v231) & 0xDD28A18A));
  v323 = v231 ^ a74;
  LODWORD(v231) = ((v231 ^ a74) >> 21) ^ (v231 >> 27);
  LODWORD(v267) = (((32 * a103) ^ 0x2AA80 ^ (a103 << 11))
                 - ((2 * ((32 * a103) ^ 0x2AA80 ^ (a103 << 11))) & 0xD6A00)
                 + 1367782663) ^ (32 * v316) ^ (16 * v316) ^ (v316 << 30) ^ ((v316 ^ 0xB3ED870E) << (STACK[0x278] & 0x18 ^ 0x10 | STACK[0x278] & 0x18 ^ 0xB)) ^ (4 * v323) ^ (32 * v323) ^ (v323 << 11) ^ (4 * v231) ^ (32 * v231) ^ ((_DWORD)v231 << 11) ^ a106 ^ 0x6B60D9C6;
  LODWORD(v267) = (v267 + 1385139410 - ((2 * v267) & 0xA51F19A4)) ^ LODWORD(STACK[0x3C0]);
  LODWORD(v267) = (v267 + 1740609676 - ((2 * v267) & 0xCF7F3118)) ^ LODWORD(STACK[0x4A0]);
  LODWORD(v267) = (v267 + 810786598 - ((2 * v267) & 0x60A73E4C)) ^ v294;
  LODWORD(v267) = (v267 - 684162079 - ((2 * v267) & 0xAE7107C2)) ^ v296;
  LODWORD(v267) = (v267 + 20896316 - ((2 * v267) & 0x27DB478)) ^ LODWORD(STACK[0x258]);
  LODWORD(v267) = ((v267 ^ LODWORD(STACK[0x234]))
                 + 680694937
                 - 2 * ((v267 ^ LODWORD(STACK[0x234])) & 0x2892949D ^ v267 & 4)) ^ v299;
  LODWORD(v267) = ((v267 ^ LODWORD(STACK[0x220]))
                 + 41545615
                 - 2 * ((v267 ^ LODWORD(STACK[0x220])) & 0x279EF9F ^ v267 & 0x10)) ^ v315;
  LODWORD(v267) = (v267 - 1678454752 - ((2 * v267) & 0x37E9A040)) ^ v318;
  LODWORD(v267) = (v267 + 1170429070 - ((2 * v267) & 0x8B86A91C)) ^ v319;
  v324 = ((LODWORD(STACK[0x22C]) ^ v317 ^ v267)
        - 2 * ((LODWORD(STACK[0x22C]) ^ v317 ^ v267) & 0x28D10DFF ^ v267 & 0x14)
        - 1462694421) ^ v323;
  LODWORD(STACK[0x648]) = ((v324 ^ 0xA670B9A3) - 2 * ((v324 ^ 0xA670B9A3) & 0x3357253C ^ v324 & 0x18) - 1286134492) ^ v231;
  v325 = ((v322 << 11) ^ 0xF8A6F000) - 1600570399 - ((2 * ((v322 << 11) ^ 0xF8A6F000)) & 0x41327000);
  v326 = ((v322 << 13) ^ 0xE29BC000) + 1145639437 - ((2 * ((v322 << 13) ^ 0xE29BC000)) & 0x88920000);
  v327 = LOBYTE(STACK[0xDCC]);
  STACK[0x5C8] = v327;
  LOBYTE(v229) = (v327 & 0x15 ^ 5) + (v327 & 0x15 ^ 0x10);
  v328 = ((v322 << 26) ^ 0x78000000) - 662699133 - ((2 * ((v322 << 26) ^ 0x78000000)) & 0xB0000000);
  LODWORD(v231) = (v322 >> 28) ^ (v322 >> 27) ^ (v322 >> 15) ^ (v322 >> 2);
  LODWORD(STACK[0x630]) = (v322 >> 29) ^ (v322 >> 30) ^ 2;
  LODWORD(v327) = (v322 >> 29) ^ (v322 >> 30) ^ 0x18E70201 ^ v231;
  v329 = (v322 >> 21) ^ 0xF695B80F;
  LODWORD(v327) = (v327 - 157959405 - 2 * (v327 & 0xF695BB1B ^ v231 & 8)) ^ v329;
  v330 = (v322 >> 19) ^ 0xF2B7A146;
  v331 = (v322 >> 13) ^ 0x31CF8;
  LODWORD(v267) = (v322 >> 18) ^ 0x18E7;
  LODWORD(v327) = (v322 >> 14) ^ 0x18E7C ^ v330 ^ v267 ^ v331 ^ (v327 - 222843595 - ((2 * v327) & 0xE56F5A6A));
  LODWORD(v231) = (v322 >> 11) ^ 0x6F4C9089;
  v332 = (v322 >> 10) ^ 0x18E7C5 ^ v231 ^ (v322 >> 9) ^ 0x31CF8A;
  LODWORD(STACK[0x628]) = v332;
  LODWORD(v327) = v332 ^ (v327 + 1866523499 - ((2 * v327) & 0xDE81C6D6));
  v333 = v327 - 1278530495 - ((2 * v327) & 0x67965882);
  v334 = (v322 >> 6) ^ 0xB2455012;
  LODWORD(v327) = v334 ^ (v322 >> 5);
  LODWORD(STACK[0x62C]) = v327;
  v335 = v327 ^ (v322 >> 4) ^ v333;
  LODWORD(v203) = v335 ^ 0x31CF8A6;
  v336 = ((v335 ^ 0x31CF8A6) >> 21) ^ (v335 >> 27);
  v337 = (4 * v322) ^ 0x8E7C5378;
  LODWORD(STACK[0x624]) = v337;
  LODWORD(v327) = (8 * v322) ^ 0x1CF8A6F0;
  LODWORD(STACK[0x638]) = v327;
  v338 = (16 * v322) ^ (32 * v322) ^ (v322 << 17) ^ (v322 << 30) ^ v337 ^ v327 ^ ((v335 ^ 0x31CF8A6) << 11) ^ (32 * (v335 ^ 0x31CF8A6)) ^ (4 * (v335 ^ 0x31CF8A6 ^ v336));
  v339 = v322 ^ 0x639F14DE;
  STACK[0x640] = v339;
  LODWORD(STACK[0x4C4]) = v336;
  v340 = v338 ^ (32 * v336) ^ (v336 << 11) ^ (v339 << (v229 | 4)) ^ 0xF3FDDC50;
  v341 = (v340 - 1600570399 - ((2 * v340) & 0x413277C2)) ^ v325;
  v342 = (v341 + 1145639437 - ((2 * v341) & 0x8892241A)) ^ v326;
  v343 = (v322 << 14) ^ 0xC5378000;
  v344 = (v322 << 19) ^ 0xA6F00000;
  v345 = (v322 << 22) ^ 0x37800000;
  LODWORD(v339) = (v322 << 23) ^ 0x6F000000;
  LODWORD(STACK[0x634]) = v339;
  v346 = ((v322 << 18) ^ 0x53780000) + 259260786 - ((2 * ((v322 << 18) ^ 0x53780000)) & 0x1EE80000);
  v347 = v345 ^ v344 ^ v339 ^ v346 ^ ((v342 ^ v343) + 259260786 - 2 * ((v342 ^ v343) & 0xF740173 ^ v342 & 1));
  LODWORD(v339) = LODWORD(STACK[0x4C8]) ^ 0x877A193D;
  LODWORD(STACK[0x598]) = v339;
  v348 = (v322 << 27) ^ 0xF0000000;
  v349 = (v322 << 28) ^ 0xE0000000;
  v350 = v348 ^ v339 ^ v349 ^ v328 ^ (v347 - 662699133 - ((2 * v347) & 0xB1000706));
  v351 = (v350 - ((2 * v350) & 0x3750838A) - 1683471931) ^ v203;
  LODWORD(STACK[0x4C8]) = (v351 ^ 0x9D91B088) - 2 * ((v351 ^ 0x9D91B088) & 0x1A4842BA ^ v351 & 2);
  LODWORD(v203) = ((v322 << 20) ^ 0x4DE00000) - 1714586646 - ((2 * ((v322 << 20) ^ 0x4DE00000)) & 0x33800000);
  v352 = (v322 >> 25) ^ 0x9AB948C5 ^ (v322 >> 22) ^ 0x18E;
  v353 = v352 ^ (((v322 >> 20) ^ (v322 >> 1) ^ 0x31CF8C56)
               - 1699133196
               - 2 * (((v322 >> 20) ^ (v322 >> 1) ^ 0x31CF8C56) & 0x1AB948FC ^ ((v322 >> 20) ^ (v322 >> 1)) & 8));
  LODWORD(v339) = v267 ^ v329 ^ (v353 - 157959405 - ((2 * v353) & 0xED2B7626));
  LODWORD(v339) = (v339 - 222843595 - ((2 * v339) & 0xE56F5A6A)) ^ v330;
  v354 = (v322 >> 14) ^ HIWORD(v322) ^ (v322 >> 12) ^ 0x71BE1490;
  LODWORD(v339) = v354 ^ v331 ^ (v339 + 1907998850 - ((2 * v339) & 0xE3738104));
  LODWORD(v339) = (v339 + 1866523499 - ((2 * v339) & 0xDE81C6D6)) ^ v231;
  LODWORD(v231) = (v322 >> 7) ^ 0x5668F729;
  LODWORD(v339) = (v339 + 1454360832 - ((2 * v339) & 0xAD5F9200)) ^ v231;
  LODWORD(v339) = v334 ^ (v322 >> 4) ^ (v339 - 1278530495 - ((2 * v339) & 0x67965882));
  LODWORD(v267) = (v339 >> 27) ^ (v320 >> 31) ^ (v339 >> 21);
  LODWORD(STACK[0x4B8]) = v267;
  v355 = (v321 << 31) ^ (v322 << 12) ^ (4 * v339) ^ (32 * v339) ^ ((_DWORD)v339 << 11) ^ 0xE11E6494;
  v356 = v322 ^ 0x1E8C7879 ^ (v355 + 2098425000 + (~(2 * v355) | 0x5D926B1));
  v357 = (v322 << 7) ^ 0xCF8A6F00;
  v358 = (v322 << 10) ^ 0x7C537800;
  v359 = ((v358 ^ v357 ^ v356) - 1600570399 - 2 * ((v358 ^ v357 ^ v356) & 0x20993BED ^ v356 & 0xC)) ^ v325;
  v360 = (v359 + 1145639437 - ((2 * v359) & 0x8892241A)) ^ v326;
  v361 = (v322 << 16) ^ 0x14DE0000;
  v362 = ((v361 ^ v343 ^ v360) + 259260786 - 2 * ((v361 ^ v343 ^ v360) & 0xF74017A ^ v360 & 8)) ^ v346;
  v363 = ((v362 ^ v344) - 1714586646 - 2 * ((v362 ^ v344) & 0x19CD7BFF ^ v362 & 0x15)) ^ v203;
  v364 = (v322 << 21) ^ 0x9BC00000;
  v365 = (v322 << 25) ^ 0xBC000000;
  v366 = ((v365 ^ v364 ^ v363) - 662699133 - 2 * ((v365 ^ v364 ^ v363) & 0x5880038F ^ v363 & 0xC)) ^ v328;
  v367 = LODWORD(STACK[0x648]) ^ 0x741E92B9 ^ ((v366 ^ v349)
                                             + 1021232000
                                             - 2 * ((v366 ^ v349) & 0x3CDEC393 ^ v366 & 0x13));
  LODWORD(v339) = v267 ^ v339 ^ (v367 - ((2 * v367) & 0x88476434) + 1143190042);
  v368 = (((4 * v267) ^ 0xC4) + 1622801441 - ((8 * v267) & 0x3840)) ^ 0x60B9FC21;
  LODWORD(STACK[0x4B4]) = (v339 ^ 0x421A4366) + v368 - 2 * ((v339 ^ 0x421A4364) & v368);
  v369 = LODWORD(STACK[0x630]) ^ HIBYTE(v322) ^ (v322 >> 17) ^ (v322 >> 8);
  v370 = v352 ^ ((v369 ^ 0x63AEB8) - 1699133196 - 2 * ((v369 ^ 0x63AEB8) & 0x1AB948F6 ^ v369 & 2));
  v371 = (v370 - 157959405 - ((2 * v370) & 0x6D2B7626)) ^ v329;
  v372 = (v371 - 222843595 - ((2 * v371) & 0x656F5A6A)) ^ v330;
  LODWORD(v267) = v354 ^ (v372 + 1907998850 - ((2 * v372) & 0xE3738104));
  LODWORD(v267) = LODWORD(STACK[0x628]) ^ (v267 + 1866523499 - ((2 * v267) & 0xDE81C6D6));
  LODWORD(v267) = (v267 + 1454360832 - ((2 * v267) & 0xAD5F9200)) ^ v231;
  LODWORD(v267) = LODWORD(STACK[0x62C]) ^ (v267 - 1278530495 - ((2 * v267) & 0x67965882));
  LODWORD(v339) = (v322 << 24) ^ (v322 << 15) ^ v364 ^ v345 ^ LODWORD(STACK[0x638]) ^ LODWORD(STACK[0x624]) ^ v357 ^ v358 ^ (STACK[0x640] << (((v322 >> 25) & 8 ^ 8) + ((v322 >> 25) & 8))) ^ (4 * v267) ^ 0x581CE298;
  LODWORD(v339) = (v339 - 1600570399 - ((2 * v339) & 0x413277C2)) ^ v325;
  LODWORD(v339) = (v339 + 1145639437 - ((2 * v339) & 0x8892241A)) ^ v326;
  LODWORD(v339) = ((v339 ^ v361) + 259260786 - 2 * ((v339 ^ v361) & 0xF740177 ^ v339 & 5)) ^ v346;
  LODWORD(v339) = (v339 - 1714586646 - ((2 * v339) & 0x339AF7D4)) ^ v203;
  LODWORD(v339) = (v365 ^ LODWORD(STACK[0x634]) ^ v339)
                - 662699133
                - 2 * ((v365 ^ LODWORD(STACK[0x634]) ^ v339) & 0x5880038B ^ v339 & 8);
  LODWORD(v231) = LODWORD(STACK[0x3B4]) ^ 0x18583A23;
  LODWORD(STACK[0x580]) = v231;
  v373 = v267 >> 21;
  v374 = v267 ^ (32 * v267) ^ ((_DWORD)v267 << 11) ^ (4 * (v267 >> 21)) ^ (32 * (v267 >> 21)) ^ (v267 >> 21 << 11) ^ ((v348 ^ v231 ^ v328 ^ v339) - ((2 * (v348 ^ v231 ^ v328 ^ v339)) & 0xC1948D4) - 2045991830);
  v375 = STACK[0x4CC];
  v376 = ((LODWORD(STACK[0x4CC]) << 14) ^ 0xE9270000)
       + 1939461520
       - ((2 * ((LODWORD(STACK[0x4CC]) << 14) ^ 0xE9270000)) & 0xE7338000);
  LODWORD(STACK[0x610]) = v376;
  v377 = ((v375 << 20) ^ 0x49C00000) + 604432478 - ((v375 << 21) & 0x48000000);
  LODWORD(STACK[0x4C0]) = v377;
  LODWORD(v203) = ((v375 << 17) ^ 0x49380000) + 731950108 - ((2 * ((v375 << 17) ^ 0x49380000)) & 0x57400000);
  LODWORD(STACK[0x4BC]) = v203;
  v378 = ((v375 << 28) ^ 0xC0000000) + 2118263126 - 2 * ((v375 << 28) ^ 0xC0000000);
  LODWORD(STACK[0x620]) = v378;
  LODWORD(v339) = LODWORD(STACK[0x500]) ^ LODWORD(STACK[0x4F4]) ^ LODWORD(STACK[0x4EC]);
  v379 = STACK[0x3A8];
  LODWORD(v267) = LODWORD(STACK[0x3A8]) >> 31;
  LODWORD(STACK[0x500]) = v267;
  v380 = STACK[0x538];
  LODWORD(v339) = v267 ^ (v379 >> 26) ^ v339 ^ (v375 >> 3) ^ LODWORD(STACK[0x4E0]) ^ LODWORD(STACK[0x4E8]) ^ LODWORD(STACK[0x538]) ^ 0xE97B733;
  LODWORD(v339) = (v339 + 2064310780 - ((2 * v339) & 0x7615C3F8)) ^ LODWORD(STACK[0x63C]);
  LODWORD(v339) = (v339 - 1554456179 - ((2 * v339) & 0x46B1C31C) + 1) ^ LODWORD(STACK[0x508]);
  LODWORD(v339) = (v339 - 1683213172 - ((2 * v339) & 0x37586918)) ^ LODWORD(STACK[0x510]);
  v381 = (v379 >> 18) ^ 0x7A01AD84;
  LODWORD(v339) = (v339 + 2046931595 - ((2 * v339) & 0xF4036516)) ^ v381;
  v382 = (v379 >> 15) ^ 0xC773264;
  LODWORD(v339) = (v339 + 209177115 - ((2 * v339) & 0x18EF9436)) ^ v382;
  v383 = LODWORD(STACK[0x4FC]) ^ 0x6081003D;
  LODWORD(v339) = (v339 + 1619098626 - ((2 * v339) & 0xC102F804)) ^ v383;
  LODWORD(v267) = LODWORD(STACK[0x4F8]) ^ (v375 >> 4) ^ (v339 + 1339695175 - ((2 * v339) & 0x9FB4408E));
  v384 = (v267 >> 27) ^ (v267 >> 21);
  LODWORD(v231) = LODWORD(STACK[0x4F0]) ^ (v375 << 6) ^ (2 * v375) ^ ((v375 << 29) | 0x13357104) ^ (32 * v267) ^ (4 * v267);
  LODWORD(v267) = v384 ^ v267;
  LODWORD(v231) = v231 ^ ((_DWORD)v267 << 11) ^ (4 * v384) ^ (32 * v384);
  LODWORD(STACK[0x510]) = v375 ^ 0x3E2D2CD5;
  LODWORD(v231) = (v231 + 1108510793 - 2 * (v231 & 0x4212884B ^ (2 * v375) & 2)) ^ v375 ^ 0x3E2D2CD5;
  LODWORD(v231) = (v231 + 1851166454 - ((2 * v231) & 0xDCAD1DEC)) ^ LODWORD(STACK[0x4E4]);
  LODWORD(v231) = (v231 - 1334929180 - ((2 * v231) & 0x60DD31C8)) ^ LODWORD(STACK[0x670]);
  LODWORD(v231) = (v231 - 118489552 - ((2 * v231) & 0xF1DFFC60)) ^ LODWORD(STACK[0x660]);
  LODWORD(v231) = (v231 + 1189210545 - ((2 * v231) & 0x8DC3D362)) ^ LODWORD(STACK[0x64C]);
  LODWORD(v231) = (v231 + 1939461520 - ((2 * v231) & 0xE733AB20)) ^ v376;
  LODWORD(v231) = (v231 - 1427620225 - ((2 * v231) & 0x55D07CFE)) ^ LODWORD(STACK[0x668]);
  LODWORD(v231) = (v231 + 731950108 - ((2 * v231) & 0x57415838)) ^ v203;
  LODWORD(v231) = (v231 + 604432478 - ((2 * v231) & 0x480DD0BC)) ^ v377;
  LODWORD(v231) = (v231 - 1545678429 - ((2 * v231) & 0x47BDA346)) ^ LODWORD(STACK[0x650]);
  LODWORD(v231) = (v231 - 1515396721 - ((2 * v231) & 0x4B59C31E)) ^ LODWORD(STACK[0x658]);
  LODWORD(v231) = (v231 + 2118263126 - ((2 * v231) & 0xFC8442AC)) ^ v378;
  LODWORD(v231) = (v231 - 1906215805 - ((2 * v231) & 0x1CC2E906)) ^ LODWORD(STACK[0x678]);
  LODWORD(v267) = v267 ^ (v231 - ((2 * v231) & 0x5FD9598A) - 1343443771);
  LODWORD(STACK[0x4F8]) = v267;
  v385 = (STACK[0x578] ^ 0xE1A3488E5BA0A465) >> ((v267 & 0x1B ^ 9) + (v267 & 0x1B ^ 0x12));
  LODWORD(STACK[0x5E8]) = ((v375 << 19) ^ 0x24E00000) - 1740396162 - ((2 * ((v375 << 19) ^ 0x24E00000)) & 0x30800000);
  LODWORD(STACK[0x5E4]) = ((v375 << 21) ^ 0x93800000) + 934184485 - ((2 * ((v375 << 21) ^ 0x93800000)) & 0x6F400000);
  LODWORD(v385) = (v375 >> 2) ^ (v379 >> 28) ^ v385;
  LODWORD(v385) = ((v385 ^ 0x1F0FE920) + 955569410 - 2 * ((v385 ^ 0x1F0FE920) & 0x38F4D513 ^ v385 & 0x11)) ^ LODWORD(STACK[0x560]);
  v386 = STACK[0x568];
  LODWORD(v385) = (v385 - 1910766566 - ((2 * v385) & 0x1C380834)) ^ LODWORD(STACK[0x568]);
  LODWORD(v339) = STACK[0x548];
  LODWORD(v385) = (v385 + 1398348243 - ((2 * v385) & 0xA6B233A6)) ^ LODWORD(STACK[0x548]);
  v387 = STACK[0x558];
  LODWORD(v385) = (v385 - 216690264 - ((2 * v385) & 0xE62B2350)) ^ LODWORD(STACK[0x558]);
  LODWORD(v385) = (v385 + 2046931595 - ((2 * v385) & 0xF4036516)) ^ v381;
  LODWORD(v231) = (v379 >> 13) ^ 0x8A66EC19;
  LODWORD(v385) = (v385 - 1973088796 - ((2 * v385) & 0x14CA1BC8)) ^ v231;
  LODWORD(v385) = (v385 + 209177115 - ((2 * v385) & 0x18EF9436)) ^ v382;
  v388 = LODWORD(STACK[0x530]) ^ 0x90A18E0;
  LODWORD(v385) = (v385 + 151363348 - ((2 * v385) & 0x120B3E28)) ^ v388;
  LODWORD(v385) = v380 ^ 0x4DDFC80D ^ (v385 + 1304479717 + (~(2 * v385) | 0x647E7037));
  LODWORD(v385) = (v385 - 1810682650 - ((2 * v385) & 0x282659CC)) ^ LODWORD(STACK[0x520]);
  v389 = STACK[0x528];
  LODWORD(v385) = (v385 + 556568620 - ((2 * v385) & 0x42592058)) ^ LODWORD(STACK[0x528]);
  LODWORD(STACK[0x4FC]) = (v375 >> 4) ^ LODWORD(STACK[0x518]) ^ (v385 - ((2 * v385) & 0x22480DE) - 2129510289);
  LODWORD(v385) = (((v375 >> 1) ^ (v379 >> 20) ^ 0x3E1FD58D)
                 + 2064310780
                 - 2 * (((v375 >> 1) ^ (v379 >> 20) ^ 0x3E1FD58D) & 0x7B0AE1FE ^ ((v375 >> 1) ^ (v379 >> 20)) & 2)) ^ LODWORD(STACK[0x63C]);
  LODWORD(v385) = (v385 - 70226321 - ((2 * v385) & 0xF7A0DCDE)) ^ LODWORD(STACK[0x570]);
  LODWORD(v385) = (v385 - 1910766566 - ((2 * v385) & 0x1C380834)) ^ v386;
  LODWORD(v385) = (v385 + 1398348243 - ((2 * v385) & 0xA6B233A6)) ^ v339;
  LODWORD(v385) = (v385 + 2046931595 - ((2 * v385) & 0xF4036516)) ^ v381;
  LODWORD(v385) = (v385 - 216690264 - ((2 * v385) & 0xE62B2350)) ^ v387;
  LODWORD(v385) = (v385 + 1619098626 - ((2 * v385) & 0xC102F804)) ^ v383;
  LODWORD(v385) = (v385 - 1973088796 - ((2 * v385) & 0x14CA1BC8)) ^ v231;
  LODWORD(v385) = (v385 - 1721108467 - ((2 * v385) & 0x32D3F01A)) ^ LODWORD(STACK[0x550]);
  LODWORD(v385) = (v385 + 870984818 - ((2 * v385) & 0x67D458E4)) ^ LODWORD(STACK[0x540]);
  LODWORD(v385) = (v385 + 556568620 - ((2 * v385) & 0x42592058)) ^ v389;
  LODWORD(STACK[0x508]) = (v375 >> 4) ^ v388 ^ (v385 + 151363348 - ((2 * v385) & 0x120B3E28));
  v390 = v374 ^ v373;
  v391 = v374 ^ v373 ^ 0xA04EB152;
  LODWORD(STACK[0x63C]) = ((v391 << 10) ^ 0x10289800) - 110189157 - ((2 * ((v391 << 10) ^ 0x10289800)) & 0xF2DD4800);
  LODWORD(STACK[0x5F4]) = ((4 * v391) ^ 0x84102898)
                        + 1841516792
                        - 2 * (((4 * v391) ^ 0x84102898) & 0x6DC350FC ^ (4 * v391) & 4);
  LODWORD(STACK[0x5F0]) = ((8 * v391) ^ 0x8205130) + 2118499424 - ((2 * ((8 * v391) ^ 0x8205130)) & 0xFC8B78C0);
  LODWORD(STACK[0x5EC]) = ((v391 << 7) ^ 0x82051300) - 201500740 - ((2 * ((v391 << 7) ^ 0x82051300)) & 0xE7FAAF00);
  LODWORD(STACK[0x600]) = ((v391 << 22) ^ 0x89800000) - 1438550036 - ((2 * ((v391 << 22) ^ 0x89800000)) & 0x54800000);
  LODWORD(STACK[0x5FC]) = ((v391 << 16) ^ 0xA260000) - 1076458950 - ((2 * ((v391 << 16) ^ 0xA260000)) & 0x7FAC0000);
  LODWORD(STACK[0x638]) = ((v391 << 20) ^ 0xA2600000) + 732438124 - ((2 * ((v391 << 20) ^ 0xA2600000)) & 0x57400000);
  LODWORD(STACK[0x62C]) = ((v391 << 13) ^ 0x8144C000) + 717158117 - ((2 * ((v391 << 13) ^ 0x8144C000)) & 0x557DC000);
  LODWORD(STACK[0x570]) = ((v391 << 14) ^ 0x2898000) - 111489972 - ((2 * ((v391 << 14) ^ 0x2898000)) & 0xF2B58000);
  LODWORD(STACK[0x5F8]) = ((v391 << 24) ^ 0x26000000) - 402941819 - ((2 * ((v391 << 24) ^ 0x26000000)) & 0xCE000000);
  LODWORD(STACK[0x634]) = ((v391 << 25) ^ 0x4C000000) + 581916042 - ((v391 << 26) & 0x44444444);
  LODWORD(STACK[0x630]) = ((v391 << 26) ^ 0x98000000) - 1874085569 - ((2 * ((v391 << 26) ^ 0x98000000)) & 0x20000000);
  LODWORD(STACK[0x628]) = ((v391 << 28) ^ 0x60000000) + 975171408 - ((2 * ((v391 << 28) ^ 0x60000000)) & 0x60000000);
  v392 = v374 ^ v373 ^ 0x14ABB74;
  LODWORD(v339) = (v374 >> 31) ^ (v374 >> 26) ^ (v374 >> 15) ^ (v391 >> 3) ^ 0x142083D1;
  LODWORD(v339) = (v339 - 500748428 + ~((2 * v339) & 0x44E5EE6)) ^ ((v392 >> 6)
                                                                  - 500748428
                                                                  - ((2 * (v392 >> 6)) & 0x44E5EE6)
                                                                  - 1);
  v393 = (v374 >> 30) | 0x455DC54;
  LODWORD(v385) = (v339 + 72735828 - ((2 * v339) & 0x8ABB8A8)) ^ v393;
  v394 = (v374 >> 29) ^ 0x27445419;
  LODWORD(v385) = (v385 + 658789401 - ((2 * v385) & 0x4E88A832)) ^ v394;
  LODWORD(v231) = v385 + 895702289 - ((2 * v385) & 0x6AC6AA22);
  LODWORD(v385) = (v374 >> 25) ^ 0x35635511;
  v395 = (v374 >> 22) ^ 0x38341F4D;
  LODWORD(v231) = ((v231 ^ v385) + 942939976 - ((2 * (v231 ^ v385)) & 0x70683E90)) ^ v395;
  v396 = v231 - 318934121 - ((2 * v231) & 0xD9FAE72E);
  LODWORD(v231) = (v374 >> 19) ^ 0xECFD73BE;
  v397 = (v374 >> 18) ^ 0x2CA4B995;
  v398 = ((v396 ^ v231) + 748992967 - ((2 * (v396 ^ v231)) & 0x5949738E)) ^ v397;
  v399 = HIWORD(v374) ^ 0xC05B2BB4;
  v400 = (v398 - 1067767042 - ((2 * v398) & 0x80B655FC)) ^ v399;
  v401 = (v374 >> 12) ^ 0x9D6A0566;
  v402 = (v400 - 1653993011 - ((2 * v400) & 0x3AD4239A)) ^ v401;
  v403 = v402 - 484642233 - ((2 * v402) & 0xC639E48E);
  v404 = (v390 >> 10) ^ 0xE31CA0E9;
  v405 = (v403 ^ v404) + 832589847 - ((2 * (v403 ^ v404)) & 0x6340A02E);
  v406 = (v390 >> 8) ^ 0x31A11AAC;
  LODWORD(v203) = (v405 ^ v406) - 1562381479 - ((2 * (v405 ^ v406)) & 0x45BFE6B2);
  v407 = (v391 >> 7) ^ (v391 >> 4) ^ 0xA39DFB4D;
  LODWORD(STACK[0x518]) = v407 ^ v203;
  v408 = ((v407 ^ v203) >> 27) ^ ((((2 * (v392 >> 6)) & 0x44E5EE6)
                                               - ((v392 >> 6)
                                                - 500748428)) >> 30) ^ ((v407 ^ v203) >> 21);
  LODWORD(STACK[0x520]) = v408;
  LODWORD(STACK[0x624]) = ((v391 << 11) ^ 0x20513000) + 155715146 - ((2 * ((v391 << 11) ^ 0x20513000)) & 0x12900000);
  LODWORD(STACK[0x60C]) = ((v391 << 18) ^ 0x28980000) + 762206216 - ((2 * ((v391 << 18) ^ 0x28980000)) & 0x5AD80000);
  v409 = (((v374 >> 20) ^ 0x14) + 942939976 - ((v374 >> 19) & 0x1E90)) ^ v395;
  v410 = (v409 + 895702289 - ((2 * v409) & 0x6AC6AA22)) ^ v385;
  LODWORD(v203) = (v374 >> 21) ^ 0x96B92353;
  v411 = (v410 - 1766251687 - ((2 * v410) & 0x2D7246B2)) ^ v203;
  LODWORD(STACK[0x540]) = (_DWORD)v392 << (v408 & 7 ^ 1 | v408 & 7 ^ 6);
  STACK[0x538] = v392 << (((v374 >> 25) & 0x10 ^ 0x10) + ((v374 >> 25) & 0x10));
  LODWORD(v392) = (v411 - 318934121 - ((2 * v411) & 0x59FAE72E)) ^ v231;
  LODWORD(STACK[0x530]) = ((v391 << 19) ^ 0x51300000) + 762206216 - ((2 * ((v391 << 19) ^ 0x51300000)) & 0x5AD00000);
  LODWORD(STACK[0x61C]) = ((v391 << 21) ^ 0x44C00000) + 411955265 - ((2 * ((v391 << 21) ^ 0x44C00000)) & 0x31000000);
  LODWORD(v392) = (v391 >> 6) ^ (v374 >> 13) ^ (v391 >> 1) ^ (v392 + 748992967 - ((2 * v392) & 0x5949738E));
  v412 = HIWORD(v374) ^ (v374 >> 14) ^ v397 ^ v392;
  v413 = ((v412 ^ 0x52061B0E) - 1653993011 - 2 * ((v412 ^ 0x52061B0E) & 0x1D6A11DD ^ v412 & 0x10)) ^ v401;
  v414 = (v374 >> 11) ^ 0x987932D4;
  v415 = (v413 - 1736893565 - ((2 * v413) & 0x30F23706)) ^ v414;
  LODWORD(v339) = v407 ^ (v415 - 1562381479 - ((2 * v415) & 0x45BFE6B2));
  LODWORD(STACK[0x548]) = v339;
  LODWORD(STACK[0x528]) = (v339 >> 27) ^ (v392 >> 30);
  v416 = v390;
  LODWORD(v392) = HIBYTE(v374) ^ (v374 >> 17) ^ (v374 >> 14) ^ (v390 >> 9) ^ (v390 >> 6) ^ (v390 >> 5) ^ 0xFDFE5;
  v417 = (v392 + 658789401 - ((2 * v392) & 0x4E88A832)) ^ v394;
  LODWORD(v339) = (v417 + 72735828 - ((2 * v417) & 0x8ABB8A8)) ^ v393;
  LODWORD(v339) = (v339 + 895702289 - ((2 * v339) & 0x6AC6AA22)) ^ v385;
  LODWORD(v339) = (v339 + 942939976 - ((2 * v339) & 0x70683E90)) ^ v395;
  LODWORD(v339) = (v339 - 1766251687 - ((2 * v339) & 0x2D7246B2)) ^ v203;
  LODWORD(v339) = (v339 - 318934121 - ((2 * v339) & 0xD9FAE72E)) ^ v231;
  LODWORD(v339) = (v339 - 1067767042 - ((2 * v339) & 0x80B655FC)) ^ v399;
  LODWORD(v339) = (v339 - 1653993011 - ((2 * v339) & 0x3AD4239A)) ^ v401;
  LODWORD(v339) = (v339 - 1736893565 - ((2 * v339) & 0x30F23706)) ^ v414;
  LODWORD(v339) = (v339 - 484642233 - ((2 * v339) & 0xC639E48E)) ^ v404;
  LODWORD(v339) = (v391 >> 7) ^ v406 ^ (v339 + 832589847 - ((2 * v339) & 0x6340A02E));
  v418 = STACK[0x398];
  v419 = ((v418 << 11) ^ 0xFF26D000) + 1237598848 - ((2 * ((v418 << 11) ^ 0xFF26D000)) & 0x93888000);
  v420 = ((v418 << 14) ^ 0xF9368000) - 1373034717 - ((2 * ((v418 << 14) ^ 0xF9368000)) & 0x5C520000);
  LODWORD(STACK[0x550]) = v420;
  v421 = ((v418 << 13) ^ 0xFC9B4000) + 1674902039 - ((2 * ((v418 << 13) ^ 0xFC9B4000)) & 0xC7A9C000);
  v422 = ((v418 << 21) ^ 0x9B400000) + 796050676 - ((2 * ((v418 << 21) ^ 0x9B400000)) & 0x5EC00000);
  LODWORD(v385) = (32 * LODWORD(STACK[0x4B8])) ^ (LODWORD(STACK[0x4B8]) << 11);
  LODWORD(STACK[0x560]) = v416;
  LODWORD(v385) = (v385 | (v416 << 23)) ^ (v416 << 27) ^ (v391 << 15) ^ (v391 << 8) ^ LODWORD(STACK[0x4B4]) ^ (32 * v339) ^ (4 * v339) ^ ((_DWORD)v339 << 11);
  LODWORD(STACK[0x4F0]) = v339 >> 21;
  LODWORD(v385) = v385 ^ (4 * (v339 >> 21)) ^ (32 * (v339 >> 21)) ^ (v339 >> 21 << 11) ^ 0x26117B98;
  LODWORD(v385) = (v385 + 155715146 - ((2 * v385) & 0x12900C94)) ^ LODWORD(STACK[0x624]);
  LODWORD(v385) = (v385 - 110189157 - ((2 * v385) & 0xF2DD4B36)) ^ LODWORD(STACK[0x63C]);
  LODWORD(v385) = (v385 + 2118499424 - ((2 * v385) & 0xFC8B78C0)) ^ LODWORD(STACK[0x5F0]);
  LODWORD(v385) = (v385 + 1841516792 - ((2 * v385) & 0xDB86A1F0)) ^ LODWORD(STACK[0x5F4]);
  LODWORD(v385) = (v385 - 201500740 - ((2 * v385) & 0xE7FAAF78)) ^ LODWORD(STACK[0x5EC]);
  LODWORD(v385) = (v385 + 717158117 - ((2 * v385) & 0x557DEDCA)) ^ LODWORD(STACK[0x62C]);
  LODWORD(v385) = (v385 - 1076458950 - ((2 * v385) & 0x7FAD1474)) ^ LODWORD(STACK[0x5FC]);
  LODWORD(v385) = (v385 + 762206216 - ((2 * v385) & 0x5ADCB010)) ^ LODWORD(STACK[0x60C]);
  LODWORD(v385) = (v385 + 732438124 - ((2 * v385) & 0x57503CD8)) ^ LODWORD(STACK[0x638]);
  LODWORD(v385) = (v385 + 411955265 - ((2 * v385) & 0x311BE082)) ^ LODWORD(STACK[0x61C]);
  LODWORD(v385) = (v385 - 1438550036 - ((2 * v385) & 0x5482EFD8)) ^ LODWORD(STACK[0x600]);
  LODWORD(v385) = (v385 - 402941819 - ((2 * v385) & 0xCFF7310A)) ^ LODWORD(STACK[0x5F8]);
  LODWORD(v385) = (v385 + 581916042 - ((2 * v385) & 0x455EAB14)) ^ LODWORD(STACK[0x634]);
  v423 = v339 ^ LODWORD(STACK[0x630]) ^ (v385 - 1874085569 - ((2 * v385) & 0x2097727E));
  v424 = ((v418 << 18) ^ 0x93680000) - 973079255 - ((2 * ((v418 << 18) ^ 0x93680000)) & 0x8BF80000);
  v425 = ((v418 << 19) ^ 0x26D00000) + 978912358 - ((2 * ((v418 << 19) ^ 0x26D00000)) & 0x74B00000);
  v426 = ((v418 << 22) ^ 0x36800000) - 1602059580 - ((2 * ((v418 << 22) ^ 0x36800000)) & 0x41000000);
  LODWORD(STACK[0x4EC]) = v426;
  v427 = ((v418 << 28) ^ 0xA0000000) - 1285307014 - ((2 * ((v418 << 28) ^ 0xA0000000)) & 0x60000000);
  v428 = ((v418 << 23) ^ 0x6D000000) - 1860461781 - ((2 * ((v418 << 23) ^ 0x6D000000)) & 0x22222222);
  LODWORD(STACK[0x4E8]) = v428;
  v429 = ((v418 << 26) ^ 0x68000000) - 155012041 - ((2 * ((v418 << 26) ^ 0x68000000)) & 0xE8000000);
  v430 = ((v418 << 27) ^ 0xD0000000) + 1757476764 - ((2 * ((v418 << 27) ^ 0xD0000000)) & 0xD0000000);
  LODWORD(STACK[0x4F4]) = v430;
  v431 = STACK[0x488];
  v432 = (v431 >> 28) ^ (v431 >> 27) ^ (v431 >> 15) ^ (v418 >> 2) ^ LODWORD(STACK[0x474]);
  LODWORD(STACK[0x4B4]) = LODWORD(STACK[0x488]) >> 29;
  LODWORD(STACK[0x4B8]) = v418 >> 10;
  LODWORD(STACK[0x4E0]) = v418 >> 9;
  LODWORD(v339) = (v431 >> 29) ^ (v431 >> 30) ^ (v418 >> 10) ^ (v418 >> 9) ^ v432;
  v433 = (v431 >> 21) ^ 0xEB560BA4;
  LODWORD(v339) = ((v339 ^ 0x15E8D8B3) - 346682437 - 2 * ((v339 ^ 0x15E8D8B3) & 0x6B560BBF ^ v339 & 4)) ^ v433;
  LODWORD(STACK[0x4B0]) = v431 >> 19;
  v434 = (v431 >> 19) ^ 0xF2F4E143;
  LODWORD(v339) = (v339 - 218832577 - ((2 * v339) & 0xE5E9C27E)) ^ v434;
  LODWORD(v385) = (v431 >> 18) ^ 0xA60A1F69;
  LODWORD(v231) = (v339 - 1509285999 - ((2 * v339) & 0x4C143F22)) ^ v385;
  v435 = (v431 >> 14) ^ 0xEECF54C6;
  LODWORD(v231) = (v231 - 288400575 - ((2 * v231) & 0xDD9EB682)) ^ v435;
  v436 = v231 - 984580465 - ((2 * v231) & 0x8AA0FD1E);
  LODWORD(v231) = (v431 >> 13) ^ 0xC5506180;
  LODWORD(v339) = (v431 >> 11) ^ 0x449A9781;
  LODWORD(STACK[0x4AC]) = v339;
  v437 = ((v436 ^ v231) + 1151003582 - ((2 * (v436 ^ v231)) & 0x8935D77C)) ^ v339;
  LODWORD(v339) = LODWORD(STACK[0x480]) ^ (v418 >> 5) ^ 0x3212A256;
  LODWORD(STACK[0x4E4]) = v339;
  v438 = v339 ^ (v437 + 856284613 - ((2 * v437) & 0x6613BB8A));
  LODWORD(v339) = (v438 >> 21) ^ (v432 >> 27);
  LODWORD(STACK[0x568]) = v339;
  v439 = (8 * v418) ^ (16 * v418) ^ (32 * v418) ^ (v418 << 17) ^ (v418 << 30) ^ (32 * v438) ^ (4 * v438) ^ ((v438 ^ v339) << 11) ^ (4 * v339) ^ (32 * v339) ^ 0x30B44244;
  v440 = (v439 - 1609269974 - ((2 * v439) & 0x4028FA56)) ^ LODWORD(STACK[0x47C]);
  v441 = (v440 + 1237598848 - ((2 * v440) & 0x93888500)) ^ v419;
  v442 = (v441 + 1674902039 - ((2 * v441) & 0xC7A9F42E)) ^ v421;
  v443 = (v442 - 1373034717 - ((2 * v442) & 0x5C524E46)) ^ v420;
  v444 = (v443 - 973079255 - ((2 * v443) & 0x8BFFFA52)) ^ v424;
  LODWORD(STACK[0x4A8]) = v424;
  v445 = (v444 + 978912358 - ((2 * v444) & 0x74B208CC)) ^ v425;
  v446 = (v445 + 796050676 - ((2 * v445) & 0x5EE589E8)) ^ v422;
  v447 = (v446 - 1602059580 - ((2 * v446) & 0x41050588)) ^ v426;
  v448 = (v447 - 1860461781 - ((2 * v447) & 0x22373656)) ^ v428;
  v449 = (v448 - 155012041 - ((2 * v448) & 0xED85686E)) ^ v429;
  v450 = (v449 + 1757476764 - ((2 * v449) & 0xD181EF38)) ^ v430;
  v451 = (v450 - 1285307014 - ((2 * v450) & 0x66C78AF4)) ^ v427;
  v452 = LODWORD(STACK[0x4F8]) ^ 0xF341E9B ^ (v451 - ((2 * v451) & 0x4E369052) - 1491384279);
  v453 = (v452 - ((2 * v452) & 0xEE4CEC78) + 1999009340) ^ v438;
  LODWORD(STACK[0x558]) = (v453 ^ 0x7510891A) - 2 * ((v453 ^ 0x7510891A) & 0x1281B2B ^ v453 & 1);
  v454 = ((v418 << 16) ^ 0xE4DA0000) - 1236896101 - ((2 * ((v418 << 16) ^ 0xE4DA0000)) & 0x6C8C0000);
  v455 = v421 ^ v419;
  v456 = ((v418 << 25) ^ 0xB4000000) + 1449212031 - ((2 * ((v418 << 25) ^ 0xB4000000)) & 0xAC000000);
  v457 = ((v418 << 20) ^ 0x4DA00000) - 1891585476 - ((2 * ((v418 << 20) ^ 0x4DA00000)) & 0x1E800000);
  v458 = LOBYTE(STACK[0xF02]);
  LODWORD(STACK[0x578]) = v458;
  LOBYTE(v453) = ((((v458 & 4) + (v458 & 0x15 ^ 5)) | 0xE0) - ((v458 & 0x15 ^ 5) & 4)) ^ 0xF8;
  LOBYTE(v421) = (v453 | 0xE4) - (v453 | 0x1B);
  v459 = v431 >> 25;
  v460 = (v431 >> 22) ^ 0xA04F3834;
  LODWORD(v339) = ((LODWORD(STACK[0x484]) ^ v459 ^ 0x46DFE72)
                 - 1605420997
                 - 2 * ((LODWORD(STACK[0x484]) ^ v459 ^ 0x46DFE72) & 0x204F383F ^ (LODWORD(STACK[0x484]) ^ v459) & 4)) ^ v460;
  LODWORD(v339) = (v339 - 346682437 - ((2 * v339) & 0xD6AC1776)) ^ v433;
  LODWORD(v339) = (v339 - 218832577 - ((2 * v339) & 0xE5E9C27E)) ^ v434;
  LODWORD(v339) = (v339 - 1509285999 - ((2 * v339) & 0x4C143F22)) ^ v385;
  v461 = HIWORD(v431) ^ 0xA6DE605A;
  LODWORD(v339) = (v339 - 1495374917 - ((2 * v339) & 0x4DBCC776)) ^ v461;
  LODWORD(v339) = (v339 - 288400575 - ((2 * v339) & 0xDD9EB682)) ^ v435;
  LODWORD(v339) = (v339 - 984580465 - ((2 * v339) & 0x8AA0FD1E)) ^ v231;
  LODWORD(v231) = v339 + 764133141 - ((2 * v339) & 0x5B177E2A);
  v462 = (v431 >> 12) ^ 0x2D8B810A;
  v463 = v462 ^ (v431 >> 11) ^ v231;
  v464 = STACK[0x490];
  LODWORD(v231) = (((v418 << 12) ^ 0xFE4DA000 ^ (v418 << 31))
                 - 275449882
                 - ((2 * ((v418 << 12) ^ 0xFE4DA000)) & 0xDF29E000)) ^ LODWORD(STACK[0x490]);
  LODWORD(v231) = (v231 + 1279413109 - ((2 * v231) & 0x988496EA)) ^ LODWORD(STACK[0x48C]);
  v465 = STACK[0x498];
  LODWORD(v231) = LODWORD(STACK[0x498]) ^ 0x13D8D69E ^ (v231 - ((2 * v231) & 0x2072574A) + 272182181);
  LODWORD(v231) = (v231 + 705738903 - ((2 * v231) & 0x5421712E)) ^ v455;
  LODWORD(v231) = (v231 - 1236896101 - ((2 * v231) & 0x6C8CED36)) ^ v454;
  LODWORD(v231) = (v231 - 1373034717 - ((2 * v231) & 0x5C524E46)) ^ LODWORD(STACK[0x550]);
  LODWORD(v231) = (v231 - 973079255 - ((2 * v231) & 0x8BFFFA52)) ^ v424;
  LODWORD(v231) = (v231 + 978912358 - ((2 * v231) & 0x74B208CC)) ^ v425;
  LODWORD(v231) = (v231 - 1891585476 - ((2 * v231) & 0x1E816478)) ^ v457;
  LODWORD(v231) = (v231 + 1449212031 - ((2 * v231) & 0xACC270FE)) ^ v456;
  LODWORD(v231) = (v231 + 796050676 - ((2 * v231) & 0x5EE589E8)) ^ v422;
  LODWORD(v231) = (v231 - 155012041 - ((2 * v231) & 0xED85686E)) ^ v429;
  v466 = (unsigned __int16)(((v463 ^ 0x7C3Fu) >> ((v421 + 27) ^ 0xED) >> ((v421 + 27) ^ 0xF8)) ^ LODWORD(STACK[0x478]));
  v467 = STACK[0x4FC];
  v468 = (((v467 ^ 0x82F3BD4B) >> 27) | 0x2B9E740) ^ ((v467 ^ 0x82F3BD4B) >> 21);
  v469 = STACK[0x4FC];
  LODWORD(v231) = (16 * LODWORD(STACK[0x4CC])) ^ (32 * LODWORD(STACK[0x4CC])) ^ (LODWORD(STACK[0x4CC]) << 30) ^ v427 ^ (4 * v463) ^ (32 * v463) ^ (v463 << 11) ^ (v231 - 1285307014 - ((2 * v231) & 0x66C78AF4)) ^ (4 * (v467 ^ 0x82F3BD4B)) ^ ((v467 ^ 0x82F3BD4B) << 11) ^ (4 * v468) ^ (v468 << 11) ^ (32 * (v468 ^ LODWORD(STACK[0x4FC]))) ^ v466;
  v470 = (v466 ^ 0x800029F4 | 0x6A582A52) - (v466 ^ 0x800029F4 | 0x95A7D5AD) - 1784162899;
  LODWORD(STACK[0x550]) = v470;
  LODWORD(v231) = ((v231 ^ (4 * v470) ^ 0xDAB69422) + 2136688531 - ((2 * (v231 ^ (4 * v470) ^ 0xDAB69422)) & 0xFEB68F26)) ^ LODWORD(STACK[0x5B8]);
  LODWORD(v231) = (v231 + 286116197 - ((2 * v231) & 0x221B92CA)) ^ LODWORD(STACK[0x5BC]);
  v471 = STACK[0x5AC];
  LODWORD(v231) = (v231 - 1943089905 - ((2 * v231) & 0x185D9A1E)) ^ LODWORD(STACK[0x5AC]);
  v472 = STACK[0x64C];
  LODWORD(v231) = (v231 + 1189210545 - ((2 * v231) & 0x8DC3D362)) ^ LODWORD(STACK[0x64C]);
  LODWORD(v231) = (v231 + 1939461520 - ((2 * v231) & 0xE733AB20)) ^ LODWORD(STACK[0x610]);
  LODWORD(v231) = (v231 + 731950108 - ((2 * v231) & 0x57415838)) ^ LODWORD(STACK[0x4BC]);
  v473 = STACK[0x5A0];
  LODWORD(v231) = (v231 + 625406815 - ((2 * v231) & 0x4A8DE6BE)) ^ LODWORD(STACK[0x5A0]);
  LODWORD(v231) = (v231 - 1740396162 - ((2 * v231) & 0x308752FC)) ^ LODWORD(STACK[0x5E8]);
  LODWORD(v231) = (v231 + 934184485 - ((2 * v231) & 0x6F5D0C4A)) ^ LODWORD(STACK[0x5E4]);
  LODWORD(v231) = (v231 - 1545678429 - ((2 * v231) & 0x47BDA346)) ^ LODWORD(STACK[0x650]);
  LODWORD(v231) = (v231 + 887389874 - ((2 * v231) & 0x69C8FD64)) ^ LODWORD(STACK[0x5B0]);
  LODWORD(v231) = (v231 - 1906215805 - ((2 * v231) & 0x1CC2E906)) ^ LODWORD(STACK[0x678]);
  LODWORD(v231) = (v231 + 1582031385 - ((2 * v231) & 0xBC97C432)) ^ LODWORD(STACK[0x5C0]);
  LODWORD(STACK[0x650]) = a96 ^ 0x644F46CC;
  LODWORD(v231) = LODWORD(STACK[0x620]) ^ a96 ^ 0x644F46CC ^ (v231 + 2118263126 - ((2 * v231) & 0xFC8442AC));
  LODWORD(v231) = v469 ^ 0x2D77320E ^ (v231 - ((2 * v231) & 0x508EEA18) - 1471711988);
  LODWORD(STACK[0x5C0]) = v468 ^ v463 ^ (v231 - ((2 * v231) & 0x1C3CD998) - 1910608692);
  v474 = LODWORD(STACK[0x3A0]) - 4219298;
  if (!v265)
    v474 = -7433636 - LODWORD(STACK[0x3A0]);
  v475 = LODWORD(STACK[0x4B4]) ^ ((v431 >> 30) | 0x9AA626D0) ^ 0x7DF836A ^ ((HIBYTE(v431) ^ (v431 >> 17) ^ 0x1F3)
                                                                          - ((2 * (HIBYTE(v431) ^ (v431 >> 17) ^ 0x1F3)) & 0x4B74)
                                                                          - 1652972102);
  v476 = v459 ^ 0xBA14 ^ (v475 - 17900 - ((2 * v475) & 0x742A) + 1);
  v477 = (v476 + 14395 - ((2 * v476) & 0x7076)) ^ v460;
  v478 = v433 ^ LODWORD(STACK[0x4B0]) ^ (v477 + 3003 - ((2 * v477) & 0x1776));
  v479 = ((v478 ^ (v465 >> 8) ^ 0x3E181)
        - 1495374917
        - 2 * ((v478 ^ (v465 >> 8) ^ 0x3E181) & 0xDE63BF ^ (v478 ^ (v465 >> 8)) & 4)) ^ v461;
  v480 = (v479 - 288400575 - ((2 * v479) & 0x5D9EB682)) ^ v435;
  v481 = (v480 + 764133141 - ((2 * v480) & 0x5B177E2A)) ^ v462;
  v482 = (v481 + 1151003582 - ((2 * v481) & 0x8935D77C)) ^ LODWORD(STACK[0x4AC]);
  v483 = LODWORD(STACK[0x4B8]) ^ 0xDE25F0EB ^ (v482 - ((2 * v482) & 0xBC688E24) - 566999278);
  v484 = (v483 - ((2 * v483) & 0xD1AC850) + 109929512) ^ LODWORD(STACK[0x4E0]);
  v485 = (v465 << 24) ^ (v418 << 15) ^ v456 ^ v429 ^ v464 & 0xFBFFFC00 ^ 0x825A7848 ^ ((LODWORD(STACK[0x39C]) ^ 0x4C424B75)
                                                                                     - 2141657181
                                                                                     + v474);
  v486 = (v485 + 705738903 - ((2 * v485) & 0x5421712E)) ^ v455;
  v487 = (v486 - 1236896101 - ((2 * v486) & 0x6C8CED36)) ^ v454;
  v488 = (v487 - 973079255 - ((2 * v487) & 0x8BFFFA52)) ^ LODWORD(STACK[0x4A8]);
  v489 = (v488 - 1891585476 - ((2 * v488) & 0x1E816478)) ^ v457;
  v490 = (v489 + 796050676 - ((2 * v489) & 0x5EE589E8)) ^ v422;
  v491 = (v490 - 1602059580 - ((2 * v490) & 0x41050588)) ^ LODWORD(STACK[0x4EC]);
  v492 = (v491 - 1860461781 - ((2 * v491) & 0x22373656)) ^ LODWORD(STACK[0x4E8]);
  v493 = ((v484 ^ 0x6AE0BDA) + 1287432013 + ~(2 * ((v484 ^ 0x6AE0BDA) & 0x4CBCA74D ^ v484 & 1))) ^ LODWORD(STACK[0x4DC]);
  v494 = LODWORD(STACK[0x4E4]) ^ ((v493 ^ 0x4C311885) + 856284613 - 2 * ((v493 ^ 0x4C311885) & 0x3309DDE5 ^ v493 & 0x20));
  v495 = v423 ^ LODWORD(STACK[0x4F0]);
  v496 = v495 ^ 0x142081E;
  v497 = v496 + 0x3B295E330B360946 - ((2 * (_DWORD)v496) & 0x166C128C);
  v498 = ((4 * (v495 ^ 0x70FE794B)) ^ 0xC6F1C554)
       + 1284039746
       - ((2 * ((4 * (v495 ^ 0x70FE794B)) ^ 0xC6F1C554)) & 0x9911C880);
  v499 = v496 >> (v478 & 0x1E ^ 2 | v478 & 0x1E ^ 0x1C);
  v500 = (((v495 ^ 0x70FE794B) << 11) ^ 0xE38AA800)
       - 1447115743
       - ((2 * (((v495 ^ 0x70FE794B) << 11) ^ 0xE38AA800)) & 0x537D8000);
  LODWORD(STACK[0x5B8]) = v500;
  v501 = (((v495 ^ 0x70FE794B) << 13) ^ 0x8E2AA000)
       + 1605465485
       - ((2 * (((v495 ^ 0x70FE794B) << 13) ^ 0x8E2AA000)) & 0xBF62C000);
  LODWORD(STACK[0x5BC]) = v501;
  v502 = STACK[0x508];
  v503 = LODWORD(STACK[0x500]) ^ (LODWORD(STACK[0x508]) >> 21) ^ (LODWORD(STACK[0x508]) >> 27);
  v504 = ((LODWORD(STACK[0x4CC]) << 31) | 0x3BAC32FE) ^ (LODWORD(STACK[0x4CC]) << 12) ^ (4 * LODWORD(STACK[0x508])) ^ (32 * LODWORD(STACK[0x508])) ^ (v503 | (LODWORD(STACK[0x508]) << 11)) ^ (4 * v503) ^ (32 * v503) ^ (v503 << 11) ^ LODWORD(STACK[0x4F4]) ^ (v492 + 1757476764 - ((2 * v492) & 0xD181EF38)) ^ (4 * v494) ^ (v494 << 11) ^ (32 * v494) ^ (v494 >> 21) ^ (32 * (v494 >> 21)) ^ (v494 >> 21 << 11) ^ (((4 * (v494 >> 21)) ^ 0x44) - ((2 * ((4 * (v494 >> 21)) ^ 0x44)) & 0x1F28) - 1061466219);
  v505 = (v504 + 1108510793 - ((2 * v504) & 0x84251092)) ^ LODWORD(STACK[0x510]);
  v506 = (v505 - 1334929180 - ((2 * v505) & 0x60DD31C8)) ^ LODWORD(STACK[0x670]);
  v507 = (v506 - 118489552 - ((2 * v506) & 0xF1DFFC60)) ^ LODWORD(STACK[0x660]);
  v508 = (v507 - 1943089905 - ((2 * v507) & 0x185D9A1E)) ^ v471;
  v509 = (v508 + 1189210545 - ((2 * v508) & 0x8DC3D362)) ^ v472;
  v510 = (v509 + 1939461520 - ((2 * v509) & 0xE733AB20)) ^ LODWORD(STACK[0x610]);
  v511 = (v510 - 1427620225 - ((2 * v510) & 0x55D07CFE)) ^ LODWORD(STACK[0x668]);
  v512 = (v511 + 625406815 - ((2 * v511) & 0x4A8DE6BE)) ^ v473;
  v513 = (v512 - 1740396162 - ((2 * v512) & 0x308752FC)) ^ LODWORD(STACK[0x5E8]);
  v514 = (v513 + 934184485 - ((2 * v513) & 0x6F5D0C4A)) ^ LODWORD(STACK[0x5E4]);
  v515 = (v514 + 604432478 - ((2 * v514) & 0x480DD0BC)) ^ LODWORD(STACK[0x4C0]);
  v516 = (v515 - 1515396721 - ((2 * v515) & 0x4B59C31E)) ^ LODWORD(STACK[0x658]);
  v517 = (v516 + 2118263126 - ((2 * v516) & 0xFC8442AC)) ^ LODWORD(STACK[0x620]);
  LODWORD(v496) = LODWORD(STACK[0x3A4]) ^ 0x4314D381;
  LODWORD(STACK[0x658]) = v496;
  v518 = LODWORD(STACK[0x678]) ^ v496 ^ (v517 - 1906215805 - ((2 * v517) & 0x1CC2E906));
  LODWORD(STACK[0x660]) = v518 - ((2 * v518) & 0xCB41B03A);
  LODWORD(STACK[0x678]) = v494 ^ v502;
  v519 = (((v495 ^ 0x70FE794B) << 18) ^ 0xC5540000)
       - 2059937660
       - ((2 * (((v495 ^ 0x70FE794B) << 18) ^ 0xC5540000)) & 0xA680000);
  v520 = (((v495 ^ 0x70FE794B) << 21) ^ 0x2AA00000)
       - 526850992
       - ((2 * (((v495 ^ 0x70FE794B) << 21) ^ 0x2AA00000)) & 0xC1000000);
  v521 = (((v495 ^ 0x70FE794B) << 22) ^ 0x55400000)
       + 1657036975
       - ((2 * (((v495 ^ 0x70FE794B) << 22) ^ 0x55400000)) & 0xC5800000);
  LODWORD(STACK[0x5E8]) = v521;
  v522 = (((v495 ^ 0x70FE794B) << 26) ^ 0x54000000)
       - 880237772
       - ((2 * (((v495 ^ 0x70FE794B) << 26) ^ 0x54000000)) & 0x90000000);
  LODWORD(STACK[0x620]) = v522;
  v523 = (((v495 ^ 0x70FE794B) << 23) ^ 0xAA800000)
       - 1095304079
       - ((2 * (((v495 ^ 0x70FE794B) << 23) ^ 0xAA800000)) & 0x7D000000);
  LODWORD(STACK[0x610]) = v523;
  v524 = v497 ^ 0x3B295E330B360946;
  v525 = (v423 >> 18) ^ (v423 >> 13) ^ (v423 >> 28) ^ (v423 >> 27) ^ (v423 >> 19) ^ (v423 >> 15) ^ ((v495 ^ 0x70FE794B) >> 2) ^ ((v495 ^ 0x70FE794B) >> 4);
  LODWORD(v497) = v525 ^ (v423 >> 29) ^ v499 ^ (unsigned __int16)((v497 ^ 0x3B295E330B360946uLL) >> ((v498 & 0xA0) + (v498 & 0xA0 ^ 0xA0) + 117));
  LODWORD(v497) = (v423 >> 14) ^ 0x4A22EA72 ^ ((v497 ^ 0x1B74D3AC)
                                             + 1243802226
                                             - 2 * ((v497 ^ 0x1B74D3AC) & 0x4A22EF7B ^ v497 & 1)
                                             + 1288);
  v526 = (v423 >> 11) ^ ((v495 ^ 0x70FE794B) >> 10) ^ 0x75FCCCA6;
  LODWORD(STACK[0x64C]) = v526;
  v527 = (v497 + 1977650171 - ((2 * v497) & 0xEBC117F6)) ^ v526;
  LODWORD(v496) = (v495 >> 9) ^ 0xF4BF829F;
  v528 = (v527 - 188800101 + (~(2 * v527) | 0x1681B8C9) + 1) ^ v496;
  v529 = v528 - 769306994 - ((2 * v528) & 0xA44A9D1C);
  v530 = 8 * (v495 ^ 0x70FE794B);
  v531 = (32 * (v495 ^ 0x70FE794B)) ^ (16 * (v495 ^ 0x70FE794B)) ^ ((v495 ^ 0x70FE794B) << 14) ^ ((v495 ^ 0x70FE794B) << 17) ^ ((v495 ^ 0x70FE794B) << 19) ^ ((v495 ^ 0x70FE794B) << 28) ^ ((v495 ^ 0x70FE794B) << 30) ^ v530 ^ 0xC5FDF558;
  v532 = (v531 + 1284039746 - ((2 * v531) & 0x9911C884)) ^ v498;
  v533 = (v532 - 1447115743 - ((2 * v532) & 0x537D8842)) ^ v500;
  v534 = (v533 + 1605465485 - ((2 * v533) & 0xBF62EB1A)) ^ v501;
  v535 = (v534 - 2059937660 - ((2 * v534) & 0xA6FB108)) ^ v519;
  v536 = (v535 - 526850992 - ((2 * v535) & 0xC131C8A0)) ^ v520;
  v537 = (v536 + 1657036975 - ((2 * v536) & 0xC588C15E)) ^ v521;
  v538 = (v537 - 1095304079 - ((2 * v537) & 0x7D6DF8E2)) ^ v523;
  v539 = (v538 - 880237772 - ((2 * v538) & 0x97114668)) ^ v522;
  v540 = v539 + 83461471 - ((2 * v539) & 0x9F30ABE);
  v541 = (v495 >> 6) ^ ((v495 ^ 0x70FE794B) >> 5) ^ 0xD22046AE;
  v542 = v541 ^ v529;
  v543 = (v542 >> 21) ^ (v525 >> 27);
  v544 = (((v495 ^ 0x70FE794B) << 27) ^ 0xACF98568) - 9;
  v545 = STACK[0x518];
  v546 = STACK[0x520];
  v547 = (2 * v391) ^ (v391 << 6) ^ (v391 << 17) ^ (v391 << 29) ^ (4 * LODWORD(STACK[0x518])) ^ (32
                                                                                               * LODWORD(STACK[0x518])) ^ (LODWORD(STACK[0x518]) << 11) ^ (4 * LODWORD(STACK[0x520])) ^ (32 * LODWORD(STACK[0x520])) ^ (LODWORD(STACK[0x520]) << 11) ^ v544 ^ (4 * v542) ^ (32 * v542) ^ (v542 << 11) ^ (4 * v543) ^ v540;
  v548 = (v530 ^ 0x8DE38AA8) + 1175524412 - ((2 * (v530 ^ 0x8DE38AA8)) & 0x8C222870);
  v549 = ((v498 ^ v548 ^ 0xF5660F81) + (v548 ^ 0x4611143D)) ^ ((v498 ^ 0xB3771BBD) + 1);
  v550 = (v549 + 1284039746 - ((2 * v549) & 0x9911C884)) ^ v498;
  LODWORD(STACK[0x670]) = v543;
  v551 = (32 * v543) ^ (v543 << 11) ^ 0x2F9F4C94 ^ v547;
  v552 = v551 - 641485708 - 2 * (v551 & 0x59C3B47D ^ v547 & 9);
  v553 = STACK[0x560];
  v554 = LODWORD(STACK[0x560]) ^ 0xD8890F00;
  v555 = ((v552 ^ v554) + 1841516792 - ((2 * (v552 ^ v554)) & 0xDB86A1F0)) ^ LODWORD(STACK[0x5F4]);
  v556 = (v555 + 2118499424 - ((2 * v555) & 0xFC8B78C0)) ^ LODWORD(STACK[0x5F0]);
  v557 = (v556 - 201500740 - ((2 * v556) & 0xE7FAAF78)) ^ LODWORD(STACK[0x5EC]);
  LODWORD(v497) = STACK[0x63C];
  v558 = (v557 - 110189157 - ((2 * v557) & 0xF2DD4B36)) ^ LODWORD(STACK[0x63C]);
  v559 = STACK[0x62C];
  v560 = (v558 + 717158117 - ((2 * v558) & 0x557DEDCA)) ^ LODWORD(STACK[0x62C]);
  v561 = STACK[0x570];
  v562 = (v560 - 111489972 - ((2 * v560) & 0xF2B59898)) ^ LODWORD(STACK[0x570]);
  v563 = (v562 - 1076458950 - ((2 * v562) & 0x7FAD1474)) ^ LODWORD(STACK[0x5FC]);
  v564 = (v563 - 1438550036 - ((2 * v563) & 0x5482EFD8)) ^ LODWORD(STACK[0x600]);
  v565 = STACK[0x638];
  v566 = (v564 + 732438124 - ((2 * v564) & 0x57503CD8)) ^ LODWORD(STACK[0x638]);
  v567 = (v566 - 402941819 - ((2 * v566) & 0xCFF7310A)) ^ LODWORD(STACK[0x5F8]);
  v568 = STACK[0x634];
  v569 = (v567 + 581916042 - ((2 * v567) & 0x455EAB14)) ^ LODWORD(STACK[0x634]);
  v570 = STACK[0x630];
  v571 = (v569 - 1874085569 - ((2 * v569) & 0x2097727E)) ^ LODWORD(STACK[0x630]);
  v572 = (v571 + 975171408 - ((2 * v571) & 0x743FDEA0)) ^ LODWORD(STACK[0x628]);
  v573 = v545 ^ a15 ^ (v572 - ((2 * v572) & 0x56673672) - 1422681287);
  v574 = (v573 + 101124864 - ((2 * v573) & 0xC0E1600)) ^ v546;
  v575 = v542 ^ 0xF383770F ^ ((v574 ^ 0x6070B51) - 2 * ((v574 ^ 0x6070B51) & 0x700E94A5 ^ v574 & 0x20) - 267479931);
  LODWORD(STACK[0x668]) = v575 - ((2 * v575) & 0x17A57C44);
  v576 = v550 + (v548 ^ 0x4611143C);
  v577 = (v423 >> 30) ^ (v423 >> 25) ^ HIBYTE(v423) ^ (v423 >> 22) ^ ((v423 >> 29) | 0x8844D2A0);
  v578 = ((v495 ^ 0x70FE794B) << 8) ^ ((v495 ^ 0x70FE794B) << 7) ^ ((v495 ^ 0x70FE794B) << 10) ^ ((v495 ^ 0x70FE794B) << 15) ^ ((v495 ^ 0x70FE794B) << 16) ^ ((((v495 ^ 0x70FE794B) << 20) ^ 0x15500000) - 526850992 - ((2 * (((v495 ^ 0x70FE794B) << 20) ^ 0x15500000)) & 0xC1200000)) ^ v520 ^ v576;
  v579 = (v495 << 24) ^ (v495 << 25) ^ 0xF8732B80 ^ v578;
  v580 = (v579 - 1447115743 - 2 * (v579 & 0x29BEC43D ^ v578 & 0x1C)) ^ LODWORD(STACK[0x5B8]);
  v581 = (v580 + 1605465485 - ((2 * v580) & 0xBF62EB1A)) ^ LODWORD(STACK[0x5BC]);
  v582 = (v581 - 2059937660 - ((2 * v581) & 0xA6FB108)) ^ v519;
  v583 = (v582 + 1657036975 - ((2 * v582) & 0xC588C15E)) ^ LODWORD(STACK[0x5E8]);
  v584 = (v583 - 1095304079 - ((2 * v583) & 0x7D6DF8E2)) ^ LODWORD(STACK[0x610]);
  v585 = (v423 >> 17) ^ (v423 >> 21) ^ HIWORD(v423) ^ (v423 >> 12) ^ (v423 >> 14) ^ (v495 >> 8) ^ (v495 >> 7) ^ v577 ^ (unsigned __int16)(v524 >> ((v577 & 0x13 ^ 0x13) + (v577 & 0x13))) ^ 0x8847047D;
  v586 = (v585 + 1977650171 - ((2 * v585) & 0x6BC117F6)) ^ LODWORD(STACK[0x64C]);
  v587 = (v586 - 188800101 - ((2 * v586) & 0x697E4736)) ^ v496;
  v588 = (v584 - 880237772 - ((2 * v584) & 0x97114668)) ^ LODWORD(STACK[0x620]);
  v589 = v587 - 769306994 - ((2 * v587) & 0x244A9D1C);
  v590 = v588 + 83461471 - ((2 * v588) & 0x9F30ABE);
  v591 = v541 ^ v589;
  v592 = LODWORD(STACK[0x660]) - 442443747;
  v593 = LODWORD(STACK[0x678]) ^ v592;
  v594 = LODWORD(STACK[0x678]) ^ ~v592;
  v595 = LODWORD(STACK[0x528]) ^ (LODWORD(STACK[0x548]) >> 21);
  LODWORD(v496) = (LODWORD(STACK[0x4C4]) | (v553 << 31)) ^ (v391 << 12) ^ STACK[0x538] ^ LODWORD(STACK[0x530]) ^ LODWORD(STACK[0x60C]) ^ (4 * LODWORD(STACK[0x548])) ^ (32 * LODWORD(STACK[0x548])) ^ (LODWORD(STACK[0x548]) << 11);
  v596 = STACK[0x548];
  v597 = LODWORD(STACK[0x4C8]) - 1706540360;
  LODWORD(v496) = v496 ^ (4 * v595) ^ (32 * v595) ^ (v595 << 11) ^ LODWORD(STACK[0x540]) ^ v544 ^ (4 * v591) ^ (32 * v591) ^ (v591 << 11);
  LODWORD(STACK[0x620]) = v591 >> 21;
  LODWORD(v496) = v496 ^ (4 * (v591 >> 21)) ^ (32 * (v591 >> 21)) ^ (v591 >> 21 << 11) ^ v597 ^ 0x2233E399 ^ v590;
  LODWORD(v496) = (v496 - 641485708 - ((2 * v496) & 0xB38768E8)) ^ v554;
  LODWORD(v496) = (v496 - 110189157 - ((2 * v496) & 0xF2DD4B36)) ^ v497;
  LODWORD(v496) = (v496 + 155715146 - ((2 * v496) & 0x12900C94)) ^ LODWORD(STACK[0x624]);
  LODWORD(v496) = (v496 + 717158117 - ((2 * v496) & 0x557DEDCA)) ^ v559;
  LODWORD(v496) = (v496 - 111489972 - ((2 * v496) & 0xF2B59898)) ^ v561;
  LODWORD(v496) = (v496 + 732438124 - ((2 * v496) & 0x57503CD8)) ^ v565;
  LODWORD(v496) = (v496 + 411955265 - ((2 * v496) & 0x311BE082)) ^ LODWORD(STACK[0x61C]);
  LODWORD(v496) = (v496 + 581916042 - ((2 * v496) & 0x455EAB14)) ^ v568;
  LODWORD(v496) = (v496 - 1874085569 - ((2 * v496) & 0x2097727E)) ^ v570;
  LODWORD(v496) = (v496 + 975171408 - ((2 * v496) & 0x743FDEA0)) ^ LODWORD(STACK[0x628]);
  LODWORD(v496) = v596 ^ 0xCD3828A4 ^ (v496 - ((2 * v496) & 0x8E50D00C) - 953653242);
  v598 = v591 ^ v595 ^ (v496 - ((2 * v496) & 0xC5A0C022) + 1657823249);
  v599 = ((4 * v593) ^ 0x815775C8) + 1642741143 - ((2 * ((4 * v593) ^ 0x815775C8)) & 0xC3D47B28);
  LODWORD(STACK[0x624]) = v599;
  v600 = ((v593 << 7) ^ 0x2AEEB900) - 1907633185 - ((2 * ((v593 << 7) ^ 0x2AEEB900)) & 0x1C97A700);
  v601 = ((8 * v593) ^ 0x2AEEB90) - 1955670112 - ((2 * ((8 * v593) ^ 0x2AEEB90)) & 0x16DDAF40);
  LODWORD(STACK[0x628]) = v601;
  v602 = ((v593 << 14) ^ 0x775C8000) + 475016144 - ((2 * ((v593 << 14) ^ 0x775C8000)) & 0x38A00000);
  LODWORD(STACK[0x5F4]) = v602;
  v603 = ((v593 << 13) ^ 0xBBAE4000) + 199765129 - ((2 * ((v593 << 13) ^ 0xBBAE4000)) & 0x17D04000);
  LODWORD(STACK[0x5EC]) = v603;
  LODWORD(STACK[0x5FC]) = ((v593 << 16) ^ 0xDD720000) - 766887807 - ((2 * ((v593 << 16) ^ 0xDD720000)) & 0xA4940000);
  v604 = ((v593 << 10) ^ 0x5775C800) - 1268253538 - ((2 * ((v593 << 10) ^ 0x5775C800)) & 0x68CFF800);
  LODWORD(STACK[0x5E8]) = v604;
  LODWORD(STACK[0x638]) = v593 << 27;
  LODWORD(STACK[0x5F8]) = ((v593 << 26) ^ 0xC8000000) - 1541045120 - ((v593 << 27) & 0x48000000);
  v605 = ((v593 << 22) ^ 0x5C800000) + 1337322410 - ((2 * ((v593 << 22) ^ 0x5C800000)) & 0x9F000000);
  LODWORD(STACK[0x678]) = v605;
  LODWORD(STACK[0x63C]) = v594 >> 31;
  v606 = ((v593 >> 18) ^ (v593 >> 26) ^ 0x382D ^ (v594 >> 31))
       + 948395778
       - ((2 * ((v593 >> 18) ^ (v593 >> 26) ^ 0x382D)) & 0x3E04);
  v607 = ((v593 ^ 0x54A75594) >> 30) | 0x38875F00;
  LODWORD(STACK[0x610]) = v607;
  v608 = (v606 ^ v607) - 1763049283 - ((2 * (v606 ^ v607)) & 0x2DD4017A);
  v609 = ((v593 ^ 0x54A75594) >> 29) | 0x96EA00B8;
  LODWORD(STACK[0x60C]) = v609;
  v610 = (v593 >> 25) ^ 0xF6EC76AD;
  v611 = ((v608 ^ v609) - 152275235 - ((2 * (v608 ^ v609)) & 0x6DD8EDBA)) ^ v610;
  v612 = (v593 >> 19) ^ 0x3DDF18DD;
  LODWORD(STACK[0x600]) = v612;
  v613 = (v611 + 1038025943 - ((2 * v611) & 0x7BBE09AE)) ^ v612;
  v614 = (v593 >> 22) ^ 0x55E80F67;
  v615 = v614 ^ HIWORD(v593) ^ (v613 + 1441271014 - ((2 * v613) & 0x2BD019CC));
  v616 = (unint64_t)(v593 ^ 0xE055DD72) << ((v615 & 0x14 ^ 0x14) + (v615 & 0x14u));
  v617 = ((v593 << 25) ^ 0xE4000000) - 606965136 - ((2 * ((v593 << 25) ^ 0xE4000000)) & 0xB4000000);
  LODWORD(STACK[0x5F0]) = v617;
  v618 = (((v593 >> 15) ^ (v593 >> 3) ^ 0x1C0B7B05)
        - ((2 * ((v593 >> 15) ^ (v593 >> 3) ^ 0x1C0B7B05)) & 0x1F9CB9AE)
        + 1338924247) ^ 0x4FCEBC82 ^ v615;
  v619 = (v593 >> 12) ^ 0xE5B5F1E1;
  v620 = (v618 - 440666948 - ((2 * v618) & 0xCB77E978)) ^ v619;
  v621 = (v593 >> 10) ^ 0xBD77FC62;
  LODWORD(STACK[0x634]) = v621;
  v622 = (v620 - 1118836459 - ((2 * v620) & 0x7A9FD22A)) ^ v621;
  v623 = (v593 >> 8) ^ 0x8B05A8DC;
  LODWORD(STACK[0x630]) = v623;
  v624 = (v622 - 1947861759 - ((2 * v622) & 0x17CBFA02)) ^ v623;
  LODWORD(STACK[0x62C]) = v593 >> 7;
  v625 = (v593 >> 7) ^ 0xE24D5EA;
  v626 = v625 ^ (v593 >> 4) ^ (v624 + 266632784 - ((2 * v624) & 0x1FC8FCA0));
  LODWORD(v496) = ((v593 << 24) ^ 0x72000000) - 411817196 - ((2 * ((v593 << 24) ^ 0x72000000)) & 0xCE000000);
  LODWORD(STACK[0x61C]) = v496;
  v627 = ((v593 << 28) ^ 0x20000000) + 1909638656 - 2 * ((v593 << 28) ^ 0x20000000);
  v628 = (v593 >> 6) ^ 0x544B78B4;
  v629 = v626 ^ v628;
  v630 = ((v626 ^ v628) >> 21) ^ (v626 >> 27);
  LODWORD(STACK[0x660]) = v630;
  v631 = (2 * v593) ^ (v593 << 6) ^ (v593 << 29) ^ v605 ^ ((v616 ^ (v593 << 17) ^ 0xBAE40000)
                                                         + 1337322410
                                                         - 2
                                                         * ((v616 ^ (v593 << 17) ^ 0xBAE40000) & 0x4FB5EBBA ^ v616 & 0x10)) ^ ((v626 ^ v628) << 11) ^ (32 * (v626 ^ v628)) ^ (4 * (v626 ^ v628 ^ 0xF53AC9CB)) ^ (v630 << 11) ^ (32 * v630) ^ (4 * v630) ^ 0x6462D10C;
  v632 = (v631 - 1259173658 - 2 * (v631 & 0x34F288E7 ^ v616 & 1)) ^ v593 ^ 0x54A75594;
  v633 = (v632 + 1642741143 - ((2 * v632) & 0xC3D47B2E)) ^ v599;
  v634 = (v633 - 1955670112 - ((2 * v633) & 0x16DDAF40)) ^ v601;
  v635 = (v634 - 1907633185 - ((2 * v634) & 0x1C97A7BE)) ^ v600;
  v636 = (v635 - 1268253538 - ((2 * v635) & 0x68CFF93C)) ^ v604;
  v637 = (v636 + 199765129 - ((2 * v636) & 0x17D05912)) ^ v603;
  v638 = (v637 + 475016144 - ((2 * v637) & 0x38A057A0)) ^ v602;
  v639 = STACK[0x5FC];
  v640 = (v638 - 766887807 - ((2 * v638) & 0xA4947102)) ^ LODWORD(STACK[0x5FC]);
  v641 = (v640 - 411817196 - ((2 * v640) & 0xCEE85628)) ^ v496;
  v642 = (v641 - 606965136 - ((2 * v641) & 0xB7A4E4E0)) ^ v617;
  v643 = STACK[0x5F8];
  v644 = (v642 - 1541045120 - ((2 * v642) & 0x484B0900)) ^ LODWORD(STACK[0x5F8]);
  v645 = (v644 + 1909638656 - ((2 * v644) & 0xE3A58C00)) ^ v627;
  v646 = (v645 - (a14 & (2 * v645)) - 1393181731) ^ v629 ^ 0xF53AC9CB;
  LODWORD(STACK[0x64C]) = v646 - ((2 * v646) & 0x6148E984);
  v647 = ((v593 << 11) ^ 0xAEEB9000) + 513369849 - ((2 * ((v593 << 11) ^ 0xAEEB9000)) & 0x3D32C000);
  LODWORD(STACK[0x5E4]) = ((v593 << 21) ^ 0xAE400000) + 1027915627 - ((2 * ((v593 << 21) ^ 0xAE400000)) & 0x7A800000);
  v648 = ((v593 << 20) ^ 0xD7200000) - 1923749474 - ((2 * ((v593 << 20) ^ 0xD7200000)) & 0x1AA00000);
  v649 = (v593 >> 13) ^ (v593 >> 20) ^ (v593 >> 1) ^ (v593 >> 18) ^ 0x702DDA07;
  v650 = (v649 - 152275235 - ((2 * v649) & 0xEDD8EDBA)) ^ v610;
  v651 = (v650 + 1441271014 - ((2 * v650) & 0xABD019CC)) ^ v614;
  v652 = (v593 >> 21) ^ 0x6DE03B40;
  v653 = (v651 + 1843412034 - ((2 * v651) & 0xDBC07884)) ^ v652;
  LODWORD(v616) = STACK[0x600];
  v654 = (v653 + 1038025943 - ((2 * v653) & 0x7BBE09AE)) ^ LODWORD(STACK[0x600]);
  v655 = HIWORD(v593) ^ 0xF3048EE6;
  v656 = (v654 - 217813325 - ((2 * v654) & 0xE608DD66)) ^ v655;
  v657 = (v593 >> 14) ^ 0x8ECF74A9;
  LODWORD(v524) = (v656 - 1899170306 - ((2 * v656) & 0x1D99EBFC)) ^ v657;
  v658 = (v524 - 440666948 - ((2 * v524) & 0xCB77E978)) ^ v619;
  v659 = (v658 + 266632784 - ((2 * v658) & 0x1FC8FCA0)) ^ v625;
  v660 = (v593 >> 11) ^ 0x55B2BCC7;
  v661 = (v659 + 1437513340 - ((2 * v659) & 0xAB5D6CF8)) ^ v660;
  LODWORD(v496) = v628 ^ (v593 >> 4) ^ (v661 - ((2 * v661) & 0xAF945F82) + 1472868289);
  v662 = LODWORD(STACK[0x63C]) ^ (v496 >> 21) ^ (v496 >> 27);
  v663 = (32 * v662) ^ (v662 << 11) ^ 0x90F4C961 ^ (LODWORD(STACK[0x558]) - 2128078038) ^ LODWORD(STACK[0x568]) ^ (v593 << 12) ^ (v593 << 19) ^ (v593 << 31) ^ (v593 << 18) ^ (4 * v496) ^ (32 * v496) ^ ((_DWORD)v496 << 11) ^ (4 * v662);
  v664 = v639;
  LODWORD(v524) = (v663
                 - 766887807
                 - 2
                 * (v663 & 0x524A389B ^ (((LOBYTE(STACK[0x558]) + 42) ^ LOBYTE(STACK[0x568]) ^ (4 * v496) ^ (32 * v496)) ^ (4 * v662)) & 0x1A)) ^ v639;
  LODWORD(v524) = (v524 - 1907633185 - ((2 * v524) & 0x1C97A7BE)) ^ v600;
  v665 = (v524 - 1259173658 - ((2 * v524) & 0x69E511CC)) ^ v593 ^ 0x54A75594;
  v666 = STACK[0x5E8];
  v667 = (v665 - 1268253538 - ((2 * v665) & 0x68CFF93C)) ^ LODWORD(STACK[0x5E8]);
  v668 = (v667 + 513369849 - ((2 * v667) & 0x3D32CDF2)) ^ v647;
  v669 = STACK[0x5EC];
  v670 = (v668 + 199765129 - ((2 * v668) & 0x17D05912)) ^ LODWORD(STACK[0x5EC]);
  v671 = (v670 + 475016144 - ((2 * v670) & 0x38A057A0)) ^ LODWORD(STACK[0x5F4]);
  v672 = (v671 - 1923749474 - ((2 * v671) & 0x1AABD33C)) ^ v648;
  v673 = STACK[0x5E4];
  v674 = (v672 + 1027915627 - ((2 * v672) & 0x7A897ED6)) ^ LODWORD(STACK[0x5E4]);
  v675 = STACK[0x5F0];
  v676 = (v674 - 606965136 - ((2 * v674) & 0xB7A4E4E0)) ^ LODWORD(STACK[0x5F0]);
  v677 = (v676 - 1541045120 - ((2 * v676) & 0x484B0900)) ^ v643;
  v678 = (v677 + 1909638656 - ((2 * v677) & 0xE3A58C00)) ^ v627;
  v679 = v662 ^ v496 ^ (v678 - ((2 * v678) & 0x732DA83C) + 966186014);
  LODWORD(STACK[0x63C]) = v679;
  LODWORD(v496) = HIBYTE(v593) ^ (v593 >> 17) ^ (v593 >> 9);
  LODWORD(v496) = ((v496 ^ 0x705A24) + 948395778 - 2 * ((v496 ^ 0x705A24) & 0x75F13 ^ v496 & 0x11)) ^ LODWORD(STACK[0x610]);
  LODWORD(v496) = (v496 - 1763049283 - ((2 * v496) & 0x2DD4017A)) ^ LODWORD(STACK[0x60C]);
  LODWORD(v496) = (v496 - 152275235 - ((2 * v496) & 0x6DD8EDBA)) ^ v610;
  LODWORD(v496) = (v496 + 1441271014 - ((2 * v496) & 0xABD019CC)) ^ v614;
  LODWORD(v496) = (v496 + 1843412034 - ((2 * v496) & 0xDBC07884)) ^ v652;
  LODWORD(v496) = (v496 + 1038025943 - ((2 * v496) & 0x7BBE09AE)) ^ v616;
  LODWORD(v496) = (v496 - 217813325 - ((2 * v496) & 0xE608DD66)) ^ v655;
  v680 = (v496 - 1899170306 - ((2 * v496) & 0x1D99EBFC)) ^ v657;
  v681 = (v680 - 440666948 - ((2 * v680) & 0xCB77E978)) ^ v619;
  v682 = (v681 + 1437513340 - ((2 * v681) & 0xAB5D6CF8)) ^ v660;
  v683 = (v682 - 1118836459 - ((2 * v682) & 0x7A9FD22A)) ^ LODWORD(STACK[0x634]);
  v684 = LODWORD(STACK[0x630]) ^ LODWORD(STACK[0x62C]) ^ (v683 - 1947861759 - ((2 * v683) & 0x17CBFA02));
  v685 = (v684 & 0xFAC5116C ^ (v593 >> 6) & 0x2C5116C | v684 & 0x53AEE93 ^ (v593 >> 6) & 0x13AEE93) ^ (v593 >> 5);
  v686 = (v593 << 8) ^ (v593 << 15) ^ (v593 << 23) ^ (v593 << 18) ^ LODWORD(STACK[0x638]) ^ (4 * v685) ^ (LODWORD(STACK[0x550]) << 11) ^ STACK[0x5C0] & 0xFF7FFFFF ^ (~LODWORD(STACK[0x5C0]) & 0x800000 | (32 * LODWORD(STACK[0x550]))) ^ 0xF0C5379D;
  v687 = (v686 + 1642741143 - ((2 * v686) & 0xC3D47B2E)) ^ LODWORD(STACK[0x624]);
  v688 = (v687 - 1955670112 - ((2 * v687) & 0x16DDAF40)) ^ LODWORD(STACK[0x628]);
  v689 = (v688 - 1907633185 - ((2 * v688) & 0x1C97A7BE)) ^ (((v593 << 7) ^ 0x2AEEB900)
                                                          - 1907633185
                                                          - ((2 * ((v593 << 7) ^ 0x2AEEB900)) & 0x1C97A700));
  v690 = (v689 - 1268253538 - ((2 * v689) & 0x68CFF93C)) ^ v666;
  v691 = (v690 + 513369849 - ((2 * v690) & 0x3D32CDF2)) ^ v647;
  v692 = (v691 + 199765129 - ((2 * v691) & 0x17D05912)) ^ v669;
  v693 = (v692 - 766887807 - ((2 * v692) & 0xA4947102)) ^ v664;
  v694 = (v693 - 1923749474 - ((2 * v693) & 0x1AABD33C)) ^ v648;
  v695 = (v694 + 1337322410 - ((2 * v694) & 0x9F6BD754)) ^ LODWORD(STACK[0x678]);
  v696 = (v695 + 1027915627 - ((2 * v695) & 0x7A897ED6)) ^ v673;
  v697 = (v696 - 411817196 - ((2 * v696) & 0xCEE85628)) ^ LODWORD(STACK[0x61C]);
  v698 = (v697 - 606965136 - ((2 * v697) & 0xB7A4E4E0)) ^ v675;
  v699 = (v698 - 1541045120 - ((2 * v698) & 0x484B0900)) ^ v643;
  v700 = v685 ^ (v685 << 11) ^ (32 * v685) ^ (v699 - ((2 * v699) & 0xA407FC16) - 771490293);
  v685 >>= 21;
  LODWORD(STACK[0x638]) = (((32 * v685) ^ 0x540) - ((2 * ((32 * v685) ^ 0x540)) & 0xAF00) + 1683838866) ^ (v685 << 11) ^ ((unint64_t)(v685 ^ 0x2A) << (((v679 & 0x62 ^ 0x42) + (v679 & 0x62 ^ 0x20)) & 0x9F));
  v701 = STACK[0x620];
  LODWORD(v496) = v598 ^ LODWORD(STACK[0x620]);
  v702 = (((v496 ^ 0xB7C25F79) << 13) ^ 0xFB95C000)
       + 2052320837
       - ((2 * (((v496 ^ 0xB7C25F79) << 13) ^ 0xFB95C000)) & 0xF4A7C000);
  v703 = (((v496 ^ 0xB7C25F79) << 14) ^ 0xF72B8000)
       + 976150300
       - ((2 * (((v496 ^ 0xB7C25F79) << 14) ^ 0xF72B8000)) & 0x745D8000);
  v704 = (((v496 ^ 0xB7C25F79) << 20) ^ 0xCAE00000)
       - 1301171927
       - ((2 * (((v496 ^ 0xB7C25F79) << 20) ^ 0xCAE00000)) & 0x64E00000);
  v705 = (v496 ^ 0xB7C25F79) << 29;
  v706 = (((v496 ^ 0xB7C25F79) << 28) ^ 0xE0000000) - 1786732873 - (v705 & 0x20000000);
  v707 = (((v496 ^ 0xB7C25F79) << 25) ^ 0x5C000000)
       + 335299680
       - ((2 * (((v496 ^ 0xB7C25F79) << 25) ^ 0x5C000000)) & 0x24000000);
  LODWORD(v616) = (v598 >> 12) ^ 0x251EB626;
  LODWORD(v497) = (v598 >> 30) ^ (v598 >> 31) ^ (v598 >> 29) ^ (v598 >> 26) ^ v616 ^ ((v496 ^ 0xB7C25F79) >> 3) ^ ((v496 ^ 0xB7C25F79) >> 8) ^ ((v496 ^ 0xB7C25F79) >> 10) ^ (((v598 >> 15) ^ 0xC2BB) + 622371838 - ((2 * ((v598 >> 15) ^ 0xC2BB)) & 0x147FC));
  v708 = (v497 ^ 0x1A30C3A4) + 1274418609 - 2 * ((v497 ^ 0x1A30C3A4) & 0x4BF615B3 ^ v497 & 2);
  LODWORD(v497) = (v598 >> 25) ^ 0x4BF61581;
  v709 = v598 >> 22;
  v710 = (v598 >> 22) ^ 0xB1D5C296 ^ ((v708 ^ v497) - 1311391082 - ((2 * (v708 ^ v497)) & 0x63AB8626) + 125);
  v711 = v598 >> 19;
  v712 = (v598 >> 19) ^ 0xA4E395C0 ^ (v710 - 1528588864 - ((2 * v710) & 0x49C733D6) + 1067);
  LODWORD(v524) = v598 >> 18;
  v713 = (v598 >> 18) ^ 0xD36DF83F ^ (v712 - ((2 * v712) & 0xA6DBC0D0) - 747773848);
  v714 = HIWORD(v598) ^ 0x82BC76D4;
  v715 = (v713 - 2101602423 - ((2 * v713) & 0x5782F12)) ^ v714;
  v716 = (v496 >> 7) ^ 0x1A7FFABE;
  v717 = (v715 + 448610745 - ((2 * v715) & 0x357A8372)) ^ v716;
  v718 = ((v496 ^ 0xB7C25F79) << 16) ^ ((v496 ^ 0xB7C25F79) << 26);
  v719 = v496 ^ (8 * (v496 ^ 0xB7C25F79)) ^ (4 * (v496 ^ 0xB7C25F79)) ^ ((v496 ^ 0xB7C25F79) << 6) ^ ((v496 ^ 0xB7C25F79) << 17) ^ ((v496 ^ 0xB7C25F79) << 22) ^ ((v496 ^ 0xB7C25F79) << 24) ^ v718 ^ v705 ^ (((2 * (v496 ^ 0xB7C25F79)) ^ 0xAD3FB95C) + 518893835 - ((2 * ((2 * (v496 ^ 0xB7C25F79)) ^ 0xAD3FB95C)) & 0x3DDB6214));
  v720 = (v496 >> 6) ^ ((v496 ^ 0xB7C25F79) >> 4) ^ 0x696FEEFD;
  v721 = v720 ^ (v717 + 1760205042 - ((2 * v717) & 0xD1D531E4));
  v722 = (v721 >> 27) ^ (v721 >> 21);
  v723 = v719 ^ (32 * v721) ^ (4 * v721) ^ (v721 << 11) ^ (4 * v722) ^ (32 * v722) ^ (v722 << 11) ^ 0x79C1CC14;
  v724 = ((v496 ^ 0xB7C25F79) << 10) ^ ((v496 ^ 0xB7C25F79) << 7) ^ 0x66A04043;
  v725 = (v723 + 1446817603 - ((2 * v723) & 0xAC795E86)) ^ v724;
  v726 = (v725 + 2052320837 - ((2 * v725) & 0xF4A7DC8A)) ^ v702;
  v727 = (v726 + 976150300 - ((2 * v726) & 0x745DBE38)) ^ v703;
  v728 = (v727 - 1301171927 - ((2 * v727) & 0x64E36252)) ^ v704;
  v729 = (v728 + 335299680 - ((2 * v728) & 0x27F888C0)) ^ v707;
  v730 = (v729 - 1786732873 - ((2 * v729) & 0x2B013D6E)) ^ v706;
  LODWORD(STACK[0x678]) = v722 ^ v721 ^ (v730 - ((2 * v730) & 0x1DB9BBF0) + 249355768);
  v731 = v598 ^ ~v701;
  v732 = (v598 >> 21) ^ (v598 >> 20) ^ (v598 >> 14) ^ (v598 >> 13) ^ (v598 >> 11) ^ (v496 >> 1);
  LODWORD(v497) = ((v711 ^ v524 ^ v709 ^ 0x30A07527 ^ v732)
                 + 1274418609
                 - ((2 * (v711 ^ v524 ^ v709 ^ 0x30A07527 ^ v732)) & 0x97EC2B62)) ^ v497;
  LODWORD(v497) = (v497 - 2101602423 - ((2 * v497) & 0x5782F12)) ^ v714;
  LODWORD(v616) = (v497 + 622371838 - ((2 * v497) & 0x4A3147FC)) ^ v616;
  LODWORD(v616) = (v616 + 448610745 - ((2 * v616) & 0x357A8372)) ^ v716;
  LODWORD(v616) = v720 ^ (v616 + 1760205042 - ((2 * v616) & 0xD1D531E4));
  v733 = LODWORD(STACK[0x638]) ^ v700;
  v734 = (v733 >> 30) ^ (v700 >> 29);
  LODWORD(STACK[0x638]) = v734;
  v735 = (v616 >> 27) ^ (v732 >> 30) ^ (v616 >> 21);
  v736 = LODWORD(STACK[0x670]) ^ (LODWORD(STACK[0x668]) + 198360610) ^ (v731 << 31) ^ ((v496 ^ 0xB7C25F79) << 12) ^ ((v496 ^ 0xB7C25F79) << 11) ^ ((v496 ^ 0xB7C25F79) << 18) ^ ((v496 ^ 0xB7C25F79) << 19) ^ ((v496 ^ 0xB7C25F79) << 21) ^ v718 ^ (4 * v616) ^ (32 * v616) ^ ((_DWORD)v616 << 11) ^ (4 * v735) ^ (32 * v735) ^ (v735 << 11) ^ 0xB92E6CBD;
  LODWORD(v496) = v496 ^ 0x7FB032DC ^ (v736 + 518893835 - ((2 * v736) & 0x3DDB6216));
  LODWORD(v496) = (v496 + 1446817603 - ((2 * v496) & 0xAC795E86)) ^ v724;
  LODWORD(v496) = (v496 + 2052320837 - ((2 * v496) & 0xF4A7DC8A)) ^ v702;
  LODWORD(v496) = (v496 + 976150300 - ((2 * v496) & 0x745DBE38)) ^ v703;
  LODWORD(v496) = (v496 - 1301171927 - ((2 * v496) & 0x64E36252)) ^ v704;
  LODWORD(v496) = (v496 + 335299680 - ((2 * v496) & 0x27F888C0)) ^ v707;
  LODWORD(v496) = (v496 - 1786732873 - ((2 * v496) & 0x2B013D6E)) ^ v706;
  LODWORD(STACK[0x670]) = v735 ^ v616 ^ (v496 - ((2 * v496) & 0xAEECDE22) - 680104175);
  v737 = v733 ^ v685;
  v738 = (v737 ^ 0xFDE0A103) << 11;
  v739 = (v738 ^ 0x3B70A000) - 1060849437 - ((2 * (v738 ^ 0x3B70A000)) & 0x81897000);
  LODWORD(v616) = (((v737 ^ 0xFDE0A103) << 13) ^ 0xEDC28000)
                - 2147174912
                - ((2 * (((v737 ^ 0xFDE0A103) << 13) ^ 0xEDC28000)) & 0x94000);
  v740 = (((v737 ^ 0xFDE0A103) << 18) ^ 0xB8500000)
       + 1269246160
       - ((2 * (((v737 ^ 0xFDE0A103) << 18) ^ 0xB8500000)) & 0x97480000);
  v741 = (((v737 ^ 0xFDE0A103) << 22) ^ 0x85000000)
       + 86856495
       - ((2 * (((v737 ^ 0xFDE0A103) << 22) ^ 0x85000000)) & 0xA000000);
  v742 = (((v737 ^ 0xFDE0A103) << 23) ^ 0xA000000)
       + 2104076349
       - ((2 * (((v737 ^ 0xFDE0A103) << 23) ^ 0xA000000)) & 0xFA000000);
  v743 = (((v737 ^ 0xFDE0A103) << 27) ^ 0xA0000000)
       - 490347538
       - ((((v737 ^ 0xFDE0A103) << 27) ^ 0xA0000000) >> 29 << 30);
  v744 = (v733 >> 15) ^ (v733 >> 18) ^ (v733 >> 27) ^ (v733 >> 28) ^ (v733 >> 13) ^ ((v737 ^ 0xFDE0A103) >> 4) ^ ((v737 ^ 0xFDE0A103) >> 2);
  v745 = (v733 >> 21) ^ 0x54D4D642;
  LODWORD(v496) = ((v734 ^ 0x30C1A1EF ^ v744) + 1423234637 - 2 * ((v734 ^ 0x30C1A1EF ^ v744) & 0x54D4D65D ^ v744 & 0x10)) ^ v745;
  v746 = (v733 >> 19) ^ 0x6C32948D;
  LODWORD(v496) = (v496 + 1815254193 - ((2 * v496) & 0xD8652962)) ^ v746;
  v747 = (v733 >> 14) ^ 0xBA8D14A1;
  v748 = (v496 - 1165159618 - ((2 * v496) & 0x751A267C)) ^ v747;
  v749 = (v733 >> 11) ^ 0x305AE274;
  v750 = (v748 + 811261581 - ((2 * v748) & 0x60B5BD1A)) ^ v749;
  v751 = (v737 >> 10) ^ 0x53357EBD;
  v752 = (v750 + 1395984206 - ((2 * v750) & 0xA66A0E9C)) ^ v751;
  v753 = v752 - ((2 * v752) & 0x33D994A2) + 434948689;
  v754 = (v737 ^ 0xFDE0A103) >> 9;
  v755 = (v754 ^ 0x1992C9E6 ^ v753) - 1633672185 - ((2 * (v754 ^ 0x1992C9E6 ^ v753)) & 0x3D40480E);
  LODWORD(v524) = (v737 >> 6) ^ 0x9EA7BB3B;
  v756 = (v737 ^ 0xFDE0A103) >> 5;
  v757 = v756 ^ v524 ^ v755;
  v758 = (v738 & 0xFC377800 ^ 0x38302000) + (((v737 ^ 0xFDE0A103) << 10) ^ 0x63A3EFDF);
  v759 = (v757 >> 21) ^ (v744 >> 27);
  v760 = (LODWORD(STACK[0x64C]) - 1331399486) ^ LODWORD(STACK[0x660]) ^ (32 * (v737 ^ 0xFDE0A103)) ^ (16 * (v737 ^ 0xFDE0A103)) ^ ((v737 ^ 0xFDE0A103) << 14) ^ ((v737 ^ 0xFDE0A103) << 17) ^ ((v737 ^ 0xFDE0A103) << 19) ^ ((v737 ^ 0xFDE0A103) << 21) ^ ((v737 ^ 0xFDE0A103) << 26) ^ ((v737 ^ 0xFDE0A103) << 28) ^ ((v737 ^ 0xFDE0A103) << 30) ^ (4 * v757) ^ (32 * v757) ^ (v759 | (v757 << 11)) ^ (4 * v759);
  v761 = (32 * v759) ^ (v759 << 11) ^ 0xB7EF99F0 ^ v760;
  v762 = v761 + 1762614721 - 2 * (v761 & 0x690F5DCF ^ v760 & 0xE);
  v763 = (8 * (v737 ^ 0xFDE0A103)) ^ (4 * (v737 ^ 0xFDE0A103));
  v764 = ((v763 ^ 0x79299531 ^ v762) - 2147174912 - ((2 * (v763 ^ 0x79299531 ^ v762)) & 0x96C00)) ^ v616;
  v765 = (v764 - 1060849437 - ((2 * v764) & 0x818971C6)) ^ v739;
  v766 = (v765 + 1269246160 - ((2 * v765) & 0x974E51A0)) ^ v740;
  v767 = (v766 + 86856495 - ((2 * v766) & 0xA5AA65E)) ^ v741;
  v768 = (v767 + 2104076349 - ((2 * v767) & 0xFAD3507A)) ^ v742;
  LODWORD(STACK[0x668]) = v757 ^ v743 ^ (v768 - 490347538 - ((2 * v768) & 0xC58BC7DC));
  v769 = ((v737 ^ 0xFDE0A103) << 7) ^ ((v737 ^ 0xFDE0A103) << 8) ^ v763;
  v770 = LODWORD(STACK[0x638]) ^ (v733 >> 25);
  LODWORD(v497) = (v737 << 25) ^ (v737 << 26) ^ (v737 << 24) ^ 0x5D5E0000 ^ ((v737 ^ 0xFDE0A103) << 16) ^ ((v737 ^ 0xFDE0A103) << 15) ^ ((v737 ^ 0xFDE0A103) << 20) ^ ((v737 ^ 0x1E7CF17) << (v770 & 0x15 ^ 0x14 | v770 & 0x15 ^ 1)) ^ (v758 + (v769 ^ 0x14FFD6F0) - 2 * ((v758 + 31735841) & (v769 ^ 0x14FFD400)) - 2115747807);
  v771 = (v497
        - 1060849437
        - 2
        * (v497 & 0x40C4B8E7 ^ (((v737 ^ 0x17) << (v770 & 0x15 ^ 0x14 | v770 & 0x15 ^ 1)) ^ (v758 + (v769 ^ 0xF0) - 2 * ((v758 + 33) & v769) + 33)) & 4)) ^ v739;
  v772 = (v771 - 2147174912 - ((2 * v771) & 0x96C00)) ^ v616;
  v773 = (v772 + 1269246160 - ((2 * v772) & 0x974E51A0)) ^ v740;
  v774 = (v773 + 86856495 - ((2 * v773) & 0xA5AA65E)) ^ v741;
  v775 = (v774 + 2104076349 - ((2 * v774) & 0xFAD3507A)) ^ v742;
  v776 = (v775 - 490347538 - ((2 * v775) & 0xC58BC7DC)) ^ v743;
  v777 = (v776 - ((2 * v776) & 0xCEBFF13A) - 413140835) ^ LODWORD(STACK[0x63C]);
  v778 = a13 ^ HIBYTE(v733) ^ (v733 >> 22) ^ (v733 >> 17) ^ (v733 >> 12) ^ (v737 >> 8) ^ (v737 >> 7);
  v779 = (v778 - 1633672185 - ((2 * v778) & 0x3D40480E)) ^ v524;
  v780 = (v779 - ((2 * v779) & 0x7F81262A) + 2143326997) ^ v756;
  v781 = v770 ^ 0x1DBBCEF ^ ((v780 ^ 0x7820A865) + 31177964 - 2 * ((v780 ^ 0x7820A865) & 0x1DBBCFE ^ v780 & 0x12));
  v782 = (v781 + 1423234637 - ((2 * v781) & 0xA9A9AC9A)) ^ v745;
  v783 = (v782 + 1815254193 - ((2 * v782) & 0xD8652962)) ^ v746;
  LODWORD(STACK[0x64C]) = HIWORD(v733);
  v784 = HIWORD(v733) ^ 0x9C792DF0 ^ (v783 - 1669780457 - ((2 * v783) & 0x38F2582E));
  v785 = (v784 - 1165159618 - ((2 * v784) & 0x751A267C)) ^ v747;
  v786 = (v785 + 811261581 - ((2 * v785) & 0x60B5BD1A)) ^ v749;
  LODWORD(v496) = v754 ^ v751 ^ (v786 + 1395984206 - ((2 * v786) & 0xA66A0E9C));
  v787 = LODWORD(STACK[0x454]) - ((2 * LODWORD(STACK[0x454]) + 848388356) & 0xB561307E);
  LODWORD(v524) = STACK[0x238];
  v788 = (LODWORD(STACK[0x238]) ^ LODWORD(STACK[0x584]))
       + 82200130
       - ((2 * (LODWORD(STACK[0x238]) ^ LODWORD(STACK[0x584]))) & 0x9CC8C84);
  v789 = LODWORD(STACK[0x450]) - ((2 * LODWORD(STACK[0x450]) + 2054029266) & 0xB561307E) - 1746429912;
  v790 = LODWORD(STACK[0x678]) ^ 0xD905B867;
  LODWORD(STACK[0x5C0]) = v790;
  LODWORD(STACK[0x69C]) = -75026750 - 2009212831 * (v790 ^ v789);
  LODWORD(STACK[0x698]) = -75026750 - 2009212831 * (v790 ^ (v787 + 1945716929));
  v791 = (v524 ^ LODWORD(STACK[0x588])) + 82200130 - ((2 * (v524 ^ LODWORD(STACK[0x588]))) & 0x9CC8C84);
  v792 = LODWORD(STACK[0x668]) ^ 0x7E03B70;
  v793 = -75026750 - 2009212831 * (v792 ^ (LODWORD(STACK[0x438]) - 19202626));
  LODWORD(STACK[0x6B8]) = -75026750 - 2009212831 * (v792 ^ (LODWORD(STACK[0x44C]) - 989054623));
  LODWORD(STACK[0x6BC]) = v793;
  v794 = v777 ^ v496;
  v795 = LODWORD(STACK[0x670]) ^ 0xDEF9D4F3;
  v796 = -75026750
       - 2009212831
       * (v795 ^ ((v524 ^ LODWORD(STACK[0x594])) + 82200130 - ((2 * (v524 ^ LODWORD(STACK[0x594]))) & 0x9CC8C84)));
  LODWORD(STACK[0x6D8]) = -75026750 - 2009212831 * (v795 ^ v788);
  *((_DWORD *)&STACK[0x698] + ((v777 ^ v496) & 0x11 ^ 0x10 | (v777 ^ v496) & 0x11 ^ 1)) = -75026750 - 2009212831 * (v795 ^ v791);
  v797 = (LODWORD(STACK[0x680]) + 267);
  STACK[0x680] = v797;
  LODWORD(STACK[0x5E4]) = LODWORD(STACK[0x4D0])
                        + 162550919
                        + (LODWORD(STACK[0x3D8]) ^ (-1673081951 * a122
                                                  + 763287843
                                                  - ((948803394 * a122 + 968328188) & 0x21462E4A)));
  v798 = (-1673081951 * a121 + 469468063 - (((v797 ^ 0x388D925A) * a121 + 968328188) & 0xFE3F8342)) ^ v524;
  v799 = v524 ^ (-1673081951 * a124 + 469468063 - ((948803394 * a124 + 968328188) & 0xFE3F8342));
  LODWORD(v497) = v524 ^ (-1673081951 * a126 + 469468063 - ((948803394 * a126 + 968328188) & 0xFE3F8342));
  v800 = v524 ^ (-1673081951 * LODWORD(STACK[0x200])
               + 469468063
               - ((948803394 * LODWORD(STACK[0x200]) + 968328188) & 0xFE3F8342));
  v801 = v524 ^ (-1673081951 * LODWORD(STACK[0x208])
               + 469468063
               - ((948803394 * LODWORD(STACK[0x208]) + 968328188) & 0xFE3F8342));
  LODWORD(v616) = LODWORD(STACK[0x4A4]) ^ (-1673081951 * a123
                                         + 17271834
                                         - 2
                                         * ((-1673081951 * a123 + 484164094) & 0x642BCA1D ^ (-1673081951 * a123) & 1));
  v802 = LODWORD(STACK[0x4A4]) ^ (-1673081951 * a125 + 17271834 - ((948803394 * a125 + 968328188) & 0xC8579438));
  v803 = LODWORD(STACK[0x4A4]) ^ (-1673081951 * LODWORD(STACK[0x204])
                                + 17271834
                                - 2
                                * ((-1673081951 * LODWORD(STACK[0x204]) + 484164094) & 0x642BCA1D ^ (-1673081951 * LODWORD(STACK[0x204])) & 1));
  v804 = LODWORD(STACK[0x4A4]) ^ (-1673081951 * LODWORD(STACK[0x20C])
                                + 17271834
                                - ((948803394 * LODWORD(STACK[0x20C]) + 968328188) & 0xC8579438));
  LODWORD(v797) = LODWORD(STACK[0x4A4]) ^ (-1673081951 * LODWORD(STACK[0x210])
                                         + 17271834
                                         - ((948803394 * LODWORD(STACK[0x210]) + 968328188) & 0xC8579438));
  LODWORD(v524) = LODWORD(STACK[0x4A4]) ^ (-1673081951 * LODWORD(STACK[0x218])
                                         + 17271834
                                         - ((948803394 * LODWORD(STACK[0x218]) + 968328188) & 0xC8579438));
  v805 = LODWORD(STACK[0x4A4]) ^ (-1673081951 * LODWORD(STACK[0x214])
                                + 17271834
                                - 2
                                * ((-1673081951 * LODWORD(STACK[0x214]) + 484164094) & 0x642BCA1D ^ (-1673081951 * LODWORD(STACK[0x214])) & 1));
  LODWORD(STACK[0x5BC]) = LODWORD(STACK[0x21C]) + 857822819 - LODWORD(STACK[0x49C]);
  LODWORD(STACK[0x634]) = ((LOBYTE(STACK[0xD1C]) ^ 0x1A) << 8) | ((LOBYTE(STACK[0xF66]) ^ 0x1A) << 16) | LOBYTE(STACK[0xE9B]) ^ 0x1A;
  v806 = LOBYTE(STACK[0xD05]) ^ 0x1A | ((LOBYTE(STACK[0xDD0]) ^ 0x1A) << 16) | ((LOBYTE(STACK[0xF4F]) ^ 0x1A) << 8);
  v807 = LOBYTE(STACK[0xDB1]) ^ 0x1A;
  v808 = v807 | ((((LOBYTE(STACK[0xCFD]) ^ 0x1A) << 16) | ((LOBYTE(STACK[0xE7C]) ^ 0x1A) << 8) | LOBYTE(STACK[0xFFB]) ^ 0x1A) << 8);
  v809 = v808 + 2094721569 - 2 * (v808 & 0x7CDAEA3D ^ v807 & 0x1C);
  LODWORD(STACK[0x630]) = v809;
  LODWORD(STACK[0x62C]) = LOBYTE(STACK[0xE84]) ^ 0x1A | (v806 << 8);
  LODWORD(STACK[0x60C]) = ((LOBYTE(STACK[0xF30]) ^ 0x1A) << 16) | ((LOBYTE(STACK[0xCE6]) ^ 0x1A) << 8) | LOBYTE(STACK[0xE65]) ^ 0x1A;
  LODWORD(STACK[0x628]) = ((LOBYTE(STACK[0x1003]) ^ 0x1A) << 16) | ((LOBYTE(STACK[0xDB9]) ^ 0x1A) << 8) | LOBYTE(STACK[0xF38]) ^ 0x1A;
  v810 = ((LOBYTE(STACK[0xE6D]) ^ 0x1A) << 16) | ((LOBYTE(STACK[0xFEC]) ^ 0x1A) << 8);
  LODWORD(STACK[0x63C]) = LOBYTE(STACK[0xE4E]) ^ 0x1A | ((LOBYTE(STACK[0xCCF]) ^ 0x1A | ((LOBYTE(STACK[0xD9A]) ^ 0x1A) << 16) | ((LOBYTE(STACK[0xF19]) ^ 0x1A) << 8)) << 8);
  LODWORD(STACK[0x638]) = LOBYTE(STACK[0xF21]) ^ 0x1A | ((LOBYTE(STACK[0xDA2]) ^ 0x1A | v810) << 8);
  v811 = LOBYTE(STACK[0xCD7]) ^ 0x1A ^ (217 * ((v809 & 0x15271D ^ 0x102201) + (v809 & 0x15271D ^ 0x5051C)));
  LODWORD(STACK[0x5E8]) = ((LOBYTE(STACK[0xFCD]) ^ 0x1A) << 24) | ((LOBYTE(STACK[0xD83]) ^ 0x1A) << 16) | ((LODWORD(STACK[0x578]) ^ 0x1A) << 8);
  v812 = ((LOBYTE(STACK[0xE37]) ^ 0x1A) << 16) | ((LOBYTE(STACK[0xFB6]) ^ 0x1A) << 8);
  LODWORD(STACK[0x5EC]) = ((LOBYTE(STACK[0xFD5]) ^ 0x1A) << 8) | ((LOBYTE(STACK[0xE56]) ^ 0x1A ^ ((v811 << 8) | 0x95)) << 16);
  LODWORD(STACK[0x620]) = LOBYTE(STACK[0xD6C]) ^ 0x1A | v812;
  v813 = ((LOBYTE(STACK[0xCA1]) ^ 0x1A) << 16) | ((LOBYTE(STACK[0xE20]) ^ 0x1A) << 8);
  v814 = ((LOBYTE(STACK[0xD74]) ^ 0x1A) << 16) | ((LOBYTE(STACK[0xEF3]) ^ 0x8F) << 8);
  LODWORD(STACK[0x5F0]) = LOBYTE(STACK[0xFBE]) ^ 0x1A | ((LOBYTE(STACK[0xE3F]) ^ 0x1A | ((LOBYTE(STACK[0xF0A]) ^ 0x1A) << 16) | ((LOBYTE(STACK[0xCC0]) ^ 0x8F) << 8)) << 8);
  LODWORD(STACK[0x61C]) = v813 | LOBYTE(STACK[0xF9F]) ^ 0x1A;
  LODWORD(STACK[0x624]) = v814 | LOBYTE(STACK[0xCA9]) ^ 0x1A;
  LODWORD(STACK[0x5F4]) = LOBYTE(STACK[0xF88]) ^ 0x1A | ((((LOBYTE(STACK[0xC8A]) ^ 0x1A) << 8) | ((LOBYTE(STACK[0xED4]) ^ 0x1A) << 16) | LOBYTE(STACK[0xE09]) ^ 0x1A) << 8);
  v815 = ((LOBYTE(STACK[0xD5D]) ^ 0x1A) << 8) | ((LOBYTE(STACK[0xFA7]) ^ 0x1A) << 16) | LOBYTE(STACK[0xEDC]) ^ 0x1A;
  LODWORD(STACK[0x5FC]) = ((LOBYTE(STACK[0xD3E]) ^ 0x1A) << 16) | ((LOBYTE(STACK[0xEBD]) ^ 0x1A) << 8) | LOBYTE(STACK[0xC73]) ^ 0x1A;
  LODWORD(STACK[0x610]) = LOBYTE(STACK[0xC92]) ^ 0x1A | (v815 << 8);
  LODWORD(STACK[0x600]) = LOBYTE(STACK[0xD46]) ^ 0x1A | ((LOBYTE(STACK[0xE11]) ^ 0x1A) << 16) | ((LOBYTE(STACK[0xF90]) ^ 0x1A) << 8);
  LODWORD(STACK[0x5F8]) = (LOBYTE(STACK[0xEC5]) ^ 0x1A) + 504195076 - ((2 * LOBYTE(STACK[0xEC5])) & 8);
  v816 = STACK[0x648];
  v817 = (LODWORD(STACK[0x648]) ^ 0x48C05139) + 1663319554;
  LODWORD(STACK[0x7A4]) = -2009212831 * v817;
  LODWORD(STACK[0x7A8]) = -75026750 - 2009212831 * LODWORD(STACK[0x580]);
  LODWORD(STACK[0x7A0]) = -75026750 - 2009212831 * LODWORD(STACK[0x598]);
  LODWORD(STACK[0x7AC]) = -75026750 - 2009212831 * STACK[0x640];
  v818 = (LODWORD(STACK[0x658]) + 1663319554)
       * ((((v816 ^ 0xB73FAEC6) - 1663319554) & 0x883DD861) + (v817 & 0x883DD861));
  LODWORD(STACK[0x7B8]) = -75026750 - 2009212831 * LODWORD(STACK[0x5D4]);
  LODWORD(STACK[0x7B4]) = v818;
  LODWORD(STACK[0x7B0]) = -75026750 - 2009212831 * LODWORD(STACK[0x650]);
  LODWORD(STACK[0x7BC]) = -75026750 - 2009212831 * STACK[0x5D8];
  v819 = (4 * v496) ^ (32 * v496) ^ ((_DWORD)v496 << 11);
  LODWORD(v496) = v496 >> 21;
  v820 = v819 ^ (4 * v496);
  v821 = (32 * v496) ^ ((_DWORD)v496 << 11) ^ 0xFE25D850 ^ v820;
  v822 = v496 ^ v794 ^ (v821 + 280977398 - 2 * (v821 & 0x10BF5FFF ^ v820 & 8));
  v823 = v805 - 1436086590 - ((2 * v805) & 0x54CE1D84);
  v824 = LODWORD(STACK[0x46C]) - ((2 * LODWORD(STACK[0x46C]) - 320912362) & 0xB561307E);
  v825 = LODWORD(STACK[0x45C]) - ((2 * LODWORD(STACK[0x45C]) - 833854892) & 0xB561307E);
  v826 = LODWORD(STACK[0x468]) - ((2 * LODWORD(STACK[0x468]) - 474695706) & 0xB561307E);
  LODWORD(STACK[0x6E0]) = v796;
  LODWORD(STACK[0x6FC]) = -75026750 - 2009212831 * (v822 ^ 0x6A6A23A5 ^ (v797 - 1436086590 - ((2 * v797) & 0x54CE1D84)));
  LODWORD(STACK[0x700]) = -75026750 - 2009212831 * (v822 ^ 0x6A6A23A5 ^ (v524 - 1436086590 - ((2 * v524) & 0x54CE1D84)));
  LODWORD(v797) = -75026750 - 2009212831 * (LODWORD(STACK[0x5C0]) ^ (v824 + 1361066570));
  v827 = LODWORD(STACK[0x5C0]) ^ (v826 + 1284174898);
  v828 = STACK[0x5C0];
  LODWORD(STACK[0x6A0]) = v797;
  LODWORD(STACK[0x6A4]) = -75026750 - 2009212831 * v827;
  LODWORD(v797) = LODWORD(STACK[0x460]) - ((2 * LODWORD(STACK[0x460]) - 1991272430) & 0xB561307E);
  v829 = v804 - 1436086590 - ((2 * v804) & 0x54CE1D84);
  LODWORD(v524) = -75026750 - 2009212831 * (v792 ^ (LODWORD(STACK[0x448]) - 173274895));
  LODWORD(STACK[0x6C0]) = -75026750 - 2009212831 * (v792 ^ (LODWORD(STACK[0x444]) - 1499938144));
  LODWORD(STACK[0x6C4]) = v524;
  v830 = LODWORD(STACK[0x458]) - ((2 * LODWORD(STACK[0x458]) + 166710870) & 0xB561307E);
  LODWORD(STACK[0x704]) = -75026750 - 2009212831 * (LODWORD(STACK[0x260]) ^ 0x2F4A6A87 ^ v822);
  LODWORD(STACK[0x708]) = -75026750 - 2009212831 * (v822 ^ 0x6A6A23A5 ^ v829);
  LODWORD(v524) = -75026750 - 2009212831 * (v792 ^ (LODWORD(STACK[0x43C]) - 267784115));
  LODWORD(STACK[0x6C8]) = -75026750 - 2009212831 * (v792 ^ (LODWORD(STACK[0x464]) - 433998718));
  LODWORD(STACK[0x6CC]) = v524;
  LODWORD(STACK[0x6E4]) = -75026750 - 2009212831 * (v795 ^ (v801 + 82200130 - ((2 * v801) & 0x9CC8C84)));
  LODWORD(STACK[0x6E8]) = -75026750 - 2009212831 * (v795 ^ (v799 + 82200130 - ((2 * v799) & 0x9CC8C84)));
  v831 = v802 - 1436086590 - ((2 * v802) & 0x54CE1D84);
  v832 = v825 - 1042888343;
  v833 = v828;
  LODWORD(STACK[0x6AC]) = -75026750 - 2009212831 * (v828 ^ (v797 - 1621597112));
  LODWORD(STACK[0x6A8]) = -75026750 - 2009212831 * (v828 ^ v832);
  v834 = STACK[0x668];
  LODWORD(v797) = (LODWORD(STACK[0x668]) ^ (LODWORD(STACK[0x440]) - 1138698122) ^ 0x7E03B70)
                - 1158322381
                - 2
                * ((LODWORD(STACK[0x668]) ^ (LODWORD(STACK[0x440]) - 1138698122) ^ 0x7E03B70) & 0x3AF5673F ^ (LODWORD(STACK[0x668]) ^ (LODWORD(STACK[0x440]) - 1138698122)) & 0xC);
  v835 = v616 - 1436086590 - ((2 * v616) & 0x54CE1D84);
  v836 = v792 ^ (LODWORD(STACK[0x470]) - 2007660538);
  v837 = LODWORD(STACK[0x5E4]) - 625960897 - ((2 * LODWORD(STACK[0x5E4])) & 0xB561307E);
  v838 = -2009212831
       * (v833 ^ (LODWORD(STACK[0x494]) - ((2 * LODWORD(STACK[0x494]) - 904457824) & 0xB561307E) - 1078189809))
       - 75026750;
  LODWORD(STACK[0x6B0]) = -75026750 - 2009212831 * (v833 ^ (v830 + 1604878186));
  LODWORD(STACK[0x6B4]) = v838;
  LODWORD(STACK[0x6D0]) = -2009212831 * (v797 ^ 0xBAF56733) - 75026750;
  LODWORD(STACK[0x6D4]) = -2009212831 * v836 - 75026750;
  LODWORD(STACK[0x660]) = v795;
  LODWORD(STACK[0x6EC]) = -2009212831 * (v795 ^ (v798 + 82200130 - ((2 * v798) & 0x9CC8C84))) - 75026750;
  LODWORD(STACK[0x6F0]) = -2009212831 * (v795 ^ (v800 + 82200130 - ((2 * v800) & 0x9CC8C84))) - 75026750;
  LODWORD(v616) = v822 ^ 0x6A6A23A5;
  LODWORD(STACK[0x710]) = -2009212831 * (v822 ^ 0x6A6A23A5 ^ v831) - 75026750;
  LODWORD(STACK[0x70C]) = -2009212831 * (v822 ^ 0x6A6A23A5 ^ (v803 - 1436086590 - ((2 * v803) & 0x54CE1D84))) - 75026750;
  v839 = LODWORD(STACK[0x5BC]) + 17665030 - ((2 * LODWORD(STACK[0x5BC])) & 0x21B180C);
  LODWORD(STACK[0x6F8]) = -2009212831 * (v822 ^ 0x6A6A23A5 ^ v823) - 75026750;
  LODWORD(STACK[0x6F4]) = -2009212831 * (v795 ^ (v497 + 82200130 - ((2 * v497) & 0x9CC8C84))) - 75026750;
  LOBYTE(v797) = (v797 & 0x3B ^ 8 | v797 & 0x3B ^ 0x33) * ((STACK[0x64C] & 0x29 ^ 8) + (STACK[0x64C] & 0x29 ^ 0x21));
  LODWORD(STACK[0x714]) = -2009212831 * (v822 ^ 0x6A6A23A5 ^ v835) - 75026750;
  v840 = LOBYTE(STACK[0xF71]);
  LODWORD(STACK[0x798]) = -2009212831 * (v833 ^ v837) - 75026750;
  v841 = LOBYTE(STACK[0xF79]);
  v842 = v834 ^ 0x6EDB776;
  *((_DWORD *)&STACK[0x698] + (v797 ^ 0x32u)) = -2009212831 * (v834 ^ 0x6EDB776 ^ v839) - 75026750;
  v843 = LOBYTE(STACK[0xC7B]);
  LODWORD(STACK[0x640]) = LOBYTE(STACK[0xEA6]) ^ 0x1A | ((v840 ^ 0x1A) << 16) | ((LOBYTE(STACK[0xD27]) ^ 0x1A) << 8);
  LODWORD(v797) = ((v843 ^ 0x1A) << 16) | ((LOBYTE(STACK[0xDFA]) ^ 0x1A) << 8) | v841 ^ 0x1A;
  v844 = LOBYTE(STACK[0xF5A]);
  LODWORD(STACK[0x5A0]) = LOBYTE(STACK[0xD2F]) ^ 0x1A | ((_DWORD)v797 << 8);
  LODWORD(STACK[0x5B8]) = ((v844 ^ 0x1A) << 8) | ((LOBYTE(STACK[0xDDB]) ^ 0x1A) << 16) | LOBYTE(STACK[0xD10]) ^ 0x1A;
  LODWORD(STACK[0x5D8]) = ((LOBYTE(STACK[0xC64]) ^ 0x1A) << 8) | ((LOBYTE(STACK[0xEAE]) ^ 0x1A) << 16) | LOBYTE(STACK[0xDE3]) ^ 0x1A;
  LODWORD(STACK[0x5BC]) = ((LOBYTE(STACK[0xC45]) ^ 0x1A) << 16) | ((LOBYTE(STACK[0xDC4]) ^ 0x1A) << 8) | LOBYTE(STACK[0xF43]) ^ 0x1A;
  LODWORD(STACK[0x5E4]) = STACK[0x5C8] ^ 0x1A | ((((LOBYTE(STACK[0xD18]) ^ 0x1A) << 16) | ((LOBYTE(STACK[0xE97]) ^ 0x1A) << 8) | LOBYTE(STACK[0xC4D]) ^ 0x1A) << 8);
  v845 = LOBYTE(STACK[0xE80]) ^ 0x1A | ((LOBYTE(STACK[0xF4B]) ^ 0x1A) << 16) | ((LOBYTE(STACK[0xD01]) ^ 0x1A) << 8);
  LODWORD(STACK[0x5D4]) = ((LOBYTE(STACK[0xE78]) ^ 0x1A) << 16) | ((LOBYTE(STACK[0xFF7]) ^ 0x1A) << 8) | LOBYTE(STACK[0xDAD]) ^ 0x1A;
  LODWORD(STACK[0x5B0]) = ((LOBYTE(STACK[0xE61]) ^ 0x1A) << 8) | ((LOBYTE(STACK[0xCE2]) ^ 0x1A) << 16) | LOBYTE(STACK[0xFE0]) ^ 0x1A;
  LODWORD(v797) = ((LOBYTE(STACK[0xDB5]) ^ 0x1A) << 16) | ((LOBYTE(STACK[0xF34]) ^ 0x1A) << 8) | LOBYTE(STACK[0xCEA]) ^ 0x1A;
  LODWORD(STACK[0x5C8]) = ((LOBYTE(STACK[0xF15]) ^ 0x1A) << 16) | ((LOBYTE(STACK[0xCCB]) ^ 0x1A) << 8) | LOBYTE(STACK[0xE4A]) ^ 0x1A;
  LODWORD(STACK[0x64C]) = LOBYTE(STACK[0xE69]) ^ 0x1A | ((_DWORD)v797 << 8);
  LODWORD(STACK[0x650]) = LOBYTE(STACK[0xFFF]) ^ 0x1A | (v845 << 8);
  LODWORD(STACK[0x668]) = ((LOBYTE(STACK[0xFE8]) ^ 0x1A) << 16) | ((LOBYTE(STACK[0xD9E]) ^ 0x1A) << 8) | LOBYTE(STACK[0xF1D]) ^ 0x1A;
  LODWORD(STACK[0x5AC]) = ((LOBYTE(STACK[0xEFE]) ^ 0x1A) << 8) | ((LOBYTE(STACK[0xD7F]) ^ 0x1A) << 16) | LOBYTE(STACK[0xCB4]) ^ 0x1A;
  LODWORD(STACK[0x648]) = ((LOBYTE(STACK[0xE52]) ^ 0x1A) << 16) | ((LOBYTE(STACK[0xFD1]) ^ 0x1A) << 8) | LOBYTE(STACK[0xD87]) ^ 0x1A;
  LODWORD(STACK[0x658]) = ((LOBYTE(STACK[0xD68]) ^ 0x1A) << 8) | ((LOBYTE(STACK[0xFB2]) ^ 0x1A) << 16) | LOBYTE(STACK[0xEE7]) ^ 0x1A;
  LODWORD(v797) = LODWORD(STACK[0x63C]) - 1436086590 - ((2 * LODWORD(STACK[0x63C])) & 0x54CE1D84);
  v846 = (LOBYTE(STACK[0xFE4]) ^ 0x1A | (LODWORD(STACK[0x60C]) << 8))
       + 17665030
       - 2
       * ((LOBYTE(STACK[0xFE4]) ^ 0x1A | (LODWORD(STACK[0x60C]) << 8)) & 0x10D8C1F ^ (LOBYTE(STACK[0xFE4]) ^ 0x1A) & 0x19);
  v847 = (LODWORD(STACK[0x5E8]) | LOBYTE(STACK[0xCB8]) ^ 0x1A)
       + 17665030
       - 2 * ((LODWORD(STACK[0x5E8]) | LOBYTE(STACK[0xCB8]) ^ 0x1A) & 0x10D8C1F ^ (LOBYTE(STACK[0xCB8]) ^ 0x1A) & 0x19);
  LODWORD(v524) = LODWORD(STACK[0x630]) ^ 0xBCD7C746 ^ v822;
  v848 = (LOBYTE(STACK[0xCEE]) ^ 0x1A | (LODWORD(STACK[0x628]) << 8))
       + 82200130
       - 2
       * ((LOBYTE(STACK[0xCEE]) ^ 0x1A | (LODWORD(STACK[0x628]) << 8)) & 0x4E64656 ^ (LOBYTE(STACK[0xCEE]) ^ 0x1A) & 0x14);
  v849 = (LODWORD(STACK[0x5EC]) | LOBYTE(STACK[0xD8B]) ^ 0x1A)
       + 82200130
       - 2 * ((LODWORD(STACK[0x5EC]) | LOBYTE(STACK[0xD8B]) ^ 0x1A) & 0x4E6464E ^ (LOBYTE(STACK[0xD8B]) ^ 0x1A) & 0xC);
  v850 = LODWORD(STACK[0x670]) ^ 0x4B6C4166;
  v851 = LODWORD(STACK[0x678]) ^ 0x4C902DF2;
  v852 = -2009212831 * (v851 ^ (LODWORD(STACK[0x62C]) - 625960897 - ((2 * LODWORD(STACK[0x62C])) & 0xB561307E)))
       - 75026750;
  LODWORD(STACK[0x718]) = -2009212831
                        * (v850 ^ ((LOBYTE(STACK[0xC51]) ^ 0x1A | (LODWORD(STACK[0x634]) << 8))
                                 + 82200130
                                 - 2
                                 * ((LOBYTE(STACK[0xC51]) ^ 0x1A | (LODWORD(STACK[0x634]) << 8)) & 0x4E64652 ^ (LOBYTE(STACK[0xC51]) ^ 0x1A) & 0x10)))
                        - 75026750;
  LODWORD(STACK[0x71C]) = v852;
  v853 = LODWORD(STACK[0x638]) - 625960897 - ((2 * LODWORD(STACK[0x638])) & 0xB561307E);
  v854 = LODWORD(STACK[0x5F0]) - 625960897 - ((2 * LODWORD(STACK[0x5F0])) & 0xB561307E);
  LODWORD(v496) = v842;
  LODWORD(STACK[0x758]) = -2009212831 * v524 - 75026750;
  LODWORD(STACK[0x75C]) = -2009212831 * (v842 ^ v846) - 75026750;
  LODWORD(v524) = (LOBYTE(STACK[0xEEB]) ^ 0x1A | (LODWORD(STACK[0x620]) << 8))
                - 1436086590
                - 2
                * ((LOBYTE(STACK[0xEEB]) ^ 0x1A | (LODWORD(STACK[0x620]) << 8)) & 0x2A670ECA ^ (LOBYTE(STACK[0xEEB]) ^ 0x1A) & 8);
  v855 = LODWORD(STACK[0x5F4]) - 1436086590 - ((2 * LODWORD(STACK[0x5F4])) & 0x54CE1D84);
  LODWORD(STACK[0x720]) = -2009212831 * (v850 ^ v848) - 75026750;
  LODWORD(STACK[0x724]) = -2009212831 * (v851 ^ v853) - 75026750;
  v856 = (LOBYTE(STACK[0xD55]) ^ 0x1A | (LODWORD(STACK[0x61C]) << 8))
       + 17665030
       - 2
       * ((LOBYTE(STACK[0xD55]) ^ 0x1A | (LODWORD(STACK[0x61C]) << 8)) & 0x10D8C1F ^ (LOBYTE(STACK[0xD55]) ^ 0x1A) & 0x19);
  v857 = (LOBYTE(STACK[0xE28]) ^ 0x1A | (LODWORD(STACK[0x624]) << 8))
       + 82200130
       - 2
       * ((LOBYTE(STACK[0xE28]) ^ 0x1A | (LODWORD(STACK[0x624]) << 8)) & 0x4E64657 ^ (LOBYTE(STACK[0xE28]) ^ 0x1A) & 0x15);
  v858 = (LOBYTE(STACK[0xDF2]) ^ 0x1A | (LODWORD(STACK[0x5FC]) << 8))
       + 17665031
       + ~(2
         * ((LOBYTE(STACK[0xDF2]) ^ 0x1A | (LODWORD(STACK[0x5FC]) << 8)) & 0x10D8C16 ^ (LOBYTE(STACK[0xDF2]) ^ 0x1A) & 0x10));
  v859 = LODWORD(STACK[0x610]) - 625960897 - ((2 * LODWORD(STACK[0x610])) & 0xB561307E);
  v860 = (LODWORD(STACK[0x5F8]) ^ 0x1E0D6804 | (LODWORD(STACK[0x600]) << 8))
       + 82200130
       - 2
       * ((LODWORD(STACK[0x5F8]) ^ 0x1E0D6804 | (LODWORD(STACK[0x600]) << 8)) & 0x4E64647 ^ (LODWORD(STACK[0x5F8]) ^ 0x1E0D6804) & 5);
  LODWORD(STACK[0x764]) = -2009212831 * (v496 ^ v847) - 75026750;
  LODWORD(STACK[0x760]) = -2009212831 * (v822 ^ 0x6A6A23A5 ^ v797) - 75026750;
  v861 = STACK[0x660];
  LODWORD(v797) = -2009212831 * (v849 ^ 0x9595 ^ LODWORD(STACK[0x660])) - 75026750;
  LODWORD(STACK[0x72C]) = -2009212831 * (v854 ^ 0x95009595 ^ v833) - 75026750;
  LODWORD(STACK[0x728]) = v797;
  LODWORD(v797) = (LOBYTE(STACK[0xE8F]) ^ 0x1A | (LODWORD(STACK[0x5B8]) << 8))
                + 17665030
                - 2
                * ((LOBYTE(STACK[0xE8F]) ^ 0x1A | (LODWORD(STACK[0x5B8]) << 8)) & 0x10D8C1F ^ (LOBYTE(STACK[0xE8F]) ^ 0x1A) & 0x19);
  v862 = LODWORD(STACK[0x5A0]) - 625960897 - ((2 * LODWORD(STACK[0x5A0])) & 0xB561307E);
  v863 = LOBYTE(STACK[0xC5C]) ^ 0x1A;
  v864 = v863 | (LODWORD(STACK[0x640]) << 8);
  LODWORD(STACK[0x768]) = -2009212831 * (v616 ^ v524) - 75026750;
  v865 = LOBYTE(STACK[0xF62]);
  LODWORD(STACK[0x76C]) = -2009212831 * (v496 ^ v856) - 75026750;
  v865 ^= 0x1Au;
  v866 = v865 | (LODWORD(STACK[0x5D8]) << 8);
  LODWORD(v524) = LOBYTE(STACK[0xCF9]) ^ 0x1A;
  v867 = v524 | (LODWORD(STACK[0x5BC]) << 8);
  LODWORD(STACK[0x774]) = -2009212831 * (v496 ^ v858) - 75026750;
  v868 = LOBYTE(STACK[0xF2C]);
  LODWORD(STACK[0x770]) = -2009212831 * (v616 ^ v855) - 75026750;
  v869 = LOBYTE(STACK[0xD96]) ^ 0x1A;
  LODWORD(v497) = v869 | (LODWORD(STACK[0x5B0]) << 8);
  v868 ^= 0x1Au;
  v870 = v868 | (LODWORD(STACK[0x5D4]) << 8);
  LODWORD(STACK[0x730]) = -2009212831 * (v857 ^ 0x95009595 ^ v861) - 75026750;
  LODWORD(STACK[0x734]) = -2009212831 * (v851 ^ v859) - 75026750;
  v871 = v864 - 1436086590 - 2 * (v864 & 0x2A670EDA ^ v863 & 0x18);
  v872 = LOBYTE(STACK[0xFC9]) ^ 0x1A;
  v873 = v872 | (LODWORD(STACK[0x5C8]) << 8);
  v874 = LOBYTE(STACK[0xCD3]) ^ 0x1A;
  v875 = v866 + 82200130 - 2 * (v866 & 0x4E6465A ^ v865 & 0x18);
  v876 = LOBYTE(STACK[0xE33]) ^ 0x1A;
  v877 = v876 | (LODWORD(STACK[0x5AC]) << 8);
  LODWORD(STACK[0x778]) = -2009212831 * (v616 ^ v871) - 75026750;
  v878 = LOBYTE(STACK[0xF06]) ^ 0x1A;
  LODWORD(STACK[0x77C]) = -2009212831 * (v496 ^ v797) - 75026750;
  LODWORD(v797) = LOBYTE(STACK[0xC9D]) ^ 0x1A;
  v879 = v850;
  v880 = -2009212831 * (v850 ^ v860) - 75026750;
  v881 = v850 ^ v875;
  v882 = v851 ^ (LODWORD(STACK[0x5E4]) - 625960897 - ((2 * LODWORD(STACK[0x5E4])) & 0xB561307E));
  LODWORD(STACK[0x738]) = v880;
  LODWORD(STACK[0x73C]) = -2009212831 * (v851 ^ v862) - 75026750;
  LODWORD(STACK[0x740]) = -2009212831 * v881 - 75026750;
  LODWORD(STACK[0x744]) = -2009212831 * v882 - 75026750;
  v883 = v616 ^ (v877 - 1436086590 - 2 * (v877 & 0x2A670EC3 ^ v876 & 1));
  v884 = v878 | (LODWORD(STACK[0x648]) << 8);
  v885 = -2009212831 * (v851 ^ (LODWORD(STACK[0x64C]) - 625960897 - ((2 * LODWORD(STACK[0x64C])) & 0xB561307E)))
       - 75026750;
  LODWORD(STACK[0x748]) = -2009212831
                        * (((LODWORD(STACK[0x650]) ^ 0x95) + 82200130 - ((2 * LODWORD(STACK[0x650])) & 0x9CC8C84)) ^ 0x95959500 ^ LODWORD(STACK[0x660]))
                        - 75026750;
  LODWORD(STACK[0x74C]) = v885;
  LODWORD(STACK[0x780]) = -2009212831 * (v616 ^ (v867 - 1436086590 - 2 * (v867 & 0x2A670EDA ^ v524 & 0x18))) - 75026750;
  LODWORD(STACK[0x784]) = -2009212831 * (v496 ^ (v870 + 17665030 - 2 * (v870 & 0x10D8C07 ^ v868 & 1))) - 75026750;
  LODWORD(STACK[0x788]) = -2009212831 * (v616 ^ (v497 - 1436086590 - 2 * (v497 & 0x2A670ECA ^ v869 & 8))) - 75026750;
  LODWORD(STACK[0x78C]) = -2009212831 * (v496 ^ (v873 + 17665030 - 2 * (v873 & 0x10D8C1F ^ v872 & 0x19))) - 75026750;
  LODWORD(STACK[0x750]) = -2009212831
                        * (v879 ^ ((v874 | (LODWORD(STACK[0x668]) << 8))
                                 + 82200130
                                 - ((2 * (v874 | (LODWORD(STACK[0x668]) << 8))) & 0x9CC8C84)))
                        - 75026750;
  LODWORD(STACK[0x754]) = -2009212831 * (v851 ^ (v884 - 625960897 - ((2 * v884) & 0xB561307E))) - 75026750;
  LODWORD(STACK[0x794]) = -2009212831
                        * (v496 ^ ((v797 | (LODWORD(STACK[0x658]) << 8))
                                 + 17665030
                                 - ((2 * (v797 | (LODWORD(STACK[0x658]) << 8))) & 0x21B180C)))
                        - 75026750;
  LODWORD(STACK[0x790]) = -2009212831 * v883 - 75026750;
  JUMPOUT(0x1CF300534);
}

uint64_t sub_1CF300588@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, int a4@<W6>, uint64_t a5@<X7>, unsigned int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  int v28;
  uint64_t v29;
  int v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v30 = ((v18 & 0x7BF23FFB) - 1558) | 0x288;
  v31 = v17 + 977686583;
  v32 = v24 - v17 + (v30 ^ 0xD991D5F5);
  LODWORD(STACK[0x680]) = v30 + 66;
  v33 = v31 * v28
      + ((v30 + 66) ^ v20)
      - 969 * ((((v31 * v28 + ((v30 + 66) ^ v20)) * (unint64_t)v27) >> 32) >> 9);
  v34 = STACK[0x688];
  v35 = a16 - 0x7FC3A13083546DB6 + v32 + v16;
  *(_BYTE *)(v34 + v33) = *(_BYTE *)v35 ^ *(_BYTE *)(STACK[0x688] + v33);
  v36 = __ROR8__(v35 - (v21 & (2 * v35)) + v22, 8) & 0xF8FFFFFFFFFFFFFFLL ^ a5;
  v37 = v31 * v28 + a4 - 969 * ((((v31 * v28 + a4) * (unint64_t)v27) >> 32) >> 9);
  v38 = __ROR8__((v36 + v29) ^ 0xB98B02A5518146ACLL, 8) + ((v36 + v29) ^ v25);
  *((_QWORD *)&v39 + 1) = (v36 + v29) ^ 0xE14BEBC8D361B39;
  *(_QWORD *)&v39 = 0x550C087CC469144DLL - v36;
  v40 = v38 ^ (v39 >> 61);
  *((_QWORD *)&v39 + 1) = v38 ^ 0x77777777;
  *(_QWORD *)&v39 = v38 ^ 0x50D4D0E13CBD7100;
  v41 = (v39 >> 8) + (v40 ^ 0x50D4D0E13CBD7177);
  *((_QWORD *)&v39 + 1) = v40 ^ 0x10D4D0E13CBD7177;
  *(_QWORD *)&v39 = v40 ^ 0x4000000000000000;
  v42 = v39 >> 61;
  *((_QWORD *)&v39 + 1) = v41;
  *(_QWORD *)&v39 = v41 ^ a2;
  v43 = (v39 >> 8) + (v42 ^ v41 ^ a2);
  *((_QWORD *)&v39 + 1) = v42 ^ v41 ^ 0x5D7DAAEED85A300;
  *(_QWORD *)&v39 = v42 ^ ~v41;
  v44 = v43 ^ (v39 >> 61);
  *((_QWORD *)&v39 + 1) = v43 ^ 0x2D;
  *(_QWORD *)&v39 = v43 ^ (a3 - 45);
  v45 = (v44 ^ a3) + (v39 >> 8);
  *((_QWORD *)&v39 + 1) = v44 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v39 = v44 ^ 0x8000000000000000;
  v46 = v45 ^ (v39 >> 61);
  *((_QWORD *)&v39 + 1) = v45 ^ 0x51;
  *(_QWORD *)&v39 = v45 ^ (v23 - 81);
  v47 = (v46 ^ v23) + (v39 >> 8);
  *((_QWORD *)&v39 + 1) = v46 ^ v26;
  *(_QWORD *)&v39 = v46 ^ 0xC000000000000000;
  v48 = v47 ^ (v39 >> 61);
  *((_QWORD *)&v39 + 1) = v47 ^ 0x62;
  *(_QWORD *)&v39 = v47 ^ 0x628ABC52894BE700;
  v49 = (v48 ^ 0x628ABC52894BE762) + (v39 >> 8);
  *((_QWORD *)&v39 + 1) = v48 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v39 = v48 ^ 0x6000000000000000;
  *(_BYTE *)(v34 + v37) ^= (((v49 ^ 0x5AC09C033F8B2761 ^ (unint64_t)(v39 >> 61))
                           + __ROR8__(v49 ^ 0x5AC09C033F8B2761, 8)) ^ 0x1B0BD1982B59C071) >> (~(8
                                                                                                  * (a16 + 74 + v32 + v16 - (v21 & (2 * (a16 + 74 + v32 + v16))) + v22)) & 0x38);
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((a6 > v16 + 1) * v19) ^ v30)) - 12))();
}

void sub_1CF30082C()
{
  JUMPOUT(0x1CF3005D8);
}

uint64_t sub_1CF300834()
{
  int v0;
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  unint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  unsigned int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  unint64_t v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;

  v0 = STACK[0x49C];
  v1 = STACK[0x4F0];
  v2 = STACK[0x4EC];
  LODWORD(STACK[0x658]) = STACK[0x658];
  LODWORD(STACK[0x49C]) = v0;
  LODWORD(STACK[0x678]) = 0;
  v3 = 4 * LODWORD(STACK[0x570]);
  LODWORD(STACK[0x64C]) = v3 ^ 0x610;
  v4 = (((LODWORD(STACK[0x4F4]) ^ 0x6384AF87) + (v3 ^ 0x54C435E0)) ^ 0xFDF7DBF5)
     + 1790572028
     + ((2 * ((LODWORD(STACK[0x4F4]) ^ 0x6384AF87) + (v3 ^ 0x54C435E0))) & 0xFBEFB7EA);
  LODWORD(STACK[0x680]) = 1913417286;
  LODWORD(STACK[0x670]) = 10;
  v5 = STACK[0x688];
  v6 = STACK[0x4F8];
  v7 = STACK[0x4FC];
  LODWORD(STACK[0x648]) = 0;
  v8 = 3 * (LODWORD(STACK[0x64C]) ^ 0x1C0);
  LODWORD(STACK[0x650]) = v8;
  v9 = LODWORD(STACK[0x680]) * (v8 - 145);
  LODWORD(STACK[0x640]) = v9;
  v10 = STACK[0x678];
  v11 = ((*(unsigned __int8 *)(v5 + (v9 + 1600829517) % 0x3C9u) ^ 0x1A) << 24) | ((*(unsigned __int8 *)(v5 + (v9 + 1600829900) % 0x3C9u) ^ 0x1A) << 16);
  v12 = ((*(unsigned __int8 *)(v5 + (v9 + 1600794281) % 0x3C9u) ^ 0xFFFFFF8F) << 24) | ((*(unsigned __int8 *)(v5 + (v9 + 1600794664) % 0x3C9u) ^ 0x8F) << 16) | ((*(unsigned __int8 *)(v5 + (v9 + 1600795047) % 0x3C9u) ^ 0x8F) << 8) | *(unsigned __int8 *)(v5 + (v2 & 0x17F ^ 0x12E | v2 & 0x17F ^ 0x51u) * (LODWORD(STACK[0x678]) + 544) % 0x3C9) ^ 0x1A;
  v1 -= 1964241577;
  v13 = v12 ^ v1;
  LODWORD(STACK[0xB88]) = v12 ^ v1 ^ 0x764C9193;
  v7 += 1312213892;
  v14 = v11 | ((*(unsigned __int8 *)(v5 + (v9 + 1600830283) % 0x3C9u) ^ 0x1A) << 8) | *(unsigned __int8 *)(v5 + (v9 + 1600830666) % 0x3C9u) ^ 0x1A;
  v15 = STACK[0x660];
  v16 = LODWORD(STACK[0x660]) ^ 0xCF66A15D ^ v14 ^ v2;
  LODWORD(STACK[0x878]) = v14 ^ v2 ^ 0x592AA8BF;
  v17 = LODWORD(STACK[0x668]) ^ 0x300DC61E;
  v18 = v17 + v7;
  v19 = (((v15 ^ 0xFF36AF0C) + v16 + 1) ^ ((v2 ^ 0x30500E51) + v14 + 1) ^ ((v12 ^ v7 ^ 0xFFFFFF6A)
                                                                         + (((v12 ^ v7)
                                                                           - 1769645807
                                                                           - ((2 * (v12 ^ v7)) & 0x2D0AB222)) ^ v14 ^ v2 ^ 0x592AA82A)
                                                                         + 1))
      - v6;
  v20 = v4 + (v15 ^ 0xC950F3) + 1116339087;
  v21 = STACK[0x658];
  v22 = v1 ^ v18;
  v23 = (v13 ^ 0x95)
      + (LODWORD(STACK[0x658]) ^ 0x9DA801E2)
      - 854749687
      - 2
      * (((v13 ^ 0x95) + (LODWORD(STACK[0x658]) ^ 0x9DA801E2) + 378025208) & 0x16855917 ^ ((v13 ^ 0x95)
                                                                                         + (LODWORD(STACK[0x658]) ^ 0x9DA801E2)) & 6);
  LODWORD(STACK[0x97C]) = v19 - ((2 * v19 + 100710928) & 0x2D0AB222) - 108677607;
  v24 = v20 ^ v2;
  v25 = (v4 - 1682746571) ^ (v6 - 2119540083) ^ v20;
  LODWORD(STACK[0x7C0]) = v23;
  v26 = v4 - ((2 * (v4 - 1682746571)) & 0x162003AC) + 650335499;
  v27 = (v17 + 1495881638) ^ v21 ^ (v18 - 1649933854 - ((2 * v18) & 0x3B5003C4));
  v28 = v17 - ((2 * (v17 + 1495881638)) & 0x88FDFFEA) - 1649911909;
  v29 = *(unsigned __int8 *)(v5 + (v9 + 1600796962) % 0x3C9u) ^ 0x1A;
  v30 = ((*(unsigned __int8 *)(v5 + (v9 + 1600795813) % 0x3C9u) ^ 0xFFFFFF8F) << 24) | ((*(unsigned __int8 *)(v5 + (v9 + 1600796196) % 0x3C9u) ^ 0x8F) << 16) | ((*(unsigned __int8 *)(v5 + (v9 + 1600796579) % 0x3C9u) ^ 0x8F) << 8) | v29;
  v31 = (v30 - 1649933854 - 2 * (v30 & 0x1DA801FE ^ v29 & 0x1C)) ^ v21;
  LODWORD(STACK[0xA34]) = v31 ^ 0x764C9193;
  v32 = ((*(unsigned __int8 *)(v5
                             + (~(LODWORD(STACK[0x680]) + 55) & 0x17E | (LODWORD(STACK[0x680]) + 55) & 0x17Fu)
                             * (v10 + 637)
                             % 0x3C9) ^ 0x1A) << 24) | ((*(unsigned __int8 *)(v5
                                                                            + 383
                                                                            * ((STACK[0x670] & 0x4F2)
                                                                             + ((v10 + 5) ^ 0x279u))
                                                                            % 0x3C9) ^ 0x1A) << 16) | ((*(unsigned __int8 *)(v5 + (v9 + 1600831815) % 0x3C9u) ^ 0x1A) << 8) | *(unsigned __int8 *)(v5 + (v9 + 1600832198) % 0x3C9u) ^ 0x1A;
  v31 ^= 0x95u;
  v33 = v31 + v27;
  v34 = (v32 ^ (v6 - 2119540083)) - 1769645807 - ((2 * (v32 ^ (v6 - 2119540083))) & 0x2D0AB222);
  v35 = ((v31 ^ v22 ^ 0x7A3653E6) - 1649933854 - ((2 * (v31 ^ v22 ^ 0x7A3653E6)) & 0x3B5003C4)) ^ v21;
  LODWORD(STACK[0xBA4]) = v34;
  v36 = (((v24 ^ 0x231CFB59 ^ v34) - (v24 ^ 0xB599A248)) ^ (2119540083 - v6 + v32) ^ (((v35
                                                                                      - 1769645807
                                                                                      - ((2 * v35) & 0x2D0AB222)) ^ v34)
                                                                                    - v35))
      - v25;
  v37 = (v22 ^ 0xAB184570) + (v22 ^ 0x7A3653E6) + v27 + 1;
  v38 = ((2 * v37) & 0xFF7FF76A) + (v37 ^ 0x7FBFFBB5);
  v39 = v22 ^ v21;
  v40 = v22 ^ v21 ^ 0x8E0509D3;
  v41 = v24 ^ (v6 - 2119540083);
  v42 = v28 ^ v22 ^ 0xD5FB8B44;
  LODWORD(STACK[0x828]) = v33 + 2066749606 - ((2 * v33 + 156598058) & 0x2D0AB222);
  v43 = ((2 * ((v22 ^ 0x54E7BA8F) + (v22 ^ v21 ^ 0xB8B54D41) + 1)) & 0x9EDFEF8E)
      + (((v22 ^ 0x54E7BA8F) + (v22 ^ v21 ^ 0xB8B54D41) + 1) ^ 0x4F6FF7C7);
  LODWORD(STACK[0xAEC]) = v36 - 854749687 - 2 * ((v36 + 378025208) & 0x16855917 ^ v36 & 6);
  v44 = v26 ^ v24 ^ 0xD53A84C9;
  v45 = v25 + (v24 ^ 0x64B7B4DE) + (v24 ^ 0xB599A248) + 1;
  v46 = ((2 * v45) & 0xDDFBBFFE) + (v45 ^ 0xEEFDDFFF);
  v47 = (v41 ^ 0xEAB2BD0D) + 1;
  v48 = ((2 * (v47 + (v24 ^ 0x9B484B21))) & 0xDFEF9F76) + ((v47 + (v24 ^ 0x9B484B21)) ^ 0xEFF7CFBB);
  v49 = STACK[0x640];
  v50 = LODWORD(STACK[0x640]) + 1600798494;
  v51 = ((*(unsigned __int8 *)(v5 + (v9 + 1600797345) % 0x3C9u) ^ 0xFFFFFF8F) << 24) | ((*(unsigned __int8 *)(v5 + (v9 + 1600797728) % 0x3C9u) ^ 0x8F) << 16) | *(unsigned __int8 *)(STACK[0x688] + v50 % 0x3C9) ^ 0x1A | ((*(unsigned __int8 *)(STACK[0x688] + (v9 + 1600798111) % 0x3C9u) ^ 0x8F) << 8);
  v52 = (v51 ^ (v38 - 2143288245)) + 955586621 - ((2 * (v51 ^ (v38 - 2143288245))) & 0x71EA307A);
  LODWORD(STACK[0x8E0]) = v52 ^ 0x4EB989AE;
  v53 = v49 + 1600833730;
  v54 = (((*(unsigned __int8 *)(STACK[0x688] + (v9 + 1600832581) % 0x3C9u) ^ 0x1A) << 24) | ((*(unsigned __int8 *)(STACK[0x688] + (v9 + 1600832964) % 0x3C9u) ^ 0x1A) << 16) | ((*(unsigned __int8 *)(STACK[0x688] + (v9 + 1600833347) % 0x3C9u) ^ 0x1A) << 8) | *(unsigned __int8 *)(STACK[0x688] + (v49 + 1600833730) % 0x3C9u) ^ 0x1A) ^ (v46 + 285351937);
  v55 = v54 - 1769645807 - ((2 * v54) & 0x2D0AB222);
  v56 = v40 ^ 0x7F4FB013 ^ (((v43 - 1332737991) ^ 0x96855911 ^ v55)
                          - ((2 * ((v43 - 1332737991) ^ 0x96855911 ^ v55)) & 0x6C0016FC)
                          - 1241511042);
  v57 = (v39 ^ 0x36B04492) + 2143288245 + v42 - v38 + 1;
  v58 = v57 + 343047667 - ((2 * v57) & 0x28E4FBE6);
  v59 = (v52 ^ 0x95 ^ (v56 + 955586621 - ((2 * v56) & 0x71EA307A))) - v56;
  LODWORD(STACK[0xA50]) = v55;
  v60 = (v41 ^ 0x64B7B4DE)
      - 285351937
      + v44
      - v46
      - 1353038173
      - ((2 * ((v41 ^ 0x64B7B4DE) - 285351937 + v44 - v46 + 1)) & 0x5EB48D44);
  v61 = STACK[0x688];
  v62 = (v47 + (v41 ^ 0x2DB85A5A ^ v52)) ^ (-268972101 - v48 + ((v48 + 268972101) ^ 0x38F518A8 ^ v52)) ^ v59;
  v63 = (v58 ^ 0xDD3DC69E ^ v40) - v38 + 406757980;
  LODWORD(STACK[0xB54]) = v62 - v46 - ((2 * (v62 - v46) + 659636008) & 0x2D0AB222) + 1781397669;
  LODWORD(STACK[0x998]) = (v55 ^ 0x96855911)
                        + v38
                        - 2143288245
                        - 854749687
                        - 2
                        * (((v55 ^ 0x96855911) + v38 - 2143288245 + 378025208) & 0x16855913 ^ ((v55 ^ 0x96855911)
                                                                                             + v38
                                                                                             - 2143288245) & 2);
  v64 = (v41 ^ 0xBA170450 ^ v60) - v46 - ((2 * ((v41 ^ 0xBA170450 ^ v60) - v46) + 251202892) & 0x62123612);
  v65 = (v58 ^ 0x14727DF3) - v43 + 1364504896;
  v66 = (v60 ^ 0xAF5A46A2) - v48;
  v67 = (((*(unsigned __int8 *)(v61 + (v50 + 383) % 0x3C9) ^ 0xFFFFFF8F) << 24) | ((*(unsigned __int8 *)(v61 + (v50 + 766) % 0x3C9) ^ 0x8F) << 16) | ((*(unsigned __int8 *)(v61 + (v50 + 1149) % 0x3C9) ^ 0x8F) << 8) | *(unsigned __int8 *)(v61 + (v50 + 1532) % 0x3C9) ^ 0x1A) ^ v65;
  LODWORD(STACK[0xC0C]) = v67 ^ 0x764C9193;
  v68 = (((*(unsigned __int8 *)(v61 + (v53 + 383) % 0x3C9u) ^ 0x1A) << 24) | ((*(unsigned __int8 *)(v61
                                                                                                  + (v53 + 1149) % 0x3C9u) ^ 0x1A) << 8) | ((*(unsigned __int8 *)(v61 + (v53 + 766) % 0x3C9u) ^ 0x1A) << 16) | *(unsigned __int8 *)(v61 + (v53 + 1532) % 0x3C9u) ^ 0x1A) ^ (v66 - 237205196);
  v69 = (v43 - ((2 * v43 + 1565957504) & 0x9E45076E) - 36842889) ^ v63 ^ v67;
  v70 = v65 ^ v63;
  LODWORD(STACK[0x8FC]) = v68 ^ 0x96855911;
  v64 += 948281775;
  v71 = ((v64 ^ 0x4EF6E4F6) + (v64 ^ 0xB1091B09 ^ v68) + 1) ^ (-237205196 - v48 + (v68 ^ (v48 + 237205196))) ^ ((v69 ^ 0xB0DD7CDD) + (((v69 ^ 0x4F2283B7) - 1769645807 - ((2 * (v69 ^ 0x4F2283B7)) & 0x2D0AB222)) ^ v68 ^ 0x96855984) + 1);
  v72 = STACK[0x648];
  v73 = (v66 - ((2 * (v66 - 237205196)) & 0x62123612) - 1562008515) ^ v64;
  LODWORD(STACK[0xA00]) = (v67 ^ 0x95)
                        + v38
                        + 2023202131
                        + 2066749606
                        - ((2 * ((v67 ^ 0x95) + v38 + 2023202131) + 156598058) & 0x2D0AB222);
  v74 = (v70 ^ 0x95A6829A) - ((2 * (v70 ^ 0x95A6829A) + 414475700) & 0x1B30E9DA) - 906844217;
  LODWORD(STACK[0x668]) = (v58 ^ 0x81D4FF69 ^ v70)
                        + 417046614
                        + (v74 ^ 0x8D9874ED)
                        + 806209054
                        - ((2 * ((v58 ^ 0x81D4FF69 ^ v70) + 417046614 + (v74 ^ 0x8D9874ED))) & 0x601B8C3C);
  LODWORD(STACK[0x844]) = v71
                        - (v46
                         + 156875017)
                        - 854749687
                        - ((2 * (v71 - (v46 + 156875017)) + 756050416) & 0x2D0AB222);
  v75 = v70 ^ (v38 - ((2 * (v38 + 2023202131)) & 0xEC956FEC) - 287156919);
  v76 = (v73 ^ 0x6A597D65)
      + ((v46 - ((2 * (v46 + 156875017)) & 0xA007FBA2) + 1499313882) ^ 0xC5A57F4B ^ v73)
      + (((v73 ^ 0x95A6829A) - ((2 * (v73 ^ 0x95A6829A) + 2025088436) & 0x98CE60DE) + 146891593) ^ 0x3398CF90)
      + 2;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(STACK[0x690]
                                                                     + 8
                                                                     * ((212 * ((v72 + 4) > 0xF)) ^ LODWORD(STACK[0x64C])))
                                                         - 12))((v74 ^ 0x54B50686) - 1312213892, (v76 ^ 0xFE759FFB) + 2145385848 + ((2 * v76) & 0xFCEB3FF6), ((2 * v70) ^ 0xD4B2FACB)+ (v75 ^ 0xE3EC356C)+ 1632489225- 2 * ((((2 * v70) ^ 0xD4B2FACB) + (v75 ^ 0xE3EC356C) - 1012544217) & 0x1DA801E3 ^ v75 & 1));
}

void sub_1CF301A18(uint64_t a1, uint64_t a2, int a3)
{
  int v3;

  LODWORD(STACK[0x658]) = a3;
  LODWORD(STACK[0x660]) = v3;
  LODWORD(STACK[0x680]) += 16;
  LODWORD(STACK[0x678]) += 16;
  LODWORD(STACK[0x670]) += 32;
  JUMPOUT(0x1CF3008E4);
}

uint64_t sub_1CF301A4C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8
                                        * ((1333 * ((((a1 + 502) ^ (*(_QWORD *)(a10 + 16) == 0)) & 1) == 0)) ^ a1))
                            - 8))();
}

uint64_t sub_1CF301A8C()
{
  uint64_t v0;
  int v1;

  STACK[0x688] = (unint64_t)&STACK[0xC80];
  STACK[0x388] = (unint64_t)&STACK[0x1040];
  STACK[0x360] = v0 + 0x5788FEB2E38DE344;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(STACK[0x690] + 8 * v1))(366737324, 1797278288, 898639144);
}

void sub_1CF301DC4()
{
  JUMPOUT(0x1CF301B64);
}

uint64_t sub_1CF301E14()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v0 + 8 * ((638 * (v2 == 2012536038)) ^ v1)))();
}

uint64_t sub_1CF302074@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  *(_BYTE *)(STACK[0x688] + (unsigned __int16)((a1 ^ 0x63C) * v1 - 15960) % 0x3BEu) = v1 - ((2 * v1 + 62) & 0x38) - 101;
  return (*(uint64_t (**)(void))(v2 + 8 * ((266 * (v1 == 1482657040)) ^ a1)))();
}

uint64_t sub_1CF3020E8@<X0>(int a1@<W5>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  char v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  unsigned int v43;
  int v44;

  v9 = a2 ^ 0x53B;
  v10 = (unsigned __int16)(91 * (v8 & 0xF ^ 0xD) - 7933);
  v11 = STACK[0x688];
  v12 = STACK[0xCFB];
  LOBYTE(STACK[0xCFB]) = *(_BYTE *)(STACK[0x688] + v10 % ((v8 & v3 ^ 0x112) + (v8 & v3 ^ 0x2ACu)));
  *(_BYTE *)(v11 + (unsigned __int16)(91 * (v8 & 0xF ^ 0xD) - 7933 - ((unsigned __int16)((v10 * v2) >> 16) >> 8) * v3)) = v12;
  v13 = (unsigned __int16)(91 * ((v7 ^ 0xC9CEDAED) % 0xF)
                         - 7842
                         - ((unsigned __int16)(((unsigned __int16)(91 * ((v7 ^ 0xC9CEDAED) % 0xF) - 7842)
                                              * v2) >> 16) >> 8)
                         * v3);
  v14 = *(_BYTE *)(v11 + (((v8 & 6 ^ 0xD2) + (v8 & 6 ^ 4u)) | 2));
  v15 = v6 - 1119223615;
  v16 = ((2 * (v6 - 1119223615 + (v7 ^ 0x36312512) + 1)) & 0x8F7FDFEA)
      + ((v6 - 1119223615 + (v7 ^ 0x36312512) + 1) ^ 0x47BFEFF5);
  LOBYTE(STACK[0xD56]) = *(_BYTE *)(v11 + v13);
  *(_BYTE *)(v11 + v13) = v14;
  v17 = (unsigned __int16)(91 * (v15 % 0xE)
                         - 7751
                         - ((unsigned __int16)(((unsigned __int16)(91 * (v15 % 0xE) - 7751) * v2) >> 16) >> 8)
                         * v3);
  LOBYTE(v13) = STACK[0xDB1];
  LOBYTE(STACK[0xDB1]) = *(_BYTE *)(v11 + v17);
  v18 = ((2 * (v5 + v16 - 1203761141)) & 0x7FE4956E) + ((v5 + v16 - 1203761141) ^ 0xBFF24AB7);
  *(_BYTE *)(v11 + v17) = v13;
  v19 = ((2 * (v15 + v5)) & 0xDD77F4FC) + ((v15 + v5) ^ 0xEEBBFA7E);
  v20 = v18 + v19 - ((2 * (v18 + v19) - 1566345834) & 0xD57A8C34) - 1139867419;
  v21 = (unsigned __int16)(91 * ((a1 - 1893433343) % 0xDu)
                         - 7660
                         - ((unsigned __int16)(((unsigned __int16)(91 * ((a1 - 1893433343) % 0xDu) - 7660)
                                              * v2) >> 16) >> 8)
                         * v3);
  LOBYTE(v15) = STACK[0xE0C];
  LOBYTE(STACK[0xE0C]) = *(_BYTE *)(v11 + v21);
  v22 = v20 ^ (v16 + a1 - ((2 * (v16 + a1) - 1899421672) & 0xD57A8C34) - 1306405338);
  v23 = 91 * ((v20 ^ 0x6ABD461A) % 0xC);
  *(_BYTE *)(v11 + v21) = v15;
  v24 = STACK[0xE67];
  v25 = (v16 - 1809040746) % 0xA;
  LOBYTE(STACK[0xE67]) = *(_BYTE *)(v11
                                  + (unsigned __int16)(v23
                                                     - 7569
                                                     - ((unsigned __int16)(((unsigned __int16)(v23 - 7569)
                                                                          * v2) >> 16) >> 8)
                                                     * v3));
  v26 = (unsigned __int16)(91 * v25
                         - 7387
                         - ((unsigned __int16)(((unsigned __int16)(91 * v25 - 7387) * v2) >> 16) >> 8)
                         * v3)
      - ((2 * (91 * v25 - 7387 - (((unsigned __int16)(91 * v25 - 7387) * v2) >> 24) * v3)) & 0x1D0)
      - 212104984;
  *(_BYTE *)(v11 + (v23 + 57967) % (((v20 & 0x50090BBE ^ 0x100009A4) + (v20 & 0x50090BBE ^ 0x4009021A)) & 0xA01017BE)) = v24;
  v27 = (unsigned __int16)(91 * ((v19 + 414453679) % 0xB)
                         - 7478
                         - ((unsigned __int16)(((unsigned __int16)(91 * ((v19 + 414453679) % 0xB) - 7478)
                                              * v2) >> 16) >> 8)
                         * v3);
  v28 = v25 + (v26 & 0x279 ^ 0x211 | v26 & 0x279 ^ 0x68);
  LOBYTE(v25) = STACK[0xEC2];
  LOBYTE(STACK[0xEC2]) = *(_BYTE *)(v11 + v27);
  *(_BYTE *)(v11 + v27) = v25;
  LOBYTE(v25) = *(_BYTE *)(v11 + (v26 ^ 0xF35B88E8));
  LOBYTE(v26) = STACK[0xF1D];
  LOBYTE(STACK[0xF1D]) = v25;
  v29 = v22 - v16 - ((2 * (v22 - v16) + 637083890) & 0x39A7CCD6) + 802191076;
  LODWORD(v21) = (v16 - 1809040746) ^ 0x91EA4753;
  *(_BYTE *)(v11 + (91 * v28 + 546 - ((4483265 * (unint64_t)(91 * v28 + 546)) >> 32) * v3)) = v26;
  v30 = v21 + v19 + 414453679;
  v31 = (unsigned __int16)(91 * (v22 % 9)
                         - 7296
                         - ((unsigned __int16)(((unsigned __int16)(91 * (v22 % 9) - 7296) * v2) >> 16) >> 8)
                         * v3);
  v32 = (v20 ^ 0x2D68B87D) + v21;
  LOBYTE(v21) = STACK[0xF78];
  v19 = -414453679 - v19;
  LOBYTE(STACK[0xF78]) = *(_BYTE *)(v11 + v31);
  *(_BYTE *)(v11 + v31) = v21;
  v33 = (unsigned __int16)(91 * (v32 & 7)
                         - 7205
                         - ((unsigned __int16)(((unsigned __int16)(91 * (v32 & 7) - 7205) * v2) >> 16) >> 8)
                         * v3);
  LOBYTE(v21) = STACK[0xFD3];
  LOBYTE(STACK[0xFD3]) = *(_BYTE *)(v11 + v33);
  v30 ^= 0xCD5886DB;
  *(_BYTE *)(v11 + v33) = v21;
  v34 = (unsigned __int16)(91 * (v30 % 7)
                         - 7114
                         - ((unsigned __int16)(((unsigned __int16)(91 * (v30 % 7) - 7114) * v2) >> 16) >> 8)
                         * v3);
  LOBYTE(v20) = STACK[0x102E];
  LOBYTE(STACK[0x102E]) = *(_BYTE *)(v11 + v34);
  *(_BYTE *)(v11 + v34) = v20;
  v35 = (unsigned __int16)(91 * (v19 % 6)
                         - 7023
                         - ((unsigned __int16)(((unsigned __int16)(91 * (v19 % 6) - 7023) * v2) >> 16) >> 8)
                         * v3);
  LOBYTE(v20) = STACK[0xCCB];
  v36 = v19 - v32;
  LOBYTE(STACK[0xCCB]) = *(_BYTE *)(v11 + v35);
  *(_BYTE *)(v11 + v35) = v20;
  LODWORD(v33) = (unsigned __int16)(91 * ((v29 ^ 0x9CD3E66B) % 5) - 6932);
  LOWORD(v31) = 91 * ((v29 ^ 0x9CD3E66B) % 5) - 6932 - ((unsigned __int16)((v33 * v2) >> 16) >> 8) * v3;
  v37 = ((2 * v29) & 0x3430A0D6 ^ 0x302080D6) + (v29 ^ 0x6CBB600);
  LOBYTE(v32) = v32 - v37;
  LOBYTE(v35) = STACK[0xD26];
  LOBYTE(STACK[0xD26]) = *(_BYTE *)(v11 + (unsigned __int16)v31);
  v38 = v37 ^ v36;
  *(_BYTE *)(v11 + v33 % (((v18 + 329) & v3 ^ v3) + ((v18 + 329) & v3))) = v35;
  LODWORD(v31) = (unsigned __int16)(91 * (v38 & 1)
                                  - 6659
                                  - ((unsigned __int16)(((unsigned __int16)(91 * (v38 & 1) - 6659) * v2) >> 16) >> 8)
                                  * v3)
               - ((2
                 * (91 * (v38 & 1) - 6659 - (((unsigned __int16)(91 * (v38 & 1) - 6659) * v2) >> 24) * v3)) & 0x4D6)
               + 1158839915;
  v39 = (v38 & 1) + (v31 & 0x279 ^ 0x269 | v31 & 0x279 ^ 0x10);
  LOBYTE(v36) = STACK[0xD81];
  v40 = (unsigned __int16)(91 * (v32 & 3)
                         - 6841
                         - ((unsigned __int16)(((unsigned __int16)(91 * (v32 & 3) - 6841) * v2) >> 16) >> 8)
                         * v3);
  LOBYTE(STACK[0xD81]) = *(_BYTE *)(v11 + v40);
  *(_BYTE *)(v11 + v40) = v36;
  v41 = v30 - 2056111563 + v38;
  LOBYTE(v38) = STACK[0xDDC];
  v42 = (unsigned __int16)(91 * (v41 % 3)
                         - 6750
                         - ((unsigned __int16)(((unsigned __int16)(91 * (v41 % 3) - 6750) * v2) >> 16) >> 8)
                         * v3);
  LOBYTE(STACK[0xDDC]) = *(_BYTE *)(v11 + v42);
  *(_BYTE *)(v11 + v42) = v38;
  LOBYTE(v42) = STACK[0xE37];
  LOBYTE(STACK[0xE37]) = *(_BYTE *)(v11 + (v31 ^ 0x45127E6B));
  v43 = (v38 & 0x5B ^ 0x18 | v38 & 0x5B ^ 0x43) * (v39 + 14);
  *(_BYTE *)(v11 + (v43 - ((4483265 * (unint64_t)v43) >> 32) * v3)) = v42;
  v44 = 91
      * (*(_BYTE *)(v11 + (unsigned __int16)(-7933 - ((unsigned __int16)((57603 * v2) >> 16) >> 8) * v3)) ^ ((_BYTE)v9 + 30) & 0xE5 ^ 0xFC)
      + 29939;
  *(_BYTE *)(v11 + (unsigned __int16)(v44 - ((unsigned __int16)((v44 * v2) >> 16) >> 8) * v3)) = -100;
  return (*(uint64_t (**)(void))(v4 + 8 * v9))();
}

uint64_t sub_1CF3028A4@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;

  *(_BYTE *)(v4 + (unsigned __int16)(91 * v3 + 28465) % 0x3BEu) = (a1 ^ 0x26) + v3 - ((2 * v3 + 20) & 0x38) + 64;
  return (*(uint64_t (**)(void))(a2 + 8 * ((1777 * (v3 + 1 == v2 + 16)) ^ a1)))();
}

uint64_t sub_1CF302914(uint64_t a1, int a2, int a3, char a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  char v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  int v21;
  unsigned int v22;
  int v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  char v29;
  int v30;
  char v31;
  unsigned int v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  uint64_t v45;
  unsigned __int8 v46;
  int v47;
  unsigned int v48;

  LODWORD(STACK[0x678]) = -1591486438;
  v13 = v6 - 60;
  v14 = STACK[0xCFB];
  v15 = ((((a2 - 2077711607) % 0xFu) << ((v6 - 60) ^ 0xB)) & 0x16) + (((a2 - 2077711607) % 0xFu) ^ 0xEFEF7BAB);
  v16 = (unsigned __int16)((a4 & 0xF ^ 0xD) * v7
                         - 7933
                         - ((unsigned __int16)(((unsigned __int16)((a4 & 0xF ^ 0xD) * v7 - 7933) * v8) >> 16) >> 8)
                         * v9);
  LOBYTE(STACK[0xCFB]) = *(_BYTE *)(v10 + v16);
  *(_BYTE *)(v10 + v16) = v14;
  v17 = STACK[0xD56];
  v18 = (a3 - 2130693947) % 0xEu;
  LOBYTE(STACK[0xD56]) = *(_BYTE *)(v10
                                  + (unsigned __int16)((((v15 - 31025) ^ (48 - v15)) & v7) * (v15 - 31025)
                                                     - ((unsigned __int16)(((unsigned __int16)((((v15 - 31025) ^ (48 - v15)) & v7) * (v15 - 31025))
                                                                          * v8) >> 16) >> 8)
                                                     * v9));
  *(_BYTE *)(v10
           + (unsigned __int16)(v15 * v7
                              - 5227
                              - ((unsigned __int16)(((unsigned __int16)(v15 * v7 - 5227) * v8) >> 16) >> 8)
                              * v9)) = v17;
  v19 = (937 - v15) & 0x271 ^ (v15 + 22) & 0x11;
  LOBYTE(v16) = STACK[0xDB1];
  v20 = (v4 + 69304375) % 0xDu;
  v21 = a3 - a2;
  LOBYTE(STACK[0xDB1]) = *(_BYTE *)(v10
                                  + ((v18 + v19) * v7
                                                 + 910
                                                 - ((4483265 * (unint64_t)((v18 + v19) * v7 + 910)) >> 32) * v9));
  v22 = ((2 * (a3 - 2130693947 + v5)) & 0xF9BFFC70) + ((a3 - 2130693947 + v5) ^ 0x7CDFFE38);
  *(_BYTE *)(v10
           + (unsigned __int16)(v18 * v7
                              - 7751
                              - ((unsigned __int16)(((unsigned __int16)(v18 * v7 - 7751) * v8) >> 16) >> 8)
                              * v9)) = v16;
  v23 = v5 + v21 + 2146930564 + v22 - ((2 * (v5 + v21 + 2146930564 + v22)) & 0x353BA722) + 446550929;
  LOBYTE(v18) = STACK[0xE0C];
  LOBYTE(STACK[0xE0C]) = *(_BYTE *)(v10
                                  + (unsigned __int16)(v20 * v7
                                                     - 7660
                                                     - ((unsigned __int16)(((unsigned __int16)(v20 * v7 - 7660)
                                                                          * v8) >> 16) >> 8)
                                                     * v9));
  LOWORD(v20) = (((2 * (v20 + 3)) & 0x32) + ((v20 + 3) ^ 0x279)) * v7;
  *(_BYTE *)(v10
           + (unsigned __int16)(v20 - ((unsigned __int16)(((unsigned __int16)v20 * v8) >> 16) >> 8) * v9)) = v18;
  LOBYTE(v16) = STACK[0xE67];
  v24 = (unsigned __int16)((v23 ^ 0x1A9DD391u) % 0xC * v7
                         - 7569
                         - ((unsigned __int16)(((unsigned __int16)((v23 ^ 0x1A9DD391u) % 0xC * v7 - 7569)
                                              * v8) >> 16) >> 8)
                         * v9);
  v25 = *(_BYTE *)(v10 + v24);
  LOBYTE(STACK[0xE67]) = v25;
  *(_BYTE *)(v10 + v24) = v16;
  v26 = (unsigned __int16)((v22 - 1970271243) % 0xB * v7
                         - 7478
                         - ((unsigned __int16)(((unsigned __int16)((v22 - 1970271243) % 0xB * v7 - 7478)
                                              * v8) >> 16) >> 8)
                         * v9);
  LOBYTE(v18) = STACK[0xEC2];
  LOBYTE(STACK[0xEC2]) = *(_BYTE *)(v10 + v26);
  v27 = v23 ^ (v21 + v4 - ((2 * (v21 + v4) + 32644070) & 0x59667CC8) - 1381217193) ^ 0xB62EEDF5;
  *(_BYTE *)(v10 + v26) = v18;
  v28 = (unsigned __int16)((v21 - 658261945) % 0xAu * v7
                         - 7387
                         - ((unsigned __int16)(((unsigned __int16)((v21 - 658261945) % 0xAu * v7 - 7387)
                                              * v8) >> 16) >> 8)
                         * v9);
  v29 = STACK[0xF1D];
  LOBYTE(STACK[0xF1D]) = *(_BYTE *)(v10 + v28);
  *(_BYTE *)(v10 + v28) = v29;
  LOWORD(v28) = v27 % 9 * v7;
  v30 = (v21 - 658261945) ^ v12;
  v31 = STACK[0xF78];
  v32 = v30 + v22 - 1970271243;
  v33 = (v23 ^ 0x5D482DF6) + v30;
  LOBYTE(STACK[0xF78]) = *(_BYTE *)(v10
                                  + (unsigned __int16)(v28
                                                     - 8254
                                                     - ((unsigned __int16)(((unsigned __int16)(v28 - 8254)
                                                                          * v8) >> 16) >> 8)
                                                     * v9));
  *(_BYTE *)(v10
           + (unsigned __int16)(v28
                              - 7296
                              - ((unsigned __int16)(((unsigned __int16)(v28 - 7296) * v8) >> 16) >> 8)
                              * v9)) = v31;
  v34 = v27 - v21;
  LOBYTE(v23) = STACK[0xFD3];
  v35 = v32 ^ v11;
  v36 = (unsigned __int16)((v33 & 7) * v7
                         - 7205
                         - ((unsigned __int16)(((unsigned __int16)((v33 & 7) * v7 - 7205) * v8) >> 16) >> 8)
                         * v9);
  LOBYTE(STACK[0xFD3]) = *(_BYTE *)(v10 + v36);
  v37 = ((2 * ((v32 ^ v11) % 7)) & 8 | ((v32 ^ v11) % 7)) ^ 0x22FFB7B4;
  *(_BYTE *)(v10 + v36) = v23;
  v38 = 1970271243 - v22;
  LOBYTE(v22) = STACK[0x102E];
  v39 = (unsigned __int16)(v37 * v7
                         - 26822
                         - ((unsigned __int16)(((unsigned __int16)(v37 * v7 - 26822) * v8) >> 16) >> 8)
                         * v9);
  LOBYTE(STACK[0x102E]) = *(_BYTE *)(v10 + v39);
  *(_BYTE *)(v10 + v39) = v22;
  LOBYTE(v39) = STACK[0xCCB];
  v40 = (unsigned __int16)(v38 % 6 * v7
                         - 7023
                         - ((unsigned __int16)(((unsigned __int16)(v38 % 6 * v7 - 7023) * v8) >> 16) >> 8)
                         * v9);
  LOBYTE(STACK[0xCCB]) = *(_BYTE *)(v10 + v40);
  *(_BYTE *)(v10 + v40) = v39;
  LOWORD(v39) = (v34 + 1315246792) % 5u * v7
              - 6932
              - ((unsigned __int16)(((unsigned __int16)((v34 + 1315246792) % 5u * v7 - 6932) * v8) >> 16) >> 8)
              * v9;
  LOBYTE(v16) = STACK[0xD26];
  v34 -= 394435789;
  LOBYTE(v40) = v33 - v34 - ((2 * (v33 - v34)) & 0xCE);
  LOBYTE(STACK[0xD26]) = *(_BYTE *)(v10 + (unsigned __int16)v39);
  *(_BYTE *)(v10 + (unsigned __int16)v39) = v16;
  v41 = (unsigned __int16)(((-116 - (_BYTE)v40) & 3) * v7
                         - 6841
                         - ((unsigned __int16)(((unsigned __int16)(((-116 - (_BYTE)v40) & 3) * v7 - 6841)
                                              * v8) >> 16) >> 8)
                         * v9);
  LOBYTE(v18) = STACK[0xD81];
  LOBYTE(STACK[0xD81]) = *(_BYTE *)(v10 + v41);
  *(_BYTE *)(v10 + v41) = v18;
  v42 = v34 ^ (v38 - v33);
  v43 = ((v25 & 0xD ^ 0xC) + (v25 & 0xD ^ 1) + (v42 + v35 - ((587184042 - v37) & 0x7A8DC5CB ^ (v37 + 5) & 0xB)) % 3)
      * v7;
  LODWORD(v16) = (unsigned __int16)(v43 - 7933);
  LOBYTE(v38) = STACK[0xDDC];
  LOBYTE(STACK[0xDDC]) = *(_BYTE *)(v10
                                  + (unsigned __int16)(v43
                                                     - 7933
                                                     - ((unsigned __int16)((v16 * v8) >> 16) >> 8) * v9));
  *(_BYTE *)(v10 + v16 % (((v43 + 259) | (764 - v43)) & v9)) = v38;
  LOBYTE(v35) = STACK[0xE37];
  v44 = (v42 & (((-116 - v40) & 2) + ((-116 - v40) & 2 ^ 2) - 1)) * v7 + 58877;
  v45 = (v44 - ((4483265 * (unint64_t)v44) >> 32) * v9);
  LOBYTE(STACK[0xE37]) = *(_BYTE *)(v10 + v45);
  *(_BYTE *)(v10 + v45) = v35;
  v46 = *(_BYTE *)(STACK[0x688]
                 + (unsigned __int16)(29939 - ((unsigned __int16)((29939 * v8) >> 16) >> 8) * v9));
  v47 = v46 ^ 0x13 ^ (((16 * v46) ^ 0xC0) - 32 * (v46 & 1) - 100) & 0xFC;
  LOBYTE(v47) = *((_BYTE *)*(&off_1E8C4D9A0 + v13 - 1269)
                + (unsigned __int16)(175 * v47 - 928 * ((unsigned __int16)((3163825 * v47) >> 16) >> 8)));
  v48 = (v47 ^ 0x14 ^ (((v47 & 4) != 0) | 0xAA)) * v7 + 57603;
  *(_BYTE *)(STACK[0x688]
           + (unsigned __int16)(16852 * v7
                              + 7375
                              - ((unsigned __int16)(((unsigned __int16)(16852 * v7 + 7375) * v8) >> 16) >> 8)
                              * v9)) = *(_BYTE *)(STACK[0x688]
                                                + (v48 - ((4483265 * (unint64_t)v48) >> 32) * v9));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x690] + 8 * (v13 ^ 0x4C)) - 12))();
}

void sub_1CF303100()
{
  JUMPOUT(0x1CF303004);
}

uint64_t sub_1CF303108()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  char v5;
  unsigned __int8 v6;
  char v7;

  v5 = *(_BYTE *)(STACK[0x688]
                + (unsigned __int16)(91 * ((v1 + 704) >> 4) + 29939) % 0x3BEu);
  v6 = (((16 * v5) ^ 0xC0) - 32 * (v5 & 1) - 100) ^ *(_BYTE *)(STACK[0x688]
                                                             + (unsigned __int16)((v1 & 0xF) * ((v3 - 406) ^ 0x32F)
                                                                                + 29939)
                                                             % 0x3BEu);
  v7 = *(_BYTE *)(STACK[0x688]
                + (unsigned __int16)(91
                                   * ((((v6 - ((2 * v6) & 0x55) - 86) ^ *(_BYTE *)(v4
                                                                                                  + (175 * (v6 ^ 0x6A) + 48650 - 928 * ((4628198 * (unint64_t)(175 * (v6 ^ 0x6Au) + 48650)) >> 32)))) >> 4) ^ 2)
                                   - 7933)
                % 0x3BEu);
  *(_BYTE *)(STACK[0x688] + (91 * v1 - 1025825937) % 0x3BEu) = ((16 * v7) ^ 0xC0) - 32 * (v7 & 1) - 100;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((75 * (v1 + 1 == v0 + 256)) ^ v3)) - 12))();
}

uint64_t sub_1CF303254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;

  v17 = v13 + ((v10 + 952) >> 4) * v8;
  LOBYTE(v17) = *(_BYTE *)(STACK[0x688]
                         + (unsigned __int16)(v17 - ((unsigned __int16)((v17 * v14) >> 16) >> 8) * v15));
  v18 = (*(unsigned __int8 *)(STACK[0x688]
                            + (unsigned __int16)((((v10 + 8) & ((v12 ^ 0xC) - 873) ^ 0x149) + ((2 * v10 + 16) & 0x12))
                                               * v8
                                               - ((unsigned __int16)(((unsigned __int16)((((v10 + 8) & ((v12 ^ 0xC) - 873) ^ 0x149) + ((2 * v10 + 16) & 0x12)) * v8)
                                                                    * v14) >> 16) >> 8)
                                               * v15)) ^ 0x9B ^ (((16 * v17) ^ 0xC0)
                                                               - 32 * (v17 & 1)
                                                               - 100) & 0xFC)
      * v9
      + 94850;
  LOBYTE(v18) = *(_BYTE *)(v16 + v18 - v18 / 0x3A0 * a7);
  v19 = v10 * v8 - 2 * ((v10 * v8 + 697459304) & (v7 + 1) ^ (v10 * v8) & 1) - 1929128764;
  v20 = ((v18 ^ 0x79) >> 4) ^ ((v18 ^ 0x79) >> 1);
  v21 = ((v18 ^ (v20 - ((2 * v20) & 0x55) - 86)) ^ 0xF) * v8 + 57603;
  *(_BYTE *)(STACK[0x688] + (v19 ^ v7) % ((v19 & v15 ^ 0x1A2) + (v19 & v15 ^ 0x21Cu))) = *(_BYTE *)(STACK[0x688]
                                                                                                  + (v21 - ((4483265 * (unint64_t)v21) >> 32) * v15));
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((4 * (v10 == 1266666823)) | (8 * (v10 == 1266666823))) ^ v12))
                            - 8))();
}

uint64_t sub_1CF3033EC(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;

  v6 = *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * a2 + 14847) % 0x3BEu);
  v7 = v6 ^ 0x99 | v6 ^ 0x66;
  v8 = *(unsigned __int8 *)(v5
                          + ((35 * (v2 ^ 0x35E)) ^ 0x22C35)
                          + 175 * (v6 ^ 0x99)
                          - 928
                          * ((((((35 * (v2 ^ 0x35E)) ^ 0x22C35) + 175 * (v6 ^ 0x99u))
                                           * (unint64_t)v4) >> 32) >> 9)) ^ v6;
  *(_BYTE *)(STACK[0x688] + (unsigned __int16)(91 * a2 + 16485) % 0x3BEu) = v8 ^ 0xD3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((1610
                                          * ((((v8 ^ 0x4E) + ((v8 & 1) == 0) + (v8 & 0xFE ^ 0xB1) + 1) & v7)
                                           + a2
                                           + 175086820 > 0xF)) ^ v2))
                            - 8))();
}

uint64_t sub_1CF3034F4@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  __int16 v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;

  v8 = (*(unsigned __int8 *)(v7
                           + (unsigned __int16)(((v6 + 17819) ^ 0xF) * ((a1 + 2184) & 0xF7FD ^ 0x517)
                                              - 20561
                                              - (unsigned __int16)(((v6 + 17819) ^ 0xF) * ((a1 + 2184) & 0xF7FD ^ 0x517)
                                                                 - 20561)
                                              / 0x3A0u
                                              * v4)) ^ 0x17)
     * v1
     + 57603;
  v9 = v6 + ((-1558550592 * (((v6 + 737756571) & (v2 + 11) ^ v2) + ((v6 + 737756571) & (v2 + 11) ^ 0xB))) | 0x109);
  *(_BYTE *)(STACK[0x688] + v9 * v1 + 563854873 - (v9 * v1 + 563854873) / 0x3BEu * v3) = *(_BYTE *)(STACK[0x688]
                                                                                                  + (v8 - ((4483265 * (unint64_t)v8) >> 32) * v3));
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((613 * (v6 == 1409727092)) ^ a1)) - 8))();
}

uint64_t sub_1CF30362C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;

  v12 = v4 + *((_DWORD *)&STACK[0x698] + v4 - 304478062) * (((v8 - 1064) | 8) - 1673082359);
  v13 = v9
      - 2106677732
      + ((v12 - 1967797616) & 0x9E29F619)
      + ((v12 - 1967797616) & 0x9E29F619 ^ 0x9E29F619)
      + v5
      + 270481843 * (v12 - 249768246)
      - 841516292
      + 1424854527 * ((v5 + 270481843 * (v12 - 249768246) - 841516292) % 0x15Bu);
  v14 = ((2 * (a3 ^ (a4 - 467261403) ^ v13)) & 0xBDF7F77C ^ 0x30E7A33C) + (a3 ^ (a4 - 467261403) ^ v13 ^ 0x47882A60);
  v15 = v14 + 2093832975;
  v16 = (v14 - ((2 * (v14 + 2093832975)) & 0x32E7A3BC) - 1774113555) ^ a3;
  v17 = v14 + 2093832975 + a4 - 467261403;
  v18 = v14 + v9;
  HIDWORD(v19) = v15;
  LODWORD(v19) = v15;
  v20 = v16 ^ ((v19 >> 30) - (v17 + v18) + 1654261948);
  v21 = v20 ^ 0xCEDD23BD ^ (v18 - ((2 * v18 + 986443400) & v10) + 856178544);
  HIDWORD(v19) = v20 ^ 0x1B7F6B91;
  LODWORD(v19) = v20 ^ 0x40000000;
  v22 = v20 ^ 0xCEDD23BD ^ (v17 - (v10 & (2 * v17)) - 1784526804);
  v23 = (v20 ^ v11) + v16;
  v24 = v23 ^ v22 ^ ((v19 >> 30) - v21);
  v25 = v24 - 2065544945 - ((2 * v24 + 887478162) & 0xD4DEBA8C);
  v26 = v25 ^ (v22 + v7 - ((2 * v22) & 0xD4DEBA8C));
  v27 = v25 ^ (v23 + v7 - ((2 * v23) & 0xD4DEBA8C));
  HIDWORD(v19) = v25 ^ 0xA6F5D46;
  LODWORD(v19) = v25 ^ 0x60000000;
  v28 = (v19 >> 28) - v26 + v21 + (v25 ^ 0x9590A2B9) + 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))(v6
                                                                              + 8 * ((85 * (v4 != 304478135)) ^ v8)))(a1, 2318068743, v28 ^ 0x4A23AF8Cu, v26 - 1230928342 + ((2 * (v27 ^ v28)) & 0xDF76FB6E ^ 0x8620F824) + (v27 ^ v28 ^ 0x3CEB03E5) - 176368646, 849321132);
}

uint64_t sub_1CF303904@<X0>(int a1@<W1>, int a2@<W4>, int a3@<W7>, unsigned int a4@<W8>)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  unint64_t v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  int v30;

  v10 = *(_DWORD *)(v7 + 4 * v8 - 3621896752);
  v11 = (v4 ^ 0xDD5ABC33) + (v8 - 1673081951 * v10 - 145011253) * ((a3 - 1357100698) & 0x50E3B7CF ^ 0x101F3B7D);
  v12 = LODWORD(STACK[0x678]) - 1537040335;
  v13 = (v11 + v12 + 1424854527 * (v11 - (((v11 * (unint64_t)a4) >> 32) >> 7) * v5)) ^ (a1 - 288725605);
  v14 = (v13 + 249524732 - ((2 * v13) & 0x1DBEE3F8)) ^ a2;
  v15 = v14 - ((2 * v14 + 932359578) & 0x4F000CD0) + 55139637;
  v16 = v15 ^ 0x27800668;
  v17 = v16 + a1 - 288725605;
  v18 = a2 ^ 0x295F7794 ^ v15;
  v19 = v16 + v12;
  v20 = ((v15 >> 30)
       - v19
       - v17
       + (v16 << (((v10 & 0xD6 ^ 0xD6) + (v10 & 0xD6)) & 0xAE ^ 0xF1 ^ (((v14 - ((2 * v14 - 102) & 0xD0) + 53) & 0x75 ^ 0x60)
                                                                      + ((50 - v14) & 0x75u))))) ^ v18;
  v21 = v20 ^ 0xA384D391 ^ (v17 - 117721088 - ((2 * v17) & 0xF1F77000));
  v22 = (v20 ^ v9) + v18;
  HIDWORD(v23) = v20 ^ 0x1B7F6B91;
  LODWORD(v23) = v20 ^ 0x40000000;
  v24 = v20 ^ 0xA384D391 ^ (v19 - 117721088 - ((2 * v19) & 0xF1F77000));
  v25 = v22 ^ v21 ^ ((v23 >> 30) - v24);
  v26 = v25 - ((2 * v25 + 887478162) & 0xAE82EFC2) - 239836246;
  v27 = v26 ^ (v22 - 683575327 - ((2 * v22) & 0xAE82EFC2));
  v28 = v26 ^ (v21 - 683575327 - ((2 * v21) & 0xAE82EFC2));
  HIDWORD(v23) = v26 ^ 0x74177E1;
  LODWORD(v23) = v26 ^ 0xD0000000;
  v29 = v24 + (v26 ^ 0x28BE881E) + 1;
  v30 = v27 ^ ((v23 >> 28) - v28 + v29);
  LODWORD(STACK[0x678]) = (((v30 ^ 0x53507E52) + v29) ^ 0x7FFFFFDF)
                        - 610443280
                        + ((2 * ((v30 ^ 0x53507E52) + v29)) & 0xFFFFFFBF);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((55 * (v8 == 905474261)) ^ a3)) - 8))();
}

uint64_t sub_1CF303C1C(uint64_t a1, int a2, int a3, int a4, int a5, int a6)
{
  int v6;
  int v7;
  char v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  char v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  char v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  unint64_t v58;
  int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  int v64;
  int v65;
  unsigned int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  int v101;
  int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  unsigned int v115;
  int v116;
  int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  int v121;
  int v122;
  unsigned int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  int v144;
  int v145;
  unsigned int v146;
  int v147;
  int v148;
  unsigned int v149;
  int v150;
  int v151;
  unsigned int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  unsigned int v159;
  int v160;
  int v161;
  unsigned int v162;
  unsigned int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  int v172;
  uint64_t v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  int v178;
  int v179;
  unsigned int v180;
  int v181;
  int v182;
  unsigned int v183;
  int v184;
  unsigned int v185;
  unsigned int v186;
  int v187;
  int v188;
  int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  int v193;
  unsigned int v194;
  int v195;
  int v196;
  int v197;
  unsigned int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  unsigned int v212;
  int v213;
  unsigned int v214;
  int v215;
  unsigned int v216;
  unsigned int v217;
  int v218;
  int v219;
  int v220;
  unsigned int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  unsigned int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  unsigned int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  unsigned int v246;
  int v247;
  unsigned int v248;
  int v249;
  int v250;
  unsigned int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  unsigned int v258;
  int v259;
  unsigned int v260;
  int v261;
  unsigned int v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  int v266;
  unsigned int v267;
  unsigned int v268;
  int v269;
  unsigned int v270;
  int v271;
  int v272;
  unsigned int v273;
  unsigned int v274;
  uint64_t v275;
  int v276;
  int v277;
  unsigned int v278;
  int v279;
  int v280;
  int v281;
  unsigned int v282;
  int v283;
  unsigned int v284;
  unsigned int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  unsigned int v290;
  int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  int v298;
  int v299;
  int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  int v304;
  int v305;
  unsigned int v306;
  unsigned int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  int v316;
  int v317;
  unsigned int v318;
  int v319;
  unsigned int v320;
  int v321;
  unsigned int v322;
  int v323;
  unsigned int v324;
  int v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  unsigned int v338;
  unsigned int v339;
  int v340;
  int v341;
  int v342;
  unsigned int v343;
  unsigned int v344;
  unsigned int v345;
  unsigned int v346;
  unsigned int v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  int v352;
  int v353;
  unsigned int v354;
  int v355;
  unsigned int v356;
  unsigned int v357;
  int v358;
  unsigned int v359;
  int v360;
  int v361;
  int v362;
  int v363;
  unsigned int v364;
  int v365;
  int v366;
  int v367;
  int v368;
  unsigned int v369;
  int v370;
  int v371;
  int v372;
  unsigned int v373;
  unsigned int v374;
  int v375;
  unsigned int v376;
  unsigned int v377;
  int v378;
  int v379;
  unsigned int v380;
  int v381;
  unsigned int v382;
  int v383;
  int v384;
  unsigned int v385;
  int v386;
  int v387;
  int v388;
  int v389;
  unsigned int v390;
  int v391;
  int v392;
  unsigned int v393;
  unsigned int v394;
  unsigned int v395;
  unsigned int v396;
  unsigned int v397;
  unsigned int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  unsigned int v403;
  unsigned int v404;
  int v405;
  unsigned int v406;
  unsigned int v407;
  int v408;
  unsigned int v409;
  unsigned int v410;
  int v411;
  uint64_t v412;
  int v413;
  int v414;
  int v415;
  int v416;
  unsigned int v417;
  int v418;
  unsigned int v419;
  int v420;
  int v421;
  int v422;
  int v423;
  unsigned int v424;
  int v425;
  int v426;
  int v427;
  int v428;
  unsigned int v429;
  int v430;
  int v431;
  uint64_t v432;
  int v433;
  unsigned int v434;
  unsigned int v435;
  unsigned int v436;
  unsigned int v437;
  int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  int v442;
  int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  int v447;
  int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  int v455;
  int v456;
  int v457;
  unsigned int v458;
  unsigned int v459;
  int v460;
  unsigned int v461;
  int v462;
  unsigned int v463;
  unsigned int v464;
  unsigned int v465;
  unsigned int v466;
  unsigned int v467;
  unsigned int v468;
  unsigned int v469;
  unsigned int v470;
  unsigned int v471;
  unsigned int v472;
  int v473;
  int v474;
  int v475;
  int v476;
  int v477;
  int v478;
  unsigned int v479;
  unsigned int v480;
  unsigned int v481;
  int v482;
  int v483;
  unsigned int v484;
  unsigned int v485;
  int v486;
  int v487;
  int v488;
  int v489;
  unsigned int v490;
  unsigned int v491;
  unsigned int v492;
  int v493;
  unsigned int v494;
  unsigned int v495;
  int v496;
  int v497;
  int v498;
  int v499;
  int v500;
  int v501;
  int v502;
  int v503;
  int v504;
  unsigned int v505;
  int v506;
  int v507;
  int v508;
  unsigned int v509;
  int v510;
  int v511;
  int v512;
  int v513;
  unsigned int v514;
  int v515;
  int v516;
  int v517;
  unsigned int v518;
  int v519;
  int v520;
  int v521;
  int v522;
  int v523;
  int v524;
  int v525;
  unsigned int v526;
  unsigned int v527;
  int v528;
  int v529;
  int v530;
  int v531;
  unsigned int v532;
  int v533;
  int v534;
  int v535;
  int v536;
  int v537;
  int v538;
  int v539;
  int v540;
  int v541;
  int v542;
  int v543;
  int v544;
  int v545;
  int v546;
  int v547;
  unsigned int v548;
  int v549;
  int v550;
  int v551;
  int v552;
  int v553;
  int v554;
  int v555;
  int v556;
  int v557;
  int v558;
  int v559;
  int v560;
  int v561;
  int v562;
  int v563;
  int v564;
  int v565;
  int v566;
  int v567;
  int v568;
  int v569;
  unsigned int v570;
  unsigned int v571;
  unsigned int v572;
  unsigned int v573;
  int v574;
  int v575;
  int v576;
  int v577;
  int v578;
  int v579;
  int v580;
  int v581;
  int v582;
  uint64_t (*v583)(void);
  int v584;

  LODWORD(STACK[0x668]) = a5;
  LODWORD(STACK[0x658]) = v6;
  LODWORD(STACK[0x648]) = a3;
  LODWORD(STACK[0x440]) = 0;
  v10 = 107 * (v7 ^ 0x2C0);
  v11 = STACK[0x7A4];
  v12 = STACK[0x7AC];
  LODWORD(STACK[0x660]) = v10;
  v13 = (v10 - 1673083449) * v11;
  LODWORD(STACK[0x638]) = -1673081951 * v12;
  v14 = v12;
  LODWORD(STACK[0x5E4]) = v12;
  v15 = -1673081951 * v12 - 235766057 - ((948803394 * v12 + 968328188) & 0xAA2D6CCA) - 1652;
  v16 = v13 - 2;
  LODWORD(STACK[0x5F8]) = v13 - 1663319554;
  LOBYTE(v12) = 1 - v13;
  v17 = v15 ^ 0x5516B665;
  v18 = STACK[0x7BC];
  LODWORD(STACK[0x5FC]) = STACK[0x7BC];
  v19 = -1673081951 * v18 - ((948803394 * v18 + 968328188) & 0xB3BE31CE);
  LODWORD(STACK[0x680]) = a2;
  LODWORD(STACK[0x600]) = a6;
  v20 = (4 * v15) ^ (8 * v15) ^ 0xFCEF6ABC;
  LODWORD(STACK[0x63C]) = v15 >> 29;
  v21 = (v15 >> 27) ^ (v15 >> 28) ^ (v15 >> 29) ^ (v17 >> ((v16 | v12) & 0x1E));
  v22 = ((v15 >> 27) ^ (v15 >> 28) ^ (v15 >> 29) ^ (v17 >> ((v16 | v12) & 0x1E))) & 0x11;
  LODWORD(STACK[0x610]) = a4;
  v23 = (v17 >> ((v8 & 9 ^ 9) + (v8 & 9))) ^ (v15 >> 15) ^ (v17 >> (v21 & 0xB ^ 2 | v21 & 0xB ^ 9));
  v24 = (v15 >> 21) ^ 0xC105982E;
  v25 = ((v23 ^ (v15 >> 2) ^ 0x154507B4) - ((2 * (v23 ^ (v15 >> 2) ^ 0x154507B4)) & 0x820B350C) - 1056597370) ^ v24;
  v26 = v21 ^ 0x5C23D95B ^ (v25 - ((2 * v25) & 0xB847B2AC) + 1545853270);
  v27 = (v15 >> 19) ^ 0xC4C802EC;
  LODWORD(STACK[0x640]) = v27;
  v28 = v27 ^ (v15 >> 18) ^ 0x1545;
  v29 = v28 ^ (v26 - ((2 * v26) & 0x8990109C) - 993523634);
  v30 = v29 - ((2 * v29) & 0x1C3C715C);
  v31 = (v15 >> 14) ^ (v15 >> 10) ^ 0xE0A2959;
  LODWORD(STACK[0x630]) = v31;
  v32 = (v15 >> 13) ^ 0x2A8B5;
  v33 = (v31 ^ v32 ^ (v30 + 236861614)) - ((2 * (v31 ^ v32 ^ (v30 + 236861614))) & 0x7CEAE6E);
  LODWORD(STACK[0x624]) = v15 >> 6;
  v34 = (v15 >> 6) ^ 0x82B30DEE;
  LODWORD(STACK[0x61C]) = v34;
  LODWORD(STACK[0x60C]) = v15 >> 4;
  v35 = v34 ^ (v15 >> 5);
  LODWORD(STACK[0x634]) = v35;
  v36 = v35 ^ (v15 >> 4) ^ (v33 - 2081990857);
  v37 = (v36 >> 27) ^ (v23 >> 30);
  v38 = (v15 << 7) ^ 0x8B5B3280;
  v39 = v37 ^ ((v36 ^ 0x2A8B5B3) >> 21);
  v40 = (-1663319554 - 1673081951 * LODWORD(STACK[0x7A0])) ^ (16 * v15) ^ (32 * v15) ^ (v15 << 30) ^ v20 ^ (v17 << ((v22 ^ 0x10) + (v22 ^ 1u))) ^ (4 * (v36 ^ 0x2A8B5B3)) ^ (32 * (v36 ^ 0x2A8B5B3)) ^ ((v36 ^ 0x2A8B5B3) << 11);
  LODWORD(STACK[0x620]) = v39;
  v41 = v40 ^ (4 * v39) ^ (32 * v39) ^ (v39 << 11);
  v42 = ((v15 << 13) ^ 0xD6CCA000) - ((2 * ((v15 << 13) ^ 0xD6CCA000)) & 0x725F8000) + 959436935;
  LODWORD(STACK[0x64C]) = v42;
  v43 = ((v41 ^ 0x878F0E40) - 2 * ((v41 ^ 0x878F0E40) & 0x392FD88F ^ v41 & 8) + 959436935) ^ v42;
  v44 = (v15 << 14) ^ 0xAD994000;
  LODWORD(STACK[0x5F4]) = v44;
  v45 = ((v15 << 11) ^ 0xB5B32800) - ((2 * ((v15 << 11) ^ 0xB5B32800)) & 0x1B7FA000) - 1916807247;
  LODWORD(STACK[0x588]) = v45;
  v46 = (v45 ^ v44 ^ (v43 - ((2 * v43) & 0x1B7FAF62) - 1916807247))
      - 2
      * ((v45 ^ v44 ^ (v43 - ((2 * v43) & 0x1B7FAF62) - 1916807247)) & 0x10F1F36C ^ (v43
                                                                                   - ((2 * v43) & 0x1B7FAF62)
                                                                                   - 1916807247) & 4);
  v47 = ((v15 << 18) ^ 0xD9940000) - ((2 * ((v15 << 18) ^ 0xD9940000)) & 0x21E00000) - 1863191704;
  LODWORD(STACK[0x650]) = v47;
  v48 = (v15 << 19) ^ 0xB3280000;
  LODWORD(STACK[0x5F0]) = v48;
  v49 = ((v46 - 1863191704) ^ v47 ^ v48)
      - 2 * (((v46 - 1863191704) ^ v47 ^ v48) & 0x34EBCC1F ^ ((v46 - 1863191704) ^ v47) & 0x19);
  v50 = ((v15 << 21) ^ 0xCCA00000) - ((2 * ((v15 << 21) ^ 0xCCA00000)) & 0x69C00000) + 887868422;
  LODWORD(STACK[0x670]) = v50;
  v51 = (v15 << 22) ^ 0x99400000;
  LODWORD(STACK[0x628]) = v51;
  v52 = (v15 << 23) ^ 0x32800000;
  LODWORD(STACK[0x62C]) = v52;
  v53 = ((v15 << 26) ^ 0x94000000) - ((2 * ((v15 << 26) ^ 0x94000000)) & 0x8000000) - 2075737437;
  v54 = (v15 << 27) ^ 0x28000000;
  v55 = (v52 ^ v51 ^ v50 ^ (v49 + 887868422)) - ((2 * (v52 ^ v51 ^ v50 ^ (v49 + 887868422))) & 0x88D8546) - 2075737437;
  v56 = (v15 << 28) ^ 0x50000000;
  LODWORD(STACK[0x5EC]) = v56;
  LODWORD(STACK[0x560]) = v53;
  v57 = v36 ^ 0xFF6FD0E5 ^ ((v56 ^ v54 ^ v53 ^ v55) - 2 * ((v56 ^ v54 ^ v53 ^ v55) & 0x78960E38 ^ v55 & 8) - 124383696);
  HIDWORD(v58) = v14;
  LODWORD(v58) = (v38 - ((2 * v38) & 0xAA2D6C00) + 1427551845) ^ v15;
  LODWORD(STACK[0x5D8]) = v57 - ((2 * v57) & 0xA8F97954) - 730022742;
  LODWORD(STACK[0x5E8]) = (v58 >> 1) ^ (v15 << 10 >> 1) ^ 0xCA9B8DCA;
  v59 = (v15 >> 22) ^ 0x154;
  v60 = v59 ^ HIWORD(v15) ^ (v15 >> 20) ^ (v15 >> 25) ^ 0x506D;
  v61 = (v60 - ((2 * v60) & 0x1350C) - 1056597370) ^ v24;
  v62 = v28 ^ (v61 - ((2 * v61) & 0x990109C) - 993523634);
  v63 = ((v15 >> 14) ^ 0xE971DFC ^ (v62 + 236861614 + (~(2 * v62) | 0xE3C38EA3) + 1)) - 0x10000000;
  v64 = (v15 >> 1) ^ (v15 >> 12) ^ (v15 >> 11) ^ v32;
  v65 = (v15 >> 7) ^ 0xAA2D6C;
  v66 = LODWORD(STACK[0x61C]) ^ LODWORD(STACK[0x60C]) ^ ((v64 ^ v65 ^ 0x2A84A88F ^ v63)
                                                       - 2081990857
                                                       + (~(2 * (v64 ^ v65 ^ 0x2A84A88F ^ v63)) | 0xF8315191)
                                                       + 1);
  LOBYTE(v63) = STACK[0x624] & 0x1E ^ 6 | STACK[0x624] & 0x1E ^ 0x18;
  LODWORD(STACK[0x5A0]) = v66;
  LODWORD(STACK[0x5AC]) = (v66 >> 21) ^ (v66 >> 27) ^ ((v66 ^ 0xF5D91A6E) >> v63);
  v67 = (v15 << 8) ^ (v15 << 15) ^ (v15 << 10) ^ v38 ^ v20 ^ 0x175D7100;
  v68 = (v67 - 2 * (v67 & 0xDBFD7B4 ^ v20 & 4) - 1916807247) ^ v45;
  v69 = (v68 - ((2 * v68) & 0x725FB10E) + 959436935) ^ LODWORD(STACK[0x64C]);
  v70 = ((v15 << 16) ^ 0xB6650000) - ((2 * ((v15 << 16) ^ 0xB6650000)) & 0x9D2E0000) + 1318544156;
  LODWORD(STACK[0x594]) = v70;
  v71 = (v69 - ((2 * v69) & 0x9D2EC638) + 1318544156) ^ v70;
  v72 = (v15 << 20) ^ 0x66500000;
  LODWORD(STACK[0x584]) = v72;
  v73 = LODWORD(STACK[0x650]) ^ v72 ^ (v71 - ((2 * v71) & 0x21E3E6D0) - 1863191704);
  v74 = v73 + (LODWORD(STACK[0x670]) ^ 0x34EBCC06) - 2 * (v73 & (LODWORD(STACK[0x670]) ^ 0x34EBCC06));
  LODWORD(v17) = (v15 >> 25) ^ 0x2A ^ HIWORD(v15) ^ (v15 >> 30) ^ HIBYTE(v15) ^ (v15 >> 17) ^ (v15 >> 9) ^ (v15 >> 11) ^ LODWORD(STACK[0x63C]) ^ v59 ^ (v17 >> (((v8 ^ 0xE1) + (v8 & 0xB3 ^ 0x5E) + (v8 & 0x4C ^ 0xC) + 1) & 5 | 8));
  LODWORD(v17) = ((v17 ^ 0x205646) - 2 * ((v17 ^ 0x205646) & 0x41059A87 ^ v17 & 1) - 1056597370) ^ v24;
  LODWORD(v17) = (v17 - ((2 * v17) & 0x8990109C) - 993523634) ^ LODWORD(STACK[0x640]);
  LODWORD(v17) = LODWORD(STACK[0x630]) ^ (v17 - ((2 * v17) & 0x1C3C715C) + 236861614);
  LODWORD(v17) = v17 + ((v15 >> 8) ^ 0x5516B6) - 2 * (v17 & ((v15 >> 8) ^ 0x5516B6));
  LODWORD(v17) = v17 - ((2 * v17) & 0x3F7F3C1A) + 532651533;
  v75 = v17 ^ (v65 - 2 * (v65 & 0x1BF9E1F ^ (v15 >> 7) & 0x12) + 532651533);
  v76 = LODWORD(STACK[0x634]) ^ (v75 - ((2 * v75) & 0x7CEAE6E) - 2081990857);
  v77 = v19 + 1991957221;
  LODWORD(STACK[0x634]) = (((v19 + 1991957221) << 7) ^ 0xEF8C7380)
                        - ((2 * (((v19 + 1991957221) << 7) ^ 0xEF8C7380)) & 0x12FCCA00);
  LODWORD(STACK[0x5BC]) = v19 + 1991957230;
  v78 = -1991957222 - v19;
  v79 = (-1673081951 * LODWORD(STACK[0x7A8]) - 1663319554) ^ (v15 << 24) ^ LODWORD(STACK[0x628]);
  v80 = (v15 << 25) ^ 0xCA000000;
  LODWORD(STACK[0x568]) = v80;
  LOBYTE(v19) = v15;
  LODWORD(STACK[0x4E4]) = v15;
  v81 = v79 ^ LODWORD(STACK[0x62C]) ^ v80 ^ v74;
  v82 = (v17 >> 30) ^ (v17 >> 27) ^ (v76 >> 21);
  LODWORD(STACK[0x558]) = v82;
  LODWORD(v17) = v81 ^ (4 * v76) ^ (32 * v76) ^ (v76 << 11) ^ (4 * v82) ^ (32 * v82) ^ (v82 << 11) ^ 0x7F194A34;
  v83 = v53 ^ v54 ^ v76 ^ (v17 - ((2 * v17) & 0x88D8546) - 2075737437);
  LODWORD(STACK[0x62C]) = ((v77 << 10) ^ 0x7C639C00) - ((2 * ((v77 << 10) ^ 0x7C639C00)) & 0x8F410000);
  v84 = (v77 >> 30) ^ 0xD5480939;
  LODWORD(STACK[0x528]) = v84;
  LODWORD(STACK[0x5D4]) = v78 >> 31;
  v85 = (v77 >> 30) ^ (v78 >> 31);
  LODWORD(STACK[0x580]) = ((v77 << 16) ^ 0x18E70000) - ((2 * ((v77 << 16) ^ 0x18E70000)) & 0xA25E0000);
  LODWORD(STACK[0x5B8]) = ((v77 << 26) ^ 0x9C000000) - ((2 * ((v77 << 26) ^ 0x9C000000)) & 0x9FFFFFFF);
  LODWORD(STACK[0x61C]) = ((v77 << 20) ^ 0x8E700000) - ((2 * ((v77 << 20) ^ 0x8E700000)) & 0x8FC00000);
  LODWORD(STACK[0x398]) = -1946157056;
  LODWORD(STACK[0x624]) = ((v77 << 22) ^ 0x39C00000) - ((v77 << 23) & 0x8C000000);
  LODWORD(STACK[0x5B0]) = ((v77 << 28) ^ 0x70000000) - ((2 * ((v77 << 28) ^ 0x70000000)) & 0xBFFFFFFF);
  v86 = (v77 >> 26) ^ (v77 >> 3) ^ 0x1B3BE32A ^ ((v77 ^ 0xD9DF18E7) >> (v85
                                                                      + (v85 ^ 3)
                                                                      + ((((v77 >> 30) & 2) + ((v77 >> 30) & 2 ^ 2) + 52) ^ 0x36)
                                                                      + 12));
  LODWORD(STACK[0x548]) = v77 >> 29;
  v87 = (v77 >> 25) ^ 0x3D60F849;
  v88 = (((v77 >> 29) ^ 0x83417308 ^ v85 ^ (v86 - ((2 * v86) & 0x682E61A) - 2092862707))
       - ((2 * ((v77 >> 29) ^ 0x83417308 ^ v85 ^ (v86 - ((2 * v86) & 0x682E61A) - 2092862707))) & 0x7AC1F04A)
       + 1029765157) ^ v87;
  LODWORD(STACK[0x60C]) = v9;
  v89 = (v77 >> 22) ^ 0xE47BB748;
  v90 = (v88 - ((2 * v88) & 0xC8F7685E) - 461654993) ^ v89;
  v91 = (v77 >> 19) ^ 0x1D6067FA;
  v92 = (v90 - ((2 * v90) & 0x3AC0F982) + 492862657) ^ v91;
  v93 = (v77 >> 18) ^ 0x93578FE8;
  v94 = (v92 - ((2 * v92) & 0x26AF733E) - 1822967393) ^ v93;
  v95 = HIWORD(v77) ^ 0xBD7E28E0;
  v96 = (v94 - ((2 * v94) & 0x7AFDE27E) - 1115754177) ^ v95;
  v97 = (v77 >> 12) ^ 0xE790E096;
  v98 = (v96 - ((2 * v96) & 0xCF3AFACE) - 409109145) ^ v97;
  v99 = (v77 >> 10) ^ (v77 >> 8) ^ 0x14DF5160;
  LODWORD(STACK[0x540]) = v99;
  v100 = (v77 >> 7) ^ 0xA8B0EC34;
  v101 = ((v99 ^ (v98 - ((2 * v98) & 0x2861F37C) + 338753982))
        - ((2 * (v99 ^ (v98 - ((2 * v98) & 0x2861F37C) + 338753982))) & 0x5206A40A)
        - 1459400187) ^ v100;
  LODWORD(STACK[0x630]) = v101 - ((2 * v101) & 0x6878908E);
  v102 = (8 * v77) ^ (4 * v77);
  LODWORD(STACK[0x570]) = v102;
  v103 = v102 ^ 0x27221D45;
  v104 = (((16 * v77) ^ (32 * v77) ^ 0xA6129290)
        - ((2 * ((16 * v77) ^ (32 * v77) ^ 0xA6129290)) & 0x1D4D73C0)
        - 1901676063) ^ v102 ^ 0x27221D45;
  v105 = (((v77 << 13) ^ 0xE31CE000) - 1162805463 + (~(2 * ((v77 << 13) ^ 0xE31CE000)) | 0x8A9E3FFF)) | 1;
  LODWORD(v17) = (v104 - ((2 * v104) & 0x7561FE52) - 1162805463) ^ v105;
  LODWORD(STACK[0x63C]) = v105;
  LODWORD(STACK[0x520]) = ((v77 << 18) ^ 0x639C0000) - ((2 * ((v77 << 18) ^ 0x639C0000)) & 0x44300000);
  v106 = ((v77 << 11) ^ 0xF8C73800) - ((2 * ((v77 << 11) ^ 0xF8C73800)) & 0xA235C000) + 1360717718;
  LODWORD(v17) = (v17 - ((2 * v17) & 0xA235CF2C) + 1360717718) ^ v106;
  LODWORD(STACK[0x5C8]) = v106;
  LODWORD(STACK[0x628]) = (v77 << 23) ^ 0x73800000;
  v107 = (v77 >> 27) ^ (v77 >> 15) ^ (v77 >> 29) ^ 0x1B3A3;
  v108 = (v107 - ((2 * v107) & 0x1274) - 716699334) ^ v84;
  v109 = (v108 - 664948650 - ((2 * v108) & 0x30BB60B6) + 5) ^ (v77 >> 28) ^ 0xD85DB056;
  v110 = (v77 >> 21) ^ 0xA4721A93;
  v111 = (v109 - ((2 * v109) & 0x48E438BA) - 1536025507) ^ v110;
  v112 = (v111 - ((2 * v111) & 0x3AC0F982) + 492862657) ^ v91;
  v113 = (v112 - ((2 * v112) & 0x26AF733E) - 1822967393) ^ v93;
  LODWORD(STACK[0x530]) = ((v77 << 21) ^ 0x1CE00000) - ((2 * ((v77 << 21) ^ 0x1CE00000)) & 0x64C00000);
  v114 = (v77 << 17) ^ 0x31CE0000;
  LODWORD(STACK[0x550]) = v114;
  v115 = ((v77 << 14) ^ 0xC639C000) - ((2 * ((v77 << 14) ^ 0xC639C000)) & 0xFD668000) + 2125684579;
  LODWORD(STACK[0x640]) = v115;
  LODWORD(v17) = (v17 - ((2 * v17) & 0xFD66BEC6) + 2125684579) ^ v115;
  LODWORD(STACK[0x578]) = (v17 ^ v114) - 2 * ((v17 ^ v114) & 0x221B885F ^ v17 & 0x12);
  v116 = (v77 >> 14) ^ 0x20F4F02A;
  v117 = (v77 >> 13) ^ 0x6CEF8 ^ v116;
  LODWORD(v17) = v117 ^ (v113 - ((2 * v113) & 0x41EF2EAC) + 553097046);
  v118 = (v77 >> 11) ^ 0x957A78AC;
  v119 = v118 ^ (v77 >> 10) ^ (v17 - ((2 * v17) & 0x2AC2869E) - 1788787889);
  LODWORD(STACK[0x538]) = v119;
  v120 = ((v77 ^ 0xD9DF18E7) >> ((((v19 & 0x90) + ((1 - LODWORD(STACK[0x638])) & 0x90)) ^ 0x6F) + 10)) ^ ((v77 ^ 0xD9DF18E7) >> 2);
  v121 = (v77 >> 6) ^ 0x375B3424;
  LODWORD(v17) = (v120 - ((2 * v120) & 0xD26729F6) + 1764988155) ^ 0x6905E33D ^ v119;
  v122 = v121 ^ (v77 >> 4);
  v123 = v122 ^ (v17 - ((2 * v17) & 0x6878908E) + 876365895);
  LODWORD(STACK[0x598]) = (v123 >> 27) ^ (v17 >> 30);
  LODWORD(v17) = (((v77 >> 20) ^ (v77 >> 1) ^ 0x6CEF81EE)
                - 2 * (((v77 >> 20) ^ (v77 >> 1) ^ 0x6CEF81EE) & 0x647BB43F ^ ((v77 >> 20) ^ (v77 >> 1)) & 0x10)
                - 461654993) ^ v89;
  LODWORD(v17) = (v17 - ((2 * v17) & 0x7AC1F04A) + 1029765157) ^ v87;
  LODWORD(v17) = (v17 - ((2 * v17) & 0x48E438BA) - 1536025507) ^ v110;
  LODWORD(v17) = (v17 - ((2 * v17) & 0x3AC0F982) + 492862657) ^ v91;
  LODWORD(v17) = (v17 - ((2 * v17) & 0x26AF733E) - 1822967393) ^ v93;
  LODWORD(v17) = (v17 - ((2 * v17) & 0x7AFDE27E) - 1115754177) ^ v95;
  LODWORD(v17) = v117 ^ (v17 - ((2 * v17) & 0x41EF2EAC) + 553097046);
  LODWORD(v17) = (v17 - ((2 * v17) & 0xCF3AFACE) - 409109145) ^ v97;
  LODWORD(v17) = (v17 - ((2 * v17) & 0x2AC2869E) - 1788787889) ^ v118;
  LODWORD(v17) = (v17 - ((2 * v17) & 0x5206A40A) - 1459400187) ^ v100;
  LODWORD(STACK[0x4F0]) = v122 ^ (LODWORD(STACK[0x630]) + 876365895);
  LODWORD(STACK[0x5C0]) = v122 ^ (v17 - ((2 * v17) & 0x6878908E) + 876365895);
  LODWORD(v17) = (((v77 << 8) ^ (v77 << 15) ^ 0x536B6700)
                - ((2 * ((v77 << 8) ^ (v77 << 15) ^ 0x536B6700)) & 0x1D4D7200)
                - 1901676063) ^ v103;
  v124 = LODWORD(STACK[0x634]) + 159278401;
  LODWORD(STACK[0x630]) = v124;
  LODWORD(v17) = (v17 - ((2 * v17) & 0x12FCCA82) + 159278401) ^ v124;
  v125 = LODWORD(STACK[0x62C]) - 945782532;
  LODWORD(STACK[0x638]) = v125;
  LODWORD(v17) = (v17 - ((2 * v17) & 0x8F4101F8) - 945782532) ^ v125;
  LODWORD(v17) = (v17 - ((2 * v17) & 0xA235CF2C) + 1360717718) ^ v106;
  v126 = LODWORD(STACK[0x580]) - 785385475;
  LODWORD(STACK[0x634]) = v126;
  LODWORD(v17) = (((v17 - ((2 * v17) & 0x7561FE52) - 1162805463) ^ v105)
                - 2
                * (((v17 - ((2 * v17) & 0x7561FE52) - 1162805463) ^ v105) & 0x512FF7FF ^ (v17
                                                                                        - ((2 * v17) & 0x7561FE52)
                                                                                        - 1162805463) & 2)
                - 785385475) ^ v126;
  v127 = LODWORD(STACK[0x520]) - 1575253939;
  LODWORD(v17) = (v17 - ((2 * v17) & 0x4437109A) - 1575253939) ^ v127;
  v128 = LODWORD(STACK[0x61C]) + 1206173168;
  LODWORD(STACK[0x62C]) = v128;
  LODWORD(v17) = (v17 - ((2 * v17) & 0x8FC97BE0) + 1206173168) ^ v128;
  v129 = HIBYTE(v77) ^ (v77 >> 17) ^ (v77 >> 9) ^ LODWORD(STACK[0x548]);
  v130 = ((v129 ^ 0x6C83BC) - 2 * ((v129 ^ 0x6C83BC) & 0x48093B ^ v129 & 1) - 716699334) ^ LODWORD(STACK[0x528]);
  v131 = (v130 - ((2 * v130) & 0x7AC1F04A) + 1029765157) ^ v87;
  v132 = (v131 - ((2 * v131) & 0x48F7685E) - 461654993) ^ v89;
  v133 = (v132 - ((2 * v132) & 0x48E438BA) - 1536025507) ^ v110;
  v134 = (v133 - ((2 * v133) & 0x3AC0F982) + 492862657) ^ v91;
  v135 = (v134 - ((2 * v134) & 0x7AFDE27E) - 1115754177) ^ v95;
  v136 = (v135 - ((2 * v135) & 0x41EF2EAC) + 553097046) ^ v116;
  v137 = (v136 - ((2 * v136) & 0xCF3AFACE) - 409109145) ^ v97;
  v138 = (v137 - ((2 * v137) & 0x2AC2869E) - 1788787889) ^ v118;
  v139 = LODWORD(STACK[0x540]) ^ (v138 - ((2 * v138) & 0x2861F37C) + 338753982);
  v140 = (v139 - ((2 * v139) & 0x5206A40A) - 1459400187) ^ v100;
  LODWORD(STACK[0x548]) = v123 ^ (v77 >> 5);
  v141 = v121 ^ (v77 >> 5) ^ (v140 - ((2 * v140) & 0x6878908E) + 876365895);
  v142 = STACK[0x558];
  v143 = v83 ^ LODWORD(STACK[0x558]);
  v144 = v143 ^ 0x7DFA6326;
  LODWORD(STACK[0x520]) = (((v143 ^ 0x7DFA6326) << 10) ^ 0x4B5A0C00)
                        - ((2 * (((v143 ^ 0x7DFA6326) << 10) ^ 0x4B5A0C00)) & 0xD25EF000);
  LODWORD(STACK[0x518]) = (((v143 ^ 0x7DFA6326) << 16) ^ 0xD6830000)
                        - ((2 * (((v143 ^ 0x7DFA6326) << 16) ^ 0xD6830000)) & 0x31C80000);
  LODWORD(STACK[0x510]) = (((v143 ^ 0x7DFA6326) << 13) ^ 0x5AD06000)
                        - ((2 * (((v143 ^ 0x7DFA6326) << 13) ^ 0x5AD06000)) & 0xC6088000);
  LODWORD(STACK[0x508]) = (((v143 ^ 0x7DFA6326) << 7) ^ 0xA96B4180)
                        - ((2 * (((v143 ^ 0x7DFA6326) << 7) ^ 0xA96B4180)) & 0x76741400);
  LODWORD(v17) = (-1663319554 - 1673081951 * LODWORD(STACK[0x7B8])) ^ ((v77 ^ 0xD9DF18E7) << 24) ^ (v17
                                                                                                  - ((2 * v17) & 0x64CCF5C0)
                                                                                                  - 1301906720);
  v145 = LODWORD(STACK[0x530]) - 1301906720;
  LODWORD(STACK[0x540]) = v145;
  v146 = v141 >> 21;
  LODWORD(v17) = v17 ^ (4 * v141) ^ (32 * v141) ^ (v141 << 11) ^ (4 * (v141 >> 21));
  v147 = v145 ^ (v141 >> 21 << 11) ^ (32 * (v141 >> 21)) ^ 0xB52375E4 ^ v17;
  LODWORD(v17) = v147 - 2 * (v147 & 0x463742DE ^ v17 & 8);
  v148 = LODWORD(STACK[0x624]) + 1178026710;
  LODWORD(STACK[0x61C]) = v148;
  LODWORD(v17) = ((v17 + 1178026710) ^ v148 ^ LODWORD(STACK[0x628]))
               - 2
               * (((v17 + 1178026710) ^ v148 ^ LODWORD(STACK[0x628])) & 0x7E92DD57 ^ ((v17 + 1178026710) ^ v148) & 0x16);
  v149 = 2123554113 - ((v77 << 25) ^ 0xCE000000);
  LODWORD(STACK[0x624]) = v149;
  v150 = LODWORD(STACK[0x5B8]) - 843466210;
  LODWORD(STACK[0x4E8]) = v150;
  v151 = (v77 << 27) ^ 0x38000000;
  LODWORD(STACK[0x530]) = v151;
  v152 = v150 ^ v151 ^ v141 ^ (((v17 + 2123554113) ^ v149) - ((2 * ((v17 + 2123554113) ^ v149)) & 0x9B73743C) - 843466210);
  v153 = (2 * (v143 ^ 0x7DFA6326)) ^ ((v143 ^ 0x7DFA6326) << 6) ^ 0x2A100DC6;
  LODWORD(v17) = (4 * (v143 ^ 0x7DFA6326)) ^ (8 * (v143 ^ 0x7DFA6326)) ^ 0xFD4B5A0C;
  LODWORD(STACK[0x528]) = v17;
  v154 = v17 ^ v143 ^ 0xB4A11352 ^ (v153 - ((2 * v153) & 0x6C134DEC) - 1240881417);
  LODWORD(STACK[0x5B8]) = v154;
  LODWORD(v17) = (v83 >> 29) ^ (v83 >> 30);
  LODWORD(STACK[0x4F4]) = v17;
  v155 = (v17 ^ (v83 >> 31) ^ (v83 >> 26)) - ((2 * (v17 ^ (v83 >> 31) ^ (v83 >> 26))) & 0x38);
  LODWORD(v17) = (v83 >> 25) ^ 0x12CCA61D;
  LODWORD(STACK[0x4D4]) = v17;
  v156 = (v83 >> 22) ^ 0x75B7F54D;
  v157 = (((v155 + 315401756) ^ v17) - ((2 * ((v155 + 315401756) ^ v17)) & 0x6B6FEA8E) + 1974990151) ^ v156;
  LODWORD(STACK[0x4D8]) = v156;
  v158 = v157 - ((2 * v157) & 0x737D194E);
  LODWORD(STACK[0x500]) = (((v143 ^ 0x7DFA6326) << 20) ^ 0x68300000)
                        - ((2 * (((v143 ^ 0x7DFA6326) << 20) ^ 0x68300000)) & 0x6C400000);
  v159 = (v83 >> 19) ^ 0xB9BE8CF2;
  v160 = v159 ^ (v83 >> 18);
  v161 = v160 ^ (v158 - 1178694489);
  LOBYTE(v150) = (((v161 & 0xA5 ^ 0xA0) + (v161 & 0xA5 ^ 5))
                * ((STACK[0x538] & 0xFD ^ 0xC4) + (STACK[0x538] & 0xFD ^ 0x39))) | ((v154 & 0x73 ^ 0x63)
                                                                                  + (v154 & 0x73 ^ 0x10)) & 0x84;
  LODWORD(STACK[0x4F8]) = (((v143 ^ 0x7DFA6326) << 26) ^ 0xC000000) + (((v143 ^ 0x7DFA6326) << 27) ^ 0xE7FFFFFF);
  v162 = ((v143 ^ 0x7DFA6326) >> 8) ^ (v83 >> 15) ^ ((v143 ^ 0x7DFA6326) >> 3);
  v163 = ((v162 ^ 0xF950D57) - 2 * ((v162 ^ 0xF950D57) & 0x129E523E ^ v162 & 8) - 761376202) ^ 0xD29E529C ^ v161;
  v164 = HIWORD(v83) ^ 0x6AFD83;
  v165 = (v83 >> 12) ^ 0x2A8B;
  LODWORD(STACK[0x4E0]) = v165;
  v166 = (v143 >> 10) ^ 0xAA2D;
  v167 = v165 ^ v164 ^ v166 ^ (v163 - ((2 * v163) & 0xD5FE56) + 7012139);
  v168 = (v143 >> 7) ^ 0x239CF2A4;
  v169 = (v167 - ((2 * v167) & 0x4733479E) + 597271503) ^ v168;
  v170 = (v143 ^ 0x7DFA6326) >> 6;
  v171 = (v143 ^ 0x7DFA6326) >> 4;
  LODWORD(STACK[0x580]) = v171 ^ v170 ^ (v169 - ((2 * v169) & 0x381CC80) + 29419072);
  v172 = LODWORD(STACK[0x578]) - 1575253939;
  LODWORD(v17) = v127 ^ (v77 << 19);
  LODWORD(STACK[0x538]) = v17;
  LODWORD(v17) = v17 ^ v172;
  LODWORD(STACK[0x4EC]) = v17;
  v173 = v143 ^ 0x2A8B5A5;
  STACK[0x578] = v173 << v150;
  v174 = (v83 >> 20) ^ (v83 >> 13) ^ (v173 >> ((v17 & 0x2E | v17 & 0x2E ^ 0x2E) ^ 0x22)) ^ ((v143 ^ 0x7DFA6326) >> 1);
  v175 = ((v174 ^ 0x3FA97E2E) - ((2 * (v174 ^ 0x3FA97E2E)) & 0xEB6FEA8E) + 1974990151) ^ v156;
  LODWORD(v173) = (v83 >> 21) ^ 0x15;
  v176 = v173 ^ (v83 >> 25) ^ 0x12CCA61D ^ (v175 - ((2 * v175) & 0x25994C38) + 315401756);
  v177 = v160 ^ (v176 - 1178694489 + (~(2 * v176) | 0x8C82E6B1) + 1);
  v178 = v164 ^ (v83 >> 14) ^ (v83 >> 11) ^ 0x5FB4;
  v179 = v178 ^ ((v177 ^ 0xAA) - 2 * ((v177 ^ 0xAA) & 0x6AFF2F ^ v177 & 4) + 7012139);
  v180 = v171 ^ v168 ^ (v179 - ((2 * v179) & 0x4733479E) + 597271503);
  v181 = (v180 >> 27) ^ (v174 >> 30);
  v182 = v180 ^ v170;
  v183 = v180 ^ v170 ^ 0x7F52D68;
  v184 = v181 ^ (v183 >> 21);
  v185 = (LODWORD(STACK[0x620]) | ((v83 ^ ~v142) << 31)) ^ ((v143 ^ 0x7DFA6326) << 19) ^ ((v143 ^ 0x7DFA6326) << 12) ^ LODWORD(STACK[0x5D8]) ^ (4 * v183) ^ (32 * v183) ^ (v183 << 11) ^ (4 * v184) ^ (32 * v184) ^ (v184 << 11) ^ 0x9F0A6374;
  v186 = (v185 - ((2 * v185) & 0x6C134DEE) - 1240881417) ^ v143 ^ 0xB4A11352;
  v187 = LODWORD(STACK[0x508]) + 993659410;
  v188 = (v186 - ((2 * v186) & 0x76741424) + 993659410) ^ v187;
  LODWORD(STACK[0x4FC]) = v187;
  v189 = LODWORD(STACK[0x520]) - 382764219;
  v190 = ((v143 ^ 0x7DFA6326) << 11) ^ 0x96B41800;
  LODWORD(STACK[0x520]) = v189;
  v191 = v189 ^ v190 ^ (v188 - ((2 * v188) & 0xD25EF68A) - 382764219);
  v192 = ((v143 ^ 0x7DFA6326) << 14) ^ 0xB5A0C000;
  LODWORD(STACK[0x5D8]) = v192;
  v193 = LODWORD(STACK[0x510]) - 486254215;
  LODWORD(STACK[0x510]) = v193;
  v194 = (v193 ^ v192 ^ (v191 - ((2 * v191) & 0xC608B2F2) - 486254215))
       - 2
       * ((v193 ^ v192 ^ (v191 - ((2 * v191) & 0xC608B2F2) - 486254215)) & 0x18E46C92 ^ (v191
                                                                                       - ((2 * v191) & 0xC608B2F2)
                                                                                       - 486254215) & 2);
  v195 = LODWORD(STACK[0x518]) - 1729860464;
  v196 = ((v143 ^ 0x7DFA6326) << 18) ^ 0x5A0C0000;
  LODWORD(STACK[0x518]) = v195;
  v197 = LODWORD(STACK[0x500]) - 1239276281;
  v198 = ((v143 ^ 0x7DFA6326) << 21) ^ 0xD0600000;
  v199 = ((v194 - 1729860464) ^ v195 ^ v196)
       - 2 * (((v194 - 1729860464) ^ v195 ^ v196) & 0x36222517 ^ ((v194 - 1729860464) ^ v195) & 0x10)
       - 1239276281;
  LODWORD(v17) = v197;
  LODWORD(STACK[0x508]) = v197;
  v200 = (((v143 ^ 0x7DFA6326) << 25) ^ 0x6000000)
       - ((2 * (((v143 ^ 0x7DFA6326) << 25) ^ 0x6000000)) & 0x3C000000)
       - 1634952734;
  v201 = ((v197 ^ v198 ^ v199) - 2 * ((v197 ^ v198 ^ v199) & 0x1E8C99EA ^ v199 & 8) - 1634952734) ^ v200;
  LODWORD(STACK[0x500]) = v200;
  v202 = ((v143 ^ 0x7DFA6326) << 28) ^ 0x30000000;
  LODWORD(STACK[0x558]) = v202;
  v203 = (LODWORD(STACK[0x4F8]) - 13594831) | 1;
  LODWORD(STACK[0x4F8]) = v203;
  LODWORD(STACK[0x620]) = v184 ^ v182 ^ ((v203 ^ v202 ^ (v201 - ((2 * v201) & 0xFE611E62) - 13594831))
                                       - 2
                                       * ((v203 ^ v202 ^ (v201 - ((2 * v201) & 0xFE611E62) - 13594831)) & 0x175CB0EE ^ (v201 - ((2 * v201) & 0xFE611E62) - 13594831) & 4)
                                       + 391950570);
  v204 = v152 ^ v146;
  v205 = v152 ^ v146 ^ 0x995DFD13;
  v206 = ((v205 << 11) ^ 0x982F1000) - 842003873 - ((2 * ((v205 << 11) ^ 0x982F1000)) & 0x9BA01000);
  LODWORD(STACK[0x4DC]) = v206;
  v207 = HIBYTE(v83) ^ (v83 >> 17) ^ (v143 >> 9) ^ (v143 >> 8) ^ (v143 >> 5) ^ 0x16B814;
  v208 = LODWORD(STACK[0x4F4]) ^ LODWORD(STACK[0x4D8]) ^ v173 ^ (v207 - ((2 * v207) & 0x6B6FEA8E) + 1974990151);
  v209 = (v208 - ((2 * v208) & 0x25994C38) + 315401756) ^ LODWORD(STACK[0x4D4]);
  v210 = (v209 - ((2 * v209) & 0x737D194E) - 1178694489) ^ v159;
  v211 = v178 ^ LODWORD(STACK[0x4E0]) ^ v166 ^ (v210 - ((2 * v210) & 0xD5FE56) + 7012139);
  v212 = v170 ^ v168 ^ (v211 - ((2 * v211) & 0x4733479E) + 597271503);
  v213 = LODWORD(STACK[0x528]) ^ (v143 << 27);
  v214 = ((v143 ^ 0x7DFA6326) << 22) ^ 0xA0C00000;
  LODWORD(STACK[0x528]) = v214;
  v215 = v213 ^ ((v143 ^ 0x7DFA6326) << 15) ^ ((v143 ^ 0x7DFA6326) << 8) ^ ((v143 ^ 0x7DFA6326) << 23);
  v216 = ((v214 ^ v198 ^ 0xAA81B718 ^ v215) - 2 * ((v214 ^ v198 ^ 0xAA81B718 ^ v215) & 0x3B3A0A17 ^ v215 & 5) + 993659410) ^ v187;
  v217 = (v216 - ((2 * v216) & 0xD25EF68A) - 382764219) ^ v189;
  v218 = ((v217 ^ v190) - 2 * ((v217 ^ v190) & 0x6304597D ^ v217 & 4) - 486254215) ^ v193;
  v219 = v195 ^ v196 ^ (v218 - ((2 * v218) & 0x31C8D920) - 1729860464);
  v220 = v219 - 2 * (v219 & 0x3622250F ^ v218 & 8);
  v221 = ((v143 ^ 0x7DFA6326) << 24) ^ 0x83000000;
  LODWORD(STACK[0x4F4]) = v221;
  v222 = (((v220 - 1239276281) ^ v17 ^ v221)
        - 2 * (((v220 - 1239276281) ^ v17 ^ v221) & 0x1E8C99FF ^ ((v220 - 1239276281) ^ v17) & 0x1D)
        - 1634952734) ^ v200;
  v223 = STACK[0x5A0];
  v224 = STACK[0x5AC];
  v225 = ((LODWORD(STACK[0x5E4]) << 31) | 0x1DC98343) ^ (LODWORD(STACK[0x4E4]) << 12) ^ __ROR4__(STACK[0x5E8], 31) ^ (32 * LODWORD(STACK[0x5A0])) ^ (4 * LODWORD(STACK[0x5A0])) ^ (LODWORD(STACK[0x5A0]) << 11) ^ (4 * LODWORD(STACK[0x5AC])) ^ (32 * LODWORD(STACK[0x5AC])) ^ (LODWORD(STACK[0x5AC]) << 11) ^ v203;
  LODWORD(STACK[0x4E0]) = v212;
  v226 = v225 ^ (4 * v212) ^ (32 * v212) ^ __ROR4__(v212, 21) ^ (4 * (v212 >> 21)) ^ (32 * (v212 >> 21)) ^ (v212 >> 21 << 11) ^ (v222 - ((2 * v222) & 0xFE611E62) - 13594831);
  v227 = (v226 - ((2 * v226) & 0x1B7FAF62) - 1916807247) ^ LODWORD(STACK[0x588]);
  v228 = v227 - ((2 * v227) & 0x725FB10E) + 959436935;
  v229 = v228 ^ LODWORD(STACK[0x64C]);
  v230 = ((v229 ^ LODWORD(STACK[0x5F4])) - 2 * ((v229 ^ LODWORD(STACK[0x5F4])) & 0x4E97633C ^ v228 & 0x20) + 1318544156) ^ LODWORD(STACK[0x594]);
  v231 = LODWORD(STACK[0x584]) ^ LODWORD(STACK[0x5F0]) ^ LODWORD(STACK[0x650]) ^ (v230
                                                                                - ((2 * v230) & 0x21E3E6D0)
                                                                                - 1863191704);
  v232 = (v231 - 2 * (v231 & 0x34EBCC07 ^ v229 & 1) + 887868422) ^ LODWORD(STACK[0x670]);
  v233 = LODWORD(STACK[0x5EC]) ^ LODWORD(STACK[0x5F8]) ^ LODWORD(STACK[0x560]) ^ ((v232 ^ LODWORD(STACK[0x568]))
                                                                                - 2
                                                                                * ((v232 ^ LODWORD(STACK[0x568])) & 0x446C2A7 ^ v232 & 4)
                                                                                - 2075737437);
  v234 = (v233 - ((2 * v233) & 0x1386469E) + 163783503) ^ v223;
  v235 = v224 ^ 0xE95855D7 ^ ((v234 ^ 0xFC1A3921) - 2 * ((v234 ^ 0xFC1A3921) & 0x69585277 ^ v234 & 0x10) - 380087705);
  LODWORD(STACK[0x5F4]) = v235 - ((2 * v235) & 0x69942F8) - 2092129924;
  LODWORD(STACK[0x5E4]) = (4 * v205) ^ (8 * v205) ^ 0x82D43898;
  LODWORD(v17) = (v204 >> 10) ^ 0x1B3BE ^ (v204 >> 9) ^ 0x3677C;
  LODWORD(STACK[0x5F0]) = v17;
  v236 = v17 ^ (v152 >> 28) ^ (v152 >> 27) ^ (v152 >> 15) ^ (v152 >> 18) ^ 0xC2E;
  LODWORD(v17) = (v152 >> 29) ^ (v152 >> 30);
  LODWORD(STACK[0x5EC]) = v17;
  v237 = (v152 >> 21) ^ 0x3F56EBE6;
  LODWORD(STACK[0x670]) = v237;
  v238 = ((v236 ^ v17) - ((2 * v236) & 0x7EADD7A0) + 1062661072) ^ v237;
  v239 = v238 - ((2 * v238) & 0x59A4225A);
  v240 = (v152 >> 19) ^ 0x6CD211F4;
  LODWORD(v17) = (v152 >> 14) ^ 0x6C3648A6;
  LODWORD(STACK[0x650]) = v17;
  v241 = (v152 >> 13) ^ 0x3677;
  v242 = v241 ^ v17 ^ (((v239 + 1825706285) ^ v240) - ((2 * ((v239 + 1825706285) ^ v240)) & 0x586CA73A) + 1815499677);
  LODWORD(v17) = (v152 >> 11) ^ 0x2B64D253;
  v243 = (v242 - ((2 * v242) & 0x56C81718) + 727976844) ^ v17;
  LODWORD(STACK[0x584]) = v17;
  LODWORD(v17) = (v205 >> 6) ^ (v205 >> 5) ^ 0xD5900909;
  LODWORD(STACK[0x5E8]) = v17;
  v244 = (v204 >> 4) ^ 0x6CEF8F;
  LODWORD(v58) = __ROR4__(v17 ^ v244 ^ 0x4FC982F ^ (v243 - ((2 * v243) & 0xAFDC8A3C) - 672250594), 24);
  v245 = (16 * v205) ^ (32 * v205) ^ (v205 << 17) ^ (v205 << 19) ^ (v205 << 30) ^ (4 * v205) ^ (8 * v205) ^ 0x2D50DAF8;
  LODWORD(v17) = ((v205 << 13) ^ 0x60BC4000) - ((2 * ((v205 << 13) ^ 0x60BC4000)) & 0xB3EDC000) - 638130208;
  LODWORD(STACK[0x588]) = v17;
  v246 = (v205 << 14) ^ 0xC1788000;
  v247 = (v205 << 18) ^ 0x17880000;
  LODWORD(STACK[0x5A0]) = v247;
  v248 = (v245 - ((2 * v245) & 0x9BA014BE) - 842003873) ^ v206;
  v249 = v247 ^ v246 ^ v17 ^ (v248 - ((2 * v248) & 0xB3EDCFC0) - 638130208);
  v250 = v249 - 2 * (v249 & 0x7BF57D7F ^ v248 & 6);
  v251 = ((v205 << 21) ^ 0xBC400000) - ((2 * ((v205 << 21) ^ 0xBC400000)) & 0xF7FFFFFF) - 67797639;
  LODWORD(v17) = (v205 << 22) ^ (v205 << 23) ^ 0x89800000 ^ v251;
  LODWORD(STACK[0x594]) = v17;
  v252 = (v17 ^ (v250 - 67797639)) - 2 * ((v17 ^ (v250 - 67797639)) & 0x45D31F9F ^ (v250 - 67797639) & 4);
  LODWORD(v17) = STACK[0x4F0];
  v253 = (LODWORD(STACK[0x4F0]) >> 21) ^ (LODWORD(STACK[0x4F0]) >> 27);
  v254 = (v205 << 28) ^ 0x20000000;
  v255 = (v205 << 27) ^ 0x10000000;
  LODWORD(STACK[0x5AC]) = v255;
  v256 = STACK[0x5BC];
  LODWORD(v173) = v17;
  v257 = (-536870912 * LODWORD(STACK[0x5BC])) ^ (v77 << 6) ^ (2 * v77) ^ (v77 << 24) ^ (4 * v17) ^ (32 * v17) ^ ((_DWORD)v17 << 11) ^ (4 * v253) ^ (32 * v253) ^ (v253 << 11) ^ v255 ^ v254 ^ (((v205 << 26) ^ 0x88000000) - ((v205 << 27) & 0x8FFFFFFF) - 976019557) ^ (v252 - 976019557);
  LODWORD(v58) = ((v152 >> 26) | (v205 >> 2 << 8)) ^ v58 ^ 0xD541CA24;
  HIDWORD(v58) = v58;
  v258 = v58 >> 8;
  LODWORD(v17) = (v258 >> 27) ^ (v258 >> 30) ^ (v258 >> 21);
  LODWORD(STACK[0x64C]) = v17;
  v259 = v257 ^ (4 * v258) ^ (32 * v258) ^ (v258 << 11) ^ (32 * v17) ^ (4 * v17) ^ ((_DWORD)v17 << 11) ^ 0xF7C4267E;
  v260 = LODWORD(STACK[0x570]) ^ v77 ^ 0xA984A4A4 ^ (v259 - ((2 * v259) & 0xB3BE31CE) - 639690521);
  v261 = (v260 - ((2 * v260) & 0x12FCCA82) + 159278401) ^ LODWORD(STACK[0x630]);
  v262 = (v261 - ((2 * v261) & 0x8F4101F8) - 945782532) ^ LODWORD(STACK[0x638]);
  v263 = (v262 - ((2 * v262) & 0x7561FE52) - 1162805463) ^ LODWORD(STACK[0x63C]);
  v264 = (v263 - ((2 * v263) & 0xFD66BEC6) + 2125684579) ^ LODWORD(STACK[0x640]);
  v265 = (v264 - ((2 * v264) & 0xA25FEFFA) - 785385475) ^ LODWORD(STACK[0x634]);
  v266 = ((v265 ^ LODWORD(STACK[0x550])) - 2 * ((v265 ^ LODWORD(STACK[0x550])) & 0x47E4BDF6 ^ v265 & 6) + 1206173168) ^ LODWORD(STACK[0x62C]);
  v267 = (v266 - ((2 * v266) & 0x8C6E85AC) + 1178026710) ^ LODWORD(STACK[0x61C]);
  v268 = (v267 - ((2 * v267) & 0xFD25BA82) + 2123554113) ^ LODWORD(STACK[0x624]);
  v269 = STACK[0x4E8];
  v270 = (v268 - ((2 * v268) & 0x9B73743C) - 843466210) ^ LODWORD(STACK[0x4E8]);
  LODWORD(v17) = LODWORD(STACK[0x5B0]) - 659374585;
  LODWORD(STACK[0x5B0]) = v17;
  v271 = (v270 - ((2 * v270) & 0xB1657C0E) - 659374585) ^ v17;
  v272 = (v271 - ((2 * v271) & 0xFA304B6) + 131170907) ^ v173;
  v273 = v253 ^ 0xE929F795 ^ ((v272 ^ 0xA4C73D5) - 383125611 - 2 * ((v272 ^ 0xA4C73D5) & 0x6929F7FA ^ v272 & 2) + 99);
  v274 = (v273 - ((2 * v273) & 0xDBA73A9E) - 304898737) ^ v258;
  LODWORD(STACK[0x5F8]) = (v274 ^ 0xC8E21DFD) - 2 * ((v274 ^ 0xC8E21DFD) & 0x6F88B49F ^ v274 & 2) + 1871230109;
  v275 = v204 ^ 0x6CEF8F1;
  v276 = (v275 << (((v152 >> 19) & 0x12 ^ 2) + ((v152 >> 19) & 0x12 ^ 0x10))) ^ (v205 << 12) ^ (v275 << (((v152 >> 25) & 0xC1 ^ 1) + ((v152 >> 25) & 0xC1 ^ 0xC0) + (STACK[0x620] & 0x52) + (STACK[0x620] & 0x52 ^ 0x52)));
  LODWORD(v173) = (v152 >> 12) ^ 0x6CEF;
  v277 = (v152 >> 18) ^ (v152 >> 20) ^ (v152 >> 11) ^ 0x2B64D253 ^ 0x1DF ^ (v173 - ((2 * v173) & 0x81718) + 727976844);
  v278 = (v152 >> 25) ^ 0x8001E040 ^ (v152 >> 22) ^ 0x1B;
  v279 = v278 ^ (v277 - ((2 * v277) & 0x3C086) - 2147360701);
  v280 = (v279 - ((2 * v279) & 0x7EADD7A0) + 1062661072) ^ LODWORD(STACK[0x670]);
  v281 = v240 ^ HIWORD(v152) ^ 0x6CE;
  v282 = v281 ^ v241 ^ (v280 - ((2 * v280) & 0xD9A4225A) + 1825706285);
  v283 = (v204 >> 7) ^ 0xD9DF1;
  v284 = v283 ^ LODWORD(STACK[0x650]) ^ (v205 >> 6) ^ (v282 - ((2 * v282) & 0xD86CA73A) + 1815499677);
  LOBYTE(v282) = (v283 ^ LOBYTE(STACK[0x650]) ^ (v205 >> 6) ^ (v282 - ((2 * v282) & 0x3A) - 99)) & 0x43;
  LODWORD(v275) = v275 >> (((v282 ^ 3) + (v282 ^ 0x40)) & 0x81);
  v285 = (v205 << 7) ^ 0xC982F100;
  v286 = (((v205 << 31) | 0x305E2000) ^ v285 ^ v276)
       - 2 * ((((v205 << 31) | 0x305E2000) ^ v285 ^ v276) & 0x44EA8C0B ^ v276 & 2)
       + 1156221961;
  v287 = (v205 << 10) ^ 0x4C178800;
  v288 = (v205 << 16) ^ (v205 << 20) ^ 0x5BC20000;
  v289 = STACK[0x4DC];
  v290 = ((v204 ^ v287 ^ 0x422474F8 ^ v286) - ((2 * (v204 ^ v287 ^ 0x422474F8 ^ v286)) & 0x9BA014BE) - 842003873) ^ LODWORD(STACK[0x4DC]);
  v291 = STACK[0x588];
  v292 = v288 ^ v246 ^ LODWORD(STACK[0x588]) ^ (v290 - ((2 * v290) & 0xB3EDCFC0) - 638130208);
  v293 = v292 - 2 * (v292 & 0x7BF57D7F ^ v290 & 6);
  v294 = (v205 << 25) ^ 0xC4000000;
  v295 = (v251 ^ v294 ^ (v293 - 67797639)) - ((2 * (v251 ^ v294 ^ (v293 - 67797639))) & 0x8BA63F36);
  v296 = v284 ^ v244 ^ v275;
  LODWORD(v17) = STACK[0x548];
  v297 = LODWORD(STACK[0x548]) ^ 0x6CEF8C7;
  v298 = LODWORD(STACK[0x598]) ^ (v297 >> 21);
  v299 = (-1663319554 - 1673081951 * LODWORD(STACK[0x7B0])) ^ (-1073741824 * v256) ^ LODWORD(STACK[0x628]) ^ (4 * v297) ^ (32 * v297) ^ (v297 << 11) ^ (4 * v298) ^ (32 * v298) ^ (v298 << 11) ^ v254;
  v300 = (v296 >> 30) ^ (v296 >> 27) ^ (v296 >> 21);
  LODWORD(STACK[0x628]) = v300;
  v301 = ((v205 << 26) ^ 0x88000000) - ((v205 << 27) & 0x8FFFFFFF) - 976019557;
  v302 = v299 ^ v301 ^ (4 * v296) ^ (32 * v296) ^ (v296 << 11) ^ (4 * v300) ^ (32 * v300) ^ (v300 << 11) ^ 0xDE16737C ^ (v295 - 976019557);
  v303 = (v302 - ((2 * v302) & 0x9B73743C) - 843466210) ^ v269;
  LODWORD(v275) = v269;
  v304 = STACK[0x540];
  v305 = (v303 - ((2 * v303) & 0x64CCF5C0) - 1301906720) ^ LODWORD(STACK[0x540]);
  v306 = LODWORD(STACK[0x4EC]) ^ 0xD0A14A23 ^ (v305 - ((2 * v305) & 0x2F329446) + 395921955);
  v307 = (v306 - ((2 * v306) & 0x8C6E85AC) + 1178026710) ^ LODWORD(STACK[0x61C]);
  v308 = STACK[0x5B0];
  v309 = ((v307 ^ LODWORD(STACK[0x530])) - 2 * ((v307 ^ LODWORD(STACK[0x530])) & 0x58B2BE17 ^ v307 & 0x10) - 659374585) ^ LODWORD(STACK[0x5B0]);
  v310 = v17 ^ 0xDE79DAED ^ (v309 - ((2 * v309) & 0xAA55A748) - 718613596);
  v311 = (v310 - ((2 * v310) & 0x7B9C3F1E) + 1036918671) ^ v298;
  v312 = v296 ^ 0xB0D7BDA3 ^ ((v311 ^ 0x3DCE1FE2) - 2 * ((v311 ^ 0x3DCE1FE2) & 0x32A9F1B5 ^ v311 & 1) - 1297485388);
  LODWORD(STACK[0x61C]) = v312 - ((2 * v312) & 0xF515C9A0) + 2055922896;
  v313 = (v204 << 24) ^ (v205 << 15) ^ (v205 << 8) ^ v285 ^ v287 ^ LODWORD(STACK[0x5E4]) ^ 0xE0F4E200;
  v314 = (v313 - ((2 * v313) & 0x9BA014BE) - 842003873) ^ v289;
  v315 = v288 ^ LODWORD(STACK[0x5A0]) ^ v291 ^ (v314 - ((2 * v314) & 0xB3EDCFC0) - 638130208);
  v316 = v315 - 2 * (v315 & 0x7BF57D7D ^ v314 & 4) - 67797639;
  LODWORD(v17) = HIBYTE(v152) ^ (v152 >> 17) ^ (v204 >> 8) ^ LODWORD(STACK[0x5EC]) ^ 0x6CD99;
  LODWORD(v17) = v278 ^ (v17 - ((2 * v17) & 0x3C086) - 2147360701);
  LODWORD(v17) = (v17 - ((2 * v17) & 0x7EADD7A0) + 1062661072) ^ LODWORD(STACK[0x670]);
  LODWORD(v17) = v281 ^ (v17 - ((2 * v17) & 0xD9A4225A) + 1825706285);
  LODWORD(v17) = v173 ^ LODWORD(STACK[0x650]) ^ (v17 - ((2 * v17) & 0xD86CA73A) + 1815499677);
  LODWORD(v17) = LODWORD(STACK[0x5F0]) ^ LODWORD(STACK[0x584]) ^ v283 ^ (v17 - ((2 * v17) & 0x56C81718) + 727976844);
  v317 = (LODWORD(STACK[0x594]) ^ v294 ^ v316)
       - 2 * ((LODWORD(STACK[0x594]) ^ v294 ^ v316) & 0x45D31F9F ^ v316 & 4)
       - 976019557;
  v318 = LODWORD(STACK[0x5E8]) ^ (v17 - 672250594 + (~(2 * v17) | 0x502375C3) + 1);
  LODWORD(v17) = LODWORD(STACK[0x5F4]) ^ LODWORD(STACK[0x4E0]);
  v319 = ((4 * v17) ^ 0x357D96CC) - 2 * (((4 * v17) ^ 0x357D96CC) & 0x76243894 ^ (4 * v17) & 0x10) - 165398396;
  v320 = LODWORD(STACK[0x5F4]) ^ ~LODWORD(STACK[0x4E0]);
  v321 = LODWORD(STACK[0x5D4]) ^ (LODWORD(STACK[0x5C0]) >> 27) ^ (LODWORD(STACK[0x5C0]) >> 21);
  v322 = v318 >> 21;
  v323 = (-1663319554 - 1673081951 * LODWORD(STACK[0x7B4])) ^ (LODWORD(STACK[0x5FC]) << 31) ^ (v77 << 12) ^ (32 * LODWORD(STACK[0x5C0])) ^ (LODWORD(STACK[0x5C0]) << 11) ^ (4 * (LODWORD(STACK[0x5C0]) ^ v321)) ^ (32 * v321) ^ (v321 << 11) ^ LODWORD(STACK[0x5AC]) ^ v301 ^ v317 ^ (4 * v318) ^ (32 * v318) ^ (v318 << 11) ^ (4 * (v318 >> 21));
  v324 = (32 * (v318 >> 21)) ^ (v318 >> 21 << 11) ^ 0xF369B2CC ^ v323;
  v325 = (v324 - 2 * (v324 & 0x97E6553 ^ v323 & 0x12) + 159278401) ^ LODWORD(STACK[0x630]);
  v326 = (v325 - ((2 * v325) & 0xB3BE31CE) - 639690521) ^ v77;
  v327 = (v326 - ((2 * v326) & 0x8F4101F8) - 945782532) ^ LODWORD(STACK[0x638]);
  v328 = (v327 - ((2 * v327) & 0xA235CF2C) + 1360717718) ^ LODWORD(STACK[0x5C8]);
  v329 = (v328 - ((2 * v328) & 0x7561FE52) - 1162805463) ^ LODWORD(STACK[0x63C]);
  v330 = (v329 - ((2 * v329) & 0xFD66BEC6) + 2125684579) ^ LODWORD(STACK[0x640]);
  v331 = (v330 - ((2 * v330) & 0xA25FEFFA) - 785385475) ^ LODWORD(STACK[0x634]);
  v332 = LODWORD(STACK[0x538]) ^ 0xC7380000 ^ (v331 - ((2 * v331) & 0x4437109A) - 1575253939);
  v333 = (v332 - ((2 * v332) & 0x8FC97BE0) + 1206173168) ^ LODWORD(STACK[0x62C]);
  v334 = (v333 - ((2 * v333) & 0x64CCF5C0) - 1301906720) ^ v304;
  v335 = (v334 - ((2 * v334) & 0xFD25BA82) + 2123554113) ^ LODWORD(STACK[0x624]);
  v336 = (v335 - ((2 * v335) & 0x9B73743C) - 843466210) ^ v275;
  v337 = (v336 - ((2 * v336) & 0xB1657C0E) - 659374585) ^ v308;
  v338 = LODWORD(STACK[0x5C0]) ^ 0x968B6064 ^ (v337 - ((2 * v337) & 0x362D23D4) - 1693019670);
  v339 = v318 ^ v321 ^ (v338 - ((2 * v338) & 0xB351F76E) + 1504246711);
  v340 = ((_DWORD)v17 << 11) ^ ((_DWORD)v17 << 13) ^ 0x179BF800;
  LODWORD(STACK[0x670]) = v340;
  LODWORD(STACK[0x640]) = (_DWORD)v17 << 21;
  v341 = ((_DWORD)v17 << 28) ^ (v320 << 30) ^ ((_DWORD)v17 << 19) ^ (32 * v17) ^ (16 * v17) ^ ((_DWORD)v17 << 14) ^ ((_DWORD)v17 << 17) ^ ((_DWORD)v17 << 21) ^ v340 ^ 0xC7E82D50;
  v342 = v341 - ((2 * v341) & 0x7895071A);
  v343 = (v17 >> 21) ^ 0x26A;
  LODWORD(STACK[0x63C]) = v343;
  v344 = (v17 >> 19) ^ 0x9AB;
  v345 = (v17 >> 14) ^ 0x1357D;
  v346 = (v17 >> 11) ^ 0x9ABEC;
  LODWORD(v173) = (v17 >> 10) ^ 0x1357D9;
  v347 = (v17 >> 4) ^ (v17 >> 2);
  v348 = (v17 >> 9) ^ 0x26AFB2;
  v349 = (v17 >> 6) ^ 0x1357D96;
  v350 = (v17 >> 18) ^ (v17 >> 15) ^ (v17 >> 27) ^ (v17 >> 28) ^ (v17 >> 13) ^ (v17 >> 5) ^ v347 ^ v345 ^ v343 ^ v344 ^ v346 ^ v173 ^ v348 ^ v349;
  v351 = LODWORD(STACK[0x580]) ^ 0x3DAD1A;
  v352 = STACK[0x578] ^ (v144 << 29) ^ (4 * v351) ^ (32 * v351) ^ (v351 << 11);
  v353 = (v351 >> 21) ^ (LODWORD(STACK[0x580]) >> 27);
  v354 = ((_DWORD)v17 << 18) ^ 0x96CC0000;
  v355 = ((_DWORD)v17 << 22) ^ 0x6CC00000;
  v356 = ((_DWORD)v17 << 23) ^ 0xD9800000;
  v357 = ((_DWORD)v17 << 26) ^ 0xCC000000 ^ ((_DWORD)v17 << 27) ^ 0x98000000;
  v358 = v319 ^ (8 * v17);
  v359 = (v320 >> 30) ^ (v17 >> 29);
  LODWORD(v275) = (v359 | 0x1780CC28) ^ v350;
  v360 = v352 ^ (4 * v353) ^ (32 * v353) ^ (v353 << 11) ^ v354 ^ v355 ^ v356 ^ v357 ^ v358 ^ 0x20959699 ^ (v342 - 1135967355) ^ (4 * v275) ^ (32 * v275) ^ ((_DWORD)v275 << 11) ^ 0x3B3646A8;
  v361 = (v360 - ((2 * v360) & 0x76741424) + 993659410) ^ LODWORD(STACK[0x4FC]);
  v362 = (v361 - ((2 * v361) & 0x637CF824) - 1312916462) ^ LODWORD(STACK[0x5B8]);
  v363 = ((v362 ^ 0x4B28C80A) - 2 * ((v362 ^ 0x4B28C80A) & 0x692F7B55 ^ v362 & 0x10) - 382764219) ^ LODWORD(STACK[0x520]);
  v364 = (v363 - ((2 * v363) & 0xC608B2F2) - 486254215) ^ LODWORD(STACK[0x510]);
  v365 = ((v364 ^ LODWORD(STACK[0x5D8])) - 2 * ((v364 ^ LODWORD(STACK[0x5D8])) & 0x18E46C95 ^ v364 & 5) - 1729860464) ^ LODWORD(STACK[0x518]);
  v366 = v365 - ((2 * v365) & 0x6C444A0E) - 1239276281;
  v367 = LODWORD(STACK[0x4F4]) ^ LODWORD(STACK[0x528]) ^ LODWORD(STACK[0x508]) ^ v366;
  v368 = (v367 - 2 * (v367 & 0x1E8C99FA ^ v366 & 0x18) - 1634952734) ^ LODWORD(STACK[0x500]);
  v369 = (v368 - ((2 * v368) & 0xFE611E62) - 13594831) ^ LODWORD(STACK[0x4F8]);
  v370 = LODWORD(STACK[0x580]) ^ 0x5CF928DF ^ ((v369 ^ LODWORD(STACK[0x558]))
                                             - 2 * ((v369 ^ LODWORD(STACK[0x558])) & 0x5B31A8BF ^ v369 & 0x12)
                                             + 1529981101);
  LODWORD(STACK[0x5FC]) = v275 ^ v353 ^ (v370 + 2118439552 + (~(2 * v370) | 0x3765B01));
  v371 = (v350 >> 21) ^ (v347 >> 27);
  LOBYTE(v367) = v319 | (8 * v17) | ~(_BYTE)v319;
  v372 = (4 * v371) ^ (32 * v371) ^ (v371 << 11) ^ 0x57F14;
  v373 = v371 ^ 0xC7DA91BD ^ (v372 - ((2 * v372) & 0xFB52220) - 941977328);
  LODWORD(STACK[0x650]) = v373 - 1107204734 - ((2 * v373) & 0x7C02AE4C);
  v374 = (v17 ^ 0x4D5F65B3) >> ((v367 | ~(_BYTE)v358) & 0x18);
  v375 = ((_DWORD)v17 << 7) ^ ((_DWORD)v17 << 8) ^ ((_DWORD)v17 << 10) ^ ((_DWORD)v17 << 16) ^ ((_DWORD)v17 << 15) ^ ((_DWORD)v17 << 20) ^ ((_DWORD)v17 << 24) ^ ((_DWORD)v17 << 25);
  v376 = (v17 >> 8) ^ (v17 >> 7) ^ (v17 >> 25) ^ (v17 >> 22) ^ (v17 >> 17) ^ WORD1(v17) ^ (v17 >> 12) ^ (v17 >> 5) ^ LODWORD(STACK[0x63C]) ^ v344 ^ v345 ^ v346 ^ v173 ^ v348 ^ v349;
  LODWORD(v17) = v339 ^ v322;
  v377 = v339 ^ v322 ^ 0xC89CA4BF;
  LODWORD(STACK[0x634]) = ((v377 << 10) ^ 0x231DB400) - ((2 * ((v377 << 10) ^ 0x231DB400)) & 0xCE055000);
  v378 = v376 ^ v374 ^ v359;
  LODWORD(STACK[0x624]) = v376 >> 21;
  v379 = v375 ^ (4 * v378) ^ (32 * v378) ^ (v378 << 11) ^ (4 * (v376 >> 21));
  v380 = (LODWORD(STACK[0x640]) | (32 * (v376 >> 21))) ^ (v376 >> 21 << 11) ^ 0xF28518EC ^ v379;
  v381 = LODWORD(STACK[0x670]) ^ v354 ^ v355 ^ v356 ^ v357 ^ v358 ^ 0x20959699 ^ (v380
                                                                                - 2 * (v380 & 0x3C4A8395 ^ v379 & 0x10)
                                                                                - 1135967355);
  v382 = v378 ^ LODWORD(STACK[0x620]) ^ (v381 - ((2 * v381) & 0xF9415676) + 2090904379);
  LODWORD(STACK[0x5F4]) = ((v377 << 13) ^ 0x18EDA000) - ((2 * ((v377 << 13) ^ 0x18EDA000)) & 0x36598000);
  LODWORD(STACK[0x620]) = ((v377 << 7) ^ 0xE463B680) - ((2 * ((v377 << 7) ^ 0xE463B680)) & 0xD9B6D800);
  LODWORD(STACK[0x630]) = ((v377 << 16) ^ 0xC76D0000) - ((2 * ((v377 << 16) ^ 0xC76D0000)) & 0x77660000);
  LODWORD(STACK[0x62C]) = ((v377 << 25) ^ 0xDA000000) - ((2 * ((v377 << 25) ^ 0xDA000000)) & 0x50000000);
  LODWORD(STACK[0x5F0]) = v377 >> 6;
  v383 = (v377 >> 6) ^ 0x3AF8530C;
  v384 = (v339 >> 26) ^ (v339 >> 15) ^ (v339 >> 31) ^ (v377 >> 3) ^ v383 ^ (((v377 >> 4) ^ 0x95C8C76)
                                                                          - 2
                                                                          * (((v377 >> 4) ^ 0x95C8C76) & 0x8AF7019 ^ (v377 >> 4) & 8)
                                                                          + 951021585);
  v385 = v384 ^ 0x12B9A252;
  v386 = (v339 >> 30) ^ (v339 >> 29) ^ 3;
  v387 = (v339 >> 25) ^ 0x3F25E43D;
  v388 = ((v386 ^ v384 ^ 0x12B9A252) - 2 * ((v386 ^ v384 ^ 0x12B9A252) & 0x3F25E41B ^ v384 & 8) + 1059447827) ^ v387;
  v389 = (v339 >> 22) ^ 0x44BC14F2;
  v390 = (v388 - ((2 * v388) & 0x89782B0E) + 1153176967) ^ v389;
  v391 = (v339 >> 19) ^ 0x7D6F1401;
  v392 = v391 ^ (v339 >> 18) ^ 0x1755;
  v393 = v392 ^ (v390 - ((2 * v390) & 0xFADE3F56) + 2104434603);
  v394 = HIWORD(v339) ^ 0xDEC2C09B;
  v395 = (v393 - ((2 * v393) & 0xBD853B9E) - 557670961) ^ v394;
  v396 = (v339 >> 12) ^ 0xE3746CD0;
  v397 = (v17 >> 8) ^ 0x5D5463;
  v398 = (v17 >> 10) ^ 0x175518;
  v399 = (v377 >> 7) ^ 0x6CAB1C9F;
  LODWORD(STACK[0x640]) = v398 ^ v396 ^ v397 ^ (v377 >> 7) ^ (v395 - ((2 * v395) & 0xC6E3732C) - 479086186);
  LODWORD(STACK[0x63C]) = (v385 >> 27) - 4 * (v385 >> 28) + 216169342;
  v400 = (v339 >> 20) ^ (v339 >> 13) ^ (v377 >> 1);
  v401 = ((v400 ^ 0x4AE68CC0) - 2 * ((v400 ^ 0x4AE68CC0) & 0x3F25E41B ^ v400 & 8) + 1059447827) ^ v387;
  v402 = v389 ^ (v339 >> 21) ^ 0x2EA;
  v403 = v402 ^ (v401 - ((2 * v401) & 0x89782B0E) + 1153176967);
  v404 = v392 ^ (v403 - ((2 * v403) & 0xFADE3F56) + 2104434603);
  v405 = (v339 >> 14) ^ 0x17551 ^ v394;
  v406 = v405 ^ (v404 - ((2 * v404) & 0xBD853B9E) - 557670961);
  v407 = v406 - ((2 * v406) & 0xC6E3732C);
  v408 = v396 ^ (v339 >> 11) ^ 0xBAA8C;
  v409 = ((v408 ^ (v407 - 479086186)) - ((2 * (v408 ^ (v407 - 479086186))) & 0xDB011A22) + 1837141265) ^ v399;
  v410 = v383 ^ (v377 >> 4) ^ (v409 - ((2 * v409) & 0x715EE022) + 951021585);
  v411 = (LODWORD(STACK[0x64C]) | ((_DWORD)v17 << 31)) ^ (v377 << 19) ^ (v377 << 12) ^ LODWORD(STACK[0x5F8]);
  v412 = v17 ^ 0x5D5463D2;
  v413 = (v339 >> 31) ^ (v410 >> 21) ^ (v410 >> 27);
  LODWORD(STACK[0x670]) = v413;
  v414 = v411 ^ ((_DWORD)v412 << 26) ^ (4 * v410) ^ (32 * v410) ^ ((v410 ^ v413) << 11) ^ (32 * v413) ^ (4 * v413) ^ 0x32143AE4;
  LODWORD(STACK[0x638]) = v17 ^ 0xFAC3CE8A;
  v415 = (v414 - 2 * (v414 & 0x2797AD5A ^ v411 & 2) - 1483231912) ^ v17 ^ 0xFAC3CE8A;
  v416 = LODWORD(STACK[0x620]) + 1826319408;
  v417 = (v415 - ((2 * v415) & 0xD9B6D860) + 1826319408) ^ v416;
  LODWORD(STACK[0x620]) = v416;
  v418 = LODWORD(STACK[0x634]) - 419255458;
  LODWORD(v275) = (v377 << 11) ^ 0x463B6800;
  v419 = (v417 - ((2 * v417) & 0xCE0556BC) - 419255458) ^ v418;
  LODWORD(STACK[0x5F8]) = v418;
  v420 = LODWORD(STACK[0x5F4]) + 455918309;
  v421 = (v377 << 14) ^ 0x31DB4000;
  LODWORD(STACK[0x634]) = v421;
  v422 = ((v419 ^ v275) + 455918309 - 2 * ((v419 ^ v275) & 0x1B2CC2FF ^ v419 & 0x1A)) ^ v420;
  LODWORD(STACK[0x5F4]) = v420;
  v423 = (v422 ^ v421) - 2 * ((v422 ^ v421) & 0x3BB3467F ^ v422 & 1);
  v424 = (v377 << 18) ^ (v377 << 21) ^ 0xF0140000;
  v425 = LODWORD(STACK[0x630]) - 1145878914;
  v426 = (v377 << 20) ^ 0x76D00000;
  LODWORD(STACK[0x630]) = v426;
  v427 = (v424 ^ v426 ^ v425 ^ (v423 - 1145878914)) - ((2 * (v424 ^ v426 ^ v425 ^ (v423 - 1145878914))) & 0x52589DC4);
  v428 = LODWORD(STACK[0x62C]) + 690769634;
  v429 = (v377 << 28) ^ 0xD0000000;
  LODWORD(STACK[0x62C]) = v429;
  v430 = ((v428 ^ v429 ^ (v427 + 690769634))
        - 2 * ((v428 ^ v429 ^ (v427 + 690769634)) & 0x703119DC ^ (v427 + 690769634) & 8)
        - 265217580) ^ v410;
  LODWORD(STACK[0x64C]) = (v430 ^ 0xF96D95A2) - 2 * ((v430 ^ 0xF96D95A2) & 0x6773493F ^ v430 & 1) - 411875010;
  v431 = STACK[0x5FC];
  v432 = v412 << ((STACK[0x5FC] & 0x14 ^ 0x10) + (STACK[0x5FC] & 0x14 ^ 4u));
  LODWORD(v412) = v386 ^ HIBYTE(v339) ^ (v339 >> 17) ^ (v17 >> 9) ^ (v17 >> 5);
  LODWORD(v412) = ((v412 ^ 0x2C427D8) - 2 * ((v412 ^ 0x2C427D8) & 0x3F25E417 ^ v412 & 4) + 1059447827) ^ v387;
  v433 = v402 ^ (v412 - ((2 * v412) & 0x89782B0E) + 1153176967);
  v434 = (v433 - ((2 * v433) & 0xFADE3F56) + 2104434603) ^ v391;
  v435 = v405 ^ (v434 - ((2 * v434) & 0xBD853B9E) - 557670961);
  v436 = v408 ^ v398 ^ v397 ^ (v435 - ((2 * v435) & 0xC6E3732C) - 479086186);
  v437 = v399 ^ LODWORD(STACK[0x5F0]) ^ (v436 - ((2 * v436) & 0xDB011A22) + 1837141265);
  LODWORD(v17) = (LODWORD(STACK[0x628]) | ((_DWORD)v17 << 23)) ^ ((_DWORD)v17 << 27);
  v438 = (4 * v377) ^ 0x57231DB4;
  LODWORD(STACK[0x628]) = v438;
  v439 = v437 >> 21;
  LODWORD(v17) = v17 ^ (v377 << 8) ^ (v377 << 15) ^ (8 * v377) ^ v438 ^ LODWORD(STACK[0x61C]) ^ (4 * v437) ^ (32 * v437) ^ (v437 << 11) ^ (4 * (v437 >> 21)) ^ (32 * (v437 >> 21)) ^ (v437 >> 21 << 11) ^ 0xFC1DA777 ^ v432;
  LODWORD(v17) = (v17 - ((2 * v17) & 0xD9B6D860) + 1826319408) ^ v416;
  LODWORD(v17) = (v17 - ((2 * v17) & 0xCE0556BC) - 419255458) ^ v418;
  LODWORD(v17) = ((v17 ^ v275) - 2 * ((v17 ^ v275) & 0x1B2CC2ED ^ v17 & 8) + 455918309) ^ v420;
  v440 = (v377 << 22) ^ 0xDB400000;
  LODWORD(STACK[0x5EC]) = v440;
  LODWORD(v432) = (v377 << 24) ^ 0x6D000000;
  LODWORD(STACK[0x61C]) = v432;
  LODWORD(v17) = (v17 - ((2 * v17) & 0x77668CFC) - 1145878914) ^ v425;
  LODWORD(v17) = (v424 ^ v440 ^ v432 ^ v17) - 2 * ((v424 ^ v440 ^ v432 ^ v17) & 0x292C4EE6 ^ v17 & 4);
  v441 = (v377 << 26) ^ 0xB4000000;
  LODWORD(STACK[0x5F0]) = v441;
  LODWORD(v17) = v428 ^ v441 ^ v437 ^ (v17 + 690769634);
  v442 = (v382 >> 25) ^ 0x37 ^ (v382 >> 22) ^ 0x1BD ^ (v382 >> 19) ^ 0xDE9 ^ (v382 >> 18) ^ 0x1BD3;
  v443 = (v382 >> 12) ^ 0x6F4DD;
  LODWORD(v432) = HIWORD(v382) ^ 0x6F4D;
  v444 = v382 ^ LODWORD(STACK[0x624]);
  v445 = (v444 >> 6) ^ ((v444 ^ 0xDF0D0BCE) >> 4) ^ 0x1BD3761;
  v446 = v445 ^ (v444 >> 10) & 0x1FFFFF ^ ((v444 ^ 0xDF0D0BCE) >> 8) ^ ((v444 ^ 0xDF0D0BCE) >> 3) ^ ((v444 ^ 0xDF0D0BCE) >> 7) ^ ((((v382 >> 31) | 0xDE82) ^ (v382 >> 30) ^ (v382 >> 29) ^ (v382 >> 26) ^ (v382 >> 15) ^ v442 ^ v432 ^ v443) + ((v444 >> 10) & 0x200000));
  v447 = v446 ^ 0x1BD376;
  v448 = (v446 >> 21) ^ (v446 >> 27);
  v449 = (8 * (v444 ^ 0xDF0D0BCE)) ^ ((v444 ^ 0xDF0D0BCE) << 6) ^ ((v444 ^ 0xDF0D0BCE) << 17) ^ ((v444 ^ 0xDF0D0BCE) << 22) ^ ((v444 ^ 0xDF0D0BCE) << 24) ^ ((v444 ^ 0xDF0D0BCE) << 29) ^ (4 * v447) ^ (32 * v447) ^ (v447 << 11) ^ (4 * v448) ^ (32 * v448) ^ (v448 << 11) ^ 0x526F0DD4;
  v450 = v444 ^ 0xDF0D0BCE ^ (2 * (v444 ^ 0xDF0D0BCE)) ^ (4 * (v444 ^ 0xDF0D0BCE)) ^ (v449
                                                                                    - ((2 * v449) & 0x2CD1E1C6)
                                                                                    + 375976163);
  v451 = ((v444 ^ 0xDF0D0BCE) << 13) ^ 0x1A742000 ^ ((v444 ^ 0xDF0D0BCE) << 14) ^ 0x34E84000;
  v452 = ((v444 ^ 0xDF0D0BCE) << 16) ^ 0xD3A10000 ^ ((v444 ^ 0xDF0D0BCE) << 20) ^ 0x3A100000 ^ ((v444 ^ 0xDF0D0BCE) << 25) ^ 0x42000000;
  v453 = ((v444 ^ 0xDF0D0BCE) << 26) ^ 0x84000000 ^ ((v444 ^ 0xDF0D0BCE) << 28) ^ 0x10000000;
  LODWORD(v173) = ((v444 ^ 0xDF0D0BCE) << 10) ^ 0x34E8400;
  v454 = (v444 ^ 0xDF0D0BCE) << 7;
  v455 = v454 ^ v173 ^ v451 ^ v452 ^ v453 ^ 0x27C31A04 ^ v450;
  v456 = v448 ^ v447 ^ (v455 - 722316182 - 2 * (v455 & 0x54F25D4D ^ v450 & 1) + 2274);
  v457 = v445 ^ v442 ^ v432 ^ v443;
  v458 = (v382 >> 21) ^ (v382 >> 20) ^ (v382 >> 14) ^ (v382 >> 13) ^ (v382 >> 11) ^ (v444 >> 7) ^ (v444 >> 1);
  v459 = v457 ^ v458;
  LODWORD(v432) = (LODWORD(STACK[0x650]) - 3676) ^ ((v382 ^ ~LODWORD(STACK[0x624])) << 31) ^ ((v444 ^ 0xDF0D0BCE) << 12) ^ ((v444 ^ 0xDF0D0BCE) << 11) ^ ((v444 ^ 0xDF0D0BCE) << 18) ^ ((v444 ^ 0xDF0D0BCE) << 19) ^ ((v444 ^ 0xDF0D0BCE) << 21) ^ v454 ^ (4 * (v459 ^ 0x37775CEB)) ^ (32 * (v459 ^ 0x37775CEB)) ^ 0x2DC2563 ^ v431;
  LODWORD(v432) = v173 ^ v444 ^ v451 ^ v452 ^ v453 ^ v459 ^ 0x37775CEB ^ (v432 - ((2 * v432) & 0xB542B88C) + 1520524358);
  v460 = (v459 >> 21) ^ (v458 >> 30) ^ ((v459 ^ 0x3C7351D1) >> (v432 & 0x1B ^ 0x13 | v432 & 0x1B ^ 8));
  v461 = (4 * v460) ^ (32 * v460) ^ ((v460 ^ v459) << 11) ^ 0x9A81ABEC;
  v462 = v460 ^ v432 ^ (v461 - 2 * (v461 & 0x2AC1DB7C ^ (4 * v460) & 0x10) + 717347693);
  LODWORD(v412) = v17 ^ v439;
  v463 = v17 ^ v439 ^ 0xD8DD5A2F;
  v464 = (8 * v463) ^ (4 * v463) ^ 0xBE7A2D80;
  v465 = (v17 >> 29) ^ (v17 >> 30);
  v466 = v17 ^ v439 ^ 0x257230F;
  v467 = (v17 >> 27) ^ (v17 >> 28) ^ (v17 >> 18) ^ (v17 >> 15) ^ (v17 >> 13) ^ v465 ^ (v463 >> 2) ^ (v466 >> 4) ^ 0x36CFCDF6;
  v468 = (v17 >> 14) ^ 0x95C;
  v469 = ((v17 ^ v439) >> 10) ^ 0x95C8;
  v470 = ((v17 ^ v439) >> 6) ^ 0x95C8C ^ (v463 >> 5);
  LODWORD(v173) = (v17 >> 21) ^ 0x12;
  v471 = (v17 >> 19) ^ 0x4A;
  v472 = v470 ^ (v17 >> 11) ^ v173 ^ v471 ^ v468 ^ v469 ^ v467 ^ (v463 >> 9);
  LODWORD(v432) = v472 ^ 0x4AE4;
  v473 = (v472 >> 21) ^ (v467 >> 27);
  v474 = (v377 << 6) ^ (2 * v377) ^ (v377 << 17) ^ (v377 << 29) ^ (8 * v377);
  v475 = (v463 << 27) ^ (v463 << 11) ^ 0x53C90000 ^ (v463 << 13) ^ 0x4F240000;
  v476 = LODWORD(STACK[0x63C]) ^ (LODWORD(STACK[0x640]) >> 21);
  v477 = (v463 << 22) ^ 0x48000000;
  v478 = (v463 << 21) ^ 0x24000000;
  v479 = (v463 << 18) ^ 0xE4800000;
  v480 = (v463 << 23) ^ 0x90000000;
  v481 = (v463 << 26) ^ 0x80000000;
  v482 = v474 ^ (LODWORD(STACK[0x640]) << 11) ^ (32 * LODWORD(STACK[0x640])) ^ (4 * LODWORD(STACK[0x640])) ^ (32 * v476) ^ (4 * v476) ^ (v476 << 11) ^ (v463 << 30) ^ (v463 << 28) ^ (v463 << 19) ^ (v463 << 17) ^ (v463 << 14) ^ (16 * v463) ^ (32 * v463) ^ v475 ^ v479 ^ v478 ^ v477 ^ v480 ^ v481 ^ v464 ^ (32 * v432) ^ ((_DWORD)v432 << 11) ^ (4 * v432) ^ (v473 << 11) ^ (32 * v473) ^ (4 * v473) ^ 0x27D52C2A;
  v483 = LODWORD(STACK[0x628]) ^ LODWORD(STACK[0x638]) ^ (v482 - ((2 * v482) & 0x4F2F5AB2) - 1483231912);
  v484 = (v483 - ((2 * v483) & 0xD9B6D860) + 1826319408) ^ LODWORD(STACK[0x620]);
  v485 = (v484 - ((2 * v484) & 0xCE0556BC) - 419255458) ^ LODWORD(STACK[0x5F8]);
  v486 = LODWORD(STACK[0x5F4]) ^ LODWORD(STACK[0x634]) ^ (v485 - ((2 * v485) & 0x365985CA) + 455918309);
  v487 = (v486 - ((2 * v486) & 0x77668CFC) - 1145878914) ^ v425;
  v488 = LODWORD(STACK[0x61C]) ^ LODWORD(STACK[0x5EC]) ^ LODWORD(STACK[0x630]) ^ v487;
  v489 = LODWORD(STACK[0x62C]) ^ LODWORD(STACK[0x5F0]) ^ v428 ^ (v488 - 2 * (v488 & 0x292C4EFE ^ v487 & 0x1C) + 690769634);
  v490 = (v489 - ((2 * v489) & 0xDDADA70E) - 287911033) ^ LODWORD(STACK[0x640]);
  v491 = v476 ^ 0xBE4AC833 ^ ((v490 ^ 0xEFFD4209) - 2 * ((v490 ^ 0xEFFD4209) & 0x32A8B364 ^ v490 & 0x20) - 1297566908);
  v492 = v473 ^ v472 ^ 0x4AE4 ^ (v491 - ((2 * v491) & 0xC3D0F2E8) + 1642625396);
  v493 = (v463 << 16) ^ 0x79200000;
  LODWORD(v432) = v475 ^ v493;
  v494 = (v493 & 0xFFFFFF00 | BYTE2(v17)) ^ __ROR4__(v464 ^ (v463 << 7) ^ 0x453C9000, 24) ^ 0x4805AC79;
  LODWORD(v17) = (v17 >> 25) ^ BYTE3(v17) ^ (v17 >> 22) ^ (v17 >> 17) ^ (v17 >> 12) ^ WORD1(v17) ^ (v17 >> 11) ^ v465 ^ v173 ^ v471 ^ v468;
  LODWORD(v17) = (v412 >> 7) ^ (v412 >> 8) ^ v17 ^ (v466 >> ((v17 & 9 ^ 9) + (v17 & 9)));
  v495 = v470 ^ (v469 - ((2 * v469) & 0x480260) - 60554960) ^ v17;
  LODWORD(v17) = (v17 >> 27) ^ (v17 >> 30) ^ (v495 >> 21);
  v496 = (LODWORD(STACK[0x670]) | ((_DWORD)v412 << 24)) ^ ((_DWORD)v412 << 25) ^ (v463 << 10) ^ (v463 << 15) ^ (v463 << 20) ^ v432 ^ v479 ^ v478 ^ v477 ^ v480 ^ v481 ^ __ROR4__(v494, 8) ^ LODWORD(STACK[0x64C]) ^ (32 * v495) ^ (4 * (v495 ^ 0xFC6294B5)) ^ ((v495 ^ 0xFC6294B5) << 11) ^ (4 * v17) ^ (32 * v17) ^ ((_DWORD)v17 << 11) ^ 0x9E2E6C25;
  v497 = v17 ^ v495 ^ (v496 - ((2 * v496) & 0xABA5961C) - 707605746);
  LODWORD(v17) = -1673081951 * LODWORD(STACK[0x6FC]) - ((948803394 * LODWORD(STACK[0x6FC]) + 968328188) & 0x5B281B5A);
  v498 = STACK[0x75C];
  v499 = v497;
  v500 = v497 ^ 0x2F0060A ^ (-1673081951 * LODWORD(STACK[0x758])
                           - ((948803394 * LODWORD(STACK[0x758]) + 968328188) & 0x5B281B5A)
                           - 898642005);
  LODWORD(v173) = v497 ^ 0x2F0060A;
  LODWORD(STACK[0x670]) = v497 ^ 0x2F0060A;
  LOBYTE(STACK[0xCFB]) = (HIBYTE(v500) ^ 0x2E) - 2 * ((HIBYTE(v500) ^ 0x2E) & 0x1D ^ HIBYTE(v500) & 1) - 100;
  v501 = v492 ^ (-1673081951 * v498 - 1663319554);
  LOBYTE(v432) = (HIBYTE(v501) ^ 0x67) - ((2 * (HIBYTE(v501) ^ 0x67)) & 0x38);
  LOBYTE(STACK[0xD56]) = (BYTE2(v500) ^ 0x48) - 2 * ((BYTE2(v500) ^ 0x48) & 0x1D ^ BYTE2(v500) & 1) - 100;
  v502 = STACK[0x71C];
  v503 = v462 ^ (-1673081951 * LODWORD(STACK[0x718]) - 1663319554);
  LOBYTE(STACK[0x102D]) = BYTE2(v503) ^ 0x86;
  LOBYTE(STACK[0xFD2]) = HIBYTE(v503) ^ 0xBB;
  LOBYTE(STACK[0xF1D]) = (BYTE1(v501) ^ 0x2A) - ((2 * (BYTE1(v501) ^ 0x2A)) & 0x38) - 100;
  LOBYTE(STACK[0xE0C]) = v500 ^ 0x30;
  LOBYTE(STACK[0xDB1]) = (BYTE1(v500) ^ 5) + ~(2 * ((BYTE1(v500) ^ 5) & 0x1E ^ BYTE1(v500) & 2)) - 99;
  LOBYTE(STACK[0xCCA]) = BYTE1(v503) ^ 0xFC;
  v504 = v456 ^ (-1673081951 * v502 - 1663319554);
  LOBYTE(STACK[0xD80]) = HIBYTE(v504) ^ 0x67;
  LOBYTE(STACK[0xEC2]) = (BYTE2(v501) ^ 0x3C) - 2 * ((BYTE2(v501) ^ 0x3C) & 0x1F ^ BYTE2(v501) & 3) - 100;
  LOBYTE(STACK[0xD25]) = v503 ^ 0x32;
  LOBYTE(STACK[0xE36]) = BYTE1(v504) ^ 0x24;
  LOBYTE(STACK[0xF78]) = v501 ^ 0x17;
  v505 = v499 ^ (-1673081951 * LODWORD(STACK[0x760]) - 1663319554);
  v506 = STACK[0x724];
  v507 = v462 ^ (-1673081951 * LODWORD(STACK[0x720]) - 1663319554);
  LOBYTE(STACK[0xEEC]) = HIBYTE(v507) ^ 0xBB;
  LOBYTE(STACK[0xE67]) = v432 - 100;
  LOBYTE(STACK[0xDDB]) = BYTE2(v504) ^ 0x81;
  LOBYTE(STACK[0xFD3]) = (HIBYTE(v505) ^ 1) - ((v505 >> 23) & 0x38) - 100;
  LOBYTE(STACK[0xF47]) = BYTE2(v507) ^ 0x86;
  LOBYTE(STACK[0xD26]) = v505 ^ 0x97;
  LOBYTE(STACK[0xFA2]) = BYTE1(v507) ^ 0xFC;
  v508 = v492 ^ (-1673081951 * LODWORD(STACK[0x764]) - 1663319554);
  LOBYTE(STACK[0xFFD]) = v507 ^ 0x32;
  LOBYTE(STACK[0x102E]) = (BYTE2(v505) ^ 0x2C) - 2 * ((BYTE2(v505) ^ 0x2C) & 0x1E ^ BYTE2(v505) & 2) - 100;
  LOBYTE(STACK[0xCCB]) = (BYTE1(v505) ^ 0xE) - ((2 * (BYTE1(v505) ^ 0xE)) & 0x38) - 100;
  LOBYTE(STACK[0xE91]) = v504 ^ 0x3C;
  v509 = v456 ^ (-1673081951 * v506 - 1663319554);
  LOBYTE(STACK[0xCF5]) = BYTE2(v509) ^ 0x81;
  LOBYTE(STACK[0xD81]) = (HIBYTE(v508) ^ 0x67) - ((2 * (HIBYTE(v508) ^ 0x67)) & 0x38) - 100;
  LODWORD(STACK[0x5D8]) = v508;
  LOBYTE(STACK[0xDDC]) = (BYTE2(v508) ^ 0x3C) - ((2 * (BYTE2(v508) ^ 0x3C)) & 0x38) - 100;
  LODWORD(STACK[0x5D4]) = v509;
  LOBYTE(STACK[0xC9A]) = HIBYTE(v509) ^ 0x67;
  v510 = v173 ^ (v17 - 898642005);
  LODWORD(STACK[0x5E4]) = v510;
  LODWORD(v17) = v510 & 0xB7 ^ 0x13 | v510 & 0xB7 ^ 0xA4;
  LOBYTE(v510) = (BYTE1(v508) ^ 0x2A) - 2 * ((BYTE1(v508) ^ 0x2A) & 0x1D ^ BYTE1(v508) & 1);
  v511 = v499 ^ (-1673081951 * LODWORD(STACK[0x704]) - 1663319554);
  LODWORD(STACK[0x580]) = v499;
  LODWORD(STACK[0x650]) = v511;
  v512 = ((((v509 >> 8) ^ 0x47) + ((v509 >> 8) ^ 0x8B) + 1) ^ 0xFE) + ((v509 >> 8) ^ 0x8B);
  LOBYTE(STACK[0xD50]) = v512 - ((2 * v512) & 0x38) - 100;
  *(_BYTE *)(STACK[0x688] + (v17 | ((v511 & 0x110 ^ 0x110) + (v511 & 0x110)))) = v510 - 100;
  LODWORD(STACK[0x5C8]) = LODWORD(STACK[0x600]) - 1439853854;
  LODWORD(v17) = STACK[0x698];
  v513 = STACK[0x69C];
  v514 = (STACK[0x698] & 0x9C46CBA1 ^ 0x9C46CBA1) + (STACK[0x698] & 0x9C46CBA1);
  LODWORD(v432) = STACK[0x6BC];
  LODWORD(STACK[0x5BC]) = (-1663319554 - 1673081951 * LODWORD(STACK[0x6B8])) ^ 0x2F43242A;
  v515 = v514 * v17 - ((2 * v514 * v17 + 968328188) & 0xCADF7F14);
  v516 = STACK[0x6DC];
  LODWORD(STACK[0x61C]) = -1673081951 * LODWORD(STACK[0x6D8])
                        - ((948803394 * LODWORD(STACK[0x6D8]) + 968328188) & 0xFFEA2796);
  v517 = -1673081951 * LODWORD(STACK[0x6F8]) - ((948803394 * LODWORD(STACK[0x6F8]) + 968328188) & 0x5B281B5A);
  v518 = -1673081951 * v513 - ((948803394 * v513 + 968328188) & 0xCADF7F14);
  LODWORD(STACK[0x5FC]) = -1673081951 * v516 - ((948803394 * v516 + 968328188) & 0xFFEA2796);
  v519 = STACK[0x6C4];
  LODWORD(STACK[0x600]) = -1673081951 * LODWORD(STACK[0x6C0])
                        - ((948803394 * LODWORD(STACK[0x6C0]) + 968328188) & 0xF2379798);
  LODWORD(STACK[0x5B0]) = (-1673081951 * LODWORD(STACK[0x6A0]) - 1663319554) ^ 0x5B8CAB6E;
  LODWORD(STACK[0x5B8]) = (-1673081951 * v432 - 1663319554) ^ 0x45EA7EE9;
  LODWORD(v432) = STACK[0x6E4];
  LODWORD(STACK[0x598]) = (-1673081951 * LODWORD(STACK[0x6E0]) - 1663319554) ^ 0x878B7360;
  LODWORD(STACK[0x5AC]) = (-1673081951 * v519 - 1663319554) ^ 0x342C472B;
  LODWORD(STACK[0x5A0]) = (-1673081951 * LODWORD(STACK[0x6A4]) - 1663319554) ^ 0x18A27F1D;
  LODWORD(STACK[0x588]) = (-1673081951 * v432 - 1663319554) ^ 0xC4A5A713;
  v520 = -1673081951 * LODWORD(STACK[0x700]) - ((948803394 * LODWORD(STACK[0x700]) + 968328188) & 0x5B281B5A);
  v521 = STACK[0x6EC];
  LODWORD(STACK[0x5F8]) = -1673081951 * LODWORD(STACK[0x6E8])
                        - ((948803394 * LODWORD(STACK[0x6E8]) + 968328188) & 0xFFEA2796);
  v522 = STACK[0x6AC];
  LODWORD(v432) = (~(948803394 * LODWORD(STACK[0x6A8]) + 968328188) | 0x352080EB) - 1673081951 * LODWORD(STACK[0x6A8]);
  v523 = STACK[0x70C];
  LODWORD(v173) = -1673081951 * LODWORD(STACK[0x708]) - ((948803394 * LODWORD(STACK[0x708]) + 968328188) & 0x5B281B5A);
  LODWORD(v17) = STACK[0x6CC];
  LODWORD(STACK[0x5F0]) = -1673081951 * LODWORD(STACK[0x6C8])
                        - ((948803394 * LODWORD(STACK[0x6C8]) + 968328188) & 0xF2379798);
  LODWORD(STACK[0x5F4]) = -1673081951 * v521 - ((948803394 * v521 + 968328188) & 0xFFEA2796);
  LODWORD(STACK[0x5EC]) = -1673081951 * v17 - ((948803394 * v17 + 968328188) & 0xF2379798);
  LODWORD(v412) = STACK[0x6D4];
  LODWORD(STACK[0x578]) = -1673081951 * LODWORD(STACK[0x6D0])
                        - ((948803394 * LODWORD(STACK[0x6D0]) + 968328188) & 0xF2379798);
  LODWORD(STACK[0x560]) = -1673081951 * LODWORD(STACK[0x6F0])
                        - ((948803394 * LODWORD(STACK[0x6F0]) + 968328188) & 0xFFEA2796);
  v524 = STACK[0x714];
  v525 = -1673081951 * LODWORD(STACK[0x710]) - ((948803394 * LODWORD(STACK[0x710]) + 968328188) & 0x5B281B5A);
  LODWORD(STACK[0x62C]) = v517 - 898642005;
  LODWORD(STACK[0x634]) = v520 - 898642005;
  LODWORD(STACK[0x628]) = v173 - 898642005;
  LODWORD(STACK[0x630]) = -1673081951 * v523 - ((948803394 * v523 + 968328188) & 0x5B281B5A) - 898642005;
  LODWORD(STACK[0x624]) = v525 - 898642005;
  v526 = -1673081951 * LODWORD(STACK[0x6B0]) - ((948803394 * LODWORD(STACK[0x6B0]) + 968328188) & 0xCADF7F14) + 38502792;
  v527 = -1673081951 * LODWORD(STACK[0x6B4]) - ((948803394 * LODWORD(STACK[0x6B4]) + 968328188) & 0xCADF7F14) + 38502792;
  LODWORD(STACK[0x35C]) = v456 ^ 0xAD413419 ^ (v515 + 38502792);
  LODWORD(STACK[0x620]) = v456 ^ 0xAD413419 ^ (v518 + 38502792);
  LODWORD(STACK[0x63C]) = v456 ^ 0xAD413419 ^ (v432 + 38502793);
  LODWORD(STACK[0x640]) = v456 ^ 0xAD413419 ^ (-1673081951 * v522
                                             - ((948803394 * v522 + 968328188) & 0xCADF7F14)
                                             + 38502792);
  LODWORD(STACK[0x638]) = v456 ^ 0xAD413419 ^ v526;
  LODWORD(STACK[0x64C]) = v456 ^ 0xAD413419 ^ v527;
  LODWORD(v432) = STACK[0x6F4];
  LODWORD(v173) = STACK[0x79C];
  v528 = 948803394 * LODWORD(STACK[0x6F4]) + 968328188;
  v529 = 948803394 * LODWORD(STACK[0x79C]) + 968328188;
  LODWORD(STACK[0x550]) = 948803394 * v524 + 968328188;
  v530 = STACK[0x748];
  LODWORD(STACK[0x570]) = ((STACK[0x748] & 0x9C46CBA1 ^ 0x9C46CBA1) + (STACK[0x748] & 0x9C46CBA1))
                        * LODWORD(STACK[0x74C])
                        - 1663319554;
  v531 = STACK[0x78C];
  v532 = v499 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x788]));
  v533 = -1663319554 - 1673081951 * LODWORD(STACK[0x798]);
  v534 = STACK[0x728];
  LODWORD(STACK[0x548]) = -1663319554 - 1673081951 * LODWORD(STACK[0x72C]);
  LODWORD(STACK[0x538]) = -1663319554 - 1673081951 * v534;
  v535 = STACK[0x76C];
  LODWORD(STACK[0x568]) = -1663319554 - 1673081951 * LODWORD(STACK[0x768]);
  LODWORD(STACK[0x558]) = -1663319554 - 1673081951 * v535;
  v536 = STACK[0x734];
  v537 = -1663319554 - 1673081951 * LODWORD(STACK[0x730]);
  LODWORD(STACK[0x584]) = -1663319554 - 1673081951 * LODWORD(STACK[0x770]);
  LODWORD(STACK[0x540]) = -1663319554 - 1673081951 * LODWORD(STACK[0x774]);
  v538 = -1663319554 - 1673081951 * LODWORD(STACK[0x738]);
  v539 = -1663319554 - 1673081951 * LODWORD(STACK[0x73C]);
  v540 = -1663319554 - 1673081951 * v536;
  v541 = STACK[0x77C];
  LODWORD(STACK[0x594]) = -1663319554 - 1673081951 * LODWORD(STACK[0x778]);
  LODWORD(STACK[0x530]) = -1663319554 - 1673081951 * v541;
  v542 = -1663319554 - 1673081951 * LODWORD(STACK[0x740]);
  v543 = -1663319554 - 1673081951 * LODWORD(STACK[0x744]);
  LODWORD(v275) = -1663319554 - 1673081951 * LODWORD(STACK[0x784]);
  LODWORD(STACK[0x5C0]) = -1663319554 - 1673081951 * LODWORD(STACK[0x780]);
  v544 = -1663319554 - 1673081951 * v530;
  v545 = STACK[0x754];
  v546 = -1663319554 - 1673081951 * LODWORD(STACK[0x750]);
  v547 = STACK[0x794];
  LODWORD(STACK[0x5E8]) = -1663319554 - 1673081951 * LODWORD(STACK[0x790]);
  v548 = (v532 & 0x9CDBC1FE ^ 0x8000A | v532 & 0x9CDBC1FE ^ 0x9CD3C1F4) - 1673081951 * v547;
  LODWORD(v17) = -1673081951 * v432;
  LODWORD(v432) = -1673081951 * v524;
  LODWORD(v17) = v17 - (v528 & 0xFFEA2796);
  v549 = LODWORD(STACK[0x5FC]) - 1664035383;
  v550 = LODWORD(STACK[0x5F8]) - 1664035383;
  v551 = LODWORD(STACK[0x5F4]) - 1664035383;
  v552 = LODWORD(STACK[0x560]) - 1664035383;
  LODWORD(STACK[0x358]) = v462 ^ 0xEBDC4056 ^ (LODWORD(STACK[0x61C]) - 1664035383);
  LODWORD(STACK[0x5F4]) = v462 ^ 0xEBDC4056 ^ v549;
  LODWORD(STACK[0x354]) = v462 ^ 0xEBDC4056 ^ v550;
  LODWORD(STACK[0x5FC]) = v462 ^ 0xEBDC4056 ^ v551;
  LODWORD(STACK[0x5F8]) = v462 ^ 0xEBDC4056 ^ v552;
  LODWORD(STACK[0x350]) = v462 ^ 0xEBDC4056 ^ (v17 - 1664035383);
  LODWORD(STACK[0x61C]) = ((2 * (v456 ^ v533)) & 0xFDEEDE96 ^ 0x904C1606) + (v456 ^ v533 ^ 0xB6D9E4D8);
  v553 = -1673081951 * v173 - (v529 & 0xF2379798);
  v554 = LODWORD(STACK[0x5F0]) + 368545226;
  v555 = LODWORD(STACK[0x5EC]) + 368545226;
  LODWORD(v173) = LODWORD(STACK[0x578]) + 368545226;
  LODWORD(STACK[0x34C]) = v492 ^ 0x1E27E147 ^ (LODWORD(STACK[0x600]) + 368545226);
  LODWORD(STACK[0x600]) = v492 ^ 0x1E27E147 ^ v554;
  LODWORD(STACK[0x348]) = v492 ^ 0x1E27E147 ^ v555;
  LODWORD(STACK[0x344]) = v492 ^ 0x1E27E147 ^ v173;
  LODWORD(STACK[0x340]) = v492 ^ 0x1E27E147 ^ (-1673081951 * v412
                                             - ((948803394 * v412 + 968328188) & 0xF2379798)
                                             + 368545226);
  LODWORD(STACK[0x5F0]) = v492 ^ 0x1E27E147 ^ (v553 + 368545226);
  LODWORD(STACK[0x5EC]) = (v432 - (STACK[0x550] & 0xE504D5F8) + 257830138) ^ 0x73AE64F7;
  LODWORD(STACK[0x33C]) = LODWORD(STACK[0x5E4]) ^ 0xC9E51CE;
  LODWORD(STACK[0x338]) = LODWORD(STACK[0x598]) ^ v462;
  LODWORD(STACK[0x334]) = LODWORD(STACK[0x588]) ^ v462;
  v556 = v462 ^ LODWORD(STACK[0x538]);
  v557 = v462 ^ v537;
  v558 = v462 ^ v542;
  LODWORD(v173) = v462 ^ v538;
  LODWORD(v432) = v462 ^ v544;
  v559 = v462 ^ v546;
  LODWORD(STACK[0x330]) = LODWORD(STACK[0x5B0]) ^ v456;
  LODWORD(STACK[0x32C]) = LODWORD(STACK[0x5A0]) ^ v456;
  v560 = v456 ^ LODWORD(STACK[0x548]);
  v561 = v456 ^ v540;
  LODWORD(v17) = v456 ^ v539;
  v562 = v456 ^ v543;
  v563 = v456 ^ LODWORD(STACK[0x570]);
  LODWORD(STACK[0x5E4]) = v456 ^ (-1663319554 - 1673081951 * v545);
  LODWORD(STACK[0x328]) = LODWORD(STACK[0x5BC]) ^ v492;
  LODWORD(STACK[0x324]) = LODWORD(STACK[0x5B8]) ^ v492;
  LODWORD(STACK[0x320]) = LODWORD(STACK[0x5AC]) ^ v492;
  v564 = v492 ^ LODWORD(STACK[0x558]);
  v565 = v492 ^ LODWORD(STACK[0x540]);
  v566 = v492 ^ LODWORD(STACK[0x530]);
  v567 = v492 ^ v275;
  LODWORD(STACK[0x5BC]) = v492 ^ (-1663319554 - 1673081951 * v531);
  v568 = v492 ^ v548;
  v569 = STACK[0x580];
  v570 = LODWORD(STACK[0x580]) ^ LODWORD(STACK[0x568]);
  LOBYTE(STACK[0xDAB]) = LODWORD(STACK[0x5D4]) ^ 0x3C;
  LOBYTE(STACK[0xF48]) = (BYTE2(v570) ^ 0x2C) - 2 * ((BYTE2(v570) ^ 0x2C) & 0x1D ^ BYTE2(v570) & 1) - 100;
  LOBYTE(STACK[0xEBC]) = BYTE1(v556) ^ 0xFC;
  LOBYTE(STACK[0xE92]) = LODWORD(STACK[0x5D8]) ^ 0x17;
  LOBYTE(STACK[0xE06]) = HIBYTE(v556) ^ 0xBB;
  LOBYTE(STACK[0xFA3]) = (BYTE1(v570) ^ 0xE) + ~(2 * ((BYTE1(v570) ^ 0xE) & 0x1D ^ BYTE1(v570) & 1)) - 99;
  LOBYTE(STACK[0xEED]) = (HIBYTE(v570) ^ 1) - ((v570 >> 23) & 0x38) - 100;
  LOBYTE(STACK[0xF17]) = v556 ^ 0x32;
  LOBYTE(STACK[0xE61]) = BYTE2(v556) ^ 0x86;
  LOBYTE(STACK[0xFFE]) = v570 ^ 0x97;
  LOBYTE(STACK[0xF72]) = HIBYTE(v560) ^ 0x67;
  v571 = v569 ^ LODWORD(STACK[0x584]);
  LOBYTE(STACK[0xC9B]) = (HIBYTE(v564) ^ 0x67) - ((2 * (HIBYTE(v564) ^ 0x67)) & 0x38) - 100;
  LOBYTE(STACK[0xCF6]) = (BYTE2(v564) ^ 0x3C) - 2 * ((BYTE2(v564) ^ 0x3C) & 0x1E ^ BYTE2(v564) & 2) - 100;
  LOBYTE(STACK[0xFCD]) = BYTE2(v560) ^ 0x81;
  LOBYTE(STACK[0xE07]) = (HIBYTE(v571) ^ 1) - ((v571 >> 23) & 0x38) - 100;
  LOBYTE(STACK[0xD51]) = (BYTE1(v564) ^ 0x2A) - ((2 * (BYTE1(v564) ^ 0x2A)) & 0x38) - 100;
  LOBYTE(STACK[0xDAC]) = v564 ^ 0x17;
  LOBYTE(STACK[0x1028]) = BYTE1(v560) ^ 0x24;
  LOBYTE(STACK[0xE62]) = (BYTE2(v571) ^ 0x2C) - ((2 * (BYTE2(v571) ^ 0x2C)) & 0x38) - 100;
  LOBYTE(STACK[0xCC5]) = v560 ^ 0x3C;
  LOBYTE(STACK[0xD20]) = HIBYTE(v557) ^ 0xBB;
  LOBYTE(STACK[0xD7B]) = BYTE2(v557) ^ 0x86;
  LOBYTE(STACK[0xDD6]) = BYTE1(v557) ^ 0xFC;
  LOBYTE(STACK[0xEBD]) = (BYTE1(v571) ^ 0xE) - ((2 * (BYTE1(v571) ^ 0xE)) & 0x38) - 100;
  LOBYTE(STACK[0xE31]) = v557 ^ 0x32;
  LOBYTE(STACK[0xF18]) = v571 ^ 0x97;
  LOBYTE(STACK[0xF73]) = (HIBYTE(v565) ^ 0x67) - ((2 * (HIBYTE(v565) ^ 0x67)) & 0x38) - 100;
  LOBYTE(STACK[0xE8C]) = HIBYTE(v561) ^ 0x67;
  LOBYTE(STACK[0xEE7]) = BYTE2(v561) ^ 0x81;
  v572 = v569 ^ LODWORD(STACK[0x594]);
  LOBYTE(STACK[0xCC6]) = v565 ^ 0x17;
  LOBYTE(STACK[0xD21]) = (HIBYTE(v572) ^ 1) - ((v572 >> 23) & 0x38) - 100;
  LOBYTE(STACK[0xF42]) = BYTE1(v561) ^ 0x24;
  LOBYTE(STACK[0x1029]) = (BYTE1(v565) ^ 0x2A) - 2 * ((BYTE1(v565) ^ 0x2A) & 0x1D ^ BYTE1(v565) & 1) - 100;
  LOBYTE(STACK[0xFCE]) = (BYTE2(v565) ^ 0x3C) - 2 * ((BYTE2(v565) ^ 0x3C) & 0x1D ^ BYTE2(v565) & 1) - 100;
  LOBYTE(STACK[0xCF0]) = BYTE1(v173) ^ 0xFC;
  LOBYTE(STACK[0xDD7]) = (BYTE1(v572) ^ 0xE) - ((2 * (BYTE1(v572) ^ 0xE)) & 0x38) - 100;
  LOBYTE(STACK[0xC95]) = BYTE2(v173) ^ 0x86;
  LOBYTE(STACK[0xE32]) = v572 ^ 0x97;
  LOBYTE(STACK[0xD7C]) = (BYTE2(v572) ^ 0x2C) - 2 * ((BYTE2(v572) ^ 0x2C) & 0x1D ^ BYTE2(v572) & 1) - 100;
  LOBYTE(STACK[0xFF8]) = BYTE3(v173) ^ 0xBB;
  LOBYTE(STACK[0xDA6]) = BYTE3(v17) ^ 0x67;
  LOBYTE(v570) = v173 ^ 0x32;
  LODWORD(v173) = STACK[0x680];
  LOBYTE(STACK[0xD4B]) = v570;
  LOBYTE(STACK[0xF9D]) = v561 ^ 0x3C;
  LOBYTE(STACK[0xE01]) = BYTE2(v17) ^ 0x81;
  LOBYTE(STACK[0xEE8]) = (BYTE2(v566) ^ 0x3C) - ((2 * (BYTE2(v566) ^ 0x3C)) & 0x38) - 100;
  LOBYTE(STACK[0xE8D]) = (HIBYTE(v566) ^ 0x67) - ((2 * (HIBYTE(v566) ^ 0x67)) & 0x38) - 100;
  LOBYTE(STACK[0xF43]) = (BYTE1(v566) ^ 0x2A) - 2 * ((BYTE1(v566) ^ 0x2A) & 0x1D ^ BYTE1(v566) & 1) - 100;
  v573 = v569 ^ LODWORD(STACK[0x5C0]);
  LOBYTE(STACK[0xFF9]) = (HIBYTE(v573) ^ 1) - ((v573 >> 23) & 0x38) - 100;
  LOBYTE(STACK[0xF9E]) = v566 ^ 0x17;
  LOBYTE(STACK[0xE5C]) = BYTE1(v17) ^ 0x24;
  LOBYTE(STACK[0xC96]) = (BYTE2(v573) ^ 0x2C) - 2 * ((BYTE2(v573) ^ 0x2C) & 0x1E ^ BYTE2(v573) & 2) - 100;
  LOBYTE(STACK[0xEB7]) = v17 ^ 0x3C;
  LOBYTE(STACK[0xCF1]) = (BYTE1(v573) ^ 0xE) - ((2 * (BYTE1(v573) ^ 0xE)) & 0x38) - 100;
  LOBYTE(STACK[0xD4C]) = v573 ^ 0x97;
  LOBYTE(STACK[0xF6D]) = BYTE2(v558) ^ 0x86;
  LOBYTE(STACK[0x1023]) = v558 ^ 0x32;
  LOBYTE(STACK[0xDA7]) = (HIBYTE(v567) ^ 0x67) - ((2 * (HIBYTE(v567) ^ 0x67)) & 0x38) - 100;
  LOBYTE(STACK[0xFC8]) = BYTE1(v558) ^ 0xFC;
  LOBYTE(STACK[0xCC0]) = HIBYTE(v562) ^ 0x67;
  LOBYTE(STACK[0xF12]) = HIBYTE(v558) ^ 0xBB;
  LOBYTE(STACK[0xF13]) = (HIBYTE(v532) ^ 1) - ((v532 >> 23) & 0x38) - 100;
  LOBYTE(STACK[0xE02]) = (BYTE2(v567) ^ 0x3C) - 2 * ((BYTE2(v567) ^ 0x3C) & 0x1E ^ BYTE2(v567) & 2) - 100;
  LOBYTE(STACK[0xE5D]) = (BYTE1(v567) ^ 0x2A) - ((2 * (BYTE1(v567) ^ 0x2A)) & 0x38) - 100;
  v574 = STACK[0x5BC];
  LOBYTE(v17) = (HIBYTE(LODWORD(STACK[0x5BC])) ^ 0x67) - ((2 * (HIBYTE(LODWORD(STACK[0x5BC])) ^ 0x67)) & 0x38);
  LOBYTE(STACK[0xD76]) = BYTE1(v562) ^ 0x24;
  LOBYTE(STACK[0xEB8]) = v567 ^ 0x17;
  LOBYTE(STACK[0xDD1]) = v562 ^ 0x3C;
  LOBYTE(STACK[0xF6E]) = (BYTE2(v532) ^ 0x2C) - 2 * ((BYTE2(v532) ^ 0x2C) & 0x1D ^ BYTE2(v532) & 1) - 100;
  LOBYTE(STACK[0xE87]) = BYTE2(v432) ^ 0x86;
  LOBYTE(STACK[0xD1B]) = BYTE2(v562) ^ 0x81;
  LOBYTE(STACK[0xEE2]) = BYTE1(v432) ^ 0xFC;
  LOBYTE(STACK[0xFC9]) = (BYTE1(v532) ^ 0xE) - 2 * ((BYTE1(v532) ^ 0xE) & 0x1D ^ BYTE1(v532) & 1) - 100;
  LOBYTE(STACK[0xF3D]) = v432 ^ 0x32;
  LOBYTE(STACK[0xD1C]) = (BYTE2(v574) ^ 0x3C) - 2 * ((BYTE2(v574) ^ 0x3C) & 0x1E ^ BYTE2(v574) & 2) - 100;
  LOBYTE(STACK[0xF98]) = HIBYTE(v563) ^ 0x67;
  LOBYTE(STACK[0xCC1]) = v17 - 100;
  LOBYTE(STACK[0xFF3]) = BYTE2(v563) ^ 0x81;
  LOBYTE(STACK[0xE2C]) = BYTE3(v432) ^ 0xBB;
  LOBYTE(STACK[0xD77]) = (BYTE1(v574) ^ 0x2A) - ((2 * (BYTE1(v574) ^ 0x2A)) & 0x38) - 100;
  LOBYTE(STACK[0x1024]) = v532 ^ 0x97;
  LOBYTE(STACK[0xC90]) = (v559 & 0xAB ^ 0x89 | v559 & 0xAB ^ 0x22) ^ BYTE1(v563) ^ 0x8F;
  LOBYTE(STACK[0xCEB]) = v563 ^ 0x3C;
  LOBYTE(STACK[0xD46]) = HIBYTE(v559) ^ 0xBB;
  LODWORD(v17) = v569 ^ LODWORD(STACK[0x5E8]);
  LOBYTE(STACK[0xE2D]) = (BYTE3(v17) ^ 1) + (~(v17 >> 23) | 0xC7) - 99;
  LOBYTE(STACK[0xE88]) = (BYTE2(v17) ^ 0x2C) - 2 * ((BYTE2(v17) ^ 0x2C) & 0x1F ^ BYTE2(v17) & 3) - 100;
  LOBYTE(STACK[0xDA1]) = BYTE2(v559) ^ 0x86;
  LOBYTE(STACK[0xEE3]) = (BYTE1(v17) ^ 0xE) - 2 * ((BYTE1(v17) ^ 0xE) & 0x1D ^ BYTE1(v17) & 1) - 100;
  LOBYTE(STACK[0xDD2]) = v574 ^ 0x17;
  LOBYTE(STACK[0xFF4]) = (BYTE2(v568) ^ 0x3C) - 2 * ((BYTE2(v568) ^ 0x3C) & 0x1E ^ BYTE2(v568) & 2) - 100;
  LOBYTE(STACK[0xE57]) = v559 ^ 0x32;
  LOBYTE(STACK[0xF3E]) = v17 ^ 0x97;
  v575 = STACK[0x5E4];
  LOBYTE(STACK[0xEB2]) = HIBYTE(LODWORD(STACK[0x5E4])) ^ 0x67;
  LOBYTE(STACK[0xF99]) = (HIBYTE(v568) ^ 0x67) - ((2 * (HIBYTE(v568) ^ 0x67)) & 0x38) - 100;
  LOBYTE(STACK[0xF68]) = BYTE1(v575) ^ 0x24;
  LOBYTE(STACK[0xDFC]) = BYTE1(v559) ^ 0xFC;
  LOBYTE(STACK[0xF0D]) = BYTE2(v575) ^ 0x81;
  LOBYTE(STACK[0xFC3]) = v575 ^ 0x3C;
  LOBYTE(STACK[0xC91]) = (BYTE1(v568) ^ 0x2A) - ((2 * (BYTE1(v568) ^ 0x2A)) & 0x38) - 100;
  v576 = STACK[0x650];
  LODWORD(STACK[0x31C]) = LODWORD(STACK[0x650]) ^ 0x523C63AB;
  LOBYTE(STACK[0xCEC]) = v568 ^ 0x17;
  LODWORD(v17) = LODWORD(STACK[0x5EC]) ^ v569;
  LODWORD(STACK[0x318]) = LODWORD(STACK[0x62C]) ^ 0x66370B0D ^ LODWORD(STACK[0x670]);
  v577 = v569 ^ 0x2CB803A6 ^ LODWORD(STACK[0x628]);
  LODWORD(STACK[0x314]) = v569 ^ 0x2CB803A6 ^ LODWORD(STACK[0x634]);
  v578 = v569 ^ 0x2CB803A6 ^ LODWORD(STACK[0x624]);
  LODWORD(STACK[0x310]) = v569 ^ 0x2CB803A6 ^ LODWORD(STACK[0x630]);
  LODWORD(STACK[0x308]) = LODWORD(STACK[0x5F4]) - 1997815651;
  LODWORD(STACK[0x304]) = v17 + 1201515185;
  LODWORD(STACK[0x300]) = LODWORD(STACK[0x5F8]) + 1171979446;
  LODWORD(STACK[0x2FC]) = LODWORD(STACK[0x5FC]) + 2125004293;
  LODWORD(STACK[0x2F8]) = v578 - 925950634;
  v579 = STACK[0x61C];
  LODWORD(STACK[0x2F4]) = LODWORD(STACK[0x61C]) - LODWORD(STACK[0x5F0]) - 473188756;
  LODWORD(STACK[0x2F0]) = v579 - 1088439297;
  LODWORD(STACK[0x2EC]) = LODWORD(STACK[0x620]) + 1750279272;
  v580 = STACK[0x64C];
  LODWORD(v17) = ((((LODWORD(STACK[0x64C]) + 426527) & 0x40000) + ((735149536 - LODWORD(STACK[0x64C])) & 0x6CB7E929)) ^ (LODWORD(STACK[0x64C]) + 1412334111) & 0x6C92E929 ^ (((v579 + 17338549) & 0xD49F0CE ^ 0xD49F0CE) + ((v579 + 17338549) & 0xD49F0CE))) & 0x7FD6E9EF;
  LODWORD(STACK[0x2E8]) = LODWORD(STACK[0x63C]) + 756265570;
  LODWORD(STACK[0x2E4]) = LODWORD(STACK[0x638]) + 1027986357;
  LODWORD(STACK[0x2D8]) = LODWORD(STACK[0x600]) - 834192040;
  LODWORD(STACK[0x2D0]) = LODWORD(STACK[0x640]) - 1379204738;
  LODWORD(STACK[0x2CC]) = -2106677732 - v17;
  LODWORD(STACK[0x640]) = (!(v576 & 1) + (v576 & 1)) | 0x24;
  LODWORD(STACK[0x2C8]) = v577 + 1;
  STACK[0x2C0] = (unint64_t)&STACK[0x31E7833A0F911A6A];
  STACK[0x2B8] = (unint64_t)&STACK[0x53B7A011B771BBD1];
  LODWORD(STACK[0x384]) = 2111766527;
  LODWORD(STACK[0x380]) = 1972305727;
  LODWORD(STACK[0x4CC]) = -1234892176;
  LODWORD(STACK[0x4C8]) = 129719;
  LODWORD(STACK[0x4C4]) = 3568031;
  LODWORD(STACK[0x3A0]) = 577263;
  LODWORD(STACK[0x39C]) = 2039808;
  LODWORD(STACK[0x4C0]) = -1024833108;
  LODWORD(STACK[0x4BC]) = -606967028;
  LODWORD(STACK[0x4B8]) = 882484;
  LODWORD(STACK[0x394]) = -338546357;
  LODWORD(STACK[0x2B4]) = v580 - 1367579969;
  STACK[0x368] = 0x5788FEB2E38DE344;
  STACK[0x370] = 0x31E7833A0F910A2ALL;
  STACK[0x378] = 0x53B7A011B771AFA1;
  v581 = STACK[0x678];
  v582 = STACK[0x660];
  LODWORD(STACK[0x474]) = 1;
  v583 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x690] + 8 * v582) - 8);
  v584 = STACK[0x648];
  LODWORD(STACK[0x678]) = v581;
  LODWORD(STACK[0x648]) = v584;
  LODWORD(STACK[0x680]) = v173;
  return v583();
}

uint64_t sub_1CF309634@<X0>(int a1@<W2>, int a2@<W4>, int a3@<W5>, int a4@<W6>, int a5@<W8>)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  unsigned int v38;
  uint64_t (*v39)(void);

  v12 = 261 * (((a5 - 211) | 0xD3) ^ 0x4D6);
  v13 = a3 - 329879686;
  v14 = a1 ^ (v11 - 434704537);
  v15 = (v11 - 275944910 + v12) ^ v14;
  v16 = v15 ^ 0x1973D1DE;
  v17 = STACK[0x658];
  v18 = ((v17 ^ 0xDD5ABC33) + 158760932) ^ v17 ^ a2;
  LODWORD(STACK[0x494]) = LODWORD(STACK[0x308]) + v8;
  LODWORD(STACK[0x63C]) = (((v18 ^ 0xD385CDCF) + LODWORD(STACK[0x354])) ^ 0xBEEFD753)
                        + 1805381037
                        + ((2 * ((v18 ^ 0xD385CDCF) + LODWORD(STACK[0x354]))) & 0x7DDFAEA6);
  v20 = (v8 + 546872373 + (a1 ^ 0x1973D1DE) - ((2 * (v8 + 546872373 + (a1 ^ 0x1973D1DE))) & 0x6DD7AB40) - 1226058336) ^ 0xAF98047E ^ v15;
  LODWORD(STACK[0x638]) = (v14 ^ 0xA9ED783E) + LODWORD(STACK[0x350]);
  LODWORD(STACK[0x4A0]) = ((LODWORD(STACK[0x2C8]) + (v15 ^ v5)) ^ 0xCF9EEEFA)
                        + 2087842720
                        + ((2 * (LODWORD(STACK[0x2C8]) + (v15 ^ v5))) & 0x9F3DDDF4);
  v21 = v18 ^ 0xAFCBB3A3 ^ (v6
                          - 1537040335
                          + (a2 ^ 0xEDF71FC)
                          - ((2 * (v6 - 1537040335 + (a2 ^ 0xEDF71FC))) & 0xF89CFCD8)
                          + 2085518956);
  v22 = v14 ^ 0x777653C2;
  v23 = v14 ^ 0x777653C2 ^ v20;
  LODWORD(STACK[0x478]) = LODWORD(STACK[0x304]) + (v17 ^ a2 ^ 0x9CE49BD0);
  v24 = ((2 * (a4 - 508415484)) & 0xEED5ADFE ^ 0x825104FC) + ((a4 - 508415484) ^ 0xB6D37D81);
  LODWORD(STACK[0x64C]) = v23 + 1898986398;
  v25 = LODWORD(STACK[0x300]) + v24;
  v26 = LODWORD(STACK[0x2FC]) + v21;
  v27 = ((2 * v13) & 0xCF5FDFBE ^ 0x835356BC) + (v13 ^ 0x261644A1);
  LODWORD(STACK[0x4B0]) = LODWORD(STACK[0x2F8]) - v27;
  v28 = (v16 - v24 - 143993089) ^ v7 ^ (v23 - 266448863);
  v29 = (v21 ^ v17 ^ a2 ^ 0xBD804FD3) - ((2 * (v21 ^ v17 ^ a2 ^ 0xBD804FD3) + 1614585922) & 0x7C6B7578) + 777259741;
  v30 = v24 + v22 - 276965571;
  LODWORD(STACK[0x668]) = (v24 - 1122563862) ^ v9 ^ (v23 - 266448863);
  LODWORD(STACK[0x670]) = (v27 + 1288826890) ^ 0x3081390A ^ v29;
  LODWORD(STACK[0x4A4]) = ((LODWORD(STACK[0x310]) - v20) ^ 0xFFBB8DFD)
                        + 2009987943
                        + ((2 * (LODWORD(STACK[0x310]) - v20)) & 0xFF771BFA);
  LODWORD(STACK[0x660]) = v29;
  LODWORD(STACK[0x650]) = ((v18 ^ 0xD385CDCF) - v27 + 1739583455) ^ 0x53CD9825 ^ v29;
  STACK[0x378] = STACK[0x2B8];
  v31 = STACK[0x314];
  v32 = STACK[0x358];
  v33 = STACK[0x31C];
  v34 = STACK[0x33C];
  v35 = STACK[0x318];
  v36 = STACK[0x334];
  v37 = STACK[0x338];
  STACK[0x370] = STACK[0x2C0];
  LODWORD(STACK[0x658]) = v30;
  LODWORD(STACK[0x600]) = v26 + (((v12 - 281) | 0x42) ^ 0xD6B5B5F);
  LODWORD(STACK[0x490]) = LODWORD(STACK[0x680]) + 881786673 + (v37 ^ 0x93A220FD);
  LODWORD(STACK[0x480]) = (a2 ^ 0xEDF71FC) - 387794732 + (v36 ^ (((v12 + 796143846) & 0xD08BCE27) - 796069785));
  LODWORD(STACK[0x48C]) = (((v17 ^ 0x22A543CC) + (v35 ^ 0x487F0EA1) + 1) ^ 0x7FBBFFBF)
                        - 272109728
                        + ((2 * ((v17 ^ 0x22A543CC) + (v35 ^ 0x487F0EA1) + 1)) & 0xFF77FF7E);
  LODWORD(STACK[0x680]) = (((v28 ^ 0xA313FEB1) + 362507973) ^ 0x778F9ED9)
                        - 378044488
                        + ((2 * ((v28 ^ 0xA313FEB1) + 362507973)) & 0xEF1F3DB2);
  LODWORD(STACK[0x498]) = (((v34 ^ 0x22D65462) - LODWORD(STACK[0x678]) + 1537040335) ^ 0xF6FDE6FF)
                        + 1504697343
                        + ((2 * ((v34 ^ 0x22D65462) - LODWORD(STACK[0x678]) + 1537040335)) & 0xEDFBCDFE);
  LODWORD(STACK[0x448]) = -1656956407;
  LODWORD(STACK[0x49C]) = v31 - a4 + 1161931471;
  LODWORD(STACK[0x4B4]) = LODWORD(STACK[0x638]) - 65981975;
  LODWORD(STACK[0x4AC]) = v25 + 1282853187;
  v38 = (LODWORD(STACK[0x648]) ^ 0xE68C2E21) + (v33 ^ 0x53106DA0) + 1;
  LODWORD(STACK[0x4A8]) = (v38 ^ 0xEBEFFFBD) + 1610152575 + ((2 * v38) & 0xD7DFFF7A);
  LODWORD(STACK[0x488]) = v11 + v32 + 1524958580;
  LODWORD(STACK[0x470]) = 128;
  v39 = (uint64_t (*)(void))(*(_QWORD *)(v10
                                      + 8
                                      * (v12 ^ ((16 * (LODWORD(STACK[0x640]) == 36)) | ((LODWORD(STACK[0x640]) == 36) << 6))))
                          - 12);
  LODWORD(STACK[0x444]) = 1656956407;
  LODWORD(STACK[0x43C]) = 1656956407;
  LODWORD(STACK[0x434]) = 1041705898;
  return v39();
}

uint64_t sub_1CF30A068()
{
  unsigned int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL4 v9;

  v9 = v0 < 0x73DF7D3F;
  *(_BYTE *)(v8
           + (((v1 - 1828615979) & 0x6CFE7653) - 999) * v4
           + 434578749
           - ((((((((v1 - 1828615979) & 0x6CFE7653u) - 999) * v4 + 434578749) >> 1) * (unint64_t)v6) >> 32) >> 7)
           * v5) = *(_BYTE *)(v3 + (v2 + v4));
  if (v9 == (v4 + 344088334) < 0x73DF7D3F)
    v9 = v0 > v4 + 344088334;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((41 * v9) ^ v1)) - 12))();
}

uint64_t sub_1CF30A0FC()
{
  return sub_1CF30A068();
}

uint64_t sub_1CF30A104()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((911
                                * (LODWORD(STACK[0x448]) + LODWORD(STACK[0x434]) - v1 - 2085505115 == ((v0 - 935) | 0x60A) + 567211393)) ^ (v0 + 410))))();
}

uint64_t sub_1CF30A168()
{
  int v0;
  unsigned int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL4 v6;

  v6 = v1 < (v2 ^ 0x21CEF849u);
  *(_BYTE *)(v5 + 0x5D22 % (435 * (v0 ^ 0x689u) - 347)) = *(_BYTE *)(STACK[0x378]
                                                                   - 0x53B7A011B771AFA1
                                                                   + (v3 - 1026998573)) ^ 0x11;
  if (!v6)
    v6 = v1 > 0x21CEFC0C;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((4 * !v6) | (!v6 << 6)) ^ v0)) - 12))();
}

void sub_1CF30A210()
{
  JUMPOUT(0x1CF30A1ACLL);
}

uint64_t sub_1CF30A220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((914
                                          * ((((a8 - 360508843) ^ (v8 - 708691751 == 664 * (a8 ^ 0x51B) + 1944025103)) & 1) == 0)) ^ a8))
                            - 12))();
}

uint64_t sub_1CF30A290()
{
  return sub_1CF30A068();
}

uint64_t sub_1CF30A2D0(int a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  uint64_t (*v11)(_QWORD, uint64_t);

  v8 = 91 * (LODWORD(STACK[0x448]) + a1 - v4) - 879162144;
  v9 = v8 - 958 * ((((v8 >> 1) * (unint64_t)v5) >> 32) >> 7);
  *(_BYTE *)(v7 + v9) ^= (v3 + 40) ^ 0xEA;
  v10 = (v3 + 296) ^ 0x4B2;
  LODWORD(v9) = LODWORD(STACK[0x444]) + v4 + 1611011972;
  LODWORD(STACK[0x648]) = v10;
  v11 = *(uint64_t (**)(_QWORD, uint64_t))(v6
                                                  + 8
                                                  * ((941 * ((_DWORD)v9 + v10 == LODWORD(STACK[0x470]))) ^ (v3 + 296)));
  LODWORD(STACK[0x438]) = v4;
  LODWORD(STACK[0x47C]) = v4 + 64;
  LODWORD(STACK[0x484]) = a3;
  return v11(LODWORD(STACK[0x680]), 2821402143);
}

uint64_t sub_1CF30A3CC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  int v56;
  unsigned int v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  unsigned int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  __int16 v79;
  int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  int v86;
  char v87;
  char v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  int v96;
  int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  int v101;
  int v102;
  unsigned int v103;
  int v104;
  int v105;
  unsigned int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  unsigned int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  unsigned int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  unsigned int v150;
  int v151;
  unsigned int v152;
  int v153;
  int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  int v186;
  int v187;
  unsigned int v188;
  int v189;
  int v190;
  int v191;
  unsigned int v192;
  int v193;
  unsigned __int16 v194;
  int v195;
  int v196;
  unsigned int v197;
  unsigned int v198;
  int v199;
  unsigned int v200;
  unsigned int v201;
  int v202;
  unsigned int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  int v213;
  unsigned int v214;
  int v215;
  int v216;
  unsigned int v217;
  int v218;
  int v219;
  unsigned int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  int v240;
  unsigned int v241;
  unsigned int v242;
  int v243;
  int v244;
  int v245;
  unsigned int v246;
  unsigned int v247;
  int v248;
  int v249;
  unsigned int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  unsigned int v255;
  int v256;
  int v257;
  int v258;
  unsigned int v259;
  int v260;
  int v261;
  unsigned int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  unsigned int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  unsigned int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  unsigned int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  unsigned int v288;
  int v289;
  int v290;
  unsigned int v291;
  int v292;
  int v293;
  unsigned int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  unsigned int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  int v305;
  int v306;
  int v307;
  unsigned int v308;
  int v309;
  int v310;
  unsigned int v311;
  unsigned int v312;
  int v313;
  unsigned int v314;
  unsigned int v315;
  int v316;
  unsigned int v317;
  int v318;
  int v319;
  unsigned int v320;
  int v321;
  unsigned int v322;
  unsigned int v323;
  int v324;
  int v325;
  int v326;
  unsigned int v327;
  int v328;
  int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  unsigned int v340;
  int v341;
  unsigned int v342;
  int v343;
  int v344;
  int v345;
  unsigned int v346;
  int v347;
  unsigned int v348;
  int v349;
  unsigned int v350;
  unsigned int v351;
  int v352;
  int v353;
  int v354;
  int v355;
  int v356;
  int v357;
  unsigned int v358;
  int v359;
  unsigned int v360;
  int v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  int v365;
  unsigned int v366;
  unsigned int v367;
  int v368;
  int v369;
  int v370;
  unsigned int v371;
  int v372;
  unsigned int v373;
  int v374;
  unsigned int v375;
  int v376;
  int v377;
  unsigned int v378;
  unsigned int v379;
  int v380;
  unsigned int v381;
  int v382;
  int v383;
  int v384;
  int v385;
  unsigned int v386;
  int v387;
  int v388;
  unsigned int v389;
  int v390;
  int v391;
  int v392;
  unsigned int v393;
  int v394;
  int v395;
  int v396;
  unsigned int v397;
  unsigned int v398;
  int v399;
  unsigned int v400;
  int v401;
  int v402;
  int v403;
  unsigned int v404;
  int v405;
  int v406;
  int v407;
  int v408;
  int v409;
  unsigned int v410;
  int v411;
  unsigned int v412;
  int v413;
  int v414;
  int v415;
  int v416;
  int v417;
  int v418;
  int v419;
  int v420;
  unsigned int v421;
  int v422;
  int v423;
  int v424;
  unsigned int v425;
  unsigned int v426;
  unsigned int v427;
  int v428;
  int v429;
  int v430;
  int v431;
  int v432;
  int v433;
  unsigned int v434;
  int v435;
  int v436;
  unsigned int v437;
  int v438;
  int v439;
  int v440;
  int v441;
  unsigned int v442;
  int v443;
  int v444;
  int v445;
  int v446;
  unsigned int v447;
  int v448;
  unsigned int v449;
  int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  int v455;
  unsigned int v456;
  int v457;
  unsigned int v458;
  int v459;
  unsigned int v460;
  unsigned int v461;
  int v462;
  int v463;
  int v464;
  unsigned int v465;
  int v466;
  int v467;
  int v468;
  unsigned int v469;
  int v470;
  int v471;
  int v472;
  int v473;
  unsigned int v474;
  int v475;
  unsigned int v476;
  unsigned int v477;
  unsigned int v478;
  int v479;
  int v480;
  int v481;
  int v482;
  int v483;
  int v484;
  int v485;
  int v486;
  int v487;
  int v488;
  int v489;
  unsigned int v490;
  int v491;
  int v492;
  int v493;
  int v494;
  unsigned int v495;
  unsigned int v496;
  int v497;
  int v498;
  unsigned int v499;
  int v500;
  int v501;
  unsigned int v502;
  char v503;
  int v504;
  int v505;
  BOOL v506;
  char v507;
  char v508;
  unsigned __int16 v509;
  int v510;
  int v511;
  unsigned int v512;
  unsigned int v513;
  int v514;
  int v515;
  int v516;
  int v517;
  __int16 v518;
  int v519;
  unsigned int v520;
  int v521;
  int v522;
  int v523;
  int v524;
  unsigned int v525;
  unsigned int v526;
  unsigned int v527;
  unsigned int v528;
  int v529;
  unsigned int v530;
  unsigned int v531;
  unsigned int v532;
  int v533;
  int v534;
  int v535;
  int v536;
  int v537;
  int v538;
  int v539;
  int v540;
  unsigned int v541;
  unsigned int v542;
  int v543;
  int v544;
  int v545;
  int v546;
  int v547;
  int v548;
  int v549;
  int v550;
  unsigned int v551;
  int v552;
  unsigned int v553;
  unsigned int v554;
  int v555;
  int v556;
  unsigned int v557;
  unsigned int v558;
  int v559;
  unsigned int v560;
  int v561;
  unsigned int v562;
  unsigned int v563;
  int v564;
  unsigned int v565;
  int v566;
  int v567;
  int v568;
  unsigned int v569;
  int v570;
  int v571;
  unsigned int v572;
  int v573;
  unsigned int v574;
  int v575;
  int v576;
  int v577;
  int v578;
  int v579;
  unsigned int v580;
  int v581;
  unsigned int v582;
  int v583;
  int v584;
  unsigned int v585;
  int v586;
  int v587;
  int v588;
  int v589;
  int v590;
  int v591;
  unsigned int v592;
  int v593;
  unsigned int v594;
  int v595;
  int v596;
  int v597;
  int v598;
  unsigned int v599;
  unsigned int v600;
  unsigned int v601;
  unsigned int v602;
  unsigned int v603;
  unint64_t v604;
  int v605;
  int v606;
  int v607;
  int v608;
  int v609;
  int v610;
  int v611;
  int v612;
  int v613;
  int v614;
  unsigned int v615;
  unsigned int v616;
  int v617;
  int v618;
  unsigned int v619;
  int v620;
  unsigned int v621;
  int v622;
  unsigned int v623;
  int v624;
  unsigned __int16 v625;
  int v626;
  int v627;
  unsigned int v628;
  int v629;
  int v630;
  unsigned int v631;
  int v632;
  unsigned int v633;
  int v634;
  int v635;
  int v636;
  int v637;
  unsigned int v638;
  int v639;
  int v640;
  int v641;
  unsigned int v642;
  unsigned int v643;
  int v644;
  int v645;
  int v646;
  unsigned int v647;
  int v648;
  int v649;
  unsigned int v650;
  int v651;
  int v652;
  unsigned int v653;
  int v654;
  unsigned int v655;
  int v656;
  int v657;
  int v658;
  unsigned int v659;
  unsigned int v660;
  unsigned int v661;
  unsigned int v662;
  unsigned int v663;
  unsigned int v664;
  int v665;
  int v666;
  unsigned int v667;
  int v668;
  int v669;
  int v670;
  unsigned int v671;
  unint64_t v672;
  int v673;
  int v674;
  int v675;
  int v676;
  unsigned int v677;
  unsigned int v678;
  int v679;
  int v680;
  unsigned int v681;
  int v682;
  unsigned int v683;
  int v684;
  unsigned int v685;
  unsigned int v686;
  int v687;
  int v688;
  int v689;
  int v690;
  unsigned int v691;
  unsigned int v692;
  unsigned int v693;
  int v694;
  int v695;
  int v696;
  unsigned int v697;
  int v698;
  int v699;
  int v700;
  int v701;
  int v702;
  int v703;
  unsigned int v704;
  int v705;
  int v706;
  int v707;
  int v708;
  int v709;
  int v710;
  int v711;
  unsigned int v712;
  unsigned int v713;
  int v714;
  int v715;
  unsigned int v716;
  unsigned int v717;
  unsigned int v718;
  unsigned int v719;
  int v720;
  unsigned int v721;
  int v722;
  int v723;
  unsigned int v724;
  unsigned int v725;
  unsigned int v726;
  unsigned int v727;
  unsigned int v728;
  int v729;
  int v730;
  int v731;
  int v732;
  unsigned int v733;
  int v734;
  unsigned int v735;
  int v736;
  unsigned int v737;
  int v738;
  unsigned int v739;
  char *v740;
  unsigned int v741;
  unsigned int v742;
  int v743;
  int v744;
  int v745;
  unsigned int v746;
  int v747;
  unsigned int v748;
  unsigned int v749;
  int v750;
  unsigned int v751;
  unsigned int v752;
  unsigned int v753;
  unsigned int v754;
  unsigned int v755;
  unsigned int v756;
  unsigned int v757;
  unsigned int v758;
  unsigned int v759;
  unsigned int v760;
  unsigned int v761;
  int v762;
  int v763;
  int v764;
  unsigned int v765;
  int v766;
  unsigned int v767;
  unsigned int v768;
  int v769;
  unsigned int v770;
  unsigned int v771;
  unsigned int v772;
  unsigned int v773;
  int v774;
  int v775;
  unsigned int v776;
  unsigned int v777;
  int v778;
  int v779;
  unsigned int v780;
  unsigned int v781;
  unsigned int v782;
  int v783;
  unsigned int v784;
  int v785;
  unsigned int v786;
  unsigned int v787;
  unsigned int v788;
  int v789;
  unsigned int v790;
  int v791;
  int v792;
  unsigned int v793;
  unsigned int v794;
  int v795;
  int v796;
  int v797;
  unsigned int v798;
  int v799;
  unsigned int v800;
  unsigned int v801;
  unsigned int v802;
  unsigned int v803;
  unsigned int v804;
  unsigned int v805;
  unsigned int v806;
  unsigned int v807;
  int v808;
  unsigned int v809;
  int v810;
  int v811;
  int v812;
  int v813;
  int v814;
  int v815;
  unsigned int v816;
  int v817;
  int v818;
  int v819;
  int v820;
  int v821;
  int v822;
  int v823;
  int v824;
  unsigned int v825;
  int v826;
  unsigned int v827;
  int v828;
  int v829;
  int v830;
  int v831;
  int v832;
  int v833;
  int v834;
  unsigned int v835;
  unsigned int v836;
  int v837;
  int v838;
  int v839;
  int v840;
  int v841;
  int v842;
  int v843;
  unsigned int v844;
  unsigned int v845;
  int v846;
  unsigned int v847;
  unsigned int v848;
  unsigned int v849;
  int v850;
  unsigned int v851;
  int v852;
  unsigned int v853;
  unint64_t v854;
  int v855;
  unsigned int v856;
  int v857;
  int v858;
  unsigned int v859;
  int v860;
  unsigned int v861;
  int v862;
  int v863;
  int v864;
  unsigned int v865;
  unsigned int v866;
  int v867;
  int v868;
  int v869;
  unsigned int v870;
  unsigned int v871;
  int v872;
  int v873;
  unsigned int v874;
  int v875;
  int v876;
  int v877;
  unsigned int v878;
  int v879;
  int v880;
  unsigned int v881;
  unsigned int v882;
  unsigned int v883;
  unsigned int v884;
  unsigned int v885;
  int v886;
  int v887;
  int v888;
  int v889;
  int v890;
  unsigned int v891;
  int v892;
  unsigned int v893;
  int v894;
  unsigned int v895;
  unsigned int v896;
  int v897;
  int v898;
  unsigned int v899;
  int v900;
  unsigned int v901;
  int v902;
  int v903;
  int v904;
  int v905;
  unsigned int v906;
  int v907;
  int v908;
  int v909;
  int v910;
  int v911;
  char v912;
  char v913;
  char v914;
  int v915;
  int v916;
  int v917;
  int v918;
  int v919;

  v14 = ((2 * (v8 + 1574417453)) & 0x37DA9604) + ((v8 + 1574417453) ^ 0x1BED4B02);
  v15 = v14 - 1993651710 - ((2 * v14) & 0x12569404);
  v16 = (v9 ^ v5) + 1539556514;
  LODWORD(STACK[0x670]) = v16;
  LODWORD(STACK[0x648]) = v11 ^ v6;
  v17 = v16 + (v11 ^ v6);
  LODWORD(STACK[0x678]) = v17;
  v18 = v7 ^ 0x892B4A02 ^ v15;
  LODWORD(STACK[0x64C]) = v18;
  v19 = v17 ^ 0x648DB652 ^ (v18 - ((2 * v18) & 0xCA0FE9AE) - 452463401);
  LODWORD(STACK[0x640]) = v19;
  v20 = a5 + LODWORD(STACK[0x48C]);
  LOBYTE(v18) = v20 + 118;
  v21 = v20 - 87935370 - ((2 * v20 + 1009419548) & 0x3959E7D0);
  v22 = *(unsigned __int8 *)(v13
                           + (unsigned __int16)(91 * ((v21 >> 28) ^ 9)
                                              + 29939
                                              - (unsigned __int16)(91 * ((v21 >> 28) ^ 9) + 29939) / 0x3BEu * v10));
  LODWORD(STACK[0x63C]) = LODWORD(STACK[0x494]) - v19;
  v23 = v22 ^ 0x9C;
  v24 = (v15 ^ 0x76D4B5FD)
      + LODWORD(STACK[0x488])
      - ((2 * ((v15 ^ 0x76D4B5FD) + LODWORD(STACK[0x488])) + 375641064) & 0x2E0B12C2)
      - 1573424299;
  v25 = 91 * (HIBYTE(v21) & 0xF ^ 0xC) + 29939;
  v26 = 91 * ((v21 >> 20) & 0xF ^ 0xA) + 29939;
  v27 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v26 - (unsigned __int16)v26 / 0x3BEu * v10));
  v28 = ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v25 - (unsigned __int16)v25 / 0x3BEu * v10)) ^ 0x9C) << 8) ^ (v23 << 12);
  v29 = 91 * ((v11 & 0x149 ^ 8) + (v11 & 0x149 ^ 0x141) + (HIWORD(v21) & 0xF ^ 0xC));
  v30 = *(unsigned __int8 *)(v13 + (v29 - ((4483265 * (unint64_t)v29) >> 32) * v10));
  LODWORD(STACK[0x638]) = v21;
  v31 = v28 | v30 ^ 0x9C;
  v32 = v27 ^ 0x9C;
  v33 = 91 * ((v21 >> 8) & 0xF ^ 3) + 29939;
  v34 = (v31 << 8) ^ (v32 << 12);
  LOWORD(v32) = 91 * ((v21 >> 4) ^ 0xE) + 29939;
  v35 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v32 - (unsigned __int16)v32 / 0x3BEu * v10)) ^ 0x9C;
  v36 = v34 | *(unsigned __int8 *)(v13 + (unsigned __int16)(v33 - (unsigned __int16)v33 / 0x3BEu * v10)) ^ 0x9C;
  v37 = (v36 << 8) + 354313953 - ((v36 << 9) & 0x2A3CCC00);
  v38 = v37 ^ ((*(unsigned __int8 *)(v13
                                   + (unsigned __int16)(91 * ((unsigned __int16)~(_WORD)v21 >> 12)
                                                      + 29939
                                                      - (unsigned __int16)(91 * ((unsigned __int16)~(_WORD)v21 >> 12)
                                                                         + 29939)
                                                      / 0x3BEu
                                                      * v10)) ^ 0x9C) << 12);
  v39 = *(unsigned __int8 *)(v13
                           + (unsigned __int16)(91 * (v18 & 0xF ^ 8)
                                              + 29939
                                              - (unsigned __int16)(91 * (v18 & 0xF ^ 8) + 29939) / 0x3BEu * v10)) ^ 0x9C;
  v40 = 91 * (HIBYTE(v24) & 0xF ^ 7) + 29939;
  v41 = 91 * (HIWORD(v24) & 0xF ^ 5) + 29939;
  v42 = (v38 ^ 0x151E66E1 | v39) ^ (16 * v35);
  v43 = 91 * ((v24 >> 8) & 0xF ^ 9) + 29939;
  v44 = ((((*(unsigned __int8 *)(v13 + (unsigned __int16)(v40 - (unsigned __int16)v40 / 0x3BEu * v10)) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v24 >> 28) ^ 1) + 29939 - (unsigned __int16)(91 * ((v24 >> 28) ^ 1) + 29939) / 0x3BEu * v10)) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(v41 - (unsigned __int16)v41 / 0x3BEu * v10)) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v24 >> 20) & 0xF) + 29939 - (unsigned __int16)(91 * ((v24 >> 20) & 0xF) + 29939) / 0x3BEu * v10)) ^ 0x9C) << 12);
  v45 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v43 - (unsigned __int16)v43 / 0x3BEu * v10)) ^ 0x9C;
  LOWORD(v43) = 91 * ((v24 >> 4) ^ 6) + 29939;
  v46 = v15 & 0x171;
  v47 = ((v44 | v45) << 8) + 1146055885 + (~((v44 | v45) << 9) | 0x776127FF) + 1;
  v48 = v47 ^ ((*(unsigned __int8 *)(v13
                                   + (unsigned __int16)(91 * (((unsigned __int16)v24 >> 12) ^ 8)
                                                      + 29939
                                                      - (unsigned __int16)(91 * (((unsigned __int16)v24 >> 12) ^ 8)
                                                                         + 29939)
                                                      / 0x3BEu
                                                      * v10)) ^ 0x9C) << 12);
  v49 = v39 & 0xF;
  v50 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v43 - (unsigned __int16)v43 / 0x3BEu * v10)) ^ 0x9C;
  v51 = *(unsigned __int8 *)(v13
                           + (unsigned __int16)(91 * (v24 & 0xF ^ 1)
                                              + 29939
                                              - (unsigned __int16)(91 * (v24 & 0xF ^ 1) + 29939) / 0x3BEu * v10)) ^ 0x9C;
  v52 = LOBYTE(STACK[0xD71]);
  v53 = (v48 ^ 0x444F6CCD | v51) ^ (16 * v50);
  v54 = v49 & 0xFFFFFF0F | (16 * (v51 & 0xF));
  LODWORD(STACK[0x660]) = v11;
  v52 ^= 0x9Cu;
  LODWORD(STACK[0x4F8]) = 16 * v52;
  v55 = 16 * v52 - 787728161 - ((32 * v52) & 0x11A0);
  LODWORD(STACK[0x650]) = v55;
  v56 = *(unsigned __int8 *)(v13
                           + (91 * ((v46 ^ 0x171) + v46 + v54)
                                          - ((4483265 * (unint64_t)(91 * ((v46 ^ 0x171) + v46 + v54))) >> 32)
                                          * v10)) ^ 0x9C;
  v57 = 91 * ((v56 - 787728161 - ((2 * v56) & 0xFFFFFFBF)) ^ v55);
  v58 = *(unsigned __int8 *)(v13 + v57 + 63791 - (v57 + 63791) / 0x3BE * v10) >> 4;
  LOWORD(v51) = 91
              * (((v58 ^ 9) - 2 * ((v58 ^ 9) & 0xE ^ v58 & 2) - 100) ^ *(unsigned __int8 *)(v13 + (91 * v54 + 63791 - ((4483265 * (unint64_t)(91 * v54 + 63791)) >> 32) * v10)))
              - 31957;
  v59 = 91 * (v53 & 0xF0 | (v42 >> 4));
  v60 = 91
      * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v59 - 31957 - (unsigned __int16)(v59 - 31957) / 0x3BEu * v10)) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v51 - (unsigned __int16)v51 / 0x3BEu * v10)) ^ 0x9C)) ^ 0x9C);
  v61 = v60 + 33579;
  v62 = (*(unsigned __int8 *)(v13
                            + (v60
                                           + 63791
                                           - ((4483265 * (unint64_t)(v60 + 63791)) >> 32) * v10)) >> 4) ^ 9;
  LOWORD(v62) = (v62 - ((2 * v62) & 0x18) - 100) ^ *(unsigned __int8 *)(v13
                                                                                       + (v59 + 63791 - ((4483265 * (unint64_t)(v59 + 63791)) >> 32) * v10));
  LOWORD(v59) = v62 + 369;
  LOWORD(v58) = ((v53 & 0x70) - 116 + (v53 & 0x70 ^ 0xF3)) & 0x5B & ((14 - v62) | (v62 + 369));
  v63 = *(unsigned __int8 *)(v13 + v57 + 32621 - (v57 + 32621) / 0x3BE * v10) ^ 0x9C;
  v64 = v63 ^ (16
             * (*(unsigned __int8 *)(v13 + (v61 - ((4483265 * (unint64_t)v61) >> 32) * v10)) ^ 0x9C));
  v65 = 91 * ((v53 >> 4) & 0xF0 | (v42 >> 8) & 0xF);
  v66 = 91
      * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v65 - 31957) % (((212 - v65) ^ (v65 + 33579)) & v10)) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v58 * v59 - (unsigned __int16)(v58 * v59) / 0x3BEu * v10)) ^ 0x9C)) ^ 0x9C);
  v67 = *(unsigned __int8 *)(v13
                           + (v66
                                          + 33579
                                          - ((4483265 * (unint64_t)(v66 + 33579)) >> 32) * v10));
  v68 = (*(unsigned __int8 *)(v13
                            + (v66
                                           + 63791
                                           - ((4483265 * (unint64_t)(v66 + 63791)) >> 32) * v10)) >> 4) ^ 9;
  LOWORD(v65) = 91
              * ((v68 - ((2 * v68) & 0x18) - 100) ^ *(unsigned __int8 *)(v13
                                                                                        + (v65 + 63791 - ((4483265 * (unint64_t)(v65 + 63791)) >> 32) * v10)))
              - 31957;
  v69 = 91 * (((v48 >> 8) & 0xF0 | ((unsigned __int16)v38 >> 12)) ^ 0x66);
  v70 = 91
      * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v69 - 31957 - (unsigned __int16)(v69 - 31957) / 0x3BEu * v10)) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v65 - (unsigned __int16)v65 / 0x3BEu * v10)) ^ 0x9C)) ^ 0x9C);
  v71 = *(unsigned __int8 *)(v13
                           + (v70
                                          + 33579
                                          - ((4483265 * (unint64_t)(v70 + 33579)) >> 32) * v10));
  v72 = *(unsigned __int8 *)(v13
                           + (v70
                                          + 63791
                                          - ((4483265 * (unint64_t)(v70 + 63791)) >> 32) * v10)) >> 4;
  LOWORD(v72) = ((v72 ^ 9) - 2 * ((v72 ^ 9) & 0xE ^ v72 & 2) - 100) ^ *(unsigned __int8 *)(v13 + (v69 + 63791 - ((4483265 * (unint64_t)(v69 + 63791)) >> 32) * v10));
  v73 = ((v71 ^ 0x9C) << 12) ^ ((v67 ^ 0x9C) << 8);
  v48 >>= 12;
  v74 = 91 * ((v48 & 0xF0 | HIWORD(v38) & 0xF) ^ 0xFE);
  v75 = 91
      * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v74 - 31957 - (unsigned __int16)(v74 - 31957) / 0x3BEu * v10)) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * v72 - 31957 - (unsigned __int16)(91 * v72 - 31957) / 0x3BEu * v10)) ^ 0x9C)) ^ 0x9C);
  v76 = *(unsigned __int8 *)(v13
                           + (v75
                                          + 33579
                                          - ((4483265 * (unint64_t)(v75 + 33579)) >> 32) * v10));
  v77 = (*(unsigned __int8 *)(v13
                            + (v75
                                           + 63791
                                           - ((4483265 * (unint64_t)(v75 + 63791)) >> 32) * v10)) >> 4) ^ 9;
  LOWORD(v77) = (v77 - ((2 * v77) & 0x18) - 100) ^ *(unsigned __int8 *)(v13
                                                                                       + (v74 + 63791 - ((4483265 * (unint64_t)(v74 + 63791)) >> 32) * v10));
  v78 = 91 * (((v37 >> 20) & 0xF | (16 * ((((v48 & 0x50 ^ 0x50) + (v48 & 0x50)) ^ 0x5F) & ((v47 >> 20) ^ 0x444)))) ^ 1);
  v79 = *(unsigned __int8 *)(v13 + v78 + 63791 - (v78 + 63791) / 0x3BEu * v10);
  v80 = 91
      * (*(unsigned __int8 *)(v13 + v78 + 33579 - (v78 + 33579) / 0x3BEu * v10) ^ (16
                                                                                 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * v77 - 31957 - (unsigned __int16)(91 * v77 - 31957) / 0x3BEu * v10)) ^ 0x9C)) ^ 0x9C);
  v81 = v80 + 33579 - ((4483265 * (unint64_t)(v80 + 33579)) >> 32) * v10;
  v82 = *(unsigned __int8 *)(v13
                           + (v80
                                          + 63791
                                          - ((4483265 * (unint64_t)(v80 + 63791)) >> 32) * v10)) >> 4;
  v83 = 91 * (((v47 >> 20) & 0xF0 | HIBYTE(v37) & 0xF) ^ 0x45);
  v84 = 91
      * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v83 - 31957) % 0x3BEu) ^ (16
                                                                               * (*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (((v82 ^ 9) + ((2 * ((v82 ^ 9 | 0x7C) ^ v82)) ^ 0x15) - 99) ^ v79) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v85 = v84 + 33579 - 958 * ((4483265 * (unint64_t)(v84 + 33579)) >> 32);
  v86 = *(unsigned __int8 *)(v13
                           + (v84
                                          + 63791
                                          - 958 * ((4483265 * (unint64_t)(v84 + 63791)) >> 32))) >> 4;
  v87 = v86 ^ 9;
  v88 = (v86 ^ 9) & 0xE ^ v86 & 2;
  v89 = v73 ^ v64 ^ ((v76 ^ 0x9C) << 16);
  v90 = v89 ^ ((*(unsigned __int8 *)(v13 + v81) ^ 0x9C) << 20);
  v91 = 91
      * (*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((HIBYTE(v47) & 0xF0 | (v37 >> 28)) ^ 0x41) - 31957)
                                  % 0x3BEu) ^ (16
                                             * (*(unsigned __int8 *)(v13
                                                                   + (unsigned __int16)(91
                                                                                      * ((v87 - 2 * v88 - 100) ^ *(unsigned __int8 *)(v13 + (v83 + 63791 - 958 * ((4483265 * (unint64_t)(v83 + 63791)) >> 32))))
                                                                                      - 31957)
                                                                   % 0x3BEu) ^ 0x9C)) ^ 0x9C)
      + 33579;
  v92 = ((*(unsigned __int8 *)(v13 + (v91 - 958 * ((4483265 * (unint64_t)v91) >> 32))) ^ 0xC) << 28) ^ ((*(unsigned __int8 *)(v13 + v85) ^ 0x9C) << 24);
  v93 = v90 ^ 0x4FBFCC7E ^ (v92 + 1337969790 - ((2 * v92) & 0x9FFFFFFF));
  v94 = *(unsigned __int8 *)(v13
                           + (unsigned __int16)(91 * (v49 & 0xFF0F | (16 * (v63 & 0xF)))
                                              - 958
                                              * ((unsigned __int16)((1593683 * (v49 & 0xFFFFFF0F | (16 * (v63 & 0xF)))) >> 16) >> 8)));
  v95 = ((v73 ^ v64) >> 4) & 0xF0 | (v42 >> 8) & 0xF;
  v96 = v94 ^ (16
             * (*(unsigned __int8 *)(v13
                                   + (unsigned __int16)(91 * (v64 & 0xF0 | (v42 >> 4))
                                                      - 958
                                                      * ((unsigned __int16)((1593683
                                                                           * (v64 & 0xF0 | (v42 >> 4))) >> 16) >> 8))) ^ 0x9C)) ^ 0x9C;
  v97 = ((v73 >> 8) & 0xF0 | ((unsigned __int16)v38 >> 12)) ^ 6;
  v98 = v96 ^ ((*(unsigned __int8 *)(v13
                                   + (unsigned __int16)(91 * v95 - 958
                                                                 * ((unsigned __int16)((1593683 * v95) >> 16) >> 8))) ^ 0x9C) << 8);
  v99 = *(unsigned __int8 *)(v13
                           + (unsigned __int16)(91 * v97
                                              - 958 * ((unsigned __int16)((1593683 * v97) >> 16) >> 8))) ^ 0x9C;
  v100 = v98 ^ 0x989EB4AA ^ ((v99 << 12) - 1734429526 - ((v99 << 13) & 0x1D6000));
  v101 = ((v89 >> 12) & 0xF0 | HIWORD(v38) & 0xF) ^ 0xE;
  v102 = (HIWORD(v90) & 0xF0 | (v37 >> 20) & 0xF) ^ 1;
  v103 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(91 * v102
                                                 - 958 * ((unsigned __int16)((1593683 * v102) >> 16) >> 8))) ^ 0x9C) << 20) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * v101 - 958 * ((unsigned __int16)((1593683 * v101) >> 16) >> 8))) ^ 0x9C) << 16) ^ v100;
  v104 = ((v93 >> 20) & 0xF0 | HIBYTE(v37) & 0xF) ^ 5;
  v105 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(91 * v104
                                               - 958 * ((unsigned __int16)((1593683 * v104) >> 16) >> 8))) ^ 0x9C;
  v106 = v103 ^ 0xEC4B3F52 ^ ((v105 << 24) - 330612910 - ((v105 << 25) & 0xD8000000));
  v107 = (HIBYTE(v93) & 0xF0 | (v37 >> 28)) ^ 1;
  v108 = ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (HIBYTE(v106) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v106 ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * v107 - 958 * ((unsigned __int16)((1593683 * v107) >> 16) >> 8))) ^ 0xC) << 28)) >> 28) + 31577) % 0x3BEu) ^ 0x9C) << 12);
  v109 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v103 >> 20) & 0xF) + 31577) % 0x3BEu) ^ 0x9C;
  LOWORD(v103) = (unsigned __int16)(91 * ((unsigned __int16)v100 >> 12) + 31577) % 0x3BEu;
  v110 = ((v108 | *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (BYTE2(v103) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ (v109 << 12);
  v111 = *(unsigned __int8 *)(v13 + (unsigned __int16)v103) ^ 0x9C;
  v112 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v98 >> 8) & 0xF) + 31577) % 0x3BEu) ^ 0x9C;
  v113 = (LODWORD(STACK[0x668]) ^ 0x32312CAE) + 1539556514;
  LODWORD(STACK[0x62C]) = v113;
  v114 = LODWORD(STACK[0x660]) ^ (16
                                * (*(unsigned __int8 *)(v13
                                                      + (91 * (v96 >> 4) + 31577)
                                                      % (((166 - 91 * (v96 >> 4)) | (91 * (v96 >> 4) + 31577)) & 0x3BEu)) ^ 0x9C)) ^ (((v110 | v112) << 8) ^ (v111 << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v94 & 0xF ^ 0xC) + 31577) % 0x3BEu) ^ 0x9C);
  LODWORD(STACK[0x630]) = v114;
  v115 = STACK[0x658];
  v116 = v113 + LODWORD(STACK[0x658]);
  LODWORD(STACK[0x668]) = v116;
  v117 = v116 ^ 0xCC003399;
  LODWORD(STACK[0x628]) = v116 ^ 0xCC003399;
  v118 = LODWORD(STACK[0x63C]) - 1750279272 - ((2 * (LODWORD(STACK[0x63C]) - 1750279272)) & 0xFBD65CF6);
  v119 = v118 + 2112564859;
  v120 = a4 + v115 - ((2 * (a4 + v115)) & 0xD9D3D6D2);
  LODWORD(STACK[0x620]) = a4 ^ v12;
  LOBYTE(v115) = (-124 - v118) & 0x18;
  v121 = v117 ^ ((a4 ^ v12) - ((2 * (a4 ^ v12)) & 0x9B14E238) + 1300918556);
  LODWORD(STACK[0x63C]) = v121;
  v122 = LODWORD(STACK[0x498])
       - 1353564926
       + v121
       - 1619224305
       - ((2 * (LODWORD(STACK[0x498]) - 1353564926 + v121)) & 0x3EF9321E);
  v123 = (v122 ^ 0x9F7C990F) >> (((v115 ^ 0x18) + v115) | 8);
  v124 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v123 >> 4) + 29939) % 0x3BEu);
  v125 = v120 + 1827269481;
  LODWORD(STACK[0x660]) = v120 + 1827269481;
  v126 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v123 & 0xF) + 29939) % 0x3BEu);
  v127 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v122 >> 20) & 0xF ^ 7) + 29939) % 0x3BEu) ^ 0x9C;
  v128 = ((v126 ^ 0x9C) << 8) ^ ((v124 ^ 0x9C) << 12) | *(unsigned __int8 *)(v13
                                                                           + (unsigned __int16)(91
                                                                                              * (BYTE2(v122) & 0xF ^ 0xC)
                                                                                              + 29939)
                                                                           % 0x3BEu) ^ 0x9C;
  v129 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(((((((unsigned __int16)v122 >> 12) ^ 9) + 329) & 0x5B)
                                                + ((22 - (((unsigned __int16)v122 >> 12) ^ 9)) & 0xFFFB))
                                               * ((((unsigned __int16)v122 >> 12) ^ 9) + 329))
                            % 0x3BEu) ^ 0x9C;
  v130 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v122 >> 8) & 0xF ^ 9) + 29939) % 0x3BEu);
  LODWORD(STACK[0x624]) = v122;
  v131 = (v128 << 8) ^ (v127 << 12);
  v132 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v122 >> 4) + 29939) % 0x3BEu) ^ 0x9C;
  v133 = ((v131 | v130 ^ 0x9C) << 8) + 245824736 - (((v131 | v130 ^ 0x9C) << 9) & 0x1D4DF800);
  LODWORD(STACK[0x61C]) = v133;
  v134 = v133 ^ (v129 << 12);
  v135 = *(unsigned __int8 *)(v13
                            + (388068033 - (v114 & 0x17217266 ^ 0x16213224 | v114 & 0x17217266 ^ 0x1004042))
                            * (((-17 - (_BYTE)v122) & 0xFu) + 329)
                            % 0x3BE) ^ 0x9C;
  v136 = v135 - 2077598423 - ((2 * v135) & 0x52);
  v137 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v119 >> 28) ^ 7) + 29939) % 0x3BEu) ^ 0x9C;
  v138 = 16 * v137 + 735524077 - ((32 * v137) & 0x9C0);
  v139 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (HIBYTE(v119) & 0xF ^ 0xD) + 29939) % 0x3BEu) ^ 0x9C;
  v140 = (v139 + 735524077 - ((2 * v139) & 0x1DA)) ^ v138;
  v141 = (v134 ^ 0xEA6FCE0 | v136 ^ 0x842A5D29) ^ (16 * v132);
  v142 = ((v119 >> 11) & 0x12) + (((unsigned __int16)v119 >> 12) ^ 0x14B);
  v143 = (((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (BYTE2(v119) & 0xF ^ 0xB) + 29939) % 0x3BEu) ^ 0x9C) << 8) | (v140 << 16)) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v119 >> 20) & 0xF ^ 0xE) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (91 * ((v119 >> 8) & 0xF ^ 0xE) + 29939) % (v138 & 0x3B0 ^ 0x31E | v138 & 0x3B0 ^ 0xA0u)) ^ 0x9C;
  v144 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v119 >> 4) ^ 7) + 29939) % 0x3BEu) ^ 0x9C;
  v145 = ((_BYTE)v135 + 41 - ((2 * (_BYTE)v135) & 0x52)) & 0xF ^ 9;
  v146 = (v143 << 8) + 615450395 - ((v143 << 9) & 0x495E0E00);
  v147 = v146 ^ ((*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(91 * v142
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v142) >> 16) >> 8))) ^ 0x9C) << 12);
  v148 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v119 & 0xF ^ 0xB) + 29939) % 0x3BEu) ^ 0x9C;
  v149 = (v147 ^ 0x24AF071B | v148) ^ (16 * v144);
  v150 = 91 * (v145 & 0xFFFFFF0F | (16 * (v148 & 0xF)));
  v151 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v150 - 31957) % 0x3BEu) ^ 0x9C;
  v152 = 91 * ((v151 - 787728161 - ((2 * v151) & 0xFFFFFFBF)) ^ LODWORD(STACK[0x650]));
  v153 = *(unsigned __int8 *)(v13 + (v152 + 63791) % 0x3BE) >> 4;
  v154 = ((v153 ^ 9) + ~(2 * ((v153 ^ 9) & 0xE ^ v153 & 2)) - 99) ^ *(unsigned __int8 *)(v13 + (v150 + 63791 - 958 * ((4483265 * (unint64_t)(v150 + 63791)) >> 32)));
  v155 = ((v125 & 0xADD6C98 ^ 0x2140490 | v125 & 0xADD6C98 ^ 0x8C96808)
        - 1323724880
        + ((((v154 + 369) & 0x213) + ((33554062 - v154) & 0x1E1D213)) ^ 0x45E8D600))
       * (v154 + 369);
  v156 = v155 % 0x3BE - 93528507 - ((2 * (v155 % 0x3BE)) & 0x48A);
  v157 = v141 >> (100 * (v156 & 0xE9 ^ 0x41 | v156 & 0xE9 ^ 0xA8));
  v158 = v157 - ((2 * v157) & 0x19DD985A) - 1930507219;
  v159 = ((v149 & 0xF0 | v158 & 0xF) ^ 0xD) + 1245587057 - ((2 * ((v149 & 0xF0 | v158 & 0xF) ^ 0xD)) & 0xE2);
  v160 = 91 * (v159 ^ 0x4A3E2671);
  v161 = 91
       * (*(unsigned __int8 *)(v13 + (v160 + 33579) % 0x3BEu) ^ (16
                                                               * (*(unsigned __int8 *)(v13 + (v156 ^ 0xFA6CDE45)) ^ 0x9C)) ^ 0x9C);
  v162 = LODWORD(STACK[0x648]) + v7;
  LODWORD(STACK[0x634]) = v162;
  v163 = LODWORD(STACK[0x64C]) + LODWORD(STACK[0x670]);
  v164 = STACK[0x678];
  LODWORD(STACK[0x670]) = LODWORD(STACK[0x640]) + (LODWORD(STACK[0x678]) ^ 0x818A4285);
  LODWORD(STACK[0x64C]) = v162 ^ 0xC80181EC ^ v163;
  v165 = (v152 + 33579) % 0x3BE;
  v166 = v161 + 33579 - 958 * ((4483265 * (unint64_t)(v161 + 33579)) >> 32);
  v167 = (*(unsigned __int8 *)(v13 + (v161 + 63791) % (-1499399534 * (v159 & 0xE7 ^ 0x27304D86 | v159 & 0xE7 ^ 0x61u))) >> 4) ^ 9;
  v168 = 91 * (((v149 >> 4) & 0xF0 | (v158 >> 4)) ^ 2);
  v169 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v168 - 31957) % 0x3BEu) ^ (16
                                                                                * (*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v167 - ((2 * v167) & 0x18) - 100) ^ *(unsigned __int8 *)(v13 + (v160 + 63791) % 0x3BEu)) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C;
  v170 = v136 & 2;
  v171 = *(unsigned __int8 *)(v13
                            + (v168
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v168 + 63791)) >> 32)));
  v169 *= 91;
  v172 = *(unsigned __int8 *)(v13 + (v169 + 33579) % (v170 + 341276780 + (v170 ^ 0xEBA88B52))) ^ 0x9C;
  v173 = v171 ^ (*(unsigned __int8 *)(v13
                                    + (v169
                                                   + 63791
                                                   - 958
                                                   * ((4483265 * (unint64_t)(v169 + 63791)) >> 32))) >> 4);
  v174 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v173 ^ 0x95) - 31957) % 0x3BEu);
  v175 = ((v147 >> 8) & 0xF0 | (v158 >> 8) & 0xF) ^ 0xC;
  v176 = (v175 + 369) * (v173 & 0x52 ^ 0x4B | v173 & 0x52 ^ 0x10);
  v177 = 91
       * (*(unsigned __int8 *)(v13 + (v176 - 958 * ((4483265 * (unint64_t)v176) >> 32))) ^ (16 * (v174 ^ 0x9C)) ^ 0x9C);
  v178 = v177 + 33579 - 958 * ((4483265 * (unint64_t)(v177 + 33579)) >> 32);
  v179 = (*(unsigned __int8 *)(v13
                             + (v177
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v177 + 63791)) >> 32))) >> 4) ^ 9;
  v180 = 91
       * ((v147 >> 12) & 0xF0 ^ (((v158 >> 12) ^ 0xFFF7311C) + ((v158 >> 12) & 0xFFFF0 ^ LODWORD(STACK[0x3A0])) + 1) ^ 0xF0);
  v181 = *(unsigned __int8 *)(v13 + (v180 + 33579) % 0x3BE) ^ (16
                                                             * (*(unsigned __int8 *)(v13
                                                                                   + (unsigned __int16)(91 * ((v179 + (~(2 * v179) | 0xE7) - 99) ^ *(unsigned __int8 *)(v13 + (91 * v175 + 63791 - 958 * ((4483265 * (unint64_t)(91 * v175 + 63791)) >> 32)))) - 31957)
                                                                                   % 0x3BEu) ^ 0x9C)) ^ 0x9C;
  v182 = ((*(unsigned __int8 *)(v13 + v178) ^ 0x9C) << 12) ^ (v172 << 8);
  v183 = *(unsigned __int8 *)(v13
                            + (91 * v181
                                           + 63791
                                           - 958
                                           * ((4483265 * (unint64_t)(91 * v181 + 63791)) >> 32)));
  v184 = 91 * v181 + 33579 - 958 * ((4483265 * (unint64_t)(91 * v181 + 33579)) >> 32);
  v185 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(91
                                               * ((((v183 >> 4) ^ 9)
                                                                  - ((2 * ((v183 >> 4) ^ 9)) & 0x18)
                                                                  - 100) ^ *(unsigned __int8 *)(v13
                                                                                              + (v180 + 63791) % 0x3BE))
                                               - 31957)
                            % 0x3BEu) ^ 0x9C;
  v186 = 91 * ((HIWORD(v146) & 0xF0 | HIWORD(v158) & 0xF) ^ 0xAE);
  LOWORD(v183) = *(unsigned __int8 *)(v13
                                    + (v186
                                                   + 63791
                                                   - 958
                                                   * ((4483265 * (unint64_t)(v186 + 63791)) >> 32)));
  v187 = 91 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v186 - 31957) % 0x3BEu) ^ (16 * v185) ^ 0x9C);
  v188 = v187 + 33579;
  v189 = (*(unsigned __int8 *)(v13
                             + (v187
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v187 + 63791)) >> 32))) >> 4) ^ 9;
  v190 = 91 * (((v146 >> 20) & 0xF0 | (v158 >> 20) & 0xF) ^ 0x4E);
  v191 = 91
       * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v190 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v189 - ((2 * v189) & 0x18) - 100) ^ (unsigned __int16)v183) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v192 = v191 + 33579 - 958 * ((4483265 * (unint64_t)(v191 + 33579)) >> 32);
  v193 = (*(unsigned __int8 *)(v13
                             + (v191
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v191 + 63791)) >> 32))) >> 4) ^ 9;
  LOBYTE(v161) = v193 - ((2 * v193) & 0x18);
  LOBYTE(v193) = *(_BYTE *)(v13
                          + (v190
                                         + 63791
                                         - 958 * ((4483265 * (unint64_t)(v190 + 63791)) >> 32)));
  v194 = 91 * ((v161 - 100) ^ v193) - 31957;
  v195 = *(unsigned __int8 *)(v13 + v165) ^ 0x9C;
  v196 = v195 ^ (16 * (*(unsigned __int8 *)(v13 + v166) ^ 0x9C));
  LOWORD(v146) = (unsigned __int16)(91 * ((HIBYTE(v146) & 0xF0 | HIBYTE(v158) & 0xF) ^ 0x2C) - 31957) % 0x3BEu;
  v197 = v182 ^ v196 ^ ((*(unsigned __int8 *)(v13 + v184) ^ 0x9C) << 16);
  v198 = v197 ^ ((*(unsigned __int8 *)(v13 + (v188 - 958 * ((4483265 * (unint64_t)v188) >> 32))) ^ 0x9C) << 20);
  v199 = *(unsigned __int8 *)(v13 + v192) ^ 0x9C;
  v200 = 91
       * (*(unsigned __int8 *)(v13 + (unsigned __int16)v146) ^ (16 * (*(unsigned __int8 *)(v13 + v194 % 0x3BEu) ^ 0x9C)) ^ 0x9C)
       + 33579;
  v201 = v198 ^ 0x85104052 ^ (-2062532526
                            - ((v199 << 25) & 0xA000000)
                            + (((*(unsigned __int8 *)(v13
                                                    + (v200
                                                                   - 958 * ((4483265 * (unint64_t)v200) >> 32))) ^ 0xC) << 28) ^ (v199 << 24)));
  v202 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(91 * (v145 & 0xFF0F | (16 * (v195 & 0xF)))
                                               - 958
                                               * ((unsigned __int16)((1593683 * (v145 & 0xFFFFFF0F | (16 * (v195 & 0xF)))) >> 16) >> 8)));
  v203 = ((v182 ^ v196) >> 4) & 0xF0 | (v141 >> 8) & 0xF;
  v204 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(91 * v203 - 958 * ((unsigned __int16)((1593683 * v203) >> 16) >> 8)));
  v205 = v202 ^ (16
               * (*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(91 * (v196 & 0xF0 | (v141 >> 4))
                                                        - 958
                                                        * ((unsigned __int16)((1593683
                                                                             * (v196 & 0xF0 | (v141 >> 4))) >> 16) >> 8))) ^ 0x9C)) ^ 0x9C;
  v206 = v204 ^ 0x9C;
  v207 = (v204 & 0xF ^ 3 | v204 & 0xF ^ 0xC) & ~(v134 >> 12) | (v182 >> 8) & 0xF0;
  v208 = (v197 >> 12) & 0xF0 | HIWORD(v134) & 0xF;
  v209 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(91 * v207
                                                 - 958 * ((unsigned __int16)((1593683 * v207) >> 16) >> 8))) ^ 0x9C) << 12) ^ (v206 << 8);
  v210 = HIWORD(v198) & 0xF0 | (LODWORD(STACK[0x61C]) >> 20) & 0xF;
  v211 = v193 & 0xF;
  v212 = v209 ^ v205 ^ ((*(unsigned __int8 *)(v13
                                            + (unsigned __int16)(91 * (v208 ^ 6)
                                                               - 958
                                                               * ((unsigned __int16)((1593683 * (v208 ^ 6u)) >> 16) >> 8))) ^ 0x9C) << 16);
  v213 = (v201 >> 20) & 0xF0 ^ ((v211 ^ 0xC) + (v211 ^ 3)) & (HIBYTE(LODWORD(STACK[0x61C])) ^ 0xE);
  v214 = v212 ^ ((*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(91 * (v210 ^ 0xA)
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * (v210 ^ 0xAu)) >> 16) >> 8))) ^ 0x9C) << 20);
  v215 = HIBYTE(v201) & 0xF0 | (LODWORD(STACK[0x61C]) >> 28);
  v216 = v214 ^ ((*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(91 * v213
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v213) >> 16) >> 8))) ^ 0x9C) << 24);
  v217 = (v216 ^ ((*(unsigned __int8 *)(v13
                                      + (unsigned __int16)(91 * v215
                                                         - 958
                                                         * ((unsigned __int16)((1593683 * v215) >> 16) >> 8))) ^ 0xCu) << 28)) >> 28;
  v218 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (HIBYTE(v216) & 0xF) + 31577) % 0x3BEu);
  v219 = LODWORD(STACK[0x62C]) + LODWORD(STACK[0x620]);
  v220 = ((v209 ^ v205) >> 8) - (((v209 ^ v205) >> 7) & 0x1A4E) - 394760921;
  v221 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((unsigned __int16)v209 >> 12) + 31577) % 0x3BEu) ^ 0x9C;
  v222 = ((((v218 ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13
                                                       + (unsigned __int16)(((v217 + 347) & 0x5B | (4 - v217) & 0x1B)
                                                                          * (v217 + 347))
                                                       % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (BYTE2(v212) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v214 >> 20) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v220 & 0xF ^ 7 | v220 & 0xF ^ 8) & (v220 ^ 7)) + 31577) % 0x3BEu) ^ 0x9C;
  v223 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v202 & 0xF ^ 0xC) + 31577) % 0x3BEu) ^ 0x9C;
  v224 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v205 >> 4) + 31577) % 0x3BEu) ^ 0x9C;
  v225 = STACK[0x668];
  v226 = (LODWORD(STACK[0x668]) ^ 0x818A4285) + 410790323 + LODWORD(STACK[0x63C]);
  v227 = ((2 * v226) & 0xFF9E7FBE) + (v226 ^ 0xFFCF3FDF);
  LODWORD(STACK[0x63C]) = v227;
  v228 = LODWORD(STACK[0x490])
       - LODWORD(STACK[0x670])
       - ((2 * (LODWORD(STACK[0x490]) - LODWORD(STACK[0x670])) + 1132362094) & 0x4D5FFBF2)
       + 1215249072;
  v229 = v227 + LODWORD(STACK[0x49C]) - ((2 * (v227 + LODWORD(STACK[0x49C])) - 1382950310) & 0xF587BDC2) + 1368181774;
  LODWORD(STACK[0x620]) = v229;
  v230 = v164 ^ (16 * v224) ^ (v223 | (v221 << 12)) ^ (v222 << 8);
  LODWORD(STACK[0x62C]) = v230;
  v231 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v229 >> 28) ^ 7) + 29939) % 0x3BEu) ^ 0x9C;
  v232 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (HIBYTE(v229) & 0xF ^ 0xA) + 29939) % 0x3BEu) ^ 0x9C;
  LODWORD(STACK[0x648]) = LODWORD(STACK[0x660]) ^ 0xA4E86A85 ^ v219;
  v233 = ((v229 >> 19) & 0x12 ^ 0x10) + ((v229 >> 20) & 0xF ^ 0x145);
  v234 = (((v232 << 8) ^ (v231 << 12) | *(unsigned __int8 *)(v13
                                                           + (unsigned __int16)(91 * (BYTE2(v229) & 0xF ^ 3) + 29939)
                                                           % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * v233 - 958 * ((unsigned __int16)((1593683 * v233) >> 16) >> 8))) ^ 0x9C) << 12);
  v235 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v229 >> 8) & 0xF ^ 0xE) + 29939) % 0x3BEu) ^ 0x9C;
  v236 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v229 & 0xF ^ 1) + 29939) % 0x3BEu) ^ 0x9C;
  v237 = ((v234 | v235) << 8) + 1720390982 - (((v234 | v235) << 9) & 0xCD162A00);
  v238 = v237 ^ ((*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(91 * (((unsigned __int16)(v229 & 0xF000) >> 12) ^ 0xD) + 29939)
                                     % 0x3BEu) ^ 0x9C) << 12);
  v239 = (v238 ^ 0x668B1546 | v236) ^ (16
                                     * (*(unsigned __int8 *)(v13
                                                           + (unsigned __int16)(91
                                                                              * ((v229 >> 4) ^ 0xE)
                                                                              + 29939)
                                                           % 0x3BEu) ^ 0x9C));
  v240 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (~HIWORD(v228) & 0xF) + 29939) % 0x3BEu) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v228 >> 20) & 0xF ^ 0xA) + 29939) % 0x3BEu) ^ 0x9C)) ^ 0x9C ^ ((unint64_t)(*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (HIBYTE(v228) & 0xF ^ 6) + 29939) % 0x3BEu) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v228 >> 28) ^ 0xA) + 29939) % 0x3BEu) ^ 0x9C)) ^ 0x9Cu) << (-59 * ((v230 & 0x68 ^ 0x68) + (v230 & 0x68u))));
  v241 = (v240 << 16) + 957046309 - ((v240 << 17) & 0x72160000);
  v242 = ((v241 ^ 0x390B5E25)
        + ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v228 >> 8) & 0xF ^ 0xD) + 29939) % 0x3BEu) ^ 0x9C) << 8)) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((unsigned __int16)~(_WORD)v228 >> 12) + 29939) % 0x3BEu) ^ 0x9C) << 12);
  v243 = (~(v228 >> 3) & 0x12) + ((v228 >> 4) ^ 0x146);
  v244 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v228 & 0xF ^ 9) + 29939) % 0x3BEu) ^ 0x9C;
  v245 = v236 & 0xF;
  v246 = (v242 | v244) ^ (16
                        * (*(unsigned __int8 *)(v13
                                              + (unsigned __int16)(91 * v243
                                                                 - 958
                                                                 * ((unsigned __int16)((1593683 * v243) >> 16) >> 8))) ^ 0x9C));
  v247 = 91 * (v245 & 0xFFFFFF0F | (16 * (v244 & 0xF)));
  v248 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v247 - 31957) % 0x3BEu) ^ 0x9C;
  v249 = STACK[0x650];
  v250 = 91 * ((v248 - 787728161 - ((2 * v248) & 0xFFFFFFBF)) ^ LODWORD(STACK[0x650]));
  LOWORD(v213) = *(unsigned __int8 *)(v13
                                    + (v247
                                                   + 63791
                                                   - 958 * ((4483265 * (unint64_t)(v247 + 63791)) >> 32)));
  v251 = *(unsigned __int8 *)(v13 + (v250 + 33579) % 0x3BE);
  v252 = *(unsigned __int8 *)(v13 + (v250 + 63791) % 0x3BE) >> 4;
  v253 = 91 * (v246 & 0xF0 | (v239 >> 4));
  v254 = 91
       * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v253 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (((v252 ^ 9) + ((2 * ((v252 ^ 9 | 0x7C) ^ v252)) ^ 0x15) - 99) ^ (unsigned __int16)v213) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v255 = v254 + 33579 - 958 * ((4483265 * (unint64_t)(v254 + 33579)) >> 32);
  v256 = (*(unsigned __int8 *)(v13
                             + (v254
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v254 + 63791)) >> 32))) >> 4) ^ 9;
  LOWORD(v256) = (unsigned __int16)(91
                                  * ((v256 - ((2 * v256) & 0x18) - 100) ^ *(unsigned __int8 *)(v13 + (v253 + 63791 - 958 * ((4483265 * (unint64_t)(v253 + 63791)) >> 32))))
                                  - 31957)
               % 0x3BEu;
  v257 = *(unsigned __int8 *)(v13 + v255) ^ 0x9C;
  v258 = 91 * ((v246 >> 4) & 0xF0 | (v239 >> 8) & 0xF);
  v259 = v258 + 63791;
  v260 = v251 ^ (16 * v257);
  v261 = 91
       * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v258 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v13 + (unsigned __int16)v256) ^ 0x9C)) ^ 0x9C);
  v262 = v261 + 33579 - 958 * ((4483265 * (unint64_t)(v261 + 33579)) >> 32);
  v263 = (*(unsigned __int8 *)(v13
                             + (v261
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v261 + 63791)) >> 32))) >> 4) ^ 9;
  LOWORD(v263) = (v263 - ((2 * v263) & 0x18) - 100) ^ *(unsigned __int8 *)(v13
                                                                                          + (v259 - 958 * ((4483265 * (unint64_t)v259) >> 32)));
  LODWORD(STACK[0x61C]) = v238;
  v264 = ((v242 >> 8) & 0xF0 | ((unsigned __int16)v238 >> 12)) ^ 1;
  v265 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * v264 - 31957) % 0x3BEu);
  v260 ^= 0x9Cu;
  v266 = v260 ^ ((*(unsigned __int8 *)(v13 + v262) ^ 0x9C) << 8);
  v267 = 91
       * ((((v266 & 0x2BD ^ 0x2BD) + (v266 & 0x2BD)) ^ (((v265 ^ 0xC6) + (v265 & 0xA5 ^ 0x7B) + 1) | v265 & 0x5A ^ 0x18) ^ 0x5A)
        + v264);
  v268 = 91 * (v265 ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * v263 - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v269 = *(unsigned __int8 *)(v13
                            + (v268
                                           + 33579
                                           - 958 * ((4483265 * (unint64_t)(v268 + 33579)) >> 32)));
  v270 = (*(unsigned __int8 *)(v13
                             + (v268
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v268 + 63791)) >> 32))) >> 4) ^ 9;
  v271 = 91 * (((v242 >> 12) & 0xF0 | HIWORD(v238) & 0xF) ^ 0xB);
  v272 = 91
       * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v271 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v270 - ((2 * v270) & 0x18) - 100) ^ *(unsigned __int8 *)(v13 + v267 % 0x3BE)) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v273 = v272 + 33579;
  v274 = *(unsigned __int8 *)(v13
                            + (v272
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v272 + 63791)) >> 32))) >> 4;
  LOWORD(v271) = ((v274 ^ 9) - 2 * ((v274 ^ 9) & 0xE ^ v274 & 2) - 100) ^ *(unsigned __int8 *)(v13 + (v271 + 63791 - 958 * ((4483265 * (unint64_t)(v271 + 63791)) >> 32)));
  v275 = ((*(unsigned __int8 *)(v13 + (v273 - 958 * ((4483265 * (unint64_t)v273) >> 32))) ^ 0x9C) << 16) ^ ((v269 ^ 0x9C) << 12);
  LODWORD(STACK[0x60C]) = v275;
  v276 = 91 * ((v240 & 0xF0 | (v237 >> 20) & 0xF) ^ 8);
  v277 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v276 - 31957) % 0x3BEu) ^ (16
                                                                                * (*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * v271 - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C;
  v278 = (*(unsigned __int8 *)(v13
                             + (91 * v277
                                            + 63791
                                            - 958
                                            * ((4483265 * (unint64_t)(91 * v277 + 63791)) >> 32))) >> 4) ^ 9;
  v279 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(91
                                               * ((v278 - ((2 * v278) & 0x18) - 100) ^ *(unsigned __int8 *)(v13 + (v276 + 63791 - 958 * ((4483265 * (unint64_t)(v276 + 63791)) >> 32))))
                                               - 31957)
                            % 0x3BEu);
  LODWORD(STACK[0x5FC]) = v237;
  v280 = 91 * (((v241 >> 20) & 0xF0 | HIBYTE(v237) & 0xF) ^ 0x96);
  v281 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v280 - 31957) % 0x3BEu);
  LOBYTE(v280) = *(_BYTE *)(v13
                          + (v280
                                         + 63791
                                         - 958 * ((4483265 * (unint64_t)(v280 + 63791)) >> 32)));
  v282 = v281 ^ (16 * (v279 ^ 0x9C)) ^ 0x9C;
  v283 = (v280 & 0x5B ^ 0x43 | v280 & 0x5B ^ 0x18) * (v282 + 369);
  v284 = (*(unsigned __int8 *)(v13
                             + (91 * v282
                                            + 63791
                                            - 958
                                            * ((4483265 * (unint64_t)(91 * v282 + 63791)) >> 32))) >> 4) ^ 9;
  v285 = LODWORD(STACK[0x648]) + (v225 ^ 0x638EA096);
  v286 = v275 ^ ((*(unsigned __int8 *)(v13
                                     + (91 * v277
                                                    + 33579
                                                    - 958
                                                    * ((4483265 * (unint64_t)(91 * v277 + 33579)) >> 32))) ^ 0x9C) << 20);
  LODWORD(STACK[0x5EC]) = v286;
  v287 = *(unsigned __int8 *)(v13 + (v283 - 958 * ((4483265 * (unint64_t)v283) >> 32)));
  LODWORD(STACK[0x610]) = v287;
  v288 = 91
       * (*(unsigned __int8 *)(v13
                             + (unsigned __int16)(91 * ((HIBYTE(v241) & 0xF0 | (v237 >> 28)) ^ 0x36) - 31957) % 0x3BEu) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v284 - ((2 * v284) & 0x18) - 100) ^ v280) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C)
       + 33579;
  v289 = ((*(unsigned __int8 *)(v13 + (v288 - 958 * ((4483265 * (unint64_t)v288) >> 32))) ^ 0xC) << 28) ^ ((v287 ^ 0x9C) << 24);
  LODWORD(STACK[0x5F4]) = v289;
  v290 = v289 ^ v286;
  LODWORD(STACK[0x5F0]) = v290;
  LODWORD(STACK[0x5E8]) = v290 ^ v266;
  v291 = ((v290 ^ v266) >> 4) & 0xF0 | (v239 >> 8) & 0xF;
  v292 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(91 * (v245 & 0xFF0F | (16 * ((v290 ^ v266) & 0xF)))
                                               - 958
                                               * ((unsigned __int16)((1593683
                                                                    * (v245 & 0xFFFFFF0F | (16 * ((v290 ^ v266) & 0xF)))) >> 16) >> 8))) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v260 & 0xF0 | (v239 >> 4)) - 958 * ((unsigned __int16)((1593683 * (v260 & 0xF0 | (v239 >> 4))) >> 16) >> 8))) ^ 0x9C));
  LODWORD(STACK[0x5F8]) = v292;
  v293 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(91 * v291 - 958 * ((unsigned __int16)((1593683 * v291) >> 16) >> 8))) ^ 0x9C;
  v294 = v292 ^ 0x5709A748 ^ ((v293 << 8) + 1460250440 - ((v293 << 9) & 0x14E00) + 140);
  LODWORD(STACK[0x5D4]) = v294;
  v295 = STACK[0x63C];
  v296 = v285 + 3194913 + 2 * LODWORD(STACK[0x63C]);
  LODWORD(STACK[0x640]) = v296;
  v297 = v285 + (v225 ^ 0x638EA096) - v296;
  LODWORD(STACK[0x5B0]) = v295 - v297;
  v298 = v295 - v297 + 1368438199;
  LODWORD(STACK[0x5BC]) = v298;
  v299 = v298 + LODWORD(STACK[0x4A8]) - ((2 * (v298 + LODWORD(STACK[0x4A8])) + 389006318) & 0x792F3882) - 936411592;
  v300 = LODWORD(STACK[0x678]) ^ 0x638EA096;
  v301 = LODWORD(STACK[0x64C]) + v300;
  v302 = v301 + v300;
  v303 = STACK[0x670];
  v304 = v301 + 410790323 + 2 * LODWORD(STACK[0x670]);
  LODWORD(STACK[0x648]) = v304;
  v305 = v302 - v304;
  LODWORD(STACK[0x5C8]) = v305;
  v306 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v299 >> 28) ^ 3) + 29939) % 0x3BEu);
  v307 = v303 - v305;
  LODWORD(STACK[0x64C]) = v307;
  v308 = LODWORD(STACK[0x480]) - v307 - 1116413410 - ((2 * (LODWORD(STACK[0x480]) - v307 - 1116413410)) & 0x6FFC9116);
  v309 = ((((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (HIBYTE(v299) & 0xF ^ 0xC) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((v306 ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (BYTE2(v299) & 0xF ^ 7) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v299 >> 20) & 0xF ^ 9) + 29939) % 0x3BEu) ^ 0x9C) << 12);
  LODWORD(STACK[0x5C0]) = v297;
  LODWORD(STACK[0x5E4]) = v299;
  v310 = v309 | *(unsigned __int8 *)(v13
                                   + (unsigned __int16)((((v299 >> 8) & 0xF ^ 0xC) + 329)
                                                      * (((((_BYTE)v297 + 18) & 0x18) + ((13 - (_BYTE)v297) & 0x18)) | 0x43))
                                   % 0x3BEu) ^ 0x9C;
  v311 = (v310 << 8) + 1721790573 - ((v310 << 9) & 0xCD40E000);
  v308 += 939411595;
  v312 = v311 ^ ((*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(((v299 >> 12) & 0xB ^ 0x52 | (v299 >> 12) & 0xB ^ 9)
                                                        * ((((unsigned __int16)v299 >> 12) ^ 9) + 329))
                                     % 0x3BEu) ^ 0x9C) << 12);
  v313 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v299 & 0xF ^ 1) + 29939) % 0x3BEu) ^ 0x9C;
  v314 = (v312 ^ 0x66A0706D | v313) ^ (16
                                     * (*(unsigned __int8 *)(v13
                                                           + (unsigned __int16)(91 * ((v299 >> 4) ^ 4)
                                                                              + 29939)
                                                           % 0x3BEu) ^ 0x9C));
  v315 = ((((((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (HIBYTE(v308) & 0xF ^ 7) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v308 >> 28) ^ 3) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (BYTE2(v308) & 0xF ^ 0xE) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (~(v308 >> 20) & 0xF) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v308 >> 8) & 0xF ^ 8) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (((unsigned __int16)v308 >> 12) ^ 4) + 29939) % 0x3BEu) ^ 0x9C) << 12);
  v316 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v308 & 0xF ^ 0xB) + 29939) % 0x3BEu) ^ 0x9C;
  v317 = (v315 | v316) ^ (16
                        * (*(unsigned __int8 *)(v13
                                              + (unsigned __int16)(91 * ((v308 >> 4) ^ 8) + 29939)
                                              % 0x3BEu) ^ 0x9C));
  v318 = v313 & 0xF;
  v319 = 91 * (v318 | (16 * (v316 & 0xF)));
  v320 = v319 + 63791 - 958 * ((4483265 * (unint64_t)(v319 + 63791)) >> 32);
  v321 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v319 - 31957) % 0x3BEu) ^ 0x9C;
  v322 = 91 * ((v321 - 787728161 - ((2 * v321) & 0xFFFFFFBF)) ^ v249);
  v323 = (v322 + 63791) % 0x3BE - 1447497568 - ((2 * ((v322 + 63791) % 0x3BE)) & 0x140);
  v324 = (v323 & 0x3A1 ^ 0x3FED4701) + (v323 & 0x3A1 ^ 0xA0);
  v325 = *(unsigned __int8 *)(v13 + (v323 ^ 0xA9B8F0A0)) >> 4;
  v326 = (v324 ^ 0x3FED46D0)
       + (((v325 ^ 9) + ((2 * ((v325 ^ 9 | 0x7C) ^ v325)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(v13 + v320));
  v327 = ((2 * (v317 & 0xF0 | (v314 >> 4))) & 0xFF3F)
       + ((v317 & 0xF0 | (v314 >> 4)) ^ 0xC2DF7F9F);
  v328 = *(unsigned __int8 *)(v13 + 91 * v326 % 0x3BEu);
  v329 = *(unsigned __int8 *)(v13 + (((45 - v327) | (v327 + 1025540562)) & 0x5B) * (v327 + 1025540562) % 0x3BE);
  LODWORD(STACK[0x5D8]) = (91 * ((v294 >> 8) & 0xF) + 31577)
                        % (((166 - 91 * ((v294 >> 8) & 0xF)) | (91 * ((v294 >> 8) & 0xF) + 31577)) & 0x3BE);
  v330 = 91 * (v329 ^ (16 * (v328 ^ 0x9C)) ^ 0x9C);
  v331 = (*(unsigned __int8 *)(v13
                             + (v330
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v330 + 63791)) >> 32))) >> 4) ^ 9;
  v332 = 91
       * ((v331 - ((2 * v331) & 0x18) - 100) ^ *(unsigned __int8 *)(v13
                                                                                   + (91 * v327 - 1165059158) % 0x3BE));
  v333 = 91 * ((v317 >> 4) & 0xF0 | (v314 >> 8) & 0xF);
  v334 = (*(unsigned __int8 *)(v13 + (v322 + 33579) % 0x3BE) | 0x1B21FC00) ^ (16
                                                                            * (*(unsigned __int8 *)(v13
                                                                                                  + (v330 + 33579 - 958 * ((4483265 * (unint64_t)(v330 + 33579)) >> 32))) ^ 0x9C));
  v335 = 91
       * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v333 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v332 - 31957) % (((v332 + 33579) ^ (212 - v332)) & 0x3BEu)) ^ 0x9C)) ^ 0x9C);
  v336 = *(unsigned __int8 *)(v13
                            + (v335
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v335 + 63791)) >> 32))) >> 4;
  LOWORD(v333) = (unsigned __int16)(91
                                  * (((v336 ^ 9) + ((2 * ((v336 ^ 9 | 0x7C) ^ v336)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(v13 + (v333 + 63791 - 958 * ((4483265 * (unint64_t)(v333 + 63791)) >> 32))))
                                  - 31957)
               % 0x3BEu;
  v337 = 91 * (((v315 >> 8) & 0xF0 | ((unsigned __int16)v312 >> 12)) ^ 7);
  v338 = 91
       * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v337 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v13 + (unsigned __int16)v333) ^ 0x9C)) ^ 0x9C);
  v339 = (*(unsigned __int8 *)(v13
                             + (v338
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v338 + 63791)) >> 32))) >> 4) ^ 9;
  v340 = (unsigned __int16)(91
                          * ((v339 - ((2 * v339) & 0x18) - 100) ^ *(unsigned __int8 *)(v13 + (v337 + 63791 - 958 * ((4483265 * (unint64_t)(v337 + 63791)) >> 32))))
                          - 31957)
       % 0x3BEu;
  v341 = (unsigned __int16)v340 - 4144191 - ((2 * v340) & 0x782);
  v342 = v315 >> 12 >> (((v341 & 0xA4 ^ 0x24 | v341 & 0xA4 ^ 0x80) - 80) & 0xA4);
  v343 = 91 * (HIWORD(v312) & 0xF | (16 * (v342 & 0xF)));
  v344 = 91
       * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v343 - 31957) % (v334 & 0x3BE ^ 0x9C | v334 & 0x3BE ^ 0x322u)) ^ (16 * (*(unsigned __int8 *)(v13 + (v341 ^ 0xFFC0C3C1)) ^ 0x9C)) ^ 0x9C);
  v345 = (*(unsigned __int8 *)(v13
                             + (v344
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v344 + 63791)) >> 32))) >> 4) ^ 9;
  LOWORD(v345) = (unsigned __int16)(91
                                  * ((v345 - ((2 * v345) & 0x18) - 100) ^ *(unsigned __int8 *)(v13 + (v343 + 63791 - 958 * ((4483265 * (unint64_t)(v343 + 63791)) >> 32))))
                                  - 31957)
               % 0x3BEu;
  v346 = v342 - ((2 * v342) & 0x1FCD60) + 640673456;
  v347 = (v346 & 0xF0 | (v311 >> 20) & 0xF) ^ 0xBA;
  v348 = (unsigned __int16)(91 * v347 - 31957) % 0x3BEu
       + 1047391385
       - ((2 * ((unsigned __int16)(91 * v347 - 31957) % 0x3BEu)) & 0x132);
  v349 = *(unsigned __int8 *)(v13 + (v348 ^ 0x3E6DEC99)) ^ (16
                                                          * (*(unsigned __int8 *)(v13 + (unsigned __int16)v345) ^ 0x9C));
  v350 = 91 * ((v348 & 0x2BD ^ 0x224) + v347 + (v348 & 0x2BD ^ 0x99));
  v351 = v350 - 958 * ((4483265 * (unint64_t)v350) >> 32);
  v352 = 91 * (v349 ^ 0x9C);
  v353 = (*(unsigned __int8 *)(v13
                             + (v352
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v352 + 63791)) >> 32))) >> 4) ^ 9;
  LOWORD(v353) = (unsigned __int16)(91
                                  * ((v353 - ((2 * v353) & 0x18) - 100) ^ *(unsigned __int8 *)(v13 + v351))
                                  - 31957)
               % 0x3BEu;
  v354 = 91 * (((v346 >> 4) & 0xF0 | HIBYTE(v311) & 0xF) ^ 0x66);
  v355 = 91
       * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v354 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v13 + (unsigned __int16)v353) ^ 0x9C)) ^ 0x9C);
  v356 = (*(unsigned __int8 *)(v13
                             + (v355
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v355 + 63791)) >> 32))) >> 4) ^ 9;
  v357 = 91
       * ((v356 + (~(2 * v356) | 0xE7) - 99) ^ *(unsigned __int8 *)(v13
                                                                                   + (v354
                                                                                                  + 63791
                                                                                                  - 958 * ((4483265 * (unint64_t)(v354 + 63791)) >> 32))));
  v358 = (unsigned __int16)(v357 - 31957) % (((v357 + 33579) | (212 - v357)) & 0x3BEu);
  v359 = LODWORD(STACK[0x648])
       + 2013091342
       + LODWORD(STACK[0x64C])
       - ((2 * (LODWORD(STACK[0x648]) + 2013091342 + LODWORD(STACK[0x64C])) + 486441742) & 0x4DA09BB8);
  LODWORD(STACK[0x660]) ^= (LODWORD(STACK[0x63C]) + 3194913) ^ 0xDDBE13F3 ^ (LODWORD(STACK[0x5B0]) + 689017322);
  v360 = ((*(unsigned __int8 *)(v13
                              + (v338
                                             + 33579
                                             - 958 * ((4483265 * (unint64_t)(v338 + 33579)) >> 32))) ^ 0x9C) << 12) ^ ((*(unsigned __int8 *)(v13 + (v335 + 33579 - 958 * ((4483265 * (unint64_t)(v335 + 33579)) >> 32))) ^ 0x9C) << 8);
  v361 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(91 * (((v346 >> 8) & 0xF0 | (v311 >> 28)) ^ 0xE6) - 31957) % 0x3BEu) ^ (16 * (*(unsigned __int8 *)(v13 + v358) ^ 0x9C)) ^ 0x9C;
  v362 = v360 ^ ((*(unsigned __int8 *)(v13
                                     + (v344
                                                    + 33579
                                                    - 958
                                                    * ((4483265 * (unint64_t)(v344 + 33579)) >> 32))) ^ 0x9C) << 16);
  v363 = v362 ^ ((*(unsigned __int8 *)(v13
                                     + (v352
                                                    + 33579
                                                    - 958
                                                    * ((4483265 * (unint64_t)(v352 + 33579)) >> 32))) ^ 0x9C) << 20);
  v364 = v363 ^ ((*(unsigned __int8 *)(v13
                                     + (v355
                                                    + 33579
                                                    - 958
                                                    * ((4483265 * (unint64_t)(v355 + 33579)) >> 32))) ^ 0x9C) << 24);
  v365 = v364 ^ ((*(unsigned __int8 *)(v13
                                     + ((-370 - v361) & 0xBA534445 ^ 0xBA53441E ^ (v361 + 369) & 0x445) * (v361 + 369)
                                     % 0x3BE) ^ 0xC) << 28);
  LODWORD(STACK[0x63C]) = v365;
  v366 = v334 ^ 0xE3E1E733 ^ v365;
  v367 = (v318 & 0xFFFFFF0F | (16 * (v366 & 0xF))) ^ 0xF0;
  STACK[0x588] = 91 * v367 - 958 * ((1593683 * v367) >> 24);
  v368 = (v366 & 0xF0 | (v314 >> 4)) ^ 0xA0;
  STACK[0x5B0] = 91 * v368 - 958 * ((1593683 * v368) >> 24);
  v369 = ((v366 >> 4) & 0xF0 | (v314 >> 8) & 0xF) ^ 0xB0;
  STACK[0x578] = 91 * v369 - 958 * ((1593683 * v369) >> 24);
  v370 = ((v360 >> 8) & 0xF0 | ((unsigned __int16)v312 >> 12)) ^ 7;
  v371 = 91 * v370 - 958 * ((1593683 * v370) >> 24);
  v372 = (v362 >> 12) & 0xF0 | HIWORD(v312) & 0xF;
  v373 = 91 * v372 - 958 * ((1593683 * v372) >> 24);
  LODWORD(STACK[0x5B8]) = v311;
  v374 = (HIWORD(v363) & 0xF0 | (v311 >> 20) & 0xF) ^ 0xA;
  v375 = 91 * v374 - 958 * ((1593683 * v374) >> 24);
  v376 = ((v364 >> 20) & 0xF0 | HIBYTE(v311) & 0xF) ^ 6;
  v377 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(91 * v376
                                               - 958 * ((unsigned __int16)((1593683 * v376) >> 16) >> 8))) ^ 0x9C;
  v378 = (v377 << 24) - 412164391 - ((v377 << 25) & 0xCE000000);
  v379 = LODWORD(STACK[0x5BC])
       + LODWORD(STACK[0x640])
       - ((2 * (LODWORD(STACK[0x5BC]) + LODWORD(STACK[0x640])) - 669824432) & 0xDB2B7338)
       + 1503616708;
  v380 = LODWORD(STACK[0x640]) - 1529116136 + (v379 ^ 0x6D95B99C);
  LODWORD(STACK[0x500]) = v379 ^ 0xECEFA09B;
  v381 = LODWORD(STACK[0x4A0])
       - 1276175002
       + (v379 ^ 0xECEFA09B)
       - ((2 * (LODWORD(STACK[0x4A0]) - 1276175002 + (v379 ^ 0xECEFA09B))) & 0x5E92D86A)
       - 1354142667;
  v382 = v359 + 894406499;
  v383 = (v359 + 894406499) ^ 0x5855AB24;
  LODWORD(STACK[0x568]) = v383;
  v384 = LODWORD(STACK[0x484]) - 372987237 + v383 - ((2 * (LODWORD(STACK[0x484]) - 372987237 + v383)) & 0x60F75706);
  v385 = 91 * ((v381 >> 20) & 0xF ^ 4) + 29939;
  v386 = ((2 * (v385 - 1916 * ((17513 * v385) >> 25))) & 0xDFE)
       + (((unsigned __int16)v385 % 0x77Cu) ^ 0x3FF7BEFF);
  if (v386 - 1073200895 >= 0x3BE)
    v387 = -143920226;
  else
    v387 = -143919268;
  v388 = ((((((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (~HIBYTE(v381) & 0xF) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v381 >> 28) ^ 0xA) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (BYTE2(v381) & 0xF ^ 9) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + v386 - 929281627 + v387) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v381 >> 8) & 0xF ^ 0xC) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (((unsigned __int16)v381 >> 12) ^ 6) + 29939) % 0x3BEu) ^ 0x9C) << 12);
  LODWORD(STACK[0x5AC]) = v388;
  LODWORD(STACK[0x5BC]) = v381;
  v389 = v384 - 1334072445;
  v390 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (HIBYTE(v389) & 0xF) + 29939) % 0x3BEu) ^ 0x9C;
  v391 = ((v390 << 8) + 11241883 - ((v390 << 9) & 0x11200)) ^ (((*(unsigned __int8 *)(v13
                                                                                    + (unsigned __int16)(91 * ((v389 >> 28) ^ 0xB) + 29939)
                                                                                    % 0x3BEu) ^ 0x9C) << 12)
                                                             + 11241883);
  v392 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v381 & 0xF ^ 5) + 29939) % 0x3BEu) ^ 0x9C;
  v393 = (v388 | v392) ^ (16
                        * (*(unsigned __int8 *)(v13
                                              + (unsigned __int16)(91 * ((v381 >> 4) ^ 3) + 29939)
                                              % 0x3BEu) ^ 0x9C));
  LODWORD(STACK[0x598]) = v393;
  v394 = v391 + (*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (BYTE2(v389) & 0xF ^ 0xB) + 29939) % 0x3BEu) ^ 0x9C);
  v395 = ((-256 * v390) & 0x100 | (v389 >> 8) & 0xF) ^ 0xB;
  v396 = (v394 << 8) ^ ((*(unsigned __int8 *)(v13
                                            + (unsigned __int16)(((~(((v389 >> 20) & 0xF ^ 7) + 9) & 0x1B)
                                                                + ((((v389 >> 20) & 0xF ^ 7) + 73) & 0xFFFB))
                                                               * (((v389 >> 20) & 0xF ^ 7) + 329))
                                            % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13
                                                                                          + (91 * (v395 + ((-256 * v390) & 0x100 ^ 0x149)) - 958 * ((4483265 * (unint64_t)(91 * (v395 + ((-256 * v390) & 0x100 ^ 0x149u)))) >> 32))) ^ 0x9C;
  v397 = (v396 << 8) - 1014096614 - ((v396 << 9) & 0x871C3A00);
  LODWORD(STACK[0x594]) = v397;
  v398 = v397 ^ ((*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(91 * (((unsigned __int16)(v389 & 0xF000) >> 12) ^ 0xA) + 29939)
                                     % 0x3BEu) ^ 0x9C) << 12);
  v399 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v389 & 0xF ^ 3) + 29939) % 0x3BEu) ^ 0x9C;
  v400 = (v398 ^ 0xC38E1D1A | v399) ^ (16
                                     * (*(unsigned __int8 *)(v13
                                                           + (unsigned __int16)(91 * ((v389 >> 4) ^ 8)
                                                                              + 29939)
                                                           % 0x3BEu) ^ 0x9C));
  LODWORD(STACK[0x5A0]) = v392 & 0xF;
  v401 = 91 * (v392 & 0xF | (16 * (v399 & 0xF)));
  v402 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v401 - 31957) % 0x3BEu) ^ 0x9C;
  v403 = STACK[0x650];
  v404 = 91 * ((v402 - 787728161 - ((2 * v402) & 0xFFFFFFBF)) ^ LODWORD(STACK[0x650]));
  LODWORD(STACK[0x584]) = v404;
  v405 = *(unsigned __int8 *)(v13 + (v404 + 63791) % 0x3BE) >> 4;
  LOWORD(v405) = (unsigned __int16)(91
                                  * (((v405 ^ 9) + ((2 * ((v405 ^ 9 | 0x7C) ^ v405)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(v13 + (v401 + 63791 - 958 * ((4483265 * (unint64_t)(v401 + 63791)) >> 32))))
                                  - 31957)
               % 0x3BEu;
  v406 = LODWORD(STACK[0x5C0]) - 344508661;
  LODWORD(STACK[0x580]) = v406;
  v407 = STACK[0x660];
  v408 = v380 ^ (LODWORD(STACK[0x660]) + v406);
  v409 = v380;
  LODWORD(STACK[0x508]) = v408;
  v410 = v393 >> (((v408 - 1) | -(char)v408) & 4);
  v411 = *(unsigned __int8 *)(v13 + (unsigned __int16)STACK[0x588]);
  LODWORD(STACK[0x570]) = v411;
  v412 = v410 - ((2 * v410) & 0x62E7256A) - 1317825867;
  v413 = 91 * ((v400 & 0xF0 | v412 & 0xF) ^ 5);
  v414 = v411 ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)STACK[0x5B0]) ^ 0x9C)) ^ 0x9C;
  LODWORD(STACK[0x560]) = v414;
  v415 = v414 ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)STACK[0x578]) ^ 0x9C) << 8);
  LODWORD(STACK[0x558]) = v415;
  v416 = v415 ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)v371) ^ 0x9C) << 12);
  LODWORD(STACK[0x550]) = v416;
  v417 = *(unsigned __int8 *)(v13 + (unsigned __int16)v373) ^ 0x9C;
  v418 = *(unsigned __int8 *)(v13 + (unsigned __int16)v375) ^ 0x9C;
  v419 = v416 ^ (v417 << 16);
  LODWORD(STACK[0x548]) = v419;
  v420 = v419 ^ (v418 << 20);
  LODWORD(STACK[0x538]) = v420;
  v421 = v420 ^ v378 ^ 0xE76EDED9;
  v422 = *(unsigned __int8 *)(v13 + (unsigned __int16)v405);
  v423 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v413 - 31957) % 0x3BEu);
  LODWORD(STACK[0x540]) = (91 * (HIBYTE(v421) & 0xF) + 31577)
                        % (((166 - 91 * (HIBYTE(v421) & 0xF)) | (91 * (HIBYTE(v421) & 0xF) + 31577)) & 0x3BE);
  v424 = 91 * (v423 ^ (16 * (v422 ^ 0x9C)) ^ 0x9C);
  LODWORD(STACK[0x588]) = (v424 + 33579) % (((v424 + 33579) & 0x3BE) + ((212 - v424) & 0x3BEu));
  v425 = v379;
  v426 = (v407 - LODWORD(STACK[0x640]) - ((2 * (v407 - LODWORD(STACK[0x640])) - 689017322) & 0xDB2B7338) + 1494020263) ^ v379;
  v427 = ((2 * v426) & 0x797F5A38 ^ 0x741208) + (v426 ^ 0xBDC5B41B);
  LODWORD(STACK[0x510]) = v427;
  v428 = 91 * (((v400 >> 4) & 0xF0 | (v412 >> 4)) ^ 0xB);
  v429 = (*(unsigned __int8 *)(v13
                             + (v424
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v424 + 63791)) >> 32))) >> 4) ^ 9;
  v430 = 91
       * (*(unsigned __int8 *)(v13
                             + (unsigned __int16)(v428 - 31957)
                             % ((((86 - v427) & 0xA6) + ((v427 + 169) & 0xA6)) | 0x318)) ^ (16
                                                                                          * (*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v429 - ((2 * v429) & 0x18) - 100) ^ *(unsigned __int8 *)(v13 + (v413 + 63791 - 958 * ((4483265 * (unint64_t)(v413 + 63791)) >> 32)))) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  LODWORD(STACK[0x530]) = v430;
  v431 = *(unsigned __int8 *)(v13
                            + (v430
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v430 + 63791)) >> 32))) >> 4;
  v432 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(91
                                               * (((v431 ^ 9)
                                                                  + ((2 * ((v431 ^ 9 | 0x7C) ^ v431)) ^ 0x15)
                                                                  - 99) ^ *(unsigned __int8 *)(v13
                                                                                             + (v428 + 63791 - 958 * ((4483265 * (unint64_t)(v428 + 63791)) >> 32))))
                                               - 31957)
                            % 0x3BEu);
  v433 = ((v398 >> 8) & 0xF0 | (v412 >> 8) & 0xF) ^ 0x12;
  v434 = (v432 & 0x5B ^ 0x18 | v432 & 0x5B ^ 0x43) * (v433 + 369);
  v435 = *(unsigned __int8 *)(v13 + (v434 - 958 * ((4483265 * (unint64_t)v434) >> 32)));
  v436 = v435 ^ (16 * (v432 ^ 0x9C));
  v437 = (((v435 & 0x4A ^ 0x42) + (v435 & 0x4A ^ 8)) | 0x19) * (v433 + 701);
  v438 = 91 * (v436 ^ 0x9C);
  LODWORD(STACK[0x528]) = v438;
  v439 = (*(unsigned __int8 *)(v13
                             + (v438
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v438 + 63791)) >> 32))) >> 4) ^ 9;
  LOWORD(v439) = 91
               * ((v439 - ((2 * v439) & 0x18) - 100) ^ *(unsigned __int8 *)(v13
                                                                                           + (v437 - 958 * ((4483265 * (unint64_t)v437) >> 32))))
               - 31957;
  v440 = 91 * (((v398 >> 12) & 0xF0 | ((unsigned __int16)v412 >> 12)) ^ 0xE9);
  LODWORD(STACK[0x518]) = v440;
  v441 = 91
       * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v440 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v13 + (unsigned __int16)v439 % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  LODWORD(STACK[0x46C]) = v441;
  LODWORD(STACK[0x520]) = (v441 + 63791) % (((v441 + 63791) & 0x3BE) + ((720 - v441) & 0x3BEu));
  v442 = LODWORD(STACK[0x634]) ^ (LODWORD(STACK[0x670]) + 410790323) ^ 0xB157F89A ^ (LODWORD(STACK[0x64C]) + 1504208142);
  v443 = LODWORD(STACK[0x648]) - 1121520726 + (v382 ^ 0x26D04DDC);
  v444 = v382 ^ 0x3C2D7DFC ^ (v442
                            - LODWORD(STACK[0x648])
                            - ((2 * (v442 - LODWORD(STACK[0x648])) + 643275506) & 0x370E524E)
                            + 1857222304);
  v445 = LODWORD(STACK[0x5C8]) - 752104071;
  v446 = v443 ^ (v442 + v445);
  LODWORD(STACK[0x578]) = v446;
  v447 = ((2 * (v444 + v446)) & 0xFF2C7F76) + ((v444 + v446) ^ 0x7F963FBB);
  v448 = LODWORD(STACK[0x568]) + 2140553147 + v443 - v447 + 1;
  LODWORD(STACK[0x568]) = v382 ^ 0x4C49EE20;
  v449 = (v382 ^ 0x4C49EE20) + 2140553147 - v447;
  LODWORD(STACK[0x660]) = v449;
  v450 = v448 - ((2 * v448) & 0xBE64E00) + 99821312;
  LODWORD(STACK[0x5C0]) = v450;
  v451 = v447 - ((2 * v447 - 1022522254) & 0xBA1EAE44) + 1050025307;
  LODWORD(STACK[0x5B0]) = v451;
  v452 = (v451 ^ 0xDD0F5722)
       - v449
       + (v450 ^ 0xFA0CD8FF)
       - ((2 * ((v451 ^ 0xDD0F5722) - v449 + (v450 ^ 0xFA0CD8FF)) - 1676382614) & 0xE3AE5C76)
       + 1071736176;
  LODWORD(STACK[0x5C8]) = v452;
  v453 = v449 - 1309292339 + (v450 ^ 0xB6BD2653 ^ v452);
  LODWORD(STACK[0x4FC]) = v453;
  v454 = ((2 * (v408 - 1019194652 + v427)) & 0xBFAF9ED6) + ((v408 - 1019194652 + v427) ^ 0x5FD7CF6B);
  v455 = 1607978859 - LODWORD(STACK[0x500]) + v409;
  LODWORD(STACK[0x500]) = v425 ^ 0x70C1A60;
  v456 = (v425 ^ 0x70C1A60) + 1607978859 - v454;
  LODWORD(STACK[0x4E0]) = v454;
  LODWORD(STACK[0x634]) = v456;
  v457 = v454 - (v455 - v454) - v456 + 2058572143 - ((2 * (v454 - (v455 - v454) - v456 - 816878147)) & 0x56C7C764);
  LODWORD(STACK[0x4EC]) = v457;
  v458 = (v455 - v454) ^ 0xBD66D097;
  LODWORD(STACK[0x4F4]) = v458;
  LODWORD(STACK[0x4F0]) = 2 * v458;
  v459 = v456 - (v457 ^ (v458 - 1419517006 - ((2 * v458) & 0x56C7C764))) - 818484077;
  LODWORD(STACK[0x4E8]) = v459;
  v460 = v459 + LODWORD(STACK[0x4B0]) - ((2 * (v459 + LODWORD(STACK[0x4B0])) + 54484356) & 0x93992824) - 882097452;
  v461 = LODWORD(STACK[0x4AC]) - v453 + 1984127752 - ((2 * (LODWORD(STACK[0x4AC]) - v453 + 1984127752)) & 0x351732B4);
  v462 = ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (HIBYTE(v460) & 0xF ^ 9) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v460 >> 28) ^ 4) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (BYTE2(v460) & 0xF ^ 0xC) + 29939) % 0x3BEu) ^ 0x9C;
  LODWORD(STACK[0x4E4]) = v460;
  v463 = (((unsigned __int16)v460 >> 12) + (~(v460 >> 11) & 0x12)) | 0x140;
  v464 = (v462 << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v460 >> 20) & 0xF ^ 0xC) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v460 >> 8) & 0xF ^ 4) + 29939) % 0x3BEu) ^ 0x9C;
  v465 = (v464 << 8) + 1642793495 - ((v464 << 9) & 0xC3D61400);
  LODWORD(STACK[0x4DC]) = v465;
  v461 -= 1702127270;
  v466 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v460 >> 4) ^ 1) + 29939) % 0x3BEu);
  v467 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v460 & 0xF ^ 2) + 29939) % 0x3BEu) ^ 0x9C;
  v468 = v465 ^ ((*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(91 * v463
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v463) >> 16) >> 8))) ^ 0x9C) << 12);
  LODWORD(STACK[0x4D8]) = v468;
  v469 = (v468 ^ 0x61EB0A17 | v467) ^ (16 * (v466 ^ 0x9C));
  LOWORD(v460) = 91 * ((v461 >> 4) ^ 5) + 29939;
  v470 = ((((((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (HIBYTE(v461) & 0xF ^ 0xA) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v461 >> 28) ^ 9) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (BYTE2(v461) & 0xF ^ 0xB) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v461 >> 20) & 0xF ^ 8) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)((((v461 >> 8) & 0xF ^ 9) + 329) * (((LOWORD(STACK[0x4B4]) - 1) | -LOWORD(STACK[0x4B4])) & 9 | 0x52)) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (((unsigned __int16)(v461 & 0xF000) >> 12) ^ 9) + 29939) % 0x3BEu) ^ 0x9C) << 12);
  LODWORD(STACK[0x4D0]) = v470;
  v471 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v461 & 0xF ^ 0xA) + 29939) % 0x3BEu) ^ 0x9C;
  v472 = (v470 | v471) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)v460 % 0x3BEu) ^ 0x9C));
  LODWORD(STACK[0x45C]) = v472;
  v473 = v467 & 0xF;
  LODWORD(STACK[0x4D4]) = v473;
  v474 = ((2 * (v473 & 0xFFFFFF0F | (16 * (v471 & 0xF)))) & 0xFFFFFFF3)
       + ((v473 & 0xFFFFFF0F | (16 * (v471 & 0xF))) ^ 0xBAB7B7F9);
  v475 = *(unsigned __int8 *)(v13 + (91 * v474 - 1598939736) % 0x3BE) ^ 0x9C;
  v476 = (-7 * (((v474 - 60) | (59 - v474)) & 0xF3)) * (v474 + 1162365636) % 0x3BE;
  v477 = 91 * ((v475 - 787728161 - ((2 * v475) & 0xFFFFFFBF)) ^ v403);
  v478 = (v477 + 33579) % 0x3BE;
  LODWORD(STACK[0x468]) = v469;
  v479 = *(unsigned __int8 *)(v13 + (v477 + 63791) % 0x3BE) >> 4;
  LOWORD(v479) = 91
               * (((v479 ^ 9) + ((2 * ((v479 ^ 9 | 0x7C) ^ v479)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(v13 + v476))
               - 31957;
  LODWORD(STACK[0x458]) = (v469 >> 4) - ((v469 >> 3) & 0xBF20C0A) - 973535739;
  v480 = ((v469 >> 4) - ((v469 >> 3) & 0xA) + 5) & 0xF ^ 5;
  v481 = 91 * (v472 & 0xF0 | v480);
  LODWORD(STACK[0x454]) = v481;
  v482 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v481 - 31957) % 0x3BEu) ^ (16
                                                                                * (*(unsigned __int8 *)(v13 + (unsigned __int16)v479 % 0x3BEu) ^ 0x9C)) ^ 0x9C;
  LODWORD(STACK[0x450]) = v482;
  v483 = *(unsigned __int8 *)(v13 + v478);
  v484 = 16
       * (*(unsigned __int8 *)(v13
                             + (91 * v482
                                            + 33579
                                            - 958
                                            * ((4483265 * (unint64_t)(91 * v482 + 33579)) >> 32))) ^ 0x9C);
  LODWORD(STACK[0x464]) = v484;
  v483 ^= 0x9Cu;
  LODWORD(STACK[0x460]) = v483;
  v485 = 91 * ((v484 ^ v483) & 0xF0 | v480) - 901863462 - ((182 * ((v484 ^ v483) & 0xF0 | v480)) & 0x4FB4);
  LODWORD(STACK[0x44C]) = (v485 ^ 0xCA3EA7DA) % (((v485 & 0x3BE ^ 0x24) + (v485 & 0x3BE ^ 0x39A)) & 0x3FEu);
  LODWORD(STACK[0x670]) = (LODWORD(STACK[0x658]) ^ 0x9CACF3E8 ^ LODWORD(STACK[0x638]))
                        + 996184822
                        - ((2 * (LODWORD(STACK[0x658]) ^ 0x9CACF3E8 ^ LODWORD(STACK[0x638]))) & 0x76C125EC);
  LODWORD(STACK[0x648]) = LODWORD(STACK[0x624]) ^ LODWORD(STACK[0x628]);
  v486 = ((LODWORD(STACK[0x5E8]) >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x61C]) >> 12)) ^ 1;
  v487 = LODWORD(STACK[0x5D4]) ^ ((*(unsigned __int8 *)(v13
                                                      + (unsigned __int16)(91 * v486
                                                                         - 958
                                                                         * ((unsigned __int16)((1593683 * v486) >> 16) >> 8))) ^ 0x9C) << 12);
  v488 = ((LODWORD(STACK[0x60C]) >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x61C])) & 0xF) ^ 0xB;
  v489 = (HIWORD(LODWORD(STACK[0x5EC])) & 0xF0 | (LODWORD(STACK[0x5FC]) >> 20) & 0xF) ^ 8;
  v490 = 91 * v489 - 958 * ((1593683 * v489) >> 24);
  v491 = (unsigned __int16)v490 + 971751635 - ((2 * v490) & 0x1A6);
  v492 = ((*(unsigned __int8 *)(v13 + (v491 ^ 0x39EBC0D3u)) ^ 0x9C) << 20) ^ ((*(unsigned __int8 *)(v13
                                                                                                  + (unsigned __int16)(91 * v488 - 958 * ((unsigned __int16)((1593683 * v488) >> 16) >> 8))) ^ 0x9C) << 16);
  v493 = (HIBYTE(LODWORD(STACK[0x5F4])) & 0xF0 | (LODWORD(STACK[0x5FC]) >> 28)) ^ 6;
  v494 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(91 * v493
                                                 - 958 * ((unsigned __int16)((1593683 * v493) >> 16) >> 8))) ^ 0xC) << 28) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)((((LODWORD(STACK[0x5F0]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x5FC])) & 0xF) ^ 6) * ((v491 & 0x5B ^ 0x53) + (v491 & 0x5B ^ 8))) % 0x3BEu) ^ 0x9C) << 24);
  v495 = v492 ^ v487;
  v496 = v495 ^ 0x7A2ADF86 ^ (v494 + 2049630086 - ((2 * v494) & 0xF4000000));
  v497 = (((LODWORD(STACK[0x5F8]) >> 4) ^ 9) & 0xF ^ 0x15B) + ((2 * ((LODWORD(STACK[0x5F8]) >> 4) ^ 9)) & 0x16);
  LODWORD(STACK[0x678]) ^= (16
                          * (*(unsigned __int8 *)(v13
                                                + (unsigned __int16)(91 * v497
                                                                   - 958
                                                                   * ((unsigned __int16)((1593683 * v497) >> 16) >> 8))) ^ 0x9C)) ^ 0xB1784885 ^ (((((((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (HIBYTE(v496) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v496 >> 28) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (BYTE2(v495) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v495 >> 20) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + LODWORD(STACK[0x5D8])) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((unsigned __int16)v487 >> 12) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((LOWORD(STACK[0x5F8]) ^ 0x1C) & ((STACK[0x610] & 0xF ^ 0xC) + (STACK[0x610] & 0xF ^ 3))) + 31577) % 0x3BEu) ^ 0x9C);
  LODWORD(STACK[0x668]) ^= LODWORD(STACK[0x620]);
  v498 = HIBYTE(LODWORD(STACK[0x63C])) & 0xF0 | (LODWORD(STACK[0x5B8]) >> 28);
  v499 = v421 ^ ((*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(91 * (v498 ^ 6)
                                                        - 958 * ((unsigned __int16)((1593683 * (v498 ^ 6u)) >> 16) >> 8))) ^ 0xC) << 28);
  LOWORD(v498) = 91 * ((v498 & 0x5B ^ 2) + (v498 & 0x5B ^ 0x159) + ((unsigned __int16)LODWORD(STACK[0x550]) >> 12));
  LOWORD(v421) = 91 * (LODWORD(STACK[0x560]) >> 4) + 31577;
  v500 = ((((*(unsigned __int8 *)(v13 + LODWORD(STACK[0x540])) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (((v499 >> 28) - ((v499 >> 27) & 0x1A) - 18851) ^ 0xB65D) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (HIWORD(LODWORD(STACK[0x548])) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((LODWORD(STACK[0x538]) >> 20) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((LODWORD(STACK[0x558]) >> 8) & 0xF) + 31577) % 0x3BEu) ^ 0x9C;
  LODWORD(STACK[0x640]) = (LODWORD(STACK[0x5E4]) ^ LODWORD(STACK[0x580]) ^ 0x3C979C41)
                        + 996184822
                        - 2
                        * ((LODWORD(STACK[0x5E4]) ^ LODWORD(STACK[0x580]) ^ 0x3C979C41) & 0x3B6092FE ^ (LODWORD(STACK[0x5E4]) ^ LODWORD(STACK[0x580])) & 8);
  v501 = v445 ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)v421 % 0x3BEu) ^ 0x9C)) ^ ((v500 << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)v498 % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (STACK[0x570] & 0xF ^ 0xC) + 31577) % 0x3BEu) ^ 0x9C);
  LODWORD(STACK[0x64C]) = v501 - 755570669 - ((2 * v501) & 0xA5EDD026);
  v502 = ((*(unsigned __int8 *)(v13
                              + (LODWORD(STACK[0x528])
                                             + 33579
                                             - 958
                                             * ((4483265
                                               * (unint64_t)(LODWORD(STACK[0x528]) + 33579)) >> 32))) ^ 0x9C) << 12) ^ ((*(unsigned __int8 *)(v13 + (LODWORD(STACK[0x530]) + 33579 - 958 * ((4483265 * (unint64_t)(LODWORD(STACK[0x530]) + 33579)) >> 32))) ^ 0x9C) << 8);
  v503 = *(_BYTE *)(v13
                  + (LODWORD(STACK[0x518])
                                 + 63791
                                 - 958
                                 * ((4483265 * (unint64_t)(LODWORD(STACK[0x518]) + 63791)) >> 32)));
  v504 = (2 * (v503 & 8)) ^ 0x10 | v503 & 8;
  v505 = (*(unsigned __int8 *)(v13 + LODWORD(STACK[0x520])) >> 4) ^ 9;
  v506 = (v505 & (v504 - 8)) == 0;
  v507 = v504 | 0x42;
  v508 = 82 - v504;
  if (v506)
    v508 = v507;
  v509 = 91 * (v503 & 0xF7 ^ 0x94 ^ (v505 + v508 - 74)) - 31957;
  v510 = 91 * ((HIWORD(LODWORD(STACK[0x594])) & 0xF0 | HIWORD(v412) & 0xF) ^ 0x83);
  v511 = 91
       * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v510 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v13 + v509 % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v512 = v511 + 33579 - 958 * ((4483265 * (unint64_t)(v511 + 33579)) >> 32);
  v513 = v511 + 63791 - 958 * ((4483265 * (unint64_t)(v511 + 63791)) >> 32);
  v514 = *(unsigned __int8 *)(v13 + v513) >> 4;
  v515 = (HIBYTE(LODWORD(STACK[0x594])) & 0xF ^ 3) << (v513 & 4) << (v513 & 4 ^ 4);
  v516 = 91
       * (v515 & 0x9B3 ^ ((v412 >> 20) ^ 0x17) & 3 | v515 & 0x64C ^ ((v412 >> 20) ^ 0x17) & 0xC);
  v517 = 91
       * (*(unsigned __int8 *)(v13
                             + (v516
                                            + 33579
                                            - 958 * ((4483265 * (unint64_t)(v516 + 33579)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (((v514 ^ 9) - 2 * ((v514 ^ 9) & 0xE ^ v514 & 2) - 100) ^ *(unsigned __int8 *)(v13 + (v510 + 63791 - 958 * ((4483265 * (unint64_t)(v510 + 63791)) >> 32)))) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v518 = HIBYTE(LODWORD(STACK[0x594])) & 0xF0 | HIBYTE(v412) & 0xF;
  v519 = *(unsigned __int8 *)(v13
                            + (v517
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v517 + 63791)) >> 32))) >> 4;
  v520 = 91
       * (*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v518 ^ 0xC1) - 31957) % 0x3BEu) ^ (16
                                                                                               * (*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (((v519 ^ 9) - 2 * ((v519 ^ 9) & 0xE ^ v519 & 2) - 100) ^ *(unsigned __int8 *)(v13 + (v516 + 63791 - 958 * ((4483265 * (unint64_t)(v516 + 63791)) >> 32)))) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C)
       + 33579;
  v521 = *(unsigned __int8 *)(v13
                            + (v517
                                           + 33579
                                           - 958 * ((4483265 * (unint64_t)(v517 + 33579)) >> 32)));
  v522 = ((*(unsigned __int8 *)(v13 + (v520 - 958 * ((4483265 * (unint64_t)v520) >> 32))) ^ 0xC) << 28) ^ ((v521 ^ 0x9C) << 24);
  v523 = *(unsigned __int8 *)(v13 + (LODWORD(STACK[0x584]) + 33579) % 0x3BEu) ^ 0x9C;
  v524 = v523 ^ (16 * (*(unsigned __int8 *)(v13 + LODWORD(STACK[0x588])) ^ 0x9C));
  v525 = v502 ^ v524 ^ ((*(unsigned __int8 *)(v13
                                            + (LODWORD(STACK[0x46C])
                                                           + 33579
                                                           - 958
                                                           * ((4483265
                                                             * (unint64_t)(LODWORD(STACK[0x46C])
                                                                                              + 33579)) >> 32))) ^ 0x9C) << 16);
  v526 = v525 ^ ((*(unsigned __int8 *)(v13 + v512) ^ 0x9C) << 20);
  v527 = v526 ^ 0x16E5078B ^ (v522 + 384108427 - ((2 * v522) & 0x2C000000));
  v528 = STACK[0x5A0] & 0xFFFFFF0F | (16 * (v523 & 0xF));
  v529 = v524 & 0xF0 | (LODWORD(STACK[0x598]) >> 4);
  v530 = 91 * (((((v502 ^ v524) >> 8) & 0xF) << (v521 & 4 ^ 4) << (v521 & 4)) ^ (LODWORD(STACK[0x598]) >> 8) & 0xF);
  v531 = (LODWORD(STACK[0x5AC]) >> 12) - ((2 * (LODWORD(STACK[0x5AC]) >> 12)) & 0x4091C) - 372112242;
  v532 = (v531 & 0xF ^ 0xFF3EFBB1) + 12649537 + ((2 * (v531 & 0xF)) ^ 0x1C);
  v533 = ((*(unsigned __int8 *)(v13
                              + 91
                              * (((v502 >> 8) & 0xF0 ^ 0xC32B3717 ^ (((v532 - ((v502 >> 8) & 0xF0 | v532)) ^ -((v502 >> 8) & 0xF0))
                                                                   - 1020578025
                                                                   - ((2
                                                                     * ((v532 - ((v502 >> 8) & 0xF0 | v532)) ^ -((v502 >> 8) & 0xF0))) & 0x86566E2E)))
                               + v532)
                              % 0x3BE) ^ 0x9C) << 12) ^ ((*(unsigned __int8 *)(v13 + v530 % 0x3BE) ^ 0x9C) << 8);
  v534 = ((v525 >> 12) & 0xF0 | (v531 >> 4)) ^ 8;
  v535 = (HIWORD(v526) & 0xF0 | (v531 >> 8) & 0xF) ^ 4;
  v536 = (v527 >> 20) & 0xF0 | ((unsigned __int16)((LODWORD(STACK[0x5AC]) >> 12)
                                                 - ((2 * (LODWORD(STACK[0x5AC]) >> 12)) & 0x91C)
                                                 + 1166) >> 12);
  v537 = (HIBYTE(v527) & 0xF0 | HIWORD(v531) & 0xF) ^ 2;
  v538 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(91 * v528 - 958 * ((unsigned __int16)((1593683 * v528) >> 16) >> 8)));
  v539 = v538 ^ (16
               * (*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(91 * v529
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v529) >> 16) >> 8))) ^ 0x9C)) ^ 0x9C;
  v540 = v533 ^ v539 ^ ((*(unsigned __int8 *)(v13
                                            + (unsigned __int16)(91 * v534
                                                               - 958
                                                               * ((unsigned __int16)((1593683 * v534) >> 16) >> 8))) ^ 0x9C) << 16);
  v541 = v540 ^ ((*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(91 * v535
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v535) >> 16) >> 8))) ^ 0x9C) << 20);
  v542 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(91 * v537
                                                 - 958 * ((unsigned __int16)((1593683 * v537) >> 16) >> 8))) ^ 0xC) << 28) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * v536 - 958 * ((unsigned __int16)((1593683 * v536) >> 16) >> 8))) ^ 0x9C) << 24) ^ v541;
  v543 = ((((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (HIBYTE(v542) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v542 >> 28) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (BYTE2(v540) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v541 >> 20) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 12);
  v544 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (((v533 ^ v539) >> 8) & 0xF) + 31577) % 0x3BEu);
  LODWORD(STACK[0x63C]) = LODWORD(STACK[0x508]) ^ 0xD57AA72A ^ LODWORD(STACK[0x5BC]);
  v545 = ((v543 | v544 ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13
                                                            + (unsigned __int16)(91 * ((unsigned __int16)v533 >> 12)
                                                                               + 31577)
                                                            % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v538 & 0xF ^ 0xC) + 31577) % 0x3BEu) ^ 0x9C;
  v546 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v539 >> 4) + 31577) % 0x3BEu) ^ 0x9C;
  v547 = STACK[0x578];
  LODWORD(STACK[0x638]) = LODWORD(STACK[0x578]) ^ 0xE2AF77A0 ^ (16 * v546) ^ v545;
  v548 = v547 + LODWORD(STACK[0x568]);
  LODWORD(STACK[0x658]) = LODWORD(STACK[0x510]) - LODWORD(STACK[0x500]);
  v549 = LODWORD(STACK[0x600]) + 1944822494;
  LODWORD(STACK[0x46C]) = v549;
  v550 = LODWORD(STACK[0x634]) + v549;
  v551 = v550 - ((2 * v550) & 0xBAF98820) - 579025904;
  v552 = ((((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (HIBYTE(v551) & 0xF ^ 0xD) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v551 >> 28) ^ 0xD) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((BYTE2(v551) & 7 ^ 0x14C) + (BYTE2(v551) & 7 ^ 0xFFFB) + (BYTE2(v551) & 0xF ^ 0xC)) + 182) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v551 >> 20) & 0xF ^ 7) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * ((v551 >> 8) & 0xF ^ 4) + 29939) % 0x3BEu) ^ 0x9C;
  v553 = (v552 << 8) + 1903894763 - ((v552 << 9) & 0xE2F64000);
  v554 = LODWORD(STACK[0x4A4])
       - 2005502308
       - LODWORD(STACK[0x660])
       - ((2 * (LODWORD(STACK[0x4A4]) - 2005502308 - LODWORD(STACK[0x660]))) & 0x3ABD22D4)
       - 1654746774;
  v555 = *(unsigned __int8 *)(v13 + (unsigned __int16)(91 * (v550 & 0xF) + 29939) % 0x3BEu) ^ 0x9C;
  v556 = v555 + 939857233 - ((2 * v555) & 0xA2);
  v557 = v553 ^ ((*(unsigned __int8 *)(STACK[0x688]
                                     + (unsigned __int16)(91 * (((unsigned __int16)v551 >> 12) ^ 0xC) + 29939) % 0x3BEu) ^ 0x9C) << 12);
  v558 = (v557 ^ 0x717B20EB | v556 ^ 0x38051551) ^ (16
                                                  * (*(unsigned __int8 *)(STACK[0x688]
                                                                        + (unsigned __int16)(91
                                                                                           * (((v550 - ((2 * v550) & 0x20) + 16) >> 4) ^ 1)
                                                                                           + 29939)
                                                                        % 0x3BEu) ^ 0x9C));
  v559 = ((((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (HIBYTE(v554) & 0xF ^ 0xD) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v554 >> 28) ^ 9) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (BYTE2(v554) & 0xF ^ 0xE) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v554 >> 20) & 0xF ^ 5) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v554 >> 8) & 0xF ^ 1) + 29939) % 0x3BEu) ^ 0x9C;
  v560 = (v559 << 8) - 1188065174 - ((v559 << 9) & 0x725F2000);
  v561 = *(unsigned __int8 *)(STACK[0x688]
                            + (unsigned __int16)(91
                                               * (((unsigned __int16)((LOWORD(STACK[0x4A4])
                                                                     + 30364
                                                                     - LOWORD(STACK[0x660])
                                                                     - ((2
                                                                       * (LOWORD(STACK[0x4A4])
                                                                        + 30364
                                                                        - LOWORD(STACK[0x660]))) & 0x22D4)
                                                                     - 28310) & 0xF000) >> 12) ^ 9)
                                               + 29939)
                            % 0x3BEu) ^ 0x9C;
  LOWORD(v554) = 91
               * ((LOWORD(STACK[0x4A4])
                 + 30364
                 - LOWORD(STACK[0x660])
                 - ((2 * (LOWORD(STACK[0x4A4]) + 30364 - LOWORD(STACK[0x660]))) & 0x22D4)
                 - 28310) & 0xF ^ 0xA);
  v562 = (v560 ^ ((v561 << 12) - 1188065174 - (STACK[0x39C] & (v561 << 13))) | *(unsigned __int8 *)(STACK[0x688]
                                                                                                  + (unsigned __int16)(v554 + 29939) % 0x3BEu) ^ 0x9C) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (((LOBYTE(STACK[0x4A4]) - 100 - LOBYTE(STACK[0x660]) - ((2 * (LOBYTE(STACK[0x4A4]) - 100 - LOBYTE(STACK[0x660]))) & 0xD4) + 106) >> 4) ^ 6) + 29939) % 0x3BEu) ^ 0x9C) << (((4 - v554) & 4) + ((v554 - 13) & 4)));
  LOWORD(v532) = v556 & 0xF ^ 1;
  v563 = 91 * ((v556 & 0xF ^ 1) & 0xFFFFFF0F | (16 * (v562 & 0xF)));
  v564 = *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v563 - 31957) % 0x3BEu) ^ v403;
  v565 = ((((v564 ^ 0x3C) + 15) & 0x5B) + (((v564 ^ 0xD10C3843) + 369) & 0x5B)) * ((v564 ^ 0xD10C3843) + 369) % 0x3BE;
  v566 = *(unsigned __int8 *)(STACK[0x688] + (91 * (v564 ^ 0xD10C3843) + 63791) % 0x3BE) >> 4;
  LOWORD(v563) = (unsigned __int16)(91
                                  * (((v566 ^ 9) - 2 * ((v566 ^ 9) & 0xE ^ v566 & 2) - 100) ^ *(unsigned __int8 *)(STACK[0x688] + (v563 + 63791 - 958 * ((4483265 * (unint64_t)(v563 + 63791)) >> 32))))
                                  - 31957)
               % 0x3BEu;
  v567 = 91 * (v562 & 0xF0 | (v558 >> 4));
  v568 = 91
       * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v567 - 31957) % 0x3BEu) ^ (16
                                                                                          * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)v563) ^ 0x9C)) ^ 0x9C);
  v569 = v568 + 33579 - 958 * ((4483265 * (unint64_t)(v568 + 33579)) >> 32);
  v570 = (*(unsigned __int8 *)(STACK[0x688]
                             + (v568
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v568 + 63791)) >> 32))) >> 4) ^ 9;
  LOWORD(v570) = (unsigned __int16)(91
                                  * ((v570 - ((2 * v570) & 0x18) - 100) ^ *(unsigned __int8 *)(STACK[0x688] + (v567 + 63791 - 958 * ((4483265 * (unint64_t)(v567 + 63791)) >> 32))))
                                  - 31957)
               % 0x3BEu;
  v571 = 91 * ((v562 >> 4) & 0xF0 | (v558 >> 8) & 0xF);
  v572 = v571 + 63791 - 958 * ((4483265 * (unint64_t)(v571 + 63791)) >> 32);
  v573 = 91
       * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v571 - 31957) % 0x3BEu) ^ (16
                                                                                          * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)v570) ^ 0x9C)) ^ 0x9C);
  v574 = v573 + 33579 - 958 * ((4483265 * (unint64_t)(v573 + 33579)) >> 32);
  v575 = (*(unsigned __int8 *)(STACK[0x688]
                             + (v573
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v573 + 63791)) >> 32))) >> 4) ^ 9;
  LOWORD(v575) = (unsigned __int16)(91
                                  * ((v575 - ((2 * v575) & 0x18) - 100) ^ *(unsigned __int8 *)(STACK[0x688] + v572))
                                  - 31957)
               % 0x3BEu;
  v576 = 91 * (((v562 >> 8) & 0xF0 | ((unsigned __int16)v557 >> 12)) ^ 2);
  v577 = *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v576 - 31957) % 0x3BEu) ^ (16
                                                                                         * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)v575) ^ 0x9C));
  v578 = v576 + 63791 - 958 * ((4483265 * (unint64_t)(v576 + 63791)) >> 32);
  v579 = v578 + 695506071 - ((2 * v578) & 0x12E);
  v577 ^= 0x9Cu;
  v580 = 91 * (!(v555 & 1) + (v555 & 1) + (v579 & 0x170 ^ 0x10) + (v579 & 0x170 ^ 0x160) + v577);
  v581 = (*(unsigned __int8 *)(STACK[0x688]
                             + (91 * v577
                                            + 63791
                                            - 958
                                            * ((4483265 * (unint64_t)(91 * v577 + 63791)) >> 32))) >> 4) ^ 9;
  v582 = ((*(unsigned __int8 *)(STACK[0x688] + v580 % 0x3BE) ^ 0x9C) << 12) ^ ((*(unsigned __int8 *)(STACK[0x688] + v574) ^ 0x9C) << 8);
  v583 = 91 * (((v562 >> 12) & 0xF0 | HIWORD(v557) & 0xF) ^ 0xB);
  v584 = 91
       * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v583 - 31957) % 0x3BEu) ^ (16
                                                                                          * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v581 - ((2 * v581) & 0x18) - 100) ^ *(unsigned __int8 *)(STACK[0x688] + (v579 ^ 0x29749497u))) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v585 = v584 + 33579 - 958 * ((4483265 * (unint64_t)(v584 + 33579)) >> 32);
  v586 = (*(unsigned __int8 *)(STACK[0x688]
                             + (v584
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v584 + 63791)) >> 32))) >> 4) ^ 9;
  LOWORD(v583) = (unsigned __int16)(91
                                  * ((v586 - ((2 * v586) & 0x18) - 100) ^ *(unsigned __int8 *)(STACK[0x688] + (v583 + 63791 - 958 * ((4483265 * (unint64_t)(v583 + 63791)) >> 32))))
                                  - 31957)
               % 0x3BEu;
  v587 = 91 * ((HIWORD(v560) & 0xF0 | (v553 >> 20) & 0xF) ^ 0x27);
  v588 = 91
       * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v587 - 31957) % 0x3BEu) ^ (16
                                                                                          * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)v583) ^ 0x9C)) ^ 0x9C);
  v589 = *(unsigned __int8 *)(STACK[0x688]
                            + (v588
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v588 + 63791)) >> 32))) >> 4;
  LOBYTE(v528) = *(_BYTE *)(STACK[0x688]
                          + (v587
                                         + 63791
                                         - 958 * ((4483265 * (unint64_t)(v587 + 63791)) >> 32)));
  v590 = 91 * (((v560 >> 20) & 0xF0 | HIBYTE(v553) & 0xF) ^ 0x91);
  v591 = 91
       * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v590 - 31957) % 0x3BEu) ^ (16
                                                                                          * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (((v589 ^ 9) + ((2 * ((v589 ^ 9 | 0x7C) ^ v589)) ^ 0x15) - 99) ^ v528) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v592 = v591 + 33579 - 958 * ((4483265 * (unint64_t)(v591 + 33579)) >> 32);
  v593 = *(unsigned __int8 *)(STACK[0x688]
                            + (v590
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v590 + 63791)) >> 32))) ^ (*(unsigned __int8 *)(STACK[0x688] + (v591 + 63791 - 958 * ((4483265 * (unint64_t)(v591 + 63791)) >> 32))) >> 4);
  v594 = 91
       * (*(unsigned __int8 *)(STACK[0x688]
                             + (unsigned __int16)(91 * ((HIBYTE(v560) & 0xF0 | (v553 >> 28)) ^ 0xB7) - 31957) % 0x3BEu) ^ (16 * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (v593 ^ 0x95) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C)
       + 33579;
  v595 = *(unsigned __int8 *)(STACK[0x688] + v592);
  v596 = ((*(unsigned __int8 *)(STACK[0x688] + (v594 - 958 * ((4483265 * (unint64_t)v594) >> 32))) ^ 0xC) << 28) ^ ((v595 ^ 0x9C) << 24);
  v597 = *(unsigned __int8 *)(STACK[0x688] + v565) ^ 0x9C;
  v598 = v597 ^ (16 * (*(unsigned __int8 *)(STACK[0x688] + v569) ^ 0x9C));
  v599 = v582 ^ v598 ^ ((*(unsigned __int8 *)(STACK[0x688] + v585) ^ 0x9C) << 16);
  v600 = v599 ^ ((*(unsigned __int8 *)(STACK[0x688]
                                     + (v588
                                                    + 33579
                                                    - 958
                                                    * ((4483265 * (unint64_t)(v588 + 33579)) >> 32))) ^ 0x9C) << 20);
  v601 = v600 ^ 0x76A8F286 ^ (v596 + 1990783622 - ((2 * v596) & 0xEC000000));
  LOWORD(v589) = (unsigned __int16)((STACK[0x668] & 0x18 ^ 0x53 | STACK[0x668] & 0x18 ^ 8 | (v593 & 0x66 ^ 0x62 | v593 & 0x66 ^ 4) ^ 0x66)
                                  * (v532 & 0xFF0F | (16 * (v597 & 0xF))))
               % 0x3BEu;
  LOWORD(v593) = 91 * (v598 & 0xF0 | (v558 >> 4))
               - 958
               * ((unsigned __int16)((1593683 * (v598 & 0xF0 | (v558 >> 4))) >> 16) >> 8);
  v602 = ((v582 ^ v598) >> 4) & 0xF0 | (v558 >> 8) & 0xF;
  LOWORD(v558) = 91 * v602 - 958 * ((unsigned __int16)((1593683 * v602) >> 16) >> 8);
  v603 = v582 >> 8;
  v604 = STACK[0x688];
  v605 = (v603 & 0xF0 | ((unsigned __int16)v557 >> 12)) ^ 2;
  v606 = ((unint64_t)(*(unsigned __int8 *)(STACK[0x688]
                                                + (unsigned __int16)(91 * v605
                                                                   - 958
                                                                   * ((unsigned __int16)((1593683 * v605) >> 16) >> 8))) ^ 0x9Cu) << (~(v528 & 0xA5 ^ 0x80 | v528 & 0xA5 ^ 0x7F) & 0xA1 | 0xC)) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)v558) ^ 0x9C) << 8);
  v607 = ((v599 >> 12) & 0xF0 | HIWORD(v557) & 0xF) ^ 0xB;
  v608 = (HIWORD(v600) & 0xF0 | (v553 >> 20) & 0xF) ^ 7;
  v609 = ((*(unsigned __int8 *)(STACK[0x688]
                              + (unsigned __int16)(91 * v608
                                                 - 958 * ((unsigned __int16)((1593683 * v608) >> 16) >> 8))) ^ 0x9C) << 20) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * v607 - 958 * ((unsigned __int16)((1593683 * v607) >> 16) >> 8))) ^ 0x9C) << 16);
  v610 = (v601 >> 20) & 0xF0 | (v595 & 0xF ^ 0xC | v595 & 0xF ^ 3) & (HIBYTE(v553) ^ 1);
  v611 = *(unsigned __int8 *)(STACK[0x688]
                            + (unsigned __int16)(91 * v610
                                               - 958 * ((unsigned __int16)((1593683 * v610) >> 16) >> 8))) ^ 0x9C;
  v612 = (HIBYTE(v601) & 0xF0 | (v553 >> 28)) ^ 7;
  v613 = *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)v589);
  v614 = v613 ^ (16 * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)v593) ^ 0x9C)) ^ 0x9C;
  v615 = v609 ^ v606 ^ v614;
  v616 = v615 ^ 0x73D1C1C0 ^ ((v611 << 24) + 1943126464 - ((v611 << 25) & 0xE7FFFFFF));
  v617 = (((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (HIBYTE(v616) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 16) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v616 ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * v612 - 958 * ((unsigned __int16)((1593683 * v612) >> 16) >> 8))) ^ 0xC) << 28)) >> 28) + 31577) % 0x3BEu) ^ 0x9C) << 20) | ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (BYTE2(v615) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8)) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v615 >> 20) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (((v606 ^ v614) >> 8) & 0xF) + 31577) % 0x3BEu) ^ 0x9C;
  v618 = LODWORD(STACK[0x4E0]) - 2126170487;
  v619 = v618 ^ 0xA74F0F0F ^ v551;
  v620 = (v618 ^ (LODWORD(STACK[0x658]) - LODWORD(STACK[0x4E0]) + 588784207)) - LODWORD(STACK[0x634]);
  v621 = LODWORD(STACK[0x5B0]) ^ (-586197214 - v548 - ((-2 * v548) & 0xBA1EAE44));
  v622 = LODWORD(STACK[0x5B0]) ^ (16
                                * (*(unsigned __int8 *)(STACK[0x688]
                                                      + (unsigned __int16)(91 * (v614 >> 4) + 31577)
                                                      % 0x3BEu) ^ 0x9C)) ^ (*(unsigned __int8 *)(STACK[0x688]
                                                                                               + (unsigned __int16)(91 * (v613 & 0xF ^ 0xC) + 31577)
                                                                                               % 0x3BEu) ^ 0x9C | ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((unsigned __int16)v606 >> 12) + 31577) % 0x3BEu) ^ 0x9C) << 12)) ^ (v617 << 8);
  v623 = (LODWORD(STACK[0x450]) + 701) * (STACK[0x458] & 0x5B ^ 1 | STACK[0x458] & 0x5B ^ 0x5A);
  v624 = (*(unsigned __int8 *)(STACK[0x688] + (v623 - 958 * ((4483265 * (unint64_t)v623) >> 32))) >> 4) ^ 9;
  v625 = 91
       * ((v624 - ((2 * v624) & 0x18) - 100) ^ *(unsigned __int8 *)(STACK[0x688]
                                                                                   + (LODWORD(STACK[0x454])
                                                                                                  + 63791
                                                                                                  - 958 * ((4483265 * (unint64_t)(LODWORD(STACK[0x454]) + 63791)) >> 32))))
       - 31957;
  v626 = 91 * ((LODWORD(STACK[0x45C]) >> 4) & 0xF0 | (LODWORD(STACK[0x468]) >> 8) & 0xF);
  v627 = 91
       * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v626 - 31957) % 0x3BEu) ^ (16
                                                                                          * (*(unsigned __int8 *)(STACK[0x688] + v625 % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v628 = v627 + 33579 - 958 * ((4483265 * (unint64_t)(v627 + 33579)) >> 32);
  v629 = (*(unsigned __int8 *)(STACK[0x688]
                             + (v627
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v627 + 63791)) >> 32))) >> 4) ^ 9;
  LOWORD(v626) = (unsigned __int16)(91
                                  * ((v629 + (~(2 * v629) | 0xE7) - 99) ^ *(unsigned __int8 *)(STACK[0x688] + (v626 + 63791 - 958 * ((4483265 * (unint64_t)(v626 + 63791)) >> 32))))
                                  - 31957)
               % 0x3BEu;
  v630 = (LODWORD(STACK[0x4D0]) >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x4D8]) >> 12);
  v631 = 91 * (((LODWORD(STACK[0x4D8]) >> 12) & 0xD ^ 0x2BD) + ((LODWORD(STACK[0x4D8]) >> 12) & 0xD) + v630);
  v632 = 91
       * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * v630 - 31957) % 0x3BEu) ^ (16
                                                                                               * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)v626) ^ 0x9C)) ^ 0x9C);
  v633 = v632 + 33579 - 958 * ((4483265 * (unint64_t)(v632 + 33579)) >> 32);
  v634 = *(unsigned __int8 *)(STACK[0x688]
                            + (v632
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v632 + 63791)) >> 32))) >> 4;
  v635 = *(unsigned __int8 *)(STACK[0x688]
                            + (unsigned __int16)(91
                                               * (((v634 ^ 9) - 2 * ((v634 ^ 9) & 0xE ^ v634 & 2) - 100) ^ *(unsigned __int8 *)(STACK[0x688] + (v631 - 958 * ((4483265 * (unint64_t)v631) >> 32))))
                                               - 31957)
                            % 0x3BEu) ^ 0x9C;
  v636 = 16 * v635 + 502308157 - ((32 * v635) & 0x1A60);
  v637 = LODWORD(STACK[0x4D0]) >> 12 >> ((((v636 ^ 0xC2) & 0xC8 | v636 & 0xC0)
                                        + ((v636 ^ 0xC2) & 0xBC | v636 & 0xB0 ^ 0x30)) & 0x34);
  v638 = v637 - ((2 * v637) & 0x97F5A) - 205209683;
  v639 = 91 * ((HIWORD(LODWORD(STACK[0x4D8])) & 0xF | (16 * (v638 & 0xF))) ^ 0xDB);
  v640 = *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v639 - 31957) % 0x3BEu) ^ 0x9C;
  v641 = (v640 + 502308157 - ((2 * v640) & 0x7A)) ^ v636;
  v642 = v639 + 63791 - 958 * ((4483265 * (unint64_t)(v639 + 63791)) >> 32);
  v641 *= 91;
  v643 = (v641 + 33579) % 0x3BEu;
  v644 = *(unsigned __int8 *)(STACK[0x688] + (v641 + 63791) % 0x3BEu) >> 4;
  LOWORD(v644) = (unsigned __int16)(91
                                  * (((v644 ^ 9) + ((2 * ((v644 ^ 9 | 0x7C) ^ v644)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(STACK[0x688] + v642))
                                  - 31957)
               % 0x3BEu;
  v645 = 91 * ((v638 & 0xF0 | (LODWORD(STACK[0x4DC]) >> 20) & 0xF) ^ 0xAE);
  v646 = 91
       * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v645 - 31957) % 0x3BEu) ^ (16
                                                                                          * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)v644) ^ 0x9C)) ^ 0x9C);
  v647 = v646 + 33579 - 958 * ((4483265 * (unint64_t)(v646 + 33579)) >> 32);
  LOWORD(v646) = (unsigned __int16)(91
                                  * (*(unsigned __int8 *)(STACK[0x688]
                                                        + (v645
                                                                       + 63791
                                                                       - 958
                                                                       * ((4483265
                                                                         * (unint64_t)(v645 + 63791)) >> 32))) ^ (*(unsigned __int8 *)(STACK[0x688] + (v646 + 63791 - 958 * ((4483265 * (unint64_t)(v646 + 63791)) >> 32))) >> 4) ^ 0x95)
                                  - 31957)
               % 0x3BEu;
  v648 = 91 * (((v638 >> 4) & 0xF0 | HIBYTE(LODWORD(STACK[0x4DC])) & 0xF) ^ 0xF1);
  v649 = 91
       * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v648 - 31957) % 0x3BEu) ^ (16
                                                                                          * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)v646) ^ 0x9C)) ^ 0x9C);
  v650 = v649 + 33579 - 958 * ((4483265 * (unint64_t)(v649 + 33579)) >> 32);
  v651 = STACK[0x63C];
  v652 = *(unsigned __int8 *)(STACK[0x688]
                            + (v649
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v649 + 63791)) >> 32))) >> 4;
  v653 = 91
       * (*(unsigned __int8 *)(STACK[0x688]
                             + (unsigned __int16)(91 * (((v638 >> 8) & 0xF0 | (LODWORD(STACK[0x4DC]) >> 28)) ^ 0xB6)
                                                - 31957)
                             % 0x3BEu) ^ (16
                                        * (*(unsigned __int8 *)(STACK[0x688]
                                                              + (unsigned __int16)(91
                                                                                 * (((v652 ^ 9) - 2 * ((v652 ^ 9) & 0xE ^ v652 & 2) - 100) ^ *(unsigned __int8 *)(STACK[0x688] + (v648 + 63791 - 958 * ((4483265 * (unint64_t)(v648 + 63791)) >> 32))))
                                                                                 - 31957)
                                                              % 0x3BEu) ^ 0x9C)) ^ 0x9C)
       + 33579;
  v654 = (*(unsigned __int8 *)(STACK[0x688] + v643) ^ 0x9C) << 16;
  v655 = v654 ^ ((*(unsigned __int8 *)(STACK[0x688] + v647) ^ 0x9C) << 20) ^ ((*(unsigned __int8 *)(STACK[0x688] + v650) ^ 0x9C) << 24) ^ ((*(unsigned __int8 *)(STACK[0x688] + (v653 - 958 * ((4483265 * (unint64_t)v653) >> 32))) ^ 0xC) << 28);
  v656 = (*(unsigned __int8 *)(STACK[0x688] + v628) ^ 0x9C) << 8;
  v657 = STACK[0x638];
  v658 = (*(unsigned __int8 *)(STACK[0x688] + v633) ^ 0x9C) << 12;
  v659 = v656 ^ LODWORD(STACK[0x464]);
  v660 = v658 ^ v656;
  v661 = v654 ^ v658;
  v662 = STACK[0x4D4] & 0xFFFFFF0F | (16 * (STACK[0x460] & 0xF));
  v663 = *(unsigned __int8 *)(STACK[0x688]
                            + 91
                            * (__ROR4__(((LODWORD(STACK[0x468]) >> 8 << 28) | (v659 >> 8) & 0xF) ^ 0xAD4F2546, 28) ^ 0xD4F2546A)
                            % 0x3BE);
  v664 = ((*(unsigned __int8 *)(STACK[0x688]
                              + (unsigned __int16)(91 * v662 - 958 * ((unsigned __int16)((1593683 * v662) >> 16) >> 8))) ^ 0x9C) << 17) ^ ((*(unsigned __int8 *)(STACK[0x688] + LODWORD(STACK[0x44C])) ^ 0x9C) << 21) ^ 0xD48CDCA7 ^ ((v663 >> 7) ^ 1 | ((v663 ^ 0x1C) << 25));
  v665 = (v660 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x4D8]) >> 12);
  v666 = ((v661 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x4D8])) & 0xF) ^ 0xB;
  v667 = (v655 >> 20) - ((v655 >> 19) & 0xA0A) - 1746791163;
  v668 = ((LODWORD(STACK[0x4DC]) >> 20) & 0xF | (16 * (v667 & 0xF))) ^ 0x5E;
  v669 = (v667 & 0xF0 | HIBYTE(LODWORD(STACK[0x4DC])) & 0xF) ^ 1;
  v670 = ((v667 >> 4) & 0xF0 | (LODWORD(STACK[0x4DC]) >> 28)) ^ 0x56;
  HIDWORD(v672) = v664;
  LODWORD(v672) = v664;
  v671 = v672 >> 17;
  v673 = v671 ^ ((*(unsigned __int8 *)(STACK[0x688]
                                     + (unsigned __int16)(91 * v665
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v665) >> 16) >> 8))) ^ 0x9C) << 12);
  v674 = *(unsigned __int8 *)(STACK[0x688]
                            + (unsigned __int16)(91 * v666
                                               - 958 * ((unsigned __int16)((1593683 * v666) >> 16) >> 8)));
  v675 = *(unsigned __int8 *)(STACK[0x688]
                            + (unsigned __int16)(91 * v668
                                               - 958 * ((unsigned __int16)((1593683 * v668) >> 16) >> 8))) ^ 0x9C;
  v676 = v673 ^ ((v674 ^ 0x9C) << 16);
  v677 = ((*(unsigned __int8 *)(STACK[0x688]
                              + (unsigned __int16)(91 * v669
                                                 - 958 * ((unsigned __int16)((1593683 * v669) >> 16) >> 8))) ^ 0x9C) << 24) ^ (v675 << 20) ^ v676;
  v678 = v621 - LODWORD(STACK[0x660]);
  v679 = v620 - ((2 * v620 + 471101032) & 0x322DE956) - 417256481;
  v680 = ((((((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (HIBYTE(v677) & 0xF ^ 0xE) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (((v677 ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * v670 - 958 * ((unsigned __int16)((1593683 * v670) >> 16) >> 8))) ^ 0xC) << 28)) >> 28) ^ 6) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (BYTE2(v676) & 0xF ^ 3) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v677 >> 20) & 0xF ^ 5) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v671 >> 8) & 0xF ^ 0xA) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (((unsigned __int16)v673 >> 12) ^ 0xE) + 31577) % 0x3BEu) ^ 0x9C) << 12);
  v681 = (v679 ^ 0x9916F4AB)
       + (LODWORD(STACK[0x4EC]) ^ 0xAB63E3B2)
       - 747754597
       - ((2 * ((v679 ^ 0x9916F4AB) + (LODWORD(STACK[0x4EC]) ^ 0xAB63E3B2))) & 0xA6DC5736);
  v682 = STACK[0x5C8];
  v683 = LODWORD(STACK[0x5C8]) ^ (16
                                * (*(unsigned __int8 *)(STACK[0x688]
                                                      + (unsigned __int16)(91 * ((v671 >> 4) ^ 4)
                                                                         + 31577)
                                                      % 0x3BEu) ^ 0x9C)) ^ 0x8BE4E524 ^ (v680 | *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (v671 & 0xF ^ 6) + 31577) % 0x3BEu) ^ 0x9C);
  v684 = LODWORD(STACK[0x4E4]) ^ LODWORD(STACK[0x4EC]);
  v685 = ((2 * ((v681 ^ 0xD36E2B9B) + 1641417191)) & 0x3C53EC32) + (((v681 ^ 0xD36E2B9B) + 1641417191) ^ 0x9E29F619);
  LODWORD(STACK[0x468]) = LODWORD(STACK[0x480]) + 387794732;
  v686 = LODWORD(STACK[0x5C0]) ^ 0xB895F797;
  v687 = (v679 ^ 0x78AF1FBE ^ v681) + 2 * ((v681 ^ 0x536E2B9B) & (v679 ^ 0x2BC13425));
  v688 = v687 + 1049328830 - ((2 * v687) & 0x7D16F97C);
  v689 = LODWORD(STACK[0x4E8]) - ((2 * LODWORD(STACK[0x4E8]) + 1165867122) & 0x41B057FA);
  v690 = LODWORD(STACK[0x4B4]) - 1519314284;
  LODWORD(STACK[0x660]) = LODWORD(STACK[0x630]) ^ 0xECC352AF;
  v691 = LODWORD(STACK[0x62C]) ^ 0xBAEAD073;
  LODWORD(STACK[0x634]) = LODWORD(STACK[0x668]) ^ 0x222DEC81;
  v692 = v678 + 1309292340;
  v693 = (v682 ^ 0xF1D72E3B) + v678 + 1309292340;
  v694 = v686 - 2 * ((v686 + 1153883018) & 0x73AD1ACF ^ v686 & 1) - 1200359848;
  v695 = v685 ^ 0x19F559F4;
  v696 = v693 + (v692 ^ 0x32D7C08E) - 1437618958 - ((2 * (v693 + (v692 ^ 0x32D7C08E))) & 0x549F59E4);
  v697 = v693 ^ 0xA52F84D8;
  v698 = LODWORD(STACK[0x4FC]) ^ 0xAA6DEA6;
  v699 = LODWORD(STACK[0x4F4]) + 2064900802 + ~((LODWORD(STACK[0x4F0]) + 160282388) & 0x6C9A0E6E);
  LODWORD(STACK[0x630]) = STACK[0x478];
  v700 = STACK[0x680];
  v701 = v684;
  LODWORD(STACK[0x624]) = v683;
  v702 = v683 ^ 0x7A33CB1F;
  v703 = v683 & ~(v651 ^ 0x7A33CB1F);
  v704 = v619;
  HIDWORD(v672) = v657 ^ 0xAF77A0;
  LODWORD(v672) = v657 ^ 0xE2000000;
  v705 = v672 >> 25;
  LODWORD(STACK[0x4E8]) = v700 - 263;
  HIDWORD(v672) = v657 ^ 0x7A0;
  LODWORD(v672) = (v700 - 263) ^ 0xE2AF73F8 ^ v657;
  v706 = v672 >> 11;
  LODWORD(STACK[0x638]) = v657;
  HIDWORD(v672) = v657 ^ 0x20;
  LODWORD(v672) = v657 ^ 0xE2AF7780;
  v707 = v672 >> 6;
  HIDWORD(v672) = v651 ^ 0x1F;
  LODWORD(v672) = v651 ^ 0x7A33CB00;
  v708 = v672 >> 6;
  HIDWORD(v672) = v651 ^ 0x31F;
  LODWORD(v672) = v651 ^ 0x7A33C800;
  v709 = v672 >> 11;
  LODWORD(STACK[0x668]) = v622 ^ 0x3FA02082;
  v710 = v707 ^ v705 ^ v706;
  LODWORD(STACK[0x63C]) = v651;
  HIDWORD(v672) = v651 ^ 0x33CB1F;
  LODWORD(v672) = v651 ^ 0x7A000000;
  LODWORD(STACK[0x4F4]) = v622 ^ 0xDD0F5722;
  v711 = v708 ^ v709 ^ (v672 >> 25);
  LODWORD(STACK[0x4E0]) = v704 ^ 0x7A33CB1F;
  LODWORD(STACK[0x610]) = v701 ^ 0xE2AF77A0;
  v712 = (v657 ^ 0xE2AF77A0) & (v704 ^ 0x7A33CB1F) ^ (v622 ^ 0xDD0F5722) & (v651 ^ 0x7A33CB1F) ^ v702 & (v657 ^ 0xE2AF77A0) ^ v701 ^ (v701 ^ 0xE2AF77A0) & (v651 ^ 0x7A33CB1F);
  LODWORD(STACK[0x4F0]) = v657 ^ 0xE2AF77A0;
  LODWORD(STACK[0x62C]) = v704;
  LODWORD(STACK[0x4EC]) = v651 ^ 0x7A33CB1F;
  v713 = (v704 & (v651 ^ 0x7A33CB1F) | v703) ^ (v701 ^ v622 ^ 0x3FA02082) & (v657 ^ 0xE2AF77A0);
  v714 = (v711 + 1049328830 - ((2 * v711) & 0x7D16F97C)) ^ v688;
  v715 = (v714 + 117419772 - ((2 * v714) & 0xDFF5DF8)) ^ v695;
  v716 = v697 ^ 0xBA2573D0;
  v717 = v696 ^ 0xAA4FACF2;
  v718 = v699 ^ 0xB64D0737;
  v719 = ((v696 ^ 0x55B0530D) + (v696 ^ 0xAA4FACF2 ^ v710) + 1) ^ ((v697 ^ 0x45DA8C2F) + (v697 ^ 0xBA2573D0 ^ v710) + 1) ^ ((v710 ^ 0x6B613116 ^ (v715 + 1801531670 - ((2 * v715) & 0xD6C2622C))) - v715);
  v720 = v688 ^ 0x3E8B7CBE;
  v721 = (v688 ^ 0x3E8B7CBE) + (v699 ^ 0xB64D0737);
  v722 = ((2 * ((v695 ^ 0x6FFAEFC) - 2 * v721)) & 0x3E33EAEE) + (((v695 ^ 0x6FFAEFC) - 2 * v721) ^ 0x1F19F577);
  v723 = 2 * (v688 ^ 0x3E8B7CBE);
  v724 = (v688 ^ 0x3E8B7CBE)
       - 883835793
       + (((v688 ^ 0x3E8B7CBE) - ((v723 - 1767671586) & 0xF5B80BC4) + 1177403985) ^ (v689
                                                                                   + 2121469464
                                                                                   - ((2 * (v689 + 60229686)) & 0xF5B80BC4)));
  v725 = (((v696 ^ 0xAA4FACF2) - ((2 * ((v696 ^ 0xAA4FACF2) - 883835793)) & 0x54FDEAB6) - 170872374) ^ v698)
       + (v696 ^ 0xAA4FACF2)
       - 883835793;
  v726 = (v694 ^ 0xF3AD1ACE) + (v696 ^ 0xAA4FACF2);
  v727 = ((2 * (v716 - 2 * v726)) & 0xE9EB73FE) + ((v716 - 2 * v726) ^ 0xF4F5B9FF);
  v728 = ((2 * (v717 + 194446530)) & 0xDF57F578) + ((v717 + 194446530) ^ 0xEFABFABC);
  v729 = ((v688 ^ 0x3E8B7CBE) - ((v723 + 388893060) & 0x5DA925EE) - 1167353927) ^ v712 ^ 0x4C7BE557 ^ (v722 - 521794935);
  v730 = v726 ^ v725;
  v731 = (-185222657 - v727 + (v713 ^ 0x7A33CB1F ^ (v727 + 185222657))) ^ (-273941828
                                                                         - v728
                                                                         + (v713 ^ 0x7A33CB1F ^ (v728 + 273941828))) ^ ((v713 ^ 0x1B46EFC9 ^ (v729 - (STACK[0x4C0] & (2 * v729)) + 1635067094)) - v729);
  v732 = v724 ^ v721;
  v733 = (v688 ^ 0xC1748341)
       - 194446529
       + v724
       - 1828341204
       - ((2 * ((v688 ^ 0xC1748341) - 194446529 + v724)) & 0x260B7458);
  v734 = (v712 ^ 0x62AF77A0) & (v724 ^ v721);
  v735 = v732 ^ v712 ^ 0xE2AF77A0;
  v736 = v725 - v728 - ((2 * (v725 - v728) + 1599599992) & 0x71ADC44C) + 679664866;
  LODWORD(STACK[0x650]) = ((2 * ((v730 + (v736 ^ 0x38D6E226)) ^ v736)) & 0xFAFF9BFA ^ 0x70AD8048)
                        + ((v730 + (v736 ^ 0x38D6E226)) ^ v736 ^ 0x45A92FDB);
  v737 = ((2 * (((v733 ^ 0x9305BA2C) + v732) ^ v733)) & 0xE6F59DCC ^ 0x26011448)
       + (((v733 ^ 0x9305BA2C) + v732) ^ v733 ^ 0x607F74CA);
  v738 = v720 - v722;
  v739 = v738 + 716241465 + (v733 ^ 0xE0BEA891);
  v740 = (char *)*(&off_1E8C4D9A0 + LODWORD(STACK[0x680]) - 283) - 8;
  v741 = *((_DWORD *)v740 + 93) ^ 0xCEDE2AB5 ^ (((4 * *((_DWORD *)v740 + 93)) ^ 0x5F8A314) - 2292780);
  LODWORD(STACK[0x628]) = 0;
  v742 = v718 + v690 + v711 + v735 + (LODWORD(STACK[0x7C0]) ^ 0xB3EBFAB7) + v741 + 2 * v734;
  v743 = *((_DWORD *)v740 + 21);
  v744 = STACK[0x640];
  LODWORD(v740) = STACK[0x634];
  v745 = STACK[0x648];
  LODWORD(STACK[0x658]) = STACK[0x648];
  v746 = LODWORD(STACK[0x630])
       + (v694 ^ 0xC52E531)
       - v730
       + v719
       + (v743 ^ 0xE14D4AB5)
       + (LODWORD(STACK[0x938]) ^ 0xB3EBFAB7)
       + v731;
  v747 = STACK[0x670];
  HIDWORD(v672) = LODWORD(STACK[0x670]) ^ 0x12F6;
  LODWORD(v672) = LODWORD(STACK[0x670]) ^ 0x3B608000;
  LODWORD(STACK[0x648]) = v672 >> 13;
  LODWORD(STACK[0x640]) = (_DWORD)v740;
  v748 = v740 ^ 0x3B6092F6;
  LODWORD(v740) = v745 ^ 0xD2F6E813;
  v749 = LODWORD(STACK[0x678]) ^ 0xD2F6E813;
  v750 = STACK[0x660];
  v751 = LODWORD(STACK[0x660]) ^ 0xD2F6E813;
  v752 = v748 & (v745 ^ 0xD2F6E813) ^ v749 & (v691 ^ 0x3B6092F6) ^ v751 & v748 ^ v751 & (v691 ^ 0x3B6092F6) ^ (v747 ^ 0x3B6092F6) & v749 ^ (v747 ^ 0x3B6092F6) & (v745 ^ 0xD2F6E813);
  LODWORD(STACK[0x630]) = v752;
  v753 = (v751 & v749) - 476767409 - ((2 * (v751 & v749)) & 0xC72A369E);
  LODWORD(STACK[0x4D0]) = v747 ^ 0x3B6092F6;
  LODWORD(STACK[0x4D8]) = v751;
  v754 = (v747 ^ 0x3B6092F6) & (v691 ^ 0x3B6092F6) ^ v751 & v740;
  LODWORD(STACK[0x634]) = v691;
  LODWORD(STACK[0x4E4]) = v748;
  LODWORD(STACK[0x4DC]) = v749;
  LODWORD(STACK[0x4D4]) = (_DWORD)v740;
  v755 = (v747 ^ v691) & v748 ^ v749 & v740 ^ ((v754 ^ 0x9CD9E498 ^ ((((v753 ^ 0xE3951B4F)
                                                                                   + (v753 ^ v754 ^ 0x1C6AE4B0)
                                                                                   + 1) ^ -v754)
                                                                                 - 1663441768
                                                                                 - ((2
                                                                                   * (((v753 ^ 0xE3951B4F)
                                                                                     + (v753 ^ v754 ^ 0x1C6AE4B0)
                                                                                     + 1) ^ -v754)) & 0x39B3C930)))
                                                           + (v753 ^ 0xE3951B4F));
  LODWORD(STACK[0x5EC]) = v755;
  v756 = ((2 * (v738 + 716241465)) & 0xBA7CE7AC ^ 0x90004380) + ((v738 + 716241465) ^ 0x95FF521F);
  LODWORD(STACK[0x5F4]) = v727;
  v757 = v728 - v727;
  LODWORD(STACK[0x5E4]) = v727 + 706254468;
  v758 = (v727 + 706254468) ^ 0xEC7F9D97;
  LODWORD(STACK[0x5E8]) = v758;
  v759 = v758 - (v728 - v727);
  v760 = v759 - v757 - ((2 * (v759 - v757) - 354876684) & 0xEF5ABAC0);
  LODWORD(STACK[0x5D4]) = v739 + 1;
  v761 = (v722 - 763124) ^ 0xEC7F9D97;
  LODWORD(STACK[0x5C8]) = v761;
  v762 = v761 - v738 - 716241465;
  v763 = v762 - v738 - 716241465;
  v764 = v739 + 1 + v737 - v756 + 1774429424;
  LODWORD(v740) = v757 + (v736 ^ 0x4B6DF09B);
  LODWORD(STACK[0x5BC]) = (_DWORD)v740;
  v765 = ((2 * (v757 + 88719171)) & 0xFBEDF94A ^ 0x91804102) + ((v757 + 88719171) ^ 0xB537DD6C);
  v766 = (v752 ^ 0xA7330C9 ^ ((v764 ^ v763 ^ v755) + 175321289 - ((2 * (v764 ^ v763 ^ v755)) & 0x14E66192)))
       - (v764 ^ v763 ^ v755);
  v767 = v766 + 1973204681 - ((2 * v766) & 0xEB396D92);
  LODWORD(STACK[0x5C0]) = v767;
  v768 = ((v764 - v756 + 1564373974) ^ 0xD06ACF76)
       - 362507973
       + (((v767 & 0xCCDBBC9F ^ 0x4498B489 | v767 & 0xCCDBBC9F ^ 0x88430816)
         * ((STACK[0x668] & 0x963184DF ^ 0x82210480) + (STACK[0x668] & 0x963184DF ^ 0x1410805F))) | 0x119B2EC4);
  v769 = STACK[0x650];
  v770 = v759 + LODWORD(STACK[0x650]);
  LODWORD(STACK[0x560]) = v760 - 317071654;
  LODWORD(STACK[0x620]) = v770;
  v771 = (_DWORD)v740 + v769 - v765;
  LODWORD(STACK[0x580]) = v771;
  v771 += 1441739670;
  LODWORD(STACK[0x584]) = v771;
  v772 = v771 - v765;
  LODWORD(STACK[0x598]) = v772;
  v773 = v772 + 768128763;
  v774 = 2 * (v772 + 768128763);
  LODWORD(STACK[0x594]) = v774;
  v775 = (v774 & 0x7FB57F3E ^ 0x20951E2C) + (v773 ^ 0x6FB070E9);
  LODWORD(STACK[0x5A0]) = v775;
  v776 = v770 + v765 + 1718075920;
  v777 = v776 + v770 - 463552843;
  v778 = v775 + 1076183137;
  v779 = v775 + 1076183137 + v776 + 252569418 - ((2 * (v775 + 1076183137 + v776)) & 0x1E1BCE94);
  v737 += 210055450;
  LODWORD(STACK[0x570]) = v737;
  v780 = v737 + v762;
  v781 = v780 + v756 + 166320159;
  v782 = v768;
  LODWORD(STACK[0x5AC]) = v768;
  v783 = v768 + v781 - 1689052454 - ((2 * (v768 + v781)) & 0x36A635B4);
  v784 = v780 + 1730694133;
  v785 = (v780 + 1730694133) ^ v763;
  v786 = v785 - ((2 * v785 + 947534666) & 0x851856B4) - 557233921;
  v787 = ((2 * ((v783 ^ 0x9B531ADA) + (v786 ^ 0xC28C2B5A))) & 0x71AF9FFE)
       + (((v783 ^ 0x9B531ADA) + (v786 ^ 0xC28C2B5A)) ^ 0x38D7CFFF);
  v788 = ((v770 - 463552843) ^ (v760 - 317071654) ^ 0xF7AD5D60)
       - ((2 * ((v770 - 463552843) ^ (v760 - 317071654) ^ 0xF7AD5D60) + 947534666) & 0x8A3938F2)
       + 1633270302;
  LODWORD(STACK[0x578]) = v788;
  LODWORD(STACK[0x528]) = v779;
  v789 = (v779 ^ 0xF0DE74A) + (v788 ^ 0x451C9C79);
  v790 = ((2 * v789) & 0xFDDFB7F4) + (v789 ^ 0x7EEFDBFA);
  v791 = ((v787 - 953667583) ^ (v785 + 473767333 + v782))
       + 757982704
       - ((2 * ((v787 - 953667583) ^ (v785 + 473767333 + v782))) & 0x5A5BCBE0);
  v792 = ((v790 - 2129648634) ^ (v778 + (v788 ^ 0x451C9C79)))
       - 1284895739
       - ((2 * ((v790 - 2129648634) ^ (v778 + (v788 ^ 0x451C9C79)))) & 0x66D4180A);
  v793 = v781 + v780 + 1730694133;
  LODWORD(STACK[0x5B8]) = v793;
  LODWORD(STACK[0x568]) = v791 ^ 0x2D2DE5F0;
  v794 = (v791 ^ 0x2D2DE5F0) + ((v793 - ((2 * v793 - 177106812) & 0x851856B4) + 1027928988) ^ v786);
  v795 = v794 + 566998197 - ((2 * v794) & 0x4397696A);
  LODWORD(STACK[0x548]) = v795;
  v796 = ((v790 - 2 * ((v790 + 328995148) & 0x3B6092F7 ^ v789 & 1) + 1325179970) ^ v744) - (v790 + 328995148);
  LODWORD(STACK[0x5B0]) = v787;
  LODWORD(STACK[0x558]) = 2 * v787;
  v797 = STACK[0x64C];
  v798 = (v787 - ((2 * v787 - 1285014898) & 0xA5EDD026) + 749405530) ^ LODWORD(STACK[0x64C]);
  v799 = (v798 + 757982704 - ((2 * v798) & 0x5A5BCBE0)) ^ v791;
  v800 = ((v792 ^ 0x4C95F3FA) + (v744 ^ 0x880A9EF3 ^ v792) + 1) ^ v796 ^ (((v799 + 996184822 - ((2 * v799) & 0x76C125EC)) ^ v744)
                                                                        - v799);
  LODWORD(STACK[0x588]) = v777;
  v801 = (v792 ^ 0xB36A0C05) + (v788 ^ (v777 - ((2 * v777 - 177106812) & 0x8A3938F2) - 1076534085));
  v802 = v779 ^ 0xDC90404C;
  LODWORD(STACK[0x61C]) = v779 ^ 0xDC90404C;
  v803 = v802 - 1679307522 + (v792 ^ 0xB36A0C05) - ((2 * (v802 - 1679307522 + (v792 ^ 0xB36A0C05))) & 0x98917CC4);
  LODWORD(STACK[0x538]) = v783 ^ 0x48CEBDDC;
  v804 = (((v783 ^ 0x48CEBDDC) + 1087826522) ^ 0xBBA9FEE7)
       + 1146487065
       + ((2 * ((v783 ^ 0x48CEBDDC) + 1087826522)) & 0x7753FDCE);
  v742 -= 1286666768;
  LODWORD(STACK[0x5FC]) = v742;
  LODWORD(STACK[0x5F8]) = v804;
  v805 = v742 - v801 + v804 + v800 - ((2 * (v742 - v801 + v804 + v800)) & 0xE9D89C44) + 1961643554;
  LODWORD(STACK[0x60C]) = v746 + 345416674;
  v806 = (v797 ^ 0xD2F6E813) + v746 + 345416674 - v802 - 1087826522 + (v795 ^ 0x21CBB4B5);
  v807 = v806 + 1843997782 - (STACK[0x4BC] & (2 * v806));
  v808 = ((((*(unsigned __int8 *)(v604 + (unsigned __int16)(91 * (HIBYTE(v805) & 0xF ^ 4) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v604 + (unsigned __int16)(91 * ((v805 >> 28) ^ 7) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v604 + (unsigned __int16)(91 * (BYTE2(v805) & 0xF ^ 0xC) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v604 + (unsigned __int16)(91 * ((v805 >> 20) & 0xF ^ 0xE) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v604 + (unsigned __int16)(91 * ((v805 >> 8) & 0xF ^ 0xE) + 29939) % 0x3BEu) ^ 0x9C;
  v809 = (v808 << 8) + 1355975220 - ((v808 << 9) & 0xA1A51400);
  LODWORD(STACK[0x5D8]) = v809;
  v810 = *(unsigned __int8 *)(v604 + (unsigned __int16)(91 * ((v805 >> 4) ^ 2) + 29939) % 0x3BEu) ^ 0x9C;
  v811 = v809 ^ ((*(unsigned __int8 *)(v604
                                     + (unsigned __int16)(91 * (((unsigned __int16)v805 >> 12) ^ 4) + 29939) % 0x3BEu) ^ 0x9C) << 12);
  LODWORD(STACK[0x540]) = v811;
  v812 = *(unsigned __int8 *)(v604 + (unsigned __int16)(91 * (v805 & 0xF ^ 2) + 29939) % 0x3BEu) ^ 0x9C;
  v813 = (v811 ^ 0x50D28A34 | v812) ^ (16 * v810);
  v807 += 2352;
  v814 = ((((*(unsigned __int8 *)(v604 + (unsigned __int16)(91 * (HIBYTE(v807) & 0xF ^ 0xD) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v604 + (unsigned __int16)(91 * ((v807 >> 28) ^ 6) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v604 + (unsigned __int16)(91 * ((HIWORD(v807) ^ 0x6DE9) & 0xF) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v604 + (unsigned __int16)(91 * ((BYTE2(v807) ^ 0xE9) >> 4) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v604 + (unsigned __int16)(91 * ((v807 >> 8) & 0xF ^ 5) + 29939) % 0x3BEu) ^ 0x9C;
  LODWORD(STACK[0x5F0]) = v803 + 1279835746;
  v815 = *(unsigned __int8 *)(v604 + (unsigned __int16)(91 * (((unsigned __int16)v807 >> 12) ^ 3) + 29939) % 0x3BEu) ^ 0x9C;
  v816 = (v814 << 8) - ((v814 << 9) & 0xB4171A00) + 1510706432;
  LODWORD(STACK[0x550]) = v816;
  v817 = v816 ^ (v815 << 12);
  LODWORD(STACK[0x530]) = v817;
  v818 = *(unsigned __int8 *)(v604
                            + 91
                            * ((((((v783 ^ 0x48CEBDDC) + 1087826522) ^ 0xBBA9FEE7)
                               + 1146487065
                               + ((2 * ((v783 ^ 0x48CEBDDC) + 1087826522)) & 0x7753FDCE)) & 0x60975753)
                             + (((v783 ^ 0x37314223) + 1059657126) & 0x60975753)
                             + ((v803 + 1279835746) & 0x9F68A9F6 ^ 0x93200194)
                             + ((v803 + 1279835746) & 0x9F68A9F6 ^ 0xC48A862)
                             + (v807 & 0xF ^ 6))
                            % 0x3BE) ^ 0x9C;
  v819 = (v817 | v818) ^ (16
                        * (*(unsigned __int8 *)(v604
                                              + (unsigned __int16)(91 * ((v807 >> 4) ^ 8) + 29939)
                                              % 0x3BEu) ^ 0x9C));
  LODWORD(STACK[0x510]) = v819;
  v820 = v812 & 0xF;
  v821 = 91 * (v820 | (16 * (v818 & 0xF)));
  v822 = *(unsigned __int8 *)(v604 + (unsigned __int16)(v821 - 31957) % 0x3BEu);
  v823 = LODWORD(STACK[0x4F8]) ^ 0x9C;
  LODWORD(STACK[0x600]) = v823;
  v824 = 91 * (v822 ^ v823);
  v825 = v824 + 33579 - 958 * ((4483265 * (unint64_t)(v824 + 33579)) >> 32);
  v826 = (*(unsigned __int8 *)(v604
                             + (v824
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v824 + 63791)) >> 32))) >> 4) ^ 9;
  LOWORD(v821) = (unsigned __int16)(91
                                  * ((v826 + (~(2 * v826) | 0xE7) - 99) ^ *(unsigned __int8 *)(v604 + (v821 + 63791 - 958 * ((4483265 * (unint64_t)(v821 + 63791)) >> 32))))
                                  - 31957)
               % 0x3BEu;
  v827 = v813;
  LODWORD(v604) = 91 * (v819 & 0xF0 | (v813 >> 4));
  v828 = 91
       * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v604 - 31957) % 0x3BEu) ^ (16
                                                                                          * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)v821) ^ 0x9C)) ^ 0x9C);
  LODWORD(STACK[0x500]) = v828;
  v829 = *(unsigned __int8 *)(STACK[0x688]
                            + (v828
                                           + 33579
                                           - 958 * ((4483265 * (unint64_t)(v828 + 33579)) >> 32))) ^ 0x9C;
  v830 = *(unsigned __int8 *)(STACK[0x688] + v825) ^ 0x9C;
  LODWORD(STACK[0x520]) = v830;
  v831 = v830 ^ (16 * v829);
  LODWORD(STACK[0x508]) = v831;
  v832 = *(unsigned __int8 *)(STACK[0x688]
                            + (unsigned __int16)(91 * (v831 & 0xF0 | (v813 >> 4))
                                               - 958
                                               * ((unsigned __int16)((1593683
                                                                    * (v831 & 0xF0 | (v813 >> 4))) >> 16) >> 8))) ^ 0x9C;
  v833 = STACK[0x528];
  v834 = (v790 + 926560136) ^ LODWORD(STACK[0x528]);
  LODWORD(STACK[0x64C]) = v834;
  v835 = (v834 & 0xB5ED5A2D ^ 0x9480400C) + (v834 & 0xB5ED5A2D ^ 0x216D1A21);
  v836 = STACK[0x658] & 0xDF4F037D ^ 0xD09036C | STACK[0x658] & 0xDF4F037D ^ 0xD2460011;
  v837 = 16 * v832 - ((32 * v832) & 0x9C0) + 809055458;
  LODWORD(STACK[0x518]) = v837;
  LODWORD(STACK[0x4FC]) = (v837 & 0xEF0 ^ 0xFFFFFB1F) + v835 * v836;
  HIDWORD(v672) = v747 ^ 2;
  LODWORD(v672) = v747 ^ 0x3B6092F4;
  v838 = (v672 >> 2) ^ LODWORD(STACK[0x648]);
  HIDWORD(v672) = v747 ^ 0x2092F6;
  LODWORD(v672) = v747 ^ 0x3B400000;
  v839 = v838 ^ (v672 >> 22);
  HIDWORD(v672) = v750 ^ 0x813;
  LODWORD(v672) = v750 ^ 0xD2F6E000;
  v840 = v672 >> 13;
  HIDWORD(v672) = ~v750;
  LODWORD(v672) = v750 ^ 0xD2F6E810;
  v841 = v672 >> 2;
  HIDWORD(v672) = v750 ^ 0x36E813;
  LODWORD(v672) = v750 ^ 0xD2C00000;
  v842 = v841 ^ v840 ^ (v672 >> 22);
  LODWORD(STACK[0x5D4]) = ((v842 ^ 0xEE53E7C6 ^ (LODWORD(STACK[0x5F4])
                                               - ((2 * LODWORD(STACK[0x5E4])) & 0x458F4A2)
                                               + 742723797))
                         - LODWORD(STACK[0x5E8])) ^ (((LODWORD(STACK[0x5BC]) + 88719172) ^ v842)
                                                   - LODWORD(STACK[0x5BC])
                                                   - 88719172) ^ ((v842 ^ 0x22C7A51 ^ ((LODWORD(STACK[0x5C8]) ^ v839 ^ LODWORD(STACK[0x5D4]))
                                                                                     + 36469329
                                                                                     - ((2
                                                                                       * (LODWORD(STACK[0x5C8]) ^ v839 ^ LODWORD(STACK[0x5D4]))) & 0x458F4A2)))
                                                                - (LODWORD(STACK[0x5C8]) ^ v839 ^ LODWORD(STACK[0x5D4])));
  v843 = LODWORD(STACK[0x570]) + v839;
  v844 = LODWORD(STACK[0x5EC]) + v784;
  v845 = (((LODWORD(STACK[0x580]) + 96529900) ^ LODWORD(STACK[0x630])) - LODWORD(STACK[0x584]) + 1345209770) ^ ((LODWORD(STACK[0x560]) ^ 0x852A29F) + (LODWORD(STACK[0x630]) ^ 0xF7AD5D60 ^ LODWORD(STACK[0x560])) + 1);
  LODWORD(STACK[0x5E4]) = LODWORD(STACK[0x5C0]) ^ (v845 + 1973204681 - ((2 * v845) & 0xEB396D92));
  v846 = (v844 ^ v843) + 2 * (v844 & v843);
  LODWORD(STACK[0x5C8]) = v846;
  v847 = ((LODWORD(STACK[0x5AC]) ^ LODWORD(STACK[0x610]))
        - 1031001254
        - ((2 * (LODWORD(STACK[0x5AC]) ^ LODWORD(STACK[0x610]))) & 0x851856B4)) ^ v786;
  v848 = ((LODWORD(STACK[0x578]) ^ 0xBAE36386) + (LODWORD(STACK[0x624]) ^ 0x3F2F5766 ^ LODWORD(STACK[0x578])) + 1) ^ ((LODWORD(STACK[0x624]) ^ 0xD06ACF76 ^ (LODWORD(STACK[0x598]) - (STACK[0x594] & 0xF467963E) - 1476623846)) - LODWORD(STACK[0x5A0]) - 1076183137) ^ (((v847 + 2050214687 - ((2 * v847) & 0xF467963E)) ^ LODWORD(STACK[0x624])) - v847);
  LODWORD(STACK[0x630]) = LODWORD(STACK[0x610]) - 1034521870 + LODWORD(STACK[0x5B8]);
  LODWORD(STACK[0x624]) = v848 - LODWORD(STACK[0x588]);
  v849 = v783 ^ 0xBA98AE6F ^ LODWORD(STACK[0x548]);
  v850 = LODWORD(STACK[0x568]) + LODWORD(STACK[0x538]);
  LODWORD(STACK[0x610]) = (v801 + 252569418 - ((2 * v801) & 0x1E1BCE94)) ^ v833;
  v851 = (LODWORD(STACK[0x5B0]) - ((LODWORD(STACK[0x558]) - 89884922) & 0xCC13055C) + 1666956849) ^ v783;
  LODWORD(STACK[0x648]) = ((2 * v851) & 0xC3AC13CE ^ 0x418C12C4) + (v851 ^ 0xCF113695);
  v852 = ((LODWORD(STACK[0x510]) >> 8) ^ 0x5A0B8D)
       - 1858087402
       - ((2 * ((LODWORD(STACK[0x510]) >> 8) ^ 0x5A0B8D)) & 0x7FAC2C);
  v853 = v604 + 63791;
  v854 = STACK[0x688];
  v855 = *(unsigned __int8 *)(STACK[0x688]
                            + (LODWORD(STACK[0x500])
                                           + 63791
                                           - 958
                                           * ((4483265 * (unint64_t)(LODWORD(STACK[0x500]) + 63791)) >> 32))) >> 4;
  v856 = (unsigned __int16)(91
                          * (((v855 ^ 9) - 2 * ((v855 ^ 9) & 0xE ^ v855 & 2) - 100) ^ *(unsigned __int8 *)(STACK[0x688] + (v853 - 958 * ((4483265 * (unint64_t)v853) >> 32))))
                          - 31957)
       % 0x77Cu;
  v857 = ((2 * v856) & 0xAB2) + ((unsigned __int16)v856 ^ 0x7CFED559);
  if ((v857 - 2097075545) >= 0x3BE)
    v858 = -300990;
  else
    v858 = -300032;
  LODWORD(STACK[0x5F4]) = v849 + 200401699;
  v859 = 91
       * (((v846 & 0xF ^ 0xF) + (v846 & 0xF)) & (v827 >> 8) ^ (16
                                                             * ((150
                                                               - ((v852 ^ 0xFFFFFF81 | v852 ^ 6) & ((220 - v849) ^ (v849 + 200401699)) & 0x87)) & (v852 ^ 0x913FD616))));
  v860 = 91
       * (*(unsigned __int8 *)(v854 + (v859 + 33579) % 0x3BE) ^ (16
                                                               * (*(unsigned __int8 *)(v854
                                                                                     + (v857 - 2096775513 + v858)) ^ 0x9C)) ^ 0x9C);
  v861 = v860 + 33579 - 958 * ((4483265 * (unint64_t)(v860 + 33579)) >> 32);
  v862 = (*(unsigned __int8 *)(v854
                             + (v860
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v860 + 63791)) >> 32))) >> 4) ^ 9;
  LOWORD(v859) = 91
               * ((v862 - ((2 * v862) & 0x18) - 100) ^ *(unsigned __int8 *)(v854
                                                                                           + (v859 + 63791) % 0x3BE))
               - 31957;
  v863 = 91 * (((LODWORD(STACK[0x530]) >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x540]) >> 12)) ^ 0x88);
  v864 = 91
       * (*(unsigned __int8 *)(v854 + (unsigned __int16)(v863 - 31957) % 0x3BEu) ^ (16
                                                                                  * (*(unsigned __int8 *)(v854 + (unsigned __int16)v859 % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v865 = *(unsigned __int8 *)(v854
                            + (v864
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v864 + 63791)) >> 32)));
  v866 = ((*(unsigned __int8 *)(v854
                              + (v864
                                             + 33579
                                             - 958 * ((4483265 * (unint64_t)(v864 + 33579)) >> 32))) ^ 0x9C) << 12) ^ ((*(unsigned __int8 *)(v854 + v861) ^ 0x9C) << 8);
  v867 = 91 * (((LODWORD(STACK[0x530]) >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x540])) & 0xF) ^ 0xB2);
  v868 = *(unsigned __int8 *)(v854 + (unsigned __int16)(v867 - 31957) % 0x3BEu);
  v869 = 91
       * (v868 ^ (16
                * (*(unsigned __int8 *)(v854
                                      + (unsigned __int16)(91
                                                         * ((((v865 >> 4) ^ 9)
                                                                            + ((2
                                                                              * (((v865 >> 4) ^ 9 | 0x7C) ^ (v865 >> 4))) ^ 0x15)
                                                                            - 99) ^ *(unsigned __int8 *)(v854 + (v863 + 63791 - 958 * ((4483265 * (unint64_t)(v863 + 63791)) >> 32))))
                                                         - 31957)
                                      % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v870 = v869 + 33579 - 958 * ((4483265 * (unint64_t)(v869 + 33579)) >> 32);
  v871 = (*(unsigned __int8 *)(v854
                             + (v869
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v869 + 63791)) >> 32))) ^ 0x9Cu) >> ((-20 - 68 * ((v868 & 0x24 ^ 0xDF) + (v868 & 0x24 ^ 0xFB))) & 0xFC);
  LOWORD(v867) = 91
               * ((v871 - ((2 * v871) & 0x38) - 100) ^ *(unsigned __int8 *)(v854
                                                                                           + (v867 + 63791 - 958 * ((4483265 * (unint64_t)(v867 + 63791)) >> 32))))
               - 31957;
  v872 = 91 * ((HIWORD(LODWORD(STACK[0x550])) & 0xF0 | (LODWORD(STACK[0x5D8]) >> 20) & 0xF) ^ 0xD);
  v873 = 91
       * (*(unsigned __int8 *)(v854 + (unsigned __int16)(v872 - 31957) % 0x3BEu) ^ (16
                                                                                  * (*(unsigned __int8 *)(v854 + (unsigned __int16)v867 % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v874 = v873 + 33579 - 958 * ((4483265 * (unint64_t)(v873 + 33579)) >> 32);
  v875 = (*(unsigned __int8 *)(v854
                             + (v873
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v873 + 63791)) >> 32))) >> 4) ^ 9;
  LOWORD(v872) = 91
               * ((v875 - ((2 * v875) & 0x18) - 100) ^ *(unsigned __int8 *)(v854
                                                                                           + (v872 + 63791 - 958 * ((4483265 * (unint64_t)(v872 + 63791)) >> 32))))
               - 31957;
  v876 = 91 * (((LODWORD(STACK[0x550]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x5D8])) & 0xF) ^ 0xA0);
  v877 = 91
       * (*(unsigned __int8 *)(v854 + (unsigned __int16)(v876 - 31957) % 0x3BEu) ^ (16
                                                                                  * (*(unsigned __int8 *)(v854 + (unsigned __int16)v872 % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v878 = v877 + 33579 - 958 * ((4483265 * (unint64_t)(v877 + 33579)) >> 32);
  v879 = HIBYTE(LODWORD(STACK[0x550]));
  v880 = *(unsigned __int8 *)(v854
                            + (v877
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v877 + 63791)) >> 32))) >> 4;
  v881 = 91
       * (*(unsigned __int8 *)(v854
                             + (unsigned __int16)(91 * ((v879 & 0xF0 | (LODWORD(STACK[0x5D8]) >> 28)) ^ 0x55) - 31957)
                             % 0x3BEu) ^ (16
                                        * (*(unsigned __int8 *)(v854
                                                              + (unsigned __int16)(91
                                                                                 * (((v880 ^ 9) + ((2 * ((v880 ^ 9 | 0x7C) ^ v880)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(v854 + (v876 + 63791 - 958 * ((4483265 * (unint64_t)(v876 + 63791)) >> 32))))
                                                                                 - 31957)
                                                              % 0x3BEu) ^ 0x9C)) ^ 0x9C)
       + 33579;
  v882 = v820 & 0xFFFFFF0F | (16 * (STACK[0x520] & 0xF));
  v883 = v827 >> 4 >> (LODWORD(STACK[0x4FC]) + ((16 * v832 - ((32 * v832) & 0xC0) - 30) & 0xF0 ^ 0xEB) + 1);
  v884 = v866 ^ LODWORD(STACK[0x508]);
  v885 = v884 ^ ((*(unsigned __int8 *)(v854 + v870) ^ 0x9C) << 16);
  v886 = v883 & 0xF | (16 * ((v884 >> 8) & 0xF));
  v887 = (v866 >> 8) & 0xF0 | (v883 >> 4);
  v888 = (v883 >> 8) - (STACK[0x4B8] & (2 * (v883 >> 8)));
  v889 = *(unsigned __int8 *)(v854
                            + (unsigned __int16)(91 * v882 - 958 * ((unsigned __int16)((1593683 * v882) >> 16) >> 8)));
  v890 = (v889 ^ 0x9C | ((*(unsigned __int8 *)(v854
                                             + (unsigned __int16)(91 * v886
                                                                - 958
                                                                * ((unsigned __int16)((1593683 * v886) >> 16) >> 8))) ^ 0x9C) << 8)) ^ ((*(unsigned __int8 *)(v854 + (unsigned __int16)(91 * v887 - 958 * ((unsigned __int16)((1593683 * v887) >> 16) >> 8))) ^ 0x9C) << 12);
  v891 = v885 ^ ((*(unsigned __int8 *)(v854 + v874) ^ 0x9C) << 20);
  v892 = ((v888 + 2081864602) & 0xF | (16 * (HIWORD(v885) & 0xF))) ^ 0xA;
  v893 = v891 ^ ((*(unsigned __int8 *)(v854 + v878) ^ 0x9C) << 24);
  v894 = (HIWORD(v891) & 0xF0 | ((v888 - 102) >> 4)) ^ 9;
  v895 = v893 ^ ((*(unsigned __int8 *)(v854 + (v881 - 958 * ((4483265 * (unint64_t)v881) >> 32))) ^ 0xC) << 28);
  v896 = ((v893 >> 20) & 0xF0 | ((v888 + 2081864602) >> 8) & 0xF) ^ 0xB;
  v897 = (HIBYTE(v895) & 0xF0 | ((unsigned __int16)(v888 - 17510) >> 12)) ^ 0xB;
  v898 = v890 ^ ((*(unsigned __int8 *)(v854
                                     + (unsigned __int16)(91 * v892
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v892) >> 16) >> 8))) ^ 0x9C) << 16);
  v899 = v898 ^ ((*(unsigned __int8 *)(v854
                                     + (unsigned __int16)(91 * v894
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v894) >> 16) >> 8))) ^ 0x9C) << 20);
  v900 = v899 ^ ((*(unsigned __int8 *)(v854
                                     + (unsigned __int16)(91 * v896
                                                        - 958 * ((unsigned __int16)((1593683 * v896) >> 16) >> 8))) ^ 0x9C) << 24);
  v901 = v890 ^ LODWORD(STACK[0x518]) ^ 0x34E2;
  v902 = *(unsigned __int8 *)(v854 + (unsigned __int16)(91 * ((v901 >> 8) & 0xF) + 31577) % 0x3BEu) ^ 0x9C ^ ((((*(unsigned __int8 *)(v854 + (unsigned __int16)(91 * (HIBYTE(v900) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v854 + (unsigned __int16)(91 * ((v900 ^ ((*(unsigned __int8 *)(v854 + (unsigned __int16)(91 * v897 - 958 * ((unsigned __int16)((1593683 * v897) >> 16) >> 8))) ^ 0xCu) << 28)) >> 28) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v854 + (unsigned __int16)(91 * (BYTE2(v898) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v854 + (unsigned __int16)(91 * ((v899 >> 20) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 12) ^ (16 * (*(unsigned __int8 *)(v854 + (unsigned __int16)(91 * ((unsigned __int16)v890 >> 12) + 31577) % 0x3BEu) ^ 0x9C));
  v903 = LODWORD(STACK[0x5F4]) ^ (v850 - 1679307522);
  v904 = LODWORD(STACK[0x610]) + 200401699;
  LODWORD(STACK[0x5EC]) = v904;
  v905 = ((2 * (v904 ^ LODWORD(STACK[0x5F0]))) & 0x23EB5FE4 ^ 0x815CC4) + (v904 ^ LODWORD(STACK[0x5F0]) ^ 0x5DBD1190);
  LODWORD(STACK[0x5E8]) = v905;
  v906 = v879 & 0x19 ^ 0x9E29F601 | v879 & 0x19 ^ 0x18;
  v907 = *(unsigned __int8 *)(v854 + (unsigned __int16)(91 * (v901 >> 4) + 31577) % 0x3BEu);
  LODWORD(STACK[0x5F0]) = v850 - ((2 * v850 + 936352252) & 0x6BCC7C2C);
  LODWORD(STACK[0x610]) = *(unsigned __int8 *)(v854 + (unsigned __int16)(91 * (v889 & 0xF ^ 0xC) + 31577) % 0x3BEu) ^ LODWORD(STACK[0x64C]) ^ (16 * (v907 ^ 0x9C)) ^ (v902 << 8);
  LODWORD(STACK[0x5F4]) = v805 ^ (LODWORD(STACK[0x648]) + v906);
  v908 = LODWORD(STACK[0x5C8]) + LODWORD(STACK[0x5FC]);
  v909 = v903 + LODWORD(STACK[0x5F8]);
  LODWORD(STACK[0x5F8]) = v909;
  LODWORD(STACK[0x5FC]) = v909 ^ 0x97098C0B;
  LOBYTE(v898) = v908 + (v909 ^ 0xB) - ((2 * (v908 + (v909 ^ 0xB))) & 0x56) + 43;
  v910 = LODWORD(STACK[0x5D4])
       - (LODWORD(STACK[0x620])
        + LODWORD(STACK[0x650]))
       + LODWORD(STACK[0x60C])
       + LODWORD(STACK[0x5E4]);
  v911 = LODWORD(STACK[0x61C]) + 786512488 + v905;
  LODWORD(STACK[0x650]) = v911;
  LOBYTE(v901) = v910 + 73 + (v911 ^ 0xF4) - ((2 * (v910 + 73 + (v911 ^ 0xF4))) & 6) + 3;
  v912 = *(_BYTE *)(v854 + (unsigned __int16)(91 * (v898 & 0xF ^ 0xB) + 29939) % 0x3BEu) ^ 0x9C;
  v913 = *(_BYTE *)(v854 + (unsigned __int16)(91 * (v901 >> 4) + 29939) % 0x3BEu) ^ 0x9C;
  LOBYTE(v901) = *(_BYTE *)(v854 + (unsigned __int16)(91 * (v901 & 0xF ^ 3) + 29939) % 0x3BEu) ^ 0x9C;
  v914 = (16 * v913) ^ v901;
  v915 = 91 * (v912 & 0xF | (16 * (v901 & 0xF)));
  v916 = 91 * (*(unsigned __int8 *)(v854 + (unsigned __int16)(v915 - 31957) % 0x3BEu) ^ LODWORD(STACK[0x600]));
  v917 = (*(unsigned __int8 *)(v854
                             + (v916
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v916 + 63791)) >> 32))) >> 4) ^ 9;
  v918 = 91
       * (*(unsigned __int8 *)(v854
                             + (unsigned __int16)(91
                                                * (v914 & 0xF0 | ((v912 ^ (16
                                                                                          * (*(_BYTE *)(v854 + (unsigned __int16)(91 * ((v898 >> 4) ^ 2) + 29939) % 0x3BEu) ^ 0x9C))) >> 4))
                                                - 31957)
                             % 0x3BEu) ^ (16
                                        * (*(unsigned __int8 *)(v854
                                                              + (unsigned __int16)(91
                                                                                 * ((v917 - ((2 * v917) & 0x18) - 100) ^ *(unsigned __int8 *)(v854 + (v915 + 63791 - 958 * ((4483265 * (unint64_t)(v915 + 63791)) >> 32))))
                                                                                 - 31957)
                                                              % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  LODWORD(STACK[0x620]) = v918 + 33579 - 958 * ((4483265 * (unint64_t)(v918 + 33579)) >> 32);
  v919 = v903 ^ (LODWORD(STACK[0x5F0]) - 775025900);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x690]
                                                     + 8
                                                     * ((126
                                                       * (((LODWORD(STACK[0x628])
                                                          - 1757004455
                                                          - ((2 * LODWORD(STACK[0x628]) + 2) & 0x2E8C7AB2)
                                                          + 1) ^ 0x97463D40) > 0x3F)) ^ LODWORD(STACK[0x680])))
                                         - 8))(((v919 ^ (LODWORD(STACK[0x648]) - 1641417191 - v903) ^ 0x3901444B)
                                                + v903
                                                - (LODWORD(STACK[0x5F8]) ^ 0x51F737BF ^ v919 ^ (LODWORD(STACK[0x648])
                                                                                              - 1641417191
                                                                                              - v903))
                                                + 1
                                                + (v919 ^ 0xC6FEBBB4)) ^ 0x972D12A6);
}

void sub_1CF3141D4()
{
  int v0;
  int v1;

  LODWORD(STACK[0x648]) = STACK[0x660];
  LODWORD(STACK[0x64C]) = STACK[0x678];
  LODWORD(STACK[0x678]) = STACK[0x658];
  LODWORD(STACK[0x660]) = v0;
  LODWORD(STACK[0x670]) = v1;
  JUMPOUT(0x1CF31118CLL);
}

uint64_t sub_1CF31420C@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, int a6@<W7>, int a7@<W8>)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  unsigned int v62;
  int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  int v81;
  int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  int v107;
  int v108;
  int v109;

  LODWORD(STACK[0x61C]) = LODWORD(STACK[0x4D0]) + LODWORD(STACK[0x494]);
  LODWORD(STACK[0x620]) = LODWORD(STACK[0x4EC]) + LODWORD(STACK[0x46C]);
  LODWORD(STACK[0x624]) = LODWORD(STACK[0x4D4]) + LODWORD(STACK[0x49C]);
  LODWORD(STACK[0x628]) = LODWORD(STACK[0x4B4]) + v8;
  LODWORD(STACK[0x64C]) = LODWORD(STACK[0x4E0]) + LODWORD(STACK[0x4AC]);
  LODWORD(STACK[0x648]) = LODWORD(STACK[0x630]) + LODWORD(STACK[0x478]);
  v19 = (v10 ^ 0x565991E7) + (v15 ^ a4 ^ 0x9C ^ 0x59572950);
  v20 = LODWORD(STACK[0x4E8]) | 0x3C8;
  LODWORD(STACK[0x680]) = v20;
  v21 = (v20 - 806970369) & 0x301963DC;
  LODWORD(STACK[0x5FC]) = v21;
  v22 = ((v17 ^ a1 ^ 0x5EBEE48) + 117419772 - 2 * ((v21 ^ 0x3D7) & (v17 ^ a1) ^ (v17 ^ a1 ^ 0x5EBEE48) & 0x6FFAEFF)) ^ a5;
  LODWORD(STACK[0x630]) = ((v14 ^ 0x45DA8C2F) + (v14 ^ v11 ^ 0x68D39BC3) + 1) ^ (v19 + 1) ^ (((v22
                                                                                             - 755570669
                                                                                             - ((2 * v22) & 0xA5EDD026)) ^ v11)
                                                                                           - v22);
  v23 = ((2 * (a5 ^ a1)) & 0xC3AC13CE ^ 0x40A80084) + (a5 ^ a1 ^ 0x59A2DBA5);
  v24 = v7 ^ a1;
  v25 = (v23 + v18) ^ v16;
  v26 = (v7 ^ 0xCC9102D5 ^ v25) + (v25 ^ 0x7ADC05E2);
  LODWORD(STACK[0x60C]) = v26;
  v27 = v23 + v18 + (v24 ^ 0x6185ADC6);
  v28 = (v24 ^ 0x6185ADC6) + 2106400820 + v23;
  v29 = (v27 + 996184822 - ((2 * v27) & 0x76C125EC)) ^ LODWORD(STACK[0x670]);
  v30 = v24 ^ 0xAEBD6B7A ^ (v29 - ((2 * v29) & 0x9E718D78) - 818362692);
  v31 = v15 ^ v14 ^ 0x106ADF22;
  v32 = v15 ^ a7;
  v33 = v31 ^ v13;
  v34 = v15 ^ a7 ^ 0xB0A16073;
  v35 = ((2 * (v34 + v31)) & 0x7BDBF97E) + ((v34 + v31) ^ 0xBDEDFCBF);
  v36 = a7 ^ 0xD9D3EF95 ^ v33;
  v33 ^= 0x2A7EF55Bu;
  v37 = v36 + v33;
  v38 = v33 + v34;
  v39 = v28 ^ v24;
  v40 = v28 ^ v24 ^ 0xBB8164AB ^ ((v25 ^ 0x7ADC05E2)
                                + (v24 ^ 0x6185ADC6)
                                - ((2 * ((v25 ^ 0x7ADC05E2) + (v24 ^ 0x6185ADC6))) & 0xB40992DA)
                                - 637220499);
  v41 = (-1108476737 - v35 + (LODWORD(STACK[0x4D8]) ^ (v35 + 1108476737))) ^ ((v32 ^ 0x4F5E9F8C)
                                                                            + (LODWORD(STACK[0x660]) ^ 0x62578860 ^ v32)
                                                                            + 1) ^ (((v30
                                                                                    - 755570669
                                                                                    - ((2 * v30) & 0xA5EDD026)) ^ LODWORD(STACK[0x660]))
                                                                                  - v30);
  v42 = (v39 ^ 0x6185ADC6) - 2015341591;
  v43 = ((v39 ^ 0x6185ADC6) - ((2 * v42) & 0xA5EDD026) + 1524055036) ^ LODWORD(STACK[0x658]);
  v35 += 561327452;
  v44 = v35 ^ v32;
  v45 = v44 ^ 0xB8BE1B51 ^ (v38 - ((2 * v38) & 0x103EF644) + 136280866);
  LODWORD(STACK[0x660]) = v41 - v37;
  v46 = v37 + ((2 * v44) ^ 0x9EBD3F19);
  v47 = v28
      - 373924400
      + (v39 ^ 0x6185ADC6)
      - ((2 * (v28 - 373924400 + (v39 ^ 0x6185ADC6)) + 1012132914) & 0xF4269020)
      + 406666793;
  v48 = (v43 + 2048083984 - ((2 * v43) & 0xF4269020)) ^ v47;
  v49 = (v44 ^ 0xB0A16073) - ((2 * (v44 ^ 0xB0A16073) + 264284114) & 0x51ED6698) + 819398453;
  v50 = (v49 ^ 0xA8F6B34C) + v35 + 1398160165 - ((2 * ((v49 ^ 0xA8F6B34C) + v35)) & 0xA6AC764A);
  v51 = ((v50 ^ 0xACA9C4DA) + (LODWORD(STACK[0x634]) ^ 0x6836A9D3 ^ v50) + 1) ^ ((v49 ^ 0x57094CB3)
                                                                               + (LODWORD(STACK[0x634]) ^ 0x939621BA ^ v49)
                                                                               + 1) ^ (((v48
                                                                                       + 996184822
                                                                                       - ((2 * v48) & 0x76C125EC)) ^ LODWORD(STACK[0x634]))
                                                                                     - v48);
  v52 = v49 ^ 0xFBA08869 ^ v50;
  LODWORD(STACK[0x670]) = v51 - (v46 + 1);
  v53 = v47 ^ v42;
  v54 = (v47 ^ 0x7A134810) - v40 - 917574440;
  v55 = ((2 * v39) ^ 0x3CF4A473) + v26 + 1;
  v56 = v53 ^ (v55 - ((2 * v55) & 0x17AAF07A) + 198539325);
  v53 ^= 0x7A134810u;
  v57 = v53 - 149654001;
  v58 = v54 + v53;
  v59 = (((v58 - 149654001) ^ v57) + 996184822 - ((2 * ((v58 - 149654001) ^ v57)) & 0x76C125EC)) ^ LODWORD(STACK[0x640]);
  v60 = ((2 * ((v56 ^ 0x71C6302D) - v57)) & 0x7FE7FD5E) + (((v56 ^ 0x71C6302D) - v57) ^ 0x3FF3FEAF);
  v61 = (v50 ^ 0x53563B25) - v45 - 917574440;
  v62 = v52 - ((2 * v52 - 299308002) & 0xC4457210) + 1496788759;
  v63 = v61 ^ (v45 - 1522579548);
  v64 = ((2 * ((v62 ^ 0x6222B908) + v61)) & 0x37EBBCB6) + (((v62 ^ 0x6222B908) + v61) ^ 0x1BF5DE5B);
  v65 = (v62 ^ 0x9DDD46F7) + 1;
  v66 = ((2 * (v65 + (v52 ^ (v46 + 1)))) & 0xBDFBF57A) + ((v65 + (v52 ^ (v46 + 1))) ^ 0x5EFDFABD);
  LODWORD(STACK[0x678]) = (469098075 - v64 + (LODWORD(STACK[0x4DC]) ^ (v64 - 469098075))) ^ (v65
                                                                                           + (LODWORD(STACK[0x678]) ^ 0xB0D4511B ^ v62)) ^ (((v59 - 755570669 - ((2 * v59) & 0xA5EDD026)) ^ LODWORD(STACK[0x678])) - v59);
  LODWORD(STACK[0x640]) = v60 - 1072955055 + LODWORD(STACK[0x4E4]);
  v67 = (v60 - 1072955055) ^ 0x6116043F;
  v68 = v58 - v60 + 923301054;
  v69 = v68 + v67 + 321578619 - ((2 * (v68 + v67)) & 0x2655CCF6);
  v70 = v68 + (v54 ^ (v40 - 1522579548));
  v71 = v68 ^ v57;
  v72 = ((2 * (v69 ^ v71)) & 0xFFFFE7D6 ^ 0x2655C4D6) + (v69 ^ v71 ^ 0x6CD51590);
  v73 = v64 - v66 + 1124605026;
  v74 = v73 + v63;
  v75 = v73 ^ v62;
  v76 = (v66 - 1593703101) ^ 0x6116043F;
  v77 = v73 + v76 - 1381915163 - ((2 * (v73 + v76)) & 0x5B434BCA);
  v78 = (v71 + 2050214687 - ((2 * v71) & 0xF467963E)) ^ v12;
  v79 = v75 ^ v77;
  LODWORD(STACK[0x634]) = (a2 ^ 0xDC9040D0) + v67 - 1279518142;
  v80 = (v75 ^ v77 ^ 0x307CE312) + (a3 ^ v75 ^ v77 ^ 0xBB6F52CF) + 1;
  v81 = (v77 ^ 0x525E5A1A) + 1;
  LODWORD(STACK[0x610]) = v80 ^ (v81 + (a3 ^ v77 ^ 0xD94DEBC7)) ^ (((v78 - 491817056 - ((2 * v78) & 0xC55EEF40)) ^ a6)
                                                                 - v78);
  v82 = (v74 - 1381915163 - ((2 * v74) & 0x5B434BCA)) ^ v77;
  v83 = ((2 * ((v77 ^ 0xADA1A5E5) + 619787686)) & 0x37FCD984) + (((v77 ^ 0xADA1A5E5) + 619787686) ^ 0x9BFE6CC2);
  v84 = ((v70 + 321578619 - ((2 * v70) & 0x2655CCF6)) ^ v69) - v67;
  v85 = ((v69 ^ 0xECD51984) + 2147483620 + v72 + 3122) ^ (v67 + 708838213 + (v69 ^ 0xECD51984));
  v86 = v79 ^ 0xCF831CED;
  v87 = (v81 + (v79 ^ 0xCF831CED)) ^ (v76 + 708838213 + (v77 ^ 0x525E5A1A));
  v88 = ((2 * ((v79 ^ 0xCF831CED) + 619787686)) & 0xE7DFE5F6) + (((v79 ^ 0xCF831CED) + 619787686) ^ 0xF3EFF2FB);
  v69 ^= 0x132AE67Bu;
  v89 = (v69 + 619787686) ^ LODWORD(STACK[0x63C]) ^ (v72 - ((2 * v72 + 1239581558) & 0xF467963E) + 522521818);
  v90 = (-202378501 - v88 + (LODWORD(STACK[0x4F0]) ^ (v88 + 202378501))) ^ (-1677824830
                                                                          - v83
                                                                          + (LODWORD(STACK[0x4F0]) ^ (v83 + 1677824830))) ^ (((v89 - 491817056 - ((2 * v89) & 0xC55EEF40)) ^ LODWORD(STACK[0x638])) - v89);
  v91 = (v69 - 907905183 + v72) ^ (v84 + 1279518142);
  v92 = v83 + 1880203331 + v88;
  v93 = v82 - v76;
  v94 = v90 - v87;
  v95 = v93 - 1025964751 - v86 - v87;
  v96 = (v92 ^ (v93 + 1279518142)) + 2005219388 - ((2 * (v92 ^ (v93 + 1279518142))) & 0xEF0A7078);
  v97 = v86 - v93;
  v98 = LODWORD(STACK[0x4F4]) ^ (v97 + 1025964751);
  v99 = v84 - v72 - v85 - 553954326 - ((2 * (v84 - v72 - v85 - 165048762)) & 0xD1A38B48);
  v100 = v72 - v84;
  v101 = v100 - 1121515804;
  v102 = v91 ^ LODWORD(STACK[0x62C]) ^ (v100 - ((2 * (v100 - 1121515804)) & 0xF467963E) + 928698883);
  v103 = STACK[0x668];
  v104 = ((v102 - 491817056 - ((2 * v102) & 0xC55EEF40)) ^ LODWORD(STACK[0x668])) - v102;
  LODWORD(STACK[0x490]) += LODWORD(STACK[0x670]);
  v105 = v95 - ((2 * v95 + 1721838164) & 0x4BCF7DC2) + 1496863755;
  LODWORD(STACK[0x650]) = v97
                        + 982853415
                        + (v105 ^ 0xA5E7BEE1)
                        + 1844978329
                        - ((2 * (v97 + 982853415 + (v105 ^ 0xA5E7BEE1))) & 0xDBF04532);
  v106 = v99 ^ (v84 - ((2 * (v84 - 1431793794)) & 0xD1A38B48) - 1820699358);
  LODWORD(STACK[0x494]) = LODWORD(STACK[0x61C]) + LODWORD(STACK[0x60C]);
  LODWORD(STACK[0x668]) = v106 - (v99 ^ 0xC2A1C2DD) + 842083502 - ((2 * (v106 - (v99 ^ 0xC2A1C2DD))) & 0x6462595C);
  LODWORD(STACK[0x48C]) += (v9 ^ 0x376629F) + (v7 ^ 0xB64D0737);
  v107 = LODWORD(STACK[0x488]) + (a7 ^ 0xC52E531) + LODWORD(STACK[0x630]);
  v108 = v105 ^ (v93 - ((2 * (v93 - 1431793794)) & 0x4BCF7DC2) + 1351634527);
  LODWORD(STACK[0x670]) = v108 - (v105 ^ 0x8F97B998) + 246711222 - ((2 * (v108 - (v105 ^ 0x8F97B998))) & 0x1D69076C);
  LODWORD(STACK[0x49C]) = LODWORD(STACK[0x624]) + v55;
  v109 = STACK[0x680];
  LODWORD(STACK[0x4A8]) = LODWORD(STACK[0x4A8]) + 1593703101 - v66 + LODWORD(STACK[0x678]);
  LODWORD(STACK[0x658]) = (v99 ^ 0xC2A1C2DD)
                        - (((2 * (v106 + v91)) & 0x7FCBE534 ^ 0x170BA024)
                         + ((v106 + v91) ^ 0xB46022A8))
                        + 1917632749;
  LODWORD(STACK[0x488]) = v107 + 1;
  LODWORD(STACK[0x4B4]) = LODWORD(STACK[0x628]) + 1585296259;
  LODWORD(STACK[0x4A4]) += v94;
  LODWORD(STACK[0x4AC]) = LODWORD(STACK[0x64C]) + v84 - 1431793794;
  LODWORD(STACK[0x4A0]) = LODWORD(STACK[0x4A0]) + 1279518142 - v76 + LODWORD(STACK[0x610]);
  LODWORD(STACK[0x4B0]) += (((v96 ^ 0x887AC7C3) + (v103 ^ 0x952A4F9C ^ v96) + 1) ^ (-1025964751 - v97 + v98) ^ v104)
                         - (v93
                          - 1431793794);
  LODWORD(STACK[0x498]) += LODWORD(STACK[0x660]);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x690] + 8 * (v109 ^ (2023 * ((STACK[0x440] & 1) == 0))))
                                         - 4))((v99 ^ 0xE8D1C5A4) + v101);
}

uint64_t sub_1CF314F80(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  _BOOL4 v14;

  v10 = STACK[0x5FC];
  LODWORD(STACK[0x478]) = LODWORD(STACK[0x648]) - 1201515184;
  LODWORD(STACK[0x660]) = v8 ^ 0xB5B06A8E;
  v11 = LODWORD(STACK[0x438]) + 19;
  v12 = 1026998764 - LODWORD(STACK[0x438]);
  LODWORD(STACK[0x600]) = a8 + 1613375152;
  LODWORD(STACK[0x680]) = a1 + ((v10 - 977) | 0x424) + ((v10 + 1004818475) & 0x441BAD2F) + 1947251800;
  LODWORD(STACK[0x480]) += LODWORD(STACK[0x640]);
  v13 = (((v11 & 0x46) + (v12 & 0x46)) & ((v12 & 0x51) + (v11 & 0x51))) + LODWORD(STACK[0x43C]);
  LODWORD(STACK[0x43C]) = v13;
  v14 = LODWORD(STACK[0x470]) < v13 - 1656956279;
  LODWORD(STACK[0x64C]) = a6 + 1093400803;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (v10 ^ (44 * v14))) - 4))();
}

uint64_t sub_1CF3150A8(int a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  char v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned __int16 v31;
  int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  int v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  unsigned int v49;
  int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  unsigned int v61;
  int v62;
  int v63;
  unsigned int v64;
  int v65;
  int v66;
  unsigned int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  unsigned int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  unsigned int v84;
  int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  int v99;
  int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  uint64_t v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  int v114;
  unsigned int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  unsigned int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  unsigned int v135;
  int v136;
  int v137;
  unsigned int v138;
  int v139;
  int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  unsigned int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  unsigned int v152;
  int v153;
  int v154;
  unsigned int v155;
  int v156;
  int v157;
  int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  unsigned int v176;
  unsigned __int16 v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  int v181;
  unsigned int v182;
  int v183;
  int v184;
  int v185;
  unsigned int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  unsigned int v191;
  int v192;
  int v193;
  unsigned int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  unsigned int v199;
  int v200;
  int v201;
  int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  int v210;
  unsigned int v211;
  int v212;
  unsigned int v213;
  int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned __int16 v219;
  int v220;
  unsigned __int16 v221;
  int v222;
  int v223;
  unsigned int v224;
  int v225;
  unsigned int v226;
  unsigned int v227;
  int v228;
  unsigned int v229;
  unsigned int v230;
  int v231;
  unsigned int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  unsigned int v238;
  int v239;
  int v240;
  unsigned int v241;
  int v242;
  unsigned int v243;
  int v244;
  int v245;
  unsigned int v246;
  int v247;
  unsigned int v248;
  int v249;
  unsigned int v250;
  int v251;
  int v252;
  unsigned int v253;
  int v254;
  unsigned int v255;
  int v256;
  unsigned int v257;
  int v258;
  unsigned __int16 v259;
  int v260;
  int v261;
  unsigned int v262;
  int v263;
  int v264;
  unsigned int v265;
  int v266;
  int v267;
  unsigned int v268;
  int v269;
  int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  unsigned int v287;
  int v288;
  int v289;
  unsigned int v290;
  unsigned int v291;
  int v292;
  int v293;
  int v294;
  int v295;
  int v296;
  unsigned int v297;
  int v298;
  unsigned int v299;
  int v300;
  int v301;
  unsigned int v302;
  int v303;
  int v304;
  unsigned int v305;
  int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  int v310;
  int v311;
  int v312;
  unsigned int v313;
  unsigned int v314;
  int v315;
  int v316;
  int v317;
  unsigned int v318;
  int v319;
  unsigned int v320;
  int v321;
  int v322;
  unsigned int v323;
  int v324;
  unsigned int v325;
  unsigned int v326;
  int v327;
  int v328;
  int v329;
  unsigned int v330;
  int v331;
  int v332;
  int v333;
  unsigned int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  int v340;
  int v341;
  int v342;
  unsigned int v343;
  int v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  int v348;
  int v349;
  unsigned int v350;
  int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  int v355;
  int v356;
  int v357;
  int v358;
  unsigned int v359;
  int v360;
  int v361;
  unsigned int v362;
  int v363;
  int v364;
  int v365;
  int v366;
  int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  unsigned int v372;
  int v373;
  int v374;
  unsigned int v375;
  unsigned int v376;
  unsigned int v377;
  unsigned int v378;
  unsigned int v379;
  unsigned int v380;
  unsigned int v381;
  unsigned int v382;
  int v383;
  int v384;
  unsigned int v385;
  int v386;
  unsigned int v387;
  int v388;
  int v389;
  int v390;
  int v391;
  unsigned int v392;
  int v393;
  int v394;
  unsigned int v395;
  int v396;
  unsigned int v397;
  int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  int v403;
  int v404;
  int v405;
  unsigned int v406;
  int v407;
  unsigned int v408;
  int v409;
  int v410;
  int v411;
  unsigned int v412;
  int v413;
  int v414;
  int v415;
  unsigned int v416;
  int v417;
  unsigned int v418;
  int v419;
  int v420;
  int v421;
  int v422;
  int v423;
  unsigned int v424;
  int v425;
  unsigned int v426;
  int v427;
  int v428;
  int v429;
  int v430;
  unsigned int v431;
  int v432;
  unsigned int v433;
  int v434;
  int v435;
  int v436;
  int v437;
  int v438;
  unsigned int v439;
  unsigned int v440;
  int v441;
  int v442;
  int v443;
  int v444;
  int v445;
  unsigned int v446;
  int v447;
  int v448;
  int v449;
  int v450;
  int v451;
  unint64_t v452;
  unsigned int v453;
  int v454;
  unsigned int v455;
  int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  int v461;
  unsigned __int16 v462;
  int v463;
  int v464;
  int v465;
  int v466;
  int v467;
  int v468;
  unsigned int v469;
  int v470;
  int v471;
  unsigned int v472;
  unsigned int v473;
  int v474;
  int v475;
  unsigned int v476;
  int v477;
  int v478;
  int v479;
  int v480;
  unsigned __int16 v481;
  int v482;
  int v483;
  unsigned int v484;
  int v485;
  int v486;
  unsigned int v487;
  unsigned int v488;
  int v489;
  unsigned int v490;
  int v491;
  int v492;
  unsigned int v493;
  int v494;
  unsigned int v495;
  int v496;
  int v497;
  unsigned int v498;
  int v499;
  int v500;
  int v501;
  unsigned int v502;
  int v503;
  unsigned int v504;
  unsigned int v505;
  unsigned int v506;
  unsigned int v507;
  unsigned int v508;
  unsigned int v509;
  unsigned int v510;
  int v511;
  int v512;
  int v513;
  int v514;
  int v515;
  int v516;
  int v517;
  int v518;
  int v519;
  int v520;
  int v521;
  unsigned int v522;
  unsigned int v523;
  int v524;
  unsigned int v525;
  int v526;
  int v527;
  int v528;
  int v529;
  int v530;
  int v531;
  int v532;
  unsigned int v533;
  int v534;
  int v535;
  int v536;
  unsigned int v537;
  int v538;
  char v539;
  unsigned int v540;
  int v541;
  int v542;
  unsigned int v543;
  int v544;
  int v545;
  int v546;
  int v547;
  unsigned int v548;
  int v549;
  int v550;
  int v551;
  unsigned int v552;
  unsigned int v553;
  int v554;
  unsigned int v555;
  int v556;
  int v557;
  unsigned int v558;
  int v559;
  unsigned int v560;
  int v561;
  unsigned int v562;
  int v563;
  int v564;
  int v565;
  unsigned int v566;
  unsigned int v567;
  unsigned int v568;
  int v569;
  int v570;
  int v571;
  int v572;
  unsigned int v573;
  int v574;
  unsigned int v575;
  unsigned int v576;
  int v577;
  int v578;
  int v579;
  int v580;
  int v581;
  int v582;
  unsigned int v583;
  int v584;
  unsigned int v585;
  unsigned int v586;
  unsigned int v587;
  int v588;
  int v589;
  int v590;
  unsigned int v591;
  int v592;
  int v593;
  int v594;
  unsigned int v595;
  int v596;
  unsigned int v597;
  int v598;
  unsigned int v599;
  int v600;
  int v601;
  int v602;
  int v603;
  int v604;
  unsigned __int16 v605;
  int v606;
  int v607;
  int v608;
  unsigned int v609;
  int v610;
  int v611;
  int v612;
  unsigned int v613;
  int v614;
  unsigned int v615;
  int v616;
  int v617;
  int v618;
  unsigned int v619;
  int v620;
  int v621;
  int v622;
  unsigned int v623;
  int v624;
  unsigned __int16 v625;
  int v626;
  int v627;
  unsigned int v628;
  int v629;
  unsigned int v630;
  int v631;
  int v632;
  unsigned int v633;
  int v634;
  unsigned int v635;
  int v636;
  int v637;
  int v638;
  unsigned int v639;
  unsigned int v640;
  int v641;
  int v642;
  unsigned int v643;
  int v644;
  unsigned int v645;
  int v646;
  int v647;
  unsigned int v648;
  int v649;
  int v650;
  int v651;
  int v652;
  uint64_t v653;

  v15 = LODWORD(STACK[0x488]) + LODWORD(STACK[0x658]);
  LODWORD(STACK[0x60C]) = v15;
  LODWORD(STACK[0x610]) = 2 * v15;
  v16 = v15 - ((((v9 - 806291793) & 0x300F09F9 ^ 0xB1963698) + 2 * v15) & 0x83499DBE);
  LODWORD(STACK[0x678]) = v13;
  v17 = LODWORD(STACK[0x48C]) - v10 - ((2 * (LODWORD(STACK[0x48C]) - v10) + 7831448) & 0x4ED27312);
  LODWORD(STACK[0x624]) = v9;
  v18 = (v9 - 303) | 0x2CE;
  LODWORD(STACK[0x3BC]) = v18;
  v19 = ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (((v16 - 1703941505) >> 24) & 0xF ^ 1) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (((v16 - 1703941505) >> 28) ^ 4) + 29939) % 0x3BEu) ^ 0x9C) << 12);
  LODWORD(STACK[0x620]) = a2;
  v20 = *(unsigned __int8 *)(v14
                           + (unsigned __int16)(91 * (((v16 - 1703941505) >> (v18 + 70)) & 0xF ^ 0xA) + 29939) % 0x3BEu);
  v21 = v19 | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (((v16 - 1703941505) >> 16) & 0xF ^ 4) + 29939)
                                       % 0x3BEu) ^ 0x9C;
  LODWORD(STACK[0x600]) = v16 - 1703941505;
  v22 = (v21 << 8) ^ ((v20 ^ 0x9C) << 12) | *(unsigned __int8 *)(v14
                                                               + (unsigned __int16)(91
                                                                                  * (((v16 - 1703941505) >> 8) & 0xF ^ 0xE)
                                                                                  + 29939)
                                                               % 0x3BEu) ^ 0x9C;
  LODWORD(STACK[0x540]) = a1;
  v23 = (v22 << 8) + 945220714 - ((v22 << 9) & 0x70ADD800);
  LOBYTE(v22) = v17 + 85;
  v24 = 16
      * (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (((v17 + 85) >> 4) ^ 8) + 28981) % 0x3BEu) ^ 0x9C);
  v25 = (v24 | ((*(unsigned __int8 *)(v14
                                    + (unsigned __int16)(91 * (((unsigned __int16)(v17 - 1707) >> 12) ^ 3) + 29939)
                                    % 0x3BEu) ^ 0x9C) << 12)) ^ ((((((*(unsigned __int8 *)(v14
                                                                                         + (unsigned __int16)(91 * (((v17 + 665123157) >> 24) & 0xF ^ 7) + 29939)
                                                                                         % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (((v17 + 665123157) >> 28) ^ 2) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (((v17 + 665123157) >> 16) & 0xF ^ 9) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (((v17 + 665123157) >> 20) & 0xF ^ 6) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (((v17 + 665123157) >> 8) & 0xF ^ 9) + 29939) % 0x3BEu) ^ 0x9C) << 8);
  v26 = v25 >> 8 >> ((v17 + 85) & 4) >> ((v17 + 85) & 4 ^ 4);
  v27 = v26 + 1565008774 - ((2 * v26) & 0x90470C);
  v28 = v23 ^ ((*(unsigned __int8 *)(v14
                                   + (unsigned __int16)(91 * (((unsigned __int16)(v16 - 5505) >> 12) ^ 0xC) + 29939)
                                   % 0x3BEu) ^ 0x9C) << 12);
  LODWORD(STACK[0x64C]) = a8;
  v29 = v28;
  v30 = 91
      * ((((unsigned __int16)v28 >> 12) & 0xFFFFFF0F | (16 * (((_BYTE)v26 - 122 - ((2 * (_BYTE)v26) & 0xC)) & 0xF))) ^ 0x6E);
  LODWORD(STACK[0x63C]) = v11;
  LODWORD(STACK[0x4F4]) = a4;
  v31 = (unsigned __int16)(91 * (((v16 + 127) >> 4) ^ 0xD) + 29939) % 0x3BEu;
  v32 = *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((112 - (_BYTE)v16) & 0xF) + 29939) % 0x3BEu) ^ 0x9C;
  v33 = (v28 ^ 0x3856EC6A | v32) ^ (16 * (*(unsigned __int8 *)(v14 + v31) ^ 0x9C));
  v34 = v32 & 0xF;
  LODWORD(STACK[0x5FC]) = v34;
  LOBYTE(v32) = *(_BYTE *)(v14 + (unsigned __int16)(91 * (v22 & 0xF ^ 9) + 29939) % 0x3BEu) ^ 0x9C;
  LOBYTE(v24) = v24 ^ v32;
  v35 = ((2 * (v34 & 0xFFFFFF0F | (16 * (v32 & 0xF)))) & 0xFFFFFF7F)
      + ((v34 & 0xFFFFFF0F | (16 * (v32 & 0xF))) ^ 0x8F3F4BBF);
  v36 = 16 * (LOBYTE(STACK[0xD71]) ^ 0x9C) - 642197885 - ((32 * (LOBYTE(STACK[0xD71]) ^ 0x9C)) & 0xD00);
  LODWORD(STACK[0x680]) = v36;
  v37 = (((77 - v35) | (v35 + 1891677618)) & 0x5B) * (v35 + 1891677618);
  v38 = *(unsigned __int8 *)(v14 + v37 - 958 * ((((v37 >> 1) * (unint64_t)v12) >> 32) >> 7)) ^ v36 ^ 0x9C;
  v39 = *(unsigned __int8 *)(v14
                           + 91 * (v38 ^ 0xD9B8D683)
                           + 63791
                           - 958
                           * (((((91 * (v38 ^ 0xD9B8D683) + 63791) >> 1) * (unint64_t)v12) >> 32) >> 7)) >> 4;
  LOWORD(v35) = (unsigned __int16)(91
                                 * (((v39 ^ 9) + (v8 ^ (2 * ((v39 ^ 9 | 0x7C) ^ v39))) - 99) ^ *(unsigned __int8 *)(v14 + 91 * v35 + 344001610 - 958 * (((((91 * v35 + 344001610) >> 1) * (unint64_t)v12) >> 32) >> 7)))
                                 - 31957)
              % 0x3BEu;
  LODWORD(STACK[0x5F8]) = v33;
  v40 = 91 * (v24 & 0xF0 | (v33 >> 4));
  v41 = v40 + 63791 - 958 * ((4483265 * (unint64_t)(v40 + 63791)) >> 32);
  v42 = 91
      * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v40 - 31957) % 0x3BEu) ^ (16
                                                                               * (*(unsigned __int8 *)(v14 + (unsigned __int16)v35) ^ 0x9C)) ^ 0x9C);
  v43 = (*(unsigned __int8 *)(v14
                            + (v42
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v42 + 63791)) >> 32))) >> 4) ^ 9;
  v44 = 91 * ((v25 >> 4) & 0xF0 | (v33 >> 8) & 0xF);
  v45 = 91
      * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v44 - 31957) % 0x3BEu) ^ (16
                                                                               * (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v43 - ((2 * v43) & 0x18) - 100) ^ *(unsigned __int8 *)(v14 + v41)) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v46 = v45 + 33579 - 958 * ((4483265 * (unint64_t)(v45 + 33579)) >> 32);
  v47 = *(unsigned __int8 *)(v14
                           + (v45
                                          + 63791
                                          - 958 * ((4483265 * (unint64_t)(v45 + 63791)) >> 32))) >> 4;
  v48 = 91
      * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v30 - 31957) % (((v30 + 33579) & 0x3BE) + ((212 - v30) & 0x3BE))) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (((v47 ^ 9) - 2 * ((v47 ^ 9) & 0xE ^ v47 & 2) - 100) ^ *(unsigned __int8 *)(v14 + (v44 + 63791 - 958 * ((4483265 * (unint64_t)(v44 + 63791)) >> 32)))) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v49 = ((*(unsigned __int8 *)(v14
                             + (v48
                                            + 33579
                                            - 958 * ((4483265 * (unint64_t)(v48 + 33579)) >> 32))) ^ 0x9C) << 12) ^ ((*(unsigned __int8 *)(v14 + v46) ^ 0x9C) << 8);
  LODWORD(STACK[0x660]) = v49;
  LODWORD(STACK[0x5F0]) = v29;
  v50 = ((v49 >> 8) & 0xF0 | ((unsigned __int16)v29 >> 12)) ^ 0xE;
  v51 = 91 * v50 + 932117747 - ((182 * v50) & 0xF9E6);
  LODWORD(STACK[0x61C]) = (v51 ^ 0x378EFCF3u) % (v51 & 0x3BE ^ 0x30C | v51 & 0x3BE ^ 0xB2u);
  v52 = 91 * (((2 * v38) & 0x2E2 ^ 2) + (v38 ^ 0xD9B8D7F2));
  v53 = v52 - 958 * ((((v52 >> 1) * (unint64_t)v12) >> 32) >> 7);
  v54 = (*(unsigned __int8 *)(v14
                            + (v48
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v48 + 63791)) >> 32))) >> 4) ^ 9;
  LOBYTE(v30) = *(_BYTE *)(v14 + (v30 + 63791 - 958 * ((4483265 * (unint64_t)(v30 + 63791)) >> 32)));
  v55 = 91 * ((v27 & 0xF0 | HIWORD(v29) & 0xF) ^ 0x86);
  v56 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v55 - 31957) % 0x3BEu) ^ (16
                                                                              * (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v54 - ((2 * v54) & 0x18) - 100) ^ v30) - 31957) % 0x3BEu) ^ 0x9C));
  v57 = 91 * (v56 ^ 0x9C);
  v58 = v57 + 33579 - 958 * (((((v57 + 33579) >> 1) * (unint64_t)v12) >> 32) >> 7);
  v59 = (*(unsigned __int8 *)(v14
                            + v57
                            + 63791
                            - 958
                            * (((((v57 + 63791) >> 1) * (unint64_t)v12) >> 32) >> 7)) >> 4) ^ 9;
  v60 = (v59 - ((2 * v59) & 0x18) - 100) ^ *(unsigned __int8 *)(v14
                                                                               + (v55
                                                                                              + 63791
                                                                                              - 958
                                                                                              * ((4483265
                                                                                                * (unint64_t)(v55 + 63791)) >> 32)));
  LODWORD(STACK[0x638]) = a6;
  v61 = v56 & 0xE83 ^ 0xAE6F8E03 | v56 & 0xE83 ^ 0x80;
  v62 = STACK[0x490];
  v63 = LODWORD(STACK[0x490]) - 1170512278;
  LODWORD(STACK[0x630]) = v63;
  LODWORD(STACK[0x4E0]) = v10;
  v64 = ((((-370 - v60) & 0xB8650F53 | (v60 + 369) & 0x353) - (((1170512277 - v62) & 0xB8650F50) + (v63 & 0xB8650F50))) | ((v60 + 369) & 0x2DB | (-370 - v60) & 0xAE6F8EDB) ^ v61)
      * (v60 + 369);
  v65 = 91 * (((v27 >> 4) & 0xF0 | (v23 >> 20) & 0xF) ^ 0x35);
  v66 = 91
      * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v65 - 31957) % 0x3BEu) ^ (16
                                                                               * (*(unsigned __int8 *)(v14 + v64 - 958 * ((((v64 >> 1) * (unint64_t)v12) >> 32) >> 7)) ^ 0x9C)) ^ 0x9C);
  v67 = v66 + 33579 - 958 * ((4483265 * (unint64_t)(v66 + 33579)) >> 32);
  v68 = *(unsigned __int8 *)(v14
                           + (v66
                                          + 63791
                                          - 958 * ((4483265 * (unint64_t)(v66 + 63791)) >> 32))) >> 4;
  LOWORD(v68) = (unsigned __int16)(91
                                 * (((v68 ^ 9) - 2 * ((v68 ^ 9) & 0xE ^ v68 & 2) - 100) ^ *(unsigned __int8 *)(v14 + (v65 + 63791 - 958 * ((4483265 * (unint64_t)(v65 + 63791)) >> 32))))
                                 - 31957)
              % 0x3BEu;
  v69 = *(unsigned __int8 *)(v14 + v58);
  LODWORD(STACK[0x5EC]) = HIBYTE(v23);
  LODWORD(STACK[0x5E4]) = v23;
  v70 = ((*(unsigned __int8 *)(v14 + v67) ^ 0x9C) << 20) ^ ((v69 ^ 0x9C) << 16);
  LODWORD(STACK[0x5D4]) = v70;
  v71 = *(unsigned __int8 *)(v14 + (unsigned __int16)v68);
  v72 = (v27 >> 8) & 0xF0 ^ ((v30 & 0xF ^ 0xC) + (v30 & 0xF ^ 3)) & (HIBYTE(v23) ^ 0x18) ^ 0x20;
  v73 = ((v71 & 0x5B ^ 0x18) + (v71 & 0x5B ^ 0x43)) * (v72 + 369);
  v74 = 91
      * (*(unsigned __int8 *)(v14 + (v73 - 958 * ((4483265 * (unint64_t)v73) >> 32))) ^ (16 * (v71 ^ 0x9C)) ^ 0x9C);
  v75 = *(unsigned __int8 *)(v14
                           + (v74
                                          + 63791
                                          - 958 * ((4483265 * (unint64_t)(v74 + 63791)) >> 32))) >> 4;
  v76 = *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (((v27 >> 12) & 0xF0 | (v23 >> 28)) ^ 0x83) - 31957) % 0x3BEu) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (((v75 ^ 9) - 2 * ((v75 ^ 9) & 0xE ^ v75 & 2) - 100) ^ *(unsigned __int8 *)(v14 + (91 * v72 + 63791 - 958 * ((4483265 * (unint64_t)(91 * v72 + 63791)) >> 32)))) - 31957) % 0x3BEu) ^ 0x9C));
  v77 = *(unsigned __int8 *)(v14
                           + (v42
                                          + 33579
                                          - 958 * ((4483265 * (unint64_t)(v42 + 33579)) >> 32))) ^ 0x9C;
  v78 = *(unsigned __int8 *)(v14 + v53) ^ 0x9C;
  LODWORD(STACK[0x5B8]) = v78;
  v79 = v78 ^ (16 * v77);
  LODWORD(STACK[0x5BC]) = v79;
  v80 = *(unsigned __int8 *)(v14
                           + (v74
                                          + 33579
                                          - 958 * ((4483265 * (unint64_t)(v74 + 33579)) >> 32)));
  v81 = LODWORD(STACK[0x660]) ^ v79;
  LODWORD(STACK[0x5C0]) = v81;
  v82 = *(unsigned __int8 *)(v14
                           + (91 * (v76 ^ 0x9C)
                                          + 33579
                                          - 958 * ((4483265 * (unint64_t)(91 * (v76 ^ 0x9Cu) + 33579)) >> 32))) ^ 0xC;
  LODWORD(STACK[0x5C8]) = v70 ^ v81;
  v83 = v70 ^ v81 ^ ((v80 ^ 0x9C) << 24);
  LODWORD(STACK[0x5D8]) = v83;
  v84 = ((v83 ^ (v82 << 28)) >> 28) + 1370249528 - 16 * ((v83 ^ (v82 << 28)) >> 31);
  v85 = LODWORD(STACK[0x670]) ^ 0xEB483B6;
  v86 = STACK[0x63C];
  v87 = LODWORD(STACK[0x63C]) ^ 0x8B85D032;
  LODWORD(STACK[0x62C]) = v87 - 1306764790;
  v88 = ((2 * (v85 - (v87 - 1306764790))) & 0xB6E5BAF2) + ((v85 - (v87 - 1306764790)) ^ 0xDB72DD79);
  LODWORD(STACK[0x628]) = v88;
  v89 = STACK[0x638];
  v90 = (LODWORD(STACK[0x668]) ^ 0x32312CAE) - LODWORD(STACK[0x638]) - 1916168048;
  v91 = ((2 * v90) & 0x7E2DCFFA) + (v90 ^ 0xBF16E7FD);
  v92 = LODWORD(STACK[0x658]) - v91;
  LODWORD(STACK[0x670]) = v92;
  LODWORD(STACK[0x4D8]) = v91;
  v93 = v92 + LODWORD(STACK[0x494]) - ((2 * (v92 + LODWORD(STACK[0x494])) + 43115920) & 0xAA95EF4C) + 1452534382;
  v94 = v10 - v88;
  v95 = LODWORD(STACK[0x498]) - (v10 - v88) - ((2 * (LODWORD(STACK[0x498]) - (v10 - v88)) + 224797148) & 0xA3E40BA);
  v96 = ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (HIBYTE(v93) & 0xF ^ 5) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v93 >> 28) ^ 0xD) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (BYTE2(v93) & 0xF ^ 0xA) + 29939) % 0x3BEu) ^ 0x9C;
  LOWORD(v62) = (unsigned __int16)(91
                                 * ((unsigned __int16)~(v92
                                                      + LOWORD(STACK[0x494])
                                                      - ((2 * (v92 + LOWORD(STACK[0x494])) - 6768) & 0xEF4C)
                                                      - 5522) >> 12)
                                 + 29939)
              % 0x3BEu;
  LOWORD(v88) = (v92 + LOBYTE(STACK[0x494]) - ((2 * (v92 + LOBYTE(STACK[0x494])) - 112) & 0x4C) + 110) >> 4;
  LODWORD(STACK[0x5E8]) = v93;
  v97 = (v96 << 8) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)v62) ^ 0x9C)) ^ (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v93 >> 8) & 0xF ^ 7) + 29939) % 0x3BEu) ^ 0x9C | ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v93 >> 20) & 0xF ^ 4) + 29939) % 0x3BEu) ^ 0x9C) << 12));
  v98 = (v97 << 8) + 1064268309 - ((v97 << 9) & 0x7EDEE400);
  v99 = *(unsigned __int8 *)(v14
                           + (unsigned __int16)(91 * (((v95 + 1808937291) >> 8) & 0xF) + 29939) % 0x3BEu);
  v100 = ((((*(unsigned __int8 *)(v14
                                + (unsigned __int16)(91 * (((v95 + 1808937291) >> 24) & 0xF ^ 5) + 29939)
                                % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14
                                                                               + (unsigned __int16)(91 * ((v95 + LODWORD(STACK[0x394])) >> 28)
                                                                                                  + 29939)
                                                                               % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (~((v95 + 1808937291) >> 16) & 0xF) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (((v95 + 1808937291) >> 20) & 0xF ^ 1) + 29939) % 0x3BEu) ^ 0x9C) << 12);
  v101 = ((v100 | v99 ^ 0x9C) << 8) - 505913754 - (((v100 | v99 ^ 0x9C) << 9) & 0xC3B0BC00);
  v102 = *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v95 + 12619) & 0xF ^ 0xD) + 29939) % 0x3BEu);
  v103 = v101 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(91 * (((unsigned __int16)(v95 + 12619) >> 12) ^ 2) + 29939)
                                     % 0x3BEu) ^ 0x9C) << 12);
  v104 = (v103 ^ 0xE1D85E66 | v102 ^ 0x9C) ^ (16
                                            * (*(unsigned __int8 *)(v14
                                                                  + (unsigned __int16)(91
                                                                                     * (((v95 + 75) >> 4) ^ 5)
                                                                                     + 29939)
                                                                  % 0x3BEu) ^ 0x9C));
  v105 = ((v102 ^ 0x61u) & 0xF1) + (v102 & 0xF1 ^ 0x90);
  LODWORD(STACK[0x5A0]) = v84;
  v106 = *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (v93 & 0xF ^ 6) + 29939) % 0x3BEu) ^ 0x9C;
  v107 = v98 ^ 0x3F6F7215 | v106;
  LODWORD(STACK[0x5B0]) = v106 & 0xF;
  v108 = v106 & 2;
  v109 = v106 & 0xF | (16 * (v104 & ((v84 ^ 0x51AC5937) + (v84 ^ 0x51AC5938))));
  v110 = v109 - 294619715 - 2 * (v109 & 0x6E7075BF ^ v108);
  v111 = 91 * (v110 ^ 0xEE7075BD);
  v112 = v107 ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (v88 ^ 0xA) + 29939) % 0x3BEu) ^ 0x9C));
  v113 = 91
       * (*(unsigned __int8 *)(v14 + (v111 + 33579) % 0x3BE) ^ (16 * (*(unsigned __int8 *)(v14 + v105) ^ 0x9C)) ^ 0x9C);
  LODWORD(STACK[0x5AC]) = v113;
  v114 = *(unsigned __int8 *)(v14
                            + (v113
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v113 + 63791)) >> 32))) >> 4;
  v115 = 91
       * (((v110 & 0x6DE322C ^ 0x650302C | v110 & 0x6DE322C ^ 0x808E0200) ^ 0x86DE335D)
        + (((v114 ^ 9) + ((2 * ((v114 ^ 9 | 0x7C) ^ v114)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(v14 + (v111 + 63791) % 0x3BE)));
  LODWORD(STACK[0x598]) = v112;
  v116 = 91 * (v104 & 0xF0 | (v112 >> 4));
  v117 = 91
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v116 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v14 + v115 % 0x3BE) ^ 0x9C)) ^ 0x9C);
  LODWORD(STACK[0x594]) = v117;
  v118 = *(unsigned __int8 *)(v14
                            + (v117
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v117 + 63791)) >> 32))) >> 4;
  v119 = 91 * ((v104 >> 4) & 0xF0 | (v112 >> 8) & 0xF);
  v120 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v119 - 31957) % 0x3BEu) ^ (16
                                                                                * (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (((v118 ^ 9) + ((2 * ((v118 ^ 9 | 0x7C) ^ v118)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(v14 + (v116 + 63791 - 958 * ((4483265 * (unint64_t)(v116 + 63791)) >> 32)))) - 31957) % 0x3BEu) ^ 0x9C));
  v121 = 91 * (v120 ^ 0x9C);
  LODWORD(STACK[0x588]) = v121;
  v122 = *(unsigned __int8 *)(v14 + (v121 + 63791) % 0x3BEu) >> 4;
  LOWORD(v119) = (unsigned __int16)(91
                                  * (((v122 ^ 9) + ~(2 * ((v122 ^ 9) & 0xE ^ v122 & 2)) - 99) ^ *(unsigned __int8 *)(v14 + (v119 + 63791 - 958 * ((4483265 * (unint64_t)(v119 + 63791)) >> 32))))
                                  - 31957)
               % 0x3BEu;
  v123 = ((v103 >> 8) & 0xF0 | ((unsigned __int16)v98 >> 12)) ^ 0x57;
  v124 = 91
       * (*(unsigned __int8 *)(v14
                             + 91 * ((((v120 & 0x3B6 ^ 0x94) + (v120 & 0x3B6 ^ 0xE68F4322)) ^ 0xE68F42C7) + v123)
                             % 0x3BE) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)v119) ^ 0x9C)) ^ 0x9C);
  LODWORD(STACK[0x584]) = v124;
  v125 = (v91 + 1089017859) ^ (v89 + 1916168048);
  LODWORD(STACK[0x498]) = v125;
  v126 = v87 - 2 * ((v87 + 2308616) & 0xF13484D ^ v86 & 5);
  v127 = (*(unsigned __int8 *)(v14
                             + (v124 + 63791)
                             % ((((v94 + 10431508) & 0x186CFFF) + ((23122923 - v94) & 0x186CFFF)) & 0x20813BEu)) >> 4) ^ 9;
  v128 = 91 * (((v103 >> 12) & 0xF0 | HIWORD(v98) & 0xF) ^ 0x8F);
  v129 = 91
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v128 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v127 - ((2 * v127) & 0x18) - 100) ^ *(unsigned __int8 *)(v14 + (91 * v123 + 63791 - 958 * ((4483265 * (unint64_t)(91 * v123 + 63791)) >> 32)))) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  LODWORD(STACK[0x580]) = v129;
  v130 = *(unsigned __int8 *)(v14
                            + (v129
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v129 + 63791)) >> 32))) >> 4;
  LOWORD(v128) = (unsigned __int16)(91
                                  * (((v130 ^ 9) + ((2 * ((v130 ^ 9 | 0x7C) ^ v130)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(v14 + (v128 + 63791 - 958 * ((4483265 * (unint64_t)(v128 + 63791)) >> 32))))
                                  - 31957)
               % 0x3BEu;
  v131 = 91 * ((HIWORD(v101) & 0xF0 | (v98 >> 20) & 0xF) ^ 0xD6);
  v132 = 91
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v131 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v14 + (unsigned __int16)v128) ^ 0x9C)) ^ 0x9C);
  LODWORD(STACK[0x570]) = v132;
  v133 = (*(unsigned __int8 *)(v14
                             + (v132
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v132 + 63791)) >> 32))) >> 4) ^ 9;
  v134 = (v133 - ((2 * v133) & 0x18) - 100) ^ *(unsigned __int8 *)(v14
                                                                                  + (v131
                                                                                                 + 63791
                                                                                                 - 958
                                                                                                 * ((4483265 * (unint64_t)(v131 + 63791)) >> 32)));
  v135 = 91 * (((2 * v134) & 0xE2) + (v134 ^ 0x171));
  v136 = 91 * (((v101 >> 20) & 0xF0 | HIBYTE(v98) & 0xF) ^ 0x1F);
  v137 = 91
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v136 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v14 + (v135 - 958 * ((4483265 * (unint64_t)v135) >> 32))) ^ 0x9C)) ^ 0x9C);
  v138 = v137 + 33579 - 958 * ((4483265 * (unint64_t)(v137 + 33579)) >> 32);
  v139 = (*(unsigned __int8 *)(v14
                             + (v137
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v137 + 63791)) >> 32))) >> 4) ^ 9;
  LOWORD(v139) = (unsigned __int16)(91
                                  * ((v139 - ((2 * v139) & 0x18) - 100) ^ *(unsigned __int8 *)(v14 + (v136 + 63791 - 958 * ((4483265 * (unint64_t)(v136 + 63791)) >> 32))))
                                  - 31957)
               % 0x3BEu;
  LODWORD(STACK[0x550]) = v98;
  v140 = *(unsigned __int8 *)(v14 + (unsigned __int16)v139) ^ 0x9C;
  v141 = 16 * v140 - 2080097253 - ((32 * v140) & 0xFFFFF83F);
  v142 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(91 * ((HIBYTE(v101) & 0xF0 | (v98 >> 28)) ^ 0xE3) - 31957) % 0x3BEu) ^ 0x9C;
  v143 = v142 + 248917175 - ((2 * v142) & 0x16E);
  v144 = v141 ^ v143 ^ 0x752DEF53;
  v143 ^= 0xED62CB7u;
  v145 = (v144 + v143 + 1) ^ ((v141 ^ 0x7BFBC3E4) + 1);
  v146 = ((*(unsigned __int8 *)(v14
                              + (91 * (((v145 - 2080097253 - ((2 * v145) & 0x8087836)) ^ v141) + v143) + 33579) % 0x3BE) ^ 0xC) << 28) ^ ((*(unsigned __int8 *)(v14 + v138) ^ 0x9C) << 24);
  LODWORD(STACK[0x558]) = v146;
  v147 = (HIBYTE(v146) & 0xF0 | (v98 >> 28)) ^ 3;
  v148 = v147 + 1059515998 - ((2 * v147) & 0xBC);
  LODWORD(STACK[0x518]) = v148;
  v149 = v89 - 2 * ((v89 + 540886894) & 0x62CD54F9 ^ STACK[0x678] & 1) - 2096456602;
  LODWORD(STACK[0x660]) = v149;
  v150 = LODWORD(STACK[0x670]) - 375646415;
  v151 = v125 ^ v149;
  LODWORD(STACK[0x670]) = v151;
  v152 = v150 + (v151 ^ 0x1D32AB07) - 18460779 - ((2 * (v150 + (v151 ^ 0x1D32AB07))) & 0xFDCC9F2A);
  v151 ^= 0x1C2B1B6Du;
  LODWORD(STACK[0x494]) = v151;
  v153 = v152 ^ v151;
  v154 = LODWORD(STACK[0x49C]) - 694670068 + v153;
  v155 = v154 - ((2 * v154) & 0xC978F5E0) + 1690073840;
  v156 = LODWORD(STACK[0x628]) + 613229191;
  LODWORD(STACK[0x48C]) = v156;
  v157 = v156 ^ LODWORD(STACK[0x62C]);
  LODWORD(STACK[0x490]) = v157;
  LODWORD(STACK[0x668]) = v126 - 281640368;
  v158 = v157 ^ (v126 - 281640368);
  LODWORD(STACK[0x678]) = v158;
  v159 = (v158 ^ 0xF0ECB7B7) + v94 - ((2 * ((v158 ^ 0xF0ECB7B7) + v94) - 1858185174) & 0xC396D9EC);
  v160 = 91 * (HIBYTE(v155) & 0xF ^ 4) + 29939;
  v161 = v160 - 958 * ((17513 * v160) >> 24);
  LODWORD(STACK[0x480]) = v158 ^ 0xEED824BE;
  v162 = (v159 - 1435854581) ^ v158 ^ 0xEED824BE;
  v163 = LODWORD(STACK[0x630]) - v162 - ((2 * (LODWORD(STACK[0x630]) - v162)) & 0x308F9856);
  v164 = 91 * ((v155 >> 20) & 0xF ^ 0xB) + 29939;
  v165 = v164 - 958 * ((17513 * v164) >> 24);
  v166 = 91 * ((BYTE2(v155) ^ 0x4C) + (BYTE2(v155) & 0xF0 ^ 0xBF) + 1) + 29939;
  v167 = ((2 * (v166 - 1916 * ((17513 * v166) >> 25))) & 0xD5C)
       + (((unsigned __int16)v166 % 0x77Cu) ^ 0xFFF5E6AE);
  if (v167 + 661842 >= 0x3BE)
    v168 = 2134898594;
  else
    v168 = 2134899552;
  v169 = ((*(unsigned __int8 *)(v14 + (unsigned __int16)v161) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v155 >> 28) ^ 6) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v14 + v167 - 2134237710 + v168) ^ 0x9C;
  LODWORD(STACK[0x578]) = v155;
  v170 = (v148 & 0x49 ^ 0x101) + (((unsigned __int16)v155 >> 12) ^ 7) + (v148 & 0x49 ^ 0x48);
  v171 = (v169 << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)v165) ^ 0x9C) << 12);
  v172 = *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v155 >> 8) & 0xF ^ 0xA) + 29939) % 0x3BEu) ^ 0x9C;
  v173 = (v171 | v172) - 2 * ((v171 | v172) & 0x2E090E9F ^ v172 & 0x10);
  v174 = *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (~(unsigned __int16)(v155 >> 4) & 0xF) + 29939) % 0x3BEu) ^ 0x9C;
  v175 = 16 * v174 + 761191722 - ((32 * v174) & 0x1A40);
  v173 -= 1375138161;
  v176 = ((v173 << 8) ^ 0x90E8F00) - 1001664299 - ((2 * ((v173 << 8) ^ 0x90E8F00)) & 0x8897A000);
  LODWORD(STACK[0x568]) = v176;
  v177 = (unsigned __int16)(91 * (v154 & 0xF) + 29939) % 0x3BEu;
  v178 = v163 - 1740125141;
  v179 = (((v163 - 1740125141) >> 28) ^ 9 | v175 & 0xE60 ^ 0xC20) + (v175 & 0xE60 ^ 0x34B70241);
  v180 = v176 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(91 * v170
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v170) >> 16) >> 8))) ^ 0x9C) << 12);
  LODWORD(STACK[0x560]) = v180;
  v181 = *(unsigned __int8 *)(v14 + v177) ^ 0x9C;
  v182 = ((v180 ^ 0xC44BD0D5 | v181) + 761191722 - ((2 * (v180 ^ 0xC44BD0D5 | v181)) & 0x5ABDBA54)) ^ v175;
  v183 = (v173 & 0x149 ^ 9 | v173 & 0x149 ^ 0x140) + (((unsigned __int16)v178 >> 12) ^ 0xC);
  v184 = *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (BYTE2(v178) & 0xF ^ 7) + 29939) % 0x3BEu) ^ 0x9C ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (HIBYTE(v178) & 0xF ^ 8) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (91 * v179 + 1122916472) % 0x3BE) ^ 0x9C) << 12) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v178 >> 20) & 0xF ^ 4) + 29939) % 0x3BEu) ^ 0x9C));
  LODWORD(STACK[0x530]) = v184;
  v185 = (v184 << 16) - 1228090538 - ((v184 << 17) & 0x6D980000);
  LODWORD(STACK[0x538]) = v185;
  v186 = ((v185 ^ 0xB6CCD356)
        + ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v178 >> 8) & 0xF ^ 0xC) + 29939) % 0x3BEu) ^ 0x9C) << 8)) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * v183 - 958 * ((unsigned __int16)((1593683 * v183) >> 16) >> 8))) ^ 0x9C) << 12);
  v187 = *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v178 >> 4) ^ 2) + 29939) % 0x3BEu) ^ 0x9C;
  v188 = *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (v178 & 0xF ^ 0xB) + 29939) % 0x3BEu) ^ 0x9C;
  LODWORD(STACK[0x4F8]) = v186;
  v189 = (v186 | v188) ^ (16 * v187);
  LODWORD(STACK[0x510]) = v189;
  v190 = v181 & 0xF;
  LODWORD(STACK[0x548]) = v190;
  v191 = 91 * (v190 & 0xFFFFFF0F | (16 * (v188 & 0xF)));
  v192 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v191 - 31957) % 0x3BEu) ^ 0x9C;
  v193 = STACK[0x680];
  v194 = 91 * ((v192 - 642197885 - ((2 * v192) & 0xFFFFFF07)) ^ LODWORD(STACK[0x680]));
  LODWORD(STACK[0x508]) = v194;
  v195 = (*(unsigned __int8 *)(v14 + (v194 + 63791) % 0x3BE) >> 4) ^ 9;
  LOWORD(v191) = 91
               * ((v195 - ((2 * v195) & 0x18) - 100) ^ *(unsigned __int8 *)(v14
                                                                                           + (v191 + 63791 - 958 * ((4483265 * (unint64_t)(v191 + 63791)) >> 32))))
               + 32621;
  LODWORD(STACK[0x520]) = v182;
  v196 = 91 * (v189 & 0xF0 | (v182 >> 4));
  LODWORD(STACK[0x500]) = v196;
  v197 = 91
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v196 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v14 + (unsigned __int16)v191 % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  LODWORD(STACK[0x4FC]) = v197;
  v198 = *(unsigned __int8 *)(v14
                            + (v197
                                           + 33579
                                           - 958 * ((4483265 * (unint64_t)(v197 + 33579)) >> 32))) ^ 0x9C;
  LODWORD(STACK[0x528]) = 16 * v198 - 1358236557 - ((32 * v198) & 0x8E0);
  LOBYTE(v198) = (-5 - (16 * v198 + 115 - 32 * v198)) & 0x50;
  v199 = v182 >> 4 >> (((v198 ^ 0x54) + v198) & 0xA4);
  v200 = v199 - ((2 * v199) & 0x169F012) + 565508105;
  LODWORD(STACK[0x4EC]) = v200;
  v201 = 91 * ((v186 >> 8) & 0xF0 | (v200 >> 4));
  LODWORD(STACK[0x4F0]) = v201;
  LODWORD(STACK[0x5F4]) = (v201 + 63791) % (((720 - v201) ^ (v201 + 63791)) & 0x3BEu);
  LODWORD(STACK[0x4E8]) = v153 ^ 0x2A4CA161;
  v202 = (v153 ^ 0x2A4CA161) - ((2 * (v153 ^ 0x2A4CA161) + 21727172) & 0x7217062) + 3570707;
  LODWORD(STACK[0x420]) = v202;
  v203 = ((2 * v202) & 0xAFAD3FDE ^ 0xAD812F96) + (v202 ^ 0x293E4824);
  v204 = v203 + LODWORD(STACK[0x4A0]);
  LODWORD(STACK[0x630]) = v203;
  v205 = v204 - ((2 * v204 - 1204749586) & 0xC5B4E66A) + 1056108716;
  LODWORD(STACK[0x4DC]) = v162 ^ 0x2A4CA161;
  v206 = (v162 ^ 0x2A4CA161) - ((2 * (v162 ^ 0x2A4CA161) + 155944900) & 0xC3F194C) + 46485640;
  LODWORD(STACK[0x628]) = v206;
  v207 = ((2 * v206) & 0xFFCBBBEA ^ 0xF6CB82A8) + (v206 ^ 0x84823EA9);
  v208 = LODWORD(STACK[0x484]) - v207;
  LODWORD(STACK[0x62C]) = v207;
  v209 = v208 + 1772783759 + LODWORD(STACK[0x634]) - ((2 * (v208 + 1772783759 + LODWORD(STACK[0x634]))) & 0x1278DA9C);
  v210 = 91 * (HIWORD(v205) & 0xF ^ 0xA) + 29939;
  v211 = (unsigned __int16)v210 % 0x3BEu
       - 440906466
       - ((2 * (v210 - 958 * ((17513 * v210) >> 24))) & 0x23C);
  v212 = *(unsigned __int8 *)(v14 + (v211 ^ 0xE5B84D1E)) ^ 0x9C;
  v213 = 91
       * ((v211 & 0x148 ^ 0x40)
        + (((unsigned __int16)v205 >> 12) ^ 7)
        + (v211 & 0x148 ^ 0x108)
        + (v212 & 1)
        + !(v212 & 1));
  v214 = (((v212 - ((2 * v212) & 0x77777777) + 124709563) ^ 0xEABB | ((*(unsigned __int8 *)(v14
                                                                                          + (unsigned __int16)(91 * (HIBYTE(v205) & 0xF ^ 2) + 29939)
                                                                                          % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v205 >> 28) ^ 6) + 29939) % 0x3BEu) ^ 0x1C) << 12)) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v205 >> 20) & 0xF ^ 0xD) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v205 >> 8) & 0xF ^ 3) + 29939) % 0x3BEu) ^ 0x9C;
  LODWORD(STACK[0x4E4]) = v205;
  v215 = (v214 << 8) + 1158396442 - ((v214 << 9) & 0x8A177400);
  v209 -= 1992528562;
  v216 = *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (v205 & 0xF ^ 5) + 29939) % 0x3BEu);
  v217 = v215 ^ ((*(unsigned __int8 *)(v14 + v213 % 0x3BE) ^ 0x9C) << 12);
  LOBYTE(v213) = v216 ^ 0x9C;
  v218 = (v217 ^ 0x450BBA1A | v216 ^ 0x9C) ^ (16
                                            * (*(unsigned __int8 *)(v14
                                                                  + (unsigned __int16)(91
                                                                                     * ((v205 >> 4) ^ 3)
                                                                                     + 29939)
                                                                  % 0x3BEu) ^ 0x9C));
  v219 = 91 * (((unsigned __int16)v209 >> 12) ^ 6) + 29939;
  v220 = 91 * ((v209 >> 8) & 0xF ^ 0xD) + 29939;
  v221 = 91 * ((v209 >> 4) ^ 4) + 29939;
  v222 = ((((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v209 >> 28) ^ 8) + 29939) % 0x3BEu) ^ 0x9C) << 12) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((((v209 >> 28) ^ 7) + ((v209 >> 28) ^ 8)) & (HIBYTE(v209) ^ 0x89)) + 29939) % 0x3BEu) ^ 0x9C) << 8) | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (BYTE2(v209) & 0xF ^ 0xC) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v209 >> 20) & 0xF ^ 3) + 29939) % 0x3BEu) ^ 0x9C) << 12);
  LOBYTE(v209) = *(_BYTE *)(v14 + (unsigned __int16)(91 * (v209 & 0xF ^ 0xE) + 29939) % 0x3BEu) ^ 0x9C;
  v223 = v213 & 0xF;
  v224 = 91 * (v223 & 0xFFFFFF0F | (16 * (v209 & 0xF)));
  v225 = *(unsigned __int8 *)(v14 + (unsigned __int16)v220 % 0x3BEu) ^ (16
                                                                      * (*(unsigned __int8 *)(v14 + v219 % 0x3BEu) ^ 0x9C)) ^ 0x9C;
  v226 = v222 ^ v225;
  v227 = (v209 | (v226 << 8)) ^ (16 * (*(unsigned __int8 *)(v14 + v221 % 0x3BEu) ^ 0x9C));
  v228 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v224 - 31957) % 0x3BEu) ^ 0x9C;
  v229 = 91 * ((v228 - 642197885 + (~(2 * v228) | 0xFFFFFEF9) + 1) ^ v193);
  v230 = (v229 + 33579) % 0x3BE;
  v231 = *(unsigned __int8 *)(v14 + (v229 + 63791) % 0x3BE) >> 4;
  LOWORD(v224) = ((v231 ^ 9) - 2 * ((v231 ^ 9) & 0xE ^ v231 & 2) - 100) ^ *(unsigned __int8 *)(v14 + (v224 + 63791 - 958 * ((4483265 * (unint64_t)(v224 + 63791)) >> 32)));
  v232 = ((2 * (v227 & 0xF0 | (v218 >> 4))) & 0x1CC)
       + ((v227 & 0xF0 | (v218 >> 4)) ^ 0xCF7DF3E6);
  v233 = 91
       * (*(unsigned __int8 *)(v14 + (((v232 + 813829515) | (116 - v232)) & 0xA8 ^ 0xF3) * (v232 + 813829515) % 0x3BE) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * v224 - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v234 = *(unsigned __int8 *)(v14
                            + (v233
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v233 + 63791)) >> 32))) >> 4;
  v235 = *(unsigned __int8 *)(v14
                            + (v233
                                           + 33579
                                           - 958 * ((4483265 * (unint64_t)(v233 + 33579)) >> 32)));
  v236 = 91 * ((v218 >> 8) & 0xF | (16 * ((v235 & 0xF ^ 3 | v235 & 0xF ^ 0xC) & (v227 >> 8))));
  v237 = 91
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v236 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (((v234 ^ 9) - 2 * ((v234 ^ 9) & 0xE ^ v234 & 2) - 100) ^ *(unsigned __int8 *)(v14 + (91 * v232 + 1044072045) % 0x3BE)) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v238 = v237 + 33579 - 958 * ((4483265 * (unint64_t)(v237 + 33579)) >> 32);
  v239 = *(unsigned __int8 *)(v14
                            + (v237
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v237 + 63791)) >> 32))) >> 4;
  v240 = 91 * ((v225 & 0xF0 | ((unsigned __int16)v217 >> 12)) ^ 0xB);
  v241 = v240 + 63791 - 958 * ((4483265 * (unint64_t)(v240 + 63791)) >> 32);
  v242 = 91
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v240 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (((v239 ^ 9) + ((2 * ((v239 ^ 9 | 0x7C) ^ v239)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(v14 + (v236 + 63791 - 958 * ((4483265 * (unint64_t)(v236 + 63791)) >> 32)))) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v243 = v242 + 33579 - 958 * ((4483265 * (unint64_t)(v242 + 33579)) >> 32);
  v244 = *(unsigned __int8 *)(v14
                            + (v242
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v242 + 63791)) >> 32))) >> 4;
  LOWORD(v244) = 91
               * (((v244 ^ 9) - 2 * ((v244 ^ 9) & 0xE ^ v244 & 2) - 100) ^ *(unsigned __int8 *)(v14 + v241))
               - 31957;
  v245 = 91 * (((v226 >> 4) & 0xF0 | HIWORD(v217) & 0xF) ^ 0xB);
  v246 = v245 + 63791 - 958 * ((4483265 * (unint64_t)(v245 + 63791)) >> 32);
  v247 = 91
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v245 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v14 + (unsigned __int16)v244 % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v248 = v247 + 33579 - 958 * ((4483265 * (unint64_t)(v247 + 33579)) >> 32);
  v249 = *(unsigned __int8 *)(v14
                            + (v247
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v247 + 63791)) >> 32))) >> 4;
  v250 = (unsigned __int16)(91
                          * (((v249 ^ 9) - 2 * ((v249 ^ 9) & 0xE ^ v249 & 2) - 100) ^ *(unsigned __int8 *)(v14 + v246))
                          - 31957)
       % 0x3BEu;
  v251 = (unsigned __int16)v250 + 1115069812 - ((2 * v250) & 0x2E8);
  v252 = (unsigned __int16)(v226 >> 8) >> ((v251 & 0x43 ^ 3 | v251 & 0x43 ^ 0x40) ^ 0x47);
  v253 = v252 - ((2 * v252) & 0x1D42) + 1852047009;
  v254 = 91 * (((v215 >> 20) & 0xF | (16 * (((_BYTE)v252 - ((2 * (_BYTE)v252) & 0x42) - 95) & 0xF))) ^ 0x10);
  v255 = v254 + 63791 - 958 * ((4483265 * (unint64_t)(v254 + 63791)) >> 32);
  v256 = 91
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v254 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v14 + (v251 ^ 0x42769D74u)) ^ 0x9C)) ^ 0x9C);
  v257 = v256 + 33579 - 958 * ((4483265 * (unint64_t)(v256 + 33579)) >> 32);
  v258 = (*(unsigned __int8 *)(v14
                             + (v256
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v256 + 63791)) >> 32))) >> 4) ^ 9;
  v259 = (unsigned __int16)(91
                          * ((v258 - ((2 * v258) & 0x18) - 100) ^ *(unsigned __int8 *)(v14 + v255))
                          - 31957)
       % 0x3BEu;
  v260 = *(unsigned __int8 *)(v14 + v230) ^ 0x9C;
  v261 = v260 ^ (16 * (v235 ^ 0x9C));
  v262 = (v261 | ((*(unsigned __int8 *)(v14 + v243) ^ 0x9C) << 12)) ^ ((*(unsigned __int8 *)(v14 + v248) ^ 0x9C) << 16);
  v263 = 91 * ((v253 & 0xF0 | HIBYTE(v215) & 0xF) ^ 0xA5);
  v264 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v263 - 31957) % 0x3BEu) ^ (16
                                                                                * (*(unsigned __int8 *)(v14 + v259) ^ 0x9C));
  v265 = v263 + 63791 - 958 * ((4483265 * (unint64_t)(v263 + 63791)) >> 32);
  v266 = 91 * (v264 ^ 0x9C);
  v267 = *(unsigned __int8 *)(v14
                            + (v266
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v266 + 63791)) >> 32))) >> 4;
  v268 = 91
       * (*(unsigned __int8 *)(v14
                             + (unsigned __int16)(91 * (((v253 >> 4) & 0xF0 | (v215 >> 28)) ^ 0xE4) - 31957) % 0x3BEu) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (((v267 ^ 9) + ((2 * ((v267 ^ 9 | 0x7C) ^ v267)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(v14 + v265)) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C)
       + 33579;
  v269 = *(unsigned __int8 *)(v14 + v238) ^ 0x9C;
  v270 = (v269 << 8) + 1220948600 - ((v269 << 9) & 0x6400);
  LOWORD(v223) = 91 * (v223 & 0xFF0F | (16 * (v260 & 0xF)))
               - 958 * ((unsigned __int16)((1593683 * (v223 & 0xFFFFFF0F | (16 * (v260 & 0xF)))) >> 16) >> 8);
  LOWORD(v269) = 91 * (v261 & 0xF0 | (v218 >> 4))
               - 958
               * ((unsigned __int16)((1593683 * (v261 & 0xF0 | (v218 >> 4))) >> 16) >> 8);
  v271 = v262 ^ ((*(unsigned __int8 *)(v14 + v257) ^ 0x9C) << 20);
  v272 = v271 ^ ((*(unsigned __int8 *)(v14
                                     + (v266
                                                    + 33579
                                                    - 958
                                                    * ((4483265 * (unint64_t)(v266 + 33579)) >> 32))) ^ 0x9C) << 24);
  v273 = v272 ^ ((*(unsigned __int8 *)(v14 + (v268 - 958 * ((4483265 * (unint64_t)v268) >> 32))) ^ 0xC) << 28);
  v274 = v270 ^ 0x48C63278 ^ v273;
  v275 = (v274 >> 4) & 0xF0 | (v218 >> 8) & 0xF;
  v276 = ((v274 >> 8) & 0xF0 | ((unsigned __int16)v217 >> 12)) ^ 0xB;
  v277 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(91 * v276
                                                 - 958 * ((unsigned __int16)((1593683 * v276) >> 16) >> 8))) ^ 0x9C) << 12) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * v275 - 958 * ((unsigned __int16)((1593683 * v275) >> 16) >> 8))) ^ 0x9C) << 8);
  LODWORD(STACK[0x634]) = v277;
  v278 = ((v262 >> 12) & 0xF0 | HIWORD(v217) & 0xF) ^ 0xB;
  v279 = HIWORD(v271) & 0xF0 | (v215 >> 20) & 0xF;
  v280 = ((v272 >> 20) & 0xF0 | HIBYTE(v215) & 0xF) ^ 5;
  v281 = (HIBYTE(v273) & 0xF0 | (v215 >> 28)) ^ 4;
  v282 = *(unsigned __int8 *)(v14 + (unsigned __int16)v223);
  LODWORD(STACK[0x4D4]) = v282;
  v283 = v282 ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)v269) ^ 0x9C)) ^ 0x9C;
  LODWORD(STACK[0x4D0]) = v283;
  v284 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(91 * v278
                                               - 958 * ((unsigned __int16)((1593683 * v278) >> 16) >> 8))) ^ 0x9C;
  v285 = v277 ^ v283;
  LODWORD(STACK[0x4A0]) = v285;
  v286 = v285 ^ (v284 << 16);
  v287 = v286 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(91 * v279
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v279) >> 16) >> 8))) ^ 0x9C) << 20);
  v288 = v287 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(91 * v280
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v280) >> 16) >> 8))) ^ 0x9C) << 24);
  v289 = ((((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (HIBYTE(v288) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v288 ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * v281 - 958 * ((unsigned __int16)((1593683 * v281) >> 16) >> 8))) ^ 0xCu) << 28)) >> 28) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (BYTE2(v286) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v287 >> 20) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 12);
  LODWORD(STACK[0x49C]) = v289;
  v290 = v203 + LODWORD(STACK[0x4A4]) - ((2 * (v203 + LODWORD(STACK[0x4A4])) + 1973926376) & 0xB0994814) - 1826586370;
  v291 = LODWORD(STACK[0x64C])
       - v207
       - 2 * ((LODWORD(STACK[0x64C]) - v207 + 1237819708) & 0x40F0EBF7 ^ (LODWORD(STACK[0x64C]) - v207) & 3)
       - 1967616720;
  v292 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(91
                                               * ((v203
                                                 + LOWORD(STACK[0x4A4])
                                                 - ((2 * (v203 + LOWORD(STACK[0x4A4])) - 17944) & 0x4814)
                                                 - 32514) & 0xF ^ 0xA)
                                               + 29939)
                            % 0x3BEu) ^ 0x9C;
  v293 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(91
                                               * ((LOWORD(STACK[0x64C])
                                                 - v207
                                                 - 2
                                                 * ((LOWORD(STACK[0x64C]) - v207 - 24260) & 0xEBF7 ^ (LOWORD(STACK[0x64C]) - v207) & 3)
                                                 - 29392) & 0xF ^ 4)
                                               + 29939)
                            % 0x3BEu) ^ 0x9C;
  LODWORD(STACK[0x488]) = v292 & 0xF;
  v294 = 91 * (v292 & 0xF | (16 * (v293 & 0xF)));
  LODWORD(STACK[0x464]) = v294;
  v295 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v294 - 31957) % 0x3BEu) ^ 0x9C;
  v296 = STACK[0x680];
  v297 = 91 * ((v295 - 642197885 - ((2 * v295) & 0xFFFFFF07)) ^ LODWORD(STACK[0x680]));
  LODWORD(STACK[0x4A4]) = v290;
  v298 = ((((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (HIBYTE(v290) & 0xF ^ 8) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (91 * ((v290 >> 28) ^ 0xD) + 29939) % ((v289 & 0x26BA7800) - 649753916 + (v289 & 0x26BA7800 ^ 0x26BA78FAu))) ^ 0x9C) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (BYTE2(v290) & 0xF ^ 0xC) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v290 >> 20) & 0xF ^ 4) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v290 >> 8) & 0xF ^ 4) + 29939) % 0x3BEu) ^ 0x9C;
  v299 = (v298 << 8) - 363993415 - ((v298 << 9) & 0xD49BCC00);
  v300 = *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (v290 >> 4) + 29939) % 0x3BEu);
  v301 = v299 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(91 * (((unsigned __int16)(v290 & 0xF000) >> 12) ^ 0xA) + 29939)
                                     % 0x3BEu) ^ 0x9C) << 12);
  LODWORD(STACK[0x64C]) = v301;
  v302 = (v301 ^ 0xEA4DE6B9 | v292) ^ (16 * (v300 ^ 0x9C));
  LODWORD(STACK[0x658]) = v302;
  LOWORD(v270) = 91 * (((unsigned __int16)v291 >> 12) ^ 0xE) + 29939;
  v303 = *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (BYTE2(v291) & 0xF) + 29939) % 0x3BEu);
  v304 = ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (~(v291 >> 20) & 0xF) + 29939) % 0x3BEu) ^ 0x9C) << ((v303 & 4 ^ 4) + (v303 & 4))) ^ (((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (HIBYTE(v291) & 0xF) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v291 >> 28) ^ 4) + 29939) % 0x3BEu) ^ 0x9C) << 12) | v303 ^ 0x9C);
  v305 = (v304 << 16) + 1349563844 - ((v304 << 17) & 0xA0E00000);
  v306 = *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v291 >> 8) & 0xF ^ 0xB) + 29939) % 0x3BEu) ^ 0x9C;
  LODWORD(STACK[0x484]) = v305;
  v307 = (47 * (((((v291 >> 4) | 0xF0) - 73) & 0x95) + ((88 - (v291 >> 4)) & 0x15)))
       * (344 - (v291 >> 4));
  v308 = ((v305 ^ 0x5070B5C4) + (v306 << 8)) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)v270 % 0x3BEu) ^ 0x9C) << 12);
  v309 = (v308 | v293) ^ (16
                        * (*(unsigned __int8 *)(v14
                                              + (v307 - 958 * ((4483265 * (unint64_t)v307) >> 32))) ^ 0x9C));
  v310 = 91 * (v309 & 0xF0 | (v302 >> 4));
  LODWORD(STACK[0x474]) = v299;
  v311 = 91 * (((v305 >> 20) & 0xF0 | HIBYTE(v299) & 0xF) ^ 0xA);
  LODWORD(STACK[0x47C]) = v311;
  LODWORD(STACK[0x478]) = (unsigned __int16)(v311 - 31957) % (((212 - v311) | (v311 + 33579)) & 0x3BEu);
  v312 = STACK[0x420];
  v313 = LODWORD(STACK[0x468]) + LODWORD(STACK[0x640]) + (LODWORD(STACK[0x420]) ^ 0x8390B831);
  v314 = v313 - ((2 * v313) & 0x3CBA61A0) + 509423824;
  v315 = LODWORD(STACK[0x4A8]) + (LODWORD(STACK[0x628]) ^ 0x79E07359);
  v316 = ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (HIBYTE(v314) & 0xF ^ 0xE) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v314 >> 28) ^ 1) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (BYTE2(v314) & 0xF ^ 0xD) + 29939) % 0x3BEu) ^ 0x9C;
  LODWORD(STACK[0x640]) = v314;
  v317 = (v316 << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v314 >> 20) & 0xF ^ 5) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v314 >> 8) & 0xF) + 29939) % 0x3BEu) ^ 0x9C;
  v318 = (v317 << 8) - 1032091125 - ((v317 << 9) & 0x84F71400);
  LODWORD(STACK[0x46C]) = v318;
  LOWORD(v317) = 91 * (((v313 - ((2 * v313) & 0xA0) - 48) >> 4) ^ 0xD) + 29939;
  v319 = (2 * v315 + 137235338) & 0xA8A9370;
  v315 -= 1185132675;
  v320 = v315 - v319;
  v321 = v318 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(91 * (((unsigned __int16)v314 >> 12) ^ 3) + 29939) % 0x3BEu) ^ 0x9C) << 12);
  LODWORD(STACK[0x440]) = v321;
  v322 = *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (v313 & 0xF) + 29939) % 0x3BEu) ^ 0x9C;
  v323 = (v321 ^ 0xC27B8A0B | v322) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)v317 % 0x3BEu) ^ 0x9C));
  v324 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)((((((BYTE2(v320) & 0xF ^ 5) + 329) & 0x1B)
                                                 + ((-330 - (BYTE2(v320) & 0xF ^ 5)) & 0x9A3B)) ^ 0x9A60)
                                               * ((BYTE2(v320) & 0xF ^ 5) + 329))
                            % 0x3BEu);
  v325 = ((((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (HIBYTE(v320) & 0xF ^ 5) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (v320 >> 28) + 29939) % 0x3BEu) ^ 0x9C) << 12) | v324 & 0x40 | v324 & 0xFFFFFFBF ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v320 >> 20) & 0xF ^ 4) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v320 >> 8) & 0xF ^ 9) + 29939) % 0x3BEu) ^ 0x9C;
  v326 = (v325 << 8) + 1903318317 - ((v325 << 9) & 0xE2E4AA00);
  LODWORD(STACK[0x448]) = v326;
  v327 = *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v320 >> 4) ^ 0xB) + 29939) % 0x3BEu);
  v328 = v326 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(91 * (((unsigned __int16)v320 >> 12) ^ 4) + 29939) % 0x3BEu) ^ 0x9C) << 12);
  LODWORD(STACK[0x438]) = v328;
  v329 = *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (v315 & 0xF ^ 8) + 29939) % 0x3BEu) ^ 0x9C;
  v330 = (v328 ^ 0x7172552D | v329) ^ (16 * (v327 ^ 0x9C));
  LODWORD(STACK[0x470]) = v322 & 0xF;
  v331 = 91 * (v322 & 0xF | (16 * (v329 & 0xF)));
  v332 = (v330 >> 8) - ((v330 >> 7) & 0x13FBA64);
  v333 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v331 - 31957) % 0x3BEu) ^ 0x9C;
  v334 = 91 * ((v333 - 642197885 - ((2 * v333) & 0xFFFFFF07)) ^ v296);
  LODWORD(STACK[0x430]) = v334;
  v335 = (*(unsigned __int8 *)(v14 + (v334 + 63791) % 0x3BE) >> 4) ^ 9;
  LOWORD(v331) = 91
               * ((v335 - ((2 * v335) & 0x18) - 100) ^ *(unsigned __int8 *)(v14
                                                                                           + (v331 + 63791 - 958 * ((4483265 * (unint64_t)(v331 + 63791)) >> 32))))
               - 31957;
  LODWORD(STACK[0x45C]) = v323;
  v336 = 91 * (v330 & 0xF0 | (v323 >> 4));
  v337 = 91
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v336 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v14 + (unsigned __int16)v331 % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  LODWORD(STACK[0x42C]) = v337;
  v338 = (*(unsigned __int8 *)(v14
                             + (v337
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v337 + 63791)) >> 32))) >> 4) ^ 9;
  LOWORD(v336) = 91
               * ((v338 - ((2 * v338) & 0x18) - 100) ^ *(unsigned __int8 *)(v14
                                                                                           + (v336 + 63791 - 958 * ((4483265 * (unint64_t)(v336 + 63791)) >> 32))))
               - 31957;
  LODWORD(STACK[0x434]) = v332 - 979378894;
  v339 = 91 * (((v323 >> 8) & 0xF | (16 * ((v332 - 979378894) & 0xF))) ^ 0x20);
  LODWORD(STACK[0x428]) = v339;
  v340 = 91
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v339 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v14 + (unsigned __int16)v336 % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  LODWORD(STACK[0x424]) = v340;
  v341 = *(unsigned __int8 *)(v14
                            + (v340
                                           + 33579
                                           - 958 * ((4483265 * (unint64_t)(v340 + 33579)) >> 32))) ^ 0x9C;
  LODWORD(STACK[0x43C]) = (v341 << 8) + 902246202 - ((v341 << 9) & 0x5E00);
  v342 = *(unsigned __int8 *)(v14 + (v297 + 63791) % (((720 - v297) & 0x3BE) + ((v297 + 63791) & 0x3BE))) >> 4;
  LOWORD(v296) = (unsigned __int16)(91
                                  * (((v342 ^ 9) + ((2 * ((v342 ^ 9 | 0x7C) ^ v342)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(v14 + (LODWORD(STACK[0x464]) + 63791 - 958 * ((4483265 * (unint64_t)(LODWORD(STACK[0x464]) + 63791)) >> 32))))
                                  - 31957)
               % 0x3BEu;
  v343 = v310 + 63791 - 958 * ((4483265 * (unint64_t)(v310 + 63791)) >> 32);
  v344 = 91
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v310 - 31957) % (((v310 + 33579) ^ (212 - v310)) & 0x3BEu)) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)v296) ^ 0x9C)) ^ 0x9C);
  v345 = v344 + 33579 - 958 * ((4483265 * (unint64_t)(v344 + 33579)) >> 32);
  v346 = *(unsigned __int8 *)(v14
                            + (v344
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v344 + 63791)) >> 32))) >> 4;
  v347 = (unsigned __int16)(91
                          * (((v346 ^ 9) + ((2 * ((v346 ^ 9 | 0x7C) ^ v346)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(v14 + v343))
                          - 31957)
       % 0x3BEu;
  v348 = (unsigned __int16)v347 + 1542833710 - ((2 * v347) & 0x45C);
  v349 = (v309 >> 4) & 0xF0 | (LODWORD(STACK[0x658]) >> 8) & 0xF;
  v350 = 91 * ((v348 & 0x171 ^ 0x151 | v348 & 0x171 ^ 0x20) + v349);
  v351 = 91
       * (*(unsigned __int8 *)(v14 + (v350 - 958 * ((4483265 * (unint64_t)v350) >> 32))) ^ (16 * (*(unsigned __int8 *)(v14 + (v348 ^ 0x5BF5C62Eu)) ^ 0x9C)) ^ 0x9C);
  v352 = v351 + 33579 - 958 * ((4483265 * (unint64_t)(v351 + 33579)) >> 32);
  v353 = (*(unsigned __int8 *)(v14
                             + (v351
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v351 + 63791)) >> 32))) ^ 0x9Cu) >> 4;
  LOWORD(v349) = 91
               * ((v353 - ((2 * v353) & 0x38) - 100) ^ *(unsigned __int8 *)(v14
                                                                                           + (91 * v349 + 63791 - 958 * ((4483265 * (unint64_t)(91 * v349 + 63791)) >> 32))))
               - 31957;
  v354 = STACK[0x64C];
  v355 = 91 * (((v308 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x64C]) >> 12)) ^ 0xE);
  v356 = 91
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v355 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v14 + (unsigned __int16)v349 % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v357 = ((*(unsigned __int8 *)(v14
                              + (v356
                                             + 33579
                                             - 958 * ((4483265 * (unint64_t)(v356 + 33579)) >> 32))) ^ 0x9C) << 12) ^ ((*(unsigned __int8 *)(v14 + v352) ^ 0x9C) << 8);
  LODWORD(STACK[0x4A8]) = v357;
  v358 = (*(unsigned __int8 *)(v14
                             + (v356
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v356 + 63791)) >> 32))) >> 4) ^ 9;
  v359 = v354;
  v360 = 91 * (((v308 >> 12) & 0xF0 | HIWORD(v354) & 0xF) ^ 0xD);
  v361 = 91
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v360 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v358 - ((2 * v358) & 0x18) - 100) ^ *(unsigned __int8 *)(v14 + (v355 + 63791 - 958 * ((4483265 * (unint64_t)(v355 + 63791)) >> 32)))) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v362 = v361 + 33579 - 958 * ((4483265 * (unint64_t)(v361 + 33579)) >> 32);
  v363 = *(unsigned __int8 *)(v14
                            + (v361
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v361 + 63791)) >> 32))) >> 4;
  LOWORD(v363) = 91
               * (((v363 ^ 9) + ((2 * ((v363 ^ 9 | 0x7C) ^ v363)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(v14 + (v360 + 63791 - 958 * ((4483265 * (unint64_t)(v360 + 63791)) >> 32))))
               - 31957;
  v364 = *(unsigned __int8 *)(v14 + (v297 + 33579) % 0x3BE);
  v365 = 91 * ((v304 & 0xF0 | (v299 >> 20) & 0xF) ^ 4);
  LODWORD(STACK[0x450]) = v365;
  v366 = *(unsigned __int8 *)(v14 + v345);
  v367 = *(unsigned __int8 *)(v14 + v362);
  v368 = 91
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v365 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v14 + (unsigned __int16)v363 % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  LODWORD(STACK[0x44C]) = v368;
  v369 = ((*(unsigned __int8 *)(v14
                              + (v368
                                             + 33579
                                             - 958 * ((4483265 * (unint64_t)(v368 + 33579)) >> 32))) ^ 0x9C) << 20) ^ ((v367 ^ 0x9C) << 16);
  LODWORD(STACK[0x468]) = v369;
  v364 ^= 0x9Cu;
  LODWORD(STACK[0x458]) = v364;
  v370 = v364 ^ (16 * (v366 ^ 0x9C));
  LODWORD(STACK[0x460]) = v370;
  v371 = v357 ^ v370;
  LODWORD(STACK[0x464]) = v371;
  v372 = v369 ^ v371;
  LODWORD(STACK[0x454]) = v372;
  v373 = ((v372 >> 12) & 0xF0 | HIWORD(v359) & 0xF) ^ 0xD;
  v374 = 91 * v373 - 1685120854 - ((182 * v373) & 0x3154);
  LODWORD(STACK[0x444]) = (v374 ^ 0x9B8F18AA) % ((v374 & 0x3BE ^ 0x314) + (v374 & 0x3BE ^ 0xAAu));
  v375 = LODWORD(STACK[0x48C])
       + (LODWORD(STACK[0x668]) ^ 0xF0ECB7B7)
       + (LODWORD(STACK[0x650]) ^ 0x6DF82299 ^ (LODWORD(STACK[0x4E0]) - 1874833131))
       + 1;
  v376 = (v375 - ((2 * v375) & 0xC396D9EC) - 506761994) ^ LODWORD(STACK[0x480]);
  v377 = (((LODWORD(STACK[0x4F4]) + 1072034458) ^ (LODWORD(STACK[0x540]) - 43111336))
        + 1089017859
        + LODWORD(STACK[0x4D8])
        + (LODWORD(STACK[0x660]) ^ 0x1D32AB07)
        - 18460778
        - ((2
          * (((LODWORD(STACK[0x4F4]) + 1072034458) ^ (LODWORD(STACK[0x540]) - 43111336))
           + 1089017859
           + LODWORD(STACK[0x4D8])
           + (LODWORD(STACK[0x660]) ^ 0x1D32AB07)
           + 1)) & 0xFDCC9F2A)) ^ LODWORD(STACK[0x494]);
  v378 = v377 + ((LODWORD(STACK[0x498]) + 1510618251) ^ 0xF498F54D);
  v379 = v378 + (LODWORD(STACK[0x670]) ^ 0xDFFCBD26);
  LODWORD(STACK[0x48C]) = v379;
  v380 = (((v379 ^ v378) - 2087667663 - ((2 * (v379 ^ v378)) & 0x7217062)) ^ 0xA260C4FD ^ v312)
       + 2 * ((v312 ^ 0x21F07CCC) & (v379 ^ v378));
  v381 = v376 + ((LODWORD(STACK[0x490]) + 1510618251) ^ 0xF498F54D);
  v382 = v381 + (LODWORD(STACK[0x678]) ^ 0x3222A196);
  LODWORD(STACK[0x490]) = v382;
  v383 = (LODWORD(STACK[0x628]) ^ 0x247F485B) + (v382 ^ v381);
  v384 = STACK[0x630];
  v385 = v380 + 2 * LODWORD(STACK[0x630]);
  LODWORD(STACK[0x41C]) = v380;
  v386 = v385 + 1060169900 + v384;
  v387 = v386 + LODWORD(STACK[0x4B0]) - ((2 * (v386 + LODWORD(STACK[0x4B0])) + 37038342) & 0x21DBC9E2) - 1308067468;
  v388 = STACK[0x62C];
  v389 = v383 + 2 * LODWORD(STACK[0x62C]);
  v390 = v383;
  LODWORD(STACK[0x418]) = v383;
  v391 = v389 - 1759401306 + v388;
  v392 = LODWORD(STACK[0x4AC]) - v391 - ((2 * (LODWORD(STACK[0x4AC]) - v391) + 139475508) & 0x4CC8458E);
  v393 = ((((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (HIBYTE(v387) & 0xF) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v387 >> 28) ^ 1) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (BYTE2(v387) & 0xF ^ 0xD) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v387 >> 20) & 0xF ^ 0xE) + 29939) % 0x3BEu) ^ 0x9C) << 12);
  v394 = (v387 >> 8) & 0xF;
  v395 = ((v394 ^ 0xFFFFFFFB) & 0x5BC88164) + (~(v387 >> 8) & 4);
  LODWORD(STACK[0x4D8]) = v387;
  v392 += 1787576289;
  v396 = v393 | *(unsigned __int8 *)(v14
                                   + (unsigned __int16)(91
                                                      * ((v394 ^ 4)
                                                       + ((v387 >> 8) & 7 ^ 0xFFFB ^ (v394 ^ 0xFFFB) & 0xFEB7)
                                                       + (v395 ^ 0x7E9C)
                                                       + ((2 * v395) & 0x18))
                                                      + 91)
                                   % 0x3BEu) ^ 0x9C;
  v397 = (v396 << 8) + 2030129859 - ((v396 << 9) & 0xF202A400);
  LODWORD(STACK[0x3D4]) = v397;
  v398 = *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (~(unsigned __int16)(v387 >> 4) & 0xF) + 29939) % 0x3BEu);
  v399 = *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (v387 & 0xF ^ 1) + 29939) % 0x3BEu);
  v400 = v397 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(91 * (((unsigned __int16)v387 >> 12) ^ 0xE) + 29939) % 0x3BEu) ^ 0x9C) << 12);
  LODWORD(STACK[0x650]) = v400;
  LOBYTE(v396) = v399 ^ 0x9C;
  v401 = (v400 ^ 0x790152C3 | v399 ^ 0x9C) ^ (16 * (v398 ^ 0x9C));
  LODWORD(STACK[0x4F4]) = v401;
  v402 = ((((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (HIBYTE(v392) & 0xF ^ 6) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v392 >> 28) ^ 0xA) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (BYTE2(v392) & 0xF ^ 4) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v392 >> 20) & 0xF ^ 6) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v392 >> 8) & 0xF ^ 2) + 29939) % 0x3BEu) ^ 0x9C;
  v403 = (v402 << 8) - 1334738065 - ((v402 << 9) & 0x60E30600);
  LODWORD(STACK[0x628]) = v403;
  LOWORD(v402) = 91 * ((v392 >> 4) ^ 0xC) + 29939;
  v404 = v403 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(91 * (((unsigned __int16)v392 >> 12) ^ 2) + 29939) % 0x3BEu) ^ 0x9C) << 12);
  LODWORD(STACK[0x540]) = v404;
  v405 = *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (v392 & 0xF ^ 7) + 29939) % 0x3BEu) ^ 0x9C;
  v406 = (v404 ^ 0xB071836F | v405) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)v402 % 0x3BEu) ^ 0x9C));
  LODWORD(STACK[0x4E0]) = v406;
  v407 = 91 * (v406 & 0xF0 | (v401 >> 4));
  LODWORD(STACK[0x4B0]) = v407;
  v408 = (unsigned __int16)(v407 - 31957)
       % (((v407 + 43) ^ (4 - v407)) & 0xC | 0x3B2u);
  LODWORD(STACK[0x40C]) = v396 & 0xF;
  v409 = 91 * (v396 & 0xF | (16 * (v405 & 0xF)));
  v410 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v409 - 31957) % 0x3BEu) ^ 0x9C;
  v411 = STACK[0x680];
  v412 = 91 * ((v410 - 642197885 - ((2 * v410) & 0xFFFFFF07)) ^ LODWORD(STACK[0x680]));
  LODWORD(STACK[0x4AC]) = v412;
  v413 = *(unsigned __int8 *)(v14 + (v412 + 63791) % 0x3BE) >> 4;
  v414 = *(unsigned __int8 *)(v14 + v408) ^ (16
                                           * (*(unsigned __int8 *)(v14
                                                                 + (unsigned __int16)(91
                                                                                    * (((v413 ^ 9) + ((2 * ((v413 ^ 9 | 0x7C) ^ v413)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(v14 + (v409 + 63791 - 958 * ((4483265 * (unint64_t)(v409 + 63791)) >> 32))))
                                                                                    - 31957)
                                                                 % 0x3BEu) ^ 0x9C));
  v415 = 91 * (v414 ^ 0x9C);
  LODWORD(STACK[0x494]) = v415;
  LODWORD(STACK[0x498]) = (v415 + 63791)
                        % (((v414 & 0x439 ^ 0x18 | (v414 ^ 0xFFFFFF63) & 0x95242439) ^ 0xCAEE5D0C)
                         + (v414 & 0xA89 ^ 0x88 | (v414 ^ 0xFFFFFF63) & 0xA0358A89));
  v416 = (v377 - 326807898) ^ 0xBA340C97;
  LODWORD(STACK[0x414]) = v416;
  v417 = (v416 - 1896266684) ^ 0x5CFB1186 ^ (v380 + 386369691);
  LODWORD(STACK[0x480]) = v417;
  v418 = (v376 - 326807898) ^ 0xBA340C97;
  LODWORD(STACK[0x410]) = v418;
  v419 = (v418 - 1896266684) ^ 0x5CFB1186 ^ (v390 + 386369691);
  LODWORD(STACK[0x420]) = v419;
  v420 = v419 + 1533373362 + v389 - 1759401306;
  LODWORD(STACK[0x3C8]) = v420;
  v421 = v385 + 1060169900 + v417;
  LODWORD(STACK[0x3E8]) = v421;
  v422 = ((v386 + 902959120) ^ (v385 - 1439646352)) - v386 - 37339642;
  LODWORD(STACK[0x3B8]) = v422;
  v423 = v422 ^ (v421 - v386 + 962536360);
  LODWORD(STACK[0x3C0]) = v386;
  LODWORD(STACK[0x3B4]) = v423;
  LODWORD(STACK[0x404]) = v423 ^ 0x503C8DA2;
  v424 = v423 ^ 0x503C8DA2 ^ (v386 - ((2 * v386 + 1502365814) & 0xA0791B44) + 2097328605);
  v425 = LODWORD(STACK[0x4B4]) + 65981975;
  LODWORD(STACK[0x3B0]) = v424;
  v426 = v425 + v424 - ((2 * (v425 + v424)) & 0x6B93F2B6) - 1245054629;
  v427 = ((((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (HIBYTE(v426) & 0xF ^ 5) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v426 >> 28) ^ 0xB) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (BYTE2(v426) & 0xF ^ 9) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v426 >> 20) & 0xF ^ 0xC) + 29939) % 0x3BEu) ^ 0x9C) << 12);
  LODWORD(STACK[0x408]) = v426;
  v428 = (v427 | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v426 >> 8) & 0xF ^ 9) + 29939) % 0x3BEu) ^ 0x9C) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((unsigned __int16)~(_WORD)v426 >> 12) + 29939) % 0x3BEu) ^ 0x9C));
  LODWORD(STACK[0x3F4]) = v428;
  LODWORD(STACK[0x3F8]) = v391;
  LODWORD(STACK[0x3C4]) = v391 - 441215996;
  v429 = ((v391 - 441215996) ^ (v389 + 1511145828)) - v391 + 1306835474;
  LODWORD(STACK[0x3A4]) = v429;
  v430 = v429 ^ (v420 - v391 - 2046233092);
  LODWORD(STACK[0x3AC]) = v430;
  LODWORD(STACK[0x3F0]) = v430 ^ 0x909D34DF;
  v431 = v430 ^ 0x909D34DF ^ (v391 - ((2 * v391 + 961499230) & 0x213A69BE) + 1833229582);
  v432 = STACK[0x648];
  LODWORD(STACK[0x3A8]) = v431;
  LODWORD(STACK[0x3FC]) = v432 - v431 + 1891936928;
  v433 = ((2
         * (91 * (((_BYTE)v432 - (_BYTE)v431 - 96) & 0xF)
          + 29939
          - 1916 * ((17513 * (91 * (((_BYTE)v432 - (_BYTE)v431 - 96) & 0xFu) + 29939)) >> 25))) & 0xCDE)
       + (((unsigned __int16)(91 * (((_BYTE)v432 - (_BYTE)v431 - 96) & 0xF) + 29939) % 0x77Cu) ^ 0x7F3F7E6F);
  if (v433 - 2134867567 >= 0x3BE)
    v434 = -419434507;
  else
    v434 = -419433549;
  v435 = *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (v426 & 0xF ^ 0xB) + 29939) % 0x3BEu) ^ 0x9C;
  LODWORD(STACK[0x3D8]) = v435;
  v436 = *(unsigned __int8 *)(v14 + v433 - 1715434018 + v434) ^ 0x9C;
  LODWORD(STACK[0x3E4]) = v436;
  LODWORD(STACK[0x4B4]) = v435 & 0xF;
  v437 = 91 * (v435 & 0xF | (16 * (v436 & 0xF)));
  LODWORD(STACK[0x3E0]) = v437;
  v438 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v437 - 31957) % 0x3BEu) ^ 0x9C;
  v439 = 91 * ((v438 - 642197885 - ((2 * v438) & 0xFFFFFF07)) ^ v411);
  LODWORD(STACK[0x3DC]) = v439;
  LODWORD(STACK[0x400]) = (v439 + 33579)
                        % (-282662430
                         * ((((v428 & 0x7535838E ^ 0xF535838E) + (v428 & 0x7535838E)) & 0x901A0000)
                          + (((v428 & 0x7535838E ^ 0xF535838E) + (v428 & 0x7535838E)) ^ 0x901A2041)));
  v440 = STACK[0x5FC] & 0xFFFFFF0F | (16 * (STACK[0x5B8] & 0xF));
  v441 = STACK[0x5BC] & 0xF0 | (LODWORD(STACK[0x5F8]) >> 4);
  v442 = (LODWORD(STACK[0x5C0]) >> 4) & 0xF0 | (LODWORD(STACK[0x5F8]) >> 8) & 0xF;
  v443 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(91 * v440 - 958 * ((unsigned __int16)((1593683 * v440) >> 16) >> 8)));
  v444 = ((LODWORD(STACK[0x5C8]) >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x5F0])) & 0xF) ^ 6;
  v445 = v443 ^ (16
               * (*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(91 * v441
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v441) >> 16) >> 8))) ^ 0x9C)) ^ 0x9C;
  v446 = v445 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(91 * v442
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v442) >> 16) >> 8))) ^ 0x9C) << 8);
  v447 = (v446 | ((*(unsigned __int8 *)(v14
                                      + (unsigned __int16)(91 * v444
                                                         - 958
                                                         * ((unsigned __int16)((1593683 * v444) >> 16) >> 8))) ^ 0x9C) << 16)) ^ ((*(unsigned __int8 *)(v14 + LODWORD(STACK[0x61C])) ^ 0x9C) << 12);
  v448 = (HIWORD(LODWORD(STACK[0x5D4])) & 0xF0 | (LODWORD(STACK[0x5E4]) >> 20) & 0xF) ^ 5;
  v449 = STACK[0x600];
  v450 = (LODWORD(STACK[0x5D8]) >> 20) & 0xF0 ^ (LODWORD(STACK[0x5EC]) ^ 0x38) & ((((LODWORD(STACK[0x600]) ^ (62 - LODWORD(STACK[0x60C]) - ((62 - LODWORD(STACK[0x610])) & 0x3E))) & 0x60)
                                                                                 + 170) | 0xF);
  v451 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(91 * v448
                                               - 958 * ((unsigned __int16)((1593683 * v448) >> 16) >> 8))) ^ 0x9C;
  HIDWORD(v452) = LODWORD(STACK[0x5A0]) ^ 0x1AC5938;
  LODWORD(v452) = LODWORD(STACK[0x5E4]) ^ 0x30000000;
  v453 = v447 ^ ((v451 << 20) - 367787290 - ((v451 << 21) & 0x14200000)) ^ 0xEA1402E6;
  v454 = v453 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(91 * v450
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v450) >> 16) >> 8))) ^ 0x9C) << 24);
  LODWORD(STACK[0x63C]) ^= (16
                          * (*(unsigned __int8 *)(v14
                                                + (unsigned __int16)(91 * (v445 >> 4) + 31577) % 0x3BEu) ^ 0x9C)) ^ (((((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (BYTE2(v447) & 0xF) + 31577) % 0x3BEu) ^ 0x9C | ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (HIBYTE(v454) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v454 ^ ((*(unsigned __int8 *)(v14 + 91 * (v452 >> 28) % 0x3BE) ^ 0xCu) << 28)) >> 28) + 31577) % 0x3BEu) ^ 0x9C) << 12)) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v453 >> 20) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v446 >> 8) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((unsigned __int16)v447 >> 12) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (v443 & 0xF ^ 0xC) + 31577) % 0x3BEu) ^ 0x9C);
  LODWORD(STACK[0x648]) = ((LODWORD(STACK[0x638]) - 1072034458) ^ 0x41A4CEDF ^ v449)
                        - ((2 * ((LODWORD(STACK[0x638]) - 1072034458) ^ 0x41A4CEDF ^ v449)) & 0xBA7F88DE);
  v455 = ((*(unsigned __int8 *)(v14
                              + (LODWORD(STACK[0x580])
                                             + 33579
                                             - 958
                                             * ((4483265
                                               * (unint64_t)(LODWORD(STACK[0x580]) + 33579)) >> 32))) ^ 0x9C) << 16) ^ ((*(unsigned __int8 *)(v14 + (LODWORD(STACK[0x584]) + 33579 - 958 * ((4483265 * (unint64_t)(LODWORD(STACK[0x584]) + 33579)) >> 32))) ^ 0x9C) << 12);
  v456 = *(unsigned __int8 *)(v14
                            + (LODWORD(STACK[0x5AC])
                                           + 33579
                                           - 958
                                           * ((4483265 * (unint64_t)(LODWORD(STACK[0x5AC]) + 33579)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v14 + (LODWORD(STACK[0x594]) + 33579 - 958 * ((4483265 * (unint64_t)(LODWORD(STACK[0x594]) + 33579)) >> 32))) ^ 0x9C)) ^ 0x9C;
  v457 = v455 ^ ((*(unsigned __int8 *)(v14
                                     + (LODWORD(STACK[0x570])
                                                    + 33579
                                                    - 958
                                                    * ((4483265
                                                      * (unint64_t)(LODWORD(STACK[0x570]) + 33579)) >> 32))) ^ 0x9C) << 20);
  v458 = LODWORD(STACK[0x558]) ^ v457;
  v459 = v456 ^ ((*(unsigned __int8 *)(v14 + (LODWORD(STACK[0x588]) + 33579) % 0x3BEu) ^ 0x9C) << 8) ^ v458;
  v460 = STACK[0x5B0] & 0xFFFFFF0F | (16 * ((v456 ^ v458) & 0xF));
  v461 = v456 & 0xF0 | (LODWORD(STACK[0x598]) >> 4);
  v462 = 91 * v461 - 958 * ((unsigned __int16)((1593683 * v461) >> 16) >> 8);
  v463 = (v459 >> 4) & 0xF0 | (LODWORD(STACK[0x598]) >> 8) & 0xF;
  v464 = ((v459 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x550]) >> 12)) ^ 7;
  v465 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(91 * v464
                                                 - 958 * ((unsigned __int16)((1593683 * v464) >> 16) >> 8))) ^ 0x9C) << 12) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * v463 - 958 * ((unsigned __int16)((1593683 * v463) >> 16) >> 8))) ^ 0x9C) << 8);
  v466 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(91 * v460 - 958 * ((unsigned __int16)((1593683 * v460) >> 16) >> 8)));
  v467 = ((v455 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x550])) & 0xF) ^ 0xF;
  LOWORD(v455) = 91 * v467 - 958 * ((unsigned __int16)((1593683 * v467) >> 16) >> 8);
  v468 = v466 ^ (16 * (*(unsigned __int8 *)(v14 + v462) ^ 0x9C)) ^ 0x9C;
  v469 = v465 ^ v468;
  v470 = v465 ^ v468 ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)v455) ^ 0x9C) << 16);
  v471 = ((v458 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x550])) & 0xF) ^ 0xF;
  v472 = v470 ^ ((*(unsigned __int8 *)(v14
                                     + 91
                                     * ((LODWORD(STACK[0x550]) >> 20) & 0xF ^ ((unint64_t)((v457 >> 20) & 0xF) << ((v470 & 0xFD) + 7 + (v470 & 0xFD ^ 0xFDu))) ^ 6)
                                     % 0x3BE) ^ 0x9C) << 20);
  v473 = ((*(unsigned __int8 *)(v14 + 91 * (LODWORD(STACK[0x518]) ^ 0x3F26EE5Eu) % 0x3BE) ^ 0xC) << 28) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * v471 - 958 * ((unsigned __int16)((1593683 * v471) >> 16) >> 8))) ^ 0x9C) << 24) ^ v472;
  v474 = (unsigned __int16)v465 >> 12;
  v475 = ((((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (HIBYTE(v473) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (v473 >> 28) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (BYTE2(v470) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v472 >> 20) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 12);
  v476 = v474 + 424962140 + ((2 * (_BYTE)v474 + 54) & 0x38 ^ 0xFFFFFF7F) + 348;
  v477 = 1025316898 - v474 - ((2147482952 - 2 * v474) & 0x7A3A3876) + 765;
  v478 = ((v475 | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v469 >> 8) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(v14 + ((890122562 - (v476 & 0x31 ^ 0x10 | v477 & 0xCF8B7231 ^ 0xD091031)) ^ (((v476 & 0x122) + (v477 & 0xBF9F7822 ^ 0x3D1D1822)) * (v477 & 0x357B4A95 ^ v476 & 0x155 ^ 0x35190845))) * (v476 ^ 0x1954685C) % 0x3BE) ^ 0x9C) << 12);
  v479 = *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (v466 & 0xF ^ 0xC) + 31577) % 0x3BEu);
  LODWORD(STACK[0x638]) = LODWORD(STACK[0x5E8]) ^ LODWORD(STACK[0x660]);
  LODWORD(STACK[0x61C]) = LODWORD(STACK[0x668]) ^ (16
                                                 * (*(unsigned __int8 *)(v14
                                                                       + (unsigned __int16)(91
                                                                                          * (v468 >> 4)
                                                                                          + 31577)
                                                                       % 0x3BEu) ^ 0x9C)) ^ (v478 | v479 ^ 0x9C);
  v480 = (*(unsigned __int8 *)(v14
                             + (LODWORD(STACK[0x4FC])
                                            + 63791
                                            - 958
                                            * ((4483265 * (unint64_t)(LODWORD(STACK[0x4FC]) + 63791)) >> 32))) >> 4) ^ 9;
  v481 = 91
       * ((v480 - ((2 * v480) & 0x18) - 100) ^ *(unsigned __int8 *)(v14
                                                                                   + (LODWORD(STACK[0x500])
                                                                                                  + 63791
                                                                                                  - 958 * ((4483265 * (unint64_t)(LODWORD(STACK[0x500]) + 63791)) >> 32))))
       - 31957;
  v482 = 91 * ((STACK[0x4EC] & 0xF | (16 * ((LODWORD(STACK[0x510]) >> 8) & 0xF))) ^ 9);
  v483 = 91
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v482 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v14 + v481 % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v484 = v483 + 33579 - 958 * ((4483265 * (unint64_t)(v483 + 33579)) >> 32);
  v485 = *(unsigned __int8 *)(v14
                            + (v483
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v483 + 63791)) >> 32))) >> 4;
  v486 = 91
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x4F0]) - 31957) % 0x3BEu) ^ (16
                                                                                                  * (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (((v485 ^ 9) + ((2 * ((v485 ^ 9 | 0x7C) ^ v485)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(v14 + (v482 + 63791 - 958 * ((4483265 * (unint64_t)(v482 + 63791)) >> 32)))) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v487 = v486 + 33579 - 958 * ((4483265 * (unint64_t)(v486 + 33579)) >> 32);
  v488 = v486 + 63791 - 958 * ((4483265 * (unint64_t)(v486 + 63791)) >> 32);
  v489 = *(unsigned __int8 *)(v14 + (LODWORD(STACK[0x508]) + 33579) % 0x3BEu) ^ 0x9C;
  v490 = (v489 | ((*(unsigned __int8 *)(v14 + v484) ^ 0x9C) << 8)) ^ ((*(unsigned __int8 *)(v14 + v487) ^ 0x9C) << 12);
  v491 = *(unsigned __int8 *)(v14 + LODWORD(STACK[0x5F4]));
  HIDWORD(v452) = v491 ^ 0x1C;
  LODWORD(v452) = (v491 ^ 0x80) << 24;
  v492 = 91 * (((LODWORD(STACK[0x4F8]) >> 12) & 0xF0 | (LODWORD(STACK[0x4EC]) >> 8) & 0xF) ^ 8);
  v493 = v492 + 63791 - 958 * ((4483265 * (unint64_t)(v492 + 63791)) >> 32);
  v494 = 91
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v492 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (((*(_BYTE *)(v14 + v488) >> 4) ^ (((v452 >> 30) & 0xFC) >> 2) | ((v452 >> 30) << 6)) ^ 9) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v495 = v494 + 33579 - 958 * ((4483265 * (unint64_t)(v494 + 33579)) >> 32);
  LOBYTE(v494) = (*(_BYTE *)(v14
                           + (v494
                                          + 63791
                                          - 958 * ((4483265 * (unint64_t)(v494 + 63791)) >> 32))) >> 4) ^ 9;
  v496 = 91 * ((STACK[0x530] & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x4EC]) >> 12)) ^ 0xF);
  v497 = 91
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v496 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v494 & 0xC ^ *(_BYTE *)(v14 + v493) & 0x4C | v494 & 3 ^ *(_BYTE *)(v14 + v493) & 0xB3) ^ 0x9C) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v498 = v497 + 33579 - 958 * ((4483265 * (unint64_t)(v497 + 33579)) >> 32);
  v499 = *(unsigned __int8 *)(v14
                            + (v497
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v497 + 63791)) >> 32))) >> 4;
  LOWORD(v499) = (unsigned __int16)(91
                                  * (((v499 ^ 9) + ((2 * ((v499 ^ 9 | 0x7C) ^ v499)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(v14 + (v496 + 63791 - 958 * ((4483265 * (unint64_t)(v496 + 63791)) >> 32))))
                                  - 31957)
               % 0x3BEu;
  v500 = 91 * (((LODWORD(STACK[0x538]) >> 20) & 0xF0 | HIWORD(LODWORD(STACK[0x4EC])) & 0xF) ^ 0x64);
  v501 = 91
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v500 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v14 + (unsigned __int16)v499) ^ 0x9C)) ^ 0x9C);
  v502 = v501 + 33579 - 958 * ((4483265 * (unint64_t)(v501 + 33579)) >> 32);
  v503 = (*(unsigned __int8 *)(v14
                             + (v501
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v501 + 63791)) >> 32))) >> 4) ^ 9;
  v504 = 91
       * (*(unsigned __int8 *)(v14
                             + (unsigned __int16)(91
                                                * ((HIBYTE(LODWORD(STACK[0x538])) & 0xF0 | (LODWORD(STACK[0x4EC]) >> 20) & 0xF) ^ 0xBB)
                                                - 31957)
                             % 0x3BEu) ^ (16
                                        * (*(unsigned __int8 *)(v14
                                                              + (unsigned __int16)(91
                                                                                 * ((v503 - ((2 * v503) & 0x18) - 100) ^ *(unsigned __int8 *)(v14 + (v500 + 63791 - 958 * ((4483265 * (unint64_t)(v500 + 63791)) >> 32))))
                                                                                 - 31957)
                                                              % 0x3BEu) ^ 0x9C)) ^ 0x9C)
       + 33579;
  v505 = STACK[0x548] & 0xFFFFFF0F | (16 * (v489 & 0xF));
  v506 = v490 ^ ((*(unsigned __int8 *)(v14 + v495) ^ 0x9C) << 16);
  v507 = v506 ^ ((*(unsigned __int8 *)(v14 + v498) ^ 0x9C) << 20);
  v508 = v507 ^ ((*(unsigned __int8 *)(v14 + v502) ^ 0x9C) << 24);
  v509 = v508 ^ ((*(unsigned __int8 *)(v14 + (v504 - 958 * ((4483265 * (unint64_t)v504) >> 32))) ^ 0xC) << 28);
  v510 = LODWORD(STACK[0x528]) ^ 0xAF0AF473 ^ v509;
  v511 = v510 & 0xF0 | (LODWORD(STACK[0x520]) >> 4);
  v512 = (v510 >> 4) & 0xF0 | (LODWORD(STACK[0x520]) >> 8) & 0xF;
  v513 = ((v490 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x560]) >> 12)) ^ 0xD;
  v514 = ((v506 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x560])) & 0xF) ^ 0xB;
  v515 = (HIWORD(v507) & 0xF0 | (LODWORD(STACK[0x568]) >> 20) & 0xF) ^ 4;
  v516 = ((v508 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x568])) & 0xF) ^ 4;
  v517 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(91 * v516
                                                 - 958 * ((unsigned __int16)((1593683 * v516) >> 16) >> 8))) ^ 0x9C) << 24) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * v515 - 958 * ((unsigned __int16)((1593683 * v515) >> 16) >> 8))) ^ 0x9C) << 20);
  v518 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(91 * v514
                                                 - 958 * ((unsigned __int16)((1593683 * v514) >> 16) >> 8))) ^ 0x9C) << 16) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * v513 - 958 * ((unsigned __int16)((1593683 * v513) >> 16) >> 8))) ^ 0x9C) << 12);
  v519 = (HIBYTE(v509) & 0xF0 | (LODWORD(STACK[0x568]) >> 28)) ^ 0xC;
  v520 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(91 * v505 - 958 * ((unsigned __int16)((1593683 * v505) >> 16) >> 8)));
  v521 = v520 ^ (16
               * (*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(91 * v511
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v511) >> 16) >> 8))) ^ 0x9C)) ^ 0x9C;
  v522 = v521 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(91 * v512
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v512) >> 16) >> 8))) ^ 0x9C) << 8);
  LOWORD(v512) = v518 ^ v522;
  v523 = v517 ^ v518 ^ v522;
  v524 = STACK[0x578];
  v525 = ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (BYTE2(v518) & 0xF) + 31577) % 0x3BEu) ^ 0x9C ^ ((unint64_t)(*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (HIBYTE(v523) & 0xF) + 31577) % 0x3BEu) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((((-268435456 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * v519 - 958 * ((unsigned __int16)((1593683 * v519) >> 16) >> 8))) ^ 0xC) + 1991106153) ^ v523) >> 28) ^ 7) + 31577) % 0x3BEu) ^ 0x9C)) ^ 0x9Cu) << (((STACK[0x578] & 0x61 ^ 0x60) + (STACK[0x578] & 0x61 ^ 1)) ^ 0x69u))) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v523 >> 20) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * ((v522 >> 8) & 0xF) + 31577) % 0x3BEu) ^ 0x9C;
  STACK[0x668] = 91 * (v521 >> 4)
               + 31577
               - 958 * ((17513 * (91 * (v521 >> 4) + 31577)) >> 24);
  v526 = (v525 << 8) ^ ((*(unsigned __int8 *)(v14
                                            + (unsigned __int16)(91 * ((unsigned __int16)v512 >> 12) + 31577) % 0x3BEu) ^ 0x9C) << 12);
  v527 = LODWORD(STACK[0x4E8]) ^ LODWORD(STACK[0x48C]);
  LODWORD(STACK[0x660]) = v526 | *(unsigned __int8 *)(v14 + (unsigned __int16)(91 * (v520 & 0xF ^ 0xC) + 31577) % 0x3BEu) ^ 0x9C;
  LODWORD(STACK[0x610]) = v524 ^ LODWORD(STACK[0x670]);
  v528 = LODWORD(STACK[0x4DC]) ^ LODWORD(STACK[0x490]);
  v529 = (*(unsigned __int8 *)(v14
                             + (LODWORD(STACK[0x424])
                                            + 63791
                                            - 958
                                            * ((4483265 * (unint64_t)(LODWORD(STACK[0x424]) + 63791)) >> 32))) >> 4) ^ 9;
  LOWORD(v526) = (v529 + (~(2 * v529) | 0xE7) - 99) ^ *(unsigned __int8 *)(v14
                                                                                          + (LODWORD(STACK[0x428]) + 63791 - 958 * ((4483265 * (unint64_t)(LODWORD(STACK[0x428]) + 63791)) >> 32)));
  v530 = ((LODWORD(STACK[0x438]) >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x440]) >> 12)) ^ 0x58;
  v531 = v530 + 47653035 - ((2 * v530) & 0x156);
  v532 = 91
       * (*(unsigned __int8 *)(v14 + (91 * (v531 ^ 0x2D720ABu) + 33579) % 0x3BE) ^ (16
                                                                                  * (*(unsigned __int8 *)(v14 + (unsigned __int16)(91 * v526 - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v533 = v532 + 33579 - 958 * ((4483265 * (unint64_t)(v532 + 33579)) >> 32);
  v534 = *(unsigned __int8 *)(v14
                            + (v532
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v532 + 63791)) >> 32))) >> 4;
  LOWORD(v534) = (unsigned __int16)(91
                                  * (((v534 ^ 9) + ((2 * ((v534 ^ 9 | 0x7C) ^ v534)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(v14 + 91 * (((2 * v531) & 0x17A ^ 0x152) + (v531 ^ 0x2D72216u)) % 0x3BE))
                                  - 31957)
               % 0x3BEu;
  v535 = 91 * (((LODWORD(STACK[0x438]) >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x440])) & 0xF) ^ 0x2B);
  v536 = 91
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v535 - 31957) % 0x3BEu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v14 + (unsigned __int16)v534) ^ 0x9C)) ^ 0x9C);
  v537 = v536 + 33579 - 958 * ((4483265 * (unint64_t)(v536 + 33579)) >> 32);
  v538 = (*(unsigned __int8 *)(v14
                             + (v536
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v536 + 63791)) >> 32))) >> 4) ^ 9;
  v539 = *(_BYTE *)(v14
                  + (v535
                                 + 63791
                                 - 958 * ((4483265 * (unint64_t)(v535 + 63791)) >> 32)));
  v540 = (((v538 - ((2 * v538) & 0x18) - 100) ^ v539) + 369)
       * (STACK[0x434] & 0x5B ^ 0x49 | STACK[0x434] & 0x5B ^ 0x12);
  v541 = 91 * ((HIWORD(LODWORD(STACK[0x448])) & 0xF0 | (LODWORD(STACK[0x46C]) >> 20) & 0xF) ^ 0x77);
  v542 = 91
       * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v541 - 31957) % 0x3BEu) ^ (16
                                                                                          * (*(unsigned __int8 *)(STACK[0x688] + (v540 - 958 * ((4483265 * (unint64_t)v540) >> 32))) ^ 0x9C)) ^ 0x9C);
  v543 = v542 + 33579 - 958 * ((4483265 * (unint64_t)(v542 + 33579)) >> 32);
  v544 = *(unsigned __int8 *)(STACK[0x688]
                            + (v542
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v542 + 63791)) >> 32))) >> 4;
  LOWORD(v544) = (unsigned __int16)(91
                                  * (((v544 ^ 9) + ((2 * ((v544 ^ 9 | 0x7C) ^ v544)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(STACK[0x688] + (v541 + 63791 - 958 * ((4483265 * (unint64_t)(v541 + 63791)) >> 32))))
                                  - 31957)
               % 0x3BEu;
  v545 = 91 * (((LODWORD(STACK[0x448]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x46C])) & 0xF) ^ 0x12);
  v546 = 91
       * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v545 - 31957) % 0x3BEu) ^ (16
                                                                                          * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)v544) ^ 0x9C)) ^ 0x9C);
  v547 = (*(unsigned __int8 *)(STACK[0x688]
                             + (v546
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v546 + 63791)) >> 32))) >> 4) ^ 9;
  v548 = 91
       * (*(unsigned __int8 *)(STACK[0x688]
                             + (unsigned __int16)(91
                                                * ((HIBYTE(LODWORD(STACK[0x448])) & 0xF0 | (LODWORD(STACK[0x46C]) >> 28)) ^ 0x7C)
                                                - 31957)
                             % 0x3BEu) ^ (16
                                        * (*(unsigned __int8 *)(STACK[0x688]
                                                              + (unsigned __int16)(91
                                                                                 * ((v547 - ((2 * v547) & 0x18) - 100) ^ *(unsigned __int8 *)(STACK[0x688] + (v545 + 63791 - 958 * ((4483265 * (unint64_t)(v545 + 63791)) >> 32))))
                                                                                 - 31957)
                                                              % 0x3BEu) ^ 0x9C)) ^ 0x9C)
       + 33579;
  v549 = *(unsigned __int8 *)(STACK[0x688] + (LODWORD(STACK[0x430]) + 33579) % 0x3BEu) ^ 0x9C;
  v550 = v549 ^ (16
               * (*(unsigned __int8 *)(STACK[0x688]
                                     + (LODWORD(STACK[0x42C])
                                                    + 33579
                                                    - 958
                                                    * ((4483265
                                                      * (unint64_t)(LODWORD(STACK[0x42C]) + 33579)) >> 32))) ^ 0x9C));
  v551 = (v550 | ((*(unsigned __int8 *)(STACK[0x688] + v533) ^ 0x9C) << 12)) ^ ((*(unsigned __int8 *)(STACK[0x688] + v537) ^ 0x9C) << 16) ^ ((*(unsigned __int8 *)(STACK[0x688] + v543) ^ 0x9C) << 20) ^ ((*(unsigned __int8 *)(STACK[0x688] + (v546 + 33579 - 958 * ((4483265 * (unint64_t)(v546 + 33579)) >> 32))) ^ 0x9C) << 24) ^ ((*(unsigned __int8 *)(STACK[0x688] + (v548 - 958 * ((4483265 * (unint64_t)v548) >> 32))) ^ 0xC) << 28);
  v552 = (v551 + 902246202 - 2 * (v551 & 0x35C72F3E ^ v549 & 4)) ^ LODWORD(STACK[0x43C]);
  v553 = STACK[0x470] & 0xFFFFFF0F | (16 * (v549 & 0xF));
  v554 = v550 & 0xF0 | (LODWORD(STACK[0x45C]) >> 4);
  v555 = 91 * v554 - 958 * ((1593683 * v554) >> 24);
  v556 = (unsigned __int16)v555 + 531746321 - ((2 * v555) & 0x422);
  v557 = LODWORD(STACK[0x45C]) >> 4 >> ((v556 & 0xAD ^ 1) + (v556 & 0xAD ^ 0xAC) + 87);
  v558 = v557 - ((2 * v557) & 0xE954018) + 1464508428;
  v559 = v558 & 0xF | (16 * ((v552 >> 8) & 0xF));
  v560 = v552 >> 8 >> ((v539 & 4 ^ 4) + (v539 & 4));
  v561 = (2 * v560) & 0x2405B0;
  v560 -= 1022229800;
  v562 = v560 - v561;
  v563 = ((v558 >> 4) | (16 * (v560 & 0xF))) ^ 0x80;
  v564 = ((v562 >> 4) & 0xF0 | ((unsigned __int16)v558 >> 12)) ^ 0x2A;
  v565 = (v562 & 0xF0 | (v558 >> 8) & 0xF) ^ 0xD0;
  v566 = ((v564 + 1608938205 - ((2 * v564) & 0xBBBBBBBB)) & 0x5B ^ 2 | (v564 + 1608938205 - ((2 * v564) & 0xBBBBBBBB)) & 0x5B ^ 0x59)
       * ((v564 + 1608938205 - ((2 * v564) & 0xBBBBBBBB)) ^ 0x5FE672DD);
  v567 = v566 % 0x3BE - 1551097019 - ((2 * (v566 % 0x3BE)) & 0x68A);
  v568 = (((v567 & 0x10B ^ 0x101 | (v567 ^ 0x5C73DCBA) & 0x2C2FD0B)
         * ((v567 ^ 0x5C73DCBA) & 0x7D3AE0FD | v567 & 0xFD ^ 0x45)) & 0xA4644C5B)
       * (((v562 >> 8) & 0xF0 | HIWORD(v558) & 0xF) ^ 0xA);
  v569 = (v562 >> 12) & 0xF0 | (v558 >> 20) & 0xF;
  v570 = ((*(unsigned __int8 *)(STACK[0x688]
                              + (unsigned __int16)(91 * (v569 ^ 0x24)
                                                 - 958 * ((unsigned __int16)((1593683 * (v569 ^ 0x24u)) >> 16) >> 8))) ^ 0xC) << 28) ^ ((*(unsigned __int8 *)(STACK[0x688] + v568 % 0x3BE) ^ 0x9C) << 24);
  v571 = *(unsigned __int8 *)(STACK[0x688]
                            + (unsigned __int16)(91 * v553 - 958 * ((unsigned __int16)((1593683 * v553) >> 16) >> 8)));
  v572 = v571 ^ (16 * (*(unsigned __int8 *)(STACK[0x688] + (v556 ^ 0x1FB1CE11u)) ^ 0x9C)) ^ 0x9C;
  v573 = v572 ^ ((*(unsigned __int8 *)(STACK[0x688]
                                     + (unsigned __int16)(91 * (v559 ^ 0xC)
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * (v559 ^ 0xCu)) >> 16) >> 8))) ^ 0x9C) << 8);
  v574 = v573 ^ ((*(unsigned __int8 *)(STACK[0x688]
                                     + (unsigned __int16)(91 * v563
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v563) >> 16) >> 8))) ^ 0x9C) << 12);
  v575 = v574 ^ ((*(unsigned __int8 *)(STACK[0x688]
                                     + (unsigned __int16)(91 * v565
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v565) >> 16) >> 8))) ^ 0x9C) << 16) ^ ((*(unsigned __int8 *)(STACK[0x688] + (v567 ^ 0xA38C2345)) ^ 0x9C) << 20);
  v576 = v575 ^ 0x46A5D7E1 ^ (v570 + 1185273825 - (STACK[0x398] & (2 * v570)));
  LODWORD(STACK[0x60C]) = v528 ^ (16
                                * (*(unsigned __int8 *)(STACK[0x688]
                                                      + (unsigned __int16)(91 * (v572 >> 4) + 31577)
                                                      % 0x3BEu) ^ 0x9C)) ^ (((((((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (HIBYTE(v576) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (v576 >> 28) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (((v574 ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * v565 - 958 * ((unsigned __int16)((1593683 * v565) >> 16) >> 8))) ^ 0x9Cu) << 16)) >> 16) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v575 >> 20) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v573 >> 8) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((unsigned __int16)v574 >> 12) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (v571 & 0xF ^ 0xC) + 31577) % 0x3BEu) ^ 0x9C);
  LODWORD(STACK[0x640]) ^= v527;
  v577 = 1896266684 - LODWORD(STACK[0x414]) + v527 - LODWORD(STACK[0x41C]);
  v578 = 1896266684 - LODWORD(STACK[0x410]) + v528 - LODWORD(STACK[0x418]);
  LODWORD(STACK[0x634]) = v578 ^ (16
                                * (*(unsigned __int8 *)(STACK[0x688]
                                                      + (unsigned __int16)(91
                                                                         * (LODWORD(STACK[0x4D0]) >> 4)
                                                                         + 31577)
                                                      % 0x3BEu) ^ 0x9C)) ^ (((LODWORD(STACK[0x49C]) | *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((LODWORD(STACK[0x4A0]) >> 8) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((unsigned __int16)LODWORD(STACK[0x634]) >> 12) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (STACK[0x4D4] & 0xF ^ 0xC) + 31577) % 0x3BEu) ^ 0x9C);
  LODWORD(STACK[0x680]) = LODWORD(STACK[0x4E4]) ^ v577;
  v579 = v577 ^ (LODWORD(STACK[0x630]) + 844981848) ^ LODWORD(STACK[0x480]);
  v580 = LODWORD(STACK[0x420]) ^ v578 ^ (LODWORD(STACK[0x62C]) - 1974589358);
  v581 = (*(unsigned __int8 *)(STACK[0x688]
                             + (LODWORD(STACK[0x44C])
                                            + 63791
                                            - 958
                                            * ((4483265 * (unint64_t)(LODWORD(STACK[0x44C]) + 63791)) >> 32))) >> 4) ^ 9;
  v582 = 91
       * (*(unsigned __int8 *)(STACK[0x688] + LODWORD(STACK[0x478])) ^ (16
                                                                      * (*(unsigned __int8 *)(STACK[0x688]
                                                                                            + (unsigned __int16)(91 * ((v581 - ((2 * v581) & 0x18) - 100) ^ *(unsigned __int8 *)(STACK[0x688] + (LODWORD(STACK[0x450]) + 63791 - 958 * ((4483265 * (unint64_t)(LODWORD(STACK[0x450]) + 63791)) >> 32)))) - 31957)
                                                                                            % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v583 = v582 + 33579 - 958 * ((4483265 * (unint64_t)(v582 + 33579)) >> 32);
  v584 = (*(unsigned __int8 *)(STACK[0x688]
                             + (v582
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v582 + 63791)) >> 32))) >> 4) ^ 9;
  v585 = 91
       * (*(unsigned __int8 *)(STACK[0x688]
                             + (unsigned __int16)(91
                                                * ((HIBYTE(LODWORD(STACK[0x484])) & 0xF0 | (LODWORD(STACK[0x474]) >> 28)) ^ 0x5E)
                                                - 31957)
                             % 0x3BEu) ^ (16
                                        * (*(unsigned __int8 *)(STACK[0x688]
                                                              + (unsigned __int16)(91
                                                                                 * ((v584 - ((2 * v584) & 0x18) - 100) ^ *(unsigned __int8 *)(STACK[0x688] + (LODWORD(STACK[0x47C]) + 63791 - 958 * ((4483265 * (unint64_t)(LODWORD(STACK[0x47C]) + 63791)) >> 32))))
                                                                                 - 31957)
                                                              % 0x3BEu) ^ 0x9C)) ^ 0x9C)
       + 33579;
  v586 = LODWORD(STACK[0x454]) ^ ((*(unsigned __int8 *)(STACK[0x688] + v583) ^ 0x9C) << 24);
  v587 = STACK[0x488] & 0xFFFFFF0F | (16 * (STACK[0x458] & 0xF));
  v588 = (LODWORD(STACK[0x464]) >> 4) & 0xF0 | (LODWORD(STACK[0x658]) >> 8) & 0xF;
  v589 = ((LODWORD(STACK[0x4A8]) >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x64C]) >> 12)) ^ 0xE;
  v590 = (HIWORD(LODWORD(STACK[0x468])) & 0xF0 | (LODWORD(STACK[0x474]) >> 20) & 0xF) ^ 4;
  v591 = v586 ^ ((*(unsigned __int8 *)(STACK[0x688]
                                     + (v585 - 958 * ((4483265 * (unint64_t)v585) >> 32))) ^ 0xC) << 28);
  v592 = ((v586 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x474])) & 0xF) ^ 0xA;
  v593 = *(unsigned __int8 *)(STACK[0x688]
                            + (unsigned __int16)(91 * v587 - 958 * ((unsigned __int16)((1593683 * v587) >> 16) >> 8)));
  v594 = v593 ^ (16
               * (*(unsigned __int8 *)(STACK[0x688]
                                     + 91
                                     * (STACK[0x460] & 0xF0 ^ ((~LODWORD(STACK[0x658]) & 0xC0565ED)
                                                             + (LODWORD(STACK[0x658]) | 0x3FA9A12u)
                                                             + 16) & (LODWORD(STACK[0x658]) >> 4))
                                     % 0x3BE) ^ 0x9C)) ^ 0x9C;
  v595 = v594 ^ ((*(unsigned __int8 *)(STACK[0x688]
                                     + (unsigned __int16)(91 * v588
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v588) >> 16) >> 8))) ^ 0x9C) << 8);
  v596 = v595 ^ ((*(unsigned __int8 *)(STACK[0x688]
                                     + (unsigned __int16)(91 * v589
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v589) >> 16) >> 8))) ^ 0x9C) << 12);
  v597 = (v596 | ((*(unsigned __int8 *)(STACK[0x688]
                                      + (unsigned __int16)(91 * v590
                                                         - 958
                                                         * ((unsigned __int16)((1593683 * v590) >> 16) >> 8))) ^ 0x9C) << 20)) ^ ((*(unsigned __int8 *)(STACK[0x688] + LODWORD(STACK[0x444])) ^ 0x9C) << 16);
  v598 = *(unsigned __int8 *)(STACK[0x688]
                            + (unsigned __int16)(91 * v592
                                               - 958 * ((unsigned __int16)((1593683 * v592) >> 16) >> 8))) ^ 0x9C;
  v599 = v597 ^ 0xE991D949 ^ ((v598 << 24) - 376317623 - ((v598 << 25) & 0xD2000000));
  v600 = (HIBYTE(v591) & 0xF0 | (LODWORD(STACK[0x474]) >> 28)) ^ 0xE;
  v601 = ((((((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (HIBYTE(v599) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v599 ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * v600 - 958 * ((unsigned __int16)((1593683 * v600) >> 16) >> 8))) ^ 0xC) << 28)) >> 28) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (BYTE2(v597) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v597 >> 20) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v595 >> 8) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((unsigned __int16)v596 >> 12) + 31577) % 0x3BEu) ^ 0x9C) << 12);
  LODWORD(STACK[0x630]) = LODWORD(STACK[0x4A4]) ^ v579;
  v602 = LODWORD(STACK[0x3E8]) + v579;
  LODWORD(STACK[0x64C]) = v580 ^ (16
                                * (*(unsigned __int8 *)(STACK[0x688]
                                                      + (unsigned __int16)(91 * (v594 >> 4) + 31577)
                                                      % 0x3BEu) ^ 0x9C)) ^ (v601 | *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)((((((v593 & 0xF ^ 0xC) + 91) | (-92 - (v593 & 0xF ^ 0xC))) & 0x5F) + (((v593 & 0xF ^ 0xC) + 91) & 0x5B ^ (-92 - (v593 & 0xF ^ 0xC)) & 0x1B) - 95) * ((v593 & 0xF ^ 0xC) + 347)) % 0x3BEu) ^ 0x9C);
  v603 = LODWORD(STACK[0x3C8]) + v580 + LODWORD(STACK[0x3C4]);
  v604 = (*(unsigned __int8 *)(STACK[0x688] + LODWORD(STACK[0x498])) >> 4) ^ 9;
  v605 = 91
       * ((v604 - ((2 * v604) & 0x18) - 100) ^ *(unsigned __int8 *)(STACK[0x688]
                                                                                   + (LODWORD(STACK[0x4B0])
                                                                                                  + 63791
                                                                                                  - 958 * ((4483265 * (unint64_t)(LODWORD(STACK[0x4B0]) + 63791)) >> 32))))
       - 31957;
  v606 = 91 * ((LODWORD(STACK[0x4E0]) >> 4) & 0xF0 | (LODWORD(STACK[0x4F4]) >> 8) & 0xF);
  v607 = 91
       * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v606 - 31957) % 0x3BEu) ^ (16
                                                                                          * (*(unsigned __int8 *)(STACK[0x688] + v605 % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v608 = *(unsigned __int8 *)(STACK[0x688]
                            + (v607
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v607 + 63791)) >> 32))) >> 4;
  v609 = ((*(unsigned __int8 *)(STACK[0x688]
                              + (v607
                                             + 33579
                                             - 958 * ((4483265 * (unint64_t)(v607 + 33579)) >> 32))) ^ 0x9C) << 8) ^ (16 * (*(unsigned __int8 *)(STACK[0x688] + (LODWORD(STACK[0x494]) + 33579) % 0x3BEu) ^ 0x9C));
  v610 = ((unsigned __int16)LODWORD(STACK[0x650]) >> 12) ^ 5;
  v611 = 91 * (((LODWORD(STACK[0x540]) >> 8) & 0xF0 | v610) ^ 0x80);
  v612 = 91
       * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v611 - 31957) % 0x3BEu) ^ (16
                                                                                          * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (((v608 ^ 9) + ~(2 * ((v608 ^ 9) & 0xE ^ v608 & 2)) - 99) ^ *(unsigned __int8 *)(STACK[0x688] + (v606 + 63791 - 958 * ((4483265 * (unint64_t)(v606 + 63791)) >> 32)))) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v613 = v612 + 33579 - 958 * ((4483265 * (unint64_t)(v612 + 33579)) >> 32);
  v614 = *(unsigned __int8 *)(STACK[0x688]
                            + (v612
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v612 + 63791)) >> 32))) >> 4;
  v615 = (unsigned __int16)(91
                          * (((v614 ^ 9) + ((2 * ((v614 ^ 9 | 0x7C) ^ v614)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(STACK[0x688] + (v611 + 63791 - 958 * ((4483265 * (unint64_t)(v611 + 63791)) >> 32))))
                          - 31957)
       % 0x3BEu;
  v616 = (unsigned __int16)v615 - 508477725 - ((2 * v615) & 0x5C6);
  v617 = 91
       * (((v616 & 0xF ^ 0xC | v616 & 0xF ^ 3) & (HIWORD(LODWORD(STACK[0x650])) ^ 0x7901) | (LODWORD(STACK[0x540]) >> 12) & 0xF0) ^ 0x10);
  v618 = 91
       * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v617 - 31957) % 0x3BEu) ^ (16
                                                                                          * (*(unsigned __int8 *)(STACK[0x688] + (v616 ^ 0xE1B13EE3)) ^ 0x9C)) ^ 0x9C);
  v619 = v618 + 33579 - 958 * ((4483265 * (unint64_t)(v618 + 33579)) >> 32);
  v620 = (*(unsigned __int8 *)(STACK[0x688]
                             + (v618
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v618 + 63791)) >> 32))) >> 4) ^ 9;
  LOWORD(v620) = (unsigned __int16)(91
                                  * ((v620 - ((2 * v620) & 0x18) - 100) ^ *(unsigned __int8 *)(STACK[0x688] + (v617 + 63791) % 0x3BEu))
                                  - 31957)
               % 0x3BEu;
  v621 = 91 * ((HIWORD(LODWORD(STACK[0x628])) & 0xF0 | (LODWORD(STACK[0x3D4]) >> 20) & 0xF) ^ 0x70);
  v622 = 91
       * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v621 - 31957) % 0x3BEu) ^ (16
                                                                                          * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)v620) ^ 0x9C)) ^ 0x9C);
  v623 = v622 + 33579 - 958 * ((4483265 * (unint64_t)(v622 + 33579)) >> 32);
  v624 = *(unsigned __int8 *)(STACK[0x688]
                            + (v622
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v622 + 63791)) >> 32))) >> 4;
  v625 = 91
       * (((v624 ^ 9) + ((2 * ((v624 ^ 9 | 0x7C) ^ v624)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(STACK[0x688] + (v621 + 63791 - 958 * ((4483265 * (unint64_t)(v621 + 63791)) >> 32))))
       - 31957;
  v626 = 91 * (((LODWORD(STACK[0x628]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x3D4])) & 0xF) ^ 9);
  v627 = 91
       * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v626 - 31957) % 0x3BEu) ^ (16
                                                                                          * (*(unsigned __int8 *)(STACK[0x688] + v625 % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v628 = v627 + 33579 - 958 * ((4483265 * (unint64_t)(v627 + 33579)) >> 32);
  v629 = *(unsigned __int8 *)(STACK[0x688]
                            + (v627
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v627 + 63791)) >> 32))) >> 4;
  v630 = 91
       * (*(unsigned __int8 *)(STACK[0x688]
                             + (unsigned __int16)(91
                                                * ((HIBYTE(LODWORD(STACK[0x628])) & 0xF0 | (LODWORD(STACK[0x3D4]) >> 28)) ^ 0xB7)
                                                - 31957)
                             % 0x3BEu) ^ (16
                                        * (*(unsigned __int8 *)(STACK[0x688]
                                                              + (unsigned __int16)(91
                                                                                 * (((v629 ^ 9) + ((2 * ((v629 ^ 9 | 0x7C) ^ v629)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(STACK[0x688] + (v626 + 63791 - 958 * ((4483265 * (unint64_t)(v626 + 63791)) >> 32))))
                                                                                 - 31957)
                                                              % 0x3BEu) ^ 0x9C)) ^ 0x9C)
       + 33579;
  v631 = *(unsigned __int8 *)(STACK[0x688] + (v630 - 958 * ((4483265 * (unint64_t)v630) >> 32)));
  v632 = *(unsigned __int8 *)(STACK[0x688] + (LODWORD(STACK[0x4AC]) + 33579) % 0x3BEu) ^ 0x9C;
  v633 = STACK[0x40C] & 0xFFFFFF0F | (16 * (v632 & 0xF));
  v634 = v609 ^ v632;
  v635 = v634 ^ ((*(unsigned __int8 *)(STACK[0x688] + v613) ^ 0x9C) << 12);
  v636 = v634 & 0xF0 | (LODWORD(STACK[0x4F4]) >> 4);
  LOWORD(v626) = 91 * v636 - 958 * ((unsigned __int16)((1593683 * v636) >> 16) >> 8);
  LOBYTE(v636) = *(_BYTE *)(STACK[0x688]
                          + (unsigned __int16)(91 * v633 - 958 * ((unsigned __int16)((1593683 * v633) >> 16) >> 8)));
  v637 = v636 ^ 0x9C ^ (16 * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)v626) ^ 0x9C));
  v638 = (v609 >> 4) & 0xF0 | (LODWORD(STACK[0x4F4]) >> 8) & 0xF;
  v639 = v635 ^ ((*(unsigned __int8 *)(STACK[0x688] + v619) ^ 0x9C) << 16);
  v640 = v639 ^ ((*(unsigned __int8 *)(STACK[0x688] + v623) ^ 0x9C) << 20);
  v641 = ((v639 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x650])) & 0xF) ^ 1;
  v642 = ((*(unsigned __int8 *)(STACK[0x688]
                              + (unsigned __int16)(91 * ((v635 >> 8) & 0xF0 | v610)
                                                 - 958
                                                 * ((unsigned __int16)((1593683 * ((v635 >> 8) & 0xF0 | v610)) >> 16) >> 8))) ^ 0x9C) << 12) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * v638 - 958 * ((unsigned __int16)((1593683 * v638) >> 16) >> 8))) ^ 0x9C) << 8);
  v643 = v640 ^ ((*(unsigned __int8 *)(STACK[0x688] + v628) ^ 0x9C) << 24);
  v644 = HIWORD(v640) & 0xF0 | (LODWORD(STACK[0x3D4]) >> 20) & 0xF;
  v645 = (((v631 ^ 0xC) << 28) - ((v631 << 29) & 0x40000000) + 565488770) ^ v643;
  v646 = ((v643 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x3D4])) & 0xF) ^ 9;
  v647 = (HIBYTE(v645) & 0xF0 | (LODWORD(STACK[0x3D4]) >> 28)) ^ 0x27;
  v648 = v642 ^ v637 ^ ((*(unsigned __int8 *)(STACK[0x688]
                                            + (unsigned __int16)(91 * v641
                                                               - 958
                                                               * ((unsigned __int16)((1593683 * v641) >> 16) >> 8))) ^ 0x9C) << 16) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * v644 - 958 * ((unsigned __int16)((1593683 * v644) >> 16) >> 8))) ^ 0x9C) << 20);
  v649 = v648 ^ ((*(unsigned __int8 *)(STACK[0x688]
                                     + (unsigned __int16)(91 * v646
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v646) >> 16) >> 8))) ^ 0x9C) << 24);
  LOWORD(v645) = (unsigned __int16)(91 * ((unsigned __int16)v642 >> 12) + 31577) % 0x3BEu;
  v650 = ((((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (HIBYTE(v649) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v649 ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * v647 - 958 * ((unsigned __int16)((1593683 * v647) >> 16) >> 8))) ^ 0xCu) << 28)) >> 28) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (((v642 ^ v637 ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * v641 - 958 * ((unsigned __int16)((1593683 * v641) >> 16) >> 8))) ^ 0x9Cu) << 16)) >> 16) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v648 >> 20) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (((v642 ^ v637) >> 8) & 0xF) + 31577) % 0x3BEu) ^ 0x9C;
  v651 = v602 + LODWORD(STACK[0x3C0]);
  v652 = LODWORD(STACK[0x3C0]) + 37339642;
  v653 = LODWORD(STACK[0x4D8]) ^ ((v652 & 0x9E29F619)
                                + ((-37339643 - LODWORD(STACK[0x3C0])) & 0x9E29F619)
                                + v651
                                - 1692613713);
  LODWORD(STACK[0x658]) = *(unsigned __int8 *)(STACK[0x688]
                                             + (unsigned __int16)(91 * (v636 & 0xF ^ 0xC) + 31577) % 0x3BEu) ^ v603 ^ (((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)v645) ^ 0x9C) << 12) | (16 * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (v637 >> 4) + 30619) % 0x3BEu) ^ 0x9C))) ^ (v650 << 8);
  LODWORD(STACK[0x670]) = (((v651 + 960936392) ^ v652) + 1346145698 - ((2 * ((v651 + 960936392) ^ v652)) & 0xA0791B44)) ^ LODWORD(STACK[0x404]);
  LODWORD(STACK[0x650]) = ((v603 ^ (LODWORD(STACK[0x3F8]) - 1306835474))
                         - 1868745505
                         - ((2 * (v603 ^ (LODWORD(STACK[0x3F8]) - 1306835474))) & 0x213A69BE)) ^ LODWORD(STACK[0x3F0]);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x690]
                                                      + 8 * (LODWORD(STACK[0x624]) ^ (97 * LODWORD(STACK[0x620]))))
                                          - 8))(v653);
}

void sub_1CF31CB44(int a1, int a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;
  char v9;
  int v10;
  char v11;
  int v12;
  char v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  char v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  int v34;
  int v36;
  int v37;

  LODWORD(STACK[0x474]) = 0;
  v16 = LODWORD(STACK[0x3A4]) - v8;
  v17 = STACK[0x680];
  v18 = (LODWORD(STACK[0x680]) ^ 0x62DA7335u) >> ((v13 & 0x18 ^ 0x10) + (v13 & 0x18 ^ 8));
  LOBYTE(STACK[0x1050]) = v18 - ((2 * v18) & 0x38) - 100;
  v19 = STACK[0x64C];
  LOBYTE(STACK[0x1054]) = HIBYTE(LODWORD(STACK[0x64C])) - ((LODWORD(STACK[0x64C]) >> 23) & 0x38) - 100;
  LOBYTE(STACK[0x1051]) = (BYTE2(v17) ^ 0xDA) - ((2 * (BYTE2(v17) ^ 0xDA)) & 0x38) - 100;
  v20 = ~v9;
  *(_BYTE *)(STACK[0x388] + (v20 & 0x15 | (unint64_t)(v11 & 5))) = BYTE2(v19) - ((v19 >> 15) & 0x38) - 100;
  v21 = (LODWORD(STACK[0x3BC]) - 582) | 0x552;
  v22 = LODWORD(STACK[0x3A8]) + v16;
  v23 = v22 ^ LODWORD(STACK[0x3AC]);
  LODWORD(STACK[0x678]) = v23;
  LODWORD(STACK[0x660]) = v21;
  v24 = v23 - ((v16 ^ 0xBEC4B50C) - v22) - 581256141 - ((v21 ^ 0xBAB57DBC) & (2 * (v23 - ((v16 ^ 0xBEC4B50C) - v22))));
  LODWORD(STACK[0x658]) = v24;
  LODWORD(STACK[0x668]) = (v24 ^ 0xDD5ABC33) + v22 + 249524732 - ((2 * ((v24 ^ 0xDD5ABC33) + v22)) & 0x1DBEE3F8);
  v25 = LODWORD(STACK[0x3B8]) - a2;
  v26 = LODWORD(STACK[0x3B0]) + v25;
  LODWORD(STACK[0x648]) = (v26 ^ LODWORD(STACK[0x3B4]))
                        - ((v25 ^ 0xBEC4B50C)
                         - v26)
                        + v26
                        + 427020766
                        - ((2 * ((v26 ^ LODWORD(STACK[0x3B4])) - ((v25 ^ 0xBEC4B50C) - v26) + v26)) & 0x32E7A3BC);
  LOBYTE(STACK[0xC30]) = HIBYTE(v14) ^ 0xE3;
  LODWORD(STACK[0x62C]) = v10;
  v27 = STACK[0x638];
  LOBYTE(STACK[0xC34]) = HIBYTE(LODWORD(STACK[0x638])) ^ 0x89;
  v28 = STACK[0x610];
  LOBYTE(STACK[0xC38]) = HIBYTE(LODWORD(STACK[0x610])) ^ 5;
  v29 = STACK[0x60C];
  LOBYTE(STACK[0xC3C]) = HIBYTE(LODWORD(STACK[0x60C])) ^ 0xBE;
  v30 = STACK[0x634];
  LOBYTE(STACK[0xC40]) = HIBYTE(LODWORD(STACK[0x634])) ^ 0xBE;
  v31 = STACK[0x630];
  v32 = (LODWORD(STACK[0x630]) ^ 0xD84CA40A) >> (v20 & 0x18 ^ v11 & 8);
  LOBYTE(STACK[0xC48]) = HIBYTE(a1) ^ 0xAE;
  LOBYTE(STACK[0xC4C]) = HIBYTE(v15) ^ 0xB;
  LOBYTE(STACK[0xC44]) = v32 ^ 0xBE;
  v33 = STACK[0x63C];
  LOBYTE(STACK[0x1040]) = (HIBYTE(LODWORD(STACK[0x63C])) ^ 0x8B)
                        - ((2 * (HIBYTE(LODWORD(STACK[0x63C])) ^ 0x8B)) & 0x38)
                        - 100;
  v34 = STACK[0x61C];
  LOBYTE(STACK[0x1044]) = (HIBYTE(LODWORD(STACK[0x61C])) ^ 0xF)
                        - ((2 * (HIBYTE(LODWORD(STACK[0x61C])) ^ 0xF)) & 0x38)
                        - 100;
  LOBYTE(STACK[0x105C]) = HIBYTE(a4) - ((a4 >> 23) & 0x38) - 100;
  LOBYTE(STACK[0x1048]) = (HIBYTE(v12) ^ 0xF) - ((2 * (HIBYTE(v12) ^ 0xF)) & 0x38) - 100;
  v36 = STACK[0x640];
  LOBYTE(STACK[0x104C]) = (HIBYTE(LODWORD(STACK[0x640])) ^ 0x1E)
                        + ~(2 * ((HIBYTE(LODWORD(STACK[0x640])) ^ 0x1E) & 0x1D ^ HIBYTE(LODWORD(STACK[0x640])) & 1))
                        - 99;
  LOBYTE(STACK[0x1058]) = HIBYTE(a8) - ((a8 >> 23) & 0x38) - 100;
  LOBYTE(STACK[0xC31]) = BYTE2(v14) ^ 0x81;
  LOBYTE(STACK[0xC35]) = BYTE2(v27) ^ 0x39;
  LOBYTE(STACK[0xC45]) = BYTE2(v31) ^ 0xF2;
  LOBYTE(STACK[0xC3D]) = BYTE2(v29) ^ 0xBE;
  LOBYTE(STACK[0xC41]) = BYTE2(v30) ^ 0xBE;
  LOBYTE(STACK[0xC39]) = BYTE2(v28) ^ 0xFE;
  LOBYTE(STACK[0xC49]) = BYTE2(a1) ^ 0x53;
  LOBYTE(STACK[0xC4D]) = BYTE2(v15) ^ 0x77;
  LOBYTE(STACK[0x1045]) = (BYTE2(v34) ^ 0x13) - ((2 * (BYTE2(v34) ^ 0x13)) & 0x38) - 100;
  LOBYTE(STACK[0x1041]) = (BYTE2(v33) ^ 0x85) - ((2 * (BYTE2(v33) ^ 0x85)) & 0x38) - 100;
  LOBYTE(STACK[0x1049]) = (BYTE2(v12) ^ 0x13) - ((2 * (BYTE2(v12) ^ 0x13)) & 0x38) - 100;
  LOBYTE(STACK[0x104D]) = (BYTE2(v36) ^ 0x5D) - 2 * ((BYTE2(v36) ^ 0x5D) & 0x1E ^ BYTE2(v36) & 2) - 100;
  LOBYTE(STACK[0x1059]) = BYTE2(a8) - ((a8 >> 15) & 0x38) - 100;
  LOBYTE(STACK[0x105D]) = BYTE2(a4) - ((a4 >> 15) & 0x38) - 100;
  LOBYTE(STACK[0xC32]) = BYTE1(v14) ^ 0x7A;
  LOBYTE(STACK[0xC36]) = BYTE1(v27) ^ 0x1D;
  LOBYTE(STACK[0xC3A]) = BYTE1(v28) ^ 0x79;
  LOBYTE(STACK[0xC3E]) = BYTE1(v29) ^ 0xBE;
  LOBYTE(STACK[0xC4E]) = BYTE1(v15) ^ 0x47;
  LOBYTE(STACK[0xC42]) = BYTE1(v30) ^ 0xBE;
  LOBYTE(STACK[0xC46]) = BYTE1(v31) ^ 0x1A;
  LOBYTE(STACK[0xC4A]) = BYTE1(a1) ^ 0x5A;
  LOBYTE(STACK[0x1042]) = (BYTE1(v33) ^ 0xD0) + ~(2 * ((BYTE1(v33) ^ 0xD0) & 0x1E ^ BYTE1(v33) & 2)) - 99;
  LOBYTE(STACK[0x104E]) = (BYTE1(v36) ^ 0x30) - 2 * ((BYTE1(v36) ^ 0x30) & 0x1F ^ BYTE1(v36) & 3) - 100;
  v37 = STACK[0x680];
  LOBYTE(STACK[0x1052]) = (BYTE1(LODWORD(STACK[0x680])) ^ 0x73)
                        - ((2 * (BYTE1(LODWORD(STACK[0x680])) ^ 0x73)) & 0x38)
                        - 100;
  LOBYTE(STACK[0x104A]) = (BYTE1(v12) ^ 0x48) - ((2 * (BYTE1(v12) ^ 0x48)) & 0x38) - 100;
  LOBYTE(STACK[0x1056]) = BYTE1(v19) - ((v19 >> 7) & 0x38) - 100;
  LOBYTE(STACK[0x1046]) = (BYTE1(v34) ^ 0x48) - ((2 * (BYTE1(v34) ^ 0x48)) & 0x38) - 100;
  LOBYTE(STACK[0x105A]) = BYTE1(a8) - ((a8 >> 7) & 0x38) - 100;
  LOBYTE(STACK[0x105E]) = BYTE1(a4) - ((a4 >> 7) & 0x38) - 100;
  LOBYTE(STACK[0xC33]) = v14 ^ 0xD1;
  LOBYTE(STACK[0xC37]) = v27 ^ 0xE0;
  LOBYTE(STACK[0xC3F]) = v29 ^ 0xBE;
  LOBYTE(STACK[0xC3B]) = v28 ^ 0x68;
  LOBYTE(STACK[0xC43]) = v30 ^ 0xBE;
  LOBYTE(STACK[0xC47]) = v31 ^ 0xB4;
  LOBYTE(STACK[0xC4B]) = a1 ^ 0x4F;
  LOBYTE(STACK[0xC4F]) = v15 ^ 0xE5;
  LOBYTE(STACK[0x105B]) = a8 ^ 0x9C;
  LOBYTE(STACK[0x1043]) = v33 ^ 0xAE;
  LOBYTE(STACK[0x1047]) = v34 ^ 0xD4;
  LOBYTE(STACK[0x104B]) = v12 ^ 0xD4;
  LOBYTE(STACK[0x104F]) = v36 ^ 0x4C;
  LOBYTE(STACK[0x1053]) = v37 ^ 0xA9;
  LOBYTE(STACK[0x105F]) = a4 ^ 0x9C;
  LOBYTE(STACK[0x1057]) = v19 ^ 0x9C;
  LODWORD(STACK[0x640]) = 36;
  LODWORD(STACK[0x440]) = 1;
  JUMPOUT(0x1CF3095DCLL);
}

uint64_t sub_1CF31D234(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  BOOL v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  int v46;
  unsigned int v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  int v120;
  unsigned int v121;
  int v122;
  int v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  int v127;
  int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  int v132;
  int v133;
  unsigned int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  int v164;
  int v165;
  int v166;
  unsigned int v167;
  int v168;
  int v169;
  unsigned int v170;
  int v171;
  int v172;
  unsigned int v173;
  int v174;
  int v175;
  unsigned int v176;
  unsigned int v177;
  int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  unsigned int v200;
  int v201;
  int v202;
  unsigned int v203;
  int v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  int v210;
  int v211;
  unsigned int v212;
  int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  int v217;
  int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  unsigned int v227;
  int v228;
  unsigned int v229;
  unsigned int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  unsigned int v235;
  int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  unsigned int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  int v263;
  int v264;
  int v265;
  unsigned int v266;
  unsigned int v267;
  int v268;
  int v269;
  unsigned int v270;
  int v271;
  unsigned int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  unsigned int v277;
  unsigned int v278;
  int v279;
  unint64_t v280;
  unsigned int v281;
  unsigned int v282;
  int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  int v291;
  int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  int v296;

  LODWORD(STACK[0x648]) = v5;
  LODWORD(STACK[0x678]) = a3;
  LODWORD(STACK[0x47C]) = v6;
  v10 = (v5 - 733) | 0x420;
  v12 = LODWORD(STACK[0x64C]) + v4;
  v11 = v12 == 0;
  LODWORD(STACK[0x640]) = v10;
  v13 = (v10 ^ 0x36550A2A ^ (2 * v12) & 0x36559FFC) + (v12 ^ 0x445585E);
  v14 = v13 - ((2 * v13 - 914150680) & 0xF6748916) - 537142785;
  v15 = LODWORD(STACK[0x658]) + v13;
  v16 = v14 ^ 0x1AEC4D6D;
  v17 = v15 + 1720179601;
  if (v11)
    v16 = v3;
  v18 = v13
      + LODWORD(STACK[0x680])
      - LODWORD(STACK[0x658])
      + (LODWORD(STACK[0x668]) ^ 0x32312CAE)
      - LODWORD(STACK[0x658])
      + 1897306845;
  v19 = LODWORD(STACK[0x660]) ^ 0x215A2D1C;
  v20 = (LODWORD(STACK[0x670]) ^ 0xEB483B6) - v7 + 1662953185;
  v21 = (v14 ^ 0x6513B292) + 2 * (v16 & (v14 ^ 0x7B3A448B));
  v22 = v19 + v7 - 1662953185;
  v23 = v19 - 1642701941;
  v24 = v19 - v7 + (LODWORD(STACK[0x650]) ^ 0x6DF82299) + v20 + 20251244;
  v25 = v17 ^ v18 ^ v21;
  v26 = v15 - 1670835872;
  v27 = v22 - ((2 * v22 + 674427844) & 0x2BB80A80) + 1240825634;
  v18 ^= 0xB6BC99F7;
  v28 = ((v24 ^ v23) - 1780742848 - ((2 * (v24 ^ v23)) & 0x2BB80A80)) ^ v27;
  v29 = (v27 ^ 0x95DC0540) + (((v25 & 0x7FE1B7CF ^ 0x7FE1B7CF) + (v25 & 0x7FE1B7CF)) & 0xB5E33DDF);
  v30 = v18 + 1105730490;
  v31 = v18 ^ v26;
  v24 ^= 0xB6BC99F7;
  v32 = v30 ^ 0xD605DC93 ^ v31;
  v33 = (v31 ^ 0x3505F886) + v25;
  v34 = v32 - v33 - ((2 * (v32 - v33) + 673079288) & 0x20D96854) + 1685840934;
  v35 = ((LODWORD(STACK[0x668]) ^ 0x32312CAE) - LODWORD(STACK[0x658]) + 845598291) ^ 0x957BD133 ^ v17 ^ v26;
  v36 = (v29 ^ v24 ^ 0x3505F886) + v28;
  v37 = ((v24 + 1105730490) ^ 0xD605DC93 ^ v29 ^ v24) - v36;
  v38 = v37 - ((2 * v37 + 1990648) & 0x48D49FC) + 1448465658;
  v39 = (((LODWORD(STACK[0x670]) ^ 0xEB483B6) - v7 - 117789663 - ((2 * v20) & 0x2BB80A80)) ^ 0x957BD133 ^ v27 ^ v29)
      + (v38 ^ 0x7DB95B01)
      + 1;
  v40 = v38 ^ (v36 - 1372097277 + ~((2 * (v36 + 737202180)) & 0x48D49FC));
  v41 = v34 ^ (v33 + 737202180 - ((2 * (v33 + 737202180)) & 0x20D96854) - 1871924182);
  v42 = v35 + (v34 ^ 0x6F934BD5) + 1;
  v43 = ((2 * (v41 - v42)) & 0xEBB569F8) + ((v41 - v42) ^ 0xF5DAB4FC);
  v44 = v43 + 170216196 + (v34 ^ 0xFB63F14D);
  v45 = v43 + 170216196 + (v42 ^ 0x36BC6671);
  v46 = v25 - 404277547 - v41 - v45;
  v47 = ((2 * (v40 - v39)) & 0xD6735D66) + ((v40 - v39) ^ 0xEB39AEB3);
  v48 = v47 + 348541261 + (v39 ^ 0x36BC6671);
  v49 = v28 - 404277547 - v40 - v48;
  v50 = v44 + v45;
  v51 = v47 + 348541261 + (v38 ^ 0xE949E199);
  v52 = v46 ^ v50;
  v53 = v51 + v48;
  v54 = v49 ^ v53;
  v55 = ((2 * (v52 ^ (v43 - 293800613))) & 0xFEB19CAE) + (v52 ^ (v43 - 293800613) ^ 0x7F58CE57);
  v56 = ((2 * (v54 ^ (v47 - 115475548))) & 0x7D6F4B7E) + (v54 ^ (v47 - 115475548) ^ 0x3EB7A5BF);
  v57 = (v52 - 2136526423 + v55) ^ 0x31B2549C;
  v58 = v54 - 1052222911 + v56;
  v59 = v55 - ((2 * v55 + 1904548550) & 0xBA3893F2) + 366925660;
  v60 = v59 ^ (v44 - v55 + 602391577);
  v61 = v56 - ((2 * v56 + 1925671926) & 0x6388898E) + 724040386;
  v62 = v50 + 1534134847 + ((2 * v59) ^ 0x45C76C0D);
  v63 = v62 + v57;
  v64 = (v57 - 585348615 - ((2 * v57) & 0xBA3893F2)) ^ v59;
  v65 = v60 ^ 0xE945AD0E ^ (v63 - ((2 * v63) & 0x68B3C9EE) + 878306551);
  v66 = v61 ^ (v51 - v56 - 481911935);
  v67 = v64 - 831385319 + v62;
  v68 = v58 ^ 0x31B2549C;
  v69 = v53 + 1534134847 + ((2 * v61) ^ 0x9C777671);
  v70 = ((v58 ^ 0x31B2549C) - 1312537401 - 2 * ((v58 ^ 0x31B2549C) & 0x31C444E7 ^ v58 & 0x20)) ^ v61;
  v71 = v66 ^ 0x43930CD4 ^ (v69 + v68 - ((2 * (v69 + v68)) & 0xE4AE9026) - 229160941);
  v66 ^= 0xB1C444C7;
  v72 = ((2 * (v66 - 671374425)) & 0xFBFAF7FA) + ((v66 - 671374425) ^ 0xFDFD7BFD);
  v60 ^= 0xDD1C49F9;
  v73 = v69 + v70 - 831385319;
  v74 = v65 + v60 - 671374425;
  v75 = v71 + v72 + 33719299;
  v76 = v60 + 1455947940;
  v77 = ((2 * ((v74 ^ 0x241AA2C7) + (v67 ^ (v60 - 671374425)))) & 0xFF3A9D4E)
      + (((v74 ^ 0x241AA2C7) + (v67 ^ (v60 - 671374425))) ^ 0xFF9D4EA7);
  v78 = v60 - v77 + 1449480011;
  v79 = v70 + v73 + v71 + (v75 ^ 0xDBE55D38) + 1;
  v80 = (v77 + 6467929) ^ (v64 + v67 + v65 + (v74 ^ 0xDBE55D38) + 1);
  v81 = (v72 + 33719299) ^ v73;
  v82 = v74 ^ 0x1EDF6CAE ^ (v78 - ((2 * v78) & 0x758B9CD2) + 986041961);
  v83 = ((2 * ((v75 ^ 0x241AA2C7) + v81)) & 0xFFD77FBC) + (((v75 ^ 0x241AA2C7) + v81) ^ 0x7FEBBFDE);
  v84 = v72 - v83;
  v85 = v80 - v78;
  v86 = ((2 * (v85 ^ v76)) & 0xECFFFEBE) + (v85 ^ v76 ^ 0x767FFF5F);
  v87 = v72 - v83 + 12230878;
  v85 -= 1336954512;
  v88 = ((v83 - 2146156510) ^ v79) - v87;
  v89 = (v82 + 1110500981) ^ v85;
  v90 = v88 ^ (v66 + 1455947940);
  v83 -= 1024211550;
  v88 -= 1336954512;
  v91 = ((v75 ^ 0x29B8A5F1 ^ (v84 - ((2 * v87) & 0x1B440E6C) + 240953364)) + 1110500981) ^ v88;
  v92 = ((2 * (v85 ^ (v77 + 1128412889))) & 0x4FF7F63E) + (v85 ^ (v77 + 1128412889) ^ 0x27FBFB1F);
  v93 = ((2 * (v88 ^ v83)) & 0x7EEFED62) + (v88 ^ v83 ^ 0xBF77F6B1);
  v94 = (((_WORD)v93 + 62) & 0x200 ^ 0xBBFEB756) + 2 * (((_WORD)v93 + 62) & 0x200);
  v95 = v94 + 1558572544;
  v96 = (((v89 ^ 0x6BF7BCFE) - v92 + ((2 * v89) & 0xD7EF79FC) - 1140572639) ^ (v86 + 72243936)) - (v92 - 1370573872);
  v97 = ((v77 - v86 + 1056168953) ^ 0xD6E56D2C) + 767096603;
  v98 = ((-1082657103 - v93 + v91) ^ (v90 + 2060343871)) - v93 - 382908478;
  v99 = (v92 - 1370573872) ^ (v86 - 1943513495);
  v100 = (v92 - 2120416219) ^ 0xAF66C5A2;
  v101 = v96 ^ 0x11203748;
  v102 = v99 - v97;
  v103 = v102 - 266674031;
  v104 = v94 + 1140934826;
  v105 = v102 - 629182004;
  v106 = ((v83 - (v90 + 2060343871)) ^ 0xD6E56D2C) + 767096603;
  v107 = -723297108 - v94;
  if ((v104 & (v90 + 44586440)) == 0)
    v107 = v95;
  v108 = v105 ^ v97;
  v109 = v101 - ((2 * v101 - 1304197584) & 0xD404C046) - 1021041861;
  v110 = ((2 * ((v109 ^ 0xEA026023) + v103)) & 0xB7D1FDF4) + (((v109 ^ 0xEA026023) + v103) ^ 0x5BE8FEFA);
  v111 = ((v90 - 373051278 + v107) ^ (v93 + 382908478) & 0xFFFFFDFF) - v106;
  v112 = v109 ^ (v100 - 652098793 + v103 - ((2 * (v100 - 652098793 + v103) - 725015946) & 0xD404C046) - 731451042);
  v113 = (v98 ^ 0x11203748) - ((2 * (v98 ^ 0x11203748) + 843286064) & 0x2E83BB56) + 1885577411;
  v114 = v111 - 629182004 + (v113 ^ 0x9741DDAB);
  v115 = (((v111 - 629182004) ^ v106) + (v113 ^ 0x9741DDAB)) ^ v114;
  v116 = (v111
        + ((v93 - 366933869) ^ 0xAF66C5A2)
        - ((2 * (v111 + ((v93 - 366933869) ^ 0xAF66C5A2)) + 658663878) & 0x2E83BB56)
        + 1256395406) ^ v113;
  v117 = (v110 - 1904504255) ^ ((v109 ^ 0xEA026023) + v108);
  v109 ^= 0xE88AC094;
  v113 ^= 0x95C97D1C;
  v118 = v110 - 1304198785 + v117;
  v119 = (v109 - 285879690) ^ (v112 - 689233507);
  v120 = v109 - v110 + 1018243718;
  v121 = 1304123408 - v110;
  v122 = ((v116 - 689233507) ^ (v113 - 285879690)) + 903686978;
  v123 = v113 - v114 - 886260537;
  v124 = ((2 * v120) & 0xE3BEF3BE ^ 0xE3820396) + (v120 ^ 0xA3E7814);
  v125 = v119 + 903686978;
  LOBYTE(STACK[0xCFB]) = v122 - ((2 * v122) & 0x38) - 100;
  v126 = v124 + (v121 ^ 0x1210F717);
  v127 = v124 - 1910471135 + (v121 ^ 0x1210F717);
  LOBYTE(STACK[0xFD2]) = (v119 + 66) ^ 0xAF;
  v128 = (-600380847 - v114) ^ 0x1210F717;
  v129 = (v114 + 600305470 + v115) ^ v128;
  v130 = (v118 - ((2 * v118) & 0xF8CA96C8) - 60470428) ^ v121;
  LOBYTE(v121) = v126 - ((2 * v126 + 66) & 0x66) + 84;
  v131 = v130 ^ 0xC38E5C99;
  v132 = ((2 * v123) & 0x34FFE6EE ^ 0x34C20286) + (v123 ^ 0x619EF2BC);
  LOBYTE(STACK[0x102D]) = v121 - ((2 * v121) & 0x38) - 100;
  v133 = v132 - 444593015 + v128;
  LOBYTE(STACK[0xD56]) = v133 - ((2 * v133) & 0x38) - 100;
  LOBYTE(STACK[0xCCA]) = v130 ^ 0x36;
  v134 = v129 ^ 0xD2041F15;
  v135 = v131 + v124 - 1910471135;
  LOBYTE(STACK[0xDB1]) = v129 ^ 0x76;
  v136 = v132 - 444593015 + (v129 ^ 0x2DFBE0EA);
  v137 = v125 + v124 - v131;
  v138 = (v135 ^ v127 ^ 0xCE5AFAFF) + v137 + ((2 * (v135 ^ v127)) & 0x9CB5F5FE);
  LOBYTE(STACK[0xE0C]) = v132 - ((2 * v132 + 18) & 0x38) + 37;
  LOBYTE(STACK[0xD25]) = v120 ^ 0x64;
  v139 = v134 + v132 + v122;
  v140 = v132 - v136;
  v141 = v124 - v135;
  LOBYTE(STACK[0xF78]) = v140 - ((2 * v140 + 30) & 0x38) + 11;
  LOBYTE(STACK[0xD80]) = (v137 - 108) ^ 0xAF;
  v142 = v139 + 1 + (v136 ^ v133);
  LOBYTE(STACK[0xE67]) = v139 + 1 - 2 * ((v139 + 29) & 0x1E ^ (v139 + 1) & 2) - 104;
  LOBYTE(STACK[0xEC2]) = v142 + 51 - ((2 * (v142 + 51) + 18) & 0x38) + 101;
  v143 = v135 + 1195047458 + v138;
  v144 = v137 - v143;
  LOBYTE(STACK[0xF1D]) = v136 - ((2 * v136 + 26) & 0x38) + 41;
  LOBYTE(STACK[0xDDB]) = (v138 - 107) ^ 0xAF;
  v145 = v136 - 1845282474 + v142 - 621657549;
  LOBYTE(STACK[0xE36]) = (v135 - 115) ^ 0xAF;
  LOBYTE(STACK[0xE91]) = (v141 + 7) ^ 0xAF;
  v146 = v139 + 1 - v145 - 1457393668;
  v147 = v144 + 1572099392 - ((2 * (v144 + 1572099392) + 9350470) & 0x79676C88) - 1124397849;
  v148 = v145 - v146;
  v149 = v148 - 1231214750 - ((2 * v148) & 0x6D3A4EC4);
  v150 = ((2 * (v141 + v138 + 290868381 + (v147 ^ 0xC34C49BB))) & 0x3DF3DC6E)
       + ((v141 + v138 + 290868381 + (v147 ^ 0xC34C49BB)) ^ 0x1EF9EE37);
  v141 += 829812593;
  v151 = v146 - ((2 * v146 + 410158238) & 0xCBD8BD30) + 1915068647;
  LOBYTE(STACK[0xFD3]) = v151 ^ 4;
  LOBYTE(STACK[0xEEC]) = (v144 - 29) ^ 0xAF;
  v152 = v143
       + 200401699
       - (v144
        + 1572099392)
       + 91127027
       - ((2 * (v143 + 200401699 - (v144 + 1572099392) + 2185)) & 0xADCE8D4);
  v153 = ((2 * (v140 + v142 - 1905240980 + (v151 ^ 0x1A13A167))) & 0x8EE9D77A)
       + ((v140 + v142 - 1905240980 + (v151 ^ 0x1A13A167)) ^ 0x4774EBBD);
  LOBYTE(STACK[0xFA2]) = v152 ^ 0xC5;
  LOBYTE(STACK[0xF47]) = (v150 - 55) ^ 0xAF;
  LOBYTE(STACK[0x102E]) = v153 - ((2 * v153 + 6) & 0x38) - 33;
  v140 -= 1999276583;
  v154 = ((v147 ^ 0xBA734FDF) + 91124842 - ((2 * (v147 ^ 0xBA734FDF)) & 0xADCE8D4)) ^ v152;
  LOBYTE(v135) = (v148 + 98 - ((2 * v148) & 0xC4)) ^ 0xFE;
  *(_BYTE *)(v9 + (((v144 + 1572099496) ^ (-1572099369 - v144)) & 0x4BLL)) = v135;
  LOBYTE(STACK[0xD26]) = v140 - ((2 * v140) & 0x38) - 100;
  v155 = v154 + v150;
  v156 = v151 ^ v149 ^ 0xD5B18061;
  LOBYTE(STACK[0xFFD]) = v141 ^ 0xAF;
  v157 = v153 + v156;
  v158 = v153 + v140;
  v159 = v141 - v154 - ((2 * (v141 - v154)) & 0x8CE00E48) - 965736668;
  LOBYTE(STACK[0xCF5]) = (v154 + v150 + 37) ^ 0xAF;
  v160 = v158 - v157;
  v161 = v156 - 1198844861 + v157;
  v157 -= 874591329;
  LOBYTE(STACK[0xD81]) = v135;
  LOBYTE(STACK[0xDDC]) = v157 - ((2 * v157) & 0x38) - 100;
  v162 = v154 - 519695927 + v154 + v150;
  LOBYTE(STACK[0xC9A]) = v152 ^ 0xC5;
  *(_BYTE *)(v9 + (v159 & 0xD0 ^ 0xD0) + (unint64_t)(v159 & 0xD0)) = v162 ^ 0xAF;
  v163 = (v155 - 195442395) ^ (((2 * ((v152 ^ 0x56E746A) + 362507973)) & 0xD4C92276)
                             + (((v152 ^ 0x56E746A) + 362507973) ^ 0xEA64913B));
  LOBYTE(STACK[0xE92]) = v160 - ((2 * v160) & 0x38) - 100;
  LOBYTE(STACK[0xDAB]) = v159 ^ 0x8B;
  v164 = v157 ^ v149;
  v165 = (v160 - 1231214750 - ((2 * v160) & 0x6D3A4EC4)) ^ v149;
  v166 = v159 ^ v152;
  LOBYTE(STACK[0xE37]) = v161 - ((2 * v161) & 0x38) - 100;
  v167 = v161 - v165;
  v149 ^= 0xB69D2762;
  v168 = (v152 ^ 0x56E746A) + 729305954;
  v169 = v149 - 1953369531 + v165;
  LOBYTE(STACK[0xE06]) = ((v152 ^ 0x6A) + 98) ^ 0xAF;
  v170 = v167 + (v164 ^ 0xB69D2762);
  v171 = v149 - 2 * ((v149 + 192435042) & 0x1EA2F49D ^ v148 & 1);
  LOBYTE(STACK[0xFA3]) = v170 - ((2 * v170) & 0x38) - 100;
  v172 = v163 + v162 + (v166 ^ 0x3CE18CB1) + 1;
  LOBYTE(STACK[0xEBC]) = v172 ^ 0xAF;
  LOBYTE(STACK[0xE61]) = v163 ^ v168 ^ 0xAF;
  LOBYTE(STACK[0xFFE]) = v169 - ((2 * v169) & 0x38) - 100;
  v173 = (v166 ^ ((v152 ^ 0x56E746A) - ((2 * ((v152 ^ 0x56E746A) - 1953369531)) & 0x863CE69C) + 1320183187))
       + 2 * ((v166 ^ 0x431E734E) & ((v152 ^ 0x56E746A) - 1953369531));
  v171 -= 904181762;
  v174 = v164 ^ v171;
  LOBYTE(STACK[0xEED]) = v171;
  v175 = (v169 - ((2 * v169) & 0x3D45E938) - 1633487716) ^ v171;
  v176 = (v174 ^ 0xD7C02C01) + v170 + 1;
  v177 = (v147 & 0x9E29F619 ^ 0xFBF74FFF) + (v147 & 0x9E29F619 ^ 0x408B000) - (v163 ^ v168) + v172;
  v178 = (v173 ^ v168) - (v177 + 1);
  v179 = v163 ^ v168 ^ 0xE6C6FD03;
  v180 = v175 - v176;
  LOBYTE(STACK[0xF48]) = v174 ^ 0x62;
  LOBYTE(STACK[0xDAC]) = v180 - ((2 * v180) & 0x38) - 100;
  v181 = v163 + 1768550189 - v179;
  v174 ^= 0xCEF92EFD;
  LOBYTE(STACK[0xF17]) = v173 ^ 0xAF;
  LOBYTE(STACK[0xF72]) = v181 ^ 0xAF;
  LOBYTE(STACK[0xCF6]) = v174 - ((2 * v174 + 38) & 0x38) + 111;
  LOBYTE(STACK[0xFCD]) = (v179 - 45) ^ 0xAF;
  v182 = (v164 ^ 0xB69D2762) + 1768550189 - v174;
  v183 = v177 + 1 + v179 - ((2 * (v177 + 1 + v179) + 486151560) & 0x69AF4B34) - 2091601826;
  LOBYTE(STACK[0x1028]) = (v177 - 14) ^ 0xAF;
  LOBYTE(STACK[0xC9B]) = v182 - ((2 * v182) & 0x38) - 100;
  LOBYTE(STACK[0xCC5]) = v178 ^ 0xAF;
  LOBYTE(STACK[0xD51]) = v176 - ((2 * v176 + 34) & 0x38) - 115;
  v184 = v174 + 1316817604 + v176;
  v185 = ((v179 - 1768550189) ^ 0xEB4CB09C) - 1003536539 - ((2 * ((v179 - 1768550189) ^ 0xEB4CB09C)) & 0x885E7ECA);
  v186 = v177 + 1 + v181;
  v187 = (v185 ^ 0x3BD0C09A) + v178 + (v183 ^ 0x34D7A59A) + 1;
  v188 = v187 + 1957008297 - ((2 * v187) & 0xE94B2752);
  LOBYTE(v178) = (v186 - 15) ^ 0xAF;
  v189 = (v174 - 1768550189) ^ 0xEB4CB09C;
  v190 = v180 + v184 - v189 - 789891452 - ((2 * (v180 + v184 - v189)) & 0xA1D66D08);
  LOBYTE(STACK[0xD20]) = v178;
  v191 = (v126 - 269053944) & 0xA6BC3BFF;
  v192 = v182 - 1209599503 + v176 + 42480926 - ((2 * (v182 - 1209599503 + v176)) & 0x5106A3C);
  LOBYTE(STACK[0xE07]) = v192 ^ 0x82;
  LOBYTE(STACK[0xD7B]) = ((v185 ^ 0x65) - 94) ^ 0xAF;
  *(_BYTE *)(v9
           + (((v191 ^ 0xA6BC3BFF) + v191) ^ 0x60C180D ^ ((v183 & 0xA2B82210 ^ 0x82280200)
                                                        + (v183 & 0xA2B82210 ^ 0x20902010)) & 0xE1F06630)) = v189 - ((2 * v189 + 4) & 0x38) + 62;
  LOBYTE(STACK[0xEBD]) = (v184 ^ 0x35) + (~(2 * (v184 ^ 0x35)) | 0xC7) - 99;
  v193 = ((2 * ((v185 ^ 0xC42F3F65) + 978454691 + (v188 ^ 0x8B5A6C56))) & 0x2BFD777E)
       + (((v185 ^ 0xC42F3F65) + 978454691 + (v188 ^ 0x8B5A6C56)) ^ 0x95FEBBBF);
  LOBYTE(STACK[0xDD6]) = v183;
  LOBYTE(STACK[0xF73]) = v192 ^ 0x82;
  v194 = v189 + 978454691 + (v190 ^ 0x2F14C97B);
  v195 = (v183 ^ 0x942EFDAF) + v193;
  v196 = v195 + 1778467905;
  LOBYTE(STACK[0xF18]) = v190 ^ 0x18;
  v197 = v194 + (v184 ^ 0xA0F95835);
  LOBYTE(STACK[0xE31]) = v188 ^ 6;
  v194 += 641916410;
  LOBYTE(STACK[0xFCE]) = v194 + (~(2 * v194) | 0xC7) - 99;
  v198 = (v193 + 83009) & 0xB7FFDE;
  v199 = ((v195 - 559491094 - ((2 * (v195 + 1778467905)) & 0xE94B2752)) ^ v188) - (v195 + 1778467905) - 951481635;
  v193 -= 1874582981;
  LOBYTE(STACK[0xE8C]) = v178;
  LOBYTE(STACK[0xF42]) = (v195 + 100) ^ 0xAF;
  LOBYTE(STACK[0x1029]) = v197 - ((2 * v197 + 6) & 0x38) - 65;
  v200 = ((v197 - 789891452 - ((2 * v197) & 0xA1D66D08)) ^ v190) - v197;
  LOBYTE(STACK[0xEE7]) = v193 ^ 0xAF;
  LOBYTE(STACK[0xF9D]) = v199 ^ 0xAF;
  v201 = v199 ^ (v186 - 1209599503);
  v202 = 2 * (v200 - 951481635);
  *(_BYTE *)(v9 + (((v198 ^ 0xB7FFDE) + v198) & (v192 & 0x1000046 ^ 0x1000040 | v192 & 0x1000046 ^ 6u))) = v200 - 35 - (v202 & 0x38) - 100;
  v203 = ((2 * ((v193 ^ 0x25F4550F) - v201)) & 0xF7AF7DEE) + (((v193 ^ 0x25F4550F) - v201) ^ 0x7BD7BEF7);
  v204 = (v200 - (v202 & 0x5106A3C) - 909000709) ^ v192;
  v205 = ((2 * ((v194 ^ 0x25F4550F) - v204)) & 0xFFABF73E) + (((v194 ^ 0x25F4550F) - v204) ^ 0xFFD5FB9F);
  v206 = v186 + v196 + v203 - 1216623841;
  v207 = v206 + v186;
  v192 ^= 0x288351Eu;
  v208 = ((2 * (v192 + v197 + 954235268 + v205)) & 0xF77FDBF6) + ((v192 + v197 + 954235268 + v205) ^ 0x7BBFEDFB);
  v209 = v192 - 2076175867 + v208;
  v210 = v204 - v209 + 860691781;
  LOBYTE(STACK[0xFF8]) = (v207 - 86) ^ 0xAF;
  LOBYTE(STACK[0xCF0]) = (v206 - 2) ^ 0xAF;
  v211 = v201 - (v207 - 1296456615) + 1893065391;
  LOBYTE(STACK[0xE32]) = v210 - ((2 * v210) & 0x38) - 100;
  LOBYTE(STACK[0xD7C]) = v205 - ((2 * v205 + 2) & 0x38) - 3;
  LOBYTE(STACK[0xD21]) = v209 - ((2 * v209 + 54) & 0x38) + 87;
  LOBYTE(STACK[0xDD7]) = v208 - ((2 * v208 + 10) & 0x38) - 95;
  v212 = v209 + v205;
  v213 = v207 - 1296456615 + v203 - 1216623841;
  v214 = (436319503 - v203) & 0xEA64913B;
  v206 += 1493664613;
  LOBYTE(STACK[0xD4B]) = v211 ^ 0xAF;
  v215 = (v203 - 436319504) & 0xEA64913B;
  v216 = (v213 + 1540789051) ^ (v203 + 1625345800);
  v208 += 536719468;
  LOBYTE(STACK[0xC95]) = (v203 + 9) ^ 0xAF;
  v217 = (v212 - 857938148) ^ (v205 - 589131168);
  v218 = STACK[0x384];
  v219 = ((2 * (v211 - (v213 + (v206 ^ 0x2D226FD8)) - 1540789051)) & 0xFBBDFFFE)
       + ((v211 - (v213 + (v206 ^ 0x2D226FD8)) - 1540789051) ^ LODWORD(STACK[0x384]));
  v220 = v215 + v214 + v213 + v219;
  v221 = ((2 * ((v208 ^ 0xD2DD9027) - v212 + v210 + 857938149)) & 0xF7FFCFDA)
       + (((v208 ^ 0xD2DD9027) - v212 + v210 + 857938149) ^ 0xFBFFE7ED);
  v222 = v221 + v212;
  LOBYTE(STACK[0xDA6]) = (v220 + 1) ^ 0xAF;
  LOBYTE(STACK[0xEE8]) = v217 - ((2 * v217) & 0x38) - 100;
  LOBYTE(STACK[0xE01]) = v216 ^ 0xAF;
  LOBYTE(STACK[0xF43]) = v208 ^ 0x44;
  v223 = (v206 ^ 0x2D226FD8) + v218 - (v220 + 1903297024);
  v224 = v216
       - 759789048
       - (v220
        + 1903297024)
       - 1203941522
       - ((2 * (v216 - 759789048 - (v220 + 1903297024))) & 0x707A9EDC);
  LOBYTE(STACK[0xE5C]) = v206 ^ 0x77;
  LOBYTE(STACK[0xE8D]) = v222 - ((2 * v222 + 30) & 0x38) - 53;
  v225 = (v208 ^ 0x2D226FD8) - v222 + 790823121;
  v226 = v224 ^ (v220 - 1631881224);
  LOBYTE(STACK[0xEB7]) = (v219 + 1) ^ 0xAF;
  v222 += 2080732454;
  v227 = v217 - v222;
  LOBYTE(STACK[0xF9E]) = v221 - ((2 * v221 + 38) & 0x38) - 81;
  v228 = v226 ^ v223;
  v229 = v224 ^ 0xAF5D4A5B;
  v230 = v219
       + 1254688315
       + (v226 ^ 0xB83D4F6E)
       - 1617532835
       - ((2 * (v219 + 1254688315 + (v226 ^ 0xB83D4F6E))) & 0x3F2CD0BA);
  v231 = v227 ^ v222;
  LOBYTE(STACK[0xFF9]) = v231 ^ 0x9C;
  LOBYTE(STACK[0xF12]) = v226 ^ 0xC1;
  *(_BYTE *)(v9 + (v230 & 0x2ED ^ 0x2A0) + (unint64_t)(v230 & 0x2ED ^ 0x4D)) = v224 ^ 0xF4;
  v232 = v221 - 861397427 + v231 - 1322319917 - ((2 * (v221 - 861397427 + v231)) & 0x625DFFA6);
  v233 = v227 ^ 0x17600535;
  v234 = v226 ^ 0x27AB2733 ^ v230;
  v235 = (v228 ^ 0x47C2B091)
       + (v230 ^ 0x9F96685D)
       + 1
       - ((2 * ((v228 ^ 0x47C2B091) + (v230 ^ 0x9F96685D) + 1)) & 0x16A9FD18)
       - 1957364084;
  v236 = v231 ^ v225;
  LOBYTE(STACK[0xC96]) = v233 - ((2 * v233) & 0x38) - 100;
  LOBYTE(STACK[0xCF1]) = v236 ^ 0x9C;
  LOBYTE(STACK[0xFC8]) = v228 ^ 0xC1;
  v237 = ((2 * (v229 - v234)) & 0xFBE5F328) + ((v229 - v234) ^ 0xFDF2F994);
  LOBYTE(STACK[0xD4C]) = v232 ^ 0x4F;
  v238 = v231 ^ 0xB12EFFD3 ^ v232;
  v239 = v233 - v238;
  v240 = (v232 ^ 0xB12EFFD3) - v236;
  v241 = v234 + (v235 ^ 0x74AB0173) + 1;
  v242 = v238 - v240;
  LOBYTE(STACK[0x1023]) = v230 ^ 0xF2;
  v243 = (v228 ^ 0xA168B97) - 34408044 - v237;
  LOBYTE(STACK[0xDA7]) = v242 + (~(2 * v242) | 0xC7) - 99;
  v244 = (v236 ^ 0xB22BC4F9) - v239;
  LOBYTE(STACK[0xE5D]) = v244 - ((2 * v244) & 0x38) - 100;
  v245 = v239 - ((2 * v239 - 128496088) & 0xBD0B0190) + 1521559516;
  LOBYTE(STACK[0xCC0]) = v241 ^ 0xAF;
  LOBYTE(STACK[0xE02]) = v245 ^ 0x54;
  LOBYTE(STACK[0xD76]) = v243 ^ 0xAF;
  v240 ^= 0x7FA0CC05u;
  LOBYTE(STACK[0xEB8]) = v240 - ((2 * v240) & 0x38) - 100;
  LOBYTE(STACK[0xD1B]) = v237 ^ 0x2F;
  v246 = (v245 ^ 0xA17A7F37) + 1;
  v247 = v243 - v237 - ((2 * (v243 - v237) - 2093508600) & 0xB572F514) - 1672132978;
  v248 = (v235 ^ 0xF4F43289) - v237 + 29840000;
  v249 = ((((2 * (v237 + 1611577191)) & 0x3C53EC32) + ((v237 + 1611577191) ^ 0x9E29F619)) ^ v241) + v248;
  v250 = v246 + v244 - ((2 * (v246 + v244) + 2141778696) & 0xE1394214) - 1334764914;
  LOBYTE(STACK[0xDD1]) = v235 ^ 0x26;
  v251 = v248
       + ((v237 - 29840000) ^ 0xB68639FC)
       - ((2 * (v248 + ((v237 - 29840000) ^ 0xB68639FC))) & 0x108F847A)
       - 2008563139;
  v252 = ((v246 + v240) ^ 0xDEBDFFFB) + 557973509 + ((2 * (v246 + v240)) & 0xBD7BFFF6);
  v253 = v252 + (v245 ^ (v242 - ((2 * v242) & 0xBD0B0190) + 1585807560));
  v254 = (v248 ^ 0xDAB97A8A ^ v247) - ((2 * (v248 ^ 0xDAB97A8A ^ v247)) & 0x5C66A318);
  v255 = v252 + (v245 ^ 0xE803B934) - 1547986337 - ((2 * (v252 + (v245 ^ 0xE803B934))) & 0x477734BE);
  v256 = (v252 ^ 0xF09CA10A ^ v250) - ((2 * (v252 ^ 0xF09CA10A ^ v250)) & 0xABB03274) + 1440225594;
  LOBYTE(STACK[0xFC9]) = v250 ^ 0x96;
  LOBYTE(STACK[0xF6E]) = v255 ^ 0xC3;
  LOBYTE(STACK[0xEE2]) = v247 ^ 0x25;
  LOBYTE(STACK[0xF13]) = v253 - ((2 * v253) & 0x38) - 100;
  LOBYTE(STACK[0x1024]) = v256 ^ 0xA6;
  LOBYTE(STACK[0xE2C]) = v249 ^ 0xAF;
  LOBYTE(STACK[0xE87]) = (v248 + ((v237 + 0x80) ^ 0xFC) - ((2 * (v248 + ((v237 + 0x80) ^ 0xFC))) & 0x7A) + 61) ^ 0x92;
  v257 = (v247 ^ 0xDAB97A8A) + (v251 ^ 0x77B83DC2);
  v258 = 2 * (v256 ^ 0x9BD8E5C8);
  v254 -= 1372368500;
  v259 = v254 ^ v251;
  v260 = (v250 ^ 0xF09CA10A) + (v255 ^ 0x5C4465A0) + 1;
  v261 = ((v256 ^ 0x9BD8E5C8) - 1547986337 - (v258 & 0x477734BE)) ^ v255;
  v262 = (v256 ^ 0x9BD8E5C8) - ((v258 + 166344146) & 0xE38E21A) + 1410436086;
  LOBYTE(STACK[0xF3D]) = v254 ^ 0x23;
  v263 = v261 ^ v260;
  v264 = v259 ^ (v257 + 1);
  v265 = v249 + (v254 ^ 0x51CCAE73) + (v264 ^ 0x178B90BC) + 2;
  v266 = v265 - 797966905 - ((2 * v265) & 0xA0DFFB8E);
  v267 = v253 + (v256 ^ 0xAA27E6C5) - v263 + 1190733182 - ((2 * (v253 + (v256 ^ 0xAA27E6C5) - v263 + 1)) & 0x8DF24AFA);
  LOBYTE(STACK[0xF98]) = v266 ^ 0x68;
  v268 = (v254 ^ 0x6033AD7E) - ((2 * (v254 ^ 0x6033AD7E) + 434779602) & 0x5F12E3FE);
  LOBYTE(STACK[0xD77]) = v263 ^ 0x9C;
  LOBYTE(STACK[0xFF3]) = ((v259 ^ 0x43) + 125) ^ 0xAF;
  LOBYTE(STACK[0xC90]) = v264 ^ 0xEC;
  v269 = 2 * (v261 + 9375357);
  v270 = ((v259 ^ 0xE8746F43) - ((2 * (v259 ^ 0xE8746F43) + 18750714) & 0x5F12E3FE) + 806912124) ^ (v268 + 2088668392);
  LOBYTE(STACK[0xD1C]) = v261 + 125 - (v269 & 0x38) - 100;
  v271 = v266 ^ (v268 + 2088668392);
  v272 = ((2 * ((v266 ^ 0xD06FFDC7) + 1266128667 + (v271 ^ 0x1973C7))) & 0x3E77F2DA)
       + (((v266 ^ 0xD06FFDC7) + 1266128667 + (v271 ^ 0x1973C7)) ^ 0x9F3BF96D);
  LOBYTE(STACK[0xDD2]) = v262 ^ 0x91;
  v273 = (v261 - (v269 & 0xE38E21A) + 128679818) ^ v262;
  v274 = v271 ^ v264;
  LOBYTE(STACK[0xCEB]) = (23 - v268) ^ 0xAF;
  v275 = v274 ^ 0x3358E7B6;
  v276 = v267 ^ v262;
  v277 = (v274 ^ 0x3358E7B6) + v270;
  LOBYTE(STACK[0xCC1]) = v267 ^ 0xE1;
  LOBYTE(STACK[0xD46]) = (v272 - 109) ^ 0xAF;
  v278 = ((2 * ((v267 ^ 0x46F9257D) + 1266128667 + (v276 ^ 0xBE1AAB8F))) & 0x67F35E7E)
       + (((v267 ^ 0x46F9257D) + 1266128667 + (v276 ^ 0xBE1AAB8F)) ^ 0xB3F9AF3F);
  LODWORD(v280) = __ROR4__(v263 ^ 0x41E55470 ^ v276, 18) ^ 0x46BFF051;
  HIDWORD(v280) = v280;
  v279 = v280 >> 14;
  LOBYTE(STACK[0xE2D]) = v278 + (~(2 * v278 + 2) | 0xC7) + 94;
  v281 = (v279 ^ 0xE58F1E32) + v273;
  LOBYTE(STACK[0xE88]) = v281 - ((2 * v281) & 0x38) - 100;
  v276 ^= 0x34B6C0Fu;
  LOBYTE(STACK[0xF3E]) = v276 - ((2 * v276) & 0x38) - 100;
  LOBYTE(STACK[0xDA1]) = v277 ^ 0xAF;
  v282 = (v271 ^ 0xBD48B447) - v272;
  LOBYTE(STACK[0xDFC]) = v274 ^ 0x19;
  v283 = (v274 ^ 0x3358E7B6) - 952729109;
  v284 = v276 - v278;
  LOBYTE(STACK[0xEE3]) = v279 ^ 0xAE;
  v285 = v283 + v277 - 364622635 - ((2 * (v283 + v277)) & 0xD48899AA);
  LOBYTE(STACK[0xE57]) = v271 ^ 0xE8;
  v286 = ((v282 - 1623459475) ^ (v272 - 630956791))
       - 404686802
       - ((2 * ((v282 - 1623459475) ^ (v272 - 630956791))) & 0xCFC1F05C);
  v287 = (v279 ^ 0xE58F1E32) - 952729109;
  v288 = v287 + v281;
  v289 = v285 ^ (v275 - ((2 * v283) & 0xD48899AA) - 1317351744);
  v290 = ((v284 - 1275482305) ^ (v278 - 978933961))
       + 1931544050
       - ((2 * ((v284 - 1275482305) ^ (v278 - 978933961))) & 0xE6420BE4);
  LOBYTE(STACK[0xFF4]) = v288 - ((2 * v288 + 30) & 0x38) + 43;
  LOBYTE(STACK[0xC91]) = (v288 ^ v287) - ((2 * (v288 ^ v287)) & 0x38) - 100;
  LOBYTE(STACK[0xF99]) = v290 ^ 0x6E;
  LOBYTE(STACK[0xEB2]) = v286 ^ 0x81;
  LOBYTE(STACK[0xCEC]) = v284 - ((2 * v284 + 44) & 0x38) - 14;
  LOBYTE(STACK[0xF68]) = v289 ^ 0xAF;
  LOBYTE(STACK[0xFC3]) = (v282 - 124) ^ 0xAF;
  v291 = (v282 - 2 * ((v282 + 258057122) & 0x67E0F82F ^ v282 & 1) - 146629680) ^ v286;
  LOBYTE(STACK[0xF0D]) = ((v285 ^ 0xD5) - 113) ^ 0xAF;
  LODWORD(STACK[0x668]) = v289 ^ 0x32312CAE ^ v291 ^ (((36003385 - v284) & 0x6E66891B)
                                                    + ((v284 + 2111480262) & 0x6E66891B)
                                                    - 252211797);
  v292 = v291 ^ LODWORD(STACK[0x380]);
  v293 = (v285 ^ 0xEA444CD5) + (v286 ^ 0xE7E0F82E) - v292;
  LODWORD(STACK[0x680]) = v292 + 1990364502;
  v294 = v290 ^ (v284 - ((2 * v284 + 1212068584) & 0xE6420BE4) - 1757388954);
  LODWORD(STACK[0x658]) = v282 - 1685865913;
  LODWORD(STACK[0x64C]) = v293 - 231456756;
  v295 = v288 + (v290 ^ 0x732105F2) + (v294 ^ 0x8A7100C0) + 1898075280;
  LODWORD(STACK[0x660]) = v295 + 1043708604 - ((2 * v295) & 0x7C6B7578);
  LODWORD(STACK[0x650]) = v294 ^ 0x1876DDA6;
  v296 = STACK[0x648];
  LODWORD(STACK[0x670]) = v288 ^ v287 ^ 0x51EA9570 ^ v294;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (v296 ^ (101 * (STACK[0x474] & 1)))) - 8))();
}

uint64_t sub_1CF31F6C8(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t (*v8)(_QWORD, uint64_t);

  v5 = STACK[0x640];
  v6 = LODWORD(STACK[0x640]) ^ 0x4B2;
  v7 = LODWORD(STACK[0x444]) + v3 + 1611011972;
  LODWORD(STACK[0x648]) = v6;
  v8 = *(uint64_t (**)(_QWORD, uint64_t))(v4 + 8 * ((941 * (v7 + v6 == LODWORD(STACK[0x470]))) ^ v5));
  LODWORD(STACK[0x438]) = v3;
  LODWORD(STACK[0x47C]) = v3 + 64;
  LODWORD(STACK[0x484]) = a3;
  return v8(LODWORD(STACK[0x680]), 2821402143);
}

uint64_t sub_1CF31F788(int a1, int a2, int a3, int a4, uint64_t a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  __int16 v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  int v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  BOOL v35;
  unsigned int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  char v44;
  int v45;
  int v46;
  unsigned int v47;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  unint64_t v55;
  int v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  unsigned int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  int v94;
  __int16 v95;
  unsigned __int16 v96;
  int v97;
  int v98;
  unint64_t v99;
  unsigned int v100;
  int v101;
  uint64_t v102;
  int v103;
  int v104;
  int v105;
  unsigned int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  int v120;
  int v121;
  unsigned int v122;
  int v123;
  int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  unsigned int v133;
  int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  unsigned int v145;
  int v146;
  int v147;
  int v148;

  v24 = 236 * (v8 ^ 0x568);
  v25 = 8 * LODWORD(STACK[0x434]) - ((16 * LODWORD(STACK[0x434]) + 512576352) & 0x43EC8CD0) - 1321407462;
  v26 = (8 * LOBYTE(STACK[0x434]) - ((16 * LOBYTE(STACK[0x434]) + 96) & 0xD0) + 26) ^ LOBYTE(STACK[0xFC3]) ^ 0xB2;
  LODWORD(STACK[0x648]) = v24;
  LOBYTE(STACK[0xFC3]) = v26 ^ v24;
  LOBYTE(STACK[0xF68]) ^= BYTE1(v25) ^ 0x46;
  LOBYTE(STACK[0xF0D]) ^= BYTE2(v25) ^ 0xF6;
  LOBYTE(STACK[0xEB2]) ^= HIBYTE(v25) ^ 0xA1;
  LODWORD(STACK[0x47C]) = v9;
  LODWORD(STACK[0x484]) = a3;
  LODWORD(STACK[0x678]) = v18;
  LODWORD(STACK[0x670]) = v14;
  LODWORD(STACK[0x668]) = a2;
  LODWORD(STACK[0x680]) = v15;
  v27 = LODWORD(STACK[0x648]) + 209;
  v28 = v15 * v10;
  v29 = v12 + v15 * v10;
  LODWORD(STACK[0x63C]) = v15 * v10;
  LODWORD(STACK[0x640]) = v27;
  v30 = v15 + a8;
  LODWORD(STACK[0x638]) = v29;
  v31 = ((((a7 - v15) | v30) & v16) + v30) * v10;
  v32 = v31 - 958 - (v31 - 958) / 0x3BE * v22;
  v33 = *(unsigned __int8 *)(v23 + v29 + v27 - (v29 + v27) / 0x3BEu * v22) ^ v20;
  v34 = v31 + 1593610355;
  v35 = v31 > 0x3BD;
  v36 = (v32 ^ 0xFFFEDAFF) + 1593685364 + ((2 * v32) & 0x5FE);
  v37 = a1 + v21;
  v38 = *(unsigned __int8 *)(v23 + v29 + 772 - (v29 + 772) / 0x3BEu * v22) ^ v20;
  v39 = *(unsigned __int8 *)(v23 + v29 + 954 - (v29 + 954) / 0x3BEu * v22);
  v40 = a2 * v17;
  v41 = STACK[0x658];
  v42 = v39 ^ v19;
  LODWORD(STACK[0x64C]) = a6;
  v43 = (unsigned __int16)(a2 * v17 + v13 - 283 * ((((_WORD)a2 * (_WORD)v17 + v13) & 0xFFFCu) / 0x11B));
  v44 = v39 & 0xB8;
  v45 = v33 << 24;
  v46 = v28 + a4;
  v47 = (v28 + a4) % 0x3BEu;
  if (!v35)
    v36 = v34;
  v49 = *(unsigned __int8 *)(STACK[0x688] + (v46 + 182) % 0x3BEu);
  v50 = v45 | (v38 << 16);
  v51 = STACK[0x650];
  v52 = (((*(unsigned __int8 *)(v23 + v47) ^ 0x9C) << 24) | ((*(unsigned __int8 *)(v23 + (v46 + 91) % 0x3BEu) ^ 0x9C) << 16) | *(unsigned __int8 *)(STACK[0x688] + (v46 + 273) % 0x3BEu) ^ 0x9C) ^ LODWORD(STACK[0x650]);
  v53 = ((a6 + 2129532035) ^ v37) - 1276380489 - ((2 * ((a6 + 2129532035) ^ v37)) & 0x67D7F56E);
  v54 = STACK[0x660];
  v55 = (unint64_t)(v49 ^ 0x9Cu) << ((((v49 & 0xE7 ^ 0x84) + (v49 & 0xE7 ^ 0x63)) * ((v44 ^ 0x98) + (v44 ^ 0x20))) & 0xF8);
  v56 = LODWORD(STACK[0x650]) ^ 0x6DF822AA;
  LODWORD(v55) = v52 ^ v55;
  v57 = LODWORD(STACK[0x660]) ^ 0x3E35BABC;
  v58 = (LODWORD(STACK[0x650]) ^ 0x6DF82299)
      - LODWORD(STACK[0x678])
      - ((2 * ((LODWORD(STACK[0x650]) ^ 0x6DF82299) - LODWORD(STACK[0x678])) - 847380070) & 0x8A8D5DBC)
      + 738570155;
  v59 = (v50 | ((*(unsigned __int8 *)(STACK[0x688] + v36 - 1593610355) ^ 0xAF) << 8) | v42) ^ v37;
  v60 = v11 ^ 0x32312CAE;
  v61 = STACK[0x670];
  v62 = (LODWORD(STACK[0x678]) - 1662953185) ^ LODWORD(STACK[0x670]) ^ 0xEB483B6;
  v63 = (v55 ^ 0x6DF82299) + v60;
  v64 = a1 - v41;
  v65 = v41 - 845598291;
  v66 = v60 ^ (v41 - 845598291);
  v67 = (((121429194 - LODWORD(STACK[0x680])) | (LODWORD(STACK[0x680]) + 952312629)) & 0x38F4A49C) + v65;
  v68 = LODWORD(STACK[0x660]) ^ 0x3E35BA8F ^ v59;
  *((_DWORD *)&STACK[0x7C0] + v43) = v59 ^ 0x49B8D7D8;
  STACK[0x658] = v40 + 15228 - 283 * ((14821 * ((v40 + 15228) & 0xFFFCu)) >> 22);
  v69 = ((2 * (v57 - 1944299704 + (v58 ^ 0xC546AEDE))) & 0xFFBFFAFC)
      + ((v57 - 1944299704 + (v58 ^ 0xC546AEDE)) ^ 0xFFDFFD7E);
  v70 = (v54 ^ 0xC1CA4543) + v68;
  v71 = STACK[0x638];
  LODWORD(v55) = v55 ^ 0xDE13D82E;
  v72 = ((*(unsigned __int8 *)(STACK[0x688] + (LODWORD(STACK[0x638]) + 1045) % 0x3BEu) ^ 0xAF) << 24) | ((*(unsigned __int8 *)(STACK[0x688] + (((v30 + 265) & 0x35) + ((3 - LODWORD(STACK[0x680])) & 0x35u) + 38) * (v30 + 265) % 0x3BE) ^ 0xAF) << 16) | ((*(unsigned __int8 *)(STACK[0x688] + (LODWORD(STACK[0x638]) + 1227) % 0x3BEu) ^ 0xAF) << 8);
  v73 = *(unsigned __int8 *)(STACK[0x688] + (LODWORD(STACK[0x638]) + 1318) % 0x3BEu);
  STACK[0x660] = v40 + 23812 - 283 * ((14821 * ((v40 + 23812) & 0xFFFCu)) >> 22);
  v74 = v72 | v73 ^ 0x9C;
  *((_DWORD *)&STACK[0x7C0] + (unsigned __int16)(v40 + 31816 - 283 * ((((_WORD)v40 + 31816) & 0xFFFCu) / 0x11B))) = v55;
  v75 = v63 + 1471654950 - ((2 * v63 + 1201103582) & 0x67D7F56E);
  v76 = v64 - ((2 * v64 + 2127115730) & 0xF52E3270);
  v77 = v64 + LODWORD(STACK[0x64C]) - 898693452;
  v78 = v74 ^ v77;
  v79 = v76 - 1174686687;
  v80 = (v59 ^ 0x5833342C ^ ((v55 ^ v53) + 1479750687 - ((2 * (v55 ^ v53)) & 0xB066683E))) - (v55 ^ v53);
  LODWORD(v55) = ((*(unsigned __int8 *)(STACK[0x688] + (v46 + 364) % 0x3BEu) ^ 0x9C) << 24) | ((*(unsigned __int8 *)(STACK[0x688] + (v46 + 455) % 0x3BEu) ^ 0x9C) << 16) | ((*(unsigned __int8 *)(STACK[0x688] + (v46 + 546) % 0x3BEu) ^ 0x9C) << 8) | *(unsigned __int8 *)(STACK[0x688] + (v46 + 637) % 0x3BEu) ^ 0x9C;
  v81 = (v55 ^ (v69 + 2097794)) - 1276380489 - ((2 * (v55 ^ (v69 + 2097794))) & 0x67D7F56E);
  v82 = (v70 + 1) ^ ((v51 ^ 0x9207DD66) + (v56 ^ v59) + 1) ^ v80;
  LOWORD(v56) = v40 + 31932 - 283 * ((((_WORD)v40 + 31932) & 0xFFFCu) / 0x11B);
  v83 = v79 ^ v77 ^ ((v74 ^ v77 ^ 0x33) - 90760904 - 2 * ((v74 ^ v77 ^ 0x33) & 0x7A97193C ^ (v74 ^ v77) & 4));
  v84 = v66 + v67;
  v85 = v62 + LODWORD(STACK[0x678]);
  v86 = (v74 ^ v77 ^ 0x33) + v84;
  v87 = (v61 ^ 0xF14B7C49) + v82 + 1;
  v88 = v67 - LODWORD(STACK[0x64C]) - 185232331 + (v79 ^ 0xFA971938);
  v89 = LODWORD(STACK[0x678]) - v57 + 1236903539 + (v58 ^ 0xC546AEDE);
  LODWORD(v55) = ((v58 ^ 0x3AB95121) + (v58 ^ 0x76AD5469 ^ v81) + 1) ^ (-2097794 - v69 + v55);
  v90 = v79 ^ 0xFA971938 ^ v84;
  v91 = v77 - v88 - 609551612 - ((2 * (v77 - v88)) & 0xB755F608);
  v92 = v58 ^ 0xC546AEDE ^ (v85 - 707396165);
  v93 = v87 + 707613490 - ((2 * v87 + 1820504310) & 0x67D7F56E);
  v94 = v69 + 2097794 - v89 + 379916451 - ((2 * (v69 + 2097794 - v89)) & 0x2D4A2146);
  v95 = v40 + 6760;
  LOWORD(v57) = v40;
  v96 = (v40 + 6760) & 0xFFFC;
  LODWORD(STACK[0x7C0]) = v93;
  v97 = v91 ^ (v84 + 1685128152);
  v98 = ((v83 - 1276380489 - ((2 * v83) & 0x67D7F56E)) ^ v81) - v83;
  v99 = STACK[0x688];
  v100 = (v71 + 1591) % (((228 - LODWORD(STACK[0x63C])) ^ (v71 + 1591)) & 0x3BEu);
  v101 = ((*(unsigned __int8 *)(STACK[0x688] + (v71 + 1409) % (v91 & 0x3BE ^ 0x304 | v91 & 0x3BE ^ 0xBA)) ^ 0xAF) << 24) | ((*(unsigned __int8 *)(STACK[0x688] + (v71 + 1500) % 0x3BEu) ^ 0xAF) << 16);
  *((_DWORD *)&STACK[0x7C0] + (unsigned __int16)STACK[0x658]) = v75;
  LODWORD(v55) = v55 ^ v98;
  v102 = (unsigned __int16)v56;
  v103 = v85 + 977731987;
  LODWORD(v55) = v55 - v85;
  v104 = v101 | ((*(unsigned __int8 *)(v99 + v100) ^ 0xAF) << 8) | *(unsigned __int8 *)(v99 + (v71 + 1682) % 0x3BEu) ^ 0x9C;
  *((_DWORD *)&STACK[0x7C0] + (unsigned __int16)STACK[0x660]) = v78 ^ 0x49B8D7D8;
  *((_DWORD *)&STACK[0x7C0] + v102) = v81;
  v105 = v94 ^ v103;
  v106 = (v104 + 754302511 - ((2 * v104) & 0x59EB7C5E)) ^ v97 ^ 0xF75F452B;
  v107 = *(unsigned __int8 *)(v99 + (v46 + 728) % 0x3BEu);
  v108 = *(unsigned __int8 *)(v99 + (v46 + 819) % 0x3BEu);
  *((_DWORD *)&STACK[0x7C0] + (unsigned __int16)(v95 - 283 * (v96 / 0x11Bu))) = v86
                                                                              + 707613490
                                                                              - ((2 * v86 + 1820504310) & 0x67D7F56E);
  v109 = v90 - 130045309;
  v110 = v106 ^ 0x49B8D7D8;
  v111 = *(unsigned __int8 *)(v99 + (v46 + 1001) % 0x3BEu);
  v106 ^= 0x33u;
  v112 = ((v107 ^ 0x9C) << 24) | ((v108 ^ 0x9C) << 16) | ((*(unsigned __int8 *)(v99 + (v46 + 910) % 0x3BEu) ^ 0x9C) << 8) | v111 ^ 0x9C;
  *((_DWORD *)&STACK[0x7C0] + (unsigned __int16)(v57 + 15344 - 283 * ((((_WORD)v57 + 15344) & 0xFFFCu) / 0x11B))) = v55 - ((2 * v55 + 468412264) & 0x67D7F56E) - 2115916181;
  LODWORD(v55) = v112 ^ v94 ^ v103;
  v113 = v109 ^ v91 ^ 0x4E5376E6 ^ v106;
  *((_DWORD *)&STACK[0x7C0] + (unsigned __int16)(v57 + 23928 - 283 * ((((_WORD)v57 + 23928) & 0xFFFCu) / 0x11B))) = v110;
  v114 = (((_WORD)v57 + 32048) & 0xFFFCu) % ((v55 & 0x11B ^ 3) + (v55 & 0x11B ^ 0x118));
  LODWORD(v102) = v92 - 130045309;
  v115 = v114 + 1661213470 - ((2 * v114) & 0x63C);
  v116 = (v92 - 130045309) ^ 0x16A510A3 ^ v55;
  LODWORD(v55) = v55 ^ 0xA54EEA14;
  *((_DWORD *)&STACK[0x7C0] + (v115 ^ 0x63041B1Eu)) = v55;
  v117 = (v88 + (v97 ^ 0x245504FB) + 754302512 - ((2 * (v88 + (v97 ^ 0x245504FB) + 1)) & 0x59EB7C5E)) ^ v97 ^ 0xF75F452B;
  v118 = (v113 - 1276380489 - ((2 * v113) & 0x67D7F56E)) ^ v55;
  LODWORD(v55) = (v94 ^ 0x7CA362BE) + (v103 ^ 0x95F98DE2 ^ v112);
  v119 = (v94 ^ v103 ^ 0xE95AEF5C) + 1;
  v120 = v118 - v113;
  v97 ^= 0xDBAAFB04;
  v121 = v105 ^ (v119 + v89 - ((2 * (v119 + v89)) & 0x226FF148) - 1858602844);
  v122 = v121 ^ 0x8792E807;
  LODWORD(v55) = (v116 - v92 + 130045309) ^ (v55 + 1) ^ v120;
  v123 = v117 ^ (v97 + v109);
  v124 = ((v105 ^ 0x16A510A3) + v102) ^ v121;
  v125 = ((v115 & 0x10B ^ 0x10A) + (v115 & 0x10B ^ 0x46669001)) ^ v91;
  LODWORD(v55) = v119 + v55;
  *((_DWORD *)&STACK[0x7C0] + (unsigned __int16)(v57 + 6876 - 283 * ((((_WORD)v57 + 6876) & 0xFFFCu) / 0x11B))) = v106 + v97 + 707613490 - ((2 * (v106 + v97) + 1820504310) & 0x67D7F56E);
  v126 = v94 ^ 0x8AEA8B3A ^ ((v105 ^ 0x16A510A3) - ((2 * (v105 ^ 0x16A510A3) - 246477272) & 0x9FA10EE0) + 1215827588);
  LOWORD(v119) = (v111 ^ 0x60) & 0x74 | v111 & 0x74 ^ 0x14;
  v127 = (v94 ^ 0x3AC5F3B5) + v122 + 1 - ((2 * ((v94 ^ 0x3AC5F3B5) + v122 + 1)) & 0xEE67138E) - 147617337;
  v128 = (v97 - ((2 * v97 - 246477272) & 0xA2A77CDE) - 906279549) ^ 0x9F00C889 ^ v125;
  v129 = *(unsigned __int8 *)(v99 + (v71 + 1864) % 0x3BEu) ^ 0xAF;
  v130 = *(unsigned __int8 *)(v99 + (v71 + 1955) % 0x3BEu) ^ 0xAF;
  v131 = (*(unsigned __int8 *)(v99 + (v71 + 1773) % 0x3BEu) ^ 0xAF) << 24;
  v132 = *(unsigned __int8 *)(v99 + (v71 + 2046) % 0x3BEu) ^ 0x9C;
  *((_DWORD *)&STACK[0x7C0]
  + (unsigned __int16)(v119 * (LODWORD(STACK[0x668]) - 11731)
                     - 283 * ((((_WORD)v119 * ((unsigned __int16)LODWORD(STACK[0x668]) - 11731)) & 0xFFFCu) / 0x11B))) = v55 + 1471654950 - ((2 * v55 + 1201103582) & 0x67D7F56E);
  v133 = v117 + (v125 ^ 0xB1AC8919) + 404877891 - ((2 * (v117 + (v125 ^ 0xB1AC8919) + 1)) & 0x3043E4E2) + 47;
  v134 = v133 ^ (v131 | (v129 << 16) | (v130 << 8) | v132);
  v135 = (v123 - ((2 * v123) & STACK[0x4CC]) + 1530037560) ^ 0x43137749 ^ v134;
  LODWORD(v55) = (((*(unsigned __int8 *)(v99 + (v46 + 1092) % 0x3BEu) ^ 0x9C) << 24) | ((*(unsigned __int8 *)(v99 + (v46 + 1183) % 0x3BEu) ^ 0x9C) << 16) | ((*(unsigned __int8 *)(v99 + (v46 + 1274) % 0x3BEu) ^ 0x9C) << 8) | *(unsigned __int8 *)(v99 + (v46 + 1365) % 0x3BEu) ^ 0x9C) ^ v127;
  *((_DWORD *)&STACK[0x7C0] + (unsigned __int16)(v57 + 24044 - 283 * ((((_WORD)v57 + 24044) & 0xFFFCu) / 0x11B))) = v134 ^ 0x519925A9;
  v136 = (v134 ^ 0x1821F242) + v128;
  *((_DWORD *)&STACK[0x7C0] + (unsigned __int16)(v57 + 32164 - 283 * ((((_WORD)v57 + 32164) & 0xFFFCu) / 0x11B))) = v55 ^ 0x44D87370;
  v137 = (((v125 ^ 0xD61065A7) + (v133 ^ 0xE7DE0D8E) + 1) ^ 0x1F75EE73)
       - 527822451
       + ((2 * ((v125 ^ 0xD61065A7) + (v133 ^ 0xE7DE0D8E) + 1)) & 0x3EEBDCE6);
  v138 = (v135 - ((2 * v135) & 0x25952680) + 315265856) ^ v125;
  v139 = v137 + v128 + 1139338217 - ((2 * (v137 + v128)) & 0x87D1D7D2);
  v140 = (((v94 ^ 0x5D791F0B) + (v127 ^ 0x8CC7638) + 1) ^ 0xDF79FFFE)
       + 545652738
       + ((2 * ((v94 ^ 0x5D791F0B) + (v127 ^ 0x8CC7638) + 1)) & 0xBEF3FFFC);
  *((_DWORD *)&STACK[0x7C0] + (unsigned __int16)(v57 + 6992 - 283 * ((((_WORD)v57 + 6992) & 0xFFFCu) / 0x11B))) = v136 + 707613490 - ((2 * v136 + 1820504310) & 0x67D7F56E);
  v141 = v140 + v126 - 2055485403 - ((2 * (v140 + v126)) & 0xAF7904A);
  v142 = ((2 * v139) & 0xFF8FCAFA ^ 0xC00DC812) + (v139 ^ 0x9FC91BF4);
  v143 = (v123 + 1139338217 - ((2 * v123) & 0x87D1D7D2)) ^ 0x744C1821 ^ v139;
  v144 = ((v94 ^ 0xAA4A96CC ^ v55) - (v94 ^ 0x5D791F0B)) ^ ((v124 ^ 0x786D17F8) + (v124 ^ 0x70A161C0 ^ v55) + 1) ^ ((v138 ^ 0x3B25092B) + (v55 ^ 0x44D87343 ^ ((v138 ^ 0xC4DAF6E7) - 1276380489 - ((2 * (v138 ^ 0xC4DAF6E7)) & 0x67D7F56E))) + 1);
  LODWORD(v55) = ((2 * v141) & 0xDFFAAEEE ^ 0x4D3AAA8A) + (v141 ^ 0x49608A32);
  v145 = v143 + 2143806845 - v142 - 743346205 - ((2 * (v143 + 2143806845 - v142)) & 0xA762DFC6);
  v146 = (v124 ^ 0x76A53803 ^ v141)
       + 1878873975
       - v55
       + 671441586
       - ((2 * ((v124 ^ 0x76A53803 ^ v141) + 1878873975 - v55)) & 0x500AC564);
  LODWORD(STACK[0x658]) = v142
                        + 1089269000
                        + (v145 ^ ((v133 ^ 0x5BC91998 ^ v139)
                                 + v137
                                 - 743346205
                                 - ((2 * ((v133 ^ 0x5BC91998 ^ v139) + v137)) & 0xA762DFC6)));
  LODWORD(STACK[0x660]) = ((v140 ^ 0x857BC825 ^ v141) + 1878873975 - v55) ^ 0x1630D80E ^ v146;
  *((_DWORD *)&STACK[0x7C0] + (unsigned __int16)(v57 + 15576 - 283 * ((((_WORD)v57 + 15576) & 0xFFFCu) / 0x11B))) = v144 - v126 + 1471654950 - ((2 * (v144 - v126) + 1201103582) & 0x67D7F56E);
  v147 = STACK[0x668];
  v148 = ((4 * ((LODWORD(STACK[0x668]) + 1473565157) < 0x10)) | (((LODWORD(STACK[0x668])
                                                                                             + 1473565157) < 0x10) << 6)) ^ (LODWORD(STACK[0x648]) + 230);
  LODWORD(STACK[0x650]) = (v146 ^ 0x280562B2) - ((2 * (v146 ^ 0x280562B2) + 345001850) & 0xDBF04532) - 130004394;
  return (*(uint64_t (**)(_QWORD, _QWORD))(STACK[0x690] + 8 * v148))((((v145 ^ 0xD3B16FE3) - 1612474750) ^ 0xED1F3ED1)+ 1944575936+ ((2 * ((v145 ^ 0xD3B16FE3) - 1612474750)) & 0xDA3E7DA2), (v147 + 4));
}

uint64_t sub_1CF320D58(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unint64_t v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  unsigned int v97;
  int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  int v103;
  unsigned int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  unsigned int v130;
  int v131;
  int v132;
  unsigned int v133;
  int v134;
  int v135;
  int v136;
  int v137;

  LODWORD(STACK[0x670]) = v8;
  v11 = STACK[0x658];
  LODWORD(STACK[0x668]) = v6;
  v12 = a1 - 1481991279;
  LODWORD(STACK[0x60C]) = 16 * (LOBYTE(STACK[0xD71]) ^ v10);
  v13 = STACK[0x650];
  v14 = STACK[0x660];
  v15 = STACK[0x640];
  LODWORD(STACK[0x678]) = v9;
  LODWORD(STACK[0x660]) = 0;
  LODWORD(STACK[0x610]) = 1044;
  LODWORD(STACK[0x658]) = 195;
  LODWORD(STACK[0x61C]) = 0;
  v16 = STACK[0xAB0];
  LODWORD(STACK[0x680]) = v15 - 370;
  HIDWORD(v17) = v16 ^ 0x6B;
  LODWORD(v17) = v16 ^ 0x49B8D780;
  v18 = (v17 >> 7) ^ (v16 >> 3);
  v19 = *((_DWORD *)&STACK[0x7C0] + (unsigned __int16)(v15 + 24607) % 0x11Bu);
  HIDWORD(v17) = v16 ^ 0xD7EB;
  LODWORD(v17) = v16 ^ 0x49B80000;
  v20 = v17 >> 18;
  HIDWORD(v17) = v19 ^ 0x37;
  LODWORD(v17) = v19 ^ 0xB3EBFA80;
  v21 = (v17 >> 7) ^ (v19 >> 3);
  v22 = v18 ^ v20;
  HIDWORD(v17) = v19 ^ 0x3FAB7;
  LODWORD(v17) = v19 ^ 0xB3E80000;
  v23 = *((_DWORD *)&STACK[0x7C0] + 0x48F4 % (((v21 & 2 ^ 2) + (v21 & 2)) | 0x11Bu));
  v24 = v21 ^ (v17 >> 18);
  v25 = (v23 & 0x4000 | 0x907EA877) ^ v23 & 0xFFFFBFFF;
  HIDWORD(v17) = v25 ^ 0x67F9C;
  LODWORD(v17) = v25 ^ 0xD9C00000;
  v26 = v17 >> 19;
  HIDWORD(v17) = v25 ^ 0x7F9C;
  LODWORD(v17) = v25 ^ 0xD9C60000;
  v27 = v17 >> 17;
  HIDWORD(v17) = LODWORD(STACK[0xAC8]) ^ LODWORD(STACK[0x4C8]);
  LODWORD(v17) = LODWORD(STACK[0xAC8]) ^ 0xB3EA0000;
  v28 = v17 >> 17;
  v29 = a6 + v7;
  HIDWORD(v17) = LODWORD(STACK[0xAC8]) ^ 0x3FAB7;
  LODWORD(v17) = LODWORD(STACK[0xAC8]) ^ 0xB3E80000;
  v30 = v14 ^ 0x3702A041 ^ v22;
  v31 = v14;
  v32 = (v12 - ((2 * v12 - 1016746446) & 0xFD0B0992) - 533177374) ^ v29 ^ 0xE8F8FB9F ^ v24;
  v33 = (v17 >> 19) ^ (LODWORD(STACK[0xAC8]) >> 10) ^ v28;
  v34 = ((v12 - 508373223) ^ (v11 - 845598291))
      - 1865851500
      - ((2 * ((v12 - 508373223) ^ (v11 - 845598291))) & 0x2192BB28);
  v35 = STACK[0x668];
  v36 = (v24 ^ 0x167D7F56) & (LODWORD(STACK[0x668]) ^ 0x32312CAE);
  v37 = LODWORD(STACK[0x4C4]) ^ (v25 >> 10) ^ v27 ^ v26;
  v38 = LODWORD(STACK[0x668]) ^ 0x244C53F8 ^ v24;
  v39 = v29 + (v34 ^ 0x6F36A26B) + 1;
  LODWORD(STACK[0x624]) = ((v31 ^ 0xC1CA4543) + v30 + 1) ^ ((v13 ^ 0x9207DD66) + (v13 ^ 0x64CF3864 ^ v22) + 1) ^ ((v22 ^ 0xA533642 ^ (v32 - ((2 * v32) & 0x6C8597E) + 56896703)) - v32);
  v40 = STACK[0x670];
  v41 = LODWORD(STACK[0x670]) ^ 0xF14B7C49;
  v42 = v13 ^ 0x6DF82299;
  v43 = (v13 ^ 0x6DF82299 ^ (LODWORD(STACK[0x678]) - 1662953185))
      - 379593847
      - ((2 * (v13 ^ 0x6DF82299 ^ (LODWORD(STACK[0x678]) - 1662953185))) & 0xD2BFB712);
  v44 = v12 + 257420667 + (v34 ^ 0x90C95D94) + 1455003604 - ((2 * (v12 + 257420667 + (v34 ^ 0x90C95D94))) & 0xAD732FA8);
  v45 = (v12 - ((2 * v12 + 514841334) & 0x6462595C) + 1099504169) ^ v35;
  LODWORD(STACK[0x668]) = v45;
  v46 = v39 - v45 - 56913483;
  v47 = (v43 ^ 0xE95FDB89) + v42 + 765793890 + 2048636923 - ((2 * ((v43 ^ 0xE95FDB89) + v42 + 765793890)) & 0xF4376FF6);
  v48 = (v31 ^ 0x3E35BABC) + (v43 ^ 0xE95FDB89) + ((2 * v43) ^ 0x2D4048ED) + 1;
  v49 = (v29 + (v34 ^ 0x6F36A26B) - 1865851499 - ((2 * v39) & 0x2192BB28)) ^ v34;
  v50 = v44 ^ v46 ^ (v37 + 1455003604 - ((2 * v37) & 0xAD732FA8));
  v51 = ((v31 ^ 0x3E35BABC) + (v43 ^ 0xE95FDB89) + ((2 * v43) ^ 0x2D4048ED) - 379593846 - ((2 * v48) & 0xD2BFB712)) ^ v43;
  v52 = (v42 - 2 * ((v42 + 765793890) & 0xEB483B7 ^ v42 & 1) + 1012505112) ^ v40;
  LODWORD(STACK[0x670]) = v52;
  v53 = v48 - v52 - ((2 * (v48 - v52) - 113826966) & 0xCE2C0F28) + 1672583497;
  LODWORD(STACK[0x634]) = v53;
  LODWORD(STACK[0x678]) = v44;
  v54 = ((2 * v44) & 0xEEF6FE7E ^ 0x8EE2FE08) + (v44 ^ 0xB80A80FB);
  LODWORD(STACK[0x630]) = v51 - ((2 * v51) & 0xCE2C0F28);
  v55 = ((v53 ^ 0x98E9F86B) + (v53 ^ 0x673AFD6A ^ v33) + 1) ^ ((v47 ^ 0x85E44804) + (v47 ^ 0x7A374D05 ^ v33) + 1) ^ ((v33 ^ 0x3CFC84AF ^ (v50 - ((2 * v50) & 0x79A0FCA2) + 1020296785)) - v50);
  v56 = STACK[0x7C0];
  v57 = v49 ^ v46;
  LODWORD(STACK[0x62C]) = v57;
  LODWORD(STACK[0x650]) = v47;
  LODWORD(STACK[0x64C]) = v54;
  LODWORD(STACK[0x63C]) = v49 + v54;
  LODWORD(STACK[0x628]) = v49 + (v57 ^ 0x99CA65E7);
  v58 = ((2 * ((v47 ^ 0x7A1BB7FB) + 432564241 + ((2 * v47) & 0x3390D020 ^ 0xCFEFBFDF))) & 0xFBF9FCBC)
      + (((v47 ^ 0x7A1BB7FB) + 432564241 + ((2 * v47) & 0x3390D020 ^ 0xCFEFBFDF)) ^ 0xFDFCFE5E);
  LODWORD(STACK[0x648]) = v58;
  v59 = v49 + v54 + 1303149864;
  LODWORD(STACK[0x638]) = v59;
  v60 = v58 + v51;
  v61 = v45
      + (v56 ^ 0xB3EBFAB7)
      + (*((_DWORD *)&STACK[0x7C0] + LODWORD(STACK[0x658])) ^ 0xB3EBFAB7)
      + v38
      + 2 * v36
      + 383892821
      + v37;
  LODWORD(STACK[0xA38]) = v61 + 707613490 - ((2 * v61 + 1820504310) & 0x67D7F56E);
  v62 = v41
      - v52
      + (LODWORD(STACK[0x7D8]) ^ 0xB3EBFAB7)
      + (LODWORD(STACK[0x938]) ^ 0xB3EBFAB7)
      + LODWORD(STACK[0x624])
      - 1258017064
      + v55;
  LODWORD(STACK[0xBB0]) = v62 + 1471654950 - ((2 * v62 + 1201103582) & 0x67D7F56E);
  v63 = v61 + v59 - ((2 * (v61 + v59)) & 0x2E5B9214) - 1758607094;
  v64 = v62 - v60 - ((2 * (v62 - v60) + 1906967534) & 0x638B3864);
  LOBYTE(v61) = v64 + 73;
  v64 += 1788517929;
  v65 = ((((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (HIBYTE(v63) & 0xF ^ 7) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v63 >> 28) ^ 9) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (BYTE2(v63) & 0xF ^ 0xD) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v63 >> 20) & 0xF ^ 2) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(STACK[0x688] + (91 * ((v63 >> 8) & 0xF ^ 9) + 29939) % (((780 - 91 * ((v63 >> 8) & 0xF ^ 9)) | (91 * ((v63 >> 8) & 0xF ^ 9) + 29939)) & 0x3BE)) ^ 0x9C;
  v66 = (v65 << 8) + 176655783 - ((v65 << 9) & 0x150F1A00);
  v67 = v66 ^ ((*(unsigned __int8 *)(STACK[0x688]
                                   + (unsigned __int16)(91 * (((unsigned __int16)v63 >> 12) ^ 0xC) + 29939) % 0x3BEu) ^ 0x9C) << 12);
  v68 = *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (v63 & 0xF ^ 0xA) + 29939) % 0x3BEu) ^ 0x9C;
  v69 = (v67 ^ 0xA878DA7 | v68) ^ (16
                                 * (*(unsigned __int8 *)(STACK[0x688]
                                                       + (unsigned __int16)(91 * (v63 >> 4) + 28981)
                                                       % 0x3BEu) ^ 0x9C));
  v70 = ((((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (HIBYTE(v64) & 0xF ^ 1) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v64 >> 28) ^ 0xB) + 29939) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (BYTE2(v64) & 0xF ^ 5) + 29939) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v64 >> 20) & 0xF ^ 0xC) + 29939) % 0x3BEu) ^ 0x9C) << 12);
  v71 = *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v64 >> 8) & 0xF ^ 0xC) + 29939) % 0x3BEu) ^ 0x9C;
  v72 = v68 & 0xF;
  LOWORD(v68) = (unsigned __int16)(91 * (v61 & 0xF ^ 2) + 29939) % 0x3BEu;
  v73 = ((v70 | v71) << 8) - 211735538 - (((v70 | v71) << 9) & 0xE6C25800);
  v74 = v73 ^ ((*(unsigned __int8 *)(STACK[0x688]
                                   + (unsigned __int16)(91 * (((unsigned __int16)(v64 & 0xF000) >> 12) ^ 9) + 29939)
                                   % 0x3BEu) ^ 0x9C) << 12);
  v75 = *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)v68) ^ 0x9C;
  v76 = (v74 ^ 0xF3612C0E | v75) ^ (16
                                  * (*(unsigned __int8 *)(STACK[0x688]
                                                        + (unsigned __int16)(91 * ((v64 >> 4) ^ 3)
                                                                           + 29939)
                                                        % 0x3BEu) ^ 0x9C));
  v77 = 91 * (v72 & 0xFFFFFF0F | (16 * (v75 & 0xF)));
  v78 = 91
      * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v77 - 31957) % 0x3BEu) ^ LODWORD(STACK[0x60C]) ^ 0x9C);
  v79 = *(unsigned __int8 *)(STACK[0x688]
                           + (v78
                                          + 33579
                                          - 958 * ((4483265 * (unint64_t)(v78 + 33579)) >> 32)));
  v80 = (*(unsigned __int8 *)(STACK[0x688]
                            + (v78
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v78 + 63791)) >> 32))) >> 4) ^ 9;
  v81 = *(unsigned __int8 *)(STACK[0x688]
                           + (unsigned __int16)(91
                                              * ((v80 - ((2 * v80) & 0x18) - 100) ^ *(unsigned __int8 *)(STACK[0x688] + (v77 + 63791 - 958 * ((4483265 * (unint64_t)(v77 + 63791)) >> 32))))
                                              - 31957)
                           % 0x3BEu) ^ 0x9C;
  v82 = 91 * (v76 & 0xF0 | (v69 >> 4));
  v83 = 91 * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v82 - 31957) % 0x3BEu) ^ (16 * v81) ^ 0x9C);
  LODWORD(STACK[0x624]) = v79 ^ (16
                               * (*(unsigned __int8 *)(STACK[0x688]
                                                     + (v83
                                                                    + 33579
                                                                    - 958
                                                                    * ((4483265
                                                                      * (unint64_t)(v83 + 33579)) >> 32))) ^ 0x9C));
  v84 = *(unsigned __int8 *)(STACK[0x688]
                           + (v83
                                          + 63791
                                          - 958 * ((4483265 * (unint64_t)(v83 + 63791)) >> 32))) >> 4;
  v85 = 91 * ((v76 >> 4) & 0xF0 | (v69 >> 8) & 0xF);
  v86 = *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v85 - 31957) % 0x3BEu) ^ (16
                                                                                       * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (((v84 ^ 9) + ((2 * ((v84 ^ 9 | 0x7C) ^ v84)) ^ 0x15) - 99) ^ *(unsigned __int8 *)(STACK[0x688] + (v82 + 63791 - 958 * ((4483265 * (unint64_t)(v82 + 63791)) >> 32)))) - 31957) % 0x3BEu) ^ 0x9C));
  LOWORD(v85) = *(unsigned __int8 *)(STACK[0x688]
                                   + (v85
                                                  + 63791
                                                  - 958
                                                  * ((4483265 * (unint64_t)(v85 + 63791)) >> 32)));
  v87 = 91 * (v86 ^ 0x9C);
  LODWORD(STACK[0x620]) = v87 + 33579 - 958 * ((4483265 * (unint64_t)(v87 + 33579)) >> 32);
  v88 = *(unsigned __int8 *)(STACK[0x688]
                           + (v87
                                          + 63791
                                          - 958 * ((4483265 * (unint64_t)(v87 + 63791)) >> 32))) >> 4;
  LOWORD(v85) = ((v88 ^ 9) + ~(2 * ((v88 ^ 9) & 0xE ^ v88 & 2)) - 99) ^ (unsigned __int16)v85;
  v89 = 91 * (((v74 >> 8) & 0xF0 | ((unsigned __int16)v67 >> 12)) ^ 0x28);
  v90 = HIWORD(v67) ^ 0xA87;
  v91 = 91
      * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v89 - 31957) % 0x3BEu) ^ (16
                                                                                        * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * v85 - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v92 = *(unsigned __int8 *)(STACK[0x688]
                           + (v91
                                          + 33579
                                          - 958 * ((4483265 * (unint64_t)(v91 + 33579)) >> 32)));
  v93 = *(unsigned __int8 *)(STACK[0x688]
                           + (v91
                                          + 63791
                                          - 958 * ((4483265 * (unint64_t)(v91 + 63791)) >> 32))) >> 4;
  v94 = v92 ^ 0x9C;
  LOBYTE(v92) = BYTE2(v74) & 4;
  v95 = 91 * (((BYTE2(v67) ^ 0x87) & 0xF | (16 * (HIWORD(v74) & 0xF))) ^ 0x10);
  v96 = 91
      * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v95 - 31957) % 0x3BEu) ^ (16
                                                                                        * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (((v93 ^ 9) - 2 * ((v93 ^ 9) & 0xE ^ v93 & 2) - 100) ^ *(unsigned __int8 *)(STACK[0x688] + (v89 + 63791 - 958 * ((4483265 * (unint64_t)(v89 + 63791)) >> 32)))) - 31957) % 0x3BEu) ^ 0x9C)) ^ 0x9C);
  v97 = ((*(unsigned __int8 *)(STACK[0x688]
                             + (v96
                                            + 33579
                                            - 958 * ((4483265 * (unint64_t)(v96 + 33579)) >> 32))) ^ 0x9C) << 16) ^ (v94 << 12);
  v98 = (*(unsigned __int8 *)(STACK[0x688]
                            + (v96
                                           + 63791
                                           - 958 * ((4483265 * (unint64_t)(v96 + 63791)) >> 32))) >> 4) ^ 9;
  v99 = (v98 - ((2 * v98) & 0x18) - 100) ^ *(unsigned __int8 *)(STACK[0x688]
                                                                               + (v95
                                                                                              + 63791
                                                                                              - 958
                                                                                              * ((4483265
                                                                                                * (unint64_t)(v95 + 63791)) >> 32)));
  v100 = (v90 >> ((v92 ^ 4) + v92)) - ((2 * (v90 >> ((v92 ^ 4) + v92))) & 0x8FEC) + 1147357174;
  v101 = 91 * (((2 * v99) & 0xE2) + (v99 ^ 0x171));
  v102 = 91
       * ((((v90 >> ((v92 ^ 4) + v92)) - ((2 * (v90 >> ((v92 ^ 4) + v92))) & 0xEC) - 10) & 0xF | (16 * ((v73 >> 20) & 0xF))) ^ 0x66);
  v103 = 91
       * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v102 - 31957) % 0x3BEu) ^ (16
                                                                                          * (*(unsigned __int8 *)(STACK[0x688] + (v101 - 958 * ((4483265 * (unint64_t)v101) >> 32))) ^ 0x9C)) ^ 0x9C);
  v104 = v103 + 33579 - 958 * ((4483265 * (unint64_t)(v103 + 33579)) >> 32);
  v105 = (*(unsigned __int8 *)(STACK[0x688]
                             + (v103
                                            + 63791
                                            - 958 * ((4483265 * (unint64_t)(v103 + 63791)) >> 32))) >> 4) ^ 9;
  LOWORD(v105) = (unsigned __int16)(91
                                  * ((v105 - ((2 * v105) & 0x18) - 100) ^ *(unsigned __int8 *)(STACK[0x688] + (v102 + 63791 - 958 * ((4483265 * (unint64_t)(v102 + 63791)) >> 32))))
                                  - 31957)
               % 0x3BEu;
  v106 = 91
       * (((v73 >> 20) & 0xF0 | (((v90 >> ((v92 ^ 4) + v92))
                                                 - ((2 * (v90 >> ((v92 ^ 4) + v92))) & 0xEC)
                                                 - 10) >> 4)) ^ 0x3F);
  v107 = *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(v106 - 31957) % 0x3BEu) ^ (16
                                                                                         * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)v105) ^ 0x9C)) ^ 0x9C;
  v108 = 91 * v107 + 33579 - 958 * ((4483265 * (unint64_t)(91 * v107 + 33579)) >> 32);
  v109 = v108 - 1099056614 - ((2 * v108) & 0x434);
  v110 = 91 * ((v109 & 0x2BD ^ 0xA5 | v109 & 0x2BD ^ 0x218) + v107);
  v111 = *(unsigned __int8 *)(STACK[0x688] + (v110 - 958 * ((4483265 * (unint64_t)v110) >> 32))) >> 4;
  v112 = (unsigned __int16)(91
                          * (((v111 ^ 9) + ~(2 * ((v111 ^ 9) & 0xE ^ v111 & 2)) - 99) ^ *(unsigned __int8 *)(STACK[0x688] + (v106 + 63791 - 958 * ((4483265 * (unint64_t)(v106 + 63791)) >> 32))))
                          - 31957)
       % 0x3BEu;
  v113 = (unsigned __int16)v112 - 903137773 - ((2 * v112) & 0x426);
  v114 = STACK[0x628];
  v115 = LODWORD(STACK[0x628]) + 621657924;
  LODWORD(STACK[0x658]) = v115;
  LODWORD(STACK[0xB58]) = LODWORD(STACK[0x62C]) ^ 0x2A219F50 ^ ((((v114 + 1189333291) | (506066456 - v115)) & 0x23E69DD0)
                                                              - ((2
                                                                * (((v114 + 1189333291) | (506066456 - v115)) & 0x23E69DD0)
                                                                + 215555864) & 0xE5B1200)
                                                              + 1301960838) ^ v63;
  v116 = LODWORD(STACK[0x624]) ^ 0x9C;
  v117 = v97 ^ ((*(unsigned __int8 *)(STACK[0x688] + v104) ^ 0x9C) << 20);
  v118 = 91
       * (*(unsigned __int8 *)(STACK[0x688]
                             + (unsigned __int16)(91
                                                * (((v113 & 0xF ^ 0xC | v113 & 0xF ^ 3) & ((v100 >> 8) ^ 7) | (16 * (v73 >> 28))) ^ 0xF0)
                                                - 31957)
                             % 0x3BEu) ^ (16 * (*(unsigned __int8 *)(STACK[0x688] + (v113 ^ 0xCA2B3613)) ^ 0x9C)) ^ 0x9C)
       + 33579;
  v119 = STACK[0x660];
  v120 = ((*(unsigned __int8 *)(STACK[0x688] + (v118 - 958 * ((4483265 * (unint64_t)v118) >> 32))) ^ 0xC) << 28) ^ ((*(unsigned __int8 *)(STACK[0x688] + (v109 ^ 0xBE7DBA1A)) ^ 0x9C) << 24);
  v121 = v120 ^ v117;
  v122 = v116 ^ ((*(unsigned __int8 *)(STACK[0x688] + LODWORD(STACK[0x620])) ^ 0x9C) << 8) ^ v120 ^ v117;
  LOWORD(v111) = 91 * (v72 & 0xFF0F | (16 * (v122 & 0xF)))
               - 958 * ((unsigned __int16)((1593683 * (v72 & 0xFFFFFF0F | (16 * (v122 & 0xF)))) >> 16) >> 8);
  v123 = (v122 >> 4) & 0xF0 | (v69 >> 8) & 0xF;
  v124 = ((v122 >> 8) & 0xF0 | ((unsigned __int16)v67 >> 12)) ^ 8;
  v125 = ((v97 >> 12) & 0xF0 | HIWORD(v67) & 0xF) ^ 7;
  v126 = (HIWORD(v117) & 0xF0 | (v66 >> 20) & 0xF) ^ 8;
  v127 = ((v121 >> 20) & 0xF0 | HIBYTE(v66) & 0xF) ^ 0xA;
  v128 = *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)v111);
  v129 = v128 ^ (16
               * (*(unsigned __int8 *)(STACK[0x688]
                                     + (unsigned __int16)(91 * (v116 & 0xF0 | (v69 >> 4))
                                                        - 958
                                                        * ((unsigned __int16)((1593683
                                                                             * (v116 & 0xF0 | (v69 >> 4))) >> 16) >> 8))) ^ 0x9C)) ^ 0x9C;
  v130 = v129 ^ ((*(unsigned __int8 *)(STACK[0x688]
                                     + (unsigned __int16)(91 * v123
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v123) >> 16) >> 8))) ^ 0x9C) << 8);
  v131 = v130 ^ ((*(unsigned __int8 *)(STACK[0x688]
                                     + (unsigned __int16)(91 * v124
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v124) >> 16) >> 8))) ^ 0x9C) << 12);
  v132 = v131 ^ ((*(unsigned __int8 *)(STACK[0x688]
                                     + (unsigned __int16)(91 * v125
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v125) >> 16) >> 8))) ^ 0x9C) << 16);
  v133 = v132 ^ ((*(unsigned __int8 *)(STACK[0x688]
                                     + (unsigned __int16)(91 * v126
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v126) >> 16) >> 8))) ^ 0x9C) << 20);
  v134 = v133 ^ ((*(unsigned __int8 *)(STACK[0x688]
                                     + (unsigned __int16)(91 * v127
                                                        - 958
                                                        * ((unsigned __int16)((1593683 * v127) >> 16) >> 8))) ^ 0x9C) << 24);
  v135 = ((((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (HIBYTE(v134) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v134 ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (HIBYTE(v120) & 0xF0 | (v66 >> 28)) - 958 * ((unsigned __int16)((1593683 * (HIBYTE(v120) & 0xF0 | (v66 >> 28))) >> 16) >> 8))) ^ 0xCu) << 28)) >> 28) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (BYTE2(v132) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 8) ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v133 >> 20) & 0xF) + 31577) % 0x3BEu) ^ 0x9C) << 12) | *(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((v130 >> 8) & 0xF) + 31577) % 0x3BEu) ^ 0x9C;
  v136 = STACK[0x640];
  LODWORD(STACK[0x9FC]) = (LODWORD(STACK[0x630]) + 1729496980) ^ LODWORD(STACK[0x634]) ^ 0x2A219F50 ^ (16 * (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (v129 >> 4) + 31577) % 0x3BEu) ^ 0x9C)) ^ (*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * (v128 & 0xF ^ 0xC) + 31577) % 0x3BEu) ^ 0x9C | ((v135 ^ ((*(unsigned __int8 *)(STACK[0x688] + (unsigned __int16)(91 * ((unsigned __int16)v131 >> 12) + 31577) % 0x3BEu) ^ 0x9C) << ((v60 + 1) & 4) << ((v60 + 1) & 4 ^ 4))) << 8));
  v137 = LODWORD(STACK[0x638]) ^ (((LODWORD(STACK[0x668]) + 56913483) ^ 0x56B997D4 ^ LODWORD(STACK[0x678]))
                                - LODWORD(STACK[0x64C])
                                - 142901441);
  LODWORD(STACK[0x668]) = v137
                        + LODWORD(STACK[0x63C])
                        - 2142863794
                        + 842083502
                        - ((2 * (v137 + LODWORD(STACK[0x63C]) - 2142863794)) & 0x6462595C);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x690] + 8 * ((2034 * (v119 == 47)) ^ v136)) - 4))();
}

void sub_1CF32245C()
{
  int v0;
  int v1;

  LODWORD(STACK[0x670]) = v1;
  LODWORD(STACK[0x678]) = v0 - 589060592;
  JUMPOUT(0x1CF320DACLL);
}

uint64_t sub_1CF3224C4(int a1, uint64_t a2, int a3)
{
  int v3;
  unsigned int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  unint64_t v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  _BOOL4 v20;

  v4 = LODWORD(STACK[0x670]) - 1361077671;
  v5 = 663 * (a1 ^ 0x1DA);
  LODWORD(STACK[0x680]) = v5;
  v6 = 972184607 - 398175227 * *(unsigned __int8 *)STACK[0x3E8];
  v7 = ((a3 ^ 0x4F68E6F6) + 8392418 - LODWORD(STACK[0x688]) + v6 + v6 % 0x101 + 1) ^ v3;
  v8 = ((2 * v7) & 0xDFF9FDEA ^ 0xB085D20) + (v7 ^ (v5 + 2054736697));
  v9 = v8 - ((2 * v8 + 356236570) & 0x5D9A5676) + 2037057992;
  HIDWORD(v10) = v9 ^ 0xECD2B3B;
  LODWORD(v10) = v8 + 1251860109;
  v11 = v8 + LODWORD(STACK[0x688]);
  v12 = v9 ^ a3;
  v13 = v3 ^ 0x3B4905A9 ^ v9;
  v14 = ((v11
        - 1964506505
        + (v10 >> 29)
        - ((2 * (v11 - 1964506505 + (v10 >> 29)) + 1047239272) & 0x3CB46464)
        + 1569718118) ^ v12)
      + v13;
  v15 = v11 + 1243467692 + (v14 ^ 0xABF85424);
  v16 = (v13 - ((2 * v13) & 0x681A3CAA) + 873274965) ^ 0x600AB58E ^ v14;
  HIDWORD(v10) = v14 ^ 0x1407ABDB;
  LODWORD(v10) = v14 ^ 0x40000000;
  v17 = ((v12 ^ 0x61A5CDCD) - v11 - 1243467690 + (v10 >> 30)) ^ v16;
  v18 = (v15 - 624235187 - ((2 * v15) & 0xB595DA9A)) ^ v17 ^ 0x64107624;
  HIDWORD(v10) = v17 ^ 0xEDA9B69;
  LODWORD(v10) = v17 ^ 0xB0000000;
  v19 = ((((v17 ^ 0xBEDA9B69) + 1857527226) ^ 0x91486246) + v16 + ((2 * ((v17 ^ 0xBEDA9B69) + 1857527226)) & 0x2290C48C)) ^ ((((v14 ^ 0x5407ABDB) + (v12 ^ 0x9E5A3232) - 624235187 - ((2 * ((v14 ^ 0x5407ABDB) + (v12 ^ 0x9E5A3232))) & 0xB595DA9A)) ^ v17 ^ 0x64107624) + (v10 >> 28) - v18);
  v20 = v4 > 0xAACD9A30;
  if (v4 < 0xAACD9A2F)
    v20 = 1;
  LODWORD(STACK[0x688]) = ((v19 - 1739719015) ^ v18) + 8392418;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x690] + 8 * (((2 * v20) | (8 * v20)) ^ (a1 - 113))) - 8))();
}

void sub_1CF322810()
{
  JUMPOUT(0x1CF322568);
}

uint64_t sub_1CF322820()
{
  int v0;
  unsigned int v1;
  _BOOL4 v2;

  v0 = 4 * LODWORD(STACK[0x680]);
  v1 = (v0 ^ 0x4793C4D4) + LODWORD(STACK[0x670]);
  LODWORD(STACK[0x680]) = ((v0 ^ 0x1608) - 428) | 0x413;
  v2 = v1 > 0x4381D043;
  if (v1 < 0x4381D042)
    v2 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t))(STACK[0x690] + 8 * ((1950 * v2) ^ v0 ^ 0x1608)))(4218512560, 3854949853);
}

void sub_1CF322BC8()
{
  JUMPOUT(0x1CF3228CCLL);
}

unint64_t sub_1CF322BD0(unsigned int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  unsigned int v9;
  unsigned int v10;
  __int16 v11;
  unint64_t result;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;

  *(_BYTE *)(v14 - 0x5788FEB2E38DE344) = ((v21 ^ v9) >> 24) ^ 0xD6;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE33CLL) = ((v8 ^ v16) >> 24) ^ 0xB4;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE338) = ((v15 ^ v22) >> 24) ^ 0x1E;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE340) = ((v17 ^ v20) >> 24) ^ 0x38;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE334) = ((v19 ^ v24) >> 24) ^ 0x62;
  v11 = a8 ^ a1;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE32CLL) = ((a8 ^ a1) >> 24) ^ 0x10;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE330) = ((v23 ^ v18) >> 24) ^ 0xD8;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE328) = ((a4 ^ v10) >> 24) ^ 0xB5;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE33FLL) = ((v17 ^ v20) >> 16) ^ 0x94;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE343) = ((v21 ^ v9) >> 16) ^ 0xBA;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE33BLL) = ((v8 ^ v16) >> 16) ^ 0x53;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE337) = ((v15 ^ v22) >> 16) ^ 0x5D;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE333) = ((v19 ^ v24) >> 16) ^ 0xDA;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE32FLL) = ((v18 ^ 0xD84CA40A) >> ((v9 & 0x10 ^ 0x10) + (v9 & 0x10))) ^ BYTE2(v23);
  *(_BYTE *)(v14 - 0x5788FEB2E38DE32BLL) = ((a8 ^ a1) >> 16) ^ 0xED;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE327) = ((a4 ^ v10) >> 16) ^ 0xC9;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE342) = ((unsigned __int16)(v21 ^ v9) >> 8) ^ 0x14;
  result = 0xA877014D1C721CD2;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE33ELL) = ((unsigned __int16)(v17 ^ v20) >> 8) ^ 0xEB;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE33ALL) = ((unsigned __int16)(v8 ^ v16) >> 8) ^ 0x8F;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE332) = ((unsigned __int16)(v19 ^ v24) >> 8) ^ 0x73;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE336) = ((unsigned __int16)(v15 ^ v22) >> 8) ^ 0x30;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE32ELL) = ((unsigned __int16)(v23 ^ v18) >> 8) ^ 0xA4;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE32ALL) = HIBYTE(v11) ^ 0xE4;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE326) = ((unsigned __int16)(a4 ^ v10) >> 8) ^ 0xF9;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE341) = v21 ^ v9 ^ 0x5D;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE33DLL) = v17 ^ v20 ^ 0x16;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE339) = v8 ^ v16 ^ 0x9E;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE335) = v15 ^ v22 ^ 0xD0;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE331) = v19 ^ v24 ^ 0x35;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE32DLL) = v23 ^ v18 ^ 0xA;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE329) = v11 ^ 0xF1;
  *(_BYTE *)(v14 - 0x5788FEB2E38DE325) = a4 ^ v10 ^ 0x5B;
  *(_DWORD *)(v13 + 40) = -1393729084;
  return result;
}

void sub_1CF322FFC(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1CF323098(_DWORD *a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v5)(uint64_t);
  uint64_t (*v6)(void);

  STACK[0x2A8] = (unint64_t)&STACK[0x703BDE3807C31FC9];
  STACK[0x2D0] = (unint64_t)&STACK[0x703BDE3807C31FD1];
  *(_DWORD *)(v3 - 192) = (248152243 * ((2 * ((v3 - 192) & 0x1AC7A620) - (v3 - 192) - 449291812) ^ 0xFFFD147E)) ^ 0x56EDD32D;
  STACK[0x320] = v1;
  sub_1CF370E18((_DWORD *)(v3 - 192));
  STACK[0x360] = 0x4EE01052B7805F5FLL;
  LODWORD(STACK[0x368]) = 1887903958;
  STACK[0x370] = 0;
  STACK[0x378] = 0x15C2816C7;
  STACK[0x380] = 0x218176F9ELL;
  STACK[0x388] = 0x4EE01052B7805F5FLL;
  STACK[0x270] = (unint64_t)a1;
  LODWORD(STACK[0x390]) = *a1 - ((2 * *a1) & 0xF3207498) + 2039495244;
  STACK[0x398] = 0;
  STACK[0x3A0] = 0x110E8BB8BLL;
  STACK[0x3A8] = 0x218176F9ELL;
  STACK[0x278] = (unint64_t)&STACK[0x4D399F72F5866C58];
  LODWORD(STACK[0x354]) = 0;
  v5 = *(uint64_t (**)(uint64_t))(v2 + 840);
  v6 = *(uint64_t (**)(void))(STACK[0x320] + 8 * ((973 * (v5(128) != 0)) ^ 0x4D5u));
  STACK[0x2D8] = (unint64_t)&STACK[0x703BDE3807C31FB9];
  STACK[0x290] = (unint64_t)v5;
  LODWORD(STACK[0x28C]) = 1393700944;
  return v6();
}

uint64_t sub_1CF323228()
{
  int v0;
  uint64_t (*v1)(uint64_t);
  int v2;
  _BOOL4 v3;

  v3 = v1(112) == 0;
  return (*(uint64_t (**)(void))(STACK[0x320] + 8 * ((179 * ((((v2 + v0 + 182) ^ v3) & 1) == 0)) ^ 0x53Fu)))();
}

uint64_t sub_1CF323288(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  BOOL v5;
  int v6;

  *(_DWORD *)a1 = 1394714680;
  *(_DWORD *)(a1 + 4) = 1710104185;
  *(_QWORD *)(a1 + 72) = 0x116585BF116585BFLL;
  *(_WORD *)(a1 + 80) = 25175;
  memset((void *)(a1 + 8), 79, 64);
  *(_DWORD *)(a1 + 84) = 1095089643;
  *(_DWORD *)(a1 + 104) = 2126566836;
  memset((void *)(a1 + 88), 79, 16);
  *(_BYTE *)(a1 + 108) = 42;
  if (v1)
    v5 = a1 == 0;
  else
    v5 = 1;
  v6 = !v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)(((v3
                                                + (((v2 | 4) + 475535735) & 0xE3A7E6FB)
                                                + (((v2 | 4) + 1797223576) & 0xF7E9E9FD)
                                                - 1183)
                                               * v6) ^ (v2 | 4)))
                            - 8))();
}

uint64_t sub_1CF323364(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + 16) = *(_DWORD *)a1;
  *(_DWORD *)(v2 + 88) = *(_DWORD *)(a1 + 72);
  *(_DWORD *)(v2 + 92) = *(_DWORD *)(a1 + 76);
  *(_BYTE *)(v2 + 96) = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(v2 + 97) = *(_BYTE *)(a1 + 81);
  *(_DWORD *)(v2 + 120) = *(_DWORD *)(a1 + 104);
  *(_DWORD *)(v2 + 100) = *(_DWORD *)(a1 + 84);
  *(_BYTE *)(v2 + 124) = ((v1 ^ 0x4E) - (*(_BYTE *)(a1 + 108) & 1) - 102) ^ 0xFB;
  *(_BYTE *)(v2 + 55) = *((_BYTE *)*(&off_1E8C4D9A0 + (v1 ^ 0x4E) - 676) + 11) ^ 0x61 ^ *((_BYTE *)*(&off_1E8C4D9A0 + (v1 ^ 0x4E) - 602)
                                                                                        + 13) ^ (*(_BYTE *)(a1 + 39)
                                                                                               + (*(_BYTE *)(a1 + 39) | 0x1B)
                                                                                               + (((v1 ^ 0x4E) + 3) ^ 0xA1 | ~*(_BYTE *)(a1 + 39))
                                                                                               - 105) ^ *((_BYTE *)*(&off_1E8C4D9A0 + (v1 ^ 0x2A8)) + 16);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * v1) - 4))();
}

void sub_1CF323480()
{
  JUMPOUT(0x1CF3233F4);
}

uint64_t sub_1CF323488()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v1 == -1393729084) * (v2 + ((v0 - 138) ^ 0x18E) + 486)) ^ 0x18E))
                            - 4))();
}

uint64_t sub_1CF3234E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;

  v11 = 5 * (a6 ^ 0x49E);
  *(_BYTE *)(v9 + 87) = *(_BYTE *)(v7 + 17) ^ *(_BYTE *)(v6 + 15) ^ *(_BYTE *)(v8 + 16) ^ 0x61 ^ (*(_BYTE *)(a1 + 71)
                                                                                                + (*(_BYTE *)(a1 + 71) | 0x1B)
                                                                                                + ((((v11 + 53) & 0xDE)
                                                                                                  + 83) | ~*(_BYTE *)(a1 + 71))
                                                                                                - 105);
  return (*(uint64_t (**)(void))(v10 + 8 * (v11 ^ 0xE)))();
}

void sub_1CF323590()
{
  JUMPOUT(0x1CF32351CLL);
}

uint64_t sub_1CF323598@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 + 119) = *(_BYTE *)(a1 + 103);
  *(_BYTE *)(v3 + 118) = *(_BYTE *)(a1 + 102);
  *(_BYTE *)(v3 + 117) = *(_BYTE *)(a1 + 101);
  *(_BYTE *)(v3 + 116) = *(_BYTE *)(a1 + 100);
  *(_BYTE *)(v3 + 115) = *(_BYTE *)(a1 + 99);
  *(_BYTE *)(v3 + 114) = *(_BYTE *)(a1 + 98);
  *(_BYTE *)(v3 + 113) = *(_BYTE *)(a1 + 97);
  *(_BYTE *)(v3 + 112) = *(_BYTE *)(a1 + 96);
  *(_BYTE *)(v3 + 111) = *(_BYTE *)(a1 + 95);
  *(_BYTE *)(v3 + 110) = *(_BYTE *)(a1 + 94);
  *(_BYTE *)(v3 + 109) = *(_BYTE *)(a1 + 93);
  *(_BYTE *)(v3 + 108) = *(_BYTE *)(a1 + 92);
  *(_BYTE *)(v3 + 107) = *(_BYTE *)(a1 + 91);
  *(_BYTE *)(v3 + 106) = *(_BYTE *)(a1 + 90);
  *(_BYTE *)(v3 + 105) = *(_BYTE *)(a1 + 89);
  *(_BYTE *)(v3 + 104) = *(_BYTE *)(a1 + 88);
  *(_DWORD *)(v3 + 20) = *(_DWORD *)(a1 + 4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((762 * (*(_DWORD *)(a1 + 4) == ((v2 - 599) ^ a2))) ^ v2)) - 8))();
}

uint64_t sub_1CF323650(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((406 * (*(_DWORD *)(a1 + 72) != v1 + ((v2 - 663) | 0x40) - 625)) ^ v2))
                            - 8))();
}

uint64_t sub_1CF323684@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_DWORD *)(v3 + 20) = a2 + 626;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((243 * (((a1 == 0) ^ (v4 + v2 - 112)) & 1)) ^ v2))
                            - 4))();
}

uint64_t sub_1CF3236C4()
{
  int v0;
  int v1;
  _BOOL4 v2;

  sub_1CF370D34();
  v2 = ((uint64_t (*)(uint64_t))STACK[0x290])(16) != 0;
  return (*(uint64_t (**)(void))(STACK[0x320] + 8 * ((v2 * (((v1 + v0 - 436) | 0x624) - 1056)) ^ (v1 + v0 + 883))))();
}

uint64_t sub_1CF323714(_QWORD *a1)
{
  uint64_t v1;
  int v2;
  int v3;
  _BOOL4 v4;

  *a1 = 0x23120F4208F8DDDLL;
  a1[1] = 0x23120F4208F8DDDLL;
  *(_QWORD *)(v1 + 8) = (char *)a1 + 0x373C0AAD4CE136CBLL;
  v4 = ((uint64_t (*)(uint64_t))STACK[0x290])(16) == 0;
  return ((uint64_t (*)(void))(1661559056
                            - (v2 - v3 - 1136)
                            + *(_QWORD *)(STACK[0x320] + 8 * ((v4 * (v2 - 1470)) ^ v2))
                            + 8))();
}

uint64_t sub_1CF323798(_QWORD *a1)
{
  _QWORD *v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *a1 = 0x23120F4208F8DDDLL;
  a1[1] = 0x23120F4208F8DDDLL;
  *v1 = (char *)a1 + v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (int)((((v2 - 986 - v4 - 799072965) & 0xCC9781FF ^ 0xF7)
                                               * (&STACK[0x360] == 0)) ^ (v2 - 986)))
                            - 8))();
}

uint64_t sub_1CF3237F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  int v10;
  unint64_t *v11;
  int v12;
  uint64_t v13;

  LODWORD(STACK[0x20C]) = 2032305565;
  STACK[0x200] = *v11;
  STACK[0x2A0] = *(_QWORD *)(v13 + 8 * (v12 + v9 - 150 - 214)) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13
                                        + 8
                                        * (((((v9 - 150) ^ (v10 - 76)) - 435) * (&a9 != (uint64_t *)-864)) ^ (v9 - 150 + v12)))
                            - 12))();
}

void sub_1CF3238C4(int a1@<W8>)
{
  __asm { BR              X8 }
}

uint64_t sub_1CF325BFC()
{
  unsigned int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((1829
                                          * (*(_DWORD *)(STACK[0x278]
                                                       - 0x4D399F72F58668F8
                                                       + 40
                                                       * (((v2 + (v0 ^ (v1 + 238)) + 9) ^ 0xFFFFFFFFB6F69543)
                                                        + LODWORD(STACK[0x2C4]))
                                                       + 36)
                                           - LODWORD(STACK[0x20C]) == -2032305563)) ^ v0))
                            - 12))();
}

uint64_t sub_1CF325C78()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;

  v5 = *(_DWORD *)(v1 + 40 * v0 + 28);
  switch(v5)
  {
    case 1:
      LODWORD(STACK[0x308]) = *(_DWORD *)(v1 + 40 * v0 + 24);
      JUMPOUT(0x1CF325DA0);
    case 3:
      return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                            + 8 * ((461 * (*(_QWORD *)(v1 + 40 * v0 + 16) == 0)) ^ (v3 + v2 + 271)))
                                - ((v2 + 82532834) & 0x980B47FF ^ ((v3 + v2 + 9) + 285))))();
    case 2:
      return (*(uint64_t (**)(void))(v4
                                  + 8
                                  * ((((v3 + v2 - 410) ^ 0x2B) * (STACK[0x200] != 0x373C0AAD4CE136CBLL)) ^ (v3 + v2 + 802))))();
  }
  return ((uint64_t (*)(void))STACK[0x2A0])();
}

void sub_1CF325E10()
{
  JUMPOUT(0x1CF325E4CLL);
}

uint64_t sub_1CF325E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v63;
  unint64_t v64;
  int v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  LODWORD(STACK[0x2F0]) = v65;
  STACK[0x2B0] = v64;
  v67 = v63 + 410;
  v68 = (v63 - 208929263) & 0x6F7D613E;
  v69 = (v63 - 567048765) & 0x21CC7BF2;
  v70 = ((uint64_t (*)(uint64_t))STACK[0x290])(32);
  STACK[0x280] = v70 + 0x23120F4208F8DDDLL;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 + 8 * (((v70 == 0) * (v69 ^ 0x366)) ^ v67)) - (v68 ^ 0x63096110)))(v70, v71, v72, v73, v74, v75, v76, v77, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_1CF325F34(uint64_t a1)
{
  unsigned int v1;
  uint64_t v2;
  int v3;
  uint64_t v5;

  *(_QWORD *)a1 = 0x23120F4208F8DDDLL;
  *(_QWORD *)(a1 + 8) = 0x23120F4208F8DDDLL;
  *(_DWORD *)(a1 + 16) = v3 + 1104466723;
  v5 = ((uint64_t (*)(_QWORD))STACK[0x290])((((v1 - 890) | 0x50) ^ 0xE7E89028) + v3);
  *(_QWORD *)(a1 + 24) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1596 * (v5 != 0)) ^ v1))
                            - ((v1 + 2078925757) & 0xE71F79DC ^ 0x63096110)))();
}

uint64_t sub_1CF325FCC()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  unint64_t v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;

  STACK[0x318] = v4;
  v5 = LODWORD(STACK[0x308])
     - ((2 * LODWORD(STACK[0x308]) + 351044202) & 0x74FCEE56)
     + ((v1 - 274762940) & 0x7369ED7F ^ 0xE7FDD97C);
  v6 = LODWORD(STACK[0x2F0]) - ((2 * LODWORD(STACK[0x2F0]) + 17218) & 0x7A04u) + 24227;
  LODWORD(STACK[0x230]) = v3;
  LODWORD(STACK[0x248]) = v3 - ((2 * v3 + 1339105484) & 0x74FCEE56) - 1570306159;
  LODWORD(STACK[0x220]) = v2 ^ 0xC3EE4D67;
  v7 = *(_BYTE **)(v0 + 24);
  v8 = __ROR8__(v7, 8);
  v9 = (0x150C087CC469144DLL - (v8 & 0xF8FFFFFFFFFFFFFFLL)) & 0x19A889ECFF1A1ED8 | ((v8 & 0xF8FFFFFFFFFFFFFFLL)
                                                                                    - 0x550C087CC469144ELL) & 0xE057761300E5E127;
  v10 = __ROR8__(v9 ^ 0xA2238B49AE9B5874, 8);
  v9 ^= 0xF5BC3750722C05E1;
  v11 = __ROR8__((v10 + v9) ^ 0x50D4D0E13CBD7177, 8);
  v12 = (v10 + v9) ^ 0x50D4D0E13CBD7177 ^ __ROR8__(v9, 61);
  v13 = v11 + v12;
  v14 = (v11 + v12) ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v12, 61);
  *((_QWORD *)&v15 + 1) = v13;
  *(_QWORD *)&v15 = v13 ^ 0xE5D7DAAEED85A300;
  v16 = __ROR8__(((v15 >> 8) + v14) ^ 0x8E85997BF8A3092DLL, 8);
  v17 = *(_QWORD *)(STACK[0x320] + 8 * v1);
  v18 = ((v15 >> 8) + v14) ^ 0x8E85997BF8A3092DLL ^ __ROR8__(v14, 61);
  v19 = (v16 + v18) ^ 0xCD091F17C02FDE51;
  v20 = v19 ^ __ROR8__(v18, 61);
  v21 = (__ROR8__(v19, 8) + v20) ^ 0x628ABC52894BE762;
  v22 = v21 ^ __ROR8__(v20, 61);
  *(_QWORD *)&v15 = __ROR8__(v21, 8);
  *v7 = (((__ROR8__((((2 * (v15 + v22)) & 0xFCA17D98F44813EALL) - (v15 + v22) - 0x7E50BECC7A2409F6) ^ 0xDB6FDD30BA50D16BLL, 8)+ ((((2 * ((_QWORD)v15 + v22)) & 0xFCA17D98F44813EALL) - ((_QWORD)v15 + v22) - 0x7E50BECC7A2409F6) ^ 0xDB6FDD30BA50D16BLL ^ __ROR8__(v22, 61))) ^ 0x1B0BD1982B59C071) >> (8 * (v7 & 7u))) ^ HIBYTE(v5) ^ 0xBA;
  v23 = (__ROR8__(v7 + 1, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL;
  v24 = v23 ^ 0xB98B02A5518146ACLL;
  v23 ^= 0xEE14BEBC8D361B39;
  v25 = (__ROR8__(v24, 8) + v23) ^ 0x50D4D0E13CBD7177;
  v26 = v25 ^ __ROR8__(v23, 61);
  *(_QWORD *)&v15 = __ROR8__(v25, 8);
  v27 = __ROR8__((((2 * (v15 + v26)) & 0xA793A7F6AC829AE6) - (v15 + v26) - 0x53C9D3FB56414D74) ^ 0x49E1F6AA443B118CLL, 8);
  v28 = (((2 * (v15 + v26)) & 0xA793A7F6AC829AE6) - (v15 + v26) - 0x53C9D3FB56414D74) ^ 0x49E1F6AA443B118CLL ^ __ROR8__(v26, 61);
  v29 = (v27 + v28) ^ 0x8E85997BF8A3092DLL;
  v30 = v29 ^ __ROR8__(v28, 61);
  *(_QWORD *)&v15 = __ROR8__(v29, 8);
  v31 = (((2 * (v15 + v30)) & 0xF0BAF55B447DEC8ELL) - (v15 + v30) + 0x7A285525DC109B8) ^ 0xCAAB9A459DEED7E9;
  v32 = v31 ^ __ROR8__(v30, 61);
  *(_QWORD *)&v15 = __ROR8__(v31, 8);
  v33 = (-2 - ((~(v15 + v32) | 0x1FF46385B66E09DELL) + ((v15 + v32) | 0xE00B9C7A4991F621))) ^ 0x7D7EDFD73F25EEBCLL;
  v34 = v33 ^ __ROR8__(v32, 61);
  *(_QWORD *)&v15 = __ROR8__(v33, 8);
  v35 = (0xA4E31C196FB07E65 - ((v15 + v34) | 0xA4E31C196FB07E65) + ((v15 + v34) | 0x5B1CE3E6904F819ALL)) ^ 0x1DC7FE5AFC4A6FBLL;
  v36 = v35 ^ __ROR8__(v34, 61);
  *(_QWORD *)&v15 = __ROR8__(v35, 8);
  v7[1] = (((-2 - ((~((_QWORD)v15 + v36) | 0x75B531B3FC4CDC6BLL) + (((_QWORD)v15 + v36) | 0x8A4ACE4C03B32394))) ^ 0x6EBEE02BD7151C1ALL) >> (8 * (((_BYTE)v7 + 1) & 7u))) ^ BYTE2(v5) ^ 0x7E;
  v37 = (__ROR8__(v7 + 2, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL;
  v38 = v37 ^ 0xB98B02A5518146ACLL;
  v37 ^= 0xEE14BEBC8D361B39;
  *(_QWORD *)&v15 = __ROR8__(v38, 8);
  v39 = __ROR8__((((2 * (v15 + v37)) & 0x9D263FB38571CE96) - (v15 + v37) + 0x316CE0263D4718B4) ^ 0x61B830C701FA69C3, 8);
  v40 = (((2 * (v15 + v37)) & 0x9D263FB38571CE96) - (v15 + v37) + 0x316CE0263D4718B4) ^ 0x61B830C701FA69C3 ^ __ROR8__(v37, 61);
  v41 = v39 + v40;
  v42 = (v39 + v40) ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v40, 61);
  *((_QWORD *)&v15 + 1) = v41;
  *(_QWORD *)&v15 = v41 ^ 0xE5D7DAAEED85A300;
  v43 = (0x8EEAB8D098054CA2 - (((v15 >> 8) + v42) | 0x8EEAB8D098054CA2) + (((v15 >> 8) + v42) | 0x7115472F67FAB35DLL)) ^ 0xFF90DE549F59BA70;
  v44 = v43 ^ __ROR8__(v42, 61);
  *(_QWORD *)&v15 = __ROR8__(v43, 8);
  v45 = (-2 - ((~(v15 + v44) | 0x978199C1D991797DLL) + ((v15 + v44) | 0x687E663E266E8682))) ^ 0x5A8886D619BEA72CLL;
  v46 = v45 ^ __ROR8__(v44, 61);
  *(_QWORD *)&v15 = __ROR8__(v45, 8);
  v47 = (((2 * (v15 + v46)) & 0x9D3B31D97DA9F9B8) - (v15 + v46) - 0x4E9D98ECBED4FCDDLL) ^ 0xD3E8DB41C860E441;
  v48 = v47 ^ __ROR8__(v46, 61);
  v49 = (__ROR8__(v47, 8) + v48) ^ 0x5AC09C033F8B2761;
  v7[2] = (((__ROR8__(v49, 8) + (v49 ^ __ROR8__(v48, 61))) ^ 0x1B0BD1982B59C071uLL) >> (8 * (((_BYTE)v7 + 2) & 7u))) ^ BYTE1(v5) ^ 0x77;
  *(_QWORD *)&v15 = __ROR8__(v7 + 3, 8);
  v50 = ((2 * ((v15 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0x20EB39D37CA90794)
      - ((v15 & 0xF8FFFFFFFFFFFFFFLL)
       - 0x550C087CC469144ELL)
      - 0x10759CE9BE5483CALL;
  v51 = v50 ^ 0xA9FE9E4CEFD5C566;
  v50 ^= 0xFE612255336298F3;
  *(_QWORD *)&v15 = __ROR8__(v51, 8);
  v52 = (-2 - ((~(v15 + v50) | 0x3D54A62DE74C24CLL) + ((v15 + v50) | 0xFC2AB59D218B3DB3))) ^ 0x53019A83E2C9B33BLL;
  v53 = v52 ^ __ROR8__(v50, 61);
  *(_QWORD *)&v15 = __ROR8__(v52, 8);
  v54 = (-2 - ((~(v15 + v53) | 0x1730E72B835C4191) + ((v15 + v53) | 0xE8CF18D47CA3BE6ELL))) ^ 0xF2E73D856ED9E291;
  v55 = v54 ^ __ROR8__(v53, 61);
  *(_QWORD *)&v15 = __ROR8__(v54, 8);
  v56 = (v15 + v55 - ((2 * (v15 + v55)) & 0x9B516F8D43D1232ELL) - 0x325748395E176E69) ^ 0x432D2EBD594B98BALL;
  v57 = v56 ^ __ROR8__(v55, 61);
  v58 = (__ROR8__(v56, 8) + v57) ^ 0xCD091F17C02FDE51;
  v59 = v58 ^ __ROR8__(v57, 61);
  *(_QWORD *)&v15 = __ROR8__(v58, 8);
  v60 = (((2 * (v15 + v59)) | 0x70B9105F53F81A68) - (v15 + v59) + 0x47A377D05603F2CCLL) ^ 0xDAD6347D20B7EA56;
  v61 = v60 ^ __ROR8__(v59, 61);
  v62 = (__ROR8__(v60, 8) + v61) ^ 0x5AC09C033F8B2761;
  v63 = __ROR8__(v62, 8) + (v62 ^ __ROR8__(v61, 61));
  v7[3] = v5 ^ 0x2B ^ (((v63 - ((2 * v63) & 0xCDE279B6265D5694) - 0x190EC324ECD154B6) ^ 0xFDFAED4338776B3BLL) >> (8 * (((_BYTE)v7 + 3) & 7u)));
  return ((uint64_t (*)(uint64_t))(v17 - 12))(v6);
}

uint64_t sub_1CF326CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a67;
  int v67;
  int v69;

  v67 = STACK[0x2F0];
  if (LODWORD(STACK[0x2F0]) == 62934)
    return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x320] + 8 * ((1310 * (LODWORD(STACK[0x230]) == 404189086)) ^ 0x382))
                              - 12))();
  v69 = STACK[0x230];
  if (v67 == 44858)
    return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x320]
                                          + 8
                                          * ((1004
                                            * (((2 * (v69 - ((a67 - 808378164) & 0x9C147D78) + 905105186)) & 0xFFBEF7BA ^ 0x9C147538)
                                             + ((v69 - ((a67 - 808378164) & 0x9C147D78) + 905105186) ^ 0x31D54561)
                                             - 1284854297 != 860498372)) ^ 0x66))
                              - 12))();
  if (v67 != 58084)
    JUMPOUT(0x1CF32919CLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x320] + 8 * ((1491 * (v69 == 404189090)) ^ 0x382)) - 12))();
}

void sub_1CF326D48()
{
  JUMPOUT(0x1CF32663CLL);
}

uint64_t sub_1CF326E14()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((((v1 + v0 - 766) ^ (STACK[0x200] == 0x373C0AAD4CE136CBLL)) & 1) == 0)
                                          * ((7 * (v0 ^ 0x2FC)) ^ 0x1E7)) ^ v0))
                            - 8))();
}

void sub_1CF326E78()
{
  uint64_t v0;
  uint64_t v1;

  LODWORD(STACK[0x308]) = *(_DWORD *)(v1 + 40 * v0 + 24);
  JUMPOUT(0x1CF326ED8);
}

void sub_1CF326F70(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;

  v63 = (a1 + 1091059614) | 0x22012118u;
  v64 = *(_BYTE **)(v62 + 24);
  v65 = a62 - ((v63 + 2 * a62 + 0x623FDF5A2DF5E026) & 0xF6B04CCF712B80C0) - 0x5387E9EAFEEA9EFFLL;
  v66 = __ROR8__(v64 + 10, 8);
  v67 = ((2 * (v66 & 0xF8FFFFFFFFFFFFFFLL) + 0x55E7EF06772DD764) & 0x90B16B7D1B79A6A2)
      - (v66 & 0xF8FFFFFFFFFFFFFFLL)
      + 0xCB352BE36AC40FCLL;
  v68 = v67 ^ 0xE2C48E423C26A02;
  v67 ^= 0x59B3F4FDFF753797uLL;
  v69 = __ROR8__(v68, 8);
  v70 = __ROR8__((((2 * (v69 + v67)) | 0x17FE78BC45B94652) - (v69 + v67) + 0x7400C3A1DD235CD7) ^ 0xDB2BECBF1E61D25ELL, 8);
  v71 = (((2 * (v69 + v67)) | 0x17FE78BC45B94652) - (v69 + v67) + 0x7400C3A1DD235CD7) ^ 0xDB2BECBF1E61D25ELL ^ __ROR8__(v67, 61);
  v72 = v70 + v71;
  v73 = (v70 + v71) ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v71, 61);
  *((_QWORD *)&v74 + 1) = v72;
  *(_QWORD *)&v74 = v72 ^ 0xE5D7DAAEED85A300;
  v75 = (((2 * ((v74 >> 8) + v73)) | 0x706FEFFD119E6122) - ((v74 >> 8) + v73) - 0x3837F7FE88CF3091) ^ 0xB6B26E85706C39BCLL;
  v76 = v75 ^ __ROR8__(v73, 61);
  *(_QWORD *)&v74 = __ROR8__(v75, 8);
  v77 = (((v74 + v76) | 0xE7F54DC4843AFB99) - ((v74 + v76) | 0x180AB23B7BC50466) + 0x180AB23B7BC50466) ^ 0x2AFC52D3441525C8;
  v78 = v77 ^ __ROR8__(v76, 61);
  v79 = (__ROR8__(v77, 8) + v78) ^ 0x628ABC52894BE762;
  v80 = v79 ^ __ROR8__(v78, 61);
  v81 = (__ROR8__(v79, 8) + v80) ^ 0x5AC09C033F8B2761;
  v82 = v81 ^ __ROR8__(v80, 61);
  *(_QWORD *)&v74 = __ROR8__(v81, 8);
  v64[10] = (((((2 * ((_QWORD)v74 + v82)) & 0x5BA874AF5D38F1CELL) - ((_QWORD)v74 + v82) + 0x522BC5A851638718) ^ 0x492014307A3A4769uLL) >> (8 * (((_BYTE)v64 + 10) & 7u))) ^ HIBYTE(v65) ^ 0xFB;
  *(_QWORD *)&v74 = __ROR8__(v64 + 11, 8);
  v83 = (v74 & 0xF8FFFFFFFFFFFFFFLL)
      - ((2 * (v74 & 0xF8FFFFFFFFFFFFFFLL) + 0x15E7EF06772DD764) & 0x355AB94138DC40D0)
      + 0x45A15423D8050C1ALL;
  *(_QWORD *)&v74 = __ROR8__(v83 ^ 0x23265E05CDEF66C4, 8);
  v84 = (-2
       - ((~(v74 + (v83 ^ 0x74B9E21C11583B51)) | 0xC11DED4DEE4C92CCLL)
        + ((v74 + (v83 ^ 0x74B9E21C11583B51)) | 0x3EE212B211B36D33))) ^ 0x91C93DACD2F1E3BBLL;
  v85 = v84 ^ __ROR8__(v83 ^ 0x74B9E21C11583B51, 61);
  v86 = __ROR8__(v84, 8) + v85;
  v87 = v86 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v85, 61);
  *((_QWORD *)&v74 + 1) = v86;
  *(_QWORD *)&v74 = v86 ^ 0xE5D7DAAEED85A300;
  v88 = (-2 - ((~((v74 >> 8) + v87) | 0x77956CCF89056578) + (((v74 >> 8) + v87) | 0x886A933076FA9A87))) ^ 0xF910F5B471A66C55;
  v89 = v88 ^ __ROR8__(v87, 61);
  v90 = (__ROR8__(v88, 8) + v89) ^ 0xCD091F17C02FDE51;
  v91 = v90 ^ __ROR8__(v89, 61);
  *(_QWORD *)&v74 = __ROR8__(v90, 8);
  v92 = (v74 + v91 - ((2 * (v74 + v91)) & 0xA9BB3F9CB54546FALL) - 0x2B226031A55D5C83) ^ 0xB657239CD3E9441FLL;
  v93 = v92 ^ __ROR8__(v91, 61);
  *(_QWORD *)&v74 = __ROR8__(v92, 8);
  v94 = (((2 * ((v74 + v93) ^ 0x42D0978BF5AB05F8)) & 0x28E8EE91FE510F3CLL)
       - ((v74 + v93) ^ 0x42D0978BF5AB05F8)
       - 0x14747748FF28879FLL) ^ 0xF39B833FCAF75AF8;
  v95 = v94 ^ __ROR8__(v93, 61);
  *(_QWORD *)&v74 = __ROR8__(v94, 8);
  v64[11] = (((((2 * ((_QWORD)v74 + v95)) & 0x3AD738EFF2AEAA6ELL) - ((_QWORD)v74 + v95) - 0x1D6B9C77F9575538) ^ 0xF99FB2102DF16AB9) >> (8 * (((_BYTE)v64 + 11) & 7u))) ^ BYTE6(v65) ^ 0x58;
  v96 = (((unint64_t)(v64 + 12) >> 8) - 0x550C087CC469144ELL + ((unint64_t)(v64 + 12) >> 3 << 59)) & 0xF9FFFFFFFFFFFFFFLL;
  v97 = v96 ^ 0xBB8B02A5518146ACLL;
  v96 ^= 0xEC14BEBC8D361B39;
  *(_QWORD *)&v74 = __ROR8__(v97, 8);
  v98 = (-2 - ((~(v74 + v96) | 0xD61356B240505818) + ((v74 + v96) | 0x29ECA94DBFAFA7E7))) ^ 0x86C786537CED296FLL;
  v99 = v98 ^ __ROR8__(v96, 61);
  *(_QWORD *)&v74 = __ROR8__(v98, 8);
  v100 = (v74 + v99 - ((2 * (v74 + v99)) & 0xA73BF08C7129AAFALL) - 0x2C6207B9C76B2A83) ^ 0x364A22E8D511767DLL;
  v101 = v100 ^ __ROR8__(v99, 61);
  v102 = (__ROR8__(v100, 8) + v101) ^ 0x8E85997BF8A3092DLL;
  v103 = v102 ^ __ROR8__(v101, 61);
  v104 = (__ROR8__(v102, 8) + v103) ^ 0xCD091F17C02FDE51;
  v105 = v104 ^ __ROR8__(v103, 61);
  v106 = (__ROR8__(v104, 8) + v105) ^ 0x628ABC52894BE762;
  v107 = v106 ^ __ROR8__(v105, 61);
  v108 = (__ROR8__(v106, 8) + v107) ^ 0x5AC09C033F8B2761;
  v64[12] = (((__ROR8__(v108, 8) + (v108 ^ __ROR8__(v107, 61))) ^ 0x1B0BD1982B59C071uLL) >> (8 * (((_BYTE)v64 + 12) & 7u))) ^ BYTE5(v65) ^ 0x26;
  *(_QWORD *)&v74 = __ROR8__(v64 + 13, 8);
  v109 = ((0x150C087CC469144DLL - (v74 & 0xF8FFFFFFFFFFFFFFLL)) & 0x28C891185D033579)
       + (v74 & 0xF8FFFFFFFFFFFFFFLL)
       - 0x550C087CC469144ELL
       - (((v74 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL) & 0x28C891185D033579);
  v110 = v109 ^ 0x914393BD0C8273D5;
  v109 ^= 0xC6DC2FA4D0352E40;
  v111 = (__ROR8__(v110, 8) + v109) ^ 0x50D4D0E13CBD7177;
  v112 = v111 ^ __ROR8__(v109, 61);
  v113 = __ROR8__(v111, 8) + v112;
  v114 = v113 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v112, 61);
  *((_QWORD *)&v74 + 1) = v113;
  *(_QWORD *)&v74 = v113 ^ 0xE5D7DAAEED85A300;
  v115 = __ROR8__(((v74 >> 8) + v114) ^ 0x8E85997BF8A3092DLL, 8);
  v116 = ((v74 >> 8) + v114) ^ 0x8E85997BF8A3092DLL ^ __ROR8__(v114, 61);
  v117 = (((v115 + v116) | 0x44E79080D479A43CLL) - ((v115 + v116) | 0xBB186F7F2B865BC3) - 0x44E79080D479A43DLL) ^ 0x89EE8F9714567A6DLL;
  v118 = __ROR8__(v117, 8);
  v119 = v117 ^ __ROR8__(v116, 61);
  v120 = (v118 + v119 - ((2 * (v118 + v119)) & 0x52EBE49C49841E16) - 0x568A0DB1DB3DF0F5) ^ 0xCBFF4E1CAD89E869;
  v121 = v120 ^ __ROR8__(v119, 61);
  *(_QWORD *)&v74 = __ROR8__(v120, 8);
  v122 = (((2 * (v74 + v121)) & 0x2CE91245637A82CELL) - (v74 + v121) - 0x16748922B1BD4168) ^ 0xB34BEADE71C999F9;
  v123 = v122 ^ __ROR8__(v121, 61);
  *(_QWORD *)&v74 = __ROR8__(v122, 8);
  v64[13] = ((((((_QWORD)v74 + v123) | 0x65D87B9400A7D7E8)
             - (((_QWORD)v74 + v123) | 0x9A27846BFF582817)
             - 0x65D87B9400A7D7E9) ^ 0x7ED3AA0C2BFE1799) >> (8 * (((_BYTE)v64 + 13) & 7u))) ^ BYTE4(v65) ^ 0x67;
  v124 = (__ROR8__(v64 + 14, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL;
  v125 = v124 ^ 0xB98B02A5518146ACLL;
  v124 ^= 0xEE14BEBC8D361B39;
  *(_QWORD *)&v74 = __ROR8__(v125, 8);
  v126 = (-2 - ((~(v74 + v124) | 0xE9A79F6B661C85EELL) + ((v74 + v124) | 0x1658609499E37A11))) ^ 0xB9734F8A5AA1F499;
  v127 = v126 ^ __ROR8__(v124, 61);
  *(_QWORD *)&v74 = __ROR8__(v126, 8);
  v128 = (-2 - ((~(v74 + v127) | 0x4D951D4085C79FFCLL) + ((v74 + v127) | 0xB26AE2BF7A386003))) ^ 0xA842C7EE68423CFCLL;
  v129 = v128 ^ __ROR8__(v127, 61);
  *(_QWORD *)&v74 = __ROR8__(v128, 8);
  v130 = (v74 + v129 - ((2 * (v74 + v129)) & 0x21DC1477A93D02AELL) - 0x6F11F5C42B617EA9) ^ 0x1E6B93402C3D887ALL;
  v131 = v130 ^ __ROR8__(v129, 61);
  v132 = (__ROR8__(v130, 8) + v131) ^ 0xCD091F17C02FDE51;
  v133 = v132 ^ __ROR8__(v131, 61);
  v134 = (__ROR8__(v132, 8) + v133) ^ 0x628ABC52894BE762;
  v135 = v134 ^ __ROR8__(v133, 61);
  *(_QWORD *)&v74 = __ROR8__(v134, 8);
  v136 = (((v74 + v135) ^ 0xDA4A082A2E95835ALL)
        - ((2 * ((v74 + v135) ^ 0xDA4A082A2E95835ALL)) & 0xC06B33C43F36BFCLL)
        + 0x603599E21F9B5FELL) ^ 0x8689CDB730E711C5;
  v137 = v136 ^ __ROR8__(v135, 61);
  *(_QWORD *)&v74 = __ROR8__(v136, 8);
  v64[14] = ((((((_QWORD)v74 + v137) | 0x66A3B2E4FFC0348)
             - (((_QWORD)v74 + v137) | 0xF995C4D1B003FCB7)
             - 0x66A3B2E4FFC0349) ^ 0x1D61EAB664A5C339) >> (8 * (((_BYTE)v64 + 14) & 7u))) ^ ((a62
                                                                                                 - (((_DWORD)v63 + 2 * (_DWORD)a62 + 771088422) & 0x712B80C0)
                                                                                                 + 18178305) >> 24) ^ 0xB8;
  v138 = (((unint64_t)(v64 + 15) >> 8) - 0x550C087CC469144ELL + ((unint64_t)(v64 + 15) >> 3 << 59)) & 0xF9FFFFFFFFFFFFFFLL;
  *(_QWORD *)&v74 = __ROR8__(v138 ^ 0xBB8B02A5518146ACLL, 8);
  v139 = (((2 * (v74 + (v138 ^ 0xEC14BEBC8D361B39))) & 0x816ACA45F412BB72)
        - (v74
         + (v138 ^ 0xEC14BEBC8D361B39))
        + 0x3F4A9ADD05F6A246) ^ 0x6F9E4A3C394BD331;
  v140 = v139 ^ __ROR8__(v138 ^ 0xEC14BEBC8D361B39, 61);
  *(_QWORD *)&v74 = __ROR8__(v139, 8);
  v141 = (((v74 + v140) ^ 0x2692AA20E73CE799 | 0x9DC1EBBF7BCB2010)
        - ((v74 + v140) ^ 0x2692AA20E73CE799 | 0x623E14408434DFEFLL)
        + 0x623E14408434DFEFLL) ^ 0x5E849B3171726489;
  v142 = v141 ^ __ROR8__(v140, 61);
  *(_QWORD *)&v74 = __ROR8__(v141, 8);
  v143 = (((v74 + v142) ^ 0x919E5F45A3B0DF24)
        - ((2 * ((v74 + v142) ^ 0x919E5F45A3B0DF24)) & 0x371B0A0EEE8C1D3ELL)
        - 0x64727AF888B9F161) ^ 0x849643392C55D896 ^ __ROR8__(v142, 61);
  v144 = (__ROR8__((((v74 + v142) ^ 0x919E5F45A3B0DF24)- ((2 * ((v74 + v142) ^ 0x919E5F45A3B0DF24)) & 0x371B0A0EEE8C1D3ELL)- 0x64727AF888B9F161) ^ 0x849643392C55D896, 8)+ v143) ^ 0xCD091F17C02FDE51;
  v145 = v144 ^ __ROR8__(v143, 61);
  v146 = (__ROR8__(v144, 8) + v145) ^ 0x628ABC52894BE762;
  v147 = v146 ^ __ROR8__(v145, 61);
  *(_QWORD *)&v74 = __ROR8__(v146, 8);
  v148 = (-2 - ((~(v74 + v147) | 0xC967FA94AB04334ELL) + ((v74 + v147) | 0x3698056B54FBCCB1))) ^ 0x93A76697948F142FLL;
  v149 = v148 ^ __ROR8__(v147, 61);
  *(_QWORD *)&v74 = __ROR8__(v148, 8);
  v64[15] = (((-2 - ((~((_QWORD)v74 + v149) | 0x87F6A9D2E02A807ELL) + (((_QWORD)v74 + v149) | 0x7809562D1FD57F81))) ^ 0x9CFD784ACB73400FLL) >> (8 * (((_BYTE)v64 + 15) & 7u))) ^ BYTE2(v65) ^ 0x95;
  *(_QWORD *)&v74 = __ROR8__(v64 + 16, 8);
  v150 = -2
       - (((0x150C087CC469144DLL - (v74 & 0xF8FFFFFFFFFFFFFFLL)) | 0xD42E87D37243C3E6)
        + (((v74 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL) | 0x2BD1782C8DBC3C19));
  v151 = v150 ^ 0x6DA5857623C2854ALL;
  v150 ^= 0x3A3A396FFF75D8DFuLL;
  *(_QWORD *)&v74 = __ROR8__(v151, 8);
  v152 = (((v74 + v150) | 0x96F726EF6CD2AD87) - ((v74 + v150) | 0x6908D910932D5278) + 0x6908D910932D5278) ^ 0xC623F60E506FDCF0;
  v153 = v152 ^ __ROR8__(v150, 61);
  v154 = __ROR8__(v152, 8) + v153;
  v155 = v154 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v153, 61);
  *((_QWORD *)&v74 + 1) = v154;
  *(_QWORD *)&v74 = v154 ^ 0xE5D7DAAEED85A300;
  v156 = (-2 - ((~((v74 >> 8) + v155) | 0x3BD37CAD8A56413ELL) + (((v74 >> 8) + v155) | 0xC42C835275A9BEC1))) ^ 0xB556E5D672F54813;
  v157 = v156 ^ __ROR8__(v155, 61);
  v158 = (__ROR8__(v156, 8) + v157) ^ 0xCD091F17C02FDE51;
  v159 = __ROR8__(v158, 8);
  v160 = v158 ^ __ROR8__(v157, 61);
  v161 = (v159 + v160) ^ 0x628ABC52894BE762;
  v162 = v161 ^ __ROR8__(v160, 61);
  v163 = (__ROR8__(v161, 8) + v162) ^ 0x5AC09C033F8B2761;
  v64[16] = (((__ROR8__(v163, 8) + (v163 ^ __ROR8__(v162, 61))) ^ 0x1B0BD1982B59C071uLL) >> (8 * (((_BYTE)v64 + 16) & 7u))) ^ ((unsigned __int16)(a62 - ((v63 + 2 * a62 - 8154) & 0x80C0) + 24833) >> 8) ^ 0xC0;
  v164 = (((unint64_t)(v64 + 17) >> 8) - 0x550C087CC469144ELL + ((unint64_t)(v64 + 17) >> 3 << 59)) ^ 0xF5E6268322329A2;
  v165 = ((2 * v164) & 0xB425A4BB16C91CCLL) - v164 - 0x5A12D25D8B648E7;
  v166 = (__ROR8__(v165 ^ 0x4C8BB21744EBD817, 8) + (v165 ^ 0x1B140E0E985C8582)) ^ 0x50D4D0E13CBD7177;
  *((_QWORD *)&v74 + 1) = v165 ^ 0x1B140E0E985C8582;
  *(_QWORD *)&v74 = v165;
  v167 = v166 ^ (v74 >> 61);
  v168 = __ROR8__(v166, 8) + v167;
  v169 = v168 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v167, 61);
  *((_QWORD *)&v74 + 1) = v168;
  *(_QWORD *)&v74 = v168 ^ 0xE5D7DAAEED85A300;
  v170 = ((v74 >> 8) + v169) ^ 0x8E85997BF8A3092DLL;
  v171 = v170 ^ __ROR8__(v169, 61);
  *(_QWORD *)&v74 = __ROR8__(v170, 8);
  v172 = (((2 * (v74 + v171)) | 0xC2F682CA4CC09A3CLL) - (v74 + v171) - 0x617B416526604D1ELL) ^ 0xAC725E72E64F934FLL;
  v173 = v172 ^ __ROR8__(v171, 61);
  *(_QWORD *)&v74 = __ROR8__(v172, 8);
  v174 = (((2 * (v74 + v173)) | 0xC157B57B1A348C68) - (v74 + v173) - 0x60ABDABD8D1A4634) ^ 0x22166EF0451A156;
  v175 = v174 ^ __ROR8__(v173, 61);
  *(_QWORD *)&v74 = __ROR8__(v174, 8);
  v176 = (((v74 + v175) | 0xD97D8D1C4B94792ALL) - ((v74 + v175) | 0x268272E3B46B86D5) + 0x268272E3B46B86D5) ^ 0x83BD111F741F5E4BLL;
  v64[17] = (((__ROR8__(v176, 8) + (v176 ^ __ROR8__(v175, 61))) ^ 0x1B0BD1982B59C071) >> (8 * (((_BYTE)v64 + 17) & 7u))) ^ (a62 - ((v63 + 2 * a62 + 38) & 0xC0) + 1) ^ 0x60;
  STACK[0x358] = 0x23120F4208F8DDDLL;
  STACK[0x2F0] = (unint64_t)&STACK[0x358];
  JUMPOUT(0x1CF323D64);
}

uint64_t sub_1CF327F98@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  int v64;
  int v65;
  uint64_t v66;

  STACK[0x2F0] = *(_QWORD *)(v66 + 24);
  STACK[0x248] = a64 - 0x2DD266C5A2519723;
  return (*(uint64_t (**)(void))(STACK[0x320]
                              + 8
                              * ((19 * (v65 + v64 + ((8 * (a1 ^ 0x337)) ^ 0x802087EB) >= (a1 ^ 0x337u) - 113)) ^ a1)))();
}

uint64_t sub_1CF32800C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a71;
  int v71;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x320]
                                        + 8
                                        * ((1603
                                          * (a71 - STACK[0x2F0] - 0x2DD266C5A251972DLL >= (unint64_t)(53 * (v71 ^ 0x3C1u))
                                                                                        - 461)) ^ v71))
                            - (((v71 - 456) | 0x185u) ^ 0x38DLL)))();
}

uint64_t sub_1CF32807C()
{
  unsigned int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x320] + 8 * ((61 * (v0 < (v1 ^ 0x1CDu))) ^ v1))
                            - (v1 + 670)
                            + 1139))();
}

#error "1CF329170: call analysis failed (funcsize=1004)"

void sub_1CF329174()
{
  JUMPOUT(0x1CF328360);
}

uint64_t sub_1CF329200()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = v0 + 514;
  v5 = v1;
  v6 = sub_1CF370D34();
  v7 = STACK[0x320];
  *v2 = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v7
                                                      + 8
                                                      * (((v3 + ((v4 + 1610677762) | 0x3086118) - 126)
                                                        * (v5 != 0x23120F4208F8DDDLL)) ^ v4))
                                          - 4))(v6);
}

void sub_1CF32927C()
{
  sub_1CF370D34();
  JUMPOUT(0x1CF3292A8);
}

uint64_t sub_1CF3292B8()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v4 == v2) * ((67 * (v0 ^ (v1 - 1))) ^ 0x30F)) ^ (v0 + v3)))
                            - 12))();
}

uint64_t sub_1CF3292F0()
{
  return ((uint64_t (*)(void))STACK[0x250])();
}

uint64_t sub_1CF3292F8()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v2 + v0 + 186) ^ (1545 * (v3 == v1)))) - 8);
  LODWORD(STACK[0x2CC]) = -1393729084;
  return v5();
}

uint64_t sub_1CF329334()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((730 * (v3 == v1)) ^ (v0 + v2))) - 12))();
}

void sub_1CF32935C()
{
  JUMPOUT(0x1CF325B84);
}

uint64_t sub_1CF329370()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((730 * (v3 == v1)) ^ (v0 + v2)))
                            - (v0 + v2 + 9)
                            + 457))();
}

uint64_t sub_1CF3293A4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((v2 + ((a1 + 1610677762) | 0x3086118) - 126) * (v1 != 0x23120F4208F8DDDLL)) ^ a1))
                            - 4))();
}

uint64_t sub_1CF329404()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;

  return (*(uint64_t (**)(void))(v0 + 8 * (((v1 + v3 - 11 + ((v3 + 536960813) | 0x43080004) - 923) * (v2 == v4)) ^ v3)))();
}

uint64_t sub_1CF32944C()
{
  char v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x320] + 8 * (v1 ^ (552 * ((v0 & 8) == 0))))
                            - 17 * (v1 ^ 0x1D5u)
                            + 893))();
}

#error "1CF329D78: call analysis failed (funcsize=506)"

void sub_1CF329D7C()
{
  JUMPOUT(0x1CF3296D0);
}

uint64_t sub_1CF329DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  int v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (((v11 + (a8 ^ 0x4D) + ((a8 + 1073806648) | 0x2308601C) - 24) * (v9 == v10)) ^ a8))
                            - 8))();
}

uint64_t sub_1CF329E44@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v2 = (a1 - 860498373);
  v3 = v2 + STACK[0x2F0];
  v4 = __ROR8__(v3 + 10, 8);
  v5 = (((v4 & 0xF8FFFFFFFFFFFFFFLL) + ((v1 + 1661558167) ^ 0xAAF3F783589F8AAELL)) | 0x991A82D9727F8A1ELL)
     - (((v4 & 0xF8FFFFFFFFFFFFFFLL) + ((v1 + 1661558167) ^ 0xAAF3F783589F8AAELL)) | 0x66E57D268D8075E1)
     + 0x66E57D268D8075E1;
  v6 = v5 ^ 0x2091807C23FECCB2;
  v5 ^= 0x770E3C65FF499127uLL;
  v7 = (__ROR8__(v6, 8) + v5) ^ 0x50D4D0E13CBD7177;
  v8 = v7 ^ __ROR8__(v5, 61);
  v9 = __ROR8__(v7, 8);
  v10 = (((2 * (v9 + v8)) & 0x8B37078EC418761ELL) - (v9 + v8) - 0x459B83C7620C3B10) ^ 0x5FB3A696707667F0;
  v11 = v10 ^ __ROR8__(v8, 61);
  v12 = __ROR8__(v10, 8);
  v13 = (((2 * (v12 + v11)) | 0x909803455169E568) - (v12 + v11) - 0x484C01A2A8B4F2B4) ^ 0xC6C998D95017FB99;
  v14 = v13 ^ __ROR8__(v11, 61);
  v15 = __ROR8__(v13, 8);
  v16 = (((2 * (v15 + v14)) | 0x661703085D1D211ALL) - (v15 + v14) - 0x330B81842E8E908DLL) ^ 0xFE029E93EEA14EDCLL;
  v17 = v16 ^ __ROR8__(v14, 61);
  v18 = __ROR8__(v16, 8);
  v19 = (((2 * (v18 + v17)) | 0x88D82846AB8C19D8) - (v18 + v17) - 0x446C142355C60CECLL) ^ 0x26E6A871DC8DEB8ELL;
  v20 = v19 ^ __ROR8__(v17, 61);
  v21 = __ROR8__(v19, 8);
  *(_BYTE *)(v3 + 10) = (((__ROR8__((0x96EEEB3C2090953ELL- ((v21 + v20) | 0x96EEEB3C2090953ELL)+ ((v21 + v20) | 0x691114C3DF6F6AC1)) ^ 0x33D188C0E0E44DA0, 8)+ ((0x96EEEB3C2090953ELL- ((v21 + v20) | 0x96EEEB3C2090953ELL)+ ((v21 + v20) | 0x691114C3DF6F6AC1)) ^ 0x33D188C0E0E44DA0 ^ __ROR8__(v20, 61))) ^ 0x1B0BD1982B59C071) >> (8 * ((v3 + 10) & 7))) ^ *(_BYTE *)(STACK[0x248] + v2);
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, unint64_t, unint64_t, unint64_t))(*(_QWORD *)(STACK[0x320] + 8 * ((995 * (a1 != 860498373)) ^ (v1 - 799))) - 12))(0x2091807C23FECCB2, 0x770E3C65FF499127, 0x8B37078EC418761ELL, 0xBA647C389DF3C4F0, 0x5FB3A696707667F0, 0x909803455169E568, 0xB7B3FE5D574B0D4CLL, 0xC6C998D95017FB99);
}

void sub_1CF32A0F0(uint64_t a1)
{
  int v1;
  _BOOL4 v2;

  v1 = 228215629 * (((a1 | 0x96E52B02) - (a1 & 0x96E52B02)) ^ 0xAE5A5B57);
  v2 = *(_DWORD *)(a1 + 40) - v1 == 936609376;
  __asm { BR              X9 }
}

uint64_t sub_1CF32A1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *(_QWORD *)(a1 + 8);
  LODWORD(STACK[0x58C]) = v11;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 + 8 * ((77 * (v13 != 0)) ^ (v11 - 399))) - ((v11 - 930) | 0x402u) + 1318))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1CF32A1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  int v20;
  uint64_t v21;

  return ((uint64_t (*)(void))(*(_QWORD *)(v21
                                        + 8
                                        * (int)(((((v20 - 2056588635) & 0x7A950BBF ^ 0xFFFFFD51) + ((v20 - 232) | 0x88))
                                               * (v19 == *(_QWORD *)(a19 + 24))) ^ v20))
                            - 8))();
}

uint64_t sub_1CF32A240()
{
  _OWORD *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_OWORD *)(v3 + 80) = *v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((54 * (((v1 - 1184) | 0x500) != 1338)) ^ (v1 - 632))) - 8))();
}

uint64_t sub_1CF32A284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_OWORD *)(v0 + v4) = *(_OWORD *)(v2 + v4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v4 + v1 != 1338) * v5) ^ v3)) - 8))();
}

void sub_1CF32A2B0()
{
  __asm { BR              X13 }
}

uint64_t sub_1CF32A328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  BOOL v23;
  int v24;

  v22 = *(_QWORD *)(a19 + 48);
  STACK[0x4F0] = v22;
  if (v22)
    v23 = v19 == 0;
  else
    v23 = 1;
  v24 = !v23;
  return ((uint64_t (*)(void))(*(_QWORD *)(v21 + 8 * ((23 * v24) ^ v20)) - 12))();
}

uint64_t sub_1CF32A358@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  _BOOL4 v17;

  v14 = 2 * (((v12 + 313) | 2) ^ 0x547);
  v15 = *(_DWORD *)(a12 + 56) - a1;
  v17 = (((_BYTE)v15 - 1) & 0xF) != 0 || v15 == ((v14 + 240) | 0xC0) + 987853527;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((v17 | (32 * v17)) ^ v14)) - 58 * (v14 ^ 0x309u) + 1098))();
}

void sub_1CF32A3C8()
{
  JUMPOUT(0x1CF32A3E8);
}

uint64_t sub_1CF32A424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  unsigned __int8 *v36;
  uint64_t v37;
  int v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  unsigned int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  unsigned int v65;
  int v66;
  int v67;
  unsigned int v68;
  int v69;
  int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  unsigned __int8 *v90;
  int v91;
  int v92;
  int v93;
  int v94;
  unsigned int v95;
  int v96;
  int v97;
  unsigned int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  unsigned int v125;
  unsigned int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  uint64_t v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  uint64_t v139;
  int v140;
  int v141;
  uint64_t v142;
  int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unint64_t v156;
  int v157;
  unsigned int v158;
  unint64_t v159;
  unsigned int v160;
  unint64_t v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  uint64_t v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  uint64_t v170;
  unsigned int v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  _BOOL4 v175;
  uint64_t (*v176)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t);
  int v178;
  int v179;
  uint64_t v180;
  int v181;
  int v182;
  unsigned __int8 *v183;
  int v184;
  uint64_t v185;
  int v186;
  int v187;
  uint64_t v188;
  int v189;
  int v190;
  uint64_t v191;
  int v192;
  int v193;
  uint64_t v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  unsigned int v200;
  int v201;
  unsigned int v202;
  int v203;
  int v204;
  int v205;
  unsigned int v206;
  int v207;
  int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  unsigned int v212;
  int v213;
  int v214;
  unsigned int v215;

  STACK[0x4D0] = v39;
  LODWORD(STACK[0x5B8]) = 0;
  STACK[0x448] = v37 + 0x138A5B0312551205;
  v41 = v36[4];
  v42 = v36[1];
  LODWORD(STACK[0x5D8]) = v42 - ((2 * v42) & 0x4A);
  v43 = *v36;
  LODWORD(STACK[0x5D0]) = v43 - ((2 * v43) & 0xFFFFFF96);
  v44 = v36[2];
  LODWORD(STACK[0x5C8]) = v44 - ((2 * v44) & 0x34);
  v45 = v36[5];
  LODWORD(STACK[0x4A0]) = v38;
  LODWORD(STACK[0x5C0]) = v45 - ((2 * v45) & 0x36);
  v46 = v36[12];
  LODWORD(STACK[0x5B0]) = v46 - ((2 * v46) & 0xFFFFFFA6);
  v47 = v36[13];
  LODWORD(STACK[0x5A8]) = v47 - ((2 * v47) & 0xFFFFFFC7);
  v208 = -102 - 5 * v44 - ((54 * v44) & 0x34);
  v48 = v36[11];
  LODWORD(STACK[0x5A0]) = v48 - ((2 * v48) & 0xFFFFFFDA);
  LODWORD(STACK[0x598]) = 31 * v43 - ((62 * v43) & 0xFFFFFF96);
  LODWORD(STACK[0x590]) = -61 * v45 - ((6 * v45) & 0x36);
  LODWORD(STACK[0x580]) = -43 * v42 - ((42 * v42) & 0x4A);
  LODWORD(STACK[0x578]) = 103 * v47 - ((-50 * v47) & 0xFFFFFFC7);
  LODWORD(STACK[0x570]) = -119 * v46 - ((18 * v46) & 0xFFFFFFA6);
  LODWORD(STACK[0x568]) = (~(86 * v48) | 0x25) - 85 * v48;
  LODWORD(STACK[0x558]) = v41 - ((2 * v41) & 0xFFFFFFB8);
  LODWORD(STACK[0x560]) = 93 * v41 - ((-70 * v41) & 0xFFFFFFB8);
  v49 = v36[8];
  LODWORD(STACK[0x550]) = v49 - ((2 * v49) & 0xFFFFFFBA);
  v206 = 93 - 33 * v49 - ((-66 * v49) & 0xFFFFFFBA);
  v50 = v36[3];
  LODWORD(STACK[0x540]) = v50 - ((2 * v50) & 0xFFFFFF83);
  LODWORD(STACK[0x548]) = 99 * v50 - ((-58 * v50) & 0xFFFFFF83);
  v51 = v36[6];
  LODWORD(STACK[0x530]) = v51 - ((2 * v51) & 0xFFFFFF8C);
  v202 = 70 - 5 * v51 - ((-10 * v51) & 0xFFFFFF8C);
  v52 = v36[16];
  LODWORD(STACK[0x538]) = (v52 ^ 0x37) + ((2 * v52) & 0x6E);
  v53 = v36[14];
  LODWORD(STACK[0x528]) = v53 - ((2 * v53) & 0xFFFFFFC7);
  LODWORD(STACK[0x520]) = -((10 * v53) & 0xFFFFFFC7) - 123 * v53;
  v54 = v36[10];
  LODWORD(STACK[0x504]) = v54 - ((2 * v54) & 0x16);
  v204 = -117 - v54 - ((-2 * v54) & 0x16);
  v55 = v36[7];
  v56 = (2 * v55) & 0xFFFFFF9F;
  v57 = v55 - v56;
  LODWORD(STACK[0x518]) = -127 * v55 - v56;
  v58 = v36[9];
  v59 = v58 - ((2 * v58) & 0x2C);
  LODWORD(STACK[0x510]) = -((-2 * v58) & 0x2C) - 97 * v58;
  v60 = v36[18];
  LODWORD(STACK[0x508]) = (v60 ^ 0x3B) + ((2 * v60) & 0x76);
  v61 = v36[15];
  LODWORD(STACK[0x500]) = -((6 * v61) & 0xFFFFFFF4) - 125 * v61;
  v62 = v36[22];
  LODWORD(STACK[0x4FC]) = (v62 ^ 0xFFFFFFFB) + ((2 * v62) & 0xFFFFFFF7);
  v63 = v36[20];
  v64 = v36[17];
  v65 = (v64 ^ 0xFFFFFFFD) + ((2 * v64) & 0xFFFFFFFB);
  v66 = v36[19];
  v67 = v36[29];
  v181 = 111 * v64 + 73;
  v179 = -71 * v60 + 9;
  v182 = -23 * v52 + 37;
  v68 = v36[21];
  v69 = v36[24];
  v70 = v36[27];
  v71 = v36[28];
  v72 = v36[30];
  v73 = (v72 ^ 0x7B) + ((2 * v72) & 0xFFFFFFF7);
  v74 = v36[31];
  STACK[0x4E8] = v40;
  v75 = (v40 + 1067972273) & 0xC0580723;
  STACK[0x288] = (unint64_t)&STACK[0x670];
  v183 = v36 + 0xFC58F007312F078;
  LODWORD(STACK[0x2B8]) = LODWORD(STACK[0x558]) - 36;
  LODWORD(STACK[0x2E4]) = LODWORD(STACK[0x5D8]) + 37;
  LODWORD(STACK[0x2C0]) = LODWORD(STACK[0x504]) - 117;
  LODWORD(STACK[0x2B4]) = LODWORD(STACK[0x5D0]) - 53;
  LODWORD(STACK[0x2EC]) = LODWORD(STACK[0x540]) - 63;
  LODWORD(STACK[0x2C8]) = LODWORD(STACK[0x5C8]) - 102;
  LODWORD(STACK[0x2E8]) = LODWORD(STACK[0x5C0]) - 101;
  LODWORD(STACK[0x2BC]) = LODWORD(STACK[0x530]) + 70;
  LODWORD(STACK[0x2E0]) = LODWORD(STACK[0x5B0]) + 83;
  LODWORD(STACK[0x2D8]) = LODWORD(STACK[0x550]) + 93;
  LODWORD(STACK[0x2DC]) = v57 + 79;
  LODWORD(STACK[0x2C4]) = LODWORD(STACK[0x5A8]) - 29;
  LODWORD(STACK[0x2CC]) = v59 - 106;
  LODWORD(STACK[0x2D0]) = LODWORD(STACK[0x5A0]) - 19;
  v189 = LODWORD(STACK[0x598]) - 53;
  v195 = LODWORD(STACK[0x590]) - 101;
  STACK[0x2F0] = v61 - ((2 * v61) & 0xFFFFFFF4) - 6;
  LODWORD(STACK[0x2D4]) = LODWORD(STACK[0x528]) + 99;
  v201 = LODWORD(STACK[0x560]) - 36;
  v199 = LODWORD(STACK[0x580]) + 37;
  v184 = LODWORD(STACK[0x548]) - 63;
  v186 = LODWORD(STACK[0x520]) + 99;
  v192 = LODWORD(STACK[0x568]) - 18;
  v193 = LODWORD(STACK[0x578]) - 29;
  v190 = LODWORD(STACK[0x518]) + 79;
  v187 = LODWORD(STACK[0x510]) - 106;
  v211 = LODWORD(STACK[0x508]) - 50;
  v198 = LODWORD(STACK[0x500]) - 6;
  v214 = LODWORD(STACK[0x4FC]) + 56;
  v196 = LODWORD(STACK[0x570]) + 83;
  v209 = (v63 ^ 0xFFFFFFFD) + ((2 * v63) & 0xFFFFFFFB) + 15;
  v210 = v65 + 76;
  v212 = (v66 ^ 0x5F) + ((2 * v66) & 0xFFFFFFBF) - 19;
  v215 = (v67 ^ 0xFFFFFFDA) + ((2 * v67) & 0xFFFFFFB4) + 126;
  LODWORD(STACK[0x5A8]) = -113 * v63;
  LODWORD(a11) = 83;
  v76 = 97 * v72 + 83;
  v77 = v36[25];
  v78 = v36[23];
  v79 = v36[26];
  v213 = (v79 ^ 0x7F) + 2 * v79 - 37;
  v80 = -33 * v62;
  v81 = (v78 ^ 0x7F) + 2 * v78;
  LODWORD(STACK[0x5C0]) = -39 * v78;
  v82 = 111 * v68;
  v83 = 81 * v79;
  HIDWORD(a10) = 76;
  v178 = -35 * v66 + 76;
  LODWORD(STACK[0x560]) = 69 * v70;
  LODWORD(STACK[0x5B0]) = 105 * v69;
  LODWORD(STACK[0x504]) = -79 * v67;
  v84 = (v77 ^ 0x7F) + 2 * v77;
  v85 = -115 * v77;
  v86 = -71 * v71;
  LODWORD(STACK[0x4D8]) = LODWORD(STACK[0x4A0]) + 461907989;
  v87 = (v68 ^ 0xFFFFFFFE) + 4 * (v68 >> 1) + 2;
  LODWORD(STACK[0x5D0]) = (v69 ^ 0x4F) + ((2 * v69) & 0xFFFFFF9F) - 79;
  v88 = v84 - 127;
  LODWORD(STACK[0x5C8]) = (v70 ^ 0x71) + ((2 * v70) & 0xFFFFFFE3) - 113;
  v89 = (v71 ^ 0xFFFFFFFE) + 4 * (v71 >> 1) + 2;
  LODWORD(STACK[0x5D8]) = v73 - 123;
  LODWORD(STACK[0x498]) = v75;
  LODWORD(STACK[0x4C0]) = v75 | 0x4C;
  LODWORD(STACK[0x5B8]) += 16;
  v90 = (unsigned __int8 *)STACK[0x4F0];
  v91 = *(unsigned __int8 *)(STACK[0x4F0] + 2);
  v92 = v179 - 71 * v91;
  LODWORD(STACK[0x558]) = v211 + v91;
  v93 = *v90;
  LODWORD(STACK[0x540]) = v93;
  v94 = v182 - 23 * v93;
  LODWORD(STACK[0x548]) = v94;
  v94 += 22;
  v95 = v210 - 57 * v94;
  v96 = v181 + 73 * v94;
  v97 = v90[4];
  v98 = LODWORD(STACK[0x5A8]) - 113 * v97 - ((2 * (LODWORD(STACK[0x5A8]) - 113 * v97)) & 0xFFFFFFB6);
  v99 = v90[5];
  v100 = v99 + v87;
  LODWORD(STACK[0x550]) = v82 + 111 * v99;
  v101 = v90[7];
  v102 = v101 + v81 - 127;
  v103 = LODWORD(STACK[0x5C0]) - 39 * v101;
  v104 = v90[6];
  v105 = v80 - 33 * v104;
  v106 = v90[9];
  v107 = v106 + v88;
  v108 = v85 - 115 * v106;
  v109 = v90[8];
  v110 = v109 + LODWORD(STACK[0x5D0]);
  v111 = LODWORD(STACK[0x5B0]) + 105 * v109;
  v112 = v90[11];
  v113 = v112 + LODWORD(STACK[0x5C8]);
  LODWORD(STACK[0x560]) += 69 * v112;
  v114 = v90[12];
  LODWORD(STACK[0x538]) = v114 + v89;
  v115 = v86 - 71 * v114;
  v116 = v90[1];
  LODWORD(STACK[0x5A8]) = v95 + v116;
  v117 = v96 + v116 * LODWORD(STACK[0x4C0]);
  LODWORD(STACK[0x530]) = v117;
  v118 = v90[3];
  v119 = v212 + v118;
  LODWORD(STACK[0x528]) = v178 - 35 * v118;
  v120 = v92 - 65 * v117;
  LODWORD(STACK[0x520]) = v120;
  v121 = v90[15];
  v122 = v121 + (v74 ^ 0xFFFFFFBF) + 2 * (v74 & 0x3F) + 65;
  v123 = -49 * v74 - 49 * v121;
  v124 = 65 * v120 + v119;
  LODWORD(STACK[0x518]) = v209 + v97 + 65 * (v124 - 8396);
  v125 = (~(30 * (v124 - 8396) + 58) | 0xFFFFFFCB) + 79 * (v124 - 8396) + 56;
  v126 = ((v98 + 91) ^ v125 ^ 0xFFFFFFC1) + 2 * ((v125 ^ 0x1A) & ((v98 + 91) ^ 0x5B));
  LODWORD(STACK[0x510]) = v104 + v214;
  v127 = v100 + 57 * v126;
  LODWORD(STACK[0x590]) = v127;
  v128 = v105 - 97 * v127;
  v129 = v102 - 21 * v128;
  LODWORD(STACK[0x578]) = v129;
  v130 = v111 + 109 * v129;
  LODWORD(STACK[0x5B0]) = v130;
  v131 = (v108 - 15 * v130);
  v132 = v90[10];
  LODWORD(STACK[0x508]) = v132 + v213;
  v133 = v90[13];
  v134 = LODWORD(STACK[0x504]) - 79 * v133;
  LODWORD(STACK[0x504]) = v133 + v215;
  LODWORD(v90) = v90[14];
  v135 = (_DWORD)v90 + LODWORD(STACK[0x5D8]);
  LODWORD(STACK[0x500]) = v76 + 97 * (_DWORD)v90;
  LODWORD(STACK[0x598]) = v128;
  v136 = v103 + 51 * v128;
  LODWORD(STACK[0x5C0]) = v136;
  v137 = v110 + 109 * v136;
  LODWORD(STACK[0x5D0]) = v137;
  v138 = v107 + 125 * v137;
  LODWORD(STACK[0x568]) = v138;
  v139 = (v83 + 81 * v132 - 87 * v138);
  v140 = v113 - 125 * v139;
  LODWORD(STACK[0x5C8]) = v140;
  v141 = v115 - 121 * v140;
  LODWORD(STACK[0x570]) = v141;
  v142 = (v134 - 75 * v141);
  v143 = v135 - 77 * v142;
  LODWORD(v90) = v123 + 69 * v143;
  LODWORD(STACK[0x5A0]) = (_DWORD)v90;
  v144 = (v189 ^ 0xFFFFFFCB) + 121 * (_DWORD)v90 - ((2 * ((v189 ^ 0xFFFFFFCB) + 121 * (_DWORD)v90)) & 0xFFFFFF96);
  LODWORD(STACK[0x5D8]) = v143;
  v145 = v122 - 85 * v143;
  LODWORD(v90) = LODWORD(STACK[0x2B4]) ^ 0xFFFFFFCB;
  LODWORD(STACK[0x580]) = v145;
  LODWORD(STACK[0x4FC]) = (_DWORD)v90 + 73 * v145 + (~(2 * ((_DWORD)v90 + 73 * v145)) | 0x69);
  HIDWORD(v188) = v144 - 53;
  v146 = -15 * (HIDWORD(v188) ^ 0xFFFFFFCB)
       + (LODWORD(STACK[0x2E4]) ^ 0x25)
       - ((2 * (-15 * (HIDWORD(v188) ^ 0xFFFFFFCB) + (LODWORD(STACK[0x2E4]) ^ 0x25))) & 0x4A)
       + 37;
  v147 = LODWORD(STACK[0x2C8]) ^ 0xFFFFFF9A;
  LODWORD(STACK[0x2E4]) = v146;
  v146 ^= 0x25u;
  LODWORD(STACK[0x4E0]) = v146;
  v148 = v147 + 85 * v146 - ((2 * (v147 + 85 * v146)) & 0x34);
  v200 = (v199 ^ 0x25)
       - 123 * (HIDWORD(v188) ^ 0xFFFFFFCB)
       + (~(2 * ((v199 ^ 0x25) - 123 * (HIDWORD(v188) ^ 0xFFFFFFCB))) | 0xFFFFFFB5)
       + 38;
  LODWORD(v90) = (LODWORD(STACK[0x2EC]) ^ 0xFFFFFFC1)
               - 65
               * (((v208 ^ 0xFFFFFF9A)
                 + 123 * (v200 ^ 0x25)
                 - ((2 * ((v208 ^ 0xFFFFFF9A) + 123 * (v200 ^ 0x25))) & 0x34)
                 - 102) ^ 0xFFFFFF9A);
  v149 = (_DWORD)v90 - ((2 * (_DWORD)v90) & 0xFFFFFF83) - 63;
  LODWORD(STACK[0x2EC]) = v149;
  v150 = v149 ^ 0xFFFFFFC1;
  LODWORD(STACK[0x2C8]) = v148 - 102;
  v151 = (v148 - 102) ^ 0xFFFFFF9A;
  LODWORD(STACK[0x4C8]) = v151;
  v152 = (v184 ^ 0xFFFFFFC1) - 81 * v151 - ((2 * ((v184 ^ 0xFFFFFFC1) - 81 * v151)) & 0xFFFFFF83);
  LODWORD(v90) = ((v201 ^ 0xFFFFFFDC) - 61 * v150 - ((2 * ((v201 ^ 0xFFFFFFDC) - 61 * v150)) & 0xFFFFFFB8) - 36) ^ 0xFFFFFFDC;
  v153 = (v195 ^ 0xFFFFFF9B) + 75 * (_DWORD)v90 - ((2 * ((v195 ^ 0xFFFFFF9B) + 75 * (_DWORD)v90)) & 0x36);
  LODWORD(v90) = (LODWORD(STACK[0x2E8]) ^ 0xFFFFFF9B)
               - 39 * (_DWORD)v90
               - ((2 * ((LODWORD(STACK[0x2E8]) ^ 0xFFFFFF9B) - 39 * (_DWORD)v90)) & 0x36);
  HIDWORD(v194) = v153 - 101;
  v154 = (LODWORD(STACK[0x2BC]) ^ 0x46) - 17 * ((v153 - 101) ^ 0xFFFFFF9B);
  v155 = v154 - ((2 * v154) & 0xFFFFFF8C);
  LODWORD(STACK[0x2E8]) = (_DWORD)v90 - 101;
  v156 = ((_DWORD)v90 - 101) ^ 0xFFFFFF9B;
  STACK[0x4B8] = v156;
  v203 = (v202 ^ 0x46) - 65 * v156 - ((2 * ((v202 ^ 0x46) - 65 * v156)) & 0xFFFFFF8C) + 70;
  LODWORD(v191) = (v190 ^ 0x4F) - 45 * (v203 ^ 0x46) - ((2 * ((v190 ^ 0x4F) - 45 * (v203 ^ 0x46))) & 0xFFFFFF9F) + 79;
  v157 = (LODWORD(STACK[0x2D8]) ^ 0x5D)
       + 115 * (v191 ^ 0x4F)
       - ((2 * ((LODWORD(STACK[0x2D8]) ^ 0x5D) + 115 * (v191 ^ 0x4F))) & 0xFFFFFFBA);
  LODWORD(v90) = (LODWORD(STACK[0x2DC]) ^ 0x4F) + 83 * (v203 ^ 0x46);
  v158 = (_DWORD)v90 - ((2 * (_DWORD)v90) & 0xFFFFFF9F) + 79;
  LODWORD(STACK[0x2DC]) = v158;
  v159 = v158 ^ 0x4F;
  STACK[0x4B0] = v159;
  LODWORD(v156) = v157 + 93;
  v160 = LODWORD(STACK[0x2CC]) ^ 0xFFFFFF96;
  LODWORD(STACK[0x2D8]) = v156;
  v161 = v156 ^ 0x5D;
  STACK[0x4A8] = v161;
  v207 = (v206 ^ 0x5D) - 83 * v159 - ((2 * ((v206 ^ 0x5D) - 83 * v159)) & 0xFFFFFFBA) + 93;
  v162 = -15 * (v207 ^ 0x5D) - ((-30 * (v207 ^ 0x5D)) & 0xFFFFFFAE) - 41;
  v163 = v187 ^ 0x41 ^ v162;
  v164 = v163 + 2 * ((v162 ^ 0x57) & (v187 ^ 0x16));
  v165 = v164 + ~(2 * (v164 & 0x17 ^ v163 & 1));
  LODWORD(v159) = v160 - 79 * v161 - ((2 * (v160 - 79 * v161)) & 0x2C) - 106;
  LODWORD(STACK[0x2CC]) = v159;
  v166 = v159 ^ 0xFFFFFF96;
  v205 = (v204 ^ 0xFFFFFF8B) - 19 * v166 - ((2 * ((v204 ^ 0xFFFFFF8B) - 19 * v166)) & 0x16) - 117;
  v167 = (LODWORD(STACK[0x2D0]) ^ 0xFFFFFFED) - 35 * (v205 ^ 0xFFFFFF8B);
  v168 = v167 - ((2 * v167) & 0xFFFFFFDA);
  LODWORD(v188) = v165 - 105;
  v169 = (LODWORD(STACK[0x2C0]) ^ 0xFFFFFF8B)
       + 13 * ((v165 - 105) ^ 0xFFFFFF96)
       - ((2 * ((LODWORD(STACK[0x2C0]) ^ 0xFFFFFF8B) + 13 * ((v165 - 105) ^ 0xFFFFFF96))) & 0x16);
  LODWORD(STACK[0x2D0]) = v168 - 19;
  v170 = (v168 - 19) ^ 0xFFFFFFED;
  HIDWORD(v191) = (v192 ^ 0xFFFFFFED)
                - 97 * (v205 ^ 0xFFFFFF8B)
                - ((2 * ((v192 ^ 0xFFFFFFED) - 97 * (v205 ^ 0xFFFFFF8B))) & 0xFFFFFFDA)
                - 19;
  LODWORD(v161) = (LODWORD(STACK[0x2E0]) ^ 0x53)
                - 123 * (HIDWORD(v191) ^ 0xFFFFFFED)
                + (~(2 * ((LODWORD(STACK[0x2E0]) ^ 0x53) - 123 * (HIDWORD(v191) ^ 0xFFFFFFED))) | 0x59)
                + 84;
  v171 = LODWORD(STACK[0x2C4]) ^ 0xFFFFFFE3;
  LODWORD(STACK[0x2E0]) = v161;
  v172 = v161 ^ 0x53;
  v173 = v171 - 79 * v172 - ((2 * (v171 - 79 * v172)) & 0xFFFFFFC7);
  v197 = (v196 ^ 0x53) - v170 + 16 * v170 + (~(2 * ((v196 ^ 0x53) - v170 + 16 * v170)) | 0x59) + 84;
  LODWORD(v194) = (v193 ^ 0xFFFFFFE3)
                - 65 * (v197 ^ 0x53)
                - ((2 * ((v193 ^ 0xFFFFFFE3) - 65 * (v197 ^ 0x53))) & 0xFFFFFFC7)
                - 29;
  LODWORD(v161) = (v194 ^ 0xFFFFFFE3)
                + (LODWORD(STACK[0x2D4]) ^ 0x63)
                - ((2 * ((v194 ^ 0xFFFFFFE3) + (LODWORD(STACK[0x2D4]) ^ 0x63))) & 0xFFFFFFC7)
                + 99;
  LODWORD(v159) = STACK[0x2F0] ^ 0xFFFFFFFA;
  LODWORD(STACK[0x2D4]) = v161;
  v174 = v161 ^ 0x63;
  STACK[0x2F0] = (_DWORD)v159 + 59 * (_DWORD)v174 + (~(2 * ((_DWORD)v159 + 59 * (_DWORD)v174)) | 0xBu) - 5;
  LODWORD(a33) = LODWORD(STACK[0x548])
               - 23
               * (((v198 ^ 0xFFFFFFFA) + 49 * v174 - ((2 * ((v198 ^ 0xFFFFFFFA) + 49 * v174)) & 0xFFFFFFF4) - 6) ^ 0xFFFFFFFA);
  v175 = LODWORD(STACK[0x4D8]) < 0x56699FB6;
  if (LODWORD(STACK[0x4D8]) >= 0x56699FB6)
    v175 = LODWORD(STACK[0x4D8]) > 0x56699FC6;
  HIDWORD(v180) = LODWORD(STACK[0x530]) + 45;
  LODWORD(v180) = LODWORD(STACK[0x520]) + 28;
  HIDWORD(a31) = LODWORD(STACK[0x528]) - 11 * (LODWORD(STACK[0x558]) - 39 * LODWORD(STACK[0x5A8])) - 331;
  LODWORD(STACK[0x5A8]) = v126;
  LODWORD(v185) = v152 - 63;
  HIDWORD(v185) = (v186 ^ 0x63)
                - 123 * (v194 ^ 0xFFFFFFE3)
                - ((2 * ((v186 ^ 0x63) - 123 * (v194 ^ 0xFFFFFFE3))) & 0xFFFFFFC7)
                + 99;
  v176 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x4D0] + 8 * (int)((689 * !v175) ^ STACK[0x4E8])) - 8);
  LODWORD(STACK[0x2C4]) = v173 - 29;
  LODWORD(STACK[0x2C0]) = v169 - 117;
  LODWORD(STACK[0x2BC]) = v155 + 70;
  return v176(v166, v170, v172, v174, 16, v142, v139, v131, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           v180,
           a33,
           a34,
           a35,
           a36,
           v183,
           v185,
           v188,
           v191,
           v194);
}

void sub_1CF32B46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;

  LODWORD(STACK[0x560]) = v6;
  LODWORD(STACK[0x2B4]) = v8;
  LODWORD(STACK[0x2B8]) = v7;
  LODWORD(STACK[0x504]) = a6;
  JUMPOUT(0x1CF32AB4CLL);
}

uint64_t sub_1CF32B4A4(unsigned __int8 a1, unsigned __int8 a2, unsigned __int8 a3, unsigned __int8 a4, uint64_t a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,int a48,int a49,int a50,int a51,int a52,int a53)
{
  int v53;
  int v54;
  unsigned __int8 v55;
  int v56;
  unsigned __int8 v57;
  int v58;
  int v59;
  unsigned __int8 v60;
  unsigned __int8 v61;
  int v62;
  int v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  int v68;
  unint64_t v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  char v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  int v88;
  char v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  int v98;
  unsigned int v99;
  char v100;
  unsigned int v101;
  int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  int v108;
  int v109;
  int v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  unint64_t v164;
  unint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t (*v183)(unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  int v192;
  uint64_t v193;
  int v194;
  uint64_t v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;

  v63 = LODWORD(STACK[0x498]) - 62;
  LODWORD(v190) = (v63 ^ 0xFFFFFFAE) + LODWORD(STACK[0x5B0]);
  HIDWORD(v190) = v59;
  STACK[0x300] = STACK[0x4F0] - LODWORD(STACK[0x5B8]) + a5 + 0x2DAF9BBA5E7BAD1ELL;
  v64 = (((unint64_t)(v58 ^ 0xCBu) << 56) | ((unint64_t)LODWORD(STACK[0x4E0]) << 48) | ((unint64_t)LODWORD(STACK[0x4C8]) << 40) | ((unint64_t)v57 << 32) | ((unint64_t)(v56 ^ 0xDCu) << 24) | ((unint64_t)STACK[0x4B8] << 16) | ((unint64_t)(v55 ^ 0x46u) << 8)) ^ STACK[0x4B0];
  v65 = (STACK[0x4A8] << 56) | ((unint64_t)a1 << 48) | ((unint64_t)(v61 ^ 0x8Bu) << 40) | ((unint64_t)a2 << 32);
  STACK[0x298] = v64 ^ 0xCBD0B75E7B1668F5;
  v66 = (v65 & 0xFFFFFFFF000000FFLL | ((unint64_t)a3 << 24) | ((unint64_t)(v60 ^ 0xE3u) << 16) | ((unint64_t)a4 << 8)) ^ STACK[0x2F0];
  STACK[0x290] = v66 ^ 0x2EE17E3F1B266A62;
  STACK[0x2A8] = v66 ^ 0x2FBF9DB608D07BFALL;
  STACK[0x2A0] = v64 ^ 0x1C9C806447C482F1;
  HIDWORD(v189) = LODWORD(STACK[0x4A0]) - 149552686;
  HIDWORD(v191) = LODWORD(STACK[0x4A0]) - 1652650109;
  LODWORD(v66) = STACK[0x58C];
  v67 = (LODWORD(STACK[0x58C]) - 234354895) & 0xDF7F5EE;
  LODWORD(v189) = LODWORD(STACK[0x5A8]) + 12;
  HIDWORD(v188) = v53 + 118;
  HIDWORD(v187) = LODWORD(STACK[0x5C0]) + 26;
  LODWORD(v188) = LODWORD(STACK[0x598]) + 51;
  HIDWORD(v186) = a7 + 90;
  LODWORD(v187) = a8 + 75;
  HIDWORD(v185) = LODWORD(STACK[0x570]) + 126;
  LODWORD(v186) = v54 + 49;
  HIDWORD(a11) = LODWORD(STACK[0x5A0]) + 60;
  LODWORD(v185) = a6 + 88;
  v197 = LODWORD(STACK[0x580]) + 60;
  v201 = LODWORD(STACK[0x5D8]) + 83;
  v194 = LODWORD(STACK[0x568]) + 75;
  v196 = LODWORD(STACK[0x5C8]) + 49;
  v192 = LODWORD(STACK[0x578]) + 26;
  v199 = LODWORD(STACK[0x5D0]) + 75;
  v68 = LODWORD(STACK[0x590]) + 118;
  STACK[0x280] = (unint64_t)&STACK[0x770];
  STACK[0x4B0] = v66 ^ 0x743;
  LODWORD(STACK[0x504]) = v66 ^ 0x4E9;
  LODWORD(STACK[0x500]) = v66 ^ 0x48C;
  LODWORD(STACK[0x4FC]) = v66 ^ 0x4FB;
  STACK[0x4F0] = (70 * (v66 ^ 0x4CD)) ^ 0x5FB1858C8A368ACDLL;
  STACK[0x4E8] = v66 ^ 0x520;
  STACK[0x4E0] = 245 * (v66 ^ 0x4C8) - 0x3E168C6F81D510D2;
  STACK[0x4D8] = v67 - 457;
  LODWORD(v191) = -664795356;
  LODWORD(STACK[0x5D8]) = 1262421197;
  STACK[0x4C8] = 0xD7564F027E6BC667;
  STACK[0x4C0] = 0xD7564F027E6BC667;
  STACK[0x318] = 0xD7564F027E6BC667;
  STACK[0x320] = 0xD7564F027E6BC667;
  v69 = v63 ^ 0x5B6u;
  STACK[0x578] = v69;
  v70 = a47 - 121 * a53 + 125;
  v71 = a48 + 81 * v70 - 25;
  v72 = v69 + a49 - v71 + 32 * v71 - 106;
  v73 = a46 + 61 * v72 - 28;
  HIDWORD(v193) = v68 - 111 * v73 + 52;
  v74 = a51 - 33 * HIDWORD(v193) + 54;
  v75 = v192 - 125 * v74 - 25;
  v200 = v199 - 81 * v75 + 58;
  LODWORD(v195) = v194 + 11 * v200 - 57;
  v76 = a50 + 69 * v195 - 55;
  HIDWORD(v195) = v196 + 3 * v76 - 14;
  v203 = v62 + 126 + 33 * HIDWORD(v195) - 81;
  v77 = a52 + 95 * v203 + 62;
  v202 = v201 + 87 * v77 + 24;
  v198 = v197 - 59 * v202 + 33;
  v78 = (v58 ^ 0xFFFFFFCB) - 21 * v198 - 20 - ((2 * ((v58 ^ 0xFFFFFFCB) - 21 * v198 - 20)) & 0xFFFFFF96) - 53;
  LODWORD(v67) = LODWORD(STACK[0x2E4]) ^ 0x25;
  LODWORD(STACK[0x2B4]) = v78;
  v79 = v78 ^ 0xFFFFFFCB;
  v80 = -15 * v79 + v67 - ((2 * (-15 * v79 + v67)) & 0x4A) + 37;
  LODWORD(v67) = LODWORD(STACK[0x2C8]) ^ 0xFFFFFF9A;
  LODWORD(STACK[0x2E4]) = v80;
  v81 = v80 ^ 0x25;
  v82 = v67 + 83 * (v80 ^ 0x25) - ((2 * (v67 + 83 * (v80 ^ 0x25))) & 0x34) - 102;
  v83 = LODWORD(STACK[0x2EC]) ^ 0xFFFFFFC1;
  LODWORD(STACK[0x2C8]) = v82;
  LOBYTE(v67) = v82 ^ 0x9A;
  v84 = v83 + 53 * (v82 ^ 0xFFFFFF9A) - ((2 * (v83 + 53 * (v82 ^ 0xFFFFFF9A))) & 0xFFFFFF83) - 63;
  LODWORD(STACK[0x2EC]) = v84;
  LOBYTE(v83) = v84 ^ 0xC1;
  v85 = (v56 ^ 0xFFFFFFDC)
      - 95 * (v84 ^ 0xFFFFFFC1)
      + (~(2 * ((v56 ^ 0xFFFFFFDC) - 95 * (v84 ^ 0xFFFFFFC1))) | 0x47)
      - 35;
  v86 = LODWORD(STACK[0x2E8]) ^ 0xFFFFFF9B;
  LODWORD(STACK[0x2B8]) = v85;
  v85 ^= 0xFFFFFFDC;
  v87 = v86 + 61 * v85 - ((2 * (v86 + 61 * v85)) & 0x36) - 101;
  v88 = LODWORD(STACK[0x2BC]) ^ 0x46;
  LODWORD(STACK[0x2E8]) = v87;
  v89 = v87 ^ 0x9B;
  v90 = v88 - 101 * (v87 ^ 0xFFFFFF9B) - ((2 * (v88 - 101 * (v87 ^ 0xFFFFFF9B))) & 0xFFFFFF8C) + 70;
  v91 = LODWORD(STACK[0x2DC]) ^ 0x4F;
  LODWORD(STACK[0x2BC]) = v90;
  v90 ^= 0x46u;
  v92 = -127 * v90 + v91 - ((2 * (-127 * v90 + v91)) & 0xFFFFFF9F) + 79;
  v93 = LODWORD(STACK[0x2D8]) ^ 0x5D;
  LODWORD(STACK[0x2DC]) = v92;
  v94 = v92 ^ 0x4F;
  v95 = v93 - 107 * v94 - ((2 * (v93 - 107 * v94)) & 0xFFFFFFBA) + 93;
  v96 = LODWORD(STACK[0x2CC]) ^ 0xFFFFFF96;
  LODWORD(STACK[0x2D8]) = v95;
  v97 = v95 ^ 0x5D;
  v98 = v96 - 107 * (v95 ^ 0x5D) - ((2 * (v96 - 107 * (v95 ^ 0x5D))) & 0x2C) - 106;
  v99 = LODWORD(STACK[0x2C0]) ^ 0xFFFFFF8B;
  LODWORD(STACK[0x2CC]) = v98;
  v100 = v98 ^ 0x96;
  LODWORD(v69) = -7 * (v98 ^ 0xFFFFFF96) + v99 - ((2 * (-7 * (v98 ^ 0xFFFFFF96) + v99)) & 0x16) - 117;
  v101 = LODWORD(STACK[0x2D0]) ^ 0xFFFFFFED;
  LODWORD(STACK[0x2C0]) = v69;
  LODWORD(v69) = v69 ^ 0xFFFFFF8B;
  v102 = v101 + 69 * v69 - ((2 * (v101 + 69 * v69)) & 0xFFFFFFDA) - 19;
  v103 = LODWORD(STACK[0x2E0]) ^ 0x53;
  LODWORD(STACK[0x2D0]) = v102;
  v102 ^= 0xFFFFFFED;
  v104 = -15 * v102 + v103 - ((2 * (-15 * v102 + v103)) & 0xFFFFFFA6) + 83;
  v105 = LODWORD(STACK[0x2C4]) ^ 0xFFFFFFE3;
  LODWORD(STACK[0x2E0]) = v104;
  v106 = v104 ^ 0x53;
  v107 = 3 * v106 + v105 - ((2 * (3 * v106 + v105)) & 0xFFFFFFC7) - 29;
  v108 = LODWORD(STACK[0x2D4]) ^ 0x63;
  LODWORD(STACK[0x2C4]) = v107;
  v107 ^= 0xFFFFFFE3;
  v109 = v108 + 105 * v107 + (~(2 * (v108 + 105 * v107)) | 0x39) + 100;
  v110 = STACK[0x2F0] ^ 0xFFFFFFFA;
  LODWORD(STACK[0x2D4]) = v109;
  v111 = (-39 * v94) | ((unint64_t)(111 * v89) << 16) | ((unint64_t)(-35 * v83) << 32) | ((unint64_t)(-113 * v85) << 24) | ((unint64_t)(-23 * v79) << 56) | ((unint64_t)(111 * v81) << 48) | ((unint64_t)(-71 * v67) << 40) | ((unint64_t)(-33 * v90) << 8);
  v112 = v111 - 0x37940BF97F933881 - ((2 * v111) & 0x90D7E80D00D98EFELL);
  v113 = ((unint64_t)(-71 * v106) << 24) | ((unint64_t)(-79 * v107) << 16) | ((unint64_t)(105 * v97) << 56) | ((unint64_t)(-115 * v100) << 48) | ((unint64_t)(81 * v69) << 40) | ((unint64_t)(69 * v102) << 32) | ((unint64_t)(97 * (v109 ^ 0x63)) << 8);
  v114 = v110 + 23 * (v109 ^ 0x63) + (~(2 * (v110 + 23 * (v109 ^ 0x63))) | 0xBu) - 5;
  STACK[0x2F0] = v114;
  v115 = v113 & 0xFFFFFFFFFFFFFF00 | (-49 * (v114 ^ 0xFA));
  STACK[0x2A8] ^= v115;
  STACK[0x290] ^= v115;
  STACK[0x2A0] ^= 0xC86BF406806CC77FLL ^ v112;
  STACK[0x298] ^= 0xC86BF406806CC77FLL ^ v112;
  LODWORD(v193) = v75;
  v116 = ((unint64_t)(111 * v70 + 89) << 48) | ((unint64_t)(a11
                                                                                         - 23
                                                                                         * (a53
                                                                                          - 45
                                                                                          * (v114 ^ 0xFFFFFFFA))) << 56) | ((unint64_t)(-71 * v71 + 127) << 40) | ((unint64_t)(100 - 35 * v72) << 32) | ((unint64_t)(BYTE4(a10) - 113 * v73) << 24) | ((unint64_t)(111 * BYTE4(v193) - 42) << 16) | (-10 - 39 * v75) | ((unint64_t)(-109 - 33 * v74) << 8);
  v117 = ((unint64_t)(81 * v76 - 122) << 40) | ((unint64_t)(69 * BYTE4(v195) - 53) << 32) | ((unint64_t)(105 * v200 + 61) << 56) | ((unint64_t)(-115 * v195 - 79) << 48) | ((unint64_t)(-71 * v203 - 14) << 24) | ((unint64_t)(-79 * v77 + 40) << 16) | ((unint64_t)(97 * v202 - 115) << 8) | (-49 * v198 + 124);
  STACK[0x278] = v117 ^ STACK[0x4C0];
  STACK[0x318] ^= v117;
  v118 = STACK[0x578];
  STACK[0x270] = v116 ^ STACK[0x4C8];
  STACK[0x320] ^= v116;
  STACK[0x538] = LODWORD(STACK[0x3D8]);
  STACK[0x568] = LODWORD(STACK[0x3B0]);
  STACK[0x580] = LODWORD(STACK[0x394]);
  LODWORD(STACK[0x2FC]) = STACK[0x5D8];
  STACK[0x5D0] = LODWORD(STACK[0x3D0]);
  STACK[0x590] = LODWORD(STACK[0x3C0]);
  STACK[0x5A0] = LODWORD(STACK[0x3A0]);
  STACK[0x540] = LODWORD(STACK[0x3E0]);
  STACK[0x5C0] = LODWORD(STACK[0x398]);
  LODWORD(STACK[0x5B8]) = STACK[0x3E4];
  STACK[0x5C8] = LODWORD(STACK[0x390]);
  STACK[0x548] = LODWORD(STACK[0x3E8]);
  STACK[0x5D8] = LODWORD(STACK[0x38C]);
  STACK[0x5B0] = LODWORD(STACK[0x3B8]);
  LODWORD(STACK[0x5A8]) = STACK[0x3CC];
  STACK[0x570] = LODWORD(STACK[0x3AC]);
  STACK[0x598] = LODWORD(STACK[0x3DC]);
  HIDWORD(a33) = 98;
  LODWORD(STACK[0x32C]) = 14;
  v119 = v118 ^ 0x731;
  v120 = STACK[0x300];
  v121 = STACK[0x300] - 0x2DAF9BBA5E7BAD1ELL;
  STACK[0x558] = v119;
  v122 = v121 - ((v119 + 0x363DCBA41F215AA2) & (2 * v121)) + 0x1B1EE5D20F90AF02;
  v123 = (v122 >> 3 << 59) - 0x550C087CC469144ELL + ((v122 >> 8) ^ 0x1B1EE5D20F90AFLL);
  STACK[0x578] = v121;
  LOBYTE(v122) = (v121 << (v118 - 80)) & 0x38;
  v124 = v123 - 0x588EB678E529AE37 + ((2 * v123) & 0x42E2930E35ACA390 ^ 0xFBFFFFFFFFFFFFFFLL);
  *((_QWORD *)&v125 + 1) = v124 ^ 0x64;
  *(_QWORD *)&v125 = v124 ^ 0x1EFA4B224B571700;
  v126 = (v125 >> 8) + (v124 ^ 0x4965F73B97E04AF1);
  *((_QWORD *)&v125 + 1) = v124 ^ 0x965F73B97E04AF1;
  *(_QWORD *)&v125 = v124 ^ 0x4000000000000000;
  v127 = v126 - 0x410659907BCBDFEBLL - ((2 * v126) & 0x7DF34CDF0868402ALL);
  v128 = v127 ^ ((v125 >> 61) - 0x410659907BCBDFEBLL - ((2 * (v125 >> 61)) & 0x7DF34CDF0868402ALL));
  *((_QWORD *)&v125 + 1) = v127 ^ 0x62;
  *(_QWORD *)&v125 = v127 ^ 0xEE2D768EB8895100;
  v129 = (v128 ^ 0x50D4D0E13CBD7177)
       + (v125 >> 8)
       + 0xEFED3F3BB9D3762
       - ((2 * ((v128 ^ 0x50D4D0E13CBD7177) + (v125 >> 8))) & 0x1DFDA7E7773A6EC4);
  v130 = (((8 * v128) ^ 0x86A68709E5EB8BB8)
        - 0x63346AF52C8E9C68
        - ((2 * ((8 * v128) ^ 0x86A68709E5EB8BB8)) & 0x39972A15A6E2C730)
        + (v128 >> 61)) ^ 0x9CCB950AD371639ALL;
  v131 = v130 + 0xEFED3F3BB9D3762 - ((2 * v130) & 0x1DFDA7E7773A6EC4);
  *((_QWORD *)&v125 + 1) = v129 ^ 0x62;
  *(_QWORD *)&v125 = v129 ^ 0xEFED3F3BB9D3700;
  v132 = (v131 ^ v129 ^ 0xE5D7DAAEED85A300) + ((v125 >> 8) ^ 0xE5D7DAAEED85A3);
  v133 = v132 - 0x69268C134A4484E0 - ((2 * v132) & 0x2DB2E7D96B76F640);
  *((_QWORD *)&v125 + 1) = v131 ^ v129 ^ 0x5D7DAAEED85A300;
  *(_QWORD *)&v125 = v131 ^ ~v129;
  v134 = ((v125 >> 61) - 0x69268C134A4484E0 - ((2 * (v125 >> 61)) & 0x2DB2E7D96B76F640)) ^ v133;
  *((_QWORD *)&v125 + 1) = v133 ^ 0xD;
  *(_QWORD *)&v125 = v133 ^ 0x185CEA974D187200;
  v135 = (v125 >> 8)
       + (v134 ^ 0x8E85997BF8A3092DLL)
       + 0x4DD9705EBA486DEDLL
       - ((2 * ((v125 >> 8) + (v134 ^ 0x8E85997BF8A3092DLL))) & 0x9BB2E0BD7490DBDALL);
  *((_QWORD *)&v125 + 1) = v134 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v125 = v134 ^ 0x8000000000000000;
  v136 = ((v125 >> 61) + 0x4DD9705EBA486DEDLL - ((2 * (v125 >> 61)) & 0x9BB2E0BD7490DBDALL)) ^ v135;
  *((_QWORD *)&v125 + 1) = v135 ^ 0xBC;
  *(_QWORD *)&v125 = v135 ^ 0x80D06F497A67B300;
  v137 = (v136 ^ 0xCD091F17C02FDE51)
       + (v125 >> 8)
       - 0x68E357328310390DLL
       - ((2 * ((v136 ^ 0xCD091F17C02FDE51) + (v125 >> 8))) & 0x2E39519AF9DF8DE6);
  *((_QWORD *)&v125 + 1) = v136 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v125 = v136 ^ 0xC000000000000000;
  v138 = (v125 >> 61) - 0x68E357328310390DLL - ((2 * (v125 >> 61)) & 0x2E39519AF9DF8DE6);
  *((_QWORD *)&v125 + 1) = v137 ^ 3;
  *(_QWORD *)&v125 = v137 ^ 0x971CA8CD7CEFC6F0;
  v139 = v125 >> 3;
  *((_QWORD *)&v125 + 1) = v139 ^ 0xE3FB8425F3302DLL;
  *(_QWORD *)&v125 = v139 ^ 0x6000000000000000;
  v140 = v125 >> 61;
  *((_QWORD *)&v125 + 1) = v140 ^ 9;
  *(_QWORD *)&v125 = v140 ^ 0x65956073A6D26600;
  v141 = v125 >> 8;
  v142 = v138 ^ v137;
  *((_QWORD *)&v125 + 1) = v142 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v125 = v142 ^ 0x6000000000000000;
  v143 = v141 + (v142 ^ 0x628ABC52894BE762);
  v144 = ((v125 >> 61) - ((2 * (v125 >> 61)) & 0x78F9704FD9E954BALL) + 0x3C7CB827ECF4AA5DLL) ^ 0x66BC2424D37F8D3CLL ^ v143;
  *((_QWORD *)&v125 + 1) = v143 ^ 0x61;
  *(_QWORD *)&v125 = v143 ^ 0x5AC09C033F8B2700;
  v145 = (((unint64_t)(v125 >> 8) + v144) ^ 0x1B0BD1982B59C071) >> v122;
  v146 = v145 - 0x62BEA7F7AE284A8BLL - ((2 * v145) & 0x3A82B010A3AF6AEALL);
  STACK[0x560] = v120 - 0x2DAF9BBA5E7BAD16;
  *(_QWORD *)&v125 = __ROR8__(v120- 0x2DAF9BBA5E7BAD16- ((2 * (v120 - 0x2DAF9BBA5E7BAD16)) & 0x866F7BF29073B820)- 0x3CC84206B7C623F0, 8);
  v147 = (v125 & 0xF8FFFFFFFFFFFFFFLL ^ 0x10C337BDF94839DCLL)
       - ((2 * (v125 & 0xF8FFFFFFFFFFFFFFLL ^ 0x10C337BDF94839DCLL) + 0x55E7EF06772DD764) & 0xF0EAC6182F528AFALL);
  *((_QWORD *)&v125 + 1) = ((v125 ^ 0xF94839DC)
                          - ((2 * (v125 ^ 0xF94839DC) + 1999492964) & 0x2F528AFA)
                          + 1396715823) ^ 0xD1;
  *(_QWORD *)&v125 = (v147 + 0x23695A8F5340312FLL) ^ 0xC1FE61A946280300;
  v148 = v125 >> 8;
  *((_QWORD *)&v125 + 1) = (v147 + 0x23695A8F5340312FLL) ^ 0x1661DDB09A9F5E44;
  *(_QWORD *)&v125 = v147 - 0x5C96A570ACBFCED1;
  v149 = v148 + ((v147 + 0x23695A8F5340312FLL) ^ 0x9661DDB09A9F5E44);
  v150 = v149 ^ (v125 >> 61);
  *((_QWORD *)&v125 + 1) = v149 ^ 0x77777777;
  *(_QWORD *)&v125 = v149 ^ 0x50D4D0E13CBD7100;
  v151 = (v150 ^ 0x50D4D0E13CBD7177)
       + (v125 >> 8)
       - 0x45BD66D73A53112BLL
       - ((2 * ((v150 ^ 0x50D4D0E13CBD7177) + (v125 >> 8))) & 0x748532518B59DDAALL);
  *((_QWORD *)&v125 + 1) = v150 ^ 0x10D4D0E13CBD7177;
  *(_QWORD *)&v125 = v150 ^ 0x4000000000000000;
  v152 = (v125 >> 61) - 0x45BD66D73A53112BLL - ((2 * (v125 >> 61)) & 0x748532518B59DDAALL);
  *((_QWORD *)&v125 + 1) = v151 ^ 0xD5;
  *(_QWORD *)&v125 = v151 ^ 0xBA429928C5ACEE00;
  v153 = ((v125 >> 8) ^ 0xE5D7DAAEED85A3) + (v152 ^ v151 ^ 0xE5D7DAAEED85A300);
  v154 = v153 - 0x1692ECAC3F4479B0 - ((2 * v153) & 0xD2DA26A781770CA0);
  *((_QWORD *)&v125 + 1) = v152 ^ v151 ^ 0x5D7DAAEED85A300;
  *(_QWORD *)&v125 = v152 ^ ~v151;
  v155 = v154 ^ ((v125 >> 61) - 0x1692ECAC3F4479B0 - ((2 * (v125 >> 61)) & 0xD2DA26A781770CA0));
  *((_QWORD *)&v125 + 1) = v154 ^ 0x7D;
  *(_QWORD *)&v125 = v154 ^ 0x67E88A2838188F00;
  v156 = (v155 ^ 0x8E85997BF8A3092DLL)
       + (v125 >> 8)
       - 0x1F46888BC1F05CFALL
       - ((2 * ((v155 ^ 0x8E85997BF8A3092DLL) + (v125 >> 8))) & 0xC172EEE87C1F460CLL);
  *((_QWORD *)&v125 + 1) = v155 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v125 = v155 ^ 0x8000000000000000;
  v157 = (v125 >> 61) - 0x1F46888BC1F05CFALL - ((2 * (v125 >> 61)) & 0xC172EEE87C1F460CLL);
  *((_QWORD *)&v125 + 1) = v156 ^ 0x57;
  *(_QWORD *)&v125 = v156 ^ 0x2DB06863FE207D00;
  v158 = v157 ^ v156;
  v159 = (v125 >> 8)
       + (v158 ^ 0xCD091F17C02FDE51)
       + 0x1238574DE35FB655
       - ((2 * ((v125 >> 8) + (v158 ^ 0xCD091F17C02FDE51))) & 0x2470AE9BC6BF6CAALL);
  *((_QWORD *)&v125 + 1) = v158 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v125 = v158 ^ 0xC000000000000000;
  v160 = ((v125 >> 61) + 0x1238574DE35FB655 - ((2 * (v125 >> 61)) & 0x2470AE9BC6BF6CAALL)) ^ v159;
  *((_QWORD *)&v125 + 1) = v159 ^ 0x37;
  *(_QWORD *)&v125 = v159 ^ 0x70B2EB1F6A145100;
  v161 = (v125 >> 8)
       + (v160 ^ 0x628ABC52894BE762)
       + 0x308CAF387D4F8FFELL
       - ((2 * ((v125 >> 8) + (v160 ^ 0x628ABC52894BE762))) & 0x61195E70FA9F1FFCLL);
  *((_QWORD *)&v125 + 1) = v160 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v125 = v160 ^ 0x6000000000000000;
  v162 = (v125 >> 61) + 0x308CAF387D4F8FFELL - ((2 * (v125 >> 61)) & 0x61195E70FA9F1FFCLL);
  *((_QWORD *)&v125 + 1) = v161 ^ 0xFFFFFF9F;
  *(_QWORD *)&v125 = v161 ^ 0x6A4C333B42C4A800;
  v163 = ((v125 >> 8) + (v162 ^ 0x5AC09C033F8B2761 ^ v161)) ^ 0x1B0BD1982B59C071;
  v164 = (v163 >> v122) + 0x5A057A7096A95235 - ((2 * (v163 >> v122)) & 0xB40AF4E12D52A46ALL);
  LOBYTE(v122) = v122 ^ 0x3D;
  v165 = (v146 ^ 0x9D41580851D7B575)
       + 8 * (v163 << v122)
       - ((2 * ((v146 ^ 0x9D41580851D7B575) + 8 * (v163 << v122))) & 0x1222B5F432D304FELL)
       - 0x76EEA505E6967D81;
  *(_QWORD *)&v125 = __ROR8__(v120- 0x2DAF9BBA5E7BAD0ELL- ((2 * (v120 - 0x2DAF9BBA5E7BAD0ELL)) & 0x30B53BE594586C30)- 0x67A5620D35D3C9E8, 8);
  v166 = (v125 & 0xF8FFFFFFFFFFFFFFLL ^ 0x18985A9DF2CA2C36)
       - ((2 * (v125 & 0xF8FFFFFFFFFFFFFFLL ^ 0x18985A9DF2CA2C36) + 0x15E7EF06772DD764) & 0x27FA03285A62DE74)
       + 0x3EF0F91768C85AECLL;
  *((_QWORD *)&v125 + 1) = ((v125 ^ 0xF2CA2C36)
                          - ((2 * (v125 ^ 0xF2CA2C36) + 1999492964) & 0x5A62DE74)
                          + 1757960940) ^ 0x96;
  *(_QWORD *)&v125 = v166 ^ 0x2A7603317CB02900;
  v167 = (v125 >> 8) + (v166 ^ 0x7DE9BF28A0077403);
  *((_QWORD *)&v125 + 1) = v166 ^ 0x1DE9BF28A0077403;
  *(_QWORD *)&v125 = v166 ^ 0x6000000000000000;
  v168 = v167 ^ (v125 >> 61);
  STACK[0x310] = 0x50D4D0E13CBD7100;
  *((_QWORD *)&v125 + 1) = v167 ^ 0x77777777;
  *(_QWORD *)&v125 = v167 ^ 0x50D4D0E13CBD7100;
  v169 = (v125 >> 8)
       + (v168 ^ 0x50D4D0E13CBD7177)
       + 0x57B796EAA530AD3BLL
       - ((2 * ((v125 >> 8) + (v168 ^ 0x50D4D0E13CBD7177))) & 0xAF6F2DD54A615A76);
  *((_QWORD *)&v125 + 1) = v168 ^ 0x10D4D0E13CBD7177;
  *(_QWORD *)&v125 = v168 ^ 0x4000000000000000;
  v170 = (v125 >> 61) + 0x57B796EAA530AD3BLL - ((2 * (v125 >> 61)) & 0xAF6F2DD54A615A76);
  *((_QWORD *)&v125 + 1) = v169 ^ 0x3B;
  *(_QWORD *)&v125 = v169 ^ 0x57B796EAA530AD00;
  v171 = ((v125 >> 8) ^ 0xE5D7DAAEED85A3) + (v170 ^ v169 ^ 0xE5D7DAAEED85A300);
  v172 = v171 - 0x22312A7D01205C6CLL - ((2 * v171) & 0xBB9DAB05FDBF4728);
  *((_QWORD *)&v125 + 1) = v170 ^ v169 ^ 0x5D7DAAEED85A300;
  *(_QWORD *)&v125 = v170 ^ ~v169;
  v173 = v172 ^ ((v125 >> 61) - 0x22312A7D01205C6CLL - ((2 * (v125 >> 61)) & 0xBB9DAB05FDBF4728));
  *((_QWORD *)&v125 + 1) = v172 ^ 0xB9;
  *(_QWORD *)&v125 = v172 ^ 0x534B4CF9067CAA00;
  v174 = (v173 ^ 0x8E85997BF8A3092DLL)
       + (v125 >> 8)
       + 0x4EA063BB768DFC92
       - ((2 * ((v173 ^ 0x8E85997BF8A3092DLL) + (v125 >> 8))) & 0x9D40C776ED1BF924);
  *((_QWORD *)&v125 + 1) = v173 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v125 = v173 ^ 0x8000000000000000;
  v175 = ((v125 >> 61) + 0x4EA063BB768DFC92 - ((2 * (v125 >> 61)) & 0x9D40C776ED1BF924)) ^ v174;
  *((_QWORD *)&v125 + 1) = v174 ^ 0xFFFFFFC3;
  *(_QWORD *)&v125 = v174 ^ 0x83A97CACB6A22200;
  v176 = (v175 ^ 0xCD091F17C02FDE51) + (v125 >> 8);
  *((_QWORD *)&v125 + 1) = v175 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v125 = v175 ^ 0xC000000000000000;
  v177 = v176 ^ (v125 >> 61);
  *((_QWORD *)&v125 + 1) = v176 ^ 0x62;
  *(_QWORD *)&v125 = v176 ^ 0x628ABC52894BE700;
  v178 = (v177 ^ 0x628ABC52894BE762) + (v125 >> 8);
  *((_QWORD *)&v125 + 1) = v177 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v125 = v177 ^ 0x6000000000000000;
  v179 = v178 - 0x788E9EA7D3554707 - ((2 * v178) & 0xEE2C2B0595571F2);
  v180 = ((v125 >> 61) - 0x788E9EA7D3554707 - ((2 * (v125 >> 61)) & 0xEE2C2B0595571F2)) ^ 0x1AC09C033F8B2761 ^ v179;
  *((_QWORD *)&v125 + 1) = v179 ^ 0x18;
  *(_QWORD *)&v125 = v179 ^ 0xDDB1FD5B13219F00;
  v181 = (((unint64_t)(v125 >> 8) + v180) ^ 0x1B0BD1982B59C071) << v122;
  LODWORD(STACK[0x438]) = v146 ^ 0xFFFFFFB8;
  LODWORD(STACK[0x444]) = (v165 >> 16) ^ 3;
  LODWORD(STACK[0x43C]) = (v165 >> 8) ^ 0xFFFFFFBF;
  LODWORD(STACK[0x430]) = HIWORD(v165) ^ 0x1E;
  v182 = (v164 ^ 0x5A057A7096A95235)
       + 8 * v181
       + 0x4F894A0E6C79BB1ELL
       - 2 * (((v164 ^ 0x5A057A7096A95235) + 8 * v181) & 0x4F894A0E6C79BB3ELL ^ (v164 ^ 0x5A057A7096A95235) & 0x20);
  LODWORD(STACK[0x440]) = v164 ^ 0x45;
  LODWORD(STACK[0x408]) = HIDWORD(v165) ^ 0xFFFFFFCA;
  LODWORD(STACK[0x40C]) = (v165 >> 24) ^ 0xFFFFFFDA;
  LODWORD(STACK[0x434]) = HIBYTE(v165) ^ 0xFFFFFF8E;
  v183 = (uint64_t (*)(unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x4D0] + 8 * (int)(v118 ^ 0x279)) - 8);
  LODWORD(STACK[0x410]) = (v182 >> 8) ^ 0xFFFFFF9B;
  LODWORD(STACK[0x41C]) = (v182 >> 24) ^ 0xFFFFFF8D;
  LODWORD(STACK[0x428]) = (v165 >> 40) ^ 0x66;
  LODWORD(STACK[0x420]) = (v182 >> 16) ^ 0xFFFFFFC9;
  LODWORD(STACK[0x42C]) = (v182 >> 40) ^ 0x21;
  LODWORD(STACK[0x424]) = HIBYTE(v182) ^ 0xFFFFFFCF;
  LODWORD(STACK[0x414]) = HIWORD(v182) ^ 0x11;
  LODWORD(STACK[0x418]) = HIDWORD(v182) ^ 0x33;
  return v183(v182 >> 40, STACK[0x580], HIWORD(v182), v165 >> 24, HIBYTE(v182), STACK[0x5B0], v182 >> 16, v183, a9, a10, a11, v185, v186, v187, v188, v189, v190, 0xA3695A8F5340312FLL, a19,
           v191,
           0x8C70C87B8A4CFB2CLL,
           0x628ABC52894BE700,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           0x5200000049,
           v193,
           v195,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_1CF32CCD0@<X0>(unsigned __int8 a1@<W0>, unsigned __int8 a2@<W2>, unsigned __int8 a3@<W3>, uint64_t a4@<X4>, unsigned __int8 a5@<W6>, unsigned __int8 a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  uint64_t v41;
  int v42;
  unsigned __int8 v43;
  uint64_t v44;
  unsigned __int8 v45;
  unsigned __int8 v46;
  uint64_t v47;
  unsigned __int8 v48;
  int v49;
  uint64_t v50;
  int v51;
  int v52;
  int v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  int v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  char v143;
  unint64_t v144;
  uint64_t v145;
  unint64_t v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t (*v152)(unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v53 = 7 * (STACK[0x558] ^ 0x32E);
  v54 = ((v44 << ((7 * (STACK[0x558] ^ 0x2E)) ^ 0x3C)) & 0xFF0000000000 | (v50 << 56) | ((unint64_t)v46 << 48) | ((unint64_t)a3 << 32) | (v42 << 24) | ((unint64_t)v48 << 16) | ((unint64_t)a6 << 8)) ^ 0x75826919FA5A1100;
  v55 = ((unint64_t)a5 << 40) & 0xFF00FF00FF00FFFFLL | ((unint64_t)v43 << 48) | (v47 << 56) | ((unint64_t)v45 << 32) | (v49 << 24) | ((unint64_t)a1 << 16);
  v56 = *(unsigned __int8 *)STACK[0x578];
  v57 = STACK[0x300];
  v58 = *(unsigned __int8 *)(STACK[0x300] - 0x2DAF9BBA5E7BAD1BLL);
  v59 = v58 - ((2 * v58) & 0xFFFFFF83);
  v60 = *(unsigned __int8 *)(STACK[0x300] - 0x2DAF9BBA5E7BAD1DLL);
  v61 = v41;
  LODWORD(a32) = 74;
  v62 = (v55 & 0xFFFFFFFFFFFF00FFLL | ((unint64_t)a2 << 8)) ^ 0x35BB796C0E4A8900;
  v63 = *(unsigned __int8 *)(STACK[0x300] - 0x2DAF9BBA5E7BAD1CLL);
  v64 = *(unsigned __int8 *)(STACK[0x300] - 0x2DAF9BBA5E7BAD18);
  v65 = *(unsigned __int8 *)(STACK[0x300] - 0x2DAF9BBA5E7BAD1ALL);
  v66 = *(unsigned __int8 *)(STACK[0x300] - 0x2DAF9BBA5E7BAD12);
  v67 = (v56 << 56) | (v58 << 32) | (v60 << 48);
  LODWORD(v58) = v60 - ((2 * v60) & 0x4A);
  v68 = *(unsigned __int8 *)(STACK[0x300] - 0x2DAF9BBA5E7BAD15);
  v69 = *(unsigned __int8 *)(STACK[0x300] - 0x2DAF9BBA5E7BAD14);
  v70 = *(unsigned __int8 *)STACK[0x560];
  LODWORD(STACK[0x3E4]) = v56 - ((2 * v56) & 0xFFFFFF96) - 53;
  LODWORD(STACK[0x3E0]) = v59 - 63;
  LODWORD(STACK[0x3D8]) = v58 + 37;
  LODWORD(STACK[0x3E8]) = v63 - ((2 * v63) & 0x34) - 102;
  LODWORD(STACK[0x3D0]) = v64 - ((2 * v64) & 0x18C) + 70;
  LODWORD(STACK[0x3DC]) = v65 + (~(2 * v65) | 0x47) - 35;
  LODWORD(STACK[0x3C0]) = v66 + (~(2 * v66) | 0x59) + 84;
  LODWORD(STACK[0x3CC]) = v68 - ((2 * v68) & 0x2C) - 106;
  v71 = *(unsigned __int8 *)(v57 - 0x2DAF9BBA5E7BAD17);
  LODWORD(STACK[0x3B8]) = v71 - ((2 * v71) & 0xFFFFFF9F) + 79;
  LODWORD(STACK[0x3B0]) = v69 - ((2 * v69) & 0x16) - 117;
  LODWORD(STACK[0x3AC]) = v70 - ((2 * v70) & 0xFFFFFFBA) + 93;
  v72 = v67 | (v63 << 40) | (v64 << 8) | (v65 << 24) | v71;
  v73 = STACK[0x320] ^ 0xBDFA037553FCD6CFLL;
  v74 = *(unsigned __int8 *)(v57 - 0x2DAF9BBA5E7BAD10);
  LODWORD(STACK[0x3A0]) = v74 - ((2 * v74) & 0xFFFFFFC7) + 99;
  v75 = *(unsigned __int8 *)(v57 - 0x2DAF9BBA5E7BAD13);
  v76 = v61 ^ v73 ^ (v54 - 0x4205FC8AAC0329BALL - ((2 * v54) & 0x7BF406EAA7F9ACDCLL));
  LODWORD(STACK[0x394]) = v75 - ((2 * v75) & 0x1DA) - 19;
  v77 = v72 ^ STACK[0x270];
  v78 = *(unsigned __int8 *)(v57 - 0x2DAF9BBA5E7BAD11);
  v79 = *(unsigned __int8 *)(v57 - 0x2DAF9BBA5E7BAD0FLL);
  v80 = a4 ^ 0xA0DCCBCB36B789F6 ^ STACK[0x318] ^ (v62 - 0x5F233434C9487647 - ((2 * v62) & 0x41B997966D6F137ALL));
  LODWORD(v72) = v79 - ((2 * v79) & 0x1F4);
  v81 = STACK[0x278] ^ (v79 | (v74 << 8));
  v82 = *(unsigned __int8 *)(v57 - 0x2DAF9BBA5E7BAD19);
  LODWORD(STACK[0x390]) = v78 + (v52 | ~(2 * v78)) - 28;
  LODWORD(STACK[0x398]) = v82 - ((2 * v82) & 0x36) - 101;
  LODWORD(STACK[0x38C]) = v72 - 6;
  v83 = ((v66 << 24) | (v68 << 48) | (v69 << 40) | (v70 << 56) | (v75 << 32) | (v78 << 16)) ^ v81;
  LODWORD(STACK[0x32C]) = 15;
  v84 = v77 ^ (v82 << 16);
  v85 = STACK[0x448];
  v86 = STACK[0x2A8];
  v87 = STACK[0x2A0];
  v88 = STACK[0x298];
  v89 = STACK[0x290];
  STACK[0x2A8] = STACK[0x2A8];
  STACK[0x3F8] = v86 ^ 0x9D65A226C25DF5FELL;
  STACK[0x2A0] = v87;
  STACK[0x3F0] = v87 ^ 0xA3DDD429CB3B4450;
  STACK[0x298] = v88;
  STACK[0x498] = ((v53 + 108) | 0x69u) ^ v88 ^ 0x1C86F85C057DAC7BLL;
  STACK[0x290] = v89;
  STACK[0x490] = v89 ^ 0xF9B7313D654DACFFLL;
  LODWORD(STACK[0x404]) = v51;
  STACK[0x270] = v84;
  STACK[0x278] = v83;
  STACK[0x448] = v85;
  STACK[0x320] = v76;
  STACK[0x318] = v80;
  LODWORD(STACK[0x4B8]) = 0;
  STACK[0x4C0] = 0xD7564F027E6BC667;
  v90 = STACK[0x3F8];
  v91 = STACK[0x3F0];
  STACK[0x4A0] = v76;
  STACK[0x4C8] = 0xD7564F027E6BC667;
  STACK[0x4A8] = v80;
  LODWORD(STACK[0x5A0]) = 0;
  v92 = HIDWORD(v91) ^ 0xD7564F02A93D8965;
  v93 = HIDWORD(v76) ^ 0xD7564F02A93D8965;
  v94 = ((v91 ^ v90) >> 32) - 0x28A9B0FD81943999 - ((2 * ((v91 ^ v90) >> 32)) & 0xFCD78CCE);
  v95 = ((v76 ^ v80) >> 32) - 0x28A9B0FD81943999 - ((2 * ((v76 ^ v80) >> 32)) & 0xFCD78CCE);
  STACK[0x560] = v94;
  STACK[0x550] = v91 ^ v90 ^ v94;
  STACK[0x558] = v95;
  STACK[0x548] = v76 ^ v80 ^ v95;
  STACK[0x540] = HIDWORD(v90) ^ 0xD7564F02A93D8965;
  STACK[0x538] = HIDWORD(v80) ^ 0xD7564F02A93D8965;
  STACK[0x568] = v76;
  STACK[0x530] = v76 ^ 0xD7564F02 ^ HIDWORD(v76);
  STACK[0x570] = v91;
  STACK[0x528] = v91 ^ 0xD7564F027E6BC667 ^ v92;
  STACK[0x578] = v90;
  STACK[0x520] = v90 ^ 0xD7564F02 ^ HIDWORD(v90);
  STACK[0x580] = v80;
  STACK[0x518] = v80 ^ 0xD7564F02 ^ HIDWORD(v80);
  STACK[0x510] = v76 ^ v80 ^ 0xD7564F027E6BC667;
  STACK[0x508] = v91 ^ v90 ^ 0xD7564F027E6BC667;
  STACK[0x598] = 0x9DDAF9D236D8E063;
  STACK[0x590] = 0xCBD2C40F5233E967;
  STACK[0x5B0] = 0xC6592DEE738659A2;
  STACK[0x5A8] = 0xC1E973907E2AF118;
  while (1)
  {
    v97 = ((v93 & 0xE0562EA2 ^ 0x4D1ACB1B20400C81) + (v93 & 0x1FA9D15D) - 1) ^ 0x4D11C81BDCCE6EFFLL;
    v98 = (((2 * v97) | 0x6A451E8C2AA57D4) - v97 + 0x7CADD70B9EAAD416) ^ 0x83592BF4E3B08FF2;
    STACK[0x5D8] = v98 >> (32 * (v92 & 1u));
    STACK[0x5D0] = v98 >> ((16 * v92) & 0x20);
    STACK[0x5C8] = v98 >> ((8 * v92) & 0x20);
    STACK[0x5C0] = v98 >> (~(4 * v92) & 0x20);
    STACK[0x5B8] = v98 >> (~(2 * v92) & 0x20);
    v99 = v98 >> (v92 & 0x20);
    v100 = v98 >> ((v92 >> 1) & 0x20);
    v101 = v98 >> (~(v92 >> 2) & 0x20);
    v102 = v98 >> (~(v92 >> 3) & 0x20);
    v103 = v98 >> ((v92 >> 4) & 0x20);
    v104 = v98 >> ((v92 >> 5) & 0x20);
    v105 = v98 >> (~(v92 >> 6) & 0x20);
    v106 = v98 >> (~(v92 >> 7) & 0x20);
    v107 = v98 >> (~BYTE1(v92) & 0x20);
    v108 = v98 >> ((v92 >> 9) & 0x20);
    v109 = v98 >> ((v92 >> 10) & 0x20);
    v110 = v98 >> ((v92 >> 11) & 0x20);
    v111 = v98 >> ((v92 >> 12) & 0x20);
    v112 = v98 >> (~(v92 >> 13) & 0x20);
    v113 = v98 >> ((v92 >> 14) & 0x20);
    v114 = v98 >> (~(v92 >> 15) & 0x20);
    v115 = v98 >> (BYTE2(v92) & 0x20);
    v116 = v98 >> ((v92 >> 17) & 0x20);
    v117 = v98 >> (~(v92 >> 18) & 0x20);
    v118 = v98 >> (~(v92 >> 19) & 0x20);
    v119 = v98 >> ((v92 >> 20) & 0x20);
    v120 = v98 >> ((v92 >> 21) & 0x20);
    v121 = v98 >> ((v92 >> 22) & 0x20);
    v122 = v98 >> (BYTE3(v92) & 0x20);
    v123 = v98 >> ((v92 >> 23) & 0x20);
    v124 = v98 >> ((v92 >> 25) & 0x20);
    v125 = v98 >> (~(v92 >> 26) & 0x20);
    v126 = (4 * STACK[0x5D0]) ^ (2 * STACK[0x5D8]) ^ (8 * STACK[0x5C8]) ^ (16 * STACK[0x5C0]) ^ (32 * STACK[0x5B8]) ^ (v99 << 6) ^ (v100 << 7) ^ (v101 << 8) ^ (v102 << 9) ^ (v103 << 10) ^ (v104 << 11) ^ (v105 << 12) ^ (v106 << 13) ^ (v107 << 14) ^ (v108 << 15) ^ (v109 << 16) ^ (v110 << 17) ^ (v111 << 18) ^ (v112 << 19) ^ (v113 << 20) ^ (v114 << 21) ^ (v115 << 22) ^ (v116 << 23) ^ (v117 << 24) ^ (v118 << 25);
    v127 = (v121 << 28) ^ (v123 << 29) ^ (v120 << 27) ^ (v119 << 26) ^ v126;
    v128 = (v122 << 30) ^ (v124 << 31) ^ v127;
    v129 = v128 ^ (v125 << 32);
    switch(LODWORD(STACK[0x5A0]))
    {
      case 0:
        v130 = v129 ^ STACK[0x5B0] ^ 0xC6592DEE738659A2;
        v131 = ((14 * LODWORD(STACK[0x504])) ^ 0x6F4D64FBE2A84B42)
             - ((v128 << 33) & 0xDE9AC9F600000000)
             + (v128 << 32);
        STACK[0x590] ^= v129 ^ HIDWORD(v129);
        STACK[0x5A8] ^= 0x6F4D64FBE2A84AA8 ^ v131;
        STACK[0x5B0] = HIDWORD(v129) ^ 0xC6592DEE738659A2 ^ v131 ^ (v130
                                                                    + 0x6F4D64FBE2A84AA8
                                                                    - ((2 * v130) & 0xDE9AC9F7C5509550));
        LODWORD(STACK[0x5A0]) = 1;
        v92 = STACK[0x570];
        v93 = STACK[0x568];
        break;
      case 1:
        v135 = (v128 << 32)
             - 0x16E4F8EE2A128420
             - (((7 * LODWORD(STACK[0x500])) - 0x2DC9F1DE000001EALL) & (v128 << 33));
        v136 = STACK[0x5B0];
        v137 = STACK[0x5B0] & 0x20000 ^ 0xF5FDBF79BFD3CFD9;
        v138 = v137 + 0x4A3AFDE7DEFF3F3FLL;
        STACK[0x590] ^= HIDWORD(v129);
        v139 = v137 + 1076768807;
        v140 = v136 & 0xFFFFFFFFFFFDFFFFLL;
        v141 = 0x36367CDB5EA2DEF1 - v137;
        if ((HIDWORD(v129) & *(_QWORD *)&v139) == 0)
          v141 = v138;
        v142 = v140 ^ 0xC6592DEE738459A2 ^ (HIDWORD(v129) - 0x4038BD619ED10F18 + v141);
        STACK[0x5A8] ^= v129 ^ 0xE91B0711D5ED7BE0 ^ v135;
        STACK[0x5B0] = v129 ^ 0xC6592DEE738659A2 ^ v135 ^ (v142
                                                           - 0x16E4F8EE2A128420
                                                           - ((2 * v142) & 0xD2360E23ABDAF7C0));
        LODWORD(STACK[0x5A0]) = 2;
        v92 = STACK[0x540];
        v93 = STACK[0x538];
        break;
      case 2:
        v132 = (v128 << 32)
             - 0x324DBEE1A61B5EE1
             - ((v128 << 33) & 0x9B64823C00000000)
             + (10 * LODWORD(STACK[0x4FC]));
        STACK[0x5B0] ^= v129 ^ HIDWORD(v129);
        STACK[0x598] ^= 0xCDB2411E59E4A309 ^ v132;
        STACK[0x5A8] = v129 ^ v132 ^ 0x795426138E2B3D4BLL ^ ((HIDWORD(v129) ^ STACK[0x5A8] ^ 0xC1E973907E2AF118)
                                                           + 0x750F149DA9E56F5ALL
                                                           - 2
                                                           * ((HIDWORD(v129) ^ STACK[0x5A8] ^ 0xC1E973907E2AF118) & 0x750F149DA9E56F5BLL ^ (HIDWORD(v129) ^ STACK[0x5A8]) & 1));
        LODWORD(STACK[0x5A0]) = 3;
        v92 = STACK[0x578];
        v93 = STACK[0x580];
        break;
      case 3:
        v133 = 0x3BF9EF487B7C7E8 - ((v126 << 33) & 0x77F3DE800000000) + (v128 << 32);
        STACK[0x5B0] ^= HIDWORD(v129);
        STACK[0x5A8] = HIDWORD(v129) ^ v133 ^ 0x9DE768E873ABBDD1 ^ ((v129 ^ STACK[0x5A8] ^ 0xC1E973907E2AF118)
                                                                    + 0x5FB1858C8A368ACDLL
                                                                    - 2
                                                                    * (STACK[0x4F0] & (v129 ^ STACK[0x5A8] ^ 0xC1E973907E2AF118) ^ (v129 ^ STACK[0x5A8]) & 6)
                                                                    + 84);
        STACK[0x598] ^= 0x3BF9EF487B7C7E8 ^ v129 ^ v133;
        LODWORD(STACK[0x5A0]) = 4;
        v92 = STACK[0x528];
        v93 = STACK[0x530];
        break;
      case 4:
        v96 = (v128 << 32) + 0x6245EA994ABDB292 - ((v128 << 33) & 0xC48BD53200000000) + STACK[0x4E8] - 490;
        STACK[0x5A8] ^= 0x6245EA994ABDB292 ^ v96;
        STACK[0x590] ^= HIDWORD(v129);
        STACK[0x5B0] ^= 0x6245EA994ABDB292 ^ HIDWORD(v129) ^ v96;
        LODWORD(STACK[0x5A0]) = 5;
        v92 = STACK[0x560];
        v93 = STACK[0x558];
        break;
      case 5:
        v143 = (LODWORD(STACK[0x58C]) + 96) | 0xC0;
        STACK[0x5A8] ^= v128 << 32;
        STACK[0x5B0] ^= v129 ^ 0x750F149DA9E56F5ALL ^ ((v129 >> (v143 ^ 0xCAu))
                                                     + 0x750F149DA9E56F5ALL
                                                     - ((2 * (v129 >> (v143 ^ 0xCAu))) & 0x153CADEB4));
        LODWORD(STACK[0x5A0]) = 6;
        v92 = STACK[0x508];
        v93 = STACK[0x510];
        break;
      case 6:
        STACK[0x5B0] ^= HIDWORD(v129);
        STACK[0x5A8] ^= v129 ^ ((v128 << 32) - 0x3E168C6F81D50EE8 - ((v128 << 33) & 0x83D2E72000000000)) ^ STACK[0x4E0];
        LODWORD(STACK[0x5A0]) = 7;
        v92 = STACK[0x520];
        v93 = STACK[0x518];
        break;
      case 7:
        v134 = (v128 << 32) - 0x40DAB18B192F1F68 - ((v127 << STACK[0x4D8]) & 0x7E4A9CE800000000);
        STACK[0x5B0] ^= HIDWORD(v129);
        STACK[0x5A8] ^= 0xBF254E74E6D0E098 ^ HIDWORD(v129) ^ v134;
        STACK[0x598] ^= 0xBF254E74E6D0E098 ^ v134;
        LODWORD(STACK[0x5A0]) = 8;
        v92 = STACK[0x550];
        v93 = STACK[0x548];
        break;
      default:
        v144 = STACK[0x5A8] ^ (v128 << 32);
        v145 = (v144 >> 1) ^ (v144 >> 7) ^ (v144 >> (STACK[0x4B0] ^ 0x8Bu)) ^ 0x510D37CB00639128;
        v146 = v144 ^ 0xD967B4CF5E032EA4 ^ (v145 - ((2 * v145) & 0x311D8EBE4053BF78) + 0x188EC75F2029DFBCLL);
        v147 = (v146 - 0x342D3BF0ADCC1699 - ((2 * v146) & 0x97A5881EA467D2CELL)) ^ STACK[0x590];
        v148 = ((STACK[0x598] >> 2) ^ (STACK[0x598] >> 7) | (STACK[0x5A8] << 62)) ^ (STACK[0x5A8] << 57) ^ 0x58A0776E32B7F9E9 ^ (HIDWORD(v129) ^ (STACK[0x598] >> 1) | (STACK[0x5A8] << 63));
        v149 = (v148 - 0x28A9B0FD81943999 + (~(2 * v148) | 0x515361FB03287331) + 1) ^ STACK[0x4C0];
        v150 = (~STACK[0x598] << 62) ^ (~STACK[0x598] << 63) ^ (STACK[0x598] << 57);
        v151 = STACK[0x5B0] ^ STACK[0x598] ^ (v149 - 0x6225062DC9271F9DLL - ((2 * v149) & 0x3BB5F3A46DB1C0C6)) ^ 0x110F62EC0DED9FC5;
        v152 = *(uint64_t (**)(unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x4D0] + 8 * ((LODWORD(STACK[0x58C]) - 800) ^ (77 * ((STACK[0x4B8] & 1) == 0))));
        STACK[0x4C8] ^= (v150 >> 1) ^ (v150 >> 2) ^ (v150 >> 7) ^ (v147
                                                                 - ((2 * v147) & 0x48FCCFFE701225ACLL)
                                                                 - 0x5B819800C7F6ED2ALL) ^ v150 ^ 0x317267FF380912D6;
        STACK[0x4C0] = v151;
        return v152(v110, v151, v104, v105, v111, v103, v119, v102, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
                 a18,
                 a19,
                 a20,
                 a21,
                 a22,
                 a23,
                 a24,
                 a25,
                 a26,
                 a27,
                 a28,
                 a29,
                 a30,
                 a31,
                 a32,
                 a33,
                 a34,
                 a35,
                 a36,
                 a37,
                 a38,
                 a39,
                 a40,
                 a41);
    }
  }
}

void sub_1CF32DC98()
{
  LODWORD(STACK[0x4B8]) = 1;
  JUMPOUT(0x1CF32D120);
}

uint64_t sub_1CF32DCB4()
{
  uint64_t v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (int)(((((LODWORD(STACK[0x404]) == 82) ^ (STACK[0x4B0] - 100)) & 1)
                                               * ((STACK[0x4B0] - 160) ^ 0x2C8)) ^ STACK[0x4B0]))
                            - 12))();
}

uint64_t sub_1CF32DCF4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((LODWORD(STACK[0x32C]) == (v0 + 37))
                                          * ((v0 + 439) ^ 0x2D4)) ^ v0))
                            - 4))();
}

void sub_1CF32DD28()
{
  unint64_t v0;

  LODWORD(STACK[0x32C]) = 14;
  LODWORD(STACK[0x404]) = 82;
  STACK[0x320] = v0;
  JUMPOUT(0x1CF32D0ECLL);
}

uint64_t sub_1CF32DD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34)
{
  int v34;
  uint64_t v35;

  return ((uint64_t (*)(void))(*(_QWORD *)(v35 + 8 * (((613 * (v34 ^ 0x4A2) - 1199) * (a34 == 98)) ^ v34))
                            - (((v34 ^ 0x4A2u) + 1243) ^ 0x4D1)))();
}

uint64_t sub_1CF32DD88@<X0>(int a1@<W0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  unint64_t v36;
  char v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v36 = STACK[0x448];
  *(_BYTE *)(v36 - 0x138A5B0312551204) = BYTE6(a2) ^ v35;
  *(_BYTE *)(v36 - 0x138A5B0312551203) = BYTE5(a2) ^ 0x28;
  *(_BYTE *)(v36 - 0x138A5B0312551205) = HIBYTE(v33) ^ 0xE6;
  *(_BYTE *)(v36 - 0x138A5B03125511FFLL) = BYTE1(a2) ^ 0xD4;
  *(_BYTE *)(v36 - 0x138A5B0312551202) = BYTE4(a2) ^ 0xFD;
  *(_BYTE *)(v36 - 0x138A5B0312551201) = (v31 + 105) ^ BYTE3(a2);
  *(_BYTE *)(v36 - 0x138A5B0312551200) = v34 ^ BYTE2(a2);
  *(_BYTE *)(v36 - 0x138A5B03125511FELL) = a2 ^ 0xB1;
  *(_BYTE *)(v36 - 0x138A5B03125511FDLL) = HIBYTE(v32) ^ 0xC6;
  *(_BYTE *)(v36 - 0x138A5B03125511FCLL) = BYTE6(v32) ^ 0x59;
  *(_BYTE *)(v36 - 0x138A5B03125511FBLL) = BYTE5(v32) ^ 0x2D;
  *(_BYTE *)(v36 - 0x138A5B03125511F9) = BYTE3(v32) ^ 0x73;
  *(_BYTE *)(v36 - 0x138A5B03125511FALL) = BYTE4(v32) ^ 0xEE;
  *(_BYTE *)(v36 - 0x138A5B03125511F7) = BYTE1(v32) ^ 0x59;
  *(_BYTE *)(v36 - 0x138A5B03125511F8) = BYTE2(v32) ^ 0x86;
  *(_BYTE *)(v36 - 0x138A5B03125511F6) = v32 ^ 0xA2;
  LODWORD(STACK[0x5D0]) = v31 - 19;
  LODWORD(STACK[0x5D8]) = a1 == 98;
  v38 = 8 * ((a31 - 120) & 7);
  STACK[0x5C0] = a31 - 0xFC58F007312F078;
  v39 = a31 - 0xFC58F007312F078 - ((2 * (a31 - 0xFC58F007312F078)) & 0xB576A94567744ABELL) + 0x5ABB54A2B3BA255FLL;
  STACK[0x5C8] = (v31 - 698) ^ 0x15Fu;
  v40 = (((v31 - 698) ^ 0xF800000000000223) & (v39 << 56) & 0xFF00000000000000 | (v39 >> 8)) ^ 0x585ABB54A2B3BA25;
  v41 = ((2 * v40 + 0x15E7EF06772DD764) & 0x306D798A5CF82004 ^ 0xFBFFFFFFFFFFFFFFLL) + v40;
  *((_QWORD *)&v42 + 1) = ((_DWORD)v41 + 1779628981) ^ 0xAEu;
  *(_QWORD *)&v42 = (v41 - 0x3AD54BB795ED044BLL) ^ 0xA3BDBE607FFD5600;
  v43 = (v42 >> 8) + ((v41 - 0x3AD54BB795ED044BLL) ^ 0xF4220279A34A0B3BLL);
  *((_QWORD *)&v42 + 1) = (v41 - 0x3AD54BB795ED044BLL) ^ 0x14220279A34A0B3BLL;
  *(_QWORD *)&v42 = 0x3AD54BB795ED044ALL - v41;
  v44 = v43 ^ (v42 >> 61);
  *((_QWORD *)&v42 + 1) = v43 ^ 0x77777777;
  *(_QWORD *)&v42 = v43 ^ STACK[0x310];
  v45 = (v44 ^ 0x50D4D0E13CBD7177) + (v42 >> 8);
  *((_QWORD *)&v42 + 1) = v44 ^ 0x10D4D0E13CBD7177;
  *(_QWORD *)&v42 = v44 ^ 0x4000000000000000;
  v46 = v45 - 0x1F51B95552FF9478 - ((2 * v45) & 0xC15C8D555A00D710);
  v47 = (v42 >> 61) - 0x1F51B95552FF9478 - ((2 * (v42 >> 61)) & 0xC15C8D555A00D710);
  v48 = v47 ^ v46;
  *((_QWORD *)&v42 + 1) = v47 ^ v46 ^ 0x5D7DAAEED85A300;
  *(_QWORD *)&v42 = v47 ^ ~v46;
  v49 = v42 >> 61;
  *((_QWORD *)&v42 + 1) = v46 ^ 0x88888888;
  *(_QWORD *)&v42 = v46 ^ 0xE0AE46AAAD006B00;
  v50 = ((v42 >> 8) ^ 0xE5D7DAAEED85A3) + (v48 ^ 0xE5D7DAAEED85A300);
  v51 = v50 + 0x10403D7B4A876456 - ((2 * v50) & 0x20807AF6950EC8ACLL);
  v52 = v51 ^ (v49 + 0x10403D7B4A876456 - ((2 * v49) & 0x20807AF6950EC8ACLL));
  *((_QWORD *)&v42 + 1) = v51 ^ 0x7B;
  *(_QWORD *)&v42 = v51 ^ 0x9EC5A400B2246D00;
  v53 = (v52 ^ 0x8E85997BF8A3092DLL) + (v42 >> 8);
  *((_QWORD *)&v42 + 1) = v52 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v42 = v52 ^ 0x8000000000000000;
  v54 = v53 + 0x59F7C862EF6C1534 - ((2 * v53) & 0xB3EF90C5DED82A68);
  v55 = ((v42 >> 61) + 0x59F7C862EF6C1534 - ((2 * (v42 >> 61)) & 0xB3EF90C5DED82A68)) ^ v54;
  *((_QWORD *)&v42 + 1) = v54 ^ 0x65;
  *(_QWORD *)&v42 = v54 ^ 0x94FED7752F43CB00;
  v56 = (v42 >> 8)
      + (v55 ^ 0xCD091F17C02FDE51)
      - 0x725713C2276884B5
      - ((2 * ((v42 >> 8) + (v55 ^ 0xCD091F17C02FDE51))) & 0x1B51D87BB12EF696);
  *((_QWORD *)&v42 + 1) = v55 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v42 = v55 ^ 0xC000000000000000;
  v57 = ((v42 >> 61) - 0x725713C2276884B5 - ((2 * (v42 >> 61)) & 0x1B51D87BB12EF696)) ^ v56;
  *((_QWORD *)&v42 + 1) = v56 ^ 0x29;
  *(_QWORD *)&v42 = v56 ^ 0xEF22506F51DC9C00;
  v58 = (v57 ^ 0x628ABC52894BE762) + (v42 >> 8);
  *((_QWORD *)&v42 + 1) = v57 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v42 = v57 ^ 0x6000000000000000;
  v59 = v58 ^ 0x67ABA069AC6DE1DCLL ^ ((v42 >> 61) - ((2 * (v42 >> 61)) & 0x7AD678D527CD8D7ALL) + 0x3D6B3C6A93E6C6BDLL);
  *((_QWORD *)&v42 + 1) = v58 ^ 0x61;
  *(_QWORD *)&v42 = v58 ^ 0x5AC09C033F8B2700;
  v60 = ((v59 + (unint64_t)(v42 >> 8)) ^ 0x1B0BD1982B59C071) >> v38;
  v61 = ((2 * v60) & 0xDD52A86FD9BDBDEALL) + (v60 ^ 0xEEA95437ECDEDEF5);
  STACK[0x5B0] = a31 - 0xFC58F007312F070;
  *(_QWORD *)&v42 = __ROR8__(a31- 0xFC58F007312F070- ((2 * (a31 - 0xFC58F007312F070)) & 0x73BE5A17B4A8FCAELL)- 0x4620D2F425AB81A9, 8);
  v62 = (v42 & 0xF8FFFFFFFFFFFFFFLL ^ 0x50B9DF2D0BDA547ELL)
      + 0x6654BA01176D5C84
      + ((2 * (v42 & 0xF8FFFFFFFFFFFFFFLL ^ 0x50B9DF2D0BDA547ELL) + 0x55E7EF06772DD764) & 0x72C184FBB7ACE1A2 ^ 0xFBFFFFFFFFFFFFFFLL);
  v63 = ((2 * (((v62 >> 8) ^ 0x2EBC0D88A5736) + (v62 ^ 0x55747CC156E06BE8))) & 0xE61EFA53D6BD2E7ELL)
      + ((((v62 >> 8) ^ 0x2EBC0D88A5736) + (v62 ^ 0x55747CC156E06BE8)) ^ 0x730F7D29EB5E973FLL);
  *((_QWORD *)&v42 + 1) = v62 ^ 0x15747CC156E06BE8;
  *(_QWORD *)&v42 = v62 ^ 0x4000000000000000;
  v64 = v63
      - 0x730F7D29EB5E973FLL
      + ((v62 << 56) ^ 0x7D00000000000000)
      + 0x2C8B30B314EBF6D9
      - 2
      * ((v63 - 0x730F7D29EB5E973FLL + ((v62 << 56) ^ 0x7D00000000000000)) & 0x2C8B30B314EBF6FFLL ^ (v63 - 0x730F7D29EB5E973FLL) & 0x26);
  v65 = v64 ^ ((v42 >> 61) + 0x2C8B30B314EBF6D9 - ((2 * (v42 >> 61)) & 0x5916616629D7EDB2));
  v64 >>= 8;
  *((_QWORD *)&v42 + 1) = v64 ^ 0x151837F;
  *(_QWORD *)&v42 = v64 ^ 0xFF8738D2E8000000;
  v66 = v42 >> 27;
  *((_QWORD *)&v42 + 1) = v66 ^ 0x1FFF6CE657;
  *(_QWORD *)&v42 = v66 ^ 0x6F3ABF0000000000;
  v67 = ((((v42 >> 37) | (v63 << 56)) - 0x3F00000000000000) ^ 0x7700000000000000) + (v65 ^ 0x50D4D0E13CBD7177);
  v68 = v67 - 0x13BAE24794902E26 - ((2 * v67) & 0xD88A3B70D6DFA3B4);
  *((_QWORD *)&v42 + 1) = v65 ^ 0x10D4D0E13CBD7177;
  *(_QWORD *)&v42 = v65 ^ 0x4000000000000000;
  v69 = (v42 >> 61) - 0x13BAE24794902E26 - ((2 * (v42 >> 61)) & 0xD88A3B70D6DFA3B4);
  *((_QWORD *)&v42 + 1) = v68 ^ 0xDA;
  *(_QWORD *)&v42 = v68 ^ 0xEC451DB86B6FD100;
  v70 = ((v42 >> 8) ^ 0xE5D7DAAEED85A3) + (v68 ^ v69 ^ 0xE5D7DAAEED85A300);
  *((_QWORD *)&v42 + 1) = v68 ^ v69 ^ 0x5D7DAAEED85A300;
  *(_QWORD *)&v42 = v68 ^ ~v69;
  v71 = v70 ^ (v42 >> 61);
  *((_QWORD *)&v42 + 1) = v70 ^ 0x2D;
  *(_QWORD *)&v42 = v70 ^ 0x8E85997BF8A30900;
  v72 = (v42 >> 8)
      + (v71 ^ 0x8E85997BF8A3092DLL)
      + 0x362CD7C7AD6F7957
      - ((2 * ((v42 >> 8) + (v71 ^ 0x8E85997BF8A3092DLL))) & 0x6C59AF8F5ADEF2AELL);
  *((_QWORD *)&v42 + 1) = v71 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v42 = v71 ^ 0x8000000000000000;
  v73 = ((v42 >> 61) + 0x362CD7C7AD6F7957 - ((2 * (v42 >> 61)) & 0x6C59AF8F5ADEF2AELL)) ^ v72;
  *((_QWORD *)&v42 + 1) = v72 ^ 6;
  *(_QWORD *)&v42 = v72 ^ 0xFB25C8D06D40A700;
  v74 = (v73 ^ 0xCD091F17C02FDE51)
      + (v42 >> 8)
      + 0x78B464CF0CD9B633
      - ((2 * ((v73 ^ 0xCD091F17C02FDE51) + (v42 >> 8))) & 0xF168C99E19B36C66);
  *((_QWORD *)&v42 + 1) = v73 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v42 = v73 ^ 0xC000000000000000;
  v75 = ((v42 >> 61) + 0x78B464CF0CD9B633 - ((2 * (v42 >> 61)) & 0xF168C99E19B36C66)) ^ v74;
  *((_QWORD *)&v42 + 1) = v74 ^ 0x51;
  *(_QWORD *)&v42 = v74 ^ 0x1A3ED89D85925100;
  v76 = (v75 ^ 0x628ABC52894BE762) + (v42 >> 8);
  *((_QWORD *)&v42 + 1) = v75 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v42 = v75 ^ 0x6000000000000000;
  v77 = v76 - 0x40848C5316D529E4 - ((2 * v76) & 0x7EF6E759D255AC38);
  v78 = ((v42 >> 61) - 0x40848C5316D529E4 - ((2 * (v42 >> 61)) & 0x7EF6E759D255AC38)) ^ 0x5AC09C033F8B2761 ^ v77;
  *((_QWORD *)&v42 + 1) = v77 ^ 0x7D;
  *(_QWORD *)&v42 = v77 ^ 0xE5BBEFAFD6A1F100;
  v79 = v78 + (v42 >> 8);
  v80 = ((2 * ((v79 ^ 0x1B0BD1982B59C071uLL) >> v38)) & 0xBF6BFD6DFF39EDB6)
      + (((v79 ^ 0x1B0BD1982B59C071uLL) >> v38) ^ 0xDFB5FEB6FF9CF6DBLL);
  v81 = v61 + 0x1156ABC81321210BLL + ((v79 ^ 0x30BD1982B59C071) << (v38 ^ 0x3Au) << 6);
  *(_QWORD *)&v42 = __ROR8__(a31- 0xFC58F007312F068- ((2 * (a31 - 0xFC58F007312F068)) & 0x49DFA00C4EB72F12)+ 0x24EFD006275B9789, 8);
  v82 = (v42 & 0xF8FFFFFFFFFFFFFFLL ^ 0x8824EFD006275B97)
      - ((2 * (v42 & 0xF8FFFFFFFFFFFFFFLL ^ 0x8824EFD006275B97) + 0x55E7EF06772DD764) & 0xC2F9A1F09D6C1EF4);
  *((_QWORD *)&v42 + 1) = ((v42 ^ 0x6275B97)
                         - ((2 * (v42 ^ 0x6275B97) + 1999492964) & 0x9D6C1EF4)
                         - 1974666452) ^ 0xD6;
  *(_QWORD *)&v42 = (v82 + 0xC70C87B8A4CFB2CLL) ^ 0xD8F7D25D1F374900;
  v83 = v81 - 2 * (v81 & 0x2C2EF5E0E831ABBBLL ^ (v61 + 0x1156ABC81321210BLL) & 8) - 0x53D10A1F17CE544DLL;
  v84 = (v42 >> 8) + ((v82 + 0xC70C87B8A4CFB2CLL) ^ 0x8F686E44C3801443);
  v85 = v84 + 0x53D5A9A4F7104CCELL - ((2 * v84) & 0xA7AB5349EE20999CLL);
  *((_QWORD *)&v42 + 1) = (v82 + 0xC70C87B8A4CFB2CLL) ^ 0xF686E44C3801443;
  *(_QWORD *)&v42 = v82 + a15;
  v86 = v85 ^ ((v42 >> 61) + 0x53D5A9A4F7104CCELL - ((2 * (v42 >> 61)) & 0xA7AB5349EE20999CLL));
  *((_QWORD *)&v42 + 1) = v85 ^ 0xB9;
  *(_QWORD *)&v42 = v85 ^ 0x3017945CBAD3D00;
  v87 = (v86 ^ 0x50D4D0E13CBD7177)
      + (v42 >> 8)
      - 0x6751EFEBAF099DF2
      - ((2 * ((v86 ^ 0x50D4D0E13CBD7177) + (v42 >> 8))) & 0x315C2028A1ECC41CLL);
  *((_QWORD *)&v42 + 1) = v86 ^ 0x10D4D0E13CBD7177;
  *(_QWORD *)&v42 = v86 ^ 0x4000000000000000;
  v88 = (v42 >> 61) - 0x6751EFEBAF099DF2 - ((2 * (v42 >> 61)) & 0x315C2028A1ECC41CLL);
  *((_QWORD *)&v42 + 1) = v87 ^ 0xE;
  *(_QWORD *)&v42 = v87 ^ 0x98AE101450F66200;
  v89 = ((v42 >> 8) ^ 0xE5D7DAAEED85A3) + (v88 ^ v87 ^ 0xE5D7DAAEED85A300);
  v90 = v89 - 0x397ED4CC7EA152F8 - ((2 * v89) & 0x8D02566702BD5A10);
  *((_QWORD *)&v42 + 1) = v88 ^ v87 ^ 0x5D7DAAEED85A300;
  *(_QWORD *)&v42 = v88 ^ ~v87;
  v91 = v90 ^ ((v42 >> 61) - 0x397ED4CC7EA152F8 - ((2 * (v42 >> 61)) & 0x8D02566702BD5A10));
  *((_QWORD *)&v42 + 1) = v90 ^ 0x25;
  *(_QWORD *)&v42 = v90 ^ 0x4804B24879FDA400;
  v92 = (v91 ^ 0x8E85997BF8A3092DLL) + (v42 >> 8);
  *((_QWORD *)&v42 + 1) = v91 ^ 0xE85997BF8A3092DLL;
  *(_QWORD *)&v42 = v91 ^ 0x8000000000000000;
  v93 = v92 ^ (v42 >> 61);
  *((_QWORD *)&v42 + 1) = v92 ^ 0x51;
  *(_QWORD *)&v42 = v92 ^ 0xCD091F17C02FDE00;
  v94 = (v42 >> 8) + (v93 ^ 0xCD091F17C02FDE51);
  *((_QWORD *)&v42 + 1) = v93 ^ 0xD091F17C02FDE51;
  *(_QWORD *)&v42 = v93 ^ 0xC000000000000000;
  v95 = v94 ^ (v42 >> 61);
  *((_QWORD *)&v42 + 1) = v94 ^ v34;
  *(_QWORD *)&v42 = v94 ^ a16;
  v96 = (v42 >> 8) + (v95 ^ 0x628ABC52894BE762);
  *((_QWORD *)&v42 + 1) = v95 ^ 0x28ABC52894BE762;
  *(_QWORD *)&v42 = v95 ^ 0x6000000000000000;
  v97 = v96 ^ 0xD2483A4AE6BB76 ^ ((v42 >> 61) - ((2 * (v42 >> 61)) & 0x1C25A872EADB382ELL) + 0xE12D439756D9C17);
  *((_QWORD *)&v42 + 1) = v96 ^ 1;
  *(_QWORD *)&v42 = v96 ^ 0x5AC09C033F8B2700;
  v98 = v80
      + (((v97 + (unint64_t)(v42 >> 8)) ^ 0x30BD1982B59C071) << (v38 ^ 0x3Au) << 6)
      + 0x204A014900630925;
  v99 = v98 - ((2 * v98) & 0x97BC496DC1746752) + 0x4BDE24B6E0BA33A9;
  v100 = ((v99 >> 24) ^ 0xFFFFFFE0)
       - 2 * (((v99 >> 24) ^ 0xFFFFFFE0) & 0x65 ^ (v99 >> 24) & 4);
  v101 = (HIBYTE(v83) ^ 0xFFFFFFAC) - 2 * ((HIBYTE(v83) ^ 0xFFFFFFAC) & 7);
  v102 = ((v83 >> 16) ^ 0x31) - ((2 * ((v83 >> 16) ^ 0x31)) & 0xFFFFFFD4);
  v103 = ((v83 >> 40) ^ 0xFFFFFFF5) - ((2 * ((v83 >> 40) ^ 0xFFFFFFF5)) & 0x78);
  v104 = ((v99 >> 8) ^ 0x33) + (~(2 * ((v99 >> 8) ^ 0x33)) | 0xFFFFFFBF);
  v105 = (HIWORD(v99) ^ 0xFFFFFFDE) - ((2 * (HIWORD(v99) ^ 0xFFFFFFDE)) & 0x30);
  v106 = (LODWORD(STACK[0x5D0]) - 772);
  v107 = v106 ^ ((4 * LODWORD(STACK[0x5D8])) | (8 * LODWORD(STACK[0x5D8])));
  LODWORD(STACK[0x47C]) = ((v83 >> 24) ^ 0xFFFFFFE8) - ((2 * ((v83 >> 24) ^ 0xFFFFFFE8)) & 0xFFFFFF87) - 61;
  LODWORD(STACK[0x474]) = ((v83 >> 8) ^ 0xFFFFFFAB) - ((2 * ((v83 >> 8) ^ 0xFFFFFFAB)) & 0x7A) + 61;
  LODWORD(STACK[0x484]) = (HIDWORD(v83) ^ 0xFFFFFFE0) - 2 * ((HIDWORD(v83) ^ 0xFFFFFFE0) & 0x33 ^ BYTE4(v83) & 3) + 48;
  LODWORD(STACK[0x45C]) = v61 - ((2 * v61 + 22) & 0xFFFFFF9A) - 40;
  LODWORD(STACK[0x460]) = v100 - 31;
  LODWORD(STACK[0x464]) = v101 + 7;
  LODWORD(STACK[0x454]) = v102 + 106;
  LODWORD(STACK[0x46C]) = v103 + 60;
  LODWORD(STACK[0x488]) = v80 - ((2 * v80 + 74) & 0xFFFFFFE0) - 107;
  LODWORD(STACK[0x470]) = (HIDWORD(v99) ^ 0xFFFFFFB6) - ((2 * (HIDWORD(v99) ^ 0xFFFFFFB6)) & 0x7A) + 61;
  LODWORD(STACK[0x48C]) = ((v99 >> 16) ^ 0xFFFFFFBA) - ((2 * ((v99 >> 16) ^ 0xFFFFFFBA)) & 0x60) - 80;
  LODWORD(STACK[0x450]) = HIBYTE(v99) ^ 0xFFFFFFCB;
  LODWORD(STACK[0x458]) = ((v99 >> 40) ^ v35) - ((2 * ((v99 >> 40) ^ v35)) & 0x1FFFFD6) + 107;
  LODWORD(STACK[0x480]) = v104 + 33;
  LODWORD(STACK[0x478]) = v105 - 104;
  LODWORD(STACK[0x468]) = (HIWORD(v83) ^ 0x2E) - 2 * ((HIWORD(v83) ^ 0x2E) & 0xF) + 15;
  return ((uint64_t (*)(unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x4D0] + 8 * (int)v107) - 8))(v100, v104, v101, v102, v105, v107, v103, v106, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1CF32EECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20,unsigned int a21)
{
  int v21;
  uint64_t v22;
  _BOOL4 v23;
  unsigned int v24;
  int v25;
  _BOOL4 v26;

  v23 = a21 < a20;
  v24 = LODWORD(STACK[0x2FC]) - 1927216537;
  v25 = v23 ^ (v24 < ((v21 - 24896062) & 0x17BE1FFu) - 664795841);
  v26 = v24 < a21;
  if (!v25)
    v23 = v26;
  STACK[0x300] += 16;
  return (*(uint64_t (**)(void))(v22 + 8 * ((168 * !v23) ^ v21)))();
}

void sub_1CF32EF5C()
{
  int v0;

  LODWORD(STACK[0x32C]) = 15;
  LODWORD(STACK[0x404]) = 82;
  LODWORD(STACK[0x444]) = STACK[0x454];
  LODWORD(STACK[0x2FC]) = v0;
  LODWORD(STACK[0x440]) = STACK[0x488];
  LODWORD(STACK[0x42C]) = STACK[0x458];
  LODWORD(STACK[0x41C]) = STACK[0x460];
  LODWORD(STACK[0x428]) = STACK[0x46C];
  LODWORD(STACK[0x424]) = STACK[0x450];
  LODWORD(STACK[0x418]) = STACK[0x470];
  LODWORD(STACK[0x420]) = STACK[0x48C];
  LODWORD(STACK[0x434]) = STACK[0x464];
  LODWORD(STACK[0x414]) = STACK[0x478];
  LODWORD(STACK[0x43C]) = STACK[0x474];
  LODWORD(STACK[0x40C]) = STACK[0x47C];
  LODWORD(STACK[0x410]) = STACK[0x480];
  LODWORD(STACK[0x438]) = STACK[0x45C];
  LODWORD(STACK[0x408]) = STACK[0x484];
  LODWORD(STACK[0x430]) = STACK[0x468];
  JUMPOUT(0x1CF32D0DCLL);
}

uint64_t sub_1CF32F088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36,int a37,int a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,int a50,int a51,int a52,int a53,int a54,int a55,int a56,int a57,int a58,int a59)
{
  int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  int v63;
  uint64_t v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  int v94;
  int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  int v110;
  unint64_t v111;
  int v112;
  unint64_t v113;
  int v114;
  int v115;
  int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  unint64_t v121;
  int v122;
  uint64_t v123;
  int v124;
  unsigned int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;

  v65 = (STACK[0x4B0] - 869) | 0x358;
  LODWORD(STACK[0x5D8]) = v65;
  v66 = a49 + a55 * v59;
  v67 = a50 + (v65 - 501) * (v66 - 69);
  v68 = a51 + 91 * (v67 - 127);
  v69 = a48 - 81 * (v68 - 51);
  v70 = a36 - 79 * v69;
  v71 = a53 + 79 * v70;
  v72 = a35 + 85 * (v71 - 106);
  LODWORD(v135) = v72 + 17;
  v73 = a57 - 97 * (v72 + 17);
  v74 = a37 - 73 * (v73 - 38);
  LODWORD(v136) = v74 + 99;
  v75 = a52 + 105 * (v74 + 99);
  v76 = a38 - (v75 + 61) + 32 * (v75 + 61);
  HIDWORD(v136) = v76 + 26;
  v77 = a59 - 123 * (v76 + 26);
  v78 = a54 - 89 * (v77 - 117);
  LODWORD(STACK[0x5C8]) = v78;
  v79 = a58 + 39 * (v78 - 50);
  LODWORD(STACK[0x5D0]) = v79;
  v80 = a56 + 43 * (v79 - 104);
  LODWORD(STACK[0x5C0]) = v80;
  v81 = (LODWORD(STACK[0x2B4]) ^ 0xFFFFFFCB)
      + 123 * (v80 + 15)
      + 44
      + (~(2 * ((LODWORD(STACK[0x2B4]) ^ 0xFFFFFFCB) + 123 * (v80 + 15) + 44)) | 0x69)
      - 52;
  v82 = LODWORD(STACK[0x2E4]) ^ 0x25;
  LODWORD(STACK[0x2B4]) = v81;
  v83 = v82 - 37 * (v81 ^ 0xFFFFFFCB) - ((2 * (v82 - 37 * (v81 ^ 0xFFFFFFCB))) & 0x4A) + 37;
  v84 = LODWORD(STACK[0x2C8]) ^ 0xFFFFFF9A;
  LODWORD(STACK[0x2E4]) = v83;
  v85 = v84 + 93 * (v83 ^ 0x25) - ((2 * (v84 + 93 * (v83 ^ 0x25))) & 0x34) - 102;
  v86 = LODWORD(STACK[0x2EC]) ^ 0xFFFFFFC1;
  LODWORD(STACK[0x2C8]) = v85;
  v87 = v86 + 77 * (v85 ^ 0xFFFFFF9A) - ((2 * (v86 + 77 * (v85 ^ 0xFFFFFF9A))) & 0xFFFFFF83) - 63;
  v88 = LODWORD(STACK[0x2B8]) ^ 0xFFFFFFDC;
  LODWORD(STACK[0x2EC]) = v87;
  v89 = v88 - 97 * (v87 ^ 0xFFFFFFC1) - ((2 * (v88 - 97 * (v87 ^ 0xFFFFFFC1))) & 0xFFFFFFB8) - 36;
  v90 = LODWORD(STACK[0x2E8]) ^ 0xFFFFFF9B;
  LODWORD(STACK[0x2B8]) = v89;
  v91 = v90 - 29 * (v89 ^ 0xFFFFFFDC) + (~(2 * (v90 - 29 * (v89 ^ 0xFFFFFFDC))) | 0xFFFFFFC9) - 100;
  v92 = LODWORD(STACK[0x2BC]) ^ 0x46;
  LODWORD(STACK[0x2E8]) = v91;
  v93 = v92 - 109 * (v91 ^ 0xFFFFFF9B) - ((2 * (v92 - 109 * (v91 ^ 0xFFFFFF9B))) & 0xFFFFFF8C) + 70;
  v94 = LODWORD(STACK[0x2DC]) ^ 0x4F;
  LODWORD(STACK[0x2BC]) = v93;
  v95 = v94 + 51 * (v93 ^ 0x46) + (~(2 * (v94 + 51 * (v93 ^ 0x46))) | 0x61) + 80;
  v96 = LODWORD(STACK[0x2D8]) ^ 0x5D;
  LODWORD(STACK[0x2DC]) = v95;
  v97 = v96 + 75 * (v95 ^ 0x4F) - ((2 * (v96 + 75 * (v95 ^ 0x4F))) & 0xFFFFFFBA) + 93;
  v98 = LODWORD(STACK[0x2CC]) ^ 0xFFFFFF96;
  LODWORD(STACK[0x2D8]) = v97;
  v99 = v98 - 43 * (v97 ^ 0x5D) - ((2 * (v98 - 43 * (v97 ^ 0x5D))) & 0x2C) - 106;
  v100 = LODWORD(STACK[0x2C0]) ^ 0xFFFFFF8B;
  LODWORD(STACK[0x2CC]) = v99;
  v101 = v100 - 103 * (v99 ^ 0xFFFFFF96) - ((2 * (v100 - 103 * (v99 ^ 0xFFFFFF96))) & 0x16) - 117;
  v102 = LODWORD(STACK[0x2D0]) ^ 0xFFFFFFED;
  LODWORD(STACK[0x2C0]) = v101;
  v103 = v102 + (v101 ^ 0xFFFFFF8B) * v62 - ((2 * (v102 + (v101 ^ 0xFFFFFF8B) * v62)) & 0xFFFFFFDA) - 19;
  v104 = LODWORD(STACK[0x2E0]) ^ 0x53;
  LODWORD(STACK[0x2D0]) = v103;
  v105 = v104 - 21 * (v103 ^ 0xFFFFFFED) - ((2 * (v104 - 21 * (v103 ^ 0xFFFFFFED))) & 0xFFFFFFA6) + 83;
  v106 = LODWORD(STACK[0x2C4]) ^ 0xFFFFFFE3;
  LODWORD(STACK[0x2E0]) = v105;
  v107 = v106 + 77 * (v105 ^ 0x53) - ((2 * (v106 + 77 * (v105 ^ 0x53))) & 0xFFFFFFC7) - 29;
  v108 = LODWORD(STACK[0x2D4]) ^ 0x63;
  LODWORD(STACK[0x2C4]) = v107;
  v109 = v108 - 21 * (v107 ^ 0xFFFFFFE3) - ((2 * (v108 - 21 * (v107 ^ 0xFFFFFFE3))) & 0xFFFFFFC7) + 99;
  LODWORD(STACK[0x2D4]) = v109;
  v110 = 65 * (v109 ^ 0x63) + (STACK[0x2F0] ^ 0xFFFFFFFA);
  v111 = v110 - ((2 * v110) & 0xFFFFFFF4) - 6;
  STACK[0x2F0] = v111;
  v112 = a55 - 39 * (v111 ^ 0xFFFFFFFA);
  v113 = v61 ^ STACK[0x320];
  LODWORD(v111) = (v113 >> 40) ^ (v67 + 120) ^ 0x67;
  v114 = v111 - ((2 * v111) & 0x34);
  LODWORD(v111) = (v66 + 114) ^ 0x72 ^ HIWORD(v113);
  v115 = v111 - ((2 * v111) & 0x4A);
  v116 = (v69 ^ (v113 >> 24) ^ 0x38) - 2 * ((v69 ^ (v113 >> 24) ^ 0x38) & 0x5F ^ (v69 ^ (v113 >> 24)) & 3);
  v117 = ((v112 - 37) ^ HIBYTE(v113) ^ 0x31)
       - 2 * (((v112 - 37) ^ HIBYTE(v113) ^ 0x31) & 0x4F ^ ((v112 - 37) ^ HIBYTE(v113)) & 4);
  v118 = ((126 - v68) ^ HIDWORD(v113)) - ((2 * ((126 - v68) ^ HIDWORD(v113))) & 0xFFFFFF83);
  HIDWORD(v135) = v70;
  LODWORD(v111) = (v113 >> 16) ^ (v70 - 118) ^ 9;
  v119 = v111 - (v63 & (2 * v111));
  v120 = (v113 ^ (v72 - 9) ^ 0xFFFFFFD6) + (~(2 * (v113 ^ (v72 - 9) ^ 0xFFFFFFD6)) | 0x61);
  v121 = v60 ^ STACK[0x318];
  LODWORD(v111) = (v121 >> 40) ^ (v75 - 29) ^ 0x62;
  v122 = v111 - ((2 * v111) & 0x16);
  v123 = ((v71 + 99) ^ (v113 >> 8) ^ 0x12)
       - 2 * (((v71 + 99) ^ (v113 >> 8) ^ 0x12) & 0x47 ^ ((v71 + 99) ^ (v113 >> 8)) & 1);
  LODWORD(v111) = HIBYTE(v121) ^ (v73 - 113) ^ 0x11;
  v124 = v111 - ((2 * v111) & 0xFFFFFFBA);
  LODWORD(v111) = HIWORD(v121) ^ (v74 + 24) ^ 0xF;
  v125 = ((v76 - 23) ^ HIDWORD(v121) ^ 0xFFFFFFEC)
       - 2 * (((v76 - 23) ^ HIDWORD(v121) ^ 0xFFFFFFEC) & 0x6F ^ ((v76 - 23) ^ HIDWORD(v121)) & 2);
  v126 = (v121 >> 24) ^ (v77 + 13) ^ 0xD;
  v127 = (v121 >> 16) ^ (LODWORD(STACK[0x5C8]) + 118) ^ 0xFFFFFFED;
  v128 = (v121 >> 8) ^ (LODWORD(STACK[0x5D0]) + 69) ^ 0xFFFFFF9F;
  v129 = (v121 ^ (LODWORD(STACK[0x5C0]) - 45) ^ 0xFFFFFFC5)
       - ((2 * (v121 ^ (LODWORD(STACK[0x5C0]) - 45) ^ 0xFFFFFFC5)) & 0xFFFFFFF4);
  LODWORD(v113) = LODWORD(STACK[0x5D8]) - 407;
  v130 = (v114 - 102);
  v131 = v118 - 63;
  v132 = (v122 - 117);
  v133 = (v123 + 70);
  STACK[0x538] = (v115 + 37);
  LODWORD(v142) = v115 + 37;
  STACK[0x568] = v132;
  STACK[0x590] = v126 - ((2 * v126) & 0xFFFFFFA6) + 83;
  LODWORD(v141) = v126 - ((2 * v126) & 0xFFFFFFA6) + 83;
  STACK[0x5C0] = (v119 - 101);
  HIDWORD(v140) = v119 - 101;
  HIDWORD(v141) = v129 - 6;
  STACK[0x5D8] = (v129 - 6);
  STACK[0x5D0] = v133;
  HIDWORD(v139) = v125 - 19;
  LODWORD(v140) = v127 - ((2 * v127) & 0xFFFFFFC7) - 29;
  STACK[0x540] = v131;
  LODWORD(v137) = v118 - 63;
  HIDWORD(v137) = v128 - ((2 * v128) & 0xFFFFFFC7) + 99;
  STACK[0x5C8] = v140;
  STACK[0x548] = v130;
  LODWORD(v138) = v111 - ((2 * v111) & 0x2C) - 106;
  HIDWORD(v138) = v117 - 53;
  LODWORD(v139) = v120 + 80;
  STACK[0x5A0] = HIDWORD(v137);
  STACK[0x570] = (v124 + 93);
  HIDWORD(v142) = v116 - 36;
  STACK[0x598] = (v116 - 36);
  LODWORD(STACK[0x5B8]) = v117 - 53;
  return ((uint64_t (*)(unint64_t, _QWORD, unint64_t, unint64_t, unint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 + 8 * (int)((((v113 ^ 0x5CF) + 396) * (LODWORD(STACK[0x404]) == 82)) ^ v113)) - (((_DWORD)v113 - 1579193354) & 0x5E209677) + 1099))(v130, v125 - 19, v132, v131, v133, (v120 + 80), v125 - 19, v123, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           v135,
           v136,
           a39,
           v137,
           v138,
           v139,
           v140,
           v141,
           v142);
}

#error "1CF3306F8: call analysis failed (funcsize=164)"

uint64_t sub_1CF3306FC(int a1, char a2, unint64_t a3, int a4, int a5, unint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,unsigned __int8 *a52,unsigned __int8 *a53,unsigned __int8 *a54,unsigned __int8 *a55,unsigned __int8 *a56,unsigned __int8 *a57,unsigned __int8 *a58,unsigned __int8 *a59,unsigned __int8 *a60,unsigned __int8 *a61,unsigned __int8 *a62,int a63)
{
  unsigned __int8 *a64;
  unsigned __int8 *a65;
  unsigned __int8 *a66;
  unsigned __int8 *a67;
  unsigned __int8 *a68;
  int v68;
  char v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  int v74;
  int v75;
  int v76;
  unint64_t v77;
  int v78;
  int v79;
  uint64_t v80;
  int v81;
  int v82;
  char *v83;
  int v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  int v93;
  int v94;
  uint64_t v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  unsigned int v103;
  unint64_t v104;
  uint64_t v105;
  char *v106;
  int v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t (*v113)(void);

  v73 = STACK[0x320];
  LODWORD(STACK[0x438]) ^= HIBYTE(STACK[0x320]) ^ 0xFFFFFFD7 ^ *a67;
  LODWORD(STACK[0x43C]) ^= HIWORD(v73) ^ 0x56 ^ *a68;
  v74 = a63 ^ LODWORD(STACK[0x40C]) ^ *a64;
  LODWORD(STACK[0x444]) ^= (v73 >> 40) ^ v68 ^ *a66;
  v75 = (v73 >> 24) ^ LODWORD(STACK[0x408]) ^ *a65;
  LODWORD(STACK[0x428]) ^= (v73 >> 16) ^ 0x6B ^ *a60;
  v76 = a1 + 546;
  LODWORD(STACK[0x430]) ^= (v73 >> 8) ^ (a1 + 546) ^ 0x6E ^ *a62;
  LODWORD(STACK[0x434]) ^= v73 ^ a5 ^ *a61;
  v77 = STACK[0x318];
  LODWORD(STACK[0x440]) ^= HIBYTE(STACK[0x318]) ^ 0xFFFFFFD7 ^ *a58;
  LODWORD(STACK[0x410]) ^= HIWORD(v77) ^ 0x56 ^ *a59;
  LODWORD(STACK[0x420]) ^= (v77 >> 40) ^ v68 ^ *a57;
  v78 = HIDWORD(v77) ^ LODWORD(STACK[0x41C]) ^ *a56;
  LODWORD(STACK[0x42C]) ^= (v77 >> 16) ^ 0x6B ^ *a54;
  v79 = (v77 >> 24) ^ LODWORD(STACK[0x418]) ^ *a55;
  LODWORD(STACK[0x414]) ^= (v77 >> 8) ^ 0xFFFFFFC6 ^ *a53;
  LODWORD(STACK[0x40C]) = v74 ^ 2;
  LODWORD(STACK[0x408]) = v75 ^ 0x7E;
  LODWORD(STACK[0x41C]) = v78 ^ 2;
  LODWORD(STACK[0x418]) = v79 ^ 0x7E;
  v80 = (LODWORD(STACK[0x2FC]) - 1262421197);
  STACK[0x448] -= v80;
  STACK[0x300] -= v80;
  LODWORD(STACK[0x424]) ^= v77 ^ a5 ^ *a52;
  LODWORD(STACK[0x2FC]) = 1262421197;
  LODWORD(v80) = (v72 ^ 0x9A) - 55460167 - ((2 * (v72 ^ 0x9A)) & 0x172);
  LODWORD(STACK[0x560]) = a1 + 696;
  LODWORD(STACK[0x558]) = (a1 + 546) ^ 0x23E;
  LODWORD(v77) = ~(a7 ^ (a1 - 72))
               + 1543899305
               - ((((a1 + 546) ^ 0x23E) - 836) & (2 * ~(a7 ^ (a1 - 72))));
  v81 = (a3 ^ 0x9B) - 1818858422 + (~(2 * (a3 ^ 0x9B)) | 0xFFFFFECF);
  v82 = (a6 ^ v68) - 384245682 - ((2 * (a6 ^ v68)) & 0x9C);
  v83 = (char *)*(&off_1E8C4D9A0 + a1 - 1132) - 12;
  v84 = ((a4 ^ 0x1C) + 12) ^ *(_QWORD *)&v83[8 * (a4 ^ 0xCB)] ^ *(_QWORD *)&v83[8
                                                                                               * (v71 ^ v69)] ^ ((v71 ^ 0xF3) - ((2 * (v71 ^ 0xF3) + 24) & 0xCA) + 241) ^ 0xFFFFFFE5;
  LOBYTE(v84) = a4 ^ a2 ^ (v84 - ((2 * v84) & 0x60) + 48);
  LODWORD(STACK[0x5B8]) = a4;
  LOBYTE(v84) = (v84 + (~(2 * v84) | 0x69) - 52) ^ a4;
  LOBYTE(v84) = (v84 + (~(2 * v84) | 0xB5) + 38) ^ v71;
  STACK[0x548] = v72;
  LOBYTE(v84) = (v84 - ((2 * v84) & 0x34) - 102) ^ v72;
  STACK[0x540] = a7;
  LOBYTE(v84) = (v84 - ((2 * v84) & 0x83) - 63) ^ a7;
  v85 = STACK[0x598];
  LOBYTE(v84) = (v84 + (~(2 * v84) | 0x47) - 35) ^ STACK[0x598];
  STACK[0x5C0] = a3;
  LOBYTE(v84) = (v84 - ((2 * v84) & 0x36) - 101) ^ a3;
  v86 = STACK[0x5D0];
  LOBYTE(v84) = (v84 - ((2 * v84) & 0x8C) + 70) ^ STACK[0x5D0];
  STACK[0x5B0] = a6;
  LOBYTE(v84) = (v84 + (~(2 * v84) | 0x61) + 80) ^ a6;
  v87 = STACK[0x570];
  LOBYTE(v84) = (v84 - ((2 * v84) & 0xBA) + 93) ^ STACK[0x570];
  v88 = STACK[0x568];
  LOBYTE(v84) = (v84 - ((2 * v84) & 0x16) - 117) ^ STACK[0x568];
  STACK[0x580] = v70;
  LOBYTE(v84) = (v84 - ((2 * v84) & 0xDA) - 19) ^ v70;
  v89 = STACK[0x590];
  LOBYTE(v84) = (v84 - ((2 * v84) & 0xA6) + 83) ^ STACK[0x590];
  v90 = STACK[0x5A0];
  LOBYTE(v84) = (v84 - ((2 * v84) & 0xC7) + 99) ^ STACK[0x5A0];
  v91 = STACK[0x5C8];
  LOBYTE(v84) = (v84 - ((2 * v84) & 0xC7) - 29) ^ STACK[0x5C8];
  v92 = STACK[0x5D8];
  LOBYTE(v84) = (v84 + (~(2 * v84) | 0xB) - 5) ^ STACK[0x5D8];
  v93 = *(_QWORD *)&v83[8 * (v77 ^ 0x5C0609AA)] ^ ((v77 ^ 0x5C06097D) + 12);
  LOBYTE(v79) = v85 ^ 0x85 ^ ((*(_QWORD *)&v83[8 * (v85 ^ 0xD8)] ^ ((v85 ^ 0xF)
                                                                                   - ((2 * (v85 ^ 0xF) + 24) & 0xCA)
                                                                                   - 15))
                            + (~(2
                               * (*(_QWORD *)&v83[8 * (v85 ^ 0xD8)] ^ ((v85 ^ 0xF)
                                                                                      - ((2 * (v85 ^ 0xF) + 24) & 0xCA)
                                                                                      - 15))) | 0xB7)
                            - 91);
  v94 = ((v80 ^ 0xFCB1BF6C) + 12) ^ v77;
  v95 = *(_QWORD *)&v83[8 * (v80 ^ 0xFCB1BFBB)];
  STACK[0x538] = v71;
  v96 = v94 ^ v95 ^ v79 ^ ((v93 ^ 0x53E7C7E5)
                                          - 2 * ((v93 ^ 0x53E7C7E5) & 0x363921F ^ v93 & 0x18)
                                          - 2090626553) ^ 0x8C825C9F ^ (v71 ^ (v84
                                                                                              - ((2 * v84) & 0x1A)
                                                                                              - 115)) ^ 0x7E;
  v97 = *(_QWORD *)&v83[8 * (v82 ^ 0xE918E149)] ^ ((v82 ^ 0xE918E19E) + 12);
  LODWORD(v95) = v81 + 335;
  v98 = (v70 ^ 0xED) - 1038479246 - ((2 * (v70 ^ 0xED)) & 0x14C) + 308;
  LODWORD(v80) = ((v95 ^ 0x93966C4A) + 12) ^ v80 ^ v82 ^ *(_QWORD *)&v83[8 * (v95 ^ 0x93966C9D)] ^ ((v97 ^ 0x53E7C7E5) + 69226245 - 2 * ((v97 ^ 0x53E7C7E5) & 0x4204F07 ^ v97 & 2)) ^ v86 ^ 0xD0 ^ ((*(_QWORD *)&v83[8 * (v86 ^ 0x40)] ^ ((v86 ^ 0x97) - ((2 * (v86 ^ 0x97) + 24) & 0xCA) - 15)) - ((2 * (*(_QWORD *)&v83[8 * (v86 ^ 0x40)] ^ ((v86 ^ 0x97) - ((2 * (v86 ^ 0x97) + 24) & 0xCA) - 15))) & 0xD2) + 105) ^ 0x79C330BF ^ (v96 - ((2 * v96) & 0x775BCD5A) + 1001252525);
  v99 = ((v87 ^ 0xFFFFFF8A) + 12) ^ v95 ^ *(_QWORD *)&v83[8 * (v87 ^ 0x5D)] ^ (v80
                                                                                              - ((2 * v80) & 0x52)
                                                                                              + 41);
  LODWORD(v80) = *(_QWORD *)&v83[8 * (v88 ^ 0x89)] ^ ((v88 ^ 0x5E)
                                                                     - ((2 * (v88 ^ 0x5E) + 24) & 0xCA)
                                                                     + 241);
  v100 = *(_QWORD *)&v83[8 * (LODWORD(STACK[0x5A8]) ^ 0x97)] ^ ((LOBYTE(STACK[0x5A8]) ^ 0x40)
                                                                               - ((2 * (LODWORD(STACK[0x5A8]) ^ 0x40)
                                                                                 + 24) & 0xCA)
                                                                               + 241) ^ v88 ^ (v80
                                                                                             - ((2 * v80) & 0x3A)
                                                                                             - 99) ^ v99;
  LOBYTE(v100) = ((v100 ^ 0x45) - ((2 * v100) & 0x10) + 8) ^ v87;
  v101 = LODWORD(STACK[0x5A8]) ^ 0xD4 ^ ((v100 ^ 0x82)
                                                                         - 2 * ((v100 ^ 0x82) & 0x3E ^ v100 & 4)
                                                                         - 70);
  v102 = v89 ^ 0xB ^ ((*(_QWORD *)&v83[8 * (v89 ^ 0x57)] ^ ((v89 ^ 0x80) - 2 * ((v89 + 12) & 0x67 ^ (v89 ^ 0x80) & 2) - 15))
                                                      - ((2
                                                        * (*(_QWORD *)&v83[8 * (v89 ^ 0x57)] ^ ((v89 ^ 0x80) - 2 * ((v89 + 12) & 0x67 ^ (v89 ^ 0x80) & 2) - 15))) & 0x4A)
                                                      - 91);
  v103 = ((v98 ^ 0xC21A1072) + 12) ^ v98 ^ *(_QWORD *)&v83[8 * (v98 ^ 0xC21A10A5)] ^ v102 ^ v91 ^ 0xB4 ^ ((*(_QWORD *)&v83[8 * (v91 ^ 0xE6)] ^ ((v91 ^ 0x31) - ((2 * (v91 ^ 0x31) + 24) & 0xCA) - 15)) + (~(2 * (*(_QWORD *)&v83[8 * (v91 ^ 0xE6)] ^ ((v91 ^ 0x31) - ((2 * (v91 ^ 0x31) + 24) & 0xCA) - 15))) | 0xA9) - 84) ^ v90 ^ 0x7D ^ ((*(_QWORD *)&v83[8 * (v90 ^ 0x65)] ^ ((v90 ^ 0xB2) - 2 * (((v90 ^ 0xB2) + 12) & 0x67 ^ (v90 ^ 0xB2) & 2) - 15)) - ((2 * (*(_QWORD *)&v83[8 * (v90 ^ 0x65)] ^ ((v90 ^ 0xB2) - 2 * (((v90 ^ 0xB2) + 12) & 0x67 ^ (v90 ^ 0xB2) & 2) - 15))) & 0xC3) - 31) ^ (v92 ^ ((*(_QWORD *)&v83[8 * (v92 ^ 0xFD)] ^ ((v92 ^ 0x2A) - ((2 * (v92 ^ 0x2A) + 24) & 0xCA) - 15)) - ((2 * (*(_QWORD *)&v83[8 * (v92 ^ 0xFD)] ^ ((v92 ^ 0x2A) - ((2 * (v92 ^ 0x2A) + 24) & 0xCA) - 15))) & 0xD4) - 22)) ^ 0xEE ^ v101;
  v104 = v103 ^ LODWORD(STACK[0x5A8]);
  v105 = (v103 ^ LOBYTE(STACK[0x5A8])) ^ 0x1BLL;
  v106 = (char *)*(&off_1E8C4D9A0 + v76 - 1603) - 8;
  STACK[0x5A8] = (unint64_t)v106;
  LODWORD(v80) = ((2 * v104) & 0x72 ^ 0x40) + (v104 ^ 0x59);
  LODWORD(v80) = (v80 - ((2 * v80) & 0x4A) + 37) ^ v106[v105];
  v107 = (v80 - ((2 * v80) & 0x4E) + 39) ^ v104 ^ 0x47;
  v108 = (((v80 - ((2 * v80) & 0x4E) + 39) ^ v104 ^ 0x47) ^ 0x9Eu)
       - 0x69400DC159F7AB25
       - ((2 * (v107 ^ 0xFFFFFF9E)) & 0x1B6);
  v109 = ((v108 << 8) ^ 0xBFF23EA60854DB00 | v108 ^ 0x96BFF23EA60854DBLL)
       + 0x32756F9F4AE4BE75
       - 2
       * (((v108 << 8) ^ 0xBFF23EA60854DB00 | v108 ^ 0x96BFF23EA60854DBLL) & 0x32756F9F4AE4BE7DLL ^ (v108 ^ 0x96BFF23EA60854DBLL) & 8);
  v110 = ((v109 << 16) ^ 0x6F9F4AE4BE750000 | v109 ^ 0x32756F9F4AE4BE75)
       + 0x1F901674D2DF8378
       - ((2 * ((v109 << 16) ^ 0x6F9F4AE4BE750000 | v109 ^ 0x32756F9F4AE4BE75)) & 0x3F202CE9A5BF06F0);
  v111 = v110 ^ 0x1F901674D2DF8378;
  v112 = (v110 << 32) ^ 0xD2DF837800000000 | v110 ^ 0x1F901674D2DF8378;
  v113 = *(uint64_t (**)(void))(STACK[0x4D0] + 8 * (v76 | (16 * ((STACK[0x578] & 1) == 0))));
  STACK[0x530] = v104;
  LODWORD(STACK[0x30C]) = v104 ^ 0x47;
  LODWORD(STACK[0x528]) = v107;
  STACK[0x520] = v112;
  STACK[0x518] = v111;
  STACK[0x5D0] = v86;
  return v113();
}

uint64_t sub_1CF3311D8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  unint64_t v34;
  unint64_t v35;
  unsigned int v36;
  unint64_t v37;
  int v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  unsigned __int8 v45;
  int v46;
  uint64_t v47;
  unint64_t v48;

  v10 = (LODWORD(STACK[0x558]) - 658) | 0x40;
  v11 = a1 ^ 0x74;
  v12 = v8 ^ 0xFFFFFFAA;
  v13 = (v10 + 4) ^ a1;
  v14 = a1 ^ LODWORD(STACK[0x40C]) ^ 0xFFFFFF93;
  v15 = a1 ^ 0x7Bu ^ LODWORD(STACK[0x43C]);
  v16 = a1 ^ LODWORD(STACK[0x444]) ^ 0xFFFFFFBD;
  v17 = a1 ^ LODWORD(STACK[0x438]) ^ 0x6F;
  v18 = LODWORD(STACK[0x428]) ^ a1 ^ 0xFFFFFFF4;
  v19 = a1 ^ LODWORD(STACK[0x430]) ^ 0xFFFFFFC7;
  v20 = a1 ^ 0x7Bu ^ LODWORD(STACK[0x408]);
  v21 = a1 ^ LODWORD(STACK[0x434]) ^ 3u;
  v22 = a1 ^ 0xFFFFFFDA ^ LODWORD(STACK[0x440]);
  STACK[0x558] = a1 ^ LODWORD(STACK[0x420]) ^ 0x5Cu;
  STACK[0x560] = a1 ^ LODWORD(STACK[0x418]) ^ 0x3Du;
  v23 = a1 ^ 0xFFFFFFDA ^ LODWORD(STACK[0x414]);
  v24 = a1 ^ LODWORD(STACK[0x424]);
  v25 = STACK[0x41C];
  v26 = STACK[0x42C];
  v27 = STACK[0x410];
  STACK[0x398] = v23;
  STACK[0x3B8] = v24 ^ 0xFFFFFFFC;
  v28 = v27 ^ v12;
  v29 = v26 ^ v13;
  STACK[0x3C0] = v29;
  v30 = v25 ^ v11;
  STACK[0x3D0] = v30;
  v31 = (2 * v10) ^ 0x6B6;
  LODWORD(STACK[0x4A0]) = (v17 ^ 0xE) - ((2 * (v17 ^ 0xE) + 114) & (v31 + 12));
  v32 = v15 ^ 0xC1;
  v33 = v15;
  STACK[0x590] = v15;
  v34 = STACK[0x5A8];
  LODWORD(v32) = ((v33 ^ 0xFFFFFFBA) + (~(2 * (v33 ^ 0xFFFFFFBA) + 114) | 0xFFFFFFB5) + 95) ^ *(unsigned __int8 *)(STACK[0x5A8] + v32);
  LODWORD(STACK[0x4C8]) = v32 - ((2 * v32) & 0xFFFFFFF3);
  STACK[0x5C0] = v16;
  LODWORD(STACK[0x4C0]) = (v16 ^ 0xFFFFFFCD) + (~(2 * (v16 ^ 0xFFFFFFCD) + 114) | 0xFFFFFFB5);
  LODWORD(v32) = ((v14 ^ 0xFFFFFFB7) + 57) ^ v14 ^ *(unsigned __int8 *)(v34 + (v14 ^ 0xCCLL));
  HIDWORD(v35) = v32 ^ 0x12;
  LODWORD(v35) = (v32 ^ 0x80) << 24;
  LODWORD(STACK[0x510]) = ((v35 >> 30) >> 2) | ((v35 >> 30) << 6);
  STACK[0x4A8] = v20;
  LODWORD(v32) = *(unsigned __int8 *)(v34 + (v20 ^ 0x33)) ^ ((v20 ^ 0x48)
                                                                              - ((2 * (v20 ^ 0x48) + 114) & v9)
                                                                              + 94);
  LODWORD(STACK[0x490]) = v32 - ((2 * v32) & 0xFFFFFF9C);
  STACK[0x498] = v18;
  LODWORD(v32) = *(unsigned __int8 *)(v34 + (v18 ^ 0x7FLL)) ^ ((v18 ^ 4)
                                                                              - ((2 * (v18 ^ 4) + 114) & v9)
                                                                              + 94);
  LODWORD(STACK[0x404]) = v32 - ((2 * v32) & 0xFFFFFFAA);
  LODWORD(STACK[0x508]) = (v19 ^ 0x52) - ((2 * (v19 ^ 0x52) + 114) & v9);
  STACK[0x3E8] = v21;
  LODWORD(v32) = *(unsigned __int8 *)(v34 + (v21 ^ 0xB3)) ^ ((v21 ^ 0x37)
                                                                              - ((2 * (v21 ^ 0x37) + 14) & v9)
                                                                              - 20);
  LODWORD(STACK[0x3E0]) = v32 - ((2 * v32) & 0x6E);
  STACK[0x3F8] = v22;
  LODWORD(v32) = *(unsigned __int8 *)(v34 + (v22 ^ 0x54)) ^ ((v22 ^ 0x2F)
                                                                              - ((2 * (v22 ^ 0x2F) + 114) & v9)
                                                                              + 94);
  LODWORD(STACK[0x3E4]) = v32 - ((2 * v32) & 0xFFFFFF8A);
  STACK[0x4B8] = v28;
  LODWORD(v32) = *(unsigned __int8 *)(v34 + (v28 ^ 0x1ELL)) ^ ((v28 ^ 0x65)
                                                                              - ((2 * (v28 ^ 0x65) + 114) & v9)
                                                                              + 94);
  LODWORD(STACK[0x3F0]) = v32 - ((2 * v32) & 0xD4);
  LODWORD(STACK[0x3CC]) = (STACK[0x558] ^ 0x42) + (~(2 * (STACK[0x558] ^ 0x42) + 114) | 0xFFFFFFB5);
  LODWORD(STACK[0x3DC]) = (STACK[0x560] ^ 0xFFFFFFDB) - ((2 * (STACK[0x560] ^ 0xFFFFFFDB) + 114) & v9);
  LODWORD(STACK[0x3D8]) = (v30 ^ 0xFFFFFFE4) - ((2 * (v30 ^ 0xFFFFFFE4) + 114) & v9);
  LODWORD(STACK[0x3AC]) = (v29 ^ 0x50) - ((2 * (v29 ^ 0x50) + 114) & v9);
  LODWORD(v32) = *(unsigned __int8 *)(v34 + (v23 ^ 0xCFLL)) ^ ((v23 ^ 0xFFFFFFB4)
                                                                              + (~(2 * (v23 ^ 0xFFFFFFB4) + 114) | 0xFFFFFFB5)
                                                                              + 95);
  LODWORD(STACK[0x3B0]) = v32 - ((2 * v32) & 0xFFFFFFA8);
  LODWORD(v32) = *(unsigned __int8 *)(v34 + (v24 ^ 0x6BLL)) ^ ((v24 ^ 0x10)
                                                                              - ((2 * (v24 ^ 0x10) + 114) & v9)
                                                                              + 94);
  LODWORD(STACK[0x3A0]) = v32 - ((2 * v32) & 0xFFFFFFA8);
  LODWORD(v30) = STACK[0x5B8];
  v36 = *(unsigned __int8 *)(v34 + ~LOBYTE(STACK[0x5B8])) ^ ((LODWORD(STACK[0x5B8]) ^ 0xFFFFFF84)
                                                                            - ((2 * (LODWORD(STACK[0x5B8]) ^ 0xFFFFFF84)
                                                                              + 114) & v9)
                                                                            + 94);
  LODWORD(v29) = v36 + (~(2 * v36) | 0xFFFFFFE7);
  v37 = STACK[0x538];
  LODWORD(v28) = (STACK[0x538] ^ 0x6A) - ((2 * (STACK[0x538] ^ 0x6A) + 114) & v9);
  v38 = *(unsigned __int8 *)(v34 + (STACK[0x548] ^ 0xAELL)) ^ ((STACK[0x548] ^ 0xFFFFFFD5)
                                                                              - ((2 * (STACK[0x548] ^ 0xFFFFFFD5) + 114) & v9)
                                                                              + 94);
  LODWORD(STACK[0x390]) = v38 - ((2 * v38) & 0x38);
  LODWORD(STACK[0x38C]) = (STACK[0x540] ^ 0xFFFFFF8E) - ((2 * (STACK[0x540] ^ 0xFFFFFF8E) + 114) & v9);
  v39 = STACK[0x5D0];
  v40 = *(unsigned __int8 *)(v34 + (STACK[0x5D0] ^ 0x72)) ^ ((STACK[0x5D0] ^ 9)
                                                                              - ((2 * (STACK[0x5D0] ^ 9) + 114) & 0x4A)
                                                                              + 94);
  LODWORD(STACK[0x394]) = v40 - ((2 * v40) & 0xFFFFFF9A);
  v41 = *(unsigned __int8 *)(v34 + (STACK[0x580] ^ 0xD9)) ^ ((STACK[0x580] ^ 0xFFFFFFA2)
                                                                              - ((2 * (STACK[0x580] ^ 0xFFFFFFA2) + 114) & 0x4A)
                                                                              + 94);
  LODWORD(STACK[0x388]) = v41 - ((2 * v41) & 0x7A);
  v42 = *(unsigned __int8 *)(v34 + (v17 ^ 0x75)) ^ v30 ^ (LODWORD(STACK[0x4A0]) + 94) ^ (v29 + 13);
  LODWORD(STACK[0x4A0]) = v17 ^ 0x3B ^ ((v42 ^ 0x88888888) - ((2 * v42) & 0x6A) + 53);
  v43 = STACK[0x590] ^ (v28 + 94) ^ *(unsigned __int8 *)(v34 + (v37 ^ 0x11)) ^ (LODWORD(STACK[0x4C8])
                                                                                                 - 7);
  LODWORD(STACK[0x590]) = v37 ^ 0x42 ^ ((v43 ^ 0x43) + (~(2 * v43) | 0xAF) + 41);
  STACK[0x5C0] = v19;
  v44 = (LODWORD(STACK[0x508]) + 94) ^ v39 ^ *(unsigned __int8 *)(v34 + (v19 ^ 0x29)) ^ (LODWORD(STACK[0x394]) + 77);
  LODWORD(STACK[0x5B8]) = (v44 ^ 0x44) & 0x27 ^ v44 & 2;
  v45 = STACK[0x4B8] ^ 0x91 ^ (LODWORD(STACK[0x3F0]) + 106);
  LODWORD(STACK[0x5B0]) = (v44 ^ 0x44) - 91;
  LODWORD(STACK[0x5C8]) = v45;
  v46 = ((STACK[0x528] & 7 ^ 6 | 0x516467A8) ^ 0x516467A8)
      - 193855252
      - 2 * (((STACK[0x528] & 7 ^ 6 | 0x516467A8) ^ 0x516467A8) & 0x747201EE ^ (STACK[0x528] & 7 ^ 6) & 2)
      + 256;
  v47 = *(_QWORD *)(a8 + 8 * (v46 ^ 0xF47200EC));
  v48 = ((v31 + 1078) ^ 0xF472064F ^ v46)
      - 0x1EF89B62E32E63A9
      + (~(2 * ((v31 + 1078) ^ 0xF472064F ^ v46)) | 0xFFFFFFFFC65CC751)
      + 1;
  *(_QWORD *)(STACK[0x288]
            + 8
            * (((((STACK[0x528] & 0xF8) >> 3) ^ 0x13)
              - 903049995
              - ((2 * (((STACK[0x528] & 0xF8) >> 3) ^ 0x13)) & 0xAAAAAAAA)) ^ 0xCA2C8CF5)) = (STACK[0x520]
                                                                                            + 0x68B82AB753E7C7E5
                                                                                            - 2
                                                                                            * (STACK[0x520] & 0x68B82AB753E7C7FDLL ^ STACK[0x518] & 0x18)) ^ v47 ^ v48 ^ 0xCA1FDA1760A0172ELL ^ ((v48 ^ 0xE107649D1CD19C57) - ((2 * (v48 ^ 0xE107649D1CD19C57) + 0x5A19C58645550618) & 0x4208C11A39A338AELL) - 0x71EBB89FC083E09DLL);
  return (*(uint64_t (**)(void))(STACK[0x4D0] + 8 * (v31 ^ 0x7A)))();
}

uint64_t sub_1CF332218@<X0>(int a1@<W2>, char a2@<W3>, char a3@<W6>, uint64_t a4@<X8>)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  int v13;
  unsigned __int8 v14;
  int v15;
  unsigned __int8 v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  unint64_t v175;
  uint64_t v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  unint64_t v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t v212;
  uint64_t v213;
  unint64_t v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  unint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  uint64_t v235;
  int v236;
  uint64_t v237;
  unint64_t v238;
  int v239;
  uint64_t v240;
  unint64_t v241;
  int v242;
  int v243;
  int v244;
  int v245;
  uint64_t v246;
  int v247;
  __int128 v248;
  unint64_t v249;
  uint64_t v250;
  unint64_t v251;
  uint64_t v252;
  uint64_t v253;
  unsigned int v254;
  uint64_t v255;
  unint64_t v256;
  uint64_t v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  unsigned int v262;
  unint64_t v263;
  uint64_t v264;
  unint64_t v265;
  uint64_t v266;
  uint64_t v267;
  unint64_t v268;
  uint64_t v269;
  int v270;
  uint64_t v271;
  uint64_t v272;
  unint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  unint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  unint64_t v285;
  uint64_t v286;
  unint64_t v287;
  uint64_t v288;
  unint64_t v289;
  uint64_t v290;
  unint64_t v291;
  uint64_t v292;
  uint64_t v293;
  unint64_t v294;
  uint64_t v295;
  unint64_t v296;
  uint64_t v297;
  uint64_t v298;
  unint64_t v299;
  unint64_t v300;
  uint64_t v301;
  uint64_t v302;
  unint64_t v303;
  uint64_t v304;
  unint64_t v305;
  uint64_t v306;
  unint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  unint64_t v311;
  unint64_t v312;
  char v313;
  uint64_t v314;
  unint64_t v315;
  unint64_t v316;
  char v317;
  uint64_t v318;
  unint64_t v319;
  unint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  unint64_t v324;
  uint64_t v325;
  unint64_t v326;
  int v327;
  unint64_t v328;
  uint64_t v329;
  unint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  unint64_t v335;
  uint64_t v336;
  unint64_t v337;
  uint64_t v338;
  unint64_t v339;
  uint64_t v340;
  uint64_t v341;
  unint64_t v342;
  uint64_t v343;
  unint64_t v344;
  uint64_t v345;
  unint64_t v346;
  uint64_t v347;
  uint64_t v348;
  unint64_t v349;
  uint64_t v350;
  unint64_t v351;
  unint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  unint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  unint64_t v363;
  unint64_t v364;
  unint64_t v365;
  uint64_t v366;
  unint64_t v367;
  uint64_t v368;
  unint64_t v369;
  unint64_t v370;
  unint64_t v371;
  uint64_t v372;
  unint64_t v373;
  unint64_t v374;
  uint64_t v375;
  unint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  unint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  unint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  unint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  unint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  unint64_t v402;
  unint64_t v403;
  unint64_t v404;
  uint64_t v405;
  uint64_t v406;
  unint64_t v407;
  unint64_t v408;
  unint64_t v409;
  uint64_t v410;
  unint64_t v411;
  unint64_t v412;
  unint64_t v413;
  unint64_t v414;
  uint64_t v415;
  uint64_t v416;
  unint64_t v417;
  uint64_t v418;
  unint64_t v419;
  uint64_t v420;
  unint64_t v421;
  uint64_t v422;
  unint64_t v423;
  uint64_t v424;
  unint64_t v425;
  uint64_t v426;
  unint64_t v427;
  unint64_t v428;
  unint64_t v429;
  uint64_t v430;
  unint64_t v431;
  uint64_t v432;
  unint64_t v433;
  unint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  unint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  unint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  unint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  unint64_t v453;
  uint64_t v454;
  unint64_t v455;
  uint64_t v456;
  unint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  unint64_t v461;
  uint64_t v462;
  unint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  unint64_t v467;
  uint64_t v468;
  unint64_t v469;
  uint64_t v470;
  uint64_t v471;
  unint64_t v472;
  unint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  unint64_t v489;
  unint64_t v490;
  uint64_t v491;
  unint64_t v492;
  uint64_t v493;
  uint64_t v494;
  unint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  __int128 v500;
  unint64_t v501;
  uint64_t v502;
  unint64_t v503;
  uint64_t v504;
  unint64_t v505;
  unsigned int v506;
  unint64_t v507;
  uint64_t v508;
  uint64_t v509;
  unint64_t v510;
  uint64_t v511;
  unint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  unint64_t v516;
  uint64_t v517;
  unint64_t v518;
  uint64_t v519;
  unint64_t v520;
  uint64_t v521;
  uint64_t v522;
  unint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  unint64_t v535;
  uint64_t v536;
  unint64_t v537;
  uint64_t v538;
  uint64_t v539;
  unint64_t v540;
  uint64_t v541;
  unint64_t v542;
  uint64_t v543;
  unint64_t v544;
  uint64_t v545;
  unint64_t v546;
  unint64_t v547;
  uint64_t v548;
  unint64_t v549;
  uint64_t v550;
  unint64_t v551;
  uint64_t v552;
  uint64_t v553;
  unint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  unint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  unint64_t v564;
  uint64_t v565;
  unint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  unint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  unint64_t v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  unint64_t v581;
  uint64_t v582;
  uint64_t v583;
  unint64_t v584;
  uint64_t v585;
  unint64_t v586;
  uint64_t v587;
  unint64_t v588;
  unint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  unint64_t v593;
  unint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  unint64_t v601;
  uint64_t v602;
  unint64_t v603;
  unint64_t v604;
  uint64_t v605;
  unint64_t v606;
  uint64_t v607;
  unint64_t v608;
  unint64_t v609;
  uint64_t v610;
  unint64_t v611;
  uint64_t v612;
  unint64_t v613;
  unint64_t v614;
  uint64_t v615;
  unint64_t v616;
  uint64_t v617;
  unint64_t v618;
  uint64_t v619;
  unint64_t v620;
  uint64_t v621;
  unint64_t v622;
  uint64_t v623;
  unint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  unint64_t v630;
  unint64_t v631;
  unint64_t v632;
  unint64_t v633;
  uint64_t (*v634)(void);

  LODWORD(STACK[0x5D0]) = v4;
  v11 = v4 - 119;
  v12 = (v4 - 836);
  v13 = v5 + (v6 | (v8 << 24));
  v14 = STACK[0x5C0] ^ (LODWORD(STACK[0x5B0]) - 2 * LOBYTE(STACK[0x5B8])) ^ 0xF7;
  v15 = v7 + (a4 | (LODWORD(STACK[0x5C8]) << 24));
  v16 = STACK[0x5D8] ^ 0xBE ^ (a3 - 2 * a2);
  LODWORD(STACK[0x520]) = v11;
  v17 = (v9 + v14) ^ v11 ^ 0x753544D8u;
  STACK[0x528] = v12;
  v18 = v17 - ((v17 << (v12 - 47)) & 0x155E9ED40) - 0x42338BA9550B0960;
  v19 = v15 ^ 0xB9B4A505;
  v20 = (v13 ^ 0x2DF1AFB7u) - (unint64_t)((2 * (v13 ^ 0x2DF1AFB7)) & 0x1F432672) - 0x5F87CFB4F05E6CC7;
  v21 = STACK[0x280];
  v22 = *(unsigned __int8 *)(STACK[0x280] + ((v18 >> 24) ^ 0xBDCC7456AALL));
  v23 = ((a1 + v16) ^ 0xEE9DF34D) - ((2 * ((a1 + v16) ^ 0xEE9DF34D)) & 0x1BEEFA8C0) + 0x4C3AAD18DF77D460;
  v24 = *(unsigned __int8 *)(STACK[0x280] + (BYTE2(v23) ^ 0x77));
  v25 = *(unsigned __int8 *)(STACK[0x280] + (v6 ^ 0xB7));
  v26 = *(unsigned __int8 *)(STACK[0x280] + ((v20 >> 24) ^ 0xA078304B0FLL));
  v27 = v19 - ((2 * (_DWORD)v19) & 0xA6A0177E) - 0x7F8C08DFACAFF441;
  v28 = *(unsigned __int8 *)(STACK[0x280] + (BYTE2(v27) ^ 0x50));
  v29 = *(unsigned __int8 *)(STACK[0x280] + (BYTE2(v18) ^ 0xF4));
  v30 = *(unsigned __int8 *)(STACK[0x280] + (a4 ^ 5));
  v31 = *(unsigned __int8 *)(STACK[0x280] + (BYTE1(v27) ^ 0xBLL));
  v32 = *(unsigned __int8 *)(STACK[0x280] + (BYTE1(v18) ^ 0xF6));
  v33 = *(unsigned __int8 *)(STACK[0x280] + (v16 ^ 0x4DLL));
  v34 = *(unsigned __int8 *)(STACK[0x280] + (BYTE2(v20) ^ 0xA1));
  v35 = *(unsigned __int8 *)(STACK[0x280] + (BYTE1(v23) ^ 0xD4));
  v36 = *(unsigned __int8 *)(STACK[0x280] + ((v23 >> 24) ^ 0x4C3AAD18DFLL));
  STACK[0x5D8] = *(unsigned __int8 *)(STACK[0x280] + (BYTE1(v20) ^ 0x93));
  v37 = STACK[0x380];
  v38 = *(_QWORD *)(STACK[0x380] + 8 * (v25 ^ 0x23));
  v39 = ((v38 >> 11) ^ 0x1966119E8E4CAELL)
      - 0x4BF6E3FD798BBAAFLL
      - ((2 * ((v38 >> 11) ^ 0x1966119E8E4CAELL)) & 0x1238050CE88AA2);
  v40 = (*(_QWORD *)(STACK[0x380] + 8 * (v24 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v41 = *(_QWORD *)(STACK[0x380] + 8 * (v28 ^ 0x23));
  *((_QWORD *)&v42 + 1) = v41 ^ 0x1F8;
  *(_QWORD *)&v42 = v41 ^ 0xCB308CF472657000;
  v43 = (v42 >> 11) - ((2 * (v42 >> 11)) & 0x53A4914787A5E0B2) + 0x29D248A3C3D2F059;
  v44 = *(_QWORD *)(STACK[0x380] + 8 * (v22 ^ 0x23));
  *((_QWORD *)&v42 + 1) = v44 ^ 0x1F8;
  *(_QWORD *)&v42 = v44 ^ 0xCB308CF472657000;
  v45 = (v42 >> 11) + 0x404C9628D5639F09 - ((2 * (v42 >> 11)) & 0x80992C51AAC73E12);
  LODWORD(v39) = (((v43 ^ 0x2903A44CF12BCC97) + (v43 & 0xF8D1ECEF32F93CCELL ^ 0x2FFE5BB3CFD6F379) + 1) >> 27) ^ (v43 >> 24) ^ (((((v39 >> 3) & 0x6219A0D800 ^ 0x10808800) - 0x4BF6E3FD798BBAAFLL - ((2 * (v39 >> 3)) & 0x400408000)) ^ v39) >> 8) ^ ((((((v40 - 0x6ABABD54475CCF46 - ((2 * v40) & 0xA855771466174uLL)) >> 3) & 0xC26219A00000 ^ 0x804011000000) - 0x6ABABD54475CCF46 - ((2 * (((v40 - 0x6ABABD54475CCF46 - ((2 * v40) & 0xA855771466174uLL)) >> 3) & 0xC26219A00000 ^ 0x804011000000)) & 0x844431400000)) ^ (v40 - 0x6ABABD54475CCF46 - ((2 * v40) & 0xA855771466174))) >> 16) ^ (((((v45 >> 3) & 0x1BE5C26200000000 ^ 0x801824000000000) + 0x404C9628D5639F09 - ((2 * ((v45 >> 3) & 0x1BE5C26200000000 ^ 0x801824000000000)) & 0x89044000000000)) ^ v45) >> 32);
  v46 = (*(_QWORD *)(STACK[0x380] + 8 * (v29 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v47 = *(_QWORD *)(STACK[0x380] + 8 * (v26 ^ 0x23));
  *((_QWORD *)&v42 + 1) = v47 ^ 0x1F8;
  *(_QWORD *)&v42 = v47 ^ 0xCB308CF472657000;
  v48 = (v42 >> 11) - 0x173D9059E947BE24 - ((2 * (v42 >> 11)) & 0xD184DF4C2D7083B8);
  v49 = *(_QWORD *)(STACK[0x380] + 8 * (v35 ^ 0x23));
  LODWORD(v46) = (((((v48 >> 3) & 0xE5C26219000000 ^ 0x406000000000)
                  - 0x173D9059E947BE24
                  - ((2 * ((v48 >> 3) & 0xE5C26219000000 ^ 0x406000000000)) & 0x180844420000000)) ^ v48) >> 24) ^ ((((((v46 + 0x5E1F7A0C36CB926ALL - ((2 * v46) & 0x3EF4186D9724D4uLL)) >> 3) & 0xC26219A00000 ^ 0xC24000800000) + 0x5E1F7A0C36CB926ALL - ((2 * (((v46 + 0x5E1F7A0C36CB926ALL - ((2 * v46) & 0x3EF4186D9724D4uLL)) >> 3) & 0xC26219A00000 ^ 0xC24000800000)) & 0x840021000000)) ^ (v46 + 0x5E1F7A0C36CB926ALL - ((2 * v46) & 0x3EF4186D9724D4))) >> 16);
  *((_QWORD *)&v42 + 1) = v49 ^ 0x1F8;
  *(_QWORD *)&v42 = v49 ^ 0xCB308CF472657000;
  v50 = (v42 >> 11) - 0x1981D78FC69CC554 - ((2 * (v42 >> 11)) & 0xCCFC50E072C67558);
  LODWORD(v46) = v46 ^ (((((v50 >> 3) & 0x1BE5C26200000000 ^ 0x18C5C00200000000)
                        - 0x1981D78FC69CC554
                        - ((2 * ((v50 >> 3) & 0x1BE5C26200000000 ^ 0x18C5C00200000000)) & 0x4C800C000000000)) ^ v50) >> 32);
  v51 = (*(_QWORD *)(STACK[0x380] + 8 * (v31 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v31) = v46 ^ ((((((v51 - ((2 * v51) & 0x234BADB0F0B6DAuLL) - 0x65AE5A292787A493) >> 3) & 0x6219A0D800 ^ 0x2219000800)
                        - ((2
                          * (((v51 - ((2 * v51) & 0x234BADB0F0B6DAuLL) - 0x65AE5A292787A493) >> 3) & 0x6219A0D800 ^ 0x2219000800)) & 0x843040B000)
                        - 0x65AE59292787A493) ^ (v51 - ((2 * v51) & 0x234BADB0F0B6DALL) - 0x65AE5A292787A493)) >> 8);
  v52 = (*(_QWORD *)(STACK[0x380] + 8 * (v30 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v53 = *(_QWORD *)(STACK[0x380] + 8 * (v32 ^ 0x23));
  *((_QWORD *)&v42 + 1) = v53 ^ 0x1F8;
  *(_QWORD *)&v42 = v53 ^ 0xCB308CF472657000;
  v54 = (v42 >> 11) - 0x236F4A12648F163CLL - ((2 * (v42 >> 11)) & 0xB9216BDB36E1D388);
  LODWORD(v52) = (((((v54 >> 3) & 0xE5C26219000000 ^ 0x80022011000000)
                  - 0x236F4A12648F163CLL
                  - ((2 * ((v54 >> 3) & 0xE5C26219000000 ^ 0x80022011000000)) & 0x10100C032000000)) ^ v54) >> 24) ^ ((((((v52 - 0x16C5350DA1113596 - ((2 * v52) & 0x3595E4BDDD94D4uLL)) >> 3) & 0xC26219A00000 ^ 0x404209800000) - 0x16C5350DA1113596 - ((2 * (((v52 - 0x16C5350DA1113596 - ((2 * v52) & 0x3595E4BDDD94D4uLL)) >> 3) & 0xC26219A00000 ^ 0x404209800000)) & 0x184C431400000)) ^ (v52 - 0x16C5350DA1113596 - ((2 * v52) & 0x3595E4BDDD94D4))) >> 16);
  v55 = *(_QWORD *)(STACK[0x380] + 8 * (v34 ^ 0x23));
  *((_QWORD *)&v42 + 1) = v55 ^ 0x1F8;
  *(_QWORD *)&v42 = v55 ^ 0xCB308CF472657000;
  v56 = (v42 >> 11) - 0x61224B4F0986DB20 - ((2 * (v42 >> 11)) & 0x3DBB6961ECF249C0);
  v57 = (*(_QWORD *)(STACK[0x380] + 8 * (v33 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v52) = v52 ^ (((((v56 >> 3) & 0x1BE5C26200000000 ^ 0x13C1820200000000)
                        - 0x61224B4F0986DB20
                        - ((2 * ((v56 >> 3) & 0x1BE5C26200000000 ^ 0x13C1820200000000)) & 0x358B004000000000)) ^ v56) >> 32);
  v58 = ((((v57 - ((2 * v57) & 0x2DDA06C07B36A8uLL) + 0x6676ED03603D9B54) >> 3) & 0x6219A0D800 ^ 0x2008009000)
       - ((2
         * (((v57 - ((2 * v57) & 0x2DDA06C07B36A8uLL) + 0x6676ED03603D9B54) >> 3) & 0x6219A0D800 ^ 0x2008009000)) & 0x400413000)
       + 0x6676EE03603D9B54) ^ (v57 - ((2 * v57) & 0x2DDA06C07B36A8) + 0x6676ED03603D9B54);
  v59 = *(_QWORD *)(STACK[0x380] + 8 * (v36 ^ 0x23));
  LODWORD(v36) = v52 ^ (v58 >> 8);
  v60 = ((v59 >> 11) ^ 0x1966119E8E4CAELL)
      - 0x19C019E6AE8EB541
      - ((2 * ((v59 >> 11) ^ 0x1966119E8E4CAELL)) & 0x3FCC32A2E2957ELL);
  v61 = (*(_QWORD *)(STACK[0x380] + 8 * (*(unsigned __int8 *)(v21 + ((v27 >> 24) ^ 0x8073F72053)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v62 = *(_QWORD *)(STACK[0x380] + 8 * (*(unsigned __int8 *)(v21 + (v14 ^ 0x25)) ^ 0x23));
  *((_QWORD *)&v42 + 1) = v62 ^ 0x1F8;
  *(_QWORD *)&v42 = v62 ^ 0xCB308CF472657000;
  v63 = (v42 >> 11) - ((2 * (v42 >> 11)) & 0x2217B6C360772C8ALL) - 0x6EF4249E4FC469BBLL;
  LODWORD(v60) = ((((((v61 + 0x16053AD5A2D1A5A5 - ((2 * v61) & 0xA75AB45A34B4AuLL)) >> 3) & 0xC26219A00000 ^ 0x824210000000)
                  + 0x16053AD5A2D1A5A5
                  + (~(2
                     * (((v61 + 0x16053AD5A2D1A5A5 - ((2 * v61) & 0xA75AB45A34B4AuLL)) >> 3) & 0xC26219A00000 ^ 0x824210000000)) | 0xFFFFFB7FFEFFFFFFLL)
                  + 1) ^ (v61 + 0x16053AD5A2D1A5A5 - ((2 * v61) & 0xA75AB45A34B4ALL))) >> 16) ^ (((((v60 >> 3) & 0x6219A0D800 ^ 0x4208200800) - 0x19C019E6AE8EB541 - ((2 * ((v60 >> 3) & 0x19A0D800 ^ 0x8200800)) & 0x22409000)) ^ v60) >> 8);
  v64 = (((v63 >> 3) & 0xE5C26219000000 ^ 0x21426010000000)
       - ((2 * ((v63 >> 3) & 0xE5C26219000000 ^ 0x21426010000000)) & 0x384C020000000)
       - 0x6DF4249E4FC469BBLL) ^ v63;
  v65 = *(_QWORD *)(STACK[0x380] + 8 * (STACK[0x5D8] ^ 0x23));
  LODWORD(v60) = v60 ^ (v64 >> 24);
  *((_QWORD *)&v42 + 1) = v65 ^ 0x1F8;
  *(_QWORD *)&v42 = v65 ^ 0xCB308CF472657000;
  v66 = (v42 >> 11) - 0x4F5D2078EB2B34AELL - ((2 * (v42 >> 11)) & 0x6145BF0E29A996A4);
  LODWORD(v60) = v60 ^ (((((v66 >> 3) & 0x1BE5C26200000000 ^ 0x1204426000000000)
                        - 0x4F5D2078EB2B34AELL
                        - ((2 * ((v66 >> 3) & 0x1BE5C26200000000 ^ 0x1204426000000000)) & 0x2141840400000000)) ^ v66) >> 32);
  v67 = *(unsigned __int8 *)(v21
                           + (((unsigned __int16)((v60 ^ 0xDA78)
                                                                 - ((2 * (v60 ^ 0xDA78)) & 0xEB84)
                                                                 + 30146) >> 8) ^ 0x75));
  v68 = *(unsigned __int8 *)(v21
                           + ((((v31 ^ 0xD3920D16)
                                               - ((2 * (v31 ^ 0xD3920D16)) & 0x1B25F74)
                                               + 14233530) >> 16) ^ 0xD9));
  v69 = *(unsigned __int8 *)(v21
                           + (((unsigned __int16)((v31 ^ 0xD16) - ((2 * (v31 ^ 0xD16)) & 0x5F74) + 12218) >> 8) ^ 0x2FLL));
  v70 = *(unsigned __int8 *)(v21
                           + (((unsigned __int16)((v36 ^ 0x28D5)
                                                                 - ((2 * (v36 ^ 0x28D5)) & 0xBBA0)
                                                                 - 8752) >> 8) ^ 0xDDLL));
  v71 = *(unsigned __int8 *)(v21 + (v60 ^ 0x78));
  v72 = *(unsigned __int8 *)(v21
                           + ((((v36 ^ 0x5EAD28D5)
                                               - ((2 * (v36 ^ 0x5EAD28D5)) & 0xF277BBA0)
                                               - 113517104) >> 16) ^ 0x3BLL));
  v73 = *(unsigned __int8 *)(v21 + (v31 ^ 0x16));
  v74 = *(unsigned __int8 *)(v21 + (v36 ^ 0xD5));
  v75 = *(unsigned __int8 *)(v21
                           + ((((v31 ^ 0xD3920D16)
                              - (unint64_t)((2 * (v31 ^ 0xD3920D16)) & 0x1B25F74)
                              + 0x1767F8D200D92FBALL) >> 24) ^ 0x1767F8D200));
  v76 = *(unsigned __int8 *)(v21
                           + ((((v60 ^ 0xF4ADDA78)
                              - (unint64_t)((2 * (v60 ^ 0xF4ADDA78)) & 0x28F2EB84)
                              - 0x31624C3FEB868A3ELL) >> 24) ^ 0xCE9DB3C014));
  v77 = *(unsigned __int8 *)(v21
                           + ((((v60 ^ 0xF4ADDA78)
                                               - ((2 * (v60 ^ 0xF4ADDA78)) & 0x28F2EB84)
                                               + 343504322) >> 16) ^ 0x79));
  v78 = *(_QWORD *)(STACK[0x380]
                  + 8
                  * (*(unsigned __int8 *)(v21
                                        + ((((v39 ^ 0x8639DF94)
                                                            - ((2 * (v39 ^ 0x8639DF94)) & 0x57DFA3FC)
                                                            - 1410346498) >> 16) ^ 0xEFLL)) ^ 0x23));
  *((_QWORD *)&v42 + 1) = v78 ^ 0x1F8;
  *(_QWORD *)&v42 = v78 ^ 0xCB308CF472657000;
  v79 = (v42 >> 11) - 0xBD25927E1D8CC0BLL - ((2 * (v42 >> 11)) & 0xE85B4DB03C4E67EALL);
  v80 = *(_QWORD *)(STACK[0x380] + 8 * (v67 ^ 0x23));
  *((_QWORD *)&v42 + 1) = v80 ^ 0x1F8;
  *(_QWORD *)&v42 = v80 ^ 0xCB308CF472657000;
  v81 = (v42 >> 11) - 0x2F741474ACDCF1ADLL - ((2 * (v42 >> 11)) & 0xA117D716A6461CA6);
  LODWORD(v79) = (((((v81 >> 3) & 0x1BE5C26200000000 ^ 0x1A01406000000000)
                  - 0x2F741474ACDCF1ADLL
                  - ((2 * ((v81 >> 3) & 0x1BE5C26200000000 ^ 0x1A01406000000000)) & 0x2103840400000000)) ^ v81) >> 32) ^ (((((v79 >> 3) & 0xE5C26219000000 ^ 0x85804201000000) - 0xBD25927E1D8CC0BLL - ((2 * ((v79 >> 3) & 0xE5C26219000000 ^ 0x85804201000000)) & 0x4B048030000000)) ^ v79) >> 24);
  v82 = (*(_QWORD *)(STACK[0x380]
                   + 8
                   * (*(unsigned __int8 *)(v21
                                         + ((((v36 ^ 0x5EAD28D5)
                                            - ((2 * (v36 ^ 0x5EAD28D5)) & 0x1F277BBA0uLL)
                                            - 0x642A23E006C42230) >> 24) ^ 0x9BD5DC1FF9)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v83 = (*(_QWORD *)(STACK[0x380] + 8 * (v68 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v36) = v79 ^ ((((((v82 - ((2 * v82) & 0x229B58661518D6uLL) - 0x324EB253CCF57395) >> 3) & 0x6219A0D800 ^ 0x2000205000)
                        - ((2
                          * (((v82 - ((2 * v82) & 0x229B58661518D6uLL) - 0x324EB253CCF57395) >> 3) & 0x6219A0D800 ^ 0x2000205000)) & 0x4022011000)
                        - 0x324EB153CCF57395) ^ (v82 - ((2 * v82) & 0x229B58661518D6) - 0x324EB253CCF57395)) >> 8) ^ ((((((v83 - ((2 * v83) & 0x1ED67EFC5F6864uLL) - 0x471094C081D04BCELL) >> 3) & 0xC26219A00000 ^ 0xC06209800000) - ((2 * (((v83 - ((2 * v83) & 0x1ED67EFC5F6864uLL) - 0x471094C081D04BCELL) >> 3) & 0xC26219A00000 ^ 0xC06209800000)) & 0x844430400000) - 0x470F94C081D04BCELL) ^ (v83 - ((2 * v83) & 0x1ED67EFC5F6864) - 0x471094C081D04BCELL)) >> 16);
  v84 = *(_QWORD *)(STACK[0x380] + 8 * (v69 ^ 0x23));
  *((_QWORD *)&v42 + 1) = v84 ^ 0x1F8;
  *(_QWORD *)&v42 = v84 ^ 0xCB308CF472657000;
  v85 = (v42 >> 11) + 0x2EF6DB71819292DALL - ((2 * (v42 >> 11)) & 0x5DEDB6E3032525B4);
  v86 = (*(_QWORD *)(STACK[0x380]
                   + 8
                   * (*(unsigned __int8 *)(v21
                                         + (((unsigned __int16)((v39 ^ 0xDF94)
                                                                               - ((2 * (v39 ^ 0xDF94)) & 0xA3FC)
                                                                               - 11778) >> 8) ^ 0xD1)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v85) = ((((((v86 - 0x4D7A980021986EE1 - ((2 * v86) & 0xACFFFBCCF223EuLL)) >> 3) & 0x6219A0D800 ^ 0x621980D000)
                  - 0x4D7A980021986EE1
                  - ((2
                    * (((v86 - 0x4D7A980021986EE1 - ((2 * v86) & 0xACFFFBCCF223EuLL)) >> 3) & 0x6219A0D800 ^ 0x621980D000)) & 0xC430412000)) ^ (v86 - 0x4D7A980021986EE1 - ((2 * v86) & 0xACFFFBCCF223ELL))) >> 8) ^ (((((v85 >> 3) & 0x1BE5C26200000000 ^ 0x1C4C26200000000) + 0x2EF6DB71819292DALL - ((2 * ((v85 >> 3) & 0x1BE5C26200000000 ^ 0x1C4C26200000000)) & 0x15C984C000000000)) ^ v85) >> 32);
  v87 = (*(_QWORD *)(STACK[0x380] + 8 * (v71 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v88 = *(_QWORD *)(STACK[0x380] + 8 * (v72 ^ 0x23));
  *((_QWORD *)&v42 + 1) = v88 ^ 0x1F8;
  *(_QWORD *)&v42 = v88 ^ 0xCB308CF472657000;
  v89 = (v42 >> 11) - ((2 * (v42 >> 11)) & 0xBAEFBCD02742BD46) - 0x22882197EC5EA15DLL;
  LODWORD(v85) = v85 ^ ((((((v87 - ((2 * v87) & 0x15D0F22CCED1AAuLL) + 0x5CEAE879166768D5) >> 3) & 0xC26219A00000 ^ 0x400200800000)
                        - ((2
                          * (((v87 - ((2 * v87) & 0x15D0F22CCED1AAuLL) + 0x5CEAE879166768D5) >> 3) & 0xC26219A00000 ^ 0x400200800000)) & 0x180C020400000)
                        + 0x5CEBE879166768D5) ^ (v87 - ((2 * v87) & 0x15D0F22CCED1AALL) + 0x5CEAE879166768D5)) >> 16);
  v90 = (((v89 >> 3) & 0xE5C26219000000 ^ 0xA4C24000000000)
       - ((2 * ((v89 >> 3) & 0xE5C26219000000 ^ 0xA4C24000000000)) & 0xCB84C022000000)
       - 0x21882197EC5EA15DLL) ^ v89;
  v91 = *(_QWORD *)(STACK[0x380] + 8 * (v70 ^ 0x23));
  *((_QWORD *)&v42 + 1) = v91 ^ 0x1F8;
  *(_QWORD *)&v42 = v91 ^ 0xCB308CF472657000;
  v92 = (v42 >> 11) + 0x79D88100B41645DCLL - ((2 * (v42 >> 11)) & 0xF3B10201682C8BB8);
  LODWORD(v70) = v85 ^ (v90 >> 24);
  v93 = (*(_QWORD *)(STACK[0x380] + 8 * (v73 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v85) = ((((((v93 + 0x1B939C6619AAA107 - ((2 * v93) & 0x2738CC3355420EuLL)) >> 3) & 0x6219A0D800 ^ 0x1205000)
                  + 0x1B939C6619AAA107
                  - ((2
                    * (((v93 + 0x1B939C6619AAA107 - ((2 * v93) & 0x2738CC3355420EuLL)) >> 3) & 0x6219A0D800 ^ 0x1205000)) & 0xC433410000)) ^ (v93 + 0x1B939C6619AAA107 - ((2 * v93) & 0x2738CC3355420ELL))) >> 8) ^ (((((v92 >> 3) & 0x1BE5C26200000000 ^ 0xB21002000000000) + 0x79D88100B41645DCLL - ((2 * ((v92 >> 3) & 0x1BE5C26200000000 ^ 0xB21002000000000)) & 0x3381000000000000)) ^ v92) >> 32);
  v94 = (*(_QWORD *)(STACK[0x380] + 8 * (*(unsigned __int8 *)(v21 + (v39 ^ 0x94)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v95 = *(_QWORD *)(STACK[0x380] + 8 * (v76 ^ 0x23));
  *((_QWORD *)&v42 + 1) = v95 ^ 0x1F8;
  *(_QWORD *)&v42 = v95 ^ 0xCB308CF472657000;
  v96 = (v42 >> 11) - ((2 * (v42 >> 11)) & 0x509189B3C6AE2CE6) - 0x57B73B261CA8E98DLL;
  LODWORD(v85) = v85 ^ ((((((v94 - ((2 * v94) & 0x314C32D5908AE2uLL) + 0x29D8A6196AC84571) >> 3) & 0xC26219A00000 ^ 0x4209000000)
                        - ((2
                          * (((v94 - ((2 * v94) & 0x314C32D5908AE2uLL) + 0x29D8A6196AC84571) >> 3) & 0xC26219A00000 ^ 0x4209000000)) & 0x1040011000000)
                        + 0x29D9A6196AC84571) ^ (v94 - ((2 * v94) & 0x314C32D5908AE2) + 0x29D8A6196AC84571)) >> 16);
  v97 = (((v96 >> 3) & 0xE5C26219000000 ^ 0x1000218000000) - ((v96 >> 2) & 0x81808002000000) - 0x56B73B261CA8E98DLL) ^ v96;
  v98 = *(_QWORD *)(STACK[0x380] + 8 * (v77 ^ 0x23));
  LODWORD(v97) = v85 ^ (v97 >> 24);
  *((_QWORD *)&v42 + 1) = v98 ^ 0x1F8;
  *(_QWORD *)&v42 = v98 ^ 0xCB308CF472657000;
  v99 = (v42 >> 11) - 0x1036929B0A288483 - ((2 * (v42 >> 11)) & 0xDF92DAC9EBAEF6FALL);
  v100 = *(_QWORD *)(STACK[0x380] + 8 * (v74 ^ 0x23));
  *((_QWORD *)&v42 + 1) = v100 ^ 0x1F8;
  *(_QWORD *)&v42 = v100 ^ 0xCB308CF472657000;
  v101 = (v42 >> 11) + 0xE4C43BD69422943 - ((2 * (v42 >> 11)) & 0x1C98877AD2845286);
  LODWORD(v99) = (((((v101 >> 3) & 0x1BE5C26200000000 ^ 0x1C1806200000000)
                  + 0xE4C43BD69422943
                  - ((2 * ((v101 >> 3) & 0x1BE5C26200000000 ^ 0x1C1806200000000)) & 0x1488844000000000)) ^ v101) >> 32) ^ (((((v99 >> 3) & 0xE5C26219000000 ^ 0xE1002018000000) - 0x1036929B0A288483 - ((2 * ((v99 >> 3) & 0xE5C26219000000 ^ 0xE1002018000000)) & 0x18280C022000000)) ^ v99) >> 24);
  v102 = (*(_QWORD *)(STACK[0x380] + 8 * (v75 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v99) = v99 ^ ((((((v102 - ((2 * v102) & 0x31B102B390FE2EuLL) - 0x1327277EA63780E9) >> 3) & 0x6219A0D800 ^ 0x9200800)
                        - ((2
                          * (((v102 - ((2 * v102) & 0x31B102B390FE2EuLL) - 0x1327277EA63780E9) >> 3) & 0x19A0D800 ^ 0x9200800)) & 0x3300B000)
                        - 0x1327267EA63780E9) ^ (v102 - ((2 * v102) & 0x31B102B390FE2ELL) - 0x1327277EA63780E9)) >> 8);
  v103 = (*(_QWORD *)(STACK[0x380]
                    + 8
                    * (*(unsigned __int8 *)(v21
                                          + ((((v39 ^ 0x8639DF94)
                                             - ((2 * (v39 ^ 0x8639DF94)) & 0x157DFA3FCuLL)
                                             - 0x69E453C654102E02) >> 24) ^ 0x961BAC39ABLL)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LOBYTE(v77) = v99 ^ ((((((v103 - ((2 * v103) & 0x3D7BBE1D8CECCuLL) + 0x4B61EBDDF0EC6766) >> 3) & 0x19A00000 ^ 0x18000000)
                       - ((2
                         * (((v103 - ((2 * v103) & 0x3D7BBE1D8CECCuLL) + 0x4B61EBDDF0EC6766) >> 3) & 0x19A00000 ^ 0x18000000)) & 0x21400000)
                       - 252942490) ^ (v103 - ((2 * (_DWORD)v103) & 0xE1D8CECC) - 252942490)) >> 16);
  v104 = (v97 ^ 0xCB38B344)
       - ((2 * (v97 ^ 0xCB38B344)) & 0x1AAC386EELL)
       + 0x76C2AC9FD561C377;
  v105 = v99 ^ ((((((v103 - ((2 * v103) & 0x3D7BBE1D8CECCuLL) + 0x4B61EBDDF0EC6766) >> 3) & 0xC26219A00000 ^ 0x6218000000)
                                            - ((2
                                              * (((v103 - ((2 * v103) & 0x3D7BBE1D8CECCuLL) + 0x4B61EBDDF0EC6766) >> 3) & 0xC26219A00000 ^ 0x6218000000)) & 0x1848021400000)
                                            + 0x4B62EBDDF0EC6766) ^ (v103
                                                                     - ((2 * v103) & 0x3D7BBE1D8CECCLL)
                                                                     + 0x4B61EBDDF0EC6766)) >> 16) ^ 0x7EA1B9C8;
  v106 = v105 - ((2 * (_DWORD)v105) & 0x12057DBA) - 0x84D1ABCF6FD4123;
  v107 = *(unsigned __int8 *)(v21 + ((v106 >> 24) ^ 0xF7B2E54309));
  v108 = *(unsigned __int8 *)(v21 + (BYTE2(v106) ^ 2));
  v109 = *(unsigned __int8 *)(v21 + (BYTE1(v106) ^ 0xBELL));
  v110 = *(_QWORD *)(STACK[0x380] + 8 * (*(unsigned __int8 *)(v21 + (v36 ^ 0xE3)) ^ 0x23));
  *((_QWORD *)&v42 + 1) = v110 ^ 0x1F8;
  *(_QWORD *)&v42 = v110 ^ 0xCB308CF472657000;
  v111 = (v42 >> 11) - 0x3B3D7ECB488251D1 - ((2 * (v42 >> 11)) & 0x898502696EFB5C5ELL);
  v112 = *(_QWORD *)(STACK[0x380] + 8 * (v107 ^ 0x23));
  *((_QWORD *)&v42 + 1) = v112 ^ 0x1F8;
  *(_QWORD *)&v42 = v112 ^ 0xCB308CF472657000;
  v113 = (v42 >> 11) + 0x4A781FB9AD4012E3 - ((2 * (v42 >> 11)) & 0x94F03F735A8025C6);
  LODWORD(v111) = (((((v113 >> 3) & 0x1BE5C26200000000 ^ 0x945026200000000)
                   + 0x4A781FB9AD4012E3
                   - ((2 * ((v113 >> 3) & 0x1BE5C26200000000 ^ 0x945026200000000)) & 0x14C0044000000000)) ^ v113) >> 32) ^ (((((v111 >> 3) & 0xE5C26219000000 ^ 0x80402210000000) - 0x3B3D7ECB488251D1 - ((2 * ((v111 >> 3) & 0xE5C26219000000 ^ 0x80402210000000)) & 0x181004022000000)) ^ v111) >> 24);
  v114 = (*(_QWORD *)(STACK[0x380]
                    + 8
                    * (*(unsigned __int8 *)(v21
                                          + (((unsigned __int16)((v97 ^ 0xB344)
                                                                                - ((2 * (v97 ^ 0xB344)) & 0x86EE)
                                                                                - 15497) >> 8) ^ 0xC3)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v115 = (*(_QWORD *)(STACK[0x380] + 8 * (*(unsigned __int8 *)(v21 + (v70 ^ 0x22)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v75) = v111 ^ ((((((v114 - ((2 * v114) & 0x26EC34BEAFD5B6uLL) + 0x79D3761A5F57EADBLL) >> 3) & 0x6219A0D800 ^ 0x4209A0D800)
                         - ((2
                           * (((v114 - ((2 * v114) & 0x26EC34BEAFD5B6uLL) + 0x79D3761A5F57EADBLL) >> 3) & 0x6219A0D800 ^ 0x4209A0D800)) & 0x432019000)
                         + 0x79D3771A5F57EADBLL) ^ (v114 - ((2 * v114) & 0x26EC34BEAFD5B6) + 0x79D3761A5F57EADBLL)) >> 8) ^ ((((((v115 - ((2 * v115) & 0x34B7A4E5C655BCuLL) + 0x15DA5BD272E32ADELL) >> 3) & 0xC26219A00000 ^ 0x426208000000) - ((2 * (((v115 - ((2 * v115) & 0x34B7A4E5C655BCuLL) + 0x15DA5BD272E32ADELL) >> 3) & 0xC26219A00000 ^ 0x426208000000)) & 0x848421400000) + 0x15DB5BD272E32ADELL) ^ (v115 - ((2 * v115) & 0x34B7A4E5C655BCLL) + 0x15DA5BD272E32ADELL)) >> 16);
  v116 = *(_QWORD *)(STACK[0x380]
                   + 8
                   * (*(unsigned __int8 *)(v21
                                         + ((((v70 ^ 0x820D3322)
                                            - ((2 * (v70 ^ 0x820D3322)) & 0x1ACA27880uLL)
                                            + 0xE56C64CD6513C40) >> 24) ^ 0xE56C64CD6)) ^ 0x23));
  *((_QWORD *)&v42 + 1) = v116 ^ 0x1F8;
  *(_QWORD *)&v42 = v116 ^ 0xCB308CF472657000;
  v117 = (v42 >> 11) - 0x4BB82B39C5911454 + (~(2 * (v42 >> 11)) | 0x977056738B2228A7) + 1;
  v118 = (*(_QWORD *)(STACK[0x380]
                    + 8
                    * (*(unsigned __int8 *)(v21
                                          + ((((v36 ^ 0xBE5D6DE3)
                                             - (unint64_t)((2 * (v36 ^ 0xBE5D6DE3)) & 0x4EBB59C0)
                                             - 0x4996D1CBD8A25320) >> 24) ^ 0xB6692E3427)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v117) = ((((((v118 + 0x65603479EFFD5E59 - ((2 * v118) & 0x68F3DFFABCB2uLL)) >> 3) & 0x6219A0D800 ^ 0x219A08800)
                   + 0x65603479EFFD5E59
                   - ((2
                     * (((v118 + 0x65603479EFFD5E59 - ((2 * v118) & 0x68F3DFFABCB2uLL)) >> 3) & 0x6219A0D800 ^ 0x219A08800)) & 0xC01340B000)) ^ (v118 + 0x65603479EFFD5E59 - ((2 * v118) & 0x68F3DFFABCB2))) >> 8) ^ (((((v117 >> 3) & 0x1BE5C26200000000 ^ 0x1280C20000000000) - 0x4BB82B39C5911454 - ((2 * ((v117 >> 3) & 0x1BE5C26200000000 ^ 0x1280C20000000000)) & 0x208B808400000000)) ^ v117) >> 32);
  v119 = (*(_QWORD *)(STACK[0x380] + 8 * (v108 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v108) = v117 ^ ((((((v119 - ((2 * v119) & 0x128F375809A922uLL) - 0x6A76B86453FB2B6FLL) >> 3) & 0xC26219A00000 ^ 0x6211800000)
                          - ((2
                            * (((v119 - ((2 * v119) & 0x128F375809A922uLL) - 0x6A76B86453FB2B6FLL) >> 3) & 0xC26219A00000 ^ 0x6211800000)) & 0x840410000000)
                          - 0x6A75B86453FB2B6FLL) ^ (v119 - ((2 * v119) & 0x128F375809A922) - 0x6A76B86453FB2B6FLL)) >> 16);
  v120 = *(_QWORD *)(STACK[0x380] + 8 * (*(unsigned __int8 *)(v21 + (v97 ^ 0x44)) ^ 0x23));
  *((_QWORD *)&v42 + 1) = v120 ^ 0x1F8;
  *(_QWORD *)&v42 = v120 ^ 0xCB308CF472657000;
  v121 = (v42 >> 11) - ((2 * (v42 >> 11)) & 0xA40D9A83A3C457A6) + 0x5206CD41D1E22BD3;
  v122 = (((v121 >> 3) & 0xE5C26219000000 ^ 0x40C02018000000)
        - ((2 * ((v121 >> 3) & 0xE5C26219000000 ^ 0x40C02018000000)) & 0x9808022000000)
        + 0x5306CD41D1E22BD3) ^ v121;
  v123 = (*(_QWORD *)(STACK[0x380] + 8 * (*(unsigned __int8 *)(v21 + ((v104 >> 24) ^ 0x76C2AC9FD5)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v124 = (*(_QWORD *)(STACK[0x380]
                    + 8
                    * (*(unsigned __int8 *)(v21
                                          + ((((v70 ^ 0x820D3322)
                                                              - ((2 * (v70 ^ 0x820D3322)) & 0xACA27880)
                                                              - 699319232) >> 16) ^ 0x51)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v125 = ((((((v124 + 0x28231E372E2B9D79 - ((2 * v124) & 0x63C6E5C573AF2uLL)) >> 3) & 0xC26219A00000 ^ 0x424201800000)
          + 0x28231E372E2B9D79
          - ((2
            * (((v124 + 0x28231E372E2B9D79 - ((2 * v124) & 0x63C6E5C573AF2uLL)) >> 3) & 0xC26219A00000 ^ 0x424201800000)) & 0x44410400000)) ^ (v124 + 0x28231E372E2B9D79 - ((2 * v124) & 0x63C6E5C573AF2))) >> 16) ^ ((((((v123 - 0x3DF76840D5014E43 - ((2 * v123) & 0x112F7E55FD637AuLL)) >> 3) & 0x6219A0D800 ^ 0x620100D000) - 0x3DF76840D5014E43 - ((2 * (((v123 - 0x3DF76840D5014E43 - ((2 * v123) & 0x112F7E55FD637AuLL)) >> 3) & 0x6219A0D800 ^ 0x620100D000)) & 0x4411412000)) ^ (v123 - 0x3DF76840D5014E43 - ((2 * v123) & 0x112F7E55FD637ALL))) >> 8);
  v126 = *(_QWORD *)(STACK[0x380]
                   + 8
                   * (*(unsigned __int8 *)(v21
                                         + ((((v36 ^ 0xBE5D6DE3)
                                                             - ((2 * (v36 ^ 0xBE5D6DE3)) & 0x4EBB59C0)
                                                             + 660450528) >> 16) ^ 0x5DLL)) ^ 0x23));
  *((_QWORD *)&v42 + 1) = v126 ^ 0x1F8;
  *(_QWORD *)&v42 = v126 ^ 0xCB308CF472657000;
  v127 = (v42 >> 11) - ((2 * (v42 >> 11)) & 0x2FAD949F825226F0) + 0x17D6CA4FC1291378;
  v128 = *(_QWORD *)(STACK[0x380] + 8 * (v109 ^ 0x23));
  v129 = v125 ^ (((((v127 >> 3) & 0xE5C26219000000 ^ 0xE0C04018000000)
                 - ((2 * ((v127 >> 3) & 0xE5C26219000000 ^ 0xE0C04018000000)) & 0x189848402000000)
                 + 0x18D6CA4FC1291378) ^ v127) >> 24);
  *((_QWORD *)&v42 + 1) = v128 ^ 0x1F8;
  *(_QWORD *)&v42 = v128 ^ 0xCB308CF472657000;
  v130 = (v42 >> 11) - 0x3314427467ED8464 - ((2 * (v42 >> 11)) & 0x99D77B173024F738);
  v131 = *(_QWORD *)(STACK[0x380] + 8 * (*(unsigned __int8 *)(v21 + (v77 ^ 0xC8)) ^ 0x23));
  v132 = v129 ^ (((((v130 >> 3) & 0x1BE5C26200000000 ^ 0x1985422000000000)
                 - 0x3314427467ED8464
                 + (~(2 * ((v130 >> 3) & 0x1BE5C26200000000 ^ 0x1985422000000000)) | 0xEE3CFFFBFFFFFFFFLL)
                 + 1) ^ v130) >> 32);
  *((_QWORD *)&v42 + 1) = v131 ^ 0x1F8;
  *(_QWORD *)&v42 = v131 ^ 0xCB308CF472657000;
  v133 = (v42 >> 11) - 0x7A27E92BBE620B08 - ((2 * (v42 >> 11)) & 0xBB02DA8833BE9F0);
  v134 = (*(_QWORD *)(STACK[0x380] + 8 * (*(unsigned __int8 *)(v21 + (BYTE2(v104) ^ 0x61)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v135 = (*(_QWORD *)(STACK[0x380]
                    + 8
                    * (*(unsigned __int8 *)(v21
                                          + (((unsigned __int16)((v70 ^ 0x3322)
                                                                                - ((2 * (v70 ^ 0x3322)) & 0x7880)
                                                                                + 15424) >> 8) ^ 0x3CLL)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v136 = *(_QWORD *)(STACK[0x380]
                   + 8
                   * (*(unsigned __int8 *)(v21
                                         + (((unsigned __int16)((v36 ^ 0x6DE3)
                                                                               - ((2 * (v36 ^ 0x6DE3)) & 0x59C0)
                                                                               - 21280) >> 8) ^ 0xACLL)) ^ 0x23));
  *((_QWORD *)&v42 + 1) = v136 ^ 0x1F8;
  *(_QWORD *)&v42 = v136 ^ 0xCB308CF472657000;
  v137 = (v42 >> 11) - ((2 * (v42 >> 11)) & 0x60DFE708DABD6AFELL) - 0x4F900C7B92A14A81;
  LODWORD(v137) = ((((((v134 + 0x581A62416FCBADE2 - ((2 * v134) & 0x34C482DF975BC4uLL)) >> 3) & 0x6219A0D800 ^ 0x4009A05000)
                   + 0x581A62416FCBADE2
                   - ((2
                     * (((v134 + 0x581A62416FCBADE2 - ((2 * v134) & 0x34C482DF975BC4uLL)) >> 3) & 0x6219A0D800 ^ 0x4009A05000)) & 0x8013011000)) ^ (v134 + 0x581A62416FCBADE2 - ((2 * v134) & 0x34C482DF975BC4))) >> 8) ^ (((((v133 >> 3) & 0x1BE5C26200000000 ^ 0x10A1024200000000) - 0x7A27E92BBE620B08 - ((2 * ((v133 >> 3) & 0x1BE5C26200000000 ^ 0x10A1024200000000)) & 0x380048000000000)) ^ v133) >> 32) ^ ((((((v135 - ((2 * v135) & 0x2D7F0CB4766EF0uLL) + 0x79D6BF865A3B3778) >> 3) & 0xC26219A00000 ^ 0xC26009000000) - ((2 * (((v135 - ((2 * v135) & 0x2D7F0CB4766EF0uLL) + 0x79D6BF865A3B3778) >> 3) & 0xC26219A00000 ^ 0xC26009000000)) & 0x1040430400000) + 0x79D7BF865A3B3778) ^ (v135 - ((2 * v135) & 0x2D7F0CB4766EF0) + 0x79D6BF865A3B3778)) >> 16) ^ (((((v137 >> 3) & 0xE5C26219000000 ^ 0x5C26009000000) - ((2 * ((v137 >> 3) & 0xE5C26219000000 ^ 0x5C26009000000)) & 0xCB840012000000) - 0x4E900C7B92A14A81) ^ v137) >> 24);
  v138 = *(unsigned __int8 *)(v10
                            + ((((v137 ^ 0xF7CA5FA9)
                                                - ((2 * (v137 ^ 0xF7CA5FA9)) & 0xDBB1E48C)
                                                + 1842934342) >> 16) ^ 0xD8));
  v139 = *(unsigned __int8 *)(v10 + (v75 ^ 0x6BLL));
  v140 = v108 ^ (v122 >> 24) ^ 0x5F928AF6;
  v141 = v140 - ((2 * (_DWORD)v140) & 0x9E7BFB96) - 0x3A901033B0C20235;
  v142 = (v75 ^ 0xBC7AAA6BLL)
       - ((2 * (v75 ^ 0xBC7AAA6BLL)) & 0x14253A298)
       + 0x4572D109A129D14CLL;
  v143 = (v132 ^ 0x56DDEB85)
       - 2 * ((v132 ^ 0x56DDEB85) & 0x60D3F77C ^ v132 & 0x28)
       - 0x7D237F079F2C08ACLL;
  v144 = *(unsigned __int8 *)(v10 + ((v108 ^ BYTE3(v122)) ^ 0xF6));
  v145 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v137 ^ 0x5FA9)
                                                                  - ((2 * (v137 ^ 0x5FA9)) & 0xE48C)
                                                                  - 3514) >> 8) ^ 0xF2));
  v146 = *(unsigned __int8 *)(v10 + ((v142 >> 24) ^ 0x4572D109A1));
  v147 = *(unsigned __int8 *)(v10 + (v137 ^ 0xA9));
  v148 = *(unsigned __int8 *)(v10 + (BYTE2(v142) ^ 0x29));
  v149 = *(unsigned __int8 *)(v10
                            + ((((v137 ^ 0xF7CA5FA9)
                               - (unint64_t)((2 * (v137 ^ 0xF7CA5FA9)) & 0xDBB1E48C)
                               - 0x4C47BB3492270DBALL) >> 24) ^ 0xB3B844CB6DLL));
  v150 = *(unsigned __int8 *)(v10 + (BYTE1(v142) ^ 0xD1));
  v151 = (*(_QWORD *)(STACK[0x380] + 8 * (v139 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v152 = (*(_QWORD *)(STACK[0x380] + 8 * (v138 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v153 = *(_QWORD *)(STACK[0x380] + 8 * (*(unsigned __int8 *)(v10 + (v132 ^ 0x85)) ^ 0x23));
  *((_QWORD *)&v42 + 1) = v153 ^ 0x1F8;
  *(_QWORD *)&v42 = v153 ^ 0xCB308CF472657000;
  v154 = (v42 >> 11) - ((2 * (v42 >> 11)) & 0x143118E30FDB58CCLL) - 0x75E7738E7812539ALL;
  LODWORD(v151) = ((((((v152 - 0x6DB60AC6EA9DDB68 - ((2 * v152) & 0x13EA722AC44930uLL)) >> 3) & 0xC26219A00000 ^ 0x22200A00000)
                   - 0x6DB60AC6EA9DDB68
                   - ((2
                     * (((v152 - 0x6DB60AC6EA9DDB68 - ((2 * v152) & 0x13EA722AC44930uLL)) >> 3) & 0xC26219A00000 ^ 0x22200A00000)) & 0x1804022400000)) ^ (v152 - 0x6DB60AC6EA9DDB68 - ((2 * v152) & 0x13EA722AC44930))) >> 16) ^ ((((((v151 + 0x194AB515DFD4CCE3 - ((2 * v151) & 0x156A2BBFA999C6uLL)) >> 3) & 0x6219A0D800 ^ 0x2219A09800) + 0x194AB515DFD4CCE3 - ((2 * (((v151 + 0x194AB515DFD4CCE3 - ((2 * v151) & 0x156A2BBFA999C6uLL)) >> 3) & 0x19A0D800 ^ 0x19A09800)) & 0x33019000)) ^ (v151 + 0x194AB515DFD4CCE3 - ((2 * v151) & 0x156A2BBFA999C6))) >> 8);
  v155 = (((v154 >> 3) & 0xE5C26219000000 ^ 0x41000210000000)
        - ((v154 >> 2) & 0x100C002000000)
        - 0x74E7738E7812539ALL) ^ v154;
  v156 = *(_QWORD *)(STACK[0x380] + 8 * (v144 ^ 0x23));
  *((_QWORD *)&v42 + 1) = v156 ^ 0x1F8;
  *(_QWORD *)&v42 = v156 ^ 0xCB308CF472657000;
  v157 = (v42 >> 11) + 0x376313520336B3EFLL - ((2 * (v42 >> 11)) & 0x6EC626A4066D67DELL);
  v158 = (*(_QWORD *)(STACK[0x380] + 8 * (*(unsigned __int8 *)(v10 + ((v141 >> 24) ^ 0xC56FEFCC4FLL)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v36) = v151 ^ (v155 >> 24) ^ (((((v157 >> 3) & 0x1BE5C26200000000 ^ 0x2E4426200000000)
                                        + 0x376313520336B3EFLL
                                        - ((2 * ((v157 >> 3) & 0x1BE5C26200000000 ^ 0x2E4426200000000)) & 0x26C2048400000000)) ^ v157) >> 32);
  v159 = ((((v158 - 0x7257C13C872243CFLL - ((2 * v158) & 0x107D86F1BB7862uLL)) >> 3) & 0x6219A0D800 ^ 0x4009009000)
        - 0x7257C13C872243CFLL
        - ((2
          * (((v158 - 0x7257C13C872243CFLL - ((2 * v158) & 0x107D86F1BB7862uLL)) >> 3) & 0x6219A0D800 ^ 0x4009009000)) & 0x8431013000)) ^ (v158 - 0x7257C13C872243CFLL - ((2 * v158) & 0x107D86F1BB7862));
  v160 = (*(_QWORD *)(STACK[0x380] + 8 * (v146 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v161 = *(_QWORD *)(STACK[0x380] + 8 * (v145 ^ 0x23));
  *((_QWORD *)&v42 + 1) = v161 ^ 0x1F8;
  *(_QWORD *)&v42 = v161 ^ 0xCB308CF472657000;
  v162 = (v42 >> 11) - ((2 * (v42 >> 11)) & 0xCEDF71A90D11F770) - 0x1890472B79770448;
  LODWORD(v159) = ((((((v160 - 0x3D4333EDA4F77293 - ((2 * v160) & 0x399824B6111ADAuLL)) >> 3) & 0xC26219A00000 ^ 0x800209200000)
                   - 0x3D4333EDA4F77293
                   - ((2
                     * (((v160 - 0x3D4333EDA4F77293 - ((2 * v160) & 0x399824B6111ADAuLL)) >> 3) & 0xC26219A00000 ^ 0x800209200000)) & 0x1800432000000)) ^ (v160 - 0x3D4333EDA4F77293 - ((2 * v160) & 0x399824B6111ADALL))) >> 16) ^ (v159 >> 8);
  v163 = (((v162 >> 3) & 0xE5C26219000000 ^ 0xE5C20210000000)
        - ((2 * ((v162 >> 3) & 0xE5C26219000000 ^ 0xE5C20210000000)) & 0xCB008000000000)
        - 0x1790472B79770448) ^ v162;
  v164 = *(_QWORD *)(STACK[0x380] + 8 * (*(unsigned __int8 *)(v10 + ((v143 >> 24) ^ 0x82DC80F860)) ^ 0x23));
  LODWORD(v159) = v159 ^ (v163 >> 24);
  *((_QWORD *)&v42 + 1) = v164 ^ 0x1F8;
  *(_QWORD *)&v42 = v164 ^ 0xCB308CF472657000;
  v165 = (v42 >> 11) - 0x4A7B533B956D3AF3 - ((2 * (v42 >> 11)) & 0x6B095988D5258A1ALL);
  LODWORD(v132) = v159 ^ (((((v165 >> 3) & 0x1BE5C26200000000 ^ 0x12A0800000000000)
                          - 0x4A7B533B956D3AF3
                          - ((2 * ((v165 >> 3) & 0x1BE5C26200000000 ^ 0x12A0800000000000)) & 0x2309008000000000)) ^ v165) >> 32);
  v166 = *(_QWORD *)(STACK[0x380] + 8 * (*(unsigned __int8 *)(v10 + (BYTE2(v143) ^ 0xD3)) ^ 0x23));
  *((_QWORD *)&v42 + 1) = v166 ^ 0x1F8;
  *(_QWORD *)&v42 = v166 ^ 0xCB308CF472657000;
  v167 = (v42 >> 11) + 0x2CE18AEB767D0F34 - ((2 * (v42 >> 11)) & 0x59C315D6ECFA1E68);
  v168 = (*(_QWORD *)(STACK[0x380] + 8 * (*(unsigned __int8 *)(v10 + (BYTE2(v141) ^ 0x3DLL)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v167) = ((((((v168 - 0x17E7099C8CE77A8ALL - ((2 * v168) & 0x31ECC6E6310AECuLL)) >> 3) & 0x6219A0D800 ^ 0x4008201000)
                   - 0x17E7099C8CE77A8ALL
                   - ((2
                     * (((v168 - 0x17E7099C8CE77A8ALL - ((2 * v168) & 0x31ECC6E6310AECuLL)) >> 3) & 0x6219A0D800 ^ 0x4008201000)) & 0xC422010000)) ^ (v168 - 0x17E7099C8CE77A8ALL - ((2 * v168) & 0x31ECC6E6310AECLL))) >> 8) ^ (((((v167 >> 3) & 0x1BE5C26200000000 ^ 0x184004000000000) + 0x2CE18AEB767D0F34 - ((2 * ((v167 >> 3) & 0x1BE5C26200000000 ^ 0x184004000000000)) & 0x11C304C400000000)) ^ v167) >> 32);
  v169 = (*(_QWORD *)(STACK[0x380] + 8 * (v148 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v170 = *(_QWORD *)(STACK[0x380] + 8 * (v147 ^ 0x23));
  LODWORD(v167) = v167 ^ ((((((v169 - ((2 * v169) & 0x133E51AEF890AEuLL) - 0x4F7660D72883B7A9) >> 3) & 0xC26219A00000 ^ 0x26018A00000)
                          - ((2
                            * (((v169 - ((2 * v169) & 0x133E51AEF890AEuLL) - 0x4F7660D72883B7A9) >> 3) & 0xC26219A00000 ^ 0x26018A00000)) & 0x1044022400000)
                          - 0x4F7560D72883B7A9) ^ (v169 - ((2 * v169) & 0x133E51AEF890AELL) - 0x4F7660D72883B7A9)) >> 16);
  *((_QWORD *)&v42 + 1) = v170 ^ 0x1F8;
  *(_QWORD *)&v42 = v170 ^ 0xCB308CF472657000;
  v171 = (v42 >> 11) - ((2 * (v42 >> 11)) & 0xDD66FCDD0F0CBDAALL) + 0x6EB37E6E87865ED5;
  v172 = (*(_QWORD *)(STACK[0x380] + 8 * (v149 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v171) = v167 ^ (((((v171 >> 3) & 0xE5C26219000000 ^ 0xC4424010000000)
                          - ((2 * ((v171 >> 3) & 0xE5C26219000000 ^ 0xC4424010000000)) & 0x14284C402000000)
                          + 0x6FB37E6E87865ED5) ^ v171) >> 24);
  v173 = *(_QWORD *)(STACK[0x380] + 8 * (*(unsigned __int8 *)(v10 + (BYTE1(v143) ^ 0xF7)) ^ 0x23));
  *((_QWORD *)&v42 + 1) = v173 ^ 0x1F8;
  *(_QWORD *)&v42 = v173 ^ 0xCB308CF472657000;
  v174 = ((((v172 + 0x76C66EFA5CB55739 - ((2 * v172) & 0xCDDF4B96AAE72uLL)) >> 3) & 0xC26219A00000 ^ 0xC04209800000)
        + 0x76C66EFA5CB55739
        - ((2
          * (((v172 + 0x76C66EFA5CB55739 - ((2 * v172) & 0xCDDF4B96AAE72uLL)) >> 3) & 0xC26219A00000 ^ 0xC04209800000)) & 0x84C431400000)) ^ (v172 + 0x76C66EFA5CB55739 - ((2 * v172) & 0xCDDF4B96AAE72));
  v175 = (v42 >> 11) - ((2 * (v42 >> 11)) & 0xB7E8B508DE5B33E8) - 0x240BA57B90D2660CLL;
  v176 = *(_QWORD *)(STACK[0x380] + 8 * (*(unsigned __int8 *)(v10 + (BYTE1(v141) ^ 0xFDLL)) ^ 0x23));
  *((_QWORD *)&v42 + 1) = v176 ^ 0x1F8;
  *(_QWORD *)&v42 = v176 ^ 0xCB308CF472657000;
  v177 = (((v175 ^ 0xDB25B66B5DD4A53ALL) + (v175 & 0xF8D1ECEF32F93CCELL ^ 0xDFFE5B94EF2FDBF5) + 1) >> 27) ^ (v175 >> 24) ^ (v174 >> 16);
  v178 = (v42 >> 11) - 0xA4396A2E2806108 - ((2 * (v42 >> 11)) & 0xEB78D2BA3AFF3DF0);
  v179 = (*(_QWORD *)(STACK[0x380] + 8 * (v150 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v180 = v177 ^ (((((v178 >> 3) & 0x1BE5C26200000000 ^ 0x1AA5802200000000)
                 - 0xA4396A2E2806108
                 - ((2 * ((v178 >> 3) & 0x1BE5C26200000000 ^ 0x1AA5802200000000)) & 0x2348808000000000)) ^ v178) >> 32) ^ ((((((v179 - ((2 * v179) & 0x3AEA3E5C4327DEuLL) + 0x785D751F2E2193EFLL) >> 3) & 0x6219A0D800 ^ 0x2201801000) - ((2 * (((v179 - ((2 * v179) & 0x3AEA3E5C4327DEuLL) + 0x785D751F2E2193EFLL) >> 3) & 0x6219A0D800 ^ 0x2201801000)) & 0x410412000) + 0x785D761F2E2193EFLL) ^ (v179 - ((2 * v179) & 0x3AEA3E5C4327DELL) + 0x785D751F2E2193EFLL)) >> 8);
  v181 = (v171 ^ 0xD7CFBE3CLL)
       - ((2 * (v171 ^ 0xD7CFBE3CLL)) & 0x1C8F44AE0)
       + 0x60FC874BE47A2570;
  v182 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v171 ^ 0xBE3C)
                                                                  - ((2 * (v171 ^ 0xBE3C)) & 0x4AE0)
                                                                  + 9584) >> 8) ^ 0x25));
  v183 = *(unsigned __int8 *)(v10 + (v171 ^ 0x3CLL));
  v184 = *(unsigned __int8 *)(v10
                            + ((((v180 ^ 0x52764DC6)
                               - 2 * ((v180 ^ 0x52764DC6) & 0x3B5C0D3F ^ v180 & 0x11)
                               + 0x4BB6B6CA3B5C0D2ELL) >> 24) ^ 0x4BB6B6CA3BLL));
  v185 = *(unsigned __int8 *)(v10
                            + ((((v180 ^ 0x52764DC6)
                                                - 2 * ((v180 ^ 0x52764DC6) & 0x3B5C0D3F ^ v180 & 0x11)
                                                + 995888430) >> 16) ^ 0x5CLL));
  v186 = *(unsigned __int8 *)(v10 + ((v181 >> 24) ^ 0x60FC874BE4));
  v187 = *(unsigned __int8 *)(v10 + (BYTE2(v181) ^ 0x7ALL));
  v188 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v180 ^ 0x4DC6)
                                                                  - 2 * ((v180 ^ 0x4DC6) & 0xD3F ^ v180 & 0x11)
                                                                  + 3374) >> 8) ^ 0xDLL));
  v189 = *(unsigned __int8 *)(v10 + (v132 ^ 0x93));
  v190 = *(_QWORD *)(STACK[0x380]
                   + 8
                   * (*(unsigned __int8 *)(v10
                                         + (((unint64_t)((v36 ^ 0xF92B26B5)
                                                                               - 2
                                                                               * ((v36 ^ 0xF92B26B5) & 0x68E7592F ^ v36 & 8)
                                                                               + 1759992103) >> 16) ^ 0xE7)) ^ 0x23));
  *((_QWORD *)&v42 + 1) = v190 ^ 0x1F8;
  *(_QWORD *)&v42 = v190 ^ 0xCB308CF472657000;
  v191 = (v42 >> 11) - 0x1804D14B9B54E572 - ((2 * (v42 >> 11)) & 0xCFF65D68C956351CLL);
  v192 = (*(_QWORD *)(STACK[0x380] + 8 * (*(unsigned __int8 *)(v10 + (v180 ^ 0xC6)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v191) = ((((((v192 - 0x133C76DC0244F98ELL - ((2 * v192) & 0x71247FB760CE4uLL)) >> 3) & 0x6219A0D800 ^ 0x2019A04000)
                   - 0x133C76DC0244F98ELL
                   - ((2
                     * (((v192 - 0x133C76DC0244F98ELL - ((2 * v192) & 0x71247FB760CE4uLL)) >> 3) & 0x6219A0D800 ^ 0x2019A04000)) & 0x4433400000)) ^ (v192 - 0x133C76DC0244F98ELL - ((2 * v192) & 0x71247FB760CE4))) >> 8) ^ (((((v191 >> 3) & 0x1BE5C26200000000 ^ 0x18E5404200000000) - 0x1804D14B9B54E572 - ((2 * ((v191 >> 3) & 0x1BE5C26200000000 ^ 0x18E5404200000000)) & 0x7C2044000000000)) ^ v191) >> 32);
  v193 = (*(_QWORD *)(STACK[0x380] + 8 * (v182 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v191) = v191 ^ ((((((v193 - ((2 * v193) & 0x3C07B7CD9DB11CuLL) - 0x2301FC2419312772) >> 3) & 0xC26219A00000 ^ 0xC06218800000)
                          - ((2
                            * (((v193 - ((2 * v193) & 0x3C07B7CD9DB11CuLL) - 0x2301FC2419312772) >> 3) & 0xC26219A00000 ^ 0xC06218800000)) & 0x48401000000)
                          - 0x2300FC2419312772) ^ (v193 - ((2 * v193) & 0x3C07B7CD9DB11CLL) - 0x2301FC2419312772)) >> 16);
  v194 = *(_QWORD *)(STACK[0x380]
                   + 8
                   * (*(unsigned __int8 *)(v10
                                         + ((((v132 ^ 0x7859DC93)
                                            - ((2 * (v132 ^ 0x7859DC93)) & 0x172C81400uLL)
                                            - 0x116981B0469BF600) >> 24) ^ 0xEE967E4FB9)) ^ 0x23));
  *((_QWORD *)&v42 + 1) = v194 ^ 0x1F8;
  *(_QWORD *)&v42 = v194 ^ 0xCB308CF472657000;
  v195 = (v42 >> 11) - ((2 * (v42 >> 11)) & 0xC296EBECEF5A50ECLL) - 0x1EB48A098852D78ALL;
  LODWORD(v180) = v191 ^ (((((v195 >> 3) & 0xE5C26219000000 ^ 0x21422208000000)
                          - ((2 * ((v195 >> 3) & 0xE5C26219000000 ^ 0x21422208000000)) & 0x8280C422000000)
                          - 0x1DB48A098852D78ALL) ^ v195) >> 24);
  v196 = (*(_QWORD *)(STACK[0x380]
                    + 8
                    * (*(unsigned __int8 *)(v10
                                          + ((((v132 ^ 0x7859DC93)
                                                              - ((2 * (v132 ^ 0x7859DC93)) & 0x72C81400)
                                                              - 1184626176) >> 16) ^ 0x64)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v197 = *(_QWORD *)(STACK[0x380]
                   + 8
                   * (*(unsigned __int8 *)(v10
                                         + (((unsigned __int16)((v36 ^ 0x26B5)
                                                                               - 2 * ((v36 ^ 0x26B5) & 0x592F ^ v36 & 8)
                                                                               + 22823) >> 8) ^ 0x59)) ^ 0x23));
  *((_QWORD *)&v42 + 1) = v197 ^ 0x1F8;
  *(_QWORD *)&v42 = v197 ^ 0xCB308CF472657000;
  v198 = (v42 >> 11) + 0x744650F6EFEAC765 + (~(2 * (v42 >> 11)) | 0x17735E12202A7135) + 1;
  v199 = *(_QWORD *)(STACK[0x380] + 8 * (v184 ^ 0x23));
  *((_QWORD *)&v42 + 1) = v199 ^ 0x1F8;
  *(_QWORD *)&v42 = v199 ^ 0xCB308CF472657000;
  v200 = (v42 >> 11) - 0x15789A0B1D703D69 - ((2 * (v42 >> 11)) & 0xD50ECBE9C51F852ELL);
  LODWORD(v196) = (((((v198 >> 3) & 0xE5C26219000000 ^ 0x80C20219000000)
                   + 0x744650F6EFEAC765
                   - ((2 * ((v198 >> 3) & 0xE5C26219000000 ^ 0x80C20219000000)) & 0x8880C412000000)) ^ v198) >> 24) ^ ((((((v196 + 0x1A9E0CB6DAC713D8 - ((2 * v196) & 0x3C196DB58E27B0uLL)) >> 3) & 0xC26219A00000 ^ 0xC00219000000) + 0x1A9E0CB6DAC713D8 - ((2 * (((v196 + 0x1A9E0CB6DAC713D8 - ((2 * v196) & 0x3C196DB58E27B0uLL)) >> 3) & 0xC26219A00000 ^ 0xC00219000000)) & 0x4431000000)) ^ (v196 + 0x1A9E0CB6DAC713D8 - ((2 * v196) & 0x3C196DB58E27B0))) >> 16) ^ (((((v200 >> 3) & 0x1BE5C26200000000 ^ 0x1940C02200000000) - 0x15789A0B1D703D69 - ((2 * ((v200 >> 3) & 0x1BE5C26200000000 ^ 0x1940C02200000000)) & 0x150A80C000000000)) ^ v200) >> 32);
  v201 = (*(_QWORD *)(STACK[0x380] + 8 * (v183 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v202 = *(_QWORD *)(STACK[0x380] + 8 * (v186 ^ 0x23));
  *((_QWORD *)&v42 + 1) = v202 ^ 0x1F8;
  *(_QWORD *)&v42 = v202 ^ 0xCB308CF472657000;
  v203 = (v42 >> 11) - 0x26D78938C5EEAE5FLL - ((2 * (v42 >> 11)) & 0xB250ED8E7422A342);
  v204 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v132 ^ 0xDC93)
                                                                  - ((2 * (v132 ^ 0xDC93)) & 0x1400)
                                                                  + 2560) >> 8) ^ 0xALL)) ^ 0x23;
  LODWORD(v132) = v196 ^ ((((((v201 - ((2 * v201) & 0x23F3546CBC3D32uLL) - 0x342E0655C9A1E167) >> 3) & 0x6219A0D800 ^ 0x200080C000)
                          - ((2
                            * (((v201 - ((2 * v201) & 0x23F3546CBC3D32uLL) - 0x342E0655C9A1E167) >> 3) & 0x6219A0D800 ^ 0x200080C000)) & 0x4420003000)
                          - 0x342E0555C9A1E167) ^ (v201 - ((2 * v201) & 0x23F3546CBC3D32) - 0x342E0655C9A1E167)) >> 8);
  v205 = *(_QWORD *)(STACK[0x380] + 8 * v204);
  *((_QWORD *)&v42 + 1) = v205 ^ 0x1F8;
  *(_QWORD *)&v42 = v205 ^ 0xCB308CF472657000;
  v206 = (v42 >> 11) - 0x38D43C9227D6D837 - ((2 * (v42 >> 11)) & 0x8E5786DBB0524F92);
  v207 = (*(_QWORD *)(STACK[0x380] + 8 * (*(unsigned __int8 *)(v10 + (v36 ^ 0xB5)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v206) = (((((v206 >> 3) & 0x1BE5C26200000000 ^ 0x18E5406000000000)
                   - 0x38D43C9227D6D837
                   - ((2 * ((v206 >> 3) & 0x1BE5C26200000000 ^ 0x18E5406000000000)) & 0x64384C000000000)) ^ v206) >> 32) ^ (((((v203 >> 3) & 0xE5C26219000000 ^ 0x25024001000000) - 0x26D78938C5EEAE5FLL - ((2 * ((v203 >> 3) & 0xE5C26219000000 ^ 0x25024001000000)) & 0x40848430000000)) ^ v203) >> 24) ^ ((((((v207 - ((2 * v207) & 0x2FD6997CE75D66uLL) - 0x67E814B3418C514DLL) >> 3) & 0x6219A0D800 ^ 0x6011805000) - ((2 * (((v207 - ((2 * v207) & 0x2FD6997CE75D66uLL) - 0x67E814B3418C514DLL) >> 3) & 0x6219A0D800 ^ 0x6011805000)) & 0x8030411000) - 0x67E813B3418C514DLL) ^ (v207 - ((2 * v207) & 0x2FD6997CE75D66) - 0x67E814B3418C514DLL)) >> 8);
  v208 = (*(_QWORD *)(STACK[0x380] + 8 * (v185 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v185) = v206 ^ ((((((v208 - ((2 * v208) & 0x2A8FC5790FCCD2uLL) + 0x74D547E2BC87E669) >> 3) & 0xC26219A00000 ^ 0x806011800000)
                          - ((2
                            * (((v208 - ((2 * v208) & 0x2A8FC5790FCCD2uLL) + 0x74D547E2BC87E669) >> 3) & 0xC26219A00000 ^ 0x806011800000)) & 0x84C431000000)
                          + 0x74D647E2BC87E669) ^ (v208 - ((2 * v208) & 0x2A8FC5790FCCD2) + 0x74D547E2BC87E669)) >> 16);
  v209 = (*(_QWORD *)(STACK[0x380] + 8 * (v188 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v210 = (*(_QWORD *)(STACK[0x380] + 8 * (v187 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v209) = ((((((v210 + 0x72130BB9FB052954 - ((2 * v210) & 0x261773F60A52A8uLL)) >> 3) & 0xC26219A00000 ^ 0x406219200000)
                   + 0x72130BB9FB052954
                   - ((2
                     * (((v210 + 0x72130BB9FB052954 - ((2 * v210) & 0x261773F60A52A8uLL)) >> 3) & 0xC26219A00000 ^ 0x406219200000)) & 0x44032000000)) ^ (v210 + 0x72130BB9FB052954 - ((2 * v210) & 0x261773F60A52A8))) >> 16) ^ ((((((v209 - 0x367DEC5A2EBB1A1FLL - ((2 * v209) & 0x4274BA289CBC2uLL)) >> 3) & 0x6219A0D800 ^ 0x6018209800) - 0x367DEC5A2EBB1A1FLL - ((2 * (((v209 - 0x367DEC5A2EBB1A1FLL - ((2 * v209) & 0x4274BA289CBC2uLL)) >> 3) & 0x6219A0D800 ^ 0x6018209800)) & 0x4022018000)) ^ (v209 - 0x367DEC5A2EBB1A1FLL - ((2 * v209) & 0x4274BA289CBC2))) >> 8);
  v211 = *(_QWORD *)(STACK[0x380] + 8 * (v189 ^ 0x23));
  *((_QWORD *)&v42 + 1) = v211 ^ 0x1F8;
  *(_QWORD *)&v42 = v211 ^ 0xCB308CF472657000;
  v212 = (v42 >> 11) - ((2 * (v42 >> 11)) & 0x16DAC264215B0A30) - 0x74929ECDEF527AE8;
  v213 = *(_QWORD *)(STACK[0x380]
                   + 8
                   * (*(unsigned __int8 *)(v10
                                         + ((((v36 ^ 0xF92B26B5)
                                            - 2
                                            * ((v36 ^ 0xF92B26B5) & 0x68E7592F ^ (unint64_t)(v36 & 8))
                                            - 0x79658E8B9718A6D9) >> 24) ^ 0x869A717468)) ^ 0x23));
  *((_QWORD *)&v42 + 1) = v213 ^ 0x1F8;
  *(_QWORD *)&v42 = v213 ^ 0xCB308CF472657000;
  LODWORD(v209) = v209 ^ (((((v212 >> 3) & 0xE5C26219000000 ^ 0x65802200000000)
                          - ((2 * ((v212 >> 3) & 0xE5C26219000000 ^ 0x65802200000000)) & 0xCA804420000000)
                          - 0x73929ECDEF527AE8) ^ v212) >> 24);
  v214 = (v42 >> 11) + 0x4E23D53EB57034FCLL - ((2 * (v42 >> 11)) & 0x9C47AA7D6AE069F8);
  LODWORD(v209) = v209 ^ (((((v214 >> 3) & 0x1BE5C26200000000 ^ 0x9C4422200000000)
                          + 0x4E23D53EB57034FCLL
                          - ((2 * ((v214 >> 3) & 0x1BE5C26200000000 ^ 0x9C4422200000000)) & 0x1443804400000000)) ^ v214) >> 32);
  v215 = (v209 ^ 0x8FCA4CE7)
       - ((2 * (v209 ^ 0x8FCA4CE7)) & 0x1C53F53B8)
       - 0x72C59B31D605624;
  v216 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v209 ^ 0x4CE7)
                                                                  - ((2 * (v209 ^ 0x4CE7)) & 0x53B8)
                                                                  - 22052) >> 8) ^ 0xA9));
  v217 = *(unsigned __int8 *)(v10
                            + ((((v185 ^ 0x854FA656)
                                                - ((2 * (v185 ^ 0x854FA656)) & 0x64822332)
                                                - 1304358503) >> 16) ^ 0x41));
  v218 = *(unsigned __int8 *)(v10
                            + ((((v132 ^ 0x2967F6FE)
                                                - ((2 * (v132 ^ 0x2967F6FE)) & 0x29213CC4)
                                                - 1802461598) >> 16) ^ 0x90));
  v219 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v132 ^ 0xF6FE)
                                                                  - ((2 * (v132 ^ 0xF6FE)) & 0x3CC4)
                                                                  - 24990) >> 8) ^ 0x9ELL));
  v220 = *(unsigned __int8 *)(v10 + (v209 ^ 0xE7));
  v221 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v185 ^ 0xA656)
                                                                  - ((2 * (v185 ^ 0xA656)) & 0x2332)
                                                                  + 4505) >> 8) ^ 0x11));
  v222 = *(unsigned __int8 *)(v10 + (v185 ^ 0x56));
  v223 = *(unsigned __int8 *)(v10
                            + ((((v180 ^ 0x33848D0D)
                                                - 2 * ((v180 ^ 0x33848D0D) & 0x1C276D5B ^ v180 & 2)
                                                + 472345945) >> 16) ^ 0x27));
  v224 = *(unsigned __int8 *)(v10 + (v132 ^ 0xFELL));
  v225 = (((v185 ^ 0x854FA656)
         - ((2 * (v185 ^ 0x854FA656)) & 0x164822332uLL)
         + 0x84008EAB2411199) >> 24) ^ 0x84008EAB2;
  v226 = *(unsigned __int8 *)(v10 + (BYTE2(v215) ^ 0x9FLL));
  v227 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v180 ^ 0x8D0D)
                                                                  - 2 * ((v180 ^ 0x8D0D) & 0x6D5B ^ v180 & 2)
                                                                  + 27993) >> 8) ^ 0x6DLL));
  v228 = *(unsigned __int8 *)(v10 + v225);
  v229 = (((v132 ^ 0x2967F6FELL)
         - ((2 * (v132 ^ 0x2967F6FELL)) & 0x129213CC4uLL)
         + 0x3FA11DAA94909E62) >> 24) ^ 0x3FA11DAA94;
  v230 = *(unsigned __int8 *)(v10 + ((v215 >> 24) ^ 0xF8D3A64CE2));
  v231 = *(unsigned __int8 *)(v10 + v229);
  v232 = *(_QWORD *)(STACK[0x380]
                   + 8
                   * (*(unsigned __int8 *)(v10
                                         + ((((v180 ^ 0x33848D0DLL)
                                            - 2 * ((v180 ^ 0x33848D0DLL) & 0x1C276D5B ^ v180 & 2)
                                            + 0x382A5A171C276D59) >> 24) ^ 0x382A5A171CLL)) ^ 0x23));
  v233 = *(unsigned __int8 *)(v10 + (v180 ^ 0xDLL));
  *((_QWORD *)&v42 + 1) = v232 ^ 0x1F8;
  *(_QWORD *)&v42 = v232 ^ 0xCB308CF472657000;
  v234 = (v42 >> 11) + 0x3142A73A111F1C6CLL - ((2 * (v42 >> 11)) & 0x62854E74223E38D8);
  v235 = (*(_QWORD *)(STACK[0x380] + 8 * (v216 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v236 = ((((((v235 - ((2 * v235) & 0xB936FA6B492C4uLL) + 0x7465C9B7D35A4962) >> 3) & 0x6219A0D800 ^ 0x2218204800)
          - ((2
            * (((v235 - ((2 * v235) & 0xB936FA6B492C4uLL) + 0x7465C9B7D35A4962) >> 3) & 0x6219A0D800 ^ 0x2218204800)) & 0x4422009000)
          + 0xB7D35A4962) ^ (v235 - ((2 * v235) & 0xB936FA6B492C4) + 0x7465C9B7D35A4962)) >> 8) ^ (((((v234 >> 3) & 0x1BE5C26200000000 ^ 0x220406200000000) + 0x3142A73A111F1C6CLL - ((2 * ((v234 >> 3) & 0x1BE5C26200000000 ^ 0x220406200000000)) & 0x2281044400000000)) ^ v234) >> 32);
  v237 = (*(_QWORD *)(STACK[0x380] + 8 * (v217 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v238 = (((((v237 - ((2 * v237) & 0x25DA5A5B9F7B78uLL) - 0x392D12D2D2304244) >> 3) & 0xC26219A00000 ^ 0x402001A00000)
         - ((2
           * (((v237 - ((2 * v237) & 0x25DA5A5B9F7B78uLL) - 0x392D12D2D2304244) >> 3) & 0xC26219A00000 ^ 0x402001A00000)) & 0x804013000000)
         + 0xED2D2DCFBDBCLL) ^ (v237 - ((2 * v237) & 0x25DA5A5B9F7B78) - 0x392D12D2D2304244)) >> 16;
  LODWORD(v238) = v238 + 2074156538 - ((2 * v238) & 0xF7423BF4);
  v239 = v238 ^ 0xC0F73908;
  v240 = *(_QWORD *)(STACK[0x380] + 8 * (v218 ^ 0x23));
  *((_QWORD *)&v42 + 1) = v240 ^ 0x1F8;
  *(_QWORD *)&v42 = v240 ^ 0xCB308CF472657000;
  v241 = (v42 >> 11) - ((2 * (v42 >> 11)) & 0x7E03DC3CE6BE6608) + 0x3F01EE1E735F3304;
  LODWORD(v141) = (2 * (v236 & 0x80000)) ^ 0x100000 | v236 & 0x80000;
  v242 = v141 + 247409937;
  v243 = v141 - 0x80000;
  v244 = 248458513 - v141;
  if ((v243 & (v238 ^ 0x7BA11DFA)) != 0)
    v245 = v244;
  else
    v245 = v242;
  v246 = *(_QWORD *)(v37 + 8 * (v219 ^ 0x23));
  v247 = v236 & 0xFFF7FFFF ^ (((((v241 >> 3) & 0xE5C26219000000 ^ 0xE0004208000000)
                              - ((2 * ((v241 >> 3) & 0xE5C26219000000 ^ 0xE0004208000000)) & 0x3840422000000)
                              + 0x1EE1E735F3304) ^ v241) >> 24) ^ (v239 - 247934225 + v245);
  *((_QWORD *)&v248 + 1) = v246 ^ 0x1F8;
  *(_QWORD *)&v248 = v246 ^ 0xCB308CF472657000;
  v249 = (v248 >> 11) + 0x4B4AAEC321F4D18BLL - ((2 * (v248 >> 11)) & 0x96955D8643E9A316);
  v250 = *(_QWORD *)(v37 + 8 * (v223 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v250 ^ 0x1F8;
  *(_QWORD *)&v248 = v250 ^ 0xCB308CF472657000;
  v251 = (v248 >> 11) + 0x306C5E7A31FBEC45 - ((2 * (v248 >> 11)) & 0x60D8BCF463F7D88ALL);
  LODWORD(v249) = (((((v251 >> 3) & 0x1BE5C26200000000 ^ 0x205824200000000)
                   + 0x306C5E7A31FBEC45
                   - ((2 * ((v251 >> 3) & 0x1BE5C26200000000 ^ 0x205824200000000)) & 0x20C884C400000000)) ^ v251) >> 32) ^ (((((v249 >> 3) & 0xE5C26219000000 ^ 0x61404000000000) + 0x4B4AAEC321F4D18BLL - ((2 * ((v249 >> 3) & 0xE5C26219000000 ^ 0x61404000000000)) & 0x81048402000000)) ^ v249) >> 24);
  v252 = (*(_QWORD *)(v37 + 8 * (v220 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v249) = v249 ^ ((((((v252 - ((2 * v252) & 0x33667A4D9583E4uLL) + 0xFD9B33D26CAC1F2) >> 3) & 0x6219A0D800 ^ 0x6200805800)
                          - ((2
                            * (((v252 - ((2 * v252) & 0x33667A4D9583E4uLL) + 0xFD9B33D26CAC1F2) >> 3) & 0x6219A0D800 ^ 0x6200805800)) & 0x4001018000)
                          + 0xFD9B43D26CAC1F2) ^ (v252 - ((2 * v252) & 0x33667A4D9583E4) + 0xFD9B33D26CAC1F2)) >> 8);
  v253 = (*(_QWORD *)(v37 + 8 * (v221 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v254 = v249 ^ ((((((v253 - ((2 * v253) & 0x38420485AE080uLL) + 0x57E1C210242D7040) >> 3) & 0xC26219A00000 ^ 0x4200800000)
                 - (((v253 - ((2 * v253) & 0x38420485AE080uLL) + 0x57E1C210242D7040) >> 2) & 0x1840000400000)
                 + 0x57E2C210242D7040) ^ (v253 - ((2 * v253) & 0x38420485AE080) + 0x57E1C210242D7040)) >> 16);
  v255 = *(_QWORD *)(v37 + 8 * (v222 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v255 ^ 0x1F8;
  *(_QWORD *)&v248 = v255 ^ 0xCB308CF472657000;
  v256 = (v248 >> 11) + 0x7B4CB8C313972089 - ((2 * (v248 >> 11)) & 0xF6997186272E4112);
  v257 = *(_QWORD *)(v37 + 8 * (v224 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v257 ^ 0x1F8;
  *(_QWORD *)&v248 = v257 ^ 0xCB308CF472657000;
  v258 = (v248 >> 11) + 0xF118CE35D066478 - ((2 * (v248 >> 11)) & 0x1E2319C6BA0CC8F0);
  LODWORD(v256) = (((((v258 >> 3) & 0x1BE5C26200000000 ^ 0x1E0000000000000)
                   + 0xF118CE35D066478
                   - ((2 * ((v258 >> 3) & 0x1BE5C26200000000 ^ 0x1E0000000000000)) & 0x160300C400000000)) ^ v258) >> 32) ^ (((((v256 >> 3) & 0xE5C26219000000 ^ 0x61820000000000) + 0x7B4CB8C313972089 - ((2 * ((v256 >> 3) & 0xE5C26219000000 ^ 0x61820000000000)) & 0x89008422000000)) ^ v256) >> 24);
  v259 = (*(_QWORD *)(v37 + 8 * (v227 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v256) = v256 ^ ((((((v259 - ((2 * v259) & 0x1E0CCCC7194568uLL) + 0x42CF0666638CA2B4) >> 3) & 0x6219A0D800 ^ 0x4008209000)
                          - ((2
                            * (((v259 - ((2 * v259) & 0x1E0CCCC7194568uLL) + 0x42CF0666638CA2B4) >> 3) & 0x6219A0D800 ^ 0x4008209000)) & 0xC403010000)
                          + 0x42CF0766638CA2B4) ^ (v259 - ((2 * v259) & 0x1E0CCCC7194568) + 0x42CF0666638CA2B4)) >> 8);
  v260 = (*(_QWORD *)(v37 + 8 * (v230 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v261 = *(_QWORD *)(v37 + 8 * (v226 ^ 0x23));
  v262 = v256 ^ ((((((v260 - ((2 * v260) & 0x1F3997DDD250D4uLL) - 0x425063341116D796) >> 3) & 0xC26219A00000 ^ 0xC20019800000)
                 - ((2
                   * (((v260 - ((2 * v260) & 0x1F3997DDD250D4uLL) - 0x425063341116D796) >> 3) & 0xC26219A00000 ^ 0xC20019800000)) & 0x1008411400000)
                 - 0x424F63341116D796) ^ (v260 - ((2 * v260) & 0x1F3997DDD250D4) - 0x425063341116D796)) >> 16);
  *((_QWORD *)&v248 + 1) = v261 ^ 0x1F8;
  *(_QWORD *)&v248 = v261 ^ 0xCB308CF472657000;
  v263 = (v248 >> 11) + 0x4BCDCC620D38C79FLL - ((2 * (v248 >> 11)) & 0x979B98C41A718F3ELL);
  v264 = *(_QWORD *)(v37 + 8 * (v228 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v264 ^ 0x1F8;
  *(_QWORD *)&v248 = v264 ^ 0xCB308CF472657000;
  v265 = (v248 >> 11) + 0x3052F5BC374AE06ALL - ((2 * (v248 >> 11)) & 0x60A5EB786E95C0D4);
  LODWORD(v263) = (((((v265 >> 3) & 0x1BE5C26200000000 ^ 0x200422200000000)
                   + 0x3052F5BC374AE06ALL
                   - ((2 * ((v265 >> 3) & 0x1BE5C26200000000 ^ 0x200422200000000)) & 0x2081804000000000)) ^ v265) >> 32) ^ (((((v263 >> 3) & 0xE5C26219000000 ^ 0x61800001000000) + 0x4BCDCC620D38C79FLL - ((2 * ((v263 >> 3) & 0xE5C26219000000 ^ 0x61800001000000)) & 0x18B80C412000000)) ^ v263) >> 24);
  v266 = (*(_QWORD *)(v37 + 8 * (v231 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v263) = v263 ^ ((((((v266 - ((2 * v266) & 0x3ACD22F59E1CC8uLL) + 0x649D66917ACF0E64) >> 3) & 0x6219A0D800 ^ 0x420900C000)
                          - ((2
                            * (((v266 - ((2 * v266) & 0x3ACD22F59E1CC8uLL) + 0x649D66917ACF0E64) >> 3) & 0x19A0D800 ^ 0x900C000)) & 0x31001000)
                          + 0x649D67917ACF0E64) ^ (v266 - ((2 * v266) & 0x3ACD22F59E1CC8) + 0x649D66917ACF0E64)) >> 8);
  v267 = (*(_QWORD *)(v37 + 8 * (v233 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v268 = (v247 ^ 0x44E1A65Eu) - (unint64_t)((2 * (v247 ^ 0x44E1A65E)) & 0x1127FCA2) - 0x78C8EF0BF76C01AFLL;
  LODWORD(v263) = v263 ^ ((((((v267 - ((2 * v267) & 0xF6EC2982741A4uLL) - 0x1F38489EB3EC5F2ELL) >> 3) & 0xC26219A00000 ^ 0xC26009800000)
                          - ((2
                            * (((v267 - ((2 * v267) & 0xF6EC2982741A4uLL) - 0x1F38489EB3EC5F2ELL) >> 3) & 0xC26219A00000 ^ 0xC26009800000)) & 0x104C010000000)
                          - 0x1F37489EB3EC5F2ELL) ^ (v267 - ((2 * v267) & 0xF6EC2982741A4) - 0x1F38489EB3EC5F2ELL)) >> 16);
  v269 = *(unsigned __int8 *)(v10 + ((v268 >> 24) ^ 0x873710F408));
  v270 = *(unsigned __int8 *)(v10
                            + ((((v263 ^ 0x369777FFLL)
                               - ((2 * (v263 ^ 0x369777FFLL)) & 0x1D0D20EB4uLL)
                               + 0x2E36166EE869075ALL) >> 24) ^ 0x2E36166EE8));
  v271 = *(unsigned __int8 *)(v10 + (v254 ^ 0x33));
  v272 = *(unsigned __int8 *)(v10
                            + ((((v262 ^ 0x9BEF883D)
                                                - ((2 * (v262 ^ 0x9BEF883D)) & 0x7E1243E6)
                                                + 1057563123) >> 16) ^ 9));
  v273 = (v254 ^ 0x792ED733) - ((2 * (v254 ^ 0x792ED733)) & 0xC6CA608C) - 0x23E126E09C9ACFBALL;
  v274 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v254 ^ 0xD733)
                                                                  - ((2 * (v254 ^ 0xD733)) & 0x608C)
                                                                  + 12358) >> 8) ^ 0x30));
  v275 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v262 ^ 0x883D)
                                                                  - ((2 * (v262 ^ 0x883D)) & 0x43E6)
                                                                  + 8691) >> 8) ^ 0x21));
  v276 = *(unsigned __int8 *)(v10
                            + ((((v263 ^ 0x369777FF)
                                                - ((2 * (v263 ^ 0x369777FF)) & 0xD0D20EB4)
                                                - 395770022) >> 16) ^ 0x69));
  v277 = *(unsigned __int8 *)(v10 + (BYTE2(v268) ^ 0x93));
  v278 = *(unsigned __int8 *)(v10 + (v262 ^ 0x3DLL));
  v279 = *(unsigned __int8 *)(v10 + (BYTE1(v268) ^ 0xFELL));
  v280 = *(unsigned __int8 *)(v10 + ((v273 >> 24) ^ 0xDC1ED91F63));
  v281 = (((v262 ^ 0x9BEF883DLL) - (unint64_t)((2 * (v262 ^ 0x9BEF883D)) & 0x7E1243E6) - 0x327FEEE9C0F6DE0DLL) >> 24) ^ 0xCD8011163FLL;
  v282 = *(unsigned __int8 *)(v10 + ~(_BYTE)v263);
  v283 = *(unsigned __int8 *)(v10 + v281);
  v284 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v263 ^ 0x77FF)
                                                                  - ((2 * (v263 ^ 0x77FF)) & 0xEB4)
                                                                  + 1882) >> 8) ^ 7));
  v285 = *(_QWORD *)(v37 + 8 * (v269 ^ 0x23));
  v286 = *(unsigned __int8 *)(v10 + (BYTE2(v273) ^ 0x65));
  v287 = ((v285 >> 11) ^ 0x1966119E8E4CAELL)
       + 0x1DB6B0B17DCBE44ALL
       - ((2 * ((v285 >> 11) ^ 0x1966119E8E4CAELL)) & 0x2D6162FB97C894);
  LODWORD(v273) = (v270 ^ 0xDA) - 974801399 + (~(2 * (v270 ^ 0xDA)) | 0xFFFFFFED) + 1;
  LODWORD(v281) = ((v273 ^ 0x3A1A49F6) + 1) ^ (249 - (v270 ^ 0x23));
  v288 = *(_QWORD *)(v37
                   + 8 * ((((_DWORD)v281 - 974801399 - ((2 * (_DWORD)v281) & 0x8BCB6C12)) ^ v273) + 249));
  *((_QWORD *)&v248 + 1) = v288 ^ 0x1F8;
  *(_QWORD *)&v248 = v288 ^ 0xCB308CF472657000;
  v289 = (v248 >> 11) - 0x1DE0B500E7C177F6 - ((2 * (v248 >> 11)) & 0xC43E95FE307D1014);
  v290 = *(_QWORD *)(v37 + 8 * (v272 ^ 0x23));
  LODWORD(v287) = (((((v289 >> 3) & 0xE5C26219000000 ^ 0x41C04201000000)
                   - 0x1DE0B500E7C177F6
                   - ((2 * ((v289 >> 3) & 0xE5C26219000000 ^ 0x41C04201000000)) & 0xA84C430000000)) ^ v289) >> 24) ^ (((((v287 >> 3) & 0xC26219A00000 ^ 0xC20209A00000) + 0x1DB6B0B17DCBE44ALL - ((2 * ((v287 >> 3) & 0xC26219A00000 ^ 0xC20209A00000)) & 0x1004033000000)) ^ v287) >> 16);
  *((_QWORD *)&v248 + 1) = v290 ^ 0x1F8;
  *(_QWORD *)&v248 = v290 ^ 0xCB308CF472657000;
  v291 = (v248 >> 11) + 0x1ECF500D5FB91EDELL - ((2 * (v248 >> 11)) & 0x3D9EA01ABF723DBCLL);
  LODWORD(v287) = v287 ^ (((((v291 >> 3) & 0x1BE5C26200000000 ^ 0x3C1C20000000000)
                          + 0x1ECF500D5FB91EDELL
                          - ((2 * ((v291 >> 3) & 0x1BE5C26200000000 ^ 0x3C1C20000000000)) & 0x358A800000000000)) ^ v291) >> 32);
  v292 = (*(_QWORD *)(v37 + 8 * (v274 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v293 = *(_QWORD *)(v37 + 8 * (v271 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v293 ^ 0x1F8;
  *(_QWORD *)&v248 = v293 ^ 0xCB308CF472657000;
  LODWORD(v271) = v287 ^ ((((((v292 - ((2 * v292) & 0x16B729F59A3934uLL) - 0x6AF4A46B0532E366) >> 3) & 0x6219A0D800 ^ 0x6219008000)
                          - ((2
                            * (((v292 - ((2 * v292) & 0x16B729F59A3934uLL) - 0x6AF4A46B0532E366) >> 3) & 0x19A0D800 ^ 0x19008000)) & 0x31003000)
                          - 0x6AF4A36B0532E366) ^ (v292 - ((2 * v292) & 0x16B729F59A3934) - 0x6AF4A46B0532E366)) >> 8);
  v294 = (v248 >> 11) - 0x1150EB117EDA9C23 - ((2 * (v248 >> 11)) & 0xDD5E29DD024AC7BALL);
  v295 = *(_QWORD *)(v37 + 8 * (v277 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v295 ^ 0x1F8;
  *(_QWORD *)&v248 = v295 ^ 0xCB308CF472657000;
  v296 = (v248 >> 11) - 0x3B8A1E79A96EC96 - ((2 * (v248 >> 11)) & 0xF88EBC30CAD226D4);
  LODWORD(v294) = (((((v296 >> 3) & 0x1BE5C26200000000 ^ 0x1B80C24200000000)
                   - 0x3B8A1E79A96EC96
                   - ((2 * ((v296 >> 3) & 0x1BE5C26200000000 ^ 0x1B80C24200000000)) & 0x308A840000000000)) ^ v296) >> 32) ^ (((((v294 >> 3) & 0xE5C26219000000 ^ 0xC5C20010000000) - 0x1150EB117EDA9C23 - ((2 * ((v294 >> 3) & 0xE5C26219000000 ^ 0xC5C20010000000)) & 0x14A00C402000000)) ^ v294) >> 24);
  v297 = (*(_QWORD *)(v37 + 8 * (v276 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v294) = v294 ^ ((((((v297 - ((2 * v297) & 0x3E1BAF0284ACDCuLL) - 0x4C60F2287EBDA992) >> 3) & 0x6219A0D800 ^ 0x2210204800)
                          - ((2
                            * (((v297 - ((2 * v297) & 0x3E1BAF0284ACDCuLL) - 0x4C60F2287EBDA992) >> 3) & 0x6219A0D800 ^ 0x2210204800)) & 0x840200A000)
                          - 0x4C60F1287EBDA992) ^ (v297 - ((2 * v297) & 0x3E1BAF0284ACDCLL) - 0x4C60F2287EBDA992)) >> 8);
  v298 = (*(_QWORD *)(v37 + 8 * (v275 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v299 = *(_QWORD *)(v37 + 8 * (v278 ^ 0x23));
  LODWORD(v278) = v294 ^ ((((((v298 - ((2 * v298) & 0x1E3A1B3F7CF94EuLL) + 0x5DEF1D0D9FBE7CA7) >> 3) & 0xC26219A00000 ^ 0xC22011A00000)
                          - ((2
                            * (((v298 - ((2 * v298) & 0x1E3A1B3F7CF94EuLL) + 0x5DEF1D0D9FBE7CA7) >> 3) & 0x19A00000 ^ 0x11A00000)) & 0x33400000)
                          + 0x5DF01D0D9FBE7CA7) ^ (v298 - ((2 * v298) & 0x1E3A1B3F7CF94ELL) + 0x5DEF1D0D9FBE7CA7)) >> 16);
  v300 = ((v299 >> 11) ^ 0x1966119E8E4CAELL)
       + 0x50F9D247774427BLL
       - ((2 * ((v299 >> 11) ^ 0x1966119E8E4CAELL)) & 0x1F3A48EEE884F6);
  v301 = (*(_QWORD *)(v37 + 8 * (v280 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v300) = ((((((v301 - 0x69CB095A70EBB8CDLL - ((2 * v301) & 0x29ED4B1E288E66uLL)) >> 3) & 0xC26219A00000 ^ 0x824011A00000)
                   - 0x69CB095A70EBB8CDLL
                   - ((2
                     * (((v301 - 0x69CB095A70EBB8CDLL - ((2 * v301) & 0x29ED4B1E288E66uLL)) >> 3) & 0xC26219A00000 ^ 0x824011A00000)) & 0x1844012000000)) ^ (v301 - 0x69CB095A70EBB8CDLL - ((2 * v301) & 0x29ED4B1E288E66))) >> 16) ^ (((((v300 >> 3) & 0x6219A0D800 ^ 0x2008A08800) + 0x50F9D247774427BLL - ((2 * ((v300 >> 3) & 0x6219A0D800 ^ 0x2008A08800)) & 0x4022408000)) ^ v300) >> 8);
  v302 = *(_QWORD *)(v37 + 8 * (v279 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v302 ^ 0x1F8;
  *(_QWORD *)&v248 = v302 ^ 0xCB308CF472657000;
  v303 = (v248 >> 11) - ((2 * (v248 >> 11)) & 0x90CD5101E6C0F442) + 0x4866A880F3607A21;
  LODWORD(v300) = v300 ^ (((((v303 >> 3) & 0xE5C26219000000 ^ 0x4C00018000000)
                          - ((2 * ((v303 >> 3) & 0xE5C26219000000 ^ 0x4C00018000000)) & 0xC9000022000000)
                          + 0x4966A880F3607A21) ^ v303) >> 24);
  v304 = *(_QWORD *)(v37 + 8 * (v284 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v304 ^ 0x1F8;
  *(_QWORD *)&v248 = v304 ^ 0xCB308CF472657000;
  v305 = (v248 >> 11) - 0x4153E5CE63CAB3B6 - ((2 * (v248 >> 11)) & 0x7D583463386A9894);
  v306 = *(_QWORD *)(v37 + 8 * (v282 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v306 ^ 0x1F8;
  *(_QWORD *)&v248 = v306 ^ 0xCB308CF472657000;
  LODWORD(v305) = v300 ^ (((((v305 >> 3) & 0x1BE5C26200000000 ^ 0x13C5824200000000)
                          - 0x4153E5CE63CAB3B6
                          - ((2 * ((v305 >> 3) & 0x1BE5C26200000000 ^ 0x13C5824200000000)) & 0x3548044000000000)) ^ v305) >> 32);
  v307 = (v248 >> 11) + 0xF3DB0E3475437FALL - ((2 * (v248 >> 11)) & 0x1E7B61C68EA86FF4);
  v308 = (*(_QWORD *)(v37 + 8 * (v283 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v307) = ((((((v308 - 0x4E2E51B167F869DLL - ((2 * v308) & 0x3A35C9D300F2C6uLL)) >> 3) & 0x6219A0D800 ^ 0x4019200800)
                   - 0x4E2E51B167F869DLL
                   - ((2
                     * (((v308 - 0x4E2E51B167F869DLL - ((2 * v308) & 0x3A35C9D300F2C6uLL)) >> 3) & 0x6219A0D800 ^ 0x4019200800)) & 0xC01300B000)) ^ (v308 - 0x4E2E51B167F869DLL - ((2 * v308) & 0x3A35C9D300F2C6))) >> 8) ^ (((((v307 >> 3) & 0x1BE5C26200000000 ^ 0x1E5820000000000) + 0xF3DB0E3475437FALL - ((2 * ((v307 >> 3) & 0x1BE5C26200000000 ^ 0x1E5820000000000)) & 0x164B00C400000000)) ^ v307) >> 32);
  v309 = (*(_QWORD *)(v37 + 8 * (v286 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v310 = *(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v10 + (v247 ^ 0x5ELL)) ^ 0x23));
  LODWORD(v307) = v307 ^ ((((((v309 - ((2 * v309) & 0x62875DCBCDCFEuLL) - 0x66FCEBC511A19181) >> 3) & 0xC26219A00000 ^ 0x420219800000)
                          - ((2
                            * (((v309 - ((2 * v309) & 0x62875DCBCDCFEuLL) - 0x66FCEBC511A19181) >> 3) & 0xC26219A00000 ^ 0x420219800000)) & 0x4410000000)
                          - 0x66FBEBC511A19181) ^ (v309 - ((2 * v309) & 0x62875DCBCDCFELL) - 0x66FCEBC511A19181)) >> 16);
  *((_QWORD *)&v248 + 1) = v310 ^ 0x1F8;
  *(_QWORD *)&v248 = v310 ^ 0xCB308CF472657000;
  v311 = (v248 >> 11) - ((2 * (v248 >> 11)) & 0xDD27C778B460B442) - 0x116C1C43A5CFA5DFLL;
  v312 = (v271 ^ 0x48BF3C1ELL)
       - ((2 * (v271 ^ 0x48BF3C1E)) & 0x94F101E6)
       - 0x68A070AB5877F0DLL;
  LOBYTE(v279) = v307 ^ (((((v311 >> 3) & 0x19000000 ^ 0x9000000)
                         - ((2 * ((v311 >> 3) & 0x19000000 ^ 0x9000000)) & 0x30000000)
                         + 1513118241) ^ v311) >> 24);
  v313 = *(_BYTE *)(v10
                  + (((unsigned __int16)((v271 ^ 0x3C1E) - ((2 * (v271 ^ 0x3C1E)) & 0x1E6) - 32525) >> 8) ^ 0x80));
  v314 = v307 ^ (((((v311 >> 3) & 0xE5C26219000000 ^ 0xC0406209000000)
                                             - ((2 * ((v311 >> 3) & 0xE5C26219000000 ^ 0xC0406209000000)) & 0x103844030000000)
                                             - 0x106C1C43A5CFA5DFLL) ^ v311) >> 24) ^ 0xEC6615D0;
  v315 = v314 - ((2 * v314) & 0x13315DBE4) - 0x56D7822E6675120ELL;
  LOBYTE(v275) = *(_BYTE *)(v10 + (v305 ^ 0x5ELL));
  v316 = (v305 ^ 0xD44DAA5ELL)
       - 2 * ((v305 ^ 0xD44DAA5ELL) & 0x3CAB34F2 ^ v305 & 0x20)
       + 0x114D736A3CAB34D2;
  LOBYTE(v280) = *(_BYTE *)(v10
                          + (((unsigned __int16)((v278 ^ 0x8B74)
                                                                - ((2 * (v278 ^ 0x8B74)) & 0x90BA)
                                                                + 18525) >> 8) ^ 0x48));
  LOBYTE(v305) = *(_BYTE *)(v10 + (v278 ^ 0x74));
  LOBYTE(v283) = *(_BYTE *)(v10
                          + ((((v278 ^ 0xE6288B74)
                             - ((2 * (v278 ^ 0xE6288B74)) & 0x1570690BAuLL)
                             - 0x4ADC107B547CB7A3) >> 24) ^ 0xB523EF84ABLL));
  LOBYTE(v286) = *(_BYTE *)(v10 + ((v316 >> 24) ^ 0x114D736A3CLL));
  LOBYTE(v282) = *(_BYTE *)(v10 + (BYTE2(v316) ^ 0xABLL));
  v317 = *(_BYTE *)(v10
                  + ((((v278 ^ 0xE6288B74)
                                      - ((2 * (v278 ^ 0xE6288B74)) & 0x570690BA)
                                      - 1417459619) >> 16) ^ 0x83));
  LOBYTE(v276) = *(_BYTE *)(v10 + (BYTE1(v316) ^ 0x34));
  v318 = *(_QWORD *)(v37
                   + 8
                   * (LODWORD(STACK[0x368]) ^ 0x23u ^ (v313 - ((2 * v313) & 0x96) - 53)));
  *((_QWORD *)&v248 + 1) = v318 ^ 0x1F8;
  *(_QWORD *)&v248 = v318 ^ 0xCB308CF472657000;
  v319 = (v248 >> 11) + 0x44B3B7B72839DEE7 - ((2 * (v248 >> 11)) & 0x89676F6E5073BDCELL);
  v320 = ((((v319 >> 3) & 0x1BE5C26200000000 ^ 0x884426200000000)
         + 0x44B3B7B72839DEE7
         - ((2 * ((v319 >> 3) & 0x1BE5C26200000000 ^ 0x884426200000000)) & 0x143044400000000)) ^ v319) >> 32;
  v321 = (*(_QWORD *)(v37
                    + 8
                    * (LODWORD(STACK[0x344]) ^ 0x23u ^ (*(_BYTE *)(v10 + (BYTE2(v315) ^ 0x8ALL))
                                                                                        - ((2
                                                                                          * *(_BYTE *)(v10 + (BYTE2(v315) ^ 0x8ALL))) & 0x4A)
                                                                                        + 37))) >> 11) ^ 0x1966119E8E4CAELL;
  v322 = (*(_QWORD *)(v37
                    + 8
                    * (LODWORD(STACK[0x34C]) ^ 0x23u ^ (v275
                                                                                        - ((2 * v275) & 0x34)
                                                                                        - 102))) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v321) = ((((((v321 + 0x6513995018CF5EB6 - ((2 * v321) & 0x2732A0319EBD6CuLL)) >> 3) & 0x6219A0D800 ^ 0x220100C800)
                   + 0x6513995018CF5EB6
                   - ((2
                     * (((v321 + 0x6513995018CF5EB6 - ((2 * v321) & 0x2732A0319EBD6CuLL)) >> 3) & 0x6219A0D800 ^ 0x220100C800)) & 0x803100B000)) ^ (v321 + 0x6513995018CF5EB6 - ((2 * v321) & 0x2732A0319EBD6CLL))) >> 8) ^ ((((((v322 - ((2 * v322) & 0x2754046653CAA0uLL) + 0x2913AA023329E550) >> 3) & 0xC26219A00000 ^ 0x404000200000) - ((2 * (((v322 - ((2 * v322) & 0x2754046653CAA0uLL) + 0x2913AA023329E550) >> 3) & 0xC26219A00000 ^ 0x404000200000)) & 0x40422400000) + 0x2914AA023329E550) ^ (v322 - ((2 * v322) & 0x2754046653CAA0) + 0x2913AA023329E550)) >> 16);
  v323 = *(_QWORD *)(v37
                   + 8
                   * (LODWORD(STACK[0x360]) ^ 0x23u ^ (v280 - ((2 * v280) & 0x83) - 63)));
  *((_QWORD *)&v248 + 1) = v323 ^ 0x1F8;
  *(_QWORD *)&v248 = v323 ^ 0xCB308CF472657000;
  v324 = (v248 >> 11) - ((2 * (v248 >> 11)) & 0xB4610FA4224E0636) + 0x5A3087D21127031BLL;
  v325 = *(_QWORD *)(v37
                   + 8
                   * (LODWORD(STACK[0x338]) ^ 0x23u ^ (v305 - ((2 * v305) & 0xB8) - 36)));
  *((_QWORD *)&v248 + 1) = v325 ^ 0x1F8;
  *(_QWORD *)&v248 = v325 ^ 0xCB308CF472657000;
  v326 = (v248 >> 11) + 0x677A84A2DE69E5CELL - ((2 * (v248 >> 11)) & 0xCEF50945BCD3CB9CLL);
  LODWORD(v321) = v321 ^ (((((v324 >> 3) & 0xE5C26219000000 ^ 0x44006200000000)
                          - ((2 * ((v324 >> 3) & 0xE5C26219000000 ^ 0x44006200000000)) & 0x41048422000000)
                          + 0x3087D21127031BLL) ^ v324) >> 24) ^ v320;
  v327 = (v321 - ((2 * v321) & 0x8CCD150A) + 1181125253) ^ LODWORD(STACK[0x374]);
  v328 = (((v326 >> 3) & 0xE5C26219000000 ^ 0xE5400019000000)
        + 0x677A84A2DE69E5CELL
        - ((2 * ((v326 >> 3) & 0xE5C26219000000 ^ 0xE5400019000000)) & 0xC1004430000000)) ^ v326;
  v329 = *(_QWORD *)(v37
                   + 8
                   * (LODWORD(STACK[0x348]) ^ 0x23u ^ (*(_BYTE *)(v10
                                                                                                  + (v271 ^ 0x1ELL))
                                                                                       - ((2
                                                                                         * *(_BYTE *)(v10 + (v271 ^ 0x1ELL))) & 0x36)
                                                                                       - 101)));
  *((_QWORD *)&v248 + 1) = v329 ^ 0x1F8;
  *(_QWORD *)&v248 = v329 ^ 0xCB308CF472657000;
  v330 = (v248 >> 11) + 0x1BB1B5257D7312BDLL - ((2 * (v248 >> 11)) & 0x37636A4AFAE6257ALL);
  v331 = (*(_QWORD *)(v37
                    + 8
                    * (LODWORD(STACK[0x334]) ^ 0x23u ^ (*(_BYTE *)(v10 + (BYTE1(v315) ^ 0xEDLL))
                                                                                        - ((2
                                                                                          * *(_BYTE *)(v10 + (BYTE1(v315) ^ 0xEDLL))) & 0x8C)
                                                                                        + 70))) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v328) = (v328 >> 24) ^ ((((((v331 - ((2 * v331) & 0x1DC0E06573BECEuLL) + 0x408EE07032B9DF67) >> 3) & 0x6219A0D800 ^ 0x200001800)
                                  - ((2
                                    * (((v331 - ((2 * v331) & 0x1DC0E06573BECEuLL) + 0x408EE07032B9DF67) >> 3) & 0x6219A0D800 ^ 0x200001800)) & 0xC02141B000)
                                  + 0x408EE17032B9DF67) ^ (v331
                                                           - ((2 * v331) & 0x1DC0E06573BECELL)
                                                           + 0x408EE07032B9DF67)) >> 8);
  v332 = (*(_QWORD *)(v37
                    + 8
                    * (LODWORD(STACK[0x330]) ^ 0x23u ^ (v286
                                                                                        + (~(2 * v286) | 0x61)
                                                                                        + 80))) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v328) = (((((v330 >> 3) & 0x1BE5C26200000000 ^ 0x364022000000000)
                   + 0x1BB1B5257D7312BDLL
                   - ((2 * ((v330 >> 3) & 0x1BE5C26200000000 ^ 0x364022000000000)) & 0x3743004000000000)) ^ v330) >> 32) ^ v328 ^ ((((((v332 - ((2 * v332) & 0xFE04A47754654uLL) + 0x7EA7F02523BAA32ALL) >> 3) & 0xC26219A00000 ^ 0xC20000200000) - ((2 * (((v332 - ((2 * v332) & 0xFE04A47754654uLL) + 0x7EA7F02523BAA32ALL) >> 3) & 0xC26219A00000 ^ 0xC20000200000)) & 0x804003400000) + 0xF02523BAA32ALL) ^ (v332 - ((2 * v332) & 0xFE04A47754654) + 0x7EA7F02523BAA32ALL)) >> 16);
  LODWORD(v286) = (v328 - ((2 * v328) & 0x8F63F922) + 1202846865) ^ LODWORD(STACK[0x37C]);
  v333 = (*(_QWORD *)(v37
                    + 8
                    * (LODWORD(STACK[0x340]) ^ 0x23u ^ (v282 - ((2 * v282) & 0xBA) + 93))) >> 11) ^ 0x1966119E8E4CAELL;
  v334 = (*(_QWORD *)(v37
                    + 8
                    * (LODWORD(STACK[0x33C]) ^ 0x23u ^ (v283
                                                                                        - ((2 * v283) & 0x2C)
                                                                                        - 106))) >> 11) ^ 0x1966119E8E4CAELL;
  v335 = v334 - 0x58770A9C04EAC954 + (~(2 * v334) | 0xFFEE153809D592A7) + 1;
  LODWORD(v293) = *(unsigned __int8 *)(v10 + ((v312 >> 24) ^ 0xF975F8F54ALL)) ^ LODWORD(STACK[0x354]);
  v336 = *(_QWORD *)(v37
                   + 8
                   * (((((v293 ^ 0x8F5E4B75)
                       + ((2 * (v293 ^ 0x8B)) & 0x1FC)
                       + 1889645570
                       - (v293 ^ 0x51)) ^ 0xFFFFFFFC)
                     + (v293 ^ 0x8F5E4B75)
                     + ((2 * (v293 ^ 0x8B)) & 0x1FC)
                     + 1889645570) ^ 0xF9));
  *((_QWORD *)&v248 + 1) = v336 ^ 0x1F8;
  *(_QWORD *)&v248 = v336 ^ 0xCB308CF472657000;
  LODWORD(v333) = (((((v335 >> 3) & 0xC26219A00000 ^ 0x22019200000)
                   - 0x58770A9C04EAC954
                   - ((2 * ((v335 >> 3) & 0xC26219A00000 ^ 0x22019200000)) & 0x80C432000000)) ^ v335) >> 16) ^ ((((((v333 - 0x529680973B3C75F7 - ((2 * v333) & 0x12FED189871412uLL)) >> 3) & 0x6219A0D800 ^ 0x6018805000) - 0x529680973B3C75F7 + (~(2 * (((v333 - 0x529680973B3C75F7 - ((2 * v333) & 0x12FED189871412uLL)) >> 3) & 0x6219A0D800 ^ 0x6018805000)) | 0x3FFEFEEFFFLL) + 1) ^ (v333 - 0x529680973B3C75F7 - ((2 * v333) & 0x12FED189871412))) >> 8);
  v337 = (v248 >> 11) - ((2 * (v248 >> 11)) & 0xC905B878A89ADB9CLL) + 0x6482DC3C544D6DCELL;
  v338 = *(_QWORD *)(v37
                   + 8
                   * (LODWORD(STACK[0x35C]) ^ 0x23u ^ (*(_BYTE *)(v10
                                                                                                  + (v279 ^ 0xD0))
                                                                                       - ((2
                                                                                         * *(_BYTE *)(v10 + (v279 ^ 0xD0))) & 0xDA)
                                                                                       - 19)));
  *((_QWORD *)&v248 + 1) = v338 ^ 0x1F8;
  *(_QWORD *)&v248 = v338 ^ 0xCB308CF472657000;
  v339 = (v248 >> 11) - 0x2F0FA90C73E3322DLL - ((2 * (v248 >> 11)) & 0xA1E0ADE718399BA6);
  LOBYTE(v293) = LODWORD(STACK[0x358]) ^ 0x23 ^ (*(_BYTE *)(v10 + ((v315 >> 24) ^ 0xA9287DD199))
                                               - ((2 * *(_BYTE *)(v10 + ((v315 >> 24) ^ 0xA9287DD199))) & 0xA6)
                                               + 83);
  LODWORD(v315) = v333 ^ (((((v339 >> 3) & 0x1BE5C26200000000 ^ 0x1A04024200000000)
                          - 0x2F0FA90C73E3322DLL
                          - ((2 * ((v339 >> 3) & 0x1BE5C26200000000 ^ 0x1A04024200000000)) & 0x21C084C400000000)) ^ v339) >> 32) ^ (((((v337 >> 3) & 0xE5C26219000000 ^ 0x80420208000000) - ((2 * ((v337 >> 3) & 0xE5C26219000000 ^ 0x80420208000000)) & 0x1804020000000) + 0x6582DC3C544D6DCELL) ^ v337) >> 24);
  LODWORD(v315) = (v315 - ((2 * v315) & 0xFD443908) + 2124553348) ^ LODWORD(STACK[0x378]);
  v340 = (*(_QWORD *)(v37 + 8 * v293) >> 11) ^ 0x1966119E8E4CAELL;
  v341 = *(_QWORD *)(v37
                   + 8
                   * (LODWORD(STACK[0x364]) ^ 0x23u ^ (v276 - ((2 * v276) & 0xC7) - 29)));
  *((_QWORD *)&v248 + 1) = v341 ^ 0x1F8;
  *(_QWORD *)&v248 = v341 ^ 0xCB308CF472657000;
  v342 = (v248 >> 11) - 0x5708100A08672564 - ((2 * (v248 >> 11)) & 0x51EFDFEBEF31B538);
  v343 = *(_QWORD *)(v37
                   + 8
                   * (LODWORD(STACK[0x36C]) ^ 0x23u ^ (v317
                                                                                       + (~(2 * v317) | 0x39)
                                                                                       + 100)));
  LODWORD(v340) = (((((v342 >> 3) & 0xE5C26219000000 ^ 0x4C06218000000)
                   - 0x5708100A08672564
                   - ((2 * ((v342 >> 3) & 0xE5C26219000000 ^ 0x4C06218000000)) & 0xCB84C022000000)) ^ v342) >> 24) ^ ((((((v340 + 0x4FE7F90D2F296349 - ((2 * v340) & 0xFF21A5E52C692uLL)) >> 3) & 0xC26219A00000 ^ 0xC22001A00000) + 0x4FE7F90D2F296349 - ((2 * (((v340 + 0x4FE7F90D2F296349 - ((2 * v340) & 0xFF21A5E52C692uLL)) >> 3) & 0xC26219A00000 ^ 0xC22001A00000)) & 0x800012400000)) ^ (v340 + 0x4FE7F90D2F296349 - ((2 * v340) & 0xFF21A5E52C692))) >> 16);
  *((_QWORD *)&v248 + 1) = v343 ^ 0x1F8;
  *(_QWORD *)&v248 = v343 ^ 0xCB308CF472657000;
  v344 = (v248 >> 11) + 0x45FA30ECAECF1DFALL - ((2 * (v248 >> 11)) & 0x8BF461D95D9E3BF4);
  LODWORD(v340) = v340 ^ (((((v344 >> 3) & 0x1BE5C26200000000 ^ 0x8A5420000000000)
                          + 0x45FA30ECAECF1DFALL
                          - ((2 * ((v344 >> 3) & 0x1BE5C26200000000 ^ 0x8A5420000000000)) & 0x3C000C000000000)) ^ v344) >> 32);
  v345 = (*(_QWORD *)(v37
                    + 8
                    * (LODWORD(STACK[0x350]) ^ 0x23u ^ (*(_BYTE *)(v10 + (BYTE2(v312) ^ 0x78))
                                                                                        - ((2
                                                                                          * *(_BYTE *)(v10 + (BYTE2(v312) ^ 0x78))) & 0xF4)
                                                                                        - 6))) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v340) = v340 ^ ((((((v345 - ((2 * v345) & 0x2BDD69502C3A7EuLL) + 0x58F5EEB4A8161D3FLL) >> 3) & 0x6219A0D800 ^ 0x421100C000)
                          - ((2 * ((v345 - ((2 * v345) & 0x2BDD69502C3A7EuLL) + 0x58F5EEB4A8161D3FLL) >> 3)) & 0x4010003000)
                          + 0xB4A8161D3FLL) ^ (v345 - ((2 * v345) & 0x2BDD69502C3A7ELL) + 0x58F5EEB4A8161D3FLL)) >> 8);
  LODWORD(v340) = (v340 - ((2 * v340) & 0x3DD0303E) + 518527007) ^ LODWORD(STACK[0x370]);
  v346 = (v327 ^ 0x1E94D1A3u) - ((2 * (v327 ^ 0x1E94D1A3u)) & 0x12CD63650) - 0x67E2D91A6994E4D8;
  v347 = *(unsigned __int8 *)(v10 + (v315 ^ 0x8ELL));
  v348 = *(unsigned __int8 *)(v10 + (v340 ^ 0x60));
  v349 = (v286 ^ 0x604165C6)
       - (unint64_t)((2 * (v286 ^ 0x604165C6)) & 0xCBD85E92)
       - 0x2561E0149A13D0B7;
  v350 = *(unsigned __int8 *)(v10 + (BYTE2(v346) ^ 0x6BLL));
  v351 = (v315 ^ 0xC742818E)
       - ((2 * (v315 ^ 0xC742818E)) & 0x17F1B3546)
       - 0x6AA368194072655DLL;
  v352 = (v340 ^ 0x8871AD60)
       - ((2 * (v340 ^ 0x8871AD60)) & 0x11C94635CLL)
       - 0x539F2CC771B5CE52;
  v353 = *(unsigned __int8 *)(v10 + ((v352 >> 24) ^ 0xAC60D3388ELL));
  v354 = *(unsigned __int8 *)(v10 + (v286 ^ 0xC6));
  v355 = *(unsigned __int8 *)(v10 + (BYTE1(v346) ^ 0x1BLL));
  v356 = *(unsigned __int8 *)(v10 + (BYTE2(v352) ^ 0x4ALL));
  v357 = *(unsigned __int8 *)(v10 + (BYTE1(v352) ^ 0x31));
  v358 = *(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v10 + ((v346 >> 24) ^ 0x981D26E596)) ^ 0x23));
  *((_QWORD *)&v248 + 1) = v358 ^ 0x1F8;
  *(_QWORD *)&v248 = v358 ^ 0xCB308CF472657000;
  v359 = (v248 >> 11) + 0x2F57D149C8FF1379 - ((2 * (v248 >> 11)) & 0x5EAFA29391FE26F2);
  v360 = (*(_QWORD *)(v37 + 8 * (v348 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v359) = ((((((v360 - 0x1148EB57595EA181 - ((2 * v360) & 0x2E29514D42BCFEuLL)) >> 3) & 0x6219A0D800 ^ 0x10800800)
                   - 0x1148EB57595EA181
                   - ((2
                     * (((v360 - 0x1148EB57595EA181 - ((2 * v360) & 0x2E29514D42BCFEuLL)) >> 3) & 0x6219A0D800 ^ 0x10800800)) & 0x400140B000)) ^ (v360 - 0x1148EB57595EA181 - ((2 * v360) & 0x2E29514D42BCFELL))) >> 8) ^ (((((v359 >> 3) & 0x1BE5C26200000000 ^ 0x1E0C22000000000) + 0x2F57D149C8FF1379 - ((2 * ((v359 >> 3) & 0x1BE5C26200000000 ^ 0x1E0C22000000000)) & 0x168B808000000000)) ^ v359) >> 32);
  v361 = (*(_QWORD *)(v37 + 8 * (v347 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v362 = *(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v10 + (BYTE1(v349) ^ 0x2FLL)) ^ 0x23));
  LODWORD(v359) = v359 ^ ((((((v361 - ((2 * v361) & 0x3D0E4EE0905ADEuLL) - 0x34178D88FB7D291) >> 3) & 0xC26219A00000 ^ 0xC06008000000)
                          - ((2
                            * (((v361 - ((2 * v361) & 0x3D0E4EE0905ADEuLL) - 0x34178D88FB7D291) >> 3) & 0xC26219A00000 ^ 0xC06008000000)) & 0x1044420000000)
                          - 0x34078D88FB7D291) ^ (v361 - ((2 * v361) & 0x3D0E4EE0905ADELL) - 0x34178D88FB7D291)) >> 16);
  *((_QWORD *)&v248 + 1) = v362 ^ 0x1F8;
  *(_QWORD *)&v248 = v362 ^ 0xCB308CF472657000;
  v363 = (v248 >> 11) - ((2 * (v248 >> 11)) & 0xAC6072FC5E5B5AE6) - 0x29CFC681D0D2528DLL;
  v364 = *(_QWORD *)(v37 + 8 * (v354 ^ 0x23));
  LODWORD(v354) = v359 ^ (((((v363 >> 3) & 0xE5C26219000000 ^ 0xC4022201000000)
                          - ((2 * ((v363 >> 3) & 0xE5C26219000000 ^ 0xC4022201000000)) & 0x4000C412000000)
                          - 0x28CFC681D0D2528DLL) ^ v363) >> 24);
  v365 = ((v364 >> 11) ^ 0x1966119E8E4CAELL)
       + 0x37534C8640DAEC31
       - ((2 * ((v364 >> 11) ^ 0x1966119E8E4CAELL)) & 0x26990C81B5D862);
  v366 = *(_QWORD *)(v37 + 8 * (v350 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v366 ^ 0x1F8;
  *(_QWORD *)&v248 = v366 ^ 0xCB308CF472657000;
  v367 = (v248 >> 11) - 0x702B296F0B1983DDLL - ((2 * (v248 >> 11)) & 0x1FA9AD21E9CCF846);
  v368 = *(_QWORD *)(v37 + 8 * (v353 ^ 0x23));
  LODWORD(v365) = (((((v367 >> 3) & 0xE5C26219000000 ^ 0xE0824218000000)
                   - 0x702B296F0B1983DDLL
                   - ((2 * ((v367 >> 3) & 0xE5C26219000000 ^ 0xE0824218000000)) & 0x189840020000000)) ^ v367) >> 24) ^ (((((v365 >> 3) & 0xC26219A00000 ^ 0x400008000000) + 0x37534C8640DAEC31 - ((2 * ((v365 >> 3) & 0xC26219A00000 ^ 0x400008000000)) & 0x800401000000)) ^ v365) >> 16);
  *((_QWORD *)&v248 + 1) = v368 ^ 0x1F8;
  *(_QWORD *)&v248 = v368 ^ 0xCB308CF472657000;
  v369 = (v248 >> 11) + 0x66D4F4A8DA887222 - ((2 * (v248 >> 11)) & 0xCDA9E951B510E444);
  v370 = *(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v10 + ((v351 >> 24) ^ 0x955C97E6BFLL)) ^ 0x23));
  LODWORD(v320) = v365 ^ (((((v369 >> 3) & 0x1BE5C26200000000 ^ 0x8C0820000000000)
                          + 0x66D4F4A8DA887222
                          - ((2 * ((v369 >> 3) & 0x1BE5C26200000000 ^ 0x8C0820000000000)) & 0x589804000000000)) ^ v369) >> 32);
  v371 = ((v370 >> 11) ^ 0x1966119E8E4CAELL)
       - ((2 * ((v370 >> 11) ^ 0x1966119E8E4CAELL)) & 0xC669775D3E5AALL)
       - 0x48B9CCB445160D2BLL;
  v372 = *(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v10 + (BYTE2(v351) ^ 0x8DLL)) ^ 0x23));
  v373 = (((v371 >> 3) & 0x6219A0D800 ^ 0x6011001800)
        - ((2 * ((v371 >> 3) & 0x6219A0D800 ^ 0x6011001800)) & 0x843141A000)
        - 0x48B9CBB445160D2BLL) ^ v371;
  *((_QWORD *)&v248 + 1) = v372 ^ 0x1F8;
  *(_QWORD *)&v248 = v372 ^ 0xCB308CF472657000;
  v374 = (v248 >> 11) + 0x287F63EE3FA58DA6 - ((2 * (v248 >> 11)) & 0x50FEC7DC7F4B1B4CLL);
  v375 = *(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v10 + ((v349 >> 24) ^ 0xDA9E1FEB65)) ^ 0x23));
  *((_QWORD *)&v248 + 1) = v375 ^ 0x1F8;
  *(_QWORD *)&v248 = v375 ^ 0xCB308CF472657000;
  v376 = (v248 >> 11) - 0x40D193C115B85D77 - ((2 * (v248 >> 11)) & 0x7E5CD87DD48F4512);
  v377 = (*(_QWORD *)(v37 + 8 * (v355 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v374) = (((((v376 >> 3) & 0x1BE5C26200000000 ^ 0x13E5C00200000000)
                   - 0x40D193C115B85D77
                   - ((2 * ((v376 >> 3) & 0x1BE5C26200000000 ^ 0x13E5C00200000000)) & 0x3648804400000000)) ^ v376) >> 32) ^ (((((v374 >> 3) & 0xE5C26219000000 ^ 0x5C06001000000) + 0x287F63EE3FA58DA6 - ((2 * ((v374 >> 3) & 0xE5C26219000000 ^ 0x5C06001000000)) & 0xCA84C432000000)) ^ v374) >> 24) ^ ((((((v377 - ((2 * v377) & 0x2F67EC1B198CF8uLL) + 0x6BF7B3F60D8CC67CLL) >> 3) & 0x6219A0D800 ^ 0x6201A09800) - ((2 * (((v377 - ((2 * v377) & 0x2F67EC1B198CF8uLL) + 0x6BF7B3F60D8CC67CLL) >> 3) & 0x6219A0D800 ^ 0x6201A09800)) & 0xC413018000) + 0x6BF7B4F60D8CC67CLL) ^ (v377 - ((2 * v377) & 0x2F67EC1B198CF8) + 0x6BF7B3F60D8CC67CLL)) >> 8);
  v378 = (*(_QWORD *)(v37 + 8 * (v356 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v356) = v374 ^ ((((((v378 - ((2 * v378) & 0x2F1640A7923C94uLL) - 0x96874DFAC36E1B6) >> 3) & 0xC26219A00000 ^ 0xC06008200000)
                          - ((2
                            * (((v378 - ((2 * v378) & 0x2F1640A7923C94uLL) - 0x96874DFAC36E1B6) >> 3) & 0xC26219A00000 ^ 0xC06008200000)) & 0x1044023000000)
                          - 0x96774DFAC36E1B6) ^ (v378 - ((2 * v378) & 0x2F1640A7923C94) - 0x96874DFAC36E1B6)) >> 16);
  v379 = *(_QWORD *)(v37 + 8 * (v357 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v379 ^ 0x1F8;
  *(_QWORD *)&v248 = v379 ^ 0xCB308CF472657000;
  v380 = (v248 >> 11) - 0x29B1BFDBC4EF4F26 - ((2 * (v248 >> 11)) & 0xAC9C8048762161B4);
  v381 = (*(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v10 + (BYTE1(v351) ^ 0x9ALL)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v380) = ((((((v381 - 0x5E961FF9C0D6EC29 - ((2 * v381) & 0x13C00C7E5227AEuLL)) >> 3) & 0x6219A0D800 ^ 0x1A00000)
                   - 0x5E961FF9C0D6EC29
                   - ((2
                     * (((v381 - 0x5E961FF9C0D6EC29 - ((2 * v381) & 0x13C00C7E5227AEuLL)) >> 3) & 0x6219A0D800 ^ 0x1A00000)) & 0x432402000)) ^ (v381 - 0x5E961FF9C0D6EC29 - ((2 * v381) & 0x13C00C7E5227AELL))) >> 8) ^ (((((v380 >> 3) & 0x1BE5C26200000000 ^ 0x1AC1C00000000000) - 0x29B1BFDBC4EF4F26 - ((2 * ((v380 >> 3) & 0x1BE5C26200000000 ^ 0x1AC1C00000000000)) & 0x2488804000000000)) ^ v380) >> 32);
  v382 = (*(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v10 + (BYTE2(v349) ^ 0xECLL)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v383 = *(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v10 + (v327 ^ 0xA3)) ^ 0x23));
  *((_QWORD *)&v248 + 1) = v383 ^ 0x1F8;
  *(_QWORD *)&v248 = v383 ^ 0xCB308CF472657000;
  LODWORD(v380) = v380 ^ ((((((v382 - ((2 * v382) & 0xB32B25CA6DA6EuLL) - 0x4DDA66A6D1AC92C9) >> 3) & 0xC26219A00000 ^ 0x822201800000)
                          - ((2
                            * (((v382 - ((2 * v382) & 0xB32B25CA6DA6EuLL) - 0x4DDA66A6D1AC92C9) >> 3) & 0xC26219A00000 ^ 0x822201800000)) & 0x1008010000000)
                          - 0x4DD966A6D1AC92C9) ^ (v382 - ((2 * v382) & 0xB32B25CA6DA6ELL) - 0x4DDA66A6D1AC92C9)) >> 16);
  v384 = (v248 >> 11) - ((2 * (v248 >> 11)) & 0x4A427A23F8EBA71ELL) + 0x25213D11FC75D38FLL;
  LODWORD(v282) = v380 ^ (((((v384 >> 3) & 0xE5C26219000000 ^ 0xA4022219000000)
                          - ((2 * ((v384 >> 3) & 0xE5C26219000000 ^ 0xA4022219000000)) & 0x42000030000000)
                          + 0x26213D11FC75D38FLL) ^ v384) >> 24);
  v385 = *(unsigned __int8 *)(v10
                            + (((unint64_t)((v356 ^ 0xA898372C)
                                                                  - 2
                                                                  * ((v356 ^ 0xA898372C) & 0x8DBF2C1F ^ v356 & 3)
                                                                  - 1916851172) >> 16) ^ 0xBFLL));
  v386 = *(unsigned __int8 *)(v10
                            + (((unint64_t)((v282 ^ 0x74A45B82)
                                                                  - 2
                                                                  * ((v282 ^ 0x74A45B82) & 0xD677CBBF ^ v282 & 0x1C)
                                                                  - 696792157) >> 16) ^ 0x77));
  v387 = v320 ^ (v373 >> 8) ^ 0xE6BBF021;
  v388 = v387 - ((2 * v387) & 0x1D8A1117ELL) + 0x72B1CE76EC5088BFLL;
  v389 = *(unsigned __int8 *)(v10 + (BYTE2(v388) ^ 0x50));
  v390 = *(unsigned __int8 *)(v10 + (BYTE1(v388) ^ 0x88));
  v391 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v282 ^ 0x5B82)
                                                                  - 2 * ((v282 ^ 0x5B82) & 0xCBBF ^ v282 & 0x1C)
                                                                  - 13405) >> 8) ^ 0xCBLL));
  v392 = *(unsigned __int8 *)(v10 + ((v320 ^ BYTE1(v373)) ^ 0x21));
  v393 = *(unsigned __int8 *)(v10
                            + ((((v354 ^ 0x35AACF2C)
                                                + 2123660233
                                                + (~(2 * (v354 ^ 0x35AACF2C)) | 0x2D7086F)) >> 16) ^ 0x94));
  v394 = *(unsigned __int8 *)(v10 + (v356 ^ 0x2CLL));
  v395 = (((v356 ^ 0xA898372CLL)
         - 2 * ((v356 ^ 0xA898372CLL) & 0x8DBF2C1FLL ^ (unint64_t)(v356 & 3))
         + 0x6390641D8DBF2C1CLL) >> 24) ^ 0x6390641D8DLL;
  v396 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v356 ^ 0x372C)
                                                                  - 2 * ((v356 ^ 0x372C) & 0x2C1F ^ v356 & 3)
                                                                  + 11292) >> 8) ^ 0x2CLL));
  v397 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v354 ^ 0xCF2C)
                                                                  + 31689
                                                                  + (~(2 * (v354 ^ 0xCF2C)) | 0x86F)) >> 8) ^ 0x7BLL));
  v398 = *(unsigned __int8 *)(v10
                            + ((((v282 ^ 0x74A45B82)
                               - 2
                               * ((v282 ^ 0x74A45B82) & 0xD677CBBFLL ^ (unint64_t)(v282 & 0x1C))
                               + 0x30C8EA66D677CBA3) >> 24) ^ 0x30C8EA66D6));
  v399 = *(unsigned __int8 *)(v10 + (v354 ^ 0x2CLL));
  v400 = *(unsigned __int8 *)(v10 + (v282 ^ 0x82));
  v401 = *(unsigned __int8 *)(v10 + v395);
  v402 = *(_QWORD *)(v37
                   + 8
                   * (*(unsigned __int8 *)(v10
                                         + ((((v354 ^ 0x35AACF2CLL)
                                            + 0x7E512DAE7E947BC9
                                            + (~(2 * (v354 ^ 0x35AACF2C)) | 0xFFFFFFFF02D7086FLL)) >> 24) ^ 0x7E512DAE7ELL)) ^ 0x23));
  v403 = *(unsigned __int8 *)(v10 + ((v388 >> 24) ^ 0x72B1CE76ECLL));
  STACK[0x5D8] = v403;
  v404 = ((v402 >> 11) ^ 0x1966119E8E4CAELL)
       + 0x4AB9265171EE95DFLL
       - ((2 * ((v402 >> 11) ^ 0x1966119E8E4CAELL)) & 0x324CA2E3DD2BBELL);
  v405 = (*(_QWORD *)(v37 + 8 * (v386 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v406 = *(_QWORD *)(v37 + 8 * (v385 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v406 ^ 0x1F8;
  *(_QWORD *)&v248 = v406 ^ 0xCB308CF472657000;
  v407 = ((((((v405 + 0x660DEF19888C9F51 - ((2 * v405) & 0x1BDE3311193EA2uLL)) >> 3) & 0xC26219A00000 ^ 0x806211000000)
          + 0x660DEF19888C9F51
          - ((2
            * (((v405 + 0x660DEF19888C9F51 - ((2 * v405) & 0x1BDE3311193EA2uLL)) >> 3) & 0xC26219A00000 ^ 0x806211000000)) & 0x1840011000000)) ^ (v405 + 0x660DEF19888C9F51 - ((2 * v405) & 0x1BDE3311193EA2))) >> 16) ^ (((((v404 >> 3) & 0x6219A0D800 ^ 0x420820D000) + 0x4AB9265171EE95DFLL - ((2 * ((v404 >> 3) & 0x6219A0D800 ^ 0x420820D000)) & 0x8023412000)) ^ v404) >> 8);
  v408 = (v248 >> 11) - ((2 * (v248 >> 11)) & 0x13F2D397C2F02FCALL) + 0x9F969CBE17817E5;
  v409 = v407 ^ (((((v408 >> 3) & 0xE5C26219000000 ^ 0x25002018000000)
                 - ((2 * ((v408 >> 3) & 0xE5C26219000000 ^ 0x25002018000000)) & 0x1C2808402000000)
                 + 0xAF969CBE17817E5) ^ v408) >> 24);
  v410 = *(_QWORD *)(v37 + 8 * (v389 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v410 ^ 0x1F8;
  *(_QWORD *)&v248 = v410 ^ 0xCB308CF472657000;
  v411 = (v248 >> 11) + 0x37079A3B3DA53DDDLL - ((2 * (v248 >> 11)) & 0x6E0F34767B4A7BBALL);
  v412 = *(_QWORD *)(v37 + 8 * (v390 ^ 0x23));
  v413 = v409 ^ (((((v411 >> 3) & 0x1BE5C26200000000 ^ 0x2E0C24200000000)
                 + 0x37079A3B3DA53DDDLL
                 - ((2 * ((v411 >> 3) & 0x1BE5C26200000000 ^ 0x2E0C24200000000)) & 0x260B044400000000)) ^ v411) >> 32);
  v414 = ((v412 >> 11) ^ 0x1966119E8E4CAELL)
       + 0x5150EE96D61D0FBBLL
       - ((2 * ((v412 >> 11) ^ 0x1966119E8E4CAELL)) & 0x21DD2DAC3A1F76);
  v415 = (*(_QWORD *)(v37 + 8 * (v393 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v416 = *(_QWORD *)(v37 + 8 * (v391 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v416 ^ 0x1F8;
  *(_QWORD *)&v248 = v416 ^ 0xCB308CF472657000;
  v417 = (v248 >> 11) - ((2 * (v248 >> 11)) & 0xF0693F227123291ALL) - 0x7CB606EC76E6B73;
  LODWORD(v414) = (((((v414 >> 3) & 0x6219A0D800 ^ 0x4218808000)
                   + 0x5150EE96D61D0FBBLL
                   - ((2 * ((v414 >> 3) & 0x6219A0D800 ^ 0x4218808000)) & 0x420001000)) ^ v414) >> 8) ^ (((((v415 - ((2 * v415) & 0x243A462BB169DCuLL) + 0x5BF21D2315D8B4EELL) >> 3) & 0xC20210A00000 ^ (v415 - ((2 * v415) & 0x243A462BB169DCLL) + 0x5BF21D2315D8B4EELL) & 0xF61730F40000 | ((v415 - ((2 * v415) & 0x243A462BB169DCuLL) + 0x5BF21D2315D8B4EELL) >> 3) & 0x6009000000) ^ (v415 - ((2 * v415) & 0x243A462BB169DCLL) + 0x5BF21D2315D8B4EELL) & 0x9E8CF0B0000) >> 16);
  v418 = *(_QWORD *)(v37 + 8 * (v396 ^ 0x23));
  LODWORD(v414) = v414 ^ (((((v417 >> 3) & 0xE5C26219000000 ^ 0x4826201000000)
                          - ((2 * ((v417 >> 3) & 0xE5C26219000000 ^ 0x4826201000000)) & 0x49040030000000)
                          - 0x6CB606EC76E6B73) ^ v417) >> 24);
  *((_QWORD *)&v248 + 1) = v418 ^ 0x1F8;
  *(_QWORD *)&v248 = v418 ^ 0xCB308CF472657000;
  v419 = (v248 >> 11) - 0x76B646C771007CD8 - ((2 * (v248 >> 11)) & 0x129372711DFF0650);
  LODWORD(v396) = v414 ^ (((((v419 >> 3) & 0x1BE5C26200000000 ^ 0x1121022200000000)
                          - 0x76B646C771007CD8
                          - ((2 * ((v419 >> 3) & 0x1BE5C26200000000 ^ 0x1121022200000000)) & 0x1283004000000000)) ^ v419) >> 32);
  v420 = *(_QWORD *)(v37 + 8 * (v394 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v420 ^ 0x1F8;
  *(_QWORD *)&v248 = v420 ^ 0xCB308CF472657000;
  v421 = (v248 >> 11) - 0x1F448EC19A8DE73FLL - ((2 * (v248 >> 11)) & 0xC176E27CCAE43182);
  v422 = *(_QWORD *)(v37 + 8 * (v392 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v422 ^ 0x1F8;
  *(_QWORD *)&v248 = v422 ^ 0xCB308CF472657000;
  v423 = (v248 >> 11) - 0x584D000035BC58E9 - ((2 * (v248 >> 11)) & 0x4F65FFFF94874E2ELL);
  v424 = (*(_QWORD *)(v37 + 8 * (v397 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v425 = (((((v423 >> 3) & 0x1BE5C26200000000 ^ 0x10E4426200000000)
          - 0x584D000035BC58E9
          - ((2 * ((v423 >> 3) & 0x1BE5C26200000000 ^ 0x10E4426200000000)) & 0x74184C400000000)) ^ v423) >> 32) ^ (((((v421 >> 3) & 0xE5C26219000000 ^ 0x5422208000000) - 0x1F448EC19A8DE73FLL - ((2 * ((v421 >> 3) & 0xE5C26219000000 ^ 0x5422208000000)) & 0x142804402000000)) ^ v421) >> 24) ^ ((((((v424 - ((2 * v424) & 0x2A3D9C31BDFE3CuLL) + 0x32151ECE18DEFF1ELL) >> 3) & 0x6219A0D800 ^ 0x400100D800) - ((2 * (((v424 - ((2 * v424) & 0x2A3D9C31BDFE3CuLL) + 0x32151ECE18DEFF1ELL) >> 3) & 0x6219A0D800 ^ 0x400100D800)) & 0x843101B000) + 0x32151FCE18DEFF1ELL) ^ (v424 - ((2 * v424) & 0x2A3D9C31BDFE3CLL) + 0x32151ECE18DEFF1ELL)) >> 8);
  v426 = (*(_QWORD *)(v37 + 8 * (v400 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v427 = *(_QWORD *)(v37 + 8 * (v398 ^ 0x23));
  v428 = v425 ^ ((((((v426 - ((2 * v426) & 0x2280DBA2E721A2uLL) + 0xD51406DD17390D1) >> 3) & 0xC26219A00000 ^ 0x18200000)
                 - ((2
                   * (((v426 - ((2 * v426) & 0x2280DBA2E721A2uLL) + 0xD51406DD17390D1) >> 3) & 0xC26219A00000 ^ 0x18200000)) & 0x80C022400000)
                 + 0xD52406DD17390D1) ^ (v426 - ((2 * v426) & 0x2280DBA2E721A2) + 0xD51406DD17390D1)) >> 16);
  v429 = ((v427 >> 11) ^ 0x1966119E8E4CAELL)
       - 0x1E549697E8CEBDDDLL
       - ((2 * ((v427 >> 11) ^ 0x1966119E8E4CAELL)) & 0x16D2D02E628446);
  v430 = *(_QWORD *)(v37 + 8 * (v401 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v430 ^ 0x1F8;
  *(_QWORD *)&v248 = v430 ^ 0xCB308CF472657000;
  v431 = (v248 >> 11) - 0x1E000042306FBAD0 - ((2 * (v248 >> 11)) & 0xC3FFFF7B9F208A60);
  v432 = *(_QWORD *)(v37 + 8 * (v403 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v432 ^ 0x1F8;
  *(_QWORD *)&v248 = v432 ^ 0xCB308CF472657000;
  v433 = (v248 >> 11) - 0x5576C0CC494DFE54 - ((2 * (v248 >> 11)) & 0x55127E676D640358);
  LODWORD(v429) = (*(_QWORD *)(v37 + 8 * (v399 ^ 0x23)) >> 22) & 0x6219A0D8 ^ (*(_QWORD *)(v37 + 8 * (v399 ^ 0x23)) >> 19) ^ (((((v429 >> 3) & 0xC26219A00000 ^ 0x402000A00000) - 0x1E549697E8CEBDDDLL - ((2 * ((v429 >> 3) & 0xC26219A00000 ^ 0x402000A00000)) & 0x80C022400000)) ^ v429) >> 16) ^ (((((v431 >> 3) & 0xE5C26219000000 ^ 0x25C26219000000) - 0x1E000042306FBAD0 - ((2 * ((v431 >> 3) & 0xE5C26219000000 ^ 0x25C26219000000)) & 0x1CB844012000000)) ^ v431) >> 24) ^ (((((v433 >> 3) & 0x1BE5C26200000000 ^ 0x1141026200000000) - 0x5576C0CC494DFE54 - ((2 * ((v433 >> 3) & 0x1BE5C26200000000 ^ 0x1141026200000000)) & 0x1502044400000000)) ^ v433) >> 32);
  v434 = (v413 ^ 0x3A1B039CLL)
       - ((2 * (v413 ^ 0x3A1B039CLL)) & 0x1E236CB3ELL)
       + 0x547D6F4BF11B659FLL;
  v435 = *(unsigned __int8 *)(v10 + (BYTE2(v428) ^ 0x59));
  v436 = *(unsigned __int8 *)(v10
                            + ((((v413 ^ 0x3A1B039C)
                                                - ((2 * (v413 ^ 0x3A1B039C)) & 0xE236CB3E)
                                                - 249862753) >> 16) ^ 0x1BLL));
  v437 = *(unsigned __int8 *)(v10 + (v429 ^ 0x63));
  v438 = (v429 ^ 0xEABE6663)
       - ((2 * (v429 ^ 0xEABE6663)) & 0xFE67B5BE)
       + 0x5C4B94977F33DADFLL;
  v439 = *(unsigned __int8 *)(v10 + ((v438 >> 24) ^ 0x5C4B94977FLL));
  v440 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v428 ^ 0x5146)
                                                                  - ((2 * (v428 ^ 0x5146)) & 0xCF58)
                                                                  - 6228) >> 8) ^ 0xE7));
  v441 = *(unsigned __int8 *)(v10 + (BYTE1(v413) ^ 3));
  v442 = *(unsigned __int8 *)(v10 + (v428 ^ 0x46));
  v443 = (((v428 ^ 0x24595146)
         - ((2 * (v428 ^ 0x24595146)) & 0x18881CF58uLL)
         - 0xF77D6E43BBF1854) >> 24) ^ 0xF088291BC4;
  v444 = *(unsigned __int8 *)(v10 + (v413 ^ 0x9CLL));
  v445 = *(unsigned __int8 *)(v10 + (BYTE1(v438) ^ 0xDALL));
  v446 = *(unsigned __int8 *)(v10 + v443);
  v447 = *(unsigned __int8 *)(v10 + (BYTE2(v438) ^ 0x33));
  v448 = *(_QWORD *)(v37 + 8 * (v436 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v448 ^ 0x1F8;
  *(_QWORD *)&v248 = v448 ^ 0xCB308CF472657000;
  v449 = (v248 >> 11) - 0x54AACFBD57D617A8 - ((2 * (v248 >> 11)) & 0x56AA60855053D0B0);
  v450 = (*(_QWORD *)(v37 + 8 * (v437 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v449) = ((((((v450 + 0x6816C1BC63A74FCFLL - ((2 * v450) & 0x2D8378C74E9F9EuLL)) >> 3) & 0x6219A0D800 ^ 0x220820C800)
                   + 0x6816C1BC63A74FCFLL
                   - ((2
                     * (((v450 + 0x6816C1BC63A74FCFLL - ((2 * v450) & 0x2D8378C74E9F9EuLL)) >> 3) & 0x6219A0D800 ^ 0x220820C800)) & 0x4003409000)) ^ (v450 + 0x6816C1BC63A74FCFLL - ((2 * v450) & 0x2D8378C74E9F9ELL))) >> 8) ^ (((((v449 >> 3) & 0x1BE5C26200000000 ^ 0x1160820000000000) - 0x54AACFBD57D617A8 - ((2 * ((v449 >> 3) & 0x1BE5C26200000000 ^ 0x1160820000000000)) & 0x168A008400000000)) ^ v449) >> 32);
  v451 = (*(_QWORD *)(v37 + 8 * (v435 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v452 = *(_QWORD *)(v37
                   + 8
                   * (*(unsigned __int8 *)(v10
                                         + ((((v396 ^ 0x2E8A7254)
                                            - ((2 * (v396 ^ 0x2E8A7254)) & 0x13500854EuLL)
                                            + 0x494C3C4C9A8042A7) >> 24) ^ 0x494C3C4C9ALL)) ^ 0x23));
  *((_QWORD *)&v248 + 1) = v452 ^ 0x1F8;
  *(_QWORD *)&v248 = v452 ^ 0xCB308CF472657000;
  v453 = (v248 >> 11) - ((2 * (v248 >> 11)) & 0xFAB700DA52AE4A5CLL) + 0x7D5B806D2957252ELL;
  v454 = *(_QWORD *)(v37
                   + 8
                   * (*(unsigned __int8 *)(v10
                                         + ((((v396 ^ 0x2E8A7254)
                                                             - ((2 * (v396 ^ 0x2E8A7254)) & 0x3500854E)
                                                             - 1702870361) >> 16) ^ 0x80)) ^ 0x23));
  LODWORD(v403) = v449 ^ ((((((v451 - ((2 * v451) & 0x2209D358BFCB8AuLL) + 0x305104E9AC5FE5C5) >> 3) & 0xC26219A00000 ^ 0x11800000)
                          - (((v451 - ((2 * v451) & 0x2209D358BFCB8AuLL) + 0x305104E9AC5FE5C5) >> 2) & 0xC010000000)
                          + 0x305204E9AC5FE5C5) ^ (v451 - ((2 * v451) & 0x2209D358BFCB8ALL) + 0x305104E9AC5FE5C5)) >> 16) ^ (((((v453 >> 3) & 0xE5C26219000000 ^ 0xA1400001000000) - ((2 * ((v453 >> 3) & 0xE5C26219000000 ^ 0xA1400001000000)) & 0x8300C012000000) + 0x7E5B806D2957252ELL) ^ v453) >> 24);
  *((_QWORD *)&v248 + 1) = v454 ^ 0x1F8;
  *(_QWORD *)&v248 = v454 ^ 0xCB308CF472657000;
  v455 = (v248 >> 11) + 0x4D9A31BAFB6AF40DLL - ((2 * (v248 >> 11)) & 0x9B346375F6D5E81ALL);
  v456 = *(_QWORD *)(v37 + 8 * (v441 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v456 ^ 0x1F8;
  *(_QWORD *)&v248 = v456 ^ 0xCB308CF472657000;
  v457 = (v248 >> 11) + 0x483C323F060EAD83 - ((2 * (v248 >> 11)) & 0x9078647E0C1D5B06);
  v458 = (*(_QWORD *)(v37 + 8 * (v439 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v455) = (((((v457 >> 3) & 0x1BE5C26200000000 ^ 0x905824200000000)
                   + 0x483C323F060EAD83
                   - ((2 * ((v457 >> 3) & 0x1BE5C26200000000 ^ 0x905824200000000)) & 0x1048044400000000)) ^ v457) >> 32) ^ (((((v455 >> 3) & 0xE5C26219000000 ^ 0xA1422219000000) + 0x4D9A31BAFB6AF40DLL - ((2 * ((v455 >> 3) & 0xE5C26219000000 ^ 0xA1422219000000)) & 0x100004432000000)) ^ v455) >> 24);
  v459 = (*(_QWORD *)(v37 + 8 * (v440 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v440) = v455 ^ ((((((v458 - ((2 * v458) & 0x13B97B26EE8D0CuLL) + 0x2529DCBD93774686) >> 3) & 0x6219A0D800 ^ 0x21020C800)
                          - ((2
                            * (((v458 - ((2 * v458) & 0x13B97B26EE8D0CuLL) + 0x2529DCBD93774686) >> 3) & 0x6219A0D800 ^ 0x21020C800)) & 0x4022408000)
                          + 0x2529DDBD93774686) ^ (v458 - ((2 * v458) & 0x13B97B26EE8D0CLL) + 0x2529DCBD93774686)) >> 8) ^ ((((((v459 - ((2 * v459) & 0x36B64FE24CF728uLL) - 0x50E4A4D80ED9846CLL) >> 3) & 0xC26219A00000 ^ 0x426018200000) - ((2 * (((v459 - ((2 * v459) & 0x36B64FE24CF728uLL) - 0x50E4A4D80ED9846CLL) >> 3) & 0xC26219A00000 ^ 0x426018200000)) & 0x844422400000) - 0x50E3A4D80ED9846CLL) ^ (v459 - ((2 * v459) & 0x36B64FE24CF728) - 0x50E4A4D80ED9846CLL)) >> 16);
  v460 = *(_QWORD *)(v37 + 8 * (v442 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v460 ^ 0x1F8;
  *(_QWORD *)&v248 = v460 ^ 0xCB308CF472657000;
  v461 = (v248 >> 11) + 0x5E57046FD87C9472 - ((2 * (v248 >> 11)) & 0xBCAE08DFB0F928E4);
  v462 = *(_QWORD *)(v37
                   + 8
                   * (*(unsigned __int8 *)(v10
                                         + (((unsigned __int16)((v396 ^ 0x7254)
                                                                               - ((2 * (v396 ^ 0x7254)) & 0x854E)
                                                                               + 17063) >> 8) ^ 0x42)) ^ 0x23));
  *((_QWORD *)&v248 + 1) = v462 ^ 0x1F8;
  *(_QWORD *)&v248 = v462 ^ 0xCB308CF472657000;
  v463 = (v248 >> 11) - 0x15B1F6A0E411E96FLL - ((2 * (v248 >> 11)) & 0xD49C12BE37DC2D22);
  LODWORD(v461) = (((((v463 >> 3) & 0x1BE5C26200000000 ^ 0x1941C02200000000)
                   - 0x15B1F6A0E411E96FLL
                   - ((2 * ((v463 >> 3) & 0x1BE5C26200000000 ^ 0x1941C02200000000)) & 0x1488008400000000)) ^ v463) >> 32) ^ (((((v461 >> 3) & 0xE5C26219000000 ^ 0xC0C00019000000) + 0x5E57046FD87C9472 - ((2 * ((v461 >> 3) & 0xE5C26219000000 ^ 0xC0C00019000000)) & 0x8A00C430000000)) ^ v461) >> 24);
  v464 = (*(_QWORD *)(v37 + 8 * (v444 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v461) = v461 ^ ((((((v464 - ((2 * v464) & 0x3E86CE7536EFF6uLL) - 0x6360BC98C5648805) >> 3) & 0x6219A0D800 ^ 0x6001004800)
                          - ((2
                            * (((v464 - ((2 * v464) & 0x3E86CE7536EFF6uLL) - 0x6360BC98C5648805) >> 3) & 0x6219A0D800 ^ 0x6001004800)) & 0xC43100A000)
                          - 0x6360BB98C5648805) ^ (v464 - ((2 * v464) & 0x3E86CE7536EFF6) - 0x6360BC98C5648805)) >> 8);
  v465 = (*(_QWORD *)(v37 + 8 * (v447 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v466 = *(_QWORD *)(v37 + 8 * (v445 ^ 0x23));
  LODWORD(v445) = v461 ^ ((((((v465 - ((2 * v465) & 0x3A5D69867266C6uLL) + 0x22FD2EB4C3393363) >> 3) & 0xC26219A00000 ^ 0x804218200000)
                          - ((2
                            * (((v465 - ((2 * v465) & 0x3A5D69867266C6uLL) + 0x22FD2EB4C3393363) >> 3) & 0xC26219A00000 ^ 0x804218200000)) & 0x44002400000)
                          + 0x22FE2EB4C3393363) ^ (v465 - ((2 * v465) & 0x3A5D69867266C6) + 0x22FD2EB4C3393363)) >> 16);
  *((_QWORD *)&v248 + 1) = v466 ^ 0x1F8;
  *(_QWORD *)&v248 = v466 ^ 0xCB308CF472657000;
  v467 = (v248 >> 11) - 0x49C80F5F6E475797 - ((2 * (v248 >> 11)) & 0x6C6FE141237150D2);
  v468 = *(_QWORD *)(v37 + 8 * (v446 ^ 0x23));
  *((_QWORD *)&v248 + 1) = v468 ^ 0x1F8;
  *(_QWORD *)&v248 = v468 ^ 0xCB308CF472657000;
  v469 = (v248 >> 11) - 0x219708E965D43F29 + (~(2 * (v248 >> 11)) | 0x432E11D2CBA87E51) + 1;
  LODWORD(v467) = (((((v469 >> 3) & 0x1BE5C26200000000 ^ 0x1BC5026200000000)
                   - 0x219708E965D43F29
                   - ((2 * ((v469 >> 3) & 0x1BE5C26200000000 ^ 0x1BC5026200000000)) & 0x34C1840400000000)) ^ v469) >> 32) ^ (((((v467 >> 3) & 0xE5C26219000000 ^ 0xC4C20010000000) - 0x49C80F5F6E475797 - ((2 * ((v467 >> 3) & 0xE5C26219000000 ^ 0xC4C20010000000)) & 0x4B804022000000)) ^ v467) >> 24);
  v470 = (*(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v10 + (v396 ^ 0x54)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v467) = v467 ^ ((((((v470 - ((2 * v470) & 0xFC752D49B1B6CuLL) + 0x2507E3A96A4D8DB6) >> 3) & 0x6219A0D800 ^ 0x6009009000)
                          - ((2
                            * (((v470 - ((2 * v470) & 0xFC752D49B1B6CuLL) + 0x2507E3A96A4D8DB6) >> 3) & 0x6219A0D800 ^ 0x6009009000)) & 0x4010011000)
                          + 0x2507E4A96A4D8DB6) ^ (v470 - ((2 * v470) & 0xFC752D49B1B6CLL) + 0x2507E3A96A4D8DB6)) >> 8);
  v471 = (*(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v10 + ((v434 >> 24) ^ 0x547D6F4BF1)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v446) = v467 ^ ((((((v471 - ((2 * v471) & 0xD97709100715EuLL) - 0x993447B77FC751) >> 3) & 0xC26219A00000 ^ 0xC06209000000)
                          - ((2
                            * (((v471 - ((2 * v471) & 0xD97709100715EuLL) - 0x993447B77FC751) >> 3) & 0xC26219A00000 ^ 0xC06209000000)) & 0x1844011000000)
                          - 0x983447B77FC751) ^ (v471 - ((2 * v471) & 0xD97709100715ELL) - 0x993447B77FC751)) >> 16);
  v472 = (v446 ^ 0xA7A3DCC3)
       - 2 * ((v446 ^ 0xA7A3DCC3) & 0x386990F4 ^ v446 & 4)
       - 0x3E9FD26BC7966F10;
  v473 = (v440 ^ 0xDF661AALL)
       - ((2 * (v440 ^ 0xDF661AALL)) & 0x184C15528)
       - 0x264475C43D9F556CLL;
  v474 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v440 ^ 0x61AA)
                                                                  - ((2 * (v440 ^ 0x61AA)) & 0x5528)
                                                                  - 21868) >> 8) ^ 0xAALL));
  v475 = *(unsigned __int8 *)(v10
                            + ((((v445 ^ 0xFAB8F296)
                                                - ((2 * (v445 ^ 0xFAB8F296)) & 0xE2FBB11A)
                                                - 243410803) >> 16) ^ 0x7DLL));
  v476 = *(unsigned __int8 *)(v10
                            + ((((v403 ^ 0x8E4D801F)
                                                - 2 * ((v403 ^ 0x8E4D801F) & 0xCD026A33 ^ v403 & 0x20)
                                                - 855479789) >> 16) ^ 2));
  v477 = *(unsigned __int8 *)(v10 + (v440 ^ 0xAALL));
  v478 = *(unsigned __int8 *)(v10
                            + (((unint64_t)((v446 ^ 0xA7A3DCC3)
                                                                  - 2
                                                                  * ((v446 ^ 0xA7A3DCC3) & 0x386990F4 ^ v446 & 4)
                                                                  + 946442480) >> 16) ^ 0x69));
  v479 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v445 ^ 0xF296)
                                                                  - ((2 * (v445 ^ 0xF296)) & 0xB11A)
                                                                  - 10099) >> 8) ^ 0xD8));
  v480 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v403 ^ 0x801F)
                                                                  - 2 * ((v403 ^ 0x801F) & 0x6A33 ^ v403 & 0x20)
                                                                  + 27155) >> 8) ^ 0x6ALL));
  v481 = *(unsigned __int8 *)(v10 + (v445 ^ 0x96));
  v482 = *(unsigned __int8 *)(v10 + ((v473 >> 24) ^ 0xD9BB8A3BC2));
  v483 = *(unsigned __int8 *)(v10
                            + ((((v445 ^ 0xFAB8F296)
                               - ((2 * (v445 ^ 0xFAB8F296)) & 0x1E2FBB11AuLL)
                               + 0x555C5CACF17DD88DLL) >> 24) ^ 0x555C5CACF1));
  v484 = *(unsigned __int8 *)(v10 + (v446 ^ 0xC3));
  v485 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v446 ^ 0xDCC3)
                                                                  - 2 * ((v446 ^ 0xDCC3) & 0x90F4 ^ v446 & 4)
                                                                  - 28432) >> 8) ^ 0x90));
  v486 = *(unsigned __int8 *)(v10 + (BYTE2(v473) ^ 0x60));
  v487 = *(_QWORD *)(v37
                   + 8
                   * (*(unsigned __int8 *)(v10
                                         + ((((v403 ^ 0x8E4D801FLL)
                                            - 2 * ((v403 ^ 0x8E4D801FLL) & 0xCD026A33 ^ v403 & 0x20)
                                            - 0x60B26BA832FD95EDLL) >> 24) ^ 0x9F4D9457CDLL)) ^ 0x23));
  v488 = *(unsigned __int8 *)(v10 + (v403 ^ 0x1FLL));
  *((_QWORD *)&v248 + 1) = v487 ^ 0x1F8;
  *(_QWORD *)&v248 = v487 ^ 0xCB308CF472657000;
  v489 = (v248 >> 11) + 0x1B43615FF91F7B09 - ((2 * (v248 >> 11)) & 0x3686C2BFF23EF612);
  v490 = (((v489 >> 3) & 0xE5C26219000000 ^ 0x60402219000000)
        + 0x1B43615FF91F7B09
        - ((2 * ((v489 >> 3) & 0xE5C26219000000 ^ 0x60402219000000)) & 0x82808432000000)) ^ v489;
  v491 = *(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v10 + ((v472 >> 24) ^ 0xC1602D9438)) ^ 0x23));
  *((_QWORD *)&v248 + 1) = v491 ^ 0x1F8;
  *(_QWORD *)&v248 = v491 ^ 0xCB308CF472657000;
  v492 = (v248 >> 11) - 0xB7EBC2C87524ACBLL - ((2 * (v248 >> 11)) & 0xE90287A6F15B6A6ALL);
  v493 = (((v492 >> 3) & 0x1BE5C26200000000 ^ 0x1A80006200000000)
        - 0xB7EBC2C87524ACBLL
        - ((2 * ((v492 >> 3) & 0x1BE5C26200000000 ^ 0x1A80006200000000)) & 0x2102848400000000)) ^ v492;
  v494 = (*(_QWORD *)(v37 + 8 * (v475 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v495 = v494 - 0x37BCA299EE0D7000 - ((2 * v494) & 0x6BACC23E5206ELL) + 55;
  v496 = v495 ^ 0x435989230BA800;
  if (STACK[0x5D8] == 218)
    v496 = 0x310CD06C000;
  v497 = (*(_QWORD *)(v37 + 8 * (v474 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v497) = ((v496 & (v495 ^ 0xC8435D6611F29000)) >> 11) ^ (v495 >> 8) ^ (v490 >> 24) ^ HIDWORD(v493) ^ ((((((v497 - ((2 * v497) & 0x3CD96D03477352uLL) - 0x5BE193497E5C4657) >> 3) & 0xC26219A00000 ^ 0xC00210200000) - ((2 * (((v497 - ((2 * v497) & 0x3CD96D03477352uLL) - 0x5BE193497E5C4657) >> 3) & 0xC26219A00000 ^ 0xC00210200000)) & 0x804403400000) - 0x5BE093497E5C4657) ^ (v497 - ((2 * v497) & 0x3CD96D03477352) - 0x5BE193497E5C4657)) >> 16);
  v498 = (*(_QWORD *)(v37 + 8 * (v477 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v499 = *(_QWORD *)(v37 + 8 * (v476 ^ 0x23));
  *((_QWORD *)&v500 + 1) = v499 ^ 0x1F8;
  *(_QWORD *)&v500 = v499 ^ 0xCB308CF472657000;
  v501 = (v500 >> 11) - 0x60E1A6C4FF587D54 - ((2 * (v500 >> 11)) & 0x3E3CB276014F0558);
  v502 = *(_QWORD *)(v37 + 8 * (v478 ^ 0x23));
  *((_QWORD *)&v500 + 1) = v502 ^ 0x1F8;
  *(_QWORD *)&v500 = v502 ^ 0xCB308CF472657000;
  v503 = (v500 >> 11) - 0x55992B5903690BC0 - ((2 * (v500 >> 11)) & 0x54CDA94DF92DE880);
  LODWORD(v498) = (((((v501 >> 3) & 0xE5C26219000000 ^ 0xE1C22200000000)
                   - 0x60E1A6C4FF587D54
                   - ((2 * ((v501 >> 3) & 0xE5C26219000000 ^ 0xE1C22200000000)) & 0x8804400000000)) ^ v501) >> 24) ^ ((((((v498 + 0xD72081F0F1D6F91 - ((2 * v498) & 0x24103E1E3ADF22uLL)) >> 3) & 0xC26219A00000 ^ 0x400201A00000) + 0xD72081F0F1D6F91 - ((2 * (((v498 + 0xD72081F0F1D6F91 - ((2 * v498) & 0x24103E1E3ADF22uLL)) >> 3) & 0xC26219A00000 ^ 0x400201A00000)) & 0x412000000)) ^ (v498 + 0xD72081F0F1D6F91 - ((2 * v498) & 0x24103E1E3ADF22))) >> 16) ^ (((((v503 >> 3) & 0x1BE5C26200000000 ^ 0x1144C20000000000) - 0x55992B5903690BC0 - ((2 * ((v503 >> 3) & 0x1BE5C26200000000 ^ 0x1144C20000000000)) & 0x14C9804400000000)) ^ v503) >> 32);
  v504 = (*(_QWORD *)(v37 + 8 * (v479 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v505 = *(_QWORD *)(v37 + 8 * (v481 ^ 0x23));
  v506 = v498 ^ ((((((v504 - ((2 * v504) & 0x993330D2D3EB6uLL) + 0x1844C99986969F5BLL) >> 3) & 0x6219A0D800 ^ 0x221080D000)
                 - ((2
                   * (((v504 - ((2 * v504) & 0x993330D2D3EB6uLL) + 0x1844C99986969F5BLL) >> 3) & 0x19A0D800 ^ 0x1080D000)) & 0x1013000)
                 + 0x1844CA9986969F5BLL) ^ (v504 - ((2 * v504) & 0x993330D2D3EB6) + 0x1844C99986969F5BLL)) >> 8);
  v507 = ((v505 >> 11) ^ 0x1966119E8E4CAELL)
       - 0x7F544663D4B0E1CCLL
       - ((2 * ((v505 >> 11) ^ 0x1966119E8E4CAELL)) & 0x177338569E3C68);
  v508 = (*(_QWORD *)(v37 + 8 * (v482 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v509 = *(_QWORD *)(v37 + 8 * (v480 ^ 0x23));
  LODWORD(v507) = ((((((v508 - 0x7A00A8B50FF8A15FLL - ((2 * v508) & 0x3EAE95E00EBD42uLL)) >> 3) & 0xC26219A00000 ^ 0xC26018000000)
                   - 0x7A00A8B50FF8A15FLL
                   - ((2
                     * (((v508 - 0x7A00A8B50FF8A15FLL - ((2 * v508) & 0x3EAE95E00EBD42uLL)) >> 3) & 0xC26219A00000 ^ 0xC26018000000)) & 0x848420000000)) ^ (v508 - 0x7A00A8B50FF8A15FLL - ((2 * v508) & 0x3EAE95E00EBD42))) >> 16) ^ (((((v507 >> 3) & 0x6219A0D800 ^ 0x220120C000) - 0x7F544663D4B0E1CCLL - ((2 * ((v507 >> 3) & 0x19A0D800 ^ 0x120C000)) & 0x12003000)) ^ v507) >> 8);
  *((_QWORD *)&v500 + 1) = v509 ^ 0x1F8;
  *(_QWORD *)&v500 = v509 ^ 0xCB308CF472657000;
  v510 = (v500 >> 11) - ((2 * (v500 >> 11)) & 0xDA1247C76B45FC10) + 0x6D0923E3B5A2FE08;
  v511 = *(_QWORD *)(v37 + 8 * (v485 ^ 0x23));
  LODWORD(v507) = v507 ^ (((((v510 >> 3) & 0xE5C26219000000 ^ 0xA1006010000000)
                          - ((2 * ((v510 >> 3) & 0xE5C26219000000 ^ 0xA1006010000000)) & 0x204C422000000)
                          + 0x6E0923E3B5A2FE08) ^ v510) >> 24);
  *((_QWORD *)&v500 + 1) = v511 ^ 0x1F8;
  *(_QWORD *)&v500 = v511 ^ 0xCB308CF472657000;
  v512 = (v500 >> 11) + 0xBD4781186215E56 - ((2 * (v500 >> 11)) & 0x17A8F0230C42BCACLL);
  LODWORD(v512) = v507 ^ (((((v512 >> 3) & 0x1BE5C26200000000 ^ 0x160820200000000)
                          + 0xBD4781186215E56
                          - ((2 * ((v512 >> 3) & 0x1BE5C26200000000 ^ 0x160820200000000)) & 0x1788800000000000)) ^ v512) >> 32);
  v513 = (*(_QWORD *)(v37 + 8 * (v484 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v514 = (*(_QWORD *)(v37 + 8 * (v483 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v515 = *(_QWORD *)(v37 + 8 * (v486 ^ 0x23));
  *((_QWORD *)&v500 + 1) = v515 ^ 0x1F8;
  *(_QWORD *)&v500 = v515 ^ 0xCB308CF472657000;
  LODWORD(v513) = ((((((v514 - 0x6E1C255C38C7BDALL - ((2 * v514) & 0x3C7B5478E7084CuLL)) >> 3) & 0xC26219A00000 ^ 0xC22001800000)
                   - 0x6E1C255C38C7BDALL
                   - ((2
                     * (((v514 - 0x6E1C255C38C7BDALL - ((2 * v514) & 0x3C7B5478E7084CuLL)) >> 3) & 0xC26219A00000 ^ 0xC22001800000)) & 0x4430400000)) ^ (v514 - 0x6E1C255C38C7BDALL - ((2 * v514) & 0x3C7B5478E7084CLL))) >> 16) ^ ((((((v513 - 0x5FF82E719D812DCLL - ((2 * v513) & 0xFA31CC4FDA48uLL)) >> 3) & 0x6219A0D800 ^ 0x221880D800) - 0x5FF82E719D812DCLL - ((2 * (((v513 - 0x5FF82E719D812DCLL - ((2 * v513) & 0xFA31CC4FDA48uLL)) >> 3) & 0x19A0D800 ^ 0x1880D800)) & 0x419000)) ^ (v513 - 0x5FF82E719D812DCLL - ((2 * v513) & 0xFA31CC4FDA48))) >> 8);
  v516 = (v500 >> 11) - ((2 * (v500 >> 11)) & 0x2F2797E3500F4FDCLL) - 0x686C340E57F85812;
  v517 = *(_QWORD *)(v37 + 8 * (v488 ^ 0x23));
  LODWORD(v513) = v513 ^ (((((v516 >> 3) & 0xE5C26219000000 ^ 0xE0406211000000)
                          - ((2 * ((v516 >> 3) & 0xE5C26219000000 ^ 0xE0406211000000)) & 0x10384C010000000)
                          - 0x676C340E57F85812) ^ v516) >> 24);
  *((_QWORD *)&v500 + 1) = v517 ^ 0x1F8;
  *(_QWORD *)&v500 = v517 ^ 0xCB308CF472657000;
  v518 = (v500 >> 11) - 0x1D1F1E85ADE5541FLL - ((2 * (v500 >> 11)) & 0xC5C1C2F4A43557C2);
  LODWORD(v513) = v513 ^ (((((v518 >> 3) & 0x1BE5C26200000000 ^ 0x1844002200000000)
                          - 0x1D1F1E85ADE5541FLL
                          - ((2 * ((v518 >> 3) & 0x1BE5C26200000000 ^ 0x1844002200000000)) & 0x5C180C400000000)) ^ v518) >> 32);
  v519 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v513 ^ 0xBD07)
                                                                  - ((2 * (v513 ^ 0xBD07)) & 0xCAD2)
                                                                  - 6807) >> 8) ^ 0xE5));
  v520 = (v506 ^ 0xCEEEE603) - 2 * ((v506 ^ 0xCEEEE603) & 0x2F0D76EE ^ v506 & 0x20) - 0x64DF0FCDD0F28932;
  v521 = *(unsigned __int8 *)(v10
                            + ((((v506 ^ 0xCEEEE603)
                                                - 2 * ((v506 ^ 0xCEEEE603) & 0x2F0D76EE ^ v506 & 0x20)
                                                + 789411534) >> 16) ^ 0xDLL));
  v522 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v506 ^ 0xE603)
                                                                  - 2 * ((v506 ^ 0xE603) & 0x76EE ^ v506 & 0x20)
                                                                  + 30414) >> 8) ^ 0x76));
  v523 = (v512 ^ 0x6E2C2EB5)
       - ((2 * (v512 ^ 0x6E2C2EB5)) & 0x16562B4E4)
       - 0x2E7494B24D4EA58ELL;
  v524 = *(unsigned __int8 *)(v10
                            + ((((v497 ^ 0x80278345)
                               - 2 * ((v497 ^ 0x80278345) & 0xABD0D03ELL ^ (unint64_t)(v497 & 2))
                               - 0x746C8C2C542F2FC4) >> 24) ^ 0x8B9373D3ABLL));
  v525 = *(unsigned __int8 *)(v10 + (v513 ^ 7));
  v526 = *(unsigned __int8 *)(v10
                            + (((unint64_t)((v497 ^ 0x80278345)
                                                                  - 2
                                                                  * ((v497 ^ 0x80278345) & 0xABD0D03E ^ v497 & 2)
                                                                  - 1412378564) >> 16) ^ 0xD0));
  v527 = *(unsigned __int8 *)(v10 + (v506 ^ 3));
  v528 = *(unsigned __int8 *)(v10
                            + ((((v512 ^ 0x6E2C2EB5)
                                                - ((2 * (v512 ^ 0x6E2C2EB5)) & 0x6562B4E4)
                                                - 1296999822) >> 16) ^ 0xB1));
  v529 = *(unsigned __int8 *)(v10
                            + ((((v513 ^ 0x9A8BD07)
                               - ((2 * (v513 ^ 0x9A8BD07)) & 0x169F7CAD2uLL)
                               + 0x2ED3F62DB4FBE569) >> 24) ^ 0x2ED3F62DB4));
  v530 = *(unsigned __int8 *)(v10
                            + ((((v513 ^ 0x9A8BD07)
                                                - ((2 * (v513 ^ 0x9A8BD07)) & 0x69F7CAD2)
                                                - 1258560151) >> 16) ^ 0xFBLL));
  v531 = *(unsigned __int8 *)(v10
                            + (((unsigned __int16)((v497 ^ 0x8345)
                                                                  - 2 * ((v497 ^ 0x8345) & 0xD03E ^ v497 & 2)
                                                                  - 12228) >> 8) ^ 0xD0));
  v532 = *(unsigned __int8 *)(v10 + ((v520 >> 24) ^ 0x9B20F0322FLL));
  v533 = (*(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v10 + (v497 ^ 0x45)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v534 = *(_QWORD *)(v37 + 8 * (v519 ^ 0x23));
  *((_QWORD *)&v500 + 1) = v534 ^ 0x1F8;
  *(_QWORD *)&v500 = v534 ^ 0xCB308CF472657000;
  v535 = (v500 >> 11) + 0x24314C1284BCB9EALL - ((2 * (v500 >> 11)) & 0x48629825097973D4);
  v536 = *(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v10 + (v512 ^ 0xB5)) ^ 0x23));
  *((_QWORD *)&v500 + 1) = v536 ^ 0x1F8;
  *(_QWORD *)&v500 = v536 ^ 0xCB308CF472657000;
  LODWORD(v533) = (((((v535 >> 3) & 0xE5C26219000000 ^ 0x84000210000000)
                   + 0x24314C1284BCB9EALL
                   - ((2 * ((v535 >> 3) & 0xE5C26219000000 ^ 0x84000210000000)) & 0x42800400000000)) ^ v535) >> 24) ^ ((((((v533 - 0x791118510FF07F6CLL - ((2 * v533) & 0x1DCF5DE01F0128uLL)) >> 3) & 0xC26219A00000 ^ 0xC06018000000) - 0x791118510FF07F6CLL - ((2 * (((v533 - 0x791118510FF07F6CLL - ((2 * v533) & 0x1DCF5DE01F0128uLL)) >> 3) & 0xC26219A00000 ^ 0xC06018000000)) & 0x1844420000000)) ^ (v533 - 0x791118510FF07F6CLL - ((2 * v533) & 0x1DCF5DE01F0128))) >> 16);
  v537 = (v500 >> 11) - 0x423B743036A3BE81 - ((2 * (v500 >> 11)) & 0x7B89179F92B882FELL);
  LODWORD(v533) = v533 ^ (((((v537 >> 3) & 0x1BE5C26200000000 ^ 0x13A0806000000000)
                          - 0x423B743036A3BE81
                          - ((2 * ((v537 >> 3) & 0x1BE5C26200000000 ^ 0x13A0806000000000)) & 0x3389048400000000)) ^ v537) >> 32);
  v538 = (*(_QWORD *)(v37 + 8 * (v521 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v539 = (*(_QWORD *)(v37 + 8 * (v522 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v497) = v533 ^ ((((((v538 - ((2 * v538) & 0x36C5A338057D0CuLL) + 0x3B7B62D19C02BE86) >> 3) & 0x6219A0D800 ^ 0x4211805000)
                          + 0xD19C02BE87
                          + ~((2
                             * (((v538 - ((2 * v538) & 0x36C5A338057D0CuLL) + 0x3B7B62D19C02BE86) >> 3) & 0x6219A0D800 ^ 0x4211805000)) & 0x8030013000)) ^ (v538 - ((2 * v538) & 0x36C5A338057D0CLL) + 0x3B7B62D19C02BE86)) >> 8);
  v540 = ((((v539 - 0x3777807F86681CE0 - ((2 * v539) & 0x10FF00F32FC640uLL)) >> 3) & 0xC26219A00000 ^ 0x26009200000)
        - 0x3777807F86681CE0
        - ((2
          * (((v539 - 0x3777807F86681CE0 - ((2 * v539) & 0x10FF00F32FC640uLL)) >> 3) & 0xC26219A00000 ^ 0x26009200000)) & 0x840033000000)) ^ (v539 - 0x3777807F86681CE0 - ((2 * v539) & 0x10FF00F32FC640));
  v541 = *(_QWORD *)(v37 + 8 * (v524 ^ 0x23));
  *((_QWORD *)&v500 + 1) = v541 ^ 0x1F8;
  *(_QWORD *)&v500 = v541 ^ 0xCB308CF472657000;
  v542 = (v500 >> 11) + 0x4E98C0F6A1FB99DCLL - ((2 * (v500 >> 11)) & 0x9D3181ED43F733B8);
  v543 = *(_QWORD *)(v37 + 8 * (v525 ^ 0x23));
  LODWORD(v540) = (((((v542 >> 3) & 0xE5C26219000000 ^ 0xC1000210000000)
                   + 0x4E98C0F6A1FB99DCLL
                   - ((2 * ((v542 >> 3) & 0xE5C26219000000 ^ 0xC1000210000000)) & 0x10180C402000000)) ^ v542) >> 24) ^ (v540 >> 16);
  *((_QWORD *)&v500 + 1) = v543 ^ 0x1F8;
  *(_QWORD *)&v500 = v543 ^ 0xCB308CF472657000;
  v544 = (v500 >> 11) + 0x7EA4C6000BA36327 - ((2 * (v500 >> 11)) & 0xFD498C001746C64ELL);
  LODWORD(v540) = v540 ^ (((((v544 >> 3) & 0x1BE5C26200000000 ^ 0xBC4804000000000)
                          + 0x7EA4C6000BA36327
                          - ((2 * ((v544 >> 3) & 0x1BE5C26200000000 ^ 0xBC4804000000000)) & 0x3549840000000000)) ^ v544) >> 32);
  v545 = (*(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v10 + ((v523 >> 24) ^ 0xD18B6B4DB2)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v546 = *(_QWORD *)(v37 + 8 * (v528 ^ 0x23));
  LODWORD(v528) = v540 ^ ((((((v545 - ((2 * v545) & 0x1B498D6C6BA6A6uLL) - 0x63B25B3949CA2CADLL) >> 3) & 0x6219A0D800 ^ 0x10809800)
                          - ((2
                            * (((v545 - ((2 * v545) & 0x1B498D6C6BA6A6uLL) - 0x63B25B3949CA2CADLL) >> 3) & 0x6219A0D800 ^ 0x10809800)) & 0x842041A000)
                          - 0x63B25A3949CA2CADLL) ^ (v545 - ((2 * v545) & 0x1B498D6C6BA6A6) - 0x63B25B3949CA2CADLL)) >> 8);
  v547 = ((v546 >> 11) ^ 0x1966119E8E4CAELL)
       + 0x3EBA9B27E8324535
       - ((2 * ((v546 >> 11) ^ 0x1966119E8E4CAELL)) & 0x35364FD0648A6ALL);
  v548 = *(_QWORD *)(v37 + 8 * (v527 ^ 0x23));
  *((_QWORD *)&v500 + 1) = v548 ^ 0x1F8;
  *(_QWORD *)&v500 = v548 ^ 0xCB308CF472657000;
  v549 = (v500 >> 11) - 0x1AB217890403C671 - ((2 * (v500 >> 11)) & 0xCA9BD0EDF7F8731ELL);
  v550 = *(_QWORD *)(v37 + 8 * (v526 ^ 0x23));
  LODWORD(v547) = (((((v549 >> 3) & 0xE5C26219000000 ^ 0xA1800219000000)
                   - 0x1AB217890403C671
                   - ((2 * ((v549 >> 3) & 0xE5C26219000000 ^ 0xA1800219000000)) & 0x8B80C432000000)) ^ v549) >> 24) ^ (((((v547 >> 3) & 0xC26219A00000 ^ 0x426019000000) + 0x3EBA9B27E8324535 - ((2 * ((v547 >> 3) & 0xC26219A00000 ^ 0x426019000000)) & 0x1044410400000)) ^ v547) >> 16);
  *((_QWORD *)&v500 + 1) = v550 ^ 0x1F8;
  *(_QWORD *)&v500 = v550 ^ 0xCB308CF472657000;
  v551 = (v500 >> 11) + 0x208B77C3A01F669ALL - ((2 * (v500 >> 11)) & 0x4116EF87403ECD34);
  LODWORD(v547) = v547 ^ (((((v551 >> 3) & 0x1BE5C26200000000 ^ 0x1426000000000)
                          + 0x208B77C3A01F669ALL
                          - ((2 * ((v551 >> 3) & 0x1BE5C26200000000 ^ 0x1426000000000)) & 0x102848400000000)) ^ v551) >> 32);
  v552 = (*(_QWORD *)(v37 + 8 * (v529 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v553 = *(_QWORD *)(v37 + 8 * (v530 ^ 0x23));
  LODWORD(v552) = v547 ^ ((((((v552 - ((2 * v552) & 0x3D9D377DBE8426uLL) + 0x21DECE9BBEDF4213) >> 3) & 0x6219A0D800 ^ 0x421180C800)
                          - ((2
                            * (((v552 - ((2 * v552) & 0x3D9D377DBE8426uLL) + 0x21DECE9BBEDF4213) >> 3) & 0x6219A0D800 ^ 0x421180C800)) & 0x431008000)
                          + 0x21DECF9BBEDF4213) ^ (v552 - ((2 * v552) & 0x3D9D377DBE8426) + 0x21DECE9BBEDF4213)) >> 8);
  *((_QWORD *)&v500 + 1) = v553 ^ 0x1F8;
  *(_QWORD *)&v500 = v553 ^ 0xCB308CF472657000;
  v554 = (v500 >> 11) - 0x568BFCA30ABA8F81 - ((2 * (v500 >> 11)) & 0x52E806B9EA8AE0FELL);
  v555 = (*(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v10 + (BYTE1(v523) ^ 0x5ALL)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v554) = ((((((v555 - 0x679F0CB8D513AFE7 - ((2 * v555) & 0x1E68E55D8A032uLL)) >> 3) & 0x6219A0D800 ^ 0x6001008800)
                   - 0x679F0CB8D513AFE7
                   - ((2
                     * (((v555 - 0x679F0CB8D513AFE7 - ((2 * v555) & 0x1E68E55D8A032uLL)) >> 3) & 0x6219A0D800 ^ 0x6001008800)) & 0x841140A000)) ^ (v555 - 0x679F0CB8D513AFE7 - ((2 * v555) & 0x1E68E55D8A032))) >> 8) ^ (((((v554 >> 3) & 0x1BE5C26200000000 ^ 0x1124806200000000) - 0x568BFCA30ABA8F81 + (~(2 * ((v554 >> 3) & 0x1BE5C26200000000 ^ 0x1124806200000000)) | 0xED37FB7FFFFFFFFFLL) + 1) ^ v554) >> 32);
  v556 = (*(_QWORD *)(v37 + 8 * (v532 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v557 = *(_QWORD *)(v37 + 8 * (v531 ^ 0x23));
  *((_QWORD *)&v500 + 1) = v557 ^ 0x1F8;
  *(_QWORD *)&v500 = v557 ^ 0xCB308CF472657000;
  v558 = (v500 >> 11) - ((2 * (v500 >> 11)) & 0x1B82A5080F10C80ELL) - 0x723EAD7BF8779BF9;
  LODWORD(v558) = v554 ^ ((((((v556 - ((2 * v556) & 0x1B4C34A86B01CAuLL) - 0x6D259E5ABCA7F1BLL) >> 3) & 0xC26219A00000 ^ 0x804208800000)
                          - ((2
                            * (((v556 - ((2 * v556) & 0x1B4C34A86B01CAuLL) - 0x6D259E5ABCA7F1BLL) >> 3) & 0xC26219A00000 ^ 0x804208800000)) & 0x1040420400000)
                          - 0x6D159E5ABCA7F1BLL) ^ (v556 - ((2 * v556) & 0x1B4C34A86B01CALL) - 0x6D259E5ABCA7F1BLL)) >> 16) ^ (((((v558 >> 3) & 0xE5C26219000000 ^ 0xA0024000000000) - ((2 * ((v558 >> 3) & 0xE5C26219000000 ^ 0xA0024000000000)) & 0x182840002000000) - 0x713EAD7BF8779BF9) ^ v558) >> 24);
  v559 = *(unsigned __int8 *)(v21
                            + ((((v552 ^ 0x80E48F21)
                               - (unint64_t)((2 * (v552 ^ 0x80E48F21)) & 0xC7C40D1C)
                               - 0x1AB6726A9C1DF972) >> 24) ^ 0xE5498D9563));
  v560 = *(unsigned __int8 *)(v21
                            + (((unsigned __int16)((v552 ^ 0x8F21)
                                                                  - ((2 * (v552 ^ 0x8F21)) & 0xD1C)
                                                                  + 1678) >> 8) ^ 6));
  v561 = *(unsigned __int8 *)(v21
                            + ((((v552 ^ 0x80E48F21)
                                                - ((2 * (v552 ^ 0x80E48F21)) & 0xC7C40D1C)
                                                + 1675757198) >> 16) ^ 0xE2));
  v562 = *(unsigned __int8 *)(v21 + (v552 ^ 0x21));
  v563 = *(_QWORD *)(v37
                   + 8
                   * (*(unsigned __int8 *)(v21
                                         + (((unsigned __int16)((v497 ^ 0xD8C4)
                                                                               - ((2 * (v497 ^ 0xD8C4)) & 0x47E6)
                                                                               + 9203) >> 8) ^ 0x23)) ^ 0x23));
  *((_QWORD *)&v500 + 1) = v563 ^ 0x1F8;
  *(_QWORD *)&v500 = v563 ^ 0xCB308CF472657000;
  v564 = (v500 >> 11) - 0x45304BB35BB0C477 + (~(2 * (v500 >> 11)) | 0x8A609766B76188EDLL) + 1;
  v565 = *(_QWORD *)(v37
                   + 8
                   * (*(unsigned __int8 *)(v21
                                         + ((((v558 ^ 0xFA0CFC20)
                                                             - ((2 * (v558 ^ 0xFA0CFC20)) & 0x4321BC2E)
                                                             - 1584341481) >> 16) ^ 0x90)) ^ 0x23));
  *((_QWORD *)&v500 + 1) = v565 ^ 0x1F8;
  *(_QWORD *)&v500 = v565 ^ 0xCB308CF472657000;
  v566 = (v500 >> 11) - 0x170D1EE83AB8079BLL - ((2 * (v500 >> 11)) & 0xD1E5C22F8A8FF0CALL);
  v567 = (*(_QWORD *)(v37 + 8 * (v559 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v564) = (((((v566 >> 3) & 0x1BE5C26200000000 ^ 0x1904402200000000)
                   - 0x170D1EE83AB8079BLL
                   - ((2 * ((v566 >> 3) & 0x1BE5C26200000000 ^ 0x1904402200000000)) & 0x11C1800400000000)) ^ v566) >> 32) ^ (((((v564 >> 3) & 0xE5C26219000000 ^ 0x41C20010000000) - 0x45304BB35BB0C477 - ((2 * ((v564 >> 3) & 0xE5C26219000000 ^ 0x41C20010000000)) & 0x18B008000000000)) ^ v564) >> 24) ^ ((((((v567 - ((2 * v567) & 0x27A9CD0001B4E8uLL) + 0x71F3D4E68000DA74) >> 3) & 0x6219A0D800 ^ 0x10001800) - ((2 * (((v567 - ((2 * v567) & 0x27A9CD0001B4E8uLL) + 0x71F3D4E68000DA74) >> 3) & 0x6219A0D800 ^ 0x10001800)) & 0xC40001B000) + 0x71F3D5E68000DA74) ^ (v567 - ((2 * v567) & 0x27A9CD0001B4E8) + 0x71F3D4E68000DA74)) >> 8);
  v568 = (*(_QWORD *)(v37
                    + 8
                    * (*(unsigned __int8 *)(v21
                                          + ((((v528 ^ 0x207A8532)
                                                              - ((2 * (v528 ^ 0x207A8532)) & 0x9BAEA694)
                                                              - 841526454) >> 16) ^ 0xD7)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v569 = *(_QWORD *)(v37
                   + 8
                   * (*(unsigned __int8 *)(v21
                                         + (((unsigned __int16)((v528 ^ 0x8532)
                                                                               - ((2 * (v528 ^ 0x8532)) & 0xA694)
                                                                               + 21322) >> 8) ^ 0x53)) ^ 0x23));
  *((_QWORD *)&v500 + 1) = v569 ^ 0x1F8;
  *(_QWORD *)&v500 = v569 ^ 0xCB308CF472657000;
  v570 = (v500 >> 11) - 0x8C63D1CB15D46FALL - ((2 * (v500 >> 11)) & 0xEE7385C69D45720CLL);
  LODWORD(v559) = v564 ^ ((((((v568 - ((2 * v568) & 0xA13968CA4C53CuLL) - 0x765AF634B9AD9D62) >> 3) & 0xC26219A00000 ^ 0x802008800000)
                          - (((v568 - ((2 * v568) & 0xA13968CA4C53CuLL) - 0x765AF634B9AD9D62) >> 2) & 0x8400000000)
                          - 0x7659F634B9AD9D62) ^ (v568 - ((2 * v568) & 0xA13968CA4C53CLL) - 0x765AF634B9AD9D62)) >> 16);
  v571 = *(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v21 + (v497 ^ 0xC4)) ^ 0x23));
  *((_QWORD *)&v500 + 1) = v571 ^ 0x1F8;
  *(_QWORD *)&v500 = v571 ^ 0xCB308CF472657000;
  v572 = (v500 >> 11) - ((2 * (v500 >> 11)) & 0xDFE1D2DEC1587884);
  LODWORD(v564) = (((((v570 >> 3) & 0xE5C26219000000 ^ 0xE5004009000000)
                   - 0x8C63D1CB15D46FALL
                   - ((2 * ((v570 >> 3) & 0xE5C26219000000 ^ 0xE5004009000000)) & 0x4384C410000000)) ^ v570) >> 24) ^ (((((unint64_t)(v572 + 0x6FF0E96F60AC3C42) >> 3) & 0x1BE5C26200000000 | (0x900F16909F53C3BDLL - v572) & 0x1000000000) ^ (v572 + 0x6FF0E96F60AC3C42) & 0xFFFFFFEF00000000) >> 32);
  v573 = (*(_QWORD *)(v37
                    + 8
                    * (*(unsigned __int8 *)(v21
                                          + (((unsigned __int16)((v558 ^ 0xFC20)
                                                                                - ((2 * (v558 ^ 0xFC20)) & 0xBC2E)
                                                                                - 8681) >> 8) ^ 0xDELL)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v564) = v564 ^ ((((((v573 - ((2 * v573) & 0x1791F590DA2C0CuLL) - 0x69D437053792E9FALL) >> 3) & 0x6219A0D800 ^ 0x219008000)
                          - ((2
                            * (((v573 - ((2 * v573) & 0x1791F590DA2C0CuLL) - 0x69D437053792E9FALL) >> 3) & 0x6219A0D800 ^ 0x219008000)) & 0xC410402000)
                          - 0x69D436053792E9FALL) ^ (v573 - ((2 * v573) & 0x1791F590DA2C0CLL) - 0x69D437053792E9FALL)) >> 8);
  v574 = (*(_QWORD *)(v37 + 8 * (v561 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v575 = v560 ^ 0x23;
  LODWORD(v560) = v564 ^ ((((((v574 - ((2 * v574) & 0x3D232B91D432ACuLL) + 0x55BE9195C8EA1956) >> 3) & 0xC26219A00000 ^ 0xC22219000000)
                          - ((2
                            * (((v574 - ((2 * v574) & 0x3D232B91D432ACuLL) + 0x55BE9195C8EA1956) >> 3) & 0xC26219A00000 ^ 0xC22219000000)) & 0x1000011400000)
                          + 0x55BF9195C8EA1956) ^ (v574 - ((2 * v574) & 0x3D232B91D432ACLL) + 0x55BE9195C8EA1956)) >> 16);
  v576 = *(_QWORD *)(v37 + 8 * v575);
  *((_QWORD *)&v500 + 1) = v576 ^ 0x1F8;
  *(_QWORD *)&v500 = v576 ^ 0xCB308CF472657000;
  v577 = (v500 >> 11) - 0x52EC0F04543F3FB4 - ((2 * (v500 >> 11)) & 0x5A27E1F757818098);
  v578 = (*(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v21 + (v528 ^ 0x32)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v577) = ((((((v578 + 0x7A4602D9FC47125BLL - ((2 * v578) & 0xC05B3F88E24B6uLL)) >> 3) & 0x6219A0D800 ^ 0x421980C000)
                   + 0x7A4602D9FC47125BLL
                   - ((2
                     * (((v578 + 0x7A4602D9FC47125BLL - ((2 * v578) & 0xC05B3F88E24B6uLL)) >> 3) & 0x6219A0D800 ^ 0x421980C000)) & 0x8030002000)) ^ (v578 + 0x7A4602D9FC47125BLL - ((2 * v578) & 0xC05B3F88E24B6))) >> 8) ^ (((((v577 >> 3) & 0x1BE5C26200000000 ^ 0x11A0420200000000) - 0x52EC0F04543F3FB4 - ((2 * ((v577 >> 3) & 0x1BE5C26200000000 ^ 0x11A0420200000000)) & 0x120380C400000000)) ^ v577) >> 32);
  v579 = (*(_QWORD *)(v37
                    + 8
                    * (*(unsigned __int8 *)(v21
                                          + ((((v497 ^ 0x5E75D8C4)
                                             - ((2 * (v497 ^ 0x5E75D8C4)) & 0x1D1FE47E6uLL)
                                             - 0x2940F0B41700DC0DLL) >> 24) ^ 0xD6BF0F4BE8)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  LODWORD(v577) = v577 ^ ((((((v579 - ((2 * v579) & 0xBC9C3E4D29066uLL) + 0x6D05E4E1F2694833) >> 3) & 0xC26219A00000 ^ 0x800018000000)
                          - ((2
                            * (((v579 - ((2 * v579) & 0xBC9C3E4D29066uLL) + 0x6D05E4E1F2694833) >> 3) & 0xC26219A00000 ^ 0x800018000000)) & 0x180C020400000)
                          + 0x6D06E4E1F2694833) ^ (v579 - ((2 * v579) & 0xBC9C3E4D29066) + 0x6D05E4E1F2694833)) >> 16);
  v580 = *(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v21 + (v558 ^ 0x20)) ^ 0x23));
  *((_QWORD *)&v500 + 1) = v580 ^ 0x1F8;
  *(_QWORD *)&v500 = v580 ^ 0xCB308CF472657000;
  v581 = (v500 >> 11) - ((2 * (v500 >> 11)) & 0x88CB57C85D254420) + 0x4465ABE42E92A210;
  LODWORD(v581) = v577 ^ (((((v581 >> 3) & 0xE5C26219000000 ^ 0x84806001000000)
                          - ((2 * ((v581 >> 3) & 0xE5C26219000000 ^ 0x84806001000000)) & 0xCB04C010000000)
                          + 0x4565ABE42E92A210) ^ v581) >> 24);
  v582 = (*(_QWORD *)(v37
                    + 8
                    * (*(unsigned __int8 *)(v21
                                          + ((((v558 ^ 0xFA0CFC20)
                                             - ((2 * (v558 ^ 0xFA0CFC20)) & 0x14321BC2EuLL)
                                             + 0x4A061850A190DE17) >> 24) ^ 0x4A061850A1)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v583 = *(_QWORD *)(v37 + 8 * (v562 ^ 0x23));
  *((_QWORD *)&v500 + 1) = v583 ^ 0x1F8;
  *(_QWORD *)&v500 = v583 ^ 0xCB308CF472657000;
  v584 = (v500 >> 11) + 0x54533F796CA03A8ALL - ((2 * (v500 >> 11)) & 0xA8A67EF2D9407514);
  LODWORD(v582) = (((((v584 >> 3) & 0xE5C26219000000 ^ 0x80426209000000)
                   + 0x54533F796CA03A8ALL
                   - ((2 * ((v584 >> 3) & 0xE5C26219000000 ^ 0x80426209000000)) & 0x8204C010000000)) ^ v584) >> 24) ^ ((((((v582 + 0x58178C6621641A90 - ((2 * v582) & 0x2F18CC42C83520uLL)) >> 3) & 0xC26219A00000 ^ 0xC00000200000) + 0x58178C6621641A90 - ((2 * (((v582 + 0x58178C6621641A90 - ((2 * v582) & 0x2F18CC42C83520uLL)) >> 3) & 0xC26219A00000 ^ 0xC00000200000)) & 0x100C402400000)) ^ (v582 + 0x58178C6621641A90 - ((2 * v582) & 0x2F18CC42C83520))) >> 16);
  v585 = *(_QWORD *)(v37
                   + 8
                   * (*(unsigned __int8 *)(v21
                                         + ((((v528 ^ 0x207A8532)
                                            - ((2 * (v528 ^ 0x207A8532)) & 0x19BAEA694uLL)
                                            + 0x4BEE08B3CDD7534ALL) >> 24) ^ 0x4BEE08B3CDLL)) ^ 0x23));
  *((_QWORD *)&v500 + 1) = v585 ^ 0x1F8;
  *(_QWORD *)&v500 = v585 ^ 0xCB308CF472657000;
  v586 = (v500 >> 11) - 0x45328A2CB704E634 - ((2 * (v500 >> 11)) & 0x759AEBA691F63398);
  LODWORD(v582) = v582 ^ (((((v586 >> 3) & 0x1BE5C26200000000 ^ 0x1341822200000000)
                          - 0x45328A2CB704E634
                          - ((2 * ((v586 >> 3) & 0x1BE5C26200000000 ^ 0x1341822200000000)) & 0x358A808400000000)) ^ v586) >> 32);
  v587 = (*(_QWORD *)(v37
                    + 8
                    * (*(unsigned __int8 *)(v21
                                          + ~(((v497 ^ 0x5E75D8C4)
                                                              - ((2 * (v497 ^ 0x5E75D8C4)) & 0xD1FE47E6)
                                                              - 385932301) >> 16)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v588 = ((((v587 - ((2 * v587) & 0x52E6A43627450uLL) + 0x7882973521B13A28) >> 3) & 0x6219A0D800 ^ 0x6200200000)
        - ((2
          * (((v587 - ((2 * v587) & 0x52E6A43627450uLL) + 0x7882973521B13A28) >> 3) & 0x6219A0D800 ^ 0x6200200000)) & 0x4003403000)
        + 0x7882983521B13A28) ^ (v587 - ((2 * v587) & 0x52E6A43627450) + 0x7882973521B13A28);
  v589 = (v581 ^ 0x5A525E13)
       - ((2 * (v581 ^ 0x5A525E13)) & 0xDBBA6B48)
       + 0x5373D17A6DDD35A4;
  LODWORD(v582) = v582 ^ (v588 >> 8);
  v590 = *(unsigned __int8 *)(v21 + (v582 ^ 0xAFLL));
  v591 = *(unsigned __int8 *)(v21 + (v559 ^ 5));
  v592 = *(unsigned __int8 *)(v21
                            + (((unsigned __int16)((v581 ^ 0x5E13)
                                                                  - ((2 * (v581 ^ 0x5E13)) & 0x6B48)
                                                                  + 13732) >> 8) ^ 0x35));
  v593 = (v559 ^ 0x39915905)
       - ((2 * (v559 ^ 0x39915905)) & 0x1B5C218C6)
       + 0x3CFD63D5DAE10C63;
  v594 = (v582 ^ 0x3E2B31AFLL)
       - ((2 * (v582 ^ 0x3E2B31AF)) & 0xED23AF82)
       + 0x412DD1F7691D7C1;
  v595 = *(unsigned __int8 *)(v21 + ((v594 >> 24) ^ 0x412DD1F76));
  v596 = *(unsigned __int8 *)(v21 + (v581 ^ 0x13));
  v597 = *(unsigned __int8 *)(v21 + ((v593 >> 24) ^ 0x3CFD63D5DALL));
  v598 = *(unsigned __int8 *)(v21
                            + ((((v560 ^ 0xB9B634F9)
                               - (unint64_t)((2 * (v560 ^ 0xB9B634F9)) & 0x7EFF8442)
                               + 0x749E47433F7FC221) >> 24) ^ 0x749E47433FLL));
  v599 = *(unsigned __int8 *)(v21 + ((v589 >> 24) ^ 0x5373D17A6DLL));
  v600 = *(_QWORD *)(v37 + 8 * (v591 ^ 0x23));
  *((_QWORD *)&v500 + 1) = v600 ^ 0x1F8;
  *(_QWORD *)&v500 = v600 ^ 0xCB308CF472657000;
  v601 = (v500 >> 11) + 0x6703218889BF8FD7 - ((2 * (v500 >> 11)) & 0xCE064311137F1FAELL);
  v602 = *(_QWORD *)(v37 + 8 * (v590 ^ 0x23));
  *((_QWORD *)&v500 + 1) = v602 ^ 0x1F8;
  *(_QWORD *)&v500 = v602 ^ 0xCB308CF472657000;
  v603 = (v500 >> 11) - 0x5F325AA7344B9FE6 - ((2 * (v500 >> 11)) & 0x419B4AB19768C034);
  v604 = (((((v603 >> 3) & 0x1BE5C26200000000 ^ 0x1001802200000000)
          - 0x5F325AA7344B9FE6
          - ((2 * ((v603 >> 3) & 0x1BE5C26200000000 ^ 0x1001802200000000)) & 0x18B008000000000)) ^ v603) >> 32) ^ (((((v601 >> 3) & 0xE5C26219000000 ^ 0xE0402011000000) + 0x6703218889BF8FD7 - ((2 * ((v601 >> 3) & 0xE5C26219000000 ^ 0xE0402011000000)) & 0x2000012000000)) ^ v601) >> 24);
  v605 = (*(_QWORD *)(v37 + 8 * (v592 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v606 = v604 ^ ((((((v605 - ((2 * v605) & 0x306D9E7EE3463CuLL) + 0x201836CF3F71A31ELL) >> 3) & 0x6219A0D800 ^ 0x4001A01000)
                 - ((2
                   * (((v605 - ((2 * v605) & 0x306D9E7EE3463CuLL) + 0x201836CF3F71A31ELL) >> 3) & 0x6219A0D800 ^ 0x4001A01000)) & 0x8432410000)
                 + 0x201837CF3F71A31ELL) ^ (v605 - ((2 * v605) & 0x306D9E7EE3463CLL) + 0x201836CF3F71A31ELL)) >> 8);
  v607 = (*(_QWORD *)(v37
                    + 8
                    * (*(unsigned __int8 *)(v21
                                          + (((unsigned __int16)((v560 ^ 0x34F9)
                                                                                - ((2 * (v560 ^ 0x34F9)) & 0x8442)
                                                                                - 15839) >> 8) ^ 0xC2)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v608 = *(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v21 + (v560 ^ 0xF9)) ^ 0x23));
  STACK[0x5D8] = v606 ^ ((((((v607 - ((2 * v607) & 0x3D4E2BC713A718uLL) + 0x2B5EA715E389D38CLL) >> 3) & 0xC26219A00000 ^ 0xC06218200000)
                         - ((2
                           * (((v607 - ((2 * v607) & 0x3D4E2BC713A718uLL) + 0x2B5EA715E389D38CLL) >> 3) & 0xC26219A00000 ^ 0xC06218200000)) & 0x1040003000000)
                         + 0x2B5FA715E389D38CLL) ^ (v607 - ((2 * v607) & 0x3D4E2BC713A718) + 0x2B5EA715E389D38CLL)) >> 16);
  v609 = ((v608 >> 11) ^ 0x1966119E8E4CAELL)
       - 0x3C0819620D05D741
       - ((2 * ((v608 >> 11) ^ 0x1966119E8E4CAELL)) & 0x2FCD3BE5F4517ELL);
  v610 = *(_QWORD *)(v37 + 8 * (v597 ^ 0x23));
  *((_QWORD *)&v500 + 1) = v610 ^ 0x1F8;
  *(_QWORD *)&v500 = v610 ^ 0xCB308CF472657000;
  v611 = (v500 >> 11) - 0x22D786E64686BE46 - ((2 * (v500 >> 11)) & 0xBA50F23372F28374);
  v612 = *(_QWORD *)(v37 + 8 * (v595 ^ 0x23));
  *((_QWORD *)&v500 + 1) = v612 ^ 0x1F8;
  *(_QWORD *)&v500 = v612 ^ 0xCB308CF472657000;
  v613 = (v500 >> 11) - 0x4B6E30D7C5BD0B99 - ((2 * (v500 >> 11)) & 0x69239E507485E8CELL);
  v614 = (((((v611 >> 3) & 0xE5C26219000000 ^ 0xA5022211000000)
          - 0x22D786E64686BE46
          - ((2 * ((v611 >> 3) & 0xE5C26219000000 ^ 0xA5022211000000)) & 0x40800032000000)) ^ v611) >> 24) ^ (((((v609 >> 3) & 0xC26219A00000 ^ 0xC04218000000) - 0x3C0819620D05D741 - ((2 * ((v609 >> 3) & 0xC26219A00000 ^ 0xC04218000000)) & 0x1840021400000)) ^ v609) >> 16) ^ (((((v613 >> 3) & 0x1BE5C26200000000 ^ 0x1280006000000000) - 0x4B6E30D7C5BD0B99 - ((2 * ((v613 >> 3) & 0x1BE5C26200000000 ^ 0x1280006000000000)) & 0x2103844000000000)) ^ v613) >> 32);
  v615 = (*(_QWORD *)(v37 + 8 * (v596 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v616 = v614 ^ ((((((v615 - ((2 * v615) & 0x964E027B50F5AuLL) + 0x74E4B27013DA87ADLL) >> 3) & 0x6219A0D800 ^ 0x4200205000)
                 - ((2
                   * (((v615 - ((2 * v615) & 0x964E027B50F5AuLL) + 0x74E4B27013DA87ADLL) >> 3) & 0x6219A0D800 ^ 0x4200205000)) & 0xC023010000)
                 + 0x74E4B37013DA87ADLL) ^ (v615 - ((2 * v615) & 0x964E027B50F5ALL) + 0x74E4B27013DA87ADLL)) >> 8);
  v617 = (*(_QWORD *)(v37 + 8 * (v599 ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v618 = v617 + 0x13948832443A2258 - ((2 * v617) & 0x291064887444B0);
  v619 = *(_QWORD *)(v37 + 8 * (v598 ^ 0x23));
  *((_QWORD *)&v500 + 1) = v619 ^ 0x1F8;
  *(_QWORD *)&v500 = v619 ^ 0xCB308CF472657000;
  v620 = (v500 >> 11) + 0x8E0DB45C06D8384 - ((2 * (v500 >> 11)) & 0x11C1B68B80DB0708);
  v621 = *(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v21 + (BYTE2(v593) ^ 0xE1)) ^ 0x23));
  *((_QWORD *)&v500 + 1) = v621 ^ 0x1F8;
  *(_QWORD *)&v500 = v621 ^ 0xCB308CF472657000;
  v622 = (v500 >> 11) + 0x5FEF5058390359BFLL - ((2 * (v500 >> 11)) & 0xBFDEA0B07206B37ELL);
  v623 = (*(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v21 + (BYTE2(v594) ^ 0x91)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v624 = v623 - ((2 * v623) & 0x286B5A8EC6DF0CLL) - 0x352BCA52B89C907ALL;
  v625 = (*(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v21 + (BYTE1(v594) ^ 0xD7)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v626 = (*(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v21 + (BYTE2(v589) ^ 0xDDLL)) ^ 0x23)) >> 11) ^ 0x1966119E8E4CAELL;
  v627 = *(_QWORD *)(v37
                   + 8
                   * (*(unsigned __int8 *)(v21
                                         + ((((v560 ^ 0xB9B634F9)
                                                             - ((2 * (v560 ^ 0xB9B634F9)) & 0x7EFF8442)
                                                             + 1065337377) >> 16) ^ 0x7FLL)) ^ 0x23));
  *((_QWORD *)&v500 + 1) = v627 ^ 0x1F8;
  *(_QWORD *)&v500 = v627 ^ 0xCB308CF472657000;
  v628 = v500 >> 11;
  v629 = *(_QWORD *)(v37 + 8 * (*(unsigned __int8 *)(v21 + (BYTE1(v593) ^ 0xCLL)) ^ 0x23));
  *((_QWORD *)&v500 + 1) = v629 ^ 0x1F8;
  *(_QWORD *)&v500 = v629 ^ 0xCB308CF472657000;
  v630 = (v500 >> 11) - 0x42A8992E7BB678DELL - ((2 * (v500 >> 11)) & 0x7AAECDA308930E44);
  LODWORD(v592) = (((((v620 >> 3) & 0xE5C26219000000 ^ 0x4026018000000)
                   + 0x8E0DB45C06D8384
                   - ((2 * ((v620 >> 3) & 0xE5C26219000000 ^ 0x4026018000000)) & 0x1C1848000000000)) ^ v620) >> 24) ^ (((((v618 >> 3) & 0xC26219A00000 ^ 0x800208800000) + 0x13948832443A2258 - ((2 * ((v618 >> 3) & 0xC26219A00000 ^ 0x800208800000)) & 0x1004400400000)) ^ v618) >> 16) ^ (((((v622 >> 3) & 0x1BE5C26200000000 ^ 0xBE5C20200000000) + 0x5FEF5058390359BFLL - ((2 * ((v622 >> 3) & 0x1BE5C26200000000 ^ 0xBE5C20200000000)) & 0x37CA808000000000)) ^ v622) >> 32) ^ (((((v624 >> 3) & 0x6219A0D800 ^ 0x2008A04800) - ((2 * ((v624 >> 3) & 0x6219A0D800 ^ 0x2008A04800)) & 0x4002409000) - 0x352BC952B89C907ALL) ^ v624) >> 8);
  v631 = (v592 ^ 0xB1268BB8)
       - ((2 * (v592 ^ 0xB1268BB8)) & 0x8CBD162E)
       + 0x3B662511465E8B17;
  LODWORD(v625) = ((((((v626 + 0x2095C3509BF36BF6 - ((2 * v626) & 0x2B86A137E6D7ECuLL)) >> 3) & 0xC26219A00000 ^ 0x806211200000)
                   + 0x2095C3509BF36BF6
                   - ((2
                     * (((v626 + 0x2095C3509BF36BF6 - ((2 * v626) & 0x2B86A137E6D7ECuLL)) >> 3) & 0xC26219A00000 ^ 0x806211200000)) & 0x1848033400000)) ^ (v626 + 0x2095C3509BF36BF6 - ((2 * v626) & 0x2B86A137E6D7ECLL))) >> 16) ^ ((((((v625 + 0x3BBDFB56BA8A256ELL - ((2 * v625) & 0x3BF6AD75144ADCuLL)) >> 3) & 0x6219A0D800 ^ 0x6211004000) + 0x3BBDFB56BA8A256ELL - ((2 * (((v625 + 0x3BBDFB56BA8A256ELL - ((2 * v625) & 0x3BF6AD75144ADCuLL)) >> 3) & 0x6219A0D800 ^ 0x6211004000)) & 0x8431000000)) ^ (v625 + 0x3BBDFB56BA8A256ELL - ((2 * v625) & 0x3BF6AD75144ADCLL))) >> 8) ^ ((((((v628 - ((2 * v628) & 0x2BEFA60EE74B2C58uLL) + 0x15F7D30773A5962CLL) >> 3) & 0xE5C26219000000 ^ 0xA4C26008000000) - ((2 * (((v628 - ((2 * v628) & 0x2BEFA60EE74B2C58uLL) + 0x15F7D30773A5962CLL) >> 3) & 0xE5C26219000000 ^ 0xA4C26008000000)) & 0x1CB840422000000) + 0x16F7D30773A5962CLL) ^ (v628 - ((2 * v628) & 0x2BEFA60EE74B2C58) + 0x15F7D30773A5962CLL)) >> 24) ^ (((((v630 >> 3) & 0x1BE5C26200000000 ^ 0x13A0C04200000000) - 0x42A8992E7BB678DELL - ((2 * ((v630 >> 3) & 0x1BE5C26200000000 ^ 0x13A0C04200000000)) & 0x328A848000000000)) ^ v630) >> 32);
  v632 = (STACK[0x5D8] ^ 0x1C808984)
       - ((2 * (STACK[0x5D8] ^ 0x1C808984)) & 0x8EDF5EE6)
       - 0x7B806A29B890508DLL;
  LODWORD(STACK[0x5C0]) = *(unsigned __int8 *)(v21 + (STACK[0x5D8] ^ 0x84));
  LODWORD(STACK[0x5B0]) = *(unsigned __int8 *)(v21
                                             + (((unsigned __int16)((v625 ^ 0x1249)
                                                                                   - ((2 * (v625 ^ 0x1249)) & 0xBD4)
                                                                                   + 1514) >> 8) ^ 5));
  LODWORD(STACK[0x5B8]) = *(unsigned __int8 *)(v21
                                             + ((((v616 ^ 0xA3AEA966)
                                                                 - ((2 * (v616 ^ 0xA3AEA966)) & 0x3B1D08B4)
                                                                 + 495879258) >> 16) ^ 0x8ELL));
  v633 = STACK[0x448];
  STACK[0x3A0] = STACK[0x448] - 0x138A5B03125511F5;
  LODWORD(STACK[0x568]) = *(unsigned __int8 *)(v21 + ((v631 >> 24) ^ 0x3B66251146));
  LODWORD(STACK[0x580]) = *(unsigned __int8 *)(v21
                                             + (((unsigned __int16)((v616 ^ 0xA966)
                                                                                   - ((2 * (v616 ^ 0xA966)) & 0x8B4)
                                                                                   - 31654) >> 8) ^ 0x84));
  LODWORD(STACK[0x558]) = *(unsigned __int8 *)(v21 + ((v632 >> 24) ^ 0x847F95D647));
  LODWORD(STACK[0x538]) = *(unsigned __int8 *)(v21 + (v625 ^ 0x49));
  LODWORD(STACK[0x598]) = *(unsigned __int8 *)(v21
                                             + ((((v625 ^ 0x68E61249)
                                                - (unint64_t)((2 * (v625 ^ 0x68E61249)) & 0xEDE40BD4)
                                                - 0x225C381C890DFA16) >> 24) ^ 0xDDA3C7E376));
  LODWORD(STACK[0x560]) = *(unsigned __int8 *)(v21 + (BYTE1(v631) ^ 0x8BLL));
  LODWORD(STACK[0x540]) = *(unsigned __int8 *)(v21 + (BYTE2(v631) ^ 0x5ELL));
  STACK[0x3B8] = v633 - 0x138A5B03125511FDLL;
  LODWORD(STACK[0x570]) = *(unsigned __int8 *)(v21 + (BYTE2(v632) ^ 0x6FLL));
  LODWORD(STACK[0x548]) = *(unsigned __int8 *)(v21 + (v616 ^ 0x66));
  LODWORD(STACK[0x5C8]) = *(unsigned __int8 *)(v21 + (BYTE1(v632) ^ 0xAFLL));
  LODWORD(STACK[0x590]) = *(unsigned __int8 *)(v21
                                             + ((((v625 ^ 0x68E61249)
                                                                 - ((2 * (v625 ^ 0x68E61249)) & 0xEDE40BD4)
                                                                 + 1995572714) >> 16) ^ 0xF2));
  LODWORD(STACK[0x5A0]) = *(unsigned __int8 *)(v21 + (v592 ^ 0xB8));
  v634 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x4D0] + 8
                                                      * (LODWORD(STACK[0x5D0]) ^ (196 * ((STACK[0x578] & 1) == 0))))
                           - 12);
  LODWORD(STACK[0x5D0]) = *(unsigned __int8 *)(v21
                                             + ((((v616 ^ 0xA3AEA966)
                                                - (unint64_t)((2 * (v616 ^ 0xA3AEA966)) & 0x3B1D08B4)
                                                - 0x19D52A51E2717BA6) >> 24) ^ 0xE62AD5AE1DLL));
  STACK[0x3B0] = v633 - 0x138A5B0312551205;
  return v634();
}

uint64_t sub_1CF33B8C8()
{
  int v0;
  unint64_t v1;
  int v2;
  int v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  BOOL v18;
  unsigned __int8 v19;
  int v20;
  unint64_t v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  unsigned int v30;
  char v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  char v41;
  int v42;
  char v43;
  int v44;
  char v45;
  char *v46;
  int v47;
  unsigned int v48;
  int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  int v54;
  unsigned int v55;
  int v56;
  unsigned int v57;
  int v58;
  int v59;
  unsigned int v60;
  int v61;
  int v62;
  unsigned int v63;
  int v64;
  char v65;
  unsigned __int8 v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  int v71;
  unsigned __int8 v72;
  int v73;
  unsigned int v74;
  unsigned __int8 v75;
  int v76;
  unsigned int v77;
  int v78;
  uint64_t v79;

  v0 = STACK[0x528] + 436;
  v1 = STACK[0x530];
  v2 = LODWORD(STACK[0x454]) ^ STACK[0x530] ^ 0x22;
  v3 = LODWORD(STACK[0x45C]) ^ STACK[0x530] ^ 0xFFFFFFA1;
  v4 = LODWORD(STACK[0x474]) ^ STACK[0x530] ^ 0xFFFFFFFC;
  v5 = LODWORD(STACK[0x47C]) ^ STACK[0x530] ^ 0xFFFFFF81;
  v6 = LODWORD(STACK[0x484]) ^ STACK[0x530] ^ 4;
  v7 = LODWORD(STACK[0x46C]) ^ STACK[0x530] ^ 0xFFFFFFDD;
  v8 = STACK[0x530] ^ LODWORD(STACK[0x460]) ^ (STACK[0x528] + 329);
  v9 = LODWORD(STACK[0x464]) ^ STACK[0x530] ^ 0x5D;
  v10 = LODWORD(STACK[0x480]) ^ STACK[0x530] ^ 0x24;
  v11 = LODWORD(STACK[0x48C]) ^ STACK[0x530] ^ 0xFFFFFFC1;
  v12 = LODWORD(STACK[0x478]) ^ STACK[0x530] ^ 0xFFFFFFA0;
  v13 = LODWORD(STACK[0x488]) ^ STACK[0x530] ^ 0xFFFFFFD8;
  v14 = LODWORD(STACK[0x468]) ^ STACK[0x530] ^ 0x4B;
  STACK[0x5D8] = LODWORD(STACK[0x450]) ^ STACK[0x530] ^ 0x54;
  v15 = LODWORD(STACK[0x458]) ^ v1 ^ 0xFFFFFFC6;
  v16 = LODWORD(STACK[0x470]) ^ v1 ^ 0x79;
  v17 = STACK[0x550];
  STACK[0x490] = v6;
  STACK[0x4C0] = v13;
  STACK[0x508] = v11;
  STACK[0x510] = v8;
  LODWORD(STACK[0x530]) = v10;
  v18 = v17 == 37;
  LODWORD(STACK[0x3C0]) = v0 ^ 0xCE;
  LODWORD(STACK[0x550]) = (v0 ^ 0xCE) + (v3 ^ 0xFFFFFFEB) - ((2 * (v3 ^ 0xFFFFFFEB) + 114) & 0x4A);
  LODWORD(STACK[0x404]) = (v4 ^ 0x64) + (~(2 * (v4 ^ 0x64) + 114) | 0xFFFFFFB5);
  LODWORD(STACK[0x3F8]) = (v2 ^ 0x3B) - ((2 * (v2 ^ 0x3B) + 114) & 0x4A);
  LODWORD(STACK[0x3E8]) = (v6 ^ 0x32) - ((2 * (v6 ^ 0x32) + 114) & 0x4A);
  LODWORD(STACK[0x3F0]) = (v7 ^ 0x1F) - ((2 * (v7 ^ 0x1F) + 114) & 0x4A);
  v19 = v7;
  STACK[0x4A0] = v7;
  LODWORD(STACK[0x3E0]) = (v14 ^ 0x54) - ((2 * (v14 ^ 0x54) + 114) & 0x4A);
  LODWORD(STACK[0x3E4]) = (v9 ^ 0x11) - ((2 * (v9 ^ 0x11) + 14) & 0x4A);
  STACK[0x4B8] = v9;
  LODWORD(STACK[0x3DC]) = (v13 ^ 0x5B) - ((2 * (v13 ^ 0x5B) + 114) & 0x4A);
  STACK[0x498] = v5;
  LODWORD(STACK[0x3D8]) = (v10 ^ 0x48) - ((2 * (v10 ^ 0x48) + 114) & 0x4A);
  STACK[0x4A8] = v14;
  LODWORD(STACK[0x3D0]) = (v11 ^ 0xFFFFFF90) - ((2 * (v11 ^ 0xFFFFFF90) + 114) & 0x4A);
  v20 = (v8 ^ 0xFFFFFF89) - ((2 * (v8 ^ 0xFFFFFF89) + 114) & 0x4A);
  LODWORD(STACK[0x3CC]) = (v16 ^ 0xFFFFFFB1) - ((2 * (v16 ^ 0xFFFFFFB1) + 114) & 0x4A);
  LODWORD(v1) = v0;
  v21 = STACK[0x5A8];
  v22 = *(unsigned __int8 *)(STACK[0x5A8] + (v3 ^ 0x90));
  LOBYTE(v7) = v3;
  v23 = v1;
  LODWORD(STACK[0x4C8]) = v1;
  LODWORD(STACK[0x3AC]) = (v1 - 1251) | 0x422;
  STACK[0x518] = v16;
  v24 = *(unsigned __int8 *)(v21 + (v6 ^ 0x49));
  v25 = *(unsigned __int8 *)(v21 + (v19 ^ 0x64));
  v26 = *(unsigned __int8 *)(v21 + (v14 ^ 0x2FLL));
  LODWORD(v14) = (v15 ^ 0xFFFFFFC3) - ((2 * (v15 ^ 0xFFFFFFC3) + 114) & 0x4A);
  v27 = *(unsigned __int8 *)(v21 + (v9 ^ 0x95));
  LODWORD(v1) = *(unsigned __int8 *)(v21 + (v13 ^ 0x20));
  v28 = *(unsigned __int8 *)(v21 + (v10 ^ 0x48) - (((2 * v10) ^ 0x99999999) & 0xF6) + 123);
  LOBYTE(v6) = v15;
  STACK[0x520] = v15;
  LODWORD(v15) = *(unsigned __int8 *)(v21 + (v11 ^ 0xEBLL));
  LODWORD(v11) = *(unsigned __int8 *)(v21 + (v8 ^ 0xF2));
  LODWORD(v13) = *(unsigned __int8 *)(v21 + (v16 ^ 0xCALL));
  STACK[0x528] = v12;
  v29 = *(unsigned __int8 *)(v21 + (v6 ^ 0xB8));
  LODWORD(v8) = *(unsigned __int8 *)(v21 + (v12 ^ 7));
  v30 = LODWORD(STACK[0x5C0]) ^ (LODWORD(STACK[0x550]) + 52) ^ v22 ^ 0xFFFFFFE6;
  v31 = v30 - ((2 * v30) & 0x9A);
  v32 = (LODWORD(STACK[0x3E8]) + 94) ^ v24 ^ LODWORD(STACK[0x580]);
  LOBYTE(v16) = (v32 ^ 0xC) - ((2 * v32) & 0xA2);
  v33 = (LODWORD(STACK[0x3E0]) + 94) ^ v26 ^ LODWORD(STACK[0x538]);
  LODWORD(STACK[0x568]) = (v33 ^ 0xFFFFFF84) + (~(2 * v33) | 0x2D);
  v34 = LODWORD(STACK[0x558]) ^ (LODWORD(STACK[0x3F0]) + 94) ^ v25 ^ 0x1A;
  LOBYTE(v26) = v34 - ((2 * v34) & 0x4C);
  v35 = (LODWORD(STACK[0x3E4]) - 20) ^ v27 ^ LODWORD(STACK[0x540]);
  LODWORD(STACK[0x580]) = (v35 ^ 8) - ((2 * v35) & 0x22);
  v36 = LODWORD(STACK[0x560]) ^ (LODWORD(STACK[0x3DC]) + 94) ^ v1 ^ 0x1A;
  LODWORD(STACK[0x5B8]) = v36 - ((2 * v36) & 0x72);
  v37 = LODWORD(STACK[0x548]) ^ (LODWORD(STACK[0x3D8]) + 94) ^ v28 ^ 1;
  LODWORD(STACK[0x5C0]) = v37 - ((2 * v37) & 0xFFFFFF92);
  v38 = (LODWORD(STACK[0x3D0]) + 94) ^ v15 ^ LODWORD(STACK[0x570]);
  LODWORD(STACK[0x5B0]) = (v38 ^ 0xFFFFFF94) - ((2 * v38) & 0xFFFFFF96);
  v39 = LODWORD(STACK[0x598]) ^ (v20 + 94) ^ v11 ^ 0xFFFFFFF9;
  LODWORD(STACK[0x5A8]) = v39 - ((2 * v39) & 0xFFFFFFC8);
  v40 = LODWORD(STACK[0x5D0]) ^ ((v12 ^ 0x7C) - ((2 * (v12 ^ 0x7C) + 114) & 0x4A) + 94) ^ v8 ^ 0x34;
  v41 = v40 - ((2 * v40) & 0xC7);
  v42 = LODWORD(STACK[0x590]) ^ (LODWORD(STACK[0x3CC]) + 94) ^ v13 ^ 0xFFFFFFB9;
  v43 = v42 + (~(2 * v42) | 0x11);
  v44 = LODWORD(STACK[0x5A0]) ^ (v14 + 94) ^ v29 ^ 0xFFFFFFD6;
  v45 = v44 + (~(2 * v44) | 0x47);
  v46 = (char *)*(&off_1E8C4D9A0 + (v23 ^ 0x4F4)) - 4;
  v47 = v46[v7 ^ 0x4E ^ (v31 + 77)];
  v48 = -43 * v47 - ((42 * (_BYTE)v47 + 34) & 0x30) + 9;
  v49 = (((v48 >> 3) & 0xA ^ 2) - ((v48 >> 2) & 0x10) + 24) ^ v48;
  v50 = v46[STACK[0x490] ^ 0xB ^ (v16 - 47)];
  v51 = ((-43 * v50) ^ 0xFFFFFF80) - ((10 * (_BYTE)v50 + 2) & 0xE);
  v52 = ((((v51 + 120) >> 3) & 0xA) - (((v51 + 120) >> 2) & 4) - 121) ^ (v51 - 8);
  v53 = v46[STACK[0x4A0] ^ 0x51 ^ (v26 - 90)];
  v54 = v46[STACK[0x4A8] ^ 0xD5 ^ (LODWORD(STACK[0x568]) + 106)];
  v55 = -43 * v53 - ((-30 - 86 * v53) & 0xFFFFFFDF) + 96;
  v56 = (111 - ((v55 >> 3) & 0xA ^ 8)) ^ v55;
  v57 = -43 * v54 - ((-30 - 86 * v54) & 0xFFFFFFEF) - 24;
  v58 = ((~((v57 & 0xF8) >> 3) & 0xA) - ((2 * ~((v57 & 0xF8) >> 3)) & 4) - 9) ^ v57;
  v59 = v46[STACK[0x4B8] ^ 0xE8 ^ (LODWORD(STACK[0x580]) + 17)];
  v60 = -43 * v59 - ((-30 - 86 * v59) & 0xFFFFFF9F) - 64;
  v61 = (((v60 >> 3) & 0xA ^ 8) + ~(2 * ((v60 >> 3) & 0xA ^ 8)) - 48) ^ v60;
  v62 = v46[STACK[0x4C0] ^ 0xA ^ (LODWORD(STACK[0x5B8]) - 71)];
  v63 = -43 * v62 - ((-30 - 86 * v62) & 0xFFFFFFCA);
  v64 = !v18;
  v65 = v41 - 29;
  v66 = v43 - 8;
  v67 = ((v63 + 86) >> 3) & 0xA ^ (v63 + 86);
  v68 = v46[LODWORD(STACK[0x530]) ^ 0xE9 ^ (LODWORD(STACK[0x5C0]) + 73)];
  v69 = -43 * v68 - ((10 * v68 + 2) & 0x12) + 122;
  v70 = (((v69 >> 3) & 0xA) - ((v69 >> 2) & 0x10) - 119) ^ v69;
  v71 = (~(-30 - 86 * v46[STACK[0x518] ^ 0xAE ^ v66]) | 0x45)
      - 43 * v46[STACK[0x518] ^ 0xAE ^ v66]
      + 79;
  v72 = STACK[0x520] ^ (v45 + 93) ^ 0x77;
  v73 = ((~((v71 & 0xF8) >> 3) & 0xA) - ((2 * ~((v71 & 0xF8) >> 3)) & 0x10) + 93) ^ v71;
  v74 = -43 * v46[v72] - ((-30 - 86 * v46[v72]) & 0xFFFFFFC3) + 82;
  v75 = STACK[0x528] ^ v65 ^ 0x77;
  v76 = (v74 >> 3) & 0xA ^ v74;
  v77 = (~(-30 - 86 * v46[v75]) | 0x57) - 43 * v46[v75] + 70;
  v78 = (v77 >> 3) & 0xA ^ v77;
  LODWORD(STACK[0x550]) = v78;
  STACK[0x5A0] = v78 ^ 0xFFFFFFBD;
  LODWORD(STACK[0x580]) = v52;
  STACK[0x598] = v52 ^ 0x5C;
  LODWORD(STACK[0x560]) = v58;
  STACK[0x5D0] = v58 ^ 0xFFFFFFC6;
  LODWORD(STACK[0x568]) = v56;
  STACK[0x5B0] = v61 ^ 0xFFFFFFCF;
  STACK[0x570] = v67 ^ 0xFFFFFFB0;
  LODWORD(STACK[0x5B8]) = v49 ^ 0x4B;
  v79 = *(_QWORD *)(STACK[0x4D0] + 8 * (LODWORD(STACK[0x4C8]) ^ (426 * v64)));
  LODWORD(STACK[0x558]) = v76;
  STACK[0x5C0] = v56 ^ 0x1Bu;
  STACK[0x590] = v73 ^ 0xFFFFFFD3;
  LODWORD(STACK[0x5A8]) = v70 ^ 0x16;
  return ((uint64_t (*)(void))(v79 - 8))();
}

uint64_t sub_1CF33D23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v8;

  v8 = LODWORD(STACK[0x580]);
  STACK[0x540] = a8;
  STACK[0x548] = a6;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x4D0]
                                                                                          + 8
                                                                                          * ((((LODWORD(STACK[0x3AC]) ^ 0x741)
                                                                                             - 844)
                                                                                            * (STACK[0x578] & 1)) ^ LODWORD(STACK[0x3AC])))
                                                                              - ((LODWORD(STACK[0x3AC]) - 527345796) & 0x1F6EA7EF ^ 0x38BLL)))(a1, a2, a3, a4, v8);
}

uint64_t sub_1CF33D29C@<X0>(char a1@<W0>, char a2@<W2>, char a3@<W3>, char a4@<W4>, char a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,char a23,__int16 a24,char a25,int a26,char a27,int a28,char a29,__int16 a30,char a31,__int16 a32,char a33,__int16 a34,char a35,__int16 a36,char a37,__int16 a38,char a39,__int16 a40,char a41,__int16 a42,char a43,__int16 a44,char a45,__int16 a46,char a47)
{
  char v47;
  char v48;
  int v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  uint64_t v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  int v64;
  int v65;
  int v66;
  unint64_t v67;
  unsigned int v68;
  int v69;
  _BOOL4 v70;

  v61 = a25 ^ v52;
  v62 = a37 ^ a5 ^ a3;
  v63 = a29 ^ v54 ^ 0x41;
  v64 = a22 ^ LODWORD(STACK[0x560]) ^ 0xC6;
  v65 = a26 ^ LODWORD(STACK[0x558]) ^ 0xA;
  v66 = a28 ^ LODWORD(STACK[0x550]) ^ 0xBD;
  v67 = STACK[0x448];
  *(_BYTE *)(v67 - 0x138A5B03125511FELL) = a31 ^ v60 ^ 0xCF;
  *(_BYTE *)(v67 - 0x138A5B0312551204) = a45 ^ v51 ^ 0xA5;
  *(_BYTE *)(v67 - 0x138A5B0312551202) = v63;
  *(_BYTE *)(v67 - 0x138A5B03125511FFLL) = v64;
  *(_BYTE *)STACK[0x3B0] = v62;
  *(_BYTE *)(v67 - 0x138A5B0312551201) = a35 ^ a4 ^ 0x5C;
  *(_BYTE *)(v67 - 0x138A5B0312551200) = a27 & 0x7F ^ 0x1B ^ (((((v49 + 80) & 0xEA) - 74) & a27) + v47);
  *(_BYTE *)(v67 - 0x138A5B0312551203) = v61 ^ 0x1A;
  *(_BYTE *)(v67 - 0x138A5B03125511F9) = a39 ^ v56 ^ 0xD3;
  *(_BYTE *)(v67 - 0x138A5B03125511F7) = v66;
  *(_BYTE *)(v67 - 0x138A5B03125511FBLL) = a33 ^ a1 ^ v59;
  *(_BYTE *)(v67 - 0x138A5B03125511FALL) = a47 ^ a2 ^ 0x6D;
  *(_BYTE *)(v67 - 0x138A5B03125511F6) = a41 ^ v57 ^ v53;
  *(_BYTE *)STACK[0x3B8] = a43 ^ v48 ^ 0xB0;
  *(_BYTE *)(v67 - 0x138A5B03125511FCLL) = a23 ^ v50 ^ v55;
  *(_BYTE *)(v67 - 0x138A5B03125511F8) = v65;
  v68 = LODWORD(STACK[0x2FC]) - 424119114;
  v69 = (a14 < 0x31F77973) ^ (v68 < 0x31F77973);
  v70 = v68 < a14;
  if (v69)
    v70 = a14 < 0x31F77973;
  return ((uint64_t (*)(void))(*(_QWORD *)(v58 + 8 * (v49 ^ (1291 * v70))) - 12))();
}

void sub_1CF33D538()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;

  v5 = *(unsigned __int8 *)(v3 - 0x138A5B03125511F3);
  LODWORD(STACK[0x5D8]) = v0 & (2 * v5);
  v6 = *(unsigned __int8 *)(v3 - 0x138A5B03125511F1);
  v7 = *(unsigned __int8 *)(v3 - 0x138A5B03125511F0);
  v8 = *(unsigned __int8 *)STACK[0x3A0];
  v9 = *(unsigned __int8 *)(v3 - 0x138A5B03125511EFLL);
  v10 = *(unsigned __int8 *)(v3 - 0x138A5B03125511EBLL);
  v11 = v4 & (2 * v10);
  v12 = *(unsigned __int8 *)(v3 - 0x138A5B03125511E9);
  v13 = *(unsigned __int8 *)(v3 - 0x138A5B03125511F4);
  LODWORD(STACK[0x5D0]) = (2 * v12) & 0x1A6;
  LODWORD(STACK[0x5C8]) = ~(2 * v13) | 0xFFFFFFB5;
  v14 = *(unsigned __int8 *)(v3 - 0x138A5B03125511EDLL);
  v15 = *(unsigned __int8 *)(v3 - 0x138A5B03125511ECLL);
  LODWORD(STACK[0x5C0]) = (2 * v14) & 0xFFFFFFBA;
  v16 = *(unsigned __int8 *)(v3 - 0x138A5B03125511E8);
  v17 = *(unsigned __int8 *)(v3 - 0x138A5B03125511EELL);
  v18 = *(unsigned __int8 *)(v3 - 0x138A5B03125511F2);
  v19 = *(unsigned __int8 *)(v3 - 0x138A5B03125511E7);
  v20 = v2 - 379;
  v21 = *(unsigned __int8 *)(v3 - 0x138A5B03125511EALL);
  LODWORD(STACK[0x3E8]) = (v20 ^ 0xFFFFFF8E) + v5 - LODWORD(STACK[0x5D8]);
  v22 = v8 + (~(2 * v8) | 0x69);
  v23 = *(unsigned __int8 *)(v3 - 0x138A5B03125511E6);
  STACK[0x300] += 16;
  LODWORD(STACK[0x2FC]) = v1 + 16;
  LODWORD(STACK[0x3E0]) = v18 - ((2 * v18) & 0xFFFFFF83) - 63;
  LODWORD(STACK[0x3DC]) = v6 - ((2 * v6) & 0x1B8) - 36;
  LODWORD(STACK[0x3E4]) = v22 - 52;
  LODWORD(STACK[0x398]) = v7 - ((2 * v7) & 0x36) - 101;
  LODWORD(STACK[0x3D0]) = v9 - ((2 * v9) & 0x18C) + 70;
  LODWORD(STACK[0x3B0]) = v10 - v11 - 117;
  LODWORD(STACK[0x3C0]) = v12 - LODWORD(STACK[0x5D0]) + 83;
  LODWORD(STACK[0x3D8]) = v13 + LODWORD(STACK[0x5C8]) + 38;
  LODWORD(STACK[0x3AC]) = v14 - LODWORD(STACK[0x5C0]) + 93;
  LODWORD(STACK[0x3CC]) = v15 - ((2 * v15) & 0x2C) - 106;
  LODWORD(STACK[0x390]) = v16 + (~(2 * v16) | 0x39) - 28;
  LODWORD(STACK[0x3B8]) = v17 + (~(2 * v17) | 0x61) + 80;
  LODWORD(STACK[0x3A0]) = v19 + (~(2 * v19) | 0x39) + 100;
  LODWORD(STACK[0x394]) = v21 - ((2 * v21) & 0x1DA) - 19;
  LODWORD(STACK[0x38C]) = v23 + (~(2 * v23) | 0xB) - 5;
  LODWORD(STACK[0x48C]) = STACK[0x420];
  LODWORD(STACK[0x488]) = STACK[0x440];
  LODWORD(STACK[0x480]) = STACK[0x410];
  LODWORD(STACK[0x484]) = STACK[0x408];
  LODWORD(STACK[0x47C]) = STACK[0x40C];
  LODWORD(STACK[0x478]) = STACK[0x414];
  LODWORD(STACK[0x474]) = STACK[0x43C];
  LODWORD(STACK[0x470]) = STACK[0x418];
  LODWORD(STACK[0x468]) = STACK[0x430];
  LODWORD(STACK[0x46C]) = STACK[0x428];
  LODWORD(STACK[0x464]) = STACK[0x434];
  LODWORD(STACK[0x460]) = STACK[0x41C];
  LODWORD(STACK[0x458]) = STACK[0x42C];
  LODWORD(STACK[0x45C]) = STACK[0x438];
  LODWORD(STACK[0x454]) = STACK[0x444];
  LODWORD(STACK[0x450]) = STACK[0x424];
  JUMPOUT(0x1CF33DDDCLL);
}

void sub_1CF33D96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39,int a40,int a41,int a42,int a43,int a44,int a45,int a46,unsigned int a47,int a48,int a49,int a50,int a51,int a52,int a53)
{
  __int16 v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  unsigned int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;

  v54 = *(unsigned __int8 *)(STACK[0x448] - 0x138A5B0312551204);
  v55 = *(unsigned __int8 *)(STACK[0x448] - 0x138A5B03125511FELL)
      - ((*(unsigned __int8 *)(STACK[0x448] - 0x138A5B03125511FELL) << ((a8 - 78) ^ 0x15)) & 0xFFFFFF9E);
  v56 = *(unsigned __int8 *)(STACK[0x448] - 0x138A5B0312551202);
  v57 = *(unsigned __int8 *)(STACK[0x448] - 0x138A5B0312551203)
      - ((2 * *(unsigned __int8 *)(STACK[0x448] - 0x138A5B0312551203)) & 0x34);
  v58 = *(unsigned __int8 *)(STACK[0x448] - 0x138A5B03125511FFLL)
      - ((2 * *(unsigned __int8 *)(STACK[0x448] - 0x138A5B03125511FFLL)) & 0x18C);
  v59 = *(unsigned __int8 *)(STACK[0x448] - 0x138A5B0312551201);
  v60 = *(unsigned __int8 *)(STACK[0x448] - 0x138A5B0312551200)
      + (~(2 * *(unsigned __int8 *)(STACK[0x448] - 0x138A5B0312551200)) | 0xFFFFFFC9);
  v61 = *(unsigned __int8 *)STACK[0x3B8];
  v62 = *(unsigned __int8 *)(STACK[0x448] - 0x138A5B03125511FCLL)
      - ((2 * *(unsigned __int8 *)(STACK[0x448] - 0x138A5B03125511FCLL)) & 0x2C);
  v63 = *(unsigned __int8 *)(STACK[0x448] - 0x138A5B03125511F8);
  v64 = *(unsigned __int8 *)(STACK[0x448] - 0x138A5B03125511FBLL)
      - (unsigned __int16)(v53 & (2 * *(unsigned __int8 *)(STACK[0x448] - 0x138A5B03125511FBLL)));
  v65 = *(unsigned __int8 *)(STACK[0x448] - 0x138A5B03125511FALL);
  v66 = *(unsigned __int8 *)(STACK[0x448] - 0x138A5B03125511F9);
  v67 = *(unsigned __int8 *)(STACK[0x448] - 0x138A5B03125511F7);
  v68 = *(unsigned __int8 *)(STACK[0x448] - 0x138A5B03125511F6);
  LODWORD(STACK[0x3E4]) = *(unsigned __int8 *)STACK[0x3B0] - ((2 * *(unsigned __int8 *)STACK[0x3B0]) & 0xFF96) - 53;
  LODWORD(STACK[0x3D8]) = v54 - ((2 * v54) & 0x4A) + 37;
  LODWORD(STACK[0x3B8]) = v55 + 79;
  LODWORD(STACK[0x3E8]) = v57 - 102;
  LODWORD(STACK[0x3E0]) = v56 - ((2 * v56) & 0xFFFFFF83) - 63;
  LODWORD(STACK[0x3D0]) = v58 + 70;
  LODWORD(STACK[0x398]) = v60 - 100;
  LODWORD(STACK[0x3CC]) = v62 - 106;
  LODWORD(STACK[0x3DC]) = v59 - ((2 * v59) & 0x1B8) - 36;
  LODWORD(STACK[0x3AC]) = v61 - ((2 * v61) & 0xFFFFFFBA) + 93;
  LODWORD(STACK[0x390]) = v63 - ((2 * v63) & 0xFFFFFFC7) - 29;
  LODWORD(STACK[0x3A0]) = v67 - ((2 * v67) & 0xFFFFFFC7) + 99;
  LODWORD(STACK[0x3B0]) = v64 - 117;
  LODWORD(STACK[0x394]) = v65 + (~(2 * v65) | 0x25) - 18;
  LODWORD(STACK[0x3C0]) = v66 - ((2 * v66) & 0x1A6) + 83;
  LODWORD(STACK[0x38C]) = v68 - ((2 * v68) & 0x1F4) - 6;
  LODWORD(STACK[0x2B8]) = a49;
  LODWORD(STACK[0x2EC]) = a38;
  LODWORD(STACK[0x2C0]) = a51;
  LODWORD(STACK[0x2E8]) = a45;
  LODWORD(STACK[0x2B4]) = a41;
  LODWORD(STACK[0x2BC]) = a50;
  LODWORD(STACK[0x2E4]) = a48;
  STACK[0x2F0] = a47;
  LODWORD(STACK[0x2C4]) = a44;
  LODWORD(STACK[0x2CC]) = a40;
  LODWORD(STACK[0x2C8]) = a53;
  LODWORD(STACK[0x2D4]) = a39;
  LODWORD(STACK[0x2D8]) = a52;
  LODWORD(STACK[0x2E0]) = a46;
  LODWORD(STACK[0x2DC]) = a42;
  LODWORD(STACK[0x2D0]) = a43;
  JUMPOUT(0x1CF33DDD8);
}

void sub_1CF33DE74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;

  v38 = *(unsigned __int8 *)(a37 - 0xFC58F007312F072);
  v39 = (STACK[0x5C8] - 1657878512) & (2 * v38);
  v40 = *(unsigned __int8 *)(a37 - 0xFC58F007312F076);
  v41 = *(unsigned __int8 *)(a37 - 0xFC58F007312F06ELL);
  v42 = *(unsigned __int8 *)(a37 - 0xFC58F007312F073);
  v43 = *(unsigned __int8 *)(a37 - 0xFC58F007312F074);
  v44 = *(unsigned __int8 *)(a37 - 0xFC58F007312F077);
  LODWORD(STACK[0x5B8]) = *(unsigned __int8 *)STACK[0x5C0] - ((2 * *(unsigned __int8 *)STACK[0x5C0]) & 0xFF96) - 53;
  STACK[0x5D0] = (v38 - v39 + 70);
  STACK[0x548] = v40 - ((2 * v40) & 0x34u) - 102;
  STACK[0x540] = *(unsigned __int8 *)(a37 - 0xFC58F007312F075)
               - ((2 * *(unsigned __int8 *)(a37 - 0xFC58F007312F075)) & 0xFF83u)
               - 63;
  STACK[0x568] = v41 - ((2 * v41) & 0x16u) - 117;
  STACK[0x5C0] = v42 - (v37 & (2 * v42)) - 101;
  STACK[0x598] = v43 - ((2 * v43) & 0xFFFFFFB8) - 36;
  STACK[0x538] = v44 - ((2 * v44) & 0x4Au) + 37;
  STACK[0x5C8] = *(unsigned __int8 *)(a37 - 0xFC58F007312F06BLL)
               - ((2 * *(unsigned __int8 *)(a37 - 0xFC58F007312F06BLL)) & 0xFFC7u)
               - 29;
  STACK[0x5A0] = *(unsigned __int8 *)(a37 - 0xFC58F007312F06ALL)
               - ((2 * *(unsigned __int8 *)(a37 - 0xFC58F007312F06ALL)) & 0xFFC7u)
               + 99;
  STACK[0x590] = *(unsigned __int8 *)(a37 - 0xFC58F007312F06CLL)
               - ((2 * *(unsigned __int8 *)(a37 - 0xFC58F007312F06CLL)) & 0xFFA6u)
               + 83;
  STACK[0x570] = *(unsigned __int8 *)STACK[0x5B0] - ((2 * *(unsigned __int8 *)STACK[0x5B0]) & 0xFFBAu) + 93;
  STACK[0x5D8] = *(unsigned __int8 *)(a37 - 0xFC58F007312F069)
               + (~(2 * *(unsigned __int8 *)(a37 - 0xFC58F007312F069)) | 0xBu)
               - 5;
  STACK[0x270] = STACK[0x4C8];
  STACK[0x278] = STACK[0x4C0];
  JUMPOUT(0x1CF32F768);
}

uint64_t sub_1CF33E124(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) - 301540361 * ((~(_DWORD)a1 & 0x49C9CFEB | a1 & 0xB6363014) ^ 0x8D90C899);
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1E8C4D9A0 + (v1 ^ 0x1BC))
                                        + 8 * ((1451 * (*(_QWORD *)(a1 + 8) != 0)) ^ v1)
                                        - 12)
                            - 12))();
}

_DWORD *sub_1CF33E1A8@<X0>(_DWORD *result@<X0>, int a2@<W8>)
{
  uint64_t v2;

  *(_DWORD *)(v2 + 4) = result[4] - a2 - 1637468456;
  *result = 2001147358;
  return result;
}

_DWORD *sub_1CF33E1D0(_DWORD *result)
{
  *result = -346732044;
  return result;
}

uint64_t sub_1CF33E1E0(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)a1 - 1275073529 * ((((2 * a1) | 0xDB2AE4E4) - a1 - 1838510706) ^ 0x81132F09);
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1E8C4D9A0 + v1 - 1100)
                                        + 8
                                        * ((((v1 - 1853661066) & 0x6E7C9FF9 ^ 0x450) * (*(_QWORD *)(a1 + 16) == 0)) ^ v1)
                                        - 12)
                            - 12))();
}

uint64_t sub_1CF33E288(uint64_t result)
{
  *(_DWORD *)(result + 8) = 1350066117;
  return result;
}

uint64_t sub_1CF33E298@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;

  *(_DWORD *)(a2 + 20) = (((v3 - 1195883979) & 0x4747BD5A) - 105972605) ^ (*(_DWORD *)(result + 4) - v2);
  *(_DWORD *)(result + 8) = 693475099;
  return result;
}

void sub_1CF33E2DC(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v3;

  if (*(_QWORD *)(a1 + 16))
    v2 = *(_QWORD *)a1 == 0x703BDE3807C31C91;
  else
    v2 = 1;
  v3 = !v2;
  v1 = *(_DWORD *)(a1 + 24) ^ (1894094617 * ((499646398 - (a1 | 0x1DC7FFBE) + (a1 | 0xE2380041)) ^ 0xFF37CED1));
  __asm { BR              X8 }
}

#error "1CF33EA08: call analysis failed (funcsize=266)"

uint64_t sub_1CF33EA0C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((((v1 + 94) | 0x61) - 249) ^ 0x1F2) * (a1 != 0x186CD3930903FB5ELL)) ^ v1))
                            - 4))();
}

uint64_t sub_1CF33EA58@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _BOOL4 v6;

  v4 = *(_QWORD *)(STACK[0x2A8] - 0x29E41201BECB3986);
  v3[70] = *(_QWORD *)(v2 + 8 * v1);
  v3[48] = a1;
  LODWORD(STACK[0x924]) = -1129976585;
  v3[17] = 0x23120F4208F8DDDLL;
  v3[18] = 0x6F654FD9E3543B12;
  v6 = v4 == 0x373C0AAD4CE136CBLL || a1 == 0x186CD3930903FB5ELL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v6 * ((v1 ^ 0x119) + (v1 ^ 0x52B) - 1218 - 467)) ^ v1 ^ 0x52B))
                            - 4))();
}

uint64_t sub_1CF33EA84()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1CF33EA90()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((LODWORD(STACK[0x2A4]) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1CF33EAAC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  unint64_t v5;

  v2 = STACK[0x2A0];
  v3 = LODWORD(STACK[0x2A0]) - 161;
  v4 = (LODWORD(STACK[0x2A0]) - 1247);
  *(_DWORD *)(v1 - 224) = (LODWORD(STACK[0x2A0]) - 798) ^ (1966835309
                                                         * ((~((v1 - 232) ^ 0xBADA9CD0 | 0x7FF94509)
                                                           + (((v1 - 232) ^ 0xBADA9CD0) & 0x7FF94509)) ^ 0x89B92546));
  sub_1CF2B4E1C(v1 - 232);
  v5 = STACK[0xC88];
  STACK[0x938] = STACK[0xC88];
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (((v5 == 0) * (v3 ^ 0x5BB)) ^ v2)) - v4 + 351))();
}

uint64_t sub_1CF33EB54()
{
  unsigned int v0;
  uint64_t v1;
  _QWORD *v2;
  _BOOL4 v3;

  v3 = STACK[0x298] != 0x7D506DEF2A9E5749;
  v2[31] = 0;
  LODWORD(STACK[0xA9C]) = 1356535942;
  v2[55] = 0;
  v2[51] = 0x29E41201BECB398ELL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(((v0 - 736) * v3) ^ v0)) - (v0 ^ 0x5A5)))();
}

uint64_t sub_1CF33EBCC()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  _BOOL4 v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  _BYTE *v7;

  v3 = STACK[0x290] == 0x7599EC5F78B07AD9;
  v4 = v2[1];
  v5 = (_BYTE *)(STACK[0x288] + v4 + 330);
  v2[72] = v5;
  v6 = v5 + 16;
  v2[68] = v5 + 16;
  v2[56] = v5 + 48;
  v2[1] = ((((v0 - 616) | 0x601) - 1466) & 0xFFFFFFFE) + v4;
  sub_1CF36FDF0(v5, 0, 0x10uLL);
  v7 = sub_1CF36FDF0(v6, 0, 0x20uLL);
  STACK[0xA18] = 0x373C0AAD4CE136CBLL;
  STACK[0x7C8] = 0;
  LODWORD(STACK[0x9A4]) = -1129976585;
  STACK[0xA28] = 0;
  LODWORD(STACK[0x86C]) = 1356535942;
  return ((uint64_t (*)(_BYTE *))(*(_QWORD *)(v1 + 8 * (v0 | v3 | (8 * v3))) - 8))(v7);
}

uint64_t sub_1CF33EC94()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  STACK[0x7A0] = v3;
  v5 = v3 + (v0 ^ 0x416u) - 122 - 499;
  STACK[0x790] = v5;
  *(_QWORD *)(v4 + 8) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((246 * (v1 == 1393700946)) ^ v0)) - 4))();
}

uint64_t sub_1CF33ECA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *(_QWORD *)STACK[0x230];
  *(_QWORD *)(v6 + 488) = 0;
  LODWORD(STACK[0x7C4]) = v3;
  STACK[0x4E0] = (unint64_t)&STACK[0xA38];
  STACK[0x4D0] = (unint64_t)&STACK[0x7C4];
  return (*(uint64_t (**)(void))(v5 + 8 * (((v7 != a3) * ((v4 ^ 0x13A) + 852)) ^ v4 ^ 0x11C)))();
}

uint64_t sub_1CF33ECE4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 - 296) ^ (403 * v0))) - (((v1 - 299) | 3u) ^ 0x4BLL)))();
}

uint64_t sub_1CF33ED18()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v3 = (v0 + 1001);
  v4 = v2[61];
  v5 = STACK[0x7C4];
  v6 = STACK[0x2F8];
  v2[32] = v3 + *(_QWORD *)(v1 + 8 * v0) - 1076;
  v2[27] = v6;
  LODWORD(STACK[0x944]) = v5;
  v2[20] = v4;
  v2[41] = 0x6C7FF723B0D6051BLL;
  LODWORD(STACK[0x7E0]) = -1129976585;
  v2[54] = 0x10426474F9598483;
  STACK[0x830] = 0;
  v7 = ((uint64_t (*)(uint64_t))STACK[0x318])(16);
  STACK[0x988] = v7 + 0x373C0AAD4CE136CBLL;
  return (*(uint64_t (**)(void))(v1
                              + 8 * (int)((103 * (((((v3 ^ 0x547) + 341) ^ (v7 == 0)) & 1) == 0)) ^ v3)))();
}

uint64_t sub_1CF33EDD8(_QWORD *a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  _BOOL4 v6;

  v4 = 38 * (v2 ^ 0x2D7);
  *a1 = 0x23120F4208F8DDDLL;
  a1[1] = 0x23120F4208F8DDDLL;
  v6 = (unint64_t)((v4 + 48) | 0x20u) + 1440340791 < 0x55D9DEF2
    && (unint64_t)(v1 - 1356535942) + 1440341746 > 0x55D9DEF2;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1341 * v6) ^ v4)))();
}

uint64_t sub_1CF33EE14()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1CF33EE28()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v1 + 8 * ((891 * (*(_QWORD *)(v2 + 488) != 0)) ^ (v0 + 28))))();
}

uint64_t sub_1CF33EE4C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = sub_1CF370D34();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8 * ((2033 * (v0 == ((v2 + 755) ^ (v1 + 982)))) ^ (v2 - 10)))
                                          - 12))(v4);
}

uint64_t sub_1CF33EE9C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2033 * (v0 == ((v2 + 755) ^ (v1 + 982)))) ^ (v2 - 10))) - 12))();
}

uint64_t sub_1CF33EED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((((*(_QWORD *)(v5 + 456) == a3) ^ (v3 + 31)) & 1)
                                          * (((v3 - 854) | 0x63) - 141)) ^ v3))
                            - 8))();
}

uint64_t sub_1CF33EF1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 & 0x21BE0E7;
  v7 = ((v3 & 0x21BE0E7) - 225147446) & 0x56B7BDC;
  STACK[0x840] = (v7 ^ 0xFFFFFFFFFFFFFDF8) + *(_QWORD *)(v4 + 8 * v6);
  v5[45] = a3;
  LODWORD(STACK[0xB68]) = -975974931;
  LOWORD(STACK[0xB6E]) = -31135;
  LODWORD(STACK[0xB70]) = -1129976589;
  LODWORD(STACK[0xB74]) = -1129976586;
  v5[101] = 0x10426474F9598483;
  v5[102] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v4
                                                               + 8
                                                               * (int)(((((v7 + 1) ^ (a3 == a2)) & 1)
                                                                      * ((v7 ^ 0x4B) - 556)) ^ v7))
                                                   - 12))(a1, 3164990707);
}

uint64_t sub_1CF345CD8(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0x740]) = v2;
  LODWORD(STACK[0x7A0]) = a2;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x318])(32);
  STACK[0x7F8] = v5 + 0x23120F4208F8DDDLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((141 * (v5 != 0)) ^ v3)) - ((v3 + 550988680) & 0xDF2896FC) + 1220))();
}

uint64_t sub_1CF345D74(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = 0x23120F4208F8DDDLL;
  *(_QWORD *)(a1 + 8) = 0x23120F4208F8DDDLL;
  v5 = LODWORD(STACK[0x7A0]) ^ 0xBCA5ECF7;
  *(_QWORD *)(v3 + 824) = v5;
  LODWORD(v5) = ((v5 + 10) ^ 0xF9FCD794 ^ (3 * (v1 ^ 0x4B5)))
              + 1609526196
              + ((((_DWORD)v5 + 10) << (((v1 ^ 0xB5) - 9) ^ 0x71)) & 0xF3F9ADFE);
  *(_DWORD *)(a1 + 16) = v5;
  v6 = ((uint64_t (*)(_QWORD))STACK[0x318])((v5 - 1508655795));
  *(_QWORD *)(a1 + 24) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((19 * (v6 != 0)) ^ v1)) - 12))();
}

uint64_t sub_1CF345E40()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v4 = LOWORD(STACK[0xB2E]);
  LODWORD(STACK[0x790]) = STACK[0xB30];
  LODWORD(STACK[0x710]) = STACK[0xB34];
  v5 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * v3) - 12);
  LODWORD(STACK[0x730]) = v4;
  v6 = LODWORD(STACK[0x78C]);
  v7 = *(_BYTE **)(v0 + 24);
  v8 = __ROR8__(v7, 8);
  v9 = (0x150C087CC469144DLL - (v8 & 0xF8FFFFFFFFFFFFFFLL)) & 0x19A889ECFF1A1ED8 | ((v8 & 0xF8FFFFFFFFFFFFFFLL)
                                                                                    - 0x550C087CC469144ELL) & 0xE057761300E5E127;
  v10 = __ROR8__(v9 ^ 0xA2238B49AE9B5874, 8);
  v9 ^= 0xF5BC3750722C05E1;
  v11 = (v10 + v9) ^ 0x50D4D0E13CBD7177;
  v12 = v11 ^ __ROR8__(v9, 61);
  v13 = __ROR8__(v11, 8) + v12;
  v14 = v13 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v12, 61);
  *((_QWORD *)&v15 + 1) = v13;
  *(_QWORD *)&v15 = v13 ^ 0xE5D7DAAEED85A300;
  v16 = __ROR8__(((v15 >> 8) + v14) ^ 0x8E85997BF8A3092DLL, 8);
  v17 = ((v15 >> 8) + v14) ^ 0x8E85997BF8A3092DLL ^ __ROR8__(v14, 61);
  v18 = (v16 + v17) ^ 0xCD091F17C02FDE51;
  v19 = v18 ^ __ROR8__(v17, 61);
  v20 = (__ROR8__(v18, 8) + v19) ^ 0x628ABC52894BE762;
  v21 = v20 ^ __ROR8__(v19, 61);
  *(_QWORD *)&v15 = __ROR8__(v20, 8);
  *v7 = (((__ROR8__((((2 * (v15 + v21)) & 0xFCA17D98F44813EALL) - (v15 + v21) - 0x7E50BECC7A2409F6) ^ 0xDB6FDD30BA50D16BLL, 8)+ ((((2 * ((_QWORD)v15 + v21)) & 0xFCA17D98F44813EALL) - ((_QWORD)v15 + v21) - 0x7E50BECC7A2409F6) ^ 0xDB6FDD30BA50D16BLL ^ __ROR8__(v21, 61))) ^ 0x1B0BD1982B59C071) >> (8 * (v7 & 7u))) ^ HIBYTE(v1) ^ 0xBC;
  v22 = (__ROR8__(v7 + 1, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL;
  v23 = v22 ^ 0xB98B02A5518146ACLL;
  v22 ^= 0xEE14BEBC8D361B39;
  v24 = (__ROR8__(v23, 8) + v22) ^ 0x50D4D0E13CBD7177;
  v25 = v24 ^ __ROR8__(v22, 61);
  *(_QWORD *)&v15 = __ROR8__(v24, 8);
  v26 = __ROR8__((((2 * (v15 + v25)) & 0xA793A7F6AC829AE6) - (v15 + v25) - 0x53C9D3FB56414D74) ^ 0x49E1F6AA443B118CLL, 8);
  v27 = (((2 * (v15 + v25)) & 0xA793A7F6AC829AE6) - (v15 + v25) - 0x53C9D3FB56414D74) ^ 0x49E1F6AA443B118CLL ^ __ROR8__(v25, 61);
  v28 = (v26 + v27) ^ 0x8E85997BF8A3092DLL;
  v29 = v28 ^ __ROR8__(v27, 61);
  *(_QWORD *)&v15 = __ROR8__(v28, 8);
  v30 = (((2 * (v15 + v29)) & 0xF0BAF55B447DEC8ELL) - (v15 + v29) + 0x7A285525DC109B8) ^ 0xCAAB9A459DEED7E9;
  v31 = v30 ^ __ROR8__(v29, 61);
  *(_QWORD *)&v15 = __ROR8__(v30, 8);
  v32 = (-2 - ((~(v15 + v31) | 0x1FF46385B66E09DELL) + ((v15 + v31) | 0xE00B9C7A4991F621))) ^ 0x7D7EDFD73F25EEBCLL;
  v33 = v32 ^ __ROR8__(v31, 61);
  *(_QWORD *)&v15 = __ROR8__(v32, 8);
  v34 = (0xA4E31C196FB07E65 - ((v15 + v33) | 0xA4E31C196FB07E65) + ((v15 + v33) | 0x5B1CE3E6904F819ALL)) ^ 0x1DC7FE5AFC4A6FBLL;
  v35 = v34 ^ __ROR8__(v33, 61);
  *(_QWORD *)&v15 = __ROR8__(v34, 8);
  v7[1] = (((-2 - ((~((_QWORD)v15 + v35) | 0x75B531B3FC4CDC6BLL) + (((_QWORD)v15 + v35) | 0x8A4ACE4C03B32394))) ^ 0x6EBEE02BD7151C1ALL) >> (8 * (((_BYTE)v7 + 1) & 7u))) ^ BYTE2(v1) ^ 0xA5;
  v36 = (__ROR8__(v7 + 2, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL;
  v37 = v36 ^ 0xB98B02A5518146ACLL;
  v36 ^= 0xEE14BEBC8D361B39;
  *(_QWORD *)&v15 = __ROR8__(v37, 8);
  v38 = __ROR8__((((2 * (v15 + v36)) & 0x9D263FB38571CE96) - (v15 + v36) + 0x316CE0263D4718B4) ^ 0x61B830C701FA69C3, 8);
  v39 = (((2 * (v15 + v36)) & 0x9D263FB38571CE96) - (v15 + v36) + 0x316CE0263D4718B4) ^ 0x61B830C701FA69C3 ^ __ROR8__(v36, 61);
  v40 = v38 + v39;
  v41 = (v38 + v39) ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v39, 61);
  *((_QWORD *)&v15 + 1) = v40;
  *(_QWORD *)&v15 = v40 ^ 0xE5D7DAAEED85A300;
  v42 = (0x8EEAB8D098054CA2 - (((v15 >> 8) + v41) | 0x8EEAB8D098054CA2) + (((v15 >> 8) + v41) | 0x7115472F67FAB35DLL)) ^ 0xFF90DE549F59BA70;
  v43 = v42 ^ __ROR8__(v41, 61);
  *(_QWORD *)&v15 = __ROR8__(v42, 8);
  v44 = (-2 - ((~(v15 + v43) | 0x978199C1D991797DLL) + ((v15 + v43) | 0x687E663E266E8682))) ^ 0x5A8886D619BEA72CLL;
  v45 = v44 ^ __ROR8__(v43, 61);
  *(_QWORD *)&v15 = __ROR8__(v44, 8);
  v46 = (((2 * (v15 + v45)) & 0x9D3B31D97DA9F9B8) - (v15 + v45) - 0x4E9D98ECBED4FCDDLL) ^ 0xD3E8DB41C860E441;
  v47 = v46 ^ __ROR8__(v45, 61);
  v48 = (__ROR8__(v46, 8) + v47) ^ 0x5AC09C033F8B2761;
  v7[2] = (((__ROR8__(v48, 8) + (v48 ^ __ROR8__(v47, 61))) ^ 0x1B0BD1982B59C071uLL) >> (8 * (((_BYTE)v7 + 2) & 7u))) ^ BYTE1(v1) ^ 0xEC;
  *(_QWORD *)&v15 = __ROR8__(v7 + 3, 8);
  v49 = ((2 * ((v15 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0x20EB39D37CA90794)
      - ((v15 & 0xF8FFFFFFFFFFFFFFLL)
       - 0x550C087CC469144ELL)
      - 0x10759CE9BE5483CALL;
  v50 = v49 ^ 0xA9FE9E4CEFD5C566;
  v49 ^= 0xFE612255336298F3;
  *(_QWORD *)&v15 = __ROR8__(v50, 8);
  v51 = (-2 - ((~(v15 + v49) | 0x3D54A62DE74C24CLL) + ((v15 + v49) | 0xFC2AB59D218B3DB3))) ^ 0x53019A83E2C9B33BLL;
  v52 = v51 ^ __ROR8__(v49, 61);
  *(_QWORD *)&v15 = __ROR8__(v51, 8);
  v53 = (-2 - ((~(v15 + v52) | 0x1730E72B835C4191) + ((v15 + v52) | 0xE8CF18D47CA3BE6ELL))) ^ 0xF2E73D856ED9E291;
  v54 = v53 ^ __ROR8__(v52, 61);
  *(_QWORD *)&v15 = __ROR8__(v53, 8);
  v55 = (v15 + v54 - ((2 * (v15 + v54)) & 0x9B516F8D43D1232ELL) - 0x325748395E176E69) ^ 0x432D2EBD594B98BALL;
  v56 = v55 ^ __ROR8__(v54, 61);
  v57 = (__ROR8__(v55, 8) + v56) ^ 0xCD091F17C02FDE51;
  v58 = v57 ^ __ROR8__(v56, 61);
  *(_QWORD *)&v15 = __ROR8__(v57, 8);
  v59 = (((2 * (v15 + v58)) | 0x70B9105F53F81A68) - (v15 + v58) + 0x47A377D05603F2CCLL) ^ 0xDAD6347D20B7EA56;
  v60 = v59 ^ __ROR8__(v58, 61);
  v61 = (__ROR8__(v59, 8) + v60) ^ 0x5AC09C033F8B2761;
  v62 = v61 ^ __ROR8__(v60, 61);
  *(_QWORD *)&v15 = __ROR8__(v61, 8);
  v7[3] = v1 ^ ((((_QWORD)v15 + v62 - ((2 * ((_QWORD)v15 + v62)) & 0xCDE279B6265D5694) - 0x190EC324ECD154B6) ^ 0xFDFAED4338776B3BLL) >> (8 * (((_BYTE)v7 + 3) & 7u))) ^ 0xF7;
  return v5(v6);
}

uint64_t sub_1CF346678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v13 = (uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (v11 - 136)) - 4);
  v14 = *(_QWORD *)(STACK[0x7F8] - 0x23120F4208F8DC5);
  v15 = __ROR8__(v14 + 4, 8);
  v16 = ((2 * (v15 & 0xF8FFFFFFFFFFFFFFLL) + 0x55E7EF06772DD764) & 0xD17A6150FAA5B8D2)
      - (v15 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x17B1282BB8E9C81CLL;
  v17 = v16 ^ 0x2AC9CDF2D32C653ALL;
  v16 ^= 0x7D5671EB0F9B38AFuLL;
  v18 = __ROR8__(v17, 8);
  v19 = __ROR8__((0xEA5C9FBCC4FD8D11 - ((v18 + v16) | 0xEA5C9FBCC4FD8D11) + ((v18 + v16) | 0x15A360433B0272EELL)) ^ 0x4577B0A207BF0399, 8);
  v20 = (0xEA5C9FBCC4FD8D11 - ((v18 + v16) | 0xEA5C9FBCC4FD8D11) + ((v18 + v16) | 0x15A360433B0272EELL)) ^ 0x4577B0A207BF0399 ^ __ROR8__(v16, 61);
  v21 = v19 + v20;
  v22 = (v19 + v20) ^ v9 ^ __ROR8__(v20, 61);
  *((_QWORD *)&v23 + 1) = v21;
  *(_QWORD *)&v23 = v21 ^ v9;
  v24 = ((v23 >> 8) + v22) ^ a7;
  v25 = v24 ^ __ROR8__(v22, 61);
  *(_QWORD *)&v23 = __ROR8__(v24, 8);
  v26 = __ROR8__((((2 * (v23 + v25)) & 0xBEA5F7515F2482F2) - (v23 + v25) - 0x5F52FBA8AF92417ALL) ^ 0x6DA41B40904260D7, 8);
  v27 = (((2 * (v23 + v25)) & 0xBEA5F7515F2482F2) - (v23 + v25) - 0x5F52FBA8AF92417ALL) ^ 0x6DA41B40904260D7 ^ __ROR8__(v25, 61);
  v28 = (v26 + v27) ^ 0x628ABC52894BE762;
  v29 = v28 ^ __ROR8__(v27, 61);
  *(_QWORD *)&v23 = __ROR8__(v28, 8);
  v30 = (((2 * (v23 + v29)) & 0x62CE37D9528FDA6ELL) - (v23 + v29) - 0x31671BECA947ED38) ^ 0x94587810693335A9;
  v31 = v30 ^ __ROR8__(v29, 61);
  *(_QWORD *)&v23 = __ROR8__(v30, 8);
  *(_BYTE *)(v14 + 4) = HIBYTE(v8) ^ 0xBD ^ (((((2 * ((_QWORD)v23 + v31)) & 0x58C0DF2CE6674DD2)
                                             - ((_QWORD)v23
                                              + v31)
                                             + 0x539F90698CCC5916) ^ 0x489441F1A7959967) >> (8 * ((v14 + 4) & 7)));
  *(_QWORD *)&v23 = __ROR8__(v14 + 5, 8);
  v32 = (0x550C087CC469144DLL - (v23 & 0xF8FFFFFFFFFFFFFFLL)) & 0xD9C4CD82C8A7886DLL | ((v23 & 0xF8FFFFFFFFFFFFFFLL)
                                                                                      + 0x2AF3F7833B96EBB2) & 0x203B327D37587792;
  v33 = v32 ^ 0x624FCF279926CEC1;
  v32 ^= 0x35D0733E45919354uLL;
  *(_QWORD *)&v23 = __ROR8__(v33, 8);
  v34 = (0x714EDB6BFC016577 - ((v23 + v32) | 0x714EDB6BFC016577) + ((v23 + v32) | 0x8EB1249403FE9A88)) ^ 0xDE65F4753F43EBFFLL;
  v35 = v34 ^ __ROR8__(v32, 61);
  *(_QWORD *)&v23 = __ROR8__(v34, 8);
  v36 = (0xA9C89FF8F7166594 - ((v23 + v35) | 0xA9C89FF8F7166594) + ((v23 + v35) | 0x5637600708E99A6BLL)) ^ 0xB3E0BAA9E56C396BLL;
  v37 = v36 ^ __ROR8__(v35, 61);
  *(_QWORD *)&v23 = __ROR8__(v36, 8);
  v38 = (v10 - ((~(v23 + v37) | 0x70EDA6000D5D3F7ALL) + ((v23 + v37) | 0x8F1259FFF2A2C085))) ^ 0xFE683F7BF5FE3657;
  v39 = v38 ^ __ROR8__(v37, 61);
  v40 = (__ROR8__(v38, 8) + v39) ^ a8;
  v41 = v40 ^ __ROR8__(v39, 61);
  *(_QWORD *)&v23 = __ROR8__(v40, 8);
  v42 = __ROR8__((v10 - ((~(v23 + v41) | 0x9885A61A4D26BB90) + ((v23 + v41) | 0x677A59E5B2D9446FLL))) ^ 0xFA0F1A48C46D5CF2, 8);
  v43 = (v10 - ((~(v23 + v41) | 0x9885A61A4D26BB90) + ((v23 + v41) | 0x677A59E5B2D9446FLL))) ^ 0xFA0F1A48C46D5CF2 ^ __ROR8__(v41, 61);
  v44 = (v42 + v43) ^ 0x5AC09C033F8B2761;
  v45 = v44 ^ __ROR8__(v43, 61);
  *(_QWORD *)&v23 = __ROR8__(v44, 8);
  *(_BYTE *)(v14 + 5) = v8 ^ (((v10
                              - ((~((_QWORD)v23 + v45) | 0xC973D85EECBA4145)
                               + (((_QWORD)v23 + v45) | 0x368C27A11345BEBALL))) ^ 0xD27809C6C7E38134) >> (8 * ((v14 + 5) & 7))) ^ 2;
  return v13();
}

void sub_1CF346C28()
{
  JUMPOUT(0x1CF345F58);
}

uint64_t sub_1CF346C88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int16 a3@<W8>)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  unsigned int v8;

  switch(a3)
  {
    case 0x8661u:
      return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((((v4 - 111) ^ 0x2B6) * (v6 == v3)) ^ (v4 + 865))) - 12))();
    case 0x41CDu:
      v8 = LODWORD(STACK[0xB88]) + ((v4 + 500) ^ 0x51955561) - ((2 * LODWORD(STACK[0xB88])) & 0xA32AAC02) - 61;
      return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                            + 8
                                            * ((1624
                                              * (((2 * v8) & 0xE4FFF4F6 ^ 0xA02AA402) + (v8 ^ 0x23EAAC7A) - 574620161 != 1346369658)) ^ (v4 - 111)))
                                - 8))();
    case 0x9593u:
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5
                                                                            + 8
                                                                            * (((LODWORD(STACK[0xB70]) != -1129976577)
                                                                              * ((LODWORD(STACK[0x78C]) - 221) ^ 0xF3)) ^ (LODWORD(STACK[0x78C]) + 207)))
                                                                - 8))(a1, a2, 0x373C0AAD4CE136CBLL);
    default:
      return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                            + 8
                                            * (((((v4 - 62) ^ (*(_QWORD *)(STACK[0x7F8]
                                                                                          - 0x23120F4208F8DC5) == 0)) & 1)
                                              * ((v4 - 31152840) & 0x1DB5F7D ^ 0x46C)) ^ (v4 + 706)))
                                - 12))();
  }
}

void sub_1CF346CEC()
{
  JUMPOUT(0x1CF345ED4);
}

uint64_t sub_1CF346E24()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((v1 + v0 - 1073403629 < (((v2 - 330) | 0x20C) ^ 0x225u)) * (v2 - 331)) ^ (v2 + 1439)))
                            - 4))();
}

uint64_t sub_1CF346E94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 - 280) | 0x602) ^ 0x61C ^ (121 * (v2 ^ 0x22E)))
                                * ((unint64_t)(v1 - a1 - 10) < 0x10)) ^ v2)))();
}

uint64_t sub_1CF346EE0(uint64_t a1, unsigned int a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 + 8 * ((118 * (((a2 < 0x10) ^ (v2 + 12)) & 1)) ^ v2));
  *(int64x2_t *)&STACK[0x690] = vdupq_n_s64(0x574753E73F222D3AuLL);
  *(int64x2_t *)&STACK[0x680] = vdupq_n_s64(0x2BA3A9F39F91169DuLL);
  *(int64x2_t *)&STACK[0x670] = vdupq_n_s64(0x7B777912A32C67EAuLL);
  *(int64x2_t *)&STACK[0x660] = vdupq_n_s64(0x692731D6338DB71CuLL);
  *(int64x2_t *)&STACK[0x650] = vdupq_n_s64(0x4B6C6714E6392471uLL);
  *(int64x2_t *)&STACK[0x640] = vdupq_n_s64(0xAEBBBDBA0BBC8771);
  *(int64x2_t *)&STACK[0x630] = vdupq_n_s64(0x510030B8E189902CuLL);
  *(int64x2_t *)&STACK[0x620] = vdupq_n_s64(0x577FE7A38F3B37EAuLL);
  *(int64x2_t *)&STACK[0x610] = vdupq_n_s64(0x260581278867C13BuLL);
  *(int64x2_t *)&STACK[0x600] = vdupq_n_s64(0xCEF084FAA1330368);
  *(int64x2_t *)&STACK[0x5F0] = vdupq_n_s64(0x76E121B476B8B75uLL);
  *(int64x2_t *)&STACK[0x4B0] = vdupq_n_s64(0xF891EDE4B894748ALL);
  *(int64x2_t *)&STACK[0x5E0] = vdupq_n_s64(0x49789F62677564CuLL);
  *(int64x2_t *)&STACK[0x5D0] = vdupq_n_s64(0x70AABCCB0AE47600uLL);
  *(int64x2_t *)&STACK[0x5C0] = vdupq_n_s64(0x8F554334F51B89FFLL);
  *(int64x2_t *)&STACK[0x5B0] = vdupq_n_s64(0xEDDFFF667C506E9DLL);
  *(int64x2_t *)&STACK[0x5A0] = vdupq_n_s64(0x89DBE9971E9DD83ELL);
  *(int64x2_t *)&STACK[0x560] = vdupq_n_s64(0xBB120B3470B113E0);
  *(int64x2_t *)&STACK[0x550] = vdupq_n_s64(0xA019DAAC5BE8D391);
  *(int64x2_t *)&STACK[0x7A0] = vdupq_n_s64(0x964E4B8C152982F6);
  *(int64x2_t *)&STACK[0x540] = vdupq_n_s64(0xF61B1D49462BAD2DLL);
  *(int64x2_t *)&STACK[0x530] = vdupq_n_s64(0xF2AC27635B1587D7);
  *(int64x2_t *)&STACK[0x520] = vdupq_n_s64(0xA5339B7A87A2DA42);
  *(int64x2_t *)&STACK[0x510] = vdupq_n_s64(0x31B54C886DAC1C80uLL);
  *(int64x2_t *)&STACK[0x500] = vdupq_n_s64(0xE72559BBC929F1BFLL);
  *(int64x2_t *)&STACK[0x4F0] = vdupq_n_s64(0xB7F1895AF59480C8);
  *(int64x2_t *)&STACK[0x4E0] = vdupq_n_s64(0x9EAD5CAA3255F462);
  *(int64x2_t *)&STACK[0x4D0] = vdupq_n_s64(0x4F56AE55192AFA31uLL);
  *(int64x2_t *)&STACK[0x4C0] = vdupq_n_s64(0xAA8174FBF4AF5931);
  *(int64x2_t *)&STACK[0x790] = vdupq_n_s64(0x466AFE99D3FC902AuLL);
  *(int64x2_t *)&STACK[0x740] = vdupq_n_s64(0xB99501662C036FD5);
  *(int64x2_t *)&STACK[0x730] = vdupq_n_s64(0xDB1FBD34A54888B7);
  *(int64x2_t *)&STACK[0x710] = vdupq_n_s64(0x954DD9029E9595E4);
  *(int64x2_t *)&STACK[0x4A0] = vdupq_n_s64(0x3559137EB0B5350EuLL);
  *(int64x2_t *)&STACK[0x490] = vdupq_n_s64(0x9066708270C1ED93);
  *(int64x2_t *)&STACK[0x480] = vdupq_n_s64(0x4D21A265A8D83CB1uLL);
  *(int64x2_t *)&STACK[0x470] = vdupq_n_s64(0xB2DE5D9A5727C34ELL);
  *(int64x2_t *)&STACK[0x460] = vdupq_n_s64(0x562A73FD8381FCC0uLL);
  return ((uint64_t (*)(void))(v4 - ((v2 + 481469160) & 0xE34D57FC) + 504))();
}

uint64_t sub_1CF3472BC@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  int64x2_t v8;
  uint64_t v9;
  uint64_t v10;
  int64x2_t v11;
  uint64_t v12;
  uint64_t v13;
  int64x2_t v14;
  uint64_t v15;
  int64x2_t v16;
  uint64_t v17;
  uint64_t v18;
  int64x2_t v19;
  uint64_t v20;
  uint64_t v21;
  int64x2_t v22;
  uint64_t v23;
  uint64_t v24;
  int64x2_t v25;
  uint64_t v26;
  uint64_t v27;
  int64x2_t v28;
  __int128 v29;
  int64x2_t v30;
  int64x2_t v31;
  int64x2_t v32;
  int8x16_t v33;
  int8x16_t v34;
  int8x16_t v35;
  int8x16_t v36;
  int8x16_t v37;
  int8x16_t v38;
  int8x16_t v39;
  int8x16_t v40;
  int8x16_t v41;
  int64x2_t v42;
  int64x2_t v43;
  int64x2_t v44;
  int64x2_t v45;
  int64x2_t v46;
  int64x2_t v47;
  int64x2_t v48;
  int64x2_t v49;
  int8x16_t v50;
  int64x2_t v51;
  int64x2_t v52;
  int64x2_t v53;
  int64x2_t v54;
  int64x2_t v55;
  int64x2_t v56;
  int64x2_t v57;
  int64x2_t v58;
  int64x2_t v59;
  int64x2_t v60;
  int64x2_t v61;
  int64x2_t v62;
  int64x2_t v63;
  int64x2_t v64;
  int64x2_t v65;
  int64x2_t v66;
  int64x2_t v67;
  int64x2_t v68;
  int64x2_t v69;
  int64x2_t v70;
  int64x2_t v71;
  int64x2_t v72;
  int64x2_t v73;
  int64x2_t v74;
  int8x16_t v75;
  int8x16_t v76;
  int8x16_t v77;
  int8x16_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int64x2_t v81;
  int64x2_t v82;
  int64x2_t v83;
  int64x2_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int64x2_t v90;
  int64x2_t v91;
  int64x2_t v92;
  int64x2_t v93;
  int64x2_t v94;
  int64x2_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int64x2_t v100;
  int64x2_t v101;
  int64x2_t v102;
  int64x2_t v103;
  int64x2_t v104;
  int64x2_t v105;
  int64x2_t v106;
  int8x16_t v107;
  int8x16_t v108;
  int8x16_t v109;
  int8x16_t v110;
  int64x2_t v111;
  int64x2_t v112;
  int64x2_t v113;
  int64x2_t v114;
  int64x2_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int64x2_t v121;
  int64x2_t v122;
  int64x2_t v123;
  int64x2_t v124;
  int64x2_t v125;
  int64x2_t v126;
  int64x2_t v127;
  int64x2_t v128;
  int64x2_t v129;
  int64x2_t v130;
  int64x2_t v131;
  int64x2_t v132;
  int64x2_t v133;
  int64x2_t v134;
  int8x16_t v135;
  int8x16_t v136;
  int8x16_t v137;
  int8x16_t v138;
  int64x2_t v139;
  int64x2_t v140;
  int64x2_t v141;
  int64x2_t v142;
  int64x2_t v143;
  int64x2_t v144;
  int64x2_t v145;
  int64x2_t v146;
  int8x16_t v147;
  int8x16_t v148;
  int8x16_t v149;
  int8x16_t v150;
  int8x16_t v151;
  int8x16_t v152;
  int8x16_t v153;
  int8x16_t v154;
  int64x2_t v155;
  int64x2_t v156;
  int64x2_t v157;
  int64x2_t v158;
  int64x2_t v159;
  int64x2_t v160;
  int64x2_t v161;
  int64x2_t v162;
  int64x2_t v163;
  int64x2_t v164;
  int64x2_t v165;
  int64x2_t v166;
  int64x2_t v167;
  int64x2_t v168;
  int64x2_t v169;
  int64x2_t v170;
  int8x16_t v171;
  int8x16_t v172;
  int8x16_t v173;
  int8x16_t v174;
  int8x16_t v175;
  int8x16_t v176;
  int8x16_t v177;
  int8x16_t v178;
  int64x2_t v179;
  int64x2_t v180;
  int64x2_t v181;
  int64x2_t v182;
  int64x2_t v183;
  int64x2_t v184;
  int64x2_t v185;
  int64x2_t v186;
  int64x2_t v187;
  int64x2_t v188;
  int64x2_t v189;
  int64x2_t v190;
  int64x2_t v191;
  int64x2_t v192;
  int64x2_t v193;
  int64x2_t v194;
  int8x16_t v195;
  int64x2_t v196;
  int64x2_t v197;
  int64x2_t v198;
  int64x2_t v199;
  int64x2_t v200;
  int64x2_t v201;
  int64x2_t v202;
  int64x2_t v203;
  int64x2_t v204;
  int64x2_t v205;
  int64x2_t v206;
  uint64_t v207;
  int64x2_t v208;
  int64x2_t v209;
  int8x16_t v210;
  int64x2_t v211;
  int64x2_t v212;
  int64x2_t v213;
  int64x2_t v214;
  int64x2_t v215;
  uint64x2_t v216;
  uint64x2_t v217;
  uint64x2_t v218;
  uint64x2_t v219;
  uint64x2_t v220;
  uint64x2_t v221;
  uint64x2_t v222;
  int8x16_t v223;
  int64x2_t v224;
  int64x2_t v225;
  int64x2_t v226;
  int64x2_t v227;
  int64x2_t v228;
  int8x16_t v229;
  int64x2_t v230;
  int8x16_t v231;
  int64x2_t v232;
  int8x16_t v233;
  int8x16_t v234;
  int64x2_t v235;
  int64x2_t v236;
  int64x2_t v237;
  int64x2_t v238;
  int64x2_t v239;
  int64x2_t v240;
  int8x16_t v241;
  int64x2_t v242;
  int64x2_t v243;
  int64x2_t v244;
  int8x16_t v245;
  int64x2_t v246;
  int64x2_t v247;
  int64x2_t v248;
  int64x2_t v249;
  int8x16_t v250;
  int64x2_t v251;
  int8x16_t v252;
  int64x2_t v253;
  int64x2_t v254;
  int64x2_t v255;
  int64x2_t v256;
  int8x16_t v257;
  int64x2_t v258;
  int64x2_t v259;
  int64x2_t v260;
  int64x2_t v261;
  int8x16_t v262;
  int64x2_t v263;
  int64x2_t v264;
  int64x2_t v265;
  int64x2_t v266;
  int8x16_t v267;
  int8x16_t v268;
  int64x2_t v269;
  int64x2_t v270;
  int8x16_t v271;
  int64x2_t v272;
  int64x2_t v273;
  int64x2_t v274;
  int64x2_t v275;
  int64x2_t v276;
  int8x16_t v277;
  int64x2_t v278;
  int64x2_t v279;
  int8x16_t v280;
  int8x16_t v281;
  int8x16_t v282;
  int64x2_t v283;
  int64x2_t v284;
  int8x16_t v285;
  int8x16_t v286;
  int64x2_t v287;
  int64x2_t v288;
  int64x2_t v289;
  int64x2_t v290;
  int64x2_t v291;
  int64x2_t v292;
  int64x2_t v293;
  int64x2_t v294;
  int64x2_t v295;
  int64x2_t v296;
  int64x2_t v297;
  int64x2_t v298;
  int8x16_t v299;
  int64x2_t v300;
  int64x2_t v301;
  int64x2_t v302;
  int64x2_t v303;
  int8x16_t v304;
  int8x16_t v305;
  int64x2_t v306;
  int8x16_t v307;
  int64x2_t v308;
  int8x16_t v309;
  int64x2_t v310;
  int64x2_t v311;
  int8x16_t v312;
  int64x2_t v313;
  int64x2_t v314;
  int64x2_t v315;
  int64x2_t v316;
  int64x2_t v317;
  int64x2_t v318;
  int64x2_t v319;
  int64x2_t v320;
  int8x16_t v321;
  int64x2_t v322;
  int64x2_t v323;
  int64x2_t v324;
  int64x2_t v325;
  int64x2_t v326;
  int64x2_t v327;
  int64x2_t v328;
  int64x2_t v329;
  int8x16_t v330;
  int8x16_t v331;
  int8x16_t v332;
  int8x16_t v333;
  int64x2_t v334;
  int8x16_t v335;
  int8x16_t v336;
  int8x16_t v337;
  int64x2_t v338;
  int64x2_t v339;
  int64x2_t v340;
  int64x2_t v341;
  int64x2_t v342;
  int64x2_t v343;
  int64x2_t v344;
  int64x2_t v345;
  int64x2_t v346;
  int64x2_t v347;
  int64x2_t v348;
  int64x2_t v349;
  int64x2_t v350;
  int64x2_t v351;
  int64x2_t v352;
  int64x2_t v353;
  int64x2_t v354;
  int64x2_t v355;
  int64x2_t v356;
  int64x2_t v357;
  int64x2_t v358;
  int64x2_t v359;
  int64x2_t v360;
  int64x2_t v361;
  int8x16_t v362;
  int8x16_t v363;
  int64x2_t v364;
  int64x2_t v365;
  int64x2_t v366;
  int64x2_t v367;
  int64x2_t v368;
  int64x2_t v369;
  int64x2_t v370;
  int64x2_t v371;
  int8x16_t v372;
  int8x16_t v373;
  int8x16_t v374;
  int64x2_t v375;
  int64x2_t v376;
  int64x2_t v377;
  int64x2_t v378;
  int64x2_t v379;
  int64x2_t v380;
  int64x2_t v381;
  int64x2_t v382;
  int64x2_t v383;
  int64x2_t v384;
  int64x2_t v385;
  int64x2_t v386;
  int8x16_t v387;
  int64x2_t v388;
  int64x2_t v389;
  int64x2_t v390;
  int64x2_t v391;
  int8x16_t v392;
  int8x16_t v393;
  int64x2_t v394;
  int64x2_t v395;
  int64x2_t v396;
  int64x2_t v397;
  int64x2_t v398;
  int64x2_t v399;
  int64x2_t v400;
  int64x2_t v401;
  int64x2_t v402;
  int64x2_t v403;
  int64x2_t v404;
  int64x2_t v405;
  int8x16_t v406;
  int64x2_t v407;
  int64x2_t v408;
  int64x2_t v409;
  int64x2_t v410;
  int8x16_t v411;
  int8x16_t v412;
  int8x16_t v413;
  int8x16_t v414;
  int8x16x4_t v416;

  LODWORD(STACK[0x2D0]) = a1;
  LODWORD(STACK[0x2CC]) = a1 & 0xFFFFFFF0;
  LODWORD(STACK[0x360]) = -(a1 & 0xFFFFFFF0);
  v7 = v5 - 1073403636 + v4;
  LODWORD(STACK[0x350]) = v7 - 9;
  LODWORD(STACK[0x340]) = v7 - 8;
  LODWORD(STACK[0x330]) = v7 - 7;
  LODWORD(STACK[0x320]) = v7 - 6;
  LODWORD(STACK[0x2F4]) = v7 - 5;
  LODWORD(STACK[0x2F0]) = v7 - 4;
  LODWORD(STACK[0x2EC]) = v7 - 3;
  LODWORD(STACK[0x2E8]) = v7 - 2;
  LODWORD(STACK[0x2E4]) = v7 - 1;
  LODWORD(STACK[0x2E0]) = v7 + 1;
  LODWORD(STACK[0x2DC]) = v7 + 2;
  LODWORD(STACK[0x2D8]) = v7 + (v3 | 0x148) - 360;
  LODWORD(STACK[0x2D4]) = v7 + 4;
  v8.i64[0] = v2 + v7 + 6;
  v8.i64[1] = v2 + v7 + 5;
  v9 = LODWORD(STACK[0x2D4]);
  v10 = LODWORD(STACK[0x2D8]);
  v11.i64[0] = v2 + v9;
  v11.i64[1] = v2 + v10;
  v12 = LODWORD(STACK[0x2DC]);
  v13 = LODWORD(STACK[0x2E0]);
  v14.i64[0] = v2 + v12;
  v14.i64[1] = v2 + v13;
  v15 = LODWORD(STACK[0x2E4]);
  v16.i64[0] = v2 + v7;
  v16.i64[1] = v2 + v15;
  v17 = LODWORD(STACK[0x2E8]);
  v18 = LODWORD(STACK[0x2EC]);
  v19.i64[0] = v2 + v17;
  v19.i64[1] = v2 + v18;
  v20 = LODWORD(STACK[0x2F0]);
  v21 = LODWORD(STACK[0x2F4]);
  v22.i64[0] = v2 + v20;
  v22.i64[1] = v2 + v21;
  v23 = LODWORD(STACK[0x320]);
  v24 = LODWORD(STACK[0x330]);
  v25.i64[0] = v2 + v23;
  v25.i64[1] = v2 + v24;
  v26 = LODWORD(STACK[0x340]);
  v27 = LODWORD(STACK[0x350]);
  v28.i64[0] = v2 + v26;
  v28.i64[1] = v2 + v27;
  *(_QWORD *)&v29 = v26 + a2 + 10;
  *((_QWORD *)&v29 + 1) = v27 + a2 + 10;
  *(_OWORD *)&STACK[0x6F0] = v29;
  *(_QWORD *)&v29 = v23 + a2 + 10;
  *((_QWORD *)&v29 + 1) = v24 + a2 + 10;
  *(_OWORD *)&STACK[0x700] = v29;
  v30.i64[0] = v20 + a2 + 10;
  v30.i64[1] = v21 + a2 + 10;
  v31.i64[0] = v17 + a2 + 10;
  v31.i64[1] = v18 + a2 + 10;
  v32.i64[0] = v7 + a2 + 10;
  v32.i64[1] = v15 + a2 + 10;
  v33 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v8, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v8, 8uLL)), *(int8x16_t *)&STACK[0x770]), *(int64x2_t *)&STACK[0x580]);
  v34 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v11, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v11, 8uLL)), *(int8x16_t *)&STACK[0x770]), *(int64x2_t *)&STACK[0x580]);
  v35 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v14, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v14, 8uLL)), *(int8x16_t *)&STACK[0x770]), *(int64x2_t *)&STACK[0x580]);
  v36 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v16, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v16, 8uLL)), *(int8x16_t *)&STACK[0x770]), *(int64x2_t *)&STACK[0x580]);
  v37 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v19, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v19, 8uLL)), *(int8x16_t *)&STACK[0x770]), *(int64x2_t *)&STACK[0x580]);
  v38 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v22, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v22, 8uLL)), *(int8x16_t *)&STACK[0x770]), *(int64x2_t *)&STACK[0x580]);
  v39 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v25, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v25, 8uLL)), *(int8x16_t *)&STACK[0x770]), *(int64x2_t *)&STACK[0x580]);
  v40 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v28, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v28, 8uLL)), *(int8x16_t *)&STACK[0x770]), *(int64x2_t *)&STACK[0x580]);
  v41 = (int8x16_t)vdupq_n_s64(0xB98B02A5518146ACLL);
  v42 = (int64x2_t)veorq_s8(v40, v41);
  v43 = (int64x2_t)veorq_s8(v39, v41);
  v44 = (int64x2_t)veorq_s8(v38, v41);
  v45 = (int64x2_t)veorq_s8(v37, v41);
  v46 = (int64x2_t)veorq_s8(v36, v41);
  v47 = (int64x2_t)veorq_s8(v35, v41);
  v48 = (int64x2_t)veorq_s8(v34, v41);
  v49 = (int64x2_t)veorq_s8(v33, v41);
  v50 = (int8x16_t)vdupq_n_s64(0xEE14BEBC8D361B39);
  v51 = (int64x2_t)veorq_s8(v33, v50);
  v52 = (int64x2_t)veorq_s8(v34, v50);
  v53 = (int64x2_t)veorq_s8(v35, v50);
  v54 = (int64x2_t)veorq_s8(v36, v50);
  v55 = (int64x2_t)veorq_s8(v37, v50);
  v56 = (int64x2_t)veorq_s8(v38, v50);
  v57 = (int64x2_t)veorq_s8(v39, v50);
  v58 = (int64x2_t)veorq_s8(v40, v50);
  v59 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v42, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v42, 8uLL)), v58);
  v60 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v43, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v43, 8uLL)), v57);
  v61 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v44, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v44, 8uLL)), v56);
  v62 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v45, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v45, 8uLL)), v55);
  v63 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v46, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v46, 8uLL)), v54);
  v64 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v47, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v47, 8uLL)), v53);
  v65 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v48, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v48, 8uLL)), v52);
  v66 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v49, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v49, 8uLL)), v51);
  v67 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v66, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v66, v66), *(int8x16_t *)&STACK[0x690])), *(int64x2_t *)&STACK[0x680]), *(int8x16_t *)&STACK[0x670]);
  v68 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v65, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v65, v65), *(int8x16_t *)&STACK[0x690])), *(int64x2_t *)&STACK[0x680]), *(int8x16_t *)&STACK[0x670]);
  v69 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v64, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v64, v64), *(int8x16_t *)&STACK[0x690])), *(int64x2_t *)&STACK[0x680]), *(int8x16_t *)&STACK[0x670]);
  v70 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v63, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v63, v63), *(int8x16_t *)&STACK[0x690])), *(int64x2_t *)&STACK[0x680]), *(int8x16_t *)&STACK[0x670]);
  v71 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v62, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v62, v62), *(int8x16_t *)&STACK[0x690])), *(int64x2_t *)&STACK[0x680]), *(int8x16_t *)&STACK[0x670]);
  v72 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v61, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v61, v61), *(int8x16_t *)&STACK[0x690])), *(int64x2_t *)&STACK[0x680]), *(int8x16_t *)&STACK[0x670]);
  v73 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v60, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v60, v60), *(int8x16_t *)&STACK[0x690])), *(int64x2_t *)&STACK[0x680]), *(int8x16_t *)&STACK[0x670]);
  v74 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v59, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v59, v59), *(int8x16_t *)&STACK[0x690])), *(int64x2_t *)&STACK[0x680]), *(int8x16_t *)&STACK[0x670]);
  v75 = vorrq_s8((int8x16_t)vshlq_n_s64(v51, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v51, 0x3DuLL));
  v76 = vorrq_s8((int8x16_t)vshlq_n_s64(v52, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v52, 0x3DuLL));
  v77 = vorrq_s8((int8x16_t)vshlq_n_s64(v53, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v53, 0x3DuLL));
  v78 = vorrq_s8((int8x16_t)vshlq_n_s64(v54, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v54, 0x3DuLL));
  v79 = (int64x2_t)veorq_s8((int8x16_t)v74, vorrq_s8((int8x16_t)vshlq_n_s64(v58, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v58, 0x3DuLL)));
  v80 = (int64x2_t)veorq_s8((int8x16_t)v73, vorrq_s8((int8x16_t)vshlq_n_s64(v57, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v57, 0x3DuLL)));
  v81 = (int64x2_t)veorq_s8((int8x16_t)v72, vorrq_s8((int8x16_t)vshlq_n_s64(v56, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v56, 0x3DuLL)));
  v82 = (int64x2_t)veorq_s8((int8x16_t)v71, vorrq_s8((int8x16_t)vshlq_n_s64(v55, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v55, 0x3DuLL)));
  v83 = (int64x2_t)veorq_s8((int8x16_t)v70, v78);
  v84 = (int64x2_t)veorq_s8((int8x16_t)v69, v77);
  v85 = (int64x2_t)veorq_s8((int8x16_t)v68, v76);
  v86 = (int64x2_t)veorq_s8((int8x16_t)v67, v75);
  v87 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v74, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v74, 8uLL));
  v88 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v73, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v73, 8uLL));
  v89 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v72, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v72, 8uLL));
  v90 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v71, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v71, 8uLL));
  v91 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v67, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v67, 8uLL)), v86);
  v92 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v68, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v68, 8uLL)), v85);
  v93 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v69, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v69, 8uLL)), v84);
  v94 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v70, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v70, 8uLL)), v83);
  v95 = vaddq_s64(v90, v82);
  v96 = vaddq_s64(v89, v81);
  v97 = vaddq_s64(v88, v80);
  v98 = vaddq_s64(v87, v79);
  v99 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v98, v98), *(int8x16_t *)&STACK[0x660]), v98), *(int64x2_t *)&STACK[0x650]), *(int8x16_t *)&STACK[0x640]);
  v100 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v97, v97), *(int8x16_t *)&STACK[0x660]), v97), *(int64x2_t *)&STACK[0x650]), *(int8x16_t *)&STACK[0x640]);
  v101 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v96, v96), *(int8x16_t *)&STACK[0x660]), v96), *(int64x2_t *)&STACK[0x650]), *(int8x16_t *)&STACK[0x640]);
  v102 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v95, v95), *(int8x16_t *)&STACK[0x660]), v95), *(int64x2_t *)&STACK[0x650]), *(int8x16_t *)&STACK[0x640]);
  v103 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v94, v94), *(int8x16_t *)&STACK[0x660]), v94), *(int64x2_t *)&STACK[0x650]), *(int8x16_t *)&STACK[0x640]);
  v104 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v93, v93), *(int8x16_t *)&STACK[0x660]), v93), *(int64x2_t *)&STACK[0x650]), *(int8x16_t *)&STACK[0x640]);
  v105 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v92, v92), *(int8x16_t *)&STACK[0x660]), v92), *(int64x2_t *)&STACK[0x650]), *(int8x16_t *)&STACK[0x640]);
  v106 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v91, v91), *(int8x16_t *)&STACK[0x660]), v91), *(int64x2_t *)&STACK[0x650]), *(int8x16_t *)&STACK[0x640]);
  v107 = vorrq_s8((int8x16_t)vshlq_n_s64(v79, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v79, 0x3DuLL));
  v108 = vorrq_s8((int8x16_t)vshlq_n_s64(v80, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v80, 0x3DuLL));
  v109 = vorrq_s8((int8x16_t)vshlq_n_s64(v81, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v81, 0x3DuLL));
  v110 = vorrq_s8((int8x16_t)vshlq_n_s64(v82, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v82, 0x3DuLL));
  v111 = (int64x2_t)veorq_s8((int8x16_t)v106, vorrq_s8((int8x16_t)vshlq_n_s64(v86, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v86, 0x3DuLL)));
  v112 = (int64x2_t)veorq_s8((int8x16_t)v105, vorrq_s8((int8x16_t)vshlq_n_s64(v85, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v85, 0x3DuLL)));
  v113 = (int64x2_t)veorq_s8((int8x16_t)v104, vorrq_s8((int8x16_t)vshlq_n_s64(v84, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v84, 0x3DuLL)));
  v114 = (int64x2_t)veorq_s8((int8x16_t)v103, vorrq_s8((int8x16_t)vshlq_n_s64(v83, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v83, 0x3DuLL)));
  v115 = (int64x2_t)veorq_s8((int8x16_t)v102, v110);
  v116 = (int64x2_t)veorq_s8((int8x16_t)v101, v109);
  v117 = (int64x2_t)veorq_s8((int8x16_t)v100, v108);
  v118 = (int64x2_t)veorq_s8((int8x16_t)v99, v107);
  v119 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v99, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v99, 8uLL)), v118);
  v120 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v100, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v100, 8uLL)), v117);
  v121 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v101, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v101, 8uLL)), v116);
  v122 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v102, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v102, 8uLL)), v115);
  v123 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v103, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v103, 8uLL)), v114);
  v124 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v104, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 8uLL)), v113);
  v125 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v105, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v105, 8uLL)), v112);
  v126 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v106, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v106, 8uLL)), v111);
  v127 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v126, v126), *(int8x16_t *)&STACK[0x630]), v126), *(int64x2_t *)&STACK[0x620]), *(int8x16_t *)&STACK[0x610]);
  v128 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v125, v125), *(int8x16_t *)&STACK[0x630]), v125), *(int64x2_t *)&STACK[0x620]), *(int8x16_t *)&STACK[0x610]);
  v129 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v124, v124), *(int8x16_t *)&STACK[0x630]), v124), *(int64x2_t *)&STACK[0x620]), *(int8x16_t *)&STACK[0x610]);
  v130 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v123, v123), *(int8x16_t *)&STACK[0x630]), v123), *(int64x2_t *)&STACK[0x620]), *(int8x16_t *)&STACK[0x610]);
  v131 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v122, v122), *(int8x16_t *)&STACK[0x630]), v122), *(int64x2_t *)&STACK[0x620]), *(int8x16_t *)&STACK[0x610]);
  v132 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v121, v121), *(int8x16_t *)&STACK[0x630]), v121), *(int64x2_t *)&STACK[0x620]), *(int8x16_t *)&STACK[0x610]);
  v133 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v120, v120), *(int8x16_t *)&STACK[0x630]), v120), *(int64x2_t *)&STACK[0x620]), *(int8x16_t *)&STACK[0x610]);
  v134 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v119, v119), *(int8x16_t *)&STACK[0x630]), v119), *(int64x2_t *)&STACK[0x620]), *(int8x16_t *)&STACK[0x610]);
  v135 = vorrq_s8((int8x16_t)vshlq_n_s64(v111, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v111, 0x3DuLL));
  v136 = vorrq_s8((int8x16_t)vshlq_n_s64(v112, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v112, 0x3DuLL));
  v137 = vorrq_s8((int8x16_t)vshlq_n_s64(v113, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v113, 0x3DuLL));
  v138 = vorrq_s8((int8x16_t)vshlq_n_s64(v114, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v114, 0x3DuLL));
  v139 = (int64x2_t)veorq_s8((int8x16_t)v134, vorrq_s8((int8x16_t)vshlq_n_s64(v118, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v118, 0x3DuLL)));
  v140 = (int64x2_t)veorq_s8((int8x16_t)v133, vorrq_s8((int8x16_t)vshlq_n_s64(v117, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v117, 0x3DuLL)));
  v141 = (int64x2_t)veorq_s8((int8x16_t)v132, vorrq_s8((int8x16_t)vshlq_n_s64(v116, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v116, 0x3DuLL)));
  v142 = (int64x2_t)veorq_s8((int8x16_t)v131, vorrq_s8((int8x16_t)vshlq_n_s64(v115, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v115, 0x3DuLL)));
  v143 = (int64x2_t)veorq_s8((int8x16_t)v130, v138);
  v144 = (int64x2_t)veorq_s8((int8x16_t)v129, v137);
  v145 = (int64x2_t)veorq_s8((int8x16_t)v128, v136);
  v146 = (int64x2_t)veorq_s8((int8x16_t)v127, v135);
  v147 = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v134, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v134, 8uLL)), v139), *(int8x16_t *)&STACK[0x600]);
  v148 = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v133, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133, 8uLL)), v140), *(int8x16_t *)&STACK[0x600]);
  v149 = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v132, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v132, 8uLL)), v141), *(int8x16_t *)&STACK[0x600]);
  v150 = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v131, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v131, 8uLL)), v142), *(int8x16_t *)&STACK[0x600]);
  v151 = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v130, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v130, 8uLL)), v143), *(int8x16_t *)&STACK[0x600]);
  v152 = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v129, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v129, 8uLL)), v144), *(int8x16_t *)&STACK[0x600]);
  v153 = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v128, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v128, 8uLL)), v145), *(int8x16_t *)&STACK[0x600]);
  v154 = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v127, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v127, 8uLL)), v146), *(int8x16_t *)&STACK[0x600]);
  v155 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v147, *(int8x16_t *)&STACK[0x5F0]), (int64x2_t)vorrq_s8(v147, *(int8x16_t *)&STACK[0x4B0])), *(int64x2_t *)&STACK[0x4B0]), *(int8x16_t *)&STACK[0x5E0]);
  v156 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v148, *(int8x16_t *)&STACK[0x5F0]), (int64x2_t)vorrq_s8(v148, *(int8x16_t *)&STACK[0x4B0])), *(int64x2_t *)&STACK[0x4B0]), *(int8x16_t *)&STACK[0x5E0]);
  v157 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v149, *(int8x16_t *)&STACK[0x5F0]), (int64x2_t)vorrq_s8(v149, *(int8x16_t *)&STACK[0x4B0])), *(int64x2_t *)&STACK[0x4B0]), *(int8x16_t *)&STACK[0x5E0]);
  v158 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v150, *(int8x16_t *)&STACK[0x5F0]), (int64x2_t)vorrq_s8(v150, *(int8x16_t *)&STACK[0x4B0])), *(int64x2_t *)&STACK[0x4B0]), *(int8x16_t *)&STACK[0x5E0]);
  v159 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v151, *(int8x16_t *)&STACK[0x5F0]), (int64x2_t)vorrq_s8(v151, *(int8x16_t *)&STACK[0x4B0])), *(int64x2_t *)&STACK[0x4B0]), *(int8x16_t *)&STACK[0x5E0]);
  v160 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v152, *(int8x16_t *)&STACK[0x5F0]), (int64x2_t)vorrq_s8(v152, *(int8x16_t *)&STACK[0x4B0])), *(int64x2_t *)&STACK[0x4B0]), *(int8x16_t *)&STACK[0x5E0]);
  v161 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v153, *(int8x16_t *)&STACK[0x5F0]), (int64x2_t)vorrq_s8(v153, *(int8x16_t *)&STACK[0x4B0])), *(int64x2_t *)&STACK[0x4B0]), *(int8x16_t *)&STACK[0x5E0]);
  v162 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v154, *(int8x16_t *)&STACK[0x5F0]), (int64x2_t)vorrq_s8(v154, *(int8x16_t *)&STACK[0x4B0])), *(int64x2_t *)&STACK[0x4B0]), *(int8x16_t *)&STACK[0x5E0]);
  v163 = (int64x2_t)veorq_s8((int8x16_t)v162, vorrq_s8((int8x16_t)vshlq_n_s64(v146, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146, 0x3DuLL)));
  v164 = (int64x2_t)veorq_s8((int8x16_t)v161, vorrq_s8((int8x16_t)vshlq_n_s64(v145, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v145, 0x3DuLL)));
  v165 = (int64x2_t)veorq_s8((int8x16_t)v160, vorrq_s8((int8x16_t)vshlq_n_s64(v144, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v144, 0x3DuLL)));
  v166 = (int64x2_t)veorq_s8((int8x16_t)v159, vorrq_s8((int8x16_t)vshlq_n_s64(v143, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v143, 0x3DuLL)));
  v167 = (int64x2_t)veorq_s8((int8x16_t)v158, vorrq_s8((int8x16_t)vshlq_n_s64(v142, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v142, 0x3DuLL)));
  v168 = (int64x2_t)veorq_s8((int8x16_t)v157, vorrq_s8((int8x16_t)vshlq_n_s64(v141, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v141, 0x3DuLL)));
  v169 = (int64x2_t)veorq_s8((int8x16_t)v156, vorrq_s8((int8x16_t)vshlq_n_s64(v140, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v140, 0x3DuLL)));
  v170 = (int64x2_t)veorq_s8((int8x16_t)v155, vorrq_s8((int8x16_t)vshlq_n_s64(v139, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v139, 0x3DuLL)));
  v171 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v155, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v155, 8uLL)), v170);
  v172 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v156, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v156, 8uLL)), v169);
  v173 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v157, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v157, 8uLL)), v168);
  v174 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v158, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v158, 8uLL)), v167);
  v175 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v159, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v159, 8uLL)), v166);
  v176 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v160, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v160, 8uLL)), v165);
  v177 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v161, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v161, 8uLL)), v164);
  v178 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v162, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162, 8uLL)), v163);
  v179 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x5C0], v171), (int64x2_t)vorrq_s8(v171, *(int8x16_t *)&STACK[0x5D0]))), *(int8x16_t *)&STACK[0x5B0]);
  v180 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x5C0], v172), (int64x2_t)vorrq_s8(v172, *(int8x16_t *)&STACK[0x5D0]))), *(int8x16_t *)&STACK[0x5B0]);
  v181 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x5C0], v173), (int64x2_t)vorrq_s8(v173, *(int8x16_t *)&STACK[0x5D0]))), *(int8x16_t *)&STACK[0x5B0]);
  v182 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x5C0], v174), (int64x2_t)vorrq_s8(v174, *(int8x16_t *)&STACK[0x5D0]))), *(int8x16_t *)&STACK[0x5B0]);
  v183 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x5C0], v175), (int64x2_t)vorrq_s8(v175, *(int8x16_t *)&STACK[0x5D0]))), *(int8x16_t *)&STACK[0x5B0]);
  v184 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x5C0], v176), (int64x2_t)vorrq_s8(v176, *(int8x16_t *)&STACK[0x5D0]))), *(int8x16_t *)&STACK[0x5B0]);
  v185 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x5C0], v177), (int64x2_t)vorrq_s8(v177, *(int8x16_t *)&STACK[0x5D0]))), *(int8x16_t *)&STACK[0x5B0]);
  v186 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x5C0], v178), (int64x2_t)vorrq_s8(v178, *(int8x16_t *)&STACK[0x5D0]))), *(int8x16_t *)&STACK[0x5B0]);
  v187 = (int64x2_t)veorq_s8((int8x16_t)v186, vorrq_s8((int8x16_t)vshlq_n_s64(v163, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v163, 0x3DuLL)));
  v188 = (int64x2_t)veorq_s8((int8x16_t)v185, vorrq_s8((int8x16_t)vshlq_n_s64(v164, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v164, 0x3DuLL)));
  v189 = (int64x2_t)veorq_s8((int8x16_t)v184, vorrq_s8((int8x16_t)vshlq_n_s64(v165, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v165, 0x3DuLL)));
  v190 = (int64x2_t)veorq_s8((int8x16_t)v183, vorrq_s8((int8x16_t)vshlq_n_s64(v166, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v166, 0x3DuLL)));
  v191 = (int64x2_t)veorq_s8((int8x16_t)v182, vorrq_s8((int8x16_t)vshlq_n_s64(v167, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v167, 0x3DuLL)));
  v192 = (int64x2_t)veorq_s8((int8x16_t)v181, vorrq_s8((int8x16_t)vshlq_n_s64(v168, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v168, 0x3DuLL)));
  v193 = (int64x2_t)veorq_s8((int8x16_t)v180, vorrq_s8((int8x16_t)vshlq_n_s64(v169, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v169, 0x3DuLL)));
  v194 = (int64x2_t)veorq_s8((int8x16_t)v179, vorrq_s8((int8x16_t)vshlq_n_s64(v170, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v170, 0x3DuLL)));
  v195 = (int8x16_t)vdupq_n_s64(0x5AC09C033F8B2761uLL);
  v196 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v186, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v186, 8uLL)), v187), v195);
  v197 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v185, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v185, 8uLL)), v188), v195);
  v198 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v184, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184, 8uLL)), v189), v195);
  v199 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v183, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183, 8uLL)), v190), v195);
  v200 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v182, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v182, 8uLL)), v191), v195);
  v201 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v181, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v181, 8uLL)), v192), v195);
  v202 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v180, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v180, 8uLL)), v193), v195);
  v203 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v179, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v179, 8uLL)), v194), v195);
  v204 = (int64x2_t)veorq_s8((int8x16_t)v199, vorrq_s8((int8x16_t)vshlq_n_s64(v190, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v190, 0x3DuLL)));
  v205 = (int64x2_t)veorq_s8((int8x16_t)v198, vorrq_s8((int8x16_t)vshlq_n_s64(v189, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v189, 0x3DuLL)));
  v190.i64[0] = v12 + a2 + 10;
  v190.i64[1] = v13 + a2 + 10;
  v206 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v196, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v196, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v196, vorrq_s8((int8x16_t)vshlq_n_s64(v187, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v187, 0x3DuLL))));
  v189.i64[0] = v9 + a2 + 10;
  v207 = v7 + 6 + a2;
  v189.i64[1] = v10 + a2 + 10;
  v208 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v197, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v197, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v197, vorrq_s8((int8x16_t)vshlq_n_s64(v188, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v188, 0x3DuLL))));
  v188.i64[0] = v207 + 10;
  v188.i64[1] = v7 + 5 + a2 + 10;
  v209 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v198, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v198, 8uLL)), v205);
  v210 = (int8x16_t)vdupq_n_s64(0x38uLL);
  v211 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v199, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v199, 8uLL)), v204);
  v212 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v200, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v200, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v200, vorrq_s8((int8x16_t)vshlq_n_s64(v191, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v191, 0x3DuLL))));
  v213 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v201, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v201, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v201, vorrq_s8((int8x16_t)vshlq_n_s64(v192, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v192, 0x3DuLL))));
  v214 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v202, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v202, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v202, vorrq_s8((int8x16_t)vshlq_n_s64(v193, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v193, 0x3DuLL))));
  v215 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v203, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v203, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v203, vorrq_s8((int8x16_t)vshlq_n_s64(v194, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v194, 0x3DuLL))));
  v216 = (uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v215, v215), *(int8x16_t *)&STACK[0x5A0]), v215), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x550]);
  v217 = (uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v214, v214), *(int8x16_t *)&STACK[0x5A0]), v214), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x550]);
  v218 = (uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v213, v213), *(int8x16_t *)&STACK[0x5A0]), v213), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x550]);
  v219 = (uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v212, v212), *(int8x16_t *)&STACK[0x5A0]), v212), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x550]);
  v220 = (uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v211, v211), *(int8x16_t *)&STACK[0x5A0]), v211), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x550]);
  v221 = (uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v209, v209), *(int8x16_t *)&STACK[0x5A0]), v209), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x550]);
  v222 = (uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v208, v208), *(int8x16_t *)&STACK[0x5A0]), v208), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x550]);
  *(uint64x2_t *)&STACK[0x420] = vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v206, v206), *(int8x16_t *)&STACK[0x5A0]), v206), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x550]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v8, 3uLL), v210)));
  *(uint64x2_t *)&STACK[0x410] = vshlq_u64(v222, (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v11, 3uLL), v210)));
  *(uint64x2_t *)&STACK[0x3E0] = vshlq_u64(v221, (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v14, 3uLL), v210)));
  *(uint64x2_t *)&STACK[0x3C0] = vshlq_u64(v220, (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v16, 3uLL), v210)));
  *(uint64x2_t *)&STACK[0x6E0] = vshlq_u64(v219, (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v19, 3uLL), v210)));
  *(uint64x2_t *)&STACK[0x6A0] = vshlq_u64(v218, (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v22, 3uLL), v210)));
  *(uint64x2_t *)&STACK[0x440] = vshlq_u64(v217, (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v25, 3uLL), v210)));
  *(uint64x2_t *)&STACK[0x430] = vshlq_u64(v216, (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v28, 3uLL), v210)));
  *(int64x2_t *)&STACK[0x390] = v188;
  v223 = *(int8x16_t *)&STACK[0x770];
  v224 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v188, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v188, 8uLL)), *(int8x16_t *)&STACK[0x770]);
  *(int64x2_t *)&STACK[0x370] = v189;
  v225 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v189, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v189, 8uLL)), v223);
  v226 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v190, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v190, 8uLL)), v223);
  v227 = v32;
  v228 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v32, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v32, 8uLL)), v223);
  *(int64x2_t *)&STACK[0x6D0] = v31;
  *(int8x16_t *)&STACK[0x3B0] = vorrq_s8((int8x16_t)vshlq_n_s64(v31, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v31, 8uLL));
  *(int64x2_t *)&STACK[0x450] = v30;
  *(int8x16_t *)&STACK[0x3D0] = vorrq_s8((int8x16_t)vshlq_n_s64(v30, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v30, 8uLL));
  v229 = vorrq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x700], 0x38uLL), (int8x16_t)vshrq_n_u64(*(uint64x2_t *)&STACK[0x700], 8uLL));
  *(int8x16_t *)&STACK[0x3F0] = vorrq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x6F0], 0x38uLL), (int8x16_t)vshrq_n_u64(*(uint64x2_t *)&STACK[0x6F0], 8uLL));
  *(int8x16_t *)&STACK[0x400] = v229;
  v230 = vdupq_n_s64(0x55E7EF06772DD764uLL);
  v231 = *(int8x16_t *)&STACK[0x7A0];
  *(int64x2_t *)&STACK[0x380] = vsubq_s64(v224, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v224, v224), v230), *(int8x16_t *)&STACK[0x7A0]));
  *(int64x2_t *)&STACK[0x3A0] = v230;
  v232 = vsubq_s64(v225, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v225, v225), v230), v231));
  v233 = (int8x16_t)vaddq_s64(vsubq_s64(v228, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v228, v228), v230), v231)), *(int64x2_t *)&STACK[0x540]);
  v234 = (int8x16_t)vaddq_s64(vsubq_s64(v226, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v226, v226), v230), v231)), *(int64x2_t *)&STACK[0x540]);
  v235 = (int64x2_t)veorq_s8(v234, *(int8x16_t *)&STACK[0x530]);
  v236 = (int64x2_t)veorq_s8(v233, *(int8x16_t *)&STACK[0x530]);
  v237 = (int64x2_t)veorq_s8(v233, *(int8x16_t *)&STACK[0x520]);
  v238 = (int64x2_t)veorq_s8(v234, *(int8x16_t *)&STACK[0x520]);
  v239 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v235, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v235, 8uLL)), v238);
  v240 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v236, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v236, 8uLL)), v237);
  v241 = *(int8x16_t *)&STACK[0x510];
  v242 = *(int64x2_t *)&STACK[0x500];
  v243 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v240, v240), *(int8x16_t *)&STACK[0x510]), v240), *(int64x2_t *)&STACK[0x500]), *(int8x16_t *)&STACK[0x4F0]);
  v244 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v239, v239), *(int8x16_t *)&STACK[0x510]), v239), *(int64x2_t *)&STACK[0x500]), *(int8x16_t *)&STACK[0x4F0]);
  v245 = vorrq_s8((int8x16_t)vshlq_n_s64(v237, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v237, 0x3DuLL));
  v246 = (int64x2_t)veorq_s8((int8x16_t)v244, vorrq_s8((int8x16_t)vshlq_n_s64(v238, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v238, 0x3DuLL)));
  v247 = (int64x2_t)veorq_s8((int8x16_t)v243, v245);
  v248 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v243, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v243, 8uLL)), v247);
  v249 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v244, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v244, 8uLL)), v246);
  v250 = *(int8x16_t *)&STACK[0x4E0];
  v251 = *(int64x2_t *)&STACK[0x4D0];
  v252 = *(int8x16_t *)&STACK[0x4C0];
  v253 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v249, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v249, v249), *(int8x16_t *)&STACK[0x4E0])), *(int64x2_t *)&STACK[0x4D0]), *(int8x16_t *)&STACK[0x4C0]);
  v254 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v248, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v248, v248), *(int8x16_t *)&STACK[0x4E0])), *(int64x2_t *)&STACK[0x4D0]), *(int8x16_t *)&STACK[0x4C0]);
  v255 = (int64x2_t)veorq_s8((int8x16_t)v254, vorrq_s8((int8x16_t)vshlq_n_s64(v247, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v247, 0x3DuLL)));
  v256 = (int64x2_t)veorq_s8((int8x16_t)v253, vorrq_s8((int8x16_t)vshlq_n_s64(v246, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v246, 0x3DuLL)));
  v257 = *(int8x16_t *)&STACK[0x750];
  v258 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v254, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v254, 8uLL)), v255), *(int8x16_t *)&STACK[0x750]);
  v259 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v253, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v253, 8uLL)), v256), *(int8x16_t *)&STACK[0x750]);
  v260 = (int64x2_t)veorq_s8((int8x16_t)v259, vorrq_s8((int8x16_t)vshlq_n_s64(v256, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v256, 0x3DuLL)));
  v261 = (int64x2_t)veorq_s8((int8x16_t)v258, vorrq_s8((int8x16_t)vshlq_n_s64(v255, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v255, 0x3DuLL)));
  v262 = *(int8x16_t *)&STACK[0x570];
  v263 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v259, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v259, 8uLL)), v260), *(int8x16_t *)&STACK[0x570]);
  v264 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v258, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v258, 8uLL)), v261), *(int8x16_t *)&STACK[0x570]);
  v265 = (int64x2_t)veorq_s8((int8x16_t)v264, vorrq_s8((int8x16_t)vshlq_n_s64(v261, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v261, 0x3DuLL)));
  v266 = (int64x2_t)veorq_s8((int8x16_t)v263, vorrq_s8((int8x16_t)vshlq_n_s64(v260, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v260, 0x3DuLL)));
  v267 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v263, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v263, 8uLL)), v266);
  v268 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v264, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v264, 8uLL)), v265);
  v269 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x740], v267), (int64x2_t)vorrq_s8(v267, *(int8x16_t *)&STACK[0x790]))), *(int8x16_t *)&STACK[0x730]);
  v270 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x740], v268), (int64x2_t)vorrq_s8(v268, *(int8x16_t *)&STACK[0x790]))), *(int8x16_t *)&STACK[0x730]);
  v271 = vorrq_s8((int8x16_t)vshlq_n_s64(v266, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v266, 0x3DuLL));
  v272 = (int64x2_t)veorq_s8((int8x16_t)v270, vorrq_s8((int8x16_t)vshlq_n_s64(v265, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v265, 0x3DuLL)));
  v273 = (int64x2_t)veorq_s8((int8x16_t)v269, v271);
  v274 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v269, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v269, 8uLL)), v273);
  v275 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v270, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v270, 8uLL)), v272);
  v276 = *(int64x2_t *)&STACK[0x4A0];
  v277 = *(int8x16_t *)&STACK[0x490];
  v278 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v275, v275), *(int8x16_t *)&STACK[0x710]), v275), *(int64x2_t *)&STACK[0x4A0]), *(int8x16_t *)&STACK[0x490]);
  v279 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v274, v274), *(int8x16_t *)&STACK[0x710]), v274), *(int64x2_t *)&STACK[0x4A0]), *(int8x16_t *)&STACK[0x490]);
  v280 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v278, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v278, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v278, vorrq_s8((int8x16_t)vshlq_n_s64(v272, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v272, 0x3DuLL))));
  v281 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v279, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v279, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v279, vorrq_s8((int8x16_t)vshlq_n_s64(v273, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v273, 0x3DuLL))));
  v282 = *(int8x16_t *)&STACK[0x480];
  v283 = *(int64x2_t *)&STACK[0x470];
  v284 = *(int64x2_t *)&STACK[0x540];
  v285 = (int8x16_t)vaddq_s64(v232, *(int64x2_t *)&STACK[0x540]);
  v286 = *(int8x16_t *)&STACK[0x460];
  v416.val[3] = veorq_s8(*(int8x16_t *)&STACK[0x3C0], (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v280, *(int8x16_t *)&STACK[0x480]), (int64x2_t)vorrq_s8(v280, *(int8x16_t *)&STACK[0x470])), *(int64x2_t *)&STACK[0x470]), *(int8x16_t *)&STACK[0x460]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v227, 3uLL), v210))));
  v416.val[2] = veorq_s8(*(int8x16_t *)&STACK[0x3E0], (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v281, *(int8x16_t *)&STACK[0x480]), (int64x2_t)vorrq_s8(v281, *(int8x16_t *)&STACK[0x470])), *(int64x2_t *)&STACK[0x470]), *(int8x16_t *)&STACK[0x460]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v190, 3uLL), v210))));
  v287 = (int64x2_t)veorq_s8(v285, *(int8x16_t *)&STACK[0x530]);
  v288 = (int64x2_t)veorq_s8(v285, *(int8x16_t *)&STACK[0x520]);
  v289 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v287, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v287, 8uLL)), v288);
  v290 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v289, v289), *(int8x16_t *)&STACK[0x510]), v289), *(int64x2_t *)&STACK[0x500]), *(int8x16_t *)&STACK[0x4F0]);
  v291 = (int64x2_t)veorq_s8((int8x16_t)v290, vorrq_s8((int8x16_t)vshlq_n_s64(v288, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v288, 0x3DuLL)));
  v292 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v290, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v290, 8uLL)), v291);
  v293 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v292, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v292, v292), *(int8x16_t *)&STACK[0x4E0])), *(int64x2_t *)&STACK[0x4D0]), *(int8x16_t *)&STACK[0x4C0]);
  v294 = (int64x2_t)veorq_s8((int8x16_t)v293, vorrq_s8((int8x16_t)vshlq_n_s64(v291, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v291, 0x3DuLL)));
  v295 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v293, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v293, 8uLL)), v294), *(int8x16_t *)&STACK[0x750]);
  v296 = (int64x2_t)veorq_s8((int8x16_t)v295, vorrq_s8((int8x16_t)vshlq_n_s64(v294, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v294, 0x3DuLL)));
  v297 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v295, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v295, 8uLL)), v296), *(int8x16_t *)&STACK[0x570]);
  v298 = (int64x2_t)veorq_s8((int8x16_t)v297, vorrq_s8((int8x16_t)vshlq_n_s64(v296, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v296, 0x3DuLL)));
  v299 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v297, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v297, 8uLL)), v298);
  v300 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x740], v299), (int64x2_t)vorrq_s8(v299, *(int8x16_t *)&STACK[0x790]))), *(int8x16_t *)&STACK[0x730]);
  v301 = (int64x2_t)veorq_s8((int8x16_t)v300, vorrq_s8((int8x16_t)vshlq_n_s64(v298, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v298, 0x3DuLL)));
  v302 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v300, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v300, 8uLL)), v301);
  v303 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v302, v302), *(int8x16_t *)&STACK[0x710]), v302), *(int64x2_t *)&STACK[0x4A0]), *(int8x16_t *)&STACK[0x490]);
  v304 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v303, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v303, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v303, vorrq_s8((int8x16_t)vshlq_n_s64(v301, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v301, 0x3DuLL))));
  v305 = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x380], *(int64x2_t *)&STACK[0x540]);
  v416.val[1] = veorq_s8(*(int8x16_t *)&STACK[0x410], (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v304, *(int8x16_t *)&STACK[0x480]), (int64x2_t)vorrq_s8(v304, *(int8x16_t *)&STACK[0x470])), *(int64x2_t *)&STACK[0x470]), *(int8x16_t *)&STACK[0x460]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x370], 3uLL), v210))));
  v306 = (int64x2_t)veorq_s8(v305, *(int8x16_t *)&STACK[0x530]);
  v307 = *(int8x16_t *)&STACK[0x530];
  v308 = (int64x2_t)veorq_s8(v305, *(int8x16_t *)&STACK[0x520]);
  v309 = *(int8x16_t *)&STACK[0x520];
  v310 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v306, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v306, 8uLL)), v308);
  v311 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v310, v310), *(int8x16_t *)&STACK[0x510]), v310), *(int64x2_t *)&STACK[0x500]), *(int8x16_t *)&STACK[0x4F0]);
  v312 = *(int8x16_t *)&STACK[0x4F0];
  v313 = (int64x2_t)veorq_s8((int8x16_t)v311, vorrq_s8((int8x16_t)vshlq_n_s64(v308, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v308, 0x3DuLL)));
  v314 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v311, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v311, 8uLL)), v313);
  v315 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v314, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v314, v314), *(int8x16_t *)&STACK[0x4E0])), *(int64x2_t *)&STACK[0x4D0]), *(int8x16_t *)&STACK[0x4C0]);
  v316 = (int64x2_t)veorq_s8((int8x16_t)v315, vorrq_s8((int8x16_t)vshlq_n_s64(v313, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v313, 0x3DuLL)));
  v317 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v315, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v315, 8uLL)), v316), *(int8x16_t *)&STACK[0x750]);
  v318 = (int64x2_t)veorq_s8((int8x16_t)v317, vorrq_s8((int8x16_t)vshlq_n_s64(v316, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v316, 0x3DuLL)));
  v319 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v317, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v317, 8uLL)), v318), *(int8x16_t *)&STACK[0x570]);
  v320 = (int64x2_t)veorq_s8((int8x16_t)v319, vorrq_s8((int8x16_t)vshlq_n_s64(v318, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v318, 0x3DuLL)));
  v321 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v319, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v319, 8uLL)), v320);
  v322 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x740], v321), (int64x2_t)vorrq_s8(v321, *(int8x16_t *)&STACK[0x790]))), *(int8x16_t *)&STACK[0x730]);
  v323 = (int64x2_t)veorq_s8((int8x16_t)v322, vorrq_s8((int8x16_t)vshlq_n_s64(v320, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v320, 0x3DuLL)));
  v324 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v322, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v322, 8uLL)), v323);
  v325 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v324, v324), *(int8x16_t *)&STACK[0x710]), v324), *(int64x2_t *)&STACK[0x4A0]), *(int8x16_t *)&STACK[0x490]);
  v326 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x3B0], *(int8x16_t *)&STACK[0x770]);
  v327 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x3D0], *(int8x16_t *)&STACK[0x770]);
  v328 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x400], *(int8x16_t *)&STACK[0x770]);
  v329 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x3F0], *(int8x16_t *)&STACK[0x770]);
  v330 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v325, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v325, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v325, vorrq_s8((int8x16_t)vshlq_n_s64(v323, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v323, 0x3DuLL))));
  v416.val[0] = veorq_s8(*(int8x16_t *)&STACK[0x420], (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v330, *(int8x16_t *)&STACK[0x480]), (int64x2_t)vorrq_s8(v330, *(int8x16_t *)&STACK[0x470])), *(int64x2_t *)&STACK[0x470]), *(int8x16_t *)&STACK[0x460]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x390], 3uLL), v210))));
  v331 = (int8x16_t)vaddq_s64(vaddq_s64(v328, v328), *(int64x2_t *)&STACK[0x3A0]);
  v332 = (int8x16_t)vaddq_s64(vaddq_s64(v329, v329), *(int64x2_t *)&STACK[0x3A0]);
  v333 = *(int8x16_t *)&STACK[0x7A0];
  v334 = vsubq_s64(v326, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v326, v326), *(int64x2_t *)&STACK[0x3A0]), *(int8x16_t *)&STACK[0x7A0]));
  *(int64x2_t *)&STACK[0x3F0] = vsubq_s64(v327, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v327, v327), *(int64x2_t *)&STACK[0x3A0]), *(int8x16_t *)&STACK[0x7A0]));
  *(int64x2_t *)&STACK[0x400] = v334;
  v335 = (int8x16_t)vaddq_s64(vsubq_s64(v329, (int64x2_t)vandq_s8(v332, v333)), v284);
  v336 = (int8x16_t)vaddq_s64(vsubq_s64(v328, (int64x2_t)vandq_s8(v331, v333)), v284);
  *(_OWORD *)&STACK[0x410] = xmmword_1CF37DAC0;
  *(int8x16_t *)&STACK[0x420] = vqtbl4q_s8(v416, (int8x16_t)xmmword_1CF37DAC0);
  v337 = v307;
  v338 = (int64x2_t)veorq_s8(v336, v307);
  v339 = (int64x2_t)veorq_s8(v335, v307);
  v340 = (int64x2_t)veorq_s8(v335, v309);
  v341 = (int64x2_t)veorq_s8(v336, v309);
  v342 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v338, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v338, 8uLL)), v341);
  v343 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v339, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v339, 8uLL)), v340);
  v344 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v343, v343), v241), v343), v242), v312);
  v345 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v342, v342), v241), v342), v242), v312);
  v346 = (int64x2_t)veorq_s8((int8x16_t)v345, vorrq_s8((int8x16_t)vshlq_n_s64(v341, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v341, 0x3DuLL)));
  v347 = (int64x2_t)veorq_s8((int8x16_t)v344, vorrq_s8((int8x16_t)vshlq_n_s64(v340, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v340, 0x3DuLL)));
  v348 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v344, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v344, 8uLL)), v347);
  v349 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v345, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v345, 8uLL)), v346);
  v350 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v349, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v349, v349), v250)), v251), v252);
  v351 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v348, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v348, v348), v250)), v251), v252);
  v352 = (int64x2_t)veorq_s8((int8x16_t)v351, vorrq_s8((int8x16_t)vshlq_n_s64(v347, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v347, 0x3DuLL)));
  v353 = (int64x2_t)veorq_s8((int8x16_t)v350, vorrq_s8((int8x16_t)vshlq_n_s64(v346, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v346, 0x3DuLL)));
  v354 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v351, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v351, 8uLL)), v352), v257);
  v355 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v350, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v350, 8uLL)), v353), v257);
  v356 = (int64x2_t)veorq_s8((int8x16_t)v355, vorrq_s8((int8x16_t)vshlq_n_s64(v353, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v353, 0x3DuLL)));
  v357 = (int64x2_t)veorq_s8((int8x16_t)v354, vorrq_s8((int8x16_t)vshlq_n_s64(v352, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v352, 0x3DuLL)));
  v358 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v355, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v355, 8uLL)), v356), v262);
  v359 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v354, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v354, 8uLL)), v357), v262);
  v360 = (int64x2_t)veorq_s8((int8x16_t)v359, vorrq_s8((int8x16_t)vshlq_n_s64(v357, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v357, 0x3DuLL)));
  v361 = (int64x2_t)veorq_s8((int8x16_t)v358, vorrq_s8((int8x16_t)vshlq_n_s64(v356, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v356, 0x3DuLL)));
  v362 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v358, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v358, 8uLL)), v361);
  v363 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v359, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v359, 8uLL)), v360);
  v364 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x740], v362), (int64x2_t)vorrq_s8(v362, *(int8x16_t *)&STACK[0x790]))), *(int8x16_t *)&STACK[0x730]);
  v365 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x740], v363), (int64x2_t)vorrq_s8(v363, *(int8x16_t *)&STACK[0x790]))), *(int8x16_t *)&STACK[0x730]);
  v366 = (int64x2_t)veorq_s8((int8x16_t)v365, vorrq_s8((int8x16_t)vshlq_n_s64(v360, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v360, 0x3DuLL)));
  v367 = (int64x2_t)veorq_s8((int8x16_t)v364, vorrq_s8((int8x16_t)vshlq_n_s64(v361, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v361, 0x3DuLL)));
  v368 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v364, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v364, 8uLL)), v367);
  v369 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v365, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v365, 8uLL)), v366);
  v370 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v369, v369), *(int8x16_t *)&STACK[0x710]), v369), v276), v277);
  v371 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v368, v368), *(int8x16_t *)&STACK[0x710]), v368), v276), v277);
  v372 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v370, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v370, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v370, vorrq_s8((int8x16_t)vshlq_n_s64(v366, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v366, 0x3DuLL))));
  v373 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v371, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v371, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v371, vorrq_s8((int8x16_t)vshlq_n_s64(v367, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v367, 0x3DuLL))));
  v374 = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x3F0], v284);
  v416.val[2] = veorq_s8(*(int8x16_t *)&STACK[0x430], (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v372, v282), (int64x2_t)vorrq_s8(v372, (int8x16_t)v283)), v283), v286), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x6F0], 3uLL), v210))));
  v416.val[1] = veorq_s8(*(int8x16_t *)&STACK[0x440], (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v373, v282), (int64x2_t)vorrq_s8(v373, (int8x16_t)v283)), v283), v286), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x700], 3uLL), v210))));
  v375 = (int64x2_t)veorq_s8(v374, v337);
  v376 = (int64x2_t)veorq_s8(v374, v309);
  v377 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v375, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v375, 8uLL)), v376);
  v378 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v377, v377), v241), v377), v242), v312);
  v379 = (int64x2_t)veorq_s8((int8x16_t)v378, vorrq_s8((int8x16_t)vshlq_n_s64(v376, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v376, 0x3DuLL)));
  v380 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v378, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v378, 8uLL)), v379);
  v381 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v380, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v380, v380), v250)), v251), v252);
  v382 = (int64x2_t)veorq_s8((int8x16_t)v381, vorrq_s8((int8x16_t)vshlq_n_s64(v379, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v379, 0x3DuLL)));
  v383 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v381, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v381, 8uLL)), v382), v257);
  v384 = (int64x2_t)veorq_s8((int8x16_t)v383, vorrq_s8((int8x16_t)vshlq_n_s64(v382, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v382, 0x3DuLL)));
  v385 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v383, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v383, 8uLL)), v384), v262);
  v386 = (int64x2_t)veorq_s8((int8x16_t)v385, vorrq_s8((int8x16_t)vshlq_n_s64(v384, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v384, 0x3DuLL)));
  v387 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v385, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v385, 8uLL)), v386);
  v388 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x740], v387), (int64x2_t)vorrq_s8(v387, *(int8x16_t *)&STACK[0x790]))), *(int8x16_t *)&STACK[0x730]);
  v389 = (int64x2_t)veorq_s8((int8x16_t)v388, vorrq_s8((int8x16_t)vshlq_n_s64(v386, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v386, 0x3DuLL)));
  v390 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v388, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v388, 8uLL)), v389);
  v391 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v390, v390), *(int8x16_t *)&STACK[0x710]), v390), v276), v277);
  v392 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v391, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v391, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v391, vorrq_s8((int8x16_t)vshlq_n_s64(v389, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v389, 0x3DuLL))));
  v393 = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x400], v284);
  v416.val[0] = veorq_s8(*(int8x16_t *)&STACK[0x6A0], (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v392, v282), (int64x2_t)vorrq_s8(v392, (int8x16_t)v283)), v283), v286), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x450], 3uLL), v210))));
  v394 = (int64x2_t)veorq_s8(v393, v337);
  v395 = (int64x2_t)veorq_s8(v393, v309);
  v396 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v394, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v394, 8uLL)), v395);
  v397 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v396, v396), v241), v396), v242), v312);
  v398 = (int64x2_t)veorq_s8((int8x16_t)v397, vorrq_s8((int8x16_t)vshlq_n_s64(v395, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v395, 0x3DuLL)));
  v399 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v397, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v397, 8uLL)), v398);
  v400 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v399, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v399, v399), v250)), v251), v252);
  v401 = (int64x2_t)veorq_s8((int8x16_t)v400, vorrq_s8((int8x16_t)vshlq_n_s64(v398, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v398, 0x3DuLL)));
  v402 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v400, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v400, 8uLL)), v401), v257);
  v403 = (int64x2_t)veorq_s8((int8x16_t)v402, vorrq_s8((int8x16_t)vshlq_n_s64(v401, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v401, 0x3DuLL)));
  v404 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v402, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v402, 8uLL)), v403), v262);
  v405 = (int64x2_t)veorq_s8((int8x16_t)v404, vorrq_s8((int8x16_t)vshlq_n_s64(v403, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v403, 0x3DuLL)));
  v406 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v404, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v404, 8uLL)), v405);
  v407 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x740], v406), (int64x2_t)vorrq_s8(v406, *(int8x16_t *)&STACK[0x790]))), *(int8x16_t *)&STACK[0x730]);
  v408 = (int64x2_t)veorq_s8((int8x16_t)v407, vorrq_s8((int8x16_t)vshlq_n_s64(v405, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v405, 0x3DuLL)));
  v409 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v407, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v407, 8uLL)), v408);
  v410 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v409, v409), *(int8x16_t *)&STACK[0x710]), v409), v276), v277);
  v411 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v410, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v410, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v410, vorrq_s8((int8x16_t)vshlq_n_s64(v408, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v408, 0x3DuLL))));
  v412 = veorq_s8(*(int8x16_t *)&STACK[0x6E0], (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v411, v282), (int64x2_t)vorrq_s8(v411, (int8x16_t)v283)), v283), v286), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x6D0], 3uLL), v210))));
  v413 = *(int8x16_t *)&STACK[0x420];
  v413.i64[1] = vqtbl4q_s8(v416, *(int8x16_t *)&STACK[0x410]).u64[0];
  v414 = vrev64q_s8(v413);
  *(int8x16_t *)(v207 - 5) = veorq_s8(vextq_s8(v414, v414, 8uLL), *(int8x16_t *)(v8.i64[0] - 15));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((8 * (LODWORD(STACK[0x360]) != -16)) | (32 * (LODWORD(STACK[0x360]) != -16))) ^ ((v3 | 0x148) + 46)))
                            - 4))();
}

void sub_1CF348F94()
{
  JUMPOUT(0x1CF347360);
}

uint64_t sub_1CF349020()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t (*v62)(uint64_t);
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;

  v3 = LODWORD(STACK[0x78C]);
  v4 = *(_BYTE **)(STACK[0x7F8] - 0x23120F4208F8DC5);
  v5 = __ROR8__(v4 + 10, 8);
  v6 = ((2 * (v5 & 0xF8FFFFFFFFFFFFFFLL) + 0x55E7EF06772DD764) & 0x90B16B7D1B79A6A2)
     - (v5 & 0xF8FFFFFFFFFFFFFFLL)
     + 0xCB352BE36AC40FCLL;
  v7 = __ROR8__(v6 ^ 0xE2C48E423C26A02, 8);
  v6 ^= 0x59B3F4FDFF753797uLL;
  v8 = (((2 * (v7 + v6)) | 0x17FE78BC45B94652) - (v7 + v6) + 0x7400C3A1DD235CD7) ^ 0xDB2BECBF1E61D25ELL;
  v9 = v8 ^ __ROR8__(v6, 61);
  v10 = __ROR8__(v8, 8) + v9;
  v11 = v10 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v9, 61);
  *((_QWORD *)&v12 + 1) = v10;
  *(_QWORD *)&v12 = v10 ^ 0xE5D7DAAEED85A300;
  v13 = (((2 * ((v12 >> 8) + v11)) | 0x706FEFFD119E6122) - ((v12 >> 8) + v11) - 0x3837F7FE88CF3091) ^ 0xB6B26E85706C39BCLL;
  v14 = v13 ^ __ROR8__(v11, 61);
  *(_QWORD *)&v12 = __ROR8__(v13, 8);
  v15 = __ROR8__((((v12 + v14) | 0xE7F54DC4843AFB99) - ((v12 + v14) | 0x180AB23B7BC50466) + 0x180AB23B7BC50466) ^ 0x2AFC52D3441525C8, 8);
  v16 = (((v12 + v14) | 0xE7F54DC4843AFB99) - ((v12 + v14) | 0x180AB23B7BC50466) + 0x180AB23B7BC50466) ^ 0x2AFC52D3441525C8 ^ __ROR8__(v14, 61);
  v17 = (v15 + v16) ^ 0x628ABC52894BE762;
  v18 = v17 ^ __ROR8__(v16, 61);
  v19 = (__ROR8__(v17, 8) + v18) ^ 0x5AC09C033F8B2761;
  v20 = __ROR8__(v19, 8) + (v19 ^ __ROR8__(v18, 61));
  *(_QWORD *)&v12 = __ROR8__(v4 + 11, 8);
  v21 = (v12 & 0xF8FFFFFFFFFFFFFFLL)
      - ((2 * (v12 & 0xF8FFFFFFFFFFFFFFLL) + 0x15E7EF06772DD764) & 0x355AB94138DC40D0)
      + 0x45A15423D8050C1ALL;
  *(_QWORD *)&v12 = __ROR8__(v21 ^ 0x23265E05CDEF66C4, 8);
  v21 ^= 0x74B9E21C11583B51uLL;
  v22 = (-2 - ((~(v12 + v21) | 0xC11DED4DEE4C92CCLL) + ((v12 + v21) | 0x3EE212B211B36D33))) ^ 0x91C93DACD2F1E3BBLL;
  v23 = v22 ^ __ROR8__(v21, 61);
  v24 = __ROR8__(v22, 8) + v23;
  v25 = v24 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v23, 61);
  *((_QWORD *)&v12 + 1) = v24;
  *(_QWORD *)&v12 = v24 ^ 0xE5D7DAAEED85A300;
  v26 = (-2 - ((~((v12 >> 8) + v25) | 0x77956CCF89056578) + (((v12 >> 8) + v25) | 0x886A933076FA9A87))) ^ 0xF910F5B471A66C55;
  v27 = v26 ^ __ROR8__(v25, 61);
  v28 = (__ROR8__(v26, 8) + v27) ^ 0xCD091F17C02FDE51;
  v29 = v28 ^ __ROR8__(v27, 61);
  *(_QWORD *)&v12 = __ROR8__(v28, 8);
  v30 = __ROR8__((v12 + v29 - ((2 * (v12 + v29)) & 0xA9BB3F9CB54546FALL) - 0x2B226031A55D5C83) ^ 0xB657239CD3E9441FLL, 8);
  v31 = (v12 + v29 - ((2 * (v12 + v29)) & 0xA9BB3F9CB54546FALL) - 0x2B226031A55D5C83) ^ 0xB657239CD3E9441FLL ^ __ROR8__(v29, 61);
  v32 = (((2 * ((v30 + v31) ^ 0x42D0978BF5AB05F8)) & 0x28E8EE91FE510F3CLL)
       - ((v30 + v31) ^ 0x42D0978BF5AB05F8)
       - 0x14747748FF28879FLL) ^ 0xF39B833FCAF75AF8;
  v33 = v32 ^ __ROR8__(v31, 61);
  v34 = __ROR8__(v32, 8);
  v35 = (((unint64_t)(v4 + 12) >> 8) - 0x550C087CC469144ELL + ((unint64_t)(v4 + 12) >> 3 << 59)) & 0xF9FFFFFFFFFFFFFFLL;
  *(_QWORD *)&v12 = __ROR8__(v35 ^ 0xBB8B02A5518146ACLL, 8);
  v35 ^= 0xEC14BEBC8D361B39;
  v36 = (-2 - ((~(v12 + v35) | 0xD61356B240505818) + ((v12 + v35) | 0x29ECA94DBFAFA7E7))) ^ 0x86C786537CED296FLL;
  v37 = v36 ^ __ROR8__(v35, 61);
  *(_QWORD *)&v12 = __ROR8__(v36, 8);
  v38 = (v12 + v37 - ((2 * (v12 + v37)) & 0xA73BF08C7129AAFALL) - 0x2C6207B9C76B2A83) ^ 0x364A22E8D511767DLL;
  v39 = v38 ^ __ROR8__(v37, 61);
  v40 = (__ROR8__(v38, 8) + v39) ^ 0x8E85997BF8A3092DLL;
  v41 = v40 ^ __ROR8__(v39, 61);
  v42 = (__ROR8__(v40, 8) + v41) ^ 0xCD091F17C02FDE51;
  v43 = v42 ^ __ROR8__(v41, 61);
  v44 = (((v0 + 213) | 8u) - 0x14E5BDECBE33BC88) ^ *(_QWORD *)(v2 + 808);
  *(_QWORD *)&v12 = __ROR8__(v4 + 13, 8);
  v45 = (((((2 * v20) & 0x5BA874AF5D38F1CELL) - v20 + 0x522BC5A851638718) ^ 0x492014307A3A4769uLL) >> (8 * (((_BYTE)v4 + 10) & 7u))) ^ HIBYTE(v44);
  v46 = ((0x150C087CC469144DLL - (v12 & 0xF8FFFFFFFFFFFFFFLL)) & 0x28C891185D033579)
      + (v12 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x550C087CC469144ELL
      - (((v12 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL) & 0x28C891185D033579);
  v47 = v46 ^ 0x914393BD0C8273D5;
  v46 ^= 0xC6DC2FA4D0352E40;
  v48 = (__ROR8__(v47, 8) + v46) ^ 0x50D4D0E13CBD7177;
  v49 = v48 ^ __ROR8__(v46, 61);
  *((_QWORD *)&v12 + 1) = __ROR8__(v48, 8) + v49;
  *(_QWORD *)&v12 = *((_QWORD *)&v12 + 1) ^ 0xE5D7DAAEED85A300;
  v50 = *((_QWORD *)&v12 + 1) ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v49, 61);
  v51 = (__ROR8__(v42, 8) + v43) ^ 0x628ABC52894BE762;
  v52 = v51 ^ __ROR8__(v43, 61);
  v53 = (__ROR8__(v51, 8) + v52) ^ 0x5AC09C033F8B2761;
  v54 = ((v12 >> 8) + v50) ^ 0x8E85997BF8A3092DLL;
  v55 = v54 ^ __ROR8__(v50, 61);
  *(_QWORD *)&v12 = __ROR8__(v54, 8);
  v56 = (((v12 + v55) | 0x44E79080D479A43CLL) - ((v12 + v55) | 0xBB186F7F2B865BC3) - 0x44E79080D479A43DLL) ^ 0x89EE8F9714567A6DLL;
  v57 = v56 ^ __ROR8__(v55, 61);
  *(_QWORD *)&v12 = __ROR8__(v56, 8);
  v58 = (v12 + v57 - ((2 * (v12 + v57)) & 0x52EBE49C49841E16) - 0x568A0DB1DB3DF0F5) ^ 0xCBFF4E1CAD89E869;
  v59 = v58 ^ __ROR8__(v57, 61);
  *(_QWORD *)&v12 = __ROR8__(v58, 8);
  v60 = (((2 * (v12 + v59)) & 0x2CE91245637A82CELL) - (v12 + v59) - 0x16748922B1BD4168) ^ 0xB34BEADE71C999F9;
  v61 = v60 ^ __ROR8__(v59, 61);
  *(_QWORD *)&v12 = __ROR8__(v60, 8);
  v62 = *(uint64_t (**)(uint64_t))(v1 + 8 * v0);
  v4[10] = v45 ^ 0xFB;
  v4[11] = (((((2 * (v34 + v33)) & 0x3AD738EFF2AEAA6ELL) - (v34 + v33) - 0x1D6B9C77F9575538) ^ 0xF99FB2102DF16AB9) >> (8 * (((_BYTE)v4 + 11) & 7u))) ^ BYTE6(v44) ^ 0x58;
  v4[12] = (((__ROR8__(v53, 8) + (v53 ^ __ROR8__(v52, 61))) ^ 0x1B0BD1982B59C071uLL) >> (8 * (((_BYTE)v4 + 12) & 7u))) ^ BYTE5(v44) ^ 0x26;
  v4[13] = ((((((_QWORD)v12 + v61) | 0x65D87B9400A7D7E8)
            - (((_QWORD)v12 + v61) | 0x9A27846BFF582817)
            - 0x65D87B9400A7D7E9) ^ 0x7ED3AA0C2BFE1799) >> (8 * (((_BYTE)v4 + 13) & 7u))) ^ BYTE4(v44) ^ 0x67;
  v63 = (__ROR8__(v4 + 14, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL;
  v64 = v63 ^ 0xB98B02A5518146ACLL;
  v63 ^= 0xEE14BEBC8D361B39;
  *(_QWORD *)&v12 = __ROR8__(v64, 8);
  v65 = __ROR8__((-2 - ((~(v12 + v63) | 0xE9A79F6B661C85EELL) + ((v12 + v63) | 0x1658609499E37A11))) ^ 0xB9734F8A5AA1F499, 8);
  v66 = (-2 - ((~(v12 + v63) | 0xE9A79F6B661C85EELL) + ((v12 + v63) | 0x1658609499E37A11))) ^ 0xB9734F8A5AA1F499 ^ __ROR8__(v63, 61);
  v67 = (-2 - ((~(v65 + v66) | 0x4D951D4085C79FFCLL) + ((v65 + v66) | 0xB26AE2BF7A386003))) ^ 0xA842C7EE68423CFCLL;
  v68 = v67 ^ __ROR8__(v66, 61);
  *(_QWORD *)&v12 = __ROR8__(v67, 8);
  v69 = (v12 + v68 - ((2 * (v12 + v68)) & 0x21DC1477A93D02AELL) - 0x6F11F5C42B617EA9) ^ 0x1E6B93402C3D887ALL;
  v70 = v69 ^ __ROR8__(v68, 61);
  v71 = (__ROR8__(v69, 8) + v70) ^ 0xCD091F17C02FDE51;
  v72 = v71 ^ __ROR8__(v70, 61);
  v73 = (__ROR8__(v71, 8) + v72) ^ 0x628ABC52894BE762;
  v74 = v73 ^ __ROR8__(v72, 61);
  *(_QWORD *)&v12 = __ROR8__(v73, 8);
  v75 = (((v12 + v74) ^ 0xDA4A082A2E95835ALL)
       - ((2 * ((v12 + v74) ^ 0xDA4A082A2E95835ALL)) & 0xC06B33C43F36BFCLL)
       + 0x603599E21F9B5FELL) ^ 0x8689CDB730E711C5;
  v76 = __ROR8__(v75, 8);
  *(_QWORD *)&v12 = __ROR8__(v74, 61);
  v4[14] = (((((v76 + (v75 ^ (unint64_t)v12)) | 0x66A3B2E4FFC0348)
            - ((v76 + (v75 ^ (unint64_t)v12)) | 0xF995C4D1B003FCB7)
            - 0x66A3B2E4FFC0349) ^ 0x1D61EAB664A5C339) >> (8 * (((_BYTE)v4 + 14) & 7u))) ^ BYTE3(v44) ^ 0xB8;
  v77 = (((unint64_t)(v4 + 15) >> 8) - 0x550C087CC469144ELL + ((unint64_t)(v4 + 15) >> 3 << 59)) & 0xF9FFFFFFFFFFFFFFLL;
  v78 = v77 ^ 0xBB8B02A5518146ACLL;
  v77 ^= 0xEC14BEBC8D361B39;
  *(_QWORD *)&v12 = __ROR8__(v78, 8);
  v79 = (((2 * (v12 + v77)) & 0x816ACA45F412BB72) - (v12 + v77) + 0x3F4A9ADD05F6A246) ^ 0x6F9E4A3C394BD331;
  v80 = v79 ^ __ROR8__(v77, 61);
  *(_QWORD *)&v12 = __ROR8__(v79, 8);
  v81 = (((v12 + v80) ^ 0x2692AA20E73CE799 | 0x9DC1EBBF7BCB2010)
       - ((v12 + v80) ^ 0x2692AA20E73CE799 | 0x623E14408434DFEFLL)
       + 0x623E14408434DFEFLL) ^ 0x5E849B3171726489;
  v82 = v81 ^ __ROR8__(v80, 61);
  *(_QWORD *)&v12 = __ROR8__(v81, 8);
  v83 = __ROR8__((((v12 + v82) ^ 0x919E5F45A3B0DF24)- ((2 * ((v12 + v82) ^ 0x919E5F45A3B0DF24)) & 0x371B0A0EEE8C1D3ELL)- 0x64727AF888B9F161) ^ 0x849643392C55D896, 8);
  v84 = (((v12 + v82) ^ 0x919E5F45A3B0DF24)
       - ((2 * ((v12 + v82) ^ 0x919E5F45A3B0DF24)) & 0x371B0A0EEE8C1D3ELL)
       - 0x64727AF888B9F161) ^ 0x849643392C55D896 ^ __ROR8__(v82, 61);
  v85 = (v83 + v84) ^ 0xCD091F17C02FDE51;
  v86 = v85 ^ __ROR8__(v84, 61);
  v87 = (__ROR8__(v85, 8) + v86) ^ 0x628ABC52894BE762;
  v88 = v87 ^ __ROR8__(v86, 61);
  *(_QWORD *)&v12 = __ROR8__(v87, 8);
  v89 = (-2 - ((~(v12 + v88) | 0xC967FA94AB04334ELL) + ((v12 + v88) | 0x3698056B54FBCCB1))) ^ 0x93A76697948F142FLL;
  v90 = v89 ^ __ROR8__(v88, 61);
  *(_QWORD *)&v12 = __ROR8__(v89, 8);
  v4[15] = (((-2 - ((~((_QWORD)v12 + v90) | 0x87F6A9D2E02A807ELL) + (((_QWORD)v12 + v90) | 0x7809562D1FD57F81))) ^ 0x9CFD784ACB73400FLL) >> (8 * (((_BYTE)v4 + 15) & 7u))) ^ BYTE2(v44) ^ 0x95;
  *(_QWORD *)&v12 = __ROR8__(v4 + 16, 8);
  v91 = -2
      - (((0x150C087CC469144DLL - (v12 & 0xF8FFFFFFFFFFFFFFLL)) | 0xD42E87D37243C3E6)
       + (((v12 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL) | 0x2BD1782C8DBC3C19));
  v92 = v91 ^ 0x6DA5857623C2854ALL;
  v91 ^= 0x3A3A396FFF75D8DFuLL;
  *(_QWORD *)&v12 = __ROR8__(v92, 8);
  v93 = __ROR8__((((v12 + v91) | 0x96F726EF6CD2AD87) - ((v12 + v91) | 0x6908D910932D5278) + 0x6908D910932D5278) ^ 0xC623F60E506FDCF0, 8);
  v94 = (((v12 + v91) | 0x96F726EF6CD2AD87) - ((v12 + v91) | 0x6908D910932D5278) + 0x6908D910932D5278) ^ 0xC623F60E506FDCF0 ^ __ROR8__(v91, 61);
  v95 = v93 + v94;
  v96 = (v93 + v94) ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v94, 61);
  *((_QWORD *)&v12 + 1) = v95;
  *(_QWORD *)&v12 = v95 ^ 0xE5D7DAAEED85A300;
  v97 = (-2 - ((~((v12 >> 8) + v96) | 0x3BD37CAD8A56413ELL) + (((v12 >> 8) + v96) | 0xC42C835275A9BEC1))) ^ 0xB556E5D672F54813;
  v98 = v97 ^ __ROR8__(v96, 61);
  v99 = (__ROR8__(v97, 8) + v98) ^ 0xCD091F17C02FDE51;
  v100 = v99 ^ __ROR8__(v98, 61);
  v101 = (__ROR8__(v99, 8) + v100) ^ 0x628ABC52894BE762;
  v102 = v101 ^ __ROR8__(v100, 61);
  v103 = (__ROR8__(v101, 8) + v102) ^ 0x5AC09C033F8B2761;
  v4[16] = (((__ROR8__(v103, 8) + (v103 ^ __ROR8__(v102, 61))) ^ 0x1B0BD1982B59C071uLL) >> (8 * (((_BYTE)v4 + 16) & 7u))) ^ BYTE1(v44) ^ 0xC0;
  v104 = (((unint64_t)(v4 + 17) >> 8) - 0x550C087CC469144ELL + ((unint64_t)(v4 + 17) >> 3 << 59)) ^ 0xF5E6268322329A2;
  v105 = ((2 * v104) & 0xB425A4BB16C91CCLL) - v104 - 0x5A12D25D8B648E7;
  v106 = (__ROR8__(v105 ^ 0x4C8BB21744EBD817, 8) + (v105 ^ 0x1B140E0E985C8582)) ^ 0x50D4D0E13CBD7177;
  *((_QWORD *)&v12 + 1) = v105 ^ 0x1B140E0E985C8582;
  *(_QWORD *)&v12 = v105;
  v107 = v106 ^ (v12 >> 61);
  v108 = __ROR8__(v106, 8) + v107;
  v109 = v108 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v107, 61);
  *((_QWORD *)&v12 + 1) = v108;
  *(_QWORD *)&v12 = v108 ^ 0xE5D7DAAEED85A300;
  v110 = __ROR8__(((v12 >> 8) + v109) ^ 0x8E85997BF8A3092DLL, 8);
  v111 = ((v12 >> 8) + v109) ^ 0x8E85997BF8A3092DLL ^ __ROR8__(v109, 61);
  v112 = (((2 * (v110 + v111)) | 0xC2F682CA4CC09A3CLL) - (v110 + v111) - 0x617B416526604D1ELL) ^ 0xAC725E72E64F934FLL;
  v113 = v112 ^ __ROR8__(v111, 61);
  *(_QWORD *)&v12 = __ROR8__(v112, 8);
  v114 = (((2 * (v12 + v113)) | 0xC157B57B1A348C68) - (v12 + v113) - 0x60ABDABD8D1A4634) ^ 0x22166EF0451A156;
  v115 = v114 ^ __ROR8__(v113, 61);
  *(_QWORD *)&v12 = __ROR8__(v114, 8);
  v116 = (((v12 + v115) | 0xD97D8D1C4B94792ALL) - ((v12 + v115) | 0x268272E3B46B86D5) + 0x268272E3B46B86D5) ^ 0x83BD111F741F5E4BLL;
  v4[17] = (((__ROR8__(v116, 8) + (v116 ^ __ROR8__(v115, 61))) ^ 0x1B0BD1982B59C071) >> (8 * (((_BYTE)v4 + 17) & 7u))) ^ v44 ^ 0x60;
  return v62(v3);
}

void sub_1CF349094()
{
  JUMPOUT(0x1CF3490B4);
}

uint64_t sub_1CF34A094()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((((2 * v0) ^ 0x2EA) + 1307957155) & 0xB20A277B) - 839)
                                     * ((v2 + v1 - 1920989819) < 8)) ^ v0)))();
}

uint64_t sub_1CF34A104@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1346
                                * (v1 - a1 - (v2 + 225) - (unint64_t)((v2 - 114) | 0x486u) + 3025 > 0xF)) ^ v2)))();
}

uint64_t sub_1CF34A144(uint64_t a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((13 * (a2 < (v2 ^ 0x4F7u) - 864)) ^ v2)) - 8))();
}

uint64_t sub_1CF34A178@<X0>(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int8x16_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t a17, int8x16_t a18, int8x16_t a19, int8x16_t a20,int64x2_t a21,int8x16_t a22,int8x16_t a23,int64x2_t a24,int8x16_t a25,int8x16_t a26,int64x2_t a27,int8x16_t a28,int8x16_t a29,int8x16_t a30,int64x2_t a31,int8x16_t a32,uint64_t a33,uint64_t a34,int8x16_t a35)
{
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int64x2_t v43;
  int64x2_t v44;
  int64x2_t v45;
  int64x2_t v46;
  int64x2_t v47;
  int64x2_t v48;
  int64x2_t v49;
  int64x2_t v50;
  int8x16_t v51;
  int8x16_t v52;
  int64x2_t v53;
  int64x2_t v54;
  int64x2_t v55;
  int64x2_t v56;
  int64x2_t v57;
  int64x2_t v58;
  int64x2_t v59;
  int64x2_t v60;
  int64x2_t v61;
  int64x2_t v62;
  int8x16_t v63;
  int8x16_t v64;
  int64x2_t v65;
  int64x2_t v66;
  int64x2_t v67;
  int64x2_t v68;
  int64x2_t v69;
  int64x2_t v70;
  int64x2_t v71;
  int64x2_t v72;
  int64x2_t v73;
  int64x2_t v74;
  int64x2_t v75;
  int64x2_t v76;
  int64x2_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int64x2_t v81;
  int64x2_t v82;
  int8x16_t v83;
  int8x16_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int8x16_t v87;
  int8x16_t v88;
  uint64x2_t v89;
  int64x2_t v90;
  int64x2_t v91;
  int64x2_t v92;
  int64x2_t v93;
  int64x2_t v94;
  int8x16_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int64x2_t v100;
  int64x2_t v101;
  int64x2_t v102;
  int64x2_t v103;
  int64x2_t v104;
  int8x16_t v105;
  int64x2_t v106;
  int8x16_t v107;
  int64x2_t v108;
  int64x2_t v109;
  int64x2_t v110;
  int64x2_t v111;
  int64x2_t v112;
  int8x16_t v113;
  int64x2_t v114;
  int64x2_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int64x2_t v121;
  int64x2_t v122;
  int8x16_t v123;
  int64x2_t v124;
  int8x16x4_t v126;

  v41 = v38 - 1920989827 + v37;
  v42 = (v41 + 7 - a2);
  v43.i64[0] = (v41 + 1 - a2) + a3 + 10;
  v43.i64[1] = (v41 - a2) + a3 + 10;
  v44.i64[0] = (v41 + 5 - a2) + a3 + 10;
  v44.i64[1] = (v41 + 4 - a2) + a3 + 10;
  v45.i64[0] = v42 + a3 + 10;
  v45.i64[1] = (v41 + 6 - a2) + a3 + 10;
  v46.i64[0] = (v41 + 3 - a2) + a3 + 10;
  v46.i64[1] = v36 - a2 + (v39 ^ 0xAFC00678) + a3 + 10;
  v47 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v46, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v46, 8uLL)), *(int8x16_t *)&STACK[0x770]), *(int64x2_t *)&STACK[0x580]), a35);
  v48 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v45, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v45, 8uLL)), *(int8x16_t *)&STACK[0x770]), *(int64x2_t *)&STACK[0x580]), a35);
  v49 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v44, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v44, 8uLL)), *(int8x16_t *)&STACK[0x770]), *(int64x2_t *)&STACK[0x580]), a35);
  v50 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v43, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v43, 8uLL)), *(int8x16_t *)&STACK[0x770]), *(int64x2_t *)&STACK[0x580]), a35);
  v51 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v49, v49), a32), v49), a31);
  v52 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v50, v50), a32), v50), a31);
  v53 = (int64x2_t)veorq_s8(v52, a30);
  v54 = (int64x2_t)veorq_s8(v51, a30);
  v55 = (int64x2_t)veorq_s8(v51, a29);
  v56 = (int64x2_t)veorq_s8(v52, a29);
  v57 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v53, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v53, 8uLL)), v56);
  v58 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v54, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v54, 8uLL)), v55);
  v59 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v58, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v58, v58), a28)), a27), a26);
  v60 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v57, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v57, v57), a28)), a27), a26);
  v61 = (int64x2_t)veorq_s8((int8x16_t)v60, vorrq_s8((int8x16_t)vshlq_n_s64(v56, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v56, 0x3DuLL)));
  v62 = (int64x2_t)veorq_s8((int8x16_t)v59, vorrq_s8((int8x16_t)vshlq_n_s64(v55, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v55, 0x3DuLL)));
  v63 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v59, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v59, 8uLL)), v62);
  v64 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v60, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v60, 8uLL)), v61);
  v65 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v63, a25), (int64x2_t)vorrq_s8(v63, (int8x16_t)a24)), a24), a23);
  v66 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v64, a25), (int64x2_t)vorrq_s8(v64, (int8x16_t)a24)), a24), a23);
  v67 = (int64x2_t)veorq_s8((int8x16_t)v66, vorrq_s8((int8x16_t)vshlq_n_s64(v61, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v61, 0x3DuLL)));
  v68 = (int64x2_t)veorq_s8((int8x16_t)v65, vorrq_s8((int8x16_t)vshlq_n_s64(v62, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v62, 0x3DuLL)));
  v69 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v66, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v66, 8uLL)), v67), *(int8x16_t *)&STACK[0x750]);
  v70 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v65, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v65, 8uLL)), v68), *(int8x16_t *)&STACK[0x750]);
  v71 = (int64x2_t)veorq_s8((int8x16_t)v70, vorrq_s8((int8x16_t)vshlq_n_s64(v68, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v68, 0x3DuLL)));
  v72 = (int64x2_t)veorq_s8((int8x16_t)v69, vorrq_s8((int8x16_t)vshlq_n_s64(v67, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v67, 0x3DuLL)));
  v73 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v70, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v70, 8uLL)), v71), *(int8x16_t *)&STACK[0x570]);
  v74 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v69, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v69, 8uLL)), v72), *(int8x16_t *)&STACK[0x570]);
  v75 = (int64x2_t)veorq_s8((int8x16_t)v74, vorrq_s8((int8x16_t)vshlq_n_s64(v72, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v72, 0x3DuLL)));
  v76 = (int64x2_t)veorq_s8((int8x16_t)v73, vorrq_s8((int8x16_t)vshlq_n_s64(v71, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v71, 0x3DuLL)));
  v77 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v73, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v73, 8uLL)), v76);
  v78 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v74, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v74, 8uLL)), v75);
  v79 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v78, v78), a22), v78), a21), a20);
  v80 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v77, v77), a22), v77), a21), a20);
  v81 = (int64x2_t)veorq_s8((int8x16_t)v80, vorrq_s8((int8x16_t)vshlq_n_s64(v76, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v76, 0x3DuLL)));
  v82 = (int64x2_t)veorq_s8((int8x16_t)v79, vorrq_s8((int8x16_t)vshlq_n_s64(v75, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v75, 0x3DuLL)));
  v83 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v79, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v79, 8uLL)), v82);
  v84 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v80, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v80, 8uLL)), v81);
  v85 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(a18, v83), (int64x2_t)vorrq_s8(v83, a19))), a17);
  v86 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(a18, v84), (int64x2_t)vorrq_s8(v84, a19))), a17);
  v87 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v48, v48), a32), v48), a31);
  v88 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v85, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v85, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v85, vorrq_s8((int8x16_t)vshlq_n_s64(v82, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v82, 0x3DuLL))));
  v89 = (uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v86, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v86, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v86, vorrq_s8((int8x16_t)vshlq_n_s64(v81, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v81, 0x3DuLL)))), *(int8x16_t *)&STACK[0x720]);
  v126.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8(v88, *(int8x16_t *)&STACK[0x720]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v43, 3uLL), a10)));
  v126.val[1] = (int8x16_t)vshlq_u64(v89, (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v44, 3uLL), a10)));
  v90 = (int64x2_t)veorq_s8(v87, a30);
  v91 = (int64x2_t)veorq_s8(v87, a29);
  v92 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v90, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 8uLL)), v91);
  v93 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v92, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v92, v92), a28)), a27), a26);
  v94 = (int64x2_t)veorq_s8((int8x16_t)v93, vorrq_s8((int8x16_t)vshlq_n_s64(v91, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v91, 0x3DuLL)));
  v95 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v93, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v93, 8uLL)), v94);
  v96 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v95, a25), (int64x2_t)vorrq_s8(v95, (int8x16_t)a24)), a24), a23);
  v97 = (int64x2_t)veorq_s8((int8x16_t)v96, vorrq_s8((int8x16_t)vshlq_n_s64(v94, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v94, 0x3DuLL)));
  v98 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v96, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v96, 8uLL)), v97), *(int8x16_t *)&STACK[0x750]);
  v99 = (int64x2_t)veorq_s8((int8x16_t)v98, vorrq_s8((int8x16_t)vshlq_n_s64(v97, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v97, 0x3DuLL)));
  v100 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v98, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v98, 8uLL)), v99), *(int8x16_t *)&STACK[0x570]);
  v101 = (int64x2_t)veorq_s8((int8x16_t)v100, vorrq_s8((int8x16_t)vshlq_n_s64(v99, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v99, 0x3DuLL)));
  v102 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v100, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v100, 8uLL)), v101);
  v103 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v102, v102), a22), v102), a21), a20);
  v104 = (int64x2_t)veorq_s8((int8x16_t)v103, vorrq_s8((int8x16_t)vshlq_n_s64(v101, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v101, 0x3DuLL)));
  v105 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v103, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v103, 8uLL)), v104);
  v106 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(a18, v105), (int64x2_t)vorrq_s8(v105, a19))), a17);
  v107 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v47, v47), a32), v47), a31);
  v126.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v106, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v106, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v106, vorrq_s8((int8x16_t)vshlq_n_s64(v104, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 0x3DuLL)))), *(int8x16_t *)&STACK[0x720]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v45, 3uLL), a10)));
  v108 = (int64x2_t)veorq_s8(v107, a30);
  v109 = (int64x2_t)veorq_s8(v107, a29);
  v110 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v108, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v108, 8uLL)), v109);
  v111 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v110, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v110, v110), a28)), a27), a26);
  v112 = (int64x2_t)veorq_s8((int8x16_t)v111, vorrq_s8((int8x16_t)vshlq_n_s64(v109, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v109, 0x3DuLL)));
  v113 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v111, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v111, 8uLL)), v112);
  v114 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v113, a25), (int64x2_t)vorrq_s8(v113, (int8x16_t)a24)), a24), a23);
  v115 = (int64x2_t)veorq_s8((int8x16_t)v114, vorrq_s8((int8x16_t)vshlq_n_s64(v112, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v112, 0x3DuLL)));
  v116 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v114, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v114, 8uLL)), v115), *(int8x16_t *)&STACK[0x750]);
  v117 = (int64x2_t)veorq_s8((int8x16_t)v116, vorrq_s8((int8x16_t)vshlq_n_s64(v115, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v115, 0x3DuLL)));
  v118 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v116, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v116, 8uLL)), v117), *(int8x16_t *)&STACK[0x570]);
  v119 = (int64x2_t)veorq_s8((int8x16_t)v118, vorrq_s8((int8x16_t)vshlq_n_s64(v117, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v117, 0x3DuLL)));
  v120 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v118, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v118, 8uLL)), v119);
  v121 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v120, v120), a22), v120), a21), a20);
  v122 = (int64x2_t)veorq_s8((int8x16_t)v121, vorrq_s8((int8x16_t)vshlq_n_s64(v119, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v119, 0x3DuLL)));
  v123 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v121, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v121, 8uLL)), v122);
  v124 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(a18, v123), (int64x2_t)vorrq_s8(v123, a19))), a17);
  v126.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v124, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v124, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v124, vorrq_s8((int8x16_t)vshlq_n_s64(v122, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v122, 0x3DuLL)))), *(int8x16_t *)&STACK[0x720]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v46, 3uLL), a10)));
  *(int8x8_t *)(v42 + a3 + 3) = veor_s8(vrev64_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v126, *(int8x16_t *)&STACK[0x6C0])), *(int8x8_t *)(v35 - 7 + v42));
  return ((uint64_t (*)(void))(*(_QWORD *)(v40 + 8 * ((1079 * (8 - (a1 & 0xFFFFFFF8) == -a2)) ^ v39)) - 4))();
}

void sub_1CF34A884()
{
  JUMPOUT(0x1CF34A1C0);
}

uint64_t sub_1CF34A88C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((238 * (((v6 == v4) ^ (a4 + 12)) & 1)) ^ a4))
                            - 12))();
}

uint64_t sub_1CF34A92C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((121 * ((v0 + 904) ^ 0x4F0) + ((v0 + 226) ^ 0x2CB))
                                          * (LODWORD(STACK[0x2D0]) == LODWORD(STACK[0x2CC]))) ^ (v0 + 904)))
                            - 12))();
}

uint64_t sub_1CF34A9C0(uint64_t a1, char a2)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((a2 & 8) == 0) ^ (v2 + 30)) & 1) * (((4 * v2) ^ 0x8C8) + 1153)) ^ v2)))();
}

uint64_t sub_1CF34A9F4@<X0>(int a1@<W1>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int64x2_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64x2_t v16;
  uint64_t v17;
  uint64_t v18;
  int64x2_t v19;
  uint64_t v20;
  uint64_t v21;
  int64x2_t v22;
  int64x2_t v23;
  int64x2_t v24;
  uint64_t v25;
  int64x2_t v26;
  int64x2_t v27;
  int8x16_t v28;
  int8x16_t v29;
  int8x16_t v30;
  int8x16_t v31;
  int8x16_t v32;
  int8x16_t v33;
  int8x16_t v34;
  int64x2_t v35;
  int64x2_t v36;
  int64x2_t v37;
  int64x2_t v38;
  int8x16_t v39;
  int64x2_t v40;
  int64x2_t v41;
  int64x2_t v42;
  int64x2_t v43;
  int64x2_t v44;
  int64x2_t v45;
  int64x2_t v46;
  int64x2_t v47;
  int64x2_t v48;
  int64x2_t v49;
  int64x2_t v50;
  int64x2_t v51;
  int64x2_t v52;
  int64x2_t v53;
  int64x2_t v54;
  int64x2_t v55;
  int64x2_t v56;
  int64x2_t v57;
  int64x2_t v58;
  int64x2_t v59;
  int64x2_t v60;
  int64x2_t v61;
  int64x2_t v62;
  int64x2_t v63;
  int64x2_t v64;
  int64x2_t v65;
  int64x2_t v66;
  int64x2_t v67;
  int64x2_t v68;
  int64x2_t v69;
  int64x2_t v70;
  int64x2_t v71;
  int64x2_t v72;
  int64x2_t v73;
  int64x2_t v74;
  int64x2_t v75;
  int64x2_t v76;
  int64x2_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int8x16_t v80;
  int8x16_t v81;
  int8x16_t v82;
  int8x16_t v83;
  int64x2_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int64x2_t v90;
  int64x2_t v91;
  int8x16_t v92;
  int8x16_t v93;
  int8x16_t v94;
  int8x16_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int64x2_t v100;
  int64x2_t v101;
  int64x2_t v102;
  int64x2_t v103;
  int64x2_t v104;
  int8x16_t v105;
  int64x2_t v106;
  int64x2_t v107;
  int64x2_t v108;
  int64x2_t v109;
  int64x2_t v110;
  int64x2_t v111;
  int64x2_t v112;
  int64x2_t v113;
  uint64x2_t v114;
  uint64x2_t v115;
  uint64x2_t v116;
  int64x2_t v117;
  int8x16_t v118;
  int8x16_t v119;
  int64x2_t v120;
  int64x2_t v121;
  int64x2_t v122;
  int64x2_t v123;
  int64x2_t v124;
  int8x16_t v125;
  int64x2_t v126;
  int8x16_t v127;
  int8x16_t v128;
  int64x2_t v129;
  int64x2_t v130;
  int64x2_t v131;
  int64x2_t v132;
  int64x2_t v133;
  int64x2_t v134;
  int64x2_t v135;
  int64x2_t v136;
  int64x2_t v137;
  int64x2_t v138;
  int64x2_t v139;
  int64x2_t v140;
  int64x2_t v141;
  int64x2_t v142;
  int64x2_t v143;
  int64x2_t v144;
  int64x2_t v145;
  int64x2_t v146;
  int64x2_t v147;
  int64x2_t v148;
  int64x2_t v149;
  int64x2_t v150;
  int64x2_t v151;
  int64x2_t v152;
  int8x16_t v153;
  int8x16_t v154;
  int64x2_t v155;
  int64x2_t v156;
  int64x2_t v157;
  int64x2_t v158;
  int64x2_t v159;
  int64x2_t v160;
  int64x2_t v161;
  int64x2_t v162;
  int8x16_t v163;
  int8x16_t v164;
  int8x16_t v165;
  int64x2_t v166;
  int64x2_t v167;
  int64x2_t v168;
  int64x2_t v169;
  int64x2_t v170;
  int64x2_t v171;
  int64x2_t v172;
  int64x2_t v173;
  int64x2_t v174;
  int64x2_t v175;
  int64x2_t v176;
  int64x2_t v177;
  int8x16_t v178;
  int64x2_t v179;
  int64x2_t v180;
  int64x2_t v181;
  int64x2_t v182;
  int8x16_t v183;
  int8x16_t v184;
  int64x2_t v185;
  int64x2_t v186;
  int64x2_t v187;
  int64x2_t v188;
  int64x2_t v189;
  int64x2_t v190;
  int64x2_t v191;
  int64x2_t v192;
  int64x2_t v193;
  int64x2_t v194;
  int64x2_t v195;
  int64x2_t v196;
  int8x16_t v197;
  int64x2_t v198;
  int64x2_t v199;
  int64x2_t v200;
  int64x2_t v201;
  int8x16_t v202;
  int8x16x4_t v204;

  v9 = v6 - 1073403636 + v5;
  v10 = (v9 - a2);
  v11 = v4 - a2 + (v7 ^ 0xCE9538B3);
  v12.i64[0] = v3 + v10;
  v12.i64[1] = v3 + v11;
  v13 = (v9 + 6 - a2);
  v14 = (v9 + 5 - a2);
  v15 = v3 + v13;
  v16.i64[0] = v3 + v13;
  v16.i64[1] = v3 + v14;
  v17 = (v9 + 4 - a2);
  v18 = (v9 + 3 - a2);
  v19.i64[0] = v3 + v17;
  v19.i64[1] = v3 + v18;
  v20 = (v9 + 2 - a2);
  v21 = (v9 + 1 - a2);
  v22.i64[0] = v3 + v20;
  v22.i64[1] = v3 + v21;
  v23.i64[0] = v20 + a3 + 10;
  v23.i64[1] = v21 + a3 + 10;
  v24.i64[0] = v17 + a3 + 10;
  v24.i64[1] = v18 + a3 + 10;
  v25 = v13 + a3;
  v26.i64[0] = v25 + 10;
  v26.i64[1] = v14 + a3 + 10;
  v27.i64[0] = v10 + a3 + 10;
  v27.i64[1] = v11 + a3 + 10;
  v28 = (int8x16_t)vdupq_n_s64(0x38uLL);
  v29 = *(int8x16_t *)&STACK[0x770];
  v30 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v12, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v12, 8uLL)), *(int8x16_t *)&STACK[0x770]), *(int64x2_t *)&STACK[0x580]);
  v31 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v16, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v16, 8uLL)), *(int8x16_t *)&STACK[0x770]), *(int64x2_t *)&STACK[0x580]);
  v32 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v19, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v19, 8uLL)), *(int8x16_t *)&STACK[0x770]), *(int64x2_t *)&STACK[0x580]);
  v33 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v22, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v22, 8uLL)), *(int8x16_t *)&STACK[0x770]), *(int64x2_t *)&STACK[0x580]);
  v34 = (int8x16_t)vdupq_n_s64(0xB98B02A5518146ACLL);
  v35 = (int64x2_t)veorq_s8(v33, v34);
  v36 = (int64x2_t)veorq_s8(v32, v34);
  v37 = (int64x2_t)veorq_s8(v31, v34);
  v38 = (int64x2_t)veorq_s8(v30, v34);
  v39 = (int8x16_t)vdupq_n_s64(0xEE14BEBC8D361B39);
  v40 = (int64x2_t)veorq_s8(v30, v39);
  v41 = (int64x2_t)veorq_s8(v31, v39);
  v42 = (int64x2_t)veorq_s8(v32, v39);
  v43 = (int64x2_t)veorq_s8(v33, v39);
  v44 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v35, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v35, 8uLL)), v43);
  v45 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v36, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v36, 8uLL)), v42);
  v46 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v37, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v37, 8uLL)), v41);
  v47 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v38, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v38, 8uLL)), v40);
  v48 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v47, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v47, v47), *(int8x16_t *)&STACK[0x690])), *(int64x2_t *)&STACK[0x680]), *(int8x16_t *)&STACK[0x670]);
  v49 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v46, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v46, v46), *(int8x16_t *)&STACK[0x690])), *(int64x2_t *)&STACK[0x680]), *(int8x16_t *)&STACK[0x670]);
  v50 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v45, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v45, v45), *(int8x16_t *)&STACK[0x690])), *(int64x2_t *)&STACK[0x680]), *(int8x16_t *)&STACK[0x670]);
  v51 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v44, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v44, v44), *(int8x16_t *)&STACK[0x690])), *(int64x2_t *)&STACK[0x680]), *(int8x16_t *)&STACK[0x670]);
  v52 = (int64x2_t)veorq_s8((int8x16_t)v51, vorrq_s8((int8x16_t)vshlq_n_s64(v43, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v43, 0x3DuLL)));
  v53 = (int64x2_t)veorq_s8((int8x16_t)v50, vorrq_s8((int8x16_t)vshlq_n_s64(v42, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v42, 0x3DuLL)));
  v54 = (int64x2_t)veorq_s8((int8x16_t)v49, vorrq_s8((int8x16_t)vshlq_n_s64(v41, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v41, 0x3DuLL)));
  v55 = (int64x2_t)veorq_s8((int8x16_t)v48, vorrq_s8((int8x16_t)vshlq_n_s64(v40, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v40, 0x3DuLL)));
  v56 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v48, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v48, 8uLL)), v55);
  v57 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v49, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v49, 8uLL)), v54);
  v58 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v50, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v50, 8uLL)), v53);
  v59 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v51, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v51, 8uLL)), v52);
  v60 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v59, v59), *(int8x16_t *)&STACK[0x660]), v59), *(int64x2_t *)&STACK[0x650]), *(int8x16_t *)&STACK[0x640]);
  v61 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v58, v58), *(int8x16_t *)&STACK[0x660]), v58), *(int64x2_t *)&STACK[0x650]), *(int8x16_t *)&STACK[0x640]);
  v62 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v57, v57), *(int8x16_t *)&STACK[0x660]), v57), *(int64x2_t *)&STACK[0x650]), *(int8x16_t *)&STACK[0x640]);
  v63 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v56, v56), *(int8x16_t *)&STACK[0x660]), v56), *(int64x2_t *)&STACK[0x650]), *(int8x16_t *)&STACK[0x640]);
  v64 = (int64x2_t)veorq_s8((int8x16_t)v63, vorrq_s8((int8x16_t)vshlq_n_s64(v55, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v55, 0x3DuLL)));
  v65 = (int64x2_t)veorq_s8((int8x16_t)v62, vorrq_s8((int8x16_t)vshlq_n_s64(v54, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v54, 0x3DuLL)));
  v66 = (int64x2_t)veorq_s8((int8x16_t)v61, vorrq_s8((int8x16_t)vshlq_n_s64(v53, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v53, 0x3DuLL)));
  v67 = (int64x2_t)veorq_s8((int8x16_t)v60, vorrq_s8((int8x16_t)vshlq_n_s64(v52, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v52, 0x3DuLL)));
  v68 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v60, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v60, 8uLL)), v67);
  v69 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v61, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v61, 8uLL)), v66);
  v70 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v62, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v62, 8uLL)), v65);
  v71 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v63, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v63, 8uLL)), v64);
  v72 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v71, v71), *(int8x16_t *)&STACK[0x630]), v71), *(int64x2_t *)&STACK[0x620]), *(int8x16_t *)&STACK[0x610]);
  v73 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v70, v70), *(int8x16_t *)&STACK[0x630]), v70), *(int64x2_t *)&STACK[0x620]), *(int8x16_t *)&STACK[0x610]);
  v74 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v69, v69), *(int8x16_t *)&STACK[0x630]), v69), *(int64x2_t *)&STACK[0x620]), *(int8x16_t *)&STACK[0x610]);
  v75 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v68, v68), *(int8x16_t *)&STACK[0x630]), v68), *(int64x2_t *)&STACK[0x620]), *(int8x16_t *)&STACK[0x610]);
  v76 = (int64x2_t)veorq_s8((int8x16_t)v75, vorrq_s8((int8x16_t)vshlq_n_s64(v67, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v67, 0x3DuLL)));
  v77 = (int64x2_t)veorq_s8((int8x16_t)v74, vorrq_s8((int8x16_t)vshlq_n_s64(v66, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v66, 0x3DuLL)));
  v78 = (int64x2_t)veorq_s8((int8x16_t)v73, vorrq_s8((int8x16_t)vshlq_n_s64(v65, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v65, 0x3DuLL)));
  v79 = (int64x2_t)veorq_s8((int8x16_t)v72, vorrq_s8((int8x16_t)vshlq_n_s64(v64, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v64, 0x3DuLL)));
  v80 = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v75, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v75, 8uLL)), v76), *(int8x16_t *)&STACK[0x600]);
  v81 = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v74, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v74, 8uLL)), v77), *(int8x16_t *)&STACK[0x600]);
  v82 = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v73, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v73, 8uLL)), v78), *(int8x16_t *)&STACK[0x600]);
  v83 = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v72, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v72, 8uLL)), v79), *(int8x16_t *)&STACK[0x600]);
  v84 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v80, *(int8x16_t *)&STACK[0x5F0]), (int64x2_t)vorrq_s8(v80, *(int8x16_t *)&STACK[0x4B0])), *(int64x2_t *)&STACK[0x4B0]), *(int8x16_t *)&STACK[0x5E0]);
  v85 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v81, *(int8x16_t *)&STACK[0x5F0]), (int64x2_t)vorrq_s8(v81, *(int8x16_t *)&STACK[0x4B0])), *(int64x2_t *)&STACK[0x4B0]), *(int8x16_t *)&STACK[0x5E0]);
  v86 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v82, *(int8x16_t *)&STACK[0x5F0]), (int64x2_t)vorrq_s8(v82, *(int8x16_t *)&STACK[0x4B0])), *(int64x2_t *)&STACK[0x4B0]), *(int8x16_t *)&STACK[0x5E0]);
  v87 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v83, *(int8x16_t *)&STACK[0x5F0]), (int64x2_t)vorrq_s8(v83, *(int8x16_t *)&STACK[0x4B0])), *(int64x2_t *)&STACK[0x4B0]), *(int8x16_t *)&STACK[0x5E0]);
  v88 = (int64x2_t)veorq_s8((int8x16_t)v87, vorrq_s8((int8x16_t)vshlq_n_s64(v79, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v79, 0x3DuLL)));
  v89 = (int64x2_t)veorq_s8((int8x16_t)v86, vorrq_s8((int8x16_t)vshlq_n_s64(v78, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v78, 0x3DuLL)));
  v90 = (int64x2_t)veorq_s8((int8x16_t)v85, vorrq_s8((int8x16_t)vshlq_n_s64(v77, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v77, 0x3DuLL)));
  v91 = (int64x2_t)veorq_s8((int8x16_t)v84, vorrq_s8((int8x16_t)vshlq_n_s64(v76, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v76, 0x3DuLL)));
  v92 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v84, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v84, 8uLL)), v91);
  v93 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v85, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v85, 8uLL)), v90);
  v94 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v86, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v86, 8uLL)), v89);
  v95 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v87, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v87, 8uLL)), v88);
  v96 = *(int64x2_t *)&STACK[0x760];
  v97 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x5C0], v92), (int64x2_t)vorrq_s8(v92, *(int8x16_t *)&STACK[0x5D0]))), *(int8x16_t *)&STACK[0x5B0]);
  v98 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x5C0], v93), (int64x2_t)vorrq_s8(v93, *(int8x16_t *)&STACK[0x5D0]))), *(int8x16_t *)&STACK[0x5B0]);
  v99 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x5C0], v94), (int64x2_t)vorrq_s8(v94, *(int8x16_t *)&STACK[0x5D0]))), *(int8x16_t *)&STACK[0x5B0]);
  v100 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x5C0], v95), (int64x2_t)vorrq_s8(v95, *(int8x16_t *)&STACK[0x5D0]))), *(int8x16_t *)&STACK[0x5B0]);
  v101 = (int64x2_t)veorq_s8((int8x16_t)v100, vorrq_s8((int8x16_t)vshlq_n_s64(v88, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v88, 0x3DuLL)));
  v102 = (int64x2_t)veorq_s8((int8x16_t)v99, vorrq_s8((int8x16_t)vshlq_n_s64(v89, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v89, 0x3DuLL)));
  v103 = (int64x2_t)veorq_s8((int8x16_t)v98, vorrq_s8((int8x16_t)vshlq_n_s64(v90, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 0x3DuLL)));
  v104 = (int64x2_t)veorq_s8((int8x16_t)v97, vorrq_s8((int8x16_t)vshlq_n_s64(v91, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v91, 0x3DuLL)));
  v105 = (int8x16_t)vdupq_n_s64(0x5AC09C033F8B2761uLL);
  v106 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v100, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v100, 8uLL)), v101), v105);
  v107 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v99, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v99, 8uLL)), v102), v105);
  v108 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v98, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v98, 8uLL)), v103), v105);
  v109 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v97, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v97, 8uLL)), v104), v105);
  v110 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v106, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v106, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v106, vorrq_s8((int8x16_t)vshlq_n_s64(v101, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v101, 0x3DuLL))));
  v111 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v107, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v107, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v107, vorrq_s8((int8x16_t)vshlq_n_s64(v102, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v102, 0x3DuLL))));
  v112 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v108, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v108, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v108, vorrq_s8((int8x16_t)vshlq_n_s64(v103, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v103, 0x3DuLL))));
  v113 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v109, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v109, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v109, vorrq_s8((int8x16_t)vshlq_n_s64(v104, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 0x3DuLL))));
  v114 = (uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v113, v113), *(int8x16_t *)&STACK[0x5A0]), v113), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x550]);
  v115 = (uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v112, v112), *(int8x16_t *)&STACK[0x5A0]), v112), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x550]);
  v116 = (uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v111, v111), *(int8x16_t *)&STACK[0x5A0]), v111), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x550]);
  v117 = (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v22, 3uLL), v28);
  *(uint64x2_t *)&STACK[0x700] = vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v110, v110), *(int8x16_t *)&STACK[0x5A0]), v110), *(int64x2_t *)&STACK[0x560]), *(int8x16_t *)&STACK[0x550]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v12, 3uLL), v28)));
  *(uint64x2_t *)&STACK[0x6E0] = vshlq_u64(v116, (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v16, 3uLL), v28)));
  v118 = (int8x16_t)vshlq_u64(v115, (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v19, 3uLL), v28)));
  v119 = (int8x16_t)vshlq_u64(v114, (uint64x2_t)vnegq_s64(v117));
  *(int64x2_t *)&STACK[0x6F0] = v27;
  v120 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v27, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v27, 8uLL)), v29);
  *(int64x2_t *)&STACK[0x6D0] = v26;
  v121 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v26, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v26, 8uLL)), v29);
  v122 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v24, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v24, 8uLL)), v29);
  v123 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v23, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v23, 8uLL)), v29);
  v124 = vdupq_n_s64(0x55E7EF06772DD764uLL);
  v125 = *(int8x16_t *)&STACK[0x7A0];
  *(int64x2_t *)&STACK[0x6A0] = vsubq_s64(v120, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v120, v120), v124), *(int8x16_t *)&STACK[0x7A0]));
  v126 = vsubq_s64(v121, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v121, v121), v124), v125));
  v127 = (int8x16_t)vaddq_s64(vsubq_s64(v123, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v123, v123), v124), v125)), *(int64x2_t *)&STACK[0x540]);
  v128 = (int8x16_t)vaddq_s64(vsubq_s64(v122, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v122, v122), v124), v125)), *(int64x2_t *)&STACK[0x540]);
  v129 = (int64x2_t)veorq_s8(v128, *(int8x16_t *)&STACK[0x530]);
  v130 = (int64x2_t)veorq_s8(v127, *(int8x16_t *)&STACK[0x530]);
  v131 = (int64x2_t)veorq_s8(v127, *(int8x16_t *)&STACK[0x520]);
  v132 = (int64x2_t)veorq_s8(v128, *(int8x16_t *)&STACK[0x520]);
  v133 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v129, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v129, 8uLL)), v132);
  v134 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v130, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v130, 8uLL)), v131);
  v135 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v134, v134), *(int8x16_t *)&STACK[0x510]), v134), *(int64x2_t *)&STACK[0x500]), *(int8x16_t *)&STACK[0x4F0]);
  v136 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v133, v133), *(int8x16_t *)&STACK[0x510]), v133), *(int64x2_t *)&STACK[0x500]), *(int8x16_t *)&STACK[0x4F0]);
  v137 = (int64x2_t)veorq_s8((int8x16_t)v136, vorrq_s8((int8x16_t)vshlq_n_s64(v132, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v132, 0x3DuLL)));
  v138 = (int64x2_t)veorq_s8((int8x16_t)v135, vorrq_s8((int8x16_t)vshlq_n_s64(v131, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v131, 0x3DuLL)));
  v139 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v135, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v135, 8uLL)), v138);
  v140 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v136, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v136, 8uLL)), v137);
  v141 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v140, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v140, v140), *(int8x16_t *)&STACK[0x4E0])), *(int64x2_t *)&STACK[0x4D0]), *(int8x16_t *)&STACK[0x4C0]);
  v142 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v139, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v139, v139), *(int8x16_t *)&STACK[0x4E0])), *(int64x2_t *)&STACK[0x4D0]), *(int8x16_t *)&STACK[0x4C0]);
  v143 = (int64x2_t)veorq_s8((int8x16_t)v142, vorrq_s8((int8x16_t)vshlq_n_s64(v138, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v138, 0x3DuLL)));
  v144 = (int64x2_t)veorq_s8((int8x16_t)v141, vorrq_s8((int8x16_t)vshlq_n_s64(v137, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v137, 0x3DuLL)));
  v145 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v142, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v142, 8uLL)), v143), *(int8x16_t *)&STACK[0x750]);
  v146 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v141, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v141, 8uLL)), v144), *(int8x16_t *)&STACK[0x750]);
  v147 = (int64x2_t)veorq_s8((int8x16_t)v146, vorrq_s8((int8x16_t)vshlq_n_s64(v144, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v144, 0x3DuLL)));
  v148 = (int64x2_t)veorq_s8((int8x16_t)v145, vorrq_s8((int8x16_t)vshlq_n_s64(v143, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v143, 0x3DuLL)));
  v149 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v146, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146, 8uLL)), v147), *(int8x16_t *)&STACK[0x570]);
  v150 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v145, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v145, 8uLL)), v148), *(int8x16_t *)&STACK[0x570]);
  v151 = (int64x2_t)veorq_s8((int8x16_t)v150, vorrq_s8((int8x16_t)vshlq_n_s64(v148, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v148, 0x3DuLL)));
  v152 = (int64x2_t)veorq_s8((int8x16_t)v149, vorrq_s8((int8x16_t)vshlq_n_s64(v147, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v147, 0x3DuLL)));
  v153 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v149, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v149, 8uLL)), v152);
  v154 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v150, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v150, 8uLL)), v151);
  v155 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v96, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x740], v153), (int64x2_t)vorrq_s8(v153, *(int8x16_t *)&STACK[0x790]))), *(int8x16_t *)&STACK[0x730]);
  v156 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v96, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x740], v154), (int64x2_t)vorrq_s8(v154, *(int8x16_t *)&STACK[0x790]))), *(int8x16_t *)&STACK[0x730]);
  v157 = (int64x2_t)veorq_s8((int8x16_t)v156, vorrq_s8((int8x16_t)vshlq_n_s64(v151, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v151, 0x3DuLL)));
  v158 = (int64x2_t)veorq_s8((int8x16_t)v155, vorrq_s8((int8x16_t)vshlq_n_s64(v152, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152, 0x3DuLL)));
  v159 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v155, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v155, 8uLL)), v158);
  v160 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v156, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v156, 8uLL)), v157);
  v161 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v160, v160), *(int8x16_t *)&STACK[0x710]), v160), *(int64x2_t *)&STACK[0x4A0]), *(int8x16_t *)&STACK[0x490]);
  v162 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v159, v159), *(int8x16_t *)&STACK[0x710]), v159), *(int64x2_t *)&STACK[0x4A0]), *(int8x16_t *)&STACK[0x490]);
  v163 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v161, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v161, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v161, vorrq_s8((int8x16_t)vshlq_n_s64(v157, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v157, 0x3DuLL))));
  v164 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v162, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v162, vorrq_s8((int8x16_t)vshlq_n_s64(v158, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v158, 0x3DuLL))));
  v165 = (int8x16_t)vaddq_s64(v126, *(int64x2_t *)&STACK[0x540]);
  v204.val[2] = veorq_s8(v119, (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v163, *(int8x16_t *)&STACK[0x480]), (int64x2_t)vorrq_s8(v163, *(int8x16_t *)&STACK[0x470])), *(int64x2_t *)&STACK[0x470]), *(int8x16_t *)&STACK[0x460]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v23, 3uLL), v28))));
  v204.val[1] = veorq_s8(v118, (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v164, *(int8x16_t *)&STACK[0x480]), (int64x2_t)vorrq_s8(v164, *(int8x16_t *)&STACK[0x470])), *(int64x2_t *)&STACK[0x470]), *(int8x16_t *)&STACK[0x460]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v24, 3uLL), v28))));
  v166 = (int64x2_t)veorq_s8(v165, *(int8x16_t *)&STACK[0x530]);
  v167 = (int64x2_t)veorq_s8(v165, *(int8x16_t *)&STACK[0x520]);
  v168 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v166, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v166, 8uLL)), v167);
  v169 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v168, v168), *(int8x16_t *)&STACK[0x510]), v168), *(int64x2_t *)&STACK[0x500]), *(int8x16_t *)&STACK[0x4F0]);
  v170 = (int64x2_t)veorq_s8((int8x16_t)v169, vorrq_s8((int8x16_t)vshlq_n_s64(v167, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v167, 0x3DuLL)));
  v171 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v169, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v169, 8uLL)), v170);
  v172 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v171, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v171, v171), *(int8x16_t *)&STACK[0x4E0])), *(int64x2_t *)&STACK[0x4D0]), *(int8x16_t *)&STACK[0x4C0]);
  v173 = (int64x2_t)veorq_s8((int8x16_t)v172, vorrq_s8((int8x16_t)vshlq_n_s64(v170, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v170, 0x3DuLL)));
  v174 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v172, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v172, 8uLL)), v173), *(int8x16_t *)&STACK[0x750]);
  v175 = (int64x2_t)veorq_s8((int8x16_t)v174, vorrq_s8((int8x16_t)vshlq_n_s64(v173, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v173, 0x3DuLL)));
  v176 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v174, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v174, 8uLL)), v175), *(int8x16_t *)&STACK[0x570]);
  v177 = (int64x2_t)veorq_s8((int8x16_t)v176, vorrq_s8((int8x16_t)vshlq_n_s64(v175, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v175, 0x3DuLL)));
  v178 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v176, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v176, 8uLL)), v177);
  v179 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v96, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x740], v178), (int64x2_t)vorrq_s8(v178, *(int8x16_t *)&STACK[0x790]))), *(int8x16_t *)&STACK[0x730]);
  v180 = (int64x2_t)veorq_s8((int8x16_t)v179, vorrq_s8((int8x16_t)vshlq_n_s64(v177, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177, 0x3DuLL)));
  v181 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v179, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v179, 8uLL)), v180);
  v182 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v181, v181), *(int8x16_t *)&STACK[0x710]), v181), *(int64x2_t *)&STACK[0x4A0]), *(int8x16_t *)&STACK[0x490]);
  v183 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v182, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v182, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v182, vorrq_s8((int8x16_t)vshlq_n_s64(v180, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v180, 0x3DuLL))));
  v184 = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x6A0], *(int64x2_t *)&STACK[0x540]);
  v204.val[0] = veorq_s8(*(int8x16_t *)&STACK[0x6E0], (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v183, *(int8x16_t *)&STACK[0x480]), (int64x2_t)vorrq_s8(v183, *(int8x16_t *)&STACK[0x470])), *(int64x2_t *)&STACK[0x470]), *(int8x16_t *)&STACK[0x460]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x6D0], 3uLL), v28))));
  v185 = (int64x2_t)veorq_s8(v184, *(int8x16_t *)&STACK[0x530]);
  v186 = (int64x2_t)veorq_s8(v184, *(int8x16_t *)&STACK[0x520]);
  v187 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v185, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v185, 8uLL)), v186);
  v188 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v187, v187), *(int8x16_t *)&STACK[0x510]), v187), *(int64x2_t *)&STACK[0x500]), *(int8x16_t *)&STACK[0x4F0]);
  v189 = (int64x2_t)veorq_s8((int8x16_t)v188, vorrq_s8((int8x16_t)vshlq_n_s64(v186, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v186, 0x3DuLL)));
  v190 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v188, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v188, 8uLL)), v189);
  v191 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v190, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v190, v190), *(int8x16_t *)&STACK[0x4E0])), *(int64x2_t *)&STACK[0x4D0]), *(int8x16_t *)&STACK[0x4C0]);
  v192 = (int64x2_t)veorq_s8((int8x16_t)v191, vorrq_s8((int8x16_t)vshlq_n_s64(v189, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v189, 0x3DuLL)));
  v193 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v191, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v191, 8uLL)), v192), *(int8x16_t *)&STACK[0x750]);
  v194 = (int64x2_t)veorq_s8((int8x16_t)v193, vorrq_s8((int8x16_t)vshlq_n_s64(v192, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v192, 0x3DuLL)));
  v195 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v193, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v193, 8uLL)), v194), *(int8x16_t *)&STACK[0x570]);
  v196 = (int64x2_t)veorq_s8((int8x16_t)v195, vorrq_s8((int8x16_t)vshlq_n_s64(v194, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v194, 0x3DuLL)));
  v197 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v195, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v195, 8uLL)), v196);
  v198 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v96, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x740], v197), (int64x2_t)vorrq_s8(v197, *(int8x16_t *)&STACK[0x790]))), *(int8x16_t *)&STACK[0x730]);
  v199 = (int64x2_t)veorq_s8((int8x16_t)v198, vorrq_s8((int8x16_t)vshlq_n_s64(v196, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v196, 0x3DuLL)));
  v200 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v198, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v198, 8uLL)), v199);
  v201 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v200, v200), *(int8x16_t *)&STACK[0x710]), v200), *(int64x2_t *)&STACK[0x4A0]), *(int8x16_t *)&STACK[0x490]);
  v202 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v201, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v201, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v201, vorrq_s8((int8x16_t)vshlq_n_s64(v199, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v199, 0x3DuLL))));
  v204.val[3] = veorq_s8(*(int8x16_t *)&STACK[0x700], (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v202, *(int8x16_t *)&STACK[0x480]), (int64x2_t)vorrq_s8(v202, *(int8x16_t *)&STACK[0x470])), *(int64x2_t *)&STACK[0x470]), *(int8x16_t *)&STACK[0x460]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x6F0], 3uLL), v28))));
  *(int8x8_t *)(v25 + 3) = veor_s8(vrev64_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v204, *(int8x16_t *)&STACK[0x6C0])), *(int8x8_t *)(v15 - 7));
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((827 * (8 - (a1 & 0xFFFFFFF8) == -a2)) ^ v7)) - 12))();
}

void sub_1CF34B854()
{
  JUMPOUT(0x1CF34AA38);
}

uint64_t sub_1CF34B85C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  int v6;

  return (*(uint64_t (**)(void))(v5 + 8 * (((((a4 - 421) | 0x169) + 639) * (v6 != v4)) ^ a4)))();
}

uint64_t sub_1CF34B8D4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;

  v10 = (v5 - 829081258);
  v11 = (_BYTE *)(v4 + v10);
  v12 = v10 + a4;
  v13 = (__ROR8__(v11, 8) & 0xF8FFFFFFFFFFFFFFLL) + a1;
  v14 = v13 ^ 0xB98B02A5518146ACLL;
  v15 = v13 ^ v7;
  v16 = __ROR8__(v14, 8);
  v17 = __ROR8__((v16 + v15 - ((2 * (v16 + v15)) & 0x574753E73F222D3ALL) + 0x2BA3A9F39F91169DLL) ^ 0x7B777912A32C67EALL, 8);
  v18 = (v16 + v15 - ((2 * (v16 + v15)) & 0x574753E73F222D3ALL) + 0x2BA3A9F39F91169DLL) ^ 0x7B777912A32C67EALL ^ __ROR8__(v15, 61);
  v19 = (((2 * (v17 + v18)) & 0x692731D6338DB71CLL) - (v17 + v18) + 0x4B6C6714E6392471) ^ 0xAEBBBDBA0BBC8771;
  v20 = v19 ^ __ROR8__(v18, 61);
  v21 = __ROR8__(v19, 8);
  v22 = (((2 * (v21 + v20)) | 0x510030B8E189902CLL) - (v21 + v20) + 0x577FE7A38F3B37EALL) ^ 0x260581278867C13BLL;
  v23 = v22 ^ __ROR8__(v20, 61);
  v24 = __ROR8__(v22, 8);
  v25 = (0xF891EDE4B894748ALL
       - ((v24 + v23) ^ 0xCEF084FAA1330368 | 0xF891EDE4B894748ALL)
       + ((v24 + v23) ^ 0xCEF084FAA1330368 | 0x76E121B476B8B75)) ^ 0x49789F62677564CLL;
  v26 = __ROR8__(v12 + 10, 8) & 0xF8FFFFFFFFFFFFFFLL;
  v27 = v25 ^ __ROR8__(v23, 61);
  v28 = v26 - ((2 * v26 + 0x55E7EF06772DD764) & 0x964E4B8C152982F6) - 0x9E4E2B6B9D452D3;
  v29 = v28 ^ 0xF2AC27635B1587D7;
  v28 ^= 0xA5339B7A87A2DA42;
  v30 = __ROR8__(v25, 8);
  v31 = __ROR8__(v29, 8);
  v32 = (((2 * (v31 + v28)) & 0x31B54C886DAC1C80) - (v31 + v28) - 0x18DAA64436D60E41) ^ 0xB7F1895AF59480C8;
  v33 = v32 ^ __ROR8__(v28, 61);
  v34 = __ROR8__(v32, 8);
  v35 = (v8 - ((~(v30 + v27) | 0x8F554334F51B89FFLL) + ((v30 + v27) | 0x70AABCCB0AE47600))) ^ 0xEDDFFF667C506E9DLL;
  v36 = v35 ^ __ROR8__(v27, 61);
  v37 = (__ROR8__(v35, 8) + v36) ^ 0x5AC09C033F8B2761;
  v38 = (v34 + v33 - ((2 * (v34 + v33)) & 0x9EAD5CAA3255F462) + 0x4F56AE55192AFA31) ^ 0xAA8174FBF4AF5931;
  v39 = v38 ^ __ROR8__(v33, 61);
  v40 = (__ROR8__(v38, 8) + v39) ^ a2;
  v41 = v40 ^ __ROR8__(v39, 61);
  v42 = __ROR8__(v37, 8) + (v37 ^ __ROR8__(v36, 61));
  v43 = (__ROR8__(v40, 8) + v41) ^ a3;
  v44 = __ROR8__(v43, 8);
  v45 = v43 ^ __ROR8__(v41, 61);
  v46 = (v8 - ((~(v44 + v45) | 0xB99501662C036FD5) + ((v44 + v45) | 0x466AFE99D3FC902ALL))) ^ 0xDB1FBD34A54888B7;
  v47 = v46 ^ __ROR8__(v45, 61);
  v48 = __ROR8__(v46, 8);
  v49 = (((2 * (v48 + v47)) | 0x954DD9029E9595E4) - (v48 + v47) + 0x3559137EB0B5350ELL) ^ 0x9066708270C1ED93;
  v50 = v49 ^ __ROR8__(v47, 61);
  v51 = __ROR8__(v49, 8);
  *(_BYTE *)(v12 + 10) = (((((2 * v42) & 0x89DBE9971E9DD83ELL) - v42 - 0x44EDF4CB8F4EEC20) ^ 0xA019DAAC5BE8D391) >> (8 * (v11 & 7u))) ^ (((0xB2DE5D9A5727C34ELL - ((v51 + v50) | 0xB2DE5D9A5727C34ELL) + ((v51 + v50) | 0x4D21A265A8D83CB1)) ^ 0x562A73FD8381FCC0) >> (8 * ((v12 + 10) & 7))) ^ *v11;
  return (*(uint64_t (**)(uint64_t))(v9 + 8 * ((49 * (v5 == 829081258)) ^ ((int)v6 + 43))))(v6);
}

uint64_t sub_1CF34BD78(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  int v22;
  _BOOL4 v24;

  v20[44] = 0x23120F4208F8DDDLL;
  v21 = STACK[0x820];
  v22 = STACK[0xB28];
  v20[46] = *(_QWORD *)(v19 + 8 * (a1 - 253));
  LODWORD(STACK[0xB5C]) = v22;
  v20[98] = a19;
  v24 = a19 != 0x394C67193C9A7994 && v21 != 0x373C0AAD4CE136CBLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * ((475 * v24) ^ (a1 - 377268918) & 0x167CAFCF))
                            - ((((a1 - 377268918) & 0x167CAFCF) - 60870282) & 0x3A0C96F ^ 0x16FLL)))();
}

uint64_t sub_1CF34BDC0@<X0>(int a1@<W1>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t a17, int8x16_t a18, int8x16_t a19, int8x16_t a20,int64x2_t a21,int8x16_t a22,int8x16_t a23,int64x2_t a24,int8x16_t a25,int8x16_t a26,int64x2_t a27,int8x16_t a28,int8x16_t a29,int8x16_t a30,int64x2_t a31,int8x16_t a32,uint64_t a33,uint64_t a34,int8x16_t a35)
{
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  unsigned int v41;
  int64x2_t v42;
  int64x2_t v43;
  int64x2_t v44;
  int64x2_t v45;
  int64x2_t v46;
  int64x2_t v47;
  int64x2_t v48;
  int64x2_t v49;
  int64x2_t v50;
  int64x2_t v51;
  int64x2_t v52;
  int64x2_t v53;
  int64x2_t v54;
  int64x2_t v55;
  int64x2_t v56;
  int8x16_t v57;
  int8x16_t v58;
  int64x2_t v59;
  int64x2_t v60;
  int64x2_t v61;
  int64x2_t v62;
  int64x2_t v63;
  int64x2_t v64;
  int64x2_t v65;
  int64x2_t v66;
  int64x2_t v67;
  int64x2_t v68;
  int8x16_t v69;
  int8x16_t v70;
  int64x2_t v71;
  int64x2_t v72;
  int64x2_t v73;
  int64x2_t v74;
  int64x2_t v75;
  int64x2_t v76;
  int64x2_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int8x16_t v81;
  int64x2_t v82;
  int64x2_t v83;
  int64x2_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int8x16_t v90;
  int8x16_t v91;
  int64x2_t v92;
  int64x2_t v93;
  int8x16_t v94;
  int64x2_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int8x16_t v100;
  int64x2_t v101;
  int64x2_t v102;
  int64x2_t v103;
  int64x2_t v104;
  int64x2_t v105;
  int64x2_t v106;
  int64x2_t v107;
  int64x2_t v108;
  int64x2_t v109;
  int8x16_t v110;
  int64x2_t v111;
  int8x16_t v112;
  int8x16_t v113;
  int64x2_t v114;
  int64x2_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;
  int8x16_t v119;
  int64x2_t v120;
  int64x2_t v121;
  int64x2_t v122;
  int64x2_t v123;
  int64x2_t v124;
  int64x2_t v125;
  int64x2_t v126;
  int64x2_t v127;
  int64x2_t v128;
  int8x16_t v129;
  int64x2_t v130;
  int64x2_t v131;
  int64x2_t v132;
  int64x2_t v133;
  int64x2_t v134;
  int64x2_t v135;
  int64x2_t v136;
  int8x16_t v137;
  int8x16_t v138;
  int64x2_t v139;
  int64x2_t v140;
  int64x2_t v141;
  int64x2_t v142;
  int64x2_t v143;
  int64x2_t v144;
  int64x2_t v145;
  int8x16_t v146;
  int64x2_t v147;
  int64x2_t v148;
  int64x2_t v149;
  int64x2_t v150;
  int64x2_t v151;
  int64x2_t v152;
  int64x2_t v153;
  int64x2_t v154;
  int64x2_t v155;
  int64x2_t v156;
  int64x2_t v157;
  int64x2_t v158;
  int64x2_t v159;
  int8x16_t v160;
  int64x2_t v161;
  int8x16_t v162;
  int64x2_t v163;
  int64x2_t v164;
  int64x2_t v165;
  int64x2_t v166;
  int64x2_t v167;
  int8x16_t v168;
  int64x2_t v169;
  int64x2_t v170;
  int64x2_t v171;
  int64x2_t v172;
  int64x2_t v173;
  int64x2_t v174;
  int64x2_t v175;
  int64x2_t v176;
  int64x2_t v177;
  int8x16_t v178;
  int64x2_t v179;
  int8x16_t v180;
  int64x2_t v181;
  int64x2_t v182;
  int64x2_t v183;
  int64x2_t v184;
  int64x2_t v185;
  int8x16_t v186;
  int64x2_t v187;
  int64x2_t v188;
  int64x2_t v189;
  int64x2_t v190;
  int64x2_t v191;
  int64x2_t v192;
  int64x2_t v193;
  int64x2_t v194;
  int64x2_t v195;
  int8x16_t v196;
  int64x2_t v197;
  int8x16_t v198;
  int8x16x4_t v200;
  int8x16x4_t v201;

  LODWORD(STACK[0x670]) = a1;
  STACK[0x6D0] = v35 - 15;
  LODWORD(STACK[0x6A0]) = 16 - (a1 & 0xFFFFFFF0);
  v41 = v38 - 1920989827 + v37;
  LODWORD(STACK[0x690]) = v41 - 8;
  LODWORD(STACK[0x680]) = v41 - 7;
  v42.i64[0] = v41 - 5 + a2 + 10;
  v42.i64[1] = v41 - 6 + a2 + 10;
  v43.i64[0] = v41 - 3 + a2 + 10;
  v43.i64[1] = v41 - 4 + a2 + 10;
  v44.i64[0] = v41 - 1 + a2 + 10;
  v44.i64[1] = v41 - 2 + a2 + 10;
  *(int64x2_t *)&STACK[0x7A0] = v44;
  v45.i64[0] = v41 + 3 + a2 + 10;
  v45.i64[1] = v41 + 2 + a2 + 10;
  v46.i64[0] = v41 + 5 + a2 + 10;
  v46.i64[1] = v41 + 4 + a2 + 10;
  v47.i64[0] = v41 + 7 + a2 + 10;
  v47.i64[1] = v41 + 6 + a2 + 10;
  v48.i64[0] = v36 + (v39 ^ 0xAFC0040F) + a2 + 10;
  v48.i64[1] = v41 + a2 + 10;
  *(int64x2_t *)&STACK[0x6F0] = vdupq_n_s64(0x38uLL);
  v49 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v48, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v48, 8uLL)), *(int8x16_t *)&STACK[0x770]);
  v50 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v47, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v47, 8uLL)), *(int8x16_t *)&STACK[0x770]);
  v51 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v46, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v46, 8uLL)), *(int8x16_t *)&STACK[0x770]);
  v52 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v45, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v45, 8uLL)), *(int8x16_t *)&STACK[0x770]);
  *(int8x16_t *)&STACK[0x730] = vorrq_s8((int8x16_t)vshlq_n_s64(v44, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v44, 8uLL));
  *(int64x2_t *)&STACK[0x790] = v43;
  *(int8x16_t *)&STACK[0x710] = vorrq_s8((int8x16_t)vshlq_n_s64(v43, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v43, 8uLL));
  *(int64x2_t *)&STACK[0x740] = v42;
  *(int8x16_t *)&STACK[0x700] = vorrq_s8((int8x16_t)vshlq_n_s64(v42, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v42, 8uLL));
  v53 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(v49, *(int64x2_t *)&STACK[0x580]), a35);
  v54 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(v50, *(int64x2_t *)&STACK[0x580]), a35);
  v55 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(v51, *(int64x2_t *)&STACK[0x580]), a35);
  v56 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(v52, *(int64x2_t *)&STACK[0x580]), a35);
  *(int64x2_t *)&STACK[0x6E0] = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v53, v53), a32), v53);
  v57 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v55, v55), a32), v55), a31);
  v58 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v56, v56), a32), v56), a31);
  v59 = (int64x2_t)veorq_s8(v58, a30);
  v60 = (int64x2_t)veorq_s8(v57, a30);
  v61 = (int64x2_t)veorq_s8(v57, a29);
  v62 = (int64x2_t)veorq_s8(v58, a29);
  v63 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v59, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v59, 8uLL)), v62);
  v64 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v60, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v60, 8uLL)), v61);
  v65 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v64, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v64, v64), a28)), a27), a26);
  v66 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v63, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v63, v63), a28)), a27), a26);
  v67 = (int64x2_t)veorq_s8((int8x16_t)v66, vorrq_s8((int8x16_t)vshlq_n_s64(v62, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v62, 0x3DuLL)));
  v68 = (int64x2_t)veorq_s8((int8x16_t)v65, vorrq_s8((int8x16_t)vshlq_n_s64(v61, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v61, 0x3DuLL)));
  v69 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v65, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v65, 8uLL)), v68);
  v70 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v66, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v66, 8uLL)), v67);
  v71 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v69, a25), (int64x2_t)vorrq_s8(v69, (int8x16_t)a24)), a24), a23);
  v72 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v70, a25), (int64x2_t)vorrq_s8(v70, (int8x16_t)a24)), a24), a23);
  v73 = (int64x2_t)veorq_s8((int8x16_t)v72, vorrq_s8((int8x16_t)vshlq_n_s64(v67, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v67, 0x3DuLL)));
  v74 = (int64x2_t)veorq_s8((int8x16_t)v71, vorrq_s8((int8x16_t)vshlq_n_s64(v68, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v68, 0x3DuLL)));
  v75 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v72, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v72, 8uLL)), v73), *(int8x16_t *)&STACK[0x750]);
  v76 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v71, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v71, 8uLL)), v74), *(int8x16_t *)&STACK[0x750]);
  v77 = (int64x2_t)veorq_s8((int8x16_t)v76, vorrq_s8((int8x16_t)vshlq_n_s64(v74, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v74, 0x3DuLL)));
  v78 = (int64x2_t)veorq_s8((int8x16_t)v75, vorrq_s8((int8x16_t)vshlq_n_s64(v73, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v73, 0x3DuLL)));
  v79 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v76, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v76, 8uLL)), v77), *(int8x16_t *)&STACK[0x570]);
  v80 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v75, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v75, 8uLL)), v78), *(int8x16_t *)&STACK[0x570]);
  v81 = vorrq_s8((int8x16_t)vshlq_n_s64(v77, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v77, 0x3DuLL));
  v82 = (int64x2_t)veorq_s8((int8x16_t)v80, vorrq_s8((int8x16_t)vshlq_n_s64(v78, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v78, 0x3DuLL)));
  v83 = (int64x2_t)veorq_s8((int8x16_t)v79, v81);
  v84 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v79, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v79, 8uLL)), v83);
  v85 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v80, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v80, 8uLL)), v82);
  v86 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v85, v85), a22), v85), a21), a20);
  v87 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v84, v84), a22), v84), a21), a20);
  v88 = (int64x2_t)veorq_s8((int8x16_t)v87, vorrq_s8((int8x16_t)vshlq_n_s64(v83, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v83, 0x3DuLL)));
  v89 = (int64x2_t)veorq_s8((int8x16_t)v86, vorrq_s8((int8x16_t)vshlq_n_s64(v82, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v82, 0x3DuLL)));
  v90 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v86, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v86, 8uLL)), v89);
  v91 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v87, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v87, 8uLL)), v88);
  v92 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(a18, v90), (int64x2_t)vorrq_s8(v90, a19))), a17);
  v93 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(a18, v91), (int64x2_t)vorrq_s8(v91, a19))), a17);
  v94 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v54, v54), a32), v54), a31);
  v201.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v92, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v92, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v92, vorrq_s8((int8x16_t)vshlq_n_s64(v89, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v89, 0x3DuLL)))), *(int8x16_t *)&STACK[0x720]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v45, 3uLL), *(int8x16_t *)&STACK[0x6F0])));
  v201.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v93, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v93, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v93, vorrq_s8((int8x16_t)vshlq_n_s64(v88, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v88, 0x3DuLL)))), *(int8x16_t *)&STACK[0x720]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v46, 3uLL), *(int8x16_t *)&STACK[0x6F0])));
  v95 = (int64x2_t)veorq_s8(v94, a30);
  v96 = (int64x2_t)veorq_s8(v94, a29);
  v97 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v95, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v95, 8uLL)), v96);
  v98 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v97, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v97, v97), a28)), a27), a26);
  v99 = (int64x2_t)veorq_s8((int8x16_t)v98, vorrq_s8((int8x16_t)vshlq_n_s64(v96, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v96, 0x3DuLL)));
  v100 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v98, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v98, 8uLL)), v99);
  v101 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v100, a25), (int64x2_t)vorrq_s8(v100, (int8x16_t)a24)), a24), a23);
  v102 = (int64x2_t)veorq_s8((int8x16_t)v101, vorrq_s8((int8x16_t)vshlq_n_s64(v99, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v99, 0x3DuLL)));
  v103 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v101, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v101, 8uLL)), v102), *(int8x16_t *)&STACK[0x750]);
  v104 = (int64x2_t)veorq_s8((int8x16_t)v103, vorrq_s8((int8x16_t)vshlq_n_s64(v102, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v102, 0x3DuLL)));
  v105 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v103, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v103, 8uLL)), v104), *(int8x16_t *)&STACK[0x570]);
  v106 = (int64x2_t)veorq_s8((int8x16_t)v105, vorrq_s8((int8x16_t)vshlq_n_s64(v104, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 0x3DuLL)));
  v107 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v105, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v105, 8uLL)), v106);
  v108 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v107, v107), a22), v107), a21), a20);
  v109 = (int64x2_t)veorq_s8((int8x16_t)v108, vorrq_s8((int8x16_t)vshlq_n_s64(v106, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v106, 0x3DuLL)));
  v110 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v108, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v108, 8uLL)), v109);
  v111 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(a18, v110), (int64x2_t)vorrq_s8(v110, a19))), a17);
  v112 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v111, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v111, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v111, vorrq_s8((int8x16_t)vshlq_n_s64(v109, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v109, 0x3DuLL))));
  v113 = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x6E0], a31);
  v201.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8(v112, *(int8x16_t *)&STACK[0x720]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v47, 3uLL), *(int8x16_t *)&STACK[0x6F0])));
  v114 = (int64x2_t)veorq_s8(v113, a30);
  v115 = (int64x2_t)veorq_s8(v113, a29);
  v116 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v114, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v114, 8uLL)), v115);
  v117 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v116, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v116, v116), a28)), a27), a26);
  v118 = (int64x2_t)veorq_s8((int8x16_t)v117, vorrq_s8((int8x16_t)vshlq_n_s64(v115, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v115, 0x3DuLL)));
  v119 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v117, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v117, 8uLL)), v118);
  v120 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v119, a25), (int64x2_t)vorrq_s8(v119, (int8x16_t)a24)), a24), a23);
  v121 = (int64x2_t)veorq_s8((int8x16_t)v120, vorrq_s8((int8x16_t)vshlq_n_s64(v118, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v118, 0x3DuLL)));
  v122 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v120, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v120, 8uLL)), v121), *(int8x16_t *)&STACK[0x750]);
  v123 = (int64x2_t)veorq_s8((int8x16_t)v122, vorrq_s8((int8x16_t)vshlq_n_s64(v121, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v121, 0x3DuLL)));
  v124 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v122, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v122, 8uLL)), v123), *(int8x16_t *)&STACK[0x570]);
  v125 = (int64x2_t)veorq_s8((int8x16_t)v124, vorrq_s8((int8x16_t)vshlq_n_s64(v123, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v123, 0x3DuLL)));
  v126 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v124, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v124, 8uLL)), v125);
  v127 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v126, v126), a22), v126), a21), a20);
  v128 = (int64x2_t)veorq_s8((int8x16_t)v127, vorrq_s8((int8x16_t)vshlq_n_s64(v125, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v125, 0x3DuLL)));
  v129 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v127, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v127, 8uLL)), v128);
  v130 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(a18, v129), (int64x2_t)vorrq_s8(v129, a19))), a17);
  v131 = (int64x2_t)veorq_s8((int8x16_t)v130, vorrq_s8((int8x16_t)vshlq_n_s64(v128, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v128, 0x3DuLL)));
  v132 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v130, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v130, 8uLL));
  v130.i64[0] = LODWORD(STACK[0x680]) + a2 + 10;
  v130.i64[1] = LODWORD(STACK[0x690]) + a2 + 10;
  v201.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(v132, v131), *(int8x16_t *)&STACK[0x720]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v48, 3uLL), *(int8x16_t *)&STACK[0x6F0])));
  v133 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x730], *(int8x16_t *)&STACK[0x770]), *(int64x2_t *)&STACK[0x580]), a35);
  v134 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x710], *(int8x16_t *)&STACK[0x770]), *(int64x2_t *)&STACK[0x580]), a35);
  v135 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x700], *(int8x16_t *)&STACK[0x770]), *(int64x2_t *)&STACK[0x580]), a35);
  v136 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v130, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v130, 8uLL)), *(int8x16_t *)&STACK[0x770]), *(int64x2_t *)&STACK[0x580]), a35);
  v137 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v135, v135), a32), v135), a31);
  v138 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v136, v136), a32), v136), a31);
  v136.i64[0] = vqtbl4q_s8(v201, (int8x16_t)xmmword_1CF37DAC0).u64[0];
  v139 = (int64x2_t)veorq_s8(v138, a30);
  v201.val[0] = veorq_s8(v137, a30);
  v140 = (int64x2_t)veorq_s8(v137, a29);
  v141 = (int64x2_t)veorq_s8(v138, a29);
  v142 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v139, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v139, 8uLL)), v141);
  v201.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v201.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v201.val[0], 8uLL)), v140);
  v201.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v201.val[0], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v201.val[0], (int64x2_t)v201.val[0]), a28)), a27), a26);
  v143 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v142, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v142, v142), a28)), a27), a26);
  v144 = (int64x2_t)veorq_s8((int8x16_t)v143, vorrq_s8((int8x16_t)vshlq_n_s64(v141, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v141, 0x3DuLL)));
  v145 = (int64x2_t)veorq_s8(v201.val[0], vorrq_s8((int8x16_t)vshlq_n_s64(v140, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v140, 0x3DuLL)));
  v201.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v201.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v201.val[0], 8uLL)), v145);
  v146 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v143, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v143, 8uLL)), v144);
  v201.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v201.val[0], a25), (int64x2_t)vorrq_s8(v201.val[0], (int8x16_t)a24)), a24), a23);
  v147 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v146, a25), (int64x2_t)vorrq_s8(v146, (int8x16_t)a24)), a24), a23);
  v148 = (int64x2_t)veorq_s8((int8x16_t)v147, vorrq_s8((int8x16_t)vshlq_n_s64(v144, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v144, 0x3DuLL)));
  v149 = (int64x2_t)veorq_s8(v201.val[0], vorrq_s8((int8x16_t)vshlq_n_s64(v145, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v145, 0x3DuLL)));
  v150 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v147, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v147, 8uLL)), v148), *(int8x16_t *)&STACK[0x750]);
  v201.val[0] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v201.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v201.val[0], 8uLL)), v149), *(int8x16_t *)&STACK[0x750]);
  v151 = (int64x2_t)veorq_s8(v201.val[0], vorrq_s8((int8x16_t)vshlq_n_s64(v149, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v149, 0x3DuLL)));
  v152 = (int64x2_t)veorq_s8((int8x16_t)v150, vorrq_s8((int8x16_t)vshlq_n_s64(v148, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v148, 0x3DuLL)));
  v201.val[0] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v201.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v201.val[0], 8uLL)), v151), *(int8x16_t *)&STACK[0x570]);
  v153 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v150, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v150, 8uLL)), v152), *(int8x16_t *)&STACK[0x570]);
  v154 = (int64x2_t)veorq_s8((int8x16_t)v153, vorrq_s8((int8x16_t)vshlq_n_s64(v152, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152, 0x3DuLL)));
  v155 = (int64x2_t)veorq_s8(v201.val[0], vorrq_s8((int8x16_t)vshlq_n_s64(v151, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v151, 0x3DuLL)));
  v201.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v201.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v201.val[0], 8uLL)), v155);
  v156 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v153, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v153, 8uLL)), v154);
  v157 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v156, v156), a22), v156), a21), a20);
  v201.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v201.val[0], (int64x2_t)v201.val[0]), a22), (int64x2_t)v201.val[0]), a21), a20);
  v158 = (int64x2_t)veorq_s8(v201.val[0], vorrq_s8((int8x16_t)vshlq_n_s64(v155, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v155, 0x3DuLL)));
  v159 = (int64x2_t)veorq_s8((int8x16_t)v157, vorrq_s8((int8x16_t)vshlq_n_s64(v154, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v154, 0x3DuLL)));
  v160 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v157, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v157, 8uLL)), v159);
  v201.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v201.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v201.val[0], 8uLL)), v158);
  v161 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(a18, v160), (int64x2_t)vorrq_s8(v160, a19))), a17);
  v201.val[0] = veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(a18, v201.val[0]), (int64x2_t)vorrq_s8(v201.val[0], a19))), a17);
  v162 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v134, v134), a32), v134), a31);
  v200.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v161, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v161, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v161, vorrq_s8((int8x16_t)vshlq_n_s64(v159, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v159, 0x3DuLL)))), *(int8x16_t *)&STACK[0x720]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v130, 3uLL), *(int8x16_t *)&STACK[0x6F0])));
  v200.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v201.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v201.val[0], 8uLL)), (int64x2_t)veorq_s8(v201.val[0], vorrq_s8((int8x16_t)vshlq_n_s64(v158, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v158, 0x3DuLL)))), *(int8x16_t *)&STACK[0x720]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x740], 3uLL),
                                                                *(int8x16_t *)&STACK[0x6F0])));
  v163 = (int64x2_t)veorq_s8(v162, a30);
  v164 = (int64x2_t)veorq_s8(v162, a29);
  v165 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v163, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v163, 8uLL)), v164);
  v166 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v165, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v165, v165), a28)), a27), a26);
  v167 = (int64x2_t)veorq_s8((int8x16_t)v166, vorrq_s8((int8x16_t)vshlq_n_s64(v164, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v164, 0x3DuLL)));
  v168 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v166, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v166, 8uLL)), v167);
  v169 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v168, a25), (int64x2_t)vorrq_s8(v168, (int8x16_t)a24)), a24), a23);
  v170 = (int64x2_t)veorq_s8((int8x16_t)v169, vorrq_s8((int8x16_t)vshlq_n_s64(v167, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v167, 0x3DuLL)));
  v171 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v169, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v169, 8uLL)), v170), *(int8x16_t *)&STACK[0x750]);
  v172 = (int64x2_t)veorq_s8((int8x16_t)v171, vorrq_s8((int8x16_t)vshlq_n_s64(v170, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v170, 0x3DuLL)));
  v173 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v171, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v171, 8uLL)), v172), *(int8x16_t *)&STACK[0x570]);
  v174 = (int64x2_t)veorq_s8((int8x16_t)v173, vorrq_s8((int8x16_t)vshlq_n_s64(v172, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v172, 0x3DuLL)));
  v175 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v173, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v173, 8uLL)), v174);
  v176 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v175, v175), a22), v175), a21), a20);
  v177 = (int64x2_t)veorq_s8((int8x16_t)v176, vorrq_s8((int8x16_t)vshlq_n_s64(v174, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v174, 0x3DuLL)));
  v178 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v176, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v176, 8uLL)), v177);
  v179 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(a18, v178), (int64x2_t)vorrq_s8(v178, a19))), a17);
  v180 = (int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v133, v133), a32), v133), a31);
  v200.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v179, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v179, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v179, vorrq_s8((int8x16_t)vshlq_n_s64(v177, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177, 0x3DuLL)))), *(int8x16_t *)&STACK[0x720]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x790], 3uLL), *(int8x16_t *)&STACK[0x6F0])));
  v181 = (int64x2_t)veorq_s8(v180, a30);
  v182 = (int64x2_t)veorq_s8(v180, a29);
  v183 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v181, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v181, 8uLL)), v182);
  v184 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v183, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v183, v183), a28)), a27), a26);
  v185 = (int64x2_t)veorq_s8((int8x16_t)v184, vorrq_s8((int8x16_t)vshlq_n_s64(v182, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v182, 0x3DuLL)));
  v186 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v184, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184, 8uLL)), v185);
  v187 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v186, a25), (int64x2_t)vorrq_s8(v186, (int8x16_t)a24)), a24), a23);
  v188 = (int64x2_t)veorq_s8((int8x16_t)v187, vorrq_s8((int8x16_t)vshlq_n_s64(v185, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v185, 0x3DuLL)));
  v189 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v187, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v187, 8uLL)), v188), *(int8x16_t *)&STACK[0x750]);
  v190 = (int64x2_t)veorq_s8((int8x16_t)v189, vorrq_s8((int8x16_t)vshlq_n_s64(v188, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v188, 0x3DuLL)));
  v191 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v189, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v189, 8uLL)), v190), *(int8x16_t *)&STACK[0x570]);
  v192 = (int64x2_t)veorq_s8((int8x16_t)v191, vorrq_s8((int8x16_t)vshlq_n_s64(v190, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v190, 0x3DuLL)));
  v193 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v191, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v191, 8uLL)), v192);
  v194 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v193, v193), a22), v193), a21), a20);
  v195 = (int64x2_t)veorq_s8((int8x16_t)v194, vorrq_s8((int8x16_t)vshlq_n_s64(v192, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v192, 0x3DuLL)));
  v196 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v194, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v194, 8uLL)), v195);
  v197 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(a18, v196), (int64x2_t)vorrq_s8(v196, a19))), a17);
  v200.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v197, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v197, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v197, vorrq_s8((int8x16_t)vshlq_n_s64(v195, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v195, 0x3DuLL)))), *(int8x16_t *)&STACK[0x720]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x7A0], 3uLL), *(int8x16_t *)&STACK[0x6F0])));
  v136.i64[1] = vqtbl4q_s8(v200, (int8x16_t)xmmword_1CF37DAC0).u64[0];
  v198 = vrev64q_s8((int8x16_t)v136);
  *(int8x16_t *)(v41 + 7 + a2 - 5) = veorq_s8(vextq_s8(v198, v198, 8uLL), *(int8x16_t *)(STACK[0x6D0] + v41 + 7));
  return (*(uint64_t (**)(void))(v40 + 8 * (v39 | (2 * (LODWORD(STACK[0x6A0]) == 0)))))();
}

void sub_1CF34CBAC()
{
  JUMPOUT(0x1CF34BE34);
}

uint64_t sub_1CF34CBB4(int a1)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((LODWORD(STACK[0x670]) == v2) ^ (11 * (a1 ^ 0x4E))) & 1)
                                          * (a1 + 1617)) ^ a1))
                            - 12))();
}

uint64_t sub_1CF34CC40(int a1, int a2)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1263 * (((((a1 + 18) ^ 0x5D5) - 1100) & a2) != 0)) ^ (a1 + 18)))
                            - (a1 + 137)
                            + 492))();
}

uint64_t sub_1CF34CC80@<X0>(uint64_t a1@<X5>, uint64_t a2@<X6>, uint64_t a3@<X7>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;

  v10 = (v5 - 1346369659);
  v11 = v10 + a4 + 10;
  v12 = (a1 + (v11 >> 8) + (v11 >> 3 << 59)) ^ 0x7478E03DF40C5B42;
  v13 = ((2 * v12) & 0x43EF5C8734CE4CF8) - v12 + 0x5E0851BC6598D983;
  v14 = v13 ^ 0x93FBB324C015C46DLL;
  v13 ^= 0xC4640F3D1CA299F8;
  v15 = __ROR8__(v14, 8);
  v16 = (v15 + v13 - ((2 * (v15 + v13)) & 0x3E7010AE0C9DA520) - 0x60C7F7A8F9B12D70) ^ 0xCFECD8B63AF3A3E7;
  v17 = v16 ^ __ROR8__(v13, 61);
  v18 = __ROR8__(v16, 8);
  v19 = __ROR8__((0xA886336F7599FCFALL - ((v18 + v17) | 0xA886336F7599FCFALL) + ((v18 + v17) | 0x5779CC908A660305)) ^ 0xB2AE163E67E3A005, 8);
  v20 = (0xA886336F7599FCFALL - ((v18 + v17) | 0xA886336F7599FCFALL) + ((v18 + v17) | 0x5779CC908A660305)) ^ 0xB2AE163E67E3A005 ^ __ROR8__(v17, 61);
  v21 = (v19 + v20) ^ a2;
  v22 = v21 ^ __ROR8__(v20, 61);
  v23 = (__ROR8__(v21, 8) + v22) ^ a3;
  v24 = v23 ^ __ROR8__(v22, 61);
  v25 = __ROR8__(v23, 8);
  v26 = __ROR8__((((2 * (v25 + v24)) & 0xA2D96FE4A6DCACF6) - (v25 + v24) + 0x2E93480DAC91A984) ^ 0x4C19F45F25DA4EE6, 8);
  v27 = (((2 * (v25 + v24)) & 0xA2D96FE4A6DCACF6) - (v25 + v24) + 0x2E93480DAC91A984) ^ 0x4C19F45F25DA4EE6 ^ __ROR8__(v24, 61);
  v28 = (v8 - ((~(v26 + v27) | 0x4DCFEC152474CB93) + ((v26 + v27) | 0xB23013EADB8B346CLL))) ^ 0x170F70161BFFECF2;
  *(_BYTE *)v11 = (((__ROR8__(v28, 8) + (v28 ^ __ROR8__(v27, 61))) ^ v7) >> (8 * (v11 & 7u))) ^ *(_BYTE *)(v4 + v10);
  LODWORD(v10) = (v6 ^ 0x53F) + v5 == 1346370022;
  return (*(uint64_t (**)(void))(v9 + 8 * ((((_DWORD)v10 << 6) | ((_DWORD)v10 << 8)) ^ v6)))();
}

uint64_t sub_1CF34CEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  _BOOL4 v25;

  v21 = (v18 + 1306);
  v20[37] = 0x23120F4208F8DDDLL;
  v22 = v20[45];
  v23 = STACK[0xB68];
  v20[46] = *(_QWORD *)(v19 + 8 * (v18 - 188)) + (v21 ^ 0xFFFFFFFFFFFFF971);
  LODWORD(STACK[0xB5C]) = v23;
  v20[98] = a18;
  v25 = a18 != 0x394C67193C9A7994 && v22 != 0x373C0AAD4CE136CBLL;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 + 8 * (int)((475 * v25) ^ v21))
                                                            - ((v18 - 60868976) & 0x3A0C96F ^ 0x16FLL)))(a1, a2, 0x373C0AAD4CE136CBLL);
}

uint64_t sub_1CF34CEF8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v2 - 62) ^ (76 * (v0 != v1)))) - 12))();
}

uint64_t sub_1CF34CF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,_DWORD *a60)
{
  int v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;

  if (*a60 == 1710104185)
  {
    STACK[0x4E0] = (unint64_t)&STACK[0xA28];
    STACK[0x4D0] = (unint64_t)&STACK[0x86C];
    JUMPOUT(0x1CF34D04CLL);
  }
  if (*a60 == 1710104186)
  {
    v63 = sub_1CF36FDF0(*(_BYTE **)(v62 + 448), 0, 0x20uLL);
    return (*(uint64_t (**)(_BYTE *))(v61
                                              + 8
                                              * (((STACK[0xA18] != 0x373C0AAD4CE136CBLL)
                                                * (((v60 ^ 0x379) - 167) ^ 0x467)) ^ v60 ^ 0x379)))(v63);
  }
  else
  {
    LODWORD(STACK[0x9AC]) = 1393700945;
    *(_QWORD *)(v62 + 104) = (v60 + 245) + *(_QWORD *)(v61 + 8 * (v60 - 359)) - 616;
    return ((uint64_t (*)(void))(*(_QWORD *)(v61 + 8 * ((123 * (STACK[0x2F8] == 0x62368F025D92A9A2)) ^ (v60 + 979)))
                              - ((v60 + 774235588) & 0xD1DA1DDB ^ 0x50FLL)))();
  }
}

uint64_t sub_1CF34D07C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  unint64_t v2;
  uint64_t v3;

  STACK[0x4F0] = v2;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(_QWORD *)(a1 - 0x373C0AAD4CE136CBLL) == 0x23120F4208F8DDDLL)
                                * ((v1 - 69461996) & 0x423E7CD ^ 0x143)) ^ (v1 + 938))))();
}

uint64_t sub_1CF34D12C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6 + 8 * (((*(_QWORD *)(a1 + v3) + v4 == v2) * (((v1 - 1041) | v5) - 319)) ^ v1)))();
}

uint64_t sub_1CF34D164()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  _BOOL4 v4;

  v3 = ((_BYTE)v1 + 6) & 0xF;
  LODWORD(STACK[0x4B0]) = v3;
  v4 = ((uint64_t (*)(_QWORD))STACK[0x318])(v1 - v3 + ((33 * (v0 ^ 0x146)) ^ 0xD2607C8D)) != 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((46 * v4) ^ v0)))();
}

uint64_t sub_1CF34D1E0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  _QWORD *v4;
  int v5;
  int v6;
  uint64_t v7;

  STACK[0x520] = a1;
  LODWORD(STACK[0x490]) = 2 - v5;
  LODWORD(STACK[0x4A0]) = v6 + 591107692;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                 + 8
                                                                                 * ((((((v3 ^ 0x9E) - 86) ^ (*v4 == 0x23120F4208F8DDDLL)) & 1)
                                                                                   * ((v3 ^ 0x9E) - 408)) ^ v3 ^ 0x9E))
                                                                     - 8))(747658360, a2, a3, 2786311501);
}

uint64_t sub_1CF34D25C()
{
  int v0;
  uint64_t v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned int v6;

  v4 = (v0 + 369);
  STACK[0x4C0] = v4 ^ 0xC34285002541834FLL;
  v5 = STACK[0x520];
  STACK[0x470] = STACK[0x520] - 15;
  STACK[0x480] = v5 - 7;
  STACK[0x7B8] = v3;
  v6 = *(_DWORD *)(v1 - 0x23120F4208F8DCDLL)
     - (((*(_DWORD *)(v1 - 0x23120F4208F8DCDLL) << (((v4 ^ 0xB6) + 123) ^ 0xD2)) + 1277655706) & 0xB925AB38)
     - 2103012631;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((1357
                                               * (((2 * v6) & 0xBFFFEBDC ^ 0xB925AB18) + (v6 ^ 0x36D2072) + 1853685556 != v2)) ^ v4))
                            - 8))();
}

uint64_t sub_1CF34D33C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  unint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t (*v9)(uint64_t);

  STACK[0x540] = v4;
  STACK[0x550] = v5;
  STACK[0x7A0] = *(_QWORD *)(v5 - 0x23120F4208F8DC5);
  LODWORD(STACK[0x560]) = a1;
  STACK[0x790] = (((unint64_t)(a1 - 747658360) << ((a4 - 56) ^ 0x4B ^ ((a4 - 56) | 0x41) ^ 0xBu)) & 0x1B57CFEBELL)
               + ((a1 - 747658360) ^ 0x3CBD7AFFDABE7F5FLL)
               - 0x3CBD7AFFDABE7F5FLL;
  LODWORD(STACK[0x510]) = a2;
  LODWORD(STACK[0x500]) = a3;
  v8 = a3 + a2 != -536873483 && (a3 + a2 + 536873483) < 0xFFFFFFF9;
  v9 = *(uint64_t (**)(uint64_t))(v7 + 8 * (a4 ^ (214 * v8)));
  LODWORD(STACK[0x530]) = v6;
  return v9(0x743558ED9D085299);
}

uint64_t sub_1CF34D524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x7B8]
                                        + 8
                                        * (int)(((STACK[0x7A0] - (a7 + STACK[0x4C0]) - v9 - v8 >= (unint64_t)(11 * (v7 ^ 0x240u))
                                                                                                - 347)
                                               * (((v7 + 1522112795) & 0xA54666DF) - 282)) ^ v7))
                            - 8))();
}

uint64_t sub_1CF34D590(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  int v5;
  unint64_t v6;
  uint64_t v7;

  v7 = *(_QWORD *)(STACK[0x7B8] + 8 * ((191 * (a2 >= ((((8 * v5) ^ 0x1208) + 147) ^ (33 * (v5 ^ 0x257u))))) ^ v5));
  *(int64x2_t *)&STACK[0x740] = vdupq_n_s64(v6);
  *(int64x2_t *)&STACK[0x730] = vdupq_n_s64(a5);
  return ((uint64_t (*)(void))(v7 - 8))();
}

uint64_t sub_1CF34D63C(double a1, double a2, double a3, double a4, double a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  unsigned int v26;
  unsigned int v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  int v32;
  int64x2_t v33;
  int64x2_t v34;
  int64x2_t v35;
  int64x2_t v36;
  int64x2_t v37;
  uint64_t v38;
  int64x2_t v39;
  int64x2_t v40;
  int64x2_t v41;
  int64x2_t v42;
  int64x2_t v43;
  int64x2_t v44;
  int64x2_t v45;
  int64x2_t v46;
  int8x16_t v47;
  int8x16_t v48;
  int64x2_t v49;
  int64x2_t v50;
  int64x2_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int64x2_t v54;
  int64x2_t v55;
  int64x2_t v56;
  int64x2_t v57;
  int64x2_t v58;
  int8x16_t v59;
  int8x16_t v60;
  int64x2_t v61;
  int64x2_t v62;
  int64x2_t v63;
  int64x2_t v64;
  int64x2_t v65;
  int64x2_t v66;
  int64x2_t v67;
  int64x2_t v68;
  int64x2_t v69;
  int64x2_t v70;
  int64x2_t v71;
  int64x2_t v72;
  int64x2_t v73;
  int64x2_t v74;
  int64x2_t v75;
  int64x2_t v76;
  int64x2_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int64x2_t v81;
  int64x2_t v82;
  int64x2_t v83;
  int8x16_t v84;
  int8x16_t v85;
  uint64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int64x2_t v90;
  int8x16_t v91;
  int64x2_t v92;
  int64x2_t v93;
  int64x2_t v94;
  int64x2_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int64x2_t v100;
  int64x2_t v101;
  int64x2_t v102;
  int8x16_t v103;
  int8x16_t v104;
  int64x2_t v105;
  int64x2_t v106;
  int64x2_t v107;
  int64x2_t v108;
  int8x16_t v109;
  int64x2_t v110;
  int64x2_t v111;
  int64x2_t v112;
  int64x2_t v113;
  int64x2_t v114;
  int64x2_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int8x16_t v121;
  int64x2_t v122;
  int64x2_t v123;
  int64x2_t v124;
  int64x2_t v125;
  int64x2_t v126;
  int8x16_t v127;
  int8x16_t v128;
  int8x16_t v129;
  int64x2_t v130;
  int64x2_t v131;
  int64x2_t v132;
  int64x2_t v133;
  int64x2_t v134;
  int64x2_t v135;
  int64x2_t v136;
  int64x2_t v137;
  int64x2_t v138;
  int64x2_t v139;
  int8x16_t v140;
  int64x2_t v141;
  int64x2_t v142;
  int64x2_t v143;
  int64x2_t v144;
  int8x16_t v145;
  int64x2_t v146;
  int64x2_t v147;
  int64x2_t v148;
  int64x2_t v149;
  int64x2_t v150;
  int64x2_t v151;
  int64x2_t v152;
  int64x2_t v153;
  int64x2_t v154;
  int64x2_t v155;
  int64x2_t v156;
  int8x16_t v157;
  int8x16_t v158;
  int64x2_t v159;
  int64x2_t v160;
  int64x2_t v161;
  int64x2_t v162;
  int8x16_t v163;
  int64x2_t v164;
  int64x2_t v165;
  int64x2_t v166;
  int64x2_t v167;
  int64x2_t v168;
  int64x2_t v169;
  int64x2_t v170;
  int64x2_t v171;
  int64x2_t v172;
  int64x2_t v173;
  int64x2_t v174;
  int8x16_t v175;
  int8x16x4_t v177;

  *(_OWORD *)&STACK[0x5D0] = v17;
  *(_OWORD *)&STACK[0x5E0] = v16;
  *(_OWORD *)&STACK[0x5F0] = v15;
  *(_OWORD *)&STACK[0x600] = v25;
  *(_OWORD *)&STACK[0x610] = v24;
  *(_OWORD *)&STACK[0x620] = v23;
  *(_OWORD *)&STACK[0x630] = v22;
  *(_OWORD *)&STACK[0x640] = v21;
  *(_OWORD *)&STACK[0x650] = v20;
  *(_OWORD *)&STACK[0x660] = v19;
  *(_OWORD *)&STACK[0x670] = v18;
  *(__n128 *)&STACK[0x680] = a8;
  *(__n128 *)&STACK[0x690] = a7;
  *(__n128 *)&STACK[0x6A0] = a6;
  v26 = -(a10 & 0xFFFFFFF0);
  v27 = LODWORD(STACK[0x500]) + 536873483 + LODWORD(STACK[0x510]);
  LODWORD(STACK[0x5C0]) = v27 - 7;
  LODWORD(STACK[0x5B0]) = v27 - 6;
  LODWORD(STACK[0x5A0]) = v27 - 5;
  v28 = STACK[0x7B8];
  v29 = STACK[0x470];
  v30 = STACK[0x7A0];
  v31 = STACK[0x790];
  v32 = STACK[0x530];
  v33.i64[0] = STACK[0x7A0] + LODWORD(STACK[0x5B0]);
  v33.i64[1] = STACK[0x7A0] + LODWORD(STACK[0x5C0]);
  v34.i64[0] = STACK[0x7A0] + v27 - 4;
  v34.i64[1] = STACK[0x7A0] + LODWORD(STACK[0x5A0]);
  v35.i64[0] = STACK[0x7A0] + v27 - 2;
  v35.i64[1] = STACK[0x7A0] + v27 - 3;
  *(int64x2_t *)&STACK[0x710] = v35;
  v36.i64[0] = v30 + v27 + 2;
  v36.i64[1] = v30 + v27 + 1;
  v37.i64[0] = v30 + v27 + 4;
  v37.i64[1] = v30 + v27 + 3;
  v38 = v27 + 6;
  v39.i64[0] = v30 + v38;
  v39.i64[1] = v30 + v27 + 5;
  v40.i64[0] = v30 + v27;
  v40.i64[1] = v30 + v32 + ((a15 + 1231) ^ 0xB1830CEC);
  v41 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v40, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v40, 8uLL)), *(int8x16_t *)&STACK[0x770]);
  v42 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v39, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v39, 8uLL)), *(int8x16_t *)&STACK[0x770]);
  v43 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v37, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v37, 8uLL)), *(int8x16_t *)&STACK[0x770]);
  v44 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v36, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v36, 8uLL)), *(int8x16_t *)&STACK[0x770]);
  *(int8x16_t *)&STACK[0x6E0] = vorrq_s8((int8x16_t)vshlq_n_s64(v35, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v35, 8uLL));
  *(int64x2_t *)&STACK[0x700] = v34;
  *(int8x16_t *)&STACK[0x6D0] = vorrq_s8((int8x16_t)vshlq_n_s64(v34, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v34, 8uLL));
  *(int64x2_t *)&STACK[0x6F0] = v33;
  v45 = vsubq_s64(v41, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v41, v41), *(int64x2_t *)&STACK[0x740]), *(int8x16_t *)&STACK[0x5D0]));
  v46 = vsubq_s64(v43, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v43, v43), *(int64x2_t *)&STACK[0x740]), *(int8x16_t *)&STACK[0x5D0]));
  v47 = (int8x16_t)vaddq_s64(vsubq_s64(v44, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v44, v44), *(int64x2_t *)&STACK[0x740]), *(int8x16_t *)&STACK[0x5D0])), *(int64x2_t *)&STACK[0x5E0]);
  v48 = (int8x16_t)vaddq_s64(v46, *(int64x2_t *)&STACK[0x5E0]);
  v49 = (int64x2_t)veorq_s8(v48, *(int8x16_t *)&STACK[0x730]);
  v50 = (int64x2_t)veorq_s8(v47, *(int8x16_t *)&STACK[0x730]);
  v51 = (int64x2_t)veorq_s8(v47, *(int8x16_t *)&STACK[0x6A0]);
  v52 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v50, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v50, 8uLL)), v51);
  v53 = vorrq_s8((int8x16_t)vshlq_n_s64(v51, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v47, 0x3DuLL));
  v54 = (int64x2_t)veorq_s8(v48, *(int8x16_t *)&STACK[0x6A0]);
  v55 = (int64x2_t)veorq_s8(v52, *(int8x16_t *)&STACK[0x690]);
  v56 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v49, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v49, 8uLL)), v54), *(int8x16_t *)&STACK[0x690]);
  v57 = (int64x2_t)veorq_s8((int8x16_t)v56, vorrq_s8((int8x16_t)vshlq_n_s64(v54, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v48, 0x3DuLL)));
  v58 = (int64x2_t)veorq_s8((int8x16_t)v55, v53);
  v59 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v55, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v55, 8uLL)), v58);
  v60 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v56, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v56, 8uLL)), v57);
  v61 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x670], v59), (int64x2_t)vorrq_s8(v59, *(int8x16_t *)&STACK[0x680]))), *(int8x16_t *)&STACK[0x660]);
  v62 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x670], v60), (int64x2_t)vorrq_s8(v60, *(int8x16_t *)&STACK[0x680]))), *(int8x16_t *)&STACK[0x660]);
  v63 = (int64x2_t)veorq_s8((int8x16_t)v62, vorrq_s8((int8x16_t)vshlq_n_s64(v57, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v57, 0x3DuLL)));
  v64 = (int64x2_t)veorq_s8((int8x16_t)v61, vorrq_s8((int8x16_t)vshlq_n_s64(v58, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v58, 0x3DuLL)));
  v65 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v62, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v62, 8uLL)), v63), *(int8x16_t *)&STACK[0x750]);
  v66 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v61, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v61, 8uLL)), v64), *(int8x16_t *)&STACK[0x750]);
  v67 = (int64x2_t)veorq_s8((int8x16_t)v66, vorrq_s8((int8x16_t)vshlq_n_s64(v64, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v64, 0x3DuLL)));
  v68 = (int64x2_t)veorq_s8((int8x16_t)v65, vorrq_s8((int8x16_t)vshlq_n_s64(v63, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v63, 0x3DuLL)));
  v69 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v65, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v65, 8uLL)), v68);
  v70 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v66, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v66, 8uLL)), v67);
  v71 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v70, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v70, v70), *(int8x16_t *)&STACK[0x650])), *(int64x2_t *)&STACK[0x640]), *(int8x16_t *)&STACK[0x630]);
  v72 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v69, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v69, v69), *(int8x16_t *)&STACK[0x650])), *(int64x2_t *)&STACK[0x640]), *(int8x16_t *)&STACK[0x630]);
  v73 = (int64x2_t)veorq_s8((int8x16_t)v72, vorrq_s8((int8x16_t)vshlq_n_s64(v68, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v68, 0x3DuLL)));
  v74 = (int64x2_t)veorq_s8((int8x16_t)v71, vorrq_s8((int8x16_t)vshlq_n_s64(v67, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v67, 0x3DuLL)));
  v75 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v72, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v72, 8uLL)), v73), *(int8x16_t *)&STACK[0x620]);
  v76 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v71, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v71, 8uLL)), v74), *(int8x16_t *)&STACK[0x620]);
  v77 = (int64x2_t)veorq_s8((int8x16_t)v76, vorrq_s8((int8x16_t)vshlq_n_s64(v74, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v74, 0x3DuLL)));
  v78 = (int64x2_t)veorq_s8((int8x16_t)v75, vorrq_s8((int8x16_t)vshlq_n_s64(v73, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v73, 0x3DuLL)));
  v79 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v75, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v75, 8uLL)), v78);
  v80 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v76, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v76, 8uLL)), v77);
  v81 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v80, v80), *(int8x16_t *)&STACK[0x610]), v80), *(int64x2_t *)&STACK[0x600]), *(int8x16_t *)&STACK[0x5F0]);
  v82 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v79, v79), *(int8x16_t *)&STACK[0x610]), v79), *(int64x2_t *)&STACK[0x600]), *(int8x16_t *)&STACK[0x5F0]);
  v83 = (int64x2_t)veorq_s8((int8x16_t)v81, vorrq_s8((int8x16_t)vshlq_n_s64(v77, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v77, 0x3DuLL)));
  v84 = (int8x16_t)vdupq_n_s64(0x38uLL);
  v85 = (int8x16_t)vaddq_s64(vsubq_s64(v42, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v42, v42), *(int64x2_t *)&STACK[0x740]), *(int8x16_t *)&STACK[0x5D0])), *(int64x2_t *)&STACK[0x5E0]);
  v86 = (uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v82, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v82, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v82, vorrq_s8((int8x16_t)vshlq_n_s64(v78, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v78, 0x3DuLL)))), *(int8x16_t *)&STACK[0x720]);
  v177.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v81, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v81, 8uLL)), v83), *(int8x16_t *)&STACK[0x720]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v36, 3uLL), v84)));
  v177.val[1] = (int8x16_t)vshlq_u64(v86, (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v37, 3uLL), v84)));
  v87 = (int64x2_t)veorq_s8(v85, *(int8x16_t *)&STACK[0x730]);
  v88 = (int64x2_t)veorq_s8(v85, *(int8x16_t *)&STACK[0x6A0]);
  v89 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v87, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v87, 8uLL)), v88), *(int8x16_t *)&STACK[0x690]);
  v90 = (int64x2_t)veorq_s8((int8x16_t)v89, vorrq_s8((int8x16_t)vshlq_n_s64(v88, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v85, 0x3DuLL)));
  v91 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v89, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v89, 8uLL)), v90);
  v92 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x670], v91), (int64x2_t)vorrq_s8(v91, *(int8x16_t *)&STACK[0x680]))), *(int8x16_t *)&STACK[0x660]);
  v93 = (int64x2_t)veorq_s8((int8x16_t)v92, vorrq_s8((int8x16_t)vshlq_n_s64(v90, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 0x3DuLL)));
  v94 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v92, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v92, 8uLL)), v93), *(int8x16_t *)&STACK[0x750]);
  v95 = (int64x2_t)veorq_s8((int8x16_t)v94, vorrq_s8((int8x16_t)vshlq_n_s64(v93, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v93, 0x3DuLL)));
  v96 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v94, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v94, 8uLL)), v95);
  v97 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v96, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v96, v96), *(int8x16_t *)&STACK[0x650])), *(int64x2_t *)&STACK[0x640]), *(int8x16_t *)&STACK[0x630]);
  v98 = (int64x2_t)veorq_s8((int8x16_t)v97, vorrq_s8((int8x16_t)vshlq_n_s64(v95, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v95, 0x3DuLL)));
  v99 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v97, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v97, 8uLL)), v98), *(int8x16_t *)&STACK[0x620]);
  v100 = (int64x2_t)veorq_s8((int8x16_t)v99, vorrq_s8((int8x16_t)vshlq_n_s64(v98, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v98, 0x3DuLL)));
  v101 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v99, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v99, 8uLL)), v100);
  v102 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v101, v101), *(int8x16_t *)&STACK[0x610]), v101), *(int64x2_t *)&STACK[0x600]), *(int8x16_t *)&STACK[0x5F0]);
  v103 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v102, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v102, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v102, vorrq_s8((int8x16_t)vshlq_n_s64(v100, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v100, 0x3DuLL))));
  v104 = (int8x16_t)vaddq_s64(v45, *(int64x2_t *)&STACK[0x5E0]);
  v177.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8(v103, *(int8x16_t *)&STACK[0x720]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v39, 3uLL), v84)));
  v105 = (int64x2_t)veorq_s8(v104, *(int8x16_t *)&STACK[0x730]);
  v106 = (int64x2_t)veorq_s8(v104, *(int8x16_t *)&STACK[0x6A0]);
  v107 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v105, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v105, 8uLL)), v106), *(int8x16_t *)&STACK[0x690]);
  v108 = (int64x2_t)veorq_s8((int8x16_t)v107, vorrq_s8((int8x16_t)vshlq_n_s64(v106, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 0x3DuLL)));
  v109 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v107, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v107, 8uLL)), v108);
  v110 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x670], v109), (int64x2_t)vorrq_s8(v109, *(int8x16_t *)&STACK[0x680]))), *(int8x16_t *)&STACK[0x660]);
  v111 = (int64x2_t)veorq_s8((int8x16_t)v110, vorrq_s8((int8x16_t)vshlq_n_s64(v108, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v108, 0x3DuLL)));
  v112 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v110, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v110, 8uLL)), v111), *(int8x16_t *)&STACK[0x750]);
  v113 = (int64x2_t)veorq_s8((int8x16_t)v112, vorrq_s8((int8x16_t)vshlq_n_s64(v111, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v111, 0x3DuLL)));
  v114 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v112, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v112, 8uLL)), v113);
  v115 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v114, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v114, v114), *(int8x16_t *)&STACK[0x650])), *(int64x2_t *)&STACK[0x640]), *(int8x16_t *)&STACK[0x630]);
  v116 = (int64x2_t)veorq_s8((int8x16_t)v115, vorrq_s8((int8x16_t)vshlq_n_s64(v113, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v113, 0x3DuLL)));
  v117 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v115, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v115, 8uLL)), v116), *(int8x16_t *)&STACK[0x620]);
  v118 = (int64x2_t)veorq_s8((int8x16_t)v117, vorrq_s8((int8x16_t)vshlq_n_s64(v116, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v116, 0x3DuLL)));
  v119 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v117, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v117, 8uLL)), v118);
  v120 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v119, v119), *(int8x16_t *)&STACK[0x610]), v119), *(int64x2_t *)&STACK[0x600]), *(int8x16_t *)&STACK[0x5F0]);
  v121 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v120, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v120, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v120, vorrq_s8((int8x16_t)vshlq_n_s64(v118, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v118, 0x3DuLL))));
  v106.i64[0] = v30 + v27 - 8;
  v106.i64[1] = v30 + v27 - 9;
  v122 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x6E0], *(int8x16_t *)&STACK[0x770]);
  v123 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x6D0], *(int8x16_t *)&STACK[0x770]);
  v124 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v33, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v33, 8uLL)), *(int8x16_t *)&STACK[0x770]);
  v177.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8(v121, *(int8x16_t *)&STACK[0x720]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v40, 3uLL), v84)));
  v125 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v106, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v106, 8uLL)), *(int8x16_t *)&STACK[0x770]);
  v126 = vsubq_s64(v122, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v122, v122), *(int64x2_t *)&STACK[0x740]), *(int8x16_t *)&STACK[0x5D0]));
  v127 = (int8x16_t)vaddq_s64(vsubq_s64(v125, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v125, v125), *(int64x2_t *)&STACK[0x740]), *(int8x16_t *)&STACK[0x5D0])), *(int64x2_t *)&STACK[0x5E0]);
  v128 = (int8x16_t)vaddq_s64(vsubq_s64(v124, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v124, v124), *(int64x2_t *)&STACK[0x740]), *(int8x16_t *)&STACK[0x5D0])), *(int64x2_t *)&STACK[0x5E0]);
  v40.i64[0] = vqtbl4q_s8(v177, (int8x16_t)xmmword_1CF37DAC0).u64[0];
  v177.val[0] = veorq_s8(v128, *(int8x16_t *)&STACK[0x730]);
  v177.val[1] = veorq_s8(v127, *(int8x16_t *)&STACK[0x730]);
  v177.val[2] = veorq_s8(v127, *(int8x16_t *)&STACK[0x6A0]);
  v177.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[1], 8uLL)), (int64x2_t)v177.val[2]);
  v129 = vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v127, 0x3DuLL));
  v177.val[2] = veorq_s8(v128, *(int8x16_t *)&STACK[0x6A0]);
  v177.val[1] = veorq_s8(v177.val[1], *(int8x16_t *)&STACK[0x690]);
  v177.val[0] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[0], 8uLL)), (int64x2_t)v177.val[2]), *(int8x16_t *)&STACK[0x690]);
  v130 = (int64x2_t)veorq_s8(v177.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v128, 0x3DuLL)));
  v131 = (int64x2_t)veorq_s8(v177.val[1], v129);
  v177.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[1], 8uLL)), v131);
  v177.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[0], 8uLL)), v130);
  v177.val[1] = veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x670], v177.val[1]), (int64x2_t)vorrq_s8(v177.val[1], *(int8x16_t *)&STACK[0x680]))), *(int8x16_t *)&STACK[0x660]);
  v177.val[0] = veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x670], v177.val[0]), (int64x2_t)vorrq_s8(v177.val[0], *(int8x16_t *)&STACK[0x680]))), *(int8x16_t *)&STACK[0x660]);
  v132 = (int64x2_t)veorq_s8(v177.val[0], vorrq_s8((int8x16_t)vshlq_n_s64(v130, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v130, 0x3DuLL)));
  v133 = (int64x2_t)veorq_s8(v177.val[1], vorrq_s8((int8x16_t)vshlq_n_s64(v131, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v131, 0x3DuLL)));
  v177.val[0] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[0], 8uLL)), v132), *(int8x16_t *)&STACK[0x750]);
  v177.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[1], 8uLL)), v133), *(int8x16_t *)&STACK[0x750]);
  v134 = (int64x2_t)veorq_s8(v177.val[1], vorrq_s8((int8x16_t)vshlq_n_s64(v133, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133, 0x3DuLL)));
  v135 = (int64x2_t)veorq_s8(v177.val[0], vorrq_s8((int8x16_t)vshlq_n_s64(v132, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v132, 0x3DuLL)));
  v177.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[0], 8uLL)), v135);
  v177.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[1], 8uLL)), v134);
  v177.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v177.val[1], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v177.val[1], (int64x2_t)v177.val[1]), *(int8x16_t *)&STACK[0x650])), *(int64x2_t *)&STACK[0x640]), *(int8x16_t *)&STACK[0x630]);
  v177.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v177.val[0], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v177.val[0], (int64x2_t)v177.val[0]), *(int8x16_t *)&STACK[0x650])), *(int64x2_t *)&STACK[0x640]), *(int8x16_t *)&STACK[0x630]);
  v136 = (int64x2_t)veorq_s8(v177.val[0], vorrq_s8((int8x16_t)vshlq_n_s64(v135, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v135, 0x3DuLL)));
  v137 = (int64x2_t)veorq_s8(v177.val[1], vorrq_s8((int8x16_t)vshlq_n_s64(v134, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v134, 0x3DuLL)));
  v177.val[0] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[0], 8uLL)), v136), *(int8x16_t *)&STACK[0x620]);
  v177.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[1], 8uLL)), v137), *(int8x16_t *)&STACK[0x620]);
  v138 = (int64x2_t)veorq_s8(v177.val[1], vorrq_s8((int8x16_t)vshlq_n_s64(v137, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v137, 0x3DuLL)));
  v139 = (int64x2_t)veorq_s8(v177.val[0], vorrq_s8((int8x16_t)vshlq_n_s64(v136, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v136, 0x3DuLL)));
  v177.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[0], 8uLL)), v139);
  v177.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[1], 8uLL)), v138);
  v177.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v177.val[1], (int64x2_t)v177.val[1]), *(int8x16_t *)&STACK[0x610]), (int64x2_t)v177.val[1]), *(int64x2_t *)&STACK[0x600]), *(int8x16_t *)&STACK[0x5F0]);
  v177.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v177.val[0], (int64x2_t)v177.val[0]), *(int8x16_t *)&STACK[0x610]), (int64x2_t)v177.val[0]), *(int64x2_t *)&STACK[0x600]), *(int8x16_t *)&STACK[0x5F0]);
  v140 = (int8x16_t)vaddq_s64(vsubq_s64(v123, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v123, v123), *(int64x2_t *)&STACK[0x740]), *(int8x16_t *)&STACK[0x5D0])), *(int64x2_t *)&STACK[0x5E0]);
  v177.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[1], 8uLL)), (int64x2_t)veorq_s8(v177.val[1], vorrq_s8((int8x16_t)vshlq_n_s64(v138, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v138, 0x3DuLL)))), *(int8x16_t *)&STACK[0x720]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v106, 3uLL), v84)));
  v177.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v177.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177.val[0], 8uLL)), (int64x2_t)veorq_s8(v177.val[0], vorrq_s8((int8x16_t)vshlq_n_s64(v139, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v139, 0x3DuLL)))), *(int8x16_t *)&STACK[0x720]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x6F0], 3uLL),
                                                                v84)));
  v141 = (int64x2_t)veorq_s8(v140, *(int8x16_t *)&STACK[0x730]);
  v142 = (int64x2_t)veorq_s8(v140, *(int8x16_t *)&STACK[0x6A0]);
  v143 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v141, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v141, 8uLL)), v142), *(int8x16_t *)&STACK[0x690]);
  v144 = (int64x2_t)veorq_s8((int8x16_t)v143, vorrq_s8((int8x16_t)vshlq_n_s64(v142, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v140, 0x3DuLL)));
  v145 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v143, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v143, 8uLL)), v144);
  v146 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x670], v145), (int64x2_t)vorrq_s8(v145, *(int8x16_t *)&STACK[0x680]))), *(int8x16_t *)&STACK[0x660]);
  v147 = (int64x2_t)veorq_s8((int8x16_t)v146, vorrq_s8((int8x16_t)vshlq_n_s64(v144, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v144, 0x3DuLL)));
  v148 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v146, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146, 8uLL)), v147), *(int8x16_t *)&STACK[0x750]);
  v149 = (int64x2_t)veorq_s8((int8x16_t)v148, vorrq_s8((int8x16_t)vshlq_n_s64(v147, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v147, 0x3DuLL)));
  v150 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v148, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v148, 8uLL)), v149);
  v151 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v150, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v150, v150), *(int8x16_t *)&STACK[0x650])), *(int64x2_t *)&STACK[0x640]), *(int8x16_t *)&STACK[0x630]);
  v152 = (int64x2_t)veorq_s8((int8x16_t)v151, vorrq_s8((int8x16_t)vshlq_n_s64(v149, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v149, 0x3DuLL)));
  v153 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v151, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v151, 8uLL)), v152), *(int8x16_t *)&STACK[0x620]);
  v154 = (int64x2_t)veorq_s8((int8x16_t)v153, vorrq_s8((int8x16_t)vshlq_n_s64(v152, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152, 0x3DuLL)));
  v155 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v153, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v153, 8uLL)), v154);
  v156 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v155, v155), *(int8x16_t *)&STACK[0x610]), v155), *(int64x2_t *)&STACK[0x600]), *(int8x16_t *)&STACK[0x5F0]);
  v157 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v156, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v156, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v156, vorrq_s8((int8x16_t)vshlq_n_s64(v154, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v154, 0x3DuLL))));
  v158 = (int8x16_t)vaddq_s64(v126, *(int64x2_t *)&STACK[0x5E0]);
  v177.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8(v157, *(int8x16_t *)&STACK[0x720]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x700], 3uLL), v84)));
  v159 = (int64x2_t)veorq_s8(v158, *(int8x16_t *)&STACK[0x730]);
  v160 = (int64x2_t)veorq_s8(v158, *(int8x16_t *)&STACK[0x6A0]);
  v161 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v159, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v159, 8uLL)), v160), *(int8x16_t *)&STACK[0x690]);
  v162 = (int64x2_t)veorq_s8((int8x16_t)v161, vorrq_s8((int8x16_t)vshlq_n_s64(v160, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v158, 0x3DuLL)));
  v163 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v161, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v161, 8uLL)), v162);
  v164 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x760], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x670], v163), (int64x2_t)vorrq_s8(v163, *(int8x16_t *)&STACK[0x680]))), *(int8x16_t *)&STACK[0x660]);
  v165 = (int64x2_t)veorq_s8((int8x16_t)v164, vorrq_s8((int8x16_t)vshlq_n_s64(v162, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162, 0x3DuLL)));
  v166 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v164, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v164, 8uLL)), v165), *(int8x16_t *)&STACK[0x750]);
  v167 = (int64x2_t)veorq_s8((int8x16_t)v166, vorrq_s8((int8x16_t)vshlq_n_s64(v165, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v165, 0x3DuLL)));
  v168 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v166, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v166, 8uLL)), v167);
  v169 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v168, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v168, v168), *(int8x16_t *)&STACK[0x650])), *(int64x2_t *)&STACK[0x640]), *(int8x16_t *)&STACK[0x630]);
  v170 = (int64x2_t)veorq_s8((int8x16_t)v169, vorrq_s8((int8x16_t)vshlq_n_s64(v167, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v167, 0x3DuLL)));
  v171 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v169, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v169, 8uLL)), v170), *(int8x16_t *)&STACK[0x620]);
  v172 = (int64x2_t)veorq_s8((int8x16_t)v171, vorrq_s8((int8x16_t)vshlq_n_s64(v170, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v170, 0x3DuLL)));
  v173 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v171, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v171, 8uLL)), v172);
  v174 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v173, v173), *(int8x16_t *)&STACK[0x610]), v173), *(int64x2_t *)&STACK[0x600]), *(int8x16_t *)&STACK[0x5F0]);
  v177.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v174, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v174, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v174, vorrq_s8((int8x16_t)vshlq_n_s64(v172, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v172, 0x3DuLL)))), *(int8x16_t *)&STACK[0x720]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x710], 3uLL), v84)));
  v40.i64[1] = vqtbl4q_s8(v177, (int8x16_t)xmmword_1CF37DAC0).u64[0];
  v175 = vrev64q_s8((int8x16_t)v40);
  *(int8x16_t *)(v29 + v38 + v31) = veorq_s8(vextq_s8(v175, v175, 8uLL), *(int8x16_t *)(v30 + v38 - 15));
  return ((uint64_t (*)(void))(*(_QWORD *)(v28 + 8 * ((82 * (v26 != -16)) ^ (a15 + 83))) - 4))();
}

void sub_1CF34E3C8()
{
  JUMPOUT(0x1CF34D704);
}

uint64_t sub_1CF34E3D0(int a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v7
                                                     + 8
                                                     * ((942
                                                       * ((((503 * (v5 ^ 0x1D1)) ^ (*(_QWORD *)(v4 - 0x23120F4208F8DDDLL) == 0x23120F4208F8DDDLL)) & 1) == 0)) ^ v5))
                                         - 8))(v6 + a1 + ((7 * (v5 ^ 0x16A)) ^ (a4 - 1291)));
}

uint64_t sub_1CF34F00C@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;

  v4 = (((a2 - 1218) | 0x100) ^ 0xD36FA2C5) + a1;
  v5 = STACK[0x520];
  *(_DWORD *)(((2 * (_DWORD)v4) & 0xDFEFFBBC) + STACK[0x520] + (v4 ^ 0x1D7FFBFB6FF7FDDELL) - 0x1D7FFBFB6FF7FDDELL) = 0;
  *(_WORD *)(((2 * (a1 - 747658356)) & 0xF35F6FFC)
           + v5
           + ((a1 - 747658356) ^ 0x67FFF66979AFB7FELL)
           - 0x67FFF66979AFB7FELL) = -9392;
  v6 = (16 - LODWORD(STACK[0x4B0]));
  v7 = LODWORD(STACK[0x4B0]) + 2 * (v6 & 0xFFFFFFF7 ^ STACK[0x490] & 3);
  v8 = ((2 * (a1 - 747658354)) & 0x1DEEFFFBALL)
     + ((a1 - 747658354) ^ 0xDDD7FBDFEF77FFDDLL)
     + v5
     + 0x2228042010880023;
  *(_WORD *)v8 = 0;
  *(_BYTE *)(v8 + 2) = 0;
  *(_BYTE *)(v8 + 3) = (-28 - v7) ^ 0xD4;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3
                                                               + 8
                                                               * (a2 ^ (((v6 ^ 0xFFFE93B7DFFDFF7FLL)
                                                                       + 2 * v6 != 0xFFFE93B7DFFDFF7FLL)
                                                                      * v2)))
                                                   - 4))(-3355036427, 69);
}

uint64_t sub_1CF34F1AC@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  _BOOL4 v10;
  unint64_t v11;

  v10 = v5 < v6;
  *(_BYTE *)(v4 + v3) = 0;
  v11 = v3 + 1;
  if (v10 == v11 > (unint64_t)((a3 + v7) & v8) + a1)
    v10 = v11 + v6 < v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((v10 * a2) ^ a3)) - 4))();
}

uint64_t sub_1CF34F1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)STACK[0x4E0] = a3;
  *(_DWORD *)STACK[0x4D0] = STACK[0x4A0];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))STACK[0x4F0])(a1, a2, 0x373C0AAD4CE136CBLL);
}

uint64_t sub_1CF34F238()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 - 10) ^ (1535 * v0))) - (v1 ^ 0xAu) + 341))();
}

void sub_1CF34F264()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 248) = *(_QWORD *)(v0 + 472);
  LODWORD(STACK[0xA9C]) = STACK[0x86C];
  JUMPOUT(0x1CF34F280);
}

uint64_t sub_1CF34F2A4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((23 * (STACK[0x7C8] != 0)) ^ (v0 + 955))) - 8))();
}

void sub_1CF34F2D4()
{
  sub_1CF370D34();
  JUMPOUT(0x1CF34F2ECLL);
}

uint64_t sub_1CF34F338()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  uint64_t v5;

  v3 = ((uint64_t (*)(_QWORD, _QWORD, _QWORD))*(&off_1E8C4D9A0 + v0 - 374))(0, 0, 0);
  STACK[0x7D8] = v3;
  v4 = (void (*)(void))*(&off_1E8C4D9A0 + (v0 ^ 0x1B5));
  STACK[0x740] = (unint64_t)*(&off_1E8C4D9A0 + v0 - 329) - 3;
  v4();
  v5 = ((uint64_t (*)(_QWORD, uint64_t))*(&off_1E8C4D9A0 + (v0 ^ 0x1AA)))(*(_QWORD *)(v1 + 232), v3);
  *(_QWORD *)(v1 + 272) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((988 * (v5 != 0)) ^ v0)) - 8))();
}

uint64_t sub_1CF34F408()
{
  int v0;
  uint64_t v1;
  _BOOL4 v2;

  v2 = ((uint64_t (*)(void))*(&off_1E8C4D9A0 + v0 - 1455))() == (_QWORD)*(&off_1E8C4D9A0 + (v0 ^ 0x648u)) - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v2 * (((v0 - 1006) ^ 0x419) - 1196)) ^ v0)) - 4))();
}

uint64_t sub_1CF34F460()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = ((uint64_t (*)(uint64_t, char *))*(&off_1E8C4D9A0 + (v1 ^ 0x61F)))(v0, (char *)*(&off_1E8C4D9A0 + (v1 ^ 0x657)) - 4) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v3 * (v1 - 1121 + ((v1 - 1089700647) & 0x40F37F3F) - 945)) ^ v1))
                            - 4))();
}

uint64_t sub_1CF34F4D0(uint64_t a1)
{
  uint64_t (*v1)(void);
  int v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = v1() == (_QWORD)*(&off_1E8C4D9A0 + (v2 ^ 0x18F)) - 4;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * ((979 * v5) ^ v2)) - ((v2 + 768) ^ 0x6BEu) + 533))(a1);
}

uint64_t sub_1CF34F528()
{
  unsigned int v0;
  uint64_t v1;
  int v2;
  unsigned int v3;

  v2 = ((uint64_t (*)(void))*(&off_1E8C4D9A0 + (int)(v0 - 1105)))();
  v3 = v2 + ((3 * (v0 ^ 0x4DA)) ^ 0xACED60AF) - ((2 * v2) & 0x59DAC388);
  LODWORD(STACK[0x82C]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(v0 ^ ((v3 == -1393729084) << 6))) - (v0 ^ 0x4ABLL)))();
}

uint64_t sub_1CF34F598()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(*(_QWORD *)(v3
                                     + 8
                                     * ((((*(uint64_t (**)(uint64_t, unint64_t, unint64_t *))(v2 + 8 * (v0 ^ 0x1E7)))(v1, STACK[0x740], &STACK[0xA08]) != 0)* ((v0 ^ 0x3BE) + 704)) ^ v0))- 8);
  return v4();
}

uint64_t sub_1CF34F5F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int v3;
  int v4;
  unint64_t v5;
  _BYTE *v6;
  unsigned int v7;
  _BYTE *v8;

  v4 = STACK[0xA08];
  v5 = STACK[0x7A0];
  v6 = (char *)&STACK[0xB90] + STACK[0x7A0] + (((v3 - 539) | 0x304u) ^ 0xE1877EAEA126B1D7);
  v1[71] = v6;
  v1[49] = a1;
  v1[9] = 0;
  STACK[0x7E8] = 0;
  LODWORD(STACK[0x9A8]) = -1129976585;
  v7 = (v4 ^ (v3 + 1895791266)) + ((2 * v4) & 0xE1FEF97E) - 539255865;
  LODWORD(STACK[0x81C]) = 0;
  v1[1] = v5 - 48;
  v1[2] = 0;
  LODWORD(STACK[0x914]) = -1129976585;
  v8 = sub_1CF36FDF0(v6, 0, 0x20uLL);
  return ((uint64_t (*)(_BYTE *))(*(_QWORD *)(v2 + 8 * ((434 * (v7 == 1356535942)) ^ (v3 + 151))) - 4))(v8);
}

uint64_t sub_1CF34F6C8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x318])(128);
  STACK[0x8E8] = v2 + 0x29E41201BECB398ELL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1746 * (((v2 == 0) ^ (v0 + 75)) & 1)) ^ v0))
                            - 4))();
}

uint64_t sub_1CF34F72C(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 | 0x104) ^ (51 * (a1 == 0))))
                            - ((11 * ((v1 | 0x104) ^ 0x574) + 655501312) & 0xD8EDD7FF ^ 0x167)))();
}

uint64_t sub_1CF34F784(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(a1 + 8) = 0x373C0AAD4CE136CBLL;
  v3 = ((uint64_t (*)(uint64_t))STACK[0x318])(112);
  STACK[0x7F0] = v3 + 0xFCF3D5A857A9B08;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v3 != 0) * ((5 * (v1 ^ 0x1EC)) ^ 0x5C0)) ^ (v1 - 24))))();
}

uint64_t sub_1CF34F858(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _BOOL4 v6;

  *(_WORD *)(a1 + 80) = 25175;
  *(_QWORD *)a1 = 0x65EE1E795321A838;
  memset((void *)(a1 + 8), 79, 64);
  *(_QWORD *)(a1 + 72) = 0x116585BF116585BFLL;
  v4 = STACK[0x7F0];
  *(_DWORD *)(STACK[0x7F0] - 0xFCF3D5A857A9AB4) = 1095089643;
  *(_DWORD *)(v4 - 0xFCF3D5A857A9AA0) = 2126566836;
  memset((void *)(v4 - 0xFCF3D5A857A9AB0), 79, 16);
  *(_BYTE *)(v4 - 0xFCF3D5A857A9A9CLL) = 42;
  v6 = v4 != 0xFCF3D5A857A9B08 && *(_QWORD *)(v3 + 152) != 0x29E41201BECB398ELL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v6 * ((v1 ^ 0x3C8) + 677)) | v1))
                            - (((v1 - 139) | 0x100u) ^ 0x314)))();
}

uint64_t sub_1CF34F994@<X0>(uint64_t a1@<X0>, int a2@<W4>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _DWORD *v4;
  _BYTE *v5;
  uint64_t v6;
  _DWORD *v7;

  STACK[0x7A0] = a3 - 0xFCF3D5A857A9AAFLL;
  STACK[0x790] = a3 - 0xFCF3D5A857A9AAELL;
  STACK[0x740] = a3 - 0xFCF3D5A857A9AADLL;
  STACK[0x730] = a3 - 0xFCF3D5A857A9AACLL;
  STACK[0x710] = a3 - 0xFCF3D5A857A9AABLL;
  STACK[0x700] = a3 - 0xFCF3D5A857A9AAALL;
  STACK[0x6F0] = a3 - 0xFCF3D5A857A9B08;
  *(_DWORD *)(v3 - 0x29E41201BECB397ELL) = *(_DWORD *)(a3 - 0xFCF3D5A857A9B08);
  *(_DWORD *)(v3 - 0x29E41201BECB3936) = *(_DWORD *)(a3 - 0xFCF3D5A857A9AC0);
  *(_DWORD *)(v3 - 0x29E41201BECB3932) = *(_DWORD *)(a3 - 0xFCF3D5A857A9ABCLL);
  *(_BYTE *)(v3 - 0x29E41201BECB392ELL) = *(_BYTE *)(a3 - 0xFCF3D5A857A9AB8);
  *(_BYTE *)(v3 - 0x29E41201BECB392DLL) = *(_BYTE *)(a3 - 0xFCF3D5A857A9AB7);
  *(_DWORD *)(v3 - 0x29E41201BECB3916) = *v4;
  *(_DWORD *)(v3 - 0x29E41201BECB392ALL) = *v7;
  *(_BYTE *)(v3 - 0x29E41201BECB3912) = *v5 & 1 | 0xAA;
  *(_BYTE *)(v3 - 0x29E41201BECB3957) = *((_BYTE *)*(&off_1E8C4D9A0 + a2 - 773) + 11) ^ 0x61 ^ *((_BYTE *)*(&off_1E8C4D9A0 + a2 - 699)
                                                                                                 + 13) ^ (*(_BYTE *)(a3 - 0xFCF3D5A857A9AE1) + (*(_BYTE *)(a3 - 0xFCF3D5A857A9AE1) | 0x1B) + ((a2 - 25) ^ *(_BYTE *)(a3 - 0xFCF3D5A857A9AE1) | 0x1B) - 105) ^ *((_BYTE *)*(&off_1E8C4D9A0 + (a2 ^ 0x349)) + 16);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * a2) - 8))(a1, a3 - 0xFCF3D5A857A9AA9, a3 - 0xFCF3D5A857A9AA7, a3 - 0xFCF3D5A857A9AA6);
}

void sub_1CF34FCBC()
{
  JUMPOUT(0x1CF34FC14);
}

uint64_t sub_1CF34FCC4@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  v7 = (a1 - 349) ^ 0xF;
  v8 = (v7 + 435);
  *(_BYTE *)(v3 - 0x29E41201BECB3937) = *(_BYTE *)(((v8 - 856) & 0x1F) + v6 + 2) ^ *(_BYTE *)(v4 + ((v8 - 856) & 0x1F)) ^ *(_BYTE *)(((v8 - 856) & 0x1F) + v2 + 1) ^ (*(_BYTE *)(a2 - 0xFCF3D5A857A9AC1) + (~*(_BYTE *)(a2 - 0xFCF3D5A857A9AC1) | 0x1B) + (*(_BYTE *)(a2 - 0xFCF3D5A857A9AC1) | 0x1B) - 105) ^ (-113 * ((v8 - 88) & 0x1F));
  return (*(uint64_t (**)(void))(v5 + 8 * (v7 ^ 0xF)))();
}

void sub_1CF34FD70()
{
  JUMPOUT(0x1CF34FCF8);
}

uint64_t sub_1CF34FD78@<X0>(_BYTE *a1@<X1>, _BYTE *a2@<X2>, _BYTE *a3@<X3>, int a4@<W4>, _BYTE *a5@<X5>, _BYTE *a6@<X6>, _BYTE *a7@<X7>, uint64_t a8@<X8>)
{
  _BYTE *v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;

  *(_BYTE *)(v11 - 0x29E41201BECB3917) = *v12;
  *(_BYTE *)(v11 - 0x29E41201BECB3918) = *v10;
  *(_BYTE *)(v11 - 0x29E41201BECB3919) = *a7;
  *(_BYTE *)(v11 - 0x29E41201BECB391ALL) = *a6;
  *(_BYTE *)(v11 - 0x29E41201BECB391BLL) = *a5;
  *(_BYTE *)(v11 - 0x29E41201BECB391CLL) = *a3;
  *(_BYTE *)(v11 - 0x29E41201BECB391DLL) = *a2;
  *(_BYTE *)(v11 - 0x29E41201BECB391ELL) = *v9;
  *(_BYTE *)(v11 - 0x29E41201BECB391FLL) = *a1;
  *(_BYTE *)(v11 - 0x29E41201BECB3920) = *(_BYTE *)STACK[0x700];
  *(_BYTE *)(v11 - 0x29E41201BECB3921) = *(_BYTE *)STACK[0x710];
  *(_BYTE *)(v11 - 0x29E41201BECB3922) = *(_BYTE *)STACK[0x730];
  *(_BYTE *)(v11 - 0x29E41201BECB3923) = *(_BYTE *)STACK[0x740];
  *(_BYTE *)(v11 - 0x29E41201BECB3924) = *(_BYTE *)STACK[0x790];
  *(_BYTE *)(v11 - 0x29E41201BECB3925) = *(_BYTE *)STACK[0x7A0];
  *(_BYTE *)(v11 - 0x29E41201BECB3926) = *v8;
  *(_DWORD *)(v11 - 0x29E41201BECB397ALL) = *(_DWORD *)(a8 - 0xFCF3D5A857A9B04);
  return ((uint64_t (*)(void))(*(_QWORD *)(v13
                                        + 8 * ((1140 * (*(_DWORD *)(a8 - 0xFCF3D5A857A9B04) == 1710104185)) ^ a4))
                            - (a4 ^ 0x2D7u)
                            + 424))();
}

uint64_t sub_1CF34FF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  _DWORD *v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((1401 * (*v5 != 291866047)) ^ a5))
                            - (((a5 - 615) | 0xB0u) ^ 0x1B8)))();
}

uint64_t sub_1CF34FFB4@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  uint64_t v3;

  *v2 = 1710104186;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((754
                                          * (((a2 == 0xFCF3D5A857A9B08) ^ (((a1 - 111) & 0xB7) - 69)) & 1)) ^ (a1 - 522583407) & 0x1F25FBB7))
                            - ((3 * ((a1 - 522583407) & 0x1F25FBB7 ^ 0x1C9u)) ^ 0x167)))();
}

void sub_1CF350044()
{
  sub_1CF370D34();
  JUMPOUT(0x1CF33ED34);
}

uint64_t sub_1CF350080()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((54 * (v0 != v1)) ^ (v2 + 298))) - 12))();
}

uint64_t sub_1CF3500A8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((*(_BYTE *)(*(_QWORD *)(v1 + 152) - 0x29E41201BECB392ELL) == 87)
                                     * ((20 * LODWORD(STACK[0x244]) + 640034059) & 0xD9D9D996 ^ 0x230)) ^ (20 * LODWORD(STACK[0x244])))))();
}

uint64_t sub_1CF350108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *(_QWORD *)(v3 - 0x29E41201BECB398ELL);
  *(_QWORD *)(v6 + 96) = 0x23120F4208F8DDDLL;
  STACK[0x7D0] = 0x4860F2874C89E0E8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8 * ((1282 * ((((v4 - 175) ^ 0x1FF ^ (v7 == a3)) & 1) == 0)) ^ (v4 - 175)))
                            - 4))();
}

void sub_1CF350194(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 368) = *(_QWORD *)(v1 + 8 * a1);
  JUMPOUT(0x1CF353238);
}

uint64_t sub_1CF3501B0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v2 - 38) ^ (1891 * (v0 == v1)))) - (STACK[0x200] ^ 0x141)))();
}

uint64_t sub_1CF3501E0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  int v3;
  uint64_t v4;

  v2 = STACK[0x200];
  v3 = STACK[0x200] + 38;
  v4 = *(_QWORD *)(*(_QWORD *)(v1 + 96) - 0x23120F4208F8DC5);
  *(_QWORD *)(v1 + 320) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (int)(((v4 != 0) * (v3 ^ 0x194)) ^ v2)) - 4))();
}

uint64_t sub_1CF350244@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = STACK[0x200];
  v4 = (STACK[0x200] - 929030474) & 0x375FE16F;
  v5 = 83 * (STACK[0x200] ^ 0x147);
  v6 = (a1 - 1508655795);
  *(_QWORD *)(v2 + 648) = v6;
  v7 = STACK[0x7D0];
  *(_QWORD *)(v2 + 656) = STACK[0x7D0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * ((1159 * (v6 + 0x4860F2874C89DF7DLL - v7 + v4 > 9)) ^ v3))
                            - (v5 ^ 0xA2)))();
}

uint64_t sub_1CF3502D8()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  int v3;
  uint64_t (*v4)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = v0 + 725;
  v4 = *(uint64_t (**)(void))(v1 + 8 * v0);
  v6 = v2[90];
  STACK[0x7A0] = v2[89] + ((v3 - 528) ^ 0x920503E9);
  STACK[0x790] = ((v6 - 0x1CAEFB3D54F94338) ^ 0x7FAEDE6E78DAEF99)
               - 0x6A08100258D88888
               + ((2 * (v6 - 0x1CAEFB3D54F94338)) & 0xFF5DBCDCF1B5DF32);
  v7 = v2[88] - 0x43A08B1300141362;
  STACK[0x740] = (v7 ^ 0xB5B7FE7DF9DBE7F7) + 0x5FEECFEE26267F1ALL + ((2 * v7) & 0x6B6FFCFBF3B7CFEELL);
  v8 = v2[86] - 0x604C1CD85C5D4F9BLL;
  STACK[0x730] = (v8 ^ 0xD7AFDF7E6F5A7F3FLL) + 0x3DF6EEEDB0A7E7D2 + ((2 * v8) & 0xAF5FBEFCDEB4FE7ELL);
  v9 = v2[96];
  STACK[0x710] = ((v9 - 0x6F654FD9E3543B0ELL) ^ 0x7DBFDEFEBECFE759)
               - 0x681910929ECD8048
               + ((2 * (v9 - 0x6F654FD9E3543B0ELL)) & 0xFB7FBDFD7D9FCEB2);
  v10 = v2[84] - 0x555194FDB6690FF7;
  STACK[0x700] = (v10 ^ 0x17FFEF6C681B6FB3) - 0x2592100481908A2 + ((2 * v10) & 0x2FFFDED8D036DF66);
  v11 = v2[82] - 0x4860F2874C89E0E4;
  STACK[0x6F0] = (v11 ^ 0x15AFFF7D309777B9) - 0x93111109510A8 + ((2 * v11) & 0x2B5FFEFA612EEF72);
  STACK[0x6E0] = ((v6 - 0x1CAEFB3D54F94336) ^ 0xFFFFDF77BFF5AFFDLL)
               + 0x1799FEEFC5FBD748
               + ((2 * (v6 - 0x1CAEFB3D54F94336)) & 0xFFFFBEEF7FEB5FFALL);
  STACK[0x6D0] = ((v7 + 2) ^ 0xB7F9FE6FA5FDA747) + 0x5F9FDFF7DFF3DFFELL + ((2 * (v7 + 2)) & 0x6FF3FCDF4BFB4E8ELL);
  STACK[0x6A0] = ((v8 + 2) ^ 0x57D9DF778DF9D7F5) - 0x40400110080850B0 + ((2 * (v8 + 2)) & 0xAFB3BEEF1BF3AFEALL);
  STACK[0x690] = ((v10 + 2) ^ 0x17DDDEF7AFFBF7C5) - 0x4400902A0A7080 + ((2 * (v10 + 2)) & 0x2FBBBDEF5FF7EF8ALL);
  STACK[0x680] = ((v9 - 0x6F654FD9E3543B0CLL) ^ 0x57DFDEFFF7F3D775)
               - 0x4046009872025030
               + ((2 * (v9 - 0x6F654FD9E3543B0CLL)) & 0xAFBFBDFFEFE7AEEALL);
  STACK[0x670] = ((v11 + 2) ^ 0xDFFBDF7FCDFBBF77) + 0x379DFEE7B7F5C7CELL + ((2 * (v11 + 2)) & 0xBFF7BEFF9BF77EEELL);
  STACK[0x640] = v6 - 0x1CAEFB3D54F94332;
  STACK[0x660] = ((v6 - 0x1CAEFB3D54F94332) ^ 0x3FFDDFF7A5FF8F7FLL)
               - 0x28640190200E083ALL
               + ((2 * (v6 - 0x1CAEFB3D54F94332)) & 0x7FFBBFEF4BFF1EFELL);
  STACK[0x650] = ((v9 - 0x6F654FD9E3543B08) ^ 0x179BDF67DFF3CFEDLL)
               - 0x201005A0248A8
               + ((2 * (v9 - 0x6F654FD9E3543B08)) & 0x2F37BECFBFE79FDALL);
  return v4();
}

void sub_1CF3502FC()
{
  __int16 v0;

  LOWORD(STACK[0xAB2]) = v0;
  JUMPOUT(0x1CF350318);
}

uint64_t sub_1CF350BB8()
{
  uint64_t v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (LODWORD(STACK[0x78C]) - 274)) - 4))();
}

uint64_t sub_1CF351154(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  __int16 v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t (*v65)(uint64_t, _QWORD);

  LOWORD(STACK[0xAB6]) = v61;
  v65 = *(uint64_t (**)(uint64_t, _QWORD))(v63 + 8 * (v64 - 160));
  v1 = (unsigned __int8 *)(v60 + STACK[0x680] - 0x1799DE6785F18745);
  v2 = __ROR8__(v1, 8);
  v3 = ((2 * ((v2 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0x9077E0949EF5BAF6)
     - ((v2 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x550C087CC469144ELL)
     - 0x483BF04A4F7ADD7BLL;
  v4 = v3 ^ 0xF1B0F2EF1EFB9BD7;
  v3 ^= 0xA62F4EF6C24CC642;
  v5 = __ROR8__(v4, 8);
  v6 = (v62 - ((~(v5 + v3) | 0x1577FAC35B609246) + ((v5 + v3) | 0xEA88053CA49F6DB9))) ^ 0x45A32A2267DDE331;
  v7 = v6 ^ __ROR8__(v3, 61);
  *((_QWORD *)&v9 + 1) = __ROR8__(v6, 8) + v7;
  *(_QWORD *)&v9 = *((_QWORD *)&v9 + 1) ^ 0xE5D7DAAEED85A300;
  v8 = v9 >> 8;
  *(_QWORD *)&v9 = __ROR8__(v7, 61);
  v10 = (v8 + (*((_QWORD *)&v9 + 1) ^ 0xE5D7DAAEED85A300 ^ v9)) ^ 0x8E85997BF8A3092DLL;
  v11 = v10 ^ __ROR8__(*((_QWORD *)&v9 + 1) ^ 0xE5D7DAAEED85A300 ^ v9, 61);
  v12 = (__ROR8__(v10, 8) + v11) ^ 0xCD091F17C02FDE51;
  v13 = v12 ^ __ROR8__(v11, 61);
  v14 = (__ROR8__(v12, 8) + v13) ^ 0x628ABC52894BE762;
  v15 = v14 ^ __ROR8__(v13, 61);
  v16 = (__ROR8__(v14, 8) + v15) ^ 0x5AC09C033F8B2761;
  v17 = v16 ^ __ROR8__(v15, 61);
  *(_QWORD *)&v9 = __ROR8__(v16, 8);
  LODWORD(v17) = (((((_QWORD)v9
                                 + v17
                                 - ((2 * ((_QWORD)v9 + v17)) & 0xFF58B2E6A226F750)
                                 + 0x7FAC597351137BA8) ^ 0x64A788EB7A4ABBD9) >> (8 * (v1 & 7u))) ^ *v1) << 24;
  *(_QWORD *)&v9 = __ROR8__(v1 + 1, 8);
  v18 = ((2 * (v9 & 0xF8FFFFFFFFFFFFFFLL) + 0x55E7EF06772DD764) & 0x442912AD23D5CC78)
      - (v9 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x4D0880D9CD81D1EFLL;
  v19 = v18 ^ 0xE460740C3F945F6FLL;
  v18 ^= 0xB3FFC815E32302FALL;
  *(_QWORD *)&v9 = __ROR8__(v19, 8);
  v20 = __ROR8__((0x30D989346C5478B8- ((v9 + v18) ^ 0xF1A2B85CC66DE86 | 0x30D989346C5478B8)+ ((v9 + v18) ^ 0xF1A2B85CC66DE86 | 0xCF2676CB93AB8747)) ^ 0x90E88DAF637028B6, 8);
  v21 = (0x30D989346C5478B8
       - ((v9 + v18) ^ 0xF1A2B85CC66DE86 | 0x30D989346C5478B8)
       + ((v9 + v18) ^ 0xF1A2B85CC66DE86 | 0xCF2676CB93AB8747)) ^ 0x90E88DAF637028B6 ^ __ROR8__(v18, 61);
  v22 = (0x598D3E4F2B46E74DLL - ((v20 + v21) | 0x598D3E4F2B46E74DLL) + ((v20 + v21) | 0xA672C1B0D4B918B2)) ^ 0x43A51B1E393CBBB2;
  v23 = v22 ^ __ROR8__(v21, 61);
  v24 = (__ROR8__(v22, 8) + v23) ^ 0x8E85997BF8A3092DLL;
  v25 = v24 ^ __ROR8__(v23, 61);
  *(_QWORD *)&v9 = __ROR8__(v24, 8);
  v26 = (0xB69B3F5B468F8A56 - ((v9 + v25) | 0xB69B3F5B468F8A56) + ((v9 + v25) | 0x4964C0A4B97075A9)) ^ 0x846DDFB3795FABF8;
  v27 = v26 ^ __ROR8__(v25, 61);
  *(_QWORD *)&v9 = __ROR8__(v26, 8);
  v28 = (((2 * (v9 + v27)) & 0xA638E7B7477E3D7ALL) - (v9 + v27) - 0x531C73DBA3BF1EBELL) ^ 0xCE693076D50B0620;
  v29 = v28 ^ __ROR8__(v27, 61);
  *(_QWORD *)&v9 = __ROR8__(v28, 8);
  v30 = (-2 - ((~(v9 + v29) | 0xBFE1BEF766DF8CC9) + ((v9 + v29) | 0x401E410899207336))) ^ 0xE52122F45954ABA8;
  v31 = v30 ^ __ROR8__(v29, 61);
  *(_QWORD *)&v9 = __ROR8__(v30, 8);
  LODWORD(v16) = v17 | (((((((2 * ((_QWORD)v9 + v31)) & 0x1892AEAF4EEC022CLL)
                                           - ((_QWORD)v9
                                            + v31)
                                           - 0xC495757A7760117) ^ 0xE8BD793073D03E98) >> (8 * (((_BYTE)v1 + 1) & 7u))) ^ v1[1]) << 16);
  *(_QWORD *)&v9 = __ROR8__(v1 + 2, 8);
  v32 = (v9 & 0xF8FFFFFFFFFFFFFFLL)
      - ((2 * (v9 & 0xF8FFFFFFFFFFFFFFLL) + 0x15E7EF06772DD764) & 0x26E74F7F1F24F14ALL)
      + 0x3E679F42CB296457;
  v33 = v32 ^ 0x2AF8A51ADE133E09;
  v32 ^= 0x7D67190302A4639CuLL;
  *(_QWORD *)&v9 = __ROR8__(v33, 8);
  v34 = (0x16F6A45EDF0B58BBLL - ((v9 + v32) | 0x16F6A45EDF0B58BBLL) + ((v9 + v32) | 0xE9095BA120F4A744)) ^ 0xB9DD8B401C49D633;
  v35 = v34 ^ __ROR8__(v32, 61);
  *(_QWORD *)&v9 = __ROR8__(v34, 8);
  v36 = (-2 - ((~(v9 + v35) | 0xFE9C6D911D4C30A4) + ((v9 + v35) | 0x163926EE2B3CF5BLL))) ^ 0x1B4BB73FF0C993A4;
  v37 = v36 ^ __ROR8__(v35, 61);
  *(_QWORD *)&v9 = __ROR8__(v36, 8);
  v38 = (((2 * (v9 + v37)) & 0xA406050F9C73BDA8) - (v9 + v37) + 0x2DFCFD7831C6212BLL) ^ 0xA3796403C9652806;
  v39 = v38 ^ __ROR8__(v37, 61);
  *(_QWORD *)&v9 = __ROR8__(v38, 8);
  v40 = (((2 * (v9 + v39)) & 0xBFAA761F45D5431ALL) - (v9 + v39) - 0x5FD53B0FA2EAA18ELL) ^ 0x6D23DBE79D3A8023;
  v41 = v40 ^ __ROR8__(v39, 61);
  v42 = (__ROR8__(v40, 8) + v41) ^ 0x628ABC52894BE762;
  v43 = v42 ^ __ROR8__(v41, 61);
  *(_QWORD *)&v9 = __ROR8__(v42, 8);
  v44 = (-2 - ((~(v9 + v43) | 0x93BA3FB03D9D02EFLL) + ((v9 + v43) | 0x6C45C04FC262FD10))) ^ 0xC97AA3B30216258ELL;
  v45 = v44 ^ __ROR8__(v43, 61);
  *(_QWORD *)&v9 = __ROR8__(v44, 8);
  LODWORD(v45) = (((((2 * ((_QWORD)v9 + v45)) & 0x57A4333711C5D1CLL)
                                   - ((_QWORD)v9
                                    + v45)
                                   + 0x7D42DE664771D171) ^ 0x66490FFE6C281100) >> (8 * (((_BYTE)v1 + 2) & 7u))) ^ v1[2];
  v46 = v1[3];
  v1 += 3;
  *(_QWORD *)&v9 = __ROR8__(v1, 8);
  v47 = ((2 * ((v9 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0xAADD163E4CA4D5AELL)
      - ((v9 & 0xF8FFFFFFFFFFFFFFLL)
       - 0x550C087CC469144ELL)
      - 0x556E8B1F26526AD7;
  v48 = v47 ^ 0xECE589BA77D32C7BLL;
  v47 ^= 0xBB7A35A3AB6471EELL;
  *(_QWORD *)&v9 = __ROR8__(v48, 8);
  v49 = __ROR8__((((2 * (v9 + v47)) | 0xB5389D3D2E60E81ALL) - (v9 + v47) + 0x2563B16168CF8BF3) ^ 0x8A489E7FAB8D057ALL, 8);
  v50 = (((2 * (v9 + v47)) | 0xB5389D3D2E60E81ALL) - (v9 + v47) + 0x2563B16168CF8BF3) ^ 0x8A489E7FAB8D057ALL ^ __ROR8__(v47, 61);
  v51 = v49 + v50;
  v52 = (v49 + v50) ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v50, 61);
  *((_QWORD *)&v9 + 1) = v51;
  *(_QWORD *)&v9 = v51 ^ 0xE5D7DAAEED85A300;
  v53 = ((v9 >> 8) + v52) ^ 0x8E85997BF8A3092DLL;
  v54 = v53 ^ __ROR8__(v52, 61);
  v55 = (__ROR8__(v53, 8) + v54) ^ 0xCD091F17C02FDE51;
  v56 = v55 ^ __ROR8__(v54, 61);
  v57 = (__ROR8__(v55, 8) + v56) ^ 0x628ABC52894BE762;
  v58 = v57 ^ __ROR8__(v56, 61);
  *(_QWORD *)&v9 = __ROR8__(v57, 8);
  LODWORD(v1) = v16 | ((_DWORD)v45 << 8) | (((__ROR8__((-2- ((~(v9 + v58) | 0x890E405815C8236ELL)+ ((v9 + v58) | 0x76F1BFA7EA37DC91))) ^ 0xD3CEDC5B2A43040FLL, 8)+ ((-2- ((~((_QWORD)v9 + v58) | 0x890E405815C8236ELL)+ (((_QWORD)v9 + v58) | 0x76F1BFA7EA37DC91))) ^ 0xD3CEDC5B2A43040FLL ^ __ROR8__(v58, 61))) ^ 0x1B0BD1982B59C071) >> (8 * (v1 & 7u))) ^ v46;
  return v65(a1, (_DWORD)v1 - 1129976585 - ((2 * (_DWORD)v1) & 0x794BD9EEu));
}

uint64_t sub_1CF351170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  int v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int16 v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t (*v68)(uint64_t, _QWORD);

  LOWORD(STACK[0xAB4]) = v64;
  v68 = (uint64_t (*)(uint64_t, _QWORD))((v67 + 528)
                                                + *(_QWORD *)(v66 + 8 * (v67 - 152))
                                                - 895);
  v5 = (unsigned __int8 *)(a5 + STACK[0x690] - 0x1799DE6785F18745);
  v6 = __ROR8__(v5, 8);
  v7 = ((2 * ((v6 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0x9077E0949EF5BAF6)
     - ((v6 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x550C087CC469144ELL)
     - 0x483BF04A4F7ADD7BLL;
  v8 = v7 ^ 0xF1B0F2EF1EFB9BD7;
  v7 ^= 0xA62F4EF6C24CC642;
  v9 = __ROR8__(v8, 8);
  v10 = (v65 - ((~(v9 + v7) | 0x1577FAC35B609246) + ((v9 + v7) | 0xEA88053CA49F6DB9))) ^ 0x45A32A2267DDE331;
  v11 = v10 ^ __ROR8__(v7, 61);
  *((_QWORD *)&v13 + 1) = __ROR8__(v10, 8) + v11;
  *(_QWORD *)&v13 = *((_QWORD *)&v13 + 1) ^ 0xE5D7DAAEED85A300;
  v12 = v13 >> 8;
  *(_QWORD *)&v13 = __ROR8__(v11, 61);
  v14 = (v12 + (*((_QWORD *)&v13 + 1) ^ 0xE5D7DAAEED85A300 ^ v13)) ^ 0x8E85997BF8A3092DLL;
  v15 = v14 ^ __ROR8__(*((_QWORD *)&v13 + 1) ^ 0xE5D7DAAEED85A300 ^ v13, 61);
  v16 = (__ROR8__(v14, 8) + v15) ^ 0xCD091F17C02FDE51;
  v17 = v16 ^ __ROR8__(v15, 61);
  v18 = (__ROR8__(v16, 8) + v17) ^ 0x628ABC52894BE762;
  v19 = v18 ^ __ROR8__(v17, 61);
  v20 = (__ROR8__(v18, 8) + v19) ^ 0x5AC09C033F8B2761;
  v21 = v20 ^ __ROR8__(v19, 61);
  *(_QWORD *)&v13 = __ROR8__(v20, 8);
  LODWORD(v21) = (((((_QWORD)v13
                                 + v21
                                 - ((2 * ((_QWORD)v13 + v21)) & 0xFF58B2E6A226F750)
                                 + 0x7FAC597351137BA8) ^ 0x64A788EB7A4ABBD9) >> (8 * (v5 & 7u))) ^ *v5) << 24;
  *(_QWORD *)&v13 = __ROR8__(v5 + 1, 8);
  v22 = ((2 * (v13 & 0xF8FFFFFFFFFFFFFFLL) + 0x55E7EF06772DD764) & 0x442912AD23D5CC78)
      - (v13 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x4D0880D9CD81D1EFLL;
  v23 = v22 ^ 0xE460740C3F945F6FLL;
  v22 ^= 0xB3FFC815E32302FALL;
  *(_QWORD *)&v13 = __ROR8__(v23, 8);
  v24 = __ROR8__((0x30D989346C5478B8- ((v13 + v22) ^ 0xF1A2B85CC66DE86 | 0x30D989346C5478B8)+ ((v13 + v22) ^ 0xF1A2B85CC66DE86 | 0xCF2676CB93AB8747)) ^ 0x90E88DAF637028B6, 8);
  v25 = (0x30D989346C5478B8
       - ((v13 + v22) ^ 0xF1A2B85CC66DE86 | 0x30D989346C5478B8)
       + ((v13 + v22) ^ 0xF1A2B85CC66DE86 | 0xCF2676CB93AB8747)) ^ 0x90E88DAF637028B6 ^ __ROR8__(v22, 61);
  v26 = (0x598D3E4F2B46E74DLL - ((v24 + v25) | 0x598D3E4F2B46E74DLL) + ((v24 + v25) | 0xA672C1B0D4B918B2)) ^ 0x43A51B1E393CBBB2;
  v27 = v26 ^ __ROR8__(v25, 61);
  v28 = (__ROR8__(v26, 8) + v27) ^ 0x8E85997BF8A3092DLL;
  v29 = v28 ^ __ROR8__(v27, 61);
  *(_QWORD *)&v13 = __ROR8__(v28, 8);
  v30 = (0xB69B3F5B468F8A56 - ((v13 + v29) | 0xB69B3F5B468F8A56) + ((v13 + v29) | 0x4964C0A4B97075A9)) ^ 0x846DDFB3795FABF8;
  v31 = v30 ^ __ROR8__(v29, 61);
  *(_QWORD *)&v13 = __ROR8__(v30, 8);
  v32 = (((2 * (v13 + v31)) & 0xA638E7B7477E3D7ALL) - (v13 + v31) - 0x531C73DBA3BF1EBELL) ^ 0xCE693076D50B0620;
  v33 = v32 ^ __ROR8__(v31, 61);
  *(_QWORD *)&v13 = __ROR8__(v32, 8);
  v34 = (-2 - ((~(v13 + v33) | 0xBFE1BEF766DF8CC9) + ((v13 + v33) | 0x401E410899207336))) ^ 0xE52122F45954ABA8;
  v35 = v34 ^ __ROR8__(v33, 61);
  *(_QWORD *)&v13 = __ROR8__(v34, 8);
  LODWORD(v20) = v21 | (((((((2 * ((_QWORD)v13 + v35)) & 0x1892AEAF4EEC022CLL)
                                           - ((_QWORD)v13
                                            + v35)
                                           - 0xC495757A7760117) ^ 0xE8BD793073D03E98) >> (8 * (((_BYTE)v5 + 1) & 7u))) ^ v5[1]) << 16);
  *(_QWORD *)&v13 = __ROR8__(v5 + 2, 8);
  v36 = (v13 & 0xF8FFFFFFFFFFFFFFLL)
      - ((2 * (v13 & 0xF8FFFFFFFFFFFFFFLL) + 0x15E7EF06772DD764) & 0x26E74F7F1F24F14ALL)
      + 0x3E679F42CB296457;
  v37 = v36 ^ 0x2AF8A51ADE133E09;
  v36 ^= 0x7D67190302A4639CuLL;
  *(_QWORD *)&v13 = __ROR8__(v37, 8);
  v38 = (0x16F6A45EDF0B58BBLL - ((v13 + v36) | 0x16F6A45EDF0B58BBLL) + ((v13 + v36) | 0xE9095BA120F4A744)) ^ 0xB9DD8B401C49D633;
  v39 = v38 ^ __ROR8__(v36, 61);
  *(_QWORD *)&v13 = __ROR8__(v38, 8);
  v40 = (-2 - ((~(v13 + v39) | 0xFE9C6D911D4C30A4) + ((v13 + v39) | 0x163926EE2B3CF5BLL))) ^ 0x1B4BB73FF0C993A4;
  v41 = v40 ^ __ROR8__(v39, 61);
  *(_QWORD *)&v13 = __ROR8__(v40, 8);
  v42 = (((2 * (v13 + v41)) & 0xA406050F9C73BDA8) - (v13 + v41) + 0x2DFCFD7831C6212BLL) ^ 0xA3796403C9652806;
  v43 = v42 ^ __ROR8__(v41, 61);
  *(_QWORD *)&v13 = __ROR8__(v42, 8);
  v44 = (((2 * (v13 + v43)) & 0xBFAA761F45D5431ALL) - (v13 + v43) - 0x5FD53B0FA2EAA18ELL) ^ 0x6D23DBE79D3A8023;
  v45 = v44 ^ __ROR8__(v43, 61);
  v46 = (__ROR8__(v44, 8) + v45) ^ 0x628ABC52894BE762;
  v47 = v46 ^ __ROR8__(v45, 61);
  *(_QWORD *)&v13 = __ROR8__(v46, 8);
  v48 = (-2 - ((~(v13 + v47) | 0x93BA3FB03D9D02EFLL) + ((v13 + v47) | 0x6C45C04FC262FD10))) ^ 0xC97AA3B30216258ELL;
  v49 = v48 ^ __ROR8__(v47, 61);
  *(_QWORD *)&v13 = __ROR8__(v48, 8);
  LODWORD(v49) = (((((2 * ((_QWORD)v13 + v49)) & 0x57A4333711C5D1CLL)
                                   - ((_QWORD)v13
                                    + v49)
                                   + 0x7D42DE664771D171) ^ 0x66490FFE6C281100) >> (8 * (((_BYTE)v5 + 2) & 7u))) ^ v5[2];
  v50 = v5[3];
  v5 += 3;
  *(_QWORD *)&v13 = __ROR8__(v5, 8);
  v51 = ((2 * ((v13 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0xAADD163E4CA4D5AELL)
      - ((v13 & 0xF8FFFFFFFFFFFFFFLL)
       - 0x550C087CC469144ELL)
      - 0x556E8B1F26526AD7;
  v52 = v51 ^ 0xECE589BA77D32C7BLL;
  v51 ^= 0xBB7A35A3AB6471EELL;
  *(_QWORD *)&v13 = __ROR8__(v52, 8);
  v53 = __ROR8__((((2 * (v13 + v51)) | 0xB5389D3D2E60E81ALL) - (v13 + v51) + 0x2563B16168CF8BF3) ^ 0x8A489E7FAB8D057ALL, 8);
  v54 = (((2 * (v13 + v51)) | 0xB5389D3D2E60E81ALL) - (v13 + v51) + 0x2563B16168CF8BF3) ^ 0x8A489E7FAB8D057ALL ^ __ROR8__(v51, 61);
  v55 = v53 + v54;
  v56 = (v53 + v54) ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v54, 61);
  *((_QWORD *)&v13 + 1) = v55;
  *(_QWORD *)&v13 = v55 ^ 0xE5D7DAAEED85A300;
  v57 = ((v13 >> 8) + v56) ^ 0x8E85997BF8A3092DLL;
  v58 = v57 ^ __ROR8__(v56, 61);
  v59 = (__ROR8__(v57, 8) + v58) ^ 0xCD091F17C02FDE51;
  v60 = v59 ^ __ROR8__(v58, 61);
  v61 = (__ROR8__(v59, 8) + v60) ^ 0x628ABC52894BE762;
  v62 = v61 ^ __ROR8__(v60, 61);
  *(_QWORD *)&v13 = __ROR8__(v61, 8);
  LODWORD(v5) = v20 | ((_DWORD)v49 << 8) | (((__ROR8__((-2- ((~(v13 + v62) | 0x890E405815C8236ELL)+ ((v13 + v62) | 0x76F1BFA7EA37DC91))) ^ 0xD3CEDC5B2A43040FLL, 8)+ ((-2- ((~((_QWORD)v13 + v62) | 0x890E405815C8236ELL)+ (((_QWORD)v13 + v62) | 0x76F1BFA7EA37DC91))) ^ 0xD3CEDC5B2A43040FLL ^ __ROR8__(v62, 61))) ^ 0x1B0BD1982B59C071) >> (8 * (v5 & 7u))) ^ v50;
  return v68(a1, (_DWORD)v5 - 1129976585 - ((2 * (_DWORD)v5) & 0x794BD9EEu));
}

uint64_t sub_1CF351194(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  __int16 v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t (*v65)(uint64_t, _QWORD);

  LOWORD(STACK[0xAC0]) = v61;
  v65 = (uint64_t (*)(uint64_t, _QWORD))((v64 + 528)
                                                + *(_QWORD *)(v63 + 8 * (v64 - 240))
                                                - 903);
  v1 = (unsigned __int8 *)(v60 + STACK[0x6A0] - 0x1799DE6785F18745);
  v2 = __ROR8__(v1, 8);
  v3 = ((2 * ((v2 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0x9077E0949EF5BAF6)
     - ((v2 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x550C087CC469144ELL)
     - 0x483BF04A4F7ADD7BLL;
  v4 = v3 ^ 0xF1B0F2EF1EFB9BD7;
  v3 ^= 0xA62F4EF6C24CC642;
  v5 = __ROR8__(v4, 8);
  v6 = (v62 - ((~(v5 + v3) | 0x1577FAC35B609246) + ((v5 + v3) | 0xEA88053CA49F6DB9))) ^ 0x45A32A2267DDE331;
  v7 = v6 ^ __ROR8__(v3, 61);
  *((_QWORD *)&v9 + 1) = __ROR8__(v6, 8) + v7;
  *(_QWORD *)&v9 = *((_QWORD *)&v9 + 1) ^ 0xE5D7DAAEED85A300;
  v8 = v9 >> 8;
  *(_QWORD *)&v9 = __ROR8__(v7, 61);
  v10 = (v8 + (*((_QWORD *)&v9 + 1) ^ 0xE5D7DAAEED85A300 ^ v9)) ^ 0x8E85997BF8A3092DLL;
  v11 = v10 ^ __ROR8__(*((_QWORD *)&v9 + 1) ^ 0xE5D7DAAEED85A300 ^ v9, 61);
  v12 = (__ROR8__(v10, 8) + v11) ^ 0xCD091F17C02FDE51;
  v13 = v12 ^ __ROR8__(v11, 61);
  v14 = (__ROR8__(v12, 8) + v13) ^ 0x628ABC52894BE762;
  v15 = v14 ^ __ROR8__(v13, 61);
  v16 = (__ROR8__(v14, 8) + v15) ^ 0x5AC09C033F8B2761;
  v17 = v16 ^ __ROR8__(v15, 61);
  *(_QWORD *)&v9 = __ROR8__(v16, 8);
  LODWORD(v17) = (((((_QWORD)v9
                                 + v17
                                 - ((2 * ((_QWORD)v9 + v17)) & 0xFF58B2E6A226F750)
                                 + 0x7FAC597351137BA8) ^ 0x64A788EB7A4ABBD9) >> (8 * (v1 & 7u))) ^ *v1) << 24;
  *(_QWORD *)&v9 = __ROR8__(v1 + 1, 8);
  v18 = ((2 * (v9 & 0xF8FFFFFFFFFFFFFFLL) + 0x55E7EF06772DD764) & 0x442912AD23D5CC78)
      - (v9 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x4D0880D9CD81D1EFLL;
  v19 = v18 ^ 0xE460740C3F945F6FLL;
  v18 ^= 0xB3FFC815E32302FALL;
  *(_QWORD *)&v9 = __ROR8__(v19, 8);
  v20 = __ROR8__((0x30D989346C5478B8- ((v9 + v18) ^ 0xF1A2B85CC66DE86 | 0x30D989346C5478B8)+ ((v9 + v18) ^ 0xF1A2B85CC66DE86 | 0xCF2676CB93AB8747)) ^ 0x90E88DAF637028B6, 8);
  v21 = (0x30D989346C5478B8
       - ((v9 + v18) ^ 0xF1A2B85CC66DE86 | 0x30D989346C5478B8)
       + ((v9 + v18) ^ 0xF1A2B85CC66DE86 | 0xCF2676CB93AB8747)) ^ 0x90E88DAF637028B6 ^ __ROR8__(v18, 61);
  v22 = (0x598D3E4F2B46E74DLL - ((v20 + v21) | 0x598D3E4F2B46E74DLL) + ((v20 + v21) | 0xA672C1B0D4B918B2)) ^ 0x43A51B1E393CBBB2;
  v23 = v22 ^ __ROR8__(v21, 61);
  v24 = (__ROR8__(v22, 8) + v23) ^ 0x8E85997BF8A3092DLL;
  v25 = v24 ^ __ROR8__(v23, 61);
  *(_QWORD *)&v9 = __ROR8__(v24, 8);
  v26 = (0xB69B3F5B468F8A56 - ((v9 + v25) | 0xB69B3F5B468F8A56) + ((v9 + v25) | 0x4964C0A4B97075A9)) ^ 0x846DDFB3795FABF8;
  v27 = v26 ^ __ROR8__(v25, 61);
  *(_QWORD *)&v9 = __ROR8__(v26, 8);
  v28 = (((2 * (v9 + v27)) & 0xA638E7B7477E3D7ALL) - (v9 + v27) - 0x531C73DBA3BF1EBELL) ^ 0xCE693076D50B0620;
  v29 = v28 ^ __ROR8__(v27, 61);
  *(_QWORD *)&v9 = __ROR8__(v28, 8);
  v30 = (-2 - ((~(v9 + v29) | 0xBFE1BEF766DF8CC9) + ((v9 + v29) | 0x401E410899207336))) ^ 0xE52122F45954ABA8;
  v31 = v30 ^ __ROR8__(v29, 61);
  *(_QWORD *)&v9 = __ROR8__(v30, 8);
  LODWORD(v16) = v17 | (((((((2 * ((_QWORD)v9 + v31)) & 0x1892AEAF4EEC022CLL)
                                           - ((_QWORD)v9
                                            + v31)
                                           - 0xC495757A7760117) ^ 0xE8BD793073D03E98) >> (8 * (((_BYTE)v1 + 1) & 7u))) ^ v1[1]) << 16);
  *(_QWORD *)&v9 = __ROR8__(v1 + 2, 8);
  v32 = (v9 & 0xF8FFFFFFFFFFFFFFLL)
      - ((2 * (v9 & 0xF8FFFFFFFFFFFFFFLL) + 0x15E7EF06772DD764) & 0x26E74F7F1F24F14ALL)
      + 0x3E679F42CB296457;
  v33 = v32 ^ 0x2AF8A51ADE133E09;
  v32 ^= 0x7D67190302A4639CuLL;
  *(_QWORD *)&v9 = __ROR8__(v33, 8);
  v34 = (0x16F6A45EDF0B58BBLL - ((v9 + v32) | 0x16F6A45EDF0B58BBLL) + ((v9 + v32) | 0xE9095BA120F4A744)) ^ 0xB9DD8B401C49D633;
  v35 = v34 ^ __ROR8__(v32, 61);
  *(_QWORD *)&v9 = __ROR8__(v34, 8);
  v36 = (-2 - ((~(v9 + v35) | 0xFE9C6D911D4C30A4) + ((v9 + v35) | 0x163926EE2B3CF5BLL))) ^ 0x1B4BB73FF0C993A4;
  v37 = v36 ^ __ROR8__(v35, 61);
  *(_QWORD *)&v9 = __ROR8__(v36, 8);
  v38 = (((2 * (v9 + v37)) & 0xA406050F9C73BDA8) - (v9 + v37) + 0x2DFCFD7831C6212BLL) ^ 0xA3796403C9652806;
  v39 = v38 ^ __ROR8__(v37, 61);
  *(_QWORD *)&v9 = __ROR8__(v38, 8);
  v40 = (((2 * (v9 + v39)) & 0xBFAA761F45D5431ALL) - (v9 + v39) - 0x5FD53B0FA2EAA18ELL) ^ 0x6D23DBE79D3A8023;
  v41 = v40 ^ __ROR8__(v39, 61);
  v42 = (__ROR8__(v40, 8) + v41) ^ 0x628ABC52894BE762;
  v43 = v42 ^ __ROR8__(v41, 61);
  *(_QWORD *)&v9 = __ROR8__(v42, 8);
  v44 = (-2 - ((~(v9 + v43) | 0x93BA3FB03D9D02EFLL) + ((v9 + v43) | 0x6C45C04FC262FD10))) ^ 0xC97AA3B30216258ELL;
  v45 = v44 ^ __ROR8__(v43, 61);
  *(_QWORD *)&v9 = __ROR8__(v44, 8);
  LODWORD(v45) = (((((2 * ((_QWORD)v9 + v45)) & 0x57A4333711C5D1CLL)
                                   - ((_QWORD)v9
                                    + v45)
                                   + 0x7D42DE664771D171) ^ 0x66490FFE6C281100) >> (8 * (((_BYTE)v1 + 2) & 7u))) ^ v1[2];
  v46 = v1[3];
  v1 += 3;
  *(_QWORD *)&v9 = __ROR8__(v1, 8);
  v47 = ((2 * ((v9 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0xAADD163E4CA4D5AELL)
      - ((v9 & 0xF8FFFFFFFFFFFFFFLL)
       - 0x550C087CC469144ELL)
      - 0x556E8B1F26526AD7;
  v48 = v47 ^ 0xECE589BA77D32C7BLL;
  v47 ^= 0xBB7A35A3AB6471EELL;
  *(_QWORD *)&v9 = __ROR8__(v48, 8);
  v49 = __ROR8__((((2 * (v9 + v47)) | 0xB5389D3D2E60E81ALL) - (v9 + v47) + 0x2563B16168CF8BF3) ^ 0x8A489E7FAB8D057ALL, 8);
  v50 = (((2 * (v9 + v47)) | 0xB5389D3D2E60E81ALL) - (v9 + v47) + 0x2563B16168CF8BF3) ^ 0x8A489E7FAB8D057ALL ^ __ROR8__(v47, 61);
  v51 = v49 + v50;
  v52 = (v49 + v50) ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v50, 61);
  *((_QWORD *)&v9 + 1) = v51;
  *(_QWORD *)&v9 = v51 ^ 0xE5D7DAAEED85A300;
  v53 = ((v9 >> 8) + v52) ^ 0x8E85997BF8A3092DLL;
  v54 = v53 ^ __ROR8__(v52, 61);
  v55 = (__ROR8__(v53, 8) + v54) ^ 0xCD091F17C02FDE51;
  v56 = v55 ^ __ROR8__(v54, 61);
  v57 = (__ROR8__(v55, 8) + v56) ^ 0x628ABC52894BE762;
  v58 = v57 ^ __ROR8__(v56, 61);
  *(_QWORD *)&v9 = __ROR8__(v57, 8);
  LODWORD(v1) = v16 | ((_DWORD)v45 << 8) | (((__ROR8__((-2- ((~(v9 + v58) | 0x890E405815C8236ELL)+ ((v9 + v58) | 0x76F1BFA7EA37DC91))) ^ 0xD3CEDC5B2A43040FLL, 8)+ ((-2- ((~((_QWORD)v9 + v58) | 0x890E405815C8236ELL)+ (((_QWORD)v9 + v58) | 0x76F1BFA7EA37DC91))) ^ 0xD3CEDC5B2A43040FLL ^ __ROR8__(v58, 61))) ^ 0x1B0BD1982B59C071) >> (8 * (v1 & 7u))) ^ v46;
  return v65(a1, (_DWORD)v1 - 1129976585 - ((2 * (_DWORD)v1) & 0x794BD9EEu));
}

uint64_t sub_1CF3511B8(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  __int16 v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t (*v65)(uint64_t, _QWORD);

  LOWORD(STACK[0xAC2]) = v61;
  v65 = *(uint64_t (**)(uint64_t, _QWORD))(v63 + 8 * (v64 - 143));
  v1 = (unsigned __int8 *)(v60 + STACK[0x6D0] - 0x1799DE6785F18745);
  v2 = __ROR8__(v1, 8);
  v3 = ((2 * ((v2 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0x9077E0949EF5BAF6)
     - ((v2 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x550C087CC469144ELL)
     - 0x483BF04A4F7ADD7BLL;
  v4 = v3 ^ 0xF1B0F2EF1EFB9BD7;
  v3 ^= 0xA62F4EF6C24CC642;
  v5 = __ROR8__(v4, 8);
  v6 = (v62 - ((~(v5 + v3) | 0x1577FAC35B609246) + ((v5 + v3) | 0xEA88053CA49F6DB9))) ^ 0x45A32A2267DDE331;
  v7 = v6 ^ __ROR8__(v3, 61);
  *((_QWORD *)&v9 + 1) = __ROR8__(v6, 8) + v7;
  *(_QWORD *)&v9 = *((_QWORD *)&v9 + 1) ^ 0xE5D7DAAEED85A300;
  v8 = v9 >> 8;
  *(_QWORD *)&v9 = __ROR8__(v7, 61);
  v10 = (v8 + (*((_QWORD *)&v9 + 1) ^ 0xE5D7DAAEED85A300 ^ v9)) ^ 0x8E85997BF8A3092DLL;
  v11 = v10 ^ __ROR8__(*((_QWORD *)&v9 + 1) ^ 0xE5D7DAAEED85A300 ^ v9, 61);
  v12 = (__ROR8__(v10, 8) + v11) ^ 0xCD091F17C02FDE51;
  v13 = v12 ^ __ROR8__(v11, 61);
  v14 = (__ROR8__(v12, 8) + v13) ^ 0x628ABC52894BE762;
  v15 = v14 ^ __ROR8__(v13, 61);
  v16 = (__ROR8__(v14, 8) + v15) ^ 0x5AC09C033F8B2761;
  v17 = v16 ^ __ROR8__(v15, 61);
  *(_QWORD *)&v9 = __ROR8__(v16, 8);
  LODWORD(v17) = (((((_QWORD)v9
                                 + v17
                                 - ((2 * ((_QWORD)v9 + v17)) & 0xFF58B2E6A226F750)
                                 + 0x7FAC597351137BA8) ^ 0x64A788EB7A4ABBD9) >> (8 * (v1 & 7u))) ^ *v1) << 24;
  *(_QWORD *)&v9 = __ROR8__(v1 + 1, 8);
  v18 = ((2 * (v9 & 0xF8FFFFFFFFFFFFFFLL) + 0x55E7EF06772DD764) & 0x442912AD23D5CC78)
      - (v9 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x4D0880D9CD81D1EFLL;
  v19 = v18 ^ 0xE460740C3F945F6FLL;
  v18 ^= 0xB3FFC815E32302FALL;
  *(_QWORD *)&v9 = __ROR8__(v19, 8);
  v20 = __ROR8__((0x30D989346C5478B8- ((v9 + v18) ^ 0xF1A2B85CC66DE86 | 0x30D989346C5478B8)+ ((v9 + v18) ^ 0xF1A2B85CC66DE86 | 0xCF2676CB93AB8747)) ^ 0x90E88DAF637028B6, 8);
  v21 = (0x30D989346C5478B8
       - ((v9 + v18) ^ 0xF1A2B85CC66DE86 | 0x30D989346C5478B8)
       + ((v9 + v18) ^ 0xF1A2B85CC66DE86 | 0xCF2676CB93AB8747)) ^ 0x90E88DAF637028B6 ^ __ROR8__(v18, 61);
  v22 = (0x598D3E4F2B46E74DLL - ((v20 + v21) | 0x598D3E4F2B46E74DLL) + ((v20 + v21) | 0xA672C1B0D4B918B2)) ^ 0x43A51B1E393CBBB2;
  v23 = v22 ^ __ROR8__(v21, 61);
  v24 = (__ROR8__(v22, 8) + v23) ^ 0x8E85997BF8A3092DLL;
  v25 = v24 ^ __ROR8__(v23, 61);
  *(_QWORD *)&v9 = __ROR8__(v24, 8);
  v26 = (0xB69B3F5B468F8A56 - ((v9 + v25) | 0xB69B3F5B468F8A56) + ((v9 + v25) | 0x4964C0A4B97075A9)) ^ 0x846DDFB3795FABF8;
  v27 = v26 ^ __ROR8__(v25, 61);
  *(_QWORD *)&v9 = __ROR8__(v26, 8);
  v28 = (((2 * (v9 + v27)) & 0xA638E7B7477E3D7ALL) - (v9 + v27) - 0x531C73DBA3BF1EBELL) ^ 0xCE693076D50B0620;
  v29 = v28 ^ __ROR8__(v27, 61);
  *(_QWORD *)&v9 = __ROR8__(v28, 8);
  v30 = (-2 - ((~(v9 + v29) | 0xBFE1BEF766DF8CC9) + ((v9 + v29) | 0x401E410899207336))) ^ 0xE52122F45954ABA8;
  v31 = v30 ^ __ROR8__(v29, 61);
  *(_QWORD *)&v9 = __ROR8__(v30, 8);
  LODWORD(v16) = v17 | (((((((2 * ((_QWORD)v9 + v31)) & 0x1892AEAF4EEC022CLL)
                                           - ((_QWORD)v9
                                            + v31)
                                           - 0xC495757A7760117) ^ 0xE8BD793073D03E98) >> (8 * (((_BYTE)v1 + 1) & 7u))) ^ v1[1]) << 16);
  *(_QWORD *)&v9 = __ROR8__(v1 + 2, 8);
  v32 = (v9 & 0xF8FFFFFFFFFFFFFFLL)
      - ((2 * (v9 & 0xF8FFFFFFFFFFFFFFLL) + 0x15E7EF06772DD764) & 0x26E74F7F1F24F14ALL)
      + 0x3E679F42CB296457;
  v33 = v32 ^ 0x2AF8A51ADE133E09;
  v32 ^= 0x7D67190302A4639CuLL;
  *(_QWORD *)&v9 = __ROR8__(v33, 8);
  v34 = (0x16F6A45EDF0B58BBLL - ((v9 + v32) | 0x16F6A45EDF0B58BBLL) + ((v9 + v32) | 0xE9095BA120F4A744)) ^ 0xB9DD8B401C49D633;
  v35 = v34 ^ __ROR8__(v32, 61);
  *(_QWORD *)&v9 = __ROR8__(v34, 8);
  v36 = (-2 - ((~(v9 + v35) | 0xFE9C6D911D4C30A4) + ((v9 + v35) | 0x163926EE2B3CF5BLL))) ^ 0x1B4BB73FF0C993A4;
  v37 = v36 ^ __ROR8__(v35, 61);
  *(_QWORD *)&v9 = __ROR8__(v36, 8);
  v38 = (((2 * (v9 + v37)) & 0xA406050F9C73BDA8) - (v9 + v37) + 0x2DFCFD7831C6212BLL) ^ 0xA3796403C9652806;
  v39 = v38 ^ __ROR8__(v37, 61);
  *(_QWORD *)&v9 = __ROR8__(v38, 8);
  v40 = (((2 * (v9 + v39)) & 0xBFAA761F45D5431ALL) - (v9 + v39) - 0x5FD53B0FA2EAA18ELL) ^ 0x6D23DBE79D3A8023;
  v41 = v40 ^ __ROR8__(v39, 61);
  v42 = (__ROR8__(v40, 8) + v41) ^ 0x628ABC52894BE762;
  v43 = v42 ^ __ROR8__(v41, 61);
  *(_QWORD *)&v9 = __ROR8__(v42, 8);
  v44 = (-2 - ((~(v9 + v43) | 0x93BA3FB03D9D02EFLL) + ((v9 + v43) | 0x6C45C04FC262FD10))) ^ 0xC97AA3B30216258ELL;
  v45 = v44 ^ __ROR8__(v43, 61);
  *(_QWORD *)&v9 = __ROR8__(v44, 8);
  LODWORD(v45) = (((((2 * ((_QWORD)v9 + v45)) & 0x57A4333711C5D1CLL)
                                   - ((_QWORD)v9
                                    + v45)
                                   + 0x7D42DE664771D171) ^ 0x66490FFE6C281100) >> (8 * (((_BYTE)v1 + 2) & 7u))) ^ v1[2];
  v46 = v1[3];
  v1 += 3;
  *(_QWORD *)&v9 = __ROR8__(v1, 8);
  v47 = ((2 * ((v9 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0xAADD163E4CA4D5AELL)
      - ((v9 & 0xF8FFFFFFFFFFFFFFLL)
       - 0x550C087CC469144ELL)
      - 0x556E8B1F26526AD7;
  v48 = v47 ^ 0xECE589BA77D32C7BLL;
  v47 ^= 0xBB7A35A3AB6471EELL;
  *(_QWORD *)&v9 = __ROR8__(v48, 8);
  v49 = __ROR8__((((2 * (v9 + v47)) | 0xB5389D3D2E60E81ALL) - (v9 + v47) + 0x2563B16168CF8BF3) ^ 0x8A489E7FAB8D057ALL, 8);
  v50 = (((2 * (v9 + v47)) | 0xB5389D3D2E60E81ALL) - (v9 + v47) + 0x2563B16168CF8BF3) ^ 0x8A489E7FAB8D057ALL ^ __ROR8__(v47, 61);
  v51 = v49 + v50;
  v52 = (v49 + v50) ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v50, 61);
  *((_QWORD *)&v9 + 1) = v51;
  *(_QWORD *)&v9 = v51 ^ 0xE5D7DAAEED85A300;
  v53 = ((v9 >> 8) + v52) ^ 0x8E85997BF8A3092DLL;
  v54 = v53 ^ __ROR8__(v52, 61);
  v55 = (__ROR8__(v53, 8) + v54) ^ 0xCD091F17C02FDE51;
  v56 = v55 ^ __ROR8__(v54, 61);
  v57 = (__ROR8__(v55, 8) + v56) ^ 0x628ABC52894BE762;
  v58 = v57 ^ __ROR8__(v56, 61);
  *(_QWORD *)&v9 = __ROR8__(v57, 8);
  LODWORD(v1) = v16 | ((_DWORD)v45 << 8) | (((__ROR8__((-2- ((~(v9 + v58) | 0x890E405815C8236ELL)+ ((v9 + v58) | 0x76F1BFA7EA37DC91))) ^ 0xD3CEDC5B2A43040FLL, 8)+ ((-2- ((~((_QWORD)v9 + v58) | 0x890E405815C8236ELL)+ (((_QWORD)v9 + v58) | 0x76F1BFA7EA37DC91))) ^ 0xD3CEDC5B2A43040FLL ^ __ROR8__(v58, 61))) ^ 0x1B0BD1982B59C071) >> (8 * (v1 & 7u))) ^ v46;
  return v65(a1, (_DWORD)v1 - 1129976585 - ((2 * (_DWORD)v1) & 0x794BD9EEu));
}

uint64_t sub_1CF3511D0(uint64_t a1, int a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  _BOOL4 v7;
  _BOOL4 v8;

  v5 = STACK[0x78C];
  LODWORD(STACK[0xACC]) = a2;
  v6 = (a2 ^ 0xBCA5ECF7) + v2;
  STACK[0xAD0] = v6 + 10;
  v6 -= 0x1CAEFB3CC2F440B0;
  v7 = v6 < 0x92050282;
  v8 = v6 > STACK[0x7A0];
  if (v3 > 0xFFFFFFFF6DFAFD7DLL != v7)
    v8 = v7;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v5 + 337) ^ (117 * !v8))))();
}

uint64_t sub_1CF35126C(unint64_t a1, uint64_t a2)
{
  unsigned __int8 *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  int v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  unsigned __int16 v62;
  int v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t (*v67)(unint64_t, _QWORD);
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  unint64_t v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  unint64_t v164;
  unint64_t v165;
  unint64_t v166;
  unint64_t v167;
  unint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  int v177;
  _BOOL4 v179;

  switch(v62)
  {
    case 0x3B49u:
      v67 = (uint64_t (*)(unint64_t, _QWORD))(*(_QWORD *)(v66 + 8 * (v65 - 149))
                                                             + (v65 ^ 0x210u)
                                                             - 903);
      v2 = (unsigned __int8 *)(v61 + STACK[0x660] - 0x1799DE6785F18745);
      v3 = __ROR8__(v2, 8);
      v4 = ((2 * ((v3 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0x9077E0949EF5BAF6)
         - ((v3 & 0xF8FFFFFFFFFFFFFFLL)
          - 0x550C087CC469144ELL)
         - 0x483BF04A4F7ADD7BLL;
      v5 = v4 ^ 0xF1B0F2EF1EFB9BD7;
      v4 ^= 0xA62F4EF6C24CC642;
      v6 = __ROR8__(v5, 8);
      v7 = (v64 - ((~(v6 + v4) | 0x1577FAC35B609246) + ((v6 + v4) | 0xEA88053CA49F6DB9))) ^ 0x45A32A2267DDE331;
      v8 = v7 ^ __ROR8__(v4, 61);
      *((_QWORD *)&v10 + 1) = __ROR8__(v7, 8) + v8;
      *(_QWORD *)&v10 = *((_QWORD *)&v10 + 1) ^ 0xE5D7DAAEED85A300;
      v9 = v10 >> 8;
      *(_QWORD *)&v10 = __ROR8__(v8, 61);
      v11 = (v9 + (*((_QWORD *)&v10 + 1) ^ 0xE5D7DAAEED85A300 ^ v10)) ^ 0x8E85997BF8A3092DLL;
      v12 = v11 ^ __ROR8__(*((_QWORD *)&v10 + 1) ^ 0xE5D7DAAEED85A300 ^ v10, 61);
      v13 = (__ROR8__(v11, 8) + v12) ^ 0xCD091F17C02FDE51;
      v14 = v13 ^ __ROR8__(v12, 61);
      v15 = (__ROR8__(v13, 8) + v14) ^ 0x628ABC52894BE762;
      v16 = v15 ^ __ROR8__(v14, 61);
      v17 = (__ROR8__(v15, 8) + v16) ^ 0x5AC09C033F8B2761;
      v18 = v17 ^ __ROR8__(v16, 61);
      *(_QWORD *)&v10 = __ROR8__(v17, 8);
      LODWORD(v18) = (((((_QWORD)v10
                                     + v18
                                     - ((2 * ((_QWORD)v10 + v18)) & 0xFF58B2E6A226F750)
                                     + 0x7FAC597351137BA8) ^ 0x64A788EB7A4ABBD9) >> (8 * (v2 & 7u))) ^ *v2) << 24;
      *(_QWORD *)&v10 = __ROR8__(v2 + 1, 8);
      v19 = ((2 * (v10 & 0xF8FFFFFFFFFFFFFFLL) + 0x55E7EF06772DD764) & 0x442912AD23D5CC78)
          - (v10 & 0xF8FFFFFFFFFFFFFFLL)
          - 0x4D0880D9CD81D1EFLL;
      v20 = v19 ^ 0xE460740C3F945F6FLL;
      v19 ^= 0xB3FFC815E32302FALL;
      *(_QWORD *)&v10 = __ROR8__(v20, 8);
      v21 = __ROR8__((0x30D989346C5478B8- ((v10 + v19) ^ 0xF1A2B85CC66DE86 | 0x30D989346C5478B8)+ ((v10 + v19) ^ 0xF1A2B85CC66DE86 | 0xCF2676CB93AB8747)) ^ 0x90E88DAF637028B6, 8);
      v22 = (0x30D989346C5478B8
           - ((v10 + v19) ^ 0xF1A2B85CC66DE86 | 0x30D989346C5478B8)
           + ((v10 + v19) ^ 0xF1A2B85CC66DE86 | 0xCF2676CB93AB8747)) ^ 0x90E88DAF637028B6 ^ __ROR8__(v19, 61);
      v23 = (0x598D3E4F2B46E74DLL - ((v21 + v22) | 0x598D3E4F2B46E74DLL) + ((v21 + v22) | 0xA672C1B0D4B918B2)) ^ 0x43A51B1E393CBBB2;
      v24 = v23 ^ __ROR8__(v22, 61);
      v25 = (__ROR8__(v23, 8) + v24) ^ 0x8E85997BF8A3092DLL;
      v26 = v25 ^ __ROR8__(v24, 61);
      *(_QWORD *)&v10 = __ROR8__(v25, 8);
      v27 = (0xB69B3F5B468F8A56 - ((v10 + v26) | 0xB69B3F5B468F8A56) + ((v10 + v26) | 0x4964C0A4B97075A9)) ^ 0x846DDFB3795FABF8;
      v28 = v27 ^ __ROR8__(v26, 61);
      *(_QWORD *)&v10 = __ROR8__(v27, 8);
      v29 = (((2 * (v10 + v28)) & 0xA638E7B7477E3D7ALL) - (v10 + v28) - 0x531C73DBA3BF1EBELL) ^ 0xCE693076D50B0620;
      v30 = v29 ^ __ROR8__(v28, 61);
      *(_QWORD *)&v10 = __ROR8__(v29, 8);
      v31 = (-2 - ((~(v10 + v30) | 0xBFE1BEF766DF8CC9) + ((v10 + v30) | 0x401E410899207336))) ^ 0xE52122F45954ABA8;
      v32 = v31 ^ __ROR8__(v30, 61);
      *(_QWORD *)&v10 = __ROR8__(v31, 8);
      LODWORD(v17) = v18 | (((((((2 * ((_QWORD)v10 + v32)) & 0x1892AEAF4EEC022CLL)
                                               - ((_QWORD)v10
                                                + v32)
                                               - 0xC495757A7760117) ^ 0xE8BD793073D03E98) >> (8
                                                                                                * (((_BYTE)v2 + 1) & 7u))) ^ v2[1]) << 16);
      *(_QWORD *)&v10 = __ROR8__(v2 + 2, 8);
      v33 = (v10 & 0xF8FFFFFFFFFFFFFFLL)
          - ((2 * (v10 & 0xF8FFFFFFFFFFFFFFLL) + 0x15E7EF06772DD764) & 0x26E74F7F1F24F14ALL)
          + 0x3E679F42CB296457;
      v34 = v33 ^ 0x2AF8A51ADE133E09;
      v33 ^= 0x7D67190302A4639CuLL;
      *(_QWORD *)&v10 = __ROR8__(v34, 8);
      v35 = (0x16F6A45EDF0B58BBLL - ((v10 + v33) | 0x16F6A45EDF0B58BBLL) + ((v10 + v33) | 0xE9095BA120F4A744)) ^ 0xB9DD8B401C49D633;
      v36 = v35 ^ __ROR8__(v33, 61);
      *(_QWORD *)&v10 = __ROR8__(v35, 8);
      v37 = (-2 - ((~(v10 + v36) | 0xFE9C6D911D4C30A4) + ((v10 + v36) | 0x163926EE2B3CF5BLL))) ^ 0x1B4BB73FF0C993A4;
      v38 = v37 ^ __ROR8__(v36, 61);
      *(_QWORD *)&v10 = __ROR8__(v37, 8);
      v39 = (((2 * (v10 + v38)) & 0xA406050F9C73BDA8) - (v10 + v38) + 0x2DFCFD7831C6212BLL) ^ 0xA3796403C9652806;
      v40 = v39 ^ __ROR8__(v38, 61);
      *(_QWORD *)&v10 = __ROR8__(v39, 8);
      v41 = (((2 * (v10 + v40)) & 0xBFAA761F45D5431ALL) - (v10 + v40) - 0x5FD53B0FA2EAA18ELL) ^ 0x6D23DBE79D3A8023;
      v42 = v41 ^ __ROR8__(v40, 61);
      v43 = (__ROR8__(v41, 8) + v42) ^ 0x628ABC52894BE762;
      v44 = v43 ^ __ROR8__(v42, 61);
      *(_QWORD *)&v10 = __ROR8__(v43, 8);
      v45 = (-2 - ((~(v10 + v44) | 0x93BA3FB03D9D02EFLL) + ((v10 + v44) | 0x6C45C04FC262FD10))) ^ 0xC97AA3B30216258ELL;
      v46 = v45 ^ __ROR8__(v44, 61);
      *(_QWORD *)&v10 = __ROR8__(v45, 8);
      LODWORD(v46) = (((((2 * ((_QWORD)v10 + v46)) & 0x57A4333711C5D1CLL)
                                       - ((_QWORD)v10
                                        + v46)
                                       + 0x7D42DE664771D171) ^ 0x66490FFE6C281100) >> (8 * (((_BYTE)v2 + 2) & 7u))) ^ v2[2];
      v47 = v2[3];
      v2 += 3;
      *(_QWORD *)&v10 = __ROR8__(v2, 8);
      v48 = ((2 * ((v10 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0xAADD163E4CA4D5AELL)
          - ((v10 & 0xF8FFFFFFFFFFFFFFLL)
           - 0x550C087CC469144ELL)
          - 0x556E8B1F26526AD7;
      v49 = v48 ^ 0xECE589BA77D32C7BLL;
      v48 ^= 0xBB7A35A3AB6471EELL;
      *(_QWORD *)&v10 = __ROR8__(v49, 8);
      v50 = __ROR8__((((2 * (v10 + v48)) | 0xB5389D3D2E60E81ALL) - (v10 + v48) + 0x2563B16168CF8BF3) ^ 0x8A489E7FAB8D057ALL, 8);
      v51 = (((2 * (v10 + v48)) | 0xB5389D3D2E60E81ALL) - (v10 + v48) + 0x2563B16168CF8BF3) ^ 0x8A489E7FAB8D057ALL ^ __ROR8__(v48, 61);
      v52 = v50 + v51;
      v53 = (v50 + v51) ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v51, 61);
      *((_QWORD *)&v10 + 1) = v52;
      *(_QWORD *)&v10 = v52 ^ 0xE5D7DAAEED85A300;
      v54 = ((v10 >> 8) + v53) ^ 0x8E85997BF8A3092DLL;
      v55 = v54 ^ __ROR8__(v53, 61);
      v56 = (__ROR8__(v54, 8) + v55) ^ 0xCD091F17C02FDE51;
      v57 = v56 ^ __ROR8__(v55, 61);
      v58 = (__ROR8__(v56, 8) + v57) ^ 0x628ABC52894BE762;
      v59 = v58 ^ __ROR8__(v57, 61);
      *(_QWORD *)&v10 = __ROR8__(v58, 8);
      LODWORD(v2) = v17 | ((_DWORD)v46 << 8) | (((__ROR8__((-2- ((~(v10 + v59) | 0x890E405815C8236ELL)+ ((v10 + v59) | 0x76F1BFA7EA37DC91))) ^ 0xD3CEDC5B2A43040FLL, 8)+ ((-2- ((~((_QWORD)v10 + v59) | 0x890E405815C8236ELL)+ (((_QWORD)v10 + v59) | 0x76F1BFA7EA37DC91))) ^ 0xD3CEDC5B2A43040FLL ^ __ROR8__(v59, 61))) ^ 0x1B0BD1982B59C071) >> (8 * (v2 & 7u))) ^ v47;
      return v67(a1, (_DWORD)v2 - 1129976585 - ((2 * (_DWORD)v2) & 0x794BD9EEu));
    case 0x28BBu:
      v68 = __ROR8__(((2 * STACK[0x640]) & 0xE5AFBFFFB57ADFFELL)+ (STACK[0x640] ^ 0x72D7DFFFDABD6FFFLL)+ STACK[0xA20]- 0x72D7DFFFDABD6FFFLL, 8);
      v69 = (0x550C087CC469144DLL - (v68 & 0xF8FFFFFFFFFFFFFFLL)) & 0x6D58C0DD51B9DC83 | ((v68 & 0xF8FFFFFFFFFFFFFFLL)
                                                                                          - 0x550C087CC469144ELL) & 0x90A73F22AE46237CLL;
      v70 = __ROR8__(v69 ^ 0xD6D3C27800389A2FLL, 8);
      v69 ^= 0x814C7E61DC8FC7BALL;
      v71 = (v70 + v69) ^ 0x50D4D0E13CBD7177;
      v72 = v71 ^ __ROR8__(v69, 61);
      v73 = __ROR8__(v71, 8);
      v74 = (v73 + v72 - ((2 * (v73 + v72)) & 0xBF31C9DC1592A16CLL) - 0x20671B11F536AF4ALL) ^ 0x3A4F3E40E74CF3B6;
      v75 = v74 ^ __ROR8__(v72, 61);
      v76 = (__ROR8__(v74, 8) + v75) ^ 0x8E85997BF8A3092DLL;
      v77 = v76 ^ __ROR8__(v75, 61);
      v78 = (__ROR8__(v76, 8) + v77) ^ 0xCD091F17C02FDE51;
      v79 = v78 ^ __ROR8__(v77, 61);
      v80 = __ROR8__(v78, 8);
      v81 = __ROR8__((-2 - ((~(v80 + v79) | 0x804285D7227EE46) + ((v80 + v79) | 0xF7FBD7A28DD811B9))) ^ 0x6A8E940FFB6C0924, 8);
      v82 = (-2 - ((~(v80 + v79) | 0x804285D7227EE46) + ((v80 + v79) | 0xF7FBD7A28DD811B9))) ^ 0x6A8E940FFB6C0924 ^ __ROR8__(v79, 61);
      v83 = (__ROR8__(((2 * STACK[0x640]) & 0xE5AFBFFFB57ADFFELL)+ (STACK[0x640] ^ 0x72D7DFFFDABD6FFFLL)+ STACK[0xA20]- 0x72D7DFFFDABD6FFELL, 8) & 0xF8FFFFFFFFFFFFFFLL)- 0x550C087CC469144ELL;
      v84 = __ROR8__(v83 ^ 0xB98B02A5518146ACLL, 8);
      v83 ^= 0xEE14BEBC8D361B39;
      v85 = (v84 + v83) ^ 0x50D4D0E13CBD7177;
      v86 = v85 ^ __ROR8__(v83, 61);
      v87 = __ROR8__(v85, 8) + v86;
      v88 = v87 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v86, 61);
      v89 = (((__ROR8__((v81 + v82) ^ 0x5AC09C033F8B2761, 8)
                           + ((v81 + v82) ^ 0x5AC09C033F8B2761 ^ __ROR8__(v82, 61))) ^ 0x1B0BD1982B59C071) >> (8 * ((2 * LOBYTE(STACK[0x640]) + ~LOBYTE(STACK[0x640]) + LOBYTE(STACK[0xA20]) + 1) & 7u))) ^ *(unsigned __int8 *)(((2 * STACK[0x640]) & 0xE5AFBFFFB57ADFFELL) + (STACK[0x640] ^ 0x72D7DFFFDABD6FFFLL) + STACK[0xA20] - 0x72D7DFFFDABD6FFFLL);
      *((_QWORD *)&v90 + 1) = v87;
      *(_QWORD *)&v90 = v87 ^ 0xE5D7DAAEED85A300;
      v91 = ((v90 >> 8) + v88) ^ 0x8E85997BF8A3092DLL;
      v92 = v91 ^ __ROR8__(v88, 61);
      v93 = (__ROR8__(v91, 8) + v92) ^ 0xCD091F17C02FDE51;
      v94 = v93 ^ __ROR8__(v92, 61);
      *(_QWORD *)&v90 = __ROR8__(v93, 8);
      v95 = (((v90 + v94) | 0xF2D730B72DD0B633) - ((v90 + v94) | 0xD28CF48D22F49CCLL) + 0xD28CF48D22F49CCLL) ^ 0x905D8CE5A49B5151;
      v96 = v95 ^ __ROR8__(v94, 61);
      v97 = (__ROR8__(v95, 8) + v96) ^ 0x5AC09C033F8B2761;
      v98 = (((__ROR8__(v97, 8) + (v97 ^ __ROR8__(v96, 61))) ^ 0x1B0BD1982B59C071uLL) >> (8 * ((2 * LOBYTE(STACK[0x640]) + ~LOBYTE(STACK[0x640]) + LOBYTE(STACK[0xA20]) + 2) & 7u))) ^ *(unsigned __int8 *)(((2 * STACK[0x640]) & 0xE5AFBFFFB57ADFFELL) + (STACK[0x640] ^ 0x72D7DFFFDABD6FFFLL) + STACK[0xA20] - 0x72D7DFFFDABD6FFELL);
      v99 = ((2 * STACK[0x640]) & 0xE5AFBFFFB57ADFFELL)
          + (STACK[0x640] ^ 0x72D7DFFFDABD6FFFLL)
          + STACK[0xA20]
          - 0x72D7DFFFDABD6FFDLL;
      v100 = ((v99 >> 8) - 0x550C087CC469144ELL + (v99 >> 3 << 59)) & 0xF9FFFFFFFFFFFFFFLL;
      v101 = v100 ^ 0xBB8B02A5518146ACLL;
      v100 ^= 0xEC14BEBC8D361B39;
      v102 = (__ROR8__(v101, 8) + v100) ^ 0x50D4D0E13CBD7177;
      v103 = v102 ^ __ROR8__(v100, 61);
      *(_QWORD *)&v90 = __ROR8__(v102, 8);
      v104 = (-2 - ((~(v90 + v103) | 0x57E552689E69D8BALL) + ((v90 + v103) | 0xA81AAD9761962745))) ^ 0xB23288C673EC7BBALL;
      v105 = v104 ^ __ROR8__(v103, 61);
      v106 = (__ROR8__(v104, 8) + v105) ^ 0x8E85997BF8A3092DLL;
      v107 = v106 ^ __ROR8__(v105, 61);
      v108 = (__ROR8__(v106, 8) + v107) ^ 0xCD091F17C02FDE51;
      v109 = v108 ^ __ROR8__(v107, 61);
      v110 = (__ROR8__(v108, 8) + v109) ^ 0x628ABC52894BE762;
      v111 = v110 ^ __ROR8__(v109, 61);
      v112 = (__ROR8__(v110, 8) + v111) ^ 0x5AC09C033F8B2761;
      v113 = (((__ROR8__(v112, 8) + (v112 ^ __ROR8__(v111, 61))) ^ 0x1B0BD1982B59C071uLL) >> (8 * ((2 * LOBYTE(STACK[0x640]) + ~LOBYTE(STACK[0x640]) + LOBYTE(STACK[0xA20]) + 3) & 7u))) ^ *(unsigned __int8 *)v99;
      *(_QWORD *)&v90 = __ROR8__(((2 * STACK[0x640]) & 0xE5AFBFFFB57ADFFELL)+ (STACK[0x640] ^ 0x72D7DFFFDABD6FFFLL)+ STACK[0xA20]- 0x72D7DFFFDABD6FFCLL, 8);
      v114 = -2
           - (((0x50C087CC469144DLL - (v90 & 0xF8FFFFFFFFFFFFFFLL)) | 0xF6365F3F438ED2E7)
            + (((v90 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL) | 0x9C9A0C0BC712D18));
      v115 = (__ROR8__(v114 ^ 0x4FBD5D9A120F944BLL, 8) + (v114 ^ 0x1822E183CEB8C9DELL)) ^ 0x50D4D0E13CBD7177;
      *((_QWORD *)&v90 + 1) = v114 ^ 0x1822E183CEB8C9DELL;
      *(_QWORD *)&v90 = v114;
      v116 = v115 ^ (v90 >> 61);
      *((_QWORD *)&v90 + 1) = __ROR8__(v115, 8) + v116;
      *(_QWORD *)&v90 = *((_QWORD *)&v90 + 1) ^ 0xE5D7DAAEED85A300;
      v117 = v90 >> 8;
      *(_QWORD *)&v90 = __ROR8__(v116, 61);
      v118 = (((v117 + (*((_QWORD *)&v90 + 1) ^ 0xE5D7DAAEED85A300 ^ v90)) | 0x7B035412CF657581)
            - ((v117 + (*((_QWORD *)&v90 + 1) ^ 0xE5D7DAAEED85A300 ^ v90)) | 0x84FCABED309A8A7ELL)
            - 0x7B035412CF657582) ^ 0xF586CD6937C67CACLL;
      v119 = v118 ^ __ROR8__(*((_QWORD *)&v90 + 1) ^ 0xE5D7DAAEED85A300 ^ v90, 61);
      v120 = (__ROR8__(v118, 8) + v119) ^ 0xCD091F17C02FDE51;
      v121 = v120 ^ __ROR8__(v119, 61);
      *(_QWORD *)&v90 = __ROR8__(v120, 8);
      v122 = (v90 + v121 - ((2 * (v90 + v121)) & 0xF9C9A3A39E27D0B4) - 0x31B2E2E30EC17A6) ^ 0x9E6E6D8346580F38;
      v123 = v122 ^ __ROR8__(v121, 61);
      v124 = (__ROR8__(v122, 8) + v123) ^ 0x5AC09C033F8B2761;
      v125 = v124 ^ __ROR8__(v123, 61);
      *(_QWORD *)&v90 = __ROR8__(v124, 8);
      v126 = ((((_QWORD)v90
                               + v125
                               - ((2 * ((_QWORD)v90 + v125)) & 0xAB80E26214ED7F8ELL)
                               + 0x55C071310A76BFC7) ^ 0x4ECBA0A9212F7FB6) >> (8
                                                                                 * ((2 * LOBYTE(STACK[0x640])
                                                                                   + ~LOBYTE(STACK[0x640])
                                                                                   + LOBYTE(STACK[0xA20])
                                                                                   + 4) & 7u))) ^ *(unsigned __int8 *)(((2 * STACK[0x640]) & 0xE5AFBFFFB57ADFFELL) + (STACK[0x640] ^ 0x72D7DFFFDABD6FFFLL) + STACK[0xA20] - 0x72D7DFFFDABD6FFCLL);
      v127 = (__ROR8__(((2 * STACK[0x640]) & 0xE5AFBFFFB57ADFFELL)+ (STACK[0x640] ^ 0x72D7DFFFDABD6FFFLL)+ STACK[0xA20]- 0x72D7DFFFDABD6FFBLL, 8) & 0xF8FFFFFFFFFFFFFFLL)- 0x550C087CC469144ELL;
      *(_QWORD *)&v90 = __ROR8__(v127 ^ 0xB98B02A5518146ACLL, 8);
      v127 ^= 0xEE14BEBC8D361B39;
      v128 = (v90 + v127) ^ 0x50D4D0E13CBD7177;
      v129 = v128 ^ __ROR8__(v127, 61);
      v130 = __ROR8__(v128, 8) + v129;
      v131 = v130 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v129, 61);
      *((_QWORD *)&v90 + 1) = v130;
      *(_QWORD *)&v90 = v130 ^ 0xE5D7DAAEED85A300;
      v132 = ((v90 >> 8) + v131) ^ 0x8E85997BF8A3092DLL;
      v133 = v132 ^ __ROR8__(v131, 61);
      v134 = (__ROR8__(v132, 8) + v133) ^ 0xCD091F17C02FDE51;
      v135 = v134 ^ __ROR8__(v133, 61);
      *(_QWORD *)&v90 = __ROR8__(v134, 8);
      v136 = (v90 + v135 - ((2 * (v90 + v135)) & 0x45C2F047781F7AAALL) - 0x5D1E87DC43F042ABLL) ^ 0xC06BC47135445A37;
      v137 = v136 ^ __ROR8__(v135, 61);
      *(_QWORD *)&v90 = __ROR8__(v136, 8);
      LOBYTE(v137) = (((__ROR8__((((2 * (v90 + v137)) | 0xF51FB2659BA320F0) - (v90 + v137) - 0x7A8FD932CDD19078) ^ 0x204F4531F25AB719, 8)+ ((((2 * ((_QWORD)v90 + v137)) | 0xF51FB2659BA320F0)- ((_QWORD)v90+ v137)- 0x7A8FD932CDD19078) ^ 0x204F4531F25AB719 ^ __ROR8__(v137, 61))) ^ 0x1B0BD1982B59C071) >> (8 * ((2 * LOBYTE(STACK[0x640]) + ~LOBYTE(STACK[0x640]) + LOBYTE(STACK[0xA20]) + 5) & 7u))) ^ *(_BYTE *)(((2 * STACK[0x640]) & 0xE5AFBFFFB57ADFFELL) + (STACK[0x640] ^ 0x72D7DFFFDABD6FFFLL) + STACK[0xA20] - 0x72D7DFFFDABD6FFBLL);
      v138 = ((2 * STACK[0x640]) & 0xE5AFBFFFB57ADFFELL)
           + (STACK[0x640] ^ 0x72D7DFFFDABD6FFFLL)
           + STACK[0xA20]
           - 0x72D7DFFFDABD6FFALL;
      v139 = ((v138 >> 8) - 0x550C087CC469144ELL + (v138 >> 3 << 59)) ^ 0xBCD1C31E1563D42DLL;
      v140 = ((2 * v139) & 0x4259928A4907A5C2) - v139 - 0x212CC9452483D2E2;
      v141 = v140 ^ 0xDB89F7019F9EBF9FLL;
      v140 ^= 0x8C164B184329E20ALL;
      v142 = (__ROR8__(v141, 8) + v140) ^ 0x50D4D0E13CBD7177;
      v143 = v142 ^ __ROR8__(v140, 61);
      *((_QWORD *)&v90 + 1) = __ROR8__(v142, 8) + v143;
      *(_QWORD *)&v90 = *((_QWORD *)&v90 + 1) ^ 0xE5D7DAAEED85A300;
      v144 = v90 >> 8;
      *(_QWORD *)&v90 = __ROR8__(v143, 61);
      v145 = (v144 + (*((_QWORD *)&v90 + 1) ^ 0xE5D7DAAEED85A300 ^ v90)) ^ 0x8E85997BF8A3092DLL;
      v146 = v145 ^ __ROR8__(*((_QWORD *)&v90 + 1) ^ 0xE5D7DAAEED85A300 ^ v90, 61);
      *(_QWORD *)&v90 = __ROR8__(v145, 8);
      v147 = (v90 + v146 - ((2 * (v90 + v146)) & 0xBE1FB406A5DAE47ELL) + 0x5F0FDA0352ED723FLL) ^ 0x9206C51492C2AC6ELL;
      v148 = v147 ^ __ROR8__(v146, 61);
      v149 = (__ROR8__(v147, 8) + v148) ^ 0x628ABC52894BE762;
      v150 = v149 ^ __ROR8__(v148, 61);
      v151 = (__ROR8__(v149, 8) + v150) ^ 0x5AC09C033F8B2761;
      LOBYTE(v138) = (((__ROR8__(v151, 8) + (v151 ^ __ROR8__(v150, 61))) ^ 0x1B0BD1982B59C071uLL) >> (8 * ((2 * LOBYTE(STACK[0x640]) + ~LOBYTE(STACK[0x640]) + LOBYTE(STACK[0xA20]) + 6) & 7u))) ^ *(_BYTE *)v138;
      *(_QWORD *)&v90 = __ROR8__(((2 * STACK[0x640]) & 0xE5AFBFFFB57ADFFELL)+ (STACK[0x640] ^ 0x72D7DFFFDABD6FFFLL)+ STACK[0xA20]- 0x72D7DFFFDABD6FF9, 8);
      v152 = ((2 * (v90 & 0xF8FFFFFFFFFFFFFFLL) + 0x15E7EF06772DD764) & 0x368D032D488F29C8)
           - (v90 & 0xF8FFFFFFFFFFFFFFLL)
           + 0x39C586E620217F69;
      *(_QWORD *)&v90 = __ROR8__(v152 ^ 0x5D327CCC0A392DB7, 8);
      v153 = (v90
            + (v152 ^ 0xAADC0D5D68E7022)
            - ((2 * (v90 + (v152 ^ 0xAADC0D5D68E7022))) & 0x125A433765E8101ALL)
            + 0x92D219BB2F4080DLL) ^ 0x59F9F17A8E49797ALL;
      *((_QWORD *)&v90 + 1) = v152 ^ 0xAADC0D5D68E7022;
      *(_QWORD *)&v90 = v152;
      v154 = v153 ^ (v90 >> 61);
      v155 = __ROR8__(v153, 8) + v154;
      v156 = v155 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v154, 61);
      *((_QWORD *)&v90 + 1) = v155;
      *(_QWORD *)&v90 = v155 ^ 0xE5D7DAAEED85A300;
      v157 = (-2 - ((~((v90 >> 8) + v156) | 0x9ADC11E2E4291B51) + (((v90 >> 8) + v156) | 0x6523EE1D1BD6E4AELL))) ^ 0x145988991C8A127CLL;
      v158 = v157 ^ __ROR8__(v156, 61);
      *(_QWORD *)&v90 = __ROR8__(v157, 8);
      v159 = (v90 + v158 - ((2 * (v90 + v158)) & 0xBD3B0579B2491BDCLL) + 0x5E9D82BCD9248DEELL) ^ 0x93949DAB190B53BFLL;
      v160 = v159 ^ __ROR8__(v158, 61);
      *(_QWORD *)&v90 = __ROR8__(v159, 8);
      v161 = (((2 * (v90 + v160)) | 0xE7D00DB1F414AA32) - (v90 + v160) - 0x73E806D8FA0A5519) ^ 0x1162BA8A7341B27BLL;
      v162 = v161 ^ __ROR8__(v160, 61);
      *(_QWORD *)&v90 = __ROR8__(v161, 8);
      v163 = (((v90 + v162) | 0x70440A8D7607DE20) - ((v90 + v162) | 0x8FBBF57289F821DFLL) - 0x70440A8D7607DE21) ^ 0x2A84968E498CF941;
      v164 = v163 ^ __ROR8__(v162, 61);
      *(_QWORD *)&v90 = __ROR8__(v163, 8);
      LOBYTE(v124) = ((((_QWORD)v90 + v164 - ((2 * ((_QWORD)v90 + v164)) & 0x8C8E5FF84B6B23BALL) + 0x46472FFC25B591DDLL) ^ 0x5D4CFE640EEC51ACLL) >> (8 * ((2 * LOBYTE(STACK[0x640]) + ~LOBYTE(STACK[0x640]) + LOBYTE(STACK[0xA20]) + 7) & 7u))) ^ *(_BYTE *)(((2 * STACK[0x640]) & 0xE5AFBFFFB57ADFFELL) + (STACK[0x640] ^ 0x72D7DFFFDABD6FFFLL) + STACK[0xA20] - 0x72D7DFFFDABD6FF9);
      *(_QWORD *)&v90 = __ROR8__(((2 * STACK[0x640]) & 0xE5AFBFFFB57ADFFELL)+ (STACK[0x640] ^ 0x72D7DFFFDABD6FFFLL)+ STACK[0xA20]- 0x72D7DFFFDABD6FF8, 8);
      v165 = ((2 * (v90 & 0xF8FFFFFFFFFFFFFFLL) + 0x55E7EF06772DD764) & 0x47587F0B6C5A8D60)
           - (v90 & 0xF8FFFFFFFFFFFFFFLL)
           - 0x4EA03708F1C43263;
      *(_QWORD *)&v90 = __ROR8__(v165 ^ 0xE5D8C2DF1853FFE3, 8);
      v165 ^= 0xB2477EC6C4E4A276;
      v166 = (-2 - ((~(v90 + v165) | 0x19395237254158A4) + ((v90 + v165) | 0xE6C6ADC8DABEA75BLL))) ^ 0x49ED82D619FC29D3;
      v167 = v166 ^ __ROR8__(v165, 61);
      v168 = __ROR8__(v166, 8) + v167;
      v169 = v168 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v167, 61);
      *((_QWORD *)&v90 + 1) = v168;
      *(_QWORD *)&v90 = v168 ^ 0xE5D7DAAEED85A300;
      v170 = (-2 - ((~((v90 >> 8) + v169) | 0xA773C67B5550DD47) + (((v90 >> 8) + v169) | 0x588C3984AAAF22B8))) ^ 0x29F65F00ADF3D46ALL;
      v171 = v170 ^ __ROR8__(v169, 61);
      *(_QWORD *)&v90 = __ROR8__(v170, 8);
      v172 = ((v90 + v171) | 0x1DE0D5E255628951) - ((v90 + v171) | 0xE21F2A1DAA9D76AELL) - 0x1DE0D5E255628952;
      v173 = v172 ^ 0xD0E9CAF5954D5700 ^ __ROR8__(v171, 61);
      *((_QWORD *)&v90 + 1) = v172;
      *(_QWORD *)&v90 = v172 ^ 0xD0E9CAF5954D5700;
      v174 = (((2 * ((v90 >> 8) + v173)) | 0x373D31C018B76C7ALL) - ((v90 >> 8) + v173) - 0x1B9E98E00C5BB63DLL) ^ 0x791424B28510515FLL;
      v175 = v174 ^ __ROR8__(v173, 61);
      *(_QWORD *)&v90 = __ROR8__(v174, 8);
      a1 = (v90 + v175 - ((2 * (v90 + v175)) & 0xAED1B05E025C741ALL) + 0x5768D82F012E3A0DLL) ^ 0xDA8442C3EA51D6CLL;
      a2 = __ROR8__(a1, 8);
      *(_QWORD *)&v90 = __ROR8__(v175, 61);
      v176 = (v98 << 48) | (v89 << 56) | (v113 << 40) | (v126 << 32) | ((unint64_t)v137 << 24) | ((unint64_t)v138 << 16) | ((unint64_t)v124 << 8) | ((((-2 - ((~(a2 + (a1 ^ (unint64_t)v90)) | 0xED304401E107ADA2) + ((a2 + (a1 ^ (unint64_t)v90)) | 0x12CFBBFE1EF8525DLL))) ^ 0xF63B9599CA5E6DD3) >> (8 * ((2 * LOBYTE(STACK[0x640]) + ~LOBYTE(STACK[0x640]) + LOBYTE(STACK[0xA20]) + 8) & 7u))) ^ *(_BYTE *)(((2 * STACK[0x640]) & 0xE5AFBFFFB57ADFFELL) + (STACK[0x640] ^ 0x72D7DFFFDABD6FFFLL) + STACK[0xA20] - 0x72D7DFFFDABD6FF8));
      STACK[0x888] = v176 - ((2 * v176) & 0x263EC2A8D33D6BB6) + 0x131F6154699EB5DBLL;
      break;
    case 0xFCE5u:
      STACK[0xA68] = STACK[0xA20] + STACK[0x640];
      break;
    default:
      LODWORD(STACK[0x920]) = v63;
      STACK[0x908] = STACK[0x810];
      STACK[0x8B8] = *(_QWORD *)(v66 + 8 * (v65 - 362));
      return ((uint64_t (*)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66
                                                                                     + 8
                                                                                     * ((123
                                                                                       * (STACK[0x210] == 0x62368F025D92A9A2)) ^ (((v65 + 149) | 0x60) + 734)))
                                                                         - ((((v65 + 149) | 0x60) + 774235343) & 0xD1DA1DDB ^ 0x50FLL)))(a1, a2, 0x373C0AAD4CE136CBLL);
  }
  v177 = LODWORD(STACK[0x21C]) | 0x2B8;
  STACK[0x878] = STACK[0xAD0];
  v179 = LODWORD(STACK[0xAC4]) != -1129976585 || LOWORD(STACK[0xACA]) != (unsigned __int16)(v177 - 1495);
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v66 + 8 * ((1247 * v179) ^ (v65 + 586))))(a1, a2, 0x373C0AAD4CE136CBLL);
}

uint64_t sub_1CF3512A4(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  __int16 v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, _QWORD);

  v65 = *(_QWORD *)(v63 + 8 * (v64 - 146));
  LOWORD(STACK[0xACA]) = v61;
  v66 = (uint64_t (*)(uint64_t, _QWORD))(((v64 + 528) ^ 0xFFFFFFFFFFFFFC83) + v65);
  v1 = (unsigned __int8 *)(v60 + STACK[0x6E0] - 0x1799DE6785F18745);
  v2 = __ROR8__(v1, 8);
  v3 = ((2 * ((v2 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0x9077E0949EF5BAF6)
     - ((v2 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x550C087CC469144ELL)
     - 0x483BF04A4F7ADD7BLL;
  v4 = v3 ^ 0xF1B0F2EF1EFB9BD7;
  v3 ^= 0xA62F4EF6C24CC642;
  v5 = __ROR8__(v4, 8);
  v6 = (v62 - ((~(v5 + v3) | 0x1577FAC35B609246) + ((v5 + v3) | 0xEA88053CA49F6DB9))) ^ 0x45A32A2267DDE331;
  v7 = v6 ^ __ROR8__(v3, 61);
  *((_QWORD *)&v9 + 1) = __ROR8__(v6, 8) + v7;
  *(_QWORD *)&v9 = *((_QWORD *)&v9 + 1) ^ 0xE5D7DAAEED85A300;
  v8 = v9 >> 8;
  *(_QWORD *)&v9 = __ROR8__(v7, 61);
  v10 = (v8 + (*((_QWORD *)&v9 + 1) ^ 0xE5D7DAAEED85A300 ^ v9)) ^ 0x8E85997BF8A3092DLL;
  v11 = v10 ^ __ROR8__(*((_QWORD *)&v9 + 1) ^ 0xE5D7DAAEED85A300 ^ v9, 61);
  v12 = (__ROR8__(v10, 8) + v11) ^ 0xCD091F17C02FDE51;
  v13 = v12 ^ __ROR8__(v11, 61);
  v14 = (__ROR8__(v12, 8) + v13) ^ 0x628ABC52894BE762;
  v15 = v14 ^ __ROR8__(v13, 61);
  v16 = (__ROR8__(v14, 8) + v15) ^ 0x5AC09C033F8B2761;
  v17 = v16 ^ __ROR8__(v15, 61);
  *(_QWORD *)&v9 = __ROR8__(v16, 8);
  LODWORD(v17) = (((((_QWORD)v9
                                 + v17
                                 - ((2 * ((_QWORD)v9 + v17)) & 0xFF58B2E6A226F750)
                                 + 0x7FAC597351137BA8) ^ 0x64A788EB7A4ABBD9) >> (8 * (v1 & 7u))) ^ *v1) << 24;
  *(_QWORD *)&v9 = __ROR8__(v1 + 1, 8);
  v18 = ((2 * (v9 & 0xF8FFFFFFFFFFFFFFLL) + 0x55E7EF06772DD764) & 0x442912AD23D5CC78)
      - (v9 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x4D0880D9CD81D1EFLL;
  v19 = v18 ^ 0xE460740C3F945F6FLL;
  v18 ^= 0xB3FFC815E32302FALL;
  *(_QWORD *)&v9 = __ROR8__(v19, 8);
  v20 = __ROR8__((0x30D989346C5478B8- ((v9 + v18) ^ 0xF1A2B85CC66DE86 | 0x30D989346C5478B8)+ ((v9 + v18) ^ 0xF1A2B85CC66DE86 | 0xCF2676CB93AB8747)) ^ 0x90E88DAF637028B6, 8);
  v21 = (0x30D989346C5478B8
       - ((v9 + v18) ^ 0xF1A2B85CC66DE86 | 0x30D989346C5478B8)
       + ((v9 + v18) ^ 0xF1A2B85CC66DE86 | 0xCF2676CB93AB8747)) ^ 0x90E88DAF637028B6 ^ __ROR8__(v18, 61);
  v22 = (0x598D3E4F2B46E74DLL - ((v20 + v21) | 0x598D3E4F2B46E74DLL) + ((v20 + v21) | 0xA672C1B0D4B918B2)) ^ 0x43A51B1E393CBBB2;
  v23 = v22 ^ __ROR8__(v21, 61);
  v24 = (__ROR8__(v22, 8) + v23) ^ 0x8E85997BF8A3092DLL;
  v25 = v24 ^ __ROR8__(v23, 61);
  *(_QWORD *)&v9 = __ROR8__(v24, 8);
  v26 = (0xB69B3F5B468F8A56 - ((v9 + v25) | 0xB69B3F5B468F8A56) + ((v9 + v25) | 0x4964C0A4B97075A9)) ^ 0x846DDFB3795FABF8;
  v27 = v26 ^ __ROR8__(v25, 61);
  *(_QWORD *)&v9 = __ROR8__(v26, 8);
  v28 = (((2 * (v9 + v27)) & 0xA638E7B7477E3D7ALL) - (v9 + v27) - 0x531C73DBA3BF1EBELL) ^ 0xCE693076D50B0620;
  v29 = v28 ^ __ROR8__(v27, 61);
  *(_QWORD *)&v9 = __ROR8__(v28, 8);
  v30 = (-2 - ((~(v9 + v29) | 0xBFE1BEF766DF8CC9) + ((v9 + v29) | 0x401E410899207336))) ^ 0xE52122F45954ABA8;
  v31 = v30 ^ __ROR8__(v29, 61);
  *(_QWORD *)&v9 = __ROR8__(v30, 8);
  LODWORD(v16) = v17 | (((((((2 * ((_QWORD)v9 + v31)) & 0x1892AEAF4EEC022CLL)
                                           - ((_QWORD)v9
                                            + v31)
                                           - 0xC495757A7760117) ^ 0xE8BD793073D03E98) >> (8 * (((_BYTE)v1 + 1) & 7u))) ^ v1[1]) << 16);
  *(_QWORD *)&v9 = __ROR8__(v1 + 2, 8);
  v32 = (v9 & 0xF8FFFFFFFFFFFFFFLL)
      - ((2 * (v9 & 0xF8FFFFFFFFFFFFFFLL) + 0x15E7EF06772DD764) & 0x26E74F7F1F24F14ALL)
      + 0x3E679F42CB296457;
  v33 = v32 ^ 0x2AF8A51ADE133E09;
  v32 ^= 0x7D67190302A4639CuLL;
  *(_QWORD *)&v9 = __ROR8__(v33, 8);
  v34 = (0x16F6A45EDF0B58BBLL - ((v9 + v32) | 0x16F6A45EDF0B58BBLL) + ((v9 + v32) | 0xE9095BA120F4A744)) ^ 0xB9DD8B401C49D633;
  v35 = v34 ^ __ROR8__(v32, 61);
  *(_QWORD *)&v9 = __ROR8__(v34, 8);
  v36 = (-2 - ((~(v9 + v35) | 0xFE9C6D911D4C30A4) + ((v9 + v35) | 0x163926EE2B3CF5BLL))) ^ 0x1B4BB73FF0C993A4;
  v37 = v36 ^ __ROR8__(v35, 61);
  *(_QWORD *)&v9 = __ROR8__(v36, 8);
  v38 = (((2 * (v9 + v37)) & 0xA406050F9C73BDA8) - (v9 + v37) + 0x2DFCFD7831C6212BLL) ^ 0xA3796403C9652806;
  v39 = v38 ^ __ROR8__(v37, 61);
  *(_QWORD *)&v9 = __ROR8__(v38, 8);
  v40 = (((2 * (v9 + v39)) & 0xBFAA761F45D5431ALL) - (v9 + v39) - 0x5FD53B0FA2EAA18ELL) ^ 0x6D23DBE79D3A8023;
  v41 = v40 ^ __ROR8__(v39, 61);
  v42 = (__ROR8__(v40, 8) + v41) ^ 0x628ABC52894BE762;
  v43 = v42 ^ __ROR8__(v41, 61);
  *(_QWORD *)&v9 = __ROR8__(v42, 8);
  v44 = (-2 - ((~(v9 + v43) | 0x93BA3FB03D9D02EFLL) + ((v9 + v43) | 0x6C45C04FC262FD10))) ^ 0xC97AA3B30216258ELL;
  v45 = v44 ^ __ROR8__(v43, 61);
  *(_QWORD *)&v9 = __ROR8__(v44, 8);
  LODWORD(v45) = (((((2 * ((_QWORD)v9 + v45)) & 0x57A4333711C5D1CLL)
                                   - ((_QWORD)v9
                                    + v45)
                                   + 0x7D42DE664771D171) ^ 0x66490FFE6C281100) >> (8 * (((_BYTE)v1 + 2) & 7u))) ^ v1[2];
  v46 = v1[3];
  v1 += 3;
  *(_QWORD *)&v9 = __ROR8__(v1, 8);
  v47 = ((2 * ((v9 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0xAADD163E4CA4D5AELL)
      - ((v9 & 0xF8FFFFFFFFFFFFFFLL)
       - 0x550C087CC469144ELL)
      - 0x556E8B1F26526AD7;
  v48 = v47 ^ 0xECE589BA77D32C7BLL;
  v47 ^= 0xBB7A35A3AB6471EELL;
  *(_QWORD *)&v9 = __ROR8__(v48, 8);
  v49 = __ROR8__((((2 * (v9 + v47)) | 0xB5389D3D2E60E81ALL) - (v9 + v47) + 0x2563B16168CF8BF3) ^ 0x8A489E7FAB8D057ALL, 8);
  v50 = (((2 * (v9 + v47)) | 0xB5389D3D2E60E81ALL) - (v9 + v47) + 0x2563B16168CF8BF3) ^ 0x8A489E7FAB8D057ALL ^ __ROR8__(v47, 61);
  v51 = v49 + v50;
  v52 = (v49 + v50) ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v50, 61);
  *((_QWORD *)&v9 + 1) = v51;
  *(_QWORD *)&v9 = v51 ^ 0xE5D7DAAEED85A300;
  v53 = ((v9 >> 8) + v52) ^ 0x8E85997BF8A3092DLL;
  v54 = v53 ^ __ROR8__(v52, 61);
  v55 = (__ROR8__(v53, 8) + v54) ^ 0xCD091F17C02FDE51;
  v56 = v55 ^ __ROR8__(v54, 61);
  v57 = (__ROR8__(v55, 8) + v56) ^ 0x628ABC52894BE762;
  v58 = v57 ^ __ROR8__(v56, 61);
  *(_QWORD *)&v9 = __ROR8__(v57, 8);
  LODWORD(v1) = v16 | ((_DWORD)v45 << 8) | (((__ROR8__((-2- ((~(v9 + v58) | 0x890E405815C8236ELL)+ ((v9 + v58) | 0x76F1BFA7EA37DC91))) ^ 0xD3CEDC5B2A43040FLL, 8)+ ((-2- ((~((_QWORD)v9 + v58) | 0x890E405815C8236ELL)+ (((_QWORD)v9 + v58) | 0x76F1BFA7EA37DC91))) ^ 0xD3CEDC5B2A43040FLL ^ __ROR8__(v58, 61))) ^ 0x1B0BD1982B59C071) >> (8 * (v1 & 7u))) ^ v46;
  return v66(a1, (_DWORD)v1 - 1129976585 - ((2 * (_DWORD)v1) & 0x794BD9EEu));
}

uint64_t sub_1CF351324(uint64_t a1, int a2)
{
  uint64_t v2;
  unint64_t v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v3 = STACK[0xAE0] + (a2 ^ 0xBCA5ECF7) - 0x4860F286AD35ADBALL;
  v4 = v3 < 0x9F543324;
  v5 = v3 > STACK[0xAD8] + 2673095460u;
  if (STACK[0xAD8] > 0xFFFFFFFF60ABCCDBLL != v4)
    v5 = v4;
  return (*(uint64_t (**)(void))(v2 + 8 * ((43 * v5) ^ (LODWORD(STACK[0x78C]) + 1366))))();
}

uint64_t sub_1CF3513D8@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v16;
  uint64_t v17;

  v8 = v2 + 10;
  v9 = LOWORD(STACK[0xAB2]);
  if (v9 == 10427)
  {
LABEL_4:
    STACK[0x7D0] = v8;
    LODWORD(STACK[0x914]) = a1;
    v3 = 1393700934;
    goto LABEL_6;
  }
  if (v9 != 64741)
  {
    if (v9 != 15177)
      goto LABEL_6;
    goto LABEL_4;
  }
  v10 = v7[40];
  STACK[0x7D0] = v8;
  LODWORD(STACK[0x914]) = a1;
  v7[2] = v10 + a2 - 0x4860F2874C89E0DELL;
  v3 = -1393729084;
LABEL_6:
  if (v3 == 1393700935)
    return (*(uint64_t (**)(void))(v6
                                + 8
                                * (((*(_BYTE *)(v7[19] - 0x29E41201BECB392DLL) == 98) * (((v5 - 345) | 0x84) + 1891)) ^ (v5 + 137))))();
  if (v3 == v4)
  {
    v11 = v7[19];
    v12 = *(_DWORD *)(v11 - 0x29E41201BECB397ALL);
    if (v12 == 1710104186)
      JUMPOUT(0x1CF352990);
    v13 = 1393700945;
    v14 = v5;
    if (v12 == 1710104185)
    {
      if (*(_BYTE *)(v11 - 0x29E41201BECB392DLL) == 98)
        v13 = 1393700932;
      else
        v13 = 1393700945;
      v14 = v5;
    }
    v16 = (v14 - 1219076204) & 0x48A99FF7;
    LODWORD(STACK[0xAAC]) = v13;
    v17 = v7[19];
    v7[62] = v17;
    v7[36] = *(_QWORD *)(v6 + 8 * v16) + (v16 ^ 0xFFFFFFFFFFFFFF03);
    v7[60] = &STACK[0xA40];
    v7[8] = v17;
    return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                          + 8
                                          * (((v17 != 0x29E41201BECB398ELL)
                                            * ((19 * (v16 ^ 0xF5) + 448) ^ (((v16 ^ 0x1B5) + 6) | 0x23))) | v16 ^ 0x1B5))
                              - 4))();
  }
  else
  {
    LODWORD(STACK[0xAAC]) = v3;
    return (*(uint64_t (**)(void))(v6 + 8 * ((670 * (v3 == (((v5 ^ 0xE6) - 150) ^ (v4 - 145)))) ^ (v5 - 13))))();
  }
}

uint64_t sub_1CF35141C(uint64_t a1, int a2)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((a2 != LODWORD(STACK[0xB5C]))
                                          * (((LODWORD(STACK[0x78C]) + 790) | 0x204) ^ 0x7D8)) ^ (LODWORD(STACK[0x78C])
                                                                                                + 1385)))
                            - 8))();
}

uint64_t sub_1CF351480()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v0 - 0x23120F4208F8DDDLL);
  *(_QWORD *)(v3 + 32) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((2 * (v4 == 0x23120F4208F8DDDLL)) | (4 * (v4 == 0x23120F4208F8DDDLL))) ^ (v1 + 1383)))
                            - ((((v1 + 1444857490) & 0xA9E138BF) + 1488) ^ ((v1 - 231) | 0x601u))))();
}

void sub_1CF35149C(uint64_t a1, int a2)
{
  LODWORD(STACK[0x924]) = a2;
  JUMPOUT(0x1CF3514C0);
}

uint64_t sub_1CF351504@<X0>(int a1@<W8>)
{
  uint64_t v1;

  *(_DWORD *)(*(_QWORD *)(v1 + 384) - 0x186CD3930903FB5ELL) = (((a1 - 46480763) & 0x2C5396F) - 1129976948) ^ LODWORD(STACK[0x924]);
  return ((uint64_t (*)(void))STACK[0xA80])();
}

uint64_t sub_1CF351558(uint64_t a1, int a2)
{
  uint64_t v2;
  unint64_t v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v3 = STACK[0xAF0] + (a2 ^ 0xBCA5ECF7) - 0x555194FD339DC2E2;
  v4 = v3 < 0x82CB4D0F;
  v5 = v3 > STACK[0xAE8] + 2194361615u;
  if (STACK[0xAE8] > 0xFFFFFFFF7D34B2F0 != v4)
    v5 = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((163 * !v5) ^ (LODWORD(STACK[0x78C]) + 666))) - 8))();
}

uint64_t sub_1CF351610@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;

  v8 = v2 + 10;
  v9 = LOWORD(STACK[0xAB4]);
  if (v9 == 10427)
    goto LABEL_4;
  if (v9 == 64741)
  {
    v11 = *(_QWORD *)(v7 + 168);
    *(_QWORD *)(v7 + 416) = v8;
    LODWORD(STACK[0x9A8]) = a1;
    STACK[0x7E8] = v11 + a2 - 0x555194FDB6690FF1;
    v10 = v5;
    v3 = -1393729084;
    return (*(uint64_t (**)(void))(v6 + 8 * ((1792 * (v3 == v4 + v10 + 1152 - 1515)) ^ (v10 - 24))))();
  }
  v10 = v5;
  if (v9 == 15177)
  {
LABEL_4:
    *(_QWORD *)(v7 + 416) = v8;
    LODWORD(STACK[0x9A8]) = a1;
    v3 = 1393700934;
    v10 = v5;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((1792 * (v3 == v4 + v10 + 1152 - 1515)) ^ (v10 - 24))))();
}

uint64_t sub_1CF35165C(uint64_t a1, int a2)
{
  uint64_t v2;
  unint64_t v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v3 = STACK[0xB00] + (a2 ^ 0xBCA5ECF7) - 0x604C1CD8442CC219;
  v4 = v3 < 0x18308D7C;
  v5 = v3 > STACK[0xAF8] + 405835132;
  if (STACK[0xAF8] > 0xFFFFFFFFE7CF7283 != v4)
    v5 = v4;
  return (*(uint64_t (**)(void))(v2 + 8 * ((1910 * !v5) ^ (LODWORD(STACK[0x78C]) - 24))))();
}

uint64_t sub_1CF351710@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v17;
  uint64_t v18;

  v11 = v6 + 10;
  v12 = LOWORD(STACK[0xAC0]);
  if (v12 == 10427)
    goto LABEL_4;
  if (v12 == 64741)
  {
    v14 = v10[25];
    v10[74] = v11;
    v10[9] = v14 + a2 - 0x604C1CD85C5D4F95;
    v15 = *(_QWORD *)(v10[19] - 0x29E41201BECB398ELL);
    v10[47] = 0x23120F4208F8DDDLL;
    v10[14] = a6;
    return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                          + 8
                                          * ((680 * (((v8 + 52) ^ (v15 == a1)) & 1)) ^ (v8 + 849)))
                              - 8))();
  }
  v13 = v8;
  if (v12 == 15177)
  {
LABEL_4:
    v10[74] = v11;
    v7 = 1393700934;
    v13 = v8;
  }
  v17 = (v13 - 1219076204) & 0x48A99FF7;
  LODWORD(STACK[0xAAC]) = v7;
  v18 = v10[19];
  v10[62] = v18;
  v10[36] = *(_QWORD *)(v9 + 8 * v17) + (v17 ^ 0xFFFFFFFFFFFFFF03);
  v10[60] = &STACK[0xA40];
  v10[8] = v18;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * (((v18 != 0x29E41201BECB398ELL)
                                          * ((19 * (v17 ^ 0xF5) + 448) ^ (((v17 ^ 0x1B5) + 6) | 0x23))) | v17 ^ 0x1B5))
                            - 4))();
}

void sub_1CF351844(uint64_t a1, int a2)
{
  LODWORD(STACK[0x84C]) = a2;
  JUMPOUT(0x1CF35259CLL);
}

uint64_t sub_1CF352600@<X0>(uint64_t a1@<X2>, unint64_t a2@<X8>)
{
  int v2;
  __int16 v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  int v8;

  v7 = STACK[0xACC];
  STACK[0x820] = a2;
  LODWORD(STACK[0xB28]) = v4;
  LOWORD(STACK[0xB2E]) = v3;
  LODWORD(STACK[0x790]) = v7;
  LODWORD(STACK[0xB30]) = v7;
  v8 = STACK[0x84C];
  LODWORD(STACK[0x710]) = STACK[0x84C];
  LODWORD(STACK[0xB34]) = v8;
  v6[93] = v6[7];
  v6[63] = v6[67];
  return (*(uint64_t (**)(void))(v5 + 8 * ((1199 * (a2 != a1)) ^ v2)))();
}

uint64_t sub_1CF352660()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  LODWORD(STACK[0x730]) = v1;
  v3 = 2 * (v0 ^ 0x226);
  v4 = ((uint64_t (*)(uint64_t))STACK[0x318])(32);
  STACK[0x9F8] = v4 + 0x23120F4208F8DDDLL;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v4 != 0) * ((((v3 - 49) | 0x68) - 87) ^ 0x3A0)) ^ v3)))();
}

uint64_t sub_1CF3526DC(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = 0x23120F4208F8DDDLL;
  *(_QWORD *)(a1 + 8) = 0x23120F4208F8DDDLL;
  v5 = LODWORD(STACK[0x790]) ^ 0xBCA5ECF7;
  *(_QWORD *)(v3 + 752) = v5;
  LODWORD(v5) = ((8 * v1) ^ 0x59FE78A0) + ((2 * (v5 + 10)) & 0xFFDBA566) + ((v1 - 1191521) ^ (v5 + 10));
  *(_DWORD *)(a1 + 16) = v5;
  v6 = ((uint64_t (*)(_QWORD))STACK[0x318])((v5 - 1508655795));
  *(_QWORD *)(a1 + 24) = v6;
  return (*(uint64_t (**)(void))(v2 + 8 * (v1 | (32 * (v6 == 0)))))();
}

void sub_1CF35277C()
{
  LODWORD(STACK[0x7A0]) = STACK[0xB70];
  LODWORD(STACK[0x740]) = STACK[0xB74];
  JUMPOUT(0x1CF345E64);
}

void sub_1CF3527AC(uint64_t a1@<X8>)
{
  uint64_t v1;

  LODWORD(STACK[0x920]) = -1393729084;
  **(_QWORD **)(v1 + 528) = a1;
  JUMPOUT(0x1CF355D04);
}

uint64_t sub_1CF3528E8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((*(_DWORD *)(v0 - 0x29E41201BECB397ALL) == v1 + 1710103822)
                                     * (((v1 + 2071030931) & 0x848E9297) + 17)) ^ (v1 - 24))))();
}

void sub_1CF3529C4()
{
  uint64_t v0;
  _OWORD *v1;

  v1 = *(_OWORD **)(v0 + 568);
  *v1 = 0u;
  v1[1] = 0u;
  JUMPOUT(0x1CF352A28);
}

uint64_t sub_1CF352A50@<X0>(int a1@<W8>)
{
  int v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  _QWORD *v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  uint64_t v14;

  v10 = *v2;
  v11 = v1 ^ 0xFFFF9FFF;
  v12 = v1 << (v5 ^ 0x6A);
  v13 = 55633441 * ((v8 - 2076161836 - 2 * ((v8 - 232) & 0x844049BC)) ^ 0xBCC37203);
  v9[137] = v6;
  *(_DWORD *)(v8 - 188) = v13 + 144568323;
  *(_DWORD *)(v8 - 184) = v13 + a1 - 58;
  *(_DWORD *)(v8 - 232) = -55633441 * ((v8 - 2076161836 - 2 * ((v8 - 232) & 0x844049BC)) ^ 0xBCC37203)
                        + 782002633 * v10
                        + 910896906;
  *(_DWORD *)(v8 - 208) = v11 - v13 + v12 + 905377144;
  v9[139] = v3;
  v9[136] = v4;
  v14 = ((uint64_t (*)(uint64_t))((char *)*(&off_1E8C4D9A0 + (a1 ^ 0x233)) - 12))(v8 - 232);
  return v7(v14);
}

uint64_t sub_1CF352B38()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1CF352B44()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((8 * v2) ^ 0xDAE) * (v0 == v1)) ^ (v2 + 312))) - 12))();
}

uint64_t sub_1CF352B74@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((31 * (LODWORD(STACK[0x914]) == -1129976617)) ^ a1 ^ 0x8D0))
                            - ((((a1 ^ 0x8D0) - 800) | 0x11) ^ (11 * (a1 ^ 0xB79u)) ^ 0x116)))();
}

uint64_t sub_1CF352BE8()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = ((v0 + 7) | 0x241) ^ v1;
  v7 = ((v5 >> 8) - 0x550C087CC469144ELL + ((v5 << 56) & 0xF800000000000000)) & 0xF9FFFFFFFFFFFFFFLL;
  v8 = v7 ^ 0xBB8B02A5518146ACLL;
  v7 ^= 0xEC14BEBC8D361B39;
  v9 = (v6 - 281) ^ 0x50D4D0E13CBD701CLL ^ (__ROR8__(v8, 8) + v7);
  v10 = v9 ^ __ROR8__(v7, 61);
  v11 = __ROR8__(v9, 8);
  v12 = (v11 + v10 - (v3 & (2 * (v11 + v10))) + 0x4DBB15292BCA95CLL) ^ 0xE10C6BFC7F390A5CLL;
  v13 = v12 ^ __ROR8__(v10, 61);
  v14 = (__ROR8__(v12, 8) + v13) ^ 0x8E85997BF8A3092DLL;
  v15 = v14 ^ __ROR8__(v13, 61);
  v16 = __ROR8__(v14, 8);
  v17 = __ROR8__((((2 * (v16 + v15)) & 0xAFFCEF0D080451A8) - (v16 + v15) + 0x280188797BFDD72BLL) ^ 0xE508976EBBD2097ALL, 8);
  v18 = (((2 * (v16 + v15)) & 0xAFFCEF0D080451A8) - (v16 + v15) + 0x280188797BFDD72BLL) ^ 0xE508976EBBD2097ALL ^ __ROR8__(v15, 61);
  v19 = (-2 - ((~(v17 + v18) | 0x8C088CF9E492148DLL) + ((v17 + v18) | 0x73F773061B6DEB72))) ^ 0xEE8230AB6DD9F3EFLL;
  v20 = v19 ^ __ROR8__(v18, 61);
  v21 = (__ROR8__(v19, 8) + v20) ^ 0x5AC09C033F8B2761;
  LODWORD(v20) = ((((__ROR8__(v21, 8) + (v21 ^ __ROR8__(v20, 61))) ^ 0x1B0BD1982B59C071uLL) >> ((8 * v5) & 0x38)) ^ *(unsigned __int8 *)v5)
               - **(unsigned __int8 **)(v4 + 568);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((69
                                * ((v20 ^ 0xEF6EFEF3) + 2143010624 + ((2 * (_DWORD)v20) & 0xDEDDFDE6) == 1865072179)) ^ v6)))();
}

void sub_1CF352EF4()
{
  JUMPOUT(0x1CF352D6CLL);
}

uint64_t sub_1CF352F08(uint64_t a1, char a2)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;

  v5 = (v3 - 219) | 6;
  if (v2 == (v5 ^ 0x6F2ABEA5))
    v6 = a2 + 1;
  else
    v6 = a2;
  LOBYTE(STACK[0x907]) = v6;
  return (*(uint64_t (**)(void))(v4 + 8 * ((29 * (v2 == (v5 ^ 0x6F2ABEA5))) ^ (v3 + 126))))();
}

uint64_t sub_1CF352F64()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((55
                                          * (((*(_DWORD *)(*(_QWORD *)(v2 + 152) - 0x29E41201BECB3932) == 291866047) ^ (v0 + 52)) & 1)) ^ (v0 + 99)))
                            - 3 * (v0 ^ 0x11Au)
                            + 331))();
}

uint64_t sub_1CF352FDC(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * (((v2 == ((v3 - 24) ^ 0x6F2ABF60)) * ((v3 - 213) ^ 0xFF)) ^ (v3 + 50))))(a1, a2, 0x373C0AAD4CE136CBLL);
}

uint64_t sub_1CF353034()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((167 * (v1 == ((3 * (v0 ^ 0x2A)) ^ 0x67))) ^ v0)))();
}

void sub_1CF35307C(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 560) = ((a1 + 882) | 0x151u) + *(_QWORD *)(v1 + 8 * a1) - 1373;
  JUMPOUT(0x1CF3530C8);
}

uint64_t sub_1CF35315C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((21 * (v0 != v1)) ^ (v2 - 39))) - 12))();
}

void sub_1CF353188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int a64;
  uint64_t v64;
  uint64_t v65;

  *(_QWORD *)(v65 + 560) = (a63 & 0xDFA025F9) + *(_QWORD *)(v64 + 8 * a64) - 1373;
  JUMPOUT(0x1CF3531C8);
}

uint64_t sub_1CF3531E4()
{
  return ((uint64_t (*)(void))STACK[0x808])();
}

void sub_1CF3531EC()
{
  int v0;
  uint64_t v1;

  STACK[0x9C0] = ((v0 + 923692624) & 0xC8F1979D ^ 0xFFFFFFFFFFFFF97DLL) + *(_QWORD *)(v1 + 8 * v0);
  JUMPOUT(0x1CF353224);
}

void sub_1CF353294()
{
  JUMPOUT(0x1CF3532A8);
}

uint64_t sub_1CF353330()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)(v1 + 784) - 0x394C67193C9A7994) = v0;
  return (*(uint64_t (**)(void))(v1 + 368))();
}

uint64_t sub_1CF35335C@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t sub_1CF353368()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)(((STACK[0x208] ^ 0x4B9) * (v0 == v1)) ^ (v2 + 78))) - 8))();
}

uint64_t sub_1CF353394()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(STACK[0x8D8] - 0x23120F4208F8DC5);
  STACK[0xA58] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (int)((743 * (((v1 == 0) ^ STACK[0x208]) & 1)) ^ STACK[0x208]))
                            - 8))();
}

uint64_t sub_1CF3533FC()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v2 = STACK[0x208];
  v3 = STACK[0x208] ^ 0x16B;
  v4 = (STACK[0x208] ^ 0xA613BCF4) + v0;
  STACK[0xB48] = v4;
  v5 = STACK[0x8E0];
  STACK[0xB50] = STACK[0x8E0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((1739 * (0x6F654FD9E3543B12 - v5 + v4 > 9)) ^ v2))
                            - v3
                            + 202))();
}

void sub_1CF353474(int a1@<W8>)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = STACK[0xB20];
  STACK[0x7A0] = STACK[0xB18] + (((a1 ^ 0x3A9u) - 528) ^ 0x920503E9);
  STACK[0x790] = ((v1 - 0x1CAEFB3D54F94338) ^ 0x7FAEDE6E78DAEF99)
               - 0x6A08100258D88888
               + ((2 * (v1 - 0x1CAEFB3D54F94338)) & 0xFF5DBCDCF1B5DF32);
  v2 = STACK[0xB10] - 0x43A08B1300141362;
  STACK[0x740] = (v2 ^ 0xB5B7FE7DF9DBE7F7) + 0x5FEECFEE26267F1ALL + ((2 * v2) & 0x6B6FFCFBF3B7CFEELL);
  v3 = STACK[0xB00] - 0x604C1CD85C5D4F9BLL;
  STACK[0x730] = (v3 ^ 0xD7AFDF7E6F5A7F3FLL) + 0x3DF6EEEDB0A7E7D2 + ((2 * v3) & 0xAF5FBEFCDEB4FE7ELL);
  v4 = STACK[0xB50];
  STACK[0x710] = ((STACK[0xB50] - 0x6F654FD9E3543B0ELL) ^ 0x7DBFDEFEBECFE759)
               - 0x681910929ECD8048
               + ((2 * (STACK[0xB50] - 0x6F654FD9E3543B0ELL)) & 0xFB7FBDFD7D9FCEB2);
  v5 = STACK[0xAF0] - 0x555194FDB6690FF7;
  STACK[0x700] = (v5 ^ 0x17FFEF6C681B6FB3) - 0x2592100481908A2 + ((2 * v5) & 0x2FFFDED8D036DF66);
  v6 = STACK[0xAE0] - 0x4860F2874C89E0E4;
  STACK[0x6F0] = (v6 ^ 0x15AFFF7D309777B9) - 0x93111109510A8 + ((2 * v6) & 0x2B5FFEFA612EEF72);
  STACK[0x6E0] = ((v1 - 0x1CAEFB3D54F94336) ^ 0xFFFFDF77BFF5AFFDLL)
               + 0x1799FEEFC5FBD748
               + ((2 * (v1 - 0x1CAEFB3D54F94336)) & 0xFFFFBEEF7FEB5FFALL);
  STACK[0x6D0] = ((v2 + 2) ^ 0xB7F9FE6FA5FDA747) + 0x5F9FDFF7DFF3DFFELL + ((2 * (v2 + 2)) & 0x6FF3FCDF4BFB4E8ELL);
  STACK[0x6A0] = ((v3 + 2) ^ 0x57D9DF778DF9D7F5) - 0x40400110080850B0 + ((2 * (v3 + 2)) & 0xAFB3BEEF1BF3AFEALL);
  STACK[0x690] = ((v5 + 2) ^ 0x17DDDEF7AFFBF7C5) - 0x4400902A0A7080 + ((2 * (v5 + 2)) & 0x2FBBBDEF5FF7EF8ALL);
  STACK[0x680] = ((v4 - 0x6F654FD9E3543B0CLL) ^ 0x57DFDEFFF7F3D775)
               - 0x4046009872025030
               + ((2 * (v4 - 0x6F654FD9E3543B0CLL)) & 0xAFBFBDFFEFE7AEEALL);
  STACK[0x670] = ((v6 + 2) ^ 0xDFFBDF7FCDFBBF77) + 0x379DFEE7B7F5C7CELL + ((2 * (v6 + 2)) & 0xBFF7BEFF9BF77EEELL);
  STACK[0x640] = v1 - 0x1CAEFB3D54F94332;
  STACK[0x660] = ((v1 - 0x1CAEFB3D54F94332) ^ 0x3FFDDFF7A5FF8F7FLL)
               - 0x28640190200E083ALL
               + ((2 * (v1 - 0x1CAEFB3D54F94332)) & 0x7FFBBFEF4BFF1EFELL);
  STACK[0x650] = ((v4 - 0x6F654FD9E3543B08) ^ 0x179BDF67DFF3CFEDLL)
               - 0x201005A0248A8
               + ((2 * (v4 - 0x6F654FD9E3543B08)) & 0x2F37BECFBFE79FDALL);
  JUMPOUT(0x1CF350318);
}

void sub_1CF3534A0()
{
  JUMPOUT(0x1CF3534E0);
}

uint64_t sub_1CF353998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a70;
  int v70;
  int v71;
  int v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;

  if (v70 == 1393700935)
  {
    v75 = v74[19];
    LODWORD(STACK[0x81C]) = *(_DWORD *)(v75 - 0x29E41201BECB397ELL) - 1394714680;
  }
  else
  {
    if (v70 != v71)
    {
      LODWORD(STACK[0xAAC]) = v70;
      JUMPOUT(0x1CF355860);
    }
    v75 = v74[19];
    v72 = STACK[0x78C];
  }
  v76 = *(_QWORD *)(v75 - 0x29E41201BECB398ELL);
  v74[69] = 0x23120F4208F8DDDLL;
  v74[52] = 0x555194FDB6690FFBLL;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73
                                                                        + 8
                                                                        * (((4
                                                                           * (((v76 == 0x373C0AAD4CE136CBLL) ^ (a70 + 1)) & 1)) & 0xF7 | (8 * (((v76 == 0x373C0AAD4CE136CBLL) ^ (a70 + 1)) & 1))) ^ (v72 + 1003)))
                                                            - 4))(a1, a2, 0x373C0AAD4CE136CBLL);
}

uint64_t sub_1CF353AEC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v4 = a1 + 500;
  v5 = sub_1CF370D34();
  *v2 = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * (v4 | (16 * (v1 == 0x23120F4208F8DDDLL)) | ((v1 == 0x23120F4208F8DDDLL) << 6)))
                                          - ((v4 - 2044324612) & 0x79D9E6EE)
                                          - ((v4 + 578763738) & 0xDD80BF6F ^ 0xFFFFFFFFFFFFFC97)))(v5);
}

uint64_t sub_1CF353B88()
{
  uint64_t v0;

  v0 = sub_1CF370D34();
  return ((uint64_t (*)(uint64_t))STACK[0x840])(v0);
}

uint64_t sub_1CF353BBC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((215 * (v0 == v1 + ((v2 - 293) | 0x510) - 1366)) ^ (v2 + 666)))
                            - 8))();
}

uint64_t sub_1CF353BF8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 552) - 0x23120F4208F8DC5);
  *(_QWORD *)(v2 + 168) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v3 != 0) * ((a1 - 1003) ^ 0x366)) ^ a1)) - 4))();
}

uint64_t sub_1CF353C58@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v5 = (v1 - 1508655795);
  v4[83] = v5;
  v6 = v4[52];
  v4[84] = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((unint64_t)(v5 + 0x555194FDB6690FFBLL - v6) > 9)
                                          * ((a1 - 1025918583) & 0x3D2641E7 ^ 0x3DE)) ^ a1))
                            - (v2 ^ 0x16F)))();
}

void sub_1CF353CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  _QWORD *v7;
  int v8;

  v8 = v6 + 692;
  v0 = v7[90];
  STACK[0x7A0] = v7[89] + ((v8 - 528) ^ 0x920503E9);
  STACK[0x790] = ((v0 - 0x1CAEFB3D54F94338) ^ 0x7FAEDE6E78DAEF99)
               - 0x6A08100258D88888
               + ((2 * (v0 - 0x1CAEFB3D54F94338)) & 0xFF5DBCDCF1B5DF32);
  v1 = v7[88] - 0x43A08B1300141362;
  STACK[0x740] = (v1 ^ 0xB5B7FE7DF9DBE7F7) + 0x5FEECFEE26267F1ALL + ((2 * v1) & 0x6B6FFCFBF3B7CFEELL);
  v2 = v7[86] - 0x604C1CD85C5D4F9BLL;
  STACK[0x730] = (v2 ^ 0xD7AFDF7E6F5A7F3FLL) + 0x3DF6EEEDB0A7E7D2 + ((2 * v2) & 0xAF5FBEFCDEB4FE7ELL);
  v3 = v7[96];
  STACK[0x710] = ((v3 - 0x6F654FD9E3543B0ELL) ^ 0x7DBFDEFEBECFE759)
               - 0x681910929ECD8048
               + ((2 * (v3 - 0x6F654FD9E3543B0ELL)) & 0xFB7FBDFD7D9FCEB2);
  v4 = v7[84] - 0x555194FDB6690FF7;
  STACK[0x700] = (v4 ^ 0x17FFEF6C681B6FB3) - 0x2592100481908A2 + ((2 * v4) & 0x2FFFDED8D036DF66);
  v5 = v7[82] - 0x4860F2874C89E0E4;
  STACK[0x6F0] = (v5 ^ 0x15AFFF7D309777B9) - 0x93111109510A8 + ((2 * v5) & 0x2B5FFEFA612EEF72);
  STACK[0x6E0] = ((v0 - 0x1CAEFB3D54F94336) ^ 0xFFFFDF77BFF5AFFDLL)
               + 0x1799FEEFC5FBD748
               + ((2 * (v0 - 0x1CAEFB3D54F94336)) & 0xFFFFBEEF7FEB5FFALL);
  STACK[0x6D0] = ((v1 + 2) ^ 0xB7F9FE6FA5FDA747) + 0x5F9FDFF7DFF3DFFELL + ((2 * (v1 + 2)) & 0x6FF3FCDF4BFB4E8ELL);
  STACK[0x6A0] = ((v2 + 2) ^ 0x57D9DF778DF9D7F5) - 0x40400110080850B0 + ((2 * (v2 + 2)) & 0xAFB3BEEF1BF3AFEALL);
  STACK[0x690] = ((v4 + 2) ^ 0x17DDDEF7AFFBF7C5) - 0x4400902A0A7080 + ((2 * (v4 + 2)) & 0x2FBBBDEF5FF7EF8ALL);
  STACK[0x680] = ((v3 - 0x6F654FD9E3543B0CLL) ^ 0x57DFDEFFF7F3D775)
               - 0x4046009872025030
               + ((2 * (v3 - 0x6F654FD9E3543B0CLL)) & 0xAFBFBDFFEFE7AEEALL);
  STACK[0x670] = ((v5 + 2) ^ 0xDFFBDF7FCDFBBF77) + 0x379DFEE7B7F5C7CELL + ((2 * (v5 + 2)) & 0xBFF7BEFF9BF77EEELL);
  STACK[0x640] = v0 - 0x1CAEFB3D54F94332;
  STACK[0x660] = ((v0 - 0x1CAEFB3D54F94332) ^ 0x3FFDDFF7A5FF8F7FLL)
               - 0x28640190200E083ALL
               + ((2 * (v0 - 0x1CAEFB3D54F94332)) & 0x7FFBBFEF4BFF1EFELL);
  STACK[0x650] = ((v3 - 0x6F654FD9E3543B08) ^ 0x179BDF67DFF3CFEDLL)
               - 0x201005A0248A8
               + ((2 * (v3 - 0x6F654FD9E3543B08)) & 0x2F37BECFBFE79FDALL);
  JUMPOUT(0x1CF350318);
}

uint64_t sub_1CF353D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a73;
  int v73;
  int v74;
  int v75;
  uint64_t v76;

  return ((uint64_t (*)(void))(*(_QWORD *)(v76 + 8 * ((456 * (v73 == (a73 ^ (v74 - 301)))) ^ (v75 + 858))) - 4))();
}

uint64_t sub_1CF353D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a73;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v75 = *(_QWORD *)(*(_QWORD *)(v74 + 304) - 0x23120F4208F8DC5);
  *(_QWORD *)(v74 + 200) = v75;
  return (*(uint64_t (**)(void))(v73 + 8 * (int)(((v75 != 0) * (((a73 + 157323292) & 0xF69F6FFB) + 1111)) ^ a73)))();
}

uint64_t sub_1CF353DA4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;

  v67 = (a1 - 1508655795 + a65 + 24 - 363);
  v66[85] = v67;
  v68 = v66[74];
  v66[86] = v68;
  return (*(uint64_t (**)(void))(v65
                              + 8
                              * ((2029 * (v67 - v68 + 0x604C1CD85C5D4F9FLL > ((a65 + 627522976) & 0xDA98C16FuLL) - 90)) ^ a65)))();
}

void sub_1CF353E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  _QWORD *v7;
  unsigned int v8;

  v8 = v6 & 0xDA98C16F ^ 0x318;
  v0 = v7[90];
  STACK[0x7A0] = v7[89] + ((v8 - 528) ^ 0x920503E9);
  STACK[0x790] = ((v0 - 0x1CAEFB3D54F94338) ^ 0x7FAEDE6E78DAEF99)
               - 0x6A08100258D88888
               + ((2 * (v0 - 0x1CAEFB3D54F94338)) & 0xFF5DBCDCF1B5DF32);
  v1 = v7[88] - 0x43A08B1300141362;
  STACK[0x740] = (v1 ^ 0xB5B7FE7DF9DBE7F7) + 0x5FEECFEE26267F1ALL + ((2 * v1) & 0x6B6FFCFBF3B7CFEELL);
  v2 = v7[86] - 0x604C1CD85C5D4F9BLL;
  STACK[0x730] = (v2 ^ 0xD7AFDF7E6F5A7F3FLL) + 0x3DF6EEEDB0A7E7D2 + ((2 * v2) & 0xAF5FBEFCDEB4FE7ELL);
  v3 = v7[96];
  STACK[0x710] = ((v3 - 0x6F654FD9E3543B0ELL) ^ 0x7DBFDEFEBECFE759)
               - 0x681910929ECD8048
               + ((2 * (v3 - 0x6F654FD9E3543B0ELL)) & 0xFB7FBDFD7D9FCEB2);
  v4 = v7[84] - 0x555194FDB6690FF7;
  STACK[0x700] = (v4 ^ 0x17FFEF6C681B6FB3) - 0x2592100481908A2 + ((2 * v4) & 0x2FFFDED8D036DF66);
  v5 = v7[82] - 0x4860F2874C89E0E4;
  STACK[0x6F0] = (v5 ^ 0x15AFFF7D309777B9) - 0x93111109510A8 + ((2 * v5) & 0x2B5FFEFA612EEF72);
  STACK[0x6E0] = ((v0 - 0x1CAEFB3D54F94336) ^ 0xFFFFDF77BFF5AFFDLL)
               + 0x1799FEEFC5FBD748
               + ((2 * (v0 - 0x1CAEFB3D54F94336)) & 0xFFFFBEEF7FEB5FFALL);
  STACK[0x6D0] = ((v1 + 2) ^ 0xB7F9FE6FA5FDA747) + 0x5F9FDFF7DFF3DFFELL + ((2 * (v1 + 2)) & 0x6FF3FCDF4BFB4E8ELL);
  STACK[0x6A0] = ((v2 + 2) ^ 0x57D9DF778DF9D7F5) - 0x40400110080850B0 + ((2 * (v2 + 2)) & 0xAFB3BEEF1BF3AFEALL);
  STACK[0x690] = ((v4 + 2) ^ 0x17DDDEF7AFFBF7C5) - 0x4400902A0A7080 + ((2 * (v4 + 2)) & 0x2FBBBDEF5FF7EF8ALL);
  STACK[0x680] = ((v3 - 0x6F654FD9E3543B0CLL) ^ 0x57DFDEFFF7F3D775)
               - 0x4046009872025030
               + ((2 * (v3 - 0x6F654FD9E3543B0CLL)) & 0xAFBFBDFFEFE7AEEALL);
  STACK[0x670] = ((v5 + 2) ^ 0xDFFBDF7FCDFBBF77) + 0x379DFEE7B7F5C7CELL + ((2 * (v5 + 2)) & 0xBFF7BEFF9BF77EEELL);
  STACK[0x640] = v0 - 0x1CAEFB3D54F94332;
  STACK[0x660] = ((v0 - 0x1CAEFB3D54F94332) ^ 0x3FFDDFF7A5FF8F7FLL)
               - 0x28640190200E083ALL
               + ((2 * (v0 - 0x1CAEFB3D54F94332)) & 0x7FFBBFEF4BFF1EFELL);
  STACK[0x650] = ((v3 - 0x6F654FD9E3543B08) ^ 0x179BDF67DFF3CFEDLL)
               - 0x201005A0248A8
               + ((2 * (v3 - 0x6F654FD9E3543B08)) & 0x2F37BECFBFE79FDALL);
  JUMPOUT(0x1CF350318);
}

uint64_t sub_1CF353E6C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((711 * (v0 == ((v2 + 858) ^ (v1 + 829)))) ^ (v2 - 24))))();
}

uint64_t sub_1CF353E9C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 376) - 0x23120F4208F8DC5);
  *(_QWORD *)(v2 + 264) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((((v3 == 0) ^ (3 * (v0 ^ 0xB4))) & 1)
                                               * ((v0 + 947061434) & 0xC78CF9EB ^ 0x314)) ^ v0))
                            - 4))();
}

uint64_t sub_1CF353F24@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = v1 - 1508655795 + ((a1 + 2061653900) & 0x851DA7EE) - 206;
  v3[87] = v4;
  v5 = v3[14];
  v3[88] = v5;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1282 * (v4 - v5 + (unint64_t)(a1 ^ 0x38u) + 0x43A08B13001411FBLL > 9)) ^ a1)))();
}

void sub_1CF353FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  _QWORD *v7;
  int v8;

  v8 = 297 * (v6 ^ 0xCD);
  v0 = v7[90];
  STACK[0x7A0] = v7[89] + ((v8 - 528) ^ 0x920503E9);
  STACK[0x790] = ((v0 - 0x1CAEFB3D54F94338) ^ 0x7FAEDE6E78DAEF99)
               - 0x6A08100258D88888
               + ((2 * (v0 - 0x1CAEFB3D54F94338)) & 0xFF5DBCDCF1B5DF32);
  v1 = v7[88] - 0x43A08B1300141362;
  STACK[0x740] = (v1 ^ 0xB5B7FE7DF9DBE7F7) + 0x5FEECFEE26267F1ALL + ((2 * v1) & 0x6B6FFCFBF3B7CFEELL);
  v2 = v7[86] - 0x604C1CD85C5D4F9BLL;
  STACK[0x730] = (v2 ^ 0xD7AFDF7E6F5A7F3FLL) + 0x3DF6EEEDB0A7E7D2 + ((2 * v2) & 0xAF5FBEFCDEB4FE7ELL);
  v3 = v7[96];
  STACK[0x710] = ((v3 - 0x6F654FD9E3543B0ELL) ^ 0x7DBFDEFEBECFE759)
               - 0x681910929ECD8048
               + ((2 * (v3 - 0x6F654FD9E3543B0ELL)) & 0xFB7FBDFD7D9FCEB2);
  v4 = v7[84] - 0x555194FDB6690FF7;
  STACK[0x700] = (v4 ^ 0x17FFEF6C681B6FB3) - 0x2592100481908A2 + ((2 * v4) & 0x2FFFDED8D036DF66);
  v5 = v7[82] - 0x4860F2874C89E0E4;
  STACK[0x6F0] = (v5 ^ 0x15AFFF7D309777B9) - 0x93111109510A8 + ((2 * v5) & 0x2B5FFEFA612EEF72);
  STACK[0x6E0] = ((v0 - 0x1CAEFB3D54F94336) ^ 0xFFFFDF77BFF5AFFDLL)
               + 0x1799FEEFC5FBD748
               + ((2 * (v0 - 0x1CAEFB3D54F94336)) & 0xFFFFBEEF7FEB5FFALL);
  STACK[0x6D0] = ((v1 + 2) ^ 0xB7F9FE6FA5FDA747) + 0x5F9FDFF7DFF3DFFELL + ((2 * (v1 + 2)) & 0x6FF3FCDF4BFB4E8ELL);
  STACK[0x6A0] = ((v2 + 2) ^ 0x57D9DF778DF9D7F5) - 0x40400110080850B0 + ((2 * (v2 + 2)) & 0xAFB3BEEF1BF3AFEALL);
  STACK[0x690] = ((v4 + 2) ^ 0x17DDDEF7AFFBF7C5) - 0x4400902A0A7080 + ((2 * (v4 + 2)) & 0x2FBBBDEF5FF7EF8ALL);
  STACK[0x680] = ((v3 - 0x6F654FD9E3543B0CLL) ^ 0x57DFDEFFF7F3D775)
               - 0x4046009872025030
               + ((2 * (v3 - 0x6F654FD9E3543B0CLL)) & 0xAFBFBDFFEFE7AEEALL);
  STACK[0x670] = ((v5 + 2) ^ 0xDFFBDF7FCDFBBF77) + 0x379DFEE7B7F5C7CELL + ((2 * (v5 + 2)) & 0xBFF7BEFF9BF77EEELL);
  STACK[0x640] = v0 - 0x1CAEFB3D54F94332;
  STACK[0x660] = ((v0 - 0x1CAEFB3D54F94332) ^ 0x3FFDDFF7A5FF8F7FLL)
               - 0x28640190200E083ALL
               + ((2 * (v0 - 0x1CAEFB3D54F94332)) & 0x7FFBBFEF4BFF1EFELL);
  STACK[0x650] = ((v3 - 0x6F654FD9E3543B08) ^ 0x179BDF67DFF3CFEDLL)
               - 0x201005A0248A8
               + ((2 * (v3 - 0x6F654FD9E3543B08)) & 0x2F37BECFBFE79FDALL);
  JUMPOUT(0x1CF350318);
}

uint64_t sub_1CF3540F4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v4 = a1 ^ 0x676;
  v5 = sub_1CF370D34();
  *v2 = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * (v4 ^ ((v1 == 0x23120F4208F8DDDLL) | (32
                                                                                            * (v1 == 0x23120F4208F8DDDLL)))))
                                          - ((140 * (v4 ^ 0x74Au) - 333) ^ v4 ^ 0x624u)))(v5);
}

void sub_1CF3541BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a70;
  uint64_t v70;
  uint64_t v71;

  *(_QWORD *)(v71 + 368) = *(_QWORD *)(v70 + 8 * a70) + (a70 + 1493) - 1677;
  JUMPOUT(0x1CF353238);
}

void sub_1CF354234(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;

  v3 = a1 ^ 0x3D7;
  sub_1CF370D34();
  LODWORD(STACK[0x920]) = v1;
  STACK[0x908] = STACK[0x810];
  STACK[0x8B8] = *(_QWORD *)(v2 + 8 * (v3 - 362));
  JUMPOUT(0x1CF355914);
}

uint64_t sub_1CF354800()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1CF354808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a70;
  uint64_t a71;
  int v71;
  int v72;
  int v73;
  uint64_t v74;

  return ((uint64_t (*)(void))(*(_QWORD *)(v74 + 8 * ((v73 + 710) ^ (121 * (v71 != v72)))) - a70 - a71 + 1024))();
}

uint64_t sub_1CF354838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  int v68;
  int v69;
  uint64_t v70;
  _QWORD *v71;
  int v72;

  v72 = (v68 - 1371575255) & 0x51C092BF;
  LODWORD(STACK[0x9E4]) = v69;
  v71[10] = v71[39];
  v71[13] = ((152 * (v72 ^ 0x31u)) ^ 0xFFFFFFFFFFFFFD98) + *(_QWORD *)(v70 + 8 * v72);
  return ((uint64_t (*)(void))(*(_QWORD *)(v70
                                        + 8 * ((123 * (a68 == 0x62368F025D92A9A2)) ^ (152 * (v72 ^ 0x31) + 734)))
                            - ((152 * (v72 ^ 0x31) + 774235343) & 0xD1DA1DDB ^ 0x50FLL)))();
}

void sub_1CF35485C()
{
  JUMPOUT(0x1CF354868);
}

uint64_t sub_1CF3548C8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * (((*(_QWORD *)(v2 + 160) != 0) * ((a1 + 320) ^ 0x778)) ^ (a1 + 320)))
                            - 12))();
}

uint64_t sub_1CF354904()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((354 * (0x6C7FF723B0D6051BLL - v0 + v1 - 10 < (unint64_t)(v3 - 373))) ^ v2))
                            - (v2 - 61)
                            + 1121))();
}

uint64_t sub_1CF354958@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  _BOOL4 v9;

  v5 = bswap32(*(_DWORD *)(((2 * (v1 - 0x6C7FF723B0D60515)) & 0xFF774CD3DFB77EF2)
                         + ((v1 - 0x6C7FF723B0D60515) ^ 0x7FBBA669EFDBBF79)
                         + a1
                         - 0x7FBBA669EFDBBF79));
  v6 = ((v5 - 1129976585 - ((2 * v5) & 0x794BD9EE)) ^ 0xBCA5ECF7) + v1 - 0x6C7FF722B9DF486FLL;
  v7 = v2 + 4143365282;
  v9 = v6 < 0xF6F6BCA2 || v6 > v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((199 * v9) ^ v3)) - 12))();
}

uint64_t sub_1CF354A34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  __int16 v12;
  unsigned __int16 v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unsigned __int8 *v17;
  unsigned __int8 *v19;
  unint64_t v20;

  v10 = (*(unsigned __int8 *)(a1 + (v6 ^ 0x938008DC4F29FB8ELL) + v1) << ((v5 + 74) ^ 0x73)) | (*(unsigned __int8 *)(a1 + v3) << 16) | (*(unsigned __int8 *)(a1 + v3 + 1) << 8) | *(unsigned __int8 *)(a1 + v3 + 2);
  v11 = v10 - 1129976585 - ((2 * v10) & 0x794BD9EE);
  v12 = *(unsigned __int8 *)(((2 * (v3 + 3)) & 0x6EBFD7FFBFDFFD9CLL)
                           + ((v3 + 3) ^ 0x375FEBFFDFEFFECELL)
                           + a1
                           - 0x375FEBFFDFEFFECELL);
  LOWORD(v10) = *(unsigned __int8 *)(((2 * (v3 + 3)) & 0x6EBFD7FFBFDFFD9CLL)
                                   + ((v3 + 3) ^ 0x375FEBFFDFEFFECELL)
                                   + a1
                                   - 0x375FEBFFDFEFFECDLL);
  v13 = (v10 | (v12 << 8)) - 2 * ((v10 | (v12 << 8)) & 0x111E ^ v10 & 8) + 4387;
  v14 = v3 + 9;
  v15 = v4 + 10;
  if (v13 != 16858)
  {
    if (v13 == 38304)
    {
      v16 = v7 + 118;
      v19 = (unsigned __int8 *)(((2 * v14) & 0xAB978F7DEDBEDDEELL)
                              + (v14 ^ 0x55CBC7BEF6DF6EF7)
                              + a1
                              - 0x55CBC7BEF6DF70D8);
      v20 = ((unint64_t)v19[v7 + 118] << 56) | ((unint64_t)v19[482] << 48) | ((unint64_t)v19[483] << 40) | ((unint64_t)v19[484] << 32) | ((unint64_t)v19[485] << 24) | ((unint64_t)v19[486] << 16) | ((unint64_t)v19[487] << 8) | v19[488];
      *(_QWORD *)(v9 + 432) = v20 + 0x10426474F9598483 - ((2 * v20) & 0x2084C8E9F2B30906);
    }
    else
    {
      if (v13 != 34414)
      {
        LODWORD(STACK[0x9E4]) = v2;
        JUMPOUT(0x1CF354BF4);
      }
      v16 = 13 * (v7 ^ 0x14E);
      v17 = (unsigned __int8 *)(((2 * v14) & 0x7FD7EE73BBEBFEF6)
                              + (v14 ^ 0x3FEBF739DDF5FF7BLL)
                              + a1
                              - 0x3FEBF739DDF5FF7BLL);
      LODWORD(v17) = (*v17 << (13 * (v7 ^ 0x4E) + 55)) | (v17[1] << 16) | (v17[2] << 8) | v17[3];
      LODWORD(STACK[0x7E0]) = (_DWORD)v17 - 1129976585 - ((2 * (_DWORD)v17) & 0x794BD9EE);
    }
    *(_QWORD *)(v9 + 328) = v15;
    STACK[0x840] = ((((v16 - 480) | 0x70) - 1924837573) & 0x72BAB25F)
                 + *(_QWORD *)(v8 + 8 * ((v16 - 480) | 0x70))
                 - 536;
    JUMPOUT(0x1CF345C80);
  }
  STACK[0x830] = a1 + v14;
  *(_QWORD *)(v9 + 328) = v15;
  return (*(uint64_t (**)(void))(v8 + 8 * ((651 * (v11 == ((v7 + 591) ^ 0xBCA5EF4D))) ^ (v7 + 118))))();
}

uint64_t sub_1CF354C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_QWORD *)(v4 + a2) = a3;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)(((*v3 == a1)
                                     * (((((v5 ^ 0x4EB) - 1053) | 0x420) ^ 0xFFFFFACF)
                                      + (((v5 ^ 0x4EB) + 233567583) & 0xF21407D3))) ^ v5 ^ 0x4EB)))();
}

uint64_t sub_1CF354F8C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = STACK[0x838];
  *(_QWORD *)(v2 + 464) = STACK[0x838];
  return (*(uint64_t (**)(void))(v1 + 8 * ((1708 * (((v3 == 0) ^ (a1 + 63)) & 1)) ^ a1)))();
}

uint64_t sub_1CF354FD8@<X0>(int a1@<W8>)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  STACK[0xB18] = v1;
  STACK[0xB20] = v2;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1754
                                * (0x1CAEFB3D54F9433CLL - v2 + v1 - 10 < ((33 * (a1 ^ 0x2B7) - 2072891316) & 0x7B8DCEFE ^ 0xFFFFFFFFFFFFFF40))) ^ a1)))();
}

void sub_1CF355054()
{
  JUMPOUT(0x1CF355080);
}

uint64_t sub_1CF355134()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  _BOOL4 v4;

  v4 = (*(_BYTE *)(*(_QWORD *)(v2 + 152) - 0x29E41201BECB3912) & 1) == 0 && LODWORD(STACK[0x81C]) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1010 * v4) ^ v0))
                            - (((v0 + 212) ^ 0xFFFFFFFFFFFFFE7BLL)
                             + ((v0 - 487) | 0x340u))))();
}

uint64_t sub_1CF355190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *(_QWORD *)(v4 - 0x29E41201BECB398ELL);
  *(_QWORD *)(v6 + 304) = 0x23120F4208F8DDDLL;
  *(_QWORD *)(v6 + 592) = 0x604C1CD85C5D4F9FLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v7 == a3) * ((v3 - 1364) ^ 0x119)) ^ v3))
                            - ((v3 + 128704500) & 0xF85419FD ^ 0xBDLL)))();
}

void sub_1CF355220(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 368) = (((a1 & 0xF85419FD) - 43377122) & 0x295E7B5 ^ 0xFFFFFFFFFFFFF97DLL)
                        + *(_QWORD *)(v1 + 8 * (a1 & 0xFFFFFFFFF85419FDLL));
  JUMPOUT(0x1CF353238);
}

uint64_t sub_1CF355274@<X0>(int a1@<W8>)
{
  char v1;
  int v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = (v1 & 1) == 0 || v2 == (((a1 - 782) | 0x80) ^ 0x4B6);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((8 * v5) | (32 * v5) | a1))
                            - ((a1 - 933758793) & 0x37A8049F ^ 0x497)))();
}

uint64_t sub_1CF3552C8()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;

  v3[66] = v0 - 0x29E41201BECB3986;
  v4 = STACK[0x7E8];
  LODWORD(STACK[0x7E4]) = STACK[0x9A8];
  STACK[0x838] = v4;
  v3[5] = 0x1CAEFB3D54F9433CLL;
  LODWORD(STACK[0x84C]) = -1129976585;
  v3[7] = 0x131F6154699EB5DBLL;
  v3[67] = 0;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x318])(16);
  STACK[0x810] = v5 + 0x373C0AAD4CE136CBLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v5 == 0) * (v1 ^ 0x4C5)) ^ v1))
                            - (((v1 - 1178) | 0x586) ^ 0x583)))();
}

uint64_t sub_1CF3553A0(_QWORD *a1)
{
  unint64_t v1;
  _BOOL4 v3;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  *a1 = 0x23120F4208F8DDDLL;
  a1[1] = 0x23120F4208F8DDDLL;
  v1 = ((v7 - 482824204) & 0x1CC74BEF ^ 0xE35104C31DAD9109) + v6;
  v3 = v1 <= 0x72A6D39D || v1 >= ((v7 + 1208201527) & 0xB7FC4BFD ^ 0x72A6D122) + (unint64_t)(v5 ^ 0xBCA5ECF7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((98 * v3) ^ (v7 - 469))) - 8))();
}

uint64_t sub_1CF3553C4()
{
  int v0;
  uint64_t v1;
  _BOOL4 v2;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x318])(16) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v2 * ((v0 - 246) ^ 0x3CA)) ^ v0)) - 3 * (v0 ^ 0x4CFu) + 355))();
}

uint64_t sub_1CF35542C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  *a1 = 0x23120F4208F8DDDLL;
  a1[1] = 0x23120F4208F8DDDLL;
  *(_QWORD *)(v3 - 0x29E41201BECB3986) = (char *)a1 + a3;
  LODWORD(STACK[0xAAC]) = v5;
  v8 = v7[19];
  v7[51] = v8;
  v7[1] = (((v4 ^ 0x24D) + 503056366) & 0xE203F7EF) + v7[1] - 395;
  LODWORD(STACK[0x934]) = STACK[0x82C];
  *(_QWORD *)STACK[0x2B0] = v8;
  LODWORD(STACK[0x8CC]) = -1393729084;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (int)((2013
                                               * ((((((((v4 ^ 0x4D) - 18) & 0xEF) + 52) & 0x7D) - 6) ^ (STACK[0x948] == 0)) & 1)) ^ ((((v4 ^ 0x24D) + 503056366) & 0xE203F7EF) + 836515124) & 0xCE23CB7D))
                            - 12))();
}

void sub_1CF355500(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 368) = *(_QWORD *)(v1 + 8 * a1) + (a1 + 1510) - 1673;
  JUMPOUT(0x1CF355268);
}

uint64_t sub_1CF355570@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  uint64_t v12;

  v11 = 228215629 * ((v9 - 1568108447 - 2 * ((v9 - 232) & 0xA2889149)) ^ 0x9A37E11C);
  *(_DWORD *)(v9 - 192) = v11 + (v5 ^ 0x77F38F7F) + ((2 * v5) & 0xEFE71EFE) - 1075841312;
  *(_DWORD *)(v9 - 216) = v11 + v6 + 14;
  *(_DWORD *)(v9 - 176) = v11
                        + ((3 * (v6 ^ 0x545) - 968747671) ^ v3)
                        + ((v6 ^ 0xF5CFEBFA) & (2 * v3) ^ 0x714BC946)
                        - 1074167810;
  v10[138] = a1;
  v10[139] = v1;
  v10[141] = a1;
  v10[136] = v4 + v2 - 0x43A08B130014135CLL;
  v12 = ((uint64_t (*)(uint64_t))*(&off_1E8C4D9A0 + (v6 ^ 0x48C)))(v9 - 232);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8 + 8 * ((87 * (*(_DWORD *)(v9 - 232) == v7)) ^ v6)) - 8))(v12);
}

uint64_t sub_1CF3556C0()
{
  int v0;

  return sub_1CF355274(15 * (v0 ^ 0x597u));
}

void sub_1CF3556EC(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  int v8;
  int v9;

  v7 = *(_DWORD *)(v3 - 0x29E41201BECB3916);
  v8 = *(_DWORD *)(v3 - 0x29E41201BECB392ALL);
  v9 = 1779465991 * (((v5 - 232) & 0xE511757 | ~((v5 - 232) | 0xE511757)) ^ 0xD76A6E66);
  *(_DWORD *)(v5 - 232) = ((v2 ^ 0xC05AA10C) - 73924608 + ((2 * v2) & 0xF9FE9BF6 ^ 0x794A99E6)) ^ v9;
  *(_DWORD *)(v5 - 228) = v9 + 1842385863;
  *(_DWORD *)(v5 - 208) = v4 - v9 + 1546667667;
  *(_DWORD *)(v5 - 204) = v7 - v9 - 2 * ((v7 + 20916812) & (v4 + 689339523) ^ v7 & 3) + 710257544;
  v6[137] = a1;
  v6[140] = v3 + 0x48D0B19A08A6EEA1;
  v6[139] = v1;
  v6[136] = a1;
  *(_DWORD *)(v5 - 180) = (v8 - 1044554143) ^ v9;
  nullsub_2(v5 - 232);
  JUMPOUT(0x1CF355844);
}

void sub_1CF3558E8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = *(_QWORD *)(v1 + 8 * v0) + (v0 + 570) - 616;
  JUMPOUT(0x1CF355914);
}

uint64_t sub_1CF355968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((78 * (*(_QWORD *)(v4 - 0x62368F025D92A9A2) == a3)) ^ v3))
                            - 3 * ((v3 - 907150094) & 0x3611FFF3 ^ 0x188u)
                            + 359))();
}

uint64_t sub_1CF3559C8@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((*(_QWORD *)(v1 - 0x373C0AAD4CE136CBLL) == 0x23120F4208F8DDDLL) ^ (-79 * (a1 ^ 0xF2))) & 1)
                                * ((a1 + 1141) ^ 0x599)) ^ a1)))();
}

uint64_t sub_1CF355A40()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_1CF370D34();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * (int)((((((v0 - 1570) | 0x501) ^ 0xFFFFFA3F)
                                                              + ((v0 - 1565) | 0x122))
                                                             * (v1 == 0x62368F025D92A9A2)) ^ v0))
                                          - 12))(v3);
}

uint64_t sub_1CF355ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  *v3 = a3;
  return (*(uint64_t (**)(void))(v4 + 104))();
}

void sub_1CF355AC8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = *(_QWORD *)(v1 + 8 * (v0 - 333)) + STACK[0x6B8] - 1346;
  JUMPOUT(0x1CF355918);
}

uint64_t sub_1CF355B00()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_1CF370D34();
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((1023
                                              * (((v2 == 0x23120F4208F8DDDLL) ^ (((v0 + 21) | 0x60) - 83)) & 1)) ^ v0)))(v3);
}

uint64_t sub_1CF355B60()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((*(_QWORD *)(v0 - 0x23120F4208F8DC5) != 0) * (71 * (v1 ^ 0x214) + 1548)) ^ v1))
                            - 12))();
}

uint64_t sub_1CF355BC0()
{
  _QWORD *v0;

  sub_1CF370D34();
  *v0 = 0;
  return sub_1CF355B00();
}

uint64_t sub_1CF355BD4()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1CF355BDC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1CF370D34();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * ((19 * (STACK[0xA30] != 0)) ^ (v0 + 1375))) - 4))(v2);
}

uint64_t sub_1CF355C2C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x29E41201BECB398ELL;
  return (*(uint64_t (**)(void))(v1 + 288))();
}

uint64_t sub_1CF355C4C()
{
  int v0;
  int v1;
  uint64_t v2;
  _QWORD *v3;
  int v4;

  v3[19] = 0x29E41201BECB398ELL;
  v4 = STACK[0xAAC];
  v3[51] = 0x29E41201BECB398ELL;
  v3[1] -= 32;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((87 * (v4 != v0)) ^ (v1 + 34))) - (v1 ^ 0xC8u) + 411))();
}

void sub_1CF355CB4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  STACK[0x810] = a3;
  JUMPOUT(0x1CF355CECLL);
}

void sub_1CF355D70()
{
  JUMPOUT(0x1CF355884);
}

uint64_t sub_1CF355D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 312) = a3;
  *(_QWORD *)(*(_QWORD *)(v3 + 216) - 0x62368F025D92A9A2) = 0x373C0AAD4CE136CBLL;
  return (*(uint64_t (**)(void))(v3 + 256))();
}

void sub_1CF355DA8()
{
  JUMPOUT(0x1CF355DBCLL);
}

uint64_t sub_1CF355E2C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  v3 = sub_1CF370D34();
  STACK[0x948] = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1
                                                      + 8
                                                      * (int)(((33
                                                              * ((349 * (v2 ^ 0x21E) + 108176856) & 0xF98D577B ^ 0x160)
                                                              - 354)
                                                             * (v0 == 0)) ^ (349 * (v2 ^ 0x21E))))
                                          - 12))(v3);
}

uint64_t sub_1CF355E90@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((a1 + 662) ^ (19 * (v1 == 0)))) - 12))();
}

uint64_t sub_1CF355EC8()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = ((uint64_t (*)(uint64_t))STACK[0x300])(v2);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * ((1747 * (((v1 ^ 0x19F ^ (v0 == v3)) & 1) == 0)) ^ (v1 - 119)))
                                          - 4))(v5);
}

void sub_1CF355F18()
{
  JUMPOUT(0x1CF3558A8);
}

uint64_t sub_1CF355F64()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((33 * ((v0 + 108176856) & 0xF98D577B ^ 0x160) - 354) * (v1 == 0)) ^ v0))
                            - 12))();
}

uint64_t sub_1CF355FAC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = ((uint64_t (*)(uint64_t))STACK[0x300])(v0);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * ((v1 + 662) ^ (19 * (v2 == 0)))) - 12))(v4);
}

uint64_t sub_1CF355FEC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1747 * (((v1 ^ 0x19F ^ (v0 == v2)) & 1) == 0)) ^ (v1 - 119)))
                            - 4))();
}

uint64_t sub_1CF356034()
{
  int v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = LODWORD(STACK[0x8CC]) == v1 + ((v0 + 1174) | 0x162) - 1891;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((4 * ((v0 ^ v3) & 1)) & 0xF7 | (8 * ((v0 ^ v3) & 1))) ^ (v0 + 1082)))
                            - 12))();
}

uint64_t sub_1CF356084@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((LODWORD(STACK[0x934]) == v1) ^ (a1 + 8)) & 1)
                                          * (((a1 - 1570) | 0x2A) ^ 0x16D)) ^ a1))
                            - 4))();
}

void sub_1CF3560C4()
{
  JUMPOUT(0x1CF33E994);
}

void sub_1CF356124()
{
  int v0;

  LODWORD(STACK[0x9E4]) = v0;
  JUMPOUT(0x1CF356134);
}

uint64_t sub_1CF35625C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v1 + 8 * ((1886 * (*(_QWORD *)(v2 + 232) != 0)) ^ (v0 - 458))))();
}

uint64_t sub_1CF356300()
{
  int v0;
  uint64_t result;
  uint64_t v2;
  uint64_t (*v3)(void);

  result = v3();
  *(_DWORD *)(v2 + 8) = v0;
  return result;
}

void sub_1CF35635C(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1CF3563FC(int a1, unint64_t a2, int a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t (*v12)(void);

  STACK[0x288] = (unint64_t)&STACK[0xF08CD1E14EEBEF1];
  STACK[0x2B8] = (unint64_t)&STACK[0x703BDE3807C31FF9];
  STACK[0x298] = (unint64_t)&STACK[0xF08CD1E14EEBF19];
  STACK[0x2F8] = (unint64_t)&STACK[0x703BDE3807C31FE9];
  STACK[0x2E8] = (unint64_t)&STACK[0x703BDE3807C32001];
  *(_DWORD *)(v5 - 192) = (248152243
                         * (((((v5 - 192) | 0x5123421A) ^ 0xFFFFFFFE) - (~(v5 - 192) | 0xAEDCBDE5)) ^ 0xB419F047)) ^ 0x56EDD32D;
  v8 = a1 - ((2 * a1) & 0xB0289B7A) + 1477725629;
  STACK[0x348] = v3;
  sub_1CF370E18((_DWORD *)(v5 - 192));
  STACK[0x388] = 0xBC62F68890669FALL;
  LODWORD(STACK[0x390]) = 63865149;
  STACK[0x398] = 0;
  STACK[0x3A0] = 0x181CF26A0;
  STACK[0x3A8] = 0x23F24650FLL;
  STACK[0x3B0] = 0xBC62F68890669FALL;
  LODWORD(STACK[0x3B8]) = v8;
  STACK[0x3C0] = 0;
  STACK[0x3C8] = 0x1368FCB64;
  STACK[0x3D0] = 0x23F24650FLL;
  STACK[0x3D8] = 0xBC62F68890669FALL;
  STACK[0x3E8] = a2;
  STACK[0x3F0] = 0x34F1AF3DDLL;
  LODWORD(STACK[0x3E0]) = 1477725629;
  LODWORD(STACK[0x3F8]) = (a3 ^ 0x3FE77F4B) - 12786240 + ((2 * a3) & 0x7FCEFE96);
  LODWORD(STACK[0x3FC]) = 2;
  STACK[0x2B0] = (unint64_t)&STACK[0x1BB05B3D3F9DBAA2];
  LODWORD(STACK[0x354]) = 0;
  v9 = *(uint64_t (**)(uint64_t))(v4 + 840);
  v10 = v9(128);
  v11 = STACK[0x348];
  STACK[0x340] = v10 + 0x29E41201BECB398ELL;
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((8 * (v10 != 0)) | 0x752u)) - 12);
  STACK[0x2C8] = (unint64_t)v9;
  LODWORD(STACK[0x2C4]) = 1393700944;
  return v12();
}

uint64_t sub_1CF356600()
{
  uint64_t (*v0)(uint64_t);
  int v1;
  uint64_t (*v2)(void);

  v2 = *(uint64_t (**)(void))(STACK[0x348] + 8 * (int)(((v0(112) == 0) * ((v1 + 1) ^ 0xC0CF73F9)) ^ 0x5E1));
  return v2();
}

uint64_t sub_1CF356668(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  BOOL v5;
  int v6;

  *(_WORD *)(a1 + 80) = 25175;
  *(_QWORD *)a1 = 0x65EE1E795321A838;
  memset((void *)(a1 + 8), 79, 64);
  *(_QWORD *)(a1 + 72) = 0x116585BF116585BFLL;
  *(_DWORD *)(a1 + 84) = 1095089643;
  *(_DWORD *)(a1 + 104) = 2126566836;
  memset((void *)(a1 + 88), 79, 16);
  *(_BYTE *)(a1 + 108) = 42;
  if (v1)
    v5 = a1 == 0;
  else
    v5 = 1;
  v6 = !v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v2 ^ (331 * v6)))
                            - ((v2 + 1079404400) & 0x5FF ^ ((v2 ^ (v3 + 901)) - 3234820614))))();
}

uint64_t sub_1CF35672C(uint64_t a1)
{
  unsigned int v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  *(_DWORD *)(v2 + 16) = *(_DWORD *)a1;
  *(_DWORD *)(v2 + 88) = *(_DWORD *)(a1 + 72);
  *(_DWORD *)(v2 + 92) = *(_DWORD *)(a1 + 76);
  *(_BYTE *)(v2 + 96) = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(v2 + 97) = *(_BYTE *)(a1 + 81);
  *(_DWORD *)(v2 + 120) = *(_DWORD *)(a1 + 104);
  *(_DWORD *)(v2 + 100) = *(_DWORD *)(a1 + 84);
  *(_BYTE *)(v2 + 124) = *(_BYTE *)(a1 + 108) & 1 | 0xAA;
  *(_BYTE *)(v2 + 55) = *((_BYTE *)*(&off_1E8C4D9A0 + (v1 & 0x21B)) + 11) ^ 0x61 ^ *((_BYTE *)*(&off_1E8C4D9A0
                                                                                              + (int)(v1 - 410))
                                                                                   + 13) ^ (*(_BYTE *)(a1 + 39)
                                                                                          + (*(_BYTE *)(a1 + 39) | 0x1B)
                                                                                          + ((v3 + v1 + 15) ^ *(_BYTE *)(a1 + 39) | 0x1B)
                                                                                          - 105) ^ *((_BYTE *)*(&off_1E8C4D9A0 + (int)(v1 - 422)) + 16);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * v1) - 8))();
}

void sub_1CF35683C()
{
  JUMPOUT(0x1CF3567ACLL);
}

uint64_t sub_1CF356844()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v0 == -1393729084) * (v1 ^ (v1 + 487))) ^ 0xE1)) - 4))();
}

uint64_t sub_1CF3568A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  *(_BYTE *)(v8 + 87) = *(_BYTE *)(v6 + 17) ^ *(_BYTE *)(v5 + 15) ^ *(_BYTE *)(v7 + 16) ^ 0x61 ^ ((~*(_BYTE *)(a1 + 71) | 0x1B)
                                                                                                + *(_BYTE *)(a1 + 71)
                                                                                                + (*(_BYTE *)(a1 + 71) | 0x1B)
                                                                                                + ((a5 + 13) & 0xDB ^ 0x4E));
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (v9 + a5 - 503 + 505)) - 12))();
}

void sub_1CF356950()
{
  JUMPOUT(0x1CF3568D8);
}

uint64_t sub_1CF356958(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 + 119) = *(_BYTE *)(a1 + 103);
  *(_BYTE *)(v2 + 118) = *(_BYTE *)(a1 + 102);
  *(_BYTE *)(v2 + 117) = *(_BYTE *)(a1 + 101);
  *(_BYTE *)(v2 + 116) = *(_BYTE *)(a1 + 100);
  *(_BYTE *)(v2 + 115) = *(_BYTE *)(a1 + 99);
  *(_BYTE *)(v2 + 114) = *(_BYTE *)(a1 + 98);
  *(_BYTE *)(v2 + 113) = *(_BYTE *)(a1 + 97);
  *(_BYTE *)(v2 + 112) = *(_BYTE *)(a1 + 96);
  *(_BYTE *)(v2 + 111) = *(_BYTE *)(a1 + 95);
  *(_BYTE *)(v2 + 110) = *(_BYTE *)(a1 + 94);
  *(_BYTE *)(v2 + 109) = *(_BYTE *)(a1 + 93);
  *(_BYTE *)(v2 + 108) = *(_BYTE *)(a1 + 92);
  *(_BYTE *)(v2 + 107) = *(_BYTE *)(a1 + 91);
  *(_BYTE *)(v2 + 106) = *(_BYTE *)(a1 + 90);
  *(_BYTE *)(v2 + 105) = *(_BYTE *)(a1 + 89);
  *(_BYTE *)(v2 + 104) = *(_BYTE *)(a1 + 88);
  *(_DWORD *)(v2 + 20) = *(_DWORD *)(a1 + 4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((*(_DWORD *)(a1 + 4) == ((v1 - 87032288) & 0xC5FF73FF) - 1524716928)
                                          * (v1 + 787)) ^ v1))
                            - 8))();
}

uint64_t sub_1CF356A28(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(3234821105
                            - (v3 + v2 - 29 - 444)
                            + *(_QWORD *)(v4 + 8 * ((101 * (*(_DWORD *)(a1 + 72) == v1)) ^ (v2 - 29)))))();
}

uint64_t sub_1CF356A64@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  *(_DWORD *)(v2 + 20) = a2 + 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((v4 + v3 + 82) ^ (1091 * (a1 != 0)))) - 12))();
}

uint64_t sub_1CF356A94()
{
  int v0;
  int v1;
  uint64_t (*v2)(void);

  sub_1CF370D34();
  v2 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x348]
                                     + 8
                                     * (((((uint64_t (*)(uint64_t))STACK[0x2C8])(16) != 0)
                                       * (((v1 + v0 + 875) | 0x20) ^ 0x257)) ^ (v1 + v0 + 435)))
                         - 8);
  return v2();
}

uint64_t sub_1CF356AE8(_QWORD *a1)
{
  uint64_t v1;
  int v2;
  _BOOL4 v3;

  *a1 = 0x23120F4208F8DDDLL;
  a1[1] = 0x23120F4208F8DDDLL;
  *(_QWORD *)(v1 + 8) = (char *)a1 + 0x373C0AAD4CE136CBLL;
  v3 = ((uint64_t (*)(uint64_t))STACK[0x2C8])(16) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x348] + 8 * ((v3 * (v2 ^ 0x487)) ^ v2))
                            - ((v2 - 1043334255) & 0xFEFF73FB ^ 0xC0CF73FDLL)))();
}

uint64_t sub_1CF356B80(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = 0x23120F4208F8DDDLL;
  a1[1] = 0x23120F4208F8DDDLL;
  *v9 = (char *)a1 + v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (v10 ^ 0x7C6 ^ (1467 * (&a9 != (uint64_t *)-904))))
                            - (v10 ^ 0x4D3 ^ ((v10 ^ 0x7C6u) - 789) ^ 0x22)))();
}

uint64_t sub_1CF356BDC()
{
  int v0;
  unint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = (2 * v0) ^ 0x260u;
  STACK[0x2D0] = *(_QWORD *)(v3 + 8 * v0) + v4 - 846;
  LODWORD(STACK[0x274]) = 366431948;
  STACK[0x218] = *v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((v2 + ((v4 - 402654031) & 0xD8CF73FD) + 1693) * (&STACK[0x388] == 0)) ^ v4))
                            - ((v4 - 458) ^ 0x188)))();
}

uint64_t sub_1CF356CE8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 != 0x183) * ((v0 - v1 - 159) ^ (v2 + 712))) ^ v0)))();
}

uint64_t sub_1CF356D38()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  LODWORD(STACK[0x2F0]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((318 * (v1 == v2)) ^ (v3 + v4 + 435))) - 8))();
}

uint64_t sub_1CF356D74@<X0>(int a1@<W8>)
{
  unint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  _BOOL4 v11;

  v5 = (a1 - 991956164) & 0xFBEF7FFD;
  STACK[0x340] = v1;
  LODWORD(STACK[0x320]) = 1372003554;
  v6 = STACK[0x288];
  v7 = v5 ^ (v3 - 5);
  v8 = v2 + v5 + 1598;
  v9 = *(_QWORD *)(v1 - 0x29E41201BECB3986);
  STACK[0x360] = 0x23120F4208F8DDDLL;
  STACK[0x328] = v6;
  v11 = v6 == 0xF08CD1E14EEBB9DLL || v9 == 0x373C0AAD4CE136CBLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v11 * (v7 ^ 0x30)) ^ v8)) - 8))();
}

uint64_t sub_1CF357184@<X0>(uint64_t a1@<X8>)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t (*v9)(void);

  STACK[0x330] = v2;
  v5 = STACK[0x348];
  v6 = 62 * (v1 ^ 6u);
  v7 = *(_QWORD *)(STACK[0x348] + 8 * v1) + v6 - 690;
  STACK[0x310] = (unint64_t)&STACK[0x360];
  LODWORD(STACK[0x2F4]) = -1129976585;
  v8 = STACK[0x2F0];
  v9 = *(uint64_t (**)(void))(v5
                           + 8
                           * (int)(((a1 == 0x373C0AAD4CE136CBLL) * ((v6 - 1056967343) & 0xFFCF7BFD ^ (v4 - 91))) ^ v6));
  STACK[0x338] = v3;
  LODWORD(STACK[0x2F0]) = v8;
  STACK[0x250] = v7;
  return v9();
}

uint64_t sub_1CF357218()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1CF357228()
{
  unint64_t v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  STACK[0x2A8] = v0;
  if (v1 == -1393729084)
  {
    v6 = STACK[0x380];
    v7 = *(_QWORD *)(STACK[0x380] - 0x23120F4208F8DD5);
    v8 = STACK[0x2A0];
    *(_QWORD *)(STACK[0x2A0] - 0x23120F4208F8DD5) = v7;
    *(_QWORD *)(v8 - 0x23120F4208F8DDDLL) = *(_QWORD *)(v6 - 0x23120F4208F8DDDLL);
    return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                          + 8
                                          * (int)(((((v3 ^ (v3 + 11)) ^ (v7 == 0x23120F4208F8DDDLL)) & 1)
                                                 * ((v3 - 1371905086) & 0x90F62B7E ^ 0x53B)) ^ (v2 + v3 + 601)))
                              - 12))();
  }
  else if (v1 == 1393700935)
  {
    return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                          + 8
                                          * (int)(((*(_QWORD *)(STACK[0x248] - 0x373C0AAD4CE136C3) != 0x23120F4208F8DDDLL)
                                                 * ((v3 - 1298155802) & 0x8C90D77F ^ 0x238)) ^ (v2 + v3 + 191)))
                              - 8))();
  }
  else
  {
    return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                          + 8
                                          * (((*(_QWORD *)(STACK[0x2A0] - 0x23120F4208F8DC5) != 0)
                                            * ((v2 - 1060144656) ^ 0x6A6)) ^ (v2 - 1060145215)))
                              - 4))();
  }
}

void sub_1CF357534(_QWORD *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0x2A0];
  *a1 = STACK[0x2A0];
  *(_QWORD *)(v1 - 0x373C0AAD4CE136CBLL) = v2;
  JUMPOUT(0x1CF357550);
}

uint64_t sub_1CF357560()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2034 * (((v0 - 62) ^ (v1 == v2)) & 1)) ^ v0))
                            - 8))();
}

uint64_t sub_1CF35758C()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((*v0 != 0x23120F4208F8DDDLL) * (v1 - 587)) ^ v1))
                            - ((v1 - 63) | 0x163u)
                            + 987))();
}

uint64_t sub_1CF3575D4@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  int v2;
  uint64_t v3;

  *(_QWORD *)(STACK[0x248] - 0x373C0AAD4CE136CBLL) = a1;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*a2 == 0x23120F4208F8DDDLL) * ((((v2 ^ 0x128) - 481) | 1) ^ 0x589)) ^ v2 ^ 0x128)))();
}

uint64_t sub_1CF357634(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;

  *(_QWORD *)(STACK[0x248] - 0x373C0AAD4CE136C3) = a2;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(_QWORD *)(STACK[0x380] - 0x23120F4208F8DC5) == 0)
                                * (((((v2 - 995) | 0x203) + 49) ^ 0x6B) - 552)) ^ ((v2 - 995) | 0x203))))();
}

uint64_t sub_1CF35769C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1636 * (((v1 == 0x23120F4208F8DDDLL) ^ v0) & 1)) ^ v0))
                            - 8))();
}

uint64_t sub_1CF3576E4()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  v0 = sub_1CF370D34();
  v1 = (uint64_t (*)(uint64_t))STACK[0x2E0];
  STACK[0x380] = 0x23120F4208F8DDDLL;
  STACK[0x2E0] = (unint64_t)v1;
  return v1(v0);
}

void sub_1CF35771C()
{
  int v0;

  LODWORD(STACK[0x2D8]) = v0;
  JUMPOUT(0x1CF357738);
}

uint64_t sub_1CF357804(uint64_t a1, int a2, uint64_t a3)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8
                                             * (((*(_QWORD *)(a3 + v5) != a1) * ((v3 - 959447340) & v4 ^ a2)) ^ v3))
                            - 8))();
}

uint64_t sub_1CF357844@<X0>(unint64_t a1@<X2>, unint64_t a2@<X5>, unint64_t a3@<X6>, int a4@<W8>)
{
  uint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;

  STACK[0x310] = a3;
  STACK[0x320] = a2;
  STACK[0x328] = a1;
  STACK[0x330] = v5;
  STACK[0x338] = v4 - 0x29E41201BECB398ELL;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((v4 != 0x29E41201BECB3986) * (v6 + ((a4 - 1043335322) & 0xFEFF7BFF) - 106)) ^ (a4 + 803))))();
}

uint64_t sub_1CF3578D4@<X0>(int a1@<W8>)
{
  char v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((((*v6 == v4) ^ (a1 + v1)) & 1) * (v5 + ((a1 + v2) & v3) + 1683)) ^ a1)))();
}

uint64_t sub_1CF35790C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((*(_QWORD *)(v0 - 0x373C0AAD4CE136CBLL) + v2 == 0x15F1A2AE3E9B26F8)
                                     * ((v1 & 0xBCF1E5FB ^ 0x775) + 809 * (v1 & 0xBCF1E5FB ^ 0x4C1) - 2103)) ^ v1 & 0xBCF1E5FB)))();
}

uint64_t sub_1CF35797C()
{
  uint64_t (*v0)(unint64_t);
  _QWORD *v1;

  sub_1CF370D34();
  *v1 = 0x373C0AAD4CE136CBLL;
  return v0(STACK[0x338]);
}

void sub_1CF3579E8()
{
  JUMPOUT(0x1CF3578A8);
}

uint64_t sub_1CF357A08()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v4 = sub_1CF370D34();
  return (*(uint64_t (**)(uint64_t))(STACK[0x348]
                                            + 8
                                            * ((((((v0 - 793700557) & 0x2F4EE7BF) + 973) ^ v0 ^ v3)
                                              * (v2 + v1 == 0x15F1A2AE3E9B26F8)) ^ v0)))(v4);
}

uint64_t sub_1CF357A68@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(_QWORD *)(a1 - 0x23120F4208F8DC5) == 0) * ((v2 - 399) ^ v1 ^ ((v2 - 50) | 0x42))) ^ v2)))();
}

uint64_t sub_1CF357AC8()
{
  _QWORD *v0;

  sub_1CF370D34();
  *v0 = 0;
  return sub_1CF357A08();
}

uint64_t sub_1CF357AEC()
{
  int v0;
  int v1;

  sub_1CF370D34();
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(STACK[0x348]
                                                              + 8
                                                              * ((v0 + v1 + 72) ^ (1879
                                                                                 * (STACK[0x328] != 0x703BDE3807C31C91))))
                                                  - 8))(0x29E41201BECB398ELL, LODWORD(STACK[0x2F4]));
}

uint64_t sub_1CF357B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  *v6 = 0x29E41201BECB398ELL;
  return ((uint64_t (*)(void))(a6 + v7))();
}

void sub_1CF357BA8()
{
  JUMPOUT(0x1CF3577D8);
}

uint64_t sub_1CF357BC4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v0 + v1 + 538) * (LODWORD(STACK[0x2D8]) == -1393729084)) ^ (v0 + v1 + 989)))
                            - 4))();
}

uint64_t sub_1CF357BF8@<X0>(char a1@<W8>)
{
  unsigned int v1;
  char v2;
  char v3;
  int v5;

  return (v5 + v1 - ((v5 << ((a1 - v2 + 35) ^ (v3 - 1))) & 0x59DAC388)) ^ v1;
}

uint64_t sub_1CF357C74()
{
  unint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  STACK[0x2A8] = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((((v4 ^ (v4 - 749)) - 266) * (v1 == v2)) ^ (v3 + v4 + 532))) - 4))();
}

uint64_t sub_1CF357CB0()
{
  int v0;

  STACK[0x308] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x348]
                                        + 8
                                        * ((300
                                          * (((*(_QWORD *)(STACK[0x360] - 0x23120F4208F8DC5) == 0) ^ v0) & 1)) ^ v0))
                            - 4))();
}

uint64_t sub_1CF357D00@<X0>(unint64_t a1@<X8>)
{
  unsigned int v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t (*v7)(void);

  v6 = (*(_DWORD *)(v3 - 0x23120F4208F8DCDLL) - 1508655795);
  STACK[0x268] = v6;
  v7 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x348]
                                     + 8
                                     * (((0x30BA82B20E28E46ALL - v4 + v6 - 10 < (unint64_t)(v2 ^ v1)
                                                                              - 3234821123u)
                                       * ((v5 + v2 - 757) ^ (v5 + 52))) ^ v2))
                         - 4);
  STACK[0x308] = a1;
  STACK[0x290] = v4;
  return v7();
}

uint64_t sub_1CF357D94@<X0>(unint64_t a1@<X8>)
{
  int v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;

  v4 = STACK[0x268];
  v5 = *(_QWORD *)(STACK[0x348] + 8 * (v3 + v1 - 181));
  STACK[0x290] = v2;
  STACK[0x308] = a1;
  STACK[0x268] = v4;
  STACK[0x230] = v4 + 587511036;
  STACK[0x220] = ((v2 - 0x30BA82B20E28E460) ^ 0x57BDFEE7BFFFFF75)
               - 0x402420803A0E7830
               + ((2 * (v2 - 0x30BA82B20E28E460)) & 0xAF7BFDCF7FFFFEEALL);
  return ((uint64_t (*)(void))(v5 - 4))();
}

void sub_1CF358B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7, unsigned __int8 *a8)
{
  _BYTE *v8;
  int v9;
  int v10;

  v10 = (*v8 ^ a7) | ((*a8 ^ v9) << 8);
  LODWORD(STACK[0x304]) = v10 - 2 * (v10 & 0x2C3F ^ (*v8 ^ a7) & 1) - 21442;
  JUMPOUT(0x1CF3583A4);
}

uint64_t sub_1CF358B98()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  _BOOL4 v4;

  v1 = (v0 ^ 0xBCA5ECF7) + STACK[0x290];
  STACK[0x280] = v1 + 10;
  v2 = v1 - 0x30BA82B1EB242F64;
  v4 = v2 >= 0x2304B4FC && v2 <= STACK[0x230];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x348] + 8 * ((221 * v4) ^ 0x257)) - 8))();
}

uint64_t sub_1CF358C30()
{
  uint64_t (*v0)(void);
  int v1;
  int v2;
  int v3;

  v3 = (unsigned __int16)LODWORD(STACK[0x304]);
  if (v3 == 15177)
  {
    LODWORD(STACK[0x304]) = 15177;
    JUMPOUT(0x1CF35839CLL);
  }
  if (v3 == 10427 || v3 == 64741)
    return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x348]
                                          + 8
                                          * ((v1 + v2 + 532) ^ (1920 * ((unsigned __int16)LODWORD(STACK[0x304]) == 15177))))
                              - ((v1 + v2 + 532) ^ 0x2F1)))();
  else
    return v0();
}

uint64_t sub_1CF358C80()
{
  int v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x348]
                                        + 8
                                        * ((484 * ((v0 ^ 0xBCA5ECF7) == LODWORD(STACK[0x320]) - 1529925284)) ^ 0x4E7))
                            - 4))();
}

void sub_1CF358CF8()
{
  JUMPOUT(0x1CF358D14);
}

void sub_1CF358DA0()
{
  unint64_t v0;

  STACK[0x2A8] = v0;
  JUMPOUT(0x1CF357DCCLL);
}

uint64_t sub_1CF358DEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(void);

  *(_QWORD *)STACK[0x310] = a1;
  return v1();
}

uint64_t sub_1CF358E00()
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x348]
                                        + 8 * ((1920 * ((unsigned __int16)LODWORD(STACK[0x304]) == 15177)) ^ 0x2F5))
                            - 4))();
}

void sub_1CF358E64(int a1@<W8>)
{
  int v1;

  *(_DWORD *)(STACK[0x328] - 0xF08CD1E14EEBB9DLL) = v1 ^ a1 ^ 0xBCA5EE02;
  LODWORD(STACK[0x304]) = 15177;
  JUMPOUT(0x1CF358EA4);
}

uint64_t sub_1CF358F1C()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(_DWORD *)(STACK[0x2B0] - 0x1BB05B3D3F9DB71ALL + 40 * (v1 - 1513230890) + 36)
                                 - LODWORD(STACK[0x274]) == v0 - 366432306)
                                * (v0 ^ 0x58D)) ^ v0)))();
}

uint64_t sub_1CF358F88()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;

  v5 = *(_DWORD *)(v1 + 40 * v0 + 28);
  switch(v5)
  {
    case 1:
      LODWORD(STACK[0x320]) = *(_DWORD *)(v1 + 40 * v0 + 24);
      JUMPOUT(0x1CF3590BCLL);
    case 3:
      return (*(uint64_t (**)(void))(v4
                                  + 8 * (((v2 + v3 + 13) * (*(_QWORD *)(v1 + 40 * v0 + 16) != 0)) ^ (v2 + v3 + 135))))();
    case 2:
      return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                            + 8 * ((v2 + v3 + 720) ^ (114 * (STACK[0x218] != 0x373C0AAD4CE136CBLL))))
                                - ((20 * (v3 ^ (v3 + 2))) ^ 0x20)))();
  }
  return ((uint64_t (*)(void))STACK[0x2D0])();
}

void sub_1CF359120()
{
  LODWORD(STACK[0x310]) = 2767;
  JUMPOUT(0x1CF35917CLL);
}

uint64_t sub_1CF3591C8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  int v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  STACK[0x200] = v1;
  LODWORD(STACK[0x2F0]) = v3;
  STACK[0x220] = v2;
  STACK[0x338] = v5;
  STACK[0x2E0] = v0;
  v7 = ((uint64_t (*)(uint64_t))STACK[0x2C8])(32);
  STACK[0x2A0] = v7 + 0x23120F4208F8DDDLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v7 != 0) * (v4 + 1124)) ^ v4)) - 4))();
}

uint64_t sub_1CF359230(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v5;

  *(_QWORD *)a1 = 0x23120F4208F8DDDLL;
  *(_QWORD *)(a1 + 8) = 0x23120F4208F8DDDLL;
  *(_DWORD *)(a1 + 16) = v3 + 449306034;
  v5 = ((uint64_t (*)(_QWORD))STACK[0x2C8])((v3 - 1059349761));
  *(_QWORD *)(a1 + 24) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v5 != 0) * ((v1 - 599) ^ 0x632)) ^ v1)) - 4))();
}

uint64_t sub_1CF3592AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v62;
  int v63;
  uint64_t v64;
  int v65;
  int v66;
  int v67;
  uint64_t (*v68)(unint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;

  v67 = LODWORD(STACK[0x320]) - ((2 * LODWORD(STACK[0x320]) + 1235116728) & 0x74FCEE56) + 1598924935;
  v68 = *(uint64_t (**)(unint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 8 * v63);
  LODWORD(STACK[0x250]) = v65 - ((2 * v65 + 28784106) & 0x74FCEE56) + 2069500448;
  LODWORD(STACK[0x230]) = v66 ^ 0xE26A3A96;
  v69 = *(_BYTE **)(v62 + 24);
  v70 = __ROR8__(v69, 8);
  v71 = (0x150C087CC469144DLL - (v70 & 0xF8FFFFFFFFFFFFFFLL)) & 0x19A889ECFF1A1ED8 | ((v70 & 0xF8FFFFFFFFFFFFFFLL)
                                                                                      - 0x550C087CC469144ELL) & 0xE057761300E5E127;
  v72 = __ROR8__(v71 ^ 0xA2238B49AE9B5874, 8);
  v71 ^= 0xF5BC3750722C05E1;
  v73 = (v72 + v71) ^ 0x50D4D0E13CBD7177;
  v74 = v73 ^ __ROR8__(v71, 61);
  v75 = __ROR8__(v73, 8) + v74;
  v76 = v75 ^ 0xE5D7DAAEED85A300 ^ __ROR8__(v74, 61);
  *((_QWORD *)&v77 + 1) = v75;
  *(_QWORD *)&v77 = v75 ^ 0xE5D7DAAEED85A300;
  v78 = ((v77 >> 8) + v76) ^ 0x8E85997BF8A3092DLL;
  v79 = v78 ^ __ROR8__(v76, 61);
  v80 = (__ROR8__(v78, 8) + v79) ^ 0xCD091F17C02FDE51;
  v81 = v80 ^ __ROR8__(v79, 61);
  v82 = (__ROR8__(v80, 8) + v81) ^ 0x628ABC52894BE762;
  v83 = v82 ^ __ROR8__(v81, 61);
  *(_QWORD *)&v77 = __ROR8__(v82, 8);
  v84 = (((2 * (v77 + v83)) & 0xFCA17D98F44813EALL) - (v77 + v83) - 0x7E50BECC7A2409F6) ^ 0xDB6FDD30BA50D16BLL;
  *v69 = (((__ROR8__(v84, 8) + (v84 ^ __ROR8__(v83, 61))) ^ 0x1B0BD1982B59C071) >> (8 * (v69 & 7u))) ^ HIBYTE(v67) ^ 0xBA;
  v85 = (__ROR8__(v69 + 1, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL;
  *(_QWORD *)&v77 = __ROR8__(v85 ^ 0xB98B02A5518146ACLL, 8);
  v85 ^= 0xEE14BEBC8D361B39;
  v86 = (v77 + v85) ^ 0x50D4D0E13CBD7177;
  v87 = v86 ^ __ROR8__(v85, 61);
  *(_QWORD *)&v77 = __ROR8__(v86, 8);
  v88 = (((2 * (v77 + v87)) & 0xA793A7F6AC829AE6) - (v77 + v87) - 0x53C9D3FB56414D74) ^ 0x49E1F6AA443B118CLL;
  v89 = v88 ^ __ROR8__(v87, 61);
  v90 = (__ROR8__(v88, 8) + v89) ^ 0x8E85997BF8A3092DLL;
  v91 = __ROR8__(v90, 8);
  v92 = v90 ^ __ROR8__(v89, 61);
  v93 = (((2 * (v91 + v92)) & 0xF0BAF55B447DEC8ELL) - (v91 + v92) + 0x7A285525DC109B8) ^ 0xCAAB9A459DEED7E9;
  v94 = v93 ^ __ROR8__(v92, 61);
  *(_QWORD *)&v77 = __ROR8__(v93, 8);
  v95 = (-2 - ((~(v77 + v94) | 0x1FF46385B66E09DELL) + ((v77 + v94) | 0xE00B9C7A4991F621))) ^ 0x7D7EDFD73F25EEBCLL;
  v96 = v95 ^ __ROR8__(v94, 61);
  *(_QWORD *)&v77 = __ROR8__(v95, 8);
  v97 = (0xA4E31C196FB07E65 - ((v77 + v96) | 0xA4E31C196FB07E65) + ((v77 + v96) | 0x5B1CE3E6904F819ALL)) ^ 0x1DC7FE5AFC4A6FBLL;
  v98 = v97 ^ __ROR8__(v96, 61);
  *(_QWORD *)&v77 = __ROR8__(v97, 8);
  v69[1] = (((-2 - ((~((_QWORD)v77 + v98) | 0x75B531B3FC4CDC6BLL) + (((_QWORD)v77 + v98) | 0x8A4ACE4C03B32394))) ^ 0x6EBEE02BD7151C1ALL) >> (8 * (((_BYTE)v69 + 1) & 7u))) ^ BYTE2(v67) ^ 0x7E;
  v99 = (__ROR8__(v69 + 2, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL;
  v100 = v99 ^ 0xB98B02A5518146ACLL;
  v99 ^= 0xEE14BEBC8D361B39;
  *(_QWORD *)&v77 = __ROR8__(v100, 8);
  v101 = (((2 * (v77 + v99)) & 0x9D263FB38571CE96) - (v77 + v99) + 0x316CE0263D4718B4) ^ 0x61B830C701FA69C3;
  v102 = v101 ^ __ROR8__(v99, 61);
  *((_QWORD *)&v77 + 1) = __ROR8__(v101, 8) + v102;
  *(_QWORD *)&v77 = *((_QWORD *)&v77 + 1) ^ 0xE5D7DAAEED85A300;
  v103 = v77 >> 8;
  *(_QWORD *)&v77 = __ROR8__(v102, 61);
  v104 = (0x8EEAB8D098054CA2
        - ((v103 + (*((_QWORD *)&v77 + 1) ^ 0xE5D7DAAEED85A300 ^ v77)) | 0x8EEAB8D098054CA2)
        + ((v103 + (*((_QWORD *)&v77 + 1) ^ 0xE5D7DAAEED85A300 ^ v77)) | 0x7115472F67FAB35DLL)) ^ 0xFF90DE549F59BA70;
  v105 = v104 ^ __ROR8__(*((_QWORD *)&v77 + 1) ^ 0xE5D7DAAEED85A300 ^ v77, 61);
  *(_QWORD *)&v77 = __ROR8__(v104, 8);
  v106 = __ROR8__((-2 - ((~(v77 + v105) | 0x978199C1D991797DLL) + ((v77 + v105) | 0x687E663E266E8682))) ^ 0x5A8886D619BEA72CLL, 8);
  v107 = (-2 - ((~(v77 + v105) | 0x978199C1D991797DLL) + ((v77 + v105) | 0x687E663E266E8682))) ^ 0x5A8886D619BEA72CLL ^ __ROR8__(v105, 61);
  v108 = (((2 * (v106 + v107)) & 0x9D3B31D97DA9F9B8) - (v106 + v107) - 0x4E9D98ECBED4FCDDLL) ^ 0xD3E8DB41C860E441;
  v109 = v108 ^ __ROR8__(v107, 61);
  v110 = (__ROR8__(v108, 8) + v109) ^ 0x5AC09C033F8B2761;
  *(_QWORD *)&v77 = __ROR8__(v69 + 3, 8);
  v69[2] = (((__ROR8__(v110, 8) + (v110 ^ __ROR8__(v109, 61))) ^ 0x1B0BD1982B59C071uLL) >> (8 * (((_BYTE)v69 + 2) & 7u))) ^ BYTE1(v67) ^ 0x77;
  v111 = ((2 * ((v77 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL)) | 0x20EB39D37CA90794)
       - ((v77 & 0xF8FFFFFFFFFFFFFFLL)
        - 0x550C087CC469144ELL)
       - 0x10759CE9BE5483CALL;
  v112 = v111 ^ 0xA9FE9E4CEFD5C566;
  v111 ^= 0xFE612255336298F3;
  *(_QWORD *)&v77 = __ROR8__(v112, 8);
  v113 = __ROR8__((-2 - ((~(v77 + v111) | 0x3D54A62DE74C24CLL) + ((v77 + v111) | 0xFC2AB59D218B3DB3))) ^ 0x53019A83E2C9B33BLL, 8);
  v114 = (-2 - ((~(v77 + v111) | 0x3D54A62DE74C24CLL) + ((v77 + v111) | 0xFC2AB59D218B3DB3))) ^ 0x53019A83E2C9B33BLL ^ __ROR8__(v111, 61);
  v115 = (-2 - ((~(v113 + v114) | 0x1730E72B835C4191) + ((v113 + v114) | 0xE8CF18D47CA3BE6ELL))) ^ 0xF2E73D856ED9E291;
  v116 = v115 ^ __ROR8__(v114, 61);
  *(_QWORD *)&v77 = __ROR8__(v115, 8);
  v117 = (v77 + v116 - ((2 * (v77 + v116)) & 0x9B516F8D43D1232ELL) - 0x325748395E176E69) ^ 0x432D2EBD594B98BALL;
  v118 = v117 ^ __ROR8__(v116, 61);
  v119 = (__ROR8__(v117, 8) + v118) ^ 0xCD091F17C02FDE51;
  v120 = v119 ^ __ROR8__(v118, 61);
  *(_QWORD *)&v77 = __ROR8__(v119, 8);
  v121 = __ROR8__((((2 * (v77 + v120)) | 0x70B9105F53F81A68) - (v77 + v120) + 0x47A377D05603F2CCLL) ^ 0xDAD6347D20B7EA56, 8);
  v122 = (((2 * (v77 + v120)) | 0x70B9105F53F81A68) - (v77 + v120) + 0x47A377D05603F2CCLL) ^ 0xDAD6347D20B7EA56 ^ __ROR8__(v120, 61);
  v123 = __ROR8__((v121 + v122) ^ 0x5AC09C033F8B2761, 8) + ((v121 + v122) ^ 0x5AC09C033F8B2761 ^ __ROR8__(v122, 61));
  v69[3] = v67 ^ 0x2B ^ (((v123 - ((2 * v123) & 0xCDE279B6265D5694) - 0x190EC324ECD154B6) ^ 0xFDFAED4338776B3BLL) >> (8 * (((_BYTE)v69 + 3) & 7u)));
  return v68(0xB98B02A5518146ACLL, 0xFDFAED4338776B3BLL, 3234821113, 0xEE14BEBC8D361B39, 43, 0xCDE279B6265D5694, 0xA4E31C196FB07E65, 0x8EEAB8D098054CA2, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

uint64_t sub_1CF359B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a71;
  int v71;
  int v72;
  int v73;
  int v74;
  unsigned int v76;

  v74 = (unsigned __int16)LODWORD(STACK[0x310]);
  switch(v74)
  {
    case 2767:
      return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x348] + 8 * ((v71 + v73 + 449) ^ (476 * (v72 == 1059349775))))
                                - ((20 * (v73 ^ (v73 + 1))) ^ 0x38)))();
    case 50227:
      v76 = v72 - ((v73 ^ (v73 - 789) ^ 0x9C147E65) & (a71 - 2118699542)) + 249944497;
      return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x348]
                                            + 8
                                            * ((1022
                                              * (((2 * v76) & 0xFFBEF7BA ^ 0x9C147538) + (v76 ^ 0x31D54561) - 1284854297 == 860498372)) ^ (v71 + v73 + 285)))
                                - 8))();
    case 63453:
      return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x348]
                                            + 8
                                            * ((53 * (v72 != ((v71 + v73 + 294) ^ 0x3F246714))) ^ (v71 + v73 + 438)))
                                - 4))();
    default:
      JUMPOUT(0x1CF35C35CLL);
  }
}

void sub_1CF359B70()
{
  JUMPOUT(0x1CF359424);
}

uint64_t sub_1CF35A050()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((v1 + v0 - 191 + ((v0 - 69208292) & 0xC4EF7BFB) + 227)
                                               * (STACK[0x218] == 0x373C0AAD4CE136CBLL)) ^ (v0 + 1008)))
                            - 8))();
}

void sub_1CF35A0B4()
{
  uint64_t v0;
  uint64_t v1;

  LODWORD(STACK[0x320]) = *(_DWORD *)(v1 + 40 * v0 + 24);
  LODWORD(STACK[0x310]) = 50227;
  JUMPOUT(0x1CF35A110);
}

void sub_1CF35A188(uint64_t a1@<X0>, uint64_t a2@<X3>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  _BYTE *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;

  v9 = *(_BYTE **)(v7 + 24);
  v10 = STACK[0x200] - ((2 * STACK[0x200] - 0x178C5ED1120CD3F4) & 0xF6B04CCF712B80C0) - 0x106E0900D070A99ALL;
  v11 = ((a3 - v8 - 294) ^ 0xF8000000C0CF73F9) & ((_QWORD)(v9 + 10) << 56) & 0xFF00000000000000 | ((unint64_t)(v9 + 10) >> 8);
  v12 = ((2 * v11 + 0x55E7EF06772DD764) & 0x90B16B7D1B79A6A2) - v11 + 0xCB352BE36AC40FCLL;
  v13 = v12 ^ 0xE2C48E423C26A02;
  v12 ^= 0x59B3F4FDFF753797uLL;
  v14 = __ROR8__(v13, 8);
  v15 = __ROR8__((((2 * (v14 + v12)) | 0x17FE78BC45B94652) - (v14 + v12) + 0x7400C3A1DD235CD7) ^ 0xDB2BECBF1E61D25ELL, 8);
  v16 = (((2 * (v14 + v12)) | 0x17FE78BC45B94652) - (v14 + v12) + 0x7400C3A1DD235CD7) ^ 0xDB2BECBF1E61D25ELL ^ __ROR8__(v12, 61);
  v17 = v15 + v16;
  v18 = (v15 + v16) ^ v3 ^ __ROR8__(v16, 61);
  *((_QWORD *)&v19 + 1) = v17;
  *(_QWORD *)&v19 = v17 ^ v3;
  v20 = (((2 * ((v19 >> 8) + v18)) | 0x706FEFFD119E6122) - ((v19 >> 8) + v18) - 0x3837F7FE88CF3091) ^ 0xB6B26E85706C39BCLL;
  v21 = v20 ^ __ROR8__(v18, 61);
  *(_QWORD *)&v19 = __ROR8__(v20, 8);
  v22 = (((v19 + v21) | 0xE7F54DC4843AFB99) - ((v19 + v21) | 0x180AB23B7BC50466) + 0x180AB23B7BC50466) ^ 0x2AFC52D3441525C8;
  v23 = v22 ^ __ROR8__(v21, 61);
  v24 = (__ROR8__(v22, 8) + v23) ^ 0x628ABC52894BE762;
  v25 = v24 ^ __ROR8__(v23, 61);
  v26 = (__ROR8__(v24, 8) + v25) ^ v6;
  v27 = v26 ^ __ROR8__(v25, 61);
  *(_QWORD *)&v19 = __ROR8__(v26, 8);
  v9[10] = (((((2 * ((_QWORD)v19 + v27)) & 0x5BA874AF5D38F1CELL) - ((_QWORD)v19 + v27) + 0x522BC5A851638718) ^ 0x492014307A3A4769uLL) >> (8 * (((_BYTE)v9 + 10) & 7u))) ^ HIBYTE(v10) ^ 0xFB;
  *(_QWORD *)&v19 = __ROR8__(v9 + 11, 8);
  v28 = (v19 & 0xF8FFFFFFFFFFFFFFLL)
      - ((2 * (v19 & 0xF8FFFFFFFFFFFFFFLL) + 0x15E7EF06772DD764) & 0x355AB94138DC40D0)
      + 0x45A15423D8050C1ALL;
  *(_QWORD *)&v19 = __ROR8__(v28 ^ 0x23265E05CDEF66C4, 8);
  v29 = (-2
       - ((~(v19 + (v28 ^ 0x74B9E21C11583B51)) | 0xC11DED4DEE4C92CCLL)
        + ((v19 + (v28 ^ 0x74B9E21C11583B51)) | 0x3EE212B211B36D33))) ^ 0x91C93DACD2F1E3BBLL;
  v30 = v29 ^ __ROR8__(v28 ^ 0x74B9E21C11583B51, 61);
  v31 = __ROR8__(v29, 8) + v30;
  v32 = v31 ^ v3 ^ __ROR8__(v30, 61);
  *((_QWORD *)&v19 + 1) = v31;
  *(_QWORD *)&v19 = v31 ^ v3;
  v33 = (-2 - ((~((v19 >> 8) + v32) | 0x77956CCF89056578) + (((v19 >> 8) + v32) | 0x886A933076FA9A87))) ^ 0xF910F5B471A66C55;
  v34 = v33 ^ __ROR8__(v32, 61);
  v35 = (__ROR8__(v33, 8) + v34) ^ v5;
  v36 = v35 ^ __ROR8__(v34, 61);
  *(_QWORD *)&v19 = __ROR8__(v35, 8);
  v37 = (v19 + v36 - ((2 * (v19 + v36)) & 0xA9BB3F9CB54546FALL) - 0x2B226031A55D5C83) ^ 0xB657239CD3E9441FLL;
  v38 = v37 ^ __ROR8__(v36, 61);
  *(_QWORD *)&v19 = __ROR8__(v37, 8);
  v39 = (((2 * ((v19 + v38) ^ 0x42D0978BF5AB05F8)) & 0x28E8EE91FE510F3CLL)
       - ((v19 + v38) ^ 0x42D0978BF5AB05F8)
       - 0x14747748FF28879FLL) ^ 0xF39B833FCAF75AF8;
  v40 = v39 ^ __ROR8__(v38, 61);
  *(_QWORD *)&v19 = __ROR8__(v39, 8);
  v9[11] = (((((2 * ((_QWORD)v19 + v40)) & 0x3AD738EFF2AEAA6ELL) - ((_QWORD)v19 + v40) - 0x1D6B9C77F9575538) ^ 0xF99FB2102DF16AB9) >> (8 * (((_BYTE)v9 + 11) & 7u))) ^ BYTE6(v10) ^ 0x58;
  v41 = (((unint64_t)(v9 + 12) >> 8) - 0x550C087CC469144ELL + ((unint64_t)(v9 + 12) >> 3 << 59)) & 0xF9FFFFFFFFFFFFFFLL;
  *(_QWORD *)&v19 = __ROR8__(v41 ^ 0xBB8B02A5518146ACLL, 8);
  v41 ^= 0xEC14BEBC8D361B39;
  v42 = __ROR8__((-2 - ((~(v19 + v41) | 0xD61356B240505818) + ((v19 + v41) | 0x29ECA94DBFAFA7E7))) ^ 0x86C786537CED296FLL, 8);
  v43 = (-2 - ((~(v19 + v41) | 0xD61356B240505818) + ((v19 + v41) | 0x29ECA94DBFAFA7E7))) ^ 0x86C786537CED296FLL ^ __ROR8__(v41, 61);
  v44 = (v42 + v43 - ((2 * (v42 + v43)) & 0xA73BF08C7129AAFALL) - 0x2C6207B9C76B2A83) ^ 0x364A22E8D511767DLL;
  v45 = v44 ^ __ROR8__(v43, 61);
  v46 = (__ROR8__(v44, 8) + v45) ^ v4;
  v47 = v46 ^ __ROR8__(v45, 61);
  v48 = (__ROR8__(v46, 8) + v47) ^ v5;
  v49 = v48 ^ __ROR8__(v47, 61);
  v50 = (__ROR8__(v48, 8) + v49) ^ 0x628ABC52894BE762;
  v51 = v50 ^ __ROR8__(v49, 61);
  v52 = (__ROR8__(v50, 8) + v51) ^ v6;
  v9[12] = (((__ROR8__(v52, 8) + (v52 ^ __ROR8__(v51, 61))) ^ 0x1B0BD1982B59C071uLL) >> (8 * (((_BYTE)v9 + 12) & 7u))) ^ BYTE5(v10) ^ 0x26;
  *(_QWORD *)&v19 = __ROR8__(v9 + 13, 8);
  v53 = ((0x150C087CC469144DLL - (v19 & 0xF8FFFFFFFFFFFFFFLL)) & 0x28C891185D033579)
      + (v19 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x550C087CC469144ELL
      - (((v19 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL) & 0x28C891185D033579);
  v54 = v53 ^ 0x914393BD0C8273D5;
  v53 ^= 0xC6DC2FA4D0352E40;
  v55 = (__ROR8__(v54, 8) + v53) ^ 0x50D4D0E13CBD7177;
  v56 = v55 ^ __ROR8__(v53, 61);
  v57 = __ROR8__(v55, 8) + v56;
  v58 = v57 ^ v3 ^ __ROR8__(v56, 61);
  *((_QWORD *)&v19 + 1) = v57;
  *(_QWORD *)&v19 = v57 ^ v3;
  v59 = ((v19 >> 8) + v58) ^ v4;
  v60 = v59 ^ __ROR8__(v58, 61);
  *(_QWORD *)&v19 = __ROR8__(v59, 8);
  v61 = (((v19 + v60) | 0x44E79080D479A43CLL) - ((v19 + v60) | 0xBB186F7F2B865BC3) - 0x44E79080D479A43DLL) ^ 0x89EE8F9714567A6DLL;
  v62 = v61 ^ __ROR8__(v60, 61);
  *(_QWORD *)&v19 = __ROR8__(v61, 8);
  v63 = __ROR8__((v19 + v62 - ((2 * (v19 + v62)) & 0x52EBE49C49841E16) - 0x568A0DB1DB3DF0F5) ^ 0xCBFF4E1CAD89E869, 8);
  v64 = (v19 + v62 - ((2 * (v19 + v62)) & 0x52EBE49C49841E16) - 0x568A0DB1DB3DF0F5) ^ 0xCBFF4E1CAD89E869 ^ __ROR8__(v62, 61);
  v65 = (((2 * (v63 + v64)) & 0x2CE91245637A82CELL) - (v63 + v64) - 0x16748922B1BD4168) ^ 0xB34BEADE71C999F9;
  v66 = v65 ^ __ROR8__(v64, 61);
  *(_QWORD *)&v19 = __ROR8__(v65, 8);
  v9[13] = ((((((_QWORD)v19 + v66) | 0x65D87B9400A7D7E8)
            - (((_QWORD)v19 + v66) | 0x9A27846BFF582817)
            - 0x65D87B9400A7D7E9) ^ 0x7ED3AA0C2BFE1799) >> (8 * (((_BYTE)v9 + 13) & 7u))) ^ BYTE4(v10) ^ 0x67;
  v67 = (__ROR8__(v9 + 14, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL;
  *(_QWORD *)&v19 = __ROR8__(v67 ^ a1, 8);
  v68 = v67 ^ a2;
  v69 = __ROR8__((-2 - ((~(v19 + v68) | 0xE9A79F6B661C85EELL) + ((v19 + v68) | 0x1658609499E37A11))) ^ 0xB9734F8A5AA1F499, 8);
  v70 = (-2 - ((~(v19 + v68) | 0xE9A79F6B661C85EELL) + ((v19 + v68) | 0x1658609499E37A11))) ^ 0xB9734F8A5AA1F499 ^ __ROR8__(v68, 61);
  v71 = (-2 - ((~(v69 + v70) | 0x4D951D4085C79FFCLL) + ((v69 + v70) | 0xB26AE2BF7A386003))) ^ 0xA842C7EE68423CFCLL;
  v72 = __ROR8__(v71, 8);
  v73 = v71 ^ __ROR8__(v70, 61);
  v74 = (v72 + v73 - ((2 * (v72 + v73)) & 0x21DC1477A93D02AELL) - 0x6F11F5C42B617EA9) ^ 0x1E6B93402C3D887ALL;
  v75 = v74 ^ __ROR8__(v73, 61);
  v76 = (__ROR8__(v74, 8) + v75) ^ v5;
  v77 = v76 ^ __ROR8__(v75, 61);
  v78 = (__ROR8__(v76, 8) + v77) ^ 0x628ABC52894BE762;
  v79 = v78 ^ __ROR8__(v77, 61);
  *(_QWORD *)&v19 = __ROR8__(v78, 8);
  v80 = (((v19 + v79) ^ 0xDA4A082A2E95835ALL)
       - ((2 * ((v19 + v79) ^ 0xDA4A082A2E95835ALL)) & 0xC06B33C43F36BFCLL)
       + 0x603599E21F9B5FELL) ^ 0x8689CDB730E711C5;
  v81 = v80 ^ __ROR8__(v79, 61);
  *(_QWORD *)&v19 = __ROR8__(v80, 8);
  v9[14] = ((((((_QWORD)v19 + v81) | 0x66A3B2E4FFC0348)
            - (((_QWORD)v19 + v81) | 0xF995C4D1B003FCB7)
            - 0x66A3B2E4FFC0349) ^ 0x1D61EAB664A5C339) >> (8 * (((_BYTE)v9 + 14) & 7u))) ^ BYTE3(v10) ^ 0xB8;
  v82 = (((unint64_t)(v9 + 15) >> 8) - 0x550C087CC469144ELL + ((unint64_t)(v9 + 15) >> 3 << 59)) & 0xF9FFFFFFFFFFFFFFLL;
  *(_QWORD *)&v19 = __ROR8__(v82 ^ 0xBB8B02A5518146ACLL, 8);
  v83 = (((2 * (v19 + (v82 ^ 0xEC14BEBC8D361B39))) & 0x816ACA45F412BB72)
       - (v19
        + (v82 ^ 0xEC14BEBC8D361B39))
       + 0x3F4A9ADD05F6A246) ^ 0x6F9E4A3C394BD331;
  v84 = v83 ^ __ROR8__(v82 ^ 0xEC14BEBC8D361B39, 61);
  *(_QWORD *)&v19 = __ROR8__(v83, 8);
  v85 = __ROR8__((((v19 + v84) ^ 0x2692AA20E73CE799 | 0x9DC1EBBF7BCB2010)- ((v19 + v84) ^ 0x2692AA20E73CE799 | 0x623E14408434DFEFLL)+ 0x623E14408434DFEFLL) ^ 0x5E849B3171726489, 8);
  v86 = (((v19 + v84) ^ 0x2692AA20E73CE799 | 0x9DC1EBBF7BCB2010)
       - ((v19 + v84) ^ 0x2692AA20E73CE799 | 0x623E14408434DFEFLL)
       + 0x623E14408434DFEFLL) ^ 0x5E849B3171726489 ^ __ROR8__(v84, 61);
  v87 = (((v85 + v86) ^ 0x919E5F45A3B0DF24)
       - ((2 * ((v85 + v86) ^ 0x919E5F45A3B0DF24)) & 0x371B0A0EEE8C1D3ELL)
       - 0x64727AF888B9F161) ^ 0x849643392C55D896;
  v88 = v87 ^ __ROR8__(v86, 61);
  v89 = (__ROR8__(v87, 8) + v88) ^ v5;
  v90 = v89 ^ __ROR8__(v88, 61);
  v91 = (__ROR8__(v89, 8) + v90) ^ 0x628ABC52894BE762;
  v92 = v91 ^ __ROR8__(v90, 61);
  *(_QWORD *)&v19 = __ROR8__(v91, 8);
  v93 = (-2 - ((~(v19 + v92) | 0xC967FA94AB04334ELL) + ((v19 + v92) | 0x3698056B54FBCCB1))) ^ 0x93A76697948F142FLL;
  v94 = v93 ^ __ROR8__(v92, 61);
  *(_QWORD *)&v19 = __ROR8__(v93, 8);
  LOBYTE(v94) = (((-2 - ((~((_QWORD)v19 + v94) | 0x87F6A9D2E02A807ELL) + (((_QWORD)v19 + v94) | 0x7809562D1FD57F81))) ^ 0x9CFD784ACB73400FLL) >> (8 * (((_BYTE)v9 + 15) & 7u))) ^ BYTE2(v10) ^ 0x95;
  *(_QWORD *)&v19 = __ROR8__(v9 + 16, 8);
  v9[15] = v94;
  v95 = -2
      - (((0x150C087CC469144DLL - (v19 & 0xF8FFFFFFFFFFFFFFLL)) | 0xD42E87D37243C3E6)
       + (((v19 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL) | 0x2BD1782C8DBC3C19));
  v96 = v95 ^ 0x6DA5857623C2854ALL;
  v95 ^= 0x3A3A396FFF75D8DFuLL;
  *(_QWORD *)&v19 = __ROR8__(v96, 8);
  v97 = (((v19 + v95) | 0x96F726EF6CD2AD87) - ((v19 + v95) | 0x6908D910932D5278) + 0x6908D910932D5278) ^ 0xC623F60E506FDCF0;
  v98 = v97 ^ __ROR8__(v95, 61);
  v99 = __ROR8__(v97, 8) + v98;
  v100 = v99 ^ v3 ^ __ROR8__(v98, 61);
  *((_QWORD *)&v19 + 1) = v99;
  *(_QWORD *)&v19 = v99 ^ v3;
  v101 = (-2 - ((~((v19 >> 8) + v100) | 0x3BD37CAD8A56413ELL) + (((v19 >> 8) + v100) | 0xC42C835275A9BEC1))) ^ 0xB556E5D672F54813;
  v102 = v101 ^ __ROR8__(v100, 61);
  v103 = (__ROR8__(v101, 8) + v102) ^ v5;
  v104 = v103 ^ __ROR8__(v102, 61);
  v105 = (__ROR8__(v103, 8) + v104) ^ 0x628ABC52894BE762;
  v106 = __ROR8__(v105, 8);
  v107 = v105 ^ __ROR8__(v104, 61);
  v9[16] = (((__ROR8__((v106 + v107) ^ v6, 8) + ((v106 + v107) ^ v6 ^ __ROR8__(v107, 61))) ^ 0x1B0BD1982B59C071uLL) >> (8 * (((_BYTE)v9 + 16) & 7u))) ^ BYTE1(v10) ^ 0xC0;
  v108 = (((unint64_t)(v9 + 17) >> 8) - 0x550C087CC469144ELL + ((unint64_t)(v9 + 17) >> 3 << 59)) ^ 0xF5E6268322329A2;
  v109 = ((2 * v108) & 0xB425A4BB16C91CCLL) - v108 - 0x5A12D25D8B648E7;
  v110 = (__ROR8__(v109 ^ 0x4C8BB21744EBD817, 8) + (v109 ^ 0x1B140E0E985C8582)) ^ 0x50D4D0E13CBD7177;
  *((_QWORD *)&v19 + 1) = v109 ^ 0x1B140E0E985C8582;
  *(_QWORD *)&v19 = v109;
  v111 = v110 ^ (v19 >> 61);
  *(_QWORD *)&v19 = __ROR8__(v110, 8);
  v112 = (v19 + v111) ^ v3;
  *((_QWORD *)&v19 + 1) = v19 + v111;
  *(_QWORD *)&v19 = v112;
  v113 = v19 >> 8;
  *(_QWORD *)&v19 = __ROR8__(v111, 61);
  v114 = (v113 + (v112 ^ v19)) ^ v4;
  v115 = v114 ^ __ROR8__(v112 ^ v19, 61);
  *(_QWORD *)&v19 = __ROR8__(v114, 8);
  v116 = (((2 * (v19 + v115)) | 0xC2F682CA4CC09A3CLL) - (v19 + v115) - 0x617B416526604D1ELL) ^ 0xAC725E72E64F934FLL;
  v117 = v116 ^ __ROR8__(v115, 61);
  *(_QWORD *)&v19 = __ROR8__(v116, 8);
  v118 = (((2 * (v19 + v117)) | 0xC157B57B1A348C68) - (v19 + v117) - 0x60ABDABD8D1A4634) ^ 0x22166EF0451A156;
  v119 = v118 ^ __ROR8__(v117, 61);
  *(_QWORD *)&v19 = __ROR8__(v118, 8);
  v120 = (((v19 + v119) | 0xD97D8D1C4B94792ALL) - ((v19 + v119) | 0x268272E3B46B86D5) + 0x268272E3B46B86D5) ^ 0x83BD111F741F5E4BLL;
  v9[17] = (((__ROR8__(v120, 8) + (v120 ^ __ROR8__(v119, 61))) ^ 0x1B0BD1982B59C071) >> (8 * (((_BYTE)v9 + 17) & 7u))) ^ v10 ^ 0x60;
  STACK[0x380] = 0x23120F4208F8DDDLL;
  STACK[0x310] = (unint64_t)&STACK[0x380];
  JUMPOUT(0x1CF3571B8);
}

uint64_t sub_1CF35B140@<X0>(int a1@<W8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x348]
                                        + 8
                                        * (a1 ^ (32
                                               * (v2 + v1 + ((a1 - 137364256) & 0xC8FF73FB) - 1085206486 < ((a1 - 1933901102) & 0x7344FB72u) - 346))))
                            - 8))();
}

uint64_t sub_1CF35B1E4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x348]
                                        + 8
                                        * (v0 ^ (245 * (STACK[0x220] - v1 - 0x2DD266C5A251972DLL < 0x10))))
                            - 4))();
}

uint64_t sub_1CF35B230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unsigned int v4;
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x348]
                                                                                + 8
                                                                                * (v3 ^ (v5 - 340) ^ (213 * (v4 < 0x10))))
                                                                    - (((v3 ^ (v5 - 340) ^ 0x5C9u) + 585) ^ 0x6D2)))(a1, 2149614619, a3, 0);
}

#error "1CF35C33C: call analysis failed (funcsize=1004)"

void sub_1CF35C340()
{
  JUMPOUT(0x1CF35B53CLL);
}

uint64_t sub_1CF35C3A8@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (a1 ^ 0x271) + 559;
  v4 = sub_1CF370D34();
  v5 = STACK[0x348];
  *v1 = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5
                                                      + 8
                                                      * (int)((((v3 - 1068828152) ^ 0xC04B00DC)
                                                             * (v2 == 0x23120F4208F8DDDLL)) ^ v3))
                                          + 3234821105
                                          - ((v3 - 1068828152) | 0x847319u)
                                          - 4))(v4);
}

void sub_1CF35C438()
{
  sub_1CF370D34();
  JUMPOUT(0x1CF35C45CLL);
}

uint64_t sub_1CF35C46C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((213 * (v1 == v2)) ^ (v3 + v0 + 851)))
                            - ((v0 + 1060147025) ^ 0x342)))();
}

uint64_t sub_1CF35C4AC()
{
  return ((uint64_t (*)(void))STACK[0x278])();
}

uint64_t sub_1CF35C4B4()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  LODWORD(STACK[0x2F0]) = v0;
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v3 - 1060146286) ^ (750 * (v1 != v2)))) - 8);
  LODWORD(STACK[0x2DC]) = -1393729084;
  return v5();
}

uint64_t sub_1CF35C500()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((232 * (v0 != v1)) ^ (v2 - 1060146048))))();
}

uint64_t sub_1CF35C53C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v2 - 1060145332) ^ (213 * (v0 == v1)))) - 8))();
}

uint64_t sub_1CF35C588@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((v1 + ((a1 - 458) ^ 0x181u) - 1513230890 < ((a1 - 482) ^ 0x16Bu))
                                * ((a1 - 458 - v2 - 159) ^ (v3 + 712))) ^ (a1 - 458))))();
}

uint64_t sub_1CF35C5E8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((((a1 - 1068828152) ^ 0xC04B00DC) * (v1 == 0x23120F4208F8DDDLL)) ^ a1))
                            + 3234821105
                            - ((a1 - 1068828152) | 0x847319u)
                            - 4))();
}

uint64_t sub_1CF35C664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, unsigned int a12, int a13, int a14, int a15)
{
  uint64_t v15;
  int v16;
  int v17;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v15
                                                    + 8
                                                    * (((((a6 - v16 - 789) ^ (v17 - 393)) + 1640) * (a15 == a11)) ^ a6)))(a12, 2149614619);
}

uint64_t sub_1CF35C6AC()
{
  int v0;
  char v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x348]
                                        + 8
                                        * (int)(((v2 + v3 + ((v0 + 2142664054) & 0x80498FDE) - 1758 + 1269)
                                               * ((v1 & 8) == 0)) ^ v0))
                            - 12))();
}

#error "1CF35D000: call analysis failed (funcsize=511)"

void sub_1CF35D004()
{
  JUMPOUT(0x1CF35C938);
}

uint64_t sub_1CF35D00C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  uint64_t v14;

  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * ((838 * (a13 == v13)) ^ a2)) - 12))();
}

uint64_t sub_1CF35D0CC@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v8 = (a1 - 860498373);
  v9 = __ROR8__(v8 + v2 + 10, 8);
  v10 = (((v9 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL) | 0x991A82D9727F8A1ELL)
      - (((v9 & 0xF8FFFFFFFFFFFFFFLL) - 0x550C087CC469144ELL) | v4)
      + v4;
  v11 = v10 ^ 0x2091807C23FECCB2;
  v10 ^= 0x770E3C65FF499127uLL;
  v12 = (__ROR8__(v11, 8) + v10) ^ 0x50D4D0E13CBD7177;
  v13 = v12 ^ __ROR8__(v10, 61);
  v14 = __ROR8__(v12, 8);
  v15 = (((2 * (v14 + v13)) & 0x8B37078EC418761ELL) - (v14 + v13) - 0x459B83C7620C3B10) ^ 0x5FB3A696707667F0;
  v16 = v15 ^ __ROR8__(v13, 61);
  v17 = __ROR8__(v15, 8);
  v18 = (((2 * (v17 + v16)) | 0x909803455169E568) - (v17 + v16) - 0x484C01A2A8B4F2B4) ^ 0xC6C998D95017FB99;
  v19 = v18 ^ __ROR8__(v16, 61);
  v20 = __ROR8__(v18, 8);
  v21 = __ROR8__((((2 * (v20 + v19)) | 0x661703085D1D211ALL) - (v20 + v19) - 0x330B81842E8E908DLL) ^ 0xFE029E93EEA14EDCLL, 8);
  v22 = (((2 * (v20 + v19)) | 0x661703085D1D211ALL) - (v20 + v19) - 0x330B81842E8E908DLL) ^ 0xFE029E93EEA14EDCLL ^ __ROR8__(v19, 61);
  v23 = (((2 * (v21 + v22)) | 0x88D82846AB8C19D8) - (v21 + v22) - 0x446C142355C60CECLL) ^ 0x26E6A871DC8DEB8ELL;
  v24 = v23 ^ __ROR8__(v22, 61);
  v25 = __ROR8__(v23, 8);
  *(_BYTE *)(v8 + v2 + 10) = (((__ROR8__((v3 - ((v25 + v24) | v3) + ((v25 + v24) | 0x691114C3DF6F6AC1)) ^ 0x33D188C0E0E44DA0, 8)+ ((v3 - ((v25 + v24) | v3) + ((v25 + v24) | 0x691114C3DF6F6AC1)) ^ 0x33D188C0E0E44DA0 ^ __ROR8__(v24, 61))) ^ 0x1B0BD1982B59C071) >> (8 * ((a1 + 59 + v2 + 10) & 7))) ^ *(_BYTE *)(v5 + v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x348]
                                        + 8 * (((2 * (a1 - 1 != v7)) | (8 * (a1 - 1 != v7))) ^ (v6 + v1 + 294)))
                            - 4))();
}

uint64_t sub_1CF35D338(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)a1 + 4342687 * ((2 * (a1 & 0x1C8AB504) - a1 - 478852357) ^ 0xCAD75DB9);
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1E8C4D9A0 + v1 - 814)
                                        + 8 * ((1951 * (*(_QWORD *)(a1 + 8) != 0)) ^ v1)
                                        - 12)
                            - 12))();
}

uint64_t sub_1CF35D3AC@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 1011340354;
  *(_DWORD *)(result + 16) = -257308659;
  return result;
}

uint64_t sub_1CF35D3CC(uint64_t result)
{
  *(_DWORD *)(result + 16) = 257333659;
  return result;
}

void sub_1CF35D3DC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) + 1498267367 * ((a1 + 1641755986 - 2 * (a1 & 0x61DB3552)) ^ 0x4920095A);
  __asm { BR              X8 }
}

uint64_t sub_1CF35D548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,__int128 a41,__int128 a42)
{
  int v42;
  uint64_t v43;
  int v44;
  _BYTE *v45;

  v44 = v42 ^ 0x574;
  v45 = sub_1CF36FDF0(&a41, 0, 0x2C8uLL);
  a41 = 0u;
  a42 = 0u;
  return ((uint64_t (*)(_BYTE *))(*(_QWORD *)(v43
                                                      + 8
                                                      * ((451 * (((v44 - 1300399788) & 0x4D8283DF ^ 0x3FFLL) == 512)) ^ v44))
                                          - 4))(v45);
}

uint64_t sub_1CF35D5C0(uint64_t a1, uint64_t a2, _BYTE *a3, unsigned __int8 *a4, unsigned __int8 *a5, unsigned __int8 *a6, unsigned __int8 *a7, unsigned __int8 *a8)
{
  int v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  unsigned __int8 **v11;
  uint64_t v12;
  unsigned __int8 **v13;
  unsigned __int8 *v14;
  _DWORD *v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  _BYTE *v18;
  unsigned __int8 *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  _BYTE *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t result;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  __int128 v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  _BYTE *v155;
  uint64_t v156;
  uint64_t v157;
  _BYTE *v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  unint64_t v166;
  unint64_t v167;
  unint64_t v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  __int128 v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  unint64_t v180;
  unint64_t v181;
  unint64_t v182;
  unint64_t v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t v186;
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  unint64_t v190;
  unint64_t v191;
  unint64_t v192;
  unint64_t v193;
  uint64_t v194;
  unint64_t v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  unint64_t v200;
  unint64_t v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;
  unint64_t v207;
  unint64_t v208;
  unint64_t v209;
  uint64_t v210;
  unint64_t v211;
  BOOL v212;
  unint64_t v213;
  unint64_t v214;
  unint64_t v215;
  __int128 v216;
  uint64_t v217;
  unint64_t v218;
  unint64_t v219;
  unint64_t v220;
  unint64_t v221;
  uint64_t v222;
  unint64_t v223;
  unint64_t v224;
  uint64_t v225;
  unint64_t v226;
  unint64_t v227;
  unint64_t v228;
  unint64_t v229;
  uint64_t v230;
  unint64_t v231;
  unint64_t v232;
  uint64_t v233;
  unint64_t v234;
  uint64_t v235;
  unint64_t v236;
  unint64_t v237;
  unint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t v243;
  unint64_t v244;
  unint64_t v245;
  uint64_t v246;
  unint64_t v247;
  unint64_t v248;
  unint64_t v249;
  unint64_t v250;
  uint64_t v251;
  unint64_t v252;
  uint64_t v253;
  uint64_t v254;
  unint64_t v255;
  uint64_t v256;
  unint64_t v257;
  unint64_t v258;
  unint64_t v259;
  unint64_t v260;
  unint64_t v261;
  unint64_t v262;
  unint64_t v263;
  unint64_t v264;
  unint64_t v265;
  unint64_t v266;
  uint64_t v267;
  unsigned int v268;
  unint64_t v269;
  unint64_t v270;
  unsigned int v271;
  unint64_t v272;
  int v273;
  int v274;
  char v275;
  int v276;
  char v277;
  char v278;
  unint64_t *v279;
  _DWORD *v280;
  _BYTE *v281;
  _BYTE *v282;
  _BYTE *v283;
  _BYTE *v284;
  _BYTE *v285;
  _BYTE *v286;
  _BYTE *v287;
  _BYTE *v288;
  _BYTE *v289;
  _BYTE *v290;
  uint64_t v291;

  v19 = *v11;
  v20 = *a7;
  v21 = *a5 ^ 0x35;
  v22 = *(_QWORD *)(v12 + 8 * (v8 - 892));
  HIDWORD(v23) = ~v20;
  LODWORD(v23) = (v20 ^ 0x34) << 24;
  v24 = v22 + 536;
  v25 = *a8 ^ 0x35u;
  v26 = (*v9 | ((*v10 ^ 0x35) << 8)) & 0xFFFFFFFFFF00FFFFLL | ((unint64_t)((*(_BYTE *)(v22 + 536 + ((93 * *a3) ^ 0xDDLL)) ^ 0x9F) + 70) << 16) | ((*a6 ^ 0x12) << 24) | ((unint64_t)(*a4 ^ 0x12u) << 32);
  v27 = *(_BYTE *)(v22 + ((v23 >> 25) ^ 0xC9) + 265);
  v28 = v27 & 0xA5 ^ ((v27 ^ 0x18 | 0xE6) - ((v27 ^ 0x18) & 0xB9) + ((v27 ^ 0x18) & 0x19)) ^ 0xFE;
  v29 = *v13;
  v30 = ((unint64_t)(v19[17] | ((*v13)[1] << 16) | ((*v18 ^ 0x12u) << 24)) << 33) | ((unint64_t)(*v14 ^ 0x12u) << 41) | ((((unint64_t)**v13 << 48) | ((unint64_t)(*v16 ^ 0x12u) << 40) | ((unint64_t)(103 * (v27 & 0xE3 ^ 0xC2 ^ ((((((v28 - ((2 * v28) & 0x2E) - 105) ^ 0x68) + 1) ^ (v28 - ((2 * v28) & 0x2E) - 105) ^ (((v28 - ((2 * v28) & 0x2E) - 105) ^ 0x78) - ((2 * ((v28 - ((2 * v28) & 0x2E) - 105) ^ 0x78) + 34) & 0x28) + 37)) & 0xFC) - 112))) << 32) | ((unint64_t)(*v18 ^ 0x12u) << 24)) >> 31);
  v31 = ((unint64_t)(*v13)[3] << 8) | ((unint64_t)*v19 << 24) | ((unint64_t)v19[23] << 16) | *v17 | ((unint64_t)v19[19] << 32);
  v32 = v31 ^ 0xFDEFDDE96F709A9FLL;
  v33 = (2 * v31) & 0x1D2DEE1353ELL;
  v34 = v30 ^ ((unint64_t)(*v13)[2] << 25) ^ 0x78CB9FFE33B27E2ELL;
  v35 = v32 + 0x2102216908F6561 + v33;
  v36 = ((unint64_t)v19[20] << 40)
      - (((unint64_t)v19[20] << 41) & 0xBE0000000000)
      - 0x1864A040272FE4D3;
  v37 = (v35 - (v35 | v36 ^ 0xE79B5FBFD8D01B2DLL)) ^ ((v36 ^ 0x1864A040272FE4D2) + 1);
  v38 = ((v37 - ((2 * v37) & 0xCF36BF7FB1A0365ALL) - 0x1864A040272FE4D3) ^ v36) + v35;
  v291 = ((2 * *v15) & 0xEFFDDFFE) + (*v15 ^ 0x77FEEFFF) - 2013196287;
  v39 = v22 + 8;
  LOBYTE(v36) = *(_BYTE *)(v22 + 8 + (((v19[8] >> 4) | (16 * v19[8])) ^ 0x7ELL));
  v40 = v19[15];
  v41 = (((unint64_t)v19[21] << 16) | ((unint64_t)v19[4] << 8) | ((unint64_t)v19[7] << 40) | ((unint64_t)v19[9] << 24) | ((unint64_t)v19[3] << 48) | ((unint64_t)v19[13] << 56) | v40)
      + ((unint64_t)(((((2 * v36) & 0x78) + (v36 ^ 0xBC)) ^ 0xF4) - 97) << 32);
  v42 = v26 ^ (((unint64_t)v19[14] << (v21 & 0x30) << (v21 & 0x30 ^ 0x30)) | (v21 << 40) | (v25 << 56));
  v43 = (((unint64_t)v19[10] << 48) | ((unint64_t)v19[6] << 56) | v19[22] | ((unint64_t)v19[11] << 32) | ((unint64_t)v19[5] << 24) | ((unint64_t)v19[2] << 8) | ((unint64_t)v19[18] << 16)) ^ ((unint64_t)v19[16] << 40);
  v44 = v291 ^ __ROR8__(v34, 33);
  v45 = v42 ^ v41;
  v46 = (v38 + ((unint64_t)v19[1] << 48) - 2 * (v38 & ((unint64_t)v19[1] << 48))) ^ ((unint64_t)v19[12] << 56) ^ v44 ^ 0x19D93F173C65CFFFLL;
  v47 = v43 ^ 0x401CB877269A8CACLL;
  v48 = (v46 ^ 0xFA510786C144F1C9) & (v43 ^ 0x401CB877269A8CACLL) ^ v44 ^ 0x19D93F173C65CFFFLL;
  v49 = __ROR8__(v43 ^ 0x89AFF02163B0EF15 ^ (v41 - 2 * (v41 & 0x9AFF02163B0EF1DLL ^ v40 & 8) - 0x76500FDE9C4F10EBLL), 10);
  v50 = (v46 ^ 0x5AEF8793EBB0E36) & (v44 ^ 0x23B7E0FCEEAB4DDALL);
  v51 = __ROR8__(v49 ^ 0xBA668B1C6B75C483, 54);
  v52 = v45 ^ 0x8856FC12B4940DDFLL;
  v53 = ((((((v45 ^ 0x8856FC12B4940DDFLL) + (v45 ^ 0xE8950EE12279655BLL) + 1) ^ 1) + 1) ^ 0xFFFFFFFFFFFFFFFELL)
       + (v45 ^ 0xE8950EE12279655BLL)) & (v44 ^ 0xDC481F031154B225);
  v54 = (v50 - ((2 * v50) & 0x4D7EAEFB286D883ELL) + 0x26BF577D9436C41FLL) ^ v45;
  v55 = (v51 ^ 0x32A5C73BD3F1E71ELL) & (v43 ^ 0xBFE34788D9657353) ^ v46;
  v56 = v53 ^ v51;
  v57 = (2 * v56) & 0x85C0310BF87BC8C8 ^ 0xFABFFFFC5F9C37F7;
  v58 = v48 ^ v54 ^ 0xCE2A599CB64FA144;
  v59 = v56 ^ 0x32A5C73BD3F1E71ELL;
  v60 = v56 ^ ((v54 ^ 0xCE2A599CB64FA144)
             - 2 * ((v54 ^ 0xCE2A599CB64FA144) & 0x6D8F89AF383C6D63 ^ v54 & 1)
             - 0x12707650C7C3929ELL);
  v61 = v57 + v59 - ((2 * (v57 + v59) - 0x7A3FCEF407843736) & 0xA5DBD3D8D97C3FB8) + 0x15CE027268FC0441;
  v62 = (v51 ^ 0xCD5A38C42C0E18E1) & v52 ^ v47;
  *((_QWORD *)&v64 + 1) = v58 ^ 0xDC6FC8E352136FLL;
  *(_QWORD *)&v64 = v58 ^ 0x4000000000000000;
  v63 = v64 >> 61;
  *((_QWORD *)&v64 + 1) = v60 ^ 0x29F40;
  *(_QWORD *)&v64 = v60 ^ 0x743BF5703C980000;
  v65 = v64 >> 19;
  v66 = v58 ^ (v58 >> 39) ^ v63;
  v67 = ((v58 << 25) ^ 0x91C6A426DE000000)
      - ((2 * ((v58 << 25) ^ 0x91C6A426DE000000)) & 0x703AB0DDC4000000)
      + 0x381D586EE25E759BLL;
  *((_QWORD *)&v64 + 1) = v61 ^ 0x5C;
  *(_QWORD *)&v64 = v61 ^ 0x52EDE9EC6CBE1F80;
  v68 = ((v66 ^ 0x873EC859FE7221D4 ^ v67) + (v67 ^ 0x381D586EE25E759BLL) + 1) ^ ((v66 ^ 0xBF2390371C2C544FLL) + 1);
  v69 = v60 ^ 0x9A102F3D87C9A3EFLL ^ ((v65 ^ (v60 >> 28) ^ (v60 << 36) ^ 0xC9A9F40743BF5703)
                                    - 2
                                    * ((v65 ^ (v60 >> 28) ^ (v60 << 36) ^ 0xC9A9F40743BF5703) & 0x6E2BDA4DBB533CBFLL ^ (v65 ^ (v60 >> 28)) & 0x10)
                                    - 0x11D425B244ACC351);
  v70 = v61 ^ __ROR8__(v61, 41) ^ (v64 >> 7);
  v71 = (v66 ^ 0x69721455B3EE9861 ^ (v68 - ((2 * v68) & 0x535CF73AA07A67A2) + 0x29AE7B9D503D33D1))
      + (v67 ^ 0x381D586EE25E759BLL);
  *((_QWORD *)&v64 + 1) = v55;
  *(_QWORD *)&v64 = v55 ^ 0x944FC4CE0B1BE454;
  v72 = v64 >> 1;
  *(_QWORD *)&v64 = __ROR8__(v55, 6);
  v73 = (v62 - ((2 * v62) & 0xDE1EF7BD61850484) - 0x10F084214F3D7DBELL) ^ v55;
  v74 = ((v72 ^ v64 ^ 0x52513F13382C6F91)
       - ((2 * (v72 ^ v64 ^ 0x52513F13382C6F91)) & 0x7A1B63940D2CA7D8)
       + 0x3D0DB1CA069653ECLL) ^ v55;
  v75 = v73 ^ (v73 << 47) ^ (v73 >> 10) ^ ((v73 >> 17) | (v73 << 54));
  v76 = (v70 ^ 0xA4DBB6E382976928)
      + v69
      + 2 * ((v70 ^ 0xA4DBB6E382976928) & v69)
      - 4 * ((v70 ^ 0xA4DBB6E382976928) & v69);
  v77 = (v70 ^ 0xA4DBB6E382976928) & (v75 ^ 0x7E4F73A3B0301945);
  v78 = v76 - ((2 * v76) & 0x2477B50258E241B0) + 0x123BDA812C7120D8;
  v79 = v78 ^ 0x123BDA812C7120D8;
  *((_QWORD *)&v64 + 1) = v78 ^ 0x2C7120D8;
  *(_QWORD *)&v64 = v78 ^ 0x123BDA8100000000;
  v80 = v64 >> 31;
  v81 = v71 - ((2 * v71) & 0xF115C62C322786FCLL) - 0x7751CE9E6EC3C82;
  *(_QWORD *)&v64 = __ROR8__((v81 ^ 0x7751CE9E6EC3C81) & (v74 ^ 0xA94275040D8DB7B8), 31);
  v82 = v75 ^ 0x7B08B206A11AD49 ^ ((v79 & (v70 ^ v75 ^ 0xDA94C54032A7706DLL))
                                   - ((2 * (v79 & (v70 ^ v75 ^ 0xDA94C54032A7706DLL))) & 0xC000EF84BBC97E6)
                                   - 0x79FFF883DA21B40DLL);
  v83 = v75 ^ 0x81B08C5C4FCFE6BALL;
  v84 = v64 - ((2 * v64) & 0x31C1B15E14B21F2CLL) - 0x671F2750F5A6F06ALL;
  v85 = v84 ^ 0xE88BD8AAAF7EDD49 ^ (v80 - ((2 * v80) & 0x31C1B15E14B21F2CLL) - 0x671F2750F5A6F06ALL);
  v80 ^= 0x17742755508122B6uLL;
  v86 = (v80 + v85 + 1) ^ ((v84 ^ 0x671F2750F5A6F069) + 1);
  v87 = (v79 | v81 ^ 0x7751CE9E6EC3C81) ^ v70 ^ v75;
  v88 = ((v74 ^ 0xA94275040D8DB7B8)
       - 2 * ((v74 ^ 0xA94275040D8DB7B8) & 0x788AE3161913C37FLL ^ v74 & 1)
       - 0x7751CE9E6EC3C82) ^ v81;
  v89 = (v83 & ~v88) - ((2 * (v83 & ~v88)) & 0xF115C62C322786FCLL) - 0x7751CE9E6EC3C82;
  v90 = v88 ^ v77;
  *(_QWORD *)&v64 = __ROR8__(((v86 - ((2 * v86) & 0x31C1B15E14B21F2CLL) - 0x671F2750F5A6F06ALL) ^ v84) + v80, 33);
  v91 = v89 ^ v81 ^ v64;
  v92 = (((v90 ^ 0xABFA444E8F9D8EEELL) + 0x5405BBB170627112) ^ -(uint64_t)v90)
      - ((2 * (((v90 ^ 0xABFA444E8F9D8EEELL) + 0x5405BBB170627112) ^ -(uint64_t)v90)) & 0x4964C53BCF9E0EC0);
  v93 = v90 ^ 0x24B2629DE7CF0760;
  v94 = (v82 - ((2 * v82) & 0x4964C53BCF9E0EC0) + 0x24B2629DE7CF0760) ^ v90 ^ 0x24B2629DE7CF0760;
  v95 = (v92 + 0x24B2629DE7CF0760) ^ v93;
  v96 = 2 * v95 + 0x280B7762E0C4E222;
  v95 += 0x6C628CB48A2DF0ABLL;
  *(_QWORD *)&v64 = __ROR8__(__ROR8__(v64 ^ 0x7BBE7F2A1BE4CC86, 8) ^ __ROR8__(v87 ^ 0xDA94C54032A7706DLL, 8), 56);
  v97 = v64 - ((2 * v64) & 0xBB148BA01F49592CLL);
  *((_QWORD *)&v64 + 1) = v91 ^ 0x16C16512DF901776;
  *(_QWORD *)&v64 = v91 ^ 0x2000000000000000;
  v98 = v64 >> 61;
  v99 = v95 - (v96 & 0x30B9A2063396FF34);
  *((_QWORD *)&v64 + 1) = v95;
  *(_QWORD *)&v64 = v99 ^ 0x185CD10319CB7F9ALL;
  v100 = v64 >> 1;
  *(_QWORD *)&v64 = __ROR8__(v99, 6);
  v101 = ((v100 ^ v64 ^ 0x686173440C672DFELL)
        - ((2 * (v100 ^ v64 ^ 0x686173440C672DFELL)) & 0x30B9A2063396FF34)
        + 0x185CD10319CB7F9ALL) ^ v99;
  v102 = v91 ^ __ROR8__(v91, 39) ^ v98;
  v103 = v102 ^ 0x604247CDFEA2170DLL;
  v104 = 2 * v101;
  v105 = (2 * v101) & 0x667805E39ABF0562;
  v101 += 0x733C02F1CD5F82B1;
  v106 = (v102 ^ 0x604247CDFEA2170DLL ^ (v101 - v105)) & 0x71B1ECC793809309;
  v107 = v102 ^ 0x604247CDFEA2170DLL ^ (v101 - (v104 & 0xE67805E39ABF0562));
  v108 = (v107 & 0x8E4E13386C7F6CF6 | v106) - ((2 * (v107 & 0x8E4E13386C7F6CF6 | v106)) & 0xFDE7764F983B270);
  *((_QWORD *)&v64 + 1) = v94 ^ 0x108;
  *(_QWORD *)&v64 = v94 ^ 0x7C7C423D5555C00;
  v109 = v64 >> 10;
  v110 = v97 + 0x5D8A45D00FA4AC96;
  *((_QWORD *)&v64 + 1) = ((_DWORD)v97 + 262450326) ^ 0x4AC96u;
  *(_QWORD *)&v64 = (v97 + 0x5D8A45D00FA4AC96) ^ 0x5D8A45D00FA00000;
  v111 = v64 >> 19;
  v112 = v94 ^ __ROR8__(v94, 17) ^ v109;
  result = 9;
  v108 += 0x7EF3BB27CC1D938;
  v114 = v108 ^ 0x7EF3BB27CC1D938;
  v115 = ((v108 & 0xFFFFFFFFFFFFDFFFLL | (((v107 >> 13) & 1) << 13)) ^ 0xF810C44D833E26C7) & (v112 ^ 0xA943C7C03744B7A2);
  *((_QWORD *)&v64 + 1) = v87 ^ 4;
  *(_QWORD *)&v64 = v87 ^ 0x8144DFC1D01B8200;
  v116 = v87 ^ __ROR8__(v87, 41) ^ (v64 >> 7);
  v117 = v110 ^ v116 ^ ((v111 ^ (v110 >> 28) ^ (v110 << 36) ^ 0xFA4AC965D8A45D00)
                      - 2
                      * ((v111 ^ (v110 >> 28) ^ (v110 << 36) ^ 0xFA4AC965D8A45D00) & 0x5D8A45D00FA4AC9FLL ^ (v111 ^ (v110 >> 28)) & 9)
                      + 0x5D8A45D00FA4AC96);
  v118 = (v117 ^ 0x9E532DFF2DA4DF94) & (v102 ^ 0x137E453C33FD95BCLL);
  v119 = (v112 ^ 0x56BC383FC8BB485DLL) & (v116 ^ 0x61ACD200D25B206BLL);
  v120 = v117 ^ v114 & (v102 ^ 0xEC81BAC3CC026A43);
  v121 = v120 & 0x800000000000 ^ 0xD64DFFAF79AD7F7BLL;
  v122 = v114 & v119;
  v123 = v114 + v119;
  v124 = (v115 - ((2 * v115) & 0xE67805E39ABF0562) + 0x733C02F1CD5F82B1) ^ v103;
  v125 = v112 ^ v116;
  v126 = v118 ^ v112 ^ v116;
  v127 = v125 ^ 0x3710EA3F1AE06836;
  v128 = v124 - ((2 * v124) & 0x7A025A7B2DE4BC8CLL) + 0x3D012D3D96F25E46;
  v129 = v121 + 0x7BFBC7D98E7EC2F7;
  if (((v121 + 0x29B2805086528085) & (v126 ^ 0xC8EF15C0E51F97C9)) != 0)
    v129 = 0x2896C73881D9C1EDLL - v121;
  v130 = ((v117 ^ 0x61ACD200D25B206BLL) & v127)
       - ((2 * ((v117 ^ 0x61ACD200D25B206BLL) & v127)) & 0xA4806652A336DC00)
       - 0x2DBFCCD6AE649200;
  v131 = v128 ^ v120;
  v132 = ((v126 ^ 0xC8EF15C0E51F97C9) - 0x52494789082C4272 + v129) ^ v120 & 0xFFFF7FFFFFFFFFFFLL;
  v133 = ((v128 ^ v120) & 0xE3B31A03 ^ 0x20231802) + (v128 ^ v120 ^ 0xDBBABAADD3D0C695);
  v134 = v132 ^ 0x294E37599B5857F8 ^ (((v132 << 45) ^ 0x9DAD800000000000)
                                      - ((2 * ((v132 << 45) ^ 0x9DAD800000000000)) & 0xC5EE000000000000)
                                      - 0x1D08FD69282B456CLL);
  v135 = v123 - 2 * v122;
  v136 = v135 ^ v112 ^ v130;
  v137 = (v131 >> 61) ^ 6;
  v138 = ((v131 ^ 0x24454552CF9C236FLL ^ (v131 >> 61)) + v137 + 1) ^ ((v131 ^ 0x24454552CF9C2369) + 1);
  v139 = (v131 ^ 0x1F33E80CC66B5995 ^ (v138 - ((2 * v138) & 0x8912A543EC110A06) - 0x3B76AD5E09F77AFDLL)) + v137;
  *((_QWORD *)&v141 + 1) = v135 ^ 0x16;
  *(_QWORD *)&v141 = v135 ^ 0x589DBFDD7823EE40;
  v140 = v141 >> 6;
  *((_QWORD *)&v141 + 1) = v131 ^ 0x2D3063DC96;
  *(_QWORD *)&v141 = v133;
  v142 = (v134 + ((v132 >> 19) ^ 0x197726B9E991) - 2 * (v134 & ((v132 >> 19) ^ 0x197726B9E991))) ^ __ROR8__(v132, 28) ^ 0xC8CED6CCBB935CF4;
  v143 = (v141 >> 39) ^ (8 * v131);
  *((_QWORD *)&v141 + 1) = v123;
  *(_QWORD *)&v141 = v135 ^ 0x589DBFDD7823EE56;
  v144 = v141 >> 1;
  *((_QWORD *)&v141 + 1) = v126 ^ 0x46;
  *(_QWORD *)&v141 = v126 ^ 0x425672A150A4C580;
  v145 = v143 ^ v139;
  v146 = v126 ^ __ROR8__(v126, 41) ^ (v141 >> 7);
  v147 = v135 ^ 0x430EB1BA97972E63 ^ ((v144 ^ v140)
                                      - ((2 * (v144 ^ v140)) & 0x37261CCFDF69806ALL)
                                      + 0x1B930E67EFB4C035);
  v148 = v147 - ((2 * v147) & 0x10DF11EC37875916) + 0x86F88F61BC3AC8BLL;
  *((_QWORD *)&v141 + 1) = v136 ^ 0x52;
  *(_QWORD *)&v141 = v136 ^ 0x24D91A625E7F0400;
  v149 = v142 ^ v146;
  v150 = (v142 ^ v146 ^ 0xED01DF3C4C7A1100) & (v145 ^ 0xDDD5D569831EE4B0);
  v151 = v136 ^ __ROR8__(v136, 17) ^ (v141 >> 10);
  v152 = (v145 ^ 0x222A2A967CE11B4FLL) & v147;
  v153 = v142 - ((2 * v142) & 0xD89EE12A168A3FB0) - 0x13B08F6AF4BAE028;
  v154 = v145 ^ v148;
  v155 = v17;
  v156 = v153 ^ v151 ^ 0x4ABF789BD80B34B5;
  v157 = v151 ^ 0x4ABF789BD80B34B5 ^ v146;
  v158 = v18;
  v159 = v149 ^ v152;
  v160 = (v145 ^ v148 ^ 0x2A45A2606722B7C4) & (v151 ^ 0xA6F0080ED34E2B6DLL) ^ v145;
  v161 = v150 ^ v157;
  v162 = (v150 ^ v157 ^ 0xFEB15056B8C0F127)
       + (v159 ^ 0x12FE20C3B385EEFFLL)
       - 2 * ((v159 ^ 0x12FE20C3B385EEFFLL) & (v157 ^ 0x7EB15056B8C0F127));
  v163 = (v151 ^ 0x590FF7F12CB1D492) & (v146 ^ 0x12FE20C3B385EEFFLL);
  v164 = ((v159 ^ 0xE486E0C1BB2BFEAELL) + (v159 ^ v160 ^ 0xC6ACCA57C7CAE5E1) + 1) ^ ((v160 ^ 0x222A2A967CE11B4FLL) + 1);
  v165 = (v160 ^ 0xB7CC7A5F58220B6ALL ^ (v164 - ((2 * v164) & 0xD4335E6DB679DFB4) + 0x6A19AF36DB3CEFDALL))
       + (v159 ^ 0xE486E0C1BB2BFEAELL);
  v166 = v165 - ((2 * v165) & 0x71BFBB330C82F4B2);
  v167 = v154 ^ v163;
  v168 = v166 + 0x38DFDD9986417A59;
  v169 = ((((v166 + 0x38DFDD9986417A59) >> 61) ^ 1)
        + (((v166 + 0x38DFDD9986417A59) >> 60) | 0xFFFFFFFFFFFFFFFDLL)
        + 0x38DFDD9986417A5ALL) ^ (v166 + 0x38DFDD9986417A59);
  v170 = (8 * (v166 + 0x38DFDD9986417A59)) ^ 0xC6FEECCC320BD2C8;
  *((_QWORD *)&v141 + 1) = v162 ^ 0xBB4B01C;
  *(_QWORD *)&v141 = v162 ^ 0x2DC88F52D0000000;
  v171 = v141 >> 28;
  v172 = (v149 ^ 0x12FE20C3B385EEFFLL | v157 ^ 0x14EAFA9473F0ED8) + v156 + 1;
  v173 = 0x85ABF249EC1E2BF0 - (v151 & 0x8000000000 | 0x42D5F924F60F15F8);
  if ((v172 & v151 & 0x8000000000) == 0)
    v173 = v151 & 0x8000000000 | 0x42D5F924F60F15F8;
  v174 = v151 & 0xFFFFFF7FFFFFFFFFLL ^ 0xA6F0080ED34E2B6DLL ^ (v172 - 0x42D5F924F60F15F8 + v173);
  *((_QWORD *)&v175 + 1) = v162;
  *(_QWORD *)&v175 = v162 ^ 0x2DC88F52DBB00000;
  v176 = ((v175 >> 19) ^ v171) - ((2 * ((v175 >> 19) ^ v171)) & 0x4F26497141B6E6D0) - 0x586CDB475F248C98;
  v177 = (v174 - ((2 * v174) & 0x12F6F0BE06C58F4CLL) - 0x768487A0FC9D385ALL) ^ v167;
  *((_QWORD *)&v175 + 1) = v177 ^ 0x9F;
  *(_QWORD *)&v175 = v177 ^ 0x7B48A69D79348800;
  v178 = v175 >> 10;
  v179 = v176 ^ v162;
  *((_QWORD *)&v175 + 1) = ~(_DWORD)v167;
  *(_QWORD *)&v175 = v167 ^ 0x7B1696201079081CLL;
  v180 = (v169 & 0x6AFDE4CB806809B4 ^ v170 & 0x6AFDE4CB806809B0 | v169 & 0x95021B347F97F64BLL ^ v170 & 0x95021B347F97F648) ^ __ROR8__(v168, 39);
  v181 = (v161 >> 41) | (v161 << 57);
  v182 = (16 * (v161 & 0x1FFFFFFFFFFLL)) ^ __ROR8__(v161 ^ 0xDFC253D1FD1FD170 ^ (((v161 >> 7) ^ 0x1672EEF82D7B2BDLL)- ((2 * ((v161 >> 7) ^ 0x1672EEF82D7B2BDLL)) & 0xAA48212D8D1FC4)+ 0x6C55241096C68FE2), 19) ^ 0xC6ED64C466A8CC27;
  v183 = v177 ^ ((v177 ^ 0x5CC125C09BBF8F9DuLL) >> 17) ^ v178 ^ ((v177 ^ 0x5CC125C09BBF8F9DLL) << 47);
  v184 = v167 ^ 0x8168270DC642AFF9 ^ (((v175 >> 1) ^ (v167 >> 6) ^ (v167 << 58) ^ 0x75EC5A588041E420)
                                      - 2
                                      * (((v175 >> 1) ^ (v167 >> 6) ^ (v167 << 58) ^ 0x75EC5A588041E420) & 0x7A7EB12DD63BA7F5 ^ ((v175 >> 1) ^ (v167 >> 6)) & 0x11)
                                      - 0x5814ED229C4581CLL);
  v185 = v181 ^ __ROR8__(v182, 45);
  v186 = (v179 ^ 0x8A5BABEA7B6FC374)
       - 2 * ((v179 ^ 0x8A5BABEA7B6FC374) & 0x74E61C46DDA1EEEFLL ^ v179 & 8)
       - 0xB19E3B9225E1119;
  v187 = v184 - ((2 * v184) & 0xABA117584F1DACBALL);
  v188 = v186 ^ v185;
  v189 = v188 ^ 0xB18DFA21F1AA51D6 ^ (((v180 ^ 0xCCF37D0B4D8E4044) & v184)
                                      - ((2 * ((v180 ^ 0xCCF37D0B4D8E4044) & v184)) & 0x63FD7F1C08D887C2)
                                      + 0x31FEBF8E046C43E1);
  v190 = (v183 ^ 0x7364AA647658625) & (v185 ^ 0xE296D9E92867FCD0);
  v191 = v183 ^ v185;
  v192 = ~(2 * (v188 ^ 0x807345AFF5C61237)) + (v188 ^ 0x807345AFF5C61237);
  v193 = v183 ^ 0x6126DB03C2C5D4DALL ^ (((v191 ^ 0xE5A0934F6F027AF5) & (v188 ^ 0x807345AFF5C61237))
                                      - ((2 * ((v191 ^ 0xE5A0934F6F027AF5) & (v188 ^ 0x807345AFF5C61237))) & 0x33DEDCB4F4BF5A00)
                                      - 0x661091A585A05300);
  v194 = v180 ^ 0x66DC095895FF69E6;
  v195 = (v180 ^ 0x330C82F4B271BFBBLL) & v192 ^ v191;
  *((_QWORD *)&v175 + 1) = v189 ^ v195 ^ 0x38226;
  *(_QWORD *)&v175 = v189 ^ v195 ^ 0xE4EBE7BA21480000;
  v196 = v189 ^ v195 ^ 0x1A5F6CB090FD850ALL;
  v197 = (v196 << 36) ^ 0x1B6072C000000000;
  v198 = (v175 >> 19) ^ (v196 >> 28) ^ 0xFEB48B0ABLL;
  v199 = v189 ^ v195 ^ 0xB0698348A4094D22 ^ (v198 - ((2 * v198) & 0xA904C9E50A859E08) + 0x548264F28542CF04);
  v200 = v199 + v197;
  v201 = v199 & v197;
  v202 = v194 ^ (v187 + 0x55D08BAC278ED65DLL);
  v203 = v202 ^ v190;
  v204 = (v193 - ((2 * v193) & 0x6F225E1C7D98D1B0) + 0x37912F0E3ECC68D8) ^ v203;
  *((_QWORD *)&v175 + 1) = v204 ^ 0x30B;
  *(_QWORD *)&v175 = v204 ^ 0x48349AD358977000;
  v205 = v200 - 2 * v201;
  v206 = v204 ^ __ROR8__(v204, 17) ^ (v175 >> 10);
  v207 = v195 ^ (v195 >> 7);
  v208 = ((v207 ^ 0x8AB50B1CBDF42788) + (v207 ^ 0x84FBCA2A57F50737 ^ v206) + 1) ^ ((v206 ^ 0xE4EC136EA0120BFLL) + 1);
  v209 = (v206 ^ 0x67C10EC32E422F94 ^ (v208 - ((2 * v208) & 0x2CE060147779E1A8) - 0x698FCFF5C4430F2CLL))
       + (v207 ^ 0x8AB50B1CBDF42788);
  v210 = v209 - ((2 * v209) & 0x5069819D29A21E42) + 0x2834C0CE94D10F21;
  v211 = ((v210 ^ v205) & 0x400000000000000 | (((((v210 ^ v205) & 0x400000000000000) >> 58) & 1) << 59)) ^ 0x54CEBE8DDB3FBFF9;
  v212 = ((v211 - 0x54CEBE8DDB3FBFF9) & (v210 ^ 0x2800000000000000)) == 0;
  v213 = v211 - 0x104E180419030419;
  v214 = 0x994F65179D7C7BD9 - v211;
  if (!v212)
    v213 = v214;
  v212 = v81 == 0x7751CE9E6EC3C81;
  v215 = (((v183 ^ 0xF8C9B559B89A79DALL) & ~v202)
        - ((2 * ((v183 ^ 0xF8C9B559B89A79DALL) & ~v202)) & 0xABA117584F1DACBALL)
        + 0x55D08BAC278ED65DLL) ^ v194;
  *((_QWORD *)&v216 + 1) = v215 ^ v189 ^ 0x1AEE2BF38C2AFA85;
  *(_QWORD *)&v216 = v215 ^ ~v189;
  v217 = v215 ^ v189 ^ __ROR8__(v215 ^ v189, 39) ^ (v216 >> 61);
  v218 = (v210 ^ v205) & 0xFBFFFFFFFFFFFFFFLL ^ 0x2834C0CE94D10F21 ^ ((v210 ^ 0x2834C0CE94D10F21)
                                                                      - 0x4480A689C23CBBE0
                                                                      + v213);
  v219 = (((v203 << 58) ^ (v203 << 63)) & 0xFC00000000000000 | (v203 >> 6)) ^ (v203 >> 1) ^ 0x10FFB03654A7558BLL;
  v220 = v203 ^ 0xA9E055D70C4304FDLL ^ (v219 - ((2 * v219) & 0x3339A333A7E06CFELL) - 0x66632E662C0FC981);
  v221 = ((v195 >> 41) | (v195 << 57)) ^ 0x860000000045D127 ^ v218;
  v222 = v210 ^ v207;
  v223 = v205 ^ v207 ^ (v221 - ((2 * v221) & 0x8D7FCA65ECF050BALL) + 0x46BFE532F678285DLL);
  v224 = ((v195 << 23) ^ 0xC1DD4092E1800000)
       - ((2 * ((v195 << 23) ^ 0xC1DD4092E1800000)) & 0xC5FCD4C604000000)
       + 0x62FE6A63024C6845;
  v225 = ((v224 ^ 0x510B7BB2B63F986FLL ^ v223) + (v224 ^ 0x62FE6A63024C6844)) ^ ((v223 ^ 0x33F511D1B473F02ALL) + 1);
  v226 = v220 - ((2 * v220) & 0x57C656B2CEECB71CLL);
  v227 = ((v217 ^ 0xE20981F97820D92DLL) & v220) - ((2 * ((v217 ^ 0xE20981F97820D92DLL) & v220)) & 0x14FFBDF0C6E6B3C8);
  v228 = (v223 ^ 0x9C0934285B9BFFC4 ^ (v225 - ((2 * v225) & 0xA007B40C202FE022) + 0x5003DA061017F011))
       + (v224 ^ 0x62FE6A63024C6845);
  v229 = v217 ^ 0xB615555FE0A97D5CLL;
  v230 = v228 - ((2 * v228) & 0x18CD06A417F0B646) + 0xC6683520BF85B23;
  v231 = v230 ^ v218;
  v232 = v231 & 0x72B02C473389F41 ^ 0x403020412280801 ^ (v231 ^ 0xF3997CADF407A4DCLL) & (v217 ^ 0x1ADD7CC2F4E7B993);
  v233 = ((2 * v232) & 0xCF34F3AE9A875A0) - v232 - 0x679A79D74D43AD1;
  v234 = v230 ^ v222 ^ 0xCE97DAA59CACF21DLL;
  v235 = ((v234 ^ 0x60709225BE718197) + (v234 ^ 0x61033738A88D3706 ^ v233) + 1) ^ ((v233 ^ 0x173A51D16FCB691) + 1);
  v236 = (v233 ^ 0xD0E2573F32F3C019 ^ (v235 - ((2 * v235) & 0x5CDC1BBBB7E112EELL) + 0x2E6E0DDDDBF08977))
       + (v234 ^ 0x60709225BE718197);
  v237 = v227 + 0xA7FDEF8637359E4;
  v238 = v231 ^ 0xF3997CADF407A4DCLL ^ v237;
  if (v212)
    v238 = v237;
  v239 = v237 ^ 0xA7FDEF8637359E4;
  v240 = (v226 - 0x541CD4A69889A472) ^ v229;
  v241 = (((v222 ^ 0xA281CBD2292528A9) & ~v240)
        - ((2 * ((v222 ^ 0xA281CBD2292528A9) & ~v240)) & 0x57C656B2CEECB71CLL)
        - 0x541CD4A69889A472) ^ v229;
  v242 = v231 ^ 0xC6683520BF85B23;
  v243 = (v238 ^ 0xA7FDEF8637359E4) & (v231 ^ 0xC6683520BF85B23) ^ (v231 ^ 0xC6683520BF85B23 | v239);
  v244 = v236 ^ v243;
  v245 = v236 ^ v243 ^ 0xA0728460B3E26F5DLL ^ ((((v236 ^ v243) >> 19) ^ 0xFC25710291FLL)
                                             - ((2 * (((v236 ^ v243) >> 19) ^ 0xFC25710291FLL)) & 0x39C3F6374704)
                                             - 0x219FC31E04E45C7ELL);
  v246 = v245
       + (((v236 ^ v243) << 45) ^ 0x399BE00000000000)
       - 2 * (v245 & (((v236 ^ v243) << 45) ^ 0x399BE00000000000));
  v247 = v246 - 2 * (v246 & 0x818A2E447C7B57FLL ^ v245 & 4);
  v248 = v241 ^ v243;
  v249 = (v236 ^ v243) >> 28;
  v250 = v249 ^ 0x8818A2E3A6EC3D6FLL;
  v249 ^= 0x7E12B8814uLL;
  v247 -= 0x77E75D1BB8384A85;
  v251 = (v250 ^ v247) + v249 - 2 * (v250 ^ v247);
  v252 = (((v247 ^ 0x77E75D1BB8384A84) + 1) ^ v247 ^ (v251 - ((2 * v251) & 0x103145C88F8F6AF6) - 0x77E75D1BB8384A85))
       + v249;
  v253 = v252 - ((2 * v252) & 0x28DEA3FFE1CB11D2) + 0x146F51FFF0E588E9;
  v254 = v253 ^ (v244 << 36);
  v255 = (v254 ^ 0x9BF39C0FF0E588E9) >> (v222 & 8 ^ 8) >> (v222 & 8);
  v256 = v22 + 795;
  LODWORD(v251) = *(unsigned __int8 *)(v256 + ((v248 >> 58) | 0x47));
  *v281 = v255 - ((2 * v255) & 0x6A) + 53;
  v257 = v248 ^ (65
                                * ((((((v251 >> 2) | ((_BYTE)v251 << 6)) ^ 0x62) >> 6) | (4 * (((v251 >> 2) | ((_BYTE)v251 << 6)) ^ 0x62))) ^ (v251 >> 3) & 6 ^ 0x30)) ^ (8 * v248) ^ (v248 >> 39) ^ (v248 << 25);
  v19[14] = BYTE6(v254) ^ 0xF3;
  v29[1] = BYTE2(v257) ^ 0x63;
  *v282 = v253 ^ 0xE9;
  *v283 = (BYTE4(v254) ^ 0xF) - ((2 * (BYTE4(v254) ^ 0xF)) & 0x24) + 18;
  *v284 = (HIBYTE(v254) ^ 0x9B) - ((2 * (HIBYTE(v254) ^ 0x9B)) & 0x6A) + 53;
  *v286 = BYTE2(v253) ^ 0xE5;
  v19[17] = v248 ^ (65
                  * ((((((v251 >> 2) | ((_BYTE)v251 << 6)) ^ 0x62) >> 6) | (4 * (((v251 >> 2) | ((_BYTE)v251 << 6)) ^ 0x62))) ^ (v251 >> 3) & 6 ^ 0x30)) ^ (8 * v248) ^ (v248 >> 39) ^ 0xA3;
  *v285 = (BYTE4(v257) ^ 0x42) - ((2 * BYTE4(v257)) & 0x6A) + 53;
  *v287 = (BYTE3(v253) ^ 0xF0) - 2 * ((BYTE3(v253) ^ 0xF0) & 0x1A ^ BYTE3(v253) & 8) + 18;
  v258 = (v230 ^ 0xC6683520BF85B23) & (v222 ^ 0x5D7E342DD6DAD756) ^ v240;
  v259 = v258 ^ v222 ^ 0xCE97DAA59CACF21DLL ^ ((v242 & (v234 ^ 0x9F8F6DDA418E7E68))
                                             - ((2 * (v242 & (v234 ^ 0x9F8F6DDA418E7E68))) & 0xD82C22EF6B13B568)
                                             + 0x6C161177B589DAB4);
  *v158 = (BYTE3(v257) ^ 0x95) - 2 * ((BYTE3(v257) ^ 0x95) & 0x1A ^ BYTE3(v257) & 8) + 18;
  v260 = ((v258 << 58) ^ 0xF400000000000000)
       - ((2 * ((v258 << 58) ^ 0xF400000000000000)) & 0xEFFFFFFFFFFFFFFFLL)
       + 0x756AE755DF55BD2FLL;
  v261 = (v260 ^ 0x8A9518AA20AA42D4) + (v260 ^ 0x756AE755DF55BD2FLL);
  v262 = v258 ^ 0x86C1996640AAFB19 ^ (((v258 >> 1) ^ 0x4E857063C9B0329ELL)
                                      - ((2 * ((v258 >> 1) ^ 0x4E857063C9B0329ELL)) & 0x3796F343A7953C48)
                                      + 0x1BCB79A1D3CA9E24);
  v263 = v262 & 0xFFFFFFBFFFFFFFFFLL ^ (v258 >> 6) ^ (v262 & 0x4000000000 | ((unint64_t)~(_DWORD)v258 << 63)) ^ 0x2742B831E4D8194;
  v264 = 0x50205662FAB5E881 - v261;
  v212 = (v263 & (v261 + 5)) == 0;
  v265 = v261 + 0x50205662FAB5E88BLL;
  if (!v212)
    v265 = v264;
  v266 = v263
       - 0x50205662FAB5E886
       + v265
       - ((2 * (v263 - 0x50205662FAB5E886 + v265)) & 0x2C8761C302305D70)
       + 0x1643B0E181182EB8;
  *v288 = (BYTE5(v254) ^ 0x9C) - ((2 * (BYTE5(v254) ^ 0x9C)) & 0x6A) + 53;
  v267 = ((v259 << 54) ^ 0x4D00000000000000) - ((v259 << 55) & 0x6500000000000000) + 0x32A58B17089B5C98;
  *v289 = (BYTE1(v257) ^ 0x96) - ((2 * (BYTE1(v257) ^ 0x96)) & 0x24) + 18;
  v268 = *(unsigned __int8 *)(v256 + (((v257 >> 37) & 0xF8 | (v257 >> 45) & 7) ^ 0x54));
  *v29 = BYTE6(v257) ^ 0xF8;
  *v155 = v266 ^ 0xB8;
  v269 = ((((v267 ^ 0x32A58B17089B5C98) & 0xFFFF800000000000 | (v259 >> 17)) ^ 0x75B1976648A8)
        + 2
        * (((v259 >> 17) ^ 0x75B1976648A8)
         + ((v259 >> 17) ^ 0x7FFF8A4E6899B757)
         + (v267 ^ 0x32A58B17089B5C98)
         + (v267 ^ 0x4D5A74E8F764A367))
        + 4) ^ (((v259 >> 10) ^ 0x3AD8CBB324540CLL)
              + (v259 ^ 0xEB632ECC91503134)
              - 2 * (((v259 >> 10) ^ 0x3AD8CBB324540CLL) & (v259 ^ 0x6B632ECC91503134)));
  v270 = v236 ^ (v236 << 23) ^ ((v236 >> 7) ^ (v236 >> 41) | (v236 << 57));
  *v290 = 65 * (v268 ^ 0xB9 ^ (v268 >> 3) & 6) + (~(2 * (v268 ^ 0xB9 ^ (v268 >> 3) & 6)) | 0xDB) + 19;
  v29[2] = HIBYTE(v257) ^ 0xB0;
  v271 = *(unsigned __int8 *)(v256 + (((v266 >> 5) & 0xF8 | ((unsigned __int16)v266 >> 13)) ^ 0xE));
  v19[23] = BYTE2(v266) ^ 0x18;
  v19[1] = BYTE6(v266) ^ 0x43;
  v19[5] = BYTE3(v269);
  v272 = v269 ^ (v259 << 47);
  v29[3] = 65 * (v271 ^ 0xB9 ^ (v271 >> 3) & 6);
  v19[19] = BYTE4(v266) ^ 0xE1;
  *v19 = BYTE3(v266) ^ 0x81;
  v19[12] = ((v266 ^ v260) >> 56) ^ 0x63;
  v19[2] = BYTE1(v269);
  v19[18] = BYTE2(v269);
  v19[11] = BYTE4(v269);
  v19[15] = v236 ^ (v236 >> 7) ^ (v236 >> 41) ^ 0xA8;
  v19[22] = v269;
  v19[6] = HIBYTE(v272) ^ 0x18;
  v19[20] = BYTE5(v266) ^ 0xB0;
  v19[16] = BYTE5(v272);
  v19[10] = BYTE6(v272) ^ 0x9A;
  v273 = 93 * (HIWORD(v270) ^ 0x6B);
  v19[4] = (*(_BYTE *)(v24
                     + ((93 * (((unsigned __int16)(v236 ^ (v236 >> 7) ^ (v236 >> 41)) >> 8) ^ 0x3F)) ^ 0xDDLL)) ^ 0x9F)
         + 70;
  v19[21] = ((v236 ^ ((_DWORD)v236 << 23) ^ (v236 >> 7) ^ (v236 >> 41)) >> 16) ^ 0x90;
  LODWORD(v269) = ((((v270 >> 52) ^ 0x22A80E2E) & 0x2200E26) - ((2 * ((v270 >> 52) ^ 0x22A80E2E)) & 0x40084C) + 762164350) ^ ((v270 >> 52) ^ 0x22A80E2E) & 0x2200ED6;
  v274 = (v269 & 0x16C4B5E ^ 0x10324900) + (v269 ^ 0x2F4DB65E) - ((v269 ^ 0x2F4DB65E) & 0x1604B5E);
  v275 = *(_BYTE *)(v24
                  + (((93
                                      * (((v236 ^ ((_DWORD)v236 << 23) ^ (v236 >> 7) ^ (v236 >> 41)) >> 24) ^ 0x1D)) & 0xFC | (((v236 ^ ((_DWORD)v236 << 23) ^ (v236 >> 7) ^ (v236 >> 41)) >> 24) ^ 0x1D) & 3) ^ 0xDD));
  v19[7] = BYTE5(v270) ^ 0xC5;
  v19[8] = BYTE4(v270) ^ 0x46;
  v19[9] = (v275 ^ 0x9F) + 70;
  v276 = ((v270 >> 60) ^ 0xFDBFFFB3) + 37748802 + ((2 * (v270 >> 60)) & 0x1C ^ 0x18);
  v277 = *(_BYTE *)(v24 + ((v273 & 0x94 ^ (v273 & 2 | 0x94) | (v273 & 0x29 | 0x40) ^ v273 & 0x40u) ^ 9));
  v278 = v277 ^ 0x80;
  if (v126 == 0x425672A150A4C5C6)
    v278 = 70;
  v19[3] = ((2 * (v277 & 0xC6 & v278)) ^ 0xC) + ((v277 & 0xC6 & v278 | v277 & 0xB9 ^ 0x99) ^ 0x40);
  v19[13] = ((*(_BYTE *)(v39
                       + (((v274 ^ 0xB979F6C6 ^ (((v276 - (v274 ^ 0x135E49CE | v276)) ^ ((v274 ^ 0xECA1B631) + 1))
                                               - ((2 * ((v276 - (v274 ^ 0x135E49CE | v276)) ^ ((v274 ^ 0xECA1B631) + 1))) & 0x544F7E10)
                                               - 1440235768))
                         + v276) ^ 0x7ELL))
            - 68) ^ 0xF4)
          - 97;
  *v280 = v291 + 1;
  *v279 = v254 ^ 0x9FFB9610D479B50DLL;
  return result;
}

void sub_1CF3631CC(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 - 1779465991 * ((2 * (a1 & 0x1363FC2D) - (_DWORD)a1 - 325319726) ^ 0xCA58851C);
  __asm { BR              X10 }
}

uint64_t sub_1CF363274@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (v1 ^ 0x34E)))(24) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 | (8 * v3))) - 4))();
}

uint64_t sub_1CF3632A8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  int v3;
  uint64_t result;
  unsigned int v6;
  uint64_t v7;

  v7 = a1;
  v6 = v3 - 4342687 * ((&v6 & 0x93E249A5 | ~(&v6 | 0x93E249A5)) ^ 0x45BFA118) + 11;
  result = sub_1CF35D338((uint64_t)&v6);
  *v2 = a1;
  *(_DWORD *)(v1 + 4) = 1749540472;
  return result;
}

void sub_1CF36333C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) - 55633441 * (((a1 | 0xB175B66B) - (a1 & 0xB175B66B)) ^ 0x89F68DD4);
  __asm { BR              X10 }
}

uint64_t sub_1CF3633CC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  _QWORD *v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((1816 * (((*v2 == 0) ^ (v1 - 73)) & 1)) ^ v1))
                            - (v1 + 1075)
                            + 1759))();
}

uint64_t sub_1CF363414@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)((19 * (*(_QWORD *)(v2 + 8) == 0)) ^ v1 & 0x9CB2BAFF))
                            - (((v1 & 0x9CB2BAFF) + 13 + 64) ^ ((v1 & 0x9CB2BAFF) + 73))))();
}

uint64_t sub_1CF363454()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t result;

  result = sub_1CF370D34();
  *v1 = 0;
  *(_DWORD *)(v0 + 12) = 1167607161;
  return result;
}

void sub_1CF36348C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v4;
  int v6;

  if (a1)
    v4 = a3 == 0;
  else
    v4 = 1;
  v6 = !v4 && a4 != 0;
  __asm { BR              X8 }
}

uint64_t sub_1CF363550(unint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);

  STACK[0x208] = a1;
  STACK[0x210] = a3;
  STACK[0x218] = a4;
  STACK[0x200] = (unint64_t)&STACK[0x7CDE0F94DC9255DC];
  STACK[0x238] = (unint64_t)&STACK[0x703BDE3807C32029];
  STACK[0x288] = (unint64_t)&STACK[0x703BDE3807C31FE9];
  STACK[0x258] = (unint64_t)&STACK[0x703BDE3807C31FF1];
  *(_DWORD *)(v6 - 192) = (248152243 * ((2 * ((v6 - 192) & 0x1FCBD8B0) - (v6 - 192) + 1614030664) ^ 0x7AF16AEA)) ^ 0x56EDD32D;
  STACK[0x2E0] = v4;
  v8 = sub_1CF370E18((_DWORD *)(v6 - 192));
  v9 = *(uint64_t (**)(uint64_t))(STACK[0x2E0] + 8 * ((35 * (a2 != 0)) ^ 0x51Fu));
  STACK[0x230] = *(_QWORD *)(v5 + 840);
  return v9(v8);
}

uint64_t sub_1CF3636A0()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  unint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  LOBYTE(STACK[0x2FF]) = v2 == 0;
  STACK[0x470] = v1;
  LODWORD(STACK[0x478]) = 298011288;
  STACK[0x480] = 0;
  STACK[0x488] = 0x17EB90158;
  LODWORD(STACK[0x490]) = 1930135378;
  LODWORD(STACK[0x494]) = 2;
  STACK[0x498] = v1;
  LODWORD(STACK[0x4A0]) = -809229169;
  STACK[0x4A8] = v2;
  STACK[0x4B0] = 0x30DC45875;
  LODWORD(STACK[0x4B8]) = 1930135398;
  LODWORD(STACK[0x4BC]) = 2;
  STACK[0x300] = (unint64_t)&STACK[0x35854D317B1D6B38];
  LODWORD(STACK[0x41C]) = 0;
  v4 = v0(128);
  v5 = *(_QWORD *)(STACK[0x2E0] + 8 * ((115 * (v4 != 0)) ^ (v3 - 875504192)));
  STACK[0x380] = v4 + 0x29E41201BECB398ELL;
  return ((uint64_t (*)(void))(v5
                            - (((v3 - 875503956) | 0x1C1u)
                             + ((v3 - 875503956) ^ 0xFFFFFFFFFFFFFE3BLL))))();
}

uint64_t sub_1CF363898()
{
  int v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  unint64_t v3;

  v2 = v1(112);
  v3 = STACK[0x2E0];
  STACK[0x3C0] = v2 + 0xFCF3D5A857A9B08;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v0 - 148681714) & 0x8DCB17D) + ((v0 - 999808630) & 0x3B97DBB7) + 1381) * (v2 == 0)) ^ v0)))();
}

uint64_t sub_1CF363910(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  unint64_t v4;
  _BOOL4 v6;

  *(_WORD *)(a1 + 80) = 25175;
  *(_QWORD *)a1 = 0x65EE1E795321A838;
  memset((void *)(a1 + 8), 79, 64);
  *(_QWORD *)(a1 + 72) = 0x116585BF116585BFLL;
  v4 = STACK[0x3C0];
  *(_DWORD *)(STACK[0x3C0] - 0xFCF3D5A857A9AB4) = 1095089643;
  *(_DWORD *)(v4 - 0xFCF3D5A857A9AA0) = 2126566836;
  memset((void *)(v4 - 0xFCF3D5A857A9AB0), 79, 16);
  *(_BYTE *)(v4 - 0xFCF3D5A857A9A9CLL) = 42;
  v6 = v4 != v2 && STACK[0x380] != 0x29E41201BECB398ELL;
  return (*(uint64_t (**)(void))(a2 + 8 * ((v6 * (((v3 - 39) | 0x71) + 1058)) ^ v3)))();
}

uint64_t sub_1CF363A2C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  _DWORD *v3;
  _DWORD *v4;
  _BYTE *v5;

  STACK[0x2D0] = a1 - 0xFCF3D5A857A9AAFLL;
  STACK[0x2C0] = a1 - 0xFCF3D5A857A9AAELL;
  STACK[0x2B0] = a1 - 0xFCF3D5A857A9AADLL;
  STACK[0x2A0] = a1 - 0xFCF3D5A857A9AACLL;
  STACK[0x290] = a1 - 0xFCF3D5A857A9AABLL;
  STACK[0x270] = a1 - 0xFCF3D5A857A9AAALL;
  STACK[0x260] = a1 - 0xFCF3D5A857A9AA9;
  STACK[0x240] = a1 - 0xFCF3D5A857A9AA7;
  STACK[0x220] = a1 - 0xFCF3D5A857A9B08;
  *(_DWORD *)(v2 - 0x29E41201BECB397ELL) = *(_DWORD *)(a1 - 0xFCF3D5A857A9B08);
  *(_DWORD *)(v2 - 0x29E41201BECB3936) = *(_DWORD *)(a1 - 0xFCF3D5A857A9AC0);
  *(_DWORD *)(v2 - 0x29E41201BECB3932) = *(_DWORD *)(a1 - 0xFCF3D5A857A9ABCLL);
  *(_BYTE *)(v2 - 0x29E41201BECB392ELL) = *(_BYTE *)(a1 - 0xFCF3D5A857A9AB8);
  *(_BYTE *)(v2 - 0x29E41201BECB392DLL) = *(_BYTE *)(a1 - 0xFCF3D5A857A9AB7);
  *(_DWORD *)(v2 - 0x29E41201BECB3916) = *v4;
  *(_DWORD *)(v2 - 0x29E41201BECB392ALL) = *v3;
  *(_BYTE *)(v2 - 0x29E41201BECB3912) = (1 - *v5) & 1 ^ 0xAB;
  *(_BYTE *)(v2 - 0x29E41201BECB3957) = *((_BYTE *)*(&off_1E8C4D9A0 + v1 - 350) + 11) ^ 0x61 ^ *((_BYTE *)*(&off_1E8C4D9A0 + v1 - 276)
                                                                                                 + 13) ^ *((_BYTE *)*(&off_1E8C4D9A0 + ((v1 + 650) ^ 0x3AA)) + 16) ^ (*(_BYTE *)(a1 - 0xFCF3D5A857A9AE1) + (*(_BYTE *)(a1 - 0xFCF3D5A857A9AE1) | 0x1B) + ((((v1 + 6) & 0xEE) - 103) ^ *(_BYTE *)(a1 - 0xFCF3D5A857A9AE1) | 0x1B) - 105);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2E0] + 8 * (v1 + 650)) - 8))();
}

void sub_1CF363D88()
{
  JUMPOUT(0x1CF363CF0);
}

uint64_t sub_1CF363D90(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(a2 + 8 * ((23 * (v3 != -1393729084)) ^ v2)))();
}

uint64_t sub_1CF363DD0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v4 = STACK[0x358];
  *(_DWORD *)(v3 - 168) = (v0 - 776) ^ (1894094617
                                      * ((2 * ((v3 - 192) & 0x75726038) - (v3 - 192) + 177053637) ^ 0x17825155));
  *(_QWORD *)(v3 - 192) = STACK[0x258];
  *(_QWORD *)(v3 - 176) = v4;
  v5 = ((uint64_t (*)(uint64_t))((char *)*(&off_1E8C4D9A0 + (v0 ^ 0x438)) - 12))(v3 - 192);
  return ((uint64_t (*)(uint64_t))(3419463084
                                          - (v0 - v2 - 843)
                                          + *(_QWORD *)(STACK[0x2E0]
                                                      + 8
                                                      * (int)(((*(_DWORD *)(v3 - 184) == v1)
                                                             * (v2 + ((v0 + 147871789) | 0xC3008110) - 103)) ^ v0))))(v5);
}

uint64_t sub_1CF363EA0@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t a65;
  int v65;
  int v66;
  uint64_t v67;
  unint64_t v68;
  BOOL v70;

  v67 = *(_QWORD *)(a1 + 8 * (a2 - 291)) - 12;
  v68 = STACK[0x360];
  STACK[0x408] = v67;
  LODWORD(STACK[0x344]) = 863610396;
  STACK[0x370] = a65;
  STACK[0x3B0] = v68;
  v70 = a65 == 0x24CC9A478416F3DCLL || v68 == 0x29E41201BECB398ELL;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((420 * (((v66 + v65 - 1) ^ v70) & 1)) ^ (v66 + v65 + 272)))
                            - 4))();
}

uint64_t sub_1CF36890C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  unint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  _BOOL4 v9;

  LODWORD(STACK[0x220]) = v4;
  v5 = (v3 - 272) | 0xE0;
  v6 = *(_QWORD *)(a2 - 0x29E41201BECB3986);
  STACK[0x3F8] = (v5 + 181) + *(_QWORD *)(a1 + 8 * v5) - 433;
  v7 = v5 + 181;
  STACK[0x350] = v2;
  STACK[0x328] = 0x23120F4208F8DDDLL;
  STACK[0x3E8] = 0x4D25BF81502D6B0DLL;
  v9 = v6 != 0x373C0AAD4CE136CBLL && v2 != 0x24CC9A478416F3DCLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((v9 * (((v7 - 397) | 0x18) ^ 0x319)) ^ v7))
                            - ((v7 - 271327670) & 0xDBFCFDB8 ^ 0xCBD0DDB8)))();
}

uint64_t sub_1CF36894C()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1CF368958(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * (((4 * (((v3 == v2) ^ (v4 + v5 + 65)) & 1)) & 0xEF | (16 * (((v3 == v2) ^ (v4 + v5 + 1089)) & 1))) ^ (v4 + v5 + 860)))
                            - 8))();
}

uint64_t sub_1CF368990(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v4;
  unint64_t v5;

  LOBYTE(STACK[0x3E7]) = STACK[0x2FF];
  LODWORD(STACK[0x42C]) = v2;
  v5 = STACK[0x258];
  STACK[0x330] = *(_QWORD *)(a2 + 8 * (v3 - 875504291));
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((428
                                          * (((v5 == 0x703BDE3807C31C91) ^ (v4
                                                                                             + ((v3 - 118) | 0x64)
                                                                                             + 1)) & 1)) ^ ((v3 - 875503990) | 0x64)))
                            - 8))();
}

uint64_t sub_1CF3689A0@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  int v2;
  unint64_t v3;

  v3 = STACK[0x360];
  STACK[0x3A8] = STACK[0x360];
  return ((uint64_t (*)(void))(3419463084
                            - (a2 ^ (v2 - 1239))
                            + *(_QWORD *)(a1 + 8 * ((234 * (v3 == 0x29E41201BECB398ELL)) ^ a2))
                            - 4))();
}

void sub_1CF3689F0()
{
  JUMPOUT(0x1CF368BCCLL);
}

uint64_t sub_1CF3689FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  v6 = *(_QWORD *)(v2 - 0x29E41201BECB3986);
  STACK[0x310] = *(_QWORD *)(a2 + 8 * (v4 + v3 - 156)) - 12;
  return (*(uint64_t (**)(void))(a2
                              + 8 * (((v6 == 0x373C0AAD4CE136CBLL) * (37 * (v3 ^ (v5 + 8)) - 268)) ^ (v4 + v3 + 549))))();
}

uint64_t sub_1CF368AC4()
{
  return ((uint64_t (*)(void))STACK[0x310])();
}

uint64_t sub_1CF368AD4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;

  STACK[0x3D8] = 0x23120F4208F8DDDLL;
  STACK[0x3D0] = 0;
  STACK[0x320] = 0x4856423771A0B029;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((26 * (((a2 == v3) ^ (v2 + 1)) & 1)) ^ v2)) - 4))();
}

uint64_t sub_1CF368B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a65;
  int v65;
  int v66;
  _BOOL4 v68;

  v66 = v65 - 249;
  STACK[0x2E8] = *(_QWORD *)(a2 + 8 * v66);
  LODWORD(STACK[0x220]) = 1275383445;
  v68 = a9 != 0x373C0AAD4CE136CBLL && a65 != 0x7CDE0F94DC9252B4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(3419463084 - ((268 * (((v66 + 275) | 0x400) ^ 0x541) - 1047527844) | 0xA40DC30u) + *(_QWORD *)(a2 + 8 * ((907 * v68) ^ ((v66 + 275) | 0x400))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_1CF368B5C(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v4;
  unint64_t v5;

  *(_QWORD *)STACK[0x208] = LODWORD(STACK[0x3F4]);
  *(_QWORD *)STACK[0x210] = STACK[0x378];
  *(_DWORD *)STACK[0x218] = LODWORD(STACK[0x348]) ^ v3;
  LOBYTE(STACK[0x3E7]) = STACK[0x2FF];
  LODWORD(STACK[0x42C]) = -1393729084;
  v5 = STACK[0x258];
  STACK[0x330] = *(_QWORD *)(a2 + 8 * (v2 - 875504291));
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((428
                                          * (((v5 == 0x703BDE3807C31C91) ^ (v4
                                                                                             + ((v2 - 118) | 0x64)
                                                                                             + 1)) & 1)) ^ ((v2 - 875503990) | 0x64)))
                            - 8))();
}

uint64_t sub_1CF368C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;

  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (((*(_QWORD *)(a3 + v5) == v6) * ((v8 + (v3 ^ v4) - 1530) ^ ((v3 ^ v4) - v7 - 1246))) ^ v3 ^ v4)))();
}

uint64_t sub_1CF368CCC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X4>, unint64_t a5@<X5>, int a6@<W8>)
{
  int v6;
  int v7;

  STACK[0x290] = a4;
  STACK[0x2A0] = a3;
  STACK[0x2B0] = a1;
  STACK[0x2C0] = a5;
  return (*(uint64_t (**)(void))(a2 + 8
                                   * (((a5 != 0x29E41201BECB3986) * ((a6 ^ (v7 + 114)) + 665)) ^ (v6 + a6 + 618))))();
}

uint64_t sub_1CF368D2C(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  _QWORD *v4;
  int v5;
  int v6;
  int v7;

  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)(((((v2 + v5) | 0x41101DA0) ^ (v7 + 113) ^ (v2 + v6) & 0x896E63FF) * (*v4 != v3)) ^ v2)))();
}

uint64_t sub_1CF368D74@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 - 0x373C0AAD4CE136CBLL);
  STACK[0x2D0] = (unint64_t)v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((*v4 + v3 != 0x5D6C30A1D7CACFECLL)
                                          * ((((a2 - 141997049) & 0x876B3D3) - 258) ^ 0x2E5)) ^ a2))
                            - 12))();
}

uint64_t sub_1CF368DE4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v3 = sub_1CF370D34();
  v4 = STACK[0x2E0];
  *v1 = 0x373C0AAD4CE136CBLL;
  return ((uint64_t (*)(uint64_t, unint64_t))(v2 + v0))(v3, v4);
}

void sub_1CF368E30()
{
  JUMPOUT(0x1CF368CFCLL);
}

uint64_t sub_1CF368E58()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  v4 = sub_1CF370D34();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x2E0]
                                                      + 8
                                                      * (((((v0 + v1 == 0x5D6C30A1D7CACFECLL) ^ (v2 + 36)) & 1)
                                                        * v3) ^ v2))
                                          - 12))(v4);
}

uint64_t sub_1CF368EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * (((*(_QWORD *)(v2 - 0x23120F4208F8DC5) != 0) * (((v3 - 509) | 0x324) - 941)) ^ v3))
                            - 4))();
}

uint64_t sub_1CF368F0C()
{
  _QWORD *v0;

  sub_1CF370D34();
  *v0 = 0;
  return sub_1CF368E58();
}

uint64_t sub_1CF368F1C()
{
  int v0;
  int v1;

  sub_1CF370D34();
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x2E0]
                                                               + 8
                                                               * (((v0 + v1 - 284)
                                                                 * (STACK[0x2A0] != 0x703BDE3807C31C91)) ^ (v0 + v1 + 318)))
                                                   - 8))(STACK[0x2B0]);
}

uint64_t sub_1CF368FBC()
{
  _QWORD *v0;

  *v0 = 0x29E41201BECB398ELL;
  return ((uint64_t (*)(void))STACK[0x330])();
}

void sub_1CF368FD8()
{
  JUMPOUT(0x1CF368C64);
}

uint64_t sub_1CF369000(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((30 * LOBYTE(STACK[0x3E7])) ^ (v2 + v3 + 1093))) - 4))();
}

uint64_t sub_1CF369024()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  int v4;

  *(_QWORD *)(v2 - 192) = &STACK[0x430];
  *(_DWORD *)(v2 - 180) = v1
                        - 1425831821 * ((v2 - 1175474423 - 2 * ((v2 - 192) & 0xB9EFAFC9)) ^ 0xE9C23311)
                        - 1421302266;
  sub_1CF370220(v2 - 192);
  v3 = STACK[0x2E0];
  v4 = STACK[0x42C];
  LODWORD(STACK[0x284]) = STACK[0x42C];
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((228 * (((v4 == -1393729084) ^ (v0 - 39)) & 1)) ^ (v0 + 1341))))();
}

uint64_t sub_1CF3690C0@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  char v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8 * ((1501 * (((STACK[0x378] == 0) ^ (v2 + a2)) & 1)) ^ a2))
                            - 12))();
}

uint64_t sub_1CF3690F0()
{
  unsigned int v0;
  int v2;

  sub_1CF370D34();
  return v2 ^ v0;
}

uint64_t sub_1CF3691B4(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;

  v6 = v3 != ((83 * (v5 ^ (v5 + 3))) ^ (v2 - 135));
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((8 * v6) | (v6 << 6) | (v4 + v5 + 1166))) - 12))();
}

void sub_1CF3691F4(uint64_t a1, uint64_t a2)
{
  int v2;

  LODWORD(STACK[0x220]) = STACK[0x344];
  STACK[0x3F8] = *(_QWORD *)(a2 + 8 * v2);
  JUMPOUT(0x1CF369224);
}

void sub_1CF3692D4()
{
  uint64_t v0;

  STACK[0x2E8] = *(_QWORD *)(STACK[0x2E0] + 8 * v0) + 673 * (v0 ^ 0x3A) - 1358;
  JUMPOUT(0x1CF369310);
}

uint64_t sub_1CF369390@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v2;
  unint64_t v3;

  v3 = *(_QWORD *)(a2 - 0x373C0AAD4CE136CBLL);
  STACK[0x338] = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((v3 != 0x23120F4208F8DDDLL) * (((v2 ^ 0x301) + 1309) ^ 0x534)) ^ v2 ^ 0x181))
                            - 4))();
}

uint64_t sub_1CF369414@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t (*v2)(void);
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v2 = (uint64_t (*)(void))((a2 ^ 0x134) + *(_QWORD *)(a1 + 8 * a2) - 281);
  v3 = STACK[0x468] - 0x4856423771A0B025;
  STACK[0x2D0] = ((((a2 ^ 0x134) + 1224774783) | 0x82D04820) ^ v3 ^ 0x9DFEFEED207EBACBLL)
               + ((2 * v3) & 0x3BFDFDDBD75CCEF6)
               + 0x77A7CF7E3453FF96;
  v4 = STACK[0x458];
  STACK[0x2C0] = STACK[0x458];
  v5 = STACK[0x450];
  STACK[0x2A0] = ((v4 - 0x4D25BF81502D6B09) ^ 0xF7AFCEFE7EAAEF59)
               + 0x1DF6FF6DA15777B8
               + ((2 * (v4 - 0x4D25BF81502D6B09)) & 0xEF5F9DFCFD55DEB2);
  STACK[0x290] = ((v3 + 2) ^ 0xF799FE67BFF7AF5FLL) + 0x1FFFDFFFC5F9D7E6 + ((2 * (v3 + 2)) & 0xEF33FCCF7FEF5EBELL);
  STACK[0x270] = ((v4 - 0x4D25BF81502D6B07) ^ 0x57F9FEEF8FF9C76FLL)
               - 0x406020880A08402ALL
               + ((2 * (v4 - 0x4D25BF81502D6B07)) & 0xAFF3FDDF1FF38EDELL);
  STACK[0x2B0] = v5;
  STACK[0x260] = v5 + 2711416688u;
  STACK[0x240] = ((v4 - 0x4D25BF81502D6B03) ^ 0x379DDFF7E7F597FDLL)
               - 0x20040190620410B8
               + ((2 * (v4 - 0x4D25BF81502D6B03)) & 0x6F3BBFEFCFEB2FFALL);
  return v2();
}

uint64_t sub_1CF369ECC()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2E0] + 8 * (v0 + v1 - 234)) - 12))();
}

void sub_1CF36A400()
{
  __int16 v0;

  LOWORD(STACK[0x44E]) = v0;
  JUMPOUT(0x1CF36970CLL);
}

uint64_t sub_1CF36A41C()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1CF36A454(uint64_t a1, uint64_t a2, int a3)
{
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2E0]
                                        + 8 * ((1732 * ((a3 ^ v3) != LODWORD(STACK[0x220]) - 1478142300)) ^ 0x2A5))
                            - 4))();
}

void sub_1CF36A4B4()
{
  JUMPOUT(0x1CF3693ACLL);
}

uint64_t sub_1CF36A4D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 0x7CDE0F94DC9252B4) = v0;
  return ((uint64_t (*)(void))STACK[0x2E8])();
}

uint64_t sub_1CF36A4F4(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((1712 * (v2 == ((381 * (v4 ^ (v4 + 3))) ^ 0xACED65B3))) ^ (v3 + v4 + 133)))
                            - 8))();
}

uint64_t sub_1CF36A544()
{
  int v0;
  unint64_t v1;

  v1 = *(_QWORD *)(STACK[0x328] - 0x23120F4208F8DC5);
  STACK[0x368] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2E0] + 8 * (v0 ^ (8 * (v1 == 0)))) - ((v0 - 1143) | 0x1ADu) + 425))();
}

uint64_t sub_1CF36A5A8@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;
  unint64_t v3;

  v2 = (v1 - 1508655795);
  STACK[0x450] = v2;
  v3 = STACK[0x3E8];
  STACK[0x458] = STACK[0x3E8];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2E0]
                                        + 8
                                        * ((936
                                          * (v2 + 0x4D25BF81502D6B0DLL - v3 > ((a1 - 2028806062) & 0x78ED1E12 ^ 0x1BuLL))) ^ a1))
                            - 8))();
}

void sub_1CF36A628()
{
  JUMPOUT(0x1CF369460);
}

uint64_t sub_1CF36A664(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  if (v2 == -1393729084)
  {
    v6 = STACK[0x3A0];
    v7 = *(_QWORD *)(STACK[0x3A0] - 0x23120F4208F8DD5);
    v8 = STACK[0x390];
    *(_QWORD *)(STACK[0x390] - 0x23120F4208F8DD5) = v7;
    *(_QWORD *)(v8 - 0x23120F4208F8DDDLL) = *(_QWORD *)(v6 - 0x23120F4208F8DDDLL);
    return (*(uint64_t (**)(void))(a2 + 8 * ((50 * (v7 != 0x23120F4208F8DDDLL)) ^ (v3 + v4 + 305))))();
  }
  else if (v2 == 1393700935)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(a2
                                                                 + 8
                                                                 * ((78
                                                                   * (((*(_QWORD *)(STACK[0x410] - 0x373C0AAD4CE136C3) == 0x23120F4208F8DDDLL) ^ 0xC3) & 1)) ^ 0x506))
                                                     - 4))(a1, a2);
  }
  else
  {
    return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                          + 8
                                          * ((1778
                                            * (((*(_QWORD *)(STACK[0x390] - 0x23120F4208F8DC5) == 0) ^ 0x41) & 1)) ^ 0x341))
                              - 8))();
  }
}

uint64_t sub_1CF36A720@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 0x23120F4208F8DDDLL) = v1;
  *(_QWORD *)(v1 - 0x23120F4208F8DD5) = *a1;
  *a1 = v1;
  return ((uint64_t (*)(void))STACK[0x318])();
}

uint64_t sub_1CF36A7BC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  int v3;
  uint64_t v4;
  unint64_t v5;

  v3 = 65 * (a1 ^ 0x342);
  v4 = sub_1CF370D34();
  v5 = STACK[0x2E0];
  *v2 = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * (v3 ^ (1113 * (v1 != 0x23120F4208F8DDDLL))))
                                          + 3419463084
                                          - ((v3 - 606274310) & 0xEFF3DFF2)
                                          - 8))(v4);
}

uint64_t sub_1CF36A834(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((v4 + v3) ^ (2003 * (v2 == -1393729084)))) - 4))();
}

uint64_t sub_1CF36A860(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  unint64_t v3;

  v3 = *(_QWORD *)(STACK[0x3D8] - 0x23120F4208F8DC5);
  STACK[0x420] = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((1940 * (v3 != 0)) ^ 0x128u)) - (v2 ^ 0xCBD0DDB4)))();
}

uint64_t sub_1CF36A8D4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  unint64_t v4;
  unint64_t v5;

  v4 = (v2 - 1508655795);
  STACK[0x460] = v4;
  v5 = STACK[0x320];
  STACK[0x468] = STACK[0x320];
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((1902
                                          * (v4 - v5 + 0x4856423771A0B029 > (unint64_t)(a2 - v3)
                                                                            - 3419463079u)) ^ a2))
                            - (a2 ^ 0x131)
                            + 21))();
}

void sub_1CF36A94C()
{
  JUMPOUT(0x1CF369460);
}

uint64_t sub_1CF36A988(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3
                                                               + 8
                                                               * ((v1 + 146) ^ (1113 * (v2 != 0x23120F4208F8DDDLL))))
                                                   + 3419463084
                                                   - ((v1 - 606274164) & 0xEFF3DFF2)
                                                   - 8))(a1, v3);
}

uint64_t sub_1CF36A9F0()
{
  uint64_t v0;

  v0 = sub_1CF370D34();
  return ((uint64_t (*)(uint64_t, unint64_t))STACK[0x318])(v0, STACK[0x2E0]);
}

uint64_t sub_1CF36AA10()
{
  int v0;
  int v1;

  v1 = LOWORD(STACK[0x43E]);
  STACK[0x3E8] = STACK[0x440];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2E0] + 8 * ((550 * (v1 == 15177)) ^ (v0 - 875503353))) - 4))();
}

void sub_1CF36AA78(int a1@<W2>, int a2@<W8>)
{
  *(_DWORD *)(STACK[0x350] - 0x24CC9A478416F3DCLL) = (((a2 + 176162387) | 0xC150D5B0) - 254472377) ^ a1;
  JUMPOUT(0x1CF36AAC0);
}

uint64_t sub_1CF36AADC()
{
  return ((uint64_t (*)(void))STACK[0x408])();
}

uint64_t sub_1CF36AAEC(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  unint64_t v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v4 = STACK[0x468] + (a3 ^ v3) - 0x4856423738DD2FADLL;
  v5 = v4 < 0x38C38072;
  v6 = v4 > STACK[0x460] + 952336498;
  if (STACK[0x460] > 0xFFFFFFFFC73C7F8DLL != v5)
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2E0] + 8 * ((19 * !v6) ^ 0x128)) - 4))();
}

uint64_t sub_1CF36AB8C@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  unint64_t v7;
  int v8;

  v7 = v3 + 10;
  v8 = LOWORD(STACK[0x44E]);
  if (v8 == 10427 || v8 == 15177)
    goto LABEL_5;
  if (v8 == 64741)
  {
    STACK[0x3D0] = STACK[0x420] + a3 - 0x4856423771A0B01FLL;
LABEL_5:
    STACK[0x320] = v7;
    LODWORD(STACK[0x348]) = a2;
    return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((1792 * (v8 == (unsigned __int16)(v6 + v4 - 1091))) ^ (v6 + v4)))
                              - 4))();
  }
  STACK[0x378] = 0;
  LODWORD(STACK[0x348]) = v5;
  return ((uint64_t (*)(void))STACK[0x310])();
}

uint64_t sub_1CF36BF1C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 + v5) = a2;
  return (*(uint64_t (**)(void))(a1 + 8 * ((358 * (*v2 != v4)) ^ 0x4B0u)))();
}

uint64_t sub_1CF36BF64@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  int v4;

  *(_QWORD *)(v3 - 0x23120F4208F8DD5) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((2041 * (*v2 == 0x23120F4208F8DDDLL)) ^ ((v4 - 1176) | 0x320)))
                            - ((((v4 - 1176) | 0x320) - 500) | 0x408u)
                            + 1348))();
}

uint64_t sub_1CF36BFC8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  int v3;

  *(_QWORD *)(STACK[0x410] - 0x373C0AAD4CE136CBLL) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((27 * (((*v2 == 0x23120F4208F8DDDLL) ^ (v3 - 121)) & 1)) ^ (v3 + 532)))
                            - 12))();
}

void sub_1CF36C040(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  *(_QWORD *)(v1 - 0x373C0AAD4CE136CBLL) = v2;
  JUMPOUT(0x1CF36C058);
}

uint64_t sub_1CF36C06C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(a2 + 8 * ((358 * (v2 != v3)) ^ 0x4B0u)))();
}

uint64_t sub_1CF36C0A4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((2041 * (*v2 == 0x23120F4208F8DDDLL)) ^ v3))
                            - ((v3 - 500) | 0x408u)
                            + 1348))();
}

uint64_t sub_1CF36C0E8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((27 * (((*v2 == 0x23120F4208F8DDDLL) ^ (v3 + 115)) & 1)) ^ v3))
                            - 12))();
}

uint64_t sub_1CF36C140@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)(STACK[0x410] - 0x373C0AAD4CE136C3) = a1;
  return sub_1CF36C170();
}

uint64_t sub_1CF36C170(uint64_t a1, uint64_t a2)
{
  int v2;

  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((((9 * (v2 ^ 0x174)) ^ (3 * (v2 ^ 0x12B)) ^ 0x6AC)
                                * (*(_QWORD *)(STACK[0x3A0] - 0x23120F4208F8DC5) == 0)) ^ v2)))();
}

uint64_t sub_1CF36C1C4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((a2 != 0x23120F4208F8DDDLL) * (v2 ^ 0x714)) ^ v2))
                            + 3419463084
                            - ((v2 + 42993135) | 0xC940D0B0)
                            - 4))();
}

void sub_1CF36C248()
{
  sub_1CF370D34();
  STACK[0x3A0] = 0x23120F4208F8DDDLL;
  JUMPOUT(0x1CF36C278);
}

uint64_t sub_1CF36C280(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8 * (((v4 ^ (v4 - 353) ^ 0x1E1) * (v2 != -1393729084)) ^ (v3 + v4 + 132)))
                            - 8))();
}

uint64_t sub_1CF36C2BC()
{
  return ((uint64_t (*)(uint64_t))STACK[0x2F0])(2901238212);
}

uint64_t sub_1CF36C2CC(int a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((v3 + v4 + 132) ^ (30 * (v2 != a1))))
                            - ((v4 + 1287678031) & 0xE76EBBFF ^ 0x1F7)))();
}

uint64_t sub_1CF36C314(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((v3 + v4 + 132) ^ (30 * (v2 != -1393729084))))
                            - (v4 ^ (v4 - 353))
                            + 503))();
}

uint64_t sub_1CF36C350@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  int v2;
  int v3;
  int v5;

  v3 = a2 - 28;
  v5 = ((a2 - 28) ^ 0x51) + LODWORD(STACK[0x30C]) - 433;
  LODWORD(STACK[0x30C]) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((v5 - 833633702 + (((v3 ^ 0x51) - 636458419) & 0x25EF95FFu) < 2)
                                          * ((((v3 ^ 0x51) - 1040183730) | 0x9D0CDB0) ^ (v2 + 32))) ^ v3 ^ 0x51))
                            - 8))();
}

uint64_t sub_1CF36C35C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, int a12)
{
  int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2E0] + 8 * (v12 ^ (39 * (a12 == a10))))
                            - ((((v12 - 213476792) & 0xCB967FF) + 592) ^ v12 ^ 0x4A4u)))();
}

uint64_t sub_1CF36C3F4(uint64_t a1, uint64_t a2)
{
  int v2;
  char v3;

  return (*(uint64_t (**)(void))(a2 + 8 * ((((v2 - 222) ^ v2 ^ 0x4D5 ^ 0x708) * ((v3 & 8) == 0)) ^ v2)))();
}

uint64_t sub_1CF36C42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64x2_t v49;
  int64x2_t v50;
  int8x16_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int8x16_t v54;
  int8x16_t v55;
  int64x2_t v56;
  int8x16_t v57;
  int8x16_t v58;
  int8x16_t v59;
  int8x16_t v60;
  int8x16_t v61;
  int8x16_t v62;
  int8x16_t v63;
  int8x16_t v64;
  int8x16_t v65;
  int8x16_t v66;
  int8x16_t v67;
  int64x2_t v68;
  int8x16_t v69;
  uint64_t v70;
  int64x2_t v71;
  int64x2_t v72;
  int64x2_t v73;
  int64x2_t v74;
  int8x16_t v75;
  int8x16_t v76;
  int64x2_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int64x2_t v81;
  int64x2_t v82;
  int64x2_t v83;
  int64x2_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int8x16_t v87;
  int8x16_t v88;
  int64x2_t v89;
  int64x2_t v90;
  int64x2_t v91;
  int64x2_t v92;
  int64x2_t v93;
  int64x2_t v94;
  int64x2_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int64x2_t v100;
  int8x16_t v101;
  int8x16_t v102;
  int64x2_t v103;
  int64x2_t v104;
  int64x2_t v105;
  int64x2_t v106;
  int8x16_t v107;
  int8x16_t v108;
  int64x2_t v109;
  int8x16_t v110;
  int64x2_t v111;
  int64x2_t v112;
  int64x2_t v113;
  int8x16_t v114;
  int64x2_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int64x2_t v121;
  int8x16_t v122;
  int64x2_t v123;
  int64x2_t v124;
  int64x2_t v125;
  int64x2_t v126;
  int64x2_t v127;
  int64x2_t v128;
  int8x16_t v129;
  int64x2_t v130;
  int64x2_t v131;
  int8x16_t v132;
  int64x2_t v133;
  int64x2_t v134;
  int64x2_t v135;
  int8x16_t v136;
  int64x2_t v137;
  int64x2_t v138;
  int64x2_t v139;
  int64x2_t v140;
  int64x2_t v141;
  int8x16_t v142;
  int64x2_t v143;
  int64x2_t v144;
  int64x2_t v145;
  int64x2_t v146;
  int64x2_t v147;
  int64x2_t v148;
  int8x16_t v149;
  int64x2_t v150;
  int64x2_t v151;
  int8x16_t v152;
  int64x2_t v153;
  int64x2_t v154;
  int64x2_t v155;
  uint64_t (*v156)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int8x16x4_t v159;

  v42 = a1 - 7;
  v43 = a7 + a6 + a8;
  *(int64x2_t *)&STACK[0x290] = vdupq_n_s64(0xF8FFFFFFFFFFFFFFLL);
  *(int64x2_t *)&STACK[0x2A0] = vdupq_n_s64(0x38uLL);
  v44 = (v43 + 4);
  *(int64x2_t *)&STACK[0x2D0] = vdupq_n_s64(0xB98B02A5518146ACLL);
  v45 = (v43 - 297);
  v46 = (v43 + 6);
  v47 = (v43 + 7);
  *(int64x2_t *)&STACK[0x260] = vdupq_n_s64(0xEE14BEBC8D361B39);
  *(int64x2_t *)&STACK[0x270] = vdupq_n_s64(0xAAF3F7833B96EBB2);
  *(int64x2_t *)&STACK[0x240] = vdupq_n_s64(0xB1594B094AC1844ELL);
  v48 = 151 * (v38 ^ 0x17Au);
  *(int64x2_t *)&STACK[0x220] = vdupq_n_s64(0xA7535A7B5A9F3DD9);
  v49 = vdupq_n_s64(0x5C571E88BAF69BF8uLL);
  v50 = vdupq_n_s64(0x7C3185684655E497uLL);
  v51 = (int8x16_t)vdupq_n_s64(0xC266F8D17762409ALL);
  v53 = *(int8x16_t *)&STACK[0x290];
  v52 = *(int8x16_t *)&STACK[0x2A0];
  v54 = *(int8x16_t *)&STACK[0x260];
  v55 = *(int8x16_t *)&STACK[0x240];
  v56 = *(int64x2_t *)&STACK[0x220];
  v58 = (int8x16_t)vdupq_n_s64(0xA3A8E17745096407);
  v57 = (int8x16_t)vdupq_n_s64(0x878756599DDB350uLL);
  v60 = (int8x16_t)vdupq_n_s64(0x8E85997BF8A3092DLL);
  v59 = (int8x16_t)vdupq_n_s64(0x467F3BD9A88CC707uLL);
  v62 = (int8x16_t)vdupq_n_s64(0x83CE7A97B9AA1B68);
  v61 = (int8x16_t)vdupq_n_s64(0xCD091F17C02FDE51);
  v64 = (int8x16_t)vdupq_n_s64(0x31312E8DEADC702EuLL);
  v63 = (int8x16_t)vdupq_n_s64(0xE144C6C530E1FC0ALL);
  v66 = (int8x16_t)vdupq_n_s64(0xA9974A5FA23517D5);
  v65 = (int8x16_t)vdupq_n_s64(0xC246D05015220090);
  v68 = vdupq_n_s64(0x5AF7040FCBE4BA6AuLL);
  v67 = (int8x16_t)vdupq_n_s64(0xB5EE081F97C974D4);
  v69 = (int8x16_t)vdupq_n_s64(0x41FCD597E0BD7A1BuLL);
  v70 = (v47 - v40);
  v71.i64[0] = v41 + (v43 + 1 - v40);
  v71.i64[1] = v41 + (v43 - v40);
  v72.i64[0] = v41 + (v43 + 3 - v40);
  v72.i64[1] = v41 + (v43 + 2 - v40);
  v73.i64[0] = v41 + v70;
  v73.i64[1] = v41 + (v46 - v40);
  v74.i64[0] = v41 + (v45 - v40 + v48);
  v74.i64[1] = v41 + (v44 - v40);
  *(int64x2_t *)&STACK[0x2C0] = v74;
  *(int8x16_t *)&STACK[0x2B0] = vorrq_s8((int8x16_t)vshlq_n_s64(v74, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v74, 8uLL));
  v75 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v71, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v71, 8uLL)), v53), *(int64x2_t *)&STACK[0x270]);
  v76 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v72, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v72, 8uLL)), v53), *(int64x2_t *)&STACK[0x270]);
  v77 = (int64x2_t)veorq_s8(v76, *(int8x16_t *)&STACK[0x2D0]);
  v78 = (int64x2_t)veorq_s8(v75, *(int8x16_t *)&STACK[0x2D0]);
  v79 = (int64x2_t)veorq_s8(v75, v54);
  v80 = (int64x2_t)veorq_s8(v76, v54);
  v81 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v77, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v77, 8uLL)), v80);
  v82 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v78, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v78, 8uLL)), v79);
  v83 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v82, v82), v55), v82), v56), v57);
  v84 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v81, v81), v55), v81), v56), v57);
  v85 = (int64x2_t)veorq_s8((int8x16_t)v84, vorrq_s8((int8x16_t)vshlq_n_s64(v80, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v80, 0x3DuLL)));
  v86 = (int64x2_t)veorq_s8((int8x16_t)v83, vorrq_s8((int8x16_t)vshlq_n_s64(v79, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v79, 0x3DuLL)));
  v87 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v83, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v83, 8uLL)), v86);
  v88 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v84, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v84, 8uLL)), v85);
  v89 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v87, v58), (int64x2_t)vorrq_s8(v87, (int8x16_t)v49)), v49), v59);
  v90 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v88, v58), (int64x2_t)vorrq_s8(v88, (int8x16_t)v49)), v49), v59);
  v91 = (int64x2_t)veorq_s8((int8x16_t)v90, vorrq_s8((int8x16_t)vshlq_n_s64(v85, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v85, 0x3DuLL)));
  v92 = (int64x2_t)veorq_s8((int8x16_t)v89, vorrq_s8((int8x16_t)vshlq_n_s64(v86, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v86, 0x3DuLL)));
  v93 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v90, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 8uLL)), v91), v60);
  v94 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v89, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v89, 8uLL)), v92), v60);
  v95 = (int64x2_t)veorq_s8((int8x16_t)v94, vorrq_s8((int8x16_t)vshlq_n_s64(v92, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v92, 0x3DuLL)));
  v96 = (int64x2_t)veorq_s8((int8x16_t)v93, vorrq_s8((int8x16_t)vshlq_n_s64(v91, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v91, 0x3DuLL)));
  v97 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v94, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v94, 8uLL)), v95), v61);
  v98 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v93, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v93, 8uLL)), v96), v61);
  v99 = (int64x2_t)veorq_s8((int8x16_t)v98, vorrq_s8((int8x16_t)vshlq_n_s64(v96, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v96, 0x3DuLL)));
  v100 = (int64x2_t)veorq_s8((int8x16_t)v97, vorrq_s8((int8x16_t)vshlq_n_s64(v95, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v95, 0x3DuLL)));
  v101 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v97, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v97, 8uLL)), v100);
  v102 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v98, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v98, 8uLL)), v99);
  v103 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v101, v62), (int64x2_t)vorrq_s8(v101, (int8x16_t)v50)), v50), v63);
  v104 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v102, v62), (int64x2_t)vorrq_s8(v102, (int8x16_t)v50)), v50), v63);
  v105 = (int64x2_t)veorq_s8((int8x16_t)v104, vorrq_s8((int8x16_t)vshlq_n_s64(v99, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v99, 0x3DuLL)));
  v106 = (int64x2_t)veorq_s8((int8x16_t)v103, vorrq_s8((int8x16_t)vshlq_n_s64(v100, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v100, 0x3DuLL)));
  v107 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v103, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v103, 8uLL)), v106);
  v108 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v104, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 8uLL)), v105);
  v109 = (int64x2_t)veorq_s8(v108, v64);
  v110 = (int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v108, v51), v65), v109), (int64x2_t)vandq_s8((int8x16_t)v109, v51));
  v111 = (int64x2_t)veorq_s8(v107, v64);
  v112 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v107, v51), v65), v111), (int64x2_t)vandq_s8((int8x16_t)v111, v51)), v66);
  v113 = (int64x2_t)veorq_s8(v110, v66);
  v114 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v73, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v73, 8uLL)), v53), *(int64x2_t *)&STACK[0x270]);
  v115 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v112, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v112, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v112, vorrq_s8((int8x16_t)vshlq_n_s64(v106, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v106, 0x3DuLL))));
  v116 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v113, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v113, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v113, vorrq_s8((int8x16_t)vshlq_n_s64(v105, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v105, 0x3DuLL))));
  v159.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v115, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v115, v115), v67)), v68), v69), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v71, 3uLL), v52)));
  v159.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v116, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v116, v116), v67)), v68), v69), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v72, 3uLL), v52)));
  v117 = (int64x2_t)veorq_s8(v114, *(int8x16_t *)&STACK[0x2D0]);
  v118 = (int64x2_t)veorq_s8(v114, v54);
  v119 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v117, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v117, 8uLL)), v118);
  v120 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v119, v119), v55), v119), v56), v57);
  v121 = (int64x2_t)veorq_s8((int8x16_t)v120, vorrq_s8((int8x16_t)vshlq_n_s64(v118, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v118, 0x3DuLL)));
  v122 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v120, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v120, 8uLL)), v121);
  v123 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v122, v58), (int64x2_t)vorrq_s8(v122, (int8x16_t)v49)), v49), v59);
  v124 = (int64x2_t)veorq_s8((int8x16_t)v123, vorrq_s8((int8x16_t)vshlq_n_s64(v121, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v121, 0x3DuLL)));
  v125 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v123, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v123, 8uLL)), v124), v60);
  v126 = (int64x2_t)veorq_s8((int8x16_t)v125, vorrq_s8((int8x16_t)vshlq_n_s64(v124, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v124, 0x3DuLL)));
  v127 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v125, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v125, 8uLL)), v126), v61);
  v128 = (int64x2_t)veorq_s8((int8x16_t)v127, vorrq_s8((int8x16_t)vshlq_n_s64(v126, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v126, 0x3DuLL)));
  v129 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v127, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v127, 8uLL)), v128);
  v130 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v129, v62), (int64x2_t)vorrq_s8(v129, (int8x16_t)v50)), v50), v63);
  v131 = (int64x2_t)veorq_s8((int8x16_t)v130, vorrq_s8((int8x16_t)vshlq_n_s64(v128, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v128, 0x3DuLL)));
  v132 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v130, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v130, 8uLL)), v131);
  v133 = (int64x2_t)veorq_s8(v132, v64);
  v134 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v132, v51), v65), v133), (int64x2_t)vandq_s8((int8x16_t)v133, v51)), v66);
  v135 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v134, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v134, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v134, vorrq_s8((int8x16_t)vshlq_n_s64(v131, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v131, 0x3DuLL))));
  v136 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x2B0], v53), *(int64x2_t *)&STACK[0x270]);
  v159.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v135, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v135, v135), v67)), v68), v69), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v73, 3uLL), v52)));
  v137 = (int64x2_t)veorq_s8(v136, *(int8x16_t *)&STACK[0x2D0]);
  v138 = (int64x2_t)veorq_s8(v136, v54);
  v139 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v137, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v137, 8uLL)), v138);
  v140 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v139, v139), v55), v139), v56), v57);
  v141 = (int64x2_t)veorq_s8((int8x16_t)v140, vorrq_s8((int8x16_t)vshlq_n_s64(v138, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v138, 0x3DuLL)));
  v142 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v140, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v140, 8uLL)), v141);
  v143 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v142, v58), (int64x2_t)vorrq_s8(v142, (int8x16_t)v49)), v49), v59);
  v144 = (int64x2_t)veorq_s8((int8x16_t)v143, vorrq_s8((int8x16_t)vshlq_n_s64(v141, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v141, 0x3DuLL)));
  v145 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v143, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v143, 8uLL)), v144), v60);
  v146 = (int64x2_t)veorq_s8((int8x16_t)v145, vorrq_s8((int8x16_t)vshlq_n_s64(v144, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v144, 0x3DuLL)));
  v147 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v145, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v145, 8uLL)), v146), v61);
  v148 = (int64x2_t)veorq_s8((int8x16_t)v147, vorrq_s8((int8x16_t)vshlq_n_s64(v146, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146, 0x3DuLL)));
  v149 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v147, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v147, 8uLL)), v148);
  v150 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v149, v62), (int64x2_t)vorrq_s8(v149, (int8x16_t)v50)), v50), v63);
  v151 = (int64x2_t)veorq_s8((int8x16_t)v150, vorrq_s8((int8x16_t)vshlq_n_s64(v148, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v148, 0x3DuLL)));
  v152 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v150, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v150, 8uLL)), v151);
  v153 = (int64x2_t)veorq_s8(v152, v64);
  v154 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v152, v51), v65), v153), (int64x2_t)vandq_s8((int8x16_t)v153, v51)), v66);
  v155 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v154, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v154, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v154, vorrq_s8((int8x16_t)vshlq_n_s64(v151, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v151, 0x3DuLL))));
  v159.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v155, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v155, v155), v67)), v68), v69), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x2C0], 3uLL), v52)));
  *(int8x8_t *)(v42 + v70) = veor_s8(vrev64_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v159, (int8x16_t)xmmword_1CF37DAD0)), *(int8x8_t *)(v41 + v70 - 7));
  v156 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x2E0] + 8 * ((232 * (-(v39 & 0xFFFFFFF8) == -8 - v40)) ^ v38));
  return v156(v44, v48, v45, v46, v47, 232, v156, STACK[0x2E0], a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a1,
           a38,
           0x3830282018100800,
           -1,
           v69.i64[0],
           v69.i64[1],
           v68.i64[0],
           v68.i64[1],
           v67.i64[0],
           v67.i64[1],
           v66.i64[0],
           v66.i64[1],
           v65.i64[0],
           v65.i64[1],
           v64.i64[0],
           v64.i64[1],
           v63.i64[0],
           v63.i64[1],
           v62.i64[0],
           v62.i64[1],
           v61.i64[0],
           v61.i64[1]);
}

void sub_1CF36CD30()
{
  JUMPOUT(0x1CF36C69CLL);
}

uint64_t sub_1CF36CD38(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x2E0] + 8
                                                                     * ((((a2 ^ 0x5E1) + 216) * (a11 != v37)) ^ a2))
                                          - 3 * (a2 ^ 0x35u)
                                          + 837))(a37);
}

uint64_t sub_1CF36CDC0(unint64_t a1)
{
  STACK[0x378] = a1;
  return ((uint64_t (*)(void))STACK[0x310])();
}

uint64_t sub_1CF36CDD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v10 = (a6 - 1969241659);
  v11 = (__ROR8__(v9 + v10, 8) & 0xF8FFFFFFFFFFFFFFLL) + ((v6 - 1111981430) & 0x42477BF7 ^ 0xAAF3F7833B96E8E3);
  v12 = v11 ^ 0xB98B02A5518146ACLL;
  v11 ^= 0xEE14BEBC8D361B39;
  v13 = __ROR8__(v12, 8);
  v14 = (((2 * (v13 + v11)) | 0xB1594B094AC1844ELL) - (v13 + v11) - 0x58ACA584A560C227) ^ 0x878756599DDB350;
  v15 = v14 ^ __ROR8__(v11, 61);
  v16 = __ROR8__(v14, 8);
  v17 = __ROR8__((a5 - ((v16 + v15) | a5) + ((v16 + v15) | 0xA3A8E17745096407)) ^ 0x467F3BD9A88CC707, 8);
  v18 = (a5 - ((v16 + v15) | a5) + ((v16 + v15) | 0xA3A8E17745096407)) ^ 0x467F3BD9A88CC707 ^ __ROR8__(v15, 61);
  v19 = (v17 + v18) ^ v8;
  v20 = v19 ^ __ROR8__(v18, 61);
  v21 = (__ROR8__(v19, 8) + v20) ^ 0xCD091F17C02FDE51;
  v22 = v21 ^ __ROR8__(v20, 61);
  v23 = __ROR8__(v21, 8);
  v24 = (a4 - ((v23 + v22) | a4) + ((v23 + v22) | 0x83CE7A97B9AA1B68)) ^ 0xE144C6C530E1FC0ALL;
  v25 = v24 ^ __ROR8__(v22, 61);
  v26 = __ROR8__(v24, 8);
  v27 = (((v26 + v25) & a3 ^ 0xC246D05015220090)
       + ((v26 + v25) ^ 0x31312E8DEADC702ELL)
       - (((v26 + v25) ^ 0x31312E8DEADC702ELL) & a3)) ^ 0xA9974A5FA23517D5;
  v28 = v27 ^ __ROR8__(v25, 61);
  v29 = __ROR8__(v27, 8);
  *(_BYTE *)(a1 + v10) = (((v29 + v28 - ((2 * (v29 + v28)) & 0xB5EE081F97C974D4) + 0x5AF7040FCBE4BA6ALL) ^ 0x41FCD597E0BD7A1BLL) >> (8 * ((v9 + a6 - 59) & 7))) ^ *(_BYTE *)(v9 + v10);
  return (*(uint64_t (**)(void))(a2 + 8 * ((440 * (a6 - 1 == v7)) ^ v6)))();
}

uint64_t sub_1CF36D08C@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  unsigned int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((1688
                                          * (v2
                                           - 28
                                           + *(_DWORD *)(STACK[0x388]
                                                       - 0x35854D317B1D66C8
                                                       + 40
                                                       * ((a2 | ((unint64_t)(a2 < 0x31B03BA7) << 32)) - 833633191)
                                                       + 36)
                                           - LODWORD(STACK[0x3B8]) == -804430277)) ^ v2))
                            - (((v2 + 1224775329) | 0x82D04510) ^ 0xCBD0DDBCLL)))();
}

uint64_t sub_1CF36D13C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;

  v6 = *(_DWORD *)(v3 + 40 * v2 + 28);
  switch(v6)
  {
    case 1:
      LODWORD(STACK[0x220]) = *(_DWORD *)(v3 + 40 * v2 + 24);
      JUMPOUT(0x1CF36472CLL);
    case 3:
      return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                            + 8
                                            * (((*(_QWORD *)(v3 + 40 * v2 + 16) != 0)
                                              * (((v4 + v5 + 187) ^ 0x51) + 392)) ^ (v4 + v5 + 215)))
                                - 12))();
    case 2:
      return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                            + 8
                                            * (((STACK[0x3C8] != 0x373C0AAD4CE136CBLL) | (8
                                                                                        * (STACK[0x3C8] != 0x373C0AAD4CE136CBLL))) ^ (v4 + v5 + 1385)))
                                - ((v5 + 773785502) & 0x6101AF7 ^ 0x4ALL)))();
  }
  return ((uint64_t (*)(void))STACK[0x400])();
}

_QWORD *sub_1CF36D3B8(unint64_t a1)
{
  _UNKNOWN **v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _DWORD *v8;
  unsigned int *v9;
  unsigned int *v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  _UNKNOWN **v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  unsigned int *v27;
  uint64_t v28;
  _QWORD *result;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int *v43;
  unsigned int *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v57;
  int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t i;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int64_t *v91;
  unint64_t v92;
  uint64_t *v93;
  unint64_t v94;
  int64_t *v95;
  uint64_t (*v96)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  _UNKNOWN **v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  _UNKNOWN **v109;
  unint64_t v110;
  _BOOL4 v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t *v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  _QWORD *v134;
  uint64_t v135;
  unsigned int *v136;
  uint64_t v137;
  char *v138;
  unint64_t v139;
  unint64_t *v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  unint64_t v155;
  _BYTE *v156;
  char *v157;
  _BYTE *v158;
  unint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _BYTE *v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  _QWORD *v176;
  _QWORD *v177;
  unsigned int *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  _BYTE *v183;
  char v184;
  char v185;
  char v186;
  char v187;
  char v188;
  char v189;
  char v190;
  char *v191;
  BOOL v192;
  char v193;
  uint64_t v194;
  unint64_t v195;
  unint64_t *v196;
  unint64_t *v197;
  unint64_t v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  unint64_t *v211;
  uint64_t v212;
  unint64_t v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  int v217;
  uint64_t v218;
  unint64_t v219;
  unint64_t v220;
  unint64_t v221;
  unint64_t v222;
  uint64_t v223;
  _QWORD *v224;
  uint64_t v225;
  _QWORD *v226;
  _QWORD *v227;
  _QWORD *v228;
  int64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  unint64_t v233;
  unint64_t v234;
  uint64_t v235;
  int v236;
  uint64_t v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  uint64_t v241;
  unint64_t v242;
  unint64_t v243;
  _BYTE *v244;
  unint64_t v245;
  uint64_t v246;
  char v247;
  char v248;
  char v249;
  char v250;
  char v251;
  char v252;
  char *v253;
  unint64_t v254;
  unint64_t v255;
  unint64_t v256;
  uint64_t v257;
  int v258;
  uint64_t v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  uint64_t v263;
  unint64_t v264;
  unint64_t v265;
  uint64_t v266;
  unint64_t v267;
  int64_t *v268;
  _DWORD *v269;
  int64_t v270;
  unint64_t *v271;
  uint64_t *v272;
  uint64_t v273;
  _BYTE *v274;
  _BYTE v275[8];
  unsigned int v276;
  unsigned int v277;
  uint64_t v278;
  unsigned int v279;
  unsigned int v280;
  uint64_t v281;
  int64_t v282;
  unsigned int v283;
  unsigned int v284;
  uint64_t v285;
  int64_t v286;
  _DWORD *v287;
  unint64_t v288;
  uint64_t v289;
  uint64_t v290;
  unint64_t v291;
  uint64_t *v292;
  unint64_t *v293;
  unint64_t v294;
  uint64_t *v295;
  unint64_t v296;
  unint64_t v297;
  unint64_t v298;

  v1 = &off_1E8C4D9A0;
  v2 = (uint64_t *)*(&off_1E8C4D9A0
                  + (byte_1CF37C948[(byte_1CF37BC80[(-79
                                                                                     * ((dword_1EFB8D338
                                                                                       + dword_1EFB8D398) ^ 0x63))] ^ 1)
                                                   - 8] ^ (-79 * ((dword_1EFB8D338 + dword_1EFB8D398) ^ 0x63)))
                  - 118);
  v3 = *(uint64_t *)((char *)v2 - 4);
  v2 = (uint64_t *)((char *)v2 - 4);
  v4 = (unint64_t *)*(&off_1E8C4D9A0
                           + (byte_1CF37A380[(byte_1CF37D7B8[(-79
                                                                                              * ((dword_1EFB8D338 - v3) ^ 0x63))
                                                                            + 248] ^ 0xCD)
                                                            + 256] ^ (-79 * ((dword_1EFB8D338 - v3) ^ 0x63)))
                           - 53);
  v5 = (unint64_t)&v275[*v4 - v3];
  v6 = 565822129 * v5 - 0x4008717C6ACAB88DLL;
  v7 = 565822129 * (v5 ^ 0xEBA05D989A3C0D63);
  *v2 = v6;
  *v4 = v7;
  LOBYTE(v7) = -79 * ((v7 - *(_DWORD *)v2) ^ 0x63);
  v8 = *(&off_1E8C4D9A0
       + (v7 ^ byte_1CF37A380[(byte_1CF37D7B8[v7 + 248] ^ 0x99) + 256])
       - 79);
  LODWORD(v6) = (*v8)++;
  v271 = v4;
  v272 = v2;
  v9 = *(unsigned int **)((char *)*(&off_1E8C4D9A0
                                  + (byte_1CF37D9B0[byte_1CF37C948[(-79 * ((*(_DWORD *)v4 - *(_DWORD *)v2) ^ 0x63)) + 248] ^ 0x65] ^ (-79 * ((*(_DWORD *)v4 - *(_DWORD *)v2) ^ 0x63)))
                                  - 119)
                        + 8 * (v6 & 1)
                        - 12);
  if (!v9)
    return 0;
  v270 = (int64_t)v9;
  if ((v9[220] & 2) != 0)
  {
    v11 = v9 + 221;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(1u, v11));
    if (v12)
    {
      v13 = 0;
      while (1)
      {
        if (!*v11)
        {
          do
            v14 = __ldaxr(v11);
          while (__stlxr(1u, v11));
          if (!v14)
            break;
        }
        if ((++v13 & 0x3F) == 0)
        {
          v15 = v1;
          ((void (*)(void))v1[((-79 * ((*(_DWORD *)v271 + *(_DWORD *)v272) ^ 0x63)) ^ byte_1CF37BD80[byte_1CF37A580[(-79 * ((*(_DWORD *)v271 + *(_DWORD *)v272) ^ 0x63))] ^ 0xE4])
                            - 65])();
          v1 = v15;
        }
      }
    }
  }
  v16 = (uint64_t *)v1[((-79 * ((*(_DWORD *)v271 - *(_DWORD *)v272) ^ 0x63)) ^ byte_1CF37BD80[byte_1CF37A580[(-79 * ((*(_DWORD *)v271 - *(_DWORD *)v272) ^ 0x63))] ^ 4])
                    - 40];
  v17 = (uint64_t)v1[50] - 8;
  v18 = (uint64_t)v1[35] - 8;
  v19 = (uint64_t)v1[((-79 * ((dword_1EFB8D338 - dword_1EFB8D398) ^ 0x63)) ^ byte_1CF37C940[byte_1CF37BC80[(-79 * ((dword_1EFB8D338 - dword_1EFB8D398) ^ 0x63))] ^ 1])
                  - 122]
      - 12;
  if (a1 <= 0xE0)
  {
    v20 = (a1 + 31) & 0xFFFFFFFFFFFFFFF0;
    if (a1 < 0xF)
      v20 = 32;
    v21 = v20 >> 3;
    v22 = v270;
    v23 = *(unsigned int *)v270;
    v24 = v23 >> ((v20 >> 3) & 0xFE);
    if ((v24 & 3) != 0)
    {
      v25 = ((v23 >> ((v20 >> 3) & 0xFE)) & 1 | v21) ^ 1;
      v26 = (unsigned int *)(v270 + 16 * v25);
      v27 = v26 + 18;
      v28 = *((_QWORD *)v26 + 11);
      result = (_QWORD *)(v28 + 16);
      v30 = *(_QWORD *)(v28 + 16);
      if (v27 == (unsigned int *)v30)
      {
        *(_DWORD *)v270 = v23 & ~(1 << v25);
      }
      else
      {
        *(_QWORD *)(v30 + 24) = v27;
        *((_QWORD *)v27 + 2) = v30;
      }
      *(_QWORD *)(v28 + 8) = (8 * v25) | 3;
      v47 = (unint64_t *)(v28 + 8 * v25);
LABEL_30:
      v47[1] |= 1uLL;
      *v47 = *v16 ^ v270;
      goto LABEL_99;
    }
    if (v20 > *(_QWORD *)(v270 + 8))
    {
      if ((_DWORD)v24)
      {
        v34 = ((_DWORD)v24 << v21) & ((2 << v21) | -(2 << v21));
        v35 = (v34 - 1) & ~v34;
        v36 = (v35 >> 12) & 0x10;
        v37 = v35 >> v36;
        v38 = v36 & 0xFFFFFFF0 | (v37 >> 5) & 0xF;
        v39 = v37 >> ((v37 >> 5) & 8);
        v40 = v38 & 0xFFFFFFF8 | (v39 >> 2) & 7;
        v41 = v39 >> ((v39 >> 2) & 4);
        v42 = (v40 & 0xFFFFFFFC | (v41 >> 1) & 2 | (v41 >> ((v41 >> 1) & 2) >> 1) & 1)
            + (v41 >> ((v41 >> 1) & 2) >> (((v41 >> ((v41 >> 1) & 2)) & 2) != 0));
        v43 = (unsigned int *)(v270 + 16 * v42);
        v44 = v43 + 18;
        v45 = *((_QWORD *)v43 + 11);
        result = (_QWORD *)(v45 + 16);
        v46 = *(_QWORD *)(v45 + 16);
        if (v44 == (unsigned int *)v46)
        {
          *(_DWORD *)v270 = v23 & ~(1 << v42);
        }
        else
        {
          *(_QWORD *)(v46 + 24) = v44;
          *((_QWORD *)v44 + 2) = v46;
        }
        v123 = 8 * v42;
        v124 = v123 - v20;
        if (v123 - v20 > 0x1F)
        {
          *(_QWORD *)(v45 + 8) = v20 | 3;
          v125 = (unint64_t *)(v45 + v20);
          *v125 = *v16 ^ v270;
          v125[1] = v124 | 1;
          *(_QWORD *)(v45 + v123) = v124;
          v126 = *(_QWORD *)(v270 + 8);
          if (v126)
          {
            v127 = *(_QWORD *)(v270 + 32);
            v128 = v126 >> 3;
            v129 = v270 + ((2 * v126) & 0x7FFFFFFF0) + 72;
            v130 = 1 << v128;
            if ((*(_DWORD *)v270 & v130) != 0)
            {
              v131 = *(_QWORD *)(v129 + 16);
            }
            else
            {
              *(_DWORD *)v270 |= v130;
              v131 = v129;
            }
            *(_QWORD *)(v129 + 16) = v127;
            *(_QWORD *)(v131 + 24) = v127;
            *(_QWORD *)(v127 + 16) = v131;
            *(_QWORD *)(v127 + 24) = v129;
          }
          *(_QWORD *)(v270 + 8) = v124;
          *(_QWORD *)(v270 + 32) = v125;
          goto LABEL_99;
        }
        *(_QWORD *)(v45 + 8) = v123 | 3;
        v47 = (unint64_t *)(v45 + v123);
        goto LABEL_30;
      }
      v70 = *(_DWORD *)(v270 + 4);
      if (v70)
      {
        v71 = (v70 - 1) & ~v70;
        v72 = (v71 >> 12) & 0x10;
        v73 = v71 >> v72;
        v74 = v72 & 0xFFFFFFF0 | (v73 >> 5) & 0xF;
        v75 = v73 >> ((v73 >> 5) & 8);
        v76 = v74 & 0xFFFFFFF8 | (v75 >> 2) & 7;
        v77 = v75 >> ((v75 >> 2) & 4);
        v78 = *(_QWORD *)(v270
                        + 8
                        * ((v76 & 0xFFFFFFFC | (v77 >> 1) & 2 | (v77 >> ((v77 >> 1) & 2) >> 1) & 1)
                         + (v77 >> ((v77 >> 1) & 2) >> (((v77 >> ((v77 >> 1) & 2)) & 2) != 0)))
                        + 600);
        v79 = (*(_QWORD *)(v78 + 8) & 0xFFFFFFFFFFFFFFF8) - v20;
        v80 = 32;
        if (!*(_QWORD *)(v78 + 32))
          v80 = 40;
        for (i = *(_QWORD *)(v78 + v80); i; i = *(_QWORD *)(i + v82))
        {
          if ((*(_QWORD *)(i + 8) & 0xFFFFFFFFFFFFFFF8) - v20 < v79)
          {
            v79 = (*(_QWORD *)(i + 8) & 0xFFFFFFFFFFFFFFF8) - v20;
            v78 = i;
          }
          if (*(_QWORD *)(i + 32))
            v82 = 32;
          else
            v82 = 40;
        }
        v83 = *(_QWORD *)(v78 + 48);
        v84 = *(_QWORD **)(v78 + 24);
        if (v84 != (_QWORD *)v78)
        {
          v85 = *(_QWORD *)(v78 + 16);
          *(_QWORD *)(v85 + 24) = v84;
          v84[2] = v85;
          if (!v83)
            goto LABEL_226;
LABEL_187:
          v178 = (unsigned int *)(v270 + 8 * *(unsigned int *)(v78 + 56));
          if (v78 == *((_QWORD *)v178 + 75))
          {
            *((_QWORD *)v178 + 75) = v84;
            if (!v84)
            {
              *(_DWORD *)(v270 + 4) &= ~(1 << *(_DWORD *)(v78 + 56));
              goto LABEL_226;
            }
          }
          else
          {
            v179 = 40;
            if (*(_QWORD *)(v83 + 32) == v78)
              v179 = 32;
            *(_QWORD *)(v83 + v179) = v84;
            if (!v84)
              goto LABEL_226;
          }
          v84[6] = v83;
          v180 = *(_QWORD *)(v78 + 32);
          if (v180)
          {
            v84[4] = v180;
            *(_QWORD *)(v180 + 48) = v84;
          }
          v181 = *(_QWORD *)(v78 + 40);
          if (v181)
          {
            v84[5] = v181;
            *(_QWORD *)(v181 + 48) = v84;
          }
          goto LABEL_226;
        }
        v175 = (_QWORD *)(v78 + 40);
        v176 = *(_QWORD **)(v78 + 40);
        if (v176 || (v175 = (_QWORD *)(v78 + 32), (v176 = *(_QWORD **)(v78 + 32)) != 0))
        {
          do
          {
            do
            {
              v177 = v175;
              v84 = v176;
              v175 = v176 + 5;
              v176 = (_QWORD *)v176[5];
            }
            while (v176);
            v175 = v84 + 4;
            v176 = (_QWORD *)v84[4];
          }
          while (v176);
          *v177 = 0;
          if (v83)
            goto LABEL_187;
        }
        else
        {
          v84 = 0;
          if (v83)
            goto LABEL_187;
        }
LABEL_226:
        if (v79 > 0x1F)
        {
          *(_QWORD *)(v78 + 8) = v20 | 3;
          *(_QWORD *)(v78 + v20) = *v16 ^ v270;
          v212 = v78 + v20;
          *(_QWORD *)(v212 + 8) = v79 | 1;
          *(_QWORD *)(v212 + v79) = v79;
          v213 = *(_QWORD *)(v270 + 8);
          if (v213)
          {
            v214 = *(_QWORD *)(v270 + 32);
            v215 = v213 >> 3;
            v216 = v270 + ((2 * v213) & 0x7FFFFFFF0) + 72;
            v217 = 1 << v215;
            if ((*(_DWORD *)v270 & v217) != 0)
            {
              v218 = *(_QWORD *)(v216 + 16);
            }
            else
            {
              *(_DWORD *)v270 |= v217;
              v218 = v216;
            }
            *(_QWORD *)(v216 + 16) = v214;
            *(_QWORD *)(v218 + 24) = v214;
            *(_QWORD *)(v214 + 16) = v218;
            *(_QWORD *)(v214 + 24) = v216;
          }
          *(_QWORD *)(v270 + 8) = v79;
          *(_QWORD *)(v270 + 32) = v212;
          result = (_QWORD *)(v78 + 16);
        }
        else
        {
          v210 = v79 + v20;
          *(_QWORD *)(v78 + 8) = v210 | 3;
          v211 = (unint64_t *)(v78 + v210);
          v211[1] |= 1uLL;
          *v211 = *v16 ^ v270;
          result = (_QWORD *)(v78 + 16);
        }
        goto LABEL_99;
      }
    }
    goto LABEL_76;
  }
  v22 = v270;
  if (a1 > 0xFFFFFFFFFFFFFF7FLL)
  {
    v20 = -1;
    goto LABEL_76;
  }
  v20 = (a1 + 31) & 0xFFFFFFFFFFFFFFF0;
  v31 = *(_DWORD *)(v270 + 4);
  v287 = (_DWORD *)(v270 + 4);
  if (v31)
  {
    v32 = -(uint64_t)v20;
    if (v20 >= 0x100)
    {
      if (v20 >> 24)
      {
        v33 = 31;
      }
      else
      {
        v48 = (a1 + 31) >> 8;
        v49 = ((v48 + 1048320) >> 16) & 8;
        LODWORD(v48) = (_DWORD)v48 << v49;
        LODWORD(v48) = ((_DWORD)v48 << (((v48 + 520192) >> 16) & 4) << (((((_DWORD)v48 << (((v48 + 520192) >> 16) & 4)) + 245760) >> 16) & 2) >> 15)
                     - (((v48 + 520192) >> 16) & 4 | v49 | ((((_DWORD)v48 << (((v48 + 520192) >> 16) & 4))
                                                                                       + 245760) >> 16) & 2);
        v33 = ((v20 >> (v48 + 21)) & 1 | (2 * v48)) + 28;
      }
    }
    else
    {
      v33 = 0;
    }
    v50 = *(_QWORD *)(v270 + 8 * v33 + 600);
    if (v50)
    {
      v51 = 0;
      v52 = 0;
      v53 = 57 - (v33 >> 1);
      if (v33 == 31)
        LOBYTE(v53) = 0;
      v54 = v20 << v53;
      while (1)
      {
        v57 = (*(_QWORD *)(v50 + 8) & 0xFFFFFFFFFFFFFFF8) - v20;
        if (v57 < v32)
        {
          v32 = (*(_QWORD *)(v50 + 8) & 0xFFFFFFFFFFFFFFF8) - v20;
          v52 = v50;
          if (!v57)
            break;
        }
        v55 = *(_QWORD *)(v50 + 40);
        v50 = *(_QWORD *)(v50 + 8 * (v54 >> 63) + 32);
        if (v55 != v50 && v55 != 0)
          v51 = v55;
        v54 *= 2;
        if (!v50)
          goto LABEL_48;
      }
      v51 = v50;
      v52 = v50;
    }
    else
    {
      v51 = 0;
      v52 = 0;
LABEL_48:
      if (!(v51 | v52))
      {
        v58 = ((2 << v33) | -(2 << v33)) & v31;
        if (!v58)
          goto LABEL_76;
        v52 = 0;
        v59 = (v58 - 1) & ~v58;
        v60 = (v59 >> 12) & 0x10;
        v61 = v59 >> v60;
        v62 = v60 & 0xFFFFFFF0 | (v61 >> 5) & 0xF;
        v63 = v61 >> ((v61 >> 5) & 8);
        v64 = v62 & 0xFFFFFFF8 | (v63 >> 2) & 7;
        v65 = v63 >> ((v63 >> 2) & 4);
        v51 = *(_QWORD *)(v270
                        + 8
                        * ((v64 & 0xFFFFFFFC | (v65 >> 1) & 2 | (v65 >> ((v65 >> 1) & 2) >> 1) & 1)
                         + (v65 >> ((v65 >> 1) & 2) >> (((v65 >> ((v65 >> 1) & 2)) & 2) != 0)))
                        + 600);
      }
      if (!v51)
      {
LABEL_58:
        v288 = v32;
        v289 = v52;
        if (!v52 || v288 >= *(_QWORD *)(v270 + 8) - v20)
          goto LABEL_76;
        v290 = v289 + v20;
        v67 = *(_QWORD *)(v289 + 48);
        v68 = *(_QWORD **)(v289 + 24);
        if (v68 == (_QWORD *)v289)
        {
          v132 = (_QWORD *)(v289 + 40);
          v133 = *(_QWORD **)(v289 + 40);
          if (v133 || (v132 = (_QWORD *)(v289 + 32), (v133 = *(_QWORD **)(v289 + 32)) != 0))
          {
            do
            {
              do
              {
                v134 = v132;
                v68 = v133;
                v132 = v133 + 5;
                v133 = (_QWORD *)v133[5];
              }
              while (v133);
              v132 = v68 + 4;
              v133 = (_QWORD *)v68[4];
            }
            while (v133);
            *v134 = 0;
            if (!v67)
              goto LABEL_213;
          }
          else
          {
            v68 = 0;
            if (!v67)
              goto LABEL_213;
          }
        }
        else
        {
          v69 = *(_QWORD *)(v289 + 16);
          *(_QWORD *)(v69 + 24) = v68;
          v68[2] = v69;
          if (!v67)
            goto LABEL_213;
        }
        v135 = v289;
        v136 = (unsigned int *)(v270 + 8 * *(unsigned int *)(v289 + 56));
        if (v289 == *((_QWORD *)v136 + 75))
        {
          *((_QWORD *)v136 + 75) = v68;
          if (!v68)
          {
            *v287 &= ~(1 << *(_DWORD *)(v135 + 56));
            goto LABEL_213;
          }
        }
        else
        {
          v137 = 40;
          if (*(_QWORD *)(v67 + 32) == v289)
            v137 = 32;
          *(_QWORD *)(v67 + v137) = v68;
          if (!v68)
          {
LABEL_213:
            if (v288 > 0x1F)
            {
              v197 = (unint64_t *)v290;
              *(_QWORD *)(v289 + 8) = v20 | 3;
              v198 = v288;
              v199 = v288 | 1;
              *v197 = *v16 ^ v270;
              v197[1] = v199;
              *(unint64_t *)((char *)v197 + v198) = v198;
              if (v198 > 0xFF)
              {
                v276 = 31;
                if (!(v198 >> 24))
                {
                  v204 = (((v288 >> 8) + 1048320) >> 16) & 8;
                  v205 = (v288 >> 8) << v204;
                  v206 = (v205 << (((v205 + 520192) >> 16) & 4) << ((((v205 << (((v205 + 520192) >> 16) & 4)) + 245760) >> 16) & 2) >> 15)
                       - (((v205 + 520192) >> 16) & 4 | v204 | (((v205 << (((v205 + 520192) >> 16) & 4)) + 245760) >> 16) & 2);
                  v276 = ((v288 >> (v206 + 21)) & 1 | (2 * v206)) + 28;
                }
                v277 = v276;
                v278 = v270 + 8 * v276 + 600;
                v207 = v290;
                *(_DWORD *)(v290 + 56) = v276;
                v274 = (_BYTE *)(v207 + 32);
                v208 = *(_QWORD *)(v19
                                 + 8
                                 * (((-79 * (*(_DWORD *)v272 ^ 0x63 ^ *(_DWORD *)v271)) ^ byte_1CF37BD80[byte_1CF37A580[(-79 * (*(_DWORD *)v272 ^ 0x63 ^ *(_DWORD *)v271))] ^ 0xE4])
                                  + 1796))
                     - 8;
                goto LABEL_270;
              }
              v200 = v198 >> 3;
              v201 = v270 + ((2 * v198) & 0x7FFFFFFF0) + 72;
              v202 = 1 << v200;
              if ((v202 & *(_DWORD *)v270) != 0)
              {
                v203 = *(_QWORD *)(v201 + 16);
              }
              else
              {
                *(_DWORD *)v270 |= v202;
                v203 = v201;
              }
              v209 = v290;
              *(_QWORD *)(v201 + 16) = v290;
              *(_QWORD *)(v203 + 24) = v209;
              *(_QWORD *)(v209 + 16) = v203;
              *(_QWORD *)(v209 + 24) = v201;
            }
            else
            {
              v194 = v289;
              v195 = v288 + v20;
              *(_QWORD *)(v289 + 8) = v195 | 3;
              v196 = (unint64_t *)(v194 + v195);
              v196[1] |= 1uLL;
              *v196 = *v16 ^ v270;
            }
            v93 = (uint64_t *)v289;
LABEL_98:
            result = v93 + 2;
            goto LABEL_99;
          }
        }
        v68[6] = v67;
        v165 = *(_QWORD *)(v289 + 32);
        if (v165)
        {
          v68[4] = v165;
          *(_QWORD *)(v165 + 48) = v68;
        }
        v166 = *(_QWORD *)(v289 + 40);
        if (v166)
        {
          v68[5] = v166;
          *(_QWORD *)(v166 + 48) = v68;
        }
        goto LABEL_213;
      }
    }
    do
    {
      if ((*(_QWORD *)(v51 + 8) & 0xFFFFFFFFFFFFFFF8) - v20 < v32)
      {
        v32 = (*(_QWORD *)(v51 + 8) & 0xFFFFFFFFFFFFFFF8) - v20;
        v52 = v51;
      }
      if (*(_QWORD *)(v51 + 32))
        v66 = 32;
      else
        v66 = 40;
      v51 = *(_QWORD *)(v51 + v66);
    }
    while (v51);
    goto LABEL_58;
  }
LABEL_76:
  v291 = v20;
  v86 = *(_QWORD *)(v22 + 8);
  if (v20 <= v86)
  {
    v92 = v86 - v291;
    v93 = *(uint64_t **)(v22 + 32);
    if (v86 - v291 < 0x20)
    {
      *(_QWORD *)(v22 + 8) = 0;
      *(_QWORD *)(v22 + 32) = 0;
      v93[1] = v86 | 3;
      v95 = (uint64_t *)((char *)v93 + v86);
      *(uint64_t *)((char *)v93 + v86 + 8) |= 1uLL;
    }
    else
    {
      v94 = v291;
      v95 = (uint64_t *)((char *)v93 + v291);
      *(_QWORD *)(v22 + 32) = (char *)v93 + v291;
      *(_QWORD *)(v22 + 8) = v92;
      v95[1] = v92 | 1;
      *(uint64_t *)((char *)v93 + v86) = v92;
      v93[1] = v94 | 3;
    }
    *v95 = *v16 ^ v22;
    goto LABEL_98;
  }
  v87 = *(_QWORD *)(v22 + 16);
  v292 = (uint64_t *)(v22 + 16);
  if (v291 < v87)
  {
    v88 = v291;
    v89 = v87 - v291;
    *v292 = v89;
    v90 = *(_QWORD *)(v22 + 40);
    v91 = (int64_t *)(v90 + v88);
    *(_QWORD *)(v22 + 40) = v90 + v88;
    v91[1] = v89 | 1;
    *(_QWORD *)(v90 + 8) = v88 | 3;
    *v91 = *v16 ^ v22;
    result = (_QWORD *)(v90 + 16);
    goto LABEL_99;
  }
  v96 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v1[((-79 * ((*(_DWORD *)v271 - *(_DWORD *)v272) ^ 0x63)) ^ byte_1CF37A380[(byte_1CF37D7B8[(-79 * ((*(_DWORD *)v271 - *(_DWORD *)v272) ^ 0x63)) + 248] ^ 0x87) + 256])
                                                                                 + 10];
  if (v87)
  {
    if ((*(_DWORD *)(v22 + 880) & 1) != 0 && v16[3] <= v291)
    {
      v97 = (v16[1] + v291 + 62) & -v16[1];
      v98 = *(_QWORD *)(v22 + 872);
      if (!v98 || (v99 = *(_QWORD *)(v22 + 856), v99 + v97 > v99) && v99 + v97 <= v98)
      {
        if (v97 > v291)
        {
          v100 = v1;
          v101 = v96(0, (v16[1] + v291 + 62) & -v16[1], 3, 4098, 0xFFFFFFFFLL, 0);
          v1 = v100;
          if (v101 != -1)
          {
            v102 = -((_DWORD)v101 + 16) & 0xFLL;
            if (((v101 + 16) & 0xF) == 0)
              v102 = 0;
            v93 = (uint64_t *)(v101 + v102);
            *v93 = v102;
            v93[1] = v97 - v102 - 32;
            v103 = v101 + v97 - 32;
            *(_QWORD *)v103 = *v16 ^ v22;
            *(_OWORD *)(v103 + 8) = xmmword_1CF37DAE0;
            v104 = *(_QWORD *)(v22 + 24);
            if (!v104 || v101 < v104)
              *(_QWORD *)(v22 + 24) = v101;
            v105 = *(_QWORD *)(v22 + 856) + v97;
            *(_QWORD *)(v22 + 856) = v105;
            if (v105 > *(_QWORD *)(v22 + 864))
              *(_QWORD *)(v22 + 864) = v105;
            goto LABEL_98;
          }
        }
      }
    }
  }
  result = 0;
  v106 = (v16[2] + v291 + 95) & -v16[2];
  if (v106 > v291)
  {
    v107 = *(_QWORD *)(v22 + 872);
    if (!v107 || (result = 0, v108 = *(_QWORD *)(v22 + 856), v108 + v106 > v108) && v108 + v106 <= v107)
    {
      v109 = v1;
      v110 = v96(0, (v16[2] + v291 + 95) & -v16[2], 3, 4098, 0xFFFFFFFFLL, 0);
      v111 = v110 != -1;
      if (v110 == -1)
        v112 = 0;
      else
        v112 = v106;
      if (v110 == -1)
      {
LABEL_304:
        v269 = (_DWORD *)((uint64_t (*)(void))v109[((-79 * ((*(_DWORD *)v271 - *(_DWORD *)v272) ^ 0x63)) ^ *(_BYTE *)(v18 + (*(unsigned __int8 *)(v17 + (-79 * ((*(_DWORD *)v271 - *(_DWORD *)v272) ^ 0x63))) ^ 0x8Fu)))
                                                - 93])();
        result = 0;
        *v269 = 12;
        goto LABEL_99;
      }
      v113 = *(_QWORD *)(v22 + 856) + v106;
      *(_QWORD *)(v22 + 856) = v113;
      if (v113 > *(_QWORD *)(v22 + 864))
        *(_QWORD *)(v22 + 864) = v113;
      v114 = *(_QWORD *)(v22 + 40);
      v293 = (unint64_t *)(v22 + 40);
      v294 = v114;
      if (!v114)
      {
        v167 = *(_QWORD *)(v22 + 24);
        if (!v167 || v110 < v167)
          *(_QWORD *)(v22 + 24) = v110;
        *(_QWORD *)(v22 + 888) = v110;
        *(_QWORD *)(v22 + 896) = v106;
        *(_DWORD *)(v22 + 912) = v111;
        v168 = *v16;
        *(_QWORD *)(v22 + 56) = 4095;
        *(_QWORD *)(v22 + 64) = v168;
        *(_QWORD *)(v22 + 88) = v22 + 72;
        *(_QWORD *)(v22 + 96) = v22 + 72;
        *(_QWORD *)(v22 + 112) = v22 + 88;
        *(_QWORD *)(v22 + 104) = v22 + 88;
        *(_QWORD *)(v22 + 128) = v22 + 104;
        *(_QWORD *)(v22 + 120) = v22 + 104;
        *(_QWORD *)(v22 + 136) = v22 + 120;
        *(_QWORD *)(v22 + 144) = v22 + 120;
        *(_QWORD *)(v22 + 160) = v22 + 136;
        *(_QWORD *)(v22 + 152) = v22 + 136;
        *(_QWORD *)(v22 + 176) = v22 + 152;
        *(_QWORD *)(v22 + 168) = v22 + 152;
        *(_QWORD *)(v22 + 184) = v22 + 168;
        *(_QWORD *)(v22 + 192) = v22 + 168;
        *(_QWORD *)(v22 + 208) = v22 + 184;
        *(_QWORD *)(v22 + 200) = v22 + 184;
        *(_QWORD *)(v22 + 224) = v22 + 200;
        *(_QWORD *)(v22 + 216) = v22 + 200;
        *(_QWORD *)(v22 + 232) = v22 + 216;
        *(_QWORD *)(v22 + 240) = v22 + 216;
        *(_QWORD *)(v22 + 248) = v22 + 232;
        *(_QWORD *)(v22 + 256) = v22 + 232;
        *(_QWORD *)(v22 + 264) = v22 + 248;
        *(_QWORD *)(v22 + 272) = v22 + 248;
        *(_QWORD *)(v22 + 280) = v22 + 264;
        *(_QWORD *)(v22 + 288) = v22 + 264;
        *(_QWORD *)(v22 + 296) = v22 + 280;
        *(_QWORD *)(v22 + 304) = v22 + 280;
        *(_QWORD *)(v22 + 312) = v22 + 296;
        *(_QWORD *)(v22 + 320) = v22 + 296;
        *(_QWORD *)(v22 + 328) = v22 + 312;
        *(_QWORD *)(v22 + 336) = v22 + 312;
        *(_QWORD *)(v22 + 344) = v22 + 328;
        *(_QWORD *)(v22 + 352) = v22 + 328;
        *(_QWORD *)(v22 + 360) = v22 + 344;
        *(_QWORD *)(v22 + 368) = v22 + 344;
        *(_QWORD *)(v22 + 376) = v22 + 360;
        *(_QWORD *)(v22 + 384) = v22 + 360;
        *(_QWORD *)(v22 + 392) = v22 + 376;
        *(_QWORD *)(v22 + 400) = v22 + 376;
        *(_QWORD *)(v22 + 408) = v22 + 392;
        *(_QWORD *)(v22 + 416) = v22 + 392;
        *(_QWORD *)(v22 + 424) = v22 + 408;
        *(_QWORD *)(v22 + 432) = v22 + 408;
        *(_QWORD *)(v22 + 440) = v22 + 424;
        *(_QWORD *)(v22 + 448) = v22 + 424;
        *(_QWORD *)(v22 + 456) = v22 + 440;
        *(_QWORD *)(v22 + 464) = v22 + 440;
        *(_QWORD *)(v22 + 472) = v22 + 456;
        *(_QWORD *)(v22 + 480) = v22 + 456;
        *(_QWORD *)(v22 + 488) = v22 + 472;
        *(_QWORD *)(v22 + 504) = v22 + 488;
        *(_QWORD *)(v22 + 512) = v22 + 488;
        *(_QWORD *)(v22 + 496) = v22 + 472;
        *(_QWORD *)(v22 + 528) = v22 + 504;
        *(_QWORD *)(v22 + 520) = v22 + 504;
        *(_QWORD *)(v22 + 544) = v22 + 520;
        *(_QWORD *)(v22 + 536) = v22 + 520;
        *(_QWORD *)(v22 + 560) = v22 + 536;
        *(_QWORD *)(v22 + 552) = v22 + 536;
        *(_QWORD *)(v22 + 576) = v22 + 552;
        *(_QWORD *)(v22 + 568) = v22 + 552;
        *(_QWORD *)(v22 + 592) = v22 + 568;
        *(_QWORD *)(v22 + 584) = v22 + 568;
        v169 = v22 + (*(_QWORD *)(v22 - 8) & 0xFFFFFFFFFFFFFFF8);
        v170 = v169 - 16;
        v171 = v110 + v106 - (v169 - 16);
        if ((v169 & 0xF) != 0)
          v172 = -(int)v169 & 0xFLL;
        else
          v172 = 0;
        v173 = v170 + v172;
        v174 = v171 - v172 - 80;
        *v293 = v173;
        *v292 = v174;
        *(_QWORD *)(v173 + 8) = v174 | 1;
        *(_QWORD *)(v110 + v106 - 72) = 80;
        goto LABEL_181;
      }
      v115 = *(_QWORD *)(v22 + 888);
      v116 = *(_QWORD *)(v22 + 896);
      if (v110 == v115 + v116 && (*(_DWORD *)(v22 + 912) & 9) == 1 && v294 >= v115 && v294 < v110)
      {
        *(_QWORD *)(v22 + 896) = v116 + v106;
        v117 = v292;
        v118 = *v292 + v106;
        v119 = v294;
        if (((v294 + 16) & 0xF) != 0)
          v120 = -((_DWORD)v294 + 16) & 0xFLL;
        else
          v120 = 0;
        v121 = v294 + v120;
        v122 = v118 - v120;
        *v293 = v121;
        *v117 = v122;
        *(_QWORD *)(v121 + 8) = v122 | 1;
        *(_QWORD *)(v119 + v118 + 8) = 80;
LABEL_181:
        *(_QWORD *)(v22 + 48) = v16[4];
        goto LABEL_302;
      }
      v138 = (char *)(v22 + 888);
      if (v110 < *(_QWORD *)(v22 + 24))
        *(_QWORD *)(v22 + 24) = v110;
      v139 = v110 + v106;
      v140 = (unint64_t *)(v22 + 888);
      if (*(_QWORD *)v138 != v110 + v106 || (v140 = (unint64_t *)(v22 + 888), (*(_DWORD *)(v22 + 912) & 9) != 1))
      {
        while (1)
        {
          v151 = *v140;
          if (*v140 <= v294)
          {
            v152 = v140[1];
            v153 = v151 + v152;
            if (v151 + v152 > v294)
              break;
          }
          v140 = (unint64_t *)v140[2];
        }
        if (((v153 - 79) & 0xF) != 0)
          v154 = (79 - (int)v153) & 0xFLL;
        else
          v154 = 0;
        v155 = v153 + v154 - 95;
        v156 = (_BYTE *)(v294 + 32);
        if (v155 >= v294 + 32)
          v157 = (char *)v155;
        else
          v157 = (char *)v294;
        v158 = v157 + 16;
        v159 = v112 - 80;
        if (((v110 + 16) & 0xF) != 0)
          v160 = -((_DWORD)v110 + 16) & 0xFLL;
        else
          v160 = 0;
        v161 = v110 + v160;
        v162 = v159 - v160;
        *v293 = v161;
        *v292 = v162;
        *(_QWORD *)(v161 + 8) = v162 | 1;
        *(_QWORD *)(v110 + v159 + 8) = 80;
        *(_QWORD *)(v22 + 48) = v16[4];
        *((_QWORD *)v157 + 1) = 51;
        *((_QWORD *)v157 + 6) = *v16 ^ v22;
        if (((v158 ^ v138) & 7) != 0)
        {
          v163 = 0;
          do
          {
            v164 = &v158[v163];
            *v164 = v138[v163];
            v164[1] = v138[v163 + 1];
            v164[2] = v138[v163 + 2];
            v164[3] = v138[v163 + 3];
            v164[4] = v138[v163 + 4];
            v164[5] = v138[v163 + 5];
            v164[6] = v138[v163 + 6];
            v164[7] = v138[v163 + 7];
            v163 += 8;
          }
          while ((_DWORD)v163 != 32);
        }
        else
        {
          v182 = -(int)v138 & 7;
          v183 = v157 + 16;
          switch((int)v182)
          {
            case 1:
              goto LABEL_207;
            case 2:
              goto LABEL_206;
            case 3:
              goto LABEL_205;
            case 4:
              goto LABEL_204;
            case 5:
              goto LABEL_203;
            case 6:
              goto LABEL_202;
            case 7:
              v184 = *v138;
              v138 = (char *)(v22 + 889);
              *v158 = v184;
              v183 = v157 + 17;
LABEL_202:
              v185 = *v138++;
              *v183++ = v185;
LABEL_203:
              v186 = *v138++;
              *v183++ = v186;
LABEL_204:
              v187 = *v138++;
              *v183++ = v187;
LABEL_205:
              v188 = *v138++;
              *v183++ = v188;
LABEL_206:
              v189 = *v138++;
              *v183++ = v189;
LABEL_207:
              v190 = *v138++;
              *v183 = v190;
              v191 = v183 + 1;
              break;
            default:
              v191 = v157 + 16;
              break;
          }
          v192 = v182 <= 0x20;
          v193 = 32 - v182;
          if (!v192)
            v193 = 0;
          v246 = v193 & 7;
          switch(v246)
          {
            case 0:
              break;
            case 1:
              goto LABEL_290;
            case 2:
              goto LABEL_289;
            case 3:
              goto LABEL_288;
            case 4:
              goto LABEL_287;
            case 5:
              goto LABEL_286;
            case 6:
              goto LABEL_285;
            case 7:
              v247 = *v138++;
              *v191++ = v247;
LABEL_285:
              v248 = *v138++;
              *v191++ = v248;
LABEL_286:
              v249 = *v138++;
              *v191++ = v249;
LABEL_287:
              v250 = *v138++;
              *v191++ = v250;
LABEL_288:
              v251 = *v138++;
              *v191++ = v251;
LABEL_289:
              v252 = *v138++;
              *v191++ = v252;
LABEL_290:
              *v191 = *v138;
              break;
            default:
              __asm { BR              X2 }
              return result;
          }
        }
        *(_QWORD *)(v22 + 888) = v110;
        *(_QWORD *)(v22 + 896) = v112;
        *(_DWORD *)(v22 + 912) = v111;
        *(_QWORD *)(v22 + 904) = v158;
        v253 = (char *)(v152 + v151);
        if (v152 + v151 <= (unint64_t)(v157 + 64))
          v253 = v157 + 64;
        ((void (*)(_QWORD *, void *, unint64_t))v109[((-79
                                                                                        * ((*(_DWORD *)v271
                                                                                          - *(_DWORD *)v272) ^ 0x63)) ^ *(_BYTE *)(v18 + (*(unsigned __int8 *)(v17 + (-79 * ((*(_DWORD *)v271 - *(_DWORD *)v272) ^ 0x63))) ^ 0xBFu)))
                                                                     - 79])((_QWORD *)v157 + 7, v109[((-79 * ((*(_BYTE *)v271 + *(_BYTE *)v272) ^ 0x63)) ^ byte_1CF37BD80[byte_1CF37A580[(-79 * ((*(_BYTE *)v271 + *(_BYTE *)v272) ^ 0x63))] ^ 4])+ 3], ((v253 - v157 - 57) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v157 != (char *)v294)
        {
          v254 = v294;
          v255 = (unint64_t)&v157[-v294];
          v298 = (unint64_t)&v157[-v294];
          *((_QWORD *)v157 + 1) &= ~1uLL;
          *(_QWORD *)(v254 + 8) = (unint64_t)&v157[-v254] | 1;
          *(_QWORD *)v157 = &v157[-v254];
          if ((unint64_t)&v157[-v254] > 0xFF)
          {
            v283 = 31;
            if (!(v255 >> 24))
            {
              v260 = (((v298 >> 8) + 1048320) >> 16) & 8;
              v261 = (v298 >> 8) << v260;
              v262 = (v261 << (((v261 + 520192) >> 16) & 4) << ((((v261 << (((v261 + 520192) >> 16) & 4)) + 245760) >> 16) & 2) >> 15)
                   - (((v261 + 520192) >> 16) & 4 | v260 | (((v261 << (((v261 + 520192) >> 16) & 4)) + 245760) >> 16) & 2);
              v283 = ((v298 >> (v262 + 21)) & 1 | (2 * v262)) + 28;
            }
            v284 = v283;
            v263 = v22 + 8 * v283 + 600;
            *(_DWORD *)(v294 + 56) = v283;
            v285 = v263;
            v286 = v22 + 4;
            v274 = v156;
            v208 = *(_QWORD *)(v19
                             + 8
                             * (((-79 * ((*(_BYTE *)v271 + *(_BYTE *)v272) ^ 0x63)) ^ *(_BYTE *)(v18 + (*(unsigned __int8 *)(v17 + (-79 * ((*(_BYTE *)v271 + *(_BYTE *)v272) ^ 0x63))) ^ 0x4Bu)))
                              + 1794))
                 - 12;
            goto LABEL_270;
          }
          v256 = v255 >> 3;
          v257 = v22 + ((2 * v255) & 0x7FFFFFFF0) + 72;
          v258 = 1 << v256;
          if ((v258 & *(_DWORD *)v22) != 0)
          {
            v259 = *(_QWORD *)(v257 + 16);
          }
          else
          {
            *(_DWORD *)v22 |= v258;
            v259 = v257;
          }
          v264 = v294;
          *(_QWORD *)(v257 + 16) = v294;
          *(_QWORD *)(v259 + 24) = v264;
          *(_QWORD *)(v264 + 16) = v259;
          *(_QWORD *)(v264 + 24) = v257;
        }
LABEL_302:
        if (*v292 > v291)
        {
          v265 = v291;
          v266 = *v292 - v291;
          *v292 = v266;
          v267 = *v293;
          v268 = (int64_t *)(*v293 + v265);
          *v293 = (unint64_t)v268;
          v268[1] = v266 | 1;
          *(_QWORD *)(v267 + 8) = v265 | 3;
          *v268 = *v16 ^ v22;
          result = (_QWORD *)(v267 + 16);
          goto LABEL_99;
        }
        goto LABEL_304;
      }
      *(_QWORD *)(v22 + 888) = v110;
      *(_QWORD *)(v22 + 896) += v106;
      if (((v110 + 16) & 0xF) != 0)
        v141 = -((_DWORD)v110 + 16) & 0xFLL;
      else
        v141 = 0;
      v142 = v110 + v141;
      if (((v139 + 16) & 0xF) != 0)
        v143 = -((_DWORD)v139 + 16) & 0xFLL;
      else
        v143 = 0;
      v144 = v139 + v143;
      v145 = v291;
      v295 = (uint64_t *)v142;
      v296 = v142 + v291;
      v146 = v144 - v142 - v291;
      *(_QWORD *)(v142 + 8) = v291 | 3;
      *(_QWORD *)(v142 + v145) = *v16 ^ v22;
      if (v144 == *v293)
      {
        v219 = *v292 + v146;
        *v292 = v219;
        v220 = v296;
        *v293 = v296;
        *(_QWORD *)(v220 + 8) = v219 | 1;
      }
      else
      {
        if (v144 != *(_QWORD *)(v22 + 32))
        {
          v147 = *(_QWORD *)(v144 + 8);
          if ((v147 & 3) != 1)
          {
LABEL_261:
            v297 = v146;
            *(_QWORD *)(v144 + 8) = v147 & 0xFFFFFFFFFFFFFFFELL;
            v233 = v296;
            *(_QWORD *)(v296 + 8) = v146 | 1;
            *(_QWORD *)(v233 + v146) = v146;
            if (v146 <= 0xFF)
            {
              v234 = v146 >> 3;
              v235 = v22 + ((2 * v146) & 0x7FFFFFFF0) + 72;
              v236 = 1 << v234;
              if ((v236 & *(_DWORD *)v22) != 0)
              {
                v237 = *(_QWORD *)(v235 + 16);
              }
              else
              {
                *(_DWORD *)v22 |= v236;
                v237 = v235;
              }
              v243 = v296;
              *(_QWORD *)(v235 + 16) = v296;
              *(_QWORD *)(v237 + 24) = v243;
              *(_QWORD *)(v243 + 16) = v237;
              *(_QWORD *)(v243 + 24) = v235;
              goto LABEL_282;
            }
            v279 = 31;
            if (!(v146 >> 24))
            {
              v238 = (((v297 >> 8) + 1048320) >> 16) & 8;
              v239 = (v297 >> 8) << v238;
              v240 = (v239 << (((v239 + 520192) >> 16) & 4) << ((((v239 << (((v239 + 520192) >> 16) & 4)) + 245760) >> 16) & 2) >> 15)
                   - (((v239 + 520192) >> 16) & 4 | v238 | (((v239 << (((v239 + 520192) >> 16) & 4)) + 245760) >> 16) & 2);
              v279 = ((v297 >> (v240 + 21)) & 1 | (2 * v240)) + 28;
            }
            v280 = v279;
            v241 = v22 + 8 * v279 + 600;
            v242 = v296;
            *(_DWORD *)(v296 + 56) = v279;
            v281 = v241;
            v282 = v22 + 4;
            v274 = (_BYTE *)(v242 + 32);
            v208 = *(_QWORD *)(v19
                             + 8
                             * (((-79 * ((*(_DWORD *)v271 - *(_DWORD *)v272) ^ 0x63)) ^ byte_1CF37D9B0[byte_1CF37C948[(-79 * ((*(_DWORD *)v271 - *(_DWORD *)v272) ^ 0x63)) + 248] ^ 0x65])
                              + 1729));
LABEL_270:
            v273 = v208;
            v244 = v274;
            v245 = -(int)v274 & 7;
            if (v245 > 0x10)
              LODWORD(v245) = 16;
            switch((int)v245)
            {
              case 1:
                goto LABEL_279;
              case 2:
                goto LABEL_278;
              case 3:
                goto LABEL_277;
              case 4:
                goto LABEL_276;
              case 5:
                goto LABEL_275;
              case 6:
                goto LABEL_274;
              case 7:
                *v274 = 0;
                v244 = v274 + 1;
LABEL_274:
                *v244++ = 0;
LABEL_275:
                *v244++ = 0;
LABEL_276:
                *v244++ = 0;
LABEL_277:
                *v244++ = 0;
LABEL_278:
                *v244++ = 0;
LABEL_279:
                *v244++ = 0;
                break;
              default:
                break;
            }
            switch(16 - v245)
            {
              case 0:
                __asm { BR              X8 }
                return result;
              case 1:
                goto LABEL_313;
              case 2:
                goto LABEL_312;
              case 3:
                goto LABEL_311;
              case 4:
                goto LABEL_310;
              case 5:
                goto LABEL_309;
              case 6:
                goto LABEL_308;
              case 7:
                *v244++ = 0;
LABEL_308:
                *v244++ = 0;
LABEL_309:
                *v244++ = 0;
LABEL_310:
                *v244++ = 0;
LABEL_311:
                *v244++ = 0;
LABEL_312:
                *v244++ = 0;
LABEL_313:
                *v244 = 0;
                __asm { BR              X8 }
                return result;
              default:
                __asm { BR              X15 }
                return result;
            }
          }
          v148 = v147 & 0xFFFFFFFFFFFFFFF8;
          if (v147 <= 0xFF)
          {
            v149 = *(_QWORD *)(v144 + 16);
            v150 = *(_QWORD *)(v144 + 24);
            if (v150 == v149)
            {
              *(_DWORD *)v22 &= ~(1 << (v147 >> 3));
            }
            else
            {
              *(_QWORD *)(v149 + 24) = v150;
              *(_QWORD *)(v150 + 16) = v149;
            }
            goto LABEL_260;
          }
          v223 = *(_QWORD *)(v144 + 48);
          v224 = *(_QWORD **)(v144 + 24);
          if (v224 == (_QWORD *)v144)
          {
            v226 = (_QWORD *)(v144 + 40);
            v227 = *(_QWORD **)(v144 + 40);
            if (v227 || (v226 = (_QWORD *)(v144 + 32), (v227 = *(_QWORD **)(v144 + 32)) != 0))
            {
              do
              {
                do
                {
                  v228 = v226;
                  v224 = v227;
                  v226 = v227 + 5;
                  v227 = (_QWORD *)v227[5];
                }
                while (v227);
                v226 = v224 + 4;
                v227 = (_QWORD *)v224[4];
              }
              while (v227);
              *v228 = 0;
            }
            else
            {
              v224 = 0;
            }
            v22 = v270;
          }
          else
          {
            v225 = *(_QWORD *)(v144 + 16);
            *(_QWORD *)(v225 + 24) = v224;
            v224[2] = v225;
          }
          if (!v223)
            goto LABEL_260;
          v229 = v22 + 8 * *(unsigned int *)(v144 + 56);
          if (v144 == *(_QWORD *)(v229 + 600))
          {
            *(_QWORD *)(v229 + 600) = v224;
            if (!v224)
            {
              *(_DWORD *)(v22 + 4) &= ~(1 << *(_DWORD *)(v144 + 56));
LABEL_260:
              v144 += v148;
              v146 += v148;
              v147 = *(_QWORD *)(v144 + 8);
              goto LABEL_261;
            }
          }
          else
          {
            v230 = 40;
            if (*(_QWORD *)(v223 + 32) == v144)
              v230 = 32;
            *(_QWORD *)(v223 + v230) = v224;
            if (!v224)
              goto LABEL_260;
          }
          v224[6] = v223;
          v231 = *(_QWORD *)(v144 + 32);
          if (v231)
          {
            v224[4] = v231;
            *(_QWORD *)(v231 + 48) = v224;
          }
          v232 = *(_QWORD *)(v144 + 40);
          if (v232)
          {
            v224[5] = v232;
            *(_QWORD *)(v232 + 48) = v224;
          }
          goto LABEL_260;
        }
        v221 = *(_QWORD *)(v22 + 8) + v146;
        *(_QWORD *)(v22 + 8) = v221;
        v222 = v296;
        *(_QWORD *)(v22 + 32) = v296;
        *(_QWORD *)(v222 + 8) = v221 | 1;
        *(_QWORD *)(v222 + v221) = v221;
      }
LABEL_282:
      v93 = v295;
      goto LABEL_98;
    }
  }
LABEL_99:
  if ((*(_BYTE *)(v22 + 880) & 2) != 0)
    atomic_store(0, (unsigned int *)(v22 + 884));
  return result;
}

uint64_t sub_1CF36F1E4(uint64_t a1)
{
  unsigned int v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = 1379287162
     - 2076429097 * ((((2 * &v2) | 0xF8822CE6) - &v2 - 2084640371) ^ 0x3E73EE8B);
  sub_1CF3700B4((uint64_t)&v2);
  return v2;
}

uint64_t sub_1CF36F27C(uint64_t a1, uint64_t a2)
{
  unint64_t *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  _BYTE v9[8];

  v2 = (unint64_t *)*(&off_1E8C4D9A0
                           + (byte_1CF37BE88[(byte_1CF37A688[(-79
                                                                                              * ((dword_1EFB8D338
                                                                                                + qword_1EFB8D300) ^ 0x63))
                                                                            - 8] ^ 0x8F)
                                                            - 8] ^ (-79 * ((dword_1EFB8D338 + qword_1EFB8D300) ^ 0x63)))
                           - 68);
  v3 = (unint64_t)&v9[*v2 - qword_1EFB8D300];
  v4 = (565822129 * v3) ^ 0xEBA05D989A3C0D63;
  v5 = 565822129 * (v3 ^ 0xEBA05D989A3C0D63);
  qword_1EFB8D300 = v4;
  *v2 = v5;
  v6 = ((uint64_t (*)(uint64_t))*(&off_1E8C4D9A0
                                         + (byte_1CF37D9B4[(byte_1CF37CA48[(-79 * ((v5 - qword_1EFB8D300) ^ 0x63))
                                                                                          - 8] ^ 0x90)
                                                                          - 4] ^ (-79 * ((v5 - qword_1EFB8D300) ^ 0x63)))
                                         - 16))(a2);
  v7 = -79 * (qword_1EFB8D300 ^ 0x63 ^ *(_DWORD *)v2);
  return ((uint64_t (*)(uint64_t))*(&off_1E8C4D9A0
                                           + (byte_1CF37BD84[(byte_1CF37A58C[v7 - 12] ^ 4) - 4] ^ v7)
                                           - 34))(v6);
}

uint64_t sub_1CF36F3C8(uint64_t *a1)
{
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = (unint64_t *)*(&off_1E8C4D9A0
                           + (byte_1CF37BD84[(byte_1CF37A58C[(-79
                                                                                              * ((dword_1EFB8D338
                                                                                                - qword_1EFB8D3A0) ^ 0x63))
                                                                            + 244] ^ 0x4B)
                                                            + 252] ^ (-79 * ((dword_1EFB8D338 - qword_1EFB8D3A0) ^ 0x63)))
                           - 86);
  v3 = *v2 - qword_1EFB8D3A0 - (_QWORD)&v9;
  v4 = 565822129 * (v3 + 0x145FA26765C3F29DLL);
  v5 = 565822129 * (v3 ^ 0xEBA05D989A3C0D63);
  qword_1EFB8D3A0 = v4;
  *v2 = v5;
  v6 = ((uint64_t (*)(uint64_t))((char *)*(&off_1E8C4D9A0
                                                  + ((-79 * ((v5 + qword_1EFB8D3A0) ^ 0x63)) ^ byte_1CF37BD84[(byte_1CF37A58C[(-79 * ((v5 + qword_1EFB8D3A0) ^ 0x63)) + 244] ^ 0x69) + 252])
                                                  - 63)
                                        - 8))(16);
  if (v6)
    v7 = 0;
  else
    v7 = 0xFFFFFFFFLL;
  *a1 = v6;
  return v7;
}

_QWORD *sub_1CF36F4D4(_QWORD *result, char *a2, int a3, uint64_t a4)
{
  char v4;

  for (; a3; --a3)
  {
    v4 = *a2++;
    *(_BYTE *)(*result + (a4++ & 0xF)) = v4;
  }
  return result;
}

uint64_t sub_1CF36F4F8(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  char v3;

  v1 = *(&off_1E8C4D9A0
       + (byte_1CF37D9B0[byte_1CF37C948[(-79
                                                                                          * ((dword_1EFB8D338
                                                                                            - qword_1EFB8D3E0) ^ 0x63))
                                                                        + 248] ^ 0x72] ^ (-79
                                                                                        * ((dword_1EFB8D338
                                                                                          - qword_1EFB8D3E0) ^ 0x63)))
       - 59);
  v2 = *v1 - qword_1EFB8D3E0 - (_QWORD)&v3;
  qword_1EFB8D3E0 = 565822129 * v2 - 0x4008717C6ACAB88DLL;
  *v1 = 565822129 * (v2 ^ 0xEBA05D989A3C0D63);
  if (result)
    return ((uint64_t (*)(void))((char *)*(&off_1E8C4D9A0
                                        + ((-79 * (qword_1EFB8D3E0 ^ 0x63 ^ *(_DWORD *)v1)) ^ byte_1CF37D9B0[byte_1CF37C948[(-79 * (qword_1EFB8D3E0 ^ 0x63 ^ *(_DWORD *)v1)) + 248] ^ 0x72])
                                        + 7)
                              - 8))();
  return result;
}

uint64_t *sub_1CF36F5E0(uint64_t *result, _BYTE *a2, int a3, uint64_t a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t *v6;
  uint64_t v7;
  BOOL v8;

  for (; a3; --a3)
  {
    v4 = result[1];
    if (v4)
      v5 = v4 == a4;
    else
      v5 = 1;
    v6 = result;
    if (!v5)
    {
      v6 = result;
      do
      {
        v6 = (uint64_t *)*v6;
        v7 = v6[1];
        if (v7)
          v8 = v7 == a4;
        else
          v8 = 1;
      }
      while (!v8);
    }
    *a2++ = *((_BYTE *)v6 + 16);
    ++a4;
  }
  return result;
}

uint64_t *sub_1CF36F62C(uint64_t *result, char *a2, int a3, uint64_t a4)
{
  char v4;
  uint64_t *v5;
  uint64_t v6;
  BOOL v7;

  for (; a3; --a3)
  {
    v4 = *a2;
    v5 = result;
    do
    {
      v5 = (uint64_t *)*v5;
      v6 = v5[1];
      if (v6)
        v7 = v6 == a4;
      else
        v7 = 1;
    }
    while (!v7);
    if (!v6)
      v5[1] = a4;
    *((_BYTE *)v5 + 16) = v4;
    ++a2;
    ++a4;
  }
  return result;
}

_QWORD *sub_1CF36F670(_QWORD *result)
{
  _QWORD *v1;
  _QWORD *v2;
  unsigned __int8 v3;
  _BYTE v4[8];

  v1 = *(&off_1E8C4D9A0
       + (byte_1CF37BE88[(byte_1CF37A688[(-79
                                                                          * ((dword_1EFB8D338 - qword_1EFB8D310) ^ 0x63))
                                                        - 8] ^ 0xBF)
                                        - 8] ^ (-79 * ((dword_1EFB8D338 - qword_1EFB8D310) ^ 0x63)))
       - 62);
  qword_1EFB8D310 = 565822129 * ((unint64_t)&v4[*v1 ^ qword_1EFB8D310] ^ 0xEBA05D989A3C0D63);
  *v1 = qword_1EFB8D310;
  if (result)
  {
    do
    {
      v2 = (_QWORD *)*result;
      v3 = -79 * (qword_1EFB8D310 ^ *(_DWORD *)v1 ^ 0x63);
      ((void (*)(void))((char *)*(&off_1E8C4D9A0
                                + (byte_1CF37BD84[(byte_1CF37A58C[v3 - 12] ^ 0x49) - 4] ^ v3)
                                + 10)
                      - 8))();
      result = v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1CF36F798(uint64_t result, _BYTE *a2, int a3, uint64_t a4)
{
  uint64_t v4;

  if (a3)
  {
    v4 = result + a4 * (result | 1);
    do
    {
      *a2++ = *(_BYTE *)(result + (v4 & 0xF));
      v4 += result | 1;
      --a3;
    }
    while (a3);
  }
  return result;
}

_QWORD *sub_1CF36F7C0(_QWORD *result, char *a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  if (a3)
  {
    v4 = *result | 1;
    v5 = *result + v4 * a4;
    do
    {
      v6 = *a2++;
      *(_BYTE *)(*result + (v5 & 0xF)) = v6;
      v5 += v4;
      --a3;
    }
    while (a3);
  }
  return result;
}

uint64_t sub_1CF36F7F0(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  unsigned __int8 v3;
  char v4;

  v1 = *(&off_1E8C4D9A0
       + (byte_1CF37BE88[(byte_1CF37A688[(-79
                                                                          * ((dword_1EFB8D338 + qword_1EFB8D350) ^ 0x63))
                                                        - 8] ^ 0x4B)
                                        - 8] ^ (-79 * ((dword_1EFB8D338 + qword_1EFB8D350) ^ 0x63)))
       - 86);
  v2 = *v1 - qword_1EFB8D350 - (_QWORD)&v4;
  qword_1EFB8D350 = 565822129 * v2 + 0x145FA26765C3F29DLL;
  *v1 = 565822129 * (v2 ^ 0xEBA05D989A3C0D63);
  if (result)
  {
    v3 = -79 * (qword_1EFB8D350 ^ 0x63 ^ *(_DWORD *)v1);
    return ((uint64_t (*)(void))((char *)*(&off_1E8C4D9A0
                                        + (byte_1CF37A484[(byte_1CF37D8B4[v3 - 4] ^ 0xCD)
                                                                                       - 4] ^ v3)
                                        + 13)
                              - 8))();
  }
  return result;
}

uint64_t sub_1CF36F8E4(uint64_t result, _BYTE *a2, int a3, char a4)
{
  int v5;
  uint64_t v7;

  if (a3)
  {
    v5 = a3;
    v7 = result;
    do
    {
      result = sub_1CF36FC84(*(_QWORD *)(v7 + 16 * (a4 & 0xF)), 0, *(unsigned __int8 *)(v7 + 16 * (a4 & 0xF) + 8));
      *a2++ = result;
      ++a4;
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_1CF36F940(uint64_t result, unsigned __int8 *a2, int a3, char a4)
{
  _QWORD *v4;
  unint64_t v5;
  int v7;
  _QWORD *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v4 = *(&off_1E8C4D9A0
       + (byte_1CF37BD84[(byte_1CF37A58C[(-79
                                                                          * ((dword_1EFB8D338 + qword_1EFB8D3B8) ^ 0x63))
                                                        - 12] ^ 0xE4)
                                        - 4] ^ (-79 * ((dword_1EFB8D338 + qword_1EFB8D3B8) ^ 0x63)))
       - 92);
  v5 = (*v4 + qword_1EFB8D3B8) ^ (unint64_t)&v14;
  qword_1EFB8D3B8 = 565822129 * v5 + 0x145FA26765C3F29DLL;
  *v4 = 565822129 * (v5 ^ 0xEBA05D989A3C0D63);
  if (a3)
  {
    v7 = a3;
    v9 = (_QWORD *)result;
    do
    {
      v10 = *a2++;
      v11 = *v9 + 16 * (a4 & 0xF);
      v12 = *(_QWORD *)v11;
      v13 = *(unsigned __int8 *)(v11 + 8);
      LOBYTE(v11) = -79 * (qword_1EFB8D3B8 ^ *(_DWORD *)v4 ^ 0x63);
      result = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))((char *)*(&off_1E8C4D9A0
                                                                                   + (byte_1CF37BE88[(byte_1CF37A688[v11 - 8] ^ 0x8F) - 8] ^ v11)
                                                                                   - 14)
                                                                         - 4))(v12, 0, v13, v10);
      ++a4;
      --v7;
    }
    while (v7);
  }
  return result;
}

_QWORD *sub_1CF36FAB4(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)(_QWORD *);
  char v5;

  v1 = *(&off_1E8C4D9A0
       + (byte_1CF37BD80[byte_1CF37A580[(-79
                                                                         * (qword_1EFB8D3B0 ^ 0x63 ^ dword_1EFB8D338))] ^ 0xE4] ^ (-79 * (qword_1EFB8D3B0 ^ 0x63 ^ dword_1EFB8D338)))
       - 92);
  v2 = *v1 - qword_1EFB8D3B0 - (_QWORD)&v5;
  qword_1EFB8D3B0 = (565822129 * v2) ^ 0xEBA05D989A3C0D63;
  *v1 = 565822129 * (v2 ^ 0xEBA05D989A3C0D63);
  if (result)
  {
    v3 = result;
    v4 = (uint64_t (*)(_QWORD *))((char *)*(&off_1E8C4D9A0
                                                    + ((-79 * ((*(_BYTE *)v1 + qword_1EFB8D3B0) ^ 0x63)) ^ byte_1CF37BD80[byte_1CF37A580[(-79 * ((*(_BYTE *)v1 + qword_1EFB8D3B0) ^ 0x63))] ^ 0xE4])
                                                    - 26)
                                          - 8);
    v4((_QWORD *)*result);
    v4((_QWORD *)v3[2]);
    v4((_QWORD *)v3[4]);
    v4((_QWORD *)v3[6]);
    v4((_QWORD *)v3[8]);
    v4((_QWORD *)v3[10]);
    v4((_QWORD *)v3[12]);
    v4((_QWORD *)v3[14]);
    v4((_QWORD *)v3[16]);
    v4((_QWORD *)v3[18]);
    v4((_QWORD *)v3[20]);
    v4((_QWORD *)v3[22]);
    v4((_QWORD *)v3[24]);
    v4((_QWORD *)v3[26]);
    v4((_QWORD *)v3[28]);
    v4((_QWORD *)v3[30]);
    return (_QWORD *)v4(v3);
  }
  return result;
}

uint64_t sub_1CF36FC84(uint64_t a1, unsigned int a2, int a3)
{
  int v5;
  uint64_t v6;
  char v7;
  char v8;
  unsigned __int8 v9;

  if (a3)
  {
    v5 = 2 * a2;
    v6 = (a3 - 1);
    v7 = sub_1CF36FC84(a1, (2 * a2) | 1, v6);
    v8 = sub_1CF36FC84(a1, (v5 + 2), v6);
    v9 = v8 ^ v7;
    if (*(_BYTE *)(a1 + a2))
      v9 = *(_BYTE *)(a1 + a2);
    if (*(_BYTE *)(a1 + a2) == 1)
      return (v8 + v7);
    else
      return v9;
  }
  else
  {
    return *(unsigned __int8 *)(a1 + a2);
  }
}

uint64_t sub_1CF36FD10()
{
  unint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v5;

  v0 = (unint64_t *)*(&off_1E8C4D9A0
                           + (byte_1CF37A484[(byte_1CF37D8B4[(-79
                                                                                              * ((dword_1EFB8D338
                                                                                                + qword_1EFB8D340) ^ 0x63))
                                                                            - 4] ^ 0x87)
                                                            - 4] ^ (-79 * ((dword_1EFB8D338 + qword_1EFB8D340) ^ 0x63)))
                           - 65);
  v1 = (*v0 + qword_1EFB8D340) ^ (unint64_t)&v5;
  v2 = 565822129 * v1 + 0x145FA26765C3F29DLL;
  v3 = 565822129 * (v1 ^ 0xEBA05D989A3C0D63);
  qword_1EFB8D340 = v2;
  *v0 = v3;
  return ((uint64_t (*)(void))((char *)*(&off_1E8C4D9A0
                                      + (byte_1CF37A380[byte_1CF37D7B8[(-79 * (qword_1EFB8D340 ^ 0x63 ^ v3))
                                                                                      - 8] ^ 0x54] ^ (-79 * (qword_1EFB8D340 ^ 0x63 ^ v3)))
                                      - 66)
                            - 8))();
}

_BYTE *sub_1CF36FDF0(_BYTE *result, char a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = -(int)result & 7;
  if (v3 > a3)
    LODWORD(v3) = a3;
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  v4 = a3 - v3;
  v6 = v4;
  v5 = v4 & 7;
  switch(v6)
  {
    case 0uLL:
      return result;
    case 1uLL:
      goto LABEL_20;
    case 2uLL:
      goto LABEL_19;
    case 3uLL:
      goto LABEL_18;
    case 4uLL:
      goto LABEL_17;
    case 5uLL:
      goto LABEL_16;
    case 6uLL:
      goto LABEL_15;
    case 7uLL:
      *result++ = a2;
LABEL_15:
      *result++ = a2;
LABEL_16:
      *result++ = a2;
LABEL_17:
      *result++ = a2;
LABEL_18:
      *result++ = a2;
LABEL_19:
      *result++ = a2;
LABEL_20:
      *result = a2;
      break;
    default:
      result = (_BYTE *)((uint64_t (*)(void))((char *)&loc_1CF36FE80 + 4 * byte_1CF37A787[(v5 >> 3) & 7]))();
      break;
  }
  return result;
}

uint64_t sub_1CF36FEE4(uint64_t a1)
{
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v2 = a1;
  v4 = 1998160822
     - 1425831821 * ((((&v2 | 0x52A52C30) ^ 0xFFFFFFFE) - (~&v2 | 0xAD5AD3CF)) ^ 0xFD774F17);
  sub_1CF370220((uint64_t)&v2);
  return v3;
}

uint64_t sub_1CF36FF80(uint64_t a1, int a2)
{
  unsigned int v4;
  uint64_t v6;
  unsigned int v7;
  int v8;
  int v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  LODWORD(v6) = (248152243 * ((&v6 & 0x2BEA1031 | ~(&v6 | 0x2BEA1031)) ^ 0xCED0A26C)) ^ 0x56EDD32D;
  sub_1CF370E18(&v6);
  v4 = 1498267367 * (((&v6 | 0xBFF0E988) - (&v6 & 0xBFF0E988)) ^ 0x970BD580);
  v7 = a2 - ((2 * a2) & 0x3497EAEC) - 1706297994 + v4;
  v9 = v4 ^ 0x3BE;
  v6 = a1;
  sub_1CF2C5F3C((uint64_t)&v6);
  return (589456041 * v8 - 85250055);
}

void sub_1CF3700B4(uint64_t a1)
{
  int v2;
  uint64_t v3;
  _DWORD v4[2];
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v2 = *(_DWORD *)(a1 + 16)
     + 2076429097 * ((((2 * (a1 ^ 0x6B58D2DD)) | 0x803DAA60) - (a1 ^ 0x6B58D2DD) + 1071721168) ^ 0xE974FF15);
  v3 = *(_QWORD *)(a1 + 8);
  v4[0] = (248152243 * ((v4 - 397293405 - 2 * (v4 & 0xE851C8A3)) ^ 0xF2948501)) ^ (v2 + 79139507);
  sub_1CF370E18(v4);
  v5 = v3;
  v4[0] = v2
        + 1779465991 * ((-1962458332 - (v4 | 0x8B074324) + (v4 | 0x74F8BCDB)) ^ 0x523C3A15)
        - 1379286355;
  sub_1CF3631CC(v4);
  *(_DWORD *)a1 = 260430583 * v4[1] - 1830933960;
}

void sub_1CF370220(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v2 = *(_DWORD *)(a1 + 12) + 1425831821 * (a1 ^ 0x502D9CD8);
  v3 = *(_QWORD *)a1;
  LODWORD(v4) = (248152243 * ((&v4 + 638225892 - 2 * (&v4 & 0x260A8DE4)) ^ 0x3CCFC046)) ^ (v2 - 539734153);
  sub_1CF370E18(&v4);
  v5 = v2
     + 55633441 * ((((2 * &v4) | 0x8F14EA0C) - &v4 + 947227386) ^ 0xFF094EB9)
     - 1998159051;
  v4 = v3;
  sub_1CF36333C((uint64_t)&v4);
  *(_DWORD *)(a1 + 8) = 1741044849 * v6 + 753596823;
}

double sub_1CF370358(uint64_t a1, __int128 *a2, unsigned int a3, uint64_t a4)
{
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  if (a3)
  {
    if (a3 < 8
      || a3 - 1 > 0xF
      || (~(_DWORD)a4 & 0xFu) < (((_BYTE)a3 - 1) & 0xFu)
      || (unint64_t)a2 - a1 - (a4 & 0xF) < 0x20)
    {
      v4 = a4;
      v5 = a2;
      goto LABEL_4;
    }
    v6 = a3;
    if (a3 >= 0x20)
    {
      v7 = a3 & 0xFFFFFFE0;
      v8 = (__int128 *)(a1 + (a4 & 0xF));
      v9 = *v8;
      v10 = v8[1];
      *a2 = *v8;
      a2[1] = v10;
      if (v7 == a3)
        return *(double *)&v9;
      if ((a3 & 0x18) == 0)
      {
        a3 -= v7;
        v5 = (__int128 *)((char *)a2 + v7);
        v4 = a4 + v7;
        goto LABEL_4;
      }
    }
    else
    {
      v7 = 0;
    }
    v4 = a4 + (a3 & 0xFFFFFFF8);
    v5 = (__int128 *)((char *)a2 + (a3 & 0xFFFFFFF8));
    a3 -= a3 & 0xFFFFFFF8;
    v11 = (_QWORD *)((char *)a2 + v7);
    v12 = v7 + a4;
    v13 = v7 - (v6 & 0xFFFFFFF8);
    do
    {
      *(_QWORD *)&v9 = *(_QWORD *)(a1 + (v12 & 0xF));
      *v11++ = v9;
      v12 += 8;
      v13 += 8;
    }
    while (v13);
    if ((v6 & 0xFFFFFFF8) == v6)
      return *(double *)&v9;
    do
    {
LABEL_4:
      *(_BYTE *)v5 = *(_BYTE *)(a1 + (v4 & 0xF));
      v5 = (__int128 *)((char *)v5 + 1);
      ++v4;
      --a3;
    }
    while (a3);
  }
  return *(double *)&v9;
}

uint64_t sub_1CF370444(_QWORD *a1)
{
  unint64_t *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t (*v6)(uint64_t);
  _BYTE *v7;
  _QWORD *v8;
  _BYTE *v9;
  _QWORD *v10;
  _BYTE *v11;
  _QWORD *v12;
  _BYTE *v13;
  _QWORD *v14;
  _BYTE *v15;
  _QWORD *v16;
  _BYTE *v17;
  _QWORD *v18;
  _BYTE *v19;
  _QWORD *v20;
  _BYTE *v21;
  _QWORD *v22;
  _BYTE *v23;
  _QWORD *v24;
  _BYTE *v25;
  _QWORD *v26;
  _BYTE *v27;
  _QWORD *v28;
  _BYTE *v29;
  _QWORD *v30;
  _BYTE *v31;
  _QWORD *v32;
  _BYTE *v33;
  _QWORD *v34;
  _BYTE *v35;
  _QWORD *v36;
  _BYTE *v37;
  unsigned __int8 v39;
  char v40;

  v2 = (unint64_t *)*(&off_1E8C4D9A0
                           + (byte_1CF37BE88[(byte_1CF37A688[(-79
                                                                                              * ((dword_1EFB8D338
                                                                                                - qword_1EFB8D3D8) ^ 0x63))
                                                                            - 8] ^ 0xBF)
                                                            - 8] ^ (-79 * ((dword_1EFB8D338 - qword_1EFB8D3D8) ^ 0x63)))
                           - 62);
  v3 = (*v2 + qword_1EFB8D3D8) ^ (unint64_t)&v40;
  v4 = (565822129 * v3) ^ 0xEBA05D989A3C0D63;
  v5 = 565822129 * (v3 ^ 0xEBA05D989A3C0D63);
  qword_1EFB8D3D8 = v4;
  *v2 = v5;
  v6 = (uint64_t (*)(uint64_t))((char *)*(&off_1E8C4D9A0
                                                 + (byte_1CF37A484[(byte_1CF37D8B4[(-79 * (qword_1EFB8D3D8 ^ 0x63 ^ v5)) - 4] ^ 0x99)
                                                                                  - 4] ^ (-79
                                                                                        * (qword_1EFB8D3D8 ^ 0x63 ^ v5)))
                                                 - 60)
                                       - 8);
  v7 = (_BYTE *)v6(24);
  if (!v7)
    goto LABEL_18;
  v8 = v7;
  *a1 = v7;
  sub_1CF36FDF0(v7, 0, 0x10uLL);
  v9 = (_BYTE *)v6(24);
  if (!v9)
    goto LABEL_18;
  v10 = v9;
  *v8 = v9;
  sub_1CF36FDF0(v9, 0, 0x10uLL);
  v11 = (_BYTE *)v6(24);
  if (!v11)
    goto LABEL_18;
  v12 = v11;
  *v10 = v11;
  sub_1CF36FDF0(v11, 0, 0x10uLL);
  v13 = (_BYTE *)v6(24);
  if (!v13)
    goto LABEL_18;
  v14 = v13;
  *v12 = v13;
  sub_1CF36FDF0(v13, 0, 0x10uLL);
  v15 = (_BYTE *)v6(24);
  if (!v15)
    goto LABEL_18;
  v16 = v15;
  *v14 = v15;
  sub_1CF36FDF0(v15, 0, 0x10uLL);
  v17 = (_BYTE *)v6(24);
  if (!v17)
    goto LABEL_18;
  v18 = v17;
  *v16 = v17;
  sub_1CF36FDF0(v17, 0, 0x10uLL);
  v19 = (_BYTE *)v6(24);
  if (!v19)
    goto LABEL_18;
  v20 = v19;
  *v18 = v19;
  sub_1CF36FDF0(v19, 0, 0x10uLL);
  v21 = (_BYTE *)v6(24);
  if (!v21)
    goto LABEL_18;
  v22 = v21;
  *v20 = v21;
  sub_1CF36FDF0(v21, 0, 0x10uLL);
  v23 = (_BYTE *)v6(24);
  if (!v23)
    goto LABEL_18;
  v24 = v23;
  *v22 = v23;
  sub_1CF36FDF0(v23, 0, 0x10uLL);
  v25 = (_BYTE *)v6(24);
  if (!v25)
    goto LABEL_18;
  v26 = v25;
  *v24 = v25;
  sub_1CF36FDF0(v25, 0, 0x10uLL);
  v27 = (_BYTE *)v6(24);
  if (!v27)
    goto LABEL_18;
  v28 = v27;
  *v26 = v27;
  sub_1CF36FDF0(v27, 0, 0x10uLL);
  v29 = (_BYTE *)v6(24);
  if (!v29)
    goto LABEL_18;
  v30 = v29;
  *v28 = v29;
  sub_1CF36FDF0(v29, 0, 0x10uLL);
  v31 = (_BYTE *)v6(24);
  if (!v31)
    goto LABEL_18;
  v32 = v31;
  *v30 = v31;
  sub_1CF36FDF0(v31, 0, 0x10uLL);
  v33 = (_BYTE *)v6(24);
  if (!v33)
    goto LABEL_18;
  v34 = v33;
  *v32 = v33;
  sub_1CF36FDF0(v33, 0, 0x10uLL);
  v35 = (_BYTE *)v6(24);
  if (!v35)
    goto LABEL_18;
  v36 = v35;
  *v34 = v35;
  sub_1CF36FDF0(v35, 0, 0x10uLL);
  v37 = (_BYTE *)v6(24);
  if (v37)
  {
    *v36 = v37;
    sub_1CF36FDF0(v37, 0, 0x10uLL);
    return 0;
  }
  else
  {
LABEL_18:
    v39 = -79 * ((*(_DWORD *)v2 + qword_1EFB8D3D8) ^ 0x63);
    ((void (*)(_QWORD))*(&off_1E8C4D9A0
                                  + (byte_1CF37BD84[(byte_1CF37A58C[v39 - 12] ^ 0x49) - 4] ^ v39)
                                  + 20))(*a1);
    *a1 = 0;
    return 0xFFFFFFFFLL;
  }
}

uint64_t sub_1CF3707B8(uint64_t *a1)
{
  unint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[8];

  v2 = (unint64_t *)*(&off_1E8C4D9A0
                           + (byte_1CF37BD84[(byte_1CF37A58C[(-79
                                                                                              * ((dword_1EFB8D338
                                                                                                + qword_1EFB8D308) ^ 0x63))
                                                                            + 244] ^ 0x4B)
                                                            + 252] ^ (-79 * ((dword_1EFB8D338 + qword_1EFB8D308) ^ 0x63)))
                           - 86);
  v3 = (unint64_t)&v9[*v2 ^ qword_1EFB8D308];
  v4 = 565822129 * v3 - 0x4008717C6ACAB88DLL;
  v5 = 565822129 * (v3 ^ 0xEBA05D989A3C0D63);
  qword_1EFB8D308 = v4;
  *v2 = v5;
  v6 = ((uint64_t (*)(uint64_t))((char *)*(&off_1E8C4D9A0
                                                  + ((-79 * ((v5 - qword_1EFB8D308) ^ 0x63)) ^ byte_1CF37BD84[(byte_1CF37A58C[(-79 * ((v5 - qword_1EFB8D308) ^ 0x63)) + 244] ^ 0x8F) + 252])
                                                  - 57)
                                        - 8))(16);
  if (v6)
    v7 = 0;
  else
    v7 = 0xFFFFFFFFLL;
  *a1 = v6;
  return v7;
}

uint64_t sub_1CF3708C4(uint64_t *a1)
{
  uint64_t *v1;
  unint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  unsigned __int8 v8;
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t i;
  _QWORD *v14;
  char v15;
  int v16;
  _BYTE *v17;
  int v18;
  char v19;
  char v20;
  char v21;
  char v22;
  uint64_t *v25;
  _DWORD v26[3];

  v1 = a1;
  v2 = (unint64_t *)*(&off_1E8C4D9A0
                           + (byte_1CF37A380[(byte_1CF37D7B8[(-79
                                                                                              * ((dword_1EFB8D338
                                                                                                + qword_1EFB8D348) ^ 0x63))
                                                                            + 248] ^ 0x87)
                                                            + 256] ^ (-79 * ((dword_1EFB8D338 + qword_1EFB8D348) ^ 0x63)))
                           - 65);
  v3 = (unint64_t)&v26[1] + (*v2 ^ qword_1EFB8D348);
  v4 = 565822129 * (v3 + 0x145FA26765C3F29DLL);
  v5 = 565822129 * (v3 ^ 0xEBA05D989A3C0D63);
  qword_1EFB8D348 = v4;
  *v2 = v5;
  v26[0] = (*(&off_1E8C4D9A0
                          + ((-79 * ((v5 + qword_1EFB8D348) ^ 0x63)) ^ byte_1CF37A380[(byte_1CF37D7B8[(-79 * ((v5 + qword_1EFB8D348) ^ 0x63)) + 248] ^ 0x84) + 256])
                          - 90)
          - 12) ^ a1;
  v6 = (uint64_t (*)(uint64_t))((char *)*(&off_1E8C4D9A0
                                                 + ((-79 * ((*(_DWORD *)v2 + qword_1EFB8D348) ^ 0x63)) ^ byte_1CF37A380[(byte_1CF37D7B8[(-79 * ((*(_DWORD *)v2 + qword_1EFB8D348) ^ 0x63)) + 248] ^ 0x87) + 256])
                                                 - 54)
                                       - 8);
  v7 = v6(256);
  v8 = -79 * ((*(_DWORD *)v2 + qword_1EFB8D348) ^ 0x63);
  v9 = (void (*)(void))((char *)*(&off_1E8C4D9A0
                                + (byte_1CF37BE88[(byte_1CF37A688[v8 - 8] ^ 0x8F) - 8] ^ v8)
                                - 2)
                      - 8);
  if (v7)
  {
    v10 = v7;
    v11 = 0;
    v25 = v1;
    *v1 = v7;
    v12 = v7 + 2;
    for (i = 1; ; ++i)
    {
      v26[0] = v12 + v11 + v26[0] * v26;
      v14 = (_QWORD *)(v10 + v11);
      *(_BYTE *)(v10 + v11 + 8) = v26[0] & 3;
      v15 = v26[0];
      v16 = (v12 + v11) & 3;
      v17 = (_BYTE *)v6(~(-2 << ((v12 + v11) & 3)));
      if (!v17)
        break;
      if (v16)
      {
        v18 = -1 << v16;
        if ((-1 << v16) >= 0xFFFFFFFE)
          v18 = -2;
        *v17 = ((v15 * v15) ^ 1) & 1;
        if (v16 != 1)
        {
          v19 = (((v15 * v15) ^ 1) * ((v15 * v15) ^ 1)) ^ 1;
          v17[1] = v19 & 1;
          v20 = (v19 * v19) ^ 1;
          v17[2] = v20 & 1;
          if (v18 != -4)
          {
            v21 = (v20 * v20) ^ 1;
            v17[3] = v21 & 1;
            v22 = (v21 * v21) ^ 1;
            v17[4] = v22 & 1;
            if (v18 != -6)
            {
              v17[5] = (v22 & 1) == 0;
              v17[6] = (v22 & 1) != 0;
            }
          }
        }
      }
      *(_QWORD *)(v10 + v11) = v17;
      v11 += 16;
      if (v11 == 256)
        return 0;
    }
    *v14 = 0;
    v1 = v25;
    do
    {
      if (*v14)
        v9();
      v14 -= 2;
    }
    while (i-- > 1);
    v7 = v10;
  }
  ((void (*)(uint64_t))v9)(v7);
  *v1 = 0;
  return 0xFFFFFFFFLL;
}

uint64_t sub_1CF370BAC(uint64_t result, unsigned int a2, int a3, char a4)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  char v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  int v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  BOOL v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  int v17;
  uint64_t v18;
  char *v19;
  _BYTE v20[12];

  v4 = result;
  v5 = *(&off_1E8C4D9A0
       + (byte_1CF37BD80[byte_1CF37A580[(-79
                                                                         * ((dword_1EFB8D338 + qword_1EFB8D358) ^ 0x63))] ^ 0x49] ^ (-79 * ((dword_1EFB8D338 + qword_1EFB8D358) ^ 0x63)))
       - 56);
  v6 = (unint64_t)&v20[(*v5 ^ qword_1EFB8D358) + 4];
  qword_1EFB8D358 = 565822129 * v6 + 0x145FA26765C3F29DLL;
  *v5 = 565822129 * (v6 ^ 0xEBA05D989A3C0D63);
  if (a3)
  {
    v7 = v20 ^ a2;
    v8 = v7 ^ a4;
    v9 = v7 + a4;
    if ((a4 & 1) != 0)
      v9 = v8;
    v10 = *(unsigned __int8 *)(result + a2);
    v11 = a4 - v9;
    v12 = v9 ^ a4;
    if (*(_BYTE *)(v4 + a2))
      v12 = 0;
    if (v10)
      v13 = 0;
    else
      v13 = v9;
    v14 = v10 == 1;
    if (v10 == 1)
      v15 = v11;
    else
      v15 = v12;
    if (v14)
      v16 = v9;
    else
      v16 = v13;
    v17 = 2 * a2;
    v18 = (a3 - 1);
    v19 = (char *)*(&off_1E8C4D9A0
                  + ((-79 * ((*(_DWORD *)v5 - qword_1EFB8D358) ^ 0x63)) ^ byte_1CF37BD80[byte_1CF37A580[(-79 * ((*(_DWORD *)v5 - qword_1EFB8D358) ^ 0x63))] ^ 0xE4])
                  - 38)
        - 4;
    ((void (*)(uint64_t, _QWORD, uint64_t, _QWORD))v19)(v4, (2 * a2) | 1, v18, v15);
    return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))v19)(v4, (v17 + 2), v18, v16);
  }
  else
  {
    *(_BYTE *)(result + a2) = a4;
  }
  return result;
}

uint64_t sub_1CF370D34()
{
  unint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v5;

  v0 = (unint64_t *)*(&off_1E8C4D9A0
                           + ((-79 * ((dword_1EFB8D338 + qword_1EFB8D3A8) ^ 0x63)) ^ byte_1CF37A380[byte_1CF37D7B0[(-79 * ((dword_1EFB8D338 + qword_1EFB8D3A8) ^ 0x63))] ^ 0x54])
                           - 77);
  v1 = *v0 - qword_1EFB8D3A8 - (_QWORD)&v5;
  v2 = 565822129 * v1 - 0x145FA26765C3F29DLL;
  v3 = 565822129 * (v1 ^ 0xEBA05D989A3C0D63);
  qword_1EFB8D3A8 = v2;
  *v0 = v3;
  return ((uint64_t (*)(void))((char *)*(&off_1E8C4D9A0
                                      + (byte_1CF37BE88[(byte_1CF37A688[(-79 * ((v3 - qword_1EFB8D3A8) ^ 0x63)) - 8] ^ 0xBF)
                                                                                     - 8] ^ (-79
                                                                                           * ((v3 - qword_1EFB8D3A8) ^ 0x63)))
                                      + 4)
                            - 8))();
}

uint64_t sub_1CF370E18(_DWORD *a1)
{
  unsigned int v2;
  uint64_t result;
  int v4;

  v2 = *a1 ^ (248152243 * (((a1 | 0xC07F8D8A) - (a1 & 0xC07F8D8A)) ^ 0xDABAC028));
  result = ((uint64_t (*)(_QWORD, char *))*(&off_1E8C4D9A0 + (int)(v2 ^ 0x56EDD339)))(*(&off_1E8C4D9A0 + (int)(v2 ^ 0x56EDD37B)), (char *)*(&off_1E8C4D9A0 + (int)(v2 ^ 0x56EDD341)) - 4);
  v4 = *(_DWORD *)*(&off_1E8C4D9A0 + (int)(v2 & 0x880228F9));
  if ((_DWORD)result)
    v4 = 819783307;
  a1[1] = v4;
  return result;
}

uint64_t sub_1CF370EDC(uint64_t a1, int a2)
{
  unsigned int v4;
  _DWORD v6[2];
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v6[0] = (248152243
         * (((v6 | 0x49501A8) - v6 + (v6 & 0xFB6AFE50)) ^ 0x1E504C0A)) ^ 0x56EDD32D;
  sub_1CF370E18(v6);
  v4 = 301540361 * (((v6 | 0x307016C7) - (v6 & 0x307016C7)) ^ 0xF42911B5);
  v6[1] = v4 + 440;
  v8 = (a2 ^ 0xED9FFFBC) + ((2 * a2) & 0xDB3FFF78) + 1945749868 + v4;
  v7 = a1;
  sub_1CF33E124((uint64_t)v6);
  return (-1150704575 * v6[0] + 182663842);
}

uint64_t sub_1CF37101C(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  unsigned __int8 v14;
  uint64_t (*v15)(void);
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  _BYTE *v40;
  unsigned int v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  int v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  char v96;
  _QWORD *v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  _BYTE *v108;
  unsigned int v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  int v115;
  uint64_t v116;
  int v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  unint64_t *v125;
  char v126;

  v1 = 565822129;
  v2 = *(&off_1E8C4D9A0
       + (byte_1CF37A484[(byte_1CF37D8B4[(-79
                                                                          * ((dword_1EFB8D338 - qword_1EFB8D3E8) ^ 0x63))
                                                        - 4] ^ 0x84)
                                        - 4] ^ (-79 * ((dword_1EFB8D338 - qword_1EFB8D3E8) ^ 0x63)))
       - 98);
  v3 = (*v2 - qword_1EFB8D3E8) ^ (unint64_t)&v126;
  qword_1EFB8D3E8 = 565822129 * v3 - 0x4008717C6ACAB88DLL;
  *v2 = 565822129 * (v3 ^ 0xEBA05D989A3C0D63);
  if (!result)
    return result;
  v4 = result;
  v125 = (unint64_t *)(result - 16);
  v5 = -79 * (qword_1EFB8D3E8 ^ 0x63 ^ *(_DWORD *)v2);
  v124 = *(&off_1E8C4D9A0 + (byte_1CF37BD84[(byte_1CF37A58C[v5 - 12] ^ 4) - 4] ^ v5) - 40);
  v6 = *v124 ^ *(_QWORD *)(result - 16 + (*(_QWORD *)(result - 8) & 0xFFFFFFFFFFFFFFF8));
  if ((*(_BYTE *)(v6 + 0x370) & 2) != 0)
  {
    v7 = (unsigned int *)(v6 + 884);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(1u, v7));
    if (v8)
    {
      v9 = 0;
      while (1)
      {
        if (!*v7)
        {
          do
            v10 = __ldaxr(v7);
          while (__stlxr(1u, v7));
          if (!v10)
            break;
        }
        if ((++v9 & 0x3F) == 0)
          ((void (*)(void))*(&off_1E8C4D9A0
                           + (byte_1CF37C948[(byte_1CF37BC80[(-79
                                                                                              * ((*(_DWORD *)v2
                                                                                                + qword_1EFB8D3E8) ^ 0x63))] ^ 1)
                                                            - 8] ^ (-79 * ((*(_DWORD *)v2 + qword_1EFB8D3E8) ^ 0x63)))
                           - 68))();
      }
    }
  }
  v11 = *(_QWORD *)(v4 - 8);
  v12 = v11 & 0xFFFFFFFFFFFFFFF8;
  result = (uint64_t)v125;
  v13 = (char *)v125 + (v11 & 0xFFFFFFFFFFFFFFF8);
  v14 = -79 * ((*(_DWORD *)v2 - qword_1EFB8D3E8) ^ 0x63);
  v15 = (uint64_t (*)(void))*(&off_1E8C4D9A0
                           + (byte_1CF37D9B4[(byte_1CF37CA48[v14 - 8] ^ 0x72) - 4] ^ v14)
                           - 6);
  if ((v11 & 1) != 0)
  {
    v17 = v6;
    goto LABEL_19;
  }
  v16 = *v125;
  v17 = v6;
  if ((v11 & 3) == 0)
  {
    v28 = v12 + v16 + 32;
    result = ((uint64_t (*)(char *, uint64_t))v15)((char *)v125 - v16, v28);
    if (!(_DWORD)result)
      *(_QWORD *)(v6 + 856) -= v28;
    goto LABEL_120;
  }
  result = (uint64_t)v125 - v16;
  v12 += v16;
  if ((unint64_t *)((char *)v125 - v16) != *(unint64_t **)(v6 + 32))
  {
    if (v16 <= 0xFF)
    {
      v18 = *(_QWORD *)(result + 16);
      v19 = *(_QWORD *)(result + 24);
      if (v19 == v18)
      {
        *(_DWORD *)v6 &= ~(1 << (v16 >> 3));
      }
      else
      {
        *(_QWORD *)(v18 + 24) = v19;
        *(_QWORD *)(v19 + 16) = v18;
      }
      goto LABEL_19;
    }
    v44 = *(_QWORD *)(result + 48);
    v45 = *(_QWORD **)(result + 24);
    if (v45 == (_QWORD *)result)
    {
      v52 = (_QWORD *)(result + 40);
      v53 = *(_QWORD **)(result + 40);
      if (v53 || (v52 = (_QWORD *)(result + 32), (v53 = *(_QWORD **)(result + 32)) != 0))
      {
        do
        {
          do
          {
            v54 = v52;
            v45 = v53;
            v52 = v53 + 5;
            v53 = (_QWORD *)v53[5];
          }
          while (v53);
          v52 = v45 + 4;
          v53 = (_QWORD *)v45[4];
        }
        while (v53);
        *v54 = 0;
        if (!v44)
          goto LABEL_19;
      }
      else
      {
        v45 = 0;
        if (!v44)
          goto LABEL_19;
      }
    }
    else
    {
      v46 = *(_QWORD *)(result + 16);
      *(_QWORD *)(v46 + 24) = v45;
      v45[2] = v46;
      if (!v44)
        goto LABEL_19;
    }
    v55 = v6 + 8 * *(unsigned int *)(result + 56);
    if (result == *(_QWORD *)(v55 + 600))
    {
      *(_QWORD *)(v55 + 600) = v45;
      if (!v45)
      {
        *(_DWORD *)(v6 + 4) &= ~(1 << *(_DWORD *)(result + 56));
        goto LABEL_19;
      }
    }
    else
    {
      v56 = 40;
      if (*(_QWORD *)(v44 + 32) == result)
        v56 = 32;
      *(_QWORD *)(v44 + v56) = v45;
      if (!v45)
        goto LABEL_19;
    }
    v45[6] = v44;
    v62 = *(_QWORD *)(result + 32);
    if (v62)
    {
      v45[4] = v62;
      *(_QWORD *)(v62 + 48) = v45;
    }
    v63 = *(_QWORD *)(result + 40);
    if (v63)
    {
      v45[5] = v63;
      *(_QWORD *)(v63 + 48) = v45;
    }
    goto LABEL_19;
  }
  if ((~*((_DWORD *)v13 + 2) & 3) == 0)
  {
    *(_QWORD *)(v6 + 8) = v12;
    *((_QWORD *)v13 + 1) &= ~1uLL;
    *(_QWORD *)(result + 8) = v12 | 1;
    *(_QWORD *)v13 = v12;
    goto LABEL_120;
  }
LABEL_19:
  v20 = *((_QWORD *)v13 + 1);
  if ((v20 & 2) != 0)
  {
    *((_QWORD *)v13 + 1) = v20 & 0xFFFFFFFFFFFFFFFELL;
    *(_QWORD *)(result + 8) = v12 | 1;
    *(_QWORD *)(result + v12) = v12;
LABEL_26:
    if (v12 <= 0xFF)
    {
      v23 = v12 >> 3;
      v24 = v17 + ((2 * v12) & 0x7FFFFFFF0) + 72;
      v25 = 1 << v23;
      if ((*(_DWORD *)v17 & v25) != 0)
      {
        v26 = *(_QWORD *)(v24 + 16);
      }
      else
      {
        *(_DWORD *)v17 |= v25;
        v26 = v24;
      }
      *(_QWORD *)(v24 + 16) = result;
      *(_QWORD *)(v26 + 24) = result;
      *(_QWORD *)(result + 16) = v26;
      *(_QWORD *)(result + 24) = v24;
      goto LABEL_120;
    }
    if (v12 >> 24)
    {
      v27 = 31;
    }
    else
    {
      v37 = (((v12 >> 8) + 1048320) >> 16) & 8;
      v38 = (v12 >> 8) << v37;
      v39 = (v38 << (((v38 + 520192) >> 16) & 4) << ((((v38 << (((v38 + 520192) >> 16) & 4)) + 245760) >> 16) & 2) >> 15)
          - (((v38 + 520192) >> 16) & 4 | v37 | (((v38 << (((v38 + 520192) >> 16) & 4)) + 245760) >> 16) & 2);
      v27 = ((v12 >> (v39 + 21)) & 1 | (2 * v39)) + 28;
    }
    *(_DWORD *)(result + 56) = v27;
    v40 = (_BYTE *)(result + 32);
    v41 = -(result + 32) & 7;
    switch(v41)
    {
      case 1u:
        goto LABEL_55;
      case 2u:
        goto LABEL_54;
      case 3u:
        goto LABEL_53;
      case 4u:
        goto LABEL_52;
      case 5u:
        goto LABEL_51;
      case 6u:
        goto LABEL_50;
      case 7u:
        *v40 = 0;
        v40 = (_BYTE *)(result + 33);
LABEL_50:
        *v40++ = 0;
LABEL_51:
        *v40++ = 0;
LABEL_52:
        *v40++ = 0;
LABEL_53:
        *v40++ = 0;
LABEL_54:
        *v40++ = 0;
LABEL_55:
        *v40++ = 0;
        break;
      default:
        break;
    }
    v42 = (uint64_t *)(v17 + 8 * v27 + 600);
    v43 = 16 - v41;
    v72 = v43;
    v71 = v43 & 7;
    switch(v72)
    {
      case 0:
        goto LABEL_131;
      case 1:
        goto LABEL_130;
      case 2:
        goto LABEL_129;
      case 3:
        goto LABEL_128;
      case 4:
        goto LABEL_127;
      case 5:
        goto LABEL_126;
      case 6:
        goto LABEL_125;
      case 7:
        *v40++ = 0;
LABEL_125:
        *v40++ = 0;
LABEL_126:
        *v40++ = 0;
LABEL_127:
        *v40++ = 0;
LABEL_128:
        *v40++ = 0;
LABEL_129:
        *v40++ = 0;
LABEL_130:
        *v40 = 0;
LABEL_131:
        v73 = *(_DWORD *)(v17 + 4);
        if ((v73 & (1 << v27)) == 0)
        {
          *(_DWORD *)(v17 + 4) = v73 | (1 << v27);
          *v42 = result;
          *(_QWORD *)(result + 48) = v42;
          goto LABEL_140;
        }
        v74 = *v42;
        if (v27 == 31)
          LOBYTE(v75) = 0;
        else
          v75 = 57 - (v27 >> 1);
        v76 = v12 << v75;
        while (1)
        {
          v77 = v74;
          if ((*(_QWORD *)(v74 + 8) & 0xFFFFFFFFFFFFFFF8) == v12)
            break;
          v78 = v74 + 8 * (v76 >> 63);
          v80 = *(_QWORD *)(v78 + 32);
          v79 = (uint64_t *)(v78 + 32);
          v74 = v80;
          v76 *= 2;
          if (!v80)
          {
            *v79 = result;
            *(_QWORD *)(result + 48) = v77;
LABEL_140:
            *(_QWORD *)(result + 16) = result;
            *(_QWORD *)(result + 24) = result;
            goto LABEL_142;
          }
        }
        v81 = *(_QWORD *)(v74 + 16);
        *(_QWORD *)(v81 + 24) = result;
        *(_QWORD *)(v74 + 16) = result;
        *(_QWORD *)(result + 16) = v81;
        *(_QWORD *)(result + 24) = v74;
        *(_QWORD *)(result + 48) = 0;
LABEL_142:
        v82 = *(_QWORD *)(v17 + 56) - 1;
        *(_QWORD *)(v17 + 56) = v82;
        if (v82)
          goto LABEL_120;
        v48 = 0;
        break;
      default:
        __asm { BR              X16 }
        return result;
    }
LABEL_144:
    v83 = *(_QWORD *)(v17 + 904);
    if (!v83 || (*(_DWORD *)(v83 + 24) & 9) != 1)
    {
      v84 = 0;
      goto LABEL_159;
    }
    v84 = 0;
    result = *(_QWORD *)v83;
    v85 = *(_QWORD *)(v83 + 8);
    v86 = *(_QWORD *)v83 + 16;
    if ((v86 & 0xF) != 0)
      v87 = -(int)v86 & 0xFLL;
    else
      v87 = 0;
    v88 = result + v87;
    v89 = *(_QWORD *)(result + v87 + 8);
    v90 = v89 & 0xFFFFFFFFFFFFFFF8;
    if ((v89 & 3) != 1 || result + v87 + (v89 & 0xFFFFFFFFFFFFFFF8) < result + v85 - 80)
    {
LABEL_159:
      *(_QWORD *)(v17 + 56) = 4095;
      if (v4 + v84)
        v96 = 0;
      else
        v96 = v48;
      if ((v96 & 1) != 0 && *(_QWORD *)v1 > *(_QWORD *)(v17 + 48))
        *(_QWORD *)(v17 + 48) = -1;
      goto LABEL_120;
    }
    v92 = *(_QWORD *)(v83 + 16);
    if (v88 == *(_QWORD *)(v17 + 32))
    {
      *(_QWORD *)(v17 + 32) = 0;
      *(_QWORD *)(v17 + 8) = 0;
      goto LABEL_182;
    }
    v93 = *(_QWORD *)(v88 + 48);
    v94 = *(_QWORD **)(v88 + 24);
    if (v94 == (_QWORD *)v88)
    {
      v97 = (_QWORD *)(v88 + 40);
      v98 = *(_QWORD **)(v88 + 40);
      if (v98 || (v97 = (_QWORD *)(v88 + 32), (v98 = *(_QWORD **)(v88 + 32)) != 0))
      {
        do
        {
          do
          {
            v99 = v97;
            v94 = v98;
            v97 = v98 + 5;
            v98 = (_QWORD *)v98[5];
          }
          while (v98);
          v97 = v94 + 4;
          v98 = (_QWORD *)v94[4];
        }
        while (v98);
        *v99 = 0;
        if (!v93)
          goto LABEL_182;
      }
      else
      {
        v94 = 0;
        if (!v93)
          goto LABEL_182;
      }
    }
    else
    {
      v95 = *(_QWORD *)(v88 + 16);
      *(_QWORD *)(v95 + 24) = v94;
      v94[2] = v95;
      if (!v93)
        goto LABEL_182;
    }
    v100 = v17 + 8 * *(unsigned int *)(v88 + 56);
    if (v88 == *(_QWORD *)(v100 + 600))
    {
      *(_QWORD *)(v100 + 600) = v94;
      if (!v94)
      {
        *(_DWORD *)(v17 + 4) &= ~(1 << *(_DWORD *)(v88 + 56));
        goto LABEL_182;
      }
    }
    else
    {
      v101 = 40;
      if (*(_QWORD *)(v93 + 32) == v88)
        v101 = 32;
      *(_QWORD *)(v93 + v101) = v94;
      if (!v94)
      {
LABEL_182:
        result = v15();
        if ((_DWORD)result)
        {
          if (v89 >= 0x100)
          {
            if (v89 >> 24)
            {
              v104 = 31;
            }
            else
            {
              v105 = (((v89 >> 8) + 1048320) >> 16) & 8;
              v106 = (v89 >> 8) << v105;
              v107 = (v106 << (((v106 + 520192) >> 16) & 4) << ((((v106 << (((v106 + 520192) >> 16) & 4)) + 245760) >> 16) & 2) >> 15)
                   - (((v106 + 520192) >> 16) & 4 | v105 | (((v106 << (((v106 + 520192) >> 16) & 4)) + 245760) >> 16) & 2);
              v104 = ((v90 >> (v107 + 21)) & 1 | (2 * v107)) + 28;
            }
          }
          else
          {
            v104 = 0;
          }
          *(_DWORD *)(v88 + 56) = v104;
          v108 = (_BYTE *)(v88 + 32);
          v109 = -(v88 + 32) & 7;
          switch(v109)
          {
            case 1u:
              goto LABEL_196;
            case 2u:
              goto LABEL_195;
            case 3u:
              goto LABEL_194;
            case 4u:
              goto LABEL_193;
            case 5u:
              goto LABEL_192;
            case 6u:
              goto LABEL_191;
            case 7u:
              *v108 = 0;
              v108 = (_BYTE *)(v88 + 33);
LABEL_191:
              *v108++ = 0;
LABEL_192:
              *v108++ = 0;
LABEL_193:
              *v108++ = 0;
LABEL_194:
              *v108++ = 0;
LABEL_195:
              *v108++ = 0;
LABEL_196:
              *v108++ = 0;
              break;
            default:
              break;
          }
          v110 = (uint64_t *)(v17 + 8 * v104 + 600);
          v111 = 16 - v109;
          v113 = v111;
          v112 = v111 & 7;
          switch(v113)
          {
            case 0:
              goto LABEL_207;
            case 1:
              goto LABEL_206;
            case 2:
              goto LABEL_205;
            case 3:
              goto LABEL_204;
            case 4:
              goto LABEL_203;
            case 5:
              goto LABEL_202;
            case 6:
              goto LABEL_201;
            case 7:
              *v108++ = 0;
LABEL_201:
              *v108++ = 0;
LABEL_202:
              *v108++ = 0;
LABEL_203:
              *v108++ = 0;
LABEL_204:
              *v108++ = 0;
LABEL_205:
              *v108++ = 0;
LABEL_206:
              *v108 = 0;
LABEL_207:
              v114 = *(_DWORD *)(v17 + 4);
              v115 = 1 << v104;
              if ((v114 & (1 << v104)) == 0)
              {
                v84 = 0;
                *(_DWORD *)(v17 + 4) = v114 | v115;
                *v110 = v88;
                *(_QWORD *)(v88 + 48) = v110;
                goto LABEL_216;
              }
              v116 = *v110;
              if (v104 == 31)
                LOBYTE(v117) = 0;
              else
                v117 = 57 - (v104 >> 1);
              v118 = v90 << v117;
              while (1)
              {
                v119 = v116;
                if ((*(_QWORD *)(v116 + 8) & 0xFFFFFFFFFFFFFFF8) == v90)
                  break;
                v120 = v116 + 8 * (v118 >> 63);
                v122 = *(_QWORD *)(v120 + 32);
                v121 = (uint64_t *)(v120 + 32);
                v116 = v122;
                v118 *= 2;
                if (!v122)
                {
                  v84 = 0;
                  *v121 = v88;
                  *(_QWORD *)(v88 + 48) = v119;
LABEL_216:
                  *(_QWORD *)(v88 + 16) = v88;
                  *(_QWORD *)(v88 + 24) = v88;
                  goto LABEL_159;
                }
              }
              v84 = 0;
              v123 = *(_QWORD *)(v116 + 16);
              *(_QWORD *)(v123 + 24) = v88;
              *(_QWORD *)(v119 + 16) = v88;
              *(_QWORD *)(v88 + 16) = v123;
              *(_QWORD *)(v88 + 24) = v119;
              *(_QWORD *)(v88 + 48) = 0;
              break;
            default:
              __asm { BR              X15 }
              return result;
          }
        }
        else
        {
          *(_QWORD *)(v17 + 856) -= v85;
          *(_QWORD *)(v17 + 904) = v92;
          v84 = v85;
        }
        goto LABEL_159;
      }
    }
    v94[6] = v93;
    v102 = *(_QWORD *)(v88 + 32);
    if (v102)
    {
      v94[4] = v102;
      *(_QWORD *)(v102 + 48) = v94;
    }
    v103 = *(_QWORD *)(v88 + 40);
    if (v103)
    {
      v94[5] = v103;
      *(_QWORD *)(v103 + 48) = v94;
    }
    goto LABEL_182;
  }
  if (v13 == *(char **)(v17 + 40))
  {
    v1 = v17 + 16;
    v29 = *(_QWORD *)(v17 + 16) + v12;
    *(_QWORD *)(v17 + 16) = v29;
    *(_QWORD *)(v17 + 40) = result;
    *(_QWORD *)(result + 8) = v29 | 1;
    if (result == *(_QWORD *)(v17 + 32))
    {
      *(_QWORD *)(v17 + 32) = 0;
      *(_QWORD *)(v17 + 8) = 0;
    }
    if (v29 <= *(_QWORD *)(v17 + 48))
      goto LABEL_120;
    v30 = *(_QWORD *)(v17 + 40);
    if (!v30)
      goto LABEL_120;
    if (*(_QWORD *)v1 >= 0x51uLL)
    {
      v4 = ((unint64_t)(*(_QWORD *)v1 + v124[2] - 81) / v124[2] - 1) * v124[2];
      v31 = v17 + 888;
      v32 = (unint64_t *)(v17 + 888);
      do
      {
        if (*v32 <= v30 && *v32 + v32[1] > v30)
          break;
        v32 = (unint64_t *)v32[2];
      }
      while (v32);
      if ((v32[3] & 9) == 1)
      {
        v33 = v32[1];
        v34 = v33 - v4;
        if (v33 >= v4)
        {
          v35 = *v32;
          v36 = *v32 + v33;
          while (v31 < v35 || v31 >= v36)
          {
            v31 = *(_QWORD *)(v31 + 16);
            if (!v31)
            {
              result = ((uint64_t (*)(unint64_t, unint64_t))v15)(v35 + v34, ((unint64_t)(*(_QWORD *)v1 + v124[2] - 81) / v124[2] - 1) * v124[2]);
              v48 = 1;
              if (v4)
              {
                if ((_DWORD)result)
                {
                  v4 = 0;
                }
                else
                {
                  v32[1] -= v4;
                  *(_QWORD *)(v17 + 856) -= v4;
                  v66 = *(_QWORD *)(v17 + 40);
                  v67 = *(_QWORD *)(v17 + 16) - v4;
                  if (((v66 + 16) & 0xF) != 0)
                    v68 = -((_DWORD)v66 + 16) & 0xFLL;
                  else
                    v68 = 0;
                  v69 = v66 + v68;
                  v70 = v67 - v68;
                  *(_QWORD *)(v17 + 40) = v69;
                  *(_QWORD *)(v17 + 16) = v70;
                  *(_QWORD *)(v69 + 8) = v70 | 1;
                  *(_QWORD *)(v66 + v67 + 8) = 80;
                  *(_QWORD *)(v17 + 48) = v124[4];
                }
              }
              goto LABEL_144;
            }
          }
        }
      }
    }
    v4 = 0;
    v48 = 1;
    goto LABEL_144;
  }
  if (v13 == *(char **)(v17 + 32))
  {
    v47 = *(_QWORD *)(v17 + 8) + v12;
    *(_QWORD *)(v17 + 8) = v47;
    *(_QWORD *)(v17 + 32) = result;
    *(_QWORD *)(result + 8) = v47 | 1;
    *(_QWORD *)(result + v47) = v47;
    goto LABEL_120;
  }
  v12 += v20 & 0xFFFFFFFFFFFFFFF8;
  if (v20 <= 0xFF)
  {
    v22 = *((_QWORD *)v13 + 2);
    v21 = *((_QWORD *)v13 + 3);
    if (v21 == v22)
    {
      *(_DWORD *)v17 &= ~(1 << (v20 >> 3));
    }
    else
    {
      *(_QWORD *)(v22 + 24) = v21;
      *(_QWORD *)(v21 + 16) = v22;
    }
    goto LABEL_105;
  }
  v49 = *((_QWORD *)v13 + 6);
  v50 = (char *)*((_QWORD *)v13 + 3);
  if (v50 == v13)
  {
    v57 = v13 + 40;
    v58 = (_QWORD *)*((_QWORD *)v13 + 5);
    if (v58 || (v57 = v13 + 32, (v58 = (_QWORD *)*((_QWORD *)v13 + 4)) != 0))
    {
      do
      {
        do
        {
          v59 = v57;
          v50 = (char *)v58;
          v57 = v58 + 5;
          v58 = (_QWORD *)v58[5];
        }
        while (v58);
        v57 = v50 + 32;
        v58 = (_QWORD *)*((_QWORD *)v50 + 4);
      }
      while (v58);
      *v59 = 0;
      if (!v49)
        goto LABEL_105;
    }
    else
    {
      v50 = 0;
      if (!v49)
        goto LABEL_105;
    }
  }
  else
  {
    v51 = *((_QWORD *)v13 + 2);
    *(_QWORD *)(v51 + 24) = v50;
    *((_QWORD *)v50 + 2) = v51;
    if (!v49)
      goto LABEL_105;
  }
  v60 = v17 + 8 * *((unsigned int *)v13 + 14);
  if (v13 == *(char **)(v60 + 600))
  {
    *(_QWORD *)(v60 + 600) = v50;
    if (!v50)
    {
      *(_DWORD *)(v17 + 4) &= ~(1 << *((_DWORD *)v13 + 14));
      goto LABEL_105;
    }
    goto LABEL_99;
  }
  v61 = 40;
  if (*(char **)(v49 + 32) == v13)
    v61 = 32;
  *(_QWORD *)(v49 + v61) = v50;
  if (v50)
  {
LABEL_99:
    *((_QWORD *)v50 + 6) = v49;
    v64 = *((_QWORD *)v13 + 4);
    if (v64)
    {
      *((_QWORD *)v50 + 4) = v64;
      *(_QWORD *)(v64 + 48) = v50;
    }
    v65 = *((_QWORD *)v13 + 5);
    if (v65)
    {
      *((_QWORD *)v50 + 5) = v65;
      *(_QWORD *)(v65 + 48) = v50;
    }
  }
LABEL_105:
  *(_QWORD *)(result + 8) = v12 | 1;
  *(_QWORD *)(result + v12) = v12;
  if (result != *(_QWORD *)(v17 + 32))
    goto LABEL_26;
  *(_QWORD *)(v17 + 8) = v12;
LABEL_120:
  if ((*(_BYTE *)(v17 + 880) & 2) != 0)
    atomic_store(0, (unsigned int *)(v17 + 884));
  return result;
}

void sub_1CF371D3C()
{
  __assert_rtn("APLogForCategory", "APLog.m", 17, "category < APLogCategoryCount");
}

void sub_1CF371D64()
{
  __assert_rtn("APPerfLogForCategory", "APLog.m", 83, "category < APLogCategoryCount");
}

void sub_1CF371D8C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], a2, (uint64_t)CFSTR("Simulating crash with description: %@ and exception code: %lld"), a4, a1, a2);
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  objc_msgSend_UTF8String(v4, v5, v6, v7);

  _os_crash();
  __break(1u);
}

void sub_1CF371DDC(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v2 = 138412546;
  v3 = a1;
  v4 = 2048;
  v5 = a2;
  _os_log_fault_impl(&dword_1CF251000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Simulating crash with description: %@ and exception code: %lld", (uint8_t *)&v2, 0x16u);
}

uint64_t sub_1CF371E64()
{
  return MEMORY[0x1E0CADD60]();
}

uint64_t sub_1CF371E70()
{
  return MEMORY[0x1E0CADE20]();
}

uint64_t sub_1CF371E7C()
{
  return MEMORY[0x1E0CAE3E0]();
}

uint64_t sub_1CF371E88()
{
  return MEMORY[0x1E0CAE3E8]();
}

uint64_t sub_1CF371E94()
{
  return MEMORY[0x1E0CAE488]();
}

uint64_t sub_1CF371EA0()
{
  return MEMORY[0x1E0CAE4B8]();
}

uint64_t sub_1CF371EAC()
{
  return MEMORY[0x1E0CAE8B8]();
}

uint64_t sub_1CF371EB8()
{
  return MEMORY[0x1E0CAE910]();
}

uint64_t sub_1CF371EC4()
{
  return MEMORY[0x1E0CAF548]();
}

uint64_t sub_1CF371ED0()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1CF371EDC()
{
  return MEMORY[0x1E0CAFD90]();
}

uint64_t sub_1CF371EE8()
{
  return MEMORY[0x1E0CAFE30]();
}

uint64_t sub_1CF371EF4()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1CF371F00()
{
  return MEMORY[0x1E0CAFE80]();
}

uint64_t sub_1CF371F0C()
{
  return MEMORY[0x1E0CAFE90]();
}

uint64_t sub_1CF371F18()
{
  return MEMORY[0x1E0CAFF40]();
}

uint64_t sub_1CF371F24()
{
  return MEMORY[0x1E0CAFF98]();
}

uint64_t sub_1CF371F30()
{
  return MEMORY[0x1E0CAFFD0]();
}

uint64_t sub_1CF371F3C()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1CF371F48()
{
  return MEMORY[0x1E0CB00A0]();
}

uint64_t sub_1CF371F54()
{
  return MEMORY[0x1E0CB0140]();
}

uint64_t sub_1CF371F60()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1CF371F6C()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1CF371F78()
{
  return MEMORY[0x1E0CB0270]();
}

uint64_t sub_1CF371F84()
{
  return MEMORY[0x1E0CB0298]();
}

uint64_t sub_1CF371F90()
{
  return MEMORY[0x1E0CB0578]();
}

uint64_t sub_1CF371F9C()
{
  return MEMORY[0x1E0CB06D0]();
}

uint64_t sub_1CF371FA8()
{
  return MEMORY[0x1E0CB06D8]();
}

uint64_t sub_1CF371FB4()
{
  return MEMORY[0x1E0CB06E8]();
}

uint64_t sub_1CF371FC0()
{
  return MEMORY[0x1E0CB0708]();
}

uint64_t sub_1CF371FCC()
{
  return MEMORY[0x1E0CB07B0]();
}

uint64_t sub_1CF371FD8()
{
  return MEMORY[0x1E0CB07C8]();
}

uint64_t sub_1CF371FE4()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1CF371FF0()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1CF371FFC()
{
  return MEMORY[0x1E0CB0900]();
}

uint64_t sub_1CF372008()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1CF372014()
{
  return MEMORY[0x1E0CB0948]();
}

uint64_t sub_1CF372020()
{
  return MEMORY[0x1E0CB0978]();
}

uint64_t sub_1CF37202C()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1CF372038()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1CF372044()
{
  return MEMORY[0x1E0CB0A90]();
}

uint64_t sub_1CF372050()
{
  return MEMORY[0x1E0CB0CC8]();
}

uint64_t sub_1CF37205C()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_1CF372068()
{
  return MEMORY[0x1E0DF2080]();
}

uint64_t sub_1CF372074()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1CF372080()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1CF37208C()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1CF372098()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1CF3720A4()
{
  return MEMORY[0x1E0DEF580]();
}

uint64_t sub_1CF3720B0()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1CF3720BC()
{
  return MEMORY[0x1E0DEF698]();
}

uint64_t sub_1CF3720C8()
{
  return MEMORY[0x1E0DEF6B8]();
}

uint64_t sub_1CF3720D4()
{
  return MEMORY[0x1E0DEF708]();
}

uint64_t sub_1CF3720E0()
{
  return MEMORY[0x1E0DEF728]();
}

uint64_t sub_1CF3720EC()
{
  return MEMORY[0x1E0DEF758]();
}

uint64_t sub_1CF3720F8()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1CF372104()
{
  return MEMORY[0x1E0DEA048]();
}

uint64_t sub_1CF372110()
{
  return MEMORY[0x1E0DEA088]();
}

uint64_t sub_1CF37211C()
{
  return MEMORY[0x1E0DEA0A8]();
}

uint64_t sub_1CF372128()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_1CF372134()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1CF372140()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1CF37214C()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1CF372158()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1CF372164()
{
  return MEMORY[0x1E0DEA610]();
}

uint64_t sub_1CF372170()
{
  return MEMORY[0x1E0DEA618]();
}

uint64_t sub_1CF37217C()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1CF372188()
{
  return MEMORY[0x1E0DEA6A0]();
}

uint64_t sub_1CF372194()
{
  return MEMORY[0x1E0DEA6F0]();
}

uint64_t sub_1CF3721A0()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t sub_1CF3721AC()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1CF3721B8()
{
  return MEMORY[0x1E0DEA7C0]();
}

uint64_t sub_1CF3721C4()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1CF3721D0()
{
  return MEMORY[0x1E0DEA830]();
}

uint64_t sub_1CF3721DC()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t sub_1CF3721E8()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_1CF3721F4()
{
  return MEMORY[0x1E0DEA878]();
}

uint64_t sub_1CF372200()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t sub_1CF37220C()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_1CF372218()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_1CF372224()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_1CF372230()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1CF37223C()
{
  return MEMORY[0x1E0DEAA58]();
}

uint64_t sub_1CF372248()
{
  return MEMORY[0x1E0DEAA98]();
}

uint64_t sub_1CF372254()
{
  return MEMORY[0x1E0DEAAB8]();
}

uint64_t sub_1CF372260()
{
  return MEMORY[0x1E0DEAAD8]();
}

uint64_t sub_1CF37226C()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1CF372278()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1CF372284()
{
  return MEMORY[0x1E0DEADC0]();
}

uint64_t sub_1CF372290()
{
  return MEMORY[0x1E0DEADF8]();
}

uint64_t sub_1CF37229C()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_1CF3722A8()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1CF3722B4()
{
  return MEMORY[0x1E0DEAEF0]();
}

uint64_t sub_1CF3722C0()
{
  return MEMORY[0x1E0DEB598]();
}

uint64_t sub_1CF3722CC()
{
  return MEMORY[0x1E0CB1C90]();
}

uint64_t sub_1CF3722D8()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_1CF3722E4()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1CF3722F0()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1CF3722FC()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1CF372308()
{
  return MEMORY[0x1E0CB1DE8]();
}

uint64_t sub_1CF372314()
{
  return MEMORY[0x1E0CB1E88]();
}

uint64_t sub_1CF372320()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1CF37232C()
{
  return MEMORY[0x1E0DEF848]();
}

uint64_t sub_1CF372338()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1CF372344()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1CF372350()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_1CF37235C()
{
  return MEMORY[0x1E0DF22E0]();
}

uint64_t sub_1CF372368()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1CF372374()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t sub_1CF372380()
{
  return MEMORY[0x1E0CB2410]();
}

uint64_t sub_1CF37238C()
{
  return MEMORY[0x1E0DEC050]();
}

uint64_t sub_1CF372398()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1CF3723A4()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1CF3723B0()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1CF3723BC()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1CF3723C8()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1CF3723D4()
{
  return MEMORY[0x1E0DEC290]();
}

uint64_t sub_1CF3723E0()
{
  return MEMORY[0x1E0DEC2A0]();
}

uint64_t sub_1CF3723EC()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1CF3723F8()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1CF372404()
{
  return MEMORY[0x1E0DEC590]();
}

uint64_t sub_1CF372410()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1CF37241C()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1CF372428()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_1CF372434()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1CF372440()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1CF37244C()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1CF372458()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1CF372464()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1CF372470()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1CF37247C()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1CF372488()
{
  return MEMORY[0x1E0DED1E8]();
}

uint64_t sub_1CF372494()
{
  return MEMORY[0x1E0DED550]();
}

uint64_t sub_1CF3724A0()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_1CF3724AC()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1CF3724B8()
{
  return MEMORY[0x1E0DED980]();
}

uint64_t sub_1CF3724C4()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1CF3724D0()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1CF3724DC()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1CF3724E8()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1CF3724F4()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1CF372500()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1CF37250C()
{
  return MEMORY[0x1E0DEDEF0]();
}

uint64_t sub_1CF372518()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1CF372524()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1CF372530()
{
  return MEMORY[0x1E0DEDF30]();
}

uint64_t sub_1CF37253C()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t AnalyticsSendEvent()
{
  return MEMORY[0x1E0D15420]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x1E0D15428]();
}

unsigned __int8 *__cdecl CC_SHA1(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1E0C80328](data, *(_QWORD *)&len, md);
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1E0C80368](data, *(_QWORD *)&len, md);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  CFAbsoluteTime result;

  MEMORY[0x1E0C97C58]();
  return result;
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return MEMORY[0x1E0C98A30](applicationID);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x1E0C98BC0](cf);
}

uint64_t DiagnosticLogSubmissionEnabled()
{
  return MEMORY[0x1E0D1BCD0]();
}

uint64_t MGGetStringAnswer()
{
  return MEMORY[0x1E0DE2B80]();
}

uint64_t MKBDeviceUnlockedSinceBoot()
{
  return MEMORY[0x1E0D4E4A0]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1E0CB28A0](aClassName);
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return (NSArray *)MEMORY[0x1E0CB3178](directory, domainMask, expandTilde);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1E0CB3200](aClass);
}

NSString *__cdecl NSStringFromProtocol(Protocol *proto)
{
  return (NSString *)MEMORY[0x1E0CB3218](proto);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1E0CB3230](aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1E0CB3250]();
}

OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef *result)
{
  return MEMORY[0x1E0CD6290](attributes, result);
}

OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef *result)
{
  return MEMORY[0x1E0CD6298](query, result);
}

OSStatus SecItemDelete(CFDictionaryRef query)
{
  return MEMORY[0x1E0CD62A0](query);
}

OSStatus SecItemUpdate(CFDictionaryRef query, CFDictionaryRef attributesToUpdate)
{
  return MEMORY[0x1E0CD62D8](query, attributesToUpdate);
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return MEMORY[0x1E0CD65A0](rnd, count, bytes);
}

CFStringRef SecTaskCopySigningIdentifier(SecTaskRef task, CFErrorRef *error)
{
  return (CFStringRef)MEMORY[0x1E0CD65E0](task, error);
}

SecTaskRef SecTaskCreateWithAuditToken(CFAllocatorRef allocator, audit_token_t *token)
{
  return (SecTaskRef)MEMORY[0x1E0CD6620](allocator, token);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
  MEMORY[0x1E0C80A58](a1, a2, *(_QWORD *)&a3, a4);
}

int *__error(void)
{
  return (int *)MEMORY[0x1E0C80AC0]();
}

uint64_t _os_crash()
{
  return MEMORY[0x1E0C81000]();
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81040](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return MEMORY[0x1E0C81588](*(_QWORD *)&__upper_bound);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

objc_property_t *__cdecl class_copyPropertyList(Class cls, unsigned int *outCount)
{
  return (objc_property_t *)MEMORY[0x1E0DE7A80](cls, outCount);
}

uLong crc32(uLong crc, const Bytef *buf, uInt len)
{
  return MEMORY[0x1E0DE92B0](crc, buf, *(_QWORD *)&len);
}

int deflate(z_streamp strm, int flush)
{
  return MEMORY[0x1E0DE92C0](strm, *(_QWORD *)&flush);
}

int deflateEnd(z_streamp strm)
{
  return MEMORY[0x1E0DE92D0](strm);
}

int deflateInit2_(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, const char *version, int stream_size)
{
  return MEMORY[0x1E0DE92D8](strm, *(_QWORD *)&level, *(_QWORD *)&method, *(_QWORD *)&windowBits, *(_QWORD *)&memLevel, *(_QWORD *)&strategy, version, *(_QWORD *)&stream_size);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82BC8](when, queue, block);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

void dispatch_barrier_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C28](queue, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1E0C82D00](identifier, flags);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E28](attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E38](attr, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E48](label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x1E0C82EA0](object);
}

void dispatch_source_cancel(dispatch_source_t source)
{
  MEMORY[0x1E0C82F10](source);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1E0C82F20](type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F58](source, handler);
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
  MEMORY[0x1E0C82F78](source, start, interval, leeway);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

int fclose(FILE *a1)
{
  return MEMORY[0x1E0C832F8](a1);
}

int feof(FILE *a1)
{
  return MEMORY[0x1E0C83340](a1);
}

int fflush(FILE *a1)
{
  return MEMORY[0x1E0C83370](a1);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return (FILE *)MEMORY[0x1E0C83460](__filename, __mode);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return MEMORY[0x1E0C834A0](__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

int fseek(FILE *a1, uint64_t a2, int a3)
{
  return MEMORY[0x1E0C83530](a1, a2, *(_QWORD *)&a3);
}

uint64_t ftell(FILE *a1)
{
  return MEMORY[0x1E0C83580](a1);
}

size_t fwrite(const void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return MEMORY[0x1E0C835E0](__ptr, __size, __nitems, __stream);
}

int inflate(z_streamp strm, int flush)
{
  return MEMORY[0x1E0DE93A0](strm, *(_QWORD *)&flush);
}

int inflateEnd(z_streamp strm)
{
  return MEMORY[0x1E0DE93B8](strm);
}

int inflateInit2_(z_streamp strm, int windowBits, const char *version, int stream_size)
{
  return MEMORY[0x1E0DE93C8](strm, *(_QWORD *)&windowBits, version, *(_QWORD *)&stream_size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return MEMORY[0x1E0C843E8](*(_QWORD *)&token, state64);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x1E0DE7BD8](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x1E0DE7BE0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1E0DE7BF0](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_end_catch(void)
{
  MEMORY[0x1E0DE7C80]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

void objc_exception_throw(id exception)
{
  MEMORY[0x1E0DE7CA0](exception);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1E0DE7CD0](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)((uint64_t (*)(id, SEL))MEMORY[0x1E0DE7D20])(a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1E0DE7E70](a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F88](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1E0DE7FC8](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1E0DE7FD0](obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7FE0](a1);
}

const char *__cdecl object_getClassName(id a1)
{
  return (const char *)MEMORY[0x1E0DE8000](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1E0C84920](log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return MEMORY[0x1E0C84928](log);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x1E0C84970]();
}

uint64_t os_unfair_lock_lock_with_options()
{
  return MEMORY[0x1E0C849A0]();
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

uint64_t os_unfair_recursive_lock_lock_with_options()
{
  return MEMORY[0x1E0C849B8]();
}

uint64_t os_unfair_recursive_lock_unlock()
{
  return MEMORY[0x1E0C849D0]();
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x1E0C849F0]();
}

const char *__cdecl property_getAttributes(objc_property_t property)
{
  return (const char *)MEMORY[0x1E0DE8068](property);
}

const char *__cdecl property_getName(objc_property_t property)
{
  return (const char *)MEMORY[0x1E0DE8070](property);
}

int sqlite3_bind_blob(sqlite3_stmt *a1, int a2, const void *a3, int n, void (__cdecl *a5)(void *))
{
  return MEMORY[0x1E0DE8580](a1, *(_QWORD *)&a2, a3, *(_QWORD *)&n, a5);
}

int sqlite3_bind_double(sqlite3_stmt *a1, int a2, double a3)
{
  return MEMORY[0x1E0DE8598](a1, *(_QWORD *)&a2, a3);
}

int sqlite3_bind_int(sqlite3_stmt *a1, int a2, int a3)
{
  return MEMORY[0x1E0DE85A0](a1, *(_QWORD *)&a2, *(_QWORD *)&a3);
}

int sqlite3_bind_int64(sqlite3_stmt *a1, int a2, sqlite3_int64 a3)
{
  return MEMORY[0x1E0DE85A8](a1, *(_QWORD *)&a2, a3);
}

int sqlite3_bind_null(sqlite3_stmt *a1, int a2)
{
  return MEMORY[0x1E0DE85B0](a1, *(_QWORD *)&a2);
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return MEMORY[0x1E0DE85D8](a1, *(_QWORD *)&a2, a3, *(_QWORD *)&a4, a5);
}

int sqlite3_busy_timeout(sqlite3 *a1, int ms)
{
  return MEMORY[0x1E0DE8638](a1, *(_QWORD *)&ms);
}

int sqlite3_close(sqlite3 *a1)
{
  return MEMORY[0x1E0DE8650](a1);
}

const void *__cdecl sqlite3_column_blob(sqlite3_stmt *a1, int iCol)
{
  return (const void *)MEMORY[0x1E0DE8660](a1, *(_QWORD *)&iCol);
}

int sqlite3_column_bytes(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1E0DE8668](a1, *(_QWORD *)&iCol);
}

int sqlite3_column_count(sqlite3_stmt *pStmt)
{
  return MEMORY[0x1E0DE8678](pStmt);
}

double sqlite3_column_double(sqlite3_stmt *a1, int iCol)
{
  double result;

  MEMORY[0x1E0DE8688](a1, *(_QWORD *)&iCol);
  return result;
}

int sqlite3_column_int(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1E0DE8690](a1, *(_QWORD *)&iCol);
}

sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1E0DE8698](a1, *(_QWORD *)&iCol);
}

const char *__cdecl sqlite3_column_name(sqlite3_stmt *a1, int N)
{
  return (const char *)MEMORY[0x1E0DE86A0](a1, *(_QWORD *)&N);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return (const unsigned __int8 *)MEMORY[0x1E0DE86B8](a1, *(_QWORD *)&iCol);
}

int sqlite3_column_type(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1E0DE86C8](a1, *(_QWORD *)&iCol);
}

const char *__cdecl sqlite3_errstr(int a1)
{
  return (const char *)MEMORY[0x1E0DE8790](*(_QWORD *)&a1);
}

int sqlite3_exec(sqlite3 *a1, const char *sql, int (__cdecl *callback)(void *, int, char **, char **), void *a4, char **errmsg)
{
  return MEMORY[0x1E0DE8798](a1, sql, callback, a4, errmsg);
}

int sqlite3_extended_result_codes(sqlite3 *a1, int onoff)
{
  return MEMORY[0x1E0DE87B8](a1, *(_QWORD *)&onoff);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return MEMORY[0x1E0DE87C8](pStmt);
}

void sqlite3_free(void *a1)
{
  MEMORY[0x1E0DE87D0](a1);
}

sqlite3_int64 sqlite3_last_insert_rowid(sqlite3 *a1)
{
  return MEMORY[0x1E0DE8820](a1);
}

int sqlite3_open(const char *filename, sqlite3 **ppDb)
{
  return MEMORY[0x1E0DE8868](filename, ppDb);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return MEMORY[0x1E0DE8880](db, zSql, *(_QWORD *)&nByte, ppStmt, pzTail);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return MEMORY[0x1E0DE89A8](a1);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1E0C85520](__s1, __s2);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1E0C85548](*(_QWORD *)&__errnum);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1E0C85578](__s);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1E0DEEB40]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeLayout()
{
  return MEMORY[0x1E0DEED00]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1E0DEED08]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x1E0DEED10]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x1E0DEED90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x1E0DEEE90]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return MEMORY[0x1E0C857A0](a1, a2, a3, a4, a5);
}

xpc_object_t xpc_activity_copy_criteria(xpc_activity_t activity)
{
  return (xpc_object_t)MEMORY[0x1E0C85D80](activity);
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return MEMORY[0x1E0C85D90](activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
  MEMORY[0x1E0C85D98](identifier, criteria, handler);
}

void xpc_activity_set_criteria(xpc_activity_t activity, xpc_object_t criteria)
{
  MEMORY[0x1E0C85DB0](activity, criteria);
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return MEMORY[0x1E0C85DB8](activity, state);
}

BOOL xpc_activity_should_defer(xpc_activity_t activity)
{
  return MEMORY[0x1E0C85DC8](activity);
}

void xpc_activity_unregister(const char *identifier)
{
  MEMORY[0x1E0C85DD0](identifier);
}

BOOL xpc_BOOL_get_value(xpc_object_t xBOOL)
{
  return MEMORY[0x1E0C85F00](xBOOL);
}

uint64_t xpc_copy_entitlement_for_self()
{
  return MEMORY[0x1E0C86118]();
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return (xpc_object_t)MEMORY[0x1E0C86208](keys, values, count);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x1E0C862E0](xdict, key);
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
  MEMORY[0x1E0C86310](xdict, key, value);
}

void xpc_dictionary_set_double(xpc_object_t xdict, const char *key, double value)
{
  MEMORY[0x1E0C86348](xdict, key, value);
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
  MEMORY[0x1E0C86360](xdict, key, value);
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
  MEMORY[0x1E0C86390](xdict, key, string);
}

