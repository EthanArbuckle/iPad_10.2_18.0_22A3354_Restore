void type metadata accessor for FBKEnvironment(uint64_t a1)
{
  sub_22DD500E8(a1, &qword_255DB5408);
}

void type metadata accessor for FBKAnswerType(uint64_t a1)
{
  sub_22DD500E8(a1, &qword_255DB5410);
}

uint64_t initializeBufferWithCopyOfBuffer for BatchOnboardingView(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for BatchOnboardingView()
{
  return swift_release();
}

uint64_t assignWithCopy for BatchOnboardingView(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for BatchOnboardingView(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BatchOnboardingView(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BatchOnboardingView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BatchOnboardingView()
{
  return &type metadata for BatchOnboardingView;
}

uint64_t sub_22DD4DCC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v28;
  char v29;
  _BYTE v30[7];
  char v31;
  _BYTE v32[7];
  char v33;
  _BYTE v34[7];
  char v35;
  _BYTE v36[7];
  char v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  _BYTE v48[7];
  __int128 v49;
  char v50;
  _BYTE v51[7];
  __int128 v52;
  char v53;
  _BYTE v54[7];
  __int128 v55;
  char v56;
  _BYTE v57[7];
  __int128 v58;
  char v59;
  _BYTE v60[7];
  uint64_t v61;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB55D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v5 = sub_22DE1EFBC();
  v6 = sub_22DE1EF38();
  v7 = sub_22DE1ECD4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
  v8 = sub_22DE1ECF8();
  sub_22DD5071C((uint64_t)v4, &qword_255DB55D8);
  KeyPath = swift_getKeyPath();
  v10 = sub_22DE1E9F8();
  sub_22DD4DF98((uint64_t)&v45);
  v11 = v45;
  v12 = v46;
  v13 = v47;
  v14 = v49;
  v15 = v52;
  v16 = v55;
  v17 = v58;
  v37 = 0;
  v35 = v47;
  v33 = v50;
  v31 = v53;
  v29 = v56;
  *(_DWORD *)&v48[3] = *(_DWORD *)&v36[3];
  *(_DWORD *)v48 = *(_DWORD *)v36;
  *(_DWORD *)&v51[3] = *(_DWORD *)&v34[3];
  *(_DWORD *)v51 = *(_DWORD *)v34;
  *(_DWORD *)&v54[3] = *(_DWORD *)&v32[3];
  *(_DWORD *)v54 = *(_DWORD *)v32;
  *(_DWORD *)&v57[3] = *(_DWORD *)&v30[3];
  *(_DWORD *)v57 = *(_DWORD *)v30;
  *(_DWORD *)&v60[3] = HIDWORD(v28);
  *(_DWORD *)v60 = *(_DWORD *)((char *)&v28 + 1);
  DWORD1(v39) = *(_DWORD *)&v36[3];
  v18 = v50;
  *(_DWORD *)((char *)&v39 + 1) = *(_DWORD *)v36;
  HIDWORD(v40) = *(_DWORD *)&v34[3];
  v19 = v53;
  *(_DWORD *)((char *)&v40 + 9) = *(_DWORD *)v34;
  *(_DWORD *)&v42[4] = *(_DWORD *)&v32[3];
  v20 = v56;
  *(_DWORD *)&v42[1] = *(_DWORD *)v32;
  *(_DWORD *)&v42[28] = *(_DWORD *)&v30[3];
  *(_QWORD *)&v38 = v10;
  *((_QWORD *)&v38 + 1) = 0x4010000000000000;
  LOBYTE(v39) = 0;
  *((_QWORD *)&v39 + 1) = v45;
  *(_QWORD *)&v40 = v46;
  BYTE8(v40) = v47;
  v41 = v49;
  v42[0] = v50;
  *(_OWORD *)&v42[8] = v52;
  v42[24] = v53;
  *(_DWORD *)&v42[25] = *(_DWORD *)v30;
  v43 = v55;
  LOBYTE(v44) = v56;
  DWORD1(v44) = HIDWORD(v28);
  *(_DWORD *)((char *)&v44 + 1) = *(_DWORD *)((char *)&v28 + 1);
  *((_QWORD *)&v44 + 1) = v58;
  v21 = v38;
  v22 = v39;
  v23 = v49;
  *(_OWORD *)(a1 + 64) = v40;
  *(_OWORD *)(a1 + 80) = v23;
  *(_OWORD *)(a1 + 32) = v21;
  *(_OWORD *)(a1 + 48) = v22;
  v24 = *(_OWORD *)v42;
  v25 = *(_OWORD *)&v42[16];
  v26 = v44;
  *(_OWORD *)(a1 + 128) = v43;
  *(_OWORD *)(a1 + 144) = v26;
  *(_OWORD *)(a1 + 96) = v24;
  *(_OWORD *)(a1 + 112) = v25;
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = KeyPath;
  *(_QWORD *)(a1 + 24) = v8;
  v45 = v10;
  v46 = 0x4010000000000000;
  v47 = 0;
  *(_QWORD *)&v49 = v11;
  *((_QWORD *)&v49 + 1) = v12;
  v50 = v13;
  v52 = v14;
  v53 = v18;
  v55 = v15;
  v56 = v19;
  v58 = v16;
  v59 = v20;
  v61 = v17;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22DD50760((uint64_t)&v38);
  sub_22DD507D0((uint64_t)&v45);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_22DD4DF98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v20;

  v20 = sub_22DE1E8F0();
  sub_22DD50840();
  swift_bridgeObjectRetain();
  v2 = sub_22DE1ED94();
  v4 = v3;
  v6 = v5 & 1;
  v7 = sub_22DE1ED58();
  v9 = v8;
  v11 = v10;
  v13 = v12 & 1;
  sub_22DD4FC6C(v2, v4, v6);
  swift_bridgeObjectRelease();
  sub_22DD50088(v7, v9, v13);
  swift_bridgeObjectRetain();
  sub_22DD4FC6C(v7, v9, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v14 = sub_22DE1ED94();
  v16 = v15;
  LOBYTE(v4) = v17 & 1;
  *(_QWORD *)a1 = v20;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v9;
  *(_BYTE *)(a1 + 40) = v13;
  *(_QWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 64) = 1;
  *(_QWORD *)(a1 + 72) = v14;
  *(_QWORD *)(a1 + 80) = v15;
  *(_BYTE *)(a1 + 88) = v17 & 1;
  *(_QWORD *)(a1 + 96) = v18;
  sub_22DD50088(v7, v9, v13);
  swift_bridgeObjectRetain();
  sub_22DD50088(v14, v16, v4);
  swift_bridgeObjectRetain();
  sub_22DD4FC6C(v14, v16, v4);
  swift_bridgeObjectRelease();
  sub_22DD4FC6C(v7, v9, v13);
  return swift_bridgeObjectRelease();
}

double sub_22DD4E150@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  double result;
  __int128 v8;
  _OWORD v9[10];
  _BYTE v10[167];

  v2 = sub_22DE1E8E4();
  sub_22DD4DCC0((uint64_t)v9);
  *(_OWORD *)&v10[119] = v9[7];
  *(_OWORD *)&v10[103] = v9[6];
  *(_OWORD *)&v10[55] = v9[3];
  *(_OWORD *)&v10[39] = v9[2];
  *(_OWORD *)&v10[135] = v9[8];
  *(_OWORD *)&v10[151] = v9[9];
  *(_OWORD *)&v10[71] = v9[4];
  *(_OWORD *)&v10[87] = v9[5];
  *(_OWORD *)&v10[7] = v9[0];
  *(_OWORD *)&v10[23] = v9[1];
  v3 = *(_OWORD *)&v10[96];
  *(_OWORD *)(a1 + 129) = *(_OWORD *)&v10[112];
  v4 = *(_OWORD *)&v10[144];
  *(_OWORD *)(a1 + 145) = *(_OWORD *)&v10[128];
  *(_OWORD *)(a1 + 161) = v4;
  v5 = *(_OWORD *)&v10[32];
  *(_OWORD *)(a1 + 65) = *(_OWORD *)&v10[48];
  v6 = *(_OWORD *)&v10[80];
  *(_OWORD *)(a1 + 81) = *(_OWORD *)&v10[64];
  *(_OWORD *)(a1 + 97) = v6;
  *(_OWORD *)(a1 + 113) = v3;
  result = *(double *)v10;
  v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(a1 + 17) = *(_OWORD *)v10;
  *(_OWORD *)(a1 + 33) = v8;
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = 0x4028000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 176) = *(_QWORD *)&v10[159];
  *(_OWORD *)(a1 + 49) = v5;
  return result;
}

uint64_t sub_22DD4E238@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v5 = a2 & 1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5418);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5420);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = sub_22DE1E9EC();
  *((_QWORD *)v8 + 1) = 0x4040000000000000;
  v8[16] = 0;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5428);
  sub_22DD4E3F8(a1, v5, &v8[*(int *)(v12 + 44)]);
  LOBYTE(a1) = sub_22DE1EC5C();
  sub_22DD506A0((uint64_t)v8, (uint64_t)v11, &qword_255DB5418);
  v13 = &v11[*(int *)(v9 + 36)];
  *v13 = a1;
  *(_OWORD *)(v13 + 8) = 0u;
  *(_OWORD *)(v13 + 24) = 0u;
  v13[40] = 1;
  sub_22DD5071C((uint64_t)v8, &qword_255DB5418);
  if (qword_255DB52C0 != -1)
    swift_once();
  v14 = *(double *)&qword_255DC3CB0;
  v15 = sub_22DE1F130();
  sub_22DD4F604(0.0, 1, 0.0, 1, v14, 0, 0.0, 1, a3, 0.0, 1, 0.0, 1, v15, v16, &qword_255DB5420, &qword_255DB5430);
  return sub_22DD5071C((uint64_t)v11, &qword_255DB5420);
}

uint64_t sub_22DD4E3F8@<X0>(uint64_t a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  int *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  unsigned __int8 v87;
  uint64_t v88;
  uint64_t v89;
  unsigned __int8 v90;

  v69 = a1;
  v71 = a3;
  v68 = a2 & 1;
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5438);
  v70 = *(_QWORD *)(v75 - 8);
  v3 = MEMORY[0x24BDAC7A8](v75);
  v74 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v73 = (char *)&v59 - v5;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5440);
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5448);
  v8 = MEMORY[0x24BDAC7A8](v65);
  v76 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v72 = (uint64_t)&v59 - v10;
  sub_22DE1E980();
  v11 = sub_22DE1ED7C();
  v13 = v12;
  v15 = v14 & 1;
  sub_22DE1ECA4();
  v16 = sub_22DE1ED64();
  v18 = v17;
  v20 = v19;
  v22 = v21;
  swift_release();
  sub_22DD4FC6C(v11, v13, v15);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v79 = v16;
  v80 = v18;
  LOBYTE(v81) = v20 & 1;
  v82 = v22;
  v83 = KeyPath;
  v84 = 1;
  sub_22DE1ECE0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5450);
  sub_22DD4FE68();
  sub_22DE1EDC4();
  sub_22DD4FC6C(v16, v18, v20 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  LOBYTE(v22) = sub_22DE1EC50();
  sub_22DE1E4B8();
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v32 = v66;
  v33 = v76;
  v34 = v67;
  (*(void (**)(uint64_t, char *, uint64_t))(v66 + 16))(v76, v7, v67);
  v35 = v33 + *(int *)(v65 + 36);
  *(_BYTE *)v35 = v22;
  *(_QWORD *)(v35 + 8) = v25;
  *(_QWORD *)(v35 + 16) = v27;
  *(_QWORD *)(v35 + 24) = v29;
  *(_QWORD *)(v35 + 32) = v31;
  *(_BYTE *)(v35 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v34);
  v36 = v72;
  sub_22DD5003C(v33, v72, &qword_255DB5448);
  v37 = v69;
  v77 = v69;
  v38 = v68;
  v78 = v68;
  sub_22DE1EC44();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5470);
  sub_22DD508B0(&qword_255DB5478, &qword_255DB5470, MEMORY[0x24BDF4700]);
  v39 = v73;
  sub_22DE1E4E8();
  v67 = sub_22DE1E9F8();
  sub_22DD4EFB4(v37, v38, (uint64_t)&v79);
  v40 = v80;
  v62 = v79;
  v41 = v81;
  v61 = v82;
  v60 = v83;
  v69 = v85;
  v64 = v86;
  v68 = v87;
  v66 = v88;
  v63 = v89;
  LODWORD(v65) = v90;
  v42 = v84;
  v43 = v76;
  sub_22DD506A0(v36, v76, &qword_255DB5448);
  v44 = v70;
  v45 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
  v46 = v74;
  v47 = v75;
  v45(v74, v39, v75);
  v48 = v71;
  *v71 = 0x4040000000000000;
  *((_BYTE *)v48 + 8) = 0;
  v49 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5480);
  sub_22DD506A0(v43, (uint64_t)v48 + v49[12], &qword_255DB5448);
  v45((char *)v48 + v49[16], v46, v47);
  v50 = (char *)v48 + v49[20];
  *(_QWORD *)v50 = 0;
  v50[8] = 1;
  v51 = (char *)v48 + v49[24];
  *(_QWORD *)v51 = v67;
  *((_QWORD *)v51 + 1) = 0x4028000000000000;
  v51[16] = 0;
  v52 = v62;
  *((_QWORD *)v51 + 3) = v62;
  *((_QWORD *)v51 + 4) = v40;
  v53 = v61;
  *((_QWORD *)v51 + 5) = v41;
  *((_QWORD *)v51 + 6) = v53;
  *((_QWORD *)v51 + 7) = v60;
  v51[64] = v42;
  v54 = v64;
  *((_QWORD *)v51 + 9) = v69;
  *((_QWORD *)v51 + 10) = v54;
  v51[88] = v68;
  v55 = v63;
  *((_QWORD *)v51 + 12) = v66;
  *((_QWORD *)v51 + 13) = v55;
  v51[112] = v65;
  sub_22DD4FF3C(v52, v40);
  v56 = *(void (**)(char *, uint64_t))(v44 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  v57 = v75;
  v56(v73, v75);
  sub_22DD5071C(v72, &qword_255DB5448);
  sub_22DD4FF6C(v52, v40);
  swift_release();
  swift_bridgeObjectRelease();
  v56(v74, v57);
  return sub_22DD5071C(v76, &qword_255DB5448);
}

double sub_22DD4EA30@<D0>(char a1@<W1>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  double result;
  __int128 v9;
  _OWORD v10[9];
  char v11;
  _BYTE v12[152];

  v3 = a1 & 1;
  v4 = sub_22DE1E9F8();
  sub_22DD4EB2C(v3, (uint64_t)v10);
  *(_OWORD *)&v12[119] = v10[7];
  *(_OWORD *)&v12[103] = v10[6];
  *(_OWORD *)&v12[55] = v10[3];
  *(_OWORD *)&v12[39] = v10[2];
  *(_OWORD *)&v12[135] = v10[8];
  v12[151] = v11;
  *(_OWORD *)&v12[71] = v10[4];
  *(_OWORD *)&v12[87] = v10[5];
  *(_OWORD *)&v12[7] = v10[0];
  *(_OWORD *)&v12[23] = v10[1];
  v5 = *(_OWORD *)&v12[112];
  *(_OWORD *)(a2 + 113) = *(_OWORD *)&v12[96];
  *(_OWORD *)(a2 + 129) = v5;
  *(_OWORD *)(a2 + 145) = *(_OWORD *)&v12[128];
  v6 = *(_OWORD *)&v12[48];
  *(_OWORD *)(a2 + 49) = *(_OWORD *)&v12[32];
  *(_OWORD *)(a2 + 65) = v6;
  v7 = *(_OWORD *)&v12[80];
  *(_OWORD *)(a2 + 81) = *(_OWORD *)&v12[64];
  *(_OWORD *)(a2 + 97) = v7;
  result = *(double *)v12;
  v9 = *(_OWORD *)&v12[16];
  *(_OWORD *)(a2 + 17) = *(_OWORD *)v12;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = 0x4038000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 161) = *(_QWORD *)&v12[144];
  *(_OWORD *)(a2 + 33) = v9;
  return result;
}

double sub_22DD4EB2C@<D0>(char a1@<W1>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  double result;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int128 v17;
  unint64_t v18;
  __int128 v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __int128 v30;
  _BYTE v31[32];
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  char v38;

  v3 = a1 & 1;
  v4 = swift_retain();
  v5 = sub_22DD839F0(v4, v3);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)&v30 = v5;
  sub_22DD504A8(&qword_255DB5488, (uint64_t (*)(uint64_t))type metadata accessor for OnboardingController, (uint64_t)&unk_22DE23640);
  sub_22DE1E068();
  swift_release();
  v6 = *(_BYTE *)(v5 + 17);
  swift_release();
  if ((v6 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = 0x552073626D756854;
    v15 = 0xE900000000000070;
    v16 = 0xD000000000000027;
    *(_QWORD *)&v17 = 0x800000022DE28A40;
    *((_QWORD *)&v17 + 1) = 0xD000000000000019;
    v18 = 0x800000022DE28A70;
    *(_QWORD *)&v19 = 0x442073626D756854;
    *((_QWORD *)&v19 + 1) = 0xEB000000006E776FLL;
    v20 = 0xD00000000000002BLL;
    v21 = 0x800000022DE28A90;
    v22 = 0xD00000000000001BLL;
    v23 = 0x800000022DE28AC0;
    v24 = 0x696F50206E726145;
    v25 = 0xEB0000000073746ELL;
    v26 = 0xD00000000000002ALL;
    v27 = 0x800000022DE28AE0;
    v28 = 0xD000000000000012;
    v29 = 0x800000022DE28B10;
    sub_22DD50030((uint64_t)&v14);
  }
  else
  {
    v7 = sub_22DE1E9EC();
    sub_22DD4EE68((uint64_t)&v30);
    v14 = v7;
    v15 = 0;
    LOBYTE(v16) = 1;
    v17 = v30;
    LOBYTE(v18) = v31[0];
    v19 = *(_OWORD *)&v31[8];
    LOBYTE(v20) = v31[24];
    v21 = v32;
    LOBYTE(v22) = BYTE8(v32);
    sub_22DD50080((uint64_t)&v14);
  }
  sub_22DD5003C((uint64_t)&v14, (uint64_t)&v13, &qword_255DB5490);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5498);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB54A0);
  sub_22DD508B0(&qword_255DB54A8, &qword_255DB5498, MEMORY[0x24BDF4700]);
  sub_22DD508B0(&qword_255DB54B0, &qword_255DB54A0, MEMORY[0x24BDF5428]);
  sub_22DE1EAD0();
  v8 = v36;
  *(_OWORD *)(a2 + 96) = v35;
  *(_OWORD *)(a2 + 112) = v8;
  *(_OWORD *)(a2 + 128) = v37;
  *(_BYTE *)(a2 + 144) = v38;
  v9 = v32;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)&v31[16];
  *(_OWORD *)(a2 + 48) = v9;
  v10 = v34;
  *(_OWORD *)(a2 + 64) = v33;
  *(_OWORD *)(a2 + 80) = v10;
  result = *(double *)&v30;
  v12 = *(_OWORD *)v31;
  *(_OWORD *)a2 = v30;
  *(_OWORD *)(a2 + 16) = v12;
  return result;
}

uint64_t sub_22DD4EE68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;

  sub_22DE1E980();
  v2 = sub_22DE1ED7C();
  v4 = v3;
  v6 = v5 & 1;
  sub_22DE1ED04();
  v7 = sub_22DE1ED64();
  v9 = v8;
  v11 = v10;
  v13 = v12;
  swift_release();
  sub_22DD4FC6C(v2, v4, v6);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v9;
  *(_BYTE *)(a1 + 16) = v11 & 1;
  *(_QWORD *)(a1 + 24) = v13;
  *(_QWORD *)(a1 + 32) = KeyPath;
  *(_BYTE *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 56) = 1;
  sub_22DD50088(v7, v9, v11 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_22DD4FC6C(v7, v9, v11 & 1);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DD4EFB4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)();
  char v13;
  uint64_t v14;

  v5 = a2 & 1;
  v6 = swift_retain();
  v7 = sub_22DD839F0(v6, v5);
  swift_release();
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB5488, (uint64_t (*)(uint64_t))type metadata accessor for OnboardingController, (uint64_t)&unk_22DE23640);
  sub_22DE1E068();
  swift_release();
  v8 = *(_BYTE *)(v7 + 17);
  swift_release();
  v9 = (v8 & 1) == 0;
  if ((v8 & 1) != 0)
    v10 = 0;
  else
    v10 = 0x776F4E20746F4ELL;
  if (v9)
    v11 = 0xE700000000000000;
  else
    v11 = 0;
  if (v9)
    v12 = nullsub_1;
  else
    v12 = 0;
  v13 = v9;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_BYTE *)(v14 + 24) = v5 != 0;
  *(_QWORD *)a3 = v10;
  *(_QWORD *)(a3 + 8) = v11;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = v12;
  *(_QWORD *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 40) = v13;
  *(_QWORD *)(a3 + 48) = 0x65756E69746E6F43;
  *(_QWORD *)(a3 + 56) = 0xE800000000000000;
  *(_BYTE *)(a3 + 64) = 0;
  *(_QWORD *)(a3 + 72) = sub_22DD4FFC8;
  *(_QWORD *)(a3 + 80) = v14;
  *(_BYTE *)(a3 + 88) = 0;
  swift_retain();
  sub_22DD4FF3C(v10, v11);
  return sub_22DD4FF6C(v10, v11);
}

uint64_t sub_22DD4F148(uint64_t a1, char a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;

  v2 = a2 & 1;
  v3 = swift_retain();
  v4 = sub_22DD839F0(v3, v2);
  swift_release();
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB5488, (uint64_t (*)(uint64_t))type metadata accessor for OnboardingController, (uint64_t)&unk_22DE23640);
  sub_22DE1E068();
  swift_release();
  v5 = *(_BYTE *)(v4 + 17);
  v6 = swift_release();
  if ((v5 & 1) != 0)
  {
    v7 = swift_retain();
    sub_22DD839F0(v7, v2);
    swift_release();
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    sub_22DE1E05C();
    swift_release();
  }
  else
  {
    MEMORY[0x24BDAC7A8](v6);
    sub_22DE1F13C();
    sub_22DE1E674();
  }
  return swift_release();
}

uint64_t sub_22DD4F2F4(uint64_t a1, char a2)
{
  char v2;
  uint64_t v3;

  v2 = a2 & 1;
  v3 = swift_retain();
  sub_22DD839F0(v3, v2);
  swift_release();
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB5488, (uint64_t (*)(uint64_t))type metadata accessor for OnboardingController, (uint64_t)&unk_22DE23640);
  sub_22DE1E05C();
  swift_release();
  return swift_release();
}

uint64_t sub_22DD4F3CC@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20;
  char v21;
  uint64_t v22;
  void *v31;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v20 = a19;
  v21 = a18;
  v22 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_22DE1F508();
    v31 = (void *)sub_22DE1EC20();
    sub_22DE1E3EC();

    v21 = a18;
    v20 = a19;
    v22 = a17;
  }
  sub_22DE1E740();
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = v22;
  *(_BYTE *)(a9 + 16) = v21 & 1;
  *(_QWORD *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_22DD50088(a16, v22, v21 & 1);
  return swift_bridgeObjectRetain();
}

double sub_22DD4F5AC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_22DD4F604(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_255DB55B8, &qword_255DB55C0).n128_u64[0];
  return result;
}

__n128 sub_22DD4F604@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t *v19;
  void *v28;
  _OWORD *v29;
  __n128 result;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __n128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v19 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_22DE1F508();
    v28 = (void *)sub_22DE1EC20();
    sub_22DE1E3EC();

    v19 = a17;
  }
  sub_22DE1E740();
  sub_22DD506A0(v17, a9, a16);
  v29 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *v29 = v31;
  v29[1] = v32;
  result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

double sub_22DD4F7D0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_22DD4F604(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_255DB54B8, &qword_255DB54C0).n128_u64[0];
  return result;
}

uint64_t sub_22DD4F828()
{
  return sub_22DE1EE0C();
}

uint64_t sub_22DD4F840@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DD4E238(*(_QWORD *)v1, *(_BYTE *)(v1 + 8), a1);
}

uint64_t sub_22DD4F84C(uint64_t a1, uint64_t a2)
{
  return sub_22DD4F994(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_22DD4F858(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_22DE1F298();
  *a2 = 0;
  return result;
}

uint64_t sub_22DD4F8CC(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_22DE1F2A4();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_22DD4F948@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_22DE1F2B0();
  v2 = sub_22DE1F28C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_22DD4F988(uint64_t a1, uint64_t a2)
{
  return sub_22DD4F994(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_22DD4F994(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_22DE1F2B0();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_22DD4F9D0()
{
  sub_22DE1F2B0();
  sub_22DE1F310();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DD4FA10()
{
  uint64_t v0;

  sub_22DE1F2B0();
  sub_22DE1F964();
  sub_22DE1F310();
  v0 = sub_22DE1F97C();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_22DD4FA80(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_22DD4FA88()
{
  return sub_22DE1F670();
}

_QWORD *sub_22DD4FAA0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_22DD4FAB4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_22DD4FAC8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_22DD4FADC(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_22DD4FB0C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_22DD4FB38@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_22DD4FB5C(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_22DD4FB70(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_22DD4FB84(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_22DD4FB98@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_22DD4FBAC(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_22DD4FBC0(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_22DD4FBD4(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_22DD4FBE8()
{
  _QWORD *v0;

  return *v0 == 0;
}

_QWORD *sub_22DD4FBF8(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_22DD4FC0C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_22DD4FC1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x22E320798]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_22DD4FC6C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_22DD4FC7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_22DE1F2B0();
  v2 = v1;
  if (v0 == sub_22DE1F2B0() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_22DE1F8E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL sub_22DD4FD04(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_22DD4FD18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_22DD506E4(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

_QWORD *sub_22DD4FD54@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_22DD4FD64(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_22DD4FD70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_22DE1F28C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_22DD4FDB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_22DE1F2B0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22DD4FDDC()
{
  sub_22DD504A8(&qword_255DB55C8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_22DE20BE0);
  sub_22DD504A8(&qword_255DB55D0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_22DE20B34);
  return sub_22DE1F814();
}

unint64_t sub_22DD4FE68()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255DB5458;
  if (!qword_255DB5458)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB5450);
    v2 = sub_22DD508B0(&qword_255DB5460, &qword_255DB5468, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255DB5458);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x22E3207A4](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

double sub_22DD4FF30@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DD4EA30(*(_BYTE *)(v1 + 24), a1);
}

uint64_t sub_22DD4FF3C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_22DD4FF6C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_22DD4FFA4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD4FFC8()
{
  uint64_t v0;

  return sub_22DD4F148(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_22DD4FFDC()
{
  uint64_t v0;

  return sub_22DD93038(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_22DD4FFF8()
{
  uint64_t v0;

  return sub_22DD4F2F4(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_22DD50014()
{
  uint64_t v0;

  return sub_22DD932D0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_22DD50030(uint64_t result)
{
  *(_BYTE *)(result + 144) = 1;
  return result;
}

uint64_t sub_22DD5003C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22DD50080(uint64_t result)
{
  *(_BYTE *)(result + 144) = 0;
  return result;
}

uint64_t sub_22DD50088(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_22DD500E8(a1, &qword_255DB5528);
}

void type metadata accessor for FBKBugFormRole(uint64_t a1)
{
  sub_22DD500E8(a1, &qword_255DB5530);
}

void type metadata accessor for FBKStartupUI(uint64_t a1)
{
  sub_22DD500E8(a1, &qword_255DB5538);
}

void type metadata accessor for FBKStartupFailure(uint64_t a1)
{
  sub_22DD500E8(a1, &qword_255DB5540);
}

void sub_22DD500E8(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for Row(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for Row()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for Row(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Row(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for Row(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Row(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Row(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Row()
{
  return &type metadata for Row;
}

unint64_t sub_22DD5037C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB5548;
  if (!qword_255DB5548)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB5430);
    v2[0] = sub_22DD503E8();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB5548);
  }
  return result;
}

unint64_t sub_22DD503E8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB5550;
  if (!qword_255DB5550)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB5420);
    v2[0] = sub_22DD508B0(&qword_255DB5558, &qword_255DB5418, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB5550);
  }
  return result;
}

uint64_t sub_22DD5046C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD5047C()
{
  return sub_22DD504A8(&qword_255DB5560, (uint64_t (*)(uint64_t))type metadata accessor for FBKStartupFailure, (uint64_t)&unk_22DE207AC);
}

uint64_t sub_22DD504A8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x22E3207B0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22DD504E8()
{
  return sub_22DD504A8(&qword_255DB5568, (uint64_t (*)(uint64_t))type metadata accessor for FBKStartupFailure, (uint64_t)&unk_22DE20778);
}

uint64_t sub_22DD50514()
{
  return sub_22DD504A8(&qword_255DB5570, (uint64_t (*)(uint64_t))type metadata accessor for FBKStartupFailure, (uint64_t)&unk_22DE207D8);
}

uint64_t sub_22DD50540()
{
  return sub_22DD504A8(&qword_255DB5578, (uint64_t (*)(uint64_t))type metadata accessor for FBKStartupFailure, (uint64_t)&unk_22DE20814);
}

uint64_t sub_22DD5056C()
{
  return sub_22DD504A8(&qword_255DB5580, (uint64_t (*)(uint64_t))type metadata accessor for FBKStartupUI, (uint64_t)&unk_22DE20950);
}

uint64_t sub_22DD50598()
{
  return sub_22DD504A8(&qword_255DB5588, (uint64_t (*)(uint64_t))type metadata accessor for FBKStartupUI, (uint64_t)&unk_22DE2091C);
}

uint64_t sub_22DD505C4()
{
  return sub_22DD504A8(&qword_255DB5590, (uint64_t (*)(uint64_t))type metadata accessor for FBKStartupUI, (uint64_t)&unk_22DE2097C);
}

uint64_t sub_22DD505F0()
{
  return sub_22DD504A8(&qword_255DB5598, (uint64_t (*)(uint64_t))type metadata accessor for FBKStartupUI, (uint64_t)&unk_22DE209B8);
}

uint64_t sub_22DD5061C()
{
  return sub_22DD504A8(&qword_255DB55A0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_22DE20AF8);
}

uint64_t sub_22DD50648()
{
  return sub_22DD504A8(&qword_255DB55A8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_22DE20ACC);
}

uint64_t sub_22DD50674()
{
  return sub_22DD504A8(&qword_255DB55B0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_22DE20B68);
}

uint64_t sub_22DD506A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22DD506E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_22DD5071C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22DD50760(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_BYTE *)(a1 + 112);
  sub_22DD50088(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  swift_bridgeObjectRetain();
  sub_22DD50088(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22DD507D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_BYTE *)(a1 + 112);
  sub_22DD4FC6C(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  swift_bridgeObjectRelease();
  sub_22DD4FC6C(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_22DD50840()
{
  unint64_t result;

  result = qword_255DB55E0;
  if (!qword_255DB55E0)
  {
    result = MEMORY[0x22E3207B0](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_255DB55E0);
  }
  return result;
}

uint64_t sub_22DD50884()
{
  return sub_22DD508B0(&qword_255DB55E8, (uint64_t *)&unk_255DB55F0, MEMORY[0x24BDF4498]);
}

uint64_t sub_22DD508B0(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x22E3207B0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

BOOL static AgreementConsentView.ConsentResult.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AgreementConsentView.ConsentResult.hash(into:)()
{
  return sub_22DE1F970();
}

uint64_t AgreementConsentView.ConsentResult.hashValue.getter()
{
  sub_22DE1F964();
  sub_22DE1F970();
  return sub_22DE1F97C();
}

BOOL sub_22DD509D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_22DD509E8()
{
  sub_22DE1F964();
  sub_22DE1F970();
  return sub_22DE1F97C();
}

uint64_t sub_22DD50A2C()
{
  return sub_22DE1F970();
}

uint64_t sub_22DD50A54()
{
  sub_22DE1F964();
  sub_22DE1F970();
  return sub_22DE1F97C();
}

id AgreementConsentView.pendingConsent.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for AgreementConsentView() + 24) + 8);
}

uint64_t type metadata accessor for AgreementConsentView()
{
  uint64_t result;

  result = qword_255DB5718;
  if (!qword_255DB5718)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22DD50AF4(void **a1, uint64_t a2)
{
  void *v2;
  id *v3;

  v2 = *a1;
  v3 = (id *)(a2 + *(int *)(type metadata accessor for AgreementConsentView() + 24) + 8);
  objc_storeStrong(v3, v2);
}

void AgreementConsentView.pendingConsent.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AgreementConsentView() + 24);

  *(_QWORD *)(v3 + 8) = a1;
}

uint64_t (*AgreementConsentView.pendingConsent.modify())()
{
  type metadata accessor for AgreementConsentView();
  return nullsub_1;
}

uint64_t AgreementConsentView.$pendingConsent.getter()
{
  type metadata accessor for AgreementConsentView();
  sub_22DD50BFC();
  sub_22DD504A8((unint64_t *)&qword_255DB5668, (uint64_t (*)(uint64_t))sub_22DD50BFC, MEMORY[0x24BE312A8]);
  return sub_22DE1E6BC();
}

unint64_t sub_22DD50BFC()
{
  unint64_t result;

  result = qword_255DB5660;
  if (!qword_255DB5660)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255DB5660);
  }
  return result;
}

uint64_t sub_22DD50C38@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for AgreementConsentView() + 32));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_22DD54288;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_22DD50D8C(v4);
}

uint64_t sub_22DD50CB0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_22DD54288;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for AgreementConsentView() + 32));
  v8 = *v7;
  sub_22DD50D8C(v3);
  result = sub_22DD50DE0(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t AgreementConsentView.completion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AgreementConsentView() + 32));
  sub_22DD50D8C(v1);
  return v1;
}

uint64_t sub_22DD50D8C(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t AgreementConsentView.completion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t result;

  v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for AgreementConsentView() + 32));
  result = sub_22DD50DE0(*v5);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t sub_22DD50DE0(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t (*AgreementConsentView.completion.modify())()
{
  type metadata accessor for AgreementConsentView();
  return nullsub_1;
}

uint64_t AgreementConsentView.init(consent:completion:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  int *v6;
  uint64_t *v7;
  char *v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t result;
  uint64_t v12;
  char v13;
  uint64_t v14;

  *a3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5670);
  swift_storeEnumTagMultiPayload();
  v6 = (int *)type metadata accessor for AgreementConsentView();
  v7 = (uint64_t *)((char *)a3 + v6[5]);
  *v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5678);
  swift_storeEnumTagMultiPayload();
  v8 = (char *)a3 + v6[7];
  sub_22DE1EFEC();
  *v8 = v13;
  *((_QWORD *)v8 + 1) = v14;
  v9 = (uint64_t *)((char *)a3 + v6[8]);
  v10 = (uint64_t *)((char *)a3 + v6[6]);
  sub_22DD50BFC();
  sub_22DD504A8((unint64_t *)&qword_255DB5668, (uint64_t (*)(uint64_t))sub_22DD50BFC, MEMORY[0x24BE312A8]);
  result = sub_22DE1E6B0();
  *v10 = result;
  v10[1] = v12;
  *v9 = a1;
  v9[1] = a2;
  return result;
}

uint64_t AgreementConsentView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t KeyPath;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v41;
  uint64_t v42;

  v2 = v1;
  v42 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5680);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5688);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5690);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5698);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = sub_22DE1E9EC();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB56A0);
  sub_22DD51250(v2, (uint64_t *)&v5[*(int *)(v15 + 44)]);
  KeyPath = swift_getKeyPath();
  sub_22DD506A0((uint64_t)v5, (uint64_t)v8, &qword_255DB5680);
  v17 = &v8[*(int *)(v6 + 36)];
  *(_QWORD *)v17 = KeyPath;
  v17[8] = 1;
  sub_22DD5071C((uint64_t)v5, &qword_255DB5680);
  LOBYTE(v5) = sub_22DE1EC68();
  v18 = sub_22DE1EC8C();
  sub_22DE1EC8C();
  if (sub_22DE1EC8C() != v5)
    v18 = sub_22DE1EC8C();
  sub_22DE1E4B8();
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;
  sub_22DD506A0((uint64_t)v8, (uint64_t)v11, &qword_255DB5688);
  v27 = &v11[*(int *)(v9 + 36)];
  *v27 = v18;
  *((_QWORD *)v27 + 1) = v20;
  *((_QWORD *)v27 + 2) = v22;
  *((_QWORD *)v27 + 3) = v24;
  *((_QWORD *)v27 + 4) = v26;
  v27[40] = 0;
  sub_22DD5071C((uint64_t)v8, &qword_255DB5688);
  v28 = sub_22DE1EC80();
  v29 = sub_22DE1EC98();
  v30 = sub_22DE1EC8C();
  sub_22DE1EC8C();
  if (sub_22DE1EC8C() != v28)
    v30 = sub_22DE1EC8C();
  sub_22DE1EC8C();
  if (sub_22DE1EC8C() != v29)
    v30 = sub_22DE1EC8C();
  sub_22DE1E4B8();
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;
  sub_22DD506A0((uint64_t)v11, (uint64_t)v14, &qword_255DB5690);
  v39 = &v14[*(int *)(v12 + 36)];
  *v39 = v30;
  *((_QWORD *)v39 + 1) = v32;
  *((_QWORD *)v39 + 2) = v34;
  *((_QWORD *)v39 + 3) = v36;
  *((_QWORD *)v39 + 4) = v38;
  v39[40] = 0;
  sub_22DD5071C((uint64_t)v11, &qword_255DB5690);
  return sub_22DD5003C((uint64_t)v14, v42, &qword_255DB5698);
}

void sub_22DD51250(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  unsigned __int8 v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t KeyPath;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  void (*v112)(char *, char *, uint64_t);
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  void *v119;
  int *v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  id v125;
  void (*v126)(char *, uint64_t);
  uint64_t v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unsigned __int8 v177;
  char *v178;
  uint64_t v179;

  v162 = a2;
  v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB57B0);
  v159 = *(_QWORD *)(v160 - 8);
  MEMORY[0x24BDAC7A8](v160);
  v158 = (char *)&v127 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB57B8);
  v4 = MEMORY[0x24BDAC7A8](v157);
  v163 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v168 = (uint64_t)&v127 - v6;
  v148 = sub_22DE1EB90();
  v147 = *(_QWORD *)(v148 - 8);
  MEMORY[0x24BDAC7A8](v148);
  v145 = (char *)&v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AgreementConsentView();
  v139 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v140 = v9;
  v164 = (uint64_t)&v127 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB57C0);
  v143 = *(_QWORD *)(v144 - 8);
  MEMORY[0x24BDAC7A8](v144);
  v141 = (char *)&v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB57C8);
  v150 = *(_QWORD *)(v151 - 8);
  MEMORY[0x24BDAC7A8](v151);
  v149 = (char *)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB57D0);
  MEMORY[0x24BDAC7A8](v146);
  v155 = (char *)&v127 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB57D8);
  v13 = MEMORY[0x24BDAC7A8](v154);
  v161 = (uint64_t)&v127 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v153 = (uint64_t)&v127 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v167 = (uint64_t)&v127 - v17;
  v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB57E0);
  v137 = *(_QWORD *)(v138 - 8);
  MEMORY[0x24BDAC7A8](v138);
  v129 = (char *)&v127 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB7BC0);
  MEMORY[0x24BDAC7A8](v19);
  v134 = (char *)&v127 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_22DE1DFB4();
  v135 = *(_QWORD *)(v136 - 8);
  v21 = MEMORY[0x24BDAC7A8](v136);
  v130 = (char *)&v127 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v128 = (char *)&v127 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB57E8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v156 = (uint64_t)&v127 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v172 = (uint64_t)&v127 - v27;
  v133 = sub_22DE1EB00();
  v132 = *(_QWORD *)(v133 - 8);
  MEMORY[0x24BDAC7A8](v133);
  v29 = (char *)&v127 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB57F0);
  v131 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v127 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB57F8);
  v171 = *(_QWORD *)(v166 - 8);
  v33 = MEMORY[0x24BDAC7A8](v166);
  v165 = (char *)&v127 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v37 = (char *)&v127 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v170 = (char *)&v127 - v38;
  v39 = sub_22DE1E6D4();
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v127 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = v8;
  sub_22DD83A40((uint64_t)v42);
  LOBYTE(v8) = sub_22DE1E6C8();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v39);
  v43 = 0;
  v44 = 0;
  if ((v8 & 1) == 0)
  {
    v45 = *(void **)(a1 + *(int *)(v169 + 24) + 8);
    sub_22DD50BFC();
    sub_22DD504A8((unint64_t *)&qword_255DB5668, (uint64_t (*)(uint64_t))sub_22DD50BFC, MEMORY[0x24BE312A8]);
    v46 = v45;
    v43 = sub_22DE1E6B0();
  }
  v142 = v43;
  v152 = v44;
  MEMORY[0x24BDAC7A8](v43);
  *(&v127 - 2) = a1;
  sub_22DE1EC44();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5800);
  sub_22DD508B0(&qword_255DB5808, &qword_255DB5800, MEMORY[0x24BDF5428]);
  sub_22DE1E4E8();
  sub_22DE1EAF4();
  v47 = sub_22DE1EC44();
  sub_22DE1EC38();
  sub_22DE1EC38();
  if (sub_22DE1EC38() != v47)
    sub_22DE1EC38();
  sub_22DD508B0(&qword_255DB5810, &qword_255DB57F0, MEMORY[0x24BDEB238]);
  sub_22DE1EE84();
  (*(void (**)(char *, uint64_t))(v132 + 8))(v29, v133);
  (*(void (**)(char *, uint64_t))(v131 + 8))(v32, v30);
  (*(void (**)(char *, char *, uint64_t))(v171 + 32))(v170, v37, v166);
  v48 = objc_msgSend(*(id *)(a1 + *(int *)(v169 + 24) + 8), sel_learnMoreURL);
  v49 = a1;
  v50 = v136;
  if (v48)
  {
    v51 = v48;
    v52 = v130;
    sub_22DE1DF84();

    v53 = v135;
    v54 = *(void (**)(char *, char *, uint64_t))(v135 + 32);
    v55 = (uint64_t)v134;
    v54(v134, v52, v50);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v55, 0, 1, v50);
    v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v55, 1, v50);
    v57 = v164;
    v58 = v138;
    v59 = v137;
    if (v56 != 1)
    {
      v60 = v128;
      v54(v128, (char *)v55, v50);
      sub_22DE1E980();
      v134 = (char *)v49;
      v133 = v61;
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v52, v60, v50);
      v62 = v129;
      sub_22DE1ED28();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v60, v50);
      v63 = v172;
      v64 = v62;
      v49 = (uint64_t)v134;
      (*(void (**)(uint64_t, char *, uint64_t))(v59 + 32))(v172, v64, v58);
      v65 = 0;
      goto LABEL_10;
    }
  }
  else
  {
    v55 = (uint64_t)v134;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v135 + 56))(v134, 1, 1, v136);
    v57 = v164;
    v58 = v138;
    v59 = v137;
  }
  sub_22DD5071C(v55, (uint64_t *)&unk_255DB7BC0);
  v65 = 1;
  v63 = v172;
LABEL_10:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v63, v65, 1, v58);
  sub_22DD542B0(v49, v57);
  v66 = *(unsigned __int8 *)(v139 + 80);
  v67 = (v66 + 16) & ~v66;
  v140 += v67;
  v139 = v66 | 7;
  v68 = swift_allocObject();
  v69 = sub_22DD542F8(v57, v68 + v67);
  MEMORY[0x24BDAC7A8](v69);
  *(&v127 - 2) = v49;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5818);
  v70 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB5820);
  v71 = sub_22DD53F60(&qword_255DB5828, &qword_255DB5820, (uint64_t (*)(void))sub_22DD54350);
  v174 = v70;
  v175 = v71;
  swift_getOpaqueTypeConformance2();
  v72 = v141;
  sub_22DE1F01C();
  v73 = v145;
  sub_22DE1EB84();
  sub_22DD508B0(&qword_255DB5840, &qword_255DB57C0, MEMORY[0x24BDF43B0]);
  sub_22DD504A8(&qword_255DB5848, (uint64_t (*)(uint64_t))MEMORY[0x24BDF0DA8], MEMORY[0x24BDF0D88]);
  v74 = v149;
  v75 = v144;
  v76 = v148;
  sub_22DE1EDDC();
  (*(void (**)(char *, uint64_t))(v147 + 8))(v73, v76);
  (*(void (**)(char *, uint64_t))(v143 + 8))(v72, v75);
  v77 = sub_22DE1EC74();
  v78 = sub_22DE1EC8C();
  sub_22DE1EC8C();
  if (sub_22DE1EC8C() != v77)
    v78 = sub_22DE1EC8C();
  sub_22DE1E4B8();
  v80 = v79;
  v82 = v81;
  v84 = v83;
  v86 = v85;
  v87 = v150;
  v88 = (uint64_t)v155;
  v89 = v151;
  (*(void (**)(char *, char *, uint64_t))(v150 + 16))(v155, v74, v151);
  v90 = v88 + *(int *)(v146 + 36);
  *(_BYTE *)v90 = v78;
  *(_QWORD *)(v90 + 8) = v80;
  *(_QWORD *)(v90 + 16) = v82;
  *(_QWORD *)(v90 + 24) = v84;
  *(_QWORD *)(v90 + 32) = v86;
  *(_BYTE *)(v90 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v87 + 8))(v74, v89);
  v91 = v49;
  v92 = v49 + *(int *)(v169 + 28);
  v93 = *(_QWORD *)(v92 + 8);
  LOBYTE(v174) = *(_BYTE *)v92;
  v175 = v93;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5850);
  sub_22DE1EFF8();
  v94 = v173;
  KeyPath = swift_getKeyPath();
  v96 = swift_allocObject();
  *(_BYTE *)(v96 + 16) = v94;
  v97 = v153;
  sub_22DD506A0(v88, v153, &qword_255DB57D0);
  v98 = (uint64_t *)(v97 + *(int *)(v154 + 36));
  *v98 = KeyPath;
  v98[1] = (uint64_t)sub_22DD543CC;
  v98[2] = v96;
  sub_22DD5071C(v88, &qword_255DB57D0);
  sub_22DD5003C(v97, v167, &qword_255DB57D8);
  v99 = v164;
  sub_22DD542B0(v91, v164);
  v100 = swift_allocObject();
  v101 = sub_22DD542F8(v99, v100 + v67);
  MEMORY[0x24BDAC7A8](v101);
  *(&v127 - 2) = v91;
  v102 = v158;
  sub_22DE1F01C();
  v103 = *(_QWORD *)(v92 + 8);
  LOBYTE(v174) = *(_BYTE *)v92;
  v175 = v103;
  sub_22DE1EFF8();
  v104 = v173;
  v105 = swift_getKeyPath();
  v106 = swift_allocObject();
  *(_BYTE *)(v106 + 16) = v104;
  v107 = v159;
  v108 = (uint64_t)v163;
  v109 = v160;
  (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v163, v102, v160);
  v110 = (uint64_t *)(v108 + *(int *)(v157 + 36));
  *v110 = v105;
  v110[1] = (uint64_t)sub_22DD54594;
  v110[2] = v106;
  (*(void (**)(char *, uint64_t))(v107 + 8))(v102, v109);
  v111 = v168;
  sub_22DD5003C(v108, v168, &qword_255DB57B8);
  sub_22DE1F130();
  sub_22DE1E5E4();
  v169 = v174;
  LODWORD(v164) = v175;
  v160 = v176;
  LODWORD(v159) = v177;
  v158 = v178;
  v157 = v179;
  v112 = *(void (**)(char *, char *, uint64_t))(v171 + 16);
  v113 = v165;
  v114 = v166;
  v112(v165, v170, v166);
  v115 = v156;
  sub_22DD506A0(v172, v156, &qword_255DB57E8);
  v116 = v167;
  v117 = v161;
  sub_22DD506A0(v167, v161, &qword_255DB57D8);
  sub_22DD506A0(v111, v108, &qword_255DB57B8);
  v118 = v162;
  v119 = v152;
  *v162 = v142;
  v118[1] = (uint64_t)v119;
  v120 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5858);
  v112((char *)v118 + v120[12], v113, v114);
  v121 = (char *)v118 + v120[16];
  *(_QWORD *)v121 = 0;
  v121[8] = 1;
  sub_22DD506A0(v115, (uint64_t)v118 + v120[20], &qword_255DB57E8);
  v122 = (char *)v118 + v120[24];
  *(_QWORD *)v122 = 0x402E000000000000;
  v122[8] = 0;
  sub_22DD506A0(v117, (uint64_t)v118 + v120[28], &qword_255DB57D8);
  sub_22DD506A0(v108, (uint64_t)v118 + v120[32], &qword_255DB57B8);
  v123 = (char *)v118 + v120[36];
  *(_QWORD *)v123 = 0;
  v123[8] = 1;
  *((_QWORD *)v123 + 2) = v169;
  v123[24] = v164;
  *((_QWORD *)v123 + 4) = v160;
  v123[40] = v159;
  v124 = v157;
  *((_QWORD *)v123 + 6) = v158;
  *((_QWORD *)v123 + 7) = v124;
  v125 = v119;
  sub_22DD5071C(v168, &qword_255DB57B8);
  sub_22DD5071C(v116, &qword_255DB57D8);
  sub_22DD5071C(v172, &qword_255DB57E8);
  v126 = *(void (**)(char *, uint64_t))(v171 + 8);
  v126(v170, v114);
  sub_22DD5071C(v108, &qword_255DB57B8);
  sub_22DD5071C(v117, &qword_255DB57D8);
  sub_22DD5071C(v115, &qword_255DB57E8);
  v126(v165, v114);

}

uint64_t sub_22DD522AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v33;

  v4 = sub_22DE1E6D4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AgreementConsentView();
  sub_22DD83A40((uint64_t)v7);
  v9 = sub_22DE1E6C8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v10 = 0;
  v11 = 0;
  if ((v9 & 1) != 0)
  {
    v12 = *(void **)(a1 + *(int *)(v8 + 24) + 8);
    sub_22DD50BFC();
    sub_22DD504A8((unint64_t *)&qword_255DB5668, (uint64_t (*)(uint64_t))sub_22DD50BFC, MEMORY[0x24BE312A8]);
    v13 = v12;
    v10 = sub_22DE1E6B0();
    v11 = v14;
  }
  v15 = objc_msgSend(*(id *)(a1 + *(int *)(v8 + 24) + 8), sel_bodyText);
  sub_22DE1F2B0();

  sub_22DE1E980();
  v16 = sub_22DE1ED7C();
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v23 = sub_22DE1EC80();
  v24 = sub_22DE1EC98();
  v25 = sub_22DE1EC8C();
  sub_22DE1EC8C();
  if (sub_22DE1EC8C() != v23)
    v25 = sub_22DE1EC8C();
  sub_22DE1EC8C();
  if (sub_22DE1EC8C() != v24)
    v25 = sub_22DE1EC8C();
  v26 = v20 & 1;
  sub_22DE1E4B8();
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v16;
  *(_QWORD *)(a2 + 24) = v18;
  *(_BYTE *)(a2 + 32) = v26;
  *(_QWORD *)(a2 + 40) = v22;
  *(_BYTE *)(a2 + 48) = v25;
  *(_QWORD *)(a2 + 56) = v27;
  *(_QWORD *)(a2 + 64) = v28;
  *(_QWORD *)(a2 + 72) = v29;
  *(_QWORD *)(a2 + 80) = v30;
  *(_BYTE *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = 0x4034000000000000;
  *(_BYTE *)(a2 + 104) = 0;
  v31 = v11;
  sub_22DD50088(v16, v18, v26);
  swift_bridgeObjectRetain();
  sub_22DD4FC6C(v16, v18, v26);

  return swift_bridgeObjectRelease();
}

uint64_t sub_22DD52518(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  void (*v10)(_BYTE *);
  _BYTE v12[16];
  _BYTE v13[8];
  uint64_t v14;

  v2 = sub_22DE1E614();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for AgreementConsentView();
  v7 = (char *)(a1 + *(int *)(v6 + 28));
  v8 = *v7;
  v9 = *((_QWORD *)v7 + 1);
  v13[0] = v8;
  v14 = v9;
  v12[15] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5850);
  sub_22DE1F004();
  v10 = *(void (**)(_BYTE *))(a1 + *(int *)(v6 + 32));
  if (v10)
  {
    v13[0] = 0;
    v10(v13);
  }
  sub_22DD83A0C((uint64_t)v5);
  sub_22DE1E608();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_22DD52610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  char v55;
  char v56;

  v37 = a2;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5818);
  v3 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(*(id *)(a1 + *(int *)(type metadata accessor for AgreementConsentView() + 24) + 8), sel_agreeButtonText);
  v7 = sub_22DE1F2B0();
  v9 = v8;

  v38 = v7;
  v39 = v9;
  sub_22DD50840();
  v10 = sub_22DE1ED94();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v17 = sub_22DE1EC80();
  v18 = sub_22DE1EC98();
  v19 = sub_22DE1EC8C();
  sub_22DE1EC8C();
  if (sub_22DE1EC8C() != v17)
    v19 = sub_22DE1EC8C();
  sub_22DE1EC8C();
  if (sub_22DE1EC8C() != v18)
    v19 = sub_22DE1EC8C();
  sub_22DE1E4B8();
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v28 = sub_22DE1EC68();
  v29 = sub_22DE1EC74();
  v30 = sub_22DE1EC8C();
  sub_22DE1EC8C();
  if (sub_22DE1EC8C() != v28)
    v30 = sub_22DE1EC8C();
  sub_22DE1EC8C();
  if (sub_22DE1EC8C() != v29)
    v30 = sub_22DE1EC8C();
  sub_22DE1E4B8();
  v56 = v14 & 1;
  v55 = 0;
  v54 = 0;
  v38 = v10;
  v39 = v12;
  v40 = v14 & 1;
  v41 = v16;
  v42 = v19;
  v43 = v21;
  v44 = v23;
  v45 = v25;
  v46 = v27;
  v47 = 0;
  v48 = v30;
  v49 = v31;
  v50 = v32;
  v51 = v33;
  v52 = v34;
  v53 = 0;
  sub_22DE1ECEC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5820);
  sub_22DD53F60(&qword_255DB5828, &qword_255DB5820, (uint64_t (*)(void))sub_22DD54350);
  sub_22DE1EDC4();
  sub_22DD4FC6C(v10, v12, v14 & 1);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(v37, v5, v36);
}

uint64_t sub_22DD528E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void (*v10)(char *);
  _BYTE v12[16];
  char v13[8];
  uint64_t v14;

  v2 = sub_22DE1E614();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for AgreementConsentView();
  v7 = a1 + *(int *)(v6 + 28);
  v8 = *(_BYTE *)v7;
  v9 = *(_QWORD *)(v7 + 8);
  v13[0] = v8;
  v14 = v9;
  v12[15] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5850);
  sub_22DE1F004();
  v10 = *(void (**)(char *))(a1 + *(int *)(v6 + 32));
  if (v10)
  {
    v13[0] = 1;
    v10(v13);
  }
  sub_22DD83A0C((uint64_t)v5);
  sub_22DE1E608();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_22DD529E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v3 = objc_msgSend(*(id *)(a1 + *(int *)(type metadata accessor for AgreementConsentView() + 24) + 8), sel_declineButtonText);
  sub_22DE1F2B0();

  sub_22DD50840();
  v4 = sub_22DE1ED94();
  v6 = v5;
  v8 = v7 & 1;
  sub_22DE1ECEC();
  v9 = sub_22DE1ED40();
  v11 = v10;
  v13 = v12;
  v15 = v14;
  sub_22DD4FC6C(v4, v6, v8);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v13 & 1;
  *(_QWORD *)(a2 + 24) = v15;
  return result;
}

uint64_t sub_22DD52AEC@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v48 = a1;
  v49 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5790);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5798);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB55D8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB57A0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13);
  v50 = (uint64_t)&v47 - v16;
  v17 = objc_msgSend(a1, sel_symbolImageName);
  sub_22DE1F2B0();

  v18 = sub_22DE1EFBC();
  v19 = sub_22DE1ECD4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v11, 1, 1, v19);
  v20 = sub_22DE1ECF8();
  sub_22DD5071C((uint64_t)v11, &qword_255DB55D8);
  KeyPath = swift_getKeyPath();
  v22 = sub_22DE1EF38();
  sub_22DE1EA04();
  v23 = sub_22DE1EA10();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v8, 0, 1, v23);
  v24 = swift_getKeyPath();
  sub_22DD506A0(v8, (uint64_t)v5 + *(int *)(v3 + 28), &qword_255DB5798);
  *v5 = v24;
  sub_22DD506A0((uint64_t)v5, (uint64_t)v15 + *(int *)(v12 + 36), &qword_255DB5790);
  *v15 = v18;
  v15[1] = KeyPath;
  v15[2] = v20;
  v15[3] = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22DD5071C((uint64_t)v5, &qword_255DB5790);
  sub_22DD5071C(v8, &qword_255DB5798);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_22DD5003C((uint64_t)v15, v50, &qword_255DB57A0);
  v25 = objc_msgSend(v48, sel_title);
  v26 = sub_22DE1F2B0();
  v28 = v27;

  v51 = v26;
  v52 = v28;
  sub_22DD50840();
  v29 = sub_22DE1ED94();
  v31 = v30;
  LOBYTE(v22) = v32 & 1;
  sub_22DE1ECC8();
  v33 = sub_22DE1ED64();
  v35 = v34;
  LOBYTE(v8) = v36;
  swift_release();
  sub_22DD4FC6C(v29, v31, v22);
  swift_bridgeObjectRelease();
  sub_22DE1ECE0();
  v37 = sub_22DE1ED40();
  v39 = v38;
  v41 = v40;
  LOBYTE(v12) = v42 & 1;
  sub_22DD4FC6C(v33, v35, v8 & 1);
  swift_bridgeObjectRelease();
  LOBYTE(v28) = sub_22DE1EC5C();
  v43 = v50;
  sub_22DD506A0(v50, (uint64_t)v15, &qword_255DB57A0);
  v44 = v49;
  sub_22DD506A0((uint64_t)v15, v49, &qword_255DB57A0);
  v45 = v44 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB57A8) + 48);
  *(_QWORD *)v45 = v37;
  *(_QWORD *)(v45 + 8) = v39;
  *(_BYTE *)(v45 + 16) = v12;
  *(_QWORD *)(v45 + 24) = v41;
  *(_BYTE *)(v45 + 32) = v28;
  *(_OWORD *)(v45 + 40) = 0u;
  *(_OWORD *)(v45 + 56) = 0u;
  *(_BYTE *)(v45 + 72) = 1;
  sub_22DD50088(v37, v39, v12);
  swift_bridgeObjectRetain();
  sub_22DD5071C(v43, &qword_255DB57A0);
  sub_22DD4FC6C(v37, v39, v12);
  swift_bridgeObjectRelease();
  return sub_22DD5071C((uint64_t)v15, &qword_255DB57A0);
}

uint64_t sub_22DD52F74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DD52AEC(*(void **)(v1 + 8), a1);
}

uint64_t sub_22DD52F7C()
{
  return sub_22DE1E878();
}

uint64_t sub_22DD52F9C()
{
  return sub_22DE1E878();
}

uint64_t sub_22DD52FBC()
{
  return sub_22DE1E7AC();
}

uint64_t sub_22DD52FDC()
{
  return sub_22DE1E7AC();
}

uint64_t sub_22DD52FFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_22DE1E6D4();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_22DE1E7B8();
}

uint64_t sub_22DD5307C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22DE1E830();
  *a1 = result;
  return result;
}

uint64_t sub_22DD530A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22DE1E830();
  *a1 = result;
  return result;
}

uint64_t sub_22DD530CC()
{
  return sub_22DE1E83C();
}

uint64_t sub_22DD530F0()
{
  return sub_22DE1E83C();
}

unint64_t sub_22DD53118()
{
  unint64_t result;

  result = qword_255DB56A8;
  if (!qword_255DB56A8)
  {
    result = MEMORY[0x22E3207B0](&protocol conformance descriptor for AgreementConsentView.ConsentResult, &type metadata for AgreementConsentView.ConsentResult);
    atomic_store(result, (unint64_t *)&qword_255DB56A8);
  }
  return result;
}

uint64_t sub_22DD5315C()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_22DD5316C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;

  v3 = *(void **)(a1 + *(int *)(type metadata accessor for AgreementConsentView() + 24) + 8);
  *a2 = v3;
  return v3;
}

uint64_t *initializeBufferWithCopyOfBuffer for AgreementConsentView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  void *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5670);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_22DE1E614();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5678);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_22DE1E6D4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = a3[6];
    v14 = a3[7];
    v15 = (uint64_t *)((char *)a1 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v18 = *v16;
    v17 = (void *)v16[1];
    *v15 = v18;
    v15[1] = v17;
    v19 = (char *)a1 + v14;
    v20 = (char *)a2 + v14;
    *v19 = *v20;
    *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
    v21 = a3[8];
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = *v23;
    v25 = v17;
    swift_retain();
    if (v24)
    {
      v26 = v23[1];
      *v22 = v24;
      v22[1] = v26;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v22 = *(_OWORD *)v23;
    }
  }
  return a1;
}

uint64_t destroy for AgreementConsentView(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5670);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_22DE1E614();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + a2[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5678);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22DE1E6D4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  result = swift_release();
  if (*(_QWORD *)(a1 + a2[8]))
    return swift_release();
  return result;
}

_QWORD *initializeWithCopy for AgreementConsentView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  void *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5670);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22DE1E614();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5678);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_22DE1E6D4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)((char *)a1 + v11);
  v14 = (_QWORD *)((char *)a2 + v11);
  v16 = *v14;
  v15 = (void *)v14[1];
  *v13 = v16;
  v13[1] = v15;
  v17 = (char *)a1 + v12;
  v18 = (char *)a2 + v12;
  *v17 = *v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  v19 = a3[8];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = *v21;
  v23 = v15;
  swift_retain();
  if (v22)
  {
    v24 = v21[1];
    *v20 = v22;
    v20[1] = v24;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
  }
  return a1;
}

_QWORD *assignWithCopy for AgreementConsentView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (a1 != a2)
  {
    sub_22DD5071C((uint64_t)a1, &qword_255DB5670);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5670);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_22DE1E614();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v7 = a3[5];
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_22DD5071C((uint64_t)a1 + v7, &qword_255DB5678);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5678);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_22DE1E6D4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  *v12 = *v13;
  v14 = (void *)v13[1];
  v15 = (void *)v12[1];
  v12[1] = v14;
  v16 = v14;

  v17 = a3[7];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  *v18 = *v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_retain();
  swift_release();
  v20 = a3[8];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v23 = *(_QWORD *)((char *)a1 + v20);
  v24 = *v22;
  if (!v23)
  {
    if (v24)
    {
      v26 = v22[1];
      *v21 = v24;
      v21[1] = v26;
      swift_retain();
      return a1;
    }
LABEL_15:
    *(_OWORD *)v21 = *(_OWORD *)v22;
    return a1;
  }
  if (!v24)
  {
    swift_release();
    goto LABEL_15;
  }
  v25 = v22[1];
  *v21 = v24;
  v21[1] = v25;
  swift_retain();
  swift_release();
  return a1;
}

char *initializeWithTake for AgreementConsentView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5670);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_22DE1E614();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5678);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_22DE1E6D4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  v14 = a3[8];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = *(_QWORD *)v16;
  if (*(_QWORD *)v16)
  {
    v18 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = v17;
    *((_QWORD *)v15 + 1) = v18;
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  return a1;
}

char *assignWithTake for AgreementConsentView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if (a1 != a2)
  {
    sub_22DD5071C((uint64_t)a1, &qword_255DB5670);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5670);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_22DE1E614();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    sub_22DD5071C((uint64_t)&a1[v8], &qword_255DB5678);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5678);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_22DE1E6D4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v17 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v15 + 1);
  v18 = (void *)*((_QWORD *)v14 + 1);
  *(_QWORD *)v14 = v17;
  *((_QWORD *)v14 + 1) = v16;

  v19 = a3[7];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *v20 = *v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_release();
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = *(_QWORD *)&a1[v22];
  v26 = *(_QWORD *)v24;
  if (!v25)
  {
    if (v26)
    {
      v28 = *((_QWORD *)v24 + 1);
      *(_QWORD *)v23 = v26;
      *((_QWORD *)v23 + 1) = v28;
      return a1;
    }
LABEL_14:
    *(_OWORD *)v23 = *(_OWORD *)v24;
    return a1;
  }
  if (!v26)
  {
    swift_release();
    goto LABEL_14;
  }
  v27 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = v26;
  *((_QWORD *)v23 + 1) = v27;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AgreementConsentView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD53B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB56B0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB56B8);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for AgreementConsentView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD53BE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB56B0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB56B8);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

void sub_22DD53C94()
{
  unint64_t v0;
  unint64_t v1;

  sub_22DD53D4C(319, &qword_255DB5728, (void (*)(uint64_t))MEMORY[0x24BDEC038]);
  if (v0 <= 0x3F)
  {
    sub_22DD53D4C(319, qword_255DB5730, (void (*)(uint64_t))MEMORY[0x24BDECF50]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_22DD53D4C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_22DE1E548();
    if (!v5)
      atomic_store(v4, a2);
  }
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AgreementConsentView.ConsentResult(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AgreementConsentView.ConsentResult(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22DD53E84 + 4 * byte_22DE20C65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22DD53EB8 + 4 * byte_22DE20C60[v4]))();
}

uint64_t sub_22DD53EB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DD53EC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DD53EC8);
  return result;
}

uint64_t sub_22DD53ED4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DD53EDCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22DD53EE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DD53EE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DD53EF4(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_22DD53EFC(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AgreementConsentView.ConsentResult()
{
  return &type metadata for AgreementConsentView.ConsentResult;
}

uint64_t sub_22DD53F18()
{
  return sub_22DD53F60(&qword_255DB5770, &qword_255DB5698, sub_22DD53F44);
}

uint64_t sub_22DD53F44()
{
  return sub_22DD53F60(&qword_255DB5778, &qword_255DB5690, (uint64_t (*)(void))sub_22DD53FCC);
}

uint64_t sub_22DD53F60(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22DD53FCC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB5780;
  if (!qword_255DB5780)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB5688);
    v2[0] = sub_22DD508B0(&qword_255DB5788, &qword_255DB5680, MEMORY[0x24BDF4700]);
    v2[1] = sub_22DD508B0(&qword_255DB5460, &qword_255DB5468, MEMORY[0x24BDF1028]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB5780);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ConsentTitleView(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = v3;
  return a1;
}

void destroy for ConsentTitleView(uint64_t a1)
{

}

_QWORD *assignWithCopy for ConsentTitleView(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  v3 = (void *)a2[1];
  v4 = (void *)a1[1];
  a1[1] = v3;
  v5 = v3;

  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for ConsentTitleView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;

  v3 = a2[1];
  v4 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for ConsentTitleView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConsentTitleView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConsentTitleView()
{
  return &type metadata for ConsentTitleView;
}

uint64_t sub_22DD541A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD541C0()
{
  return sub_22DE1E818();
}

uint64_t sub_22DD541E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5798);
  MEMORY[0x24BDAC7A8](v2);
  sub_22DD506A0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_255DB5798);
  return sub_22DE1E824();
}

uint64_t sub_22DD54264()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD54288()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_22DD542A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DD522AC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_22DD542B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AgreementConsentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DD542F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AgreementConsentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DD5433C()
{
  return sub_22DD54514(sub_22DD52518);
}

uint64_t sub_22DD54348@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DD52610(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_22DD54350()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB5830;
  if (!qword_255DB5830)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB5838);
    v2[0] = MEMORY[0x24BDF1F80];
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB5830);
  }
  return result;
}

uint64_t sub_22DD543BC()
{
  return swift_deallocObject();
}

_BYTE *sub_22DD543CC(_BYTE *a1)
{
  uint64_t v1;

  return sub_22DDA76EC(a1, *(_BYTE *)(v1 + 16));
}

uint64_t objectdestroy_25Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (int *)type metadata accessor for AgreementConsentView();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5670);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_22DE1E614();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  v6 = v4 + v1[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5678);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_22DE1E6D4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }

  swift_release();
  if (*(_QWORD *)(v4 + v1[8]))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD54508()
{
  return sub_22DD54514(sub_22DD528E0);
}

uint64_t sub_22DD54514(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AgreementConsentView() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_22DD54550@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DD529E0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_22DD54558()
{
  return swift_deallocObject();
}

uint64_t sub_22DD54568()
{
  return sub_22DD508B0(&qword_255DB5860, &qword_255DB5868, MEMORY[0x24BDF5428]);
}

uint64_t destroy for BatchEmptyView()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for BatchEmptyView(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BatchEmptyView(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for BatchEmptyView(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BatchEmptyView(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BatchEmptyView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BatchEmptyView()
{
  return &type metadata for BatchEmptyView;
}

uint64_t sub_22DD547A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD547B0@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  id v10;
  uint64_t v11;
  uint64_t v12;

  sub_22DE1F730();
  sub_22DE1F328();
  v10 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  objc_msgSend(v10, sel_userInterfaceIdiom);

  sub_22DE1F328();
  swift_bridgeObjectRelease();
  sub_22DE1F328();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5870);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_22DE20F30;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_BYTE *)(v12 + 24) = a2 & 1;
  *(_BYTE *)(v12 + 32) = a3 & 1;
  *(_QWORD *)(v12 + 40) = a4;
  *(_QWORD *)(v11 + 32) = 0x726F4D2064616F4CLL;
  *(_QWORD *)(v11 + 40) = 0xE900000000000065;
  *(_BYTE *)(v11 + 48) = 0;
  *(_QWORD *)(v11 + 56) = sub_22DD54E20;
  *(_QWORD *)(v11 + 64) = v12;
  *(_QWORD *)a5 = 0xD000000000000014;
  *(_QWORD *)(a5 + 8) = 0x800000022DE290D0;
  *(_QWORD *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = 0xE000000000000000;
  *(_BYTE *)(a5 + 32) = 2;
  *(_QWORD *)(a5 + 40) = v11;
  *(_QWORD *)(a5 + 48) = 0xD000000000000011;
  *(_QWORD *)(a5 + 56) = 0x800000022DE290F0;
  swift_retain();
  return swift_retain();
}

uint64_t sub_22DD549B8(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5878);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22DE1F46C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_22DE1F448();
  swift_retain();
  swift_retain();
  v12 = sub_22DE1F43C();
  v13 = swift_allocObject();
  v14 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v14;
  *(_QWORD *)(v13 + 32) = a1;
  *(_BYTE *)(v13 + 40) = a2 & 1;
  *(_BYTE *)(v13 + 48) = a3;
  *(_QWORD *)(v13 + 56) = a4;
  sub_22DD54C94((uint64_t)v10, (uint64_t)&unk_255DB5888, v13);
  return swift_release();
}

uint64_t sub_22DD54AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v7 + 115) = a6;
  *(_BYTE *)(v7 + 114) = a5;
  *(_QWORD *)(v7 + 48) = a4;
  *(_QWORD *)(v7 + 56) = a7;
  sub_22DE1F448();
  *(_QWORD *)(v7 + 64) = sub_22DE1F43C();
  *(_QWORD *)(v7 + 72) = sub_22DE1F418();
  *(_QWORD *)(v7 + 80) = v8;
  return swift_task_switch();
}

uint64_t sub_22DD54B34()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_BYTE *)(v0 + 114);
  v2 = *(_QWORD *)(v0 + 56);
  *(_BYTE *)(v0 + 16) = *(_BYTE *)(v0 + 115);
  v3 = v1 & 1;
  *(_QWORD *)(v0 + 24) = v2;
  *(_BYTE *)(v0 + 112) = 1;
  *(_QWORD *)(v0 + 88) = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5850);
  sub_22DE1F004();
  v4 = swift_retain();
  *(_QWORD *)(v0 + 96) = sub_22DD83CAC(v4, v3);
  swift_release();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v5;
  *v5 = v0;
  v5[1] = sub_22DD54BE4;
  return sub_22DDCAA10();
}

uint64_t sub_22DD54BE4()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DD54C38()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_BYTE *)(v0 + 115);
  swift_release();
  *(_BYTE *)(v0 + 32) = v2;
  *(_QWORD *)(v0 + 40) = v1;
  *(_BYTE *)(v0 + 113) = 0;
  sub_22DE1F004();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DD54C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_22DE1F46C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_22DE1F460();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_22DD54F4C(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_22DE1F418();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_22DD54DD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DD547B0(*(_QWORD *)v1, *(_BYTE *)(v1 + 8), *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_22DD54DF4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD54E20()
{
  uint64_t v0;

  return sub_22DD549B8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_22DD54E3C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD54E70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 56);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_22DD54F04;
  return sub_22DD54AC0(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_22DD54F04()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_22DD54F4C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5878);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22DD54F8C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_22DD54FF0;
  return v6(a1);
}

uint64_t sub_22DD54FF0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_22DD5503C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD55060(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22DD54F04;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_255DB5890 + dword_255DB5890))(a1, v4);
}

unint64_t sub_22DD550D4()
{
  unint64_t result;

  result = qword_255DB58A0;
  if (!qword_255DB58A0)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE239E4, &type metadata for BatchStatusView);
    atomic_store(result, (unint64_t *)&qword_255DB58A0);
  }
  return result;
}

double ScoreIndicator.init(controller:size:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  double result;

  *(_QWORD *)a2 = a1;
  *(double *)(a2 + 8) = a3;
  result = 0.666666667;
  *(_OWORD *)(a2 + 16) = xmmword_22DE20FB0;
  return result;
}

double ScoreIndicator.init(size:)@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  type metadata accessor for ScoreController();
  v4 = swift_allocObject();
  *(_WORD *)(v4 + 16) = 0;
  sub_22DE1E08C();
  if (qword_255DB5328 != -1)
    swift_once();
  v5 = qword_255DC3CE8;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58A8, (uint64_t (*)(uint64_t))type metadata accessor for UserDefaultsController, (uint64_t)&unk_22DE257C0);
  sub_22DE1E068();
  swift_release();
  *(_QWORD *)(v4 + 24) = *(_QWORD *)(v5 + 24);
  *(_QWORD *)a1 = v4;
  *(double *)(a1 + 8) = a2;
  result = 0.666666667;
  *(_OWORD *)(a1 + 16) = xmmword_22DE20FB0;
  return result;
}

double ScoreIndicator.init()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  type metadata accessor for ScoreController();
  v2 = swift_allocObject();
  *(_WORD *)(v2 + 16) = 0;
  sub_22DE1E08C();
  if (qword_255DB5328 != -1)
    swift_once();
  v3 = qword_255DC3CE8;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58A8, (uint64_t (*)(uint64_t))type metadata accessor for UserDefaultsController, (uint64_t)&unk_22DE257C0);
  sub_22DE1E068();
  swift_release();
  *(_QWORD *)(v2 + 24) = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = v2;
  result = 64.0;
  *(_OWORD *)(a1 + 8) = xmmword_22DE20FC0;
  *(_QWORD *)(a1 + 24) = 0x4062C00000000000;
  return result;
}

uint64_t sub_22DD55344()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  double v3;

  v1 = *v0;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E068();
  result = swift_release();
  v3 = floor(sqrt((double)*(uint64_t *)(v1 + 24) * 0.5));
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  if ((uint64_t)v3 <= 0)
    return 45;
  else
    return sub_22DE1F8C8();
}

uint64_t ScoreIndicator.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[51];
  _BYTE v26[416];

  v24 = a1;
  v2 = sub_22DE1E974();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_22DE1EB78();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB58B0);
  v8 = *(_QWORD *)(v7 - 8);
  v22 = v7;
  v23 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)v1;
  v12 = *(double *)(v1 + 8);
  v13 = *(double *)(v1 + 16);
  v14 = *(double *)(v1 + 24);
  v15 = sub_22DE1F130();
  v17 = v16;
  sub_22DD556F4(v11, &v25[2], v12, v13, v14);
  v25[0] = v15;
  v25[1] = v17;
  v25[49] = 0;
  *(double *)&v25[50] = v12 * 0.1;
  sub_22DE1EB60();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB58B8);
  v19 = sub_22DD56584();
  sub_22DE1EE78();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  memcpy(v26, v25, 0x198uLL);
  sub_22DD56608((uint64_t)v26);
  sub_22DE1E968();
  sub_22DE1E95C();
  v25[0] = v11;
  *(double *)&v25[1] = v12;
  *(double *)&v25[2] = v13;
  *(double *)&v25[3] = v14;
  sub_22DD55344();
  sub_22DE1E950();
  swift_bridgeObjectRelease();
  sub_22DE1E95C();
  sub_22DE1E98C();
  v25[0] = v18;
  v25[1] = v19;
  swift_getOpaqueTypeConformance2();
  v20 = v22;
  sub_22DE1EE48();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v10, v20);
}

void *sub_22DD556F4@<X0>(uint64_t a1@<X0>, void *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  char *v65;
  double v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  double v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  int v84;
  char *v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  unsigned int v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int v105;
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  void *v117;
  _DWORD v118[2];
  _DWORD v119[2];
  int v120;
  __int16 v121;
  _DWORD v122[2];
  _DWORD v123[2];
  int v124;
  __int16 v125;
  _BYTE v126[412];
  _BYTE v127[7];
  _BYTE v128[7];
  int v129;
  __int16 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  uint64_t v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  uint64_t v152;
  _BYTE v153[7];
  char v154;
  _OWORD v155[21];
  _DWORD v156[2];
  _QWORD v157[42];
  _QWORD v158[6];
  unsigned int v159;
  unsigned int v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  __int16 v165;
  int v166;
  __int16 v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char v171;
  _BYTE v172[7];
  uint64_t v173;
  char v174;
  _BYTE v175[7];
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD v179[6];
  unsigned int v180;
  unsigned int v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  __int16 v186;
  int v187;
  __int16 v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char v192;
  _BYTE v193[7];
  uint64_t v194;
  char v195;
  _BYTE v196[7];
  __int128 v197;
  uint64_t v198;
  _QWORD v199[44];
  char v200;
  _BYTE v201[7];
  char *v202;
  unsigned __int8 v203;
  unsigned __int8 v204;
  _BYTE v205[7];
  _BYTE v206[7];
  int v207;
  __int16 v208;
  uint64_t v209;
  unsigned int v210;
  unsigned int v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unsigned __int8 v216;
  uint64_t v217;
  unsigned __int8 v218;
  __int128 v219;
  uint64_t v220;
  unsigned int v221;
  unsigned int v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unsigned __int8 v227;
  uint64_t v228;
  unsigned __int8 v229;
  uint64_t v230;
  uint64_t v231;
  _QWORD v232[49];

  v117 = a2;
  v9 = sub_22DE1E2E4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB55D8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v232[0] = a1;
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E068();
  swift_release();
  if ((*(_BYTE *)(a1 + 17) & 1) != 0)
  {
    sub_22DE1F130();
    sub_22DE1E5E4();
    v116 = v157[0];
    DWORD2(v115) = LOBYTE(v157[1]);
    v16 = v157[2];
    LODWORD(v115) = LOBYTE(v157[3]);
    v113 = v157[5];
    v114 = v157[4];
    v17 = sub_22DE1EF38();
    v18 = sub_22DE1EFBC();
    v19 = sub_22DE1ECD4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v15, 1, 1, v19);
    v20 = sub_22DE1ECF8();
    sub_22DD569B8((uint64_t)v15);
    KeyPath = swift_getKeyPath();
    if (qword_255DB53D0 != -1)
      swift_once();
    v22 = __swift_project_value_buffer(v9, (uint64_t)qword_255DC3D90);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v22, v9);
    v23 = sub_22DE1EF98();
    swift_retain();
    swift_retain();
    swift_retain();
    v112 = KeyPath;
    swift_retain();
    swift_retain();
    v199[0] = v116;
    LOBYTE(v199[1]) = BYTE8(v115);
    v199[2] = v16;
    LOBYTE(v199[3]) = v115;
    v199[4] = v114;
    v199[5] = v113;
    v199[6] = v17;
    v199[7] = v18;
    v199[8] = KeyPath;
    v199[9] = v20;
    v199[10] = v23;
    sub_22DD56AD4((uint64_t)v199);
    sub_22DD56A6C((uint64_t)v199, (uint64_t)v232);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5900);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5908);
    v24 = MEMORY[0x24BDF5428];
    sub_22DD508B0(&qword_255DB5910, &qword_255DB5900, MEMORY[0x24BDF5428]);
    sub_22DD508B0(&qword_255DB5918, &qword_255DB5908, v24);
    sub_22DE1EAD0();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    v86 = a5 * 0.0174532925;
    sub_22DE1F16C();
    v90 = v26;
    v91 = v25;
    v92 = sub_22DE1EF38();
    v85 = v15;
    sub_22DE1E56C();
    v105 = v211;
    v106 = v210;
    v88 = v212;
    v89 = v209;
    v104 = v213;
    v87 = v214;
    v27 = sub_22DE1F130();
    v100 = v28;
    v101 = v27;
    sub_22DE1F130();
    sub_22DE1E5E4();
    v95 = v215;
    LODWORD(v113) = v216;
    v110 = v217;
    LODWORD(v114) = v218;
    v115 = v219;
    v204 = v216;
    v203 = v218;
    sub_22DD6EBE4();
    v30 = fmin(v29, 1.0);
    if (v29 > 0.025)
      v31 = v30;
    else
      v31 = 0.025;
    v32 = v31 * a4;
    sub_22DE1F16C();
    v34 = v33;
    v108 = v35;
    v93 = sub_22DE1EF38();
    sub_22DE1E56C();
    v36 = v220;
    v96 = v221;
    v109 = v222;
    v37 = v223;
    v81 = v220;
    v82 = v223;
    v116 = v224;
    v107 = v225;
    v38 = sub_22DE1F130();
    v111 = v39;
    v112 = v38;
    sub_22DE1F130();
    sub_22DE1E5E4();
    v94 = v227;
    v98 = v226;
    v99 = v228;
    v97 = v229;
    v102 = v231;
    v103 = v230;
    v126[408] = v227;
    v126[400] = v229;
    v232[0] = a1;
    *(double *)&v232[1] = a3;
    *(double *)&v232[2] = a4;
    *(double *)&v232[3] = a5;
    v232[0] = sub_22DD55344();
    v232[1] = v40;
    sub_22DD50840();
    v41 = sub_22DE1ED94();
    v43 = v42;
    v45 = v44 & 1;
    sub_22DE1ECE0();
    v46 = sub_22DE1ED40();
    v48 = v47;
    v50 = v49 & 1;
    sub_22DD4FC6C(v41, v43, v45);
    swift_bridgeObjectRelease();
    v232[0] = sub_22DE1EF38();
    v51 = sub_22DE1ED4C();
    v53 = v52;
    v55 = v54 & 1;
    sub_22DD4FC6C(v46, v48, v50);
    swift_release();
    swift_bridgeObjectRelease();
    v56 = *MEMORY[0x24BDF1650];
    v57 = sub_22DE1ECD4();
    v58 = *(_QWORD *)(v57 - 8);
    v59 = (uint64_t)v85;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 104))(v85, v56, v57);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v58 + 56))(v59, 0, 1, v57);
    sub_22DE1ECF8();
    sub_22DD569B8(v59);
    v60 = sub_22DE1ED64();
    v62 = v61;
    v64 = v63;
    v85 = v65;
    swift_release();
    LODWORD(v58) = v64 & 1;
    sub_22DD4FC6C(v51, v53, v55);
    swift_bridgeObjectRelease();
    v124 = v207;
    v125 = v208;
    v123[0] = *(_DWORD *)v206;
    *(_DWORD *)((char *)v123 + 3) = *(_DWORD *)&v206[3];
    v122[0] = *(_DWORD *)v205;
    *(_DWORD *)((char *)v122 + 3) = *(_DWORD *)&v205[3];
    v120 = v129;
    v121 = v130;
    v119[0] = *(_DWORD *)v128;
    *(_DWORD *)((char *)v119 + 3) = *(_DWORD *)&v128[3];
    v118[0] = *(_DWORD *)v127;
    *(_DWORD *)((char *)v118 + 3) = *(_DWORD *)&v127[3];
    HIWORD(v136) = v208;
    *(_DWORD *)((char *)&v136 + 10) = v207;
    HIDWORD(v138) = *(_DWORD *)&v206[3];
    *(_DWORD *)((char *)&v138 + 9) = *(_DWORD *)v206;
    HIDWORD(v139) = *(_DWORD *)&v205[3];
    *(_DWORD *)((char *)&v139 + 9) = *(_DWORD *)v205;
    v141 = 0x3FD0000000000000;
    *((double *)&v142 + 1) = v32;
    v66 = a4;
    v80 = a4;
    v67 = v86;
    *(double *)&v143 = v86;
    *((_QWORD *)&v143 + 1) = v34;
    *(_QWORD *)&v144 = v108;
    *((_QWORD *)&v144 + 1) = v36;
    *(_QWORD *)&v145 = __PAIR64__(v109, v96);
    *((_QWORD *)&v145 + 1) = v37;
    *(_QWORD *)&v146 = v116;
    *((_QWORD *)&v146 + 1) = v107;
    v68 = v93;
    *(_QWORD *)&v147 = v93;
    WORD4(v147) = 256;
    HIWORD(v147) = v130;
    *(_DWORD *)((char *)&v147 + 10) = v129;
    *(_QWORD *)&v148 = v112;
    *((_QWORD *)&v148 + 1) = v111;
    *(_QWORD *)&v149 = v98;
    BYTE8(v149) = v94;
    HIDWORD(v149) = *(_DWORD *)&v128[3];
    *(_DWORD *)((char *)&v149 + 9) = *(_DWORD *)v128;
    *(_QWORD *)&v150 = v99;
    BYTE8(v150) = v97;
    HIDWORD(v150) = *(_DWORD *)&v127[3];
    *(_DWORD *)((char *)&v150 + 9) = *(_DWORD *)v127;
    *(_QWORD *)&v151 = v103;
    *((_QWORD *)&v151 + 1) = v102;
    v152 = 0x3FF0000000000000;
    *(_OWORD *)((char *)&v155[18] + 8) = v150;
    *(_OWORD *)((char *)&v155[19] + 8) = v151;
    *(_OWORD *)((char *)&v155[16] + 8) = v148;
    *(_OWORD *)((char *)&v155[17] + 8) = v149;
    *(_QWORD *)&v155[10] = 0x3FD0000000000000;
    *((_QWORD *)&v155[20] + 1) = 0x3FF0000000000000;
    *(_QWORD *)&v142 = 0;
    *(_OWORD *)((char *)&v155[13] + 8) = v145;
    *(_OWORD *)((char *)&v155[14] + 8) = v146;
    *(_OWORD *)((char *)&v155[15] + 8) = v147;
    *(_OWORD *)((char *)&v155[10] + 8) = v142;
    *(_OWORD *)((char *)&v155[11] + 8) = v143;
    *(_OWORD *)((char *)&v155[12] + 8) = v144;
    *(_QWORD *)&v131 = 0;
    *((double *)&v131 + 1) = v66;
    *(double *)&v132 = v86;
    v70 = v90;
    v69 = v91;
    *((_QWORD *)&v132 + 1) = v91;
    *(_QWORD *)&v133 = v90;
    v71 = v88;
    v72 = v89;
    *((_QWORD *)&v133 + 1) = v89;
    *(_QWORD *)&v134 = __PAIR64__(v105, v106);
    *((_QWORD *)&v134 + 1) = v88;
    v73 = v104;
    *(_QWORD *)&v135 = v104;
    v74 = v87;
    *((_QWORD *)&v135 + 1) = v87;
    v75 = v92;
    *(_QWORD *)&v136 = v92;
    WORD4(v136) = 256;
    *(_QWORD *)&v137 = v101;
    *((_QWORD *)&v137 + 1) = v100;
    *(_QWORD *)&v138 = v95;
    BYTE8(v138) = v113;
    *(_QWORD *)&v139 = v110;
    BYTE8(v139) = v114;
    v140 = v115;
    v155[1] = v132;
    v155[0] = v131;
    v155[5] = v136;
    v155[4] = v135;
    v155[2] = v133;
    v155[3] = v134;
    v155[9] = v115;
    v155[8] = v139;
    v155[6] = v137;
    v155[7] = v138;
    v84 = v58;
    v154 = v58;
    memcpy(v157, v155, sizeof(v157));
    v83 = v58;
    v156[0] = *(_DWORD *)v153;
    *(_DWORD *)((char *)v156 + 3) = *(_DWORD *)&v153[3];
    sub_22DD569F8((uint64_t)&v131);
    sub_22DD569F8((uint64_t)&v142);
    sub_22DD50088(v60, v62, v58);
    v76 = v85;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v77 = v116;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_22DD50088(v60, v62, v58);
    swift_bridgeObjectRetain();
    sub_22DD4FC6C(v60, v62, v58);
    swift_bridgeObjectRelease();
    v158[0] = 0;
    *(double *)&v158[1] = v32;
    *(double *)&v158[2] = v67;
    v158[3] = v34;
    v158[4] = v108;
    v158[5] = v81;
    v159 = v96;
    v160 = v109;
    v161 = v82;
    v162 = v77;
    v163 = v107;
    v164 = v68;
    v165 = 256;
    v166 = v120;
    v167 = v121;
    v168 = v112;
    v169 = v111;
    v170 = v98;
    v171 = v94;
    *(_DWORD *)&v172[3] = *(_DWORD *)((char *)v119 + 3);
    *(_DWORD *)v172 = v119[0];
    v173 = v99;
    v174 = v97;
    *(_DWORD *)&v175[3] = *(_DWORD *)((char *)v118 + 3);
    *(_DWORD *)v175 = v118[0];
    v176 = v103;
    v177 = v102;
    v178 = 0x3FF0000000000000;
    sub_22DD56A2C((uint64_t)v158);
    v179[0] = 0;
    *(double *)&v179[1] = v80;
    *(double *)&v179[2] = v67;
    v179[3] = v69;
    v179[4] = v70;
    v179[5] = v72;
    v180 = v106;
    v181 = v105;
    v182 = v71;
    v183 = v73;
    v184 = v74;
    v185 = v75;
    v186 = 256;
    v187 = v124;
    v188 = v125;
    v189 = v101;
    v190 = v100;
    v191 = v95;
    v192 = v113;
    *(_DWORD *)&v193[3] = *(_DWORD *)((char *)v123 + 3);
    *(_DWORD *)v193 = v123[0];
    v194 = v110;
    v195 = v114;
    *(_DWORD *)&v196[3] = *(_DWORD *)((char *)v122 + 3);
    *(_DWORD *)v196 = v122[0];
    v197 = v115;
    v198 = 0x3FD0000000000000;
    sub_22DD56A2C((uint64_t)v179);
    memcpy(v199, v157, 0x150uLL);
    v199[42] = v60;
    v199[43] = v62;
    v200 = v83;
    *(_DWORD *)v201 = v156[0];
    *(_DWORD *)&v201[3] = *(_DWORD *)((char *)v156 + 3);
    v202 = v76;
    sub_22DD56A60((uint64_t)v199);
    sub_22DD56A6C((uint64_t)v199, (uint64_t)v232);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5900);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5908);
    v78 = MEMORY[0x24BDF5428];
    sub_22DD508B0(&qword_255DB5910, &qword_255DB5900, MEMORY[0x24BDF5428]);
    sub_22DD508B0(&qword_255DB5918, &qword_255DB5908, v78);
    sub_22DE1EAD0();
    sub_22DD4FC6C(v60, v62, v84);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  memcpy(v232, v126, 0x171uLL);
  return memcpy(v117, v232, 0x171uLL);
}

uint64_t sub_22DD5644C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58A8, (uint64_t (*)(uint64_t))type metadata accessor for UserDefaultsController, (uint64_t)&unk_22DE257C0);
  sub_22DE1E068();
  result = swift_release();
  *a2 = *(_QWORD *)(v3 + 24);
  return result;
}

uint64_t sub_22DD564DC()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58A8, (uint64_t (*)(uint64_t))type metadata accessor for UserDefaultsController, (uint64_t)&unk_22DE257C0);
  sub_22DE1E05C();
  return swift_release();
}

unint64_t sub_22DD56584()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB58C0;
  if (!qword_255DB58C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB58B8);
    v2[0] = sub_22DD508B0(&qword_255DB58C8, &qword_255DB58D0, MEMORY[0x24BDF4750]);
    v2[1] = MEMORY[0x24BDEC438];
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB58C0);
  }
  return result;
}

uint64_t sub_22DD56608(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v9 = *(_OWORD *)(a1 + 336);
  v10 = *(_OWORD *)(a1 + 352);
  v7 = *(_OWORD *)(a1 + 304);
  v8 = *(_OWORD *)(a1 + 320);
  v5 = *(_OWORD *)(a1 + 272);
  v6 = *(_OWORD *)(a1 + 288);
  v3 = *(_OWORD *)(a1 + 240);
  v4 = *(_OWORD *)(a1 + 256);
  sub_22DD566A0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    *(_QWORD *)(a1 + 368),
    *(_QWORD *)(a1 + 376),
    *(_BYTE *)(a1 + 384));
  return a1;
}

uint64_t sub_22DD566A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,char a47)
{
  if ((a47 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_22DD4FC6C(a43, a44, a45 & 1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_22DD56774()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeWithCopy for ScoreIndicator(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ScoreIndicator(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for ScoreIndicator(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScoreIndicator(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScoreIndicator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScoreIndicator()
{
  return &type metadata for ScoreIndicator;
}

unint64_t sub_22DD568FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_255DB58D8;
  if (!qword_255DB58D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB58E0);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB58B8);
    v2[3] = sub_22DD56584();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_22DD504A8((unint64_t *)&qword_255DB58E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB58D8);
  }
  return result;
}

uint64_t sub_22DD569B8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB55D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22DD569F8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_22DD56A2C(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22DD56A60(uint64_t result)
{
  *(_BYTE *)(result + 368) = 1;
  return result;
}

uint64_t sub_22DD56A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB58F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_22DD56AD4(uint64_t result)
{
  *(_BYTE *)(result + 368) = 0;
  return result;
}

void sub_22DD56ADC()
{
  uint64_t v0;

  sub_22DDCA860(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

ValueMetadata *type metadata accessor for LoadMoreView()
{
  return &type metadata for LoadMoreView;
}

uint64_t sub_22DD56B04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD56B14@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5870);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_22DE20F30;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_BYTE *)(v11 + 24) = a2 & 1;
  *(_BYTE *)(v11 + 32) = a3;
  *(_QWORD *)(v11 + 40) = a4;
  *(_QWORD *)(v10 + 32) = 0x726F4D2064616F4CLL;
  *(_QWORD *)(v10 + 40) = 0xE900000000000065;
  *(_BYTE *)(v10 + 48) = 0;
  *(_QWORD *)(v10 + 56) = sub_22DD56D6C;
  *(_QWORD *)(v10 + 64) = v11;
  *(_QWORD *)a5 = 0xD00000000000001CLL;
  *(_QWORD *)(a5 + 8) = 0x800000022DE29110;
  *(_QWORD *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = 0;
  *(_BYTE *)(a5 + 32) = 2;
  *(_QWORD *)(a5 + 40) = v10;
  *(_QWORD *)(a5 + 48) = 0xD000000000000012;
  *(_QWORD *)(a5 + 56) = 0x800000022DE28B10;
  swift_retain();
  return swift_retain();
}

uint64_t sub_22DD56C1C(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5878);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22DE1F46C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_22DE1F448();
  swift_retain();
  swift_retain();
  v12 = sub_22DE1F43C();
  v13 = swift_allocObject();
  v14 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v14;
  *(_QWORD *)(v13 + 32) = a1;
  *(_BYTE *)(v13 + 40) = a2 & 1;
  *(_BYTE *)(v13 + 48) = a3;
  *(_QWORD *)(v13 + 56) = a4;
  sub_22DD54C94((uint64_t)v10, (uint64_t)&unk_255DB5928, v13);
  return swift_release();
}

uint64_t sub_22DD56D24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DD56B14(*(_QWORD *)v1, *(_BYTE *)(v1 + 8), *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_22DD56D40()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD56D6C()
{
  uint64_t v0;

  return sub_22DD56C1C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_22DD56D88()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD56DBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 56);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_22DD54F04;
  return sub_22DD54AC0(a1, v4, v5, v6, v7, v8, v9);
}

id sub_22DD56E54(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_retain();
}

void destroy for SkipButton(uint64_t a1)
{
  swift_release();
  sub_22DD56E8C(*(id *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

void sub_22DD56E8C(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_release();
}

uint64_t initializeWithCopy for SkipButton(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  swift_retain();
  sub_22DD56E54(v4, v5);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  return a1;
}

uint64_t assignWithCopy for SkipButton(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v4;
  void *v5;
  void *v6;
  char v7;

  v2 = a2;
  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = *(void **)(v2 + 16);
  LOBYTE(v2) = *(_BYTE *)(v2 + 24);
  sub_22DD56E54(v5, v2);
  v6 = *(void **)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v2;
  sub_22DD56E8C(v6, v7);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SkipButton(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  void *v6;
  char v7;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_release();
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(void **)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v5;
  sub_22DD56E8C(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for SkipButton(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SkipButton(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SkipButton()
{
  return &type metadata for SkipButton;
}

uint64_t sub_22DD57070()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD57080(uint64_t a1, char a2, void *a3, char a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_BYTE *)(v8 + 24) = a2 & 1;
  *(_QWORD *)(v8 + 32) = a3;
  a4 &= 1u;
  *(_BYTE *)(v8 + 40) = a4;
  swift_retain();
  sub_22DD56E54(a3, a4);
  sub_22DE1E980();
  sub_22DD57294();
  sub_22DE1EE48();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_22DD5718C(uint64_t a1, char a2, void *a3, char a4)
{
  char v6;
  uint64_t v7;
  id v8;

  v6 = a2 & 1;
  v7 = swift_retain();
  sub_22DD83CC8(v7, v6);
  swift_release();
  a4 &= 1u;
  sub_22DD56E54(a3, a4);
  v8 = sub_22DD83CEC(a3, a4);
  sub_22DD56E8C(a3, a4);
  sub_22DD6B2C4((uint64_t)v8, 3);
  swift_release();

}

uint64_t sub_22DD57224()
{
  uint64_t v0;

  return sub_22DD57080(*(_QWORD *)v0, *(_BYTE *)(v0 + 8), *(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_22DD57244()
{
  uint64_t v0;

  swift_release();
  sub_22DD56E8C(*(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

void sub_22DD57274()
{
  uint64_t v0;

  sub_22DD5718C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(void **)(v0 + 32), *(_BYTE *)(v0 + 40));
}

unint64_t sub_22DD57294()
{
  unint64_t result;

  result = qword_255DB5930;
  if (!qword_255DB5930)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE24268, &type metadata for CloseButton);
    atomic_store(result, (unint64_t *)&qword_255DB5930);
  }
  return result;
}

unint64_t sub_22DD572DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB5938;
  if (!qword_255DB5938)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB5940);
    v2[0] = sub_22DD57294();
    v2[1] = sub_22DD57348();
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB5938);
  }
  return result;
}

unint64_t sub_22DD57348()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DB58E8;
  if (!qword_255DB58E8)
  {
    v1 = sub_22DE1EBF0();
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDF1078], v1);
    atomic_store(result, (unint64_t *)&qword_255DB58E8);
  }
  return result;
}

_QWORD *sub_22DD57390(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  id v17;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_22DE1E050();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for BatchInteraction(0);
    v9 = v8[5];
    v10 = *(void **)((char *)a2 + v9);
    *(_QWORD *)((char *)a1 + v9) = v10;
    *(_QWORD *)((char *)a1 + v8[6]) = *(_QWORD *)((char *)a2 + v8[6]);
    v11 = v8[7];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for BatchInteraction.ContentPolarity(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    v17 = v10;
    swift_retain();
    if (v16(v13, 1, v14))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v21 = type metadata accessor for BatchInteraction.ContentPreview(0);
      v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48);
      v23 = v22(v13, 1, v21);
      if (EnumCaseMultiPayload == 1)
      {
        if (!v23)
        {
          v26 = (char *)&loc_22DD57548 + 4 * byte_22DE211D6[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
        v29 = &v12[v28];
        v30 = &v13[v28];
        if (!v22(v30, 1, v21))
        {
          v32 = (char *)&loc_22DD576A8 + 4 * byte_22DE211DC[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        if (!v23)
        {
          v27 = (char *)&loc_22DD57584 + 4 * byte_22DE211D0[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v33 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    v36 = *(_QWORD *)v35;
    LOBYTE(v35) = v35[8];
    *(_QWORD *)v34 = v36;
    v34[8] = (char)v35;
  }
  swift_retain();
  return a1;
}

uint64_t sub_22DD578AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t (*v9)(id *, uint64_t, uint64_t);
  int v10;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = type metadata accessor for BatchInteraction(0);

  swift_release();
  v4 = (id *)(a1 + *(int *)(v3 + 28));
  v5 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v8 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v9 = *(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    v10 = v9(v4, 1, v8);
    if (EnumCaseMultiPayload == 1)
    {
      if (!v10)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            swift_bridgeObjectRelease();
            break;
          case 2u:

            break;
          case 3u:

            swift_bridgeObjectRelease();
            break;
          case 5u:
            v12 = sub_22DE1DEB8();
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v4, v12);
            break;
          default:
            break;
        }
      }
      v4 = (id *)((char *)v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48));
      if (!v9(v4, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            goto LABEL_9;
          case 2u:
            goto LABEL_12;
          case 3u:
            goto LABEL_13;
          case 5u:
            goto LABEL_14;
          default:
            return swift_release();
        }
      }
    }
    else if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 4u:
LABEL_9:
          swift_bridgeObjectRelease();
          break;
        case 2u:
LABEL_12:

          break;
        case 3u:
LABEL_13:

          swift_bridgeObjectRelease();
          break;
        case 5u:
LABEL_14:
          v11 = sub_22DE1DEB8();
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v4, v11);
          break;
        default:
          return swift_release();
      }
    }
  }
  return swift_release();
}

uint64_t sub_22DD57B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BatchInteraction(0);
  v8 = v7[5];
  v9 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  v10 = v7[7];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v9;
  swift_retain();
  if (v15(v12, 1, v13))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v19 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48);
    v21 = v20(v12, 1, v19);
    if (EnumCaseMultiPayload == 1)
    {
      if (!v21)
      {
        v24 = (char *)&loc_22DD57C90 + 4 * byte_22DE211FA[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v27 = &v11[v26];
      v28 = &v12[v26];
      if (!v20(v28, 1, v19))
      {
        v30 = (char *)&loc_22DD57DF0 + 4 * byte_22DE21200[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      if (!v21)
      {
        v25 = (char *)&loc_22DD57CCC + 4 * byte_22DE211F4[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v31 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v32 = a1 + v31;
  v33 = (uint64_t *)(a2 + v31);
  v34 = *v33;
  LOBYTE(v33) = *((_BYTE *)v33 + 8);
  *(_QWORD *)v32 = v34;
  *(_BYTE *)(v32 + 8) = (_BYTE)v33;
  swift_retain();
  return a1;
}

uint64_t sub_22DD57FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BatchInteraction(0);
  v8 = v7[5];
  v9 = *(void **)(a2 + v8);
  v10 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  v11 = v9;

  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  swift_retain();
  swift_release();
  v12 = v7[7];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v21 = type metadata accessor for BatchInteraction.ContentPreview(0);
      v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48);
      v23 = v22(v14, 1, v21);
      if (EnumCaseMultiPayload == 1)
      {
        if (!v23)
        {
          v32 = (char *)&loc_22DD58240 + 4 * byte_22DE2120C[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        v37 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
        v38 = &v13[v37];
        v39 = &v14[v37];
        if (!v22(v39, 1, v21))
        {
          v41 = (char *)&loc_22DD58468 + 4 * byte_22DE21212[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        if (!v23)
        {
          v34 = (char *)&loc_22DD582AC + 4 * byte_22DE21206[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_25;
    }
LABEL_8:
    v25 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_25;
  }
  if (v19)
  {
    sub_22DD5C950((uint64_t)v13, type metadata accessor for BatchInteraction.ContentPolarity);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_22DD5C950((uint64_t)v13, type metadata accessor for BatchInteraction.ContentPolarity);
    v26 = swift_getEnumCaseMultiPayload();
    v27 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48);
    v29 = v28(v14, 1, v27);
    if (v26 == 1)
    {
      if (!v29)
      {
        v35 = (char *)&loc_22DD582F0 + 4 * word_22DE21224[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      v47 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v48 = &v13[v47];
      v49 = &v14[v47];
      if (!v28(v49, 1, v27))
      {
        v51 = (char *)&loc_22DD587B0 + 4 * byte_22DE21230[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (!v29)
      {
        v36 = (char *)&loc_22DD58334 + 4 * word_22DE21218[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_25:
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v42 = *(int *)(a3 + 24);
  v43 = a1 + v42;
  v44 = (uint64_t *)(a2 + v42);
  v45 = *v44;
  LOBYTE(v44) = *((_BYTE *)v44 + 8);
  *(_QWORD *)v43 = v45;
  *(_BYTE *)(v43 + 8) = (_BYTE)v44;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_22DD58974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BatchInteraction(0);
  *(_QWORD *)(a1 + v7[5]) = *(_QWORD *)(a2 + v7[5]);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  v8 = v7[7];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v15 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v32 = *(_QWORD *)(v15 - 8);
    v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
    v17 = v16(v10, 1, v15);
    if (EnumCaseMultiPayload == 1)
    {
      if (v17)
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v20 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v9, v10, v20);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v9, v10, *(_QWORD *)(v32 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v9, 0, 1, v15);
      }
      v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v23 = &v9[v22];
      v24 = &v10[v22];
      if (v16(v24, 1, v15))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v26 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
          swift_storeEnumTagMultiPayload();
          v27 = v32;
        }
        else
        {
          v27 = v32;
          memcpy(v23, v24, *(_QWORD *)(v32 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v15);
      }
    }
    else if (v17)
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        v21 = sub_22DE1DEB8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v9, v10, v21);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(_QWORD *)(v32 + 64));
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v9, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v28 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  return a1;
}

uint64_t sub_22DD58CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BatchInteraction(0);
  v8 = v7[5];
  v9 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);

  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  swift_release();
  v10 = v7[7];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v19 = type metadata accessor for BatchInteraction.ContentPreview(0);
      v54 = *(_QWORD *)(v19 - 8);
      v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
      v21 = v20(v12, 1, v19);
      if (EnumCaseMultiPayload == 1)
      {
        if (v21)
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 5)
          {
            v31 = sub_22DE1DEB8();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v11, v12, v31);
            swift_storeEnumTagMultiPayload();
            v32 = v54;
          }
          else
          {
            v32 = v54;
            memcpy(v11, v12, *(_QWORD *)(v54 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v11, 0, 1, v19);
        }
        v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
        v37 = &v11[v36];
        v38 = &v12[v36];
        if (v20(v38, 1, v19))
        {
          v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 5)
          {
            v40 = sub_22DE1DEB8();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v37, v38, v40);
            swift_storeEnumTagMultiPayload();
            v41 = v54;
          }
          else
          {
            v41 = v54;
            memcpy(v37, v38, *(_QWORD *)(v54 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v37, 0, 1, v19);
        }
      }
      else if (v21)
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v34 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v11, v12, v34);
          swift_storeEnumTagMultiPayload();
          v35 = v54;
        }
        else
        {
          v35 = v54;
          memcpy(v11, v12, *(_QWORD *)(v54 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v11, 0, 1, v19);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_32;
    }
LABEL_8:
    v23 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_32;
  }
  if (v17)
  {
    sub_22DD5C950((uint64_t)v11, type metadata accessor for BatchInteraction.ContentPolarity);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_22DD5C950((uint64_t)v11, type metadata accessor for BatchInteraction.ContentPolarity);
    v24 = swift_getEnumCaseMultiPayload();
    v25 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    v28 = v27(v12, 1, v25);
    if (v24 == 1)
    {
      if (v28)
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v47 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v11, v12, v47);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v11, v12, *(_QWORD *)(v26 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v11, 0, 1, v25);
      }
      v49 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v50 = &v11[v49];
      v51 = &v12[v49];
      if (v27(v51, 1, v25))
      {
        v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v53 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v50, v51, v53);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v50, v51, *(_QWORD *)(v26 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v50, 0, 1, v25);
      }
    }
    else if (v28)
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        v48 = sub_22DE1DEB8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v11, v12, v48);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v11, v12, *(_QWORD *)(v26 + 64));
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v11, 0, 1, v25);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_32:
  v42 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v43 = a1 + v42;
  v44 = (uint64_t *)(a2 + v42);
  v45 = *v44;
  LOBYTE(v44) = *((_BYTE *)v44 + 8);
  *(_QWORD *)v43 = v45;
  *(_BYTE *)(v43 + 8) = (_BYTE)v44;
  swift_release();
  return a1;
}

uint64_t sub_22DD59340()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD5934C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for BatchInteraction(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return v9 - 1;
  else
    return 0;
}

uint64_t sub_22DD593C4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD593D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for BatchInteraction(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for Previewer()
{
  uint64_t result;

  result = qword_255DB59B8;
  if (!qword_255DB59B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22DD59484()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for BatchInteraction(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22DD59500()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD59510@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v4 = sub_22DE1EFC8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1;
  sub_22DE1EFB0();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BDF3FD0], v4);
  v9 = sub_22DE1EFD4();
  swift_release();
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = 0;
  *(_WORD *)(a2 + 32) = 1;
  *(_QWORD *)(a2 + 40) = 0;
  *(_BYTE *)(a2 + 48) = 1;
  return result;
}

uint64_t sub_22DD595F8@<X0>(uint64_t a1@<X8>)
{
  void **v1;
  void *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;

  v3 = *v1;
  v4 = sub_22DE1E8F0();
  result = sub_22DD59510(v3, (uint64_t)&v14);
  v6 = v14;
  v7 = v15;
  v8 = v16;
  v9 = v17;
  v10 = v18;
  v11 = v19;
  v12 = v20;
  v13 = v21;
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 57) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 72) = v13;
  return result;
}

uint64_t sub_22DD59680@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v21 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v21 - v13;
  v15 = type metadata accessor for BatchInteraction(0);
  sub_22DD506A0(v1 + *(int *)(v15 + 28), (uint64_t)v14, qword_255DB5958);
  v16 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v14, 1, v16) == 1)
  {
    v17 = type metadata accessor for BatchInteraction.ContentPreview(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
  else
  {
    sub_22DD506A0((uint64_t)v14, (uint64_t)v12, qword_255DB5958);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = (uint64_t)&v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48)];
      sub_22DD5CF7C((uint64_t)v12, (uint64_t)v8);
      sub_22DD5CF7C(v18, (uint64_t)v6);
      if (*(_BYTE *)(v1 + *(int *)(type metadata accessor for Previewer() + 20)) == 1)
      {
        sub_22DD5071C((uint64_t)v8, &qword_255DB5948);
        v19 = (uint64_t)v6;
      }
      else
      {
        sub_22DD5071C((uint64_t)v6, &qword_255DB5948);
        v19 = (uint64_t)v8;
      }
    }
    else
    {
      v19 = (uint64_t)v12;
    }
    sub_22DD5CF7C(v19, a1);
  }
  return sub_22DD5071C((uint64_t)v14, qword_255DB5958);
}

uint64_t sub_22DD59884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  *(_QWORD *)a2 = sub_22DE1E8E4();
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5A20);
  return sub_22DD598D0(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_22DD598D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5A28);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v13 - v8;
  *(_QWORD *)v9 = sub_22DE1E9F8();
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5A30);
  sub_22DD599DC(a1, (uint64_t)&v9[*(int *)(v10 + 44)]);
  sub_22DD506A0((uint64_t)v9, (uint64_t)v7, &qword_255DB5A28);
  sub_22DD506A0((uint64_t)v7, a2, &qword_255DB5A28);
  v11 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5A38) + 48);
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  sub_22DD5071C((uint64_t)v9, &qword_255DB5A28);
  return sub_22DD5071C((uint64_t)v7, &qword_255DB5A28);
}

uint64_t sub_22DD599DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v37;
  _QWORD v38[8];
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;

  v71 = a2;
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5A40);
  MEMORY[0x24BDAC7A8](v64);
  v72 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5A48);
  MEMORY[0x24BDAC7A8](v45);
  v47 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5A50);
  MEMORY[0x24BDAC7A8](v65);
  v48 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5A58);
  MEMORY[0x24BDAC7A8](v70);
  v66 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5A60);
  MEMORY[0x24BDAC7A8](v59);
  v58 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for WebView(0);
  MEMORY[0x24BDAC7A8](v44);
  v57 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5A68);
  MEMORY[0x24BDAC7A8](v41);
  v43 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5A70);
  MEMORY[0x24BDAC7A8](v54);
  v46 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22DE1DEB8();
  v62 = *(_QWORD *)(v11 - 8);
  v63 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v56 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38[7] = v13;
  MEMORY[0x24BDAC7A8](v12);
  v61 = (char *)v38 - v14;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5A78);
  v50 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v49 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5A80);
  MEMORY[0x24BDAC7A8](v67);
  v69 = (uint64_t)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5A88);
  MEMORY[0x24BDAC7A8](v51);
  v53 = (char *)v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5A90);
  MEMORY[0x24BDAC7A8](v39);
  v40 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5A98);
  MEMORY[0x24BDAC7A8](v52);
  v42 = (char *)v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5AA0);
  MEMORY[0x24BDAC7A8](v68);
  v60 = (char *)v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Previewer();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_QWORD *)(v22 + 64);
  MEMORY[0x24BDAC7A8](v21);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5AA8);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)v38 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)v38 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)v38 - v32;
  sub_22DD59680((uint64_t)v38 - v32);
  v34 = type metadata accessor for BatchInteraction.ContentPreview(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v33, 1, v34) != 1)
  {
    v38[3] = v22;
    v38[4] = v23;
    v38[0] = v27;
    v38[1] = v25;
    v38[5] = (char *)v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    v38[2] = v24;
    v38[6] = a1;
    sub_22DD506A0((uint64_t)v33, (uint64_t)v31, &qword_255DB5948);
    v37 = (char *)sub_22DD5A0D4 + 4 * word_22DE21236[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  swift_storeEnumTagMultiPayload();
  sub_22DD5C178();
  v35 = (uint64_t)v66;
  sub_22DE1EAD0();
  sub_22DD506A0(v35, v69, &qword_255DB5A58);
  swift_storeEnumTagMultiPayload();
  sub_22DD5C21C(&qword_255DB5AE0, &qword_255DB5AA0, (uint64_t (*)(void))sub_22DD5C314, (uint64_t (*)(void))sub_22DD5C410);
  sub_22DD5C4B8();
  sub_22DE1EAD0();
  sub_22DD5071C(v35, &qword_255DB5A58);
  return sub_22DD5071C((uint64_t)v33, &qword_255DB5948);
}

void sub_22DD5A0D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;

  v4 = *v0;
  v5 = v0[1];
  *(_QWORD *)(v3 - 168) = v5;
  *(_QWORD *)(v3 - 152) = v4;
  *(_QWORD *)(v3 - 144) = v5;
  sub_22DD50840();
  swift_bridgeObjectRetain();
  v6 = sub_22DE1ED94();
  v8 = v7;
  v10 = v9 & 1;
  sub_22DE1ECBC();
  v11 = sub_22DE1ED64();
  *(_QWORD *)(v3 - 224) = v12;
  *(_QWORD *)(v3 - 216) = v13;
  *(_DWORD *)(v3 - 232) = v14;
  swift_release();
  sub_22DD4FC6C(v6, v8, v10);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v3 - 224);
  *(_QWORD *)(v3 - 152) = v11;
  *(_QWORD *)(v3 - 144) = v15;
  *(_BYTE *)(v3 - 136) = *(_DWORD *)(v3 - 232) & 1;
  *(_QWORD *)(v3 - 128) = *(_QWORD *)(v3 - 216);
  v16 = v1;
  v17 = *(_QWORD *)(v3 - 456);
  sub_22DD5C570(v16, v17, (uint64_t (*)(_QWORD))type metadata accessor for Previewer);
  v18 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 472) + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = (*(_QWORD *)(v3 - 464) + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject();
  sub_22DD5BF40(v17, v21 + v19);
  v22 = (_QWORD *)(v21 + v20);
  v23 = *(_QWORD *)(v3 - 168);
  *v22 = v4;
  v22[1] = v23;
  v24 = MEMORY[0x24BDF1FA8];
  v25 = MEMORY[0x24BDF1F80];
  v26 = *(_QWORD *)(v3 - 352);
  sub_22DE1EE00();
  swift_release();
  sub_22DD4FC6C(*(_QWORD *)(v3 - 152), *(_QWORD *)(v3 - 144), *(_BYTE *)(v3 - 136));
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)(v3 - 344);
  v28 = *(_QWORD *)(v3 - 304);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v27 + 16))(*(_QWORD *)(v3 - 424), v26, v28);
  swift_storeEnumTagMultiPayload();
  v29 = sub_22DD5C3CC();
  *(_QWORD *)(v3 - 152) = &type metadata for DataImage;
  *(_QWORD *)(v3 - 144) = v29;
  swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v3 - 152) = v24;
  *(_QWORD *)(v3 - 144) = v25;
  swift_getOpaqueTypeConformance2();
  v30 = *(_QWORD *)(v3 - 408);
  sub_22DE1EAD0();
  sub_22DD506A0(v30, *(_QWORD *)(v3 - 320), &qword_255DB5A98);
  swift_storeEnumTagMultiPayload();
  sub_22DD5C314();
  sub_22DD5C410();
  sub_22DE1EAD0();
  sub_22DD5071C(v30, &qword_255DB5A98);
  sub_22DD506A0(v2, *(_QWORD *)(v3 - 192), &qword_255DB5AA0);
  swift_storeEnumTagMultiPayload();
  sub_22DD5C21C(&qword_255DB5AE0, &qword_255DB5AA0, (uint64_t (*)(void))sub_22DD5C314, (uint64_t (*)(void))sub_22DD5C410);
  sub_22DD5C4B8();
  sub_22DE1EAD0();
  sub_22DD5071C(v2, &qword_255DB5AA0);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
  JUMPOUT(0x22DD59FF4);
}

void sub_22DD5A3F4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = v1[1];
  *v0 = *v1;
  v0[1] = v4;
  v5 = (uint64_t)v0;
  type metadata accessor for WebView.HTMLContent(0);
  swift_storeEnumTagMultiPayload();
  v6 = *(_QWORD *)(v3 - 392);
  *(_BYTE *)(v5 + *(int *)(v6 + 20)) = 0;
  *(_BYTE *)(v5 + *(int *)(v6 + 24)) = 0;
  sub_22DD5C570(v5, *(_QWORD *)(v3 - 400), type metadata accessor for WebView);
  swift_storeEnumTagMultiPayload();
  v7 = MEMORY[0x24BDF1F80];
  *(_QWORD *)(v3 - 152) = MEMORY[0x24BDF1FA8];
  *(_QWORD *)(v3 - 144) = v7;
  swift_getOpaqueTypeConformance2();
  sub_22DD504A8(&qword_255DB5B00, type metadata accessor for WebView, (uint64_t)&unk_22DE25EE8);
  v8 = *(_QWORD *)(v3 - 376);
  sub_22DE1EAD0();
  sub_22DD506A0(v8, *(_QWORD *)(v3 - 320), &qword_255DB5A70);
  swift_storeEnumTagMultiPayload();
  sub_22DD5C314();
  sub_22DD5C410();
  sub_22DE1EAD0();
  sub_22DD5071C(v8, &qword_255DB5A70);
  sub_22DD506A0(v2, *(_QWORD *)(v3 - 192), &qword_255DB5AA0);
  swift_storeEnumTagMultiPayload();
  sub_22DD5C21C(&qword_255DB5AE0, &qword_255DB5AA0, (uint64_t (*)(void))sub_22DD5C314, (uint64_t (*)(void))sub_22DD5C410);
  sub_22DD5C4B8();
  sub_22DE1EAD0();
  sub_22DD5071C(v2, &qword_255DB5AA0);
  sub_22DD5C950(v5, type metadata accessor for WebView);
  JUMPOUT(0x22DD59FF4);
}

void sub_22DD5A5D0()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *v0;
  *(_QWORD *)(v3 - 152) = v4;
  v5 = *(_QWORD *)(v3 - 456);
  sub_22DD5C570(v1, v5, (uint64_t (*)(_QWORD))type metadata accessor for Previewer);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 472) + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = (*(_QWORD *)(v3 - 464) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = swift_allocObject();
  sub_22DD5BF40(v5, v9 + v7);
  *(_QWORD *)(v9 + v8) = v4;
  v10 = sub_22DD5C3CC();
  *(_QWORD *)(v3 - 168) = v4;
  v11 = *(_QWORD *)(v3 - 496);
  sub_22DE1EE00();
  swift_release();

  v12 = *(_QWORD *)(v3 - 480);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 488) + 16))(*(_QWORD *)(v3 - 424), v11, v12);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v3 - 152) = &type metadata for DataImage;
  *(_QWORD *)(v3 - 144) = v10;
  swift_getOpaqueTypeConformance2();
  v13 = MEMORY[0x24BDF1F80];
  *(_QWORD *)(v3 - 152) = MEMORY[0x24BDF1FA8];
  *(_QWORD *)(v3 - 144) = v13;
  swift_getOpaqueTypeConformance2();
  v14 = *(_QWORD *)(v3 - 408);
  sub_22DE1EAD0();
  sub_22DD506A0(v14, *(_QWORD *)(v3 - 320), &qword_255DB5A98);
  swift_storeEnumTagMultiPayload();
  sub_22DD5C314();
  sub_22DD5C410();
  sub_22DE1EAD0();
  sub_22DD5071C(v14, &qword_255DB5A98);
  sub_22DD506A0(v2, *(_QWORD *)(v3 - 192), &qword_255DB5AA0);
  swift_storeEnumTagMultiPayload();
  sub_22DD5C21C(&qword_255DB5AE0, &qword_255DB5AA0, (uint64_t (*)(void))sub_22DD5C314, (uint64_t (*)(void))sub_22DD5C410);
  sub_22DD5C4B8();
  sub_22DE1EAD0();

  sub_22DD5071C(v2, &qword_255DB5AA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 488) + 8))(v11, v12);
  JUMPOUT(0x22DD59FF4);
}

void sub_22DD5A85C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = v1;
  v7 = *(void **)v0;
  v6 = *(void **)(v0 + 8);
  v8 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)v2 = sub_22DE1E9F8();
  *(_QWORD *)(v2 + 8) = 0;
  *(_BYTE *)(v2 + 16) = 1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5B10);
  sub_22DD5B1BC(v6, v8, v5, v7, (char *)(v2 + *(int *)(v9 + 44)));
  swift_bridgeObjectRelease();
  sub_22DD506A0(v2, *(_QWORD *)(v4 - 368), &qword_255DB5A60);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5AC8);
  sub_22DD508B0(&qword_255DB5AB8, &qword_255DB5A60, MEMORY[0x24BDF4700]);
  sub_22DD5C21C(&qword_255DB5AC0, &qword_255DB5AC8, (uint64_t (*)(void))sub_22DD5C28C, (uint64_t (*)(void))sub_22DD5C2D0);
  v10 = *(_QWORD *)(v4 - 360);
  sub_22DE1EAD0();
  sub_22DD506A0(v10, v3, &qword_255DB5A50);
  swift_storeEnumTagMultiPayload();
  sub_22DD5C178();
  v11 = *(_QWORD *)(v4 - 216);
  sub_22DE1EAD0();
  sub_22DD5071C(v10, &qword_255DB5A50);
  sub_22DD506A0(v11, *(_QWORD *)(v4 - 192), &qword_255DB5A58);
  swift_storeEnumTagMultiPayload();
  sub_22DD5C21C(&qword_255DB5AE0, &qword_255DB5AA0, (uint64_t (*)(void))sub_22DD5C314, (uint64_t (*)(void))sub_22DD5C410);
  sub_22DD5C4B8();
  sub_22DE1EAD0();

  sub_22DD5071C(v11, &qword_255DB5A58);
  JUMPOUT(0x22DD59FF0);
}

void sub_22DD5AA40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v3 - 240) = v1;
  v4 = *v0;
  v5 = *((_BYTE *)v0 + 8);
  type metadata accessor for FullScreenPreviewController(0);
  sub_22DD504A8(&qword_255DB5A00, type metadata accessor for FullScreenPreviewController, (uint64_t)&unk_22DE223F0);
  swift_bridgeObjectRetain();
  v6 = sub_22DE1E554();
  v8 = *(_QWORD *)(v3 - 368);
  *(_QWORD *)(v3 - 112) = v4;
  *(_QWORD *)(v3 - 104) = v6;
  *(_BYTE *)(v3 - 96) = v7 & 1;
  *(_BYTE *)(v3 - 95) = (v5 & 1) != 0;
  sub_22DD5C28C();
  sub_22DD5C2D0();
  swift_retain();
  sub_22DE1EAD0();
  swift_release();
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(v3 - 144);
  v10 = *(_BYTE *)(v3 - 136);
  v11 = *(_BYTE *)(v3 - 135);
  *(_QWORD *)v8 = *(_QWORD *)(v3 - 152);
  *(_QWORD *)(v8 + 8) = v9;
  *(_BYTE *)(v8 + 16) = v10;
  *(_BYTE *)(v8 + 17) = v11;
  swift_storeEnumTagMultiPayload();
  sub_22DD5C524();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5AC8);
  sub_22DD508B0(&qword_255DB5AB8, &qword_255DB5A60, MEMORY[0x24BDF4700]);
  sub_22DD5C21C(&qword_255DB5AC0, &qword_255DB5AC8, (uint64_t (*)(void))sub_22DD5C28C, (uint64_t (*)(void))sub_22DD5C2D0);
  v12 = *(_QWORD *)(v3 - 360);
  sub_22DE1EAD0();
  sub_22DD506A0(v12, v2, &qword_255DB5A50);
  swift_storeEnumTagMultiPayload();
  sub_22DD5C178();
  v13 = *(_QWORD *)(v3 - 216);
  sub_22DE1EAD0();
  sub_22DD5071C(v12, &qword_255DB5A50);
  sub_22DD506A0(v13, *(_QWORD *)(v3 - 192), &qword_255DB5A58);
  swift_storeEnumTagMultiPayload();
  sub_22DD5C21C(&qword_255DB5AE0, &qword_255DB5AA0, (uint64_t (*)(void))sub_22DD5C314, (uint64_t (*)(void))sub_22DD5C410);
  sub_22DD5C4B8();
  sub_22DE1EAD0();
  sub_22DD5C54C();
  sub_22DD5071C(v13, &qword_255DB5A58);
  JUMPOUT(0x22DD59FF4);
}

uint64_t sub_22DD5B050(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v4 = sub_22DE1E1F4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_BYTE *)(a1 + *(int *)(type metadata accessor for Previewer() + 24) + 8);
  v12 = swift_retain();
  sub_22DD83ECC(v12, v11);
  swift_release();
  v13 = sub_22DE1DEB8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, a2, v13);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for BatchInteraction(0);
  sub_22DE1E200();
  sub_22DD7765C((uint64_t)v10, (uint64_t)v7);
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_22DD5C950((uint64_t)v10, type metadata accessor for FullScreenPreviewController.Content.PreviewType);
}

uint64_t sub_22DD5B1BC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, char *a5@<X8>)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  void *v36;
  uint64_t v37;
  id v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  void (*v51)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  id v69;
  uint64_t v70;
  char v71;
  uint64_t v72;

  v60 = a4;
  v58 = a3;
  v6 = a1;
  v56 = a1;
  v67 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5AA8);
  v65 = *(_QWORD *)(v7 - 8);
  v66 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v64 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v63 = (char *)&v53 - v10;
  v11 = type metadata accessor for Previewer();
  v57 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v57 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v55 = (uint64_t)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5A78);
  v61 = *(_QWORD *)(v13 - 8);
  v62 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v59 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v68 = (char *)&v53 - v16;
  v69 = v6;
  v54 = a2;
  v70 = a2;
  sub_22DD50840();
  swift_bridgeObjectRetain();
  v17 = sub_22DE1ED94();
  v19 = v18;
  v21 = v20 & 1;
  sub_22DE1ECBC();
  v22 = (void *)sub_22DE1ED64();
  v24 = v23;
  LOBYTE(v6) = v25;
  v27 = v26;
  swift_release();
  sub_22DD4FC6C(v17, v19, v21);
  swift_bridgeObjectRelease();
  v69 = v22;
  v70 = v24;
  v71 = v6 & 1;
  v72 = v27;
  v28 = v58;
  v29 = v55;
  sub_22DD5C570(v58, v55, (uint64_t (*)(_QWORD))type metadata accessor for Previewer);
  v30 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  v31 = (v12 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = swift_allocObject();
  sub_22DD5BF40(v29, v32 + v30);
  v33 = (_QWORD *)(v32 + v31);
  v34 = v54;
  *v33 = v56;
  v33[1] = v34;
  swift_bridgeObjectRetain();
  v35 = v68;
  sub_22DE1EE00();
  swift_release();
  sub_22DD4FC6C((uint64_t)v69, v70, v71);
  swift_bridgeObjectRelease();
  v36 = v60;
  v69 = v60;
  sub_22DD5C570(v28, v29, (uint64_t (*)(_QWORD))type metadata accessor for Previewer);
  v37 = swift_allocObject();
  sub_22DD5BF40(v29, v37 + v30);
  *(_QWORD *)(v37 + v31) = v36;
  sub_22DD5C3CC();
  v38 = v36;
  v39 = v63;
  sub_22DE1EE00();
  swift_release();

  v41 = v61;
  v40 = v62;
  v42 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  v43 = v59;
  v42(v59, v35, v62);
  v44 = v64;
  v45 = v65;
  v46 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
  v47 = v66;
  v46(v64, v39, v66);
  v48 = v67;
  v42(v67, v43, v40);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5B18);
  v46(&v48[*(int *)(v49 + 48)], v44, v47);
  v50 = *(void (**)(char *, uint64_t))(v45 + 8);
  v50(v39, v47);
  v51 = *(void (**)(char *, uint64_t))(v41 + 8);
  v51(v68, v40);
  v50(v44, v47);
  return ((uint64_t (*)(char *, uint64_t))v51)(v43, v40);
}

uint64_t sub_22DD5B59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char v13;
  uint64_t v14;
  uint64_t v16;

  v6 = sub_22DE1E1F4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(_BYTE *)(a1 + *(int *)(type metadata accessor for Previewer() + 24) + 8);
  v14 = swift_retain();
  sub_22DD83ECC(v14, v13);
  swift_release();
  *v12 = a2;
  v12[1] = a3;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for BatchInteraction(0);
  swift_bridgeObjectRetain();
  sub_22DE1E200();
  sub_22DD7765C((uint64_t)v12, (uint64_t)v9);
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return sub_22DD5C950((uint64_t)v12, type metadata accessor for FullScreenPreviewController.Content.PreviewType);
}

uint64_t sub_22DD5B6F4(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v4 = sub_22DE1E1F4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_BYTE *)(a1 + *(int *)(type metadata accessor for Previewer() + 24) + 8);
  v12 = swift_retain();
  sub_22DD83ECC(v12, v11);
  swift_release();
  *v10 = a2;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for BatchInteraction(0);
  v13 = a2;
  sub_22DE1E200();
  sub_22DD7765C((uint64_t)v10, (uint64_t)v7);
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_22DD5C950((uint64_t)v10, type metadata accessor for FullScreenPreviewController.Content.PreviewType);
}

uint64_t sub_22DD5B844@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v7;
  int *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(ValueMetadata *, unint64_t);
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[3];
  ValueMetadata *v44;
  unint64_t v45;
  uint64_t v46;

  v41 = a3;
  v42 = a4;
  v7 = a2 & 1;
  v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255DB59F8);
  v9 = a5 + v8[12];
  type metadata accessor for FullScreenPreviewController(0);
  sub_22DD504A8(&qword_255DB5A00, type metadata accessor for FullScreenPreviewController, (uint64_t)&unk_22DE223F0);
  *(_QWORD *)v9 = sub_22DE1E554();
  *(_BYTE *)(v9 + 8) = v10 & 1;
  sub_22DD5C570(a1, a5, type metadata accessor for BatchInteraction);
  *(_BYTE *)(a5 + v8[9]) = v7;
  v11 = sub_22DD5BFC0();
  v46 = MEMORY[0x24BEE4AF8];
  sub_22DE0F29C(0, 3, 0);
  v12 = v46;
  v44 = &type metadata for GPPreviewController;
  v45 = v11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v43);
  v15 = *(_QWORD *)(v12 + 16);
  v14 = *(_QWORD *)(v12 + 24);
  if (v15 >= v14 >> 1)
    sub_22DE0F29C(v14 > 1, v15 + 1, 1);
  v16 = sub_22DD5C040();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, ValueMetadata *))(v19 + 16))(v18, boxed_opaque_existential_1, &type metadata for GPPreviewController);
  sub_22DD5C084(v15, (uint64_t)v18, &v46, (uint64_t)&type metadata for GPPreviewController, v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  v20 = v46;
  v44 = &type metadata for CUMailGeneratedContentPreviewController;
  v45 = v16;
  v21 = __swift_allocate_boxed_opaque_existential_1(v43);
  v23 = *(_QWORD *)(v20 + 16);
  v22 = *(_QWORD *)(v20 + 24);
  if (v23 >= v22 >> 1)
    sub_22DE0F29C(v22 > 1, v23 + 1, 1);
  v24 = sub_22DD5C11C();
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, ValueMetadata *))(v27 + 16))(v26, v21, &type metadata for CUMailGeneratedContentPreviewController);
  sub_22DD5C084(v23, (uint64_t)v26, &v46, (uint64_t)&type metadata for CUMailGeneratedContentPreviewController, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  v28 = v46;
  v29 = *(uint64_t (**)(ValueMetadata *, unint64_t))(v24 + 40);
  v44 = &type metadata for CUMessageGeneratedContentPreviewController;
  v45 = v24;
  v30 = __swift_allocate_boxed_opaque_existential_1(v43);
  v31 = v29(&type metadata for CUMessageGeneratedContentPreviewController, v24);
  v33 = *(_QWORD *)(v28 + 16);
  v32 = *(_QWORD *)(v28 + 24);
  if (v33 >= v32 >> 1)
    v31 = sub_22DE0F29C(v32 > 1, v33 + 1, 1);
  MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v41 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, ValueMetadata *))(v36 + 16))(v35, v30, &type metadata for CUMessageGeneratedContentPreviewController);
  sub_22DD5C084(v33, (uint64_t)v35, &v46, (uint64_t)&type metadata for CUMessageGeneratedContentPreviewController, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  v37 = v46;
  result = sub_22DD5C950(a1, type metadata accessor for BatchInteraction);
  *(_QWORD *)(a5 + v8[11]) = v37;
  v39 = (_QWORD *)(a5 + v8[10]);
  v40 = v42;
  *v39 = v41;
  v39[1] = v40;
  return result;
}

uint64_t sub_22DD5BB90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = a1;
  v5 = *(_QWORD *)(a1 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v7 = type metadata accessor for BatchInteraction(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD5C570(v2, (uint64_t)v9, v10);
  LOBYTE(v3) = *(_BYTE *)(v2 + *(int *)(v3 + 20));
  sub_22DD5C570(v2, (uint64_t)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for Previewer);
  v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = swift_allocObject();
  sub_22DD5BF40((uint64_t)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11);
  return sub_22DD5B844((uint64_t)v9, v3, (uint64_t)sub_22DD5BF84, v12, a2);
}

uint64_t sub_22DD5BCA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t (*v10)(id *, uint64_t, uint64_t);
  int v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Previewer() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = type metadata accessor for BatchInteraction(0);

  swift_release();
  v5 = (id *)(v2 + *(int *)(v4 + 28));
  v6 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v9 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v10 = *(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
    v11 = v10(v5, 1, v9);
    if (EnumCaseMultiPayload == 1)
    {
      if (!v11)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            swift_bridgeObjectRelease();
            break;
          case 2u:

            break;
          case 3u:

            swift_bridgeObjectRelease();
            break;
          case 5u:
            v13 = sub_22DE1DEB8();
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v5, v13);
            break;
          default:
            break;
        }
      }
      v5 = (id *)((char *)v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48));
      if (!v10(v5, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            goto LABEL_9;
          case 2u:
            goto LABEL_12;
          case 3u:
            goto LABEL_13;
          case 5u:
            goto LABEL_14;
          default:
            break;
        }
      }
    }
    else if (!v11)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 4u:
LABEL_9:
          swift_bridgeObjectRelease();
          break;
        case 2u:
LABEL_12:

          break;
        case 3u:
LABEL_13:

          swift_bridgeObjectRelease();
          break;
        case 5u:
LABEL_14:
          v12 = sub_22DE1DEB8();
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v5, v12);
          break;
        default:
          break;
      }
    }
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD5BF40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Previewer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DD5BF84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Previewer() - 8) + 80);
  return sub_22DD59884(v1 + ((v3 + 16) & ~v3), a1);
}

unint64_t sub_22DD5BFC0()
{
  unint64_t result;

  result = qword_255DB5A08;
  if (!qword_255DB5A08)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE231E4, &type metadata for GPPreviewController);
    atomic_store(result, (unint64_t *)&qword_255DB5A08);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_22DD5C040()
{
  unint64_t result;

  result = qword_255DB5A10;
  if (!qword_255DB5A10)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE284E8, &type metadata for CUMailGeneratedContentPreviewController);
    atomic_store(result, (unint64_t *)&qword_255DB5A10);
  }
  return result;
}

uint64_t sub_22DD5C084(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_22DD5C160(&v12, v10 + 40 * a1 + 32);
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

unint64_t sub_22DD5C11C()
{
  unint64_t result;

  result = qword_255DB5A18;
  if (!qword_255DB5A18)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE24C3C, &type metadata for CUMessageGeneratedContentPreviewController);
    atomic_store(result, (unint64_t *)&qword_255DB5A18);
  }
  return result;
}

uint64_t sub_22DD5C160(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_22DD5C178()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB5AB0;
  if (!qword_255DB5AB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB5A50);
    v2[0] = sub_22DD508B0(&qword_255DB5AB8, &qword_255DB5A60, MEMORY[0x24BDF4700]);
    v2[1] = sub_22DD5C21C(&qword_255DB5AC0, &qword_255DB5AC8, (uint64_t (*)(void))sub_22DD5C28C, (uint64_t (*)(void))sub_22DD5C2D0);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB5AB0);
  }
  return result;
}

uint64_t sub_22DD5C21C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22DD5C28C()
{
  unint64_t result;

  result = qword_255DB5AD0;
  if (!qword_255DB5AD0)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE28498, &type metadata for CUMailOriginalContentPreviewController);
    atomic_store(result, (unint64_t *)&qword_255DB5AD0);
  }
  return result;
}

unint64_t sub_22DD5C2D0()
{
  unint64_t result;

  result = qword_255DB5AD8;
  if (!qword_255DB5AD8)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE24BEC, &type metadata for CUMessageOriginalContentPreviewController);
    atomic_store(result, (unint64_t *)&qword_255DB5AD8);
  }
  return result;
}

unint64_t sub_22DD5C314()
{
  unint64_t result;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  _QWORD v3[4];

  result = qword_255DB5AE8;
  if (!qword_255DB5AE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB5A98);
    sub_22DD5C3CC();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v3[2] = MEMORY[0x24BDF1FA8];
    v3[3] = MEMORY[0x24BDF1F80];
    v3[0] = OpaqueTypeConformance2;
    v3[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255DB5AE8);
  }
  return result;
}

unint64_t sub_22DD5C3CC()
{
  unint64_t result;

  result = qword_255DB5AF0;
  if (!qword_255DB5AF0)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE2132C, &type metadata for DataImage);
    atomic_store(result, (unint64_t *)&qword_255DB5AF0);
  }
  return result;
}

unint64_t sub_22DD5C410()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_255DB5AF8;
  if (!qword_255DB5AF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB5A70);
    v2[2] = MEMORY[0x24BDF1FA8];
    v2[3] = MEMORY[0x24BDF1F80];
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_22DD504A8(&qword_255DB5B00, type metadata accessor for WebView, (uint64_t)&unk_22DE25EE8);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB5AF8);
  }
  return result;
}

unint64_t sub_22DD5C4B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB5B08;
  if (!qword_255DB5B08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB5A58);
    v2[0] = sub_22DD5C178();
    v2[1] = MEMORY[0x24BDF5138];
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB5B08);
  }
  return result;
}

uint64_t sub_22DD5C524()
{
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_22DD5C54C()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_22DD5C570(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22DD5C5B4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v12;
  int v13;
  uint64_t (*v14)(id *, uint64_t, uint64_t);
  uint64_t v15;

  v1 = *(_QWORD *)(type metadata accessor for Previewer() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = sub_22DE1DEB8();
  v5 = *(_QWORD *)(v4 - 8);
  v15 = *(unsigned __int8 *)(v5 + 80);
  v6 = sub_22DE1E050();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v2, v6);
  v7 = type metadata accessor for BatchInteraction(0);

  swift_release();
  v8 = (id *)(v0 + v2 + *(int *)(v7 + 28));
  v9 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v12 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v14 = *(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48);
    v13 = v14(v8, 1, v12);
    if (EnumCaseMultiPayload == 1)
    {
      if (!v13)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            swift_bridgeObjectRelease();
            break;
          case 2u:

            break;
          case 3u:

            swift_bridgeObjectRelease();
            break;
          case 5u:
            (*(void (**)(id *, uint64_t))(v5 + 8))(v8, v4);
            break;
          default:
            break;
        }
      }
      v8 = (id *)((char *)v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48));
      if (!v14(v8, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            goto LABEL_9;
          case 2u:
            goto LABEL_12;
          case 3u:
            goto LABEL_13;
          case 5u:
            goto LABEL_14;
          default:
            break;
        }
      }
    }
    else if (!v13)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 4u:
LABEL_9:
          swift_bridgeObjectRelease();
          break;
        case 2u:
LABEL_12:

          break;
        case 3u:
LABEL_13:

          swift_bridgeObjectRelease();
          break;
        case 5u:
LABEL_14:
          (*(void (**)(id *, uint64_t))(v5 + 8))(v8, v4);
          break;
        default:
          break;
      }
    }
  }
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v2 + v3 + v15) & ~v15), v4);
  return swift_deallocObject();
}

uint64_t sub_22DD5C8E0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for Previewer() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_22DE1DEB8() - 8) + 80);
  return sub_22DD5B050(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t sub_22DD5C950(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t (*v10)(id *, uint64_t, uint64_t);
  int v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(type metadata accessor for Previewer() - 8);
  v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  v3 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = type metadata accessor for BatchInteraction(0);

  swift_release();
  v5 = (id *)(v2 + *(int *)(v4 + 28));
  v6 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v9 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v10 = *(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
    v11 = v10(v5, 1, v9);
    if (EnumCaseMultiPayload == 1)
    {
      if (!v11)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            swift_bridgeObjectRelease();
            break;
          case 2u:

            break;
          case 3u:

            swift_bridgeObjectRelease();
            break;
          case 5u:
            v13 = sub_22DE1DEB8();
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v5, v13);
            break;
          default:
            break;
        }
      }
      v5 = (id *)((char *)v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48));
      if (!v10(v5, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            goto LABEL_9;
          case 2u:
            goto LABEL_12;
          case 3u:
            goto LABEL_13;
          case 5u:
            goto LABEL_14;
          default:
            break;
        }
      }
    }
    else if (!v11)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 4u:
LABEL_9:
          swift_bridgeObjectRelease();
          break;
        case 2u:
LABEL_12:

          break;
        case 3u:
LABEL_13:

          swift_bridgeObjectRelease();
          break;
        case 5u:
LABEL_14:
          v12 = sub_22DE1DEB8();
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v5, v12);
          break;
        default:
          break;
      }
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22DD5CC40()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(type metadata accessor for Previewer() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (uint64_t *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_22DD5B59C(v0 + v2, *v3, v3[1]);
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t (*v11)(id *, uint64_t, uint64_t);
  int v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(type metadata accessor for Previewer() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = sub_22DE1E050();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  v5 = type metadata accessor for BatchInteraction(0);

  swift_release();
  v6 = (id *)(v0 + v2 + *(int *)(v5 + 28));
  v7 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v10 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v11 = *(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
    v12 = v11(v6, 1, v10);
    if (EnumCaseMultiPayload == 1)
    {
      if (!v12)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            swift_bridgeObjectRelease();
            break;
          case 2u:

            break;
          case 3u:

            swift_bridgeObjectRelease();
            break;
          case 5u:
            v14 = sub_22DE1DEB8();
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v6, v14);
            break;
          default:
            break;
        }
      }
      v6 = (id *)((char *)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48));
      if (!v11(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            goto LABEL_9;
          case 2u:
            goto LABEL_12;
          case 3u:
            goto LABEL_13;
          case 5u:
            goto LABEL_14;
          default:
            break;
        }
      }
    }
    else if (!v12)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 4u:
LABEL_9:
          swift_bridgeObjectRelease();
          break;
        case 2u:
LABEL_12:

          break;
        case 3u:
LABEL_13:

          swift_bridgeObjectRelease();
          break;
        case 5u:
LABEL_14:
          v13 = sub_22DE1DEB8();
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v6, v13);
          break;
        default:
          break;
      }
    }
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22DD5CF38()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for Previewer() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_22DD5B6F4(v0 + v2, *(void **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_22DD5CF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for DataImage()
{
  return &type metadata for DataImage;
}

uint64_t sub_22DD5CFD4()
{
  return sub_22DD508B0(&qword_255DB5B20, &qword_255DB59F8, (uint64_t)&unk_22DE21850);
}

uint64_t sub_22DD5D000()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD5D010()
{
  return sub_22DD508B0(&qword_255DB5B28, qword_255DB5B30, MEMORY[0x24BDF4498]);
}

uint64_t *sub_22DD5D03C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  id v17;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22DE1E050();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    v11 = a3[7];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for BatchInteraction.ContentPolarity(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    v17 = v10;
    swift_retain();
    if (v16(v13, 1, v14))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v21 = type metadata accessor for BatchInteraction.ContentPreview(0);
      v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48);
      v23 = v22(v13, 1, v21);
      if (EnumCaseMultiPayload == 1)
      {
        if (!v23)
        {
          v26 = (char *)&loc_22DD5D1E4 + 4 * byte_22DE21386[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
        v29 = &v12[v28];
        v30 = &v13[v28];
        if (!v22(v30, 1, v21))
        {
          v32 = (char *)&loc_22DD5D33C + 4 * byte_22DE2138C[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        if (!v23)
        {
          v27 = (char *)&loc_22DD5D220 + 4 * byte_22DE21380[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
  }
  return a1;
}

uint64_t type metadata accessor for BatchInteraction.ContentPolarity(uint64_t a1)
{
  return sub_22DD6481C(a1, (uint64_t *)&unk_255DB5CF0);
}

uint64_t type metadata accessor for BatchInteraction.ContentPreview(uint64_t a1)
{
  return sub_22DD6481C(a1, qword_255DB5C48);
}

void sub_22DD5D534(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id *v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t (*v9)(id *, uint64_t, uint64_t);
  int v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

  swift_release();
  v5 = (id *)(a1 + *(int *)(a2 + 28));
  v6 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v8 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v9 = *(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    v10 = v9(v5, 1, v8);
    if (EnumCaseMultiPayload == 1)
    {
      if (!v10)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            swift_bridgeObjectRelease();
            break;
          case 2u:

            break;
          case 3u:

            swift_bridgeObjectRelease();
            break;
          case 5u:
            v12 = sub_22DE1DEB8();
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v5, v12);
            break;
          default:
            break;
        }
      }
      v5 = (id *)((char *)v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48));
      if (!v9(v5, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            goto LABEL_13;
          case 2u:
            goto LABEL_11;
          case 3u:
            goto LABEL_12;
          case 5u:
            goto LABEL_14;
          default:
            return;
        }
      }
    }
    else if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 4u:
          goto LABEL_13;
        case 2u:
LABEL_11:

          break;
        case 3u:
LABEL_12:

LABEL_13:
          swift_bridgeObjectRelease();
          break;
        case 5u:
LABEL_14:
          v11 = sub_22DE1DEB8();
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v5, v11);
          break;
        default:
          return;
      }
    }
  }
}

uint64_t sub_22DD5D77C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v10 = a3[7];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v9;
  swift_retain();
  if (v15(v12, 1, v13))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v19 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48);
    v21 = v20(v12, 1, v19);
    if (EnumCaseMultiPayload == 1)
    {
      if (!v21)
      {
        v24 = (char *)&loc_22DD5D8F8 + 4 * byte_22DE213AA[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v27 = &v11[v26];
      v28 = &v12[v26];
      if (!v20(v28, 1, v19))
      {
        v30 = (char *)&loc_22DD5DA50 + 4 * byte_22DE213B0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      if (!v21)
      {
        v25 = (char *)&loc_22DD5D934 + 4 * byte_22DE213A4[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

uint64_t sub_22DD5DC20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  v11 = a3[7];
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  v14 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v20 = type metadata accessor for BatchInteraction.ContentPreview(0);
      v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48);
      v22 = v21(v13, 1, v20);
      if (EnumCaseMultiPayload == 1)
      {
        if (!v22)
        {
          v31 = (char *)&loc_22DD5DE58 + 4 * byte_22DE213BC[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
        v37 = &v12[v36];
        v38 = &v13[v36];
        if (!v21(v38, 1, v20))
        {
          v40 = (char *)&loc_22DD5E078 + 4 * byte_22DE213C2[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        if (!v22)
        {
          v33 = (char *)&loc_22DD5DEC4 + 4 * byte_22DE213B6[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      return a1;
    }
LABEL_8:
    v24 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  if (v18)
  {
    sub_22DD5C950((uint64_t)v12, type metadata accessor for BatchInteraction.ContentPolarity);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_22DD5C950((uint64_t)v12, type metadata accessor for BatchInteraction.ContentPolarity);
    v25 = swift_getEnumCaseMultiPayload();
    v26 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48);
    v28 = v27(v13, 1, v26);
    if (v25 == 1)
    {
      if (!v28)
      {
        v34 = (char *)&loc_22DD5DF08 + 4 * byte_22DE213D4[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v43 = &v12[v42];
      v44 = &v13[v42];
      if (!v27(v44, 1, v26))
      {
        v46 = (char *)&loc_22DD5E378 + 4 * byte_22DE213DA[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (!v28)
      {
        v35 = (char *)&loc_22DD5DF4C + 4 * word_22DE213C8[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_22DD5E53C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v15 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
    v18 = v17(v10, 1, v15);
    if (EnumCaseMultiPayload == 1)
    {
      if (v18)
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v21 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v9, v10, v21);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v9, v10, *(_QWORD *)(v16 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v15);
      }
      v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v24 = &v9[v23];
      v25 = &v10[v23];
      if (v17(v25, 1, v15))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v27 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v24, v25, v27);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v24, v25, *(_QWORD *)(v16 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v24, 0, 1, v15);
      }
    }
    else if (v18)
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        v22 = sub_22DE1DEB8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v9, v10, v22);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(_QWORD *)(v16 + 64));
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_22DD5E878(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_release();
  v9 = a3[7];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v18 = type metadata accessor for BatchInteraction.ContentPreview(0);
      v19 = *(_QWORD *)(v18 - 8);
      v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
      v21 = v20(v11, 1, v18);
      if (EnumCaseMultiPayload == 1)
      {
        if (v21)
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 5)
          {
            v31 = sub_22DE1DEB8();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v10, v11, v31);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v10, v11, *(_QWORD *)(v19 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v10, 0, 1, v18);
        }
        v34 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
        v35 = &v10[v34];
        v36 = &v11[v34];
        if (v20(v36, 1, v18))
        {
          v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
          memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 5)
          {
            v38 = sub_22DE1DEB8();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v35, v36, v38);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v35, v36, *(_QWORD *)(v19 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v35, 0, 1, v18);
        }
      }
      else if (v21)
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v33 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v10, v11, v33);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v10, v11, *(_QWORD *)(v19 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v10, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      return a1;
    }
LABEL_8:
    v23 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  if (v16)
  {
    sub_22DD5C950((uint64_t)v10, type metadata accessor for BatchInteraction.ContentPolarity);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_22DD5C950((uint64_t)v10, type metadata accessor for BatchInteraction.ContentPolarity);
    v24 = swift_getEnumCaseMultiPayload();
    v25 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    v28 = v27(v11, 1, v25);
    if (v24 == 1)
    {
      if (v28)
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v40 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v10, v11, v40);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v10, v11, *(_QWORD *)(v26 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v10, 0, 1, v25);
      }
      v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v43 = &v10[v42];
      v44 = &v11[v42];
      if (v27(v44, 1, v25))
      {
        v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v46 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v43, v44, v46);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v43, v44, *(_QWORD *)(v26 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v43, 0, 1, v25);
      }
    }
    else if (v28)
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        v41 = sub_22DE1DEB8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v10, v11, v41);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v10, v11, *(_QWORD *)(v26 + 64));
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v10, 0, 1, v25);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22DD5EE60()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD5EE6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_22DE1E050();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_22DD5EF18()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD5EF24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_22DE1E050();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for BatchInteraction(uint64_t a1)
{
  return sub_22DD6481C(a1, (uint64_t *)&unk_255DB5B90);
}

void sub_22DD5EFE0()
{
  unint64_t v0;
  unint64_t v1;

  sub_22DE1E050();
  if (v0 <= 0x3F)
  {
    sub_22DD60C90(319, qword_255DB5BA0, (void (*)(uint64_t))type metadata accessor for BatchInteraction.ContentPolarity);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_22DD5F08C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_22DD5F0DC + 4 * byte_22DE213E0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

void sub_22DD5F1E4(id *a1)
{
  uint64_t v2;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 4u:
      goto LABEL_4;
    case 2u:

      break;
    case 3u:

LABEL_4:
      swift_bridgeObjectRelease();
      break;
    case 5u:
      v2 = sub_22DE1DEB8();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
      break;
    default:
      return;
  }
}

void sub_22DD5F284()
{
  char *v0;

  v0 = (char *)sub_22DD5F2C8 + 4 * byte_22DE213EC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_22DD5F2C8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_22DD5F3B0(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_22DD5C950(result, type metadata accessor for BatchInteraction.ContentPreview);
    v2 = (char *)&loc_22DD5F40C + 4 * byte_22DE213F2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void *sub_22DD5F50C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 5)
  {
    v6 = sub_22DE1DEB8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_22DD5F598(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_22DD5C950((uint64_t)a1, type metadata accessor for BatchInteraction.ContentPreview);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      v6 = sub_22DE1DEB8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FBKEvaluation.Input(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for FBKEvaluation.Input(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_22DD5F658()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_22DD5F668()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22DE1DEB8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_22DD5F6FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t (*v8)(uint64_t *, uint64_t, uint64_t);
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48);
    v9 = v8(a2, 1, v7);
    if (EnumCaseMultiPayload == 1)
    {
      if (!v9)
      {
        v13 = (char *)&loc_22DD5F800 + 4 * byte_22DE213FE[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      if (!v8((uint64_t *)v17, 1, v7))
      {
        v19 = (char *)&loc_22DD5F9A8 + 4 * byte_22DE21404[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      if (!v9)
      {
        v14 = (char *)&loc_22DD5F844 + 4 * byte_22DE213F8[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_22DD5FBA0(id *a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t (*v4)(id *, uint64_t, uint64_t);
  int v5;
  uint64_t v6;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v3 = type metadata accessor for BatchInteraction.ContentPreview(0);
  v4 = *(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48);
  v5 = v4(a1, 1, v3);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v5)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 4u:
          swift_bridgeObjectRelease();
          break;
        case 2u:

          break;
        case 3u:

          swift_bridgeObjectRelease();
          break;
        case 5u:
          v7 = sub_22DE1DEB8();
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
          break;
        default:
          break;
      }
    }
    a1 = (id *)((char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48));
    if (!v4(a1, 1, v3))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 4u:
          goto LABEL_12;
        case 2u:
          goto LABEL_10;
        case 3u:
          goto LABEL_11;
        case 5u:
          goto LABEL_13;
        default:
          return;
      }
    }
  }
  else if (!v5)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 4u:
        goto LABEL_12;
      case 2u:
LABEL_10:

        break;
      case 3u:
LABEL_11:

LABEL_12:
        swift_bridgeObjectRelease();
        break;
      case 5u:
LABEL_13:
        v6 = sub_22DE1DEB8();
        (*(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
        break;
      default:
        return;
    }
  }
}

char *sub_22DD5FD78(char *a1, char *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = type metadata accessor for BatchInteraction.ContentPreview(0);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48);
  v7 = v6(a2, 1, v5);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v7)
    {
      v10 = (char *)&loc_22DD5FE54 + 4 * byte_22DE21422[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
    v13 = &a1[v12];
    v14 = &a2[v12];
    if (!v6(v14, 1, v5))
    {
      v16 = (char *)&loc_22DD60000 + 4 * byte_22DE21428[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    if (!v7)
    {
      v11 = (char *)&loc_22DD5FE98 + 4 * byte_22DE2141C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_22DD601F4(char *a1, char *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  if (a1 != a2)
  {
    sub_22DD5C950((uint64_t)a1, type metadata accessor for BatchInteraction.ContentPolarity);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48);
    v7 = v6(a2, 1, v5);
    if (EnumCaseMultiPayload == 1)
    {
      if (!v7)
      {
        v10 = (char *)&loc_22DD602E8 + 4 * byte_22DE21434[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v13 = &a1[v12];
      v14 = &a2[v12];
      if (!v6(v14, 1, v5))
      {
        v16 = (char *)&loc_22DD604B4 + 4 * byte_22DE2143A[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      if (!v7)
      {
        v11 = (char *)&loc_22DD60334 + 4 * byte_22DE2142E[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_22DD606D0(char *a1, char *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = type metadata accessor for BatchInteraction.ContentPreview(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a2, 1, v5);
  if (EnumCaseMultiPayload == 1)
  {
    if (v8)
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        v11 = sub_22DE1DEB8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(v6 + 64));
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
    v14 = &a1[v13];
    v15 = &a2[v13];
    if (v7(v15, 1, v5))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        v17 = sub_22DE1DEB8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v14, v15, *(_QWORD *)(v6 + 64));
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v14, 0, 1, v5);
    }
  }
  else if (v8)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      v12 = sub_22DE1DEB8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v6 + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_22DD60960(char *a1, char *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 != a2)
  {
    sub_22DD5C950((uint64_t)a1, type metadata accessor for BatchInteraction.ContentPolarity);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
    v8 = v7(a2, 1, v5);
    if (EnumCaseMultiPayload == 1)
    {
      if (v8)
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v11 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(v6 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
      v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v14 = &a1[v13];
      v15 = &a2[v13];
      if (v7(v15, 1, v5))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v17 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v14, v15, *(_QWORD *)(v6 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v14, 0, 1, v5);
      }
    }
    else if (v8)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        v12 = sub_22DE1DEB8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(v6 + 64));
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_22DD60C08()
{
  uint64_t v0;
  unint64_t v1;
  _QWORD v2[6];

  sub_22DD60C90(319, qword_255DB5D00, (void (*)(uint64_t))type metadata accessor for BatchInteraction.ContentPreview);
  if (v1 <= 0x3F)
  {
    v2[4] = *(_QWORD *)(v0 - 8) + 64;
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_22DD60C90(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_22DE1F610();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_22DD60CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 32);
  v5 = sub_22DE1E050();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_22DD60D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = sub_22DE1E050();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_22DD60D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)a2;
  v6 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if ((v6 & 1) != 0)
      return sub_22DD63210(v4, v5);
    return 0;
  }
  if ((v6 & 1) != 0)
    return 0;
  return sub_22DD63020(v4, v5);
}

uint64_t sub_22DD60D98(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v3 + 256) = a3;
  *(_QWORD *)(v3 + 72) = a1;
  *(_QWORD *)(v3 + 80) = a2;
  v4 = sub_22DE1E20C();
  *(_QWORD *)(v3 + 88) = v4;
  *(_QWORD *)(v3 + 96) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 104) = swift_task_alloc();
  *(_QWORD *)(v3 + 112) = swift_task_alloc();
  v5 = sub_22DE1E1F4();
  *(_QWORD *)(v3 + 120) = v5;
  *(_QWORD *)(v3 + 128) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 136) = swift_task_alloc();
  *(_QWORD *)(v3 + 144) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5D80);
  *(_QWORD *)(v3 + 152) = swift_task_alloc();
  *(_QWORD *)(v3 + 160) = swift_task_alloc();
  v6 = sub_22DE1E248();
  *(_QWORD *)(v3 + 168) = v6;
  *(_QWORD *)(v3 + 176) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 184) = swift_task_alloc();
  *(_QWORD *)(v3 + 192) = swift_task_alloc();
  *(_QWORD *)(v3 + 200) = swift_task_alloc();
  *(_QWORD *)(v3 + 208) = swift_task_alloc();
  v7 = type metadata accessor for BatchInteraction.ContentPreview(0);
  *(_QWORD *)(v3 + 216) = v7;
  *(_QWORD *)(v3 + 224) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 232) = swift_task_alloc();
  *(_QWORD *)(v3 + 240) = swift_task_alloc();
  *(_QWORD *)(v3 + 248) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22DD60F0C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  BOOL v11;
  void *v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(uint64_t, _QWORD, uint64_t);
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v21)(uint64_t, uint64_t);
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  void *v58;
  uint64_t v59;
  unint64_t v60;
  id v61;
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  void *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  id v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  NSObject *v106;
  os_log_type_t v107;
  uint8_t *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  void *v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v144;
  NSObject *v145;
  os_log_type_t v146;
  uint8_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(uint64_t, uint64_t);
  uint64_t v153;
  char v154;
  uint64_t v155;
  void (*v156)(uint64_t, _QWORD, uint64_t);
  uint64_t v157;
  void *v158;
  void (*v159)(uint64_t, uint64_t);
  uint64_t v160[2];

  v1 = v0;
  v2 = *(_BYTE *)(v0 + 256);
  v3 = *(id *)(v0 + 80);
  if ((v2 & 1) != 0)
    sub_22DE1E230();
  else
    sub_22DE1E218();
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v1 + 160);

  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v7(v6, 1, v4) == 1)
  {
    sub_22DD5071C(*(_QWORD *)(v1 + 160), &qword_255DB5D80);
    if (qword_255DB53A8 != -1)
      swift_once();
    v8 = sub_22DE1E410();
    __swift_project_value_buffer(v8, (uint64_t)qword_255DC3D48);
    v9 = sub_22DE1E3F8();
    v10 = sub_22DE1F4F0();
    v11 = os_log_type_enabled(v9, v10);
    v12 = *(void **)(v1 + 80);
    if (v11)
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_22DD4B000, v9, v10, "FBKSInteraction.Content is nil", v13, 2u);
      MEMORY[0x22E320870](v13, -1, -1);
    }

    goto LABEL_10;
  }
  v15 = *(_QWORD *)(v1 + 200);
  v16 = *(_QWORD *)(v1 + 208);
  v17 = *(_QWORD *)(v1 + 168);
  v18 = *(_QWORD **)(v1 + 176);
  v19 = (void (*)(uint64_t, _QWORD, uint64_t))v18[4];
  v19(v16, *(_QWORD *)(v1 + 160), v17);
  v20 = (void (*)(uint64_t, uint64_t, uint64_t))v18[2];
  v20(v15, v16, v17);
  v21 = (uint64_t (*)(uint64_t, uint64_t))v18[11];
  LODWORD(v16) = v21(v15, v17);
  v22 = *MEMORY[0x24BE31148];
  v159 = (void (*)(uint64_t, uint64_t))v18[1];
  v159(v15, v17);
  if ((_DWORD)v16 == v22)
  {
    v24 = *(_QWORD *)(v1 + 136);
    v23 = *(_QWORD *)(v1 + 144);
    v156 = v19;
    v25 = v22;
    v27 = *(_QWORD *)(v1 + 120);
    v26 = *(_QWORD *)(v1 + 128);
    v154 = *(_BYTE *)(v1 + 256);
    v28 = *(id *)(v1 + 80);
    sub_22DE1E200();

    (*(void (**)(uint64_t, _QWORD, uint64_t))(v26 + 104))(v24, *MEMORY[0x24BE31018], v27);
    v29 = MEMORY[0x22E31EA64](v23, v24);
    v30 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v30(v24, v27);
    v31 = v27;
    v22 = v25;
    v30(v23, v31);
    if ((v154 & 1) != 0 && (v29 & 1) != 0)
    {
      v32 = *(_QWORD *)(v1 + 168);
      v33 = *(uint64_t **)(v1 + 152);
      sub_22DE024C0(*(_QWORD *)(v1 + 208), v33);
      if (v7((uint64_t)v33, 1, v32) == 1)
      {
        sub_22DD5071C(*(_QWORD *)(v1 + 152), &qword_255DB5D80);
        if (qword_255DB53A8 != -1)
          swift_once();
        v34 = sub_22DE1E410();
        __swift_project_value_buffer(v34, (uint64_t)qword_255DC3D48);
        v35 = sub_22DE1E3F8();
        v36 = sub_22DE1F4FC();
        v37 = os_log_type_enabled(v35, v36);
        v38 = *(_QWORD *)(v1 + 208);
        v39 = *(_QWORD *)(v1 + 168);
        v40 = *(void **)(v1 + 80);
        if (v37)
        {
          v41 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v41 = 0;
          MEMORY[0x22E320870](v41, -1, -1);
        }

        goto LABEL_36;
      }
      v42 = *(_QWORD *)(v1 + 208);
      v43 = *(_QWORD *)(v1 + 192);
      v44 = *(_QWORD *)(v1 + 168);
      v45 = *(_QWORD *)(v1 + 176);
      v156(v43, *(_QWORD *)(v1 + 152), v44);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 40))(v42, v43, v44);
    }
  }
  v46 = *(_QWORD *)(v1 + 184);
  v47 = *(_QWORD *)(v1 + 168);
  v20(v46, *(_QWORD *)(v1 + 208), v47);
  v48 = v21(v46, v47);
  if (v48 == *MEMORY[0x24BE31180])
    goto LABEL_22;
  if (v48 != *MEMORY[0x24BE311A0])
  {
    if (v48 == *MEMORY[0x24BE311B8])
    {
      v66 = *(uint64_t **)(v1 + 184);
      v67 = *(void **)(v1 + 80);
      (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v1 + 176) + 96))(v66, *(_QWORD *)(v1 + 168));
      v68 = *v66;
      v69 = v66[1];
      v71 = v66[2];
      v70 = v66[3];
      v72 = objc_allocWithZone(MEMORY[0x24BEBD640]);
      sub_22DD64850(v68, v69);
      v73 = (void *)sub_22DE1DFC0();
      v74 = objc_msgSend(v72, sel_initWithData_, v73);
      sub_22DD64894(v68, v69);

      sub_22DD64894(v68, v69);
      if (!v74)
      {
        v38 = *(_QWORD *)(v1 + 208);
        v39 = *(_QWORD *)(v1 + 168);
        swift_bridgeObjectRelease();
LABEL_36:
        v93 = v38;
        v94 = v39;
        goto LABEL_37;
      }
      v75 = *(_QWORD **)(v1 + 248);
      v76 = *(_QWORD *)(v1 + 208);
      v77 = *(_QWORD *)(v1 + 168);
      *v75 = v74;
      v75[1] = v71;
      v75[2] = v70;
      swift_storeEnumTagMultiPayload();
      v55 = v76;
      v56 = v77;
    }
    else
    {
      if (v48 != v22)
      {
        if (v48 != *MEMORY[0x24BE31178])
        {
          if (qword_255DB53A8 != -1)
            swift_once();
          v105 = sub_22DE1E410();
          __swift_project_value_buffer(v105, (uint64_t)qword_255DC3D48);
          v106 = sub_22DE1E3F8();
          v107 = sub_22DE1F4F0();
          if (os_log_type_enabled(v106, v107))
          {
            v158 = *(void **)(v1 + 80);
            v108 = (uint8_t *)swift_slowAlloc();
            v109 = swift_slowAlloc();
            v160[0] = v109;
            *(_DWORD *)v108 = 136315138;
            swift_beginAccess();
            sub_22DD504A8(&qword_255DB5D88, (uint64_t (*)(uint64_t))MEMORY[0x24BE311C0], MEMORY[0x24BE311E0]);
            v110 = sub_22DE1F8C8();
            *(_QWORD *)(v1 + 56) = sub_22DDA2E30(v110, v111, v160);
            sub_22DE1F628();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_22DD4B000, v106, v107, "FBKSInteraction.Content type %s is not currently supported.", v108, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x22E320870](v109, -1, -1);
            MEMORY[0x22E320870](v108, -1, -1);
            v112 = v158;
          }
          else
          {
            v112 = *(void **)(v1 + 80);
          }

          v121 = *(_QWORD *)(v1 + 208);
          v122 = *(_QWORD *)(v1 + 168);
          v159(*(_QWORD *)(v1 + 184), v122);
          v159(v121, v122);
          goto LABEL_10;
        }
LABEL_22:
        v49 = *(_QWORD **)(v1 + 248);
        v50 = *(_QWORD *)(v1 + 208);
        v51 = *(_QWORD *)(v1 + 176);
        v52 = *(_QWORD **)(v1 + 184);
        v53 = *(_QWORD *)(v1 + 168);

        (*(void (**)(_QWORD *, uint64_t))(v51 + 96))(v52, v53);
        v54 = v52[1];
        *v49 = *v52;
        v49[1] = v54;
        swift_storeEnumTagMultiPayload();
        v55 = v50;
        v56 = v53;
        goto LABEL_56;
      }
      v78 = *(_QWORD *)(v1 + 184);
      v80 = *(_QWORD *)(v1 + 104);
      v79 = *(_QWORD *)(v1 + 112);
      v82 = *(_QWORD *)(v1 + 88);
      v81 = *(_QWORD *)(v1 + 96);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 176) + 96))(v78, *(_QWORD *)(v1 + 168));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 32))(v79, v78, v82);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v80, v79, v82);
      v83 = (*(uint64_t (**)(uint64_t, uint64_t))(v81 + 88))(v80, v82);
      if (v83 == *MEMORY[0x24BE310B8])
      {
        v84 = *(_QWORD *)(v1 + 248);
        v85 = *(_QWORD **)(v1 + 232);
        v155 = *(_QWORD *)(v1 + 168);
        v157 = *(_QWORD *)(v1 + 208);
        v86 = *(_QWORD *)(v1 + 104);
        v87 = *(_QWORD *)(v1 + 112);
        v89 = *(_QWORD *)(v1 + 88);
        v88 = *(_QWORD *)(v1 + 96);
        v90 = *(void **)(v1 + 80);
        (*(void (**)(uint64_t, uint64_t))(v88 + 96))(v86, v89);
        v160[0] = 0;
        v160[1] = 0xE000000000000000;
        sub_22DE1F328();
        swift_bridgeObjectRelease();

        (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v87, v89);
        *v85 = 0;
        v85[1] = 0xE000000000000000;
        swift_storeEnumTagMultiPayload();
        v91 = (uint64_t)v85;
        v92 = v84;
      }
      else if (v83 == *MEMORY[0x24BE310D8])
      {
        v96 = *(uint64_t **)(v1 + 240);
        v95 = *(_QWORD *)(v1 + 248);
        v155 = *(_QWORD *)(v1 + 168);
        v157 = *(_QWORD *)(v1 + 208);
        v97 = *(_QWORD **)(v1 + 104);
        v98 = *(_QWORD *)(v1 + 112);
        v100 = *(_QWORD *)(v1 + 88);
        v99 = *(_QWORD *)(v1 + 96);
        v101 = *(void **)(v1 + 80);
        (*(void (**)(_QWORD *, uint64_t))(v99 + 96))(v97, v100);
        *(_QWORD *)(v1 + 64) = *v97;
        v102 = sub_22DE1F8C8();
        v104 = v103;

        (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v98, v100);
        *v96 = v102;
        v96[1] = v104;
        swift_storeEnumTagMultiPayload();
        v91 = (uint64_t)v96;
        v92 = v95;
      }
      else if (v83 == *MEMORY[0x24BE310C8])
      {
        v114 = *(_QWORD **)(v1 + 240);
        v113 = *(_QWORD *)(v1 + 248);
        v155 = *(_QWORD *)(v1 + 168);
        v157 = *(_QWORD *)(v1 + 208);
        v115 = *(_QWORD *)(v1 + 112);
        v117 = *(_QWORD *)(v1 + 88);
        v116 = *(_QWORD *)(v1 + 96);
        v118 = *(void **)(v1 + 80);
        (*(void (**)(_QWORD, uint64_t))(v116 + 96))(*(_QWORD *)(v1 + 104), v117);
        *(_QWORD *)(v1 + 40) = 0;
        *(_QWORD *)(v1 + 48) = 0xE000000000000000;
        sub_22DE1F478();

        v119 = *(_QWORD *)(v1 + 40);
        v120 = *(_QWORD *)(v1 + 48);
        (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v115, v117);
        *v114 = v119;
        v114[1] = v120;
        swift_storeEnumTagMultiPayload();
        v91 = (uint64_t)v114;
        v92 = v113;
      }
      else if (v83 == *MEMORY[0x24BE310D0])
      {
        v123 = *(_QWORD **)(v1 + 240);
        v124 = *(_QWORD *)(v1 + 248);
        v155 = *(_QWORD *)(v1 + 168);
        v157 = *(_QWORD *)(v1 + 208);
        v126 = *(uint64_t **)(v1 + 104);
        v125 = *(_QWORD *)(v1 + 112);
        v128 = *(_QWORD *)(v1 + 88);
        v127 = *(_QWORD *)(v1 + 96);
        v129 = *(void **)(v1 + 80);
        (*(void (**)(uint64_t *, uint64_t))(v127 + 96))(v126, v128);
        v130 = *v126;
        v131 = v126[1];

        (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v125, v128);
        *v123 = v130;
        v123[1] = v131;
        swift_storeEnumTagMultiPayload();
        v91 = (uint64_t)v123;
        v92 = v124;
      }
      else
      {
        if (v83 == *MEMORY[0x24BE310C0])
        {
          v132 = *(uint64_t **)(v1 + 240);
          v157 = *(_QWORD *)(v1 + 208);
          v153 = *(_QWORD *)(v1 + 248);
          v155 = *(_QWORD *)(v1 + 168);
          v134 = *(_QWORD **)(v1 + 104);
          v133 = *(_QWORD *)(v1 + 112);
          v136 = *(_QWORD *)(v1 + 88);
          v135 = *(_QWORD *)(v1 + 96);
          v137 = *(void **)(v1 + 80);
          (*(void (**)(_QWORD *, uint64_t))(v135 + 96))(v134, v136);
          v138 = MEMORY[0x22E31FC58](*v134, v136);
        }
        else
        {
          if (v83 != *MEMORY[0x24BE310B0])
          {
            if (qword_255DB53A8 != -1)
              swift_once();
            v144 = sub_22DE1E410();
            __swift_project_value_buffer(v144, (uint64_t)qword_255DC3D48);
            v145 = sub_22DE1E3F8();
            v146 = sub_22DE1F4F0();
            if (os_log_type_enabled(v145, v146))
            {
              v147 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v147 = 0;
              _os_log_impl(&dword_22DD4B000, v145, v146, "FBKSInteraction.Content.Structured is nil", v147, 2u);
              MEMORY[0x22E320870](v147, -1, -1);
            }
            v38 = *(_QWORD *)(v1 + 208);
            v39 = *(_QWORD *)(v1 + 168);
            v149 = *(_QWORD *)(v1 + 104);
            v148 = *(_QWORD *)(v1 + 112);
            v151 = *(_QWORD *)(v1 + 88);
            v150 = *(_QWORD *)(v1 + 96);

            v152 = *(void (**)(uint64_t, uint64_t))(v150 + 8);
            v152(v148, v151);
            v152(v149, v151);
            goto LABEL_36;
          }
          v132 = *(uint64_t **)(v1 + 240);
          v157 = *(_QWORD *)(v1 + 208);
          v153 = *(_QWORD *)(v1 + 248);
          v155 = *(_QWORD *)(v1 + 168);
          v133 = *(_QWORD *)(v1 + 112);
          v136 = *(_QWORD *)(v1 + 88);
          v135 = *(_QWORD *)(v1 + 96);
          v137 = *(void **)(v1 + 80);
          (*(void (**)(_QWORD, uint64_t))(v135 + 96))(*(_QWORD *)(v1 + 104), v136);
          v138 = sub_22DE1F250();
        }
        v140 = v1;
        v141 = v138;
        v142 = v139;
        swift_bridgeObjectRelease();

        (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v133, v136);
        *v132 = v141;
        v132[1] = v142;
        v1 = v140;
        swift_storeEnumTagMultiPayload();
        v91 = (uint64_t)v132;
        v92 = v153;
      }
      sub_22DD647B0(v91, v92, type metadata accessor for BatchInteraction.ContentPreview);
      v56 = v155;
      v55 = v157;
    }
LABEL_56:
    v159(v55, v56);
    sub_22DD647B0(*(_QWORD *)(v1 + 248), *(_QWORD *)(v1 + 72), type metadata accessor for BatchInteraction.ContentPreview);
    v14 = 0;
    goto LABEL_57;
  }
  v57 = *(uint64_t **)(v1 + 184);
  v58 = *(void **)(v1 + 80);
  (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v1 + 176) + 96))(v57, *(_QWORD *)(v1 + 168));
  v59 = *v57;
  v60 = v57[1];
  v61 = objc_allocWithZone(MEMORY[0x24BEBD640]);
  sub_22DD64850(v59, v60);
  v62 = (void *)sub_22DE1DFC0();
  v63 = objc_msgSend(v61, sel_initWithData_, v62);
  sub_22DD64894(v59, v60);

  sub_22DD64894(v59, v60);
  if (v63)
  {
    v64 = *(_QWORD *)(v1 + 208);
    v65 = *(_QWORD *)(v1 + 168);
    **(_QWORD **)(v1 + 248) = v63;
    swift_storeEnumTagMultiPayload();
    v55 = v64;
    v56 = v65;
    goto LABEL_56;
  }
  v93 = *(_QWORD *)(v1 + 208);
  v94 = *(_QWORD *)(v1 + 168);
LABEL_37:
  v159(v93, v94);
LABEL_10:
  v14 = 1;
LABEL_57:
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 + 224) + 56))(*(_QWORD *)(v1 + 72), v14, 1, *(_QWORD *)(v1 + 216));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_22DD61CB4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[4] = a1;
  v2[5] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  v3 = type metadata accessor for BatchInteraction.ContentPreview(0);
  v2[9] = v3;
  v2[10] = *(_QWORD *)(v3 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v4 = sub_22DE1E1F4();
  v2[14] = v4;
  v2[15] = *(_QWORD *)(v4 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5D68);
  v2[19] = swift_task_alloc();
  v5 = sub_22DE1E050();
  v2[20] = v5;
  v2[21] = *(_QWORD *)(v5 - 8);
  v2[22] = swift_task_alloc();
  v6 = type metadata accessor for BatchInteraction(0);
  v2[23] = v6;
  v2[24] = *(_QWORD *)(v6 - 8);
  v2[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22DD61E28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  void *v11;
  uint8_t *v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _QWORD *v47;
  id v48;
  _QWORD *v49;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = *(id *)(v0 + 40);
  sub_22DE1E1C4();

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
  {
    v15 = *(_QWORD *)(v0 + 200);
    v16 = *(_QWORD *)(v0 + 176);
    v17 = *(_QWORD *)(v0 + 184);
    v18 = *(_QWORD *)(v0 + 160);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 144);
    v21 = *(_QWORD *)(v0 + 112);
    v22 = *(_QWORD *)(v0 + 120);
    v23 = *(void **)(v0 + 40);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 32))(v16, *(_QWORD *)(v0 + 152), v18);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v15, v16, v18);
    v24 = *(int *)(v17 + 20);
    *(_DWORD *)(v0 + 248) = v24;
    *(_QWORD *)(v15 + v24) = v23;
    v25 = v23;
    sub_22DE1E200();

    v26 = sub_22DE06390(v20);
    v28 = v27;
    v29 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    *(_QWORD *)(v0 + 208) = v29;
    v29(v20, v21);
    if (!v28)
    {
      v30 = sub_22DE1E254();
      if (!v31)
      {
        v32 = 0;
LABEL_10:
        v33 = *(void **)(v0 + 40);
        *(_QWORD *)(*(_QWORD *)(v0 + 200) + *(int *)(*(_QWORD *)(v0 + 184) + 24)) = v32;
        v34 = v33;
        sub_22DE1E200();

        if (qword_255DB5340 != -1)
          swift_once();
        v35 = *(_QWORD *)(v0 + 128);
        v36 = *(_QWORD *)(v0 + 136);
        v37 = *(_QWORD *)(v0 + 112);
        v38 = *(_QWORD *)(v0 + 120);
        v39 = sub_22DD62E9C(v36, qword_255DC3D08);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v35, v36, v37);
        if ((v39 & 1) != 0)
        {
          v40 = *(_QWORD *)(v0 + 136);
          v41 = *(_QWORD *)(v0 + 112);
          v29(*(_QWORD *)(v0 + 128), v41);
          v29(v40, v41);
        }
        else
        {
          if (qword_255DB5338 != -1)
            swift_once();
          v43 = *(_QWORD *)(v0 + 128);
          v44 = *(_QWORD *)(v0 + 136);
          v45 = *(_QWORD *)(v0 + 112);
          v46 = sub_22DD62E9C(v43, qword_255DC3D00);
          v29(v43, v45);
          v29(v44, v45);
          if ((v46 & 1) == 0)
          {
            v48 = *(id *)(v0 + 40);
            v49 = (_QWORD *)swift_task_alloc();
            *(_QWORD *)(v0 + 224) = v49;
            *v49 = v0;
            v49[1] = sub_22DD627BC;
            return sub_22DD60D98(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40), 0);
          }
        }
        v47 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 216) = v47;
        *v47 = v0;
        v47[1] = sub_22DD62334;
        return sub_22DDD6F30(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40));
      }
      v26 = v30;
      v28 = v31;
    }
    type metadata accessor for AppInfoController();
    v32 = (_QWORD *)swift_allocObject();
    v32[3] = 0;
    v32[4] = 0;
    v32[2] = 0;
    sub_22DE1E08C();
    v32[5] = v26;
    v32[6] = v28;
    goto LABEL_10;
  }
  sub_22DD5071C(*(_QWORD *)(v0 + 152), &qword_255DB5D68);
  if (qword_255DB53A8 != -1)
    swift_once();
  v5 = *(void **)(v0 + 40);
  v6 = sub_22DE1E410();
  __swift_project_value_buffer(v6, (uint64_t)qword_255DC3D48);
  v7 = v5;
  v8 = sub_22DE1E3F8();
  v9 = sub_22DE1F4FC();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(void **)(v0 + 40);
  if (v10)
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v12 = 138412290;
    *(_QWORD *)(v0 + 16) = v11;
    v14 = v11;
    sub_22DE1F628();
    *v13 = v11;

    _os_log_impl(&dword_22DD4B000, v8, v9, "Encountered a donation %@ with no evaluationID.", v12, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8160);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v13, -1, -1);
    MEMORY[0x22E320870](v12, -1, -1);
  }
  else
  {

  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 192) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 184));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DD62334()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DD62388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 64);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v1 + 48))(v2, 1, *(_QWORD *)(v0 + 72)) == 1)
  {
    sub_22DD5071C(v2, &qword_255DB5948);
    if (qword_255DB53A8 != -1)
      swift_once();
    v3 = *(void **)(v0 + 40);
    v4 = sub_22DE1E410();
    __swift_project_value_buffer(v4, (uint64_t)qword_255DC3D48);
    v5 = v3;
    v6 = sub_22DE1E3F8();
    v7 = sub_22DE1F4FC();
    if (os_log_type_enabled(v6, v7))
    {
      v36 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
      v37 = *(_QWORD *)(v0 + 168);
      v38 = *(_QWORD *)(v0 + 160);
      v39 = *(_QWORD *)(v0 + 176);
      v8 = *(_QWORD *)(v0 + 144);
      v9 = *(_QWORD *)(v0 + 112);
      v35 = *(void **)(v0 + 40);
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v40 = v11;
      *(_DWORD *)v10 = 136315138;
      sub_22DE1E200();
      sub_22DD504A8(&qword_255DB5D78, (uint64_t (*)(uint64_t))MEMORY[0x24BE31068], MEMORY[0x24BE31090]);
      v12 = sub_22DE1F8C8();
      v14 = v13;
      v36(v8, v9);
      *(_QWORD *)(v0 + 24) = sub_22DDA2E30(v12, v14, &v40);
      sub_22DE1F628();
      swift_bridgeObjectRelease();

      swift_arrayDestroy();
      MEMORY[0x22E320870](v11, -1, -1);
      MEMORY[0x22E320870](v10, -1, -1);

      v15 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
      v15(v39, v38);
    }
    else
    {
      v29 = *(_QWORD *)(v0 + 168);
      v28 = *(_QWORD *)(v0 + 176);
      v30 = *(_QWORD *)(v0 + 160);
      v31 = *(void **)(v0 + 40);

      v15 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      v15(v28, v30);
    }
    v32 = *(int *)(v0 + 248);
    v33 = *(_QWORD *)(v0 + 200);
    v15(v33, *(_QWORD *)(v0 + 160));

    swift_release();
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 192) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 184));
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 200);
    v17 = *(_QWORD *)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 184);
    v19 = *(_QWORD *)(v0 + 160);
    v20 = *(_QWORD *)(v0 + 168);
    v21 = *(_QWORD *)(v0 + 104);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v19);
    sub_22DD647B0(v2, v21, type metadata accessor for BatchInteraction.ContentPreview);
    v22 = v16 + *(int *)(v18 + 28);
    sub_22DD647B0(v21, v22, type metadata accessor for BatchInteraction.ContentPreview);
    v24 = *(_QWORD *)(v0 + 192);
    v23 = *(_QWORD *)(v0 + 200);
    v25 = *(_QWORD *)(v0 + 184);
    v26 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(v1 + 56))(v22, 0, 1, *(_QWORD *)(v0 + 72));
    v27 = type metadata accessor for BatchInteraction.ContentPolarity(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v22, 0, 1, v27);
    sub_22DD5C570(v23, v26, type metadata accessor for BatchInteraction);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56))(v26, 0, 1, v25);
    sub_22DD5C950(v23, type metadata accessor for BatchInteraction);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DD627BC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DD62810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint8_t *v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *v17;
  id v18;
  _QWORD *v19;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 80) + 48);
  *(_QWORD *)(v0 + 232) = v3;
  if (v3(v2, 1, v1) == 1)
  {
    sub_22DD5071C(v2, &qword_255DB5948);
    if (qword_255DB53A8 != -1)
      swift_once();
    v4 = sub_22DE1E410();
    __swift_project_value_buffer(v4, (uint64_t)qword_255DC3D48);
    v5 = sub_22DE1E3F8();
    v6 = sub_22DE1F4F0();
    v7 = os_log_type_enabled(v5, v6);
    v9 = *(_QWORD *)(v0 + 168);
    v8 = *(_QWORD *)(v0 + 176);
    v10 = *(_QWORD *)(v0 + 160);
    v11 = *(void **)(v0 + 40);
    if (v7)
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_22DD4B000, v5, v6, "Original content is not previewable.", v12, 2u);
      MEMORY[0x22E320870](v12, -1, -1);
    }

    v13 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v13(v8, v10);
    v14 = *(int *)(v0 + 248);
    v15 = *(_QWORD *)(v0 + 200);
    v13(v15, *(_QWORD *)(v0 + 160));

    swift_release();
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 192) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 184));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v17 = *(void **)(v0 + 40);
    sub_22DD647B0(v2, *(_QWORD *)(v0 + 96), type metadata accessor for BatchInteraction.ContentPreview);
    v18 = v17;
    v19 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v19;
    *v19 = v0;
    v19[1] = sub_22DD62A88;
    return sub_22DD60D98(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 40), 1);
  }
}

uint64_t sub_22DD62A88()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DD62ADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 232))(v2, 1, v1) == 1)
  {
    sub_22DD5071C(v2, &qword_255DB5948);
    if (qword_255DB53A8 != -1)
      swift_once();
    v3 = sub_22DE1E410();
    __swift_project_value_buffer(v3, (uint64_t)qword_255DC3D48);
    v4 = sub_22DE1E3F8();
    v5 = sub_22DE1F4F0();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_22DD4B000, v4, v5, "Generated content is not previewable.", v6, 2u);
      MEMORY[0x22E320870](v6, -1, -1);
    }
    v8 = *(_QWORD *)(v0 + 168);
    v7 = *(_QWORD *)(v0 + 176);
    v9 = *(_QWORD *)(v0 + 160);
    v10 = *(_QWORD *)(v0 + 96);

    sub_22DD5C950(v10, type metadata accessor for BatchInteraction.ContentPreview);
    v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v11(v7, v9);
    v12 = *(int *)(v0 + 248);
    v13 = *(_QWORD *)(v0 + 200);
    v11(v13, *(_QWORD *)(v0 + 160));

    swift_release();
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 192) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 184));
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 200);
    v15 = *(_QWORD *)(v0 + 176);
    v16 = *(_QWORD *)(v0 + 184);
    v17 = *(_QWORD *)(v0 + 160);
    v18 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 88);
    v19 = *(_QWORD *)(v0 + 96);
    v30 = *(_QWORD *)(v0 + 80);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
    sub_22DD647B0(v2, v20, type metadata accessor for BatchInteraction.ContentPreview);
    v21 = v14 + *(int *)(v16 + 28);
    v22 = v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
    sub_22DD647B0(v19, v21, type metadata accessor for BatchInteraction.ContentPreview);
    v23 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56);
    v23(v21, 0, 1, v1);
    sub_22DD647B0(v20, v22, type metadata accessor for BatchInteraction.ContentPreview);
    v25 = *(_QWORD *)(v0 + 192);
    v24 = *(_QWORD *)(v0 + 200);
    v26 = *(_QWORD *)(v0 + 184);
    v27 = *(_QWORD *)(v0 + 32);
    v23(v22, 0, 1, *(_QWORD *)(v0 + 72));
    v28 = type metadata accessor for BatchInteraction.ContentPolarity(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v21, 0, 1, v28);
    sub_22DD5C570(v24, v27, type metadata accessor for BatchInteraction);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v27, 0, 1, v26);
    sub_22DD5C950(v24, type metadata accessor for BatchInteraction);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DD62E34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_22DE1E050();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_22DD62E70()
{
  return sub_22DD504A8(&qword_255DB5D30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

uint64_t sub_22DD62E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_22DE1E1F4();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_22DD504A8(&qword_255DB5D90, (uint64_t (*)(uint64_t))MEMORY[0x24BE31068], MEMORY[0x24BE31080]),
        v6 = sub_22DE1F25C(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_22DD504A8(qword_255DB5D98, (uint64_t (*)(uint64_t))MEMORY[0x24BE31068], MEMORY[0x24BE31088]);
      v12 = sub_22DE1F280();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_22DD63020(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  char v17;
  BOOL v19;
  uint64_t v21;

  v4 = type metadata accessor for BatchInteraction.ContentPreview.CUContent.Mail(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v10 = (uint64_t *)((char *)&v21 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_28:
    v17 = 0;
    return v17 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    v14 = v11 - 1;
    while (1)
    {
      sub_22DD5C570(a1 + v12, (uint64_t)v10, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Mail);
      sub_22DD5C570(a2 + v12, (uint64_t)v7, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Mail);
      v15 = *v10 == *v7 && v10[1] == v7[1];
      if (!v15 && (sub_22DE1F8E0() & 1) == 0)
        break;
      v16 = v10[2] == v7[2] && v10[3] == v7[3];
      if (!v16 && (sub_22DE1F8E0() & 1) == 0 || (v10[4] != v7[4] || v10[5] != v7[5]) && (sub_22DE1F8E0() & 1) == 0)
        break;
      if ((sub_22DE1E008() & 1) == 0 || (sub_22DE1E038() & 1) == 0)
        break;
      v17 = sub_22DE1DEAC();
      sub_22DD5C950((uint64_t)v7, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Mail);
      sub_22DD5C950((uint64_t)v10, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Mail);
      v19 = v14-- != 0;
      if ((v17 & 1) != 0)
      {
        v12 += v13;
        if (v19)
          continue;
      }
      return v17 & 1;
    }
    sub_22DD5C950((uint64_t)v7, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Mail);
    sub_22DD5C950((uint64_t)v10, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Mail);
    goto LABEL_28;
  }
  v17 = 1;
  return v17 & 1;
}

uint64_t sub_22DD63210(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  char v17;
  BOOL v19;
  uint64_t v21;

  v4 = type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v10 = (uint64_t *)((char *)&v21 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_26:
    v17 = 0;
    return v17 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    v14 = v11 - 1;
    while (1)
    {
      sub_22DD5C570(a1 + v12, (uint64_t)v10, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
      sub_22DD5C570(a2 + v12, (uint64_t)v7, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
      v15 = *v10 == *v7 && v10[1] == v7[1];
      if (!v15 && (sub_22DE1F8E0() & 1) == 0)
        break;
      v16 = v10[2] == v7[2] && v10[3] == v7[3];
      if (!v16 && (sub_22DE1F8E0() & 1) == 0
        || (sub_22DE1E008() & 1) == 0
        || (sub_22DE1DEAC() & 1) == 0
        || *((unsigned __int8 *)v10 + *(int *)(v4 + 32)) != *((unsigned __int8 *)v7 + *(int *)(v4 + 32)))
      {
        break;
      }
      v17 = sub_22DE1E038();
      sub_22DD5C950((uint64_t)v7, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
      sub_22DD5C950((uint64_t)v10, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
      v19 = v14-- != 0;
      if ((v17 & 1) != 0)
      {
        v12 += v13;
        if (v19)
          continue;
      }
      return v17 & 1;
    }
    sub_22DD5C950((uint64_t)v7, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
    sub_22DD5C950((uint64_t)v10, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
    goto LABEL_26;
  }
  v17 = 1;
  return v17 & 1;
}

uint64_t sub_22DD633F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  int v5;
  int v6;
  char v8;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (unsigned __int8 *)(a2 + 48);
    v4 = (unsigned __int8 *)(a1 + 48);
    do
    {
      v5 = *v4;
      v6 = *v3;
      if (*((_QWORD *)v4 - 2) == *((_QWORD *)v3 - 2) && *((_QWORD *)v4 - 1) == *((_QWORD *)v3 - 1))
      {
        if (v5 != v6)
          return 0;
      }
      else
      {
        v8 = sub_22DE1F8E0();
        result = 0;
        if ((v8 & 1) == 0 || ((v5 ^ v6) & 1) != 0)
          return result;
      }
      v3 += 40;
      v4 += 40;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_22DD634A0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  BOOL v5;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if ((v4 || (sub_22DE1F8E0() & 1) != 0)
    && (a1[2] == a2[2] ? (v5 = a1[3] == a2[3]) : (v5 = 0),
        (v5 || (sub_22DE1F8E0() & 1) != 0) && (a1[4] == a2[4] && a1[5] == a2[5] || (sub_22DE1F8E0() & 1) != 0))
    && (type metadata accessor for BatchInteraction.ContentPreview.CUContent.Mail(0), (sub_22DE1E008() & 1) != 0)
    && (sub_22DE1E038() & 1) != 0)
  {
    return sub_22DE1DEAC();
  }
  else
  {
    return 0;
  }
}

uint64_t sub_22DD63584(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  BOOL v5;
  uint64_t v6;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if ((v4 || (sub_22DE1F8E0() & 1) != 0)
    && (a1[2] == a2[2] ? (v5 = a1[3] == a2[3]) : (v5 = 0),
        (v5 || (sub_22DE1F8E0() & 1) != 0)
     && (v6 = type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(0),
         (sub_22DE1E008() & 1) != 0)
     && (sub_22DE1DEAC() & 1) != 0
     && *((unsigned __int8 *)a1 + *(int *)(v6 + 32)) == *((unsigned __int8 *)a2 + *(int *)(v6 + 32))))
  {
    return sub_22DE1E038();
  }
  else
  {
    return 0;
  }
}

void sub_22DD63658(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  _QWORD v16[3];
  uint64_t v17;

  v17 = a2;
  v3 = sub_22DE1DEB8();
  v16[1] = *(_QWORD *)(v3 - 8);
  v16[2] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v16[0] = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for BatchInteraction.ContentPreview(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5D58);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v16 + *(int *)(v12 + 48) - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD5C570(a1, (uint64_t)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for BatchInteraction.ContentPreview);
  sub_22DD5C570(v17, (uint64_t)v14, type metadata accessor for BatchInteraction.ContentPreview);
  v15 = (char *)sub_22DD63814 + 4 * byte_22DE21440[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22DD63814()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  char v8;

  sub_22DD5C570(v2, (uint64_t)v0, type metadata accessor for BatchInteraction.ContentPreview);
  v4 = *v0;
  v3 = v0[1];
  if (swift_getEnumCaseMultiPayload())
  {
    swift_bridgeObjectRelease();
    sub_22DD5071C(v2, &qword_255DB5D58);
  }
  else
  {
    if (v4 == *v1 && v3 == v1[1])
    {
      swift_bridgeObjectRelease_n();
LABEL_12:
      sub_22DD5C950(v2, type metadata accessor for BatchInteraction.ContentPreview);
      v6 = 1;
      return v6 & 1;
    }
    v8 = sub_22DE1F8E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
      goto LABEL_12;
    sub_22DD5C950(v2, type metadata accessor for BatchInteraction.ContentPreview);
  }
  v6 = 0;
  return v6 & 1;
}

uint64_t sub_22DD63B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;

  v86 = a1;
  v87 = (char *)a2;
  v2 = type metadata accessor for BatchInteraction.ContentPreview(0);
  v83 = *(_QWORD *)(v2 - 8);
  v84 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v78 = (uint64_t)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5D48);
  v4 = MEMORY[0x24BDAC7A8](v85);
  v77 = (uint64_t)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v82 = (char *)&v76 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v81 = (char *)&v76 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v76 = (uint64_t)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v80 = (char *)&v76 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v79 = (uint64_t)&v76 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v76 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v76 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v76 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v76 - v25;
  v27 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v76 - v31;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5D50);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)&v76 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = (uint64_t)&v36[*(int *)(v34 + 48)];
  sub_22DD5C570(v86, (uint64_t)v36, type metadata accessor for BatchInteraction.ContentPolarity);
  sub_22DD5C570((uint64_t)v87, v37, type metadata accessor for BatchInteraction.ContentPolarity);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v48 = (uint64_t)v81;
    sub_22DD5C570((uint64_t)v36, (uint64_t)v32, type metadata accessor for BatchInteraction.ContentPolarity);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v30 = v32;
      goto LABEL_9;
    }
    v49 = (uint64_t)v26;
    sub_22DD5CF7C(v37, (uint64_t)v26);
    v50 = v48 + *(int *)(v85 + 48);
    sub_22DD5CF7C((uint64_t)v32, v48);
    sub_22DD506A0((uint64_t)v26, v50, &qword_255DB5948);
    v51 = v84;
    v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48);
    if (v52(v48, 1, v84) == 1)
    {
      sub_22DD5071C(v49, &qword_255DB5948);
      if (v52(v50, 1, v51) == 1)
      {
        sub_22DD5071C(v48, &qword_255DB5948);
LABEL_26:
        v69 = (uint64_t)v36;
LABEL_32:
        sub_22DD5C950(v69, type metadata accessor for BatchInteraction.ContentPolarity);
        return 1;
      }
    }
    else
    {
      sub_22DD506A0(v48, (uint64_t)v24, &qword_255DB5948);
      if (v52(v50, 1, v51) != 1)
      {
        v66 = v78;
        sub_22DD647B0(v50, v78, type metadata accessor for BatchInteraction.ContentPreview);
        sub_22DD63658((uint64_t)v24, v66);
        v68 = v67;
        sub_22DD5C950(v66, type metadata accessor for BatchInteraction.ContentPreview);
        sub_22DD5071C(v49, &qword_255DB5948);
        sub_22DD5C950((uint64_t)v24, type metadata accessor for BatchInteraction.ContentPreview);
        sub_22DD5071C(v48, &qword_255DB5948);
        if ((v68 & 1) != 0)
          goto LABEL_26;
LABEL_20:
        v55 = (uint64_t)v36;
        goto LABEL_34;
      }
      sub_22DD5071C(v49, &qword_255DB5948);
      sub_22DD5C950((uint64_t)v24, type metadata accessor for BatchInteraction.ContentPreview);
    }
    sub_22DD5071C(v48, &qword_255DB5D48);
    goto LABEL_20;
  }
  v38 = (uint64_t)v80;
  v39 = (uint64_t)v82;
  sub_22DD5C570((uint64_t)v36, (uint64_t)v30, type metadata accessor for BatchInteraction.ContentPolarity);
  v40 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v87 = v36;
    v41 = (uint64_t)v21;
    sub_22DD5CF7C(v37, (uint64_t)v21);
    v42 = (uint64_t)v18;
    sub_22DD5CF7C((uint64_t)&v30[v40], (uint64_t)v18);
    v43 = v79;
    sub_22DD5CF7C(v37 + v40, v79);
    v44 = v39;
    v45 = v39 + *(int *)(v85 + 48);
    sub_22DD5CF7C((uint64_t)v30, v39);
    sub_22DD506A0(v41, v45, &qword_255DB5948);
    v46 = v84;
    v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48);
    if (v47(v39, 1, v84) == 1)
    {
      if (v47(v45, 1, v46) == 1)
      {
        sub_22DD5071C(v39, &qword_255DB5948);
        goto LABEL_22;
      }
    }
    else
    {
      v53 = v39;
      v54 = v38;
      sub_22DD506A0(v53, v38, &qword_255DB5948);
      if (v47(v45, 1, v46) != 1)
      {
        v56 = v42;
        v57 = v78;
        sub_22DD647B0(v45, v78, type metadata accessor for BatchInteraction.ContentPreview);
        sub_22DD63658(v54, v57);
        v59 = v58;
        v60 = v57;
        v42 = v56;
        sub_22DD5C950(v60, type metadata accessor for BatchInteraction.ContentPreview);
        sub_22DD5C950(v54, type metadata accessor for BatchInteraction.ContentPreview);
        sub_22DD5071C(v44, &qword_255DB5948);
        if ((v59 & 1) != 0)
        {
LABEL_22:
          v61 = v42;
          v62 = v77;
          v63 = v77 + *(int *)(v85 + 48);
          sub_22DD506A0(v61, v77, &qword_255DB5948);
          sub_22DD506A0(v43, v63, &qword_255DB5948);
          if (v47(v62, 1, v46) == 1)
          {
            sub_22DD5071C(v43, &qword_255DB5948);
            sub_22DD5071C(v61, &qword_255DB5948);
            sub_22DD5071C(v41, &qword_255DB5948);
            v64 = v47(v63, 1, v46);
            v65 = (uint64_t)v87;
            if (v64 == 1)
            {
              sub_22DD5071C(v62, &qword_255DB5948);
LABEL_31:
              v69 = v65;
              goto LABEL_32;
            }
          }
          else
          {
            v70 = v76;
            sub_22DD506A0(v62, v76, &qword_255DB5948);
            v71 = v47(v63, 1, v46);
            v65 = (uint64_t)v87;
            if (v71 != 1)
            {
              v72 = v78;
              sub_22DD647B0(v63, v78, type metadata accessor for BatchInteraction.ContentPreview);
              sub_22DD63658(v70, v72);
              v74 = v73;
              sub_22DD5C950(v72, type metadata accessor for BatchInteraction.ContentPreview);
              sub_22DD5071C(v79, &qword_255DB5948);
              sub_22DD5071C(v61, &qword_255DB5948);
              sub_22DD5071C(v41, &qword_255DB5948);
              sub_22DD5C950(v70, type metadata accessor for BatchInteraction.ContentPreview);
              sub_22DD5071C(v62, &qword_255DB5948);
              if ((v74 & 1) != 0)
                goto LABEL_31;
              goto LABEL_33;
            }
            sub_22DD5071C(v79, &qword_255DB5948);
            sub_22DD5071C(v61, &qword_255DB5948);
            sub_22DD5071C(v41, &qword_255DB5948);
            sub_22DD5C950(v70, type metadata accessor for BatchInteraction.ContentPreview);
          }
          sub_22DD5071C(v62, &qword_255DB5D48);
LABEL_33:
          v55 = v65;
          goto LABEL_34;
        }
        goto LABEL_16;
      }
      sub_22DD5C950(v38, type metadata accessor for BatchInteraction.ContentPreview);
    }
    sub_22DD5071C(v44, &qword_255DB5D48);
LABEL_16:
    sub_22DD5071C(v43, &qword_255DB5948);
    sub_22DD5071C(v42, &qword_255DB5948);
    sub_22DD5071C(v41, &qword_255DB5948);
    v55 = (uint64_t)v87;
LABEL_34:
    sub_22DD5C950(v55, type metadata accessor for BatchInteraction.ContentPolarity);
    return 0;
  }
  sub_22DD5071C((uint64_t)&v30[v40], &qword_255DB5948);
LABEL_9:
  sub_22DD5071C((uint64_t)v30, &qword_255DB5948);
  sub_22DD5071C((uint64_t)v36, &qword_255DB5D50);
  return 0;
}

BOOL sub_22DD643FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char v29;
  _BYTE v31[4];
  int v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;

  v4 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5D38);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v31[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = &v31[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = &v31[-v16];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v31[-v18];
  if ((sub_22DE1E038() & 1) == 0)
    return 0;
  v34 = v7;
  v35 = v14;
  sub_22DD64774();
  v20 = type metadata accessor for BatchInteraction(0);
  if ((sub_22DE1F5F8() & 1) == 0)
    return 0;
  v33 = v10;
  v21 = *(int *)(v20 + 24);
  v22 = *(_QWORD **)(a2 + v21);
  if (*(_QWORD *)(a1 + v21))
  {
    if (!v22)
      return 0;
    swift_retain();
    v23 = (_QWORD *)swift_retain();
    v32 = sub_22DE05E90(v23, v22);
    swift_release();
    swift_release();
    if ((v32 & 1) == 0)
      return 0;
  }
  else if (v22)
  {
    return 0;
  }
  sub_22DD506A0(a1 + *(int *)(v20 + 28), (uint64_t)v19, qword_255DB5958);
  sub_22DD506A0(a2 + *(int *)(v20 + 28), (uint64_t)v17, qword_255DB5958);
  v24 = (uint64_t)v33;
  v25 = (uint64_t)&v33[*(int *)(v8 + 48)];
  sub_22DD506A0((uint64_t)v19, (uint64_t)v33, qword_255DB5958);
  sub_22DD506A0((uint64_t)v17, v25, qword_255DB5958);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v26(v24, 1, v4) == 1)
  {
    sub_22DD5071C((uint64_t)v17, qword_255DB5958);
    sub_22DD5071C((uint64_t)v19, qword_255DB5958);
    if (v26(v25, 1, v4) == 1)
    {
      sub_22DD5071C((uint64_t)v33, qword_255DB5958);
      return 1;
    }
    goto LABEL_13;
  }
  v27 = (uint64_t)v35;
  sub_22DD506A0(v24, (uint64_t)v35, qword_255DB5958);
  if (v26(v25, 1, v4) == 1)
  {
    sub_22DD5071C((uint64_t)v17, qword_255DB5958);
    sub_22DD5071C((uint64_t)v19, qword_255DB5958);
    sub_22DD5C950(v27, type metadata accessor for BatchInteraction.ContentPolarity);
LABEL_13:
    sub_22DD5071C((uint64_t)v33, &qword_255DB5D38);
    return 0;
  }
  v28 = (uint64_t)v34;
  sub_22DD647B0(v25, (uint64_t)v34, type metadata accessor for BatchInteraction.ContentPolarity);
  v29 = sub_22DD63B9C(v27, v28);
  sub_22DD5C950(v28, type metadata accessor for BatchInteraction.ContentPolarity);
  sub_22DD5071C((uint64_t)v17, qword_255DB5958);
  sub_22DD5071C((uint64_t)v19, qword_255DB5958);
  sub_22DD5C950(v27, type metadata accessor for BatchInteraction.ContentPolarity);
  sub_22DD5071C(v24, qword_255DB5958);
  return (v29 & 1) != 0;
}

unint64_t sub_22DD64774()
{
  unint64_t result;

  result = qword_255DB5D40;
  if (!qword_255DB5D40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255DB5D40);
  }
  return result;
}

uint64_t sub_22DD647B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for BatchInteraction.ContentPreview.CUContent.Mail(uint64_t a1)
{
  return sub_22DD6481C(a1, qword_255DB5E98);
}

uint64_t type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(uint64_t a1)
{
  return sub_22DD6481C(a1, qword_255DB5DF8);
}

uint64_t sub_22DD6481C(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22DD64850(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_22DD64894(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

_QWORD *sub_22DD648D8(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_22DE1E020();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = a3[7];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_22DE1DEB8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = a3[9];
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_22DE1E050();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v4;
}

uint64_t sub_22DD649FC(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = sub_22DE1E020();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[7];
  v7 = sub_22DE1DEB8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[9];
  v9 = sub_22DE1E050();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *sub_22DD64A9C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_22DE1E020();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_22DE1DEB8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_22DE1E050();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

_QWORD *sub_22DD64B94(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22DE1E020();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_22DE1DEB8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v14 = a3[9];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_22DE1E050();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

_OWORD *sub_22DD64C9C(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_22DE1E020();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_22DE1DEB8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_22DE1E050();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

_QWORD *sub_22DD64D68(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_22DE1E020();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_22DE1DEB8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_22DE1E050();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t sub_22DD64E4C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD64E58(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_22DE1E020();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      v12 = sub_22DE1DEB8();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[7];
      }
      else
      {
        v10 = sub_22DE1E050();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[9];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_22DD64F1C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD64F28(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_22DE1E020();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      v12 = sub_22DE1DEB8();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[7];
      }
      else
      {
        v10 = sub_22DE1E050();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[9];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_22DD64FE8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_22DE1E020();
  if (v1 <= 0x3F)
  {
    result = sub_22DE1DEB8();
    if (v2 <= 0x3F)
    {
      result = sub_22DE1E050();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for BatchInteraction.ContentPreview.CUContent(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for BatchInteraction.ContentPreview.CUContent()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for BatchInteraction.ContentPreview.CUContent(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BatchInteraction.ContentPreview.CUContent(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22DD65150(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_22DD65158(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for BatchInteraction.ContentPreview.CUContent()
{
  return &type metadata for BatchInteraction.ContentPreview.CUContent;
}

uint64_t *sub_22DD65174(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    v10 = a3[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    v13 = sub_22DE1E020();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v15 = a3[8];
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_22DE1E050();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    v19 = a3[9];
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_22DE1DEB8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return v4;
}

uint64_t sub_22DD652A0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  v5 = sub_22DE1E020();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[8];
  v7 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[9];
  v9 = sub_22DE1DEB8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *sub_22DD65348(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  v9 = a3[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  v12 = sub_22DE1E020();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  v14 = a3[8];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_22DE1E050();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  v18 = a3[9];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_22DE1DEB8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  return a1;
}

_QWORD *sub_22DD65448(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22DE1E020();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[8];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_22DE1E050();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[9];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_22DE1DEB8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

_OWORD *sub_22DD65564(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[7];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_22DE1E020();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[8];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_22DE1E050();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[9];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_22DE1DEB8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

_QWORD *sub_22DD65630(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a3[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_22DE1E020();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = a3[8];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_22DE1E050();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = a3[9];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_22DE1DEB8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t sub_22DD6571C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD65728(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_22DE1E020();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[7];
    }
    else
    {
      v12 = sub_22DE1E050();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[8];
      }
      else
      {
        v10 = sub_22DE1DEB8();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[9];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_22DD657EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD657F8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_22DE1E020();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[7];
    }
    else
    {
      v12 = sub_22DE1E050();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[8];
      }
      else
      {
        v10 = sub_22DE1DEB8();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[9];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_22DD658B8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_22DE1E020();
  if (v1 <= 0x3F)
  {
    result = sub_22DE1E050();
    if (v2 <= 0x3F)
    {
      result = sub_22DE1DEB8();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BatchInteraction.ContentPreview.Mode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22DD659B4 + 4 * byte_22DE2144B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22DD659E8 + 4 * byte_22DE21446[v4]))();
}

uint64_t sub_22DD659E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DD659F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DD659F8);
  return result;
}

uint64_t sub_22DD65A04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DD65A0CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22DD65A10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DD65A18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BatchInteraction.ContentPreview.Mode()
{
  return &type metadata for BatchInteraction.ContentPreview.Mode;
}

unint64_t sub_22DD65A38()
{
  unint64_t result;

  result = qword_255DB5EE0[0];
  if (!qword_255DB5EE0[0])
  {
    result = MEMORY[0x22E3207B0](&unk_22DE21708, &type metadata for BatchInteraction.ContentPreview.Mode);
    atomic_store(result, qword_255DB5EE0);
  }
  return result;
}

uint64_t sub_22DD65A88(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 24))(a1, a2 & 1);
}

uint64_t sub_22DD65A94(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 32))(a1, a2 & 1);
}

uint64_t sub_22DD65AA0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_22DD65AA8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_22DD65AB0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for BatchInteraction(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_22DD65B48(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  id v17;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_22DE1E050();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = (int *)type metadata accessor for BatchInteraction(0);
    v9 = v8[5];
    v10 = *(void **)((char *)a2 + v9);
    *(_QWORD *)((char *)v4 + v9) = v10;
    *(_QWORD *)((char *)v4 + v8[6]) = *(_QWORD *)((char *)a2 + v8[6]);
    v11 = v8[7];
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for BatchInteraction.ContentPolarity(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    v17 = v10;
    swift_retain();
    if (v16(v13, 1, v14))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v21 = type metadata accessor for BatchInteraction.ContentPreview(0);
      v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48);
      v23 = v22(v13, 1, v21);
      if (EnumCaseMultiPayload == 1)
      {
        if (!v23)
        {
          v26 = (char *)&loc_22DD65D00 + 4 * byte_22DE21756[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
        v29 = &v12[v28];
        v30 = &v13[v28];
        if (!v22(v30, 1, v21))
        {
          v32 = (char *)&loc_22DD65E60 + 4 * byte_22DE2175C[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        if (!v23)
        {
          v27 = (char *)&loc_22DD65D3C + 4 * byte_22DE21750[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v33 = a3[10];
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v34 = (_QWORD *)((char *)v4 + v33);
    v35 = (_QWORD *)((char *)a2 + v33);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = a3[12];
    *(_QWORD *)((char *)v4 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
    v38 = (char *)v4 + v37;
    v39 = (char *)a2 + v37;
    v40 = *(_QWORD *)v39;
    LOBYTE(v39) = v39[8];
    *(_QWORD *)v38 = v40;
    v38[8] = (char)v39;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_22DD66090(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t (*v9)(id *, uint64_t, uint64_t);
  int v10;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = type metadata accessor for BatchInteraction(0);

  swift_release();
  v4 = (id *)(a1 + *(int *)(v3 + 28));
  v5 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v8 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v9 = *(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    v10 = v9(v4, 1, v8);
    if (EnumCaseMultiPayload == 1)
    {
      if (!v10)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            swift_bridgeObjectRelease();
            break;
          case 2u:

            break;
          case 3u:

            swift_bridgeObjectRelease();
            break;
          case 5u:
            v12 = sub_22DE1DEB8();
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v4, v12);
            break;
          default:
            break;
        }
      }
      v4 = (id *)((char *)v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48));
      if (!v9(v4, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            goto LABEL_9;
          case 2u:
            goto LABEL_12;
          case 3u:
            goto LABEL_13;
          case 5u:
            goto LABEL_14;
          default:
            break;
        }
      }
    }
    else if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 4u:
LABEL_9:
          swift_bridgeObjectRelease();
          break;
        case 2u:
LABEL_12:

          break;
        case 3u:
LABEL_13:

          swift_bridgeObjectRelease();
          break;
        case 5u:
LABEL_14:
          v11 = sub_22DE1DEB8();
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v4, v11);
          break;
        default:
          break;
      }
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_22DD66300(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BatchInteraction(0);
  v8 = v7[5];
  v9 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  v10 = v7[7];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v9;
  swift_retain();
  if (v15(v12, 1, v13))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v19 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48);
    v21 = v20(v12, 1, v19);
    if (EnumCaseMultiPayload == 1)
    {
      if (!v21)
      {
        v24 = (char *)&loc_22DD66490 + 4 * byte_22DE2177A[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v27 = &v11[v26];
      v28 = &v12[v26];
      if (!v20(v28, 1, v19))
      {
        v30 = (char *)&loc_22DD665F0 + 4 * byte_22DE21780[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      if (!v21)
      {
        v25 = (char *)&loc_22DD664CC + 4 * byte_22DE21774[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v31 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v36 = a1 + v35;
  v37 = (uint64_t *)(a2 + v35);
  v38 = *v37;
  LOBYTE(v37) = *((_BYTE *)v37 + 8);
  *(_QWORD *)v36 = v38;
  *(_BYTE *)(v36 + 8) = (_BYTE)v37;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_22DD66820(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BatchInteraction(0);
  v8 = v7[5];
  v9 = *(void **)(a2 + v8);
  v10 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  v11 = v9;

  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  swift_retain();
  swift_release();
  v12 = v7[7];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v21 = type metadata accessor for BatchInteraction.ContentPreview(0);
      v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48);
      v23 = v22(v14, 1, v21);
      if (EnumCaseMultiPayload == 1)
      {
        if (!v23)
        {
          v32 = (char *)&loc_22DD66A6C + 4 * byte_22DE2178C[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        v37 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
        v38 = &v13[v37];
        v39 = &v14[v37];
        if (!v22(v39, 1, v21))
        {
          v41 = (char *)&loc_22DD66C94 + 4 * byte_22DE21792[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        if (!v23)
        {
          v34 = (char *)&loc_22DD66AD8 + 4 * byte_22DE21786[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_25;
    }
LABEL_8:
    v25 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_25;
  }
  if (v19)
  {
    sub_22DD5C950((uint64_t)v13, type metadata accessor for BatchInteraction.ContentPolarity);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_22DD5C950((uint64_t)v13, type metadata accessor for BatchInteraction.ContentPolarity);
    v26 = swift_getEnumCaseMultiPayload();
    v27 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48);
    v29 = v28(v14, 1, v27);
    if (v26 == 1)
    {
      if (!v29)
      {
        v35 = (char *)&loc_22DD66B1C + 4 * word_22DE217A4[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      v51 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v52 = &v13[v51];
      v53 = &v14[v51];
      if (!v28(v53, 1, v27))
      {
        v55 = (char *)&loc_22DD6701C + 4 * byte_22DE217B0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (!v29)
      {
        v36 = (char *)&loc_22DD66B60 + 4 * word_22DE21798[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_25:
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v42 = a3[10];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (_QWORD *)(a2 + v42);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46 = a3[12];
  v47 = a1 + v46;
  v48 = (uint64_t *)(a2 + v46);
  v49 = *v48;
  LOBYTE(v48) = *((_BYTE *)v48 + 8);
  *(_QWORD *)v47 = v49;
  *(_BYTE *)(v47 + 8) = (_BYTE)v48;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_22DD671E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BatchInteraction(0);
  *(_QWORD *)(a1 + v7[5]) = *(_QWORD *)(a2 + v7[5]);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  v8 = v7[7];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v15 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v33 = *(_QWORD *)(v15 - 8);
    v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
    v17 = v16(v10, 1, v15);
    if (EnumCaseMultiPayload == 1)
    {
      if (v17)
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v20 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v9, v10, v20);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v9, v10, *(_QWORD *)(v33 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v9, 0, 1, v15);
      }
      v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v23 = &v9[v22];
      v24 = &v10[v22];
      if (v16(v24, 1, v15))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v26 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
          swift_storeEnumTagMultiPayload();
          v27 = v33;
        }
        else
        {
          v27 = v33;
          memcpy(v23, v24, *(_QWORD *)(v33 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v15);
      }
    }
    else if (v17)
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        v21 = sub_22DE1DEB8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v9, v10, v21);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(_QWORD *)(v33 + 64));
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v9, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v28 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v28) = *(_OWORD *)(a2 + v28);
  v29 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
  return a1;
}

uint64_t sub_22DD6757C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BatchInteraction(0);
  v8 = v7[5];
  v9 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);

  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  swift_release();
  v10 = v7[7];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v19 = type metadata accessor for BatchInteraction.ContentPreview(0);
      v55 = *(_QWORD *)(v19 - 8);
      v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
      v21 = v20(v12, 1, v19);
      if (EnumCaseMultiPayload == 1)
      {
        if (v21)
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 5)
          {
            v31 = sub_22DE1DEB8();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v11, v12, v31);
            swift_storeEnumTagMultiPayload();
            v32 = v55;
          }
          else
          {
            v32 = v55;
            memcpy(v11, v12, *(_QWORD *)(v55 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v11, 0, 1, v19);
        }
        v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
        v37 = &v11[v36];
        v38 = &v12[v36];
        if (v20(v38, 1, v19))
        {
          v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 5)
          {
            v40 = sub_22DE1DEB8();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v37, v38, v40);
            swift_storeEnumTagMultiPayload();
            v41 = v55;
          }
          else
          {
            v41 = v55;
            memcpy(v37, v38, *(_QWORD *)(v55 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v37, 0, 1, v19);
        }
      }
      else if (v21)
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v34 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v11, v12, v34);
          swift_storeEnumTagMultiPayload();
          v35 = v55;
        }
        else
        {
          v35 = v55;
          memcpy(v11, v12, *(_QWORD *)(v55 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v11, 0, 1, v19);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_32;
    }
LABEL_8:
    v23 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_32;
  }
  if (v17)
  {
    sub_22DD5C950((uint64_t)v11, type metadata accessor for BatchInteraction.ContentPolarity);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_22DD5C950((uint64_t)v11, type metadata accessor for BatchInteraction.ContentPolarity);
    v24 = swift_getEnumCaseMultiPayload();
    v25 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    v28 = v27(v12, 1, v25);
    if (v24 == 1)
    {
      if (v28)
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v48 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v11, v12, v48);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v11, v12, *(_QWORD *)(v26 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v11, 0, 1, v25);
      }
      v50 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v51 = &v11[v50];
      v52 = &v12[v50];
      if (v27(v52, 1, v25))
      {
        v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v54 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v51, v52, v54);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v51, v52, *(_QWORD *)(v26 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v51, 0, 1, v25);
      }
    }
    else if (v28)
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        v49 = sub_22DE1DEB8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v11, v12, v49);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v11, v12, *(_QWORD *)(v26 + 64));
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v11, 0, 1, v25);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_32:
  v42 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v42) = *(_OWORD *)(a2 + v42);
  swift_release();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  v43 = a3[12];
  v44 = a1 + v43;
  v45 = (uint64_t *)(a2 + v43);
  v46 = *v45;
  LOBYTE(v45) = *((_BYTE *)v45 + 8);
  *(_QWORD *)v44 = v46;
  *(_BYTE *)(v44 + 8) = (_BYTE)v45;
  swift_release();
  return a1;
}

uint64_t sub_22DD67BEC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD67BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for BatchInteraction(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 40));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_22DD67C74()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD67C80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for BatchInteraction(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for PrebuiltPreviewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PrebuiltPreviewController);
}

uint64_t sub_22DD67D04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD67D38(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_BYTE *)(v1 + *(int *)(a1 + 48) + 8);
  v3 = swift_retain();
  v4 = sub_22DD83ECC(v3, v2);
  swift_release();
  return v4;
}

uint64_t sub_22DD67D80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  __int128 v10[2];

  v3 = v2;
  v5 = *(_QWORD *)(v3 + *(int *)(a1 + 44));
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v8 = v5 + 32;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_22DD6A8E0(v8, (uint64_t)v10);
      if ((sub_22DD67E74(v10, v3, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24)) & 1) != 0)
        break;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
      v8 += 40;
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_22DD5C160(v10, a2);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_7:
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DD67E74(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  v10 = type metadata accessor for PrebuiltPreviewController(0, a3, a4, v9);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 24))(a2, *(unsigned __int8 *)(a2 + *(int *)(v10 + 36)), v7, v8) & 1;
}

double sub_22DD67EFC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  double result;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_22DD67D80(a1, (uint64_t)v10);
  v5 = v11;
  if (v11)
  {
    v6 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    v7 = *(unsigned __int8 *)(v2 + *(int *)(a1 + 36));
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 32);
    *(_QWORD *)(a2 + 24) = swift_getAssociatedTypeWitness();
    *(_QWORD *)(a2 + 32) = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
    v8(v2, v7, v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    sub_22DD5071C((uint64_t)v10, qword_255DB6020);
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_22DD68000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t OpaqueTypeConformance2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  _QWORD v72[2];
  _QWORD v73[2];

  v3 = v2;
  v61 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5F68);
  MEMORY[0x24BDAC7A8](v5);
  v59 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5F70);
  v60 = *(_QWORD *)(v7 - 8);
  v8 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v58 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB5F78);
  v56 = *(_QWORD *)(a1 + 16);
  v10 = sub_22DE1EADC();
  v11 = sub_22DE1EADC();
  v12 = type metadata accessor for FullScreenPreviewController(255);
  v52 = v12;
  v53 = sub_22DD504A8(&qword_255DB5A00, type metadata accessor for FullScreenPreviewController, (uint64_t)&unk_22DE223F0);
  v66 = MEMORY[0x24BDF4780];
  v67 = v12;
  v68 = MEMORY[0x24BDF4760];
  v69 = v53;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v14 = *(_QWORD *)(a1 + 24);
  v73[0] = OpaqueTypeConformance2;
  v73[1] = v14;
  v15 = MEMORY[0x24BDEF3E0];
  v72[0] = MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v10, v73);
  v72[1] = v14;
  v48 = v11;
  MEMORY[0x22E3207B0](v15, v11, v72);
  v16 = sub_22DE1F058();
  v17 = *(_QWORD *)(v16 - 8);
  v49 = v16;
  v57 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v45 = (char *)&v44 - v18;
  v19 = type metadata accessor for FullScreenPreviewController.Content(255);
  v20 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB5F80);
  v51 = v20;
  v21 = MEMORY[0x22E3207B0](MEMORY[0x24BDF4700], v16);
  v22 = sub_22DD504A8(&qword_255DB5F88, type metadata accessor for FullScreenPreviewController.Content, (uint64_t)&unk_22DE223B8);
  v46 = v22;
  v23 = sub_22DD69708();
  v66 = v16;
  v67 = v19;
  v68 = v20;
  v69 = v21;
  v70 = v22;
  v71 = v23;
  v24 = v23;
  v54 = MEMORY[0x22E32075C](0, &v66, MEMORY[0x24BDF3660], 0);
  v55 = *(_QWORD *)(v54 - 8);
  v25 = MEMORY[0x24BDAC7A8](v54);
  v44 = (char *)&v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v50 = (uint64_t)&v44 - v27;
  v28 = swift_allocBox();
  v47 = v28;
  sub_22DD67D38(a1);
  swift_checkMetadataState();
  sub_22DE1F118();
  v62 = v56;
  v63 = v14;
  v64 = v3;
  v65 = v28;
  sub_22DE1E9EC();
  v29 = v45;
  sub_22DE1F04C();
  v30 = v58;
  sub_22DE1F10C();
  swift_getKeyPath();
  v31 = v59;
  sub_22DE1F124();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v30, v8);
  v32 = swift_checkMetadataState();
  v33 = v24;
  v34 = v46;
  v35 = v21;
  v36 = (uint64_t)v44;
  v37 = (uint64_t)v31;
  v38 = v49;
  v39 = v51;
  sub_22DE1EECC();
  sub_22DD5071C(v37, &qword_255DB5F68);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v29, v38);
  v66 = v38;
  v67 = v32;
  v68 = v39;
  v69 = v35;
  v70 = v34;
  v71 = v33;
  swift_getOpaqueTypeConformance2();
  v40 = v50;
  v41 = v54;
  sub_22DDDD0EC(v36, v54, v50);
  v42 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
  v42(v36, v41);
  sub_22DDDB6AC(v40, v41, v61);
  v42(v40, v41);
  return swift_release();
}

uint64_t sub_22DD68518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (**v44)(uint64_t);
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[2];
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[2];
  _QWORD v88[2];
  _QWORD v89[2];
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v69 = a2;
  v82 = a5;
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5F70);
  v71 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v70 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5F78);
  v74 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v73 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 - 8);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v67 - v16;
  v75 = v18;
  v19 = sub_22DE1EADC();
  v78 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v77 = (uint64_t)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v76 = (char *)&v67 - v22;
  v81 = sub_22DE1EADC();
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v24 = (char *)&v67 - v23;
  v26 = type metadata accessor for PrebuiltPreviewController(0, a3, a4, v25);
  sub_22DD67D80(v26, (uint64_t)&v90);
  v27 = v93;
  v28 = sub_22DD5071C((uint64_t)&v90, qword_255DB6020);
  if (v27)
  {
    v79 = a3;
    v68 = v24;
    sub_22DD67EFC(v26, (uint64_t)&v84);
    if (v86)
    {
      sub_22DD5C160(&v84, (uint64_t)&v90);
      v29 = __swift_project_boxed_opaque_existential_1(&v90, v93);
      MEMORY[0x24BDAC7A8](v29);
      (*(void (**)(char *))(v31 + 16))((char *)&v67 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
      *(_QWORD *)&v84 = sub_22DE1F064();
      v32 = swift_projectBox();
      v33 = v71;
      v34 = v70;
      v35 = v72;
      (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v70, v32, v72);
      sub_22DE1F100();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
      v36 = type metadata accessor for FullScreenPreviewController(0);
      v37 = sub_22DD504A8(&qword_255DB5A00, type metadata accessor for FullScreenPreviewController, (uint64_t)&unk_22DE223F0);
      v38 = (uint64_t)v73;
      v39 = MEMORY[0x24BDF4780];
      v40 = MEMORY[0x24BDF4760];
      sub_22DE1EDE8();
      swift_release();
      swift_release();
      *(_QWORD *)&v84 = v39;
      *((_QWORD *)&v84 + 1) = v36;
      v85 = v40;
      v86 = v37;
      swift_getOpaqueTypeConformance2();
      v41 = (uint64_t)v76;
      v42 = v75;
      sub_22DDDB6C4(v38, v75);
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v38, v42);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v90);
    }
    else
    {
      v53 = sub_22DD5071C((uint64_t)&v84, &qword_255DB6018);
      (*(void (**)(uint64_t))(a1 + *(int *)(v26 + 40)))(v53);
      v54 = v17;
      v55 = v79;
      sub_22DDDD0EC((uint64_t)v15, v79, (uint64_t)v17);
      v56 = *(void (**)(char *, uint64_t))(v12 + 8);
      v56(v15, v55);
      sub_22DDDB6AC((uint64_t)v17, v55, (uint64_t)v15);
      v57 = type metadata accessor for FullScreenPreviewController(255);
      v58 = sub_22DD504A8(&qword_255DB5A00, type metadata accessor for FullScreenPreviewController, (uint64_t)&unk_22DE223F0);
      v39 = MEMORY[0x24BDF4780];
      v90 = MEMORY[0x24BDF4780];
      v91 = v57;
      v40 = MEMORY[0x24BDF4760];
      v92 = MEMORY[0x24BDF4760];
      v93 = v58;
      swift_getOpaqueTypeConformance2();
      v41 = (uint64_t)v76;
      sub_22DDDB788((uint64_t)v15, v75, v55);
      v56(v15, v55);
      v56(v54, v55);
    }
    v50 = v81;
    v47 = type metadata accessor for FullScreenPreviewController(255);
    v59 = sub_22DD504A8(&qword_255DB5A00, type metadata accessor for FullScreenPreviewController, (uint64_t)&unk_22DE223F0);
    v90 = v39;
    v91 = v47;
    v92 = v40;
    v93 = v59;
    v83[0] = swift_getOpaqueTypeConformance2();
    v83[1] = a4;
    MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v19, v83);
    v60 = v39;
    v61 = v77;
    sub_22DDDB6AC(v41, v19, v77);
    v24 = v68;
    sub_22DDDB6C4(v61, v19);
    v62 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
    v63 = v61;
    v52 = v60;
    v62(v63, v19);
    v62(v41, v19);
    v49 = v82;
    v51 = v80;
  }
  else
  {
    v43 = MEMORY[0x24BDF4780];
    v44 = (void (**)(uint64_t))(a1 + *(int *)(v26 + 40));
    v45 = MEMORY[0x24BDF4760];
    (*v44)(v28);
    sub_22DDDD0EC((uint64_t)v15, a3, (uint64_t)v17);
    v46 = *(void (**)(char *, uint64_t))(v12 + 8);
    v46(v15, a3);
    sub_22DDDB6AC((uint64_t)v17, a3, (uint64_t)v15);
    v47 = type metadata accessor for FullScreenPreviewController(255);
    v48 = sub_22DD504A8(&qword_255DB5A00, type metadata accessor for FullScreenPreviewController, (uint64_t)&unk_22DE223F0);
    v90 = v43;
    v91 = v47;
    v92 = v45;
    v93 = v48;
    v89[0] = swift_getOpaqueTypeConformance2();
    v89[1] = a4;
    MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v19, v89);
    sub_22DDDB788((uint64_t)v15, v19, a3);
    v46(v15, a3);
    v46(v17, a3);
    v50 = v81;
    v49 = v82;
    v51 = v80;
    v40 = v45;
    v52 = MEMORY[0x24BDF4780];
  }
  type metadata accessor for FullScreenPreviewController(255);
  v64 = sub_22DD504A8(&qword_255DB5A00, type metadata accessor for FullScreenPreviewController, (uint64_t)&unk_22DE223F0);
  v90 = v52;
  v91 = v47;
  v92 = v40;
  v93 = v64;
  v88[0] = swift_getOpaqueTypeConformance2();
  v88[1] = a4;
  v65 = MEMORY[0x24BDEF3E0];
  v87[0] = MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v19, v88);
  v87[1] = a4;
  MEMORY[0x22E3207B0](v65, v50, v87);
  sub_22DDDB6AC((uint64_t)v24, v50, v49);
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v24, v50);
}

void sub_22DD68C9C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v33 = a1;
  v37 = a2;
  v38 = type metadata accessor for CUMessageOriginalContentFullScreenPreviewController(0);
  v2 = MEMORY[0x24BDAC7A8](v38);
  v19 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v22 = (char *)&v19 - v4;
  v27 = type metadata accessor for CUMailOriginalContentFullScreenPreviewController(0);
  v5 = MEMORY[0x24BDAC7A8](v27);
  MEMORY[0x24BDAC7A8](v5);
  v23 = (char *)&v19 - v6;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5FF0);
  MEMORY[0x24BDAC7A8](v24);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5FD0);
  MEMORY[0x24BDAC7A8](v31);
  v28 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FullPreviewAttributedText();
  MEMORY[0x24BDAC7A8](v8);
  v21 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_22DE1DEB8();
  v26 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5FF8);
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6000);
  MEMORY[0x24BDAC7A8](v29);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6008);
  MEMORY[0x24BDAC7A8](v12);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5FB0);
  MEMORY[0x24BDAC7A8](v30);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5FA0);
  MEMORY[0x24BDAC7A8](v35);
  v32 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FullScreenPreviewController.Content(0);
  sub_22DD5C570(v33 + *(int *)(v17 + 20), (uint64_t)v16, type metadata accessor for FullScreenPreviewController.Content.PreviewType);
  v18 = (char *)sub_22DD69034 + 4 * word_22DE217B6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22DD69034()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = v0[1];
  *v3 = *v0;
  v3[1] = v5;
  swift_storeEnumTagMultiPayload();
  sub_22DD6987C();
  sub_22DD504A8(&qword_255DB5FC0, (uint64_t (*)(uint64_t))type metadata accessor for FullPreviewAttributedText, (uint64_t)&unk_22DE2199C);
  sub_22DE1EAD0();
  sub_22DD506A0(v1, v2, &qword_255DB5FB0);
  swift_storeEnumTagMultiPayload();
  sub_22DD697F8();
  sub_22DD698FC();
  v6 = *(_QWORD *)(v4 - 168);
  sub_22DE1EAD0();
  sub_22DD5071C(v1, &qword_255DB5FB0);
  sub_22DD506A0(v6, *(_QWORD *)(v4 - 136), &qword_255DB5FA0);
  swift_storeEnumTagMultiPayload();
  sub_22DD6978C();
  sub_22DD504A8(&qword_255DB5FE8, type metadata accessor for CUMessageOriginalContentFullScreenPreviewController, (uint64_t)&unk_22DE24CD4);
  sub_22DE1EAD0();
  return sub_22DD5071C(v6, &qword_255DB5FA0);
}

unint64_t sub_22DD69708()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB5F90;
  if (!qword_255DB5F90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB5F80);
    v2[0] = sub_22DD6978C();
    v2[1] = sub_22DD504A8(&qword_255DB5FE8, type metadata accessor for CUMessageOriginalContentFullScreenPreviewController, (uint64_t)&unk_22DE24CD4);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB5F90);
  }
  return result;
}

unint64_t sub_22DD6978C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB5F98;
  if (!qword_255DB5F98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB5FA0);
    v2[0] = sub_22DD697F8();
    v2[1] = sub_22DD698FC();
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB5F98);
  }
  return result;
}

unint64_t sub_22DD697F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB5FA8;
  if (!qword_255DB5FA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB5FB0);
    v2[0] = sub_22DD6987C();
    v2[1] = sub_22DD504A8(&qword_255DB5FC0, (uint64_t (*)(uint64_t))type metadata accessor for FullPreviewAttributedText, (uint64_t)&unk_22DE2199C);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB5FA8);
  }
  return result;
}

unint64_t sub_22DD6987C()
{
  unint64_t result;

  result = qword_255DB5FB8;
  if (!qword_255DB5FB8)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE219EC, &type metadata for FullPreviewText);
    atomic_store(result, (unint64_t *)&qword_255DB5FB8);
  }
  return result;
}

uint64_t type metadata accessor for FullPreviewAttributedText()
{
  uint64_t result;

  result = qword_255DB6080;
  if (!qword_255DB6080)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_22DD698FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB5FC8;
  if (!qword_255DB5FC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB5FD0);
    v2[0] = sub_22DD69980();
    v2[1] = sub_22DD504A8(&qword_255DB5FE0, type metadata accessor for CUMailOriginalContentFullScreenPreviewController, (uint64_t)"=ض!8~");
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB5FC8);
  }
  return result;
}

unint64_t sub_22DD69980()
{
  unint64_t result;

  result = qword_255DB5FD8;
  if (!qword_255DB5FD8)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE2194C, &type metadata for FullPreviewImage);
    atomic_store(result, (unint64_t *)&qword_255DB5FD8);
  }
  return result;
}

uint64_t sub_22DD699C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_22DD68518(v1[4], v1[5], v1[2], v1[3], a1);
}

uint64_t sub_22DD699D8()
{
  sub_22DE1EC44();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB60C0);
  sub_22DD508B0(&qword_255DB60C8, &qword_255DB60C0, MEMORY[0x24BDF5428]);
  return sub_22DE1E4E8();
}

uint64_t sub_22DD69A60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_22DE1E8F0();
  sub_22DD50840();
  swift_bridgeObjectRetain();
  v3 = sub_22DE1ED94();
  v5 = v4;
  v7 = v6;
  v9 = v8 & 1;
  KeyPath = swift_getKeyPath();
  v11 = sub_22DE1ECBC();
  v12 = swift_getKeyPath();
  sub_22DD50088(v3, v5, v9);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22DD4FC6C(v3, v5, v9);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = KeyPath;
  *(_BYTE *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = v12;
  *(_QWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 88) = 0;
  *(_BYTE *)(a1 + 96) = 1;
  *(_QWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 112) = 1;
  sub_22DD50088(v3, v5, v9);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22DD4FC6C(v3, v5, v9);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

__n128 sub_22DD69C04@<Q0>(__n128 *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 result;
  uint64_t v19;

  v3 = sub_22DE1E2E4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  v10 = (uint64_t *)((char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB60B8) + 40));
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
  swift_storeEnumTagMultiPayload();
  a1[3].n128_u64[0] = (unint64_t)sub_22DD6B00C;
  a1[3].n128_u64[1] = v9;
  v11 = qword_255DB5400;
  swift_bridgeObjectRetain();
  if (v11 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v3, (uint64_t)qword_255DC3E20);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v12, v3);
  v13 = sub_22DE1EF98();
  __asm { FMOV            V0.2D, #16.0 }
  *a1 = result;
  a1[1].n128_u64[0] = 0;
  a1[1].n128_u64[1] = 0;
  a1[2].n128_u64[0] = v13;
  a1[2].n128_u8[8] = 0;
  return result;
}

uint64_t sub_22DD69D50()
{
  sub_22DE1EC44();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB60C0);
  sub_22DD508B0(&qword_255DB60C8, &qword_255DB60C0, MEMORY[0x24BDF5428]);
  return sub_22DE1E4E8();
}

uint64_t sub_22DD69DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v4 = sub_22DE1DEB8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22DE1E8F0();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v9 = sub_22DE1ED88();
  v11 = v10;
  v13 = v12;
  v15 = v14 & 1;
  KeyPath = swift_getKeyPath();
  v17 = sub_22DE1ECBC();
  v18 = swift_getKeyPath();
  sub_22DD50088(v9, v11, v15);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22DD4FC6C(v9, v11, v15);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(_QWORD *)(a2 + 24) = v9;
  *(_QWORD *)(a2 + 32) = v11;
  *(_BYTE *)(a2 + 40) = v15;
  *(_QWORD *)(a2 + 48) = v13;
  *(_QWORD *)(a2 + 56) = KeyPath;
  *(_BYTE *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = v18;
  *(_QWORD *)(a2 + 80) = v17;
  *(_QWORD *)(a2 + 88) = 0;
  *(_BYTE *)(a2 + 96) = 1;
  *(_QWORD *)(a2 + 104) = 0;
  *(_BYTE *)(a2 + 112) = 1;
  sub_22DD50088(v9, v11, v15);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22DD4FC6C(v9, v11, v15);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

__n128 sub_22DD69FA0@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 result;
  uint64_t v24;

  v4 = v2;
  v6 = sub_22DE1E2E4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD5C570(v4, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FullPreviewAttributedText);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  sub_22DD647B0((uint64_t)v13, v15 + v14, (uint64_t (*)(_QWORD))type metadata accessor for FullPreviewAttributedText);
  v16 = (uint64_t *)((char *)a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB60B8) + 40));
  *v16 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
  swift_storeEnumTagMultiPayload();
  a2[3].n128_u64[0] = (unint64_t)sub_22DD6B09C;
  a2[3].n128_u64[1] = v15;
  if (qword_255DB5400 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v6, (uint64_t)qword_255DC3E20);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v17, v6);
  v18 = sub_22DE1EF98();
  __asm { FMOV            V0.2D, #16.0 }
  *a2 = result;
  a2[1].n128_u64[0] = 0;
  a2[1].n128_u64[1] = 0;
  a2[2].n128_u64[0] = v18;
  a2[2].n128_u8[8] = 0;
  return result;
}

id sub_22DD6A14C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v24;
  id v25;

  v25 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB60D0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22DE1E2E4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255DB5400 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v10, (uint64_t)qword_255DC3E20);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  v15 = sub_22DE1EF98();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v25;
  *(double *)(v16 + 24) = a4;
  *(_QWORD *)(v16 + 32) = a2;
  v17 = (uint64_t *)&v9[*(int *)(v7 + 40)];
  *v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
  swift_storeEnumTagMultiPayload();
  *((_QWORD *)v9 + 6) = sub_22DD6B0E4;
  *((_QWORD *)v9 + 7) = v16;
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)v9 = _Q0;
  *((_QWORD *)v9 + 2) = 0;
  *((_QWORD *)v9 + 3) = 0;
  *((_QWORD *)v9 + 4) = v15;
  v9[40] = 1;
  sub_22DD6B0F4((uint64_t)v9, a3);
  swift_retain();
  return v25;
}

uint64_t sub_22DD6A300@<X0>(void *a1@<X0>, double a2@<X1>, uint64_t a3@<X8>, void *a4@<D0>)
{
  uint64_t v8;

  *(_QWORD *)a3 = sub_22DE1E9EC();
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB60D8);
  return sub_22DD6A36C(a1, a2, (_QWORD *)(a3 + *(int *)(v8 + 44)), a4);
}

uint64_t sub_22DD6A36C@<X0>(void *a1@<X0>, double a2@<X1>, _QWORD *a3@<X8>, void *a4@<D0>)
{
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  id v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  double v59;

  v53 = a3;
  v7 = sub_22DE1E6A4();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEC840];
  v46 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB60E0);
  v12 = *(_QWORD *)(v11 - 8);
  v47 = v11;
  v48 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB60E8);
  v16 = *(_QWORD *)(v15 - 8);
  v51 = v15;
  v52 = v16;
  MEMORY[0x24BDAC7A8](v15);
  v45 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB60F0);
  v50 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v49 = (char *)&v44 - v22;
  v54 = a4;
  v55 = a2;
  v23 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB60F8);
  sub_22DE1EFF8();
  v24 = v59 + 1.0;
  sub_22DE1F16C();
  v54 = v23;
  v55 = v24;
  v56 = v24;
  v57 = v25;
  v58 = v26;
  sub_22DE1E68C();
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v23;
  *(double *)(v27 + 24) = *(double *)&a4;
  *(double *)(v27 + 32) = a2;
  sub_22DD504A8(&qword_255DB6100, v8, MEMORY[0x24BDEC838]);
  sub_22DD504A8(&qword_255DB6108, MEMORY[0x24BDEC828], MEMORY[0x24BDEC830]);
  v28 = v23;
  swift_retain();
  sub_22DE1F0E8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v7);
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = v28;
  *(double *)(v29 + 24) = *(double *)&a4;
  *(double *)(v29 + 32) = a2;
  sub_22DD508B0(&qword_255DB6110, &qword_255DB60E0, MEMORY[0x24BDED570]);
  v30 = v28;
  swift_retain();
  v31 = v45;
  v32 = v47;
  sub_22DE1F0DC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v32);
  sub_22DE1E560();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6118);
  sub_22DD6B164();
  sub_22DD508B0(&qword_255DB6128, &qword_255DB60E8, MEMORY[0x24BDEC410]);
  v33 = v51;
  sub_22DE1EEE4();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v31, v33);

  v35 = v49;
  v34 = v50;
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v49, v21, v18);
  v36 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  v37 = v34;
  v36(v21, v35, v18);
  v38 = v53;
  *v53 = 0;
  *((_BYTE *)v38 + 8) = 1;
  v39 = (char *)v38;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6130);
  v36(&v39[*(int *)(v40 + 48)], v21, v18);
  v41 = &v39[*(int *)(v40 + 64)];
  *(_QWORD *)v41 = 0;
  v41[8] = 1;
  v42 = *(void (**)(char *, uint64_t))(v37 + 8);
  v42(v35, v18);
  return ((uint64_t (*)(char *, uint64_t))v42)(v21, v18);
}

uint64_t sub_22DD6A790()
{
  sub_22DE1E698();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB60F8);
  return sub_22DE1F004();
}

uint64_t sub_22DD6A7EC(double a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  id v8;

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a3;
  *(double *)(v7 + 24) = a1;
  *(_QWORD *)(v7 + 32) = a4;
  swift_retain();
  v8 = a3;
  sub_22DE1F148();
  sub_22DE1E674();
  swift_release();
  return swift_release();
}

id sub_22DD6A8A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DD6A14C(*(void **)v1, *(_QWORD *)(v1 + 16), a1, *(double *)(v1 + 8));
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_22DD6A8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x22E320714](a1, v6, a5);
}

uint64_t destroy for FullPreviewImage(id *a1)
{

  return swift_release();
}

_QWORD *_s8Feedback16FullPreviewImageVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FullPreviewImage(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for FullPreviewImage(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FullPreviewImage(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FullPreviewImage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FullPreviewImage()
{
  return &type metadata for FullPreviewImage;
}

uint64_t sub_22DD6AB10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22DE1DEB8();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_22DD6AB4C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22DE1DEB8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_22DD6AB80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22DE1DEB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_22DD6ABC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22DE1DEB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_22DD6AC08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22DE1DEB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_22DD6AC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22DE1DEB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_22DD6AC90()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD6AC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22DE1DEB8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_22DD6ACD8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD6ACE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22DE1DEB8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_22DD6AD24()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22DE1DEB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FullPreviewText(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for FullPreviewText()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for FullPreviewText(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for FullPreviewText(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FullPreviewText()
{
  return &type metadata for FullPreviewText;
}

uint64_t sub_22DD6AE40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD v7[2];
  _QWORD v8[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB5F78);
  v2 = sub_22DE1EADC();
  v3 = sub_22DE1EADC();
  type metadata accessor for FullScreenPreviewController(255);
  sub_22DD504A8(&qword_255DB5A00, type metadata accessor for FullScreenPreviewController, (uint64_t)&unk_22DE223F0);
  v8[0] = swift_getOpaqueTypeConformance2();
  v8[1] = v1;
  v4 = MEMORY[0x24BDEF3E0];
  v7[0] = MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v2, v8);
  v7[1] = v1;
  MEMORY[0x22E3207B0](v4, v3, v7);
  v6 = sub_22DE1F058();
  type metadata accessor for FullScreenPreviewController.Content(255);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB5F80);
  MEMORY[0x22E3207B0](MEMORY[0x24BDF4700], v6);
  sub_22DD504A8(&qword_255DB5F88, type metadata accessor for FullScreenPreviewController.Content, (uint64_t)&unk_22DE223B8);
  sub_22DD69708();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD6AFB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD6AFC8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD6AFD8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD6AFE8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22DD6B00C()
{
  return sub_22DD699D8();
}

uint64_t sub_22DD6B014@<X0>(uint64_t a1@<X8>)
{
  return sub_22DD69A60(a1);
}

uint64_t sub_22DD6B02C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FullPreviewAttributedText() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_22DE1DEB8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_deallocObject();
}

uint64_t sub_22DD6B09C()
{
  type metadata accessor for FullPreviewAttributedText();
  return sub_22DD69D50();
}

uint64_t sub_22DD6B0D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DD69DD8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_22DD6B0E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DD6A300(*(void **)(v1 + 16), *(double *)(v1 + 32), a1, *(void **)(v1 + 24));
}

uint64_t sub_22DD6B0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB60D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DD6B140()
{
  return sub_22DD6A790();
}

uint64_t sub_22DD6B154(uint64_t a1)
{
  uint64_t v1;

  return sub_22DD6A7EC(*(double *)(v1 + 24), a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 32));
}

unint64_t sub_22DD6B164()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB6120;
  if (!qword_255DB6120)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6118);
    v2[0] = sub_22DD5C3CC();
    v2[1] = MEMORY[0x24BDEBF50];
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB6120);
  }
  return result;
}

uint64_t objectdestroy_19Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD6B200()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB60F8);
  return sub_22DE1F004();
}

uint64_t sub_22DD6B250()
{
  uint64_t v0;

  return sub_22DDCF0BC(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_22DD6B268()
{
  return sub_22DD508B0(&qword_255DB6138, &qword_255DB60B8, (uint64_t)&unk_22DE25F78);
}

uint64_t sub_22DD6B294()
{
  return sub_22DD508B0(&qword_255DB6140, &qword_255DB60D0, (uint64_t)&unk_22DE25F78);
}

void sub_22DD6B2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t KeyPath;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = v2;
  v6 = sub_22DE1E410();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255DB53A8 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v6, (uint64_t)qword_255DC3D48);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  v11 = sub_22DE1E3F8();
  v12 = sub_22DE1F4F0();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v34 = v3;
    v14 = v13;
    v31 = swift_slowAlloc();
    v36 = v31;
    *(_DWORD *)v14 = 136315394;
    v33 = v10;
    v35 = sub_22DDA2E30(0xD000000000000015, 0x800000022DE29280, &v36);
    v32 = v7;
    sub_22DE1F628();
    v15 = 8 * (char)a2;
    v16 = *(_QWORD *)&aThumbsupthumbs[v15];
    *(_WORD *)(v14 + 12) = 2080;
    v35 = sub_22DDA2E30(v16, *(_QWORD *)((char *)&unk_22DE21D90 + v15), &v36);
    sub_22DE1F628();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22DD4B000, v11, v12, "%s - %s", (uint8_t *)v14, 0x16u);
    v17 = v31;
    swift_arrayDestroy();
    MEMORY[0x22E320870](v17, -1, -1);
    v18 = v14;
    v3 = v34;
    MEMORY[0x22E320870](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v6);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  if (a2 > 1u)
  {
    sub_22DD6C5A8(a1, a2);
    v22 = sub_22DE1E3F8();
    if (a2 == 2)
    {
      v23 = sub_22DE1F4E4();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        v25 = swift_slowAlloc();
        v36 = v25;
        *(_DWORD *)v24 = 136315138;
        v35 = sub_22DDA2E30(0xD000000000000015, 0x800000022DE29280, &v36);
        sub_22DE1F628();
        _os_log_impl(&dword_22DD4B000, v22, v23, "%s - action is feedback will not animate yet", v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E320870](v25, -1, -1);
        MEMORY[0x22E320870](v24, -1, -1);
      }

    }
    else
    {
      v26 = sub_22DE1F4F0();
      if (os_log_type_enabled(v22, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc();
        v28 = swift_slowAlloc();
        v36 = v28;
        *(_DWORD *)v27 = 136315138;
        v35 = sub_22DDA2E30(0xD000000000000015, 0x800000022DE29280, &v36);
        sub_22DE1F628();
        _os_log_impl(&dword_22DD4B000, v22, v26, "%s - action was not feedback will animate out", v27, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E320870](v28, -1, -1);
        MEMORY[0x22E320870](v27, -1, -1);
      }

      v29 = (_QWORD *)swift_allocObject();
      v29[3] = 0;
      v29[4] = 0;
      v29[2] = v3;
      swift_retain_n();
      sub_22DD78AEC((uint64_t)sub_22DD6E8A8, v3, (uint64_t)sub_22DD6EA68, (uint64_t)v29, 0.5);
      swift_release();
      swift_release();
    }
  }
  else
  {
    swift_getKeyPath();
    v36 = v3;
    sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
    sub_22DE1E068();
    swift_release();
    v19 = *(_QWORD *)(v3 + 40);
    if ((_BYTE)a2)
      v20 = -1.0;
    else
      v20 = 1.0;
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    *(&v30 - 2) = v19;
    *((double *)&v30 - 1) = v20;
    v36 = v19;
    sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
    swift_retain();
    sub_22DE1E05C();
    swift_release();
    swift_release();
    sub_22DD6D124(a1, a2);
  }
}

void sub_22DD6B8D0()
{
  qword_255DC3CB0 = 0x407E000000000000;
}

uint64_t sub_22DD6B8E0()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  return swift_retain();
}

uint64_t sub_22DD6B968(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 16) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_22DD6B9A0()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  return swift_retain();
}

uint64_t sub_22DD6BA28(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 24) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_22DD6BA60()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  return swift_retain();
}

uint64_t sub_22DD6BAE8(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 32) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_22DD6BB20()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  return swift_retain();
}

uint64_t sub_22DD6BBA8(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 40) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_22DD6BBE0()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  return swift_retain();
}

uint64_t sub_22DD6BC68(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 48) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_22DD6BCA0()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  return swift_retain();
}

uint64_t sub_22DD6BD28(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 56) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_22DD6BD60()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  return swift_retain();
}

uint64_t sub_22DD6BDE8(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 64) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_22DD6BE20()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t sub_22DD6BEA4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 72);
  return result;
}

uint64_t sub_22DD6BF30()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E05C();
  return swift_release();
}

uint64_t BatchController.__allocating_init(scoreController:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  BatchController.init(scoreController:)(a1);
  return v2;
}

_QWORD *BatchController.init(scoreController:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = (_QWORD *)v1;
  *(_BYTE *)(v1 + 72) = 4;
  sub_22DE1E08C();
  if (a1)
  {
    *(_QWORD *)(v1 + 24) = a1;
  }
  else
  {
    type metadata accessor for ScoreController();
    v4 = swift_allocObject();
    *(_WORD *)(v4 + 16) = 0;
    sub_22DE1E08C();
    if (qword_255DB5328 != -1)
      swift_once();
    v5 = qword_255DC3CE8;
    swift_getKeyPath();
    sub_22DD504A8((unint64_t *)&qword_255DB58A8, (uint64_t (*)(uint64_t))type metadata accessor for UserDefaultsController, (uint64_t)&unk_22DE257C0);
    sub_22DE1E068();
    swift_release();
    *(_QWORD *)(v4 + 24) = *(_QWORD *)(v5 + 24);
    *(_QWORD *)(v1 + 24) = v4;
  }
  type metadata accessor for DebugController();
  v6 = swift_allocObject();
  *(_WORD *)(v6 + 16) = 0;
  swift_retain();
  sub_22DE1E08C();
  v2[7] = v6;
  type metadata accessor for OnboardingController();
  swift_allocObject();
  v2[4] = sub_22DD932DC();
  type metadata accessor for StateController();
  v7 = swift_allocObject();
  sub_22DE1E08C();
  *(_BYTE *)(v7 + 80) = 0;
  *(_OWORD *)(v7 + 48) = 0u;
  *(_OWORD *)(v7 + 64) = 0u;
  *(_OWORD *)(v7 + 16) = 0u;
  *(_OWORD *)(v7 + 32) = 0u;
  v2[6] = v7;
  type metadata accessor for DonationController();
  v8 = (_QWORD *)swift_allocObject();
  swift_retain_n();
  sub_22DE1E08C();
  v9 = MEMORY[0x24BEE4AF8];
  v8[2] = MEMORY[0x24BEE4AF8];
  v8[3] = v9;
  v8[4] = v7;
  v2[2] = v8;
  type metadata accessor for SwipeController();
  v10 = swift_allocObject();
  swift_retain();
  sub_22DE1E08C();
  *(_QWORD *)(v10 + 16) = v7;
  *(_QWORD *)(v10 + 24) = 0;
  v2[5] = v10;
  type metadata accessor for FullScreenPreviewController(0);
  v11 = swift_allocObject();
  v12 = v11 + OBJC_IVAR____TtC8Feedback27FullScreenPreviewController__content;
  v13 = type metadata accessor for FullScreenPreviewController.Content(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  sub_22DE1E08C();
  swift_release();
  swift_release();
  v2[8] = v11;
  return v2;
}

uint64_t sub_22DD6C2BC()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6248, (uint64_t (*)(uint64_t))type metadata accessor for StateController, (uint64_t)&unk_22DE247FC);
  swift_retain();
  sub_22DE1E05C();
  swift_release();
  return swift_release();
}

uint64_t sub_22DD6C3D0(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[16];
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6258);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getKeyPath();
  v12 = a1;
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  swift_retain();
  sub_22DDCEBC8((uint64_t)v6);
  swift_release();
  sub_22DD5071C((uint64_t)v6, &qword_255DB6258);
  swift_getKeyPath();
  v12 = a1;
  sub_22DE1E068();
  swift_release();
  v7 = *(_QWORD *)(a1 + 48);
  swift_getKeyPath();
  v10 = v7;
  v11 = 0;
  v12 = v7;
  sub_22DD504A8((unint64_t *)&qword_255DB6248, (uint64_t (*)(uint64_t))type metadata accessor for StateController, (uint64_t)&unk_22DE247FC);
  swift_retain();
  sub_22DE1E05C();
  swift_release();
  result = swift_release();
  if (a2)
    return a2(result);
  return result;
}

void sub_22DD6C5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76[4];

  v3 = v2;
  v65 = a1;
  v5 = sub_22DE1E194();
  v63 = *(_QWORD *)(v5 - 8);
  v64 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v62 = (uint64_t *)((char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_22DE1E410();
  v66 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v68 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_22DE1E14C();
  v69 = *(_QWORD *)(v67 - 8);
  v9 = MEMORY[0x24BDAC7A8](v67);
  v60 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v70 = (uint64_t)&v59 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6258);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for BatchInteraction(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v71 = (uint64_t)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255DB53A8 != -1)
    swift_once();
  v72 = __swift_project_value_buffer(v7, (uint64_t)qword_255DC3D48);
  v18 = sub_22DE1E3F8();
  v19 = sub_22DE1F4F0();
  v20 = os_log_type_enabled(v18, v19);
  v73 = a2;
  v61 = v7;
  if (v20)
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v76[0] = v22;
    *(_DWORD *)v21 = 136315138;
    v75 = sub_22DDA2E30(0xD000000000000011, 0x800000022DE292C0, v76);
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v18, v19, "%s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v22, -1, -1);
    MEMORY[0x22E320870](v21, -1, -1);
  }

  swift_getKeyPath();
  v76[0] = v3;
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  v23 = *(_QWORD *)(v3 + 16);
  swift_getKeyPath();
  v76[0] = v23;
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  swift_retain();
  sub_22DE1E068();
  swift_release();
  swift_beginAccess();
  v24 = *(_QWORD *)(v23 + 24);
  if (*(_QWORD *)(v24 + 16))
  {
    sub_22DD6E960(v24 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), (uint64_t)v14);
    v25 = 0;
  }
  else
  {
    v25 = 1;
  }
  v26 = v73;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, v25, 1, v15);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_22DD5071C((uint64_t)v14, &qword_255DB6258);
    v27 = sub_22DE1E3F8();
    v28 = sub_22DE1F4FC();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v29 = 0;
      _os_log_impl(&dword_22DD4B000, v27, v28, "Donation controller has no donation.", v29, 2u);
      MEMORY[0x22E320870](v29, -1, -1);
    }

    return;
  }
  sub_22DD6E9A4((uint64_t)v14, v71);
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  *(&v59 - 2) = v3;
  *((_BYTE *)&v59 - 8) = v26;
  v75 = v3;
  sub_22DE1E05C();
  swift_release();
  if (v26 == 3)
  {
    v31 = *MEMORY[0x24BE30EA8];
    v32 = v69;
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 104);
  }
  else
  {
    v59 = 0;
    v34 = sub_22DE1E3F8();
    v35 = sub_22DE1F4F0();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v75 = v37;
      *(_DWORD *)v36 = 136315138;
      v74 = sub_22DDA2E30(0xD000000000000011, 0x800000022DE292C0, &v75);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v34, v35, "%s - will increment score", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v37, -1, -1);
      MEMORY[0x22E320870](v36, -1, -1);
    }

    v32 = v69;
    swift_getKeyPath();
    v75 = v3;
    sub_22DE1E068();
    swift_release();
    v38 = *(_QWORD *)(v3 + 24);
    swift_retain_n();
    v39 = sub_22DE1F148();
    MEMORY[0x24BDAC7A8](v39);
    *(&v59 - 2) = (uint64_t)sub_22DD6E9E8;
    *(&v59 - 1) = v38;
    sub_22DE1E674();
    swift_release_n();
    swift_release();
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 104);
    v26 = v73;
    if ((_BYTE)v73)
    {
      v40 = v60;
      v41 = v67;
      v33(v60, *MEMORY[0x24BE30E80], v67);
      (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v70, v40, v41);
      v42 = v66;
      if (v26 == 1)
      {
        swift_getKeyPath();
        v75 = v3;
        sub_22DE1E068();
        swift_release();
        swift_retain();
        sub_22DDCED80(v71);
        swift_release();
      }
      goto LABEL_21;
    }
    v31 = *MEMORY[0x24BE30EB0];
  }
  v43 = v60;
  v41 = v67;
  v33(v60, v31, v67);
  v42 = v66;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v70, v43, v41);
LABEL_21:
  v44 = v68;
  v45 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v68, v72, v61);
  v46 = sub_22DE1E3F8();
  v47 = sub_22DE1F4E4();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = swift_slowAlloc();
    v49 = swift_slowAlloc();
    v75 = v49;
    *(_DWORD *)v48 = 136315394;
    v74 = sub_22DDA2E30(0xD000000000000011, 0x800000022DE292C0, &v75);
    sub_22DE1F628();
    v50 = 8 * v26;
    v51 = *(_QWORD *)&aThumbsupthumbs[v50];
    *(_WORD *)(v48 + 12) = 2080;
    v74 = sub_22DDA2E30(v51, *(_QWORD *)((char *)&unk_22DE21D90 + v50), &v75);
    v41 = v67;
    v32 = v69;
    sub_22DE1F628();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22DD4B000, v46, v47, "%s - will commit action %s on evaluation controller", (uint8_t *)v48, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v49, -1, -1);
    MEMORY[0x22E320870](v48, -1, -1);

    (*(void (**)(char *, uint64_t))(v66 + 8))(v68, v45);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v45);
  }
  v52 = v71;
  v53 = *(void **)(v71 + *(int *)(v15 + 20));
  v55 = (uint64_t)v62;
  v54 = v63;
  *v62 = v53;
  v56 = v64;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v54 + 104))(v55, *MEMORY[0x24BE30F00], v64);
  v57 = v53;
  v58 = v70;
  sub_22DDE3944(v70, v55, v26 == 2, 0);
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v55, v56);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v58, v41);
  sub_22DD6E9F0(v52);
}

uint64_t sub_22DD6CF94()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  swift_retain();
  sub_22DDCEF68();
  swift_release();
  swift_getKeyPath();
  sub_22DE1E068();
  swift_release();
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6248, (uint64_t (*)(uint64_t))type metadata accessor for StateController, (uint64_t)&unk_22DE247FC);
  swift_retain();
  sub_22DE1E05C();
  swift_release();
  return swift_release();
}

uint64_t sub_22DD6D124(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;

  v3 = v2;
  v6 = sub_22DE1E410();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v33 - v11;
  if (qword_255DB53A8 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v6, (uint64_t)qword_255DC3D48);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v37 = v13;
  v38 = v14;
  ((void (*)(char *))v14)(v12);
  v15 = sub_22DE1E3F8();
  v16 = sub_22DE1F4F0();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v34 = swift_slowAlloc();
    v40 = v34;
    *(_DWORD *)v17 = 136315394;
    v36 = v10;
    v39 = sub_22DDA2E30(0xD000000000000015, 0x800000022DE292A0, &v40);
    v35 = v3;
    sub_22DE1F628();
    v18 = 8 * (char)a2;
    v19 = *(_QWORD *)&aThumbsupthumbs[v18];
    *(_WORD *)(v17 + 12) = 2080;
    v20 = *(_QWORD *)((char *)&unk_22DE21D90 + v18);
    v33 = v7;
    v39 = sub_22DDA2E30(v19, v20, &v40);
    v3 = v35;
    sub_22DE1F628();
    v10 = v36;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22DD4B000, v15, v16, "%s - %s", (uint8_t *)v17, 0x16u);
    v21 = v34;
    swift_arrayDestroy();
    MEMORY[0x22E320870](v21, -1, -1);
    MEMORY[0x22E320870](v17, -1, -1);

    v22 = *(void (**)(char *, uint64_t))(v33 + 8);
  }
  else
  {

    v22 = *(void (**)(char *, uint64_t))(v7 + 8);
  }
  v22(v12, v6);
  if (a2 >= 2u)
  {
    v38(v10, v37, v6);
    v24 = sub_22DE1E3F8();
    v25 = sub_22DE1F4E4();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v28 = a2;
      v29 = v27;
      *(_DWORD *)v26 = 136315138;
      v40 = v27;
      if (v28 == 3)
        v30 = 1885956979;
      else
        v30 = 0x6B63616264656566;
      if (v28 == 3)
        v31 = 0xE400000000000000;
      else
        v31 = 0xE800000000000000;
      v39 = sub_22DDA2E30(v30, v31, &v40);
      sub_22DE1F628();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22DD4B000, v24, v25, "Cannot swipe on %s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v29, -1, -1);
      MEMORY[0x22E320870](v26, -1, -1);

      v32 = v10;
    }
    else
    {

      v32 = v10;
    }
    return ((uint64_t (*)(char *, uint64_t))v22)(v32, v6);
  }
  else
  {
    sub_22DD6C5A8(a1, a2);
    swift_retain_n();
    sub_22DD78AEC((uint64_t)sub_22DD6E940, v3, (uint64_t)sub_22DD6E948, v3, 0.5);
    return swift_release_n();
  }
}

uint64_t sub_22DD6D554()
{
  void *v0;
  void *v1;
  id v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  uint64_t KeyPath;
  CGRect v13;

  sub_22DD70A00();
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_screen);

    if (v2)
    {
      objc_msgSend(v2, sel_bounds);
      v4 = v3;
      v6 = v5;
      v8 = v7;
      v10 = v9;

      v13.origin.x = v4;
      v13.origin.y = v6;
      v13.size.width = v8;
      v13.size.height = v10;
      CGRectGetWidth(v13);
    }
  }
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
  swift_retain();
  sub_22DE1E068();
  swift_release();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  sub_22DE1E05C();
  swift_release();
  return swift_release();
}

uint64_t sub_22DD6D73C()
{
  swift_retain();
  sub_22DE1F148();
  sub_22DE1E674();
  swift_release();
  return swift_release();
}

uint64_t sub_22DD6D7B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE v7[16];
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6258);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getKeyPath();
  v10 = a1;
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  v5 = *(_QWORD *)(a1 + 40);
  swift_getKeyPath();
  v8 = v5;
  v9 = 0;
  v10 = v5;
  sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
  swift_retain();
  sub_22DE1E05C();
  swift_release();
  swift_release();
  swift_getKeyPath();
  v10 = a1;
  sub_22DE1E068();
  swift_release();
  swift_retain();
  sub_22DDCEBC8((uint64_t)v4);
  swift_release();
  return sub_22DD5071C((uint64_t)v4, &qword_255DB6258);
}

void sub_22DD6D974(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;

  v2 = v1;
  if (qword_255DB53A8 != -1)
    swift_once();
  v4 = sub_22DE1E410();
  __swift_project_value_buffer(v4, (uint64_t)qword_255DC3D48);
  v5 = sub_22DE1E3F8();
  v6 = sub_22DE1F4F0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v17 = v8;
    *(_DWORD *)v7 = 136315138;
    sub_22DDA2E30(0x657461756C617665, 0xED0000293A6E6F28, &v17);
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v5, v6, "%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v8, -1, -1);
    MEMORY[0x22E320870](v7, -1, -1);
  }

  swift_getKeyPath();
  v17 = v2;
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  v9 = *(_QWORD *)(v2 + 40);
  swift_getKeyPath();
  v17 = v9;
  sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
  swift_retain();
  sub_22DE1E068();
  swift_release();
  v10 = *(double *)(v9 + 24);
  swift_release();
  if (fabs(v10) >= 128.0)
  {
    swift_getKeyPath();
    v17 = v2;
    sub_22DE1E068();
    swift_release();
    v15 = *(_QWORD *)(v2 + 40);
    swift_getKeyPath();
    v17 = v15;
    swift_retain();
    sub_22DE1E068();
    swift_release();
    v16 = *(double *)(v15 + 24);
    swift_release();
    sub_22DD6D124(a1, v16 <= 0.0);
  }
  else
  {
    v11 = sub_22DE1E3F8();
    v12 = sub_22DE1F4F0();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v17 = v14;
      *(_DWORD *)v13 = 136315138;
      sub_22DDA2E30(0x657461756C617665, 0xED0000293A6E6F28, &v17);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v11, v12, "%s - Swipe controller has not met target, will return early.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v14, -1, -1);
      MEMORY[0x22E320870](v13, -1, -1);
    }

  }
}

uint64_t BatchController.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC8Feedback15BatchController___observationRegistrar;
  v2 = sub_22DE1E098();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t BatchController.__deallocating_deinit()
{
  BatchController.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_22DD6DE28()
{
  return type metadata accessor for BatchController();
}

uint64_t type metadata accessor for BatchController()
{
  uint64_t result;

  result = qword_255DB6178;
  if (!qword_255DB6178)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22DD6DE6C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22DE1E098();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for BatchController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BatchController.__allocating_init(scoreController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

_QWORD *sub_22DD6DF28()
{
  uint64_t v0;

  return sub_22DDAB5F8(*(_QWORD *)(v0 + 16), *(__int128 **)(v0 + 24));
}

void sub_22DD6DF68(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t KeyPath;
  id v14;
  uint64_t v15;
  int v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint8_t *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint8_t *v36;
  uint64_t v37;
  _QWORD *v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  _QWORD *v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v2;
  v50 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6250);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255DB53A8 != -1)
    swift_once();
  v8 = sub_22DE1E410();
  __swift_project_value_buffer(v8, (uint64_t)qword_255DC3D48);
  v9 = sub_22DE1E3F8();
  v10 = sub_22DE1F4F0();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v52 = v12;
    *(_DWORD *)v11 = 136315138;
    v51 = sub_22DDA2E30(0xD00000000000001DLL, 0x800000022DE29260, &v52);
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v9, v10, "%s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v12, -1, -1);
    MEMORY[0x22E320870](v11, -1, -1);
  }

  swift_getKeyPath();
  v52 = v3;
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  if (*(_BYTE *)(v3 + 72) != 2)
  {
    if ((a2 & 1) == 0)
    {
      v14 = v50;
      goto LABEL_19;
    }
LABEL_12:
    v22 = v50;
    v23 = v50;
    v24 = v22;
    v25 = v22;
    v26 = sub_22DE1E3F8();
    v27 = sub_22DE1F4FC();
    if (!os_log_type_enabled(v26, v27))
    {
      v35 = v50;
      sub_22DD6E88C(v50);
      sub_22DD6E88C(v35);

      return;
    }
    v28 = swift_slowAlloc();
    v29 = (_QWORD *)swift_slowAlloc();
    v30 = swift_slowAlloc();
    v52 = v30;
    *(_DWORD *)v28 = 136315394;
    v51 = sub_22DDA2E30(0xD00000000000001DLL, 0x800000022DE29260, &v52);
    sub_22DE1F628();
    *(_WORD *)(v28 + 12) = 2112;
    v31 = v50;
    v32 = v50;
    v33 = _swift_stdlib_bridgeErrorToNSError();
    v51 = v33;
    sub_22DE1F628();
    *v29 = v33;
    sub_22DD6E88C(v31);
    sub_22DD6E88C(v31);
    _os_log_impl(&dword_22DD4B000, v26, v27, "%s - Failed to record evaluation: %@", (uint8_t *)v28, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8160);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v29, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v30, -1, -1);
    MEMORY[0x22E320870](v28, -1, -1);

    v34 = v31;
    goto LABEL_21;
  }
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  *(&v48 - 2) = v3;
  *((_BYTE *)&v48 - 8) = 4;
  v52 = v3;
  sub_22DE1E05C();
  swift_release();
  if ((a2 & 1) != 0)
    goto LABEL_12;
  v14 = v50;
  sub_22DE1E128();
  v15 = sub_22DE1E11C();
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v7, 1, v15);
  sub_22DD5071C((uint64_t)v7, &qword_255DB6250);
  v17 = sub_22DE1E3F8();
  v18 = sub_22DE1F4F0();
  v19 = os_log_type_enabled(v17, v18);
  if (v16 == 1)
  {
    if (v19)
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v52 = v21;
      *(_DWORD *)v20 = 136315138;
      v51 = sub_22DDA2E30(0xD00000000000001DLL, 0x800000022DE29260, &v52);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v17, v18, "%s - last action was feedback with no form response, will NOT animate card out", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v21, -1, -1);
      MEMORY[0x22E320870](v20, -1, -1);
    }
    sub_22DD6E88C(v50);

  }
  else
  {
    if (v19)
    {
      LODWORD(v49) = a2;
      v36 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v52 = v37;
      *(_DWORD *)v36 = 136315138;
      v51 = sub_22DDA2E30(0xD00000000000001DLL, 0x800000022DE29260, &v52);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v17, v18, "%s - last action was feedback with a form response, will animate card out", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v37, -1, -1);
      MEMORY[0x22E320870](v36, -1, -1);
    }

    v38 = (_QWORD *)swift_allocObject();
    v38[3] = 0;
    v38[4] = 0;
    v38[2] = v3;
    swift_retain_n();
    sub_22DD78AEC((uint64_t)sub_22DD6E8A8, v3, (uint64_t)sub_22DD6E8B4, (uint64_t)v38, 0.5);
    swift_release();
    swift_release();
    sub_22DD6E88C(v50);
  }
LABEL_19:
  v39 = v14;
  v40 = sub_22DE1E3F8();
  v41 = sub_22DE1F4E4();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = swift_slowAlloc();
    v43 = (_QWORD *)swift_slowAlloc();
    v49 = swift_slowAlloc();
    v52 = v49;
    *(_DWORD *)v42 = 136315394;
    v51 = sub_22DDA2E30(0xD00000000000001DLL, 0x800000022DE29260, &v52);
    sub_22DE1F628();
    *(_WORD *)(v42 + 12) = 2112;
    v44 = v50;
    v51 = (uint64_t)v39;
    v45 = v39;
    sub_22DE1F628();
    *v43 = v39;
    sub_22DD6E88C(v44);
    sub_22DD6E88C(v44);
    _os_log_impl(&dword_22DD4B000, v40, v41, "%s - Successfully saved evaluation: %@", (uint8_t *)v42, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8160);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v43, -1, -1);
    v46 = v49;
    swift_arrayDestroy();
    MEMORY[0x22E320870](v46, -1, -1);
    MEMORY[0x22E320870](v42, -1, -1);

    v34 = v44;
LABEL_21:
    sub_22DD6E88C(v34);
    return;
  }
  v47 = v50;
  sub_22DD6E88C(v50);
  sub_22DD6E88C(v47);

}

void sub_22DD6E88C(id a1)
{

}

void sub_22DD6E898()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 72) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_22DD6E8A8()
{
  return sub_22DD6C2BC();
}

uint64_t sub_22DD6E8B4()
{
  uint64_t v0;

  return sub_22DD6C3D0(*(_QWORD *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_22DD6E8C8()
{
  uint64_t v0;

  return sub_22DDAB6DC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD6E924()
{
  uint64_t v0;

  return sub_22DD7D384(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_22DD6E940()
{
  return sub_22DD6D554();
}

uint64_t sub_22DD6E948()
{
  return sub_22DD6D73C();
}

uint64_t sub_22DD6E950()
{
  uint64_t v0;

  return sub_22DD6D7B4(v0);
}

uint64_t sub_22DD6E960(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BatchInteraction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DD6E9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BatchInteraction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DD6E9E8()
{
  uint64_t v0;

  return sub_22DD6F598(v0);
}

uint64_t sub_22DD6E9F0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BatchInteraction(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22DD6EA2C()
{
  return sub_22DD6E8C8();
}

uint64_t sub_22DD6EA40()
{
  return sub_22DD6E924();
}

uint64_t sub_22DD6EA54()
{
  return sub_22DD6B250();
}

void sub_22DD6EA6C()
{
  sub_22DD6E898();
}

uint64_t ScoreController.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  *(_WORD *)(v0 + 16) = 0;
  sub_22DE1E08C();
  if (qword_255DB5328 != -1)
    swift_once();
  v1 = qword_255DC3CE8;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58A8, (uint64_t (*)(uint64_t))type metadata accessor for UserDefaultsController, (uint64_t)&unk_22DE257C0);
  sub_22DE1E068();
  swift_release();
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 + 24);
  return v0;
}

uint64_t sub_22DD6EB60()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E068();
  swift_release();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_22DD6EBE4()
{
  uint64_t v0;
  uint64_t result;
  double v2;
  uint64_t v3;
  double v4;

  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E068();
  result = swift_release();
  v2 = floor(sqrt((double)*(uint64_t *)(v0 + 24) * 0.5));
  if ((~*(_QWORD *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v3 = (uint64_t)v2;
  if ((uint64_t)v2 >= 99)
    v3 = 99;
  v4 = floor((double)v3 * (double)v3 + (double)v3 * (double)v3);
  if ((~*(_QWORD *)&v4 & 0x7FF0000000000000) == 0)
    goto LABEL_13;
  if (v4 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v4 < 9.22337204e18)
  {
    swift_getKeyPath();
    sub_22DE1E068();
    swift_release();
    return sub_22DD6F458();
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_22DD6ED7C()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E068();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_22DD6EE00(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

uint64_t sub_22DD6EE08(uint64_t result, char a2)
{
  *(_BYTE *)(result + 17) = a2;
  return result;
}

uint64_t sub_22DD6EE10()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E068();
  swift_release();
  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_22DD6EE94@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E068();
  result = swift_release();
  *a2 = *(_QWORD *)(v3 + 24);
  return result;
}

uint64_t sub_22DD6EF20()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E05C();
  return swift_release();
}

uint64_t sub_22DD6EFC4(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;

  *(_QWORD *)(a1 + 24) = a2;
  if (qword_255DB5328 != -1)
    swift_once();
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E068();
  swift_release();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  sub_22DD504A8((unint64_t *)&qword_255DB58A8, (uint64_t (*)(uint64_t))type metadata accessor for UserDefaultsController, (uint64_t)&unk_22DE257C0);
  sub_22DE1E05C();
  return swift_release();
}

uint64_t ScoreController.init()()
{
  uint64_t v0;
  uint64_t v1;

  *(_WORD *)(v0 + 16) = 0;
  sub_22DE1E08C();
  if (qword_255DB5328 != -1)
    swift_once();
  v1 = qword_255DC3CE8;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58A8, (uint64_t (*)(uint64_t))type metadata accessor for UserDefaultsController, (uint64_t)&unk_22DE257C0);
  sub_22DE1E068();
  swift_release();
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 + 24);
  return v0;
}

uint64_t sub_22DD6F1EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t result;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for AnalyticsEvent();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getKeyPath();
  v9 = v0;
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E068();
  result = swift_release();
  v5 = floor(sqrt((double)*(uint64_t *)(v0 + 24) * 0.5));
  if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if ((uint64_t)v5 >= 99)
    v6 = 99;
  else
    v6 = (uint64_t)v5;
  swift_getKeyPath();
  v9 = v0;
  sub_22DE1E068();
  swift_release();
  v7 = *(_QWORD *)(v0 + 24);
  *v3 = v6;
  v3[1] = v7;
  swift_storeEnumTagMultiPayload();
  sub_22DE01A1C();
  sub_22DD6F9A8((uint64_t)v3);
  sub_22DE1F13C();
  sub_22DE1E674();
  return swift_release();
}

uint64_t sub_22DD6F3A4()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E05C();
  return swift_release();
}

uint64_t sub_22DD6F458()
{
  uint64_t v0;
  uint64_t result;
  double v2;
  uint64_t v3;
  double v4;
  double v5;

  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E068();
  result = swift_release();
  v2 = floor(sqrt((double)*(uint64_t *)(v0 + 24) * 0.5));
  if ((~*(_QWORD *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v3 = (uint64_t)v2;
  if ((uint64_t)v2 >= 99)
    v3 = 99;
  v4 = (double)(v3 + 1) * (double)(v3 + 1);
  v5 = floor(v4 + v4);
  if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) == 0)
    goto LABEL_13;
  if (v5 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v5 < 9.22337204e18)
    return (uint64_t)v5;
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_22DD6F598(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t KeyPath;

  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E068();
  swift_release();
  v2 = *(_QWORD *)(a1 + 24);
  if (__OFADD__(v2, 1))
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 + 1 >= sub_22DD6F458())
    sub_22DD6F1EC();
  swift_getKeyPath();
  sub_22DE1E068();
  swift_release();
  swift_getKeyPath();
  sub_22DE1E080();
  swift_release();
  v3 = *(_QWORD *)(a1 + 24);
  v4 = __OFADD__(v3, 1);
  v5 = v3 + 1;
  if (v4)
    goto LABEL_8;
  *(_QWORD *)(a1 + 24) = v5;
  if (qword_255DB5328 != -1)
LABEL_9:
    swift_once();
  swift_getKeyPath();
  sub_22DE1E068();
  swift_release();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  sub_22DD504A8((unint64_t *)&qword_255DB58A8, (uint64_t (*)(uint64_t))type metadata accessor for UserDefaultsController, (uint64_t)&unk_22DE257C0);
  sub_22DE1E05C();
  swift_release();
  swift_getKeyPath();
  sub_22DE1E074();
  return swift_release();
}

uint64_t ScoreController.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Feedback15ScoreController___observationRegistrar;
  v2 = sub_22DE1E098();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ScoreController.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Feedback15ScoreController___observationRegistrar;
  v2 = sub_22DE1E098();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_22DD6F898()
{
  return type metadata accessor for ScoreController();
}

uint64_t type metadata accessor for ScoreController()
{
  uint64_t result;

  result = qword_255DB62A0;
  if (!qword_255DB62A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22DD6F8DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22DE1E098();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ScoreController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScoreController.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_22DD6F980()
{
  uint64_t v0;

  return sub_22DD6EFC4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_22DD6F9A8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AnalyticsEvent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22DD6F9E4()
{
  return sub_22DD6F3A4();
}

void sub_22DD6F9FC()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 17) = *(_BYTE *)(v0 + 24);
}

void sub_22DD6FA0C()
{
  sub_22DD56ADC();
}

uint64_t destroy for CardStack()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for CardStack(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CardStack(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CardStack(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_release();
  v5 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v5;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for CardStack()
{
  return &type metadata for CardStack;
}

uint64_t sub_22DD6FB64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD6FB74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  double v18;
  char *v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v30 = a1;
  v36 = a3;
  v37 = sub_22DE1EB78();
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v34 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6388);
  MEMORY[0x24BDAC7A8](v32);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6378);
  MEMORY[0x24BDAC7A8](v31);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6360);
  MEMORY[0x24BDAC7A8](v29);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v39 = a2;
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  v11 = *(_QWORD *)(a2 + 16);
  swift_getKeyPath();
  v39 = v11;
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  swift_retain();
  sub_22DE1E068();
  swift_release();
  swift_beginAccess();
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 24) + 16);
  swift_release();
  v13 = v30;
  v14 = (double)v30;
  v15 = (double)v12;
  swift_getKeyPath();
  v38 = a2;
  sub_22DE1E068();
  swift_release();
  swift_retain();
  v16 = sub_22DD7CFD4();
  v17 = v29;
  swift_release();
  sub_22DD5C570(v33, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for EvaluationCard);
  *(double *)&v6[*(int *)(v32 + 36)] = v15 - v14 + 10.0 + v15 - v14 + 10.0;
  v18 = v14 - v16;
  sub_22DD506A0((uint64_t)v6, (uint64_t)v8, &qword_255DB6388);
  v19 = &v8[*(int *)(v31 + 36)];
  *(_QWORD *)v19 = 0;
  *((double *)v19 + 1) = v18 * 20.0;
  sub_22DD5071C((uint64_t)v6, &qword_255DB6388);
  v20 = v18 * -0.08 + 1.0;
  sub_22DE1F16C();
  v22 = v21;
  v24 = v23;
  sub_22DD506A0((uint64_t)v8, (uint64_t)v10, &qword_255DB6378);
  v25 = &v10[*(int *)(v17 + 36)];
  *(double *)v25 = v20;
  *((_QWORD *)v25 + 1) = 0x3FF0000000000000;
  *((_QWORD *)v25 + 2) = v22;
  *((_QWORD *)v25 + 3) = v24;
  sub_22DD5071C((uint64_t)v8, &qword_255DB6378);
  v26 = v34;
  if (v13)
    sub_22DE1EB54();
  else
    sub_22DE1EB6C();
  sub_22DD70840(&qword_255DB6368, &qword_255DB6360, sub_22DD7081C, MEMORY[0x24BDEBF50]);
  sub_22DE1EE78();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v37);
  return sub_22DD5071C((uint64_t)v10, &qword_255DB6360);
}

uint64_t sub_22DD6FF58(uint64_t a1, char a2, uint64_t a3, char a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = a2 & 1;
  v8 = swift_retain();
  sub_22DD83CC8(v8, v7);
  swift_release();
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  swift_retain();
  swift_release();
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  sub_22DE1E068();
  swift_release();
  swift_beginAccess();
  v9 = swift_bridgeObjectRetain();
  sub_22DD70460(v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_BYTE *)(v10 + 24) = v7;
  *(_QWORD *)(v10 + 32) = a3;
  *(_BYTE *)(v10 + 40) = a4 & 1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_22DD70780;
  *(_QWORD *)(v11 + 24) = v10;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6348);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6350);
  sub_22DD508B0(&qword_255DB6358, &qword_255DB6348, MEMORY[0x24BEE12D8]);
  sub_22DD504A8(&qword_255DB5D30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6360);
  sub_22DD70840(&qword_255DB6368, &qword_255DB6360, sub_22DD7081C, MEMORY[0x24BDEBF50]);
  swift_getOpaqueTypeConformance2();
  return sub_22DE1F0C4();
}

uint64_t sub_22DD70208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W3>, uint64_t a4@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[4];

  v7 = a3 & 1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB63B0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for EvaluationCard();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD5C570(a2, (uint64_t)v13, type metadata accessor for BatchInteraction);
  v14 = &v13[*(int *)(v11 + 20)];
  type metadata accessor for BatchController();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  *(_QWORD *)v14 = sub_22DE1E554();
  v14[8] = v15 & 1;
  v16 = &v13[*(int *)(v11 + 24)];
  v17 = sub_22DE1E194();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
  v18 = objc_allocWithZone((Class)type metadata accessor for FBKEvaluationController(0));
  v23[1] = FBKEvaluationController.init(subject:)((uint64_t)v10);
  sub_22DE1EFEC();
  v19 = v23[3];
  *(_QWORD *)v16 = v23[2];
  *((_QWORD *)v16 + 1) = v19;
  v20 = swift_retain();
  v21 = sub_22DD83CC8(v20, v7);
  swift_release();
  sub_22DD6FB74(a1, v21, a4);
  swift_release();
  return sub_22DD70944((uint64_t)v13);
}

uint64_t sub_22DD703D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v3 = *(_QWORD *)v1;
  v4 = *(_BYTE *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_BYTE *)(v1 + 24);
  *a1 = sub_22DE1F130();
  a1[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6340);
  return sub_22DD6FF58(v3, v4, v5, v6);
}

size_t sub_22DD70460(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  BOOL v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t result;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB63A8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v45 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v49 = (_QWORD *)((char *)v44 - v6);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v44 - v7;
  v50 = v9;
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v48 = v11;
  v44[0] = a1;
  if (v11)
  {
    v46 = (v10 + 32) & ~v10;
    v13 = MEMORY[0x24BEE4AF8] + v46;
    v14 = 0;
    v15 = 0;
    v16 = *(_QWORD *)(type metadata accessor for BatchInteraction(0) - 8);
    v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v47 = *(_QWORD *)(v16 + 72);
    v44[1] = v10 | 7;
    v18 = v12;
    v19 = v45;
    while (1)
    {
      v21 = (uint64_t)&v19[*(int *)(v2 + 48)];
      sub_22DD5C570(v17, v21, type metadata accessor for BatchInteraction);
      v22 = v49;
      v23 = (uint64_t)v49 + *(int *)(v2 + 48);
      *v49 = v14;
      sub_22DD6E9A4(v21, v23);
      v24 = (uint64_t)v22;
      v25 = (uint64_t)v8;
      result = sub_22DD70988(v24, (uint64_t)v8);
      if (v15)
      {
        v12 = v18;
        v20 = __OFSUB__(v15--, 1);
        if (v20)
          goto LABEL_27;
      }
      else
      {
        v27 = v18[3];
        if ((uint64_t)((v27 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        v28 = v27 & 0xFFFFFFFFFFFFFFFELL;
        if (v28 <= 1)
          v29 = 1;
        else
          v29 = v28;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255DB63B8);
        v30 = *(_QWORD *)(v50 + 72);
        v31 = v46;
        v12 = (_QWORD *)swift_allocObject();
        result = _swift_stdlib_malloc_size(v12);
        if (!v30)
          goto LABEL_34;
        v32 = result - v31;
        if (result - v31 == 0x8000000000000000 && v30 == -1)
          goto LABEL_35;
        v34 = v2;
        v35 = v32 / v30;
        v12[2] = v29;
        v12[3] = 2 * (v32 / v30);
        v36 = (char *)v12 + v31;
        v37 = v18[3] >> 1;
        v38 = v37 * v30;
        if (v18[2])
        {
          if (v12 < v18 || v36 >= (char *)v18 + v46 + v38)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v12 != v18)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v18[2] = 0;
        }
        v13 = (uint64_t)&v36[v38];
        v40 = (v35 & 0x7FFFFFFFFFFFFFFFLL) - v37;
        swift_release();
        v2 = v34;
        v19 = v45;
        v20 = __OFSUB__(v40, 1);
        v15 = v40 - 1;
        if (v20)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v14;
      v8 = (char *)v25;
      sub_22DD70988(v25, v13);
      v13 += *(_QWORD *)(v50 + 72);
      v17 += v47;
      v18 = v12;
      if (v48 == v14)
        goto LABEL_29;
    }
  }
  v15 = 0;
LABEL_29:
  result = swift_bridgeObjectRelease();
  v41 = v12[3];
  if (v41 >= 2)
  {
    v42 = v41 >> 1;
    v20 = __OFSUB__(v42, v15);
    v43 = v42 - v15;
    if (v20)
      goto LABEL_36;
    v12[2] = v43;
  }
  return (size_t)v12;
}

uint64_t sub_22DD70754()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD70780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_22DD70208(a1, a2, *(_BYTE *)(v3 + 24), a3);
}

uint64_t sub_22DD707A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD707C4(char *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, char *);
  uint64_t v4;
  uint64_t v5;

  v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  v4 = *(_QWORD *)a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB63A8);
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

uint64_t sub_22DD7081C()
{
  return sub_22DD70840(&qword_255DB6370, &qword_255DB6378, (uint64_t (*)(void))sub_22DD708A8, MEMORY[0x24BDEC438]);
}

uint64_t sub_22DD70840(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22DD708A8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB6380;
  if (!qword_255DB6380)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6388);
    v2[0] = sub_22DD504A8(&qword_255DB6390, (uint64_t (*)(uint64_t))type metadata accessor for EvaluationCard, (uint64_t)&unk_22DE22F58);
    v2[1] = sub_22DD508B0(&qword_255DB6398, &qword_255DB63A0, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB6380);
  }
  return result;
}

uint64_t sub_22DD70944(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EvaluationCard();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22DD70988(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB63A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DD709D4()
{
  return sub_22DD508B0(&qword_255DB63C0, &qword_255DB63C8, MEMORY[0x24BDF4750]);
}

void sub_22DD70A00()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v1 = objc_msgSend(v0, sel_connectedScenes);

  sub_22DD70E78(0, &qword_255DB63D0);
  sub_22DD70E18();
  v2 = sub_22DE1F49C();

  if ((v2 & 0xC000000000000001) != 0)
  {
    sub_22DE1F6A0();
    sub_22DE1F4A8();
    v2 = v30;
    v28 = v31;
    v3 = v32;
    v4 = v33;
    v5 = v34;
  }
  else
  {
    v4 = 0;
    v6 = -1 << *(_BYTE *)(v2 + 32);
    v28 = v2 + 56;
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(v2 + 56);
  }
  v26 = (unint64_t)(v3 + 64) >> 6;
  v27 = v2;
  while (1)
  {
    if (v2 < 0)
    {
      if (!sub_22DE1F6DC())
        goto LABEL_45;
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v12 = v29;
      swift_unknownObjectRelease();
      v11 = v4;
      v9 = v5;
      if (!v29)
        goto LABEL_45;
    }
    else
    {
      if (v5)
      {
        v9 = (v5 - 1) & v5;
        v10 = __clz(__rbit64(v5)) | (v4 << 6);
        v11 = v4;
      }
      else
      {
        v13 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_47;
        if (v13 >= v26)
          goto LABEL_45;
        v14 = *(_QWORD *)(v28 + 8 * v13);
        v11 = v4 + 1;
        if (!v14)
        {
          v11 = v4 + 2;
          if (v4 + 2 >= v26)
            goto LABEL_45;
          v14 = *(_QWORD *)(v28 + 8 * v11);
          if (!v14)
          {
            v11 = v4 + 3;
            if (v4 + 3 >= v26)
              goto LABEL_45;
            v14 = *(_QWORD *)(v28 + 8 * v11);
            if (!v14)
            {
              v11 = v4 + 4;
              if (v4 + 4 >= v26)
                goto LABEL_45;
              v14 = *(_QWORD *)(v28 + 8 * v11);
              if (!v14)
              {
                v15 = v4 + 5;
                while (v26 != v15)
                {
                  v14 = *(_QWORD *)(v28 + 8 * v15++);
                  if (v14)
                  {
                    v11 = v15 - 1;
                    goto LABEL_29;
                  }
                }
LABEL_45:
                sub_22DD70E70();
                return;
              }
            }
          }
        }
LABEL_29:
        v9 = (v14 - 1) & v14;
        v10 = __clz(__rbit64(v14)) + (v11 << 6);
      }
      v12 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v10);
      if (!v12)
        goto LABEL_45;
    }
    objc_opt_self();
    v16 = swift_dynamicCastObjCClass();
    if (v16)
      break;
LABEL_9:

    v4 = v11;
    v5 = v9;
  }
  v17 = (void *)v16;
  v18 = v12;
  v19 = objc_msgSend(v17, sel_windows);
  sub_22DD70E78(0, qword_255DB63E0);
  v20 = sub_22DE1F3D0();

  if (!(v20 >> 62))
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v21)
      goto LABEL_34;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v21 = sub_22DE1F7D8();
  swift_bridgeObjectRelease();
  if (!v21)
  {
LABEL_8:

    swift_bridgeObjectRelease();
    v2 = v27;
    goto LABEL_9;
  }
LABEL_34:
  v22 = 4;
  while (1)
  {
    v23 = (v20 & 0xC000000000000001) != 0
        ? (id)MEMORY[0x22E31FFC4](v22 - 4, v20)
        : *(id *)(v20 + 8 * v22);
    v24 = v23;
    v25 = v22 - 3;
    if (__OFADD__(v22 - 4, 1))
      break;
    if (objc_msgSend(v23, sel_isKeyWindow))
    {
      swift_bridgeObjectRelease();

      goto LABEL_45;
    }

    ++v22;
    if (v25 == v21)
      goto LABEL_8;
  }
  __break(1u);
LABEL_47:
  __break(1u);
}

unint64_t sub_22DD70E18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DB63D8;
  if (!qword_255DB63D8)
  {
    v1 = sub_22DD70E78(255, &qword_255DB63D0);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_255DB63D8);
  }
  return result;
}

uint64_t sub_22DD70E70()
{
  return swift_release();
}

uint64_t sub_22DD70E78(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t *sub_22DD70EB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_22DE1E14C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)v4 + v8;
    v11 = (char *)a2 + v8;
    v12 = *(_QWORD *)v11;
    LOBYTE(v11) = v11[8];
    *(_QWORD *)v10 = v12;
    v10[8] = (char)v11;
    v13 = (char *)v4 + v9;
    v14 = (char *)a2 + v9;
    v15 = *(_QWORD *)v14;
    LOBYTE(v14) = v14[8];
    *(_QWORD *)v13 = v15;
    v13[8] = (char)v14;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_22DD70F68(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22DE1E14C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  return swift_release();
}

uint64_t sub_22DD70FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;

  v6 = sub_22DE1E14C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = (uint64_t *)(a2 + v7);
  v11 = *v10;
  LOBYTE(v10) = *((_BYTE *)v10 + 8);
  *(_QWORD *)v9 = v11;
  *(_BYTE *)(v9 + 8) = (_BYTE)v10;
  v12 = a1 + v8;
  v13 = (uint64_t *)(a2 + v8);
  v14 = *v13;
  LOBYTE(v13) = *((_BYTE *)v13 + 8);
  *(_QWORD *)v12 = v14;
  *(_BYTE *)(v12 + 8) = (_BYTE)v13;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_22DD71048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;

  v6 = sub_22DE1E14C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  LOBYTE(v9) = *((_BYTE *)v9 + 8);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(v8 + 8) = (_BYTE)v9;
  swift_retain();
  swift_release();
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = (uint64_t *)(a2 + v11);
  v14 = *v13;
  LOBYTE(v13) = *((_BYTE *)v13 + 8);
  *(_QWORD *)v12 = v14;
  *(_BYTE *)(v12 + 8) = (_BYTE)v13;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_22DD710F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_22DE1E14C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  return a1;
}

uint64_t sub_22DD71174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;

  v6 = sub_22DE1E14C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  LOBYTE(v9) = *((_BYTE *)v9 + 8);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(v8 + 8) = (_BYTE)v9;
  swift_release();
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = (uint64_t *)(a2 + v11);
  v14 = *v13;
  LOBYTE(v13) = *((_BYTE *)v13 + 8);
  *(_QWORD *)v12 = v14;
  *(_BYTE *)(v12 + 8) = (_BYTE)v13;
  swift_release();
  return a1;
}

uint64_t sub_22DD7120C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD71218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_22DE1E14C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_22DD71294()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD712A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_22DE1E14C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  return result;
}

uint64_t type metadata accessor for ActionIndicator()
{
  uint64_t result;

  result = qword_255DB6440;
  if (!qword_255DB6440)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22DD71358()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22DE1E14C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22DD713CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD713DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  void (*v21)(_QWORD);
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  char v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  char *v43;
  unsigned int v44;
  void (*v45)(_QWORD);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v1 = type metadata accessor for ActionIndicator();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v51 = (uint64_t)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v52 = (char *)&v43 - v4;
  v5 = sub_22DE1E14C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v50 = (char *)&v43 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v43 - v12;
  sub_22DE1E620();
  v47 = v0 + *(int *)(v1 + 24);
  v14 = *(_BYTE *)(v47 + 8);
  v15 = swift_retain();
  v16 = sub_22DD83EE8(v15, v14);
  swift_release();
  swift_getKeyPath();
  v55 = v16;
  v17 = sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
  sub_22DE1E068();
  v18 = v6;
  swift_release();
  v19 = *(double *)(v16 + 24);
  swift_release();
  v20 = *MEMORY[0x24BE30EB0];
  v21 = *(void (**)(_QWORD))(v6 + 104);
  if (fabs(v19) > 16.0)
  {
    v48 = v1;
    v49 = v6;
    v45 = v21;
    v46 = v17;
    v43 = v9;
    v44 = v20;
    v21(v13);
    sub_22DD504A8(&qword_255DB64E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE30EB8], MEMORY[0x24BE30ED8]);
    sub_22DE1F3AC();
    sub_22DE1F3AC();
    v22 = v5;
    if (v55 == v53 && v56 == v54)
      v23 = 1;
    else
      v23 = sub_22DE1F8E0();
    v24 = v48;
    v25 = (uint64_t)v52;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26 = *(void (**)(char *, uint64_t))(v49 + 8);
    v26(v13, v22);
    sub_22DD726AC(v0, v25);
    if ((v23 & 1) != 0)
    {
      v27 = *(_BYTE *)(v25 + *(int *)(v24 + 24) + 8);
      v28 = swift_retain();
      v29 = sub_22DD83EE8(v28, v27);
      swift_release();
      swift_getKeyPath();
      v55 = v29;
      sub_22DE1E068();
      swift_release();
      v30 = *(double *)(v29 + 24);
      swift_release();
      sub_22DD72874(v25);
      if (v30 > 16.0)
      {
LABEL_8:
        v31 = *(_BYTE *)(v47 + 8);
        v32 = swift_retain();
        v33 = sub_22DD83EE8(v32, v31);
        swift_release();
        swift_getKeyPath();
        v55 = v33;
        sub_22DE1E068();
        swift_release();
        return swift_release();
      }
    }
    else
    {
      sub_22DD72874(v25);
    }
    v35 = v50;
    ((void (*)(char *, _QWORD, uint64_t))v45)(v50, *MEMORY[0x24BE30E80], v22);
    sub_22DE1F3AC();
    sub_22DE1F3AC();
    if (v55 == v53 && v56 == v54)
    {
      swift_bridgeObjectRelease_n();
      v5 = v22;
      v26(v35, v22);
      v36 = v51;
      sub_22DD726AC(v0, v51);
      v37 = v49;
    }
    else
    {
      v38 = sub_22DE1F8E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = v22;
      v26(v35, v22);
      v36 = v51;
      sub_22DD726AC(v0, v51);
      v37 = v49;
      if ((v38 & 1) == 0)
      {
        sub_22DD72874(v36);
        v9 = v43;
        v20 = v44;
        v21 = v45;
        v18 = v37;
        goto LABEL_17;
      }
    }
    v39 = *(_BYTE *)(v36 + *(int *)(v48 + 24) + 8);
    v40 = swift_retain();
    v41 = sub_22DD83EE8(v40, v39);
    swift_release();
    swift_getKeyPath();
    v55 = v41;
    sub_22DE1E068();
    swift_release();
    v42 = *(double *)(v41 + 24);
    swift_release();
    sub_22DD72874(v36);
    v9 = v43;
    v20 = v44;
    v21 = v45;
    v18 = v37;
    if (v42 < 16.0)
      goto LABEL_8;
  }
LABEL_17:
  ((void (*)(char *, uint64_t, uint64_t))v21)(v9, v20, v5);
  sub_22DD504A8(&qword_255DB64E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE30EB8], MEMORY[0x24BE30ED8]);
  sub_22DE1F3AC();
  sub_22DE1F3AC();
  if (v55 == v53 && v56 == v54)
  {
    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v9, v5);
  }
  else
  {
    sub_22DE1F8E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v9, v5);
  }
}

uint64_t sub_22DD71AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  double v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;

  v123 = a1;
  v124 = a3;
  v121 = sub_22DE1E2E4();
  v114 = *(_QWORD *)(v121 - 8);
  MEMORY[0x24BDAC7A8](v121);
  v120 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB55D8);
  MEMORY[0x24BDAC7A8](v5);
  v106 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6480);
  MEMORY[0x24BDAC7A8](v100);
  v8 = (uint64_t *)((char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v98 = sub_22DE1F19C();
  v97 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v10 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_22DE1F184();
  v95 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v12 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_22DE1E758();
  v94 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  v14 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6488);
  MEMORY[0x24BDAC7A8](v92);
  v16 = (uint64_t *)((char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6490);
  MEMORY[0x24BDAC7A8](v99);
  v91 = (char *)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6498);
  MEMORY[0x24BDAC7A8](v102);
  v107 = (uint64_t)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB64A0);
  MEMORY[0x24BDAC7A8](v103);
  v109 = (uint64_t)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB64A8);
  MEMORY[0x24BDAC7A8](v105);
  v108 = (uint64_t)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB64B0);
  MEMORY[0x24BDAC7A8](v104);
  v111 = (uint64_t)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB64B8);
  MEMORY[0x24BDAC7A8](v110);
  v115 = (uint64_t)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB64C0);
  MEMORY[0x24BDAC7A8](v112);
  v113 = (uint64_t)&v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB64C8);
  MEMORY[0x24BDAC7A8](v116);
  v119 = (uint64_t)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB64D0);
  MEMORY[0x24BDAC7A8](v117);
  v118 = (uint64_t)&v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a2 + *(int *)(type metadata accessor for ActionIndicator() + 24);
  v27 = *(_BYTE *)(v26 + 8);
  v28 = swift_retain();
  v29 = sub_22DD83EE8(v28, v27);
  swift_release();
  swift_getKeyPath();
  v125 = v29;
  v101 = sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
  sub_22DE1E068();
  swift_release();
  swift_release();
  v122 = a2;
  _s8Feedback23FBKEvaluationControllerC15systemImageName3for11hasResponseSS0A7Service14FBKSEvaluationC6ActionO_SbtFZ_0(a2);
  v30 = sub_22DE1EFBC();
  sub_22DE1F178();
  sub_22DE1F190();
  sub_22DD504A8(&qword_255DB64D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF5618], MEMORY[0x24BDF5608]);
  v31 = v93;
  sub_22DE1E74C();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v10, v98);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v12, v31);
  KeyPath = swift_getKeyPath();
  v33 = v94;
  v34 = v96;
  (*(void (**)(char *, char *, uint64_t))(v94 + 16))((char *)v8 + *(int *)(v100 + 28), v14, v96);
  *v8 = KeyPath;
  sub_22DD506A0((uint64_t)v8, (uint64_t)v16 + *(int *)(v92 + 36), &qword_255DB6480);
  *v16 = v30;
  swift_retain();
  sub_22DD5071C((uint64_t)v8, &qword_255DB6480);
  v35 = v14;
  v36 = (uint64_t)v91;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v34);
  swift_release();
  v37 = sub_22DE1ECD4();
  v38 = (uint64_t)v106;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v106, 1, 1, v37);
  v39 = sub_22DE1ECF8();
  sub_22DD5071C(v38, &qword_255DB55D8);
  v40 = swift_getKeyPath();
  sub_22DD506A0((uint64_t)v16, v36, &qword_255DB6488);
  v41 = (uint64_t *)(v36 + *(int *)(v99 + 36));
  *v41 = v40;
  v41[1] = v39;
  sub_22DD5071C((uint64_t)v16, &qword_255DB6488);
  if (qword_255DB53D0 != -1)
    swift_once();
  v42 = v121;
  v43 = __swift_project_value_buffer(v121, (uint64_t)qword_255DC3D90);
  v44 = v120;
  v114 = *(_QWORD *)(v114 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v114)(v120, v43, v42);
  v45 = sub_22DE1EF98();
  v46 = v107;
  sub_22DD506A0(v36, v107, &qword_255DB6490);
  *(_QWORD *)(v46 + *(int *)(v102 + 36)) = v45;
  sub_22DD5071C(v36, &qword_255DB6490);
  LOBYTE(v45) = sub_22DE1EC5C();
  sub_22DE1E4B8();
  v48 = v47;
  v50 = v49;
  v52 = v51;
  v54 = v53;
  v55 = v109;
  sub_22DD506A0(v46, v109, &qword_255DB6498);
  v56 = v55 + *(int *)(v103 + 36);
  *(_BYTE *)v56 = v45;
  *(_QWORD *)(v56 + 8) = v48;
  *(_QWORD *)(v56 + 16) = v50;
  *(_QWORD *)(v56 + 24) = v52;
  *(_QWORD *)(v56 + 32) = v54;
  *(_BYTE *)(v56 + 40) = 0;
  sub_22DD5071C(v46, &qword_255DB6498);
  v57 = sub_22DE1EF38();
  v58 = sub_22DE1EC5C();
  v59 = v108;
  sub_22DD506A0(v55, v108, &qword_255DB64A0);
  v60 = v59 + *(int *)(v105 + 36);
  *(_QWORD *)v60 = v57;
  *(_BYTE *)(v60 + 8) = v58;
  sub_22DD5071C(v55, &qword_255DB64A0);
  v61 = v111;
  sub_22DD506A0(v59, v111, &qword_255DB64A8);
  *(_WORD *)(v61 + *(int *)(v104 + 36)) = 256;
  sub_22DD5071C(v59, &qword_255DB64A8);
  v62 = *(_BYTE *)(v26 + 8);
  v63 = swift_retain();
  v64 = sub_22DD83EE8(v63, v62);
  swift_release();
  swift_getKeyPath();
  v125 = v64;
  sub_22DE1E068();
  swift_release();
  v65 = *(double *)(v64 + 24);
  swift_release();
  v66 = v115;
  sub_22DD506A0(v61, v115, &qword_255DB64B0);
  *(double *)(v66 + *(int *)(v110 + 36)) = fabs(v65) * 0.0078125 * 1.5;
  sub_22DD5071C(v61, &qword_255DB64B0);
  LOBYTE(v64) = *(_BYTE *)(v26 + 8);
  v67 = swift_retain();
  v68 = sub_22DD83EE8(v67, v64);
  swift_release();
  swift_getKeyPath();
  v125 = v68;
  sub_22DE1E068();
  swift_release();
  v69 = *(double *)(v68 + 24);
  swift_release();
  v70 = fabs(v69) * 0.0078125 * 1.5;
  if (v70 <= 1.0)
    v71 = v70;
  else
    v71 = 1.0;
  sub_22DE1F16C();
  v73 = v72;
  v75 = v74;
  v76 = v113;
  sub_22DD506A0(v66, v113, &qword_255DB64B8);
  v77 = v76 + *(int *)(v112 + 36);
  *(double *)v77 = v71;
  *(double *)(v77 + 8) = v71;
  *(_QWORD *)(v77 + 16) = v73;
  *(_QWORD *)(v77 + 24) = v75;
  sub_22DD5071C(v66, &qword_255DB64B8);
  v78 = v76;
  if (qword_255DB53E8 != -1)
    swift_once();
  v79 = __swift_project_value_buffer(v42, (uint64_t)qword_255DC3DD8);
  ((void (*)(char *, uint64_t, uint64_t))v114)(v44, v79, v42);
  v80 = sub_22DE1EF98();
  v81 = v76;
  v82 = v119;
  sub_22DD506A0(v81, v119, &qword_255DB64C0);
  v83 = (uint64_t *)(v82 + *(int *)(v116 + 36));
  *v83 = v80;
  v83[1] = 0x4030000000000000;
  v83[2] = 0;
  v83[3] = 0;
  sub_22DD5071C(v78, &qword_255DB64C0);
  sub_22DD713DC();
  v85 = v84;
  sub_22DE1E620();
  v87 = v86 * 0.5 + -48.0;
  v88 = v118;
  sub_22DD506A0(v82, v118, &qword_255DB64C8);
  v89 = v88 + *(int *)(v117 + 36);
  *(_QWORD *)v89 = v85;
  *(double *)(v89 + 8) = v87;
  sub_22DD5071C(v82, &qword_255DB64C8);
  return sub_22DD7282C(v88, v124);
}

uint64_t sub_22DD72608@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  sub_22DD726AC(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  result = sub_22DD72784((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  *a2 = sub_22DD727C8;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v7;
  return result;
}

uint64_t sub_22DD726AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActionIndicator();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DD726F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActionIndicator() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_22DE1E14C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD72784(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActionIndicator();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DD727C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActionIndicator() - 8) + 80);
  return sub_22DD71AD8(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_22DD7282C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB64D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DD72874(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ActionIndicator();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_22DD728B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DB64E8;
  if (!qword_255DB64E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_255DB64F0);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDEC6F8], v1);
    atomic_store(result, (unint64_t *)&qword_255DB64E8);
  }
  return result;
}

uint64_t *sub_22DD72900(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  id v17;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  id v55;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_22DE1E050();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = (int *)type metadata accessor for BatchInteraction(0);
    v9 = v8[5];
    v10 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)v4 + v9) = (uint64_t)v10;
    *(uint64_t *)((char *)v4 + v8[6]) = *(uint64_t *)((char *)a2 + v8[6]);
    v11 = v8[7];
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for BatchInteraction.ContentPolarity(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    v17 = v10;
    swift_retain();
    if (v16(v13, 1, v14))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v21 = type metadata accessor for BatchInteraction.ContentPreview(0);
      v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48);
      v23 = v22(v13, 1, v21);
      if (EnumCaseMultiPayload == 1)
      {
        if (!v23)
        {
          v26 = (char *)&loc_22DD72AB8 + 4 * byte_22DE22106[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
        v29 = &v12[v28];
        v30 = &v13[v28];
        if (!v22(v30, 1, v21))
        {
          v32 = (char *)&loc_22DD72C18 + 4 * byte_22DE2210C[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        if (!v23)
        {
          v27 = (char *)&loc_22DD72AF4 + 4 * byte_22DE22100[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v33 = a3[5];
    v34 = a3[6];
    v35 = *(void **)((char *)a2 + v33);
    *(uint64_t *)((char *)v4 + v33) = (uint64_t)v35;
    v36 = (char *)v4 + v34;
    v37 = (char *)a2 + v34;
    v38 = *(_QWORD *)v37;
    LOBYTE(v37) = v37[8];
    *(_QWORD *)v36 = v38;
    v36[8] = (char)v37;
    v39 = a3[7];
    v40 = a3[8];
    v41 = (char *)v4 + v39;
    v42 = (char *)a2 + v39;
    v43 = *(_QWORD *)v42;
    LOBYTE(v42) = v42[8];
    *(_QWORD *)v41 = v43;
    v41[8] = (char)v42;
    v44 = (char *)v4 + v40;
    v45 = (char *)a2 + v40;
    v46 = *(_QWORD *)v45;
    LOBYTE(v45) = v45[8];
    *(_QWORD *)v44 = v46;
    v44[8] = (char)v45;
    v47 = a3[9];
    v48 = a3[10];
    v49 = (char *)v4 + v47;
    v50 = (char *)a2 + v47;
    v51 = *(_QWORD *)v50;
    LOBYTE(v50) = v50[8];
    *(_QWORD *)v49 = v51;
    v49[8] = (char)v50;
    v52 = (char *)v4 + v48;
    v53 = (char *)a2 + v48;
    *v52 = *v53;
    v54 = *((_QWORD *)v53 + 3);
    *(_OWORD *)(v52 + 8) = *(_OWORD *)(v53 + 8);
    *((_QWORD *)v52 + 3) = v54;
    v55 = v35;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_22DD72EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t (*v11)(id *, uint64_t, uint64_t);
  int v12;
  uint64_t v13;
  uint64_t v14;

  v4 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = type metadata accessor for BatchInteraction(0);

  swift_release();
  v6 = (id *)(a1 + *(int *)(v5 + 28));
  v7 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v10 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v11 = *(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
    v12 = v11(v6, 1, v10);
    if (EnumCaseMultiPayload == 1)
    {
      if (!v12)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            swift_bridgeObjectRelease();
            break;
          case 2u:

            break;
          case 3u:

            swift_bridgeObjectRelease();
            break;
          case 5u:
            v14 = sub_22DE1DEB8();
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v6, v14);
            break;
          default:
            break;
        }
      }
      v6 = (id *)((char *)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48));
      if (!v11(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            goto LABEL_9;
          case 2u:
            goto LABEL_12;
          case 3u:
            goto LABEL_13;
          case 5u:
            goto LABEL_14;
          default:
            break;
        }
      }
    }
    else if (!v12)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 4u:
LABEL_9:
          swift_bridgeObjectRelease();
          break;
        case 2u:
LABEL_12:

          break;
        case 3u:
LABEL_13:

          swift_bridgeObjectRelease();
          break;
        case 5u:
LABEL_14:
          v13 = sub_22DE1DEB8();
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v6, v13);
          break;
        default:
          break;
      }
    }
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_22DD73160(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BatchInteraction(0);
  v8 = v7[5];
  v9 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  v10 = v7[7];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v9;
  swift_retain();
  if (v15(v12, 1, v13))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v19 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48);
    v21 = v20(v12, 1, v19);
    if (EnumCaseMultiPayload == 1)
    {
      if (!v21)
      {
        v24 = (char *)&loc_22DD732F0 + 4 * byte_22DE2212A[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v27 = &v11[v26];
      v28 = &v12[v26];
      if (!v20(v28, 1, v19))
      {
        v30 = (char *)&loc_22DD73450 + 4 * byte_22DE22130[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      if (!v21)
      {
        v25 = (char *)&loc_22DD7332C + 4 * byte_22DE22124[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v31 = a3[5];
  v32 = a3[6];
  v33 = *(void **)(a2 + v31);
  *(_QWORD *)(a1 + v31) = v33;
  v34 = a1 + v32;
  v35 = (uint64_t *)(a2 + v32);
  v36 = *v35;
  LOBYTE(v35) = *((_BYTE *)v35 + 8);
  *(_QWORD *)v34 = v36;
  *(_BYTE *)(v34 + 8) = (_BYTE)v35;
  v37 = a3[7];
  v38 = a3[8];
  v39 = a1 + v37;
  v40 = (uint64_t *)(a2 + v37);
  v41 = *v40;
  LOBYTE(v40) = *((_BYTE *)v40 + 8);
  *(_QWORD *)v39 = v41;
  *(_BYTE *)(v39 + 8) = (_BYTE)v40;
  v42 = a1 + v38;
  v43 = (uint64_t *)(a2 + v38);
  v44 = *v43;
  LOBYTE(v43) = *((_BYTE *)v43 + 8);
  *(_QWORD *)v42 = v44;
  *(_BYTE *)(v42 + 8) = (_BYTE)v43;
  v45 = a3[9];
  v46 = a3[10];
  v47 = a1 + v45;
  v48 = (uint64_t *)(a2 + v45);
  v49 = *v48;
  LOBYTE(v48) = *((_BYTE *)v48 + 8);
  *(_QWORD *)v47 = v49;
  *(_BYTE *)(v47 + 8) = (_BYTE)v48;
  v50 = a1 + v46;
  v51 = a2 + v46;
  *(_BYTE *)v50 = *(_BYTE *)v51;
  v52 = *(_QWORD *)(v51 + 24);
  *(_OWORD *)(v50 + 8) = *(_OWORD *)(v51 + 8);
  *(_QWORD *)(v50 + 24) = v52;
  v53 = v33;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_22DD736FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BatchInteraction(0);
  v8 = v7[5];
  v9 = *(void **)(a2 + v8);
  v10 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  v11 = v9;

  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  swift_retain();
  swift_release();
  v12 = v7[7];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v21 = type metadata accessor for BatchInteraction.ContentPreview(0);
      v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48);
      v23 = v22(v14, 1, v21);
      if (EnumCaseMultiPayload == 1)
      {
        if (!v23)
        {
          v32 = (char *)&loc_22DD73948 + 4 * byte_22DE2213C[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        v37 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
        v38 = &v13[v37];
        v39 = &v14[v37];
        if (!v22(v39, 1, v21))
        {
          v41 = (char *)&loc_22DD73B70 + 4 * byte_22DE22142[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        if (!v23)
        {
          v34 = (char *)&loc_22DD739B4 + 4 * byte_22DE22136[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_25;
    }
LABEL_8:
    v25 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_25;
  }
  if (v19)
  {
    sub_22DD5C950((uint64_t)v13, type metadata accessor for BatchInteraction.ContentPolarity);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_22DD5C950((uint64_t)v13, type metadata accessor for BatchInteraction.ContentPolarity);
    v26 = swift_getEnumCaseMultiPayload();
    v27 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48);
    v29 = v28(v14, 1, v27);
    if (v26 == 1)
    {
      if (!v29)
      {
        v35 = (char *)&loc_22DD739F8 + 4 * word_22DE22154[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      v67 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v68 = &v13[v67];
      v69 = &v14[v67];
      if (!v28(v69, 1, v27))
      {
        v71 = (char *)&loc_22DD73F8C + 4 * byte_22DE22160[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (!v29)
      {
        v36 = (char *)&loc_22DD73A3C + 4 * word_22DE22148[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_25:
  v42 = a3[5];
  v43 = *(void **)(a2 + v42);
  v44 = *(void **)(a1 + v42);
  *(_QWORD *)(a1 + v42) = v43;
  v45 = v43;

  v46 = a3[6];
  v47 = a1 + v46;
  v48 = (uint64_t *)(a2 + v46);
  v49 = *v48;
  LOBYTE(v48) = *((_BYTE *)v48 + 8);
  *(_QWORD *)v47 = v49;
  *(_BYTE *)(v47 + 8) = (_BYTE)v48;
  swift_retain();
  swift_release();
  v50 = a3[7];
  v51 = a1 + v50;
  v52 = (uint64_t *)(a2 + v50);
  v53 = *v52;
  LOBYTE(v52) = *((_BYTE *)v52 + 8);
  *(_QWORD *)v51 = v53;
  *(_BYTE *)(v51 + 8) = (_BYTE)v52;
  swift_retain();
  swift_release();
  v54 = a3[8];
  v55 = a1 + v54;
  v56 = (uint64_t *)(a2 + v54);
  v57 = *v56;
  LOBYTE(v56) = *((_BYTE *)v56 + 8);
  *(_QWORD *)v55 = v57;
  *(_BYTE *)(v55 + 8) = (_BYTE)v56;
  swift_retain();
  swift_release();
  v58 = a3[9];
  v59 = a1 + v58;
  v60 = (uint64_t *)(a2 + v58);
  v61 = *v60;
  LOBYTE(v60) = *((_BYTE *)v60 + 8);
  *(_QWORD *)v59 = v61;
  *(_BYTE *)(v59 + 8) = (_BYTE)v60;
  swift_retain();
  swift_release();
  v62 = a3[10];
  v63 = a1 + v62;
  v64 = a2 + v62;
  *(_BYTE *)v63 = *(_BYTE *)(a2 + v62);
  *(_QWORD *)(v63 + 8) = *(_QWORD *)(a2 + v62 + 8);
  swift_retain();
  swift_release();
  v65 = *(_QWORD *)(v64 + 24);
  *(_QWORD *)(v63 + 16) = *(_QWORD *)(v64 + 16);
  *(_QWORD *)(v63 + 24) = v65;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_22DD74150(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  _OWORD *v42;
  __int128 v43;
  uint64_t v45;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BatchInteraction(0);
  *(_QWORD *)(a1 + v7[5]) = *(_QWORD *)(a2 + v7[5]);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  v8 = v7[7];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v15 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v45 = *(_QWORD *)(v15 - 8);
    v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
    v17 = v16(v10, 1, v15);
    if (EnumCaseMultiPayload == 1)
    {
      if (v17)
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v20 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v9, v10, v20);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v9, v10, *(_QWORD *)(v45 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v9, 0, 1, v15);
      }
      v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v23 = &v9[v22];
      v24 = &v10[v22];
      if (v16(v24, 1, v15))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v26 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
          swift_storeEnumTagMultiPayload();
          v27 = v45;
        }
        else
        {
          v27 = v45;
          memcpy(v23, v24, *(_QWORD *)(v45 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v15);
      }
    }
    else if (v17)
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        v21 = sub_22DE1DEB8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v9, v10, v21);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(_QWORD *)(v45 + 64));
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v9, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v28 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v31 = a3[7];
  v32 = a3[8];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_BYTE *)(v33 + 8) = *(_BYTE *)(v34 + 8);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  v35 = a1 + v32;
  v36 = a2 + v32;
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *(_BYTE *)(v35 + 8) = *(_BYTE *)(v36 + 8);
  v37 = a3[9];
  v38 = a3[10];
  v39 = a1 + v37;
  v40 = a2 + v37;
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *(_BYTE *)(v39 + 8) = *(_BYTE *)(v40 + 8);
  v41 = (_OWORD *)(a1 + v38);
  v42 = (_OWORD *)(a2 + v38);
  v43 = v42[1];
  *v41 = *v42;
  v41[1] = v43;
  return a1;
}

uint64_t sub_22DD74538(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BatchInteraction(0);
  v8 = v7[5];
  v9 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);

  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  swift_release();
  v10 = v7[7];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v19 = type metadata accessor for BatchInteraction.ContentPreview(0);
      v71 = *(_QWORD *)(v19 - 8);
      v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 48);
      v21 = v20(v12, 1, v19);
      if (EnumCaseMultiPayload == 1)
      {
        if (v21)
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 5)
          {
            v31 = sub_22DE1DEB8();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v11, v12, v31);
            swift_storeEnumTagMultiPayload();
            v32 = v71;
          }
          else
          {
            v32 = v71;
            memcpy(v11, v12, *(_QWORD *)(v71 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v11, 0, 1, v19);
        }
        v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
        v37 = &v11[v36];
        v38 = &v12[v36];
        if (v20(v38, 1, v19))
        {
          v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 5)
          {
            v40 = sub_22DE1DEB8();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v37, v38, v40);
            swift_storeEnumTagMultiPayload();
            v41 = v71;
          }
          else
          {
            v41 = v71;
            memcpy(v37, v38, *(_QWORD *)(v71 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v37, 0, 1, v19);
        }
      }
      else if (v21)
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v34 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v11, v12, v34);
          swift_storeEnumTagMultiPayload();
          v35 = v71;
        }
        else
        {
          v35 = v71;
          memcpy(v11, v12, *(_QWORD *)(v71 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v11, 0, 1, v19);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_32;
    }
LABEL_8:
    v23 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_32;
  }
  if (v17)
  {
    sub_22DD5C950((uint64_t)v11, type metadata accessor for BatchInteraction.ContentPolarity);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_22DD5C950((uint64_t)v11, type metadata accessor for BatchInteraction.ContentPolarity);
    v24 = swift_getEnumCaseMultiPayload();
    v25 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    v28 = v27(v12, 1, v25);
    if (v24 == 1)
    {
      if (v28)
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v64 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v11, v12, v64);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v11, v12, *(_QWORD *)(v26 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v11, 0, 1, v25);
      }
      v66 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v67 = &v11[v66];
      v68 = &v12[v66];
      if (v27(v68, 1, v25))
      {
        v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v70 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v67, v68, v70);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v67, v68, *(_QWORD *)(v26 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v67, 0, 1, v25);
      }
    }
    else if (v28)
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        v65 = sub_22DE1DEB8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v11, v12, v65);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v11, v12, *(_QWORD *)(v26 + 64));
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v11, 0, 1, v25);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_32:
  v42 = a3[5];
  v43 = *(void **)(a1 + v42);
  *(_QWORD *)(a1 + v42) = *(_QWORD *)(a2 + v42);

  v44 = a3[6];
  v45 = a1 + v44;
  v46 = (uint64_t *)(a2 + v44);
  v47 = *v46;
  LOBYTE(v46) = *((_BYTE *)v46 + 8);
  *(_QWORD *)v45 = v47;
  *(_BYTE *)(v45 + 8) = (_BYTE)v46;
  swift_release();
  v48 = a3[7];
  v49 = a1 + v48;
  v50 = (uint64_t *)(a2 + v48);
  v51 = *v50;
  LOBYTE(v50) = *((_BYTE *)v50 + 8);
  *(_QWORD *)v49 = v51;
  *(_BYTE *)(v49 + 8) = (_BYTE)v50;
  swift_release();
  v52 = a3[8];
  v53 = a1 + v52;
  v54 = (uint64_t *)(a2 + v52);
  v55 = *v54;
  LOBYTE(v54) = *((_BYTE *)v54 + 8);
  *(_QWORD *)v53 = v55;
  *(_BYTE *)(v53 + 8) = (_BYTE)v54;
  swift_release();
  v56 = a3[9];
  v57 = a1 + v56;
  v58 = (uint64_t *)(a2 + v56);
  v59 = *v58;
  LOBYTE(v58) = *((_BYTE *)v58 + 8);
  *(_QWORD *)v57 = v59;
  *(_BYTE *)(v57 + 8) = (_BYTE)v58;
  swift_release();
  v60 = a3[10];
  v61 = a1 + v60;
  v62 = a2 + v60;
  *(_BYTE *)v61 = *(_BYTE *)v62;
  *(_QWORD *)(v61 + 8) = *(_QWORD *)(v62 + 8);
  swift_release();
  *(_OWORD *)(v61 + 16) = *(_OWORD *)(v62 + 16);
  swift_release();
  return a1;
}

uint64_t sub_22DD74C28()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD74C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for BatchInteraction(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_22DD74CB0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD74CBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for BatchInteraction(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for InteractableCard()
{
  uint64_t result;

  result = qword_255DB6550;
  if (!qword_255DB6550)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22DD74D70()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for BatchInteraction(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22DD74E00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD74E10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;
  __int128 v30;

  v24 = a1;
  v1 = type metadata accessor for InteractableCard();
  v23 = *(_QWORD *)(v1 - 8);
  v2 = *(_QWORD *)(v23 + 64);
  MEMORY[0x24BDAC7A8](v1);
  v3 = sub_22DE1EAE8();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_22DE1E53C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6658);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DE1EB48();
  sub_22DE1E518();
  v11 = v22;
  v12 = v22 + *(int *)(v1 + 40);
  v13 = *(_QWORD *)(v12 + 8);
  v25 = *(_BYTE *)v12;
  v26 = v13;
  v27 = *(_OWORD *)(v12 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6648);
  sub_22DE1E59C();
  v14 = v28;
  v15 = v29;
  v21 = v30;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, v7, v4);
  v16 = &v10[*(int *)(v8 + 44)];
  *v16 = v14;
  *((_QWORD *)v16 + 1) = v15;
  *((_OWORD *)v16 + 1) = v21;
  v17 = &v10[*(int *)(v8 + 48)];
  *(_QWORD *)v17 = sub_22DD750C8;
  *((_QWORD *)v17 + 1) = 0;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_22DD5C570(v11, (uint64_t)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for InteractableCard);
  v18 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v19 = swift_allocObject();
  sub_22DD647B0((uint64_t)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, (uint64_t (*)(_QWORD))type metadata accessor for InteractableCard);
  sub_22DD508B0(&qword_255DB6660, &qword_255DB6658, MEMORY[0x24BDEAE38]);
  sub_22DD504A8(&qword_255DB6668, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB500], MEMORY[0x24BDEB520]);
  sub_22DE1F0E8();
  swift_release();
  return sub_22DD5071C((uint64_t)v10, &qword_255DB6658);
}

void sub_22DD750C8(uint64_t a1, _BYTE *a2)
{
  *a2 = 1;
}

uint64_t sub_22DD750D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE v15[16];
  uint64_t (*v16)();
  uint64_t v17;

  v4 = sub_22DE1E530();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = type metadata accessor for InteractableCard();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22DD5C570(a2, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for InteractableCard);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(&v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v4);
  v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v12 = (v9 + *(unsigned __int8 *)(v5 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = swift_allocObject();
  sub_22DD647B0((uint64_t)v10, v13 + v11, (uint64_t (*)(_QWORD))type metadata accessor for InteractableCard);
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v5 + 32))(v13 + v12, &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v4);
  sub_22DE1F148();
  v16 = sub_22DD771C4;
  v17 = v13;
  sub_22DE1E674();
  swift_release();
  return swift_release();
}

uint64_t sub_22DD7525C(uint64_t a1)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(a1 + *(int *)(type metadata accessor for InteractableCard() + 28) + 8);
  v2 = swift_retain();
  sub_22DD83EE8(v2, v1);
  swift_release();
  sub_22DE1E524();
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
  sub_22DE1E05C();
  swift_release();
  return swift_release();
}

uint64_t sub_22DD75350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  int v23;
  uint64_t *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = v0;
  v2 = type metadata accessor for BatchInteraction(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v30 = (uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6678);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6258);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v31 = (uint64_t)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v29 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v29 - v14;
  v16 = *(_BYTE *)(v0 + *(int *)(type metadata accessor for InteractableCard() + 36) + 8);
  v17 = swift_retain();
  v18 = sub_22DD83CAC(v17, v16);
  swift_release();
  swift_getKeyPath();
  v32 = v18;
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  sub_22DE1E068();
  swift_release();
  swift_beginAccess();
  v19 = *(_QWORD *)(v18 + 24);
  if (*(_QWORD *)(v19 + 16))
  {
    sub_22DD5C570(v19 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), (uint64_t)v15, type metadata accessor for BatchInteraction);
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v20(v15, 0, 1, v2);
  }
  else
  {
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v20(v15, 1, 1, v2);
  }
  swift_release();
  sub_22DD5C570(v1, (uint64_t)v13, type metadata accessor for BatchInteraction);
  v20(v13, 0, 1, v2);
  v21 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_22DD506A0((uint64_t)v15, (uint64_t)v7, &qword_255DB6258);
  sub_22DD506A0((uint64_t)v13, v21, &qword_255DB6258);
  v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v22((uint64_t)v7, 1, v2) == 1)
  {
    sub_22DD5071C((uint64_t)v13, &qword_255DB6258);
    sub_22DD5071C((uint64_t)v15, &qword_255DB6258);
    v23 = v22(v21, 1, v2);
    if (v23 == 1)
      v24 = &qword_255DB6258;
    else
      v24 = &qword_255DB6678;
    if (v23 == 1)
      v25 = -1;
    else
      v25 = 0;
  }
  else
  {
    v26 = v31;
    sub_22DD506A0((uint64_t)v7, v31, &qword_255DB6258);
    if (v22(v21, 1, v2) == 1)
    {
      sub_22DD5071C((uint64_t)v13, &qword_255DB6258);
      sub_22DD5071C((uint64_t)v15, &qword_255DB6258);
      sub_22DD5C950(v26, type metadata accessor for BatchInteraction);
      v25 = 0;
      v24 = &qword_255DB6678;
    }
    else
    {
      v27 = v30;
      sub_22DD647B0(v21, v30, type metadata accessor for BatchInteraction);
      v25 = sub_22DD643FC(v26, v27);
      sub_22DD5C950(v27, type metadata accessor for BatchInteraction);
      v24 = &qword_255DB6258;
      sub_22DD5071C((uint64_t)v13, &qword_255DB6258);
      sub_22DD5071C((uint64_t)v15, &qword_255DB6258);
      sub_22DD5C950(v26, type metadata accessor for BatchInteraction);
    }
  }
  sub_22DD5071C((uint64_t)v7, v24);
  return v25 & 1;
}

uint64_t sub_22DD75710()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v13;

  v1 = type metadata accessor for InteractableCard();
  v13 = v0;
  v2 = *(_BYTE *)(v0 + *(int *)(v1 + 32) + 8);
  v3 = swift_retain();
  v4 = sub_22DD83F0C(v3, v2);
  swift_release();
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6248, (uint64_t (*)(uint64_t))type metadata accessor for StateController, (uint64_t)&unk_22DE247FC);
  sub_22DE1E068();
  swift_release();
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  sub_22DD77554(v5, v6);
  swift_release();
  if (v6 != 1)
  {
    sub_22DD775A8(v5, v6);
    goto LABEL_5;
  }
  v7 = *(_BYTE *)(v13 + *(int *)(v1 + 36) + 8);
  v8 = swift_retain();
  v9 = sub_22DD83CAC(v8, v7);
  swift_release();
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  sub_22DE1E068();
  swift_release();
  swift_beginAccess();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 24) + 16);
  swift_release();
  if (!v10)
  {
LABEL_5:
    v11 = 0;
    return v11 & 1;
  }
  v11 = sub_22DD75350();
  return v11 & 1;
}

uint64_t sub_22DD75908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;

  v1 = v0;
  result = sub_22DD75710();
  if ((result & 1) != 0)
  {
    v3 = type metadata accessor for InteractableCard();
    v4 = *(_BYTE *)(v0 + *(int *)(v3 + 32) + 8);
    v5 = swift_retain();
    v6 = sub_22DD83F0C(v5, v4);
    swift_release();
    swift_getKeyPath();
    sub_22DD504A8((unint64_t *)&qword_255DB6248, (uint64_t (*)(uint64_t))type metadata accessor for StateController, (uint64_t)&unk_22DE247FC);
    sub_22DE1E068();
    swift_release();
    v7 = *(_BYTE *)(v6 + 80);
    result = swift_release();
    if ((v7 & 1) == 0)
    {
      v8 = *(_BYTE *)(v1 + *(int *)(v3 + 28) + 8);
      v9 = swift_retain();
      sub_22DD83EE8(v9, v8);
      swift_release();
      swift_getKeyPath();
      sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
      sub_22DE1E068();
      swift_release();
      return swift_release();
    }
  }
  return result;
}

double sub_22DD75AA0()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  void *v3;
  void *v4;
  id v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  CGRect v24;

  v1 = v0;
  v2 = 0.0;
  if ((sub_22DD75350() & 1) != 0)
  {
    sub_22DD70A00();
    if (v3 && (v4 = v3, v5 = objc_msgSend(v3, sel_screen), v4, v5))
    {
      objc_msgSend(v5, sel_bounds);
      v7 = v6;
      v9 = v8;
      v11 = v10;
      v13 = v12;

      v24.origin.x = v7;
      v24.origin.y = v9;
      v24.size.width = v11;
      v24.size.height = v13;
      v2 = CGRectGetHeight(v24) * -1.5;
    }
    else
    {
      v2 = -0.0;
    }
    v14 = type metadata accessor for InteractableCard();
    v15 = *(_BYTE *)(v1 + *(int *)(v14 + 32) + 8);
    v16 = swift_retain();
    v17 = sub_22DD83F0C(v16, v15);
    swift_release();
    swift_getKeyPath();
    sub_22DD504A8((unint64_t *)&qword_255DB6248, (uint64_t (*)(uint64_t))type metadata accessor for StateController, (uint64_t)&unk_22DE247FC);
    sub_22DE1E068();
    swift_release();
    v18 = *(_BYTE *)(v17 + 80);
    swift_release();
    if ((v18 & 1) == 0)
    {
      v19 = *(_BYTE *)(v1 + *(int *)(v14 + 28) + 8);
      v20 = swift_retain();
      v21 = sub_22DD83EE8(v20, v19);
      swift_release();
      swift_getKeyPath();
      sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
      sub_22DE1E068();
      swift_release();
      v22 = *(double *)(v21 + 24);
      swift_release();
      return fabs(v22) * -0.25;
    }
  }
  return v2;
}

uint64_t sub_22DD75CA0(uint64_t (*a1)(void))
{
  uint64_t v1;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_BYTE *)(v1 + *(int *)(type metadata accessor for InteractableCard() + 24) + 8);
  v4 = swift_retain();
  v5 = sub_22DD83CC8(v4, v3);
  swift_release();
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  v6 = *(_QWORD *)(v5 + 56);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6670, (uint64_t (*)(uint64_t))type metadata accessor for DebugController, (uint64_t)")ٶ!ȷ");
  sub_22DE1E068();
  swift_release();
  v7 = *(_BYTE *)(v6 + 17);
  swift_release();
  if ((v7 & 1) == 0)
    return sub_22DE1EF68();
  if ((sub_22DD75710() & 1) != 0)
    return a1();
  return sub_22DE1EF80();
}

uint64_t sub_22DD75DF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  double *v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  double v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int *v107;
  char v108;
  uint64_t v109;
  __int128 v110;
  char v111;
  double v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  double v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;

  v3 = v2;
  v87 = a1;
  v106 = a2;
  v107 = (int *)type metadata accessor for InteractableCard();
  v103 = *((_QWORD *)v107 - 1);
  MEMORY[0x24BDAC7A8](v107);
  v104 = v4;
  v105 = (uint64_t)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB65A0);
  MEMORY[0x24BDAC7A8](v97);
  v96 = (uint64_t)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB65A8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB65B0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB65B8);
  MEMORY[0x24BDAC7A8](v88);
  v13 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB65C0);
  MEMORY[0x24BDAC7A8](v89);
  v90 = (uint64_t)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB65C8);
  MEMORY[0x24BDAC7A8](v91);
  v92 = (uint64_t)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB65D0);
  v94 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95);
  v93 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB65D8);
  MEMORY[0x24BDAC7A8](v100);
  v102 = (char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB65E0);
  v99 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  v98 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_22DD75CA0(MEMORY[0x24BDF3C90]);
  v20 = 1.0;
  v21 = 0.0;
  sub_22DE1E56C();
  v22 = v112;
  v23 = v114;
  v24 = v115;
  v25 = v116;
  swift_retain();
  v26 = sub_22DE1F130();
  v28 = v27;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB65E8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v8, v87, v29);
  swift_release();
  v30 = &v8[*(int *)(v6 + 36)];
  *(double *)v30 = v22 * 0.5;
  *((double *)v30 + 1) = v22;
  *((_QWORD *)v30 + 2) = v113;
  *((_QWORD *)v30 + 3) = v23;
  *((_QWORD *)v30 + 4) = v24;
  *((_QWORD *)v30 + 5) = v25;
  *((_QWORD *)v30 + 6) = v19;
  *((_WORD *)v30 + 28) = 256;
  *((_QWORD *)v30 + 8) = v26;
  *((_QWORD *)v30 + 9) = v28;
  sub_22DD75908();
  v32 = v31;
  sub_22DD506A0((uint64_t)v8, (uint64_t)v11, &qword_255DB65A8);
  *(_QWORD *)&v11[*(int *)(v9 + 36)] = v32;
  sub_22DD5071C((uint64_t)v8, &qword_255DB65A8);
  if ((sub_22DD75710() & 1) != 0)
  {
    v33 = *(_BYTE *)(v3 + v107[7] + 8);
    v34 = swift_retain();
    v35 = sub_22DD83EE8(v34, v33);
    swift_release();
    swift_getKeyPath();
    v117 = *(double *)&v35;
    sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
    sub_22DE1E068();
    swift_release();
    v36 = *(double *)(v35 + 24);
    swift_release();
    v21 = v36 * 1.5;
  }
  v37 = sub_22DD75AA0();
  sub_22DD506A0((uint64_t)v11, (uint64_t)v13, &qword_255DB65B0);
  v38 = (double *)&v13[*(int *)(v88 + 36)];
  *v38 = v21;
  v38[1] = v37;
  sub_22DD5071C((uint64_t)v11, &qword_255DB65B0);
  if ((sub_22DD75710() & 1) != 0)
  {
    v39 = *(_BYTE *)(v3 + v107[8] + 8);
    v40 = swift_retain();
    v41 = sub_22DD83F0C(v40, v39);
    swift_release();
    swift_getKeyPath();
    v117 = *(double *)&v41;
    sub_22DD504A8((unint64_t *)&qword_255DB6248, (uint64_t (*)(uint64_t))type metadata accessor for StateController, (uint64_t)&unk_22DE247FC);
    sub_22DE1E068();
    swift_release();
    v42 = *(unsigned __int8 *)(v41 + 80);
    swift_release();
    if (v42)
      v20 = 0.5;
    else
      v20 = 1.0;
  }
  sub_22DE1F16C();
  v44 = v43;
  v46 = v45;
  v47 = v90;
  sub_22DD506A0((uint64_t)v13, v90, &qword_255DB65B8);
  v48 = v47 + *(int *)(v89 + 36);
  *(double *)v48 = v20;
  *(double *)(v48 + 8) = v20;
  *(_QWORD *)(v48 + 16) = v44;
  *(_QWORD *)(v48 + 24) = v46;
  sub_22DD5071C((uint64_t)v13, &qword_255DB65B8);
  v49 = sub_22DD75710();
  v50 = 0.0;
  v51 = v91;
  if ((v49 & 1) != 0)
  {
    v52 = *(_BYTE *)(v3 + v107[7] + 8);
    v53 = swift_retain();
    v54 = sub_22DD83EE8(v53, v52);
    swift_release();
    swift_getKeyPath();
    v117 = *(double *)&v54;
    sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
    sub_22DE1E068();
    swift_release();
    v55 = *(double *)(v54 + 24);
    swift_release();
    v50 = v55 / 20.0 * 0.0174532925;
  }
  sub_22DE1F16C();
  v57 = v56;
  v59 = v58;
  v60 = v92;
  sub_22DD506A0(v47, v92, &qword_255DB65C0);
  v61 = v60 + *(int *)(v51 + 36);
  *(double *)v61 = v50;
  *(_QWORD *)(v61 + 8) = v57;
  *(_QWORD *)(v61 + 16) = v59;
  sub_22DD5071C(v47, &qword_255DB65C0);
  if ((sub_22DD75710() & 1) != 0)
  {
    v62 = v96;
    sub_22DD74E10(v96);
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB65F0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v62, 0, 1, v63);
  }
  else
  {
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB65F0);
    v62 = v96;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v96, 1, 1, v64);
  }
  sub_22DE1E560();
  sub_22DD70840(&qword_255DB65F8, &qword_255DB65C8, sub_22DD76B30, MEMORY[0x24BDED5D8]);
  sub_22DD76C38();
  v65 = v93;
  sub_22DE1EEE4();
  sub_22DD5071C(v62, &qword_255DB65A0);
  sub_22DD5071C(v60, &qword_255DB65C8);
  v66 = sub_22DD75CA0(MEMORY[0x24BDF3C78]);
  sub_22DE1E56C();
  v67 = v117;
  v68 = v119;
  v69 = v120;
  v70 = v121;
  swift_retain();
  v71 = sub_22DE1F130();
  v73 = v72;
  v74 = v94;
  v75 = (uint64_t)v102;
  v76 = v95;
  (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v102, v65, v95);
  swift_release();
  v77 = v75 + *(int *)(v100 + 36);
  *(double *)v77 = v67 * 0.5;
  *(double *)(v77 + 8) = v67;
  *(_QWORD *)(v77 + 16) = v118;
  *(_QWORD *)(v77 + 24) = v68;
  *(_QWORD *)(v77 + 32) = v69;
  *(_QWORD *)(v77 + 40) = v70;
  *(_QWORD *)(v77 + 48) = v66;
  *(_WORD *)(v77 + 56) = 256;
  *(_QWORD *)(v77 + 64) = v71;
  *(_QWORD *)(v77 + 72) = v73;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v65, v76);
  v78 = v3 + v107[10];
  v79 = *(_QWORD *)(v78 + 8);
  v108 = *(_BYTE *)v78;
  v109 = v79;
  v110 = *(_OWORD *)(v78 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6648);
  sub_22DE1E590();
  v108 = v111;
  v80 = v3;
  v81 = v105;
  sub_22DD5C570(v80, v105, (uint64_t (*)(_QWORD))type metadata accessor for InteractableCard);
  v82 = (*(unsigned __int8 *)(v103 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
  v83 = swift_allocObject();
  sub_22DD647B0(v81, v83 + v82, (uint64_t (*)(_QWORD))type metadata accessor for InteractableCard);
  sub_22DD76D04();
  v84 = v98;
  sub_22DE1EF2C();
  swift_release();
  sub_22DD5071C(v75, &qword_255DB65D8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v99 + 32))(v106, v84, v101);
}

uint64_t sub_22DD76814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  _QWORD v17[2];

  v4 = type metadata accessor for InteractableCard();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_BYTE *)(a3 + *(int *)(MEMORY[0x24BDAC7A8](v4) + 28) + 8);
  v8 = swift_retain();
  v9 = sub_22DD83EE8(v8, v7);
  swift_release();
  swift_getKeyPath();
  v17[1] = v9;
  sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
  sub_22DE1E068();
  swift_release();
  v10 = *(double *)(v9 + 24);
  swift_release();
  if (fabs(v10) >= 128.0)
  {
    v15 = *(_BYTE *)(a3 + *(int *)(v4 + 24) + 8);
    v16 = swift_retain();
    sub_22DD83CC8(v16, v15);
    swift_release();
    sub_22DD6D974(*(_QWORD *)(a3 + *(int *)(v4 + 20)));
    return swift_release();
  }
  else
  {
    sub_22DD5C570(a3, (uint64_t)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for InteractableCard);
    v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v12 = swift_allocObject();
    sub_22DD647B0((uint64_t)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, (uint64_t (*)(_QWORD))type metadata accessor for InteractableCard);
    v13 = sub_22DE1F148();
    MEMORY[0x24BDAC7A8](v13);
    v17[-2] = sub_22DD77508;
    v17[-1] = v12;
    sub_22DE1E674();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_22DD76A30(uint64_t a1)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(a1 + *(int *)(type metadata accessor for InteractableCard() + 28) + 8);
  v2 = swift_retain();
  sub_22DD83EE8(v2, v1);
  swift_release();
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
  sub_22DE1E05C();
  swift_release();
  return swift_release();
}

uint64_t sub_22DD76B14()
{
  return sub_22DE1E5D8();
}

uint64_t sub_22DD76B30()
{
  return sub_22DD70840(&qword_255DB6600, &qword_255DB65C0, sub_22DD76B54, MEMORY[0x24BDEBF50]);
}

uint64_t sub_22DD76B54()
{
  return sub_22DD70840(&qword_255DB6608, &qword_255DB65B8, sub_22DD76B78, MEMORY[0x24BDEC438]);
}

uint64_t sub_22DD76B78()
{
  return sub_22DD70840(&qword_255DB6610, &qword_255DB65B0, (uint64_t (*)(void))sub_22DD76B9C, MEMORY[0x24BDECC38]);
}

unint64_t sub_22DD76B9C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB6618;
  if (!qword_255DB6618)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB65A8);
    v2[0] = sub_22DD508B0(&qword_255DB6620, &qword_255DB65E8, MEMORY[0x24BDEFB78]);
    v2[1] = sub_22DD508B0(&qword_255DB6628, &qword_255DB6630, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB6618);
  }
  return result;
}

unint64_t sub_22DD76C38()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255DB6638;
  if (!qword_255DB6638)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB65A0);
    v2 = sub_22DD508B0(&qword_255DB6640, &qword_255DB65F0, MEMORY[0x24BDED570]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDF5588], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255DB6638);
  }
  return result;
}

uint64_t sub_22DD76CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for InteractableCard() - 8) + 80);
  return sub_22DD76814(a1, a2, v2 + ((v5 + 16) & ~v5));
}

unint64_t sub_22DD76D04()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_255DB6650;
  if (!qword_255DB6650)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB65D8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB65C8);
    v2[3] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB65A0);
    v2[4] = sub_22DD70840(&qword_255DB65F8, &qword_255DB65C8, sub_22DD76B30, MEMORY[0x24BDED5D8]);
    v2[5] = sub_22DD76C38();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_22DD508B0(&qword_255DB6628, &qword_255DB6630, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB6650);
  }
  return result;
}

uint64_t sub_22DD76E08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for InteractableCard() - 8) + 80);
  return sub_22DD750D4(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_22DD76E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(id *, uint64_t, uint64_t);
  uint64_t v23;

  v1 = type metadata accessor for InteractableCard();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_22DE1E530();
  v6 = *(_QWORD *)(v5 - 8);
  v23 = *(unsigned __int8 *)(v6 + 80);
  v7 = v0 + v3;
  v8 = sub_22DE1E050();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v3, v8);
  v9 = type metadata accessor for BatchInteraction(0);

  swift_release();
  v10 = (id *)(v0 + v3 + *(int *)(v9 + 28));
  v11 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v13 = v6;
    v14 = v0;
    v15 = v3;
    v16 = v5;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v18 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v22 = *(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48);
    v19 = v22(v10, 1, v18);
    if (EnumCaseMultiPayload == 1)
    {
      v5 = v16;
      v3 = v15;
      v0 = v14;
      v6 = v13;
      if (!v19)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            swift_bridgeObjectRelease();
            break;
          case 2u:

            break;
          case 3u:

            swift_bridgeObjectRelease();
            break;
          case 5u:
            v21 = sub_22DE1DEB8();
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v10, v21);
            break;
          default:
            break;
        }
      }
      v10 = (id *)((char *)v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48));
      if (!v22(v10, 1, v18))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            goto LABEL_9;
          case 2u:
            goto LABEL_12;
          case 3u:
            goto LABEL_13;
          case 5u:
            goto LABEL_14;
          default:
            break;
        }
      }
    }
    else
    {
      v5 = v16;
      v3 = v15;
      v0 = v14;
      v6 = v13;
      if (!v19)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
LABEL_9:
            swift_bridgeObjectRelease();
            break;
          case 2u:
LABEL_12:

            break;
          case 3u:
LABEL_13:

            swift_bridgeObjectRelease();
            break;
          case 5u:
LABEL_14:
            v20 = sub_22DE1DEB8();
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v10, v20);
            break;
          default:
            break;
        }
      }
    }
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + ((v3 + v4 + v23) & ~v23), v5);
  return swift_deallocObject();
}

uint64_t sub_22DD771C4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = type metadata accessor for InteractableCard();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  sub_22DE1E530();
  return sub_22DD7525C(v0 + v2);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t (*v11)(id *, uint64_t, uint64_t);
  int v12;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for InteractableCard();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = type metadata accessor for BatchInteraction(0);

  swift_release();
  v6 = (id *)(v3 + *(int *)(v5 + 28));
  v7 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v10 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v11 = *(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
    v12 = v11(v6, 1, v10);
    if (EnumCaseMultiPayload == 1)
    {
      if (!v12)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            swift_bridgeObjectRelease();
            break;
          case 2u:

            break;
          case 3u:

            swift_bridgeObjectRelease();
            break;
          case 5u:
            v14 = sub_22DE1DEB8();
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v6, v14);
            break;
          default:
            break;
        }
      }
      v6 = (id *)((char *)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48));
      if (!v11(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            goto LABEL_9;
          case 2u:
            goto LABEL_12;
          case 3u:
            goto LABEL_13;
          case 5u:
            goto LABEL_14;
          default:
            break;
        }
      }
    }
    else if (!v12)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 4u:
LABEL_9:
          swift_bridgeObjectRelease();
          break;
        case 2u:
LABEL_12:

          break;
        case 3u:
LABEL_13:

          swift_bridgeObjectRelease();
          break;
        case 5u:
LABEL_14:
          v13 = sub_22DE1DEB8();
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v6, v13);
          break;
        default:
          break;
      }
    }
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD77508()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for InteractableCard() - 8) + 80);
  return sub_22DD76A30(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_22DD77554(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_22DD775A8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22DD775FC()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB65D8);
  sub_22DD76D04();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD7765C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;

  v5 = type metadata accessor for AnalyticsEvent();
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6888);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for FullScreenPreviewController.Content(0);
  sub_22DD789E4(a1, (uint64_t)&v10[*(int *)(v11 + 20)]);
  sub_22DE1E044();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 0, 1, v11);
  swift_getKeyPath();
  v15 = v2;
  v16 = v10;
  v17 = v2;
  sub_22DD504A8(&qword_255DB5A00, type metadata accessor for FullScreenPreviewController, (uint64_t)&unk_22DE223F0);
  sub_22DE1E05C();
  swift_release();
  sub_22DD789A4((uint64_t)v10);
  v12 = sub_22DE1E1F4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v7, a2, v12);
  swift_storeEnumTagMultiPayload();
  sub_22DE01A1C();
  return sub_22DD5C950((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for AnalyticsEvent);
}

uint64_t sub_22DD77818@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB5A00, type metadata accessor for FullScreenPreviewController, (uint64_t)&unk_22DE223F0);
  sub_22DE1E068();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC8Feedback27FullScreenPreviewController__content;
  swift_beginAccess();
  return sub_22DD78A90(v3, a1);
}

uint64_t sub_22DD778C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB5A00, type metadata accessor for FullScreenPreviewController, (uint64_t)&unk_22DE223F0);
  sub_22DE1E068();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC8Feedback27FullScreenPreviewController__content;
  swift_beginAccess();
  return sub_22DD78A90(v4, a2);
}

uint64_t sub_22DD77978(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6888);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22DD78A90(a1, (uint64_t)v6);
  v7 = *a2;
  swift_getKeyPath();
  v10 = v7;
  v11 = v6;
  v12 = v7;
  sub_22DD504A8(&qword_255DB5A00, type metadata accessor for FullScreenPreviewController, (uint64_t)&unk_22DE223F0);
  sub_22DE1E05C();
  swift_release();
  return sub_22DD789A4((uint64_t)v6);
}

uint64_t sub_22DD77A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1 + OBJC_IVAR____TtC8Feedback27FullScreenPreviewController__content;
  swift_beginAccess();
  sub_22DD78A48(a2, v3);
  return swift_endAccess();
}

uint64_t sub_22DD77AD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22DD789A4(v0 + OBJC_IVAR____TtC8Feedback27FullScreenPreviewController__content);
  v1 = v0 + OBJC_IVAR____TtC8Feedback27FullScreenPreviewController___observationRegistrar;
  v2 = sub_22DE1E098();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_22DD77B34()
{
  return type metadata accessor for FullScreenPreviewController(0);
}

uint64_t type metadata accessor for FullScreenPreviewController(uint64_t a1)
{
  return sub_22DD6481C(a1, (uint64_t *)&unk_255DB66B8);
}

void sub_22DD77B50()
{
  unint64_t v0;
  unint64_t v1;

  sub_22DD77BD8();
  if (v0 <= 0x3F)
  {
    sub_22DE1E098();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_22DD77BD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255DB66C8[0])
  {
    type metadata accessor for FullScreenPreviewController.Content(255);
    v0 = sub_22DE1F610();
    if (!v1)
      atomic_store(v0, qword_255DB66C8);
  }
}

uint64_t type metadata accessor for FullScreenPreviewController.Content(uint64_t a1)
{
  return sub_22DD6481C(a1, qword_255DB67A8);
}

uint64_t sub_22DD77C40(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v6 = sub_22DE1E050();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
    v7 = (char *)&loc_22DD77CC8 + 4 * byte_22DE22330[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v8 = *a2;
  *a1 = *a2;
  v9 = v8 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v9;
}

uint64_t type metadata accessor for FullScreenPreviewController.Content.PreviewType(uint64_t a1)
{
  return sub_22DD6481C(a1, qword_255DB6850);
}

void sub_22DD77DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id *v5;
  uint64_t v6;

  v4 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (id *)(a1 + *(int *)(a2 + 20));
  type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
    case 4u:
      swift_bridgeObjectRelease();
      break;
    case 1u:
      v6 = sub_22DE1DEB8();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      break;
    case 2u:

      break;
    default:
      return;
  }
}

void sub_22DD77E78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;

  v4 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
  v5 = (char *)sub_22DD77EF4 + 4 * byte_22DE2233A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22DD77EF4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v3 = v2[1];
  *v1 = *v2;
  v1[1] = v3;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_22DD77FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    sub_22DD5C950(a1 + *(int *)(a3 + 20), type metadata accessor for FullScreenPreviewController.Content.PreviewType);
    type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
    v7 = (char *)&loc_22DD7803C + 4 * byte_22DE2233F[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return a1;
}

uint64_t sub_22DD780F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_22DE1DEB8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_22DD781BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    sub_22DD5C950(a1 + v7, type metadata accessor for FullScreenPreviewController.Content.PreviewType);
    v10 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_22DE1DEB8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22DD78298()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD782A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_22DE1E050();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_22DD78318()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD78324(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_22DE1E050();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_22DD783A0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_22DE1E050();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for FullScreenPreviewController.Content.PreviewType(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_22DD78424(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_22DD78474 + 4 * byte_22DE22344[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

void sub_22DD78548(id *a1)
{
  uint64_t v2;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
    case 4u:
      swift_bridgeObjectRelease();
      break;
    case 1u:
      v2 = sub_22DE1DEB8();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
      break;
    case 2u:

      break;
    default:
      return;
  }
}

void sub_22DD785D8()
{
  char *v0;

  v0 = (char *)sub_22DD7861C + 4 * byte_22DE2234E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_22DD7861C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_22DD786D0(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_22DD5C950(result, type metadata accessor for FullScreenPreviewController.Content.PreviewType);
    v2 = (char *)&loc_22DD7872C + 4 * byte_22DE22353[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void *sub_22DD787E8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22DE1DEB8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_22DD78874(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_22DD5C950((uint64_t)a1, type metadata accessor for FullScreenPreviewController.Content.PreviewType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_22DE1DEB8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22DD78918()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22DE1DEB8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_22DD789A4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6888);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22DD789E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DD78A30()
{
  uint64_t v0;

  return sub_22DD77A6C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_22DD78A48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DD78A90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DD78AD8()
{
  return sub_22DD78A30();
}

uint64_t sub_22DD78AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[7];

  v10 = sub_22DE1F1F0();
  v25 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v24 - v14;
  v16 = sub_22DE1F1B4();
  MEMORY[0x24BDAC7A8](v16);
  sub_22DE1F148();
  v26 = a1;
  v27 = a2;
  sub_22DE1E674();
  result = swift_release();
  if (a3)
  {
    v24 = v10;
    if (qword_255DB6890)
    {
      sub_22DD50D8C(a3);
      swift_retain();
      sub_22DE1F208();
      swift_release();
    }
    else
    {
      swift_retain();
    }
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = a3;
    *(_QWORD *)(v18 + 24) = a4;
    aBlock[4] = sub_22DD54288;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DD9C498;
    aBlock[3] = &block_descriptor;
    _Block_copy(aBlock);
    v28 = MEMORY[0x24BEE4AF8];
    sub_22DD78E08();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
    sub_22DD78E50();
    sub_22DE1F67C();
    sub_22DE1F214();
    swift_allocObject();
    v19 = sub_22DE1F1FC();
    swift_release();
    qword_255DB6890 = v19;
    swift_release();
    if (qword_255DB6890)
    {
      sub_22DD78E9C();
      swift_retain();
      v20 = (void *)sub_22DE1F574();
      sub_22DE1F1E4();
      MEMORY[0x22E31FAA8](v13, a5);
      v21 = *(void (**)(char *, uint64_t))(v25 + 8);
      v22 = v13;
      v23 = v24;
      v21(v22, v24);
      sub_22DE1F550();
      swift_release();

      sub_22DD50DE0(a3);
      return ((uint64_t (*)(char *, uint64_t))v21)(v15, v23);
    }
    else
    {
      return sub_22DD50DE0(a3);
    }
  }
  return result;
}

uint64_t sub_22DD78DCC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_22DD78E08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DB6898;
  if (!qword_255DB6898)
  {
    v1 = sub_22DE1F1B4();
    result = MEMORY[0x22E3207B0](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_255DB6898);
  }
  return result;
}

unint64_t sub_22DD78E50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DB68A0;
  if (!qword_255DB68A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_255DB8150);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_255DB68A0);
  }
  return result;
}

unint64_t sub_22DD78E9C()
{
  unint64_t result;

  result = qword_255DB8140;
  if (!qword_255DB8140)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255DB8140);
  }
  return result;
}

uint64_t destroy for BatchButton()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for BatchButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BatchButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for BatchButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for BatchButton(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BatchButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BatchButton()
{
  return &type metadata for BatchButton;
}

uint64_t sub_22DD790CC()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 sub_22DD790DC@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __n128 result;
  _OWORD v17[9];

  v3 = a1[1];
  *(_QWORD *)&v17[0] = *a1;
  *((_QWORD *)&v17[0] + 1) = v3;
  sub_22DD50840();
  swift_bridgeObjectRetain();
  v4 = sub_22DE1ED94();
  v6 = v5;
  v8 = v7;
  v10 = v9 & 1;
  v11 = sub_22DE1F130();
  sub_22DD4F3CC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v17, 0.0, 1, 0.0, 1, v11, v12, v4, v6, v10, v8);
  sub_22DD4FC6C(v4, v6, v10);
  swift_bridgeObjectRelease();
  v13 = v17[7];
  *(_OWORD *)(a2 + 96) = v17[6];
  *(_OWORD *)(a2 + 112) = v13;
  *(_OWORD *)(a2 + 128) = v17[8];
  v14 = v17[3];
  *(_OWORD *)(a2 + 32) = v17[2];
  *(_OWORD *)(a2 + 48) = v14;
  v15 = v17[5];
  *(_OWORD *)(a2 + 64) = v17[4];
  *(_OWORD *)(a2 + 80) = v15;
  result = (__n128)v17[1];
  *(_OWORD *)a2 = v17[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_22DD791DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t OpaqueTypeConformance2;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;

  v93 = a1;
  v91 = sub_22DE1E9E0();
  v76 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91);
  v75 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB68A8);
  v78 = *(_QWORD *)(v92 - 8);
  v3 = MEMORY[0x24BDAC7A8](v92);
  v74 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v77 = (char *)&v66 - v5;
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB68B0);
  MEMORY[0x24BDAC7A8](v89);
  v90 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_22DE1EB90();
  v73 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v72 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_22DE1E50C();
  v8 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB68B8);
  v80 = *(_QWORD *)(v11 - 8);
  v81 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB68C0);
  MEMORY[0x24BDAC7A8](v79);
  v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB68C8);
  MEMORY[0x24BDAC7A8](v87);
  v83 = (uint64_t)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB68D0);
  v69 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85);
  v68 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB68D8);
  v71 = *(_QWORD *)(v88 - 8);
  v18 = MEMORY[0x24BDAC7A8](v88);
  v67 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v70 = (char *)&v66 - v20;
  v21 = *(_BYTE *)(v1 + 40);
  v84 = v1;
  v94 = v1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB68E0);
  sub_22DD79B20();
  sub_22DE1F01C();
  v22 = v82;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BDEB488], v82);
  KeyPath = swift_getKeyPath();
  v24 = (uint64_t *)&v15[*(int *)(v79 + 36)];
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB68F0);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v24 + *(int *)(v25 + 28), v10, v22);
  *v24 = KeyPath;
  if ((v21 & 1) != 0)
  {
    v27 = v80;
    v26 = v81;
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v15, v13, v81);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v26);
    v28 = *(_BYTE *)(v84 + 16);
    v29 = swift_getKeyPath();
    v30 = swift_allocObject();
    *(_BYTE *)(v30 + 16) = v28;
    v31 = v83;
    sub_22DD79BA4((uint64_t)v15, v83);
    v32 = v87;
    v33 = (uint64_t *)(v31 + *(int *)(v87 + 36));
    *v33 = v29;
    v33[1] = (uint64_t)sub_22DD543CC;
    v33[2] = v30;
    sub_22DD5071C((uint64_t)v15, &qword_255DB68C0);
    v34 = v75;
    sub_22DE1E9D4();
    v35 = sub_22DD79BEC();
    v36 = sub_22DD504A8(&qword_255DB6928, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEDC8], MEMORY[0x24BDEEDB8]);
    v37 = v74;
    v38 = v91;
    sub_22DE1EDDC();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v34, v38);
    sub_22DD5071C(v31, &qword_255DB68C8);
    v39 = v78;
    v40 = v77;
    v41 = v37;
    v42 = v92;
    (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v77, v41, v92);
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v90, v40, v42);
    swift_storeEnumTagMultiPayload();
    v43 = sub_22DD504A8(&qword_255DB5848, (uint64_t (*)(uint64_t))MEMORY[0x24BDF0DA8], MEMORY[0x24BDF0D88]);
    v95 = v32;
    v96 = v86;
    v97 = v35;
    v98 = v43;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v95 = v85;
    v96 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    v95 = v32;
    v96 = v38;
    v97 = v35;
    v98 = v36;
    swift_getOpaqueTypeConformance2();
    sub_22DE1EAD0();
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v40, v42);
  }
  else
  {
    v47 = v80;
    v46 = v81;
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v15, v13, v81);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v13, v46);
    v48 = *(_BYTE *)(v84 + 16);
    v49 = swift_getKeyPath();
    v50 = swift_allocObject();
    *(_BYTE *)(v50 + 16) = v48;
    v51 = v83;
    sub_22DD79BA4((uint64_t)v15, v83);
    v52 = v87;
    v53 = (uint64_t *)(v51 + *(int *)(v87 + 36));
    *v53 = v49;
    v53[1] = (uint64_t)sub_22DD54594;
    v53[2] = v50;
    sub_22DD5071C((uint64_t)v15, &qword_255DB68C0);
    v54 = v72;
    sub_22DE1EB84();
    v55 = sub_22DD79BEC();
    v56 = sub_22DD504A8(&qword_255DB5848, (uint64_t (*)(uint64_t))MEMORY[0x24BDF0DA8], MEMORY[0x24BDF0D88]);
    v57 = v68;
    v58 = v86;
    sub_22DE1EDDC();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v54, v58);
    sub_22DD5071C(v51, &qword_255DB68C8);
    v95 = v52;
    v96 = v58;
    v97 = v55;
    v98 = v56;
    v59 = swift_getOpaqueTypeConformance2();
    v60 = v67;
    v61 = v85;
    sub_22DE1EEB4();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v57, v61);
    v62 = v71;
    v63 = v70;
    v64 = v88;
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v70, v60, v88);
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v90, v63, v64);
    swift_storeEnumTagMultiPayload();
    v95 = v61;
    v96 = v59;
    swift_getOpaqueTypeConformance2();
    v65 = sub_22DD504A8(&qword_255DB6928, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEDC8], MEMORY[0x24BDEEDB8]);
    v95 = v52;
    v96 = v91;
    v97 = v55;
    v98 = v65;
    swift_getOpaqueTypeConformance2();
    sub_22DE1EAD0();
    return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v63, v64);
  }
}

uint64_t sub_22DD79AE0@<X0>(uint64_t a1@<X8>)
{
  return sub_22DD791DC(a1);
}

double sub_22DD79B18@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_22DD790DC((_QWORD *)*(_QWORD *)(v1 + 16), a1).n128_u64[0];
  return result;
}

unint64_t sub_22DD79B20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB68E8;
  if (!qword_255DB68E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB68E0);
    v2[0] = MEMORY[0x24BDF1F80];
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB68E8);
  }
  return result;
}

uint64_t sub_22DD79B94()
{
  return swift_deallocObject();
}

uint64_t sub_22DD79BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB68C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_22DD79BEC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB68F8;
  if (!qword_255DB68F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB68C8);
    v2[0] = sub_22DD79C70();
    v2[1] = sub_22DD508B0(&qword_255DB6918, &qword_255DB6920, MEMORY[0x24BDF1248]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB68F8);
  }
  return result;
}

unint64_t sub_22DD79C70()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB6900;
  if (!qword_255DB6900)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB68C0);
    v2[0] = sub_22DD508B0(&qword_255DB6908, &qword_255DB68B8, MEMORY[0x24BDF43B0]);
    v2[1] = sub_22DD508B0(&qword_255DB6910, &qword_255DB68F0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB6900);
  }
  return result;
}

uint64_t sub_22DD79D0C()
{
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for BatchButton.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22DD79D68 + 4 * byte_22DE22445[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22DD79D9C + 4 * byte_22DE22440[v4]))();
}

uint64_t sub_22DD79D9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DD79DA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DD79DACLL);
  return result;
}

uint64_t sub_22DD79DB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DD79DC0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22DD79DC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DD79DCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BatchButton.Style()
{
  return &type metadata for BatchButton.Style;
}

unint64_t sub_22DD79DEC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  unint64_t v4;
  uint64_t OpaqueTypeConformance2;
  _QWORD v6[6];

  result = qword_255DB6930;
  if (!qword_255DB6930)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6938);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB68D0);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB68C8);
    sub_22DE1EB90();
    v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF0DA8];
    v4 = sub_22DD79BEC();
    sub_22DD504A8(&qword_255DB5848, v3, MEMORY[0x24BDF0D88]);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v6[2] = v2;
    v6[3] = sub_22DE1E9E0();
    v6[4] = v4;
    v6[5] = sub_22DD504A8(&qword_255DB6928, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEDC8], MEMORY[0x24BDEEDB8]);
    v6[0] = OpaqueTypeConformance2;
    v6[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v1, v6);
    atomic_store(result, (unint64_t *)&qword_255DB6930);
  }
  return result;
}

unint64_t sub_22DD79F30()
{
  unint64_t result;

  result = qword_255DB6940;
  if (!qword_255DB6940)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE22558, &type metadata for BatchButton.Style);
    atomic_store(result, (unint64_t *)&qword_255DB6940);
  }
  return result;
}

uint64_t sub_22DD79F78@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + qword_255DB6948);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_22DD54288;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_22DD50D8C(v4);
}

uint64_t sub_22DD7A00C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_22DD7A850;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + qword_255DB6948);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_22DD50D8C(v3);
  return sub_22DD50DE0(v8);
}

uint64_t sub_22DD7A0C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + qword_255DB6948);
  swift_beginAccess();
  v2 = *v1;
  sub_22DD50D8C(*v1);
  return v2;
}

uint64_t sub_22DD7A11C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + qword_255DB6948);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_22DD50DE0(v6);
}

uint64_t (*sub_22DD7A178())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

char *BatchEvaluationViewController.__allocating_init(scoreController:useNavigationStack:showsCloseButton:onDismiss:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return BatchEvaluationViewController.init(scoreController:useNavigationStack:showsCloseButton:onDismiss:)(a1, a2, a3, a4, a5);
}

char *BatchEvaluationViewController.init(scoreController:useNavigationStack:showsCloseButton:onDismiss:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v8 = (_QWORD *)(v5 + qword_255DB6948);
  type metadata accessor for BatchController();
  *v8 = 0;
  v8[1] = 0;
  swift_allocObject();
  v9 = swift_retain();
  BatchController.init(scoreController:)(v9);
  sub_22DE1EFEC();
  v10 = (char *)sub_22DE1EA28();
  v11 = (uint64_t *)&v10[qword_255DB6948];
  swift_beginAccess();
  v12 = *v11;
  *v11 = a4;
  v11[1] = a5;
  v13 = v10;
  swift_retain();
  sub_22DD50DE0(v12);
  v14 = v13;
  objc_msgSend(v14, sel_setModalInPresentation_, 1);

  swift_release();
  swift_release();
  return v14;
}

void sub_22DD7A358(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_22DD7A63C();
}

uint64_t sub_22DD7A380(int a1, int a2, void *aBlock)
{
  void *v3;
  uint64_t v4;

  v3 = _Block_copy(aBlock);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  _s8Feedback29BatchEvaluationViewControllerC010shouldShowB2UI10completionyySbc_tFZ_0((void (*)(uint64_t))sub_22DD7A818, v4);
  return swift_release();
}

id sub_22DD7A3D4(char a1)
{
  char *v1;
  id result;
  char *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for BatchEvaluationViewController();
  objc_msgSendSuper2(&v7, sel_viewWillDisappear_, a1 & 1);
  result = objc_msgSend(v1, sel_isBeingDismissed);
  if ((_DWORD)result)
  {
    v4 = &v1[qword_255DB6948];
    result = (id)swift_beginAccess();
    v5 = *(void (**)(uint64_t))v4;
    if (*(_QWORD *)v4)
    {
      v6 = swift_retain();
      v5(v6);
      return (id)sub_22DD50DE0((uint64_t)v5);
    }
  }
  return result;
}

void sub_22DD7A478(void *a1, uint64_t a2, uint64_t a3)
{
  char *v4;
  char *v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  objc_super v8;

  v8.receiver = a1;
  v8.super_class = (Class)type metadata accessor for BatchEvaluationViewController();
  v4 = (char *)v8.receiver;
  objc_msgSendSuper2(&v8, sel_viewWillDisappear_, a3);
  if (objc_msgSend(v4, sel_isBeingDismissed))
  {
    v5 = &v4[qword_255DB6948];
    swift_beginAccess();
    v6 = *(void (**)(uint64_t))v5;
    if (*(_QWORD *)v5)
    {
      v7 = swift_retain();
      v6(v7);
      sub_22DD50DE0((uint64_t)v6);
    }
  }

}

void BatchEvaluationViewController.__allocating_init(rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void BatchEvaluationViewController.init(rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void BatchEvaluationViewController.__allocating_init(coder:rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void BatchEvaluationViewController.init(coder:rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_22DD7A5E0()
{
  uint64_t v0;

  return sub_22DD50DE0(*(_QWORD *)(v0 + qword_255DB6948));
}

id BatchEvaluationViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BatchEvaluationViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_22DD7A628(uint64_t a1)
{
  return sub_22DD50DE0(*(_QWORD *)(a1 + qword_255DB6948));
}

void sub_22DD7A63C()
{
  char *v0;
  char *v1;

  v1 = &v0[qword_255DB6948];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;

  sub_22DE1F730();
  swift_bridgeObjectRelease();
  sub_22DE1F7CC();
  __break(1u);
}

uint64_t type metadata accessor for BatchEvaluationViewController()
{
  uint64_t result;

  result = qword_255DB6950;
  if (!qword_255DB6950)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22DD7A70C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for BatchEvaluationViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BatchEvaluationViewController.onDismiss.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for BatchEvaluationViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 8))();
}

uint64_t dispatch thunk of BatchEvaluationViewController.onDismiss.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for BatchEvaluationViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 16))();
}

uint64_t dispatch thunk of BatchEvaluationViewController.onDismiss.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for BatchEvaluationViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 24))();
}

uint64_t dispatch thunk of BatchEvaluationViewController.__allocating_init(scoreController:useNavigationStack:showsCloseButton:onDismiss:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for BatchEvaluationViewController + v0 + 32))();
}

uint64_t sub_22DD7A7EC()
{
  return type metadata accessor for BatchEvaluationViewController();
}

uint64_t sub_22DD7A7F4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_22DD7A818(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

uint64_t sub_22DD7A82C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD7A850()
{
  uint64_t v0;

  return sub_22DDA2DA0(*(uint64_t (**)(void))(v0 + 16));
}

void destroy for ActionButton(uint64_t a1)
{
  swift_release();
  sub_22DD56E8C(*(id *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for ActionButton(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v3;
  v4 = *(void **)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 32);
  swift_retain();
  sub_22DD56E54(v4, v5);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  return a1;
}

uint64_t assignWithCopy for ActionButton(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v4;
  void *v5;
  void *v6;
  char v7;

  v2 = a2;
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  v5 = *(void **)(v2 + 24);
  LOBYTE(v2) = *(_BYTE *)(v2 + 32);
  sub_22DD56E54(v5, v2);
  v6 = *(void **)(a1 + 24);
  v7 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v2;
  sub_22DD56E8C(v6, v7);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ActionButton(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  void *v6;
  char v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v4;
  swift_release();
  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(void **)(a1 + 24);
  v7 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v5;
  sub_22DD56E8C(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionButton(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionButton(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionButton()
{
  return &type metadata for ActionButton;
}

uint64_t sub_22DD7AA78()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_22DD7AA88(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;

  v2 = v1;
  v27 = a1;
  v18 = sub_22DE1E65C();
  v26 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v17[1] = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22DE1E704();
  v20 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB69A0);
  v19 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB69A8);
  v21 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB69B0);
  v24 = *(_QWORD *)(v11 - 8);
  v25 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v23 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB69B8);
  MEMORY[0x24BDAC7A8](v13);
  v22 = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *(_QWORD *)(v2 + 8);
  v32 = *(_BYTE *)(v2 + 16);
  v29 = *(_QWORD *)(v2 + 24);
  v30 = *(_BYTE *)(v2 + 32);
  v15 = swift_allocObject();
  v16 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v15 + 32) = v16;
  *(_BYTE *)(v15 + 48) = *(_BYTE *)(v2 + 32);
  v28 = v2;
  sub_22DD7B7C0((uint64_t)&v31);
  sub_22DD7B7E8((uint64_t)&v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB69C0);
  sub_22DD508B0(&qword_255DB69C8, &qword_255DB69C0, MEMORY[0x24BDF4498]);
  sub_22DE1F01C();
  sub_22DE1E6F8();
  sub_22DD508B0(&qword_255DB69D0, &qword_255DB69A0, MEMORY[0x24BDF43B0]);
  sub_22DD504A8((unint64_t *)&qword_255DB69D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDED868], MEMORY[0x24BDED858]);
  sub_22DE1EDDC();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v7);
  __asm { BR              X9 }
}

uint64_t sub_22DD7AD90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t OpaqueTypeConformance2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8 = *(_QWORD *)(v7 - 280);
  sub_22DE1E650();
  v9 = *(_QWORD *)(v7 - 272);
  sub_22DE1E680();
  *(_QWORD *)(v7 - 152) = v1;
  *(_QWORD *)(v7 - 144) = v5;
  *(_QWORD *)(v7 - 136) = v6;
  *(_QWORD *)(v7 - 128) = v2;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v11 = *(_QWORD *)(v7 - 232);
  sub_22DE1EE3C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 208) + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 248) + 8))(v0, v4);
  *(_QWORD *)(v7 - 152) = sub_22DD7B814(v3);
  *(_QWORD *)(v7 - 144) = v12;
  *(_QWORD *)(v7 - 168) = v4;
  *(_QWORD *)(v7 - 160) = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_22DD50840();
  v13 = *(_QWORD *)(v7 - 240);
  v14 = *(_QWORD *)(v7 - 216);
  sub_22DE1EE54();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 224) + 8))(v11, v14);
  return sub_22DD5003C(v13, *(_QWORD *)(v7 - 200), &qword_255DB69B8);
}

void sub_22DD7AF04(unsigned __int8 *a1)
{
  char v2;
  uint64_t v3;
  void *v4;
  char v5;
  id v6;

  v2 = a1[16];
  v3 = swift_retain();
  sub_22DD83CC8(v3, v2);
  swift_release();
  v4 = (void *)*((_QWORD *)a1 + 3);
  v5 = a1[32];
  sub_22DD56E54(v4, v5);
  v6 = sub_22DD83CEC(v4, v5);
  sub_22DD56E8C(v4, v5);
  sub_22DD6B2C4((uint64_t)v6, *a1);
  swift_release();

}

uint64_t sub_22DD7AFA0@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  *(_QWORD *)a2 = sub_22DE1E8F0();
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB69E0);
  return sub_22DD7AFEC(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_22DD7AFEC@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t *v14;
  char v15;
  uint64_t v16;
  _QWORD v18[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB69E8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB69F0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = sub_22DE1E9EC();
  *((_QWORD *)v6 + 1) = 0x4020000000000000;
  v6[16] = 0;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB69F8);
  sub_22DD7B19C(a1, (uint64_t)&v6[*(int *)(v10 + 44)]);
  v11 = sub_22DE1EF38();
  KeyPath = swift_getKeyPath();
  v18[1] = v11;
  swift_retain();
  v13 = sub_22DE1E5F0();
  sub_22DD506A0((uint64_t)v6, (uint64_t)v9, &qword_255DB69E8);
  swift_release();
  v14 = (uint64_t *)&v9[*(int *)(v7 + 36)];
  *v14 = KeyPath;
  v14[1] = v13;
  sub_22DD5071C((uint64_t)v6, &qword_255DB69E8);
  v15 = sub_22DE1EC5C();
  sub_22DD506A0((uint64_t)v9, a2, &qword_255DB69F0);
  v16 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB6A00) + 36);
  *(_BYTE *)v16 = v15;
  *(_OWORD *)(v16 + 8) = 0u;
  *(_OWORD *)(v16 + 24) = 0u;
  *(_BYTE *)(v16 + 40) = 1;
  return sub_22DD5071C((uint64_t)v9, &qword_255DB69F0);
}

uint64_t sub_22DD7B19C@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v62 = a2;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6480);
  MEMORY[0x24BDAC7A8](v61);
  v4 = (uint64_t *)((char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v56 = sub_22DE1F19C();
  v59 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22DE1F184();
  v52 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_22DE1E758();
  v51 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB55D8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (uint64_t)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6A08);
  MEMORY[0x24BDAC7A8](v50);
  v16 = (uint64_t *)((char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6A10);
  v17 = MEMORY[0x24BDAC7A8](v60);
  v63 = (uint64_t)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v55 = (uint64_t)&v49 - v19;
  v53 = *a1;
  sub_22DE04438(0, v53);
  v20 = sub_22DE1EFBC();
  v21 = sub_22DE1ECD4();
  v57 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v58 = v21;
  v57(v14, 1, 1, v21);
  v22 = sub_22DE1ECF8();
  sub_22DD5071C(v14, &qword_255DB55D8);
  KeyPath = swift_getKeyPath();
  sub_22DE1F178();
  sub_22DE1F190();
  sub_22DD504A8(&qword_255DB64D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF5618], MEMORY[0x24BDF5608]);
  sub_22DE1E74C();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v6, v56);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v9, v7);
  v24 = swift_getKeyPath();
  v25 = v51;
  v26 = v54;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))((char *)v4 + *(int *)(v61 + 28), v11, v54);
  *v4 = v24;
  sub_22DD506A0((uint64_t)v4, (uint64_t)v16 + *(int *)(v50 + 36), &qword_255DB6480);
  *v16 = v20;
  v16[1] = KeyPath;
  v16[2] = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22DD5071C((uint64_t)v4, &qword_255DB6480);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v26);
  swift_release();
  swift_release();
  swift_release();
  v27 = sub_22DE1EF38();
  v28 = v63;
  sub_22DD506A0((uint64_t)v16, v63, &qword_255DB6A08);
  *(_QWORD *)(v28 + *(int *)(v60 + 36)) = v27;
  sub_22DD5071C((uint64_t)v16, &qword_255DB6A08);
  v29 = v55;
  sub_22DD5003C(v28, v55, &qword_255DB6A10);
  v30 = qword_22DE22718[v53];
  v64 = qword_22DE226F8[v53];
  v65 = v30;
  sub_22DD50840();
  v31 = sub_22DE1ED94();
  v33 = v32;
  LOBYTE(v20) = v34 & 1;
  v57(v14, 1, 1, v58);
  sub_22DE1ECF8();
  sub_22DD5071C(v14, &qword_255DB55D8);
  v35 = sub_22DE1ED64();
  v37 = v36;
  LOBYTE(v14) = v38;
  v40 = v39;
  swift_release();
  LOBYTE(v24) = v14 & 1;
  sub_22DD4FC6C(v31, v33, v20);
  swift_bridgeObjectRelease();
  v41 = swift_getKeyPath();
  v42 = sub_22DE1EF38();
  v43 = v29;
  v44 = v29;
  v45 = v63;
  sub_22DD506A0(v44, v63, &qword_255DB6A10);
  v46 = v62;
  sub_22DD506A0(v45, v62, &qword_255DB6A10);
  v47 = v46 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB6A18) + 48);
  *(_QWORD *)v47 = v35;
  *(_QWORD *)(v47 + 8) = v37;
  *(_BYTE *)(v47 + 16) = v24;
  *(_QWORD *)(v47 + 24) = v40;
  *(_QWORD *)(v47 + 32) = v41;
  *(_QWORD *)(v47 + 40) = 1;
  *(_BYTE *)(v47 + 48) = 0;
  *(_QWORD *)(v47 + 56) = v42;
  *(_WORD *)(v47 + 64) = 1;
  sub_22DD50088(v35, v37, v24);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_22DD5071C(v43, &qword_255DB6A10);
  sub_22DD4FC6C(v35, v37, v24);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_22DD5071C(v45, &qword_255DB6A10);
}

void sub_22DD7B748(uint64_t a1@<X8>)
{
  sub_22DD7AA88(a1);
}

uint64_t sub_22DD7B780()
{
  uint64_t v0;

  swift_release();
  sub_22DD56E8C(*(id *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

void sub_22DD7B7B0()
{
  uint64_t v0;

  sub_22DD7AF04((unsigned __int8 *)(v0 + 16));
}

uint64_t sub_22DD7B7B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DD7AFA0(*(char **)(v1 + 16), a1);
}

uint64_t sub_22DD7B7C0(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_22DD7B7E8(uint64_t a1)
{
  sub_22DD56E54(*(id *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

uint64_t sub_22DD7B814(unsigned __int8 a1)
{
  if (a1 >= 2u)
  {
    if (a1 == 2)
      return 0xD000000000000024;
    else
      return 0x7078652070696B53;
  }
  else
  {
    sub_22DE1F730();
    swift_bridgeObjectRelease();
    sub_22DE1F328();
    swift_bridgeObjectRelease();
    return 0xD000000000000013;
  }
}

unint64_t sub_22DD7B91C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  _QWORD v4[6];

  result = qword_255DB6A20;
  if (!qword_255DB6A20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB69B8);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB69A8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB69A0);
    sub_22DE1E704();
    v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED868];
    v4[4] = sub_22DD508B0(&qword_255DB69D0, &qword_255DB69A0, MEMORY[0x24BDF43B0]);
    v4[5] = sub_22DD504A8((unint64_t *)&qword_255DB69D8, v3, MEMORY[0x24BDED858]);
    v4[2] = v2;
    v4[3] = swift_getOpaqueTypeConformance2();
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_22DD504A8((unint64_t *)&qword_255DB58E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255DB6A20);
  }
  return result;
}

uint64_t sub_22DD7BA4C()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_22DD7BC38();
  sub_22DE1E068();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_22DD7BAB8()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_22DD7BC38();
  sub_22DE1E068();
  swift_release();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_22DD7BB24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Feedback15DebugController___observationRegistrar;
  v2 = sub_22DE1E098();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_22DD7BB74()
{
  return type metadata accessor for DebugController();
}

uint64_t type metadata accessor for DebugController()
{
  uint64_t result;

  result = qword_255DB6A58;
  if (!qword_255DB6A58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22DD7BBB8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22DE1E098();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_22DD7BC38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DB6670;
  if (!qword_255DB6670)
  {
    v1 = type metadata accessor for DebugController();
    result = MEMORY[0x22E3207B0](")ٶ!ȷ", v1);
    atomic_store(result, (unint64_t *)&qword_255DB6670);
  }
  return result;
}

void sub_22DD7BC88(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t v20[3];
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  sub_22DD7CA4C(a1, (uint64_t)v20);
  if (!v21)
  {
    sub_22DD7CA0C((uint64_t)v20);
    goto LABEL_6;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    if (qword_255DB53A8 != -1)
      swift_once();
    v12 = sub_22DE1E410();
    __swift_project_value_buffer(v12, (uint64_t)qword_255DC3D48);
    v13 = a2;
    v14 = a2;
    v7 = sub_22DE1E3F8();
    v15 = sub_22DE1F4FC();
    if (os_log_type_enabled(v7, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v16 = 138412290;
      if (a2)
      {
        v18 = a2;
        v19 = _swift_stdlib_bridgeErrorToNSError();
        v20[0] = v19;
        sub_22DE1F628();
      }
      else
      {
        v20[0] = 0;
        sub_22DE1F628();
        v19 = 0;
      }
      *v17 = v19;

      _os_log_impl(&dword_22DD4B000, v7, v15, "Failed to evaluate webview height: %@", v16, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8160);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v17, -1, -1);
      MEMORY[0x22E320870](v16, -1, -1);
    }
    else
    {

    }
    goto LABEL_14;
  }
  v5 = (uint64_t *)(a3 + OBJC_IVAR____TtCV8FeedbackP33_A8ABDB21747C1062E707FA1890A6718D11BaseWebView10Controller_parent);
  v6 = *(_QWORD *)(a3
                 + OBJC_IVAR____TtCV8FeedbackP33_A8ABDB21747C1062E707FA1890A6718D11BaseWebView10Controller_parent
                 + 8);
  if (!v6)
    return;
  v8 = v5[4];
  v7 = v5[5];
  v9 = v5[2];
  v10 = v5[3];
  v20[0] = *v5;
  v20[1] = v6;
  v20[2] = v9;
  v21 = v10;
  v22 = v8;
  v23 = v7;
  v11 = sub_22DD7CA94(v20[0], v6, v9, v10, v8, v7);
  MEMORY[0x24BDAC7A8](v11);
  sub_22DE1F13C();
  sub_22DE1E674();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
LABEL_14:

}

uint64_t sub_22DD7BF80(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(__int128 *, void *);
  id v6;
  __int128 v8;
  __int128 v9;

  v5 = *(void (**)(__int128 *, void *))(a1 + 32);
  if (a2)
  {
    *((_QWORD *)&v9 + 1) = swift_getObjectType();
    *(_QWORD *)&v8 = a2;
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
  }
  swift_retain();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(&v8, a3);
  swift_release();

  return sub_22DD7CA0C((uint64_t)&v8);
}

id sub_22DD7C174()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseWebView.Controller();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BaseWebView.Controller()
{
  return objc_opt_self();
}

void destroy for BaseWebView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for BaseWebView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for BaseWebView(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[5];
  v5 = (void *)a1[5];
  a1[5] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for BaseWebView(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  return a1;
}

ValueMetadata *type metadata accessor for BaseWebView()
{
  return &type metadata for BaseWebView;
}

uint64_t sub_22DD7C380()
{
  return MEMORY[0x24BDF5560];
}

id sub_22DD7C38C()
{
  uint64_t *v0;

  return sub_22DD7C878(v0[3], v0[4], v0[5]);
}

uint64_t sub_22DD7C3A8()
{
  return sub_22DE1EA4C();
}

uint64_t sub_22DD7C3E8()
{
  sub_22DD7C984();
  return sub_22DE1EAAC();
}

uint64_t sub_22DD7C438()
{
  sub_22DD7C984();
  return sub_22DE1EA58();
}

void sub_22DD7C488()
{
  sub_22DD7C984();
  sub_22DE1EAA0();
  __break(1u);
}

unint64_t sub_22DD7C4B0()
{
  unint64_t result;

  result = qword_255DB6C00;
  if (!qword_255DB6C00)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE22810, &type metadata for BaseWebView);
    atomic_store(result, (unint64_t *)&qword_255DB6C00);
  }
  return result;
}

uint64_t sub_22DD7C4F4()
{
  uint64_t v0;
  uint64_t v1;

  sub_22DE1F730();
  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_22DE1F328();
  swift_bridgeObjectRetain();
  sub_22DE1F328();
  swift_bridgeObjectRelease();
  sub_22DE1F328();
  return v1;
}

uint64_t sub_22DD7C5AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[2];
  __int128 v46;

  v3 = sub_22DE1E2E4();
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v35 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = *(_OWORD *)(v1 + 32);
  v5 = *(_OWORD *)(v1 + 32);
  v30 = v1;
  v39 = v5;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6C28);
  sub_22DE1F010();
  v6 = v40;
  v7 = v41;
  v38 = sub_22DD7C4F4();
  v9 = v8;
  v10 = objc_allocWithZone((Class)type metadata accessor for BaseWebView.Controller());
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v11 = (char *)objc_msgSend(v10, sel_init);
  v12 = &v11[OBJC_IVAR____TtCV8FeedbackP33_A8ABDB21747C1062E707FA1890A6718D11BaseWebView10Controller_parent];
  v13 = *(_QWORD *)&v11[OBJC_IVAR____TtCV8FeedbackP33_A8ABDB21747C1062E707FA1890A6718D11BaseWebView10Controller_parent];
  v14 = *(_QWORD *)&v11[OBJC_IVAR____TtCV8FeedbackP33_A8ABDB21747C1062E707FA1890A6718D11BaseWebView10Controller_parent
                      + 8];
  v15 = *(_QWORD *)&v11[OBJC_IVAR____TtCV8FeedbackP33_A8ABDB21747C1062E707FA1890A6718D11BaseWebView10Controller_parent
                      + 16];
  v16 = *(_QWORD *)&v11[OBJC_IVAR____TtCV8FeedbackP33_A8ABDB21747C1062E707FA1890A6718D11BaseWebView10Controller_parent
                      + 24];
  v17 = *(_QWORD *)&v11[OBJC_IVAR____TtCV8FeedbackP33_A8ABDB21747C1062E707FA1890A6718D11BaseWebView10Controller_parent
                      + 32];
  v18 = *(void **)&v11[OBJC_IVAR____TtCV8FeedbackP33_A8ABDB21747C1062E707FA1890A6718D11BaseWebView10Controller_parent
                     + 40];
  v33 = v9;
  v34 = v6;
  *(_OWORD *)v12 = v6;
  *((_QWORD *)v12 + 2) = v7;
  *((_QWORD *)v12 + 3) = v38;
  *((_QWORD *)v12 + 4) = v9;
  *((_QWORD *)v12 + 5) = v11;
  v32 = v11;
  sub_22DD7CB40(v13, v14, v15, v16, v17, v18);
  sub_22DD7CDF4((uint64_t *)(v30 + 16), (uint64_t)v45);
  v40 = v46;
  sub_22DE1EFF8();
  sub_22DD7CDF4(v45, (uint64_t)&v39);
  sub_22DE1F130();
  sub_22DE1E5E4();
  v19 = v40;
  v20 = BYTE8(v40);
  v21 = v41;
  v22 = v42;
  v23 = v43;
  v24 = v44;
  if (qword_255DB53D8 != -1)
    swift_once();
  v25 = v37;
  v26 = __swift_project_value_buffer(v37, (uint64_t)qword_255DC3DA8);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v35, v26, v25);
  result = sub_22DE1EF98();
  *(_QWORD *)a1 = v34;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)&v6 + 1);
  *(_QWORD *)(a1 + 16) = v7;
  v28 = v33;
  *(_QWORD *)(a1 + 24) = v38;
  *(_QWORD *)(a1 + 32) = v28;
  *(_QWORD *)(a1 + 40) = v32;
  *(_QWORD *)(a1 + 48) = v19;
  *(_BYTE *)(a1 + 56) = v20;
  *(_QWORD *)(a1 + 64) = v21;
  *(_BYTE *)(a1 + 72) = v22;
  *(_QWORD *)(a1 + 80) = v23;
  *(_QWORD *)(a1 + 88) = v24;
  *(_QWORD *)(a1 + 96) = result;
  return result;
}

uint64_t sub_22DD7C840@<X0>(uint64_t a1@<X8>)
{
  return sub_22DD7C5AC(a1);
}

id sub_22DD7C878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  void *v6;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDFA920]), sel_init);
  objc_msgSend(v4, sel__setColorFilterEnabled_, 1);
  objc_msgSend(v4, sel__setDrawsBackground_, 0);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDFA918]), sel_initWithFrame_configuration_, v4, 0.0, 0.0, 0.0, 0.0);

  objc_msgSend(v5, sel_setUserInteractionEnabled_, 0);
  v6 = (void *)sub_22DE1F28C();

  objc_msgSend(v5, sel_setNavigationDelegate_, a3);
  return v5;
}

unint64_t sub_22DD7C984()
{
  unint64_t result;

  result = qword_255DB6C08;
  if (!qword_255DB6C08)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE22860, &type metadata for BaseWebView);
    atomic_store(result, (unint64_t *)&qword_255DB6C08);
  }
  return result;
}

uint64_t sub_22DD7C9C8()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_22DD7C9EC(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_22DD7BC88(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_22DD7CA0C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB6C10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22DD7CA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB6C10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_22DD7CA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  id result;

  if (a2)
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    return a6;
  }
  return result;
}

uint64_t sub_22DD7CAE0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6C20);
  return sub_22DE1F07C();
}

uint64_t sub_22DD7CB40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t result;

  if (a2)
  {
    swift_release();
    swift_bridgeObjectRelease();

    return swift_release();
  }
  return result;
}

uint64_t destroy for BatchWebView()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BatchWebView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BatchWebView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for BatchWebView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FBKFeedbackForm.FormResponse(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FBKFeedbackForm.FormResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BatchWebView()
{
  return &type metadata for BatchWebView;
}

uint64_t sub_22DD7CDE4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD7CDF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 8) = *((_BYTE *)a1 + 8);
  *(_QWORD *)a2 = v2;
  return a2;
}

uint64_t getEnumTagSinglePayload for SandboxExtensionURL.State(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SandboxExtensionURL.State(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_22DD7CE5C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_22DD7CE78(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for BatchWebView.SizeMode()
{
  return &type metadata for BatchWebView.SizeMode;
}

unint64_t sub_22DD7CEAC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB6C30;
  if (!qword_255DB6C30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6C38);
    v2[0] = sub_22DD7CF18();
    v2[1] = sub_22DD7CF84();
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB6C30);
  }
  return result;
}

unint64_t sub_22DD7CF18()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB6C40;
  if (!qword_255DB6C40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6C48);
    v2[0] = sub_22DD7C4B0();
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB6C40);
  }
  return result;
}

unint64_t sub_22DD7CF84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DB6C50;
  if (!qword_255DB6C50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6C58);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDF0710], v1);
    atomic_store(result, (unint64_t *)&qword_255DB6C50);
  }
  return result;
}

double sub_22DD7CFD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  double result;

  v1 = v0;
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
  sub_22DE1E068();
  swift_release();
  v2 = *(_QWORD *)(v0 + 16);
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6248, (uint64_t (*)(uint64_t))type metadata accessor for StateController, (uint64_t)&unk_22DE247FC);
  swift_retain();
  sub_22DE1E068();
  swift_release();
  v3 = *(_BYTE *)(v2 + 80);
  swift_release();
  result = 1.0;
  if ((v3 & 1) == 0)
  {
    swift_getKeyPath();
    sub_22DE1E068();
    swift_release();
    return fmin(fabs(*(double *)(v1 + 24)) * 0.0078125, 1.0);
  }
  return result;
}

double sub_22DD7D130()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
  sub_22DE1E068();
  swift_release();
  return *(double *)(v0 + 24);
}

uint64_t sub_22DD7D1B4()
{
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
  sub_22DE1E068();
  swift_release();
  return swift_retain();
}

uint64_t sub_22DD7D23C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
  sub_22DE1E068();
  swift_release();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_retain();
}

uint64_t sub_22DD7D2CC()
{
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
  swift_retain();
  sub_22DE1E05C();
  swift_release();
  return swift_release();
}

uint64_t sub_22DD7D384(uint64_t result, double a2)
{
  *(double *)(result + 24) = a2;
  return result;
}

uint64_t sub_22DD7D38C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC8Feedback15SwipeController___observationRegistrar;
  v2 = sub_22DE1E098();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_22DD7D3E4()
{
  return type metadata accessor for SwipeController();
}

uint64_t type metadata accessor for SwipeController()
{
  uint64_t result;

  result = qword_255DB6CF0;
  if (!qword_255DB6CF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22DD7D428()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22DE1E098();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_22DD7D4C8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16) = *(_QWORD *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_22DD7D500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  void (*v25)(char *, _QWORD, uint64_t);
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;

  v1 = type metadata accessor for BatchInteraction(0);
  MEMORY[0x24BDAC7A8](v1);
  v37 = (uint64_t)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v35 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v34 - v9;
  v10 = sub_22DE1E1F4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v34 - v15;
  if (qword_255DB5340 != -1)
    swift_once();
  v17 = qword_255DC3D08;
  sub_22DE1E200();
  LOBYTE(v17) = sub_22DD62E9C((uint64_t)v16, v17);
  v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v16, v10);
  if ((v17 & 1) != 0)
  {
    sub_22DD506A0(v0 + *(int *)(v1 + 28), (uint64_t)v5, qword_255DB5958);
    v19 = type metadata accessor for BatchInteraction.ContentPolarity(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v5, 1, v19) == 1)
    {
      v20 = qword_255DB5958;
      v21 = (uint64_t)v5;
LABEL_18:
      sub_22DD5071C(v21, v20);
      goto LABEL_19;
    }
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = type metadata accessor for BatchInteraction.ContentPolarity;
      v24 = (uint64_t)v5;
    }
    else
    {
      v28 = v36;
      sub_22DD5CF7C((uint64_t)v5, v36);
      v29 = v35;
      sub_22DD506A0(v28, v35, &qword_255DB5948);
      v30 = type metadata accessor for BatchInteraction.ContentPreview(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v29, 1, v30) == 1)
      {
        sub_22DD5071C(v28, &qword_255DB5948);
        v21 = v29;
        v20 = &qword_255DB5948;
        goto LABEL_18;
      }
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        swift_bridgeObjectRelease();
        sub_22DD5071C(v28, &qword_255DB5948);
        goto LABEL_19;
      }
      sub_22DD5071C(v28, &qword_255DB5948);
      v23 = type metadata accessor for BatchInteraction.ContentPreview;
      v24 = v29;
    }
    sub_22DD5C950(v24, v23);
LABEL_19:
    v38 = 0;
    v39 = 0xE000000000000000;
    sub_22DE1F730();
    swift_bridgeObjectRelease();
    v38 = 0xD00000000000001ELL;
    v39 = 0x800000022DE297A0;
    sub_22DE1F328();
    swift_bridgeObjectRelease();
    sub_22DE1F328();
    v31 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v32 = sub_22DE1DED0();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  if (qword_255DB5338 != -1)
    swift_once();
  v22 = qword_255DC3D00;
  sub_22DE1E200();
  LOBYTE(v22) = sub_22DD62E9C((uint64_t)v16, v22);
  v18(v16, v10);
  if ((v22 & 1) == 0)
  {
    sub_22DE1E200();
    v25 = *(void (**)(char *, _QWORD, uint64_t))(v11 + 104);
    v25(v14, *MEMORY[0x24BE31018], v10);
    v26 = MEMORY[0x22E31EA64](v16, v14);
    v18(v14, v10);
    v18(v16, v10);
    v27 = v37;
    sub_22DD6E960(v0, v37);
    if ((v26 & 1) == 0)
    {
      sub_22DE1E200();
      v25(v14, *MEMORY[0x24BE30FB0], v10);
      MEMORY[0x22E31EA64](v16, v14);
      v18(v14, v10);
      v18(v16, v10);
    }
    sub_22DD5C950(v27, type metadata accessor for BatchInteraction);
  }
  v31 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v32 = sub_22DE1DED0();
LABEL_21:

  return v32;
}

uint64_t sub_22DD7DBCC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_retain();
}

uint64_t sub_22DD7DC5C()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  swift_retain();
  sub_22DE1E05C();
  swift_release();
  return swift_release();
}

uint64_t sub_22DD7DD14@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  *a2 = *(_QWORD *)(v3 + 24);
  return swift_retain();
}

uint64_t sub_22DD7DDA4()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  swift_retain();
  sub_22DE1E05C();
  swift_release();
  return swift_release();
}

uint64_t sub_22DD7DE5C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  *a2 = *(_QWORD *)(v3 + 32);
  return swift_retain();
}

uint64_t sub_22DD7DEEC()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  swift_retain();
  sub_22DE1E05C();
  swift_release();
  return swift_release();
}

uint64_t sub_22DD7DFA4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  *a2 = *(_QWORD *)(v3 + 40);
  return swift_retain();
}

uint64_t sub_22DD7E034()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  swift_retain();
  sub_22DE1E05C();
  swift_release();
  return swift_release();
}

uint64_t sub_22DD7E0EC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_retain();
}

uint64_t sub_22DD7E17C()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  swift_retain();
  sub_22DE1E05C();
  swift_release();
  return swift_release();
}

uint64_t sub_22DD7E234@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  *a2 = *(_QWORD *)(v3 + 56);
  return swift_retain();
}

uint64_t sub_22DD7E2C4()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  swift_retain();
  sub_22DE1E05C();
  swift_release();
  return swift_release();
}

uint64_t sub_22DD7E37C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  *a2 = *(_QWORD *)(v3 + 64);
  return swift_retain();
}

uint64_t sub_22DD7E40C()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  swift_retain();
  sub_22DE1E05C();
  swift_release();
  return swift_release();
}

uint64_t sub_22DD7E4C4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E068();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_22DD7E550()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E05C();
  return swift_release();
}

uint64_t sub_22DD7E5F8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E068();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 17);
  return result;
}

uint64_t sub_22DD7E684()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E05C();
  return swift_release();
}

uint64_t BatchEvaluationView.init(scoreController:useNavigationStack:showsCloseButton:)@<X0>(char a1@<W1>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for BatchController();
  swift_allocObject();
  v6 = swift_retain();
  BatchController.init(scoreController:)(v6);
  sub_22DE1EFEC();
  result = swift_release();
  *(_QWORD *)a3 = v8;
  *(_QWORD *)(a3 + 8) = v9;
  *(_BYTE *)(a3 + 16) = a1;
  *(_BYTE *)(a3 + 17) = a2;
  return result;
}

uint64_t sub_22DD7E7C0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6670, (uint64_t (*)(uint64_t))type metadata accessor for DebugController, (uint64_t)")ٶ!ȷ");
  sub_22DE1E068();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_22DD7E84C()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6670, (uint64_t (*)(uint64_t))type metadata accessor for DebugController, (uint64_t)")ٶ!ȷ");
  sub_22DE1E05C();
  return swift_release();
}

uint64_t sub_22DD7E8F4(uint64_t a1)
{
  return sub_22DD7E91C(a1, qword_255DB6D88, MEMORY[0x24BDEF720]);
}

uint64_t sub_22DD7E908(uint64_t a1)
{
  return sub_22DD7E91C(a1, qword_255DB6DA0, MEMORY[0x24BDEF6E0]);
}

uint64_t sub_22DD7E91C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v5;

  v5 = sub_22DE1EB18();
  __swift_allocate_value_buffer(v5, a2);
  __swift_project_value_buffer(v5, (uint64_t)a2);
  return a3();
}

uint64_t BatchEvaluationView.useNavigationStack.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t BatchEvaluationView.useNavigationStack.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*BatchEvaluationView.useNavigationStack.modify())()
{
  return nullsub_1;
}

uint64_t BatchEvaluationView.showsCloseButton.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t BatchEvaluationView.showsCloseButton.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result;
  return result;
}

uint64_t (*BatchEvaluationView.showsCloseButton.modify())()
{
  return nullsub_1;
}

uint64_t BatchEvaluationView.init(controller:useNavigationStack:showsCloseButton:)@<X0>(char a1@<W1>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  type metadata accessor for BatchController();
  result = sub_22DE1EFEC();
  *(_QWORD *)a3 = v7;
  *(_QWORD *)(a3 + 8) = v8;
  *(_BYTE *)(a3 + 16) = a1;
  *(_BYTE *)(a3 + 17) = a2;
  return result;
}

uint64_t BatchEvaluationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  int *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _BYTE v37[4];
  int v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;

  v49 = a1;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6DB8);
  MEMORY[0x24BDAC7A8](v48);
  v3 = &v37[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v47 = type metadata accessor for BatchEvaluationViewContent();
  MEMORY[0x24BDAC7A8](v47);
  v46 = (uint64_t *)&v37[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6DC0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6DC8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v37[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6DD0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v37[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = *(_QWORD *)v1;
  v44 = *(_QWORD *)(v1 + 8);
  v45 = v15;
  v43 = *(unsigned __int8 *)(v1 + 16);
  v16 = *(unsigned __int8 *)(v1 + 17);
  v17 = sub_22DE1E0E0();
  v53 = v17;
  v54 = sub_22DD504A8(&qword_255DB81A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE30E10], MEMORY[0x24BE30E08]);
  v18 = __swift_allocate_boxed_opaque_existential_1(&v51);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v18, *MEMORY[0x24BE30E00], v17);
  LOBYTE(v17) = sub_22DE1E0A4();
  v19 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
  if ((v17 & 1) != 0)
  {
    v38 = v16;
    v39 = v3;
    v40 = v12;
    v41 = v8;
    v42 = v14;
    v21 = v46;
    v20 = (int *)v47;
    if (v43)
    {
      MEMORY[0x24BDAC7A8](v19);
      *(_QWORD *)&v37[-32] = v23;
      *(_QWORD *)&v37[-24] = v22;
      v37[-16] = 1;
      v37[-15] = v38;
      sub_22DD504A8(&qword_255DB6DF0, (uint64_t (*)(uint64_t))type metadata accessor for BatchEvaluationViewContent, (uint64_t)&protocol conformance descriptor for BatchEvaluationViewContent);
      sub_22DE1E6EC();
      v24 = v41;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(v7, v11, v41);
      swift_storeEnumTagMultiPayload();
      sub_22DD508B0(&qword_255DB6DE8, &qword_255DB6DC8, MEMORY[0x24BDED358]);
      v25 = (uint64_t)v42;
      sub_22DE1EAD0();
      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v24);
    }
    else
    {
      v51 = v45;
      *(_QWORD *)&v52 = v44;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E00);
      sub_22DE1EFF8();
      v32 = v50;
      *v21 = swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E08);
      swift_storeEnumTagMultiPayload();
      v33 = (uint64_t *)((char *)v21 + v20[5]);
      *v33 = swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5670);
      swift_storeEnumTagMultiPayload();
      *((_BYTE *)v21 + v20[7]) = 1;
      v34 = v20[8];
      v35 = (uint64_t *)((char *)v21 + v20[6]);
      v50 = v32;
      type metadata accessor for BatchController();
      sub_22DE1EFEC();
      v36 = v52;
      *v35 = v51;
      v35[1] = v36;
      *((_BYTE *)v21 + v34) = v38;
      sub_22DD5C570((uint64_t)v21, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for BatchEvaluationViewContent);
      swift_storeEnumTagMultiPayload();
      sub_22DD508B0(&qword_255DB6DE8, &qword_255DB6DC8, MEMORY[0x24BDED358]);
      sub_22DD504A8(&qword_255DB6DF0, (uint64_t (*)(uint64_t))type metadata accessor for BatchEvaluationViewContent, (uint64_t)&protocol conformance descriptor for BatchEvaluationViewContent);
      v25 = (uint64_t)v42;
      sub_22DE1EAD0();
      sub_22DD5C950((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for BatchEvaluationViewContent);
    }
    sub_22DD506A0(v25, (uint64_t)v39, &qword_255DB6DD0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6DD8);
    sub_22DD7F300();
    sub_22DD508B0(&qword_255DB6DF8, &qword_255DB6DD8, MEMORY[0x24BDF4700]);
    sub_22DE1EAD0();
    return sub_22DD5071C(v25, &qword_255DB6DD0);
  }
  else
  {
    v26 = sub_22DE1E9EC();
    sub_22DD7F1B8((uint64_t)&v51);
    v27 = v51;
    v28 = v53;
    v29 = v54;
    v30 = v52;
    *(_QWORD *)v3 = v26;
    *((_QWORD *)v3 + 1) = 0x4020000000000000;
    v3[16] = 0;
    *((_QWORD *)v3 + 3) = v27;
    *((_OWORD *)v3 + 2) = v30;
    v3[48] = v28;
    *((_QWORD *)v3 + 7) = v29;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6DD8);
    sub_22DD7F300();
    sub_22DD508B0(&qword_255DB6DF8, &qword_255DB6DD8, MEMORY[0x24BDF4700]);
    return sub_22DE1EAD0();
  }
}

uint64_t type metadata accessor for BatchEvaluationViewContent()
{
  uint64_t result;

  result = qword_255DB6FB0;
  if (!qword_255DB6FB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22DD7EFC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, uint64_t *a4@<X8>)
{
  char v4;
  int *v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;

  v4 = HIBYTE(a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E00);
  sub_22DE1EFF8();
  *a4 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E08);
  swift_storeEnumTagMultiPayload();
  v6 = (int *)type metadata accessor for BatchEvaluationViewContent();
  v7 = (uint64_t *)((char *)a4 + v6[5]);
  *v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5670);
  swift_storeEnumTagMultiPayload();
  *((_BYTE *)a4 + v6[7]) = 1;
  v8 = v6[8];
  v9 = (uint64_t *)((char *)a4 + v6[6]);
  type metadata accessor for BatchController();
  result = sub_22DE1EFEC();
  *v9 = a1;
  v9[1] = a2;
  *((_BYTE *)a4 + v8) = v4 & 1;
  return result;
}

uint64_t BatchEvaluationViewContent.init(controller:showsCloseButton:)@<X0>(char a1@<W1>, uint64_t *a2@<X8>)
{
  int *v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  *a2 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E08);
  swift_storeEnumTagMultiPayload();
  v4 = (int *)type metadata accessor for BatchEvaluationViewContent();
  v5 = (uint64_t *)((char *)a2 + v4[5]);
  *v5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5670);
  swift_storeEnumTagMultiPayload();
  *((_BYTE *)a2 + v4[7]) = 1;
  v6 = v4[8];
  v7 = (uint64_t *)((char *)a2 + v4[6]);
  type metadata accessor for BatchController();
  result = sub_22DE1EFEC();
  *v7 = v9;
  v7[1] = v10;
  *((_BYTE *)a2 + v6) = a1;
  return result;
}

uint64_t sub_22DD7F1B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;

  v2 = sub_22DE1EFBC();
  sub_22DE1E980();
  v3 = sub_22DE1ED7C();
  v5 = v4;
  v7 = v6 & 1;
  sub_22DE1ECE0();
  v8 = sub_22DE1ED40();
  v10 = v9;
  v12 = v11;
  v14 = v13 & 1;
  sub_22DD4FC6C(v3, v5, v7);
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 24) = v14;
  *(_QWORD *)(a1 + 32) = v12;
  swift_retain();
  sub_22DD50088(v8, v10, v14);
  swift_bridgeObjectRetain();
  sub_22DD4FC6C(v8, v10, v14);
  swift_release();
  return swift_bridgeObjectRelease();
}

unint64_t sub_22DD7F300()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB6DE0;
  if (!qword_255DB6DE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6DD0);
    v2[0] = sub_22DD508B0(&qword_255DB6DE8, &qword_255DB6DC8, MEMORY[0x24BDED358]);
    v2[1] = sub_22DD504A8(&qword_255DB6DF0, (uint64_t (*)(uint64_t))type metadata accessor for BatchEvaluationViewContent, (uint64_t)&protocol conformance descriptor for BatchEvaluationViewContent);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB6DE0);
  }
  return result;
}

uint64_t BatchEvaluationViewContent.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t *v58;
  ValueMetadata *v59;
  ValueMetadata *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  ValueMetadata *v64;
  unint64_t v65;
  uint64_t OpaqueTypeConformance2;
  unint64_t v67;
  uint64_t v68;
  ValueMetadata *v69;
  uint64_t v70;
  ValueMetadata *v71;
  unint64_t v72;
  uint64_t v73;
  ValueMetadata *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  ValueMetadata *v81;
  uint64_t v82;
  ValueMetadata *v83;
  unint64_t v84;
  uint64_t v85;
  ValueMetadata *v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  ValueMetadata *v92;
  uint64_t v93;
  ValueMetadata *v94;
  unint64_t v95;
  uint64_t v96;
  ValueMetadata *v97;
  unint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  ValueMetadata *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  ValueMetadata *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  ValueMetadata *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  ValueMetadata *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  ValueMetadata *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  ValueMetadata *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  ValueMetadata *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  char *v153;
  ValueMetadata *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t KeyPath;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t *v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t (*v175)(uint64_t);
  uint64_t v176;
  uint64_t v177;
  unint64_t v179;
  _QWORD v180[3];
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  char *v230;
  char *v231;
  char *v232;
  char *v233;
  uint64_t v234;
  uint64_t *v235;
  uint64_t v236;
  uint64_t v237;
  ValueMetadata *v238;
  unint64_t v239;
  unint64_t v240;
  uint64_t v241;
  ValueMetadata *v242;
  unint64_t v243;

  v2 = v1;
  v224 = a1;
  v223 = sub_22DE1E4D0();
  v225 = *(_QWORD *)(v223 - 8);
  MEMORY[0x24BDAC7A8](v223);
  v222 = (uint64_t)v180 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = sub_22DE1F46C();
  v220 = *(_QWORD *)(v221 - 8);
  MEMORY[0x24BDAC7A8](v221);
  v219 = (char *)v180 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for BatchEvaluationViewContent();
  v217 = *(_QWORD *)(v5 - 8);
  v218 = *(_QWORD *)(v217 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v216 = (uint64_t)v180 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E10);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (_QWORD *)((char *)v180 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E18);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v180 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E20);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v180 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v227 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E28);
  v181 = *(_QWORD *)(v227 - 8);
  MEMORY[0x24BDAC7A8](v227);
  v17 = (char *)v180 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v229 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E30);
  v182 = *(_QWORD *)(v229 - 8);
  MEMORY[0x24BDAC7A8](v229);
  v226 = (char *)v180 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E38);
  v184 = *(_QWORD *)(v183 - 8);
  MEMORY[0x24BDAC7A8](v183);
  v228 = (char *)v180 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E40);
  v187 = *(_QWORD *)(v186 - 8);
  MEMORY[0x24BDAC7A8](v186);
  v230 = (char *)v180 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E48);
  v190 = *(_QWORD *)(v189 - 8);
  MEMORY[0x24BDAC7A8](v189);
  v185 = (char *)v180 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E50);
  v192 = *(_QWORD *)(v191 - 8);
  MEMORY[0x24BDAC7A8](v191);
  v188 = (char *)v180 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E58);
  v194 = *(_QWORD *)(v193 - 8);
  MEMORY[0x24BDAC7A8](v193);
  v231 = (char *)v180 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E60);
  v197 = *(_QWORD *)(v196 - 8);
  MEMORY[0x24BDAC7A8](v196);
  v232 = (char *)v180 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E68);
  v200 = *(_QWORD *)(v199 - 8);
  MEMORY[0x24BDAC7A8](v199);
  v195 = (char *)v180 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E70);
  v202 = *(_QWORD *)(v201 - 8);
  MEMORY[0x24BDAC7A8](v201);
  v198 = (char *)v180 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E78);
  v206 = *(_QWORD *)(v205 - 8);
  MEMORY[0x24BDAC7A8](v205);
  v233 = (char *)v180 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E80);
  v210 = *(_QWORD *)(v208 - 8);
  MEMORY[0x24BDAC7A8](v208);
  v204 = (char *)v180 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E88);
  v212 = *(_QWORD *)(v213 - 8);
  MEMORY[0x24BDAC7A8](v213);
  v207 = (char *)v180 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E90);
  MEMORY[0x24BDAC7A8](v211);
  v209 = (char *)v180 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E98);
  MEMORY[0x24BDAC7A8](v215);
  v214 = (char *)v180 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v9 = sub_22DE1F130();
  v9[1] = v32;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6EA0);
  sub_22DD80C60(v2, (uint64_t)v9 + *(int *)(v33 + 44));
  v34 = sub_22DE1EC5C();
  sub_22DE1E4B8();
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = v41;
  sub_22DD506A0((uint64_t)v9, (uint64_t)v12, &qword_255DB6E10);
  v43 = &v12[*(int *)(v10 + 36)];
  *v43 = v34;
  *((_QWORD *)v43 + 1) = v36;
  *((_QWORD *)v43 + 2) = v38;
  *((_QWORD *)v43 + 3) = v40;
  *((_QWORD *)v43 + 4) = v42;
  v43[40] = 0;
  sub_22DD5071C((uint64_t)v9, &qword_255DB6E10);
  v44 = sub_22DE1EC74();
  sub_22DE1E4B8();
  v46 = v45;
  v48 = v47;
  v50 = v49;
  v52 = v51;
  sub_22DD506A0((uint64_t)v12, (uint64_t)v15, &qword_255DB6E18);
  v180[0] = v13;
  v53 = &v15[*(int *)(v13 + 36)];
  *v53 = v44;
  *((_QWORD *)v53 + 1) = v46;
  *((_QWORD *)v53 + 2) = v48;
  *((_QWORD *)v53 + 3) = v50;
  *((_QWORD *)v53 + 4) = v52;
  v53[40] = 0;
  sub_22DD5071C((uint64_t)v12, &qword_255DB6E18);
  v203 = v2;
  v236 = v2;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6EA8);
  v55 = sub_22DD8448C();
  v56 = sub_22DD508B0(&qword_255DB6EC8, &qword_255DB6EA8, MEMORY[0x24BDEF170]);
  v57 = v17;
  sub_22DE1EF14();
  sub_22DD5071C((uint64_t)v15, &qword_255DB6E20);
  v58 = (uint64_t *)(v2 + *(int *)(v5 + 24));
  v59 = (ValueMetadata *)v58[1];
  v241 = *v58;
  v242 = v59;
  v234 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E00);
  sub_22DE1F010();
  v61 = v237;
  v60 = v238;
  v62 = v239;
  swift_getKeyPath();
  v237 = v61;
  v238 = v60;
  v239 = v62;
  v180[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6ED0);
  sub_22DE1F088();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v63 = v241;
  v64 = v242;
  v65 = v243;
  swift_getKeyPath();
  v237 = v63;
  v238 = v64;
  v239 = v65;
  v180[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6ED8);
  sub_22DE1F088();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v237 = v180[0];
  v238 = (ValueMetadata *)v54;
  v239 = v55;
  v240 = v56;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v67 = sub_22DD8458C();
  v68 = v227;
  sub_22DE1EEC0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v181 + 8))(v57, v68);
  v69 = (ValueMetadata *)v58[1];
  v241 = *v58;
  v242 = v69;
  sub_22DE1F010();
  v70 = v237;
  v71 = v238;
  v72 = v239;
  swift_getKeyPath();
  v237 = v70;
  v238 = v71;
  v239 = v72;
  sub_22DE1F088();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v73 = v241;
  v74 = v242;
  v75 = v243;
  swift_getKeyPath();
  v237 = v73;
  v238 = v74;
  v239 = v75;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6EE8);
  sub_22DE1F088();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v76 = type metadata accessor for DebugSheet();
  v237 = v227;
  v238 = &type metadata for ScoreDetail;
  v239 = OpaqueTypeConformance2;
  v240 = v67;
  v77 = swift_getOpaqueTypeConformance2();
  v78 = sub_22DD504A8(&qword_255DB6EF0, (uint64_t (*)(uint64_t))type metadata accessor for DebugSheet, (uint64_t)&unk_22DE23730);
  v79 = v229;
  v80 = v226;
  sub_22DE1EEC0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v182 + 8))(v80, v79);
  v235 = v58;
  v81 = (ValueMetadata *)v58[1];
  v241 = *v58;
  v242 = v81;
  sub_22DE1F010();
  v82 = v237;
  v83 = v238;
  v84 = v239;
  swift_getKeyPath();
  v237 = v82;
  v238 = v83;
  v239 = v84;
  sub_22DE1F088();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v85 = v241;
  v86 = v242;
  v87 = v243;
  swift_getKeyPath();
  v237 = v85;
  v238 = v86;
  v239 = v87;
  sub_22DE1F088();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v237 = v229;
  v238 = (ValueMetadata *)v76;
  v239 = v77;
  v240 = v78;
  v88 = swift_getOpaqueTypeConformance2();
  v89 = sub_22DD845E8();
  v90 = v183;
  v91 = v228;
  sub_22DE1EEC0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v184 + 8))(v91, v90);
  v92 = (ValueMetadata *)v235[1];
  v241 = *v235;
  v242 = v92;
  sub_22DE1F010();
  v93 = v237;
  v94 = v238;
  v95 = v239;
  swift_getKeyPath();
  v237 = v93;
  v238 = v94;
  v239 = v95;
  sub_22DE1F088();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v96 = v241;
  v97 = v242;
  v98 = v243;
  swift_getKeyPath();
  v237 = v96;
  v238 = v97;
  v239 = v98;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6F00);
  sub_22DE1F088();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v237 = v90;
  v238 = &type metadata for ScoreLevelUp;
  v239 = v88;
  v240 = v89;
  v99 = swift_getOpaqueTypeConformance2();
  v179 = sub_22DD8463C();
  v100 = v185;
  v101 = v186;
  v102 = v230;
  sub_22DE1EE30();
  swift_release();
  swift_release();
  v103 = v101;
  (*(void (**)(char *, uint64_t))(v187 + 8))(v102, v101);
  v104 = (ValueMetadata *)v235[1];
  v237 = *v235;
  v238 = v104;
  sub_22DE1EFF8();
  v105 = type metadata accessor for BatchController();
  v237 = v103;
  v238 = &type metadata for BatchOnboardingView;
  v239 = v99;
  v240 = v179;
  v106 = swift_getOpaqueTypeConformance2();
  v107 = sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  v108 = v188;
  v109 = v189;
  sub_22DE1EDE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v190 + 8))(v100, v109);
  v110 = (ValueMetadata *)v235[1];
  v237 = *v235;
  v238 = v110;
  sub_22DE1EFF8();
  v111 = v241;
  swift_getKeyPath();
  v237 = v111;
  sub_22DE1E068();
  swift_release();
  swift_retain();
  swift_release();
  v112 = type metadata accessor for DonationController();
  v237 = v109;
  v238 = (ValueMetadata *)v105;
  v239 = v106;
  v240 = v107;
  v113 = swift_getOpaqueTypeConformance2();
  v114 = sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  v115 = v191;
  sub_22DE1EDE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v192 + 8))(v108, v115);
  v116 = v235;
  v117 = (ValueMetadata *)v235[1];
  v237 = *v235;
  v238 = v117;
  sub_22DE1EFF8();
  v118 = v241;
  swift_getKeyPath();
  v237 = v118;
  sub_22DE1E068();
  swift_release();
  swift_retain();
  swift_release();
  v119 = type metadata accessor for ScoreController();
  v237 = v115;
  v238 = (ValueMetadata *)v112;
  v239 = v113;
  v240 = v114;
  v120 = swift_getOpaqueTypeConformance2();
  v121 = sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  v122 = v193;
  v123 = v231;
  sub_22DE1EDE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v194 + 8))(v123, v122);
  v124 = (ValueMetadata *)v116[1];
  v237 = *v116;
  v238 = v124;
  sub_22DE1EFF8();
  v125 = v241;
  swift_getKeyPath();
  v237 = v125;
  v230 = (char *)v107;
  sub_22DE1E068();
  swift_release();
  swift_retain();
  swift_release();
  v126 = type metadata accessor for StateController();
  v237 = v122;
  v238 = (ValueMetadata *)v119;
  v239 = v120;
  v240 = v121;
  v127 = swift_getOpaqueTypeConformance2();
  v128 = sub_22DD504A8((unint64_t *)&qword_255DB6248, (uint64_t (*)(uint64_t))type metadata accessor for StateController, (uint64_t)&unk_22DE247FC);
  v129 = v195;
  v130 = v196;
  v131 = v232;
  sub_22DE1EDE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v197 + 8))(v131, v130);
  v132 = (ValueMetadata *)v235[1];
  v237 = *v235;
  v238 = v132;
  sub_22DE1EFF8();
  v133 = v241;
  swift_getKeyPath();
  v237 = v133;
  sub_22DE1E068();
  swift_release();
  swift_retain();
  swift_release();
  v134 = type metadata accessor for OnboardingController();
  v237 = v130;
  v238 = (ValueMetadata *)v126;
  v239 = v127;
  v240 = v128;
  v135 = swift_getOpaqueTypeConformance2();
  v136 = sub_22DD504A8(&qword_255DB5488, (uint64_t (*)(uint64_t))type metadata accessor for OnboardingController, (uint64_t)&unk_22DE23640);
  v137 = v198;
  v138 = v199;
  sub_22DE1EDE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v200 + 8))(v129, v138);
  v139 = (ValueMetadata *)v235[1];
  v237 = *v235;
  v238 = v139;
  sub_22DE1EFF8();
  v140 = v241;
  swift_getKeyPath();
  v237 = v140;
  sub_22DE1E068();
  swift_release();
  swift_retain();
  swift_release();
  v141 = type metadata accessor for SwipeController();
  v237 = v138;
  v238 = (ValueMetadata *)v134;
  v239 = v135;
  v240 = v136;
  v142 = swift_getOpaqueTypeConformance2();
  v143 = sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
  v144 = v201;
  sub_22DE1EDE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v202 + 8))(v137, v144);
  v145 = v235;
  v146 = (ValueMetadata *)v235[1];
  v237 = *v235;
  v238 = v146;
  sub_22DE1EFF8();
  v147 = v241;
  swift_getKeyPath();
  v237 = v147;
  sub_22DE1E068();
  swift_release();
  swift_retain();
  swift_release();
  v148 = type metadata accessor for DebugController();
  v237 = v144;
  v238 = (ValueMetadata *)v141;
  v239 = v142;
  v240 = v143;
  v149 = swift_getOpaqueTypeConformance2();
  v150 = sub_22DD504A8((unint64_t *)&qword_255DB6670, (uint64_t (*)(uint64_t))type metadata accessor for DebugController, (uint64_t)")ٶ!ȷ");
  v151 = v204;
  v152 = v205;
  v153 = v233;
  sub_22DE1EDE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v206 + 8))(v153, v152);
  v154 = (ValueMetadata *)v145[1];
  v237 = *v145;
  v238 = v154;
  sub_22DE1EFF8();
  v155 = v241;
  swift_getKeyPath();
  v237 = v155;
  sub_22DE1E068();
  swift_release();
  swift_retain();
  swift_release();
  type metadata accessor for FullScreenPreviewController(0);
  v237 = v152;
  v238 = (ValueMetadata *)v148;
  v239 = v149;
  v240 = v150;
  swift_getOpaqueTypeConformance2();
  sub_22DD504A8(&qword_255DB5A00, type metadata accessor for FullScreenPreviewController, (uint64_t)&unk_22DE223F0);
  v156 = v207;
  v157 = v208;
  sub_22DE1EDE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v210 + 8))(v151, v157);
  v158 = sub_22DE1EF38();
  KeyPath = swift_getKeyPath();
  v237 = v158;
  swift_retain();
  v160 = sub_22DE1E5F0();
  v161 = v212;
  v162 = (uint64_t)v209;
  v163 = v213;
  (*(void (**)(char *, char *, uint64_t))(v212 + 16))(v209, v156, v213);
  swift_release();
  v164 = (uint64_t *)(v162 + *(int *)(v211 + 36));
  *v164 = KeyPath;
  v164[1] = v160;
  (*(void (**)(char *, uint64_t))(v161 + 8))(v156, v163);
  v165 = v216;
  sub_22DD5C570(v203, v216, (uint64_t (*)(_QWORD))type metadata accessor for BatchEvaluationViewContent);
  v166 = (*(unsigned __int8 *)(v217 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v217 + 80);
  v167 = swift_allocObject();
  sub_22DD84744(v165, v167 + v166);
  v168 = v219;
  sub_22DE1F454();
  v169 = (uint64_t)v214;
  v170 = &v214[*(int *)(v215 + 36)];
  v171 = sub_22DE1E668();
  v172 = v220;
  v173 = v221;
  (*(void (**)(char *, char *, uint64_t))(v220 + 16))(&v170[*(int *)(v171 + 20)], v168, v221);
  *(_QWORD *)v170 = &unk_255DB6F18;
  *((_QWORD *)v170 + 1) = v167;
  sub_22DD506A0(v162, v169, &qword_255DB6E90);
  (*(void (**)(char *, uint64_t))(v172 + 8))(v168, v173);
  sub_22DD5071C(v162, &qword_255DB6E90);
  v174 = v222;
  v175 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB1F0];
  sub_22DD83A74(&qword_255DB6E08, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB1F0], 0x616850656E656353, 0xEA00000000006573, v222);
  sub_22DD847EC();
  sub_22DD504A8(&qword_255DB6F48, v175, MEMORY[0x24BDEB200]);
  v176 = v174;
  v177 = v223;
  sub_22DE1EF2C();
  (*(void (**)(uint64_t, uint64_t))(v225 + 8))(v176, v177);
  return sub_22DD5071C(v169, &qword_255DB6E98);
}

uint64_t sub_22DD80C60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  __int128 v87;
  _OWORD *v88;
  __int128 v89;
  char v90;
  __int128 v91;
  _OWORD *v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  char v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  char v108;
  char v109;
  uint64_t v110;
  uint64_t *v111;
  _OWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  char v119;
  uint64_t v120;
  void (*v122)(char *, uint64_t, uint64_t);
  int v123;
  int v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  _OWORD *v151;
  uint64_t v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  char v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  char v168;

  v152 = a2;
  v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB70D0);
  MEMORY[0x24BDAC7A8](v148);
  v151 = (_OWORD *)((char *)&v122 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB70D8);
  MEMORY[0x24BDAC7A8](v144);
  v145 = (uint64_t *)((char *)&v122 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB70E0);
  MEMORY[0x24BDAC7A8](v149);
  v146 = (char *)&v122 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB70E8);
  MEMORY[0x24BDAC7A8](v141);
  v136 = (uint64_t *)((char *)&v122 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB70F0);
  MEMORY[0x24BDAC7A8](v134);
  v133 = (uint64_t *)((char *)&v122 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB70F8);
  MEMORY[0x24BDAC7A8](v135);
  v132 = (char *)&v122 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7100);
  MEMORY[0x24BDAC7A8](v140);
  v139 = (char *)&v122 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for ActionIndicator();
  v10 = MEMORY[0x24BDAC7A8](v126);
  v129 = (uint64_t)&v122 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v128 = (uint64_t)&v122 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v127 = (char *)&v122 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v125 = (char *)&v122 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7108);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v131 = (uint64_t)&v122 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v130 = (uint64_t)&v122 - v20;
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7110);
  MEMORY[0x24BDAC7A8](v143);
  v137 = (char *)&v122 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7118);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v147 = (char *)&v122 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v150 = (char *)&v122 - v25;
  v153 = (uint64_t *)(a1 + *(int *)(type metadata accessor for BatchEvaluationViewContent() + 24));
  v26 = v153[1];
  v138 = *v153;
  *(_QWORD *)&v164 = v138;
  *((_QWORD *)&v164 + 1) = v26;
  v142 = v26;
  v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E00);
  sub_22DE1EFF8();
  v27 = v159;
  swift_getKeyPath();
  *(_QWORD *)&v164 = v27;
  v154 = sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  v28 = *(_QWORD **)(v27 + 48);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)&v164 = v28;
  sub_22DD504A8((unint64_t *)&qword_255DB6248, (uint64_t (*)(uint64_t))type metadata accessor for StateController, (uint64_t)&unk_22DE247FC);
  sub_22DE1E068();
  swift_release();
  v29 = v28[2];
  v30 = v28[3];
  v32 = v28[4];
  v31 = v28[5];
  v33 = v28[6];
  v34 = v28[7];
  v36 = v28[8];
  v35 = v28[9];
  sub_22DD77554(v29, v30);
  swift_release();
  if (v30 - 1 >= 2)
  {
    if (v30)
    {
      if (v30 == 3)
      {
        type metadata accessor for DonationController();
        sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
        v37 = sub_22DE1E554();
        v39 = v38;
        LOBYTE(v159) = 0;
        sub_22DE1EFEC();
        v40 = v164;
        v41 = *((_QWORD *)&v164 + 1);
        v42 = v145;
        *v145 = v37;
        *((_BYTE *)v42 + 8) = v39 & 1;
        *((_BYTE *)v42 + 16) = v40;
        v42[3] = v41;
        swift_storeEnumTagMultiPayload();
        sub_22DD85E90();
        sub_22DD85FC0();
        swift_retain();
        swift_retain();
        v43 = (uint64_t)v146;
        sub_22DE1EAD0();
        sub_22DD506A0(v43, (uint64_t)v151, &qword_255DB70E0);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7128);
        sub_22DD5C21C(&qword_255DB7130, &qword_255DB70E0, sub_22DD85E90, (uint64_t (*)(void))sub_22DD85FC0);
        sub_22DD5C21C(&qword_255DB7168, &qword_255DB7128, (uint64_t (*)(void))sub_22DD85E4C, (uint64_t (*)(void))sub_22DD550D4);
        v44 = (uint64_t)v150;
        sub_22DE1EAD0();
        sub_22DD5071C(v43, &qword_255DB70E0);
        swift_release();
        swift_release();
LABEL_11:
        v94 = v152;
        v81 = (uint64_t)v147;
        goto LABEL_19;
      }
      *(_QWORD *)&v159 = v29;
      *((_QWORD *)&v159 + 1) = v30;
      *(_QWORD *)&v160 = v32;
      *((_QWORD *)&v160 + 1) = v31;
      *(_QWORD *)&v161 = v33;
      *((_QWORD *)&v161 + 1) = v34;
      *(_QWORD *)&v162 = v36;
      *((_QWORD *)&v162 + 1) = v35;
      v163 = 1;
      sub_22DD85E4C();
      sub_22DD550D4();
      sub_22DE1EAD0();
      v90 = v168;
      v91 = v165;
      v92 = v151;
      *v151 = v164;
      v92[1] = v91;
      v93 = v167;
      v92[2] = v166;
      v92[3] = v93;
      *((_BYTE *)v92 + 64) = v90;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7128);
      sub_22DD5C21C(&qword_255DB7130, &qword_255DB70E0, sub_22DD85E90, (uint64_t (*)(void))sub_22DD85FC0);
    }
    else
    {
      sub_22DD85E4C();
      sub_22DD550D4();
      v159 = 0u;
      v160 = 0u;
      v161 = 0u;
      v162 = 0u;
      v163 = 0;
      sub_22DE1EAD0();
      v86 = v168;
      v87 = v165;
      v88 = v151;
      *v151 = v164;
      v88[1] = v87;
      v89 = v167;
      v88[2] = v166;
      v88[3] = v89;
      *((_BYTE *)v88 + 64) = v86;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7128);
      sub_22DD5C21C(&qword_255DB7130, &qword_255DB70E0, sub_22DD85E90, (uint64_t (*)(void))sub_22DD85FC0);
    }
    sub_22DD5C21C(&qword_255DB7168, &qword_255DB7128, (uint64_t (*)(void))sub_22DD85E4C, (uint64_t (*)(void))sub_22DD550D4);
    v44 = (uint64_t)v150;
    sub_22DE1EAD0();
    goto LABEL_11;
  }
  v45 = v138;
  *(_QWORD *)&v164 = v138;
  *((_QWORD *)&v164 + 1) = v142;
  sub_22DE1EFF8();
  v46 = v159;
  swift_getKeyPath();
  *(_QWORD *)&v164 = v46;
  sub_22DE1E068();
  swift_release();
  v47 = *(_QWORD *)(v46 + 16);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)&v164 = v47;
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  sub_22DE1E068();
  swift_release();
  swift_beginAccess();
  v48 = *(_QWORD *)(*(_QWORD *)(v47 + 24) + 16);
  swift_release();
  if (v48)
  {
    type metadata accessor for BatchController();
    v49 = sub_22DE1E554();
    v123 = v50;
    type metadata accessor for StateController();
    v51 = sub_22DE1E554();
    v124 = v52;
    v53 = v153[1];
    *(_QWORD *)&v159 = *v153;
    *((_QWORD *)&v159 + 1) = v53;
    sub_22DE1EFF8();
    v54 = v156;
    swift_getKeyPath();
    *(_QWORD *)&v159 = v54;
    sub_22DE1E068();
    swift_release();
    v55 = *(_QWORD *)(v54 + 48);
    swift_retain();
    swift_release();
    swift_getKeyPath();
    *(_QWORD *)&v159 = v55;
    sub_22DE1E068();
    swift_release();
    v56 = *(_QWORD *)(v55 + 24);
    swift_release();
    v142 = v49;
    v138 = v51;
    if (v56 == 1)
    {
      v57 = *MEMORY[0x24BE30EB0];
      v58 = sub_22DE1E14C();
      v122 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 104);
      v59 = (uint64_t)v125;
      v122(v125, v57, v58);
      v60 = sub_22DE1E554();
      v62 = v61;
      type metadata accessor for SwipeController();
      sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
      v63 = sub_22DE1E554();
      v64 = v126;
      v65 = v59 + *(int *)(v126 + 20);
      *(_QWORD *)v65 = v60;
      *(_BYTE *)(v65 + 8) = v62 & 1;
      v66 = v59 + *(int *)(v64 + 24);
      *(_QWORD *)v66 = v63;
      *(_BYTE *)(v66 + 8) = v67 & 1;
      v68 = (uint64_t)v127;
      v122(v127, *MEMORY[0x24BE30E80], v58);
      v69 = sub_22DE1E554();
      LOBYTE(v58) = v70;
      v71 = sub_22DE1E554();
      v72 = v68 + *(int *)(v64 + 20);
      *(_QWORD *)v72 = v69;
      *(_BYTE *)(v72 + 8) = v58 & 1;
      v73 = v68 + *(int *)(v64 + 24);
      *(_QWORD *)v73 = v71;
      *(_BYTE *)(v73 + 8) = v74 & 1;
      v75 = v128;
      sub_22DD5C570(v59, v128, (uint64_t (*)(_QWORD))type metadata accessor for ActionIndicator);
      v76 = v129;
      sub_22DD5C570(v68, v129, (uint64_t (*)(_QWORD))type metadata accessor for ActionIndicator);
      v77 = v131;
      sub_22DD5C570(v75, v131, (uint64_t (*)(_QWORD))type metadata accessor for ActionIndicator);
      v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7188);
      sub_22DD5C570(v76, v77 + *(int *)(v78 + 48), (uint64_t (*)(_QWORD))type metadata accessor for ActionIndicator);
      sub_22DD5C950(v68, (uint64_t (*)(_QWORD))type metadata accessor for ActionIndicator);
      sub_22DD5C950(v59, (uint64_t (*)(_QWORD))type metadata accessor for ActionIndicator);
      sub_22DD5C950(v76, (uint64_t (*)(_QWORD))type metadata accessor for ActionIndicator);
      sub_22DD5C950(v75, (uint64_t (*)(_QWORD))type metadata accessor for ActionIndicator);
      v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7178);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v77, 0, 1, v79);
      v80 = v130;
      sub_22DD5003C(v77, v130, &qword_255DB7108);
      v81 = (uint64_t)v147;
      v82 = (uint64_t)v137;
      v83 = v136;
      v84 = (uint64_t)v133;
      v85 = (uint64_t)v132;
    }
    else
    {
      v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7178);
      v80 = v130;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v130, 1, 1, v102);
      v81 = (uint64_t)v147;
      v82 = (uint64_t)v137;
      v83 = v136;
      v84 = (uint64_t)v133;
      v85 = (uint64_t)v132;
      v77 = v131;
    }
    v103 = v123;
    sub_22DD506A0(v80, v77, &qword_255DB7108);
    *(_QWORD *)v85 = v142;
    *(_BYTE *)(v85 + 8) = v103 & 1;
    *(_QWORD *)(v85 + 16) = v138;
    *(_BYTE *)(v85 + 24) = v124 & 1;
    v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7180);
    sub_22DD506A0(v77, v85 + *(int *)(v104 + 48), &qword_255DB7108);
    swift_retain_n();
    swift_retain_n();
    sub_22DD5071C(v77, &qword_255DB7108);
    swift_release();
    swift_release();
    sub_22DD506A0(v85, v84, &qword_255DB70F8);
    swift_storeEnumTagMultiPayload();
    sub_22DD508B0(&qword_255DB7148, &qword_255DB70F8, MEMORY[0x24BDF5428]);
    sub_22DD85F38();
    v105 = (uint64_t)v139;
    sub_22DE1EAD0();
    sub_22DD5071C(v85, &qword_255DB70F8);
    sub_22DD506A0(v105, (uint64_t)v83, &qword_255DB7100);
    swift_storeEnumTagMultiPayload();
    sub_22DD85EB4();
    sub_22DD85F7C();
    sub_22DE1EAD0();
    sub_22DD5071C(v105, &qword_255DB7100);
    sub_22DD5071C(v80, &qword_255DB7108);
    swift_release();
    swift_release();
    v94 = v152;
  }
  else
  {
    *(_QWORD *)&v159 = v45;
    *((_QWORD *)&v159 + 1) = v142;
    sub_22DE1EFF8();
    v95 = v156;
    swift_getKeyPath();
    *(_QWORD *)&v159 = v95;
    sub_22DE1E068();
    swift_release();
    v96 = *(_QWORD *)(v95 + 16);
    swift_retain();
    swift_release();
    swift_getKeyPath();
    *(_QWORD *)&v159 = v96;
    sub_22DE1E068();
    swift_release();
    swift_beginAccess();
    v97 = *(_QWORD *)(*(_QWORD *)(v96 + 16) + 16);
    swift_release();
    v94 = v152;
    v98 = (uint64_t)v139;
    if (v97)
    {
      type metadata accessor for BatchController();
      v99 = sub_22DE1E554();
      v100 = v133;
      *v133 = v99;
      *((_BYTE *)v100 + 8) = v101 & 1;
      swift_storeEnumTagMultiPayload();
      sub_22DD508B0(&qword_255DB7148, &qword_255DB70F8, MEMORY[0x24BDF5428]);
      sub_22DD85F38();
      swift_retain();
      sub_22DE1EAD0();
      sub_22DD506A0(v98, (uint64_t)v136, &qword_255DB7100);
      swift_storeEnumTagMultiPayload();
      sub_22DD85EB4();
      sub_22DD85F7C();
      v82 = (uint64_t)v137;
      sub_22DE1EAD0();
      sub_22DD5071C(v98, &qword_255DB7100);
      swift_release();
    }
    else
    {
      type metadata accessor for DonationController();
      v106 = sub_22DE1E554();
      v108 = v107;
      LOBYTE(v158) = 0;
      sub_22DE1EFEC();
      v109 = v156;
      v110 = v157;
      v111 = v136;
      *v136 = v106;
      *((_BYTE *)v111 + 8) = v108 & 1;
      *((_BYTE *)v111 + 16) = v109;
      v111[3] = v110;
      swift_storeEnumTagMultiPayload();
      sub_22DD85EB4();
      sub_22DD85F7C();
      v82 = (uint64_t)v137;
      sub_22DE1EAD0();
    }
    v81 = (uint64_t)v147;
  }
  v112 = v151;
  sub_22DD506A0(v82, (uint64_t)v145, &qword_255DB7110);
  swift_storeEnumTagMultiPayload();
  sub_22DD85E90();
  sub_22DD85FC0();
  v113 = (uint64_t)v146;
  sub_22DE1EAD0();
  sub_22DD506A0(v113, (uint64_t)v112, &qword_255DB70E0);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7128);
  sub_22DD5C21C(&qword_255DB7130, &qword_255DB70E0, sub_22DD85E90, (uint64_t (*)(void))sub_22DD85FC0);
  sub_22DD5C21C(&qword_255DB7168, &qword_255DB7128, (uint64_t (*)(void))sub_22DD85E4C, (uint64_t (*)(void))sub_22DD550D4);
  v44 = (uint64_t)v150;
  sub_22DE1EAD0();
  sub_22DD5071C(v113, &qword_255DB70E0);
  sub_22DD5071C(v82, &qword_255DB7110);
LABEL_19:
  v114 = v153[1];
  v156 = *v153;
  v157 = v114;
  sub_22DE1EFF8();
  v115 = v158;
  swift_getKeyPath();
  v156 = v115;
  sub_22DE1E068();
  swift_release();
  v116 = *(_QWORD *)(v115 + 56);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  v156 = v116;
  sub_22DD504A8((unint64_t *)&qword_255DB6670, (uint64_t (*)(uint64_t))type metadata accessor for DebugController, (uint64_t)")ٶ!ȷ");
  sub_22DE1E068();
  swift_release();
  LODWORD(v115) = *(unsigned __int8 *)(v116 + 17);
  swift_release();
  if ((_DWORD)v115 == 1)
  {
    type metadata accessor for BatchController();
    v117 = sub_22DE1E554();
    v119 = v118 & 1;
  }
  else
  {
    v117 = 0;
    v119 = -1;
  }
  sub_22DD506A0(v44, v81, &qword_255DB7118);
  sub_22DD506A0(v81, v94, &qword_255DB7118);
  v120 = v94 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7170) + 48);
  *(_QWORD *)v120 = v117;
  *(_BYTE *)(v120 + 8) = v119;
  sub_22DD8600C(v117, v119);
  sub_22DD5071C(v44, &qword_255DB7118);
  sub_22DD86020(v117, v119);
  return sub_22DD5071C(v81, &qword_255DB7118);
}

uint64_t sub_22DD82198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t OpaqueTypeConformance2;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v79 = a2;
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7028);
  MEMORY[0x24BDAC7A8](v78);
  v77 = (uint64_t)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7030);
  v75 = *(_QWORD *)(v4 - 8);
  v76 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v74 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7038);
  v72 = *(_QWORD *)(v6 - 8);
  v73 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v71 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7040);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v84 = (uint64_t)&v69 - v12;
  v13 = sub_22DE1EB18();
  v80 = *(_QWORD *)(v13 - 8);
  v81 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7048);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7050);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v83 = (uint64_t)&v69 - v24;
  v25 = type metadata accessor for BatchEvaluationViewContent();
  v26 = *(int *)(v25 + 24);
  v82 = a1;
  v27 = (uint64_t *)(a1 + v26);
  v29 = *v27;
  v28 = v27[1];
  v85 = v29;
  v86 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E00);
  sub_22DE1EFF8();
  v30 = v89;
  swift_getKeyPath();
  v85 = v30;
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  swift_retain();
  v31 = swift_release();
  if (!MEMORY[0x22E32027C](v31))
  {
    swift_release();
LABEL_9:
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7058);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v23, 1, 1, v40);
    v41 = sub_22DD508B0(&qword_255DB7060, &qword_255DB7048, MEMORY[0x24BDEB848]);
    v85 = v16;
    v86 = v41;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    MEMORY[0x22E31F3AC](v23, v40, OpaqueTypeConformance2);
    sub_22DD5071C((uint64_t)v23, &qword_255DB7050);
    goto LABEL_10;
  }
  v70 = v17;
  if (qword_255DB5328 != -1)
    swift_once();
  v32 = qword_255DC3CE8;
  swift_getKeyPath();
  v85 = v32;
  sub_22DD504A8((unint64_t *)&qword_255DB58A8, (uint64_t (*)(uint64_t))type metadata accessor for UserDefaultsController, (uint64_t)&unk_22DE257C0);
  sub_22DE1E068();
  swift_release();
  v33 = *(_BYTE *)(v32 + 18);
  swift_release();
  if ((v33 & 1) == 0)
    goto LABEL_9;
  if (qword_255DB52C8 != -1)
    swift_once();
  v34 = v81;
  v35 = __swift_project_value_buffer(v81, (uint64_t)qword_255DB6D88);
  v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 16))(v15, v35, v34);
  MEMORY[0x24BDAC7A8](v36);
  *(&v69 - 2) = v82;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7098);
  sub_22DD508B0(&qword_255DB70A0, &qword_255DB7098, MEMORY[0x24BDF43B0]);
  sub_22DE1E578();
  v37 = sub_22DD508B0(&qword_255DB7060, &qword_255DB7048, MEMORY[0x24BDEB848]);
  MEMORY[0x22E31F3A0](v19, v16, v37);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7058);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v23, 0, 1, v38);
  v85 = v16;
  v86 = v37;
  v39 = swift_getOpaqueTypeConformance2();
  MEMORY[0x22E31F3AC](v23, v38, v39);
  sub_22DD5071C((uint64_t)v23, &qword_255DB7050);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v19, v16);
LABEL_10:
  v43 = v82;
  if (*(_BYTE *)(v82 + *(int *)(v25 + 32)) == 1)
  {
    v44 = sub_22DE1EB0C();
    MEMORY[0x24BDAC7A8](v44);
    *(&v69 - 2) = v43;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB57B0);
    sub_22DD508B0(&qword_255DB7090, &qword_255DB57B0, MEMORY[0x24BDF43B0]);
    v45 = v71;
    sub_22DE1E578();
    v46 = sub_22DD508B0(&qword_255DB7070, &qword_255DB7038, MEMORY[0x24BDEB848]);
    v47 = v73;
    MEMORY[0x22E31F3A0](v45, v73, v46);
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7068);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v11, 0, 1, v48);
    v85 = v47;
    v86 = v46;
    v49 = swift_getOpaqueTypeConformance2();
    MEMORY[0x22E31F3AC](v11, v48, v49);
    sub_22DD5071C((uint64_t)v11, &qword_255DB7040);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v45, v47);
  }
  else
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7068);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v11, 1, 1, v50);
    v51 = sub_22DD508B0(&qword_255DB7070, &qword_255DB7038, MEMORY[0x24BDEB848]);
    v85 = v73;
    v86 = v51;
    v52 = swift_getOpaqueTypeConformance2();
    MEMORY[0x22E31F3AC](v11, v50, v52);
    sub_22DD5071C((uint64_t)v11, &qword_255DB7040);
  }
  if (qword_255DB52D0 != -1)
    swift_once();
  v53 = v81;
  v54 = __swift_project_value_buffer(v81, (uint64_t)qword_255DB6DA0);
  v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 16))(v15, v54, v53);
  MEMORY[0x24BDAC7A8](v55);
  *(&v69 - 2) = v43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7078);
  v56 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7080);
  v57 = sub_22DE1E704();
  v58 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED868];
  v59 = sub_22DD508B0(&qword_255DB7088, &qword_255DB7080, MEMORY[0x24BDF43B0]);
  v60 = sub_22DD504A8((unint64_t *)&qword_255DB69D8, v58, MEMORY[0x24BDED858]);
  v85 = v56;
  v86 = v57;
  v87 = v59;
  v88 = v60;
  swift_getOpaqueTypeConformance2();
  v61 = v74;
  sub_22DE1E578();
  v62 = v77 + *(int *)(v78 + 48);
  v63 = v77 + *(int *)(v78 + 64);
  v64 = v83;
  sub_22DD506A0(v83, v77, &qword_255DB7050);
  v65 = v84;
  sub_22DD506A0(v84, v62, &qword_255DB7040);
  v67 = v75;
  v66 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v75 + 16))(v63, v61, v76);
  sub_22DE1EA1C();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v61, v66);
  sub_22DD5071C(v65, &qword_255DB7040);
  return sub_22DD5071C(v64, &qword_255DB7050);
}

uint64_t sub_22DD82AAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = type metadata accessor for BatchEvaluationViewContent();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  sub_22DD5C570(a1, (uint64_t)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  sub_22DD84744((uint64_t)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  return sub_22DE1F01C();
}

uint64_t sub_22DD82B88()
{
  type metadata accessor for BatchEvaluationViewContent();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E00);
  sub_22DE1EFF8();
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  swift_retain();
  swift_release();
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6670, (uint64_t (*)(uint64_t))type metadata accessor for DebugController, (uint64_t)")ٶ!ȷ");
  sub_22DE1E05C();
  swift_release();
  return swift_release();
}

uint64_t sub_22DD82CD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_22DE1EFBC();
  *a1 = result;
  return result;
}

uint64_t sub_22DD82D04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = type metadata accessor for BatchEvaluationViewContent();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  sub_22DD5C570(a1, (uint64_t)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  sub_22DD84744((uint64_t)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  return sub_22DE1F01C();
}

uint64_t sub_22DD82DE0()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_22DE1E614();
  v1 = MEMORY[0x24BDEC038];
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BatchEvaluationViewContent();
  sub_22DD83A74(&qword_255DB5670, (uint64_t (*)(_QWORD))v1, 0x417373696D736944, 0xED00006E6F697463, (uint64_t)v4);
  sub_22DE1E608();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v0);
}

uint64_t sub_22DD82EAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_22DE1E980();
  result = sub_22DE1ED7C();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_22DD82F18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v16[6];

  v16[1] = a2;
  v3 = sub_22DE1E704();
  v16[0] = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for BatchEvaluationViewContent();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7080);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD5C570(a1, (uint64_t)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for BatchEvaluationViewContent);
  v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v14 = swift_allocObject();
  sub_22DD84744((uint64_t)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  v16[4] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB70A8);
  sub_22DD85D7C();
  sub_22DE1F01C();
  sub_22DE1E6F8();
  sub_22DD508B0(&qword_255DB7088, &qword_255DB7080, MEMORY[0x24BDF43B0]);
  sub_22DD504A8((unint64_t *)&qword_255DB69D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDED868], MEMORY[0x24BDED858]);
  sub_22DE1EDDC();
  (*(void (**)(char *, uint64_t))(v16[0] + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_22DD8311C()
{
  type metadata accessor for BatchEvaluationViewContent();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E00);
  sub_22DE1EFF8();
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  swift_retain();
  swift_release();
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E05C();
  swift_release();
  return swift_release();
}

double sub_22DD83268@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  double result;
  uint64_t v4;

  type metadata accessor for BatchEvaluationViewContent();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E00);
  sub_22DE1EFF8();
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  v2 = *(_QWORD *)(v4 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)a1 = v2;
  result = 32.0;
  *(_OWORD *)(a1 + 8) = xmmword_22DE22A20;
  *(_QWORD *)(a1 + 24) = 0x4062C00000000000;
  *(_BYTE *)(a1 + 32) = 0;
  return result;
}

uint64_t sub_22DD83354@<X0>(uint64_t a1@<X8>)
{
  return sub_22DD83408((uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (unint64_t *)&qword_255DB58F0, (uint64_t)&protocol conformance descriptor for ScoreController, a1);
}

uint64_t sub_22DD83370@<X0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t *v3;

  type metadata accessor for BatchController();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  *(_QWORD *)a1 = sub_22DE1E554();
  *(_BYTE *)(a1 + 8) = v2 & 1;
  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for DebugSheet() + 20));
  *v3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_22DD83408@<X0>(uint64_t (*a1)(uint64_t)@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  char v9;

  a1(0);
  sub_22DD504A8(a2, a1, a3);
  result = sub_22DE1E554();
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = v9 & 1;
  return result;
}

uint64_t sub_22DD83478@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB5488, (uint64_t (*)(uint64_t))type metadata accessor for OnboardingController, (uint64_t)&unk_22DE23640);
  sub_22DE1E068();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_22DD83504()
{
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB5488, (uint64_t (*)(uint64_t))type metadata accessor for OnboardingController, (uint64_t)&unk_22DE23640);
  sub_22DE1E05C();
  return swift_release();
}

uint64_t sub_22DD835AC@<X0>(uint64_t a1@<X8>)
{
  return sub_22DD83408((uint64_t (*)(uint64_t))type metadata accessor for OnboardingController, &qword_255DB5488, (uint64_t)&unk_22DE23640, a1);
}

uint64_t sub_22DD835C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[6] = a1;
  sub_22DE1F448();
  v1[7] = sub_22DE1F43C();
  v1[8] = sub_22DE1F418();
  v1[9] = v2;
  return swift_task_switch();
}

uint64_t sub_22DD83634()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[6];
  v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for BatchEvaluationViewContent() + 24));
  v4 = *v2;
  v3 = v2[1];
  v0[2] = v4;
  v0[3] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E00);
  sub_22DE1EFF8();
  v5 = v0[4];
  swift_getKeyPath();
  v0[5] = v5;
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  v0[10] = *(_QWORD *)(v5 + 16);
  swift_retain();
  swift_release();
  v6 = (_QWORD *)swift_task_alloc();
  v0[11] = v6;
  *v6 = v0;
  v6[1] = sub_22DD83730;
  return sub_22DDCAA10();
}

uint64_t sub_22DD83730()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DD83784()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DD837B4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t result;
  uint64_t v9;

  v0 = type metadata accessor for AnalyticsEvent();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_22DE1E4D0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDEB1E0], v3);
  v7 = sub_22DE1E4C4();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) != 0)
  {
    swift_storeEnumTagMultiPayload();
    sub_22DE01A1C();
    return sub_22DD5C950((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for AnalyticsEvent);
  }
  return result;
}

uint64_t sub_22DD838BC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58A8, (uint64_t (*)(uint64_t))type metadata accessor for UserDefaultsController, (uint64_t)&unk_22DE257C0);
  sub_22DE1E068();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 18);
  return result;
}

uint64_t sub_22DD83948()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58A8, (uint64_t (*)(uint64_t))type metadata accessor for UserDefaultsController, (uint64_t)&unk_22DE257C0);
  sub_22DE1E05C();
  return swift_release();
}

uint64_t sub_22DD839F0(uint64_t a1, char a2)
{
  return sub_22DD83F54(a1, a2, 0xD000000000000014, 0x800000022DE29830);
}

uint64_t sub_22DD83A0C@<X0>(uint64_t a1@<X8>)
{
  return sub_22DD83A74(&qword_255DB5670, (uint64_t (*)(_QWORD))MEMORY[0x24BDEC038], 0x417373696D736944, 0xED00006E6F697463, a1);
}

uint64_t sub_22DD83A40@<X0>(uint64_t a1@<X8>)
{
  return sub_22DD83A74(&qword_255DB5678, (uint64_t (*)(_QWORD))MEMORY[0x24BDECF50], 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

uint64_t sub_22DD83A74@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  os_log_type_t v20;
  NSObject *v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a3;
  v9 = v5;
  v11 = sub_22DE1E8D8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD506A0(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    v20 = sub_22DE1F508();
    v21 = sub_22DE1EC20();
    if (os_log_type_enabled(v21, v20))
    {
      v26 = a4;
      v22 = swift_slowAlloc();
      v27 = a5;
      v23 = (uint8_t *)v22;
      v24 = swift_slowAlloc();
      v30 = v24;
      *(_DWORD *)v23 = 136315138;
      v29 = sub_22DDA2E30(v28, v26, &v30);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v24, -1, -1);
      MEMORY[0x22E320870](v23, -1, -1);
    }

    sub_22DE1E8CC();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_22DD83CAC(uint64_t a1, char a2)
{
  return sub_22DD83F54(a1, a2, 0xD000000000000012, 0x800000022DE29880);
}

uint64_t sub_22DD83CC8(uint64_t a1, char a2)
{
  return sub_22DD83F54(a1, a2, 0x6E6F436863746142, 0xEF72656C6C6F7274);
}

id sub_22DD83CEC(void *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  os_log_type_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v14 = a1;
  v3 = sub_22DE1E8D8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return v14;
  swift_retain();
  v7 = sub_22DE1F508();
  v8 = sub_22DE1EC20();
  v9 = v7;
  if (os_log_type_enabled(v8, v7))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v16 = v11;
    *(_DWORD *)v10 = 136315138;
    v15 = sub_22DDA2E30(0xD000000000000017, 0x800000022DE298C0, &v16);
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v8, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v11, -1, -1);
    MEMORY[0x22E320870](v10, -1, -1);
  }

  sub_22DE1E8CC();
  swift_getAtKeyPath();
  sub_22DD56E8C(v14, 0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (id)v16;
}

uint64_t sub_22DD83ECC(uint64_t a1, char a2)
{
  return sub_22DD83F54(a1, a2, 0xD00000000000001BLL, 0x800000022DE298E0);
}

uint64_t sub_22DD83EE8(uint64_t a1, char a2)
{
  return sub_22DD83F54(a1, a2, 0x6E6F436570697753, 0xEF72656C6C6F7274);
}

uint64_t sub_22DD83F0C(uint64_t a1, char a2)
{
  return sub_22DD83F54(a1, a2, 0x6E6F436574617453, 0xEF72656C6C6F7274);
}

uint64_t sub_22DD83F30(uint64_t a1, char a2)
{
  return sub_22DD83F54(a1, a2, 0x6E6F4365726F6353, 0xEF72656C6C6F7274);
}

uint64_t sub_22DD83F54(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v8 = sub_22DE1E8D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    v12 = sub_22DE1F508();
    v13 = sub_22DE1EC20();
    v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      v21 = a4;
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v17 = a3;
      v18 = v16;
      v23 = v16;
      *(_DWORD *)v15 = 136315138;
      v22 = sub_22DDA2E30(v17, v21, &v23);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v18, -1, -1);
      MEMORY[0x22E320870](v15, -1, -1);
    }

    sub_22DE1E8CC();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v23;
  }
  return a1;
}

uint64_t sub_22DD84110@<X0>(uint64_t a1@<X8>)
{
  return sub_22DD83A74(&qword_255DB7190, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB418], 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_22DD84140@<X0>(uint64_t a1@<X8>)
{
  return sub_22DD84198(&qword_255DB6010, &qword_255DB7010, 0xD000000000000019, 0x800000022DE29810, a1);
}

uint64_t sub_22DD8416C@<X0>(uint64_t a1@<X8>)
{
  return sub_22DD84198(&qword_255DB7018, &qword_255DB7020, 0xD000000000000020, 0x800000022DE29850, a1);
}

uint64_t sub_22DD84198@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  os_log_type_t v19;
  NSObject *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a3;
  v9 = v5;
  v11 = sub_22DE1E8D8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD506A0(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_22DD5003C((uint64_t)v17, a5, a2);
  v19 = sub_22DE1F508();
  v20 = sub_22DE1EC20();
  if (os_log_type_enabled(v20, v19))
  {
    v25 = a4;
    v21 = swift_slowAlloc();
    v26 = a5;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc();
    v29 = v23;
    *(_DWORD *)v22 = 136315138;
    v28 = sub_22DDA2E30(v27, v25, &v29);
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v23, -1, -1);
    MEMORY[0x22E320870](v22, -1, -1);
  }

  sub_22DE1E8CC();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_22DD843C0()
{
  return sub_22DE1E764();
}

uint64_t sub_22DD843E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_22DE1E4D0();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_22DE1E770();
}

uint64_t sub_22DD84464@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  __int16 v2;

  if (*(_BYTE *)(v1 + 33))
    v2 = 256;
  else
    v2 = 0;
  return sub_22DD7EFC8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v2 | *(unsigned __int8 *)(v1 + 32), a1);
}

uint64_t sub_22DD84484@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DD82198(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_22DD8448C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB6EB0;
  if (!qword_255DB6EB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6E20);
    v2[0] = sub_22DD844F8();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB6EB0);
  }
  return result;
}

unint64_t sub_22DD844F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB6EB8;
  if (!qword_255DB6EB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6E18);
    v2[0] = sub_22DD508B0(&qword_255DB6EC0, &qword_255DB6E10, MEMORY[0x24BDF4750]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB6EB8);
  }
  return result;
}

unint64_t sub_22DD8458C()
{
  unint64_t result;

  result = qword_255DB6EE0;
  if (!qword_255DB6EE0)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE23458, &type metadata for ScoreDetail);
    atomic_store(result, (unint64_t *)&qword_255DB6EE0);
  }
  return result;
}

unint64_t sub_22DD845E8()
{
  unint64_t result;

  result = qword_255DB6EF8;
  if (!qword_255DB6EF8)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE23E88, &type metadata for ScoreLevelUp);
    atomic_store(result, (unint64_t *)&qword_255DB6EF8);
  }
  return result;
}

unint64_t sub_22DD8463C()
{
  unint64_t result;

  result = qword_255DB6F08;
  if (!qword_255DB6F08)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE20600, &type metadata for BatchOnboardingView);
    atomic_store(result, &qword_255DB6F08);
  }
  return result;
}

uint64_t sub_22DD846A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_22DE1E860();
  *a1 = result;
  return result;
}

uint64_t sub_22DD846C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_22DE1E860();
  *a1 = result;
  return result;
}

uint64_t sub_22DD846F0()
{
  swift_retain();
  return sub_22DE1E86C();
}

uint64_t sub_22DD84718()
{
  swift_retain();
  return sub_22DE1E86C();
}

uint64_t sub_22DD84744(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BatchEvaluationViewContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DD84788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for BatchEvaluationViewContent() - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_22DD54F04;
  return sub_22DD835C8(v3);
}

unint64_t sub_22DD847EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB6F20;
  if (!qword_255DB6F20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6E98);
    v2[0] = sub_22DD84870();
    v2[1] = sub_22DD504A8(&qword_255DB6F40, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC4E0], MEMORY[0x24BDEC4C8]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB6F20);
  }
  return result;
}

unint64_t sub_22DD84870()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[7];

  result = qword_255DB6F28;
  if (!qword_255DB6F28)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6E90);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6E80);
    v1 = type metadata accessor for FullScreenPreviewController(255);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6E78);
    type metadata accessor for DebugController();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6E70);
    type metadata accessor for SwipeController();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6E68);
    type metadata accessor for OnboardingController();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6E60);
    type metadata accessor for StateController();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6E58);
    type metadata accessor for ScoreController();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6E50);
    type metadata accessor for DonationController();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6E48);
    type metadata accessor for BatchController();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6E40);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6E38);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6E30);
    type metadata accessor for DebugSheet();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6E28);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6E20);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6EA8);
    sub_22DD8448C();
    sub_22DD508B0(&qword_255DB6EC8, &qword_255DB6EA8, MEMORY[0x24BDEF170]);
    swift_getOpaqueTypeConformance2();
    sub_22DD8458C();
    swift_getOpaqueTypeConformance2();
    sub_22DD504A8(&qword_255DB6EF0, (uint64_t (*)(uint64_t))type metadata accessor for DebugSheet, (uint64_t)&unk_22DE23730);
    swift_getOpaqueTypeConformance2();
    sub_22DD845E8();
    swift_getOpaqueTypeConformance2();
    sub_22DD8463C();
    swift_getOpaqueTypeConformance2();
    sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
    swift_getOpaqueTypeConformance2();
    sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
    swift_getOpaqueTypeConformance2();
    sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
    swift_getOpaqueTypeConformance2();
    sub_22DD504A8((unint64_t *)&qword_255DB6248, (uint64_t (*)(uint64_t))type metadata accessor for StateController, (uint64_t)&unk_22DE247FC);
    swift_getOpaqueTypeConformance2();
    sub_22DD504A8(&qword_255DB5488, (uint64_t (*)(uint64_t))type metadata accessor for OnboardingController, (uint64_t)&unk_22DE23640);
    swift_getOpaqueTypeConformance2();
    sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
    swift_getOpaqueTypeConformance2();
    sub_22DD504A8((unint64_t *)&qword_255DB6670, (uint64_t (*)(uint64_t))type metadata accessor for DebugController, (uint64_t)")ٶ!ȷ");
    v4[2] = v2;
    v4[3] = v1;
    v4[4] = swift_getOpaqueTypeConformance2();
    v4[5] = sub_22DD504A8(&qword_255DB5A00, type metadata accessor for FullScreenPreviewController, (uint64_t)&unk_22DE223F0);
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_22DD508B0(&qword_255DB6F30, &qword_255DB6F38, MEMORY[0x24BDF1028]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v3, v4);
    atomic_store(result, (unint64_t *)&qword_255DB6F28);
  }
  return result;
}

uint64_t sub_22DD84D5C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD84D6C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for BatchEvaluationView()
{
  swift_release();
  return swift_release();
}

uint64_t _s8Feedback19BatchEvaluationViewVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BatchEvaluationView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for BatchEvaluationView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for BatchEvaluationView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 18))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BatchEvaluationView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BatchEvaluationView()
{
  return &type metadata for BatchEvaluationView;
}

_QWORD *initializeBufferWithCopyOfBuffer for BatchEvaluationViewContent(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E08);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_22DE1E4D0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = (_QWORD *)((char *)v4 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5670);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_22DE1E614();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = a3[6];
    v14 = a3[7];
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    *((_BYTE *)v4 + v14) = *((_BYTE *)a2 + v14);
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for BatchEvaluationViewContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_22DE1E4D0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5670);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22DE1E614();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for BatchEvaluationViewContent(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22DE1E4D0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5670);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_22DE1E614();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)((char *)a1 + v11);
  v14 = (_QWORD *)((char *)a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for BatchEvaluationViewContent(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  if (a1 != a2)
  {
    sub_22DD5071C((uint64_t)a1, &qword_255DB6E08);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E08);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_22DE1E4D0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v7 = a3[5];
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_22DD5071C((uint64_t)a1 + v7, &qword_255DB5670);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5670);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_22DE1E614();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  swift_retain();
  swift_release();
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_retain();
  swift_release();
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

char *initializeWithTake for BatchEvaluationViewContent(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_22DE1E4D0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5670);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_22DE1E614();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  a1[v13] = a2[v13];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

char *assignWithTake for BatchEvaluationViewContent(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  if (a1 != a2)
  {
    sub_22DD5071C((uint64_t)a1, &qword_255DB6E08);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E08);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_22DE1E4D0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    sub_22DD5071C((uint64_t)&a1[v8], &qword_255DB5670);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5670);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_22DE1E614();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  swift_release();
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  swift_release();
  v16 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v16] = a2[v16];
  return a1;
}

uint64_t getEnumTagSinglePayload for BatchEvaluationViewContent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD85760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6F50);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB56B0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for BatchEvaluationViewContent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD8581C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6F50);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB56B0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

void sub_22DD858C8()
{
  unint64_t v0;
  unint64_t v1;

  sub_22DD53D4C(319, qword_255DB6FC0, (void (*)(uint64_t))MEMORY[0x24BDEB1F0]);
  if (v0 <= 0x3F)
  {
    sub_22DD53D4C(319, &qword_255DB5728, (void (*)(uint64_t))MEMORY[0x24BDEC038]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

unint64_t sub_22DD85984()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB7000;
  if (!qword_255DB7000)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7008);
    v2[0] = sub_22DD7F300();
    v2[1] = sub_22DD508B0(&qword_255DB6DF8, &qword_255DB6DD8, MEMORY[0x24BDF4700]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB7000);
  }
  return result;
}

uint64_t sub_22DD85A08()
{
  uint64_t (*v0)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6E98);
  sub_22DE1E4D0();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB1F0];
  sub_22DD847EC();
  sub_22DD504A8(&qword_255DB6F48, v0, MEMORY[0x24BDEB200]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD85A90()
{
  uint64_t v0;

  return sub_22DD6BDE8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_22DD85AA8()
{
  uint64_t v0;

  return sub_22DD6BBA8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_22DD85AC0()
{
  uint64_t v0;

  return sub_22DD6BC68(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_22DD85AD8()
{
  uint64_t v0;

  return sub_22DD6B968(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_22DD85AF0()
{
  uint64_t v0;

  return sub_22DD6BAE8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_22DD85B08()
{
  uint64_t v0;

  return sub_22DD6EE08(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_22DD85B28()
{
  uint64_t v0;

  return sub_22DD6EE00(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_22DD85B44()
{
  uint64_t v0;

  return sub_22DD6BD28(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_22DD85B5C()
{
  uint64_t v0;

  return sub_22DD6BA28(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_22DD85B74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DD82F18(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_22DD85B7C()
{
  uint64_t v0;

  return sub_22DD82D04(*(_QWORD *)(v0 + 16));
}

uint64_t sub_22DD85B8C()
{
  uint64_t v0;

  return sub_22DD82AAC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_22DD85B98()
{
  return sub_22DD85D38((uint64_t (*)(uint64_t))sub_22DD82B88);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_22DD85BE4()
{
  uint64_t v0;

  sub_22DDCA66C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_22DD85C04()
{
  return sub_22DD85D38((uint64_t (*)(uint64_t))sub_22DD82DE0);
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for BatchEvaluationViewContent();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 16) & ~v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6E08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_22DE1E4D0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v3, v4);
  }
  else
  {
    swift_release();
  }
  v5 = v0 + v3 + *(int *)(v1 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5670);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22DE1E614();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD85D2C()
{
  return sub_22DD85D38((uint64_t (*)(uint64_t))sub_22DD8311C);
}

uint64_t sub_22DD85D38(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for BatchEvaluationViewContent() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

double sub_22DD85D74@<D0>(uint64_t a1@<X8>)
{
  return sub_22DD83268(a1);
}

unint64_t sub_22DD85D7C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB70B0;
  if (!qword_255DB70B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB70A8);
    v2[0] = sub_22DD85E00();
    v2[1] = sub_22DD508B0(&qword_255DB70C0, &qword_255DB70C8, MEMORY[0x24BDEFAD8]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB70B0);
  }
  return result;
}

unint64_t sub_22DD85E00()
{
  unint64_t result;

  result = qword_255DB70B8;
  if (!qword_255DB70B8)
  {
    result = MEMORY[0x22E3207B0](&protocol conformance descriptor for ScoreIndicator, &type metadata for ScoreIndicator);
    atomic_store(result, (unint64_t *)&qword_255DB70B8);
  }
  return result;
}

unint64_t sub_22DD85E4C()
{
  unint64_t result;

  result = qword_255DB7120;
  if (!qword_255DB7120)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE26CB4, &type metadata for BatchLoadingView);
    atomic_store(result, (unint64_t *)&qword_255DB7120);
  }
  return result;
}

uint64_t sub_22DD85E90()
{
  return sub_22DD5C21C(&qword_255DB7138, &qword_255DB7110, (uint64_t (*)(void))sub_22DD85EB4, (uint64_t (*)(void))sub_22DD85F7C);
}

unint64_t sub_22DD85EB4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB7140;
  if (!qword_255DB7140)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7100);
    v2[0] = sub_22DD508B0(&qword_255DB7148, &qword_255DB70F8, MEMORY[0x24BDF5428]);
    v2[1] = sub_22DD85F38();
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB7140);
  }
  return result;
}

unint64_t sub_22DD85F38()
{
  unint64_t result;

  result = qword_255DB7150;
  if (!qword_255DB7150)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE24B04, &type metadata for GiveFeedbackView);
    atomic_store(result, (unint64_t *)&qword_255DB7150);
  }
  return result;
}

unint64_t sub_22DD85F7C()
{
  unint64_t result;

  result = qword_255DB7158;
  if (!qword_255DB7158)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE21118, &type metadata for LoadMoreView);
    atomic_store(result, (unint64_t *)&qword_255DB7158);
  }
  return result;
}

unint64_t sub_22DD85FC0()
{
  unint64_t result;

  result = qword_255DB7160;
  if (!qword_255DB7160)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE20F58, &type metadata for BatchEmptyView);
    atomic_store(result, (unint64_t *)&qword_255DB7160);
  }
  return result;
}

uint64_t sub_22DD8600C(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 != -1)
    return swift_retain();
  return result;
}

uint64_t sub_22DD86020(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 != -1)
    return swift_release();
  return result;
}

uint64_t sub_22DD86044()
{
  return sub_22DD85B28();
}

uint64_t *sub_22DD86058(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  id v17;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  void *v41;
  id v42;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_22DE1E050();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = (int *)type metadata accessor for BatchInteraction(0);
    v9 = v8[5];
    v10 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)v4 + v9) = (uint64_t)v10;
    *(uint64_t *)((char *)v4 + v8[6]) = *(uint64_t *)((char *)a2 + v8[6]);
    v11 = v8[7];
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for BatchInteraction.ContentPolarity(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    v17 = v10;
    swift_retain();
    if (v16(v13, 1, v14))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v21 = type metadata accessor for BatchInteraction.ContentPreview(0);
      v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48);
      v23 = v22(v13, 1, v21);
      if (EnumCaseMultiPayload == 1)
      {
        if (!v23)
        {
          v26 = (char *)&loc_22DD86210 + 4 * byte_22DE22E9E[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
        v29 = &v12[v28];
        v30 = &v13[v28];
        if (!v22(v30, 1, v21))
        {
          v32 = (char *)&loc_22DD86370 + 4 * byte_22DE22EA4[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        if (!v23)
        {
          v27 = (char *)&loc_22DD8624C + 4 * byte_22DE22E98[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v33 = *(int *)(a3 + 20);
    v34 = *(int *)(a3 + 24);
    v35 = (char *)v4 + v33;
    v36 = (char *)a2 + v33;
    v37 = *(_QWORD *)v36;
    LOBYTE(v36) = v36[8];
    *(_QWORD *)v35 = v37;
    v35[8] = (char)v36;
    v38 = (uint64_t *)((char *)v4 + v34);
    v39 = (char *)a2 + v34;
    v41 = *(void **)v39;
    v40 = *((_QWORD *)v39 + 1);
    *v38 = *(_QWORD *)v39;
    v38[1] = v40;
    swift_retain();
    v42 = v41;
  }
  swift_retain();
  return v4;
}

uint64_t sub_22DD86588(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t (*v11)(id *, uint64_t, uint64_t);
  int v12;
  uint64_t v13;
  uint64_t v14;

  v4 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = type metadata accessor for BatchInteraction(0);

  swift_release();
  v6 = (id *)(a1 + *(int *)(v5 + 28));
  v7 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v10 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v11 = *(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
    v12 = v11(v6, 1, v10);
    if (EnumCaseMultiPayload == 1)
    {
      if (!v12)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            swift_bridgeObjectRelease();
            break;
          case 2u:

            break;
          case 3u:

            swift_bridgeObjectRelease();
            break;
          case 5u:
            v14 = sub_22DE1DEB8();
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v6, v14);
            break;
          default:
            break;
        }
      }
      v6 = (id *)((char *)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48));
      if (!v11(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            goto LABEL_9;
          case 2u:
            goto LABEL_12;
          case 3u:
            goto LABEL_13;
          case 5u:
            goto LABEL_14;
          default:
            break;
        }
      }
    }
    else if (!v12)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 4u:
LABEL_9:
          swift_bridgeObjectRelease();
          break;
        case 2u:
LABEL_12:

          break;
        case 3u:
LABEL_13:

          swift_bridgeObjectRelease();
          break;
        case 5u:
LABEL_14:
          v13 = sub_22DE1DEB8();
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v6, v13);
          break;
        default:
          break;
      }
    }
  }
  swift_release();

  return swift_release();
}

uint64_t sub_22DD867F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BatchInteraction(0);
  v8 = v7[5];
  v9 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  v10 = v7[7];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v9;
  swift_retain();
  if (v15(v12, 1, v13))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v19 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48);
    v21 = v20(v12, 1, v19);
    if (EnumCaseMultiPayload == 1)
    {
      if (!v21)
      {
        v24 = (char *)&loc_22DD86984 + 4 * byte_22DE22EC2[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v27 = &v11[v26];
      v28 = &v12[v26];
      if (!v20(v28, 1, v19))
      {
        v30 = (char *)&loc_22DD86AE4 + 4 * byte_22DE22EC8[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      if (!v21)
      {
        v25 = (char *)&loc_22DD869C0 + 4 * byte_22DE22EBC[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v31 = *(int *)(a3 + 20);
  v32 = *(int *)(a3 + 24);
  v33 = a1 + v31;
  v34 = (uint64_t *)(a2 + v31);
  v35 = *v34;
  LOBYTE(v34) = *((_BYTE *)v34 + 8);
  *(_QWORD *)v33 = v35;
  *(_BYTE *)(v33 + 8) = (_BYTE)v34;
  v36 = (_QWORD *)(a1 + v32);
  v37 = a2 + v32;
  v39 = *(void **)v37;
  v38 = *(_QWORD *)(v37 + 8);
  *v36 = *(_QWORD *)v37;
  v36[1] = v38;
  swift_retain();
  v40 = v39;
  swift_retain();
  return a1;
}

uint64_t sub_22DD86CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  id v51;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BatchInteraction(0);
  v8 = v7[5];
  v9 = *(void **)(a2 + v8);
  v10 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  v11 = v9;

  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  swift_retain();
  swift_release();
  v12 = v7[7];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v21 = type metadata accessor for BatchInteraction.ContentPreview(0);
      v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48);
      v23 = v22(v14, 1, v21);
      if (EnumCaseMultiPayload == 1)
      {
        if (!v23)
        {
          v32 = (char *)&loc_22DD86F48 + 4 * byte_22DE22ED4[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        v37 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
        v38 = &v13[v37];
        v39 = &v14[v37];
        if (!v22(v39, 1, v21))
        {
          v41 = (char *)&loc_22DD87170 + 4 * byte_22DE22EDA[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        if (!v23)
        {
          v34 = (char *)&loc_22DD86FB4 + 4 * byte_22DE22ECE[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_25;
    }
LABEL_8:
    v25 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_25;
  }
  if (v19)
  {
    sub_22DD5C950((uint64_t)v13, type metadata accessor for BatchInteraction.ContentPolarity);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_22DD5C950((uint64_t)v13, type metadata accessor for BatchInteraction.ContentPolarity);
    v26 = swift_getEnumCaseMultiPayload();
    v27 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48);
    v29 = v28(v14, 1, v27);
    if (v26 == 1)
    {
      if (!v29)
      {
        v35 = (char *)&loc_22DD86FF8 + 4 * word_22DE22EEC[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      v53 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v54 = &v13[v53];
      v55 = &v14[v53];
      if (!v28(v55, 1, v27))
      {
        v57 = (char *)&loc_22DD874E4 + 4 * byte_22DE22EF8[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (!v29)
      {
        v36 = (char *)&loc_22DD8703C + 4 * word_22DE22EE0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_25:
  v42 = *(int *)(a3 + 20);
  v43 = a1 + v42;
  v44 = (uint64_t *)(a2 + v42);
  v45 = *v44;
  LOBYTE(v44) = *((_BYTE *)v44 + 8);
  *(_QWORD *)v43 = v45;
  *(_BYTE *)(v43 + 8) = (_BYTE)v44;
  swift_retain();
  swift_release();
  v46 = *(int *)(a3 + 24);
  v47 = a1 + v46;
  v48 = a2 + v46;
  v49 = *(void **)(a2 + v46);
  v50 = *(void **)v47;
  *(_QWORD *)v47 = v49;
  v51 = v49;

  *(_QWORD *)(v47 + 8) = *(_QWORD *)(v48 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_22DD876A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BatchInteraction(0);
  *(_QWORD *)(a1 + v7[5]) = *(_QWORD *)(a2 + v7[5]);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  v8 = v7[7];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v15 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v33 = *(_QWORD *)(v15 - 8);
    v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
    v17 = v16(v10, 1, v15);
    if (EnumCaseMultiPayload == 1)
    {
      if (v17)
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v20 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v9, v10, v20);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v9, v10, *(_QWORD *)(v33 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v9, 0, 1, v15);
      }
      v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v23 = &v9[v22];
      v24 = &v10[v22];
      if (v16(v24, 1, v15))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v26 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
          swift_storeEnumTagMultiPayload();
          v27 = v33;
        }
        else
        {
          v27 = v33;
          memcpy(v23, v24, *(_QWORD *)(v33 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v15);
      }
    }
    else if (v17)
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        v21 = sub_22DE1DEB8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v9, v10, v21);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(_QWORD *)(v33 + 64));
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v9, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v28 = *(int *)(a3 + 20);
  v29 = *(int *)(a3 + 24);
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
  *(_OWORD *)(a1 + v29) = *(_OWORD *)(a2 + v29);
  return a1;
}

uint64_t sub_22DD87A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  void *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for BatchInteraction(0);
  v8 = v7[5];
  v9 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);

  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  swift_release();
  v10 = v7[7];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v19 = type metadata accessor for BatchInteraction.ContentPreview(0);
      v58 = *(_QWORD *)(v19 - 8);
      v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
      v21 = v20(v12, 1, v19);
      if (EnumCaseMultiPayload == 1)
      {
        if (v21)
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 5)
          {
            v31 = sub_22DE1DEB8();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v11, v12, v31);
            swift_storeEnumTagMultiPayload();
            v32 = v58;
          }
          else
          {
            v32 = v58;
            memcpy(v11, v12, *(_QWORD *)(v58 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v11, 0, 1, v19);
        }
        v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
        v37 = &v11[v36];
        v38 = &v12[v36];
        if (v20(v38, 1, v19))
        {
          v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 5)
          {
            v40 = sub_22DE1DEB8();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v37, v38, v40);
            swift_storeEnumTagMultiPayload();
            v41 = v58;
          }
          else
          {
            v41 = v58;
            memcpy(v37, v38, *(_QWORD *)(v58 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v37, 0, 1, v19);
        }
      }
      else if (v21)
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v34 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v11, v12, v34);
          swift_storeEnumTagMultiPayload();
          v35 = v58;
        }
        else
        {
          v35 = v58;
          memcpy(v11, v12, *(_QWORD *)(v58 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v11, 0, 1, v19);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_32;
    }
LABEL_8:
    v23 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_32;
  }
  if (v17)
  {
    sub_22DD5C950((uint64_t)v11, type metadata accessor for BatchInteraction.ContentPolarity);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_22DD5C950((uint64_t)v11, type metadata accessor for BatchInteraction.ContentPolarity);
    v24 = swift_getEnumCaseMultiPayload();
    v25 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    v28 = v27(v12, 1, v25);
    if (v24 == 1)
    {
      if (v28)
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v51 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v11, v12, v51);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v11, v12, *(_QWORD *)(v26 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v11, 0, 1, v25);
      }
      v53 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v54 = &v11[v53];
      v55 = &v12[v53];
      if (v27(v55, 1, v25))
      {
        v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v57 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v54, v55, v57);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v54, v55, *(_QWORD *)(v26 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v54, 0, 1, v25);
      }
    }
    else if (v28)
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        v52 = sub_22DE1DEB8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v11, v12, v52);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v11, v12, *(_QWORD *)(v26 + 64));
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v11, 0, 1, v25);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_32:
  v42 = *(int *)(a3 + 20);
  v43 = a1 + v42;
  v44 = (uint64_t *)(a2 + v42);
  v45 = *v44;
  LOBYTE(v44) = *((_BYTE *)v44 + 8);
  *(_QWORD *)v43 = v45;
  *(_BYTE *)(v43 + 8) = (_BYTE)v44;
  swift_release();
  v46 = *(int *)(a3 + 24);
  v47 = a1 + v46;
  v48 = (_QWORD *)(a2 + v46);
  v49 = *(void **)(a1 + v46);
  *(_QWORD *)(a1 + v46) = *v48;

  *(_QWORD *)(v47 + 8) = v48[1];
  swift_release();
  return a1;
}

uint64_t sub_22DD88098()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD880A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for BatchInteraction(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_22DD88120()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD8812C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for BatchInteraction(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for EvaluationCard()
{
  uint64_t result;

  result = qword_255DB71F8;
  if (!qword_255DB71F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22DD881E0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for BatchInteraction(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22DD8825C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD8826C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  int v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v1 = type metadata accessor for BatchInteraction(0);
  v37 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v33 = (uint64_t)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6678);
  MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6258);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v34 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v33 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v33 - v10;
  v12 = *(int *)(type metadata accessor for EvaluationCard() + 20);
  v36 = v0;
  v13 = *(_BYTE *)(v0 + v12 + 8);
  v14 = swift_retain();
  v15 = sub_22DD83CC8(v14, v13);
  swift_release();
  swift_getKeyPath();
  v40 = v15;
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  v16 = *(_QWORD *)(v15 + 16);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  v40 = v16;
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  sub_22DE1E068();
  swift_release();
  swift_beginAccess();
  v17 = *(_QWORD *)(*(_QWORD *)(v16 + 24) + 16);
  swift_release();
  if (v17)
  {
    v18 = swift_retain();
    v19 = sub_22DD83CC8(v18, v13);
    swift_release();
    swift_getKeyPath();
    v39 = v19;
    sub_22DE1E068();
    swift_release();
    v20 = *(_QWORD *)(v19 + 16);
    swift_retain();
    swift_release();
    swift_getKeyPath();
    v39 = v20;
    sub_22DE1E068();
    swift_release();
    swift_beginAccess();
    v21 = *(_QWORD *)(v20 + 24);
    v22 = v37;
    if (*(_QWORD *)(v21 + 16))
    {
      sub_22DD5C570(v21 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80)), (uint64_t)v11, type metadata accessor for BatchInteraction);
      v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
      v23(v11, 0, 1, v1);
    }
    else
    {
      v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
      v23(v11, 1, 1, v1);
    }
    v25 = (uint64_t)v38;
    swift_release();
    sub_22DD5C570(v36, (uint64_t)v9, type metadata accessor for BatchInteraction);
    v23(v9, 0, 1, v1);
    v26 = v25 + *(int *)(v35 + 48);
    sub_22DD506A0((uint64_t)v11, v25, &qword_255DB6258);
    sub_22DD506A0((uint64_t)v9, v26, &qword_255DB6258);
    v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
    if (v27(v25, 1, v1) == 1)
    {
      sub_22DD5071C((uint64_t)v9, &qword_255DB6258);
      sub_22DD5071C((uint64_t)v11, &qword_255DB6258);
      v28 = v27(v26, 1, v1);
      if (v28 == 1)
        v29 = &qword_255DB6258;
      else
        v29 = &qword_255DB6678;
      if (v28 == 1)
        v24 = -1;
      else
        v24 = 0;
    }
    else
    {
      v30 = v34;
      sub_22DD506A0(v25, v34, &qword_255DB6258);
      if (v27(v26, 1, v1) == 1)
      {
        v24 = 0;
        v29 = &qword_255DB6678;
      }
      else
      {
        v31 = v33;
        sub_22DD647B0(v26, v33, type metadata accessor for BatchInteraction);
        v24 = sub_22DD643FC(v30, v31);
        sub_22DD5C950(v31, type metadata accessor for BatchInteraction);
        v29 = &qword_255DB6258;
      }
      sub_22DD5071C((uint64_t)v9, &qword_255DB6258);
      sub_22DD5071C((uint64_t)v11, &qword_255DB6258);
      sub_22DD5C950(v30, type metadata accessor for BatchInteraction);
    }
    sub_22DD5071C(v25, v29);
  }
  else
  {
    v24 = 0;
  }
  return v24 & 1;
}

uint64_t sub_22DD88760@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  void **v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  __int128 v49;
  uint64_t v50;
  uint64_t KeyPath;
  _BYTE *v52;
  uint64_t *v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  id v71;
  uint64_t v72;
  void *v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE v85[12];
  int v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE *v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE *v98;
  uint64_t v99;
  _BYTE *v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _BYTE *v108;
  _BYTE *v109;
  _BYTE *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  void (*v116)(void *, char);
  uint64_t v117;
  _QWORD v118[2];
  void *v119;
  void *v120;
  __int128 v121;

  v106 = a1;
  v107 = sub_22DE1F46C();
  v105 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v104 = &v85[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v103 = sub_22DE1E920();
  v102 = *(_QWORD *)(v103 - 8);
  v3 = MEMORY[0x24BDAC7A8](v103);
  v101 = &v85[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v3);
  v100 = &v85[-v5];
  v6 = type metadata accessor for EvaluationCard();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v85[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7238);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = &v85[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v15 = &v85[-v14];
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7240);
  v93 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95);
  v108 = &v85[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7248);
  MEMORY[0x24BDAC7A8](v90);
  v89 = &v85[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7250);
  MEMORY[0x24BDAC7A8](v92);
  v91 = &v85[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB55B8);
  MEMORY[0x24BDAC7A8](v96);
  v94 = &v85[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB55C0);
  MEMORY[0x24BDAC7A8](v20);
  v110 = &v85[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7258);
  MEMORY[0x24BDAC7A8](v99);
  v98 = &v85[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v114 = v1;
  v109 = v9;
  sub_22DD5C570(v1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for EvaluationCard);
  v23 = *(unsigned __int8 *)(v7 + 80);
  v112 = ((v23 + 16) & ~v23) + v8;
  v113 = (v23 + 16) & ~v23;
  v24 = v113;
  v111 = v23 | 7;
  v25 = swift_allocObject();
  sub_22DD647B0((uint64_t)v9, v25 + v24, (uint64_t (*)(_QWORD))type metadata accessor for EvaluationCard);
  *(_OWORD *)v13 = xmmword_22DE23190;
  v26 = (uint64_t *)&v13[*(int *)(v10 + 44)];
  *v26 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7190);
  swift_storeEnumTagMultiPayload();
  *((_QWORD *)v13 + 2) = sub_22DD8ABC0;
  *((_QWORD *)v13 + 3) = v25;
  sub_22DD5003C((uint64_t)v13, (uint64_t)v15, &qword_255DB7238);
  v27 = (void **)(v1 + *(int *)(v6 + 24));
  v28 = v27[1];
  v119 = *v27;
  v120 = v28;
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7260);
  sub_22DE1EFF8();
  v29 = (void *)v118[0];
  type metadata accessor for FBKEvaluationController(0);
  sub_22DD508B0(&qword_255DB7268, &qword_255DB7238, (uint64_t)&unk_22DE23520);
  v97 = sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1EDE8();

  sub_22DD5071C((uint64_t)v15, &qword_255DB7238);
  v30 = v27[1];
  v119 = *v27;
  v120 = v30;
  sub_22DE1EFF8();
  v87 = v118[0];
  type metadata accessor for BatchController();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  v31 = sub_22DE1E554();
  v86 = v32;
  type metadata accessor for SwipeController();
  sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
  v33 = sub_22DE1E554();
  LOBYTE(v10) = v34;
  type metadata accessor for StateController();
  sub_22DD504A8((unint64_t *)&qword_255DB6248, (uint64_t (*)(uint64_t))type metadata accessor for StateController, (uint64_t)&unk_22DE247FC);
  v35 = sub_22DE1E554();
  v37 = v36;
  type metadata accessor for DonationController();
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  v38 = sub_22DE1E554();
  LOBYTE(v24) = v39;
  v40 = (uint64_t)v89;
  v41 = (uint64_t)&v89[*(int *)(v90 + 36)];
  sub_22DD5C570(v114, v41, type metadata accessor for BatchInteraction);
  v42 = (int *)type metadata accessor for InteractableCard();
  *(_QWORD *)(v41 + v42[5]) = v87;
  v43 = v41 + v42[6];
  *(_QWORD *)v43 = v31;
  *(_BYTE *)(v43 + 8) = v86 & 1;
  v44 = v41 + v42[7];
  *(_QWORD *)v44 = v33;
  *(_BYTE *)(v44 + 8) = v10 & 1;
  v45 = v41 + v42[8];
  *(_QWORD *)v45 = v35;
  *(_BYTE *)(v45 + 8) = v37 & 1;
  v46 = v41 + v42[9];
  *(_QWORD *)v46 = v38;
  *(_BYTE *)(v46 + 8) = v24 & 1;
  v47 = v41 + v42[10];
  LOBYTE(v118[0]) = 0;
  sub_22DE1E584();
  v48 = v120;
  v49 = v121;
  *(_BYTE *)v47 = (_BYTE)v119;
  *(_QWORD *)(v47 + 8) = v48;
  *(_OWORD *)(v47 + 16) = v49;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v93 + 32))(v40, v108, v95);
  v50 = sub_22DE1EF38();
  KeyPath = swift_getKeyPath();
  v52 = v91;
  sub_22DD506A0(v40, (uint64_t)v91, &qword_255DB7248);
  v53 = (uint64_t *)&v52[*(int *)(v92 + 36)];
  *v53 = KeyPath;
  v53[1] = v50;
  sub_22DD5071C(v40, &qword_255DB7248);
  v54 = v100;
  sub_22DE1E914();
  v55 = v102;
  v56 = v103;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v102 + 16))(v101, v54, v103);
  sub_22DD504A8(&qword_255DB7278, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE9A8], MEMORY[0x24BDEE998]);
  v57 = v56;
  v58 = sub_22DE1E5FC();
  v59 = v94;
  sub_22DD506A0((uint64_t)v52, (uint64_t)v94, &qword_255DB7250);
  *(_QWORD *)&v59[*(int *)(v96 + 36)] = v58;
  (*(void (**)(_BYTE *, uint64_t))(v55 + 8))(v54, v57);
  sub_22DD5071C((uint64_t)v52, &qword_255DB7250);
  v60 = sub_22DE1F130();
  sub_22DD4F5AC(0.0, 1, 0.0, 1, 640.0, 0, 0.0, 1, (uint64_t)v110, 0.0, 1, 720.0, 0, v60, v61);
  sub_22DD5071C((uint64_t)v59, &qword_255DB55B8);
  v62 = v27[1];
  v118[0] = *v27;
  v118[1] = v62;
  sub_22DE1F010();
  v63 = v119;
  v64 = v120;
  v65 = (void *)v121;
  v66 = (uint64_t)v109;
  sub_22DD5C570(v114, (uint64_t)v109, (uint64_t (*)(_QWORD))type metadata accessor for EvaluationCard);
  v67 = swift_allocObject();
  sub_22DD647B0(v66, v67 + v113, (uint64_t (*)(_QWORD))type metadata accessor for EvaluationCard);
  v68 = (uint64_t)v98;
  v69 = &v98[*(int *)(v99 + 36)];
  v70 = (_QWORD *)((char *)v69 + *(int *)(type metadata accessor for FBKEvaluationViewModifier() + 20));
  *v70 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7018);
  swift_storeEnumTagMultiPayload();
  v119 = v63;
  v120 = v64;
  *(_QWORD *)&v121 = v65;
  swift_retain();
  swift_retain();
  v71 = v65;
  swift_retain();
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
  MEMORY[0x22E31F8EC](v118, v72);
  v73 = (void *)v118[0];
  swift_getKeyPath();
  v115 = v73;
  v116 = sub_22DD8AD04;
  v117 = v67;
  v119 = v73;
  swift_retain();
  sub_22DE1E05C();

  swift_release_n();
  swift_release();
  *v69 = v63;
  v69[1] = v64;
  v69[2] = v71;
  v74 = v110;
  sub_22DD506A0((uint64_t)v110, v68, &qword_255DB55C0);

  swift_release();
  swift_release();
  swift_release();
  sub_22DD5071C((uint64_t)v74, &qword_255DB55C0);
  v75 = (uint64_t)v109;
  sub_22DD5C570(v114, (uint64_t)v109, (uint64_t (*)(_QWORD))type metadata accessor for EvaluationCard);
  v76 = swift_allocObject();
  sub_22DD647B0(v75, v76 + v113, (uint64_t (*)(_QWORD))type metadata accessor for EvaluationCard);
  v77 = v104;
  sub_22DE1F454();
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7298);
  v79 = v106;
  v80 = (char *)(v106 + *(int *)(v78 + 36));
  v81 = sub_22DE1E668();
  v82 = v105;
  v83 = v107;
  (*(void (**)(char *, _BYTE *, uint64_t))(v105 + 16))(&v80[*(int *)(v81 + 20)], v77, v107);
  *(_QWORD *)v80 = &unk_255DB7290;
  *((_QWORD *)v80 + 1) = v76;
  sub_22DD506A0(v68, v79, &qword_255DB7258);
  (*(void (**)(_BYTE *, uint64_t))(v82 + 8))(v77, v83);
  return sub_22DD5071C(v68, &qword_255DB7258);
}

uint64_t sub_22DD89258@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;

  *a2 = sub_22DE1F130();
  a2[1] = v4;
  v5 = (char *)a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB72A8) + 44);
  *(_QWORD *)v5 = sub_22DE1E9EC();
  *((_QWORD *)v5 + 1) = 0x4030000000000000;
  v5[16] = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB72B0);
  return sub_22DD892C0(a1, (uint64_t)&v5[*(int *)(v6 + 44)]);
}

uint64_t sub_22DD892C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unsigned __int8 v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD *v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  int v68;
  int v69;
  int v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t KeyPath;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  char v103;
  unsigned __int8 v104;
  _BYTE v105[7];
  unsigned __int8 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __int16 v127;
  char v128;
  int v129;
  char v130;
  uint64_t v131;
  _BYTE *(*v132)(_BYTE *);
  uint64_t v133;

  v75 = a2;
  v89 = sub_22DE1E1F4();
  v3 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v5 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB72B8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v100 = (uint64_t)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v101 = (uint64_t)&v67 - v9;
  v10 = type metadata accessor for Previewer();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v98 = (uint64_t)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v99 = (uint64_t)&v67 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v79 = (uint64_t)&v67 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v67 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB72C0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v97 = (uint64_t)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v67 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v67 - v25;
  *(_QWORD *)v24 = sub_22DE1E8E4();
  *((_QWORD *)v24 + 1) = 0x4020000000000000;
  v24[16] = 0;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB72C8);
  sub_22DD89B88(a1, (uint64_t)&v24[*(int *)(v27 + 44)]);
  v90 = v26;
  sub_22DD5003C((uint64_t)v24, (uint64_t)v26, &qword_255DB72C0);
  v74 = sub_22DE1E8F0();
  sub_22DD89DC0((uint64_t)&v115);
  v93 = v116;
  v94 = v115;
  v92 = v117;
  v95 = v119;
  v96 = v118;
  v73 = v120;
  v72 = v121;
  v76 = v122;
  v28 = v123;
  v71 = v124;
  v70 = v125;
  sub_22DD5C570(a1, (uint64_t)v18, type metadata accessor for BatchInteraction);
  type metadata accessor for FullScreenPreviewController(0);
  sub_22DD504A8(&qword_255DB5A00, type metadata accessor for FullScreenPreviewController, (uint64_t)&unk_22DE223F0);
  v29 = sub_22DE1E554();
  v18[*(int *)(v10 + 20)] = 1;
  v30 = *(int *)(v10 + 24);
  v91 = v18;
  v31 = &v18[v30];
  *(_QWORD *)v31 = v29;
  v31[8] = v32 & 1;
  if (qword_255DB52D8 != -1)
    swift_once();
  v33 = qword_255DB7198;
  type metadata accessor for BatchInteraction(0);
  sub_22DE1E200();
  v34 = sub_22DD62E9C((uint64_t)v5, v33);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v89);
  if ((v34 & 1) != 0)
  {
    v35 = sub_22DE1F0B8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v101, 1, 1, v35);
  }
  else
  {
    v36 = v101;
    sub_22DE1F0AC();
    v37 = sub_22DE1F0B8();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 0, 1, v37);
  }
  v38 = v79;
  sub_22DD5C570(a1, v79, type metadata accessor for BatchInteraction);
  v39 = sub_22DE1E554();
  *(_BYTE *)(v38 + *(int *)(v10 + 20)) = 0;
  v40 = v38 + *(int *)(v10 + 24);
  *(_QWORD *)v40 = v39;
  *(_BYTE *)(v40 + 8) = v41 & 1;
  v77 = sub_22DE1E8F0();
  sub_22DD89F20(a1, (uint64_t)&v115);
  v78 = v115;
  v88 = v117;
  v89 = v116;
  v86 = v119;
  v87 = v118;
  v84 = v121;
  v85 = v120;
  v82 = v123;
  v83 = v122;
  v81 = (unsigned __int16)v124;
  v42 = BYTE2(v124);
  v43 = sub_22DD8826C();
  KeyPath = swift_getKeyPath();
  v67 = swift_allocObject();
  *(_BYTE *)(v67 + 16) = (v43 & 1) == 0;
  v106 = 0;
  v104 = v42;
  v44 = v97;
  sub_22DD506A0((uint64_t)v90, v97, &qword_255DB72C0);
  v45 = v99;
  sub_22DD5C570((uint64_t)v91, v99, (uint64_t (*)(_QWORD))type metadata accessor for Previewer);
  v46 = v100;
  sub_22DD506A0(v101, v100, &qword_255DB72B8);
  v47 = v98;
  sub_22DD5C570(v38, v98, (uint64_t (*)(_QWORD))type metadata accessor for Previewer);
  v48 = v106;
  LOBYTE(v38) = v104;
  v68 = v106;
  v69 = v104;
  v49 = v44;
  v50 = v75;
  sub_22DD506A0(v49, v75, &qword_255DB72C0);
  v51 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255DB72D0);
  v52 = v50 + v51[12];
  *(_QWORD *)v52 = v74;
  *(_QWORD *)(v52 + 8) = 0;
  *(_BYTE *)(v52 + 16) = 1;
  v53 = v93;
  *(_QWORD *)(v52 + 24) = v94;
  *(_QWORD *)(v52 + 32) = v53;
  *(_BYTE *)(v52 + 40) = v92;
  v54 = v95;
  *(_QWORD *)(v52 + 48) = v96;
  *(_QWORD *)(v52 + 56) = v54;
  *(_QWORD *)(v52 + 64) = v73;
  *(_BYTE *)(v52 + 72) = v72;
  *(_QWORD *)(v52 + 80) = v76;
  *(_QWORD *)(v52 + 88) = v28;
  *(_QWORD *)(v52 + 96) = v71;
  *(_WORD *)(v52 + 104) = v70;
  sub_22DD5C570(v45, v50 + v51[16], (uint64_t (*)(_QWORD))type metadata accessor for Previewer);
  sub_22DD506A0(v46, v50 + v51[20], &qword_255DB72B8);
  sub_22DD5C570(v47, v50 + v51[24], (uint64_t (*)(_QWORD))type metadata accessor for Previewer);
  v55 = v50 + v51[28];
  *(_QWORD *)v55 = 0x4010000000000000;
  *(_BYTE *)(v55 + 8) = 0;
  v56 = (_OWORD *)(v50 + v51[32]);
  *(_QWORD *)&v107 = v77;
  *((_QWORD *)&v107 + 1) = 0x4020000000000000;
  LOBYTE(v108) = v48;
  *(_DWORD *)((char *)&v108 + 1) = *(_DWORD *)v105;
  DWORD1(v108) = *(_DWORD *)&v105[3];
  *((_QWORD *)&v108 + 1) = v78;
  *(_QWORD *)&v109 = v89;
  *((_QWORD *)&v109 + 1) = v88;
  *(_QWORD *)&v110 = v87;
  *((_QWORD *)&v110 + 1) = v86;
  *(_QWORD *)&v111 = v85;
  *((_QWORD *)&v111 + 1) = v84;
  *(_QWORD *)&v112 = v83;
  *((_QWORD *)&v112 + 1) = v82;
  LOWORD(v113) = v81;
  BYTE2(v113) = v38;
  BYTE7(v113) = v103;
  *(_DWORD *)((char *)&v113 + 3) = v102;
  *((_QWORD *)&v113 + 1) = KeyPath;
  v57 = v67;
  *(_QWORD *)&v114 = sub_22DD543CC;
  *((_QWORD *)&v114 + 1) = v67;
  v58 = v107;
  v59 = v108;
  v60 = v110;
  v56[2] = v109;
  v56[3] = v60;
  *v56 = v58;
  v56[1] = v59;
  v61 = v111;
  v62 = v112;
  v63 = v114;
  v56[6] = v113;
  v56[7] = v63;
  v56[4] = v61;
  v56[5] = v62;
  v65 = v93;
  v64 = v94;
  LOBYTE(v50) = v92;
  sub_22DD50088(v94, v93, v92);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_22DD8B0F8((uint64_t)&v107);
  sub_22DD50088(v64, v65, v50);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_22DD5C950(v79, (uint64_t (*)(_QWORD))type metadata accessor for Previewer);
  sub_22DD5071C(v101, &qword_255DB72B8);
  sub_22DD5C950((uint64_t)v91, (uint64_t (*)(_QWORD))type metadata accessor for Previewer);
  sub_22DD4FC6C(v64, v65, v50);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_22DD5071C((uint64_t)v90, &qword_255DB72C0);
  v115 = v77;
  v116 = 0x4020000000000000;
  LOBYTE(v117) = v68;
  *(_DWORD *)((char *)&v117 + 1) = *(_DWORD *)v105;
  HIDWORD(v117) = *(_DWORD *)&v105[3];
  v118 = v78;
  v119 = v89;
  v120 = v88;
  v121 = v87;
  v122 = v86;
  v123 = v85;
  v124 = v84;
  v125 = v83;
  v126 = v82;
  v127 = v81;
  v128 = v69;
  v129 = v102;
  v130 = v103;
  v131 = KeyPath;
  v132 = sub_22DD543CC;
  v133 = v57;
  sub_22DD8B210((uint64_t)&v115);
  sub_22DD5C950(v98, (uint64_t (*)(_QWORD))type metadata accessor for Previewer);
  sub_22DD5071C(v100, &qword_255DB72B8);
  sub_22DD5C950(v99, (uint64_t (*)(_QWORD))type metadata accessor for Previewer);
  sub_22DD4FC6C(v64, v65, v50);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_22DD5071C(v97, &qword_255DB72C0);
}

uint64_t sub_22DD89B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  char v15;
  void *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v4 = type metadata accessor for AppMetaView();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7308);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v22 - v11;
  sub_22DD5C570(a1, (uint64_t)v6, type metadata accessor for BatchInteraction);
  sub_22DD5C570((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for AppMetaView);
  v10[*(int *)(v7 + 36)] = 0;
  sub_22DD5C950((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for AppMetaView);
  sub_22DD5003C((uint64_t)v10, (uint64_t)v12, &qword_255DB7308);
  type metadata accessor for BatchController();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  v13 = sub_22DE1E554();
  v15 = v14;
  type metadata accessor for FBKEvaluationController(0);
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  v16 = (void *)sub_22DE1E554();
  LOBYTE(v7) = v17 & 1;
  sub_22DD506A0((uint64_t)v12, (uint64_t)v10, &qword_255DB7308);
  sub_22DD506A0((uint64_t)v10, a2, &qword_255DB7308);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7310);
  v19 = a2 + *(int *)(v18 + 48);
  *(_QWORD *)v19 = 0;
  *(_BYTE *)(v19 + 8) = 1;
  v20 = a2 + *(int *)(v18 + 64);
  *(_QWORD *)v20 = v13;
  *(_BYTE *)(v20 + 8) = v15 & 1;
  *(_QWORD *)(v20 + 16) = v16;
  *(_BYTE *)(v20 + 24) = v7;
  swift_retain();
  sub_22DD56E54(v16, v7);
  sub_22DD5071C((uint64_t)v12, &qword_255DB7308);
  swift_release();
  sub_22DD56E8C(v16, v7);
  return sub_22DD5071C((uint64_t)v10, &qword_255DB7308);
}

uint64_t sub_22DD89DC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;

  sub_22DD7D500();
  sub_22DD50840();
  v2 = sub_22DE1ED94();
  v4 = v3;
  v6 = v5 & 1;
  sub_22DE1ED1C();
  v7 = sub_22DE1ED64();
  v9 = v8;
  v11 = v10;
  v13 = v12;
  swift_release();
  sub_22DD4FC6C(v2, v4, v6);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v15 = swift_getKeyPath();
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v9;
  *(_BYTE *)(a1 + 16) = v11 & 1;
  *(_QWORD *)(a1 + 24) = v13;
  *(_QWORD *)(a1 + 32) = KeyPath;
  *(_QWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 48) = 1;
  *(_QWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 64) = 0x3FE0000000000000;
  *(_QWORD *)(a1 + 72) = 0;
  *(_BYTE *)(a1 + 80) = 1;
  sub_22DD50088(v7, v9, v11 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_22DD4FC6C(v7, v9, v11 & 1);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

double sub_22DD89F20@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  char v9;
  char v10;
  void *v11;
  char v12;
  char v13;
  char v14;
  double result;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  __int16 v22;
  char v23;

  v2 = *(_BYTE *)(a1 + *(int *)(type metadata accessor for EvaluationCard() + 20) + 8);
  v3 = swift_retain();
  v4 = sub_22DD83CC8(v3, v2);
  swift_release();
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  v5 = *(_QWORD *)(v4 + 48);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)&v17 = v5;
  sub_22DD504A8((unint64_t *)&qword_255DB6248, (uint64_t (*)(uint64_t))type metadata accessor for StateController, (uint64_t)&unk_22DE247FC);
  sub_22DE1E068();
  swift_release();
  v6 = *(_QWORD *)(v5 + 16);
  v7 = *(_QWORD *)(v5 + 24);
  sub_22DD77554(v6, v7);
  swift_release();
  if (v7 == 2)
  {
    type metadata accessor for BatchController();
    sub_22DE1E554();
    type metadata accessor for FBKEvaluationController(0);
    sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
    v8 = (void *)sub_22DE1E554();
    v10 = v14 & 1;
    swift_retain();
    sub_22DD56E54(v8, v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB72F0);
    sub_22DD508B0(&qword_255DB72E8, &qword_255DB72F0, MEMORY[0x24BDF5428]);
    sub_22DD8B3CC();
    sub_22DE1EAD0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB72D8);
    sub_22DD8B348();
    sub_22DE1EAD0();
  }
  else
  {
    if (v7 != 1)
    {
      sub_22DD775A8(v6, v7);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DB72D8);
      sub_22DD8B348();
      sub_22DE1EAD0();
      goto LABEL_7;
    }
    type metadata accessor for BatchController();
    sub_22DE1E554();
    type metadata accessor for FBKEvaluationController(0);
    sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
    v8 = (void *)sub_22DE1E554();
    v10 = v9 & 1;
    sub_22DE1E554();
    v11 = (void *)sub_22DE1E554();
    v13 = v12 & 1;
    swift_retain();
    sub_22DD56E54(v8, v10);
    swift_retain();
    sub_22DD56E54(v11, v13);
    swift_retain();
    sub_22DD56E54(v8, v10);
    swift_retain();
    sub_22DD56E54(v11, v13);
    swift_release();
    sub_22DD56E8C(v11, v13);
    swift_release();
    sub_22DD56E8C(v8, v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB72F0);
    sub_22DD508B0(&qword_255DB72E8, &qword_255DB72F0, MEMORY[0x24BDF5428]);
    sub_22DD8B3CC();
    sub_22DE1EAD0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB72D8);
    sub_22DD8B348();
    sub_22DE1EAD0();
    swift_release();
    sub_22DD56E8C(v11, v13);
  }
  swift_release();
  sub_22DD56E8C(v8, v10);
LABEL_7:
  result = *(double *)&v17;
  *(_OWORD *)a2 = v17;
  *(_OWORD *)(a2 + 16) = v18;
  *(_OWORD *)(a2 + 32) = v19;
  *(_OWORD *)(a2 + 48) = v20;
  *(_QWORD *)(a2 + 64) = v21;
  *(_WORD *)(a2 + 72) = v22;
  *(_BYTE *)(a2 + 74) = v23;
  return result;
}

void sub_22DD8A4BC(void *a1, char a2, uint64_t a3)
{
  int v4;
  char v5;
  uint64_t v6;
  void *v7;

  v4 = a2 & 1;
  v5 = *(_BYTE *)(a3 + *(int *)(type metadata accessor for EvaluationCard() + 20) + 8);
  v6 = swift_retain();
  sub_22DD83CC8(v6, v5);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7260);
  sub_22DE1EFF8();
  sub_22DD6DF68(a1, v4);
  swift_release();

}

uint64_t sub_22DD8A578(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[4] = a1;
  type metadata accessor for EvaluationCard();
  v1[5] = swift_task_alloc();
  v1[6] = swift_task_alloc();
  sub_22DE1F448();
  v1[7] = sub_22DE1F43C();
  v1[8] = sub_22DE1F418();
  v1[9] = v2;
  return swift_task_switch();
}

uint64_t sub_22DD8A614()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(void);
  uint64_t v15;

  if (qword_255DB53A8 != -1)
    swift_once();
  v1 = v0[4];
  v2 = v0[6];
  v3 = sub_22DE1E410();
  v0[10] = __swift_project_value_buffer(v3, (uint64_t)qword_255DC3D48);
  sub_22DD5C570(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for EvaluationCard);
  v4 = sub_22DE1E3F8();
  v5 = sub_22DE1F4F0();
  v6 = os_log_type_enabled(v4, v5);
  v7 = v0[6];
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 136315138;
    v15 = v9;
    sub_22DE1E050();
    sub_22DD504A8(&qword_255DB72A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v10 = sub_22DE1F8C8();
    v0[3] = sub_22DDA2E30(v10, v11, &v15);
    sub_22DE1F628();
    swift_bridgeObjectRelease();
    sub_22DD5C950(v7, (uint64_t (*)(_QWORD))type metadata accessor for EvaluationCard);
    _os_log_impl(&dword_22DD4B000, v4, v5, "Will mark donation %s as presented", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v9, -1, -1);
    MEMORY[0x22E320870](v8, -1, -1);
  }
  else
  {
    sub_22DD5C950(v0[6], (uint64_t (*)(_QWORD))type metadata accessor for EvaluationCard);
  }

  type metadata accessor for BatchInteraction(0);
  v14 = (uint64_t (*)(void))((int)*MEMORY[0x24BE311F8] + MEMORY[0x24BE311F8]);
  v12 = (_QWORD *)swift_task_alloc();
  v0[11] = v12;
  *v12 = v0;
  v12[1] = sub_22DD8A850;
  return v14();
}

uint64_t sub_22DD8A850()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DD8A8B0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DD8A8F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  void *v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  sub_22DD5C570(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for EvaluationCard);
  v3 = sub_22DE1E3F8();
  v4 = sub_22DE1F4FC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(void **)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 40);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136315138;
    sub_22DE1E050();
    sub_22DD504A8(&qword_255DB72A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v9 = sub_22DE1F8C8();
    *(_QWORD *)(v0 + 16) = sub_22DDA2E30(v9, v10, &v13);
    sub_22DE1F628();
    swift_bridgeObjectRelease();
    sub_22DD5C950(v6, (uint64_t (*)(_QWORD))type metadata accessor for EvaluationCard);
    _os_log_impl(&dword_22DD4B000, v3, v4, "Failed to mark donation %s as presented", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v8, -1, -1);
    MEMORY[0x22E320870](v7, -1, -1);

  }
  else
  {
    v11 = *(_QWORD *)(v0 + 40);

    sub_22DD5C950(v11, (uint64_t (*)(_QWORD))type metadata accessor for EvaluationCard);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DD8AACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void (*v6)(unint64_t, _QWORD, uint64_t);
  uint64_t v7;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7300);
  v0 = sub_22DE1E1F4();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_22DE231A0;
  v5 = v4 + v3;
  v6 = *(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104);
  v6(v5, *MEMORY[0x24BE31030], v0);
  v6(v5 + v2, *MEMORY[0x24BE31028], v0);
  v7 = sub_22DD91388(v4);
  swift_setDeallocating();
  swift_arrayDestroy();
  result = swift_deallocClassInstance();
  qword_255DB7198 = v7;
  return result;
}

uint64_t sub_22DD8ABC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for EvaluationCard() - 8) + 80);
  return sub_22DD89258(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_22DD8ABFC()
{
  return sub_22DE1E77C();
}

uint64_t sub_22DD8AC1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_22DE1E500();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_22DE1E788();
}

uint64_t sub_22DD8AC9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_22DE1E89C();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_22DD8ACCC()
{
  return sub_22DE1E8A8();
}

void sub_22DD8AD04(void *a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;

  v4 = a2 & 1;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for EvaluationCard() - 8) + 80);
  sub_22DD8A4BC(a1, v4, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_22DD8AD60()
{
  uint64_t *v0;

  return sub_22DDE0C88(v0[2], v0[3], v0[4]);
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t (*v11)(id *, uint64_t, uint64_t);
  int v12;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for EvaluationCard();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = type metadata accessor for BatchInteraction(0);

  swift_release();
  v6 = (id *)(v3 + *(int *)(v5 + 28));
  v7 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v10 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v11 = *(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
    v12 = v11(v6, 1, v10);
    if (EnumCaseMultiPayload == 1)
    {
      if (!v12)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            swift_bridgeObjectRelease();
            break;
          case 2u:

            break;
          case 3u:

            swift_bridgeObjectRelease();
            break;
          case 5u:
            v14 = sub_22DE1DEB8();
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v6, v14);
            break;
          default:
            break;
        }
      }
      v6 = (id *)((char *)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48));
      if (!v11(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            goto LABEL_9;
          case 2u:
            goto LABEL_12;
          case 3u:
            goto LABEL_13;
          case 5u:
            goto LABEL_14;
          default:
            break;
        }
      }
    }
    else if (!v12)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 4u:
LABEL_9:
          swift_bridgeObjectRelease();
          break;
        case 2u:
LABEL_12:

          break;
        case 3u:
LABEL_13:

          swift_bridgeObjectRelease();
          break;
        case 5u:
LABEL_14:
          v13 = sub_22DE1DEB8();
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v6, v13);
          break;
        default:
          break;
      }
    }
  }
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD8B030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for EvaluationCard() - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_22DD54F04;
  return sub_22DD8A578(v3);
}

uint64_t sub_22DD8B094@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_22DE1E7E8();
  *a1 = v3;
  return result;
}

uint64_t sub_22DD8B0BC()
{
  return sub_22DE1E7F4();
}

uint64_t sub_22DD8B0E8()
{
  return swift_deallocObject();
}

uint64_t sub_22DD8B0F8(uint64_t a1)
{
  sub_22DD8B16C(*(id *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(void **)(a1 + 88), *(_WORD *)(a1 + 96), HIBYTE(*(_WORD *)(a1 + 96)), *(_BYTE *)(a1 + 98));
  swift_retain();
  swift_retain();
  return a1;
}

id sub_22DD8B16C(id result, uint64_t a2, uint64_t a3, void *a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, char a10, char a11, char a12)
{
  if ((a12 & 1) == 0)
    return sub_22DD8B194((uint64_t)result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11 & 1);
  return result;
}

id sub_22DD8B194(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, char a10, char a11)
{
  char v12;
  void *v13;
  char v14;
  char v15;

  if ((a11 & 1) != 0)
  {
    v12 = a5 & 1;
    swift_retain();
    v13 = a4;
    v14 = v12;
  }
  else
  {
    v15 = a5 & 1;
    swift_retain();
    sub_22DD56E54(a4, v15);
    swift_retain();
    v14 = a10 & 1;
    v13 = a9;
  }
  return sub_22DD56E54(v13, v14);
}

uint64_t sub_22DD8B210(uint64_t a1)
{
  sub_22DD8B284(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(void **)(a1 + 88), *(_WORD *)(a1 + 96), HIBYTE(*(_WORD *)(a1 + 96)), *(_BYTE *)(a1 + 98));
  swift_release();
  swift_release();
  return a1;
}

void sub_22DD8B284(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, char a10, char a11, char a12)
{
  if ((a12 & 1) == 0)
    sub_22DD8B2AC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11 & 1);
}

void sub_22DD8B2AC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, char a10, char a11)
{
  char v12;
  void *v13;
  char v14;
  char v15;

  if ((a11 & 1) != 0)
  {
    v12 = a5 & 1;
    swift_release();
    v13 = a4;
    v14 = v12;
  }
  else
  {
    v15 = a5 & 1;
    swift_release();
    sub_22DD56E8C(a4, v15);
    swift_release();
    v14 = a10 & 1;
    v13 = a9;
  }
  sub_22DD56E8C(v13, v14);
}

unint64_t sub_22DD8B348()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB72E0;
  if (!qword_255DB72E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB72D8);
    v2[0] = sub_22DD508B0(&qword_255DB72E8, &qword_255DB72F0, MEMORY[0x24BDF5428]);
    v2[1] = sub_22DD8B3CC();
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB72E0);
  }
  return result;
}

unint64_t sub_22DD8B3CC()
{
  unint64_t result;

  result = qword_255DB72F8;
  if (!qword_255DB72F8)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE225E4, &type metadata for ActionButton);
    atomic_store(result, (unint64_t *)&qword_255DB72F8);
  }
  return result;
}

uint64_t sub_22DD8B410@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_22DE1E89C();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_22DD8B440()
{
  return sub_22DE1E8A8();
}

uint64_t sub_22DD8B46C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_22DE1E7E8();
  *a1 = v3;
  return result;
}

uint64_t sub_22DD8B494()
{
  return sub_22DE1E7F4();
}

unint64_t sub_22DD8B4BC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB7318;
  if (!qword_255DB7318)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7298);
    v2[0] = sub_22DD8B540();
    v2[1] = sub_22DD504A8(&qword_255DB6F40, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC4E0], MEMORY[0x24BDEC4C8]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB7318);
  }
  return result;
}

unint64_t sub_22DD8B540()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB7320;
  if (!qword_255DB7320)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7258);
    v2[0] = sub_22DD8B5C4();
    v2[1] = sub_22DD504A8(&qword_255DB7370, (uint64_t (*)(uint64_t))type metadata accessor for FBKEvaluationViewModifier, (uint64_t)&unk_22DE25A98);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB7320);
  }
  return result;
}

unint64_t sub_22DD8B5C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB7328;
  if (!qword_255DB7328)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB55C0);
    v2[0] = sub_22DD8B630();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB7328);
  }
  return result;
}

unint64_t sub_22DD8B630()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB7330;
  if (!qword_255DB7330)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB55B8);
    v2[0] = sub_22DD8B6B4();
    v2[1] = sub_22DD508B0(&qword_255DB7360, &qword_255DB7368, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB7330);
  }
  return result;
}

unint64_t sub_22DD8B6B4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB7338;
  if (!qword_255DB7338)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7250);
    v2[0] = sub_22DD8B738();
    v2[1] = sub_22DD508B0(&qword_255DB7350, &qword_255DB7358, MEMORY[0x24BDF1028]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB7338);
  }
  return result;
}

unint64_t sub_22DD8B738()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_255DB7340;
  if (!qword_255DB7340)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7248);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7238);
    v2[3] = type metadata accessor for FBKEvaluationController(255);
    v2[4] = sub_22DD508B0(&qword_255DB7268, &qword_255DB7238, (uint64_t)&unk_22DE23520);
    v2[5] = sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_22DD504A8(&qword_255DB7348, (uint64_t (*)(uint64_t))type metadata accessor for InteractableCard, (uint64_t)&unk_22DE221E8);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB7340);
  }
  return result;
}

uint64_t sub_22DD8B840@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7468);
  MEMORY[0x24BDAC7A8](v54);
  v3 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22DE1E734();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (_OWORD *)((char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_22DE1E2E4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22DE1E974();
  MEMORY[0x24BDAC7A8](v11);
  sub_22DE1E968();
  sub_22DE1E95C();
  sub_22DE1E950();
  sub_22DE1E95C();
  sub_22DE1E98C();
  v12 = sub_22DE1ED7C();
  v51 = v13;
  v52 = v12;
  v15 = v14;
  v53 = v16;
  v49 = sub_22DE1EC5C();
  sub_22DE1E4B8();
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;
  if (qword_255DB5400 != -1)
    swift_once();
  v25 = __swift_project_value_buffer(v7, (uint64_t)qword_255DC3E20);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v26(v10, v25, v7);
  v50 = sub_22DE1EF98();
  v48 = sub_22DE1EC5C();
  if (qword_255DB53D8 != -1)
    swift_once();
  v27 = v15 & 1;
  v28 = __swift_project_value_buffer(v7, (uint64_t)qword_255DC3DA8);
  v26(v10, v28, v7);
  v29 = sub_22DE1EF98();
  v30 = sub_22DE1ECBC();
  KeyPath = swift_getKeyPath();
  v32 = (char *)v6 + *(int *)(v4 + 20);
  v33 = *MEMORY[0x24BDEEB68];
  v34 = sub_22DE1E9C8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v32, v33, v34);
  __asm { FMOV            V0.2D, #12.0 }
  *v6 = _Q0;
  sub_22DD5C570((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_WORD *)&v3[*(int *)(v54 + 36)] = 256;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7470);
  sub_22DD8D614((uint64_t)v3, a1 + *(int *)(v40 + 36));
  v42 = v52;
  v41 = v53;
  v43 = (uint64_t)v6;
  v44 = (uint64_t)v3;
  v45 = v51;
  *(_QWORD *)a1 = v52;
  *(_QWORD *)(a1 + 8) = v45;
  *(_BYTE *)(a1 + 16) = v27;
  *(_QWORD *)(a1 + 24) = v41;
  *(_BYTE *)(a1 + 32) = v49;
  *(_QWORD *)(a1 + 40) = v18;
  *(_QWORD *)(a1 + 48) = v20;
  *(_QWORD *)(a1 + 56) = v22;
  *(_QWORD *)(a1 + 64) = v24;
  *(_BYTE *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = v50;
  *(_BYTE *)(a1 + 88) = v48;
  *(_QWORD *)(a1 + 96) = v29;
  *(_QWORD *)(a1 + 104) = KeyPath;
  *(_QWORD *)(a1 + 112) = v30;
  sub_22DD50088(v42, v45, v27);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22DD5071C(v44, &qword_255DB7468);
  sub_22DD5C950(v43, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  sub_22DD4FC6C(v42, v45, v27);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DD8BC38@<X0>(uint64_t a1@<X8>)
{
  return sub_22DD8B840(a1);
}

uint64_t sub_22DD8BC40@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB73F0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB73F8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v1;
  if (!*(_QWORD *)(v11 + 16))
  {
    v25 = sub_22DE1E20C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v10, 1, 1, v25);
LABEL_7:
    sub_22DD5071C((uint64_t)v10, &qword_255DB73F8);
LABEL_8:
    v27 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, v27, 1, v4);
  }
  v13 = v2[1];
  v12 = v2[2];
  swift_bridgeObjectRetain();
  v14 = sub_22DDFD368(v13, v12);
  if ((v15 & 1) != 0)
  {
    v16 = v14;
    v17 = *(_QWORD *)(v11 + 56);
    v18 = sub_22DE1E20C();
    v34 = v2;
    v19 = v7;
    v20 = v5;
    v21 = v4;
    v22 = a1;
    v23 = *(_QWORD *)(v18 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v10, v17 + *(_QWORD *)(v23 + 72) * v16, v18);
    v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
    a1 = v22;
    v4 = v21;
    v5 = v20;
    v7 = v19;
    v2 = v34;
    v24(v10, 0, 1, v18);
  }
  else
  {
    v18 = sub_22DE1E20C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  }
  swift_bridgeObjectRelease();
  sub_22DE1E20C();
  v26 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v10, 1, v18) == 1)
    goto LABEL_7;
  if ((*(unsigned int (**)(char *, uint64_t))(v26 + 88))(v10, v18) != *MEMORY[0x24BE310C0])
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v18);
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t))(v26 + 96))(v10, v18);
  v29 = *(_QWORD *)v10;
  if (*(_QWORD *)(*(_QWORD *)v10 + 16))
  {
    *(_QWORD *)v7 = sub_22DE1E9F8();
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 1;
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7408);
    sub_22DD8BF30(v2, v29, (uint64_t *)&v7[*(int *)(v30 + 44)]);
    swift_bridgeObjectRelease();
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7400);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v7, 0, 1, v31);
  }
  else
  {
    swift_bridgeObjectRelease();
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7400);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v7, 1, 1, v32);
  }
  sub_22DD5003C((uint64_t)v7, a1, &qword_255DB73F0);
  v27 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, v27, 1, v4);
}

uint64_t sub_22DD8BF30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v46 = a2;
  v48 = a3;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7410);
  v49 = *(_QWORD *)(v51 - 8);
  v4 = MEMORY[0x24BDAC7A8](v51);
  v50 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v47 = (char *)&v44 - v6;
  v7 = sub_22DE1E2E4();
  v45 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1[4])
  {
    v10 = a1[3];
    v11 = a1[4];
  }
  else
  {
    v10 = a1[1];
    v11 = a1[2];
    swift_bridgeObjectRetain();
  }
  v52 = v10;
  v53 = v11;
  sub_22DD50840();
  swift_bridgeObjectRetain();
  v12 = sub_22DE1F64C();
  v14 = v13;
  swift_bridgeObjectRelease();
  v52 = v12;
  v53 = v14;
  v15 = sub_22DE1ED94();
  v17 = v16;
  v19 = v18 & 1;
  v20 = sub_22DE1ED58();
  v22 = v21;
  v24 = v23;
  sub_22DD4FC6C(v15, v17, v19);
  swift_bridgeObjectRelease();
  if (qword_255DB53E0 != -1)
    swift_once();
  v25 = v24 & 1;
  v26 = __swift_project_value_buffer(v7, (uint64_t)qword_255DC3DC0);
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v9, v26, v7);
  v52 = sub_22DE1EF98();
  v27 = sub_22DE1ED4C();
  v29 = v28;
  v31 = v30;
  v33 = v32 & 1;
  sub_22DD4FC6C(v20, v22, v25);
  swift_release();
  swift_bridgeObjectRelease();
  v34 = sub_22DE1EC2C();
  MEMORY[0x24BDAC7A8](v34);
  *(&v44 - 2) = v46;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7418);
  sub_22DD508B0(&qword_255DB7420, &qword_255DB7418, MEMORY[0x24BDF4498]);
  v35 = v47;
  sub_22DE1E4E8();
  v37 = v49;
  v36 = v50;
  v38 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
  v39 = v51;
  v38(v50, v35, v51);
  v40 = v48;
  *v48 = v27;
  v40[1] = v29;
  *((_BYTE *)v40 + 16) = v33;
  v40[3] = v31;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7428);
  v38((char *)v40 + *(int *)(v41 + 48), v36, v39);
  sub_22DD50088(v27, v29, v33);
  v42 = *(void (**)(char *, uint64_t))(v37 + 8);
  swift_bridgeObjectRetain();
  v42(v35, v39);
  v42(v36, v39);
  sub_22DD4FC6C(v27, v29, v33);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DD8C2A8@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = sub_22DE1E8F0();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7430);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7438);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7440);
  sub_22DD508B0(&qword_255DB7448, &qword_255DB7438, MEMORY[0x24BEE12D8]);
  sub_22DD504A8(&qword_255DB7450, (uint64_t (*)(uint64_t))MEMORY[0x24BE310E0], MEMORY[0x24BE310F8]);
  sub_22DD8D564(&qword_255DB7458, &qword_255DB7440, (uint64_t (*)(void))sub_22DD8D5C8);
  return sub_22DE1F0C4();
}

uint64_t sub_22DD8C3D4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_22DE1E20C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v5 + 88))(v7, v4) == *MEMORY[0x24BE310D0])
  {
    result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 96))(v7, v4);
    v9 = *v7;
    v10 = v7[1];
  }
  else
  {
    result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
    v9 = 0;
    v10 = 0;
  }
  *a2 = v9;
  a2[1] = v10;
  return result;
}

uint64_t sub_22DD8C4AC@<X0>(uint64_t a1@<X8>)
{
  return sub_22DD8BC40(a1);
}

uint64_t sub_22DD8C4E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void (*v6)(unint64_t, _QWORD, uint64_t);
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7300);
  v0 = sub_22DE1E1F4();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_22DE231A0;
  v5 = v4 + v3;
  v6 = *(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104);
  v6(v5, *MEMORY[0x24BE31018], v0);
  result = ((uint64_t (*)(unint64_t, _QWORD, uint64_t))v6)(v5 + v2, *MEMORY[0x24BE30FB0], v0);
  off_255DB7378 = (_UNKNOWN *)v4;
  return result;
}

uint64_t sub_22DD8C59C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  void (*v24)(char *, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD v30[9];
  uint64_t v31;
  _OWORD v32[10];
  char v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _OWORD v42[2];
  __int128 v43;
  char v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  _BYTE v53[31];
  _BYTE v54[176];
  _BYTE v55[176];
  _BYTE v56[192];

  v29 = a1;
  v28 = sub_22DE1E20C();
  v1 = *(_QWORD *)(v28 - 8);
  v2 = MEMORY[0x24BDAC7A8](v28);
  v4 = (uint64_t *)((char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v26 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5D80);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22DE1E248();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  type metadata accessor for BatchInteraction(0);
  sub_22DE1E218();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_22DD5071C((uint64_t)v9, &qword_255DB5D80);
    sub_22DD8CE28((uint64_t)v55);
  }
  else
  {
    v17 = v28;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v14, v10) == *MEMORY[0x24BE31148])
    {
      v27 = v16;
      (*(void (**)(char *, uint64_t))(v11 + 96))(v14, v10);
      v18 = v6;
      v19 = v6;
      v20 = v17;
      v21 = v1;
      (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v19, v14, v17);
      (*(void (**)(uint64_t *, char *, uint64_t))(v1 + 16))(v4, v18, v17);
      if ((*(unsigned int (**)(uint64_t *, uint64_t))(v1 + 88))(v4, v17) == *MEMORY[0x24BE310B0])
      {
        (*(void (**)(uint64_t *, uint64_t))(v1 + 96))(v4, v17);
        v22 = *v4;
        v26 = sub_22DE1E9F8();
        sub_22DD8C9C4(v22, (uint64_t)v30);
        v33 = 1;
        *(_OWORD *)((char *)&v32[7] + 7) = v30[7];
        *(_OWORD *)((char *)&v32[6] + 7) = v30[6];
        *(_OWORD *)((char *)&v32[3] + 7) = v30[3];
        *(_OWORD *)((char *)&v32[2] + 7) = v30[2];
        *(_OWORD *)((char *)&v32[8] + 7) = v30[8];
        *(_QWORD *)((char *)&v32[9] + 7) = v31;
        *(_OWORD *)((char *)&v32[4] + 7) = v30[4];
        *(_OWORD *)((char *)&v32[5] + 7) = v30[5];
        *(_OWORD *)((char *)v32 + 7) = v30[0];
        *(_OWORD *)((char *)&v32[1] + 7) = v30[1];
        v40 = v32[6];
        v41 = v32[7];
        v42[0] = v32[8];
        *(_OWORD *)((char *)v42 + 15) = *(_OWORD *)((char *)&v32[8] + 15);
        v36 = v32[2];
        v37 = v32[3];
        v38 = v32[4];
        v39 = v32[5];
        v34 = v32[0];
        v35 = v32[1];
        (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v17);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v27, v10);
        swift_bridgeObjectRelease();
        v51 = v40;
        v52 = v41;
        *(_OWORD *)v53 = v42[0];
        *(_OWORD *)&v53[15] = *(_OWORD *)((char *)v42 + 15);
        v47 = v36;
        v48 = v37;
        v49 = v38;
        v50 = v39;
        v45 = v34;
        v43 = (unint64_t)v26;
        v44 = 1;
        v46 = v35;
        nullsub_1(&v43);
      }
      else
      {
        v24 = *(void (**)(char *, uint64_t))(v1 + 8);
        v24(v18, v20);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v27, v10);
        v24((char *)v4, v20);
        sub_22DD8CE88(&v43);
      }
      sub_22DD5003C((uint64_t)&v43, (uint64_t)v54, &qword_255DB73C0);
      nullsub_1(v54);
    }
    else
    {
      v23 = *(void (**)(char *, uint64_t))(v11 + 8);
      v23(v16, v10);
      v23(v14, v10);
      sub_22DD8CE58((uint64_t)v54);
    }
    sub_22DD5003C((uint64_t)v54, (uint64_t)v55, &qword_255DB73B8);
    nullsub_1(v55);
  }
  sub_22DD5003C((uint64_t)v55, (uint64_t)v56, &qword_255DB73B0);
  return sub_22DD5003C((uint64_t)v56, v29, &qword_255DB73B0);
}

uint64_t sub_22DD8C9C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = sub_22DE1E20C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (_QWORD *)((char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
  v8 = sub_22DDFD368(0x656C797473, 0xE500000000000000);
  if ((v9 & 1) == 0)
    goto LABEL_6;
  (*(void (**)(uint64_t *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(a1 + 56) + *(_QWORD *)(v5 + 72) * v8, v4);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v5 + 88))(v7, v4) != *MEMORY[0x24BE310D0])
  {
    (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
LABEL_6:
    v12 = 0;
    v18 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v19 = 0;
    goto LABEL_7;
  }
  (*(void (**)(uint64_t *, uint64_t))(v5 + 96))(v7, v4);
  v11 = *v7;
  v10 = v7[1];
  v12 = sub_22DE1E9F8();
  sub_22DD8CBEC(v11, v10, (uint64_t)v21);
  swift_bridgeObjectRelease();
  v13 = v21[0];
  v14 = v21[1];
  v15 = v22;
  v16 = v23;
  v17 = v24;
  v18 = 1;
  v19 = v25;
LABEL_7:
  *(_QWORD *)a2 = v12;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = v18;
  *(_QWORD *)(a2 + 24) = v13;
  *(_QWORD *)(a2 + 32) = v14;
  *(_QWORD *)(a2 + 40) = v15;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v17;
  *(_QWORD *)(a2 + 64) = v19;
  *(_QWORD *)(a2 + 72) = a1;
  *(_QWORD *)(a2 + 80) = 0x74706D6F7270;
  *(_QWORD *)(a2 + 88) = 0xE600000000000000;
  *(_OWORD *)(a2 + 96) = xmmword_22DE231B0;
  *(_QWORD *)(a2 + 112) = a1;
  *(_QWORD *)(a2 + 120) = 0x73746365666665;
  *(_QWORD *)(a2 + 136) = 0;
  *(_QWORD *)(a2 + 144) = 0;
  *(_QWORD *)(a2 + 128) = 0xE700000000000000;
  swift_bridgeObjectRetain_n();
  sub_22DD8CEA8(v12, 0, v18, v13, v14, v15, v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_22DD8CEEC(v12, 0, v18, v13, v14, v15, v16);
}

uint64_t sub_22DD8CBEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v32 = a1;
  v33 = a2;
  v4 = sub_22DE1E2E4();
  v31 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DE1E980();
  v7 = sub_22DE1ED7C();
  v9 = v8;
  v11 = v10 & 1;
  v12 = sub_22DE1ED58();
  v14 = v13;
  v16 = v15;
  v30[1] = v17;
  sub_22DD4FC6C(v7, v9, v11);
  swift_bridgeObjectRelease();
  if (qword_255DB53E0 != -1)
    swift_once();
  v18 = v16 & 1;
  v19 = __swift_project_value_buffer(v4, (uint64_t)qword_255DC3DC0);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v6, v19, v4);
  v34 = sub_22DE1EF98();
  v20 = sub_22DE1ED4C();
  v22 = v21;
  v24 = v23;
  v26 = v25 & 1;
  sub_22DD4FC6C(v12, v14, v18);
  swift_release();
  swift_bridgeObjectRelease();
  *(_QWORD *)a3 = v20;
  *(_QWORD *)(a3 + 8) = v22;
  *(_BYTE *)(a3 + 16) = v26;
  v27 = v32;
  v28 = v33;
  *(_QWORD *)(a3 + 24) = v24;
  *(_QWORD *)(a3 + 32) = v27;
  *(_QWORD *)(a3 + 40) = v28;
  sub_22DD50088(v20, v22, v26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22DD4FC6C(v20, v22, v26);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DD8CDFC(uint64_t a1, char a2)
{
  return sub_22DD8CF30(a1, a2 & 1);
}

ValueMetadata *type metadata accessor for GPPreviewController()
{
  return &type metadata for GPPreviewController;
}

uint64_t sub_22DD8CE18()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_22DD8CE28(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 96) = 2;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_QWORD *)(a1 + 168) = 0;
  return result;
}

double sub_22DD8CE58(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 96) = 1;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_QWORD *)(a1 + 168) = 0;
  return result;
}

double sub_22DD8CE88(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_22DD8CEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t result;

  if (a7)
  {
    sub_22DD50088(a4, a5, a6 & 1);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_22DD8CEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t result;

  if (a7)
  {
    sub_22DD4FC6C(a4, a5, a6 & 1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22DD8CF30(uint64_t a1, char a2)
{
  uint64_t v4;
  void (**v5)(char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  _QWORD *v15;
  unint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD *v25;
  void (*v26)(char *, uint64_t);
  void (*v27)(char *, uint64_t);
  uint64_t v28;

  v4 = sub_22DE1E1F4();
  v5 = *(void (***)(char *, uint64_t))(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25 - v9;
  v11 = type metadata accessor for BatchInteraction(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD5C570(a1, (uint64_t)v13, v14);
  if ((a2 & 1) != 0)
  {
    v19 = 0;
  }
  else
  {
    if (qword_255DB52E0 != -1)
      goto LABEL_21;
    while (1)
    {
      v15 = off_255DB7378;
      swift_bridgeObjectRetain();
      sub_22DE1E200();
      v28 = v15[2];
      if (!v28)
      {
        v19 = 0;
        v5[1](v10, v4);
        goto LABEL_18;
      }
      v16 = (*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80);
      v27 = v5[2];
      ((void (*)(char *, char *, uint64_t))v27)(v8, (char *)v15 + v16, v4);
      sub_22DD504A8(qword_255DB5D98, (uint64_t (*)(uint64_t))MEMORY[0x24BE31068], MEMORY[0x24BE31088]);
      swift_bridgeObjectRetain();
      v17 = sub_22DE1F280();
      v18 = v5[1];
      v18(v8, v4);
      if ((v17 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v19 = 1;
        goto LABEL_17;
      }
      if (v28 == 1)
        break;
      v25 = v15;
      v26 = v18;
      v20 = v5[9];
      v5 = (void (**)(char *, uint64_t))((char *)v20 + (_QWORD)v15 + v16);
      v21 = 1;
      while (1)
      {
        ((void (*)(char *, void (**)(char *, uint64_t), uint64_t))v27)(v8, v5, v4);
        v22 = v21 + 1;
        if (__OFADD__(v21, 1))
          break;
        v23 = sub_22DE1F280();
        v26(v8, v4);
        if ((v23 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v19 = 1;
          goto LABEL_16;
        }
        ++v21;
        v5 = (void (**)(char *, uint64_t))((char *)v20 + (_QWORD)v5);
        if (v22 == v28)
        {
          swift_bridgeObjectRelease();
          v19 = 0;
LABEL_16:
          v18 = v26;
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_21:
      swift_once();
    }
    swift_bridgeObjectRelease();
    v19 = 0;
LABEL_17:
    v18(v10, v4);
LABEL_18:
    swift_bridgeObjectRelease();
  }
  sub_22DD5C950((uint64_t)v13, type metadata accessor for BatchInteraction);
  return v19;
}

uint64_t destroy for GPKeyPreviewer()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for GPKeyPreviewer(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for GPKeyPreviewer(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for GPKeyPreviewer(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GPKeyPreviewer(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GPKeyPreviewer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GPKeyPreviewer()
{
  return &type metadata for GPKeyPreviewer;
}

ValueMetadata *type metadata accessor for TextChip()
{
  return &type metadata for TextChip;
}

uint64_t sub_22DD8D414()
{
  return sub_22DD8D564(&qword_255DB73C8, &qword_255DB73B0, (uint64_t (*)(void))sub_22DD8D440);
}

unint64_t sub_22DD8D440()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255DB73D0;
  if (!qword_255DB73D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB73B8);
    v2 = sub_22DD8D4C4(&qword_255DB73D8, &qword_255DB73C0, &qword_255DB73E0, &qword_255DB73E8);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255DB73D0);
  }
  return result;
}

uint64_t sub_22DD8D4C4(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = sub_22DD508B0(a3, a4, MEMORY[0x24BDF4700]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDF5578], v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22DD8D53C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD8D54C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD8D55C@<X0>(uint64_t a1@<X8>)
{
  return sub_22DD8C2A8(a1);
}

uint64_t sub_22DD8D564(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDF5578], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22DD8D5C8()
{
  unint64_t result;

  result = qword_255DB7460;
  if (!qword_255DB7460)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE23218, &type metadata for TextChip);
    atomic_store(result, (unint64_t *)&qword_255DB7460);
  }
  return result;
}

uint64_t sub_22DD8D614(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7468);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_22DD8D660()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255DB7478;
  if (!qword_255DB7478)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7480);
    v2 = sub_22DD8D4C4(&qword_255DB7488, &qword_255DB73F0, &qword_255DB7490, &qword_255DB7400);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255DB7478);
  }
  return result;
}

unint64_t sub_22DD8D6E8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB7498;
  if (!qword_255DB7498)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7470);
    v2[0] = sub_22DD8D76C();
    v2[1] = sub_22DD508B0(qword_255DB74F0, &qword_255DB7468, MEMORY[0x24BDEB950]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB7498);
  }
  return result;
}

unint64_t sub_22DD8D76C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB74A0;
  if (!qword_255DB74A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB74A8);
    v2[0] = sub_22DD8D7F0();
    v2[1] = sub_22DD508B0(&qword_255DB74E0, &qword_255DB74E8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB74A0);
  }
  return result;
}

unint64_t sub_22DD8D7F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB74B0;
  if (!qword_255DB74B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB74B8);
    v2[0] = sub_22DD8D874();
    v2[1] = sub_22DD508B0((unint64_t *)&qword_255DB6C50, &qword_255DB6C58, MEMORY[0x24BDF0710]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB74B0);
  }
  return result;
}

unint64_t sub_22DD8D874()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB74C0;
  if (!qword_255DB74C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB74C8);
    v2[0] = sub_22DD54350();
    v2[1] = sub_22DD508B0(&qword_255DB74D0, &qword_255DB74D8, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB74C0);
  }
  return result;
}

uint64_t *sub_22DD8D8F8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;

  v4 = type metadata accessor for BatchInteraction(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = sub_22DE1E050();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = v6[5];
    v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    *(uint64_t *)((char *)a1 + v6[6]) = *(uint64_t *)((char *)a2 + v6[6]);
    v10 = v6[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for BatchInteraction.ContentPolarity(0);
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    v16 = v9;
    swift_retain();
    if (v15(v12, 1, v13))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v20 = type metadata accessor for BatchInteraction.ContentPreview(0);
      v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48);
      v22 = v21(v12, 1, v20);
      if (EnumCaseMultiPayload == 1)
      {
        if (!v22)
        {
          v25 = (char *)&loc_22DD8DAAC + 4 * byte_22DE2330E[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
        v28 = &v11[v27];
        v29 = &v12[v27];
        if (!v21(v29, 1, v20))
        {
          v31 = (char *)&loc_22DD8DC04 + 4 * byte_22DE23314[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        if (!v22)
        {
          v26 = (char *)&loc_22DD8DAE8 + 4 * byte_22DE23308[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  return a1;
}

void sub_22DD8DDD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t (*v8)(id *, uint64_t, uint64_t);
  int v9;
  uint64_t v10;
  uint64_t v11;

  v2 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = type metadata accessor for BatchInteraction(0);

  swift_release();
  v4 = (id *)(a1 + *(int *)(v3 + 28));
  v5 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v8 = *(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48);
    v9 = v8(v4, 1, v7);
    if (EnumCaseMultiPayload == 1)
    {
      if (!v9)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            swift_bridgeObjectRelease();
            break;
          case 2u:

            break;
          case 3u:

            swift_bridgeObjectRelease();
            break;
          case 5u:
            v11 = sub_22DE1DEB8();
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v4, v11);
            break;
          default:
            break;
        }
      }
      v4 = (id *)((char *)v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48));
      if (!v8(v4, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 4u:
            goto LABEL_13;
          case 2u:
            goto LABEL_11;
          case 3u:
            goto LABEL_12;
          case 5u:
            goto LABEL_14;
          default:
            return;
        }
      }
    }
    else if (!v9)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 4u:
          goto LABEL_13;
        case 2u:
LABEL_11:

          break;
        case 3u:
LABEL_12:

LABEL_13:
          swift_bridgeObjectRelease();
          break;
        case 5u:
LABEL_14:
          v10 = sub_22DE1DEB8();
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v4, v10);
          break;
        default:
          return;
      }
    }
  }
}

uint64_t sub_22DD8E024(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;

  v4 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = (int *)type metadata accessor for BatchInteraction(0);
  v6 = v5[5];
  v7 = *(void **)(a2 + v6);
  *(_QWORD *)(a1 + v6) = v7;
  *(_QWORD *)(a1 + v5[6]) = *(_QWORD *)(a2 + v5[6]);
  v8 = v5[7];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v7;
  swift_retain();
  if (v13(v10, 1, v11))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v17 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48);
    v19 = v18(v10, 1, v17);
    if (EnumCaseMultiPayload == 1)
    {
      if (!v19)
      {
        v22 = (char *)&loc_22DD8E1A8 + 4 * byte_22DE23332[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v25 = &v9[v24];
      v26 = &v10[v24];
      if (!v18(v26, 1, v17))
      {
        v28 = (char *)&loc_22DD8E300 + 4 * byte_22DE23338[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      if (!v19)
      {
        v23 = (char *)&loc_22DD8E1E4 + 4 * byte_22DE2332C[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_22DD8E4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;

  v4 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = (int *)type metadata accessor for BatchInteraction(0);
  v6 = v5[5];
  v7 = *(void **)(a2 + v6);
  v8 = *(void **)(a1 + v6);
  *(_QWORD *)(a1 + v6) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + v5[6]) = *(_QWORD *)(a2 + v5[6]);
  swift_retain();
  swift_release();
  v10 = v5[7];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v19 = type metadata accessor for BatchInteraction.ContentPreview(0);
      v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48);
      v21 = v20(v12, 1, v19);
      if (EnumCaseMultiPayload == 1)
      {
        if (!v21)
        {
          v30 = (char *)&loc_22DD8E700 + 4 * byte_22DE23344[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        v35 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
        v36 = &v11[v35];
        v37 = &v12[v35];
        if (!v20(v37, 1, v19))
        {
          v39 = (char *)&loc_22DD8E920 + 4 * byte_22DE2334A[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        if (!v21)
        {
          v32 = (char *)&loc_22DD8E76C + 4 * byte_22DE2333E[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      return a1;
    }
LABEL_8:
    v23 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  if (v17)
  {
    sub_22DD8EDE4((uint64_t)v11);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_22DD8EDE4((uint64_t)v11);
    v24 = swift_getEnumCaseMultiPayload();
    v25 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48);
    v27 = v26(v12, 1, v25);
    if (v24 == 1)
    {
      if (!v27)
      {
        v33 = (char *)&loc_22DD8E7B0 + 4 * byte_22DE2335C[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v42 = &v11[v41];
      v43 = &v12[v41];
      if (!v26(v43, 1, v25))
      {
        v45 = (char *)&loc_22DD8EC20 + 4 * byte_22DE23362[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (!v27)
      {
        v34 = (char *)&loc_22DD8E7F4 + 4 * word_22DE23350[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_22DD8EDE4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22DD8EE20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v4 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = (int *)type metadata accessor for BatchInteraction(0);
  *(_QWORD *)(a1 + v5[5]) = *(_QWORD *)(a2 + v5[5]);
  *(_QWORD *)(a1 + v5[6]) = *(_QWORD *)(a2 + v5[6]);
  v6 = v5[7];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v13 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
    v16 = v15(v8, 1, v13);
    if (EnumCaseMultiPayload == 1)
    {
      if (v16)
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v19 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v7, v8, v19);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v7, v8, *(_QWORD *)(v14 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
      }
      v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v22 = &v7[v21];
      v23 = &v8[v21];
      if (v15(v23, 1, v13))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v25 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v22, v23, *(_QWORD *)(v14 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v22, 0, 1, v13);
      }
    }
    else if (v16)
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        v20 = sub_22DE1DEB8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v7, v8, v20);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v7, v8, *(_QWORD *)(v14 + 64));
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_22DD8F164(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  v4 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = (int *)type metadata accessor for BatchInteraction(0);
  v6 = v5[5];
  v7 = *(void **)(a1 + v6);
  *(_QWORD *)(a1 + v6) = *(_QWORD *)(a2 + v6);

  *(_QWORD *)(a1 + v5[6]) = *(_QWORD *)(a2 + v5[6]);
  swift_release();
  v8 = v5[7];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v17 = type metadata accessor for BatchInteraction.ContentPreview(0);
      v18 = *(_QWORD *)(v17 - 8);
      v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
      v20 = v19(v10, 1, v17);
      if (EnumCaseMultiPayload == 1)
      {
        if (v20)
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 5)
          {
            v30 = sub_22DE1DEB8();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v9, v10, v30);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v9, v10, *(_QWORD *)(v18 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v9, 0, 1, v17);
        }
        v33 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
        v34 = &v9[v33];
        v35 = &v10[v33];
        if (v19(v35, 1, v17))
        {
          v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 5)
          {
            v37 = sub_22DE1DEB8();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v34, v35, v37);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v34, v35, *(_QWORD *)(v18 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v34, 0, 1, v17);
        }
      }
      else if (v20)
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v32 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v9, v10, v32);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v9, v10, *(_QWORD *)(v18 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v9, 0, 1, v17);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      return a1;
    }
LABEL_8:
    v22 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    return a1;
  }
  if (v15)
  {
    sub_22DD8EDE4((uint64_t)v9);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_22DD8EDE4((uint64_t)v9);
    v23 = swift_getEnumCaseMultiPayload();
    v24 = type metadata accessor for BatchInteraction.ContentPreview(0);
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
    v27 = v26(v10, 1, v24);
    if (v23 == 1)
    {
      if (v27)
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v39 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v9, v10, v39);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v9, v10, *(_QWORD *)(v25 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v9, 0, 1, v24);
      }
      v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB5950) + 48);
      v42 = &v9[v41];
      v43 = &v10[v41];
      if (v26(v43, 1, v24))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          v45 = sub_22DE1DEB8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v42, v43, v45);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v42, v43, *(_QWORD *)(v25 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v42, 0, 1, v24);
      }
    }
    else if (v27)
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        v40 = sub_22DE1DEB8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v9, v10, v40);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(_QWORD *)(v25 + 64));
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v9, 0, 1, v24);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22DD8F744()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD8F750(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BatchInteraction(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_22DD8F78C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD8F798(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BatchInteraction(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for AppMetaView()
{
  uint64_t result;

  result = qword_255DB7550;
  if (!qword_255DB7550)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22DD8F814()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for BatchInteraction(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22DD8F87C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD8F88C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  _OWORD v37[10];
  _OWORD v38[9];
  char v39;
  _BYTE v40[152];
  char v41;
  _OWORD v42[9];
  _OWORD v43[3];

  v3 = sub_22DE1E974();
  MEMORY[0x24BDAC7A8](v3);
  v29 = sub_22DE1EB78();
  v4 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7588);
  v32 = *(_QWORD *)(v7 - 8);
  v33 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v31 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7590);
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v30 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD **)(v1 + *(int *)(type metadata accessor for BatchInteraction(0) + 24));
  if (!v11)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(a1, 1, 1, v35);
  swift_getKeyPath();
  *(_QWORD *)&v42[0] = v11;
  sub_22DD504A8(&qword_255DB7598, (uint64_t (*)(uint64_t))type metadata accessor for AppInfoController, (uint64_t)&unk_22DE26BF8);
  sub_22DE1E068();
  swift_release();
  v12 = v11[3];
  if (!v12)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(a1, 1, 1, v35);
  v27 = v4;
  v28 = a1;
  v13 = (void *)v11[2];
  v14 = (void *)v11[4];
  swift_bridgeObjectRetain();
  v15 = v14;
  v16 = sub_22DE1E8F0();
  if (qword_255DB5388 != -1)
    swift_once();
  v17 = *(double *)&qword_255DC3D10 * 0.25;
  v26[1] = v13;
  sub_22DD8FD48((uint64_t)v13, v12, v15, (uint64_t)v38);
  *(_OWORD *)&v40[119] = v38[7];
  *(_OWORD *)&v40[103] = v38[6];
  *(_OWORD *)&v40[55] = v38[3];
  *(_OWORD *)&v40[39] = v38[2];
  *(_OWORD *)&v40[135] = v38[8];
  *(_OWORD *)&v40[71] = v38[4];
  *(_OWORD *)&v40[87] = v38[5];
  *(_OWORD *)&v40[7] = v38[0];
  v41 = 0;
  v40[151] = v39;
  *(_OWORD *)&v40[23] = v38[1];
  *(_QWORD *)&v36 = v16;
  *((double *)&v36 + 1) = v17;
  LOBYTE(v37[0]) = 0;
  *(_OWORD *)((char *)&v37[6] + 1) = *(_OWORD *)&v40[96];
  *(_OWORD *)((char *)&v37[7] + 1) = *(_OWORD *)&v40[112];
  *(_OWORD *)((char *)&v37[8] + 1) = *(_OWORD *)&v40[128];
  *(_QWORD *)((char *)&v37[9] + 1) = *(_QWORD *)&v40[144];
  *(_OWORD *)((char *)&v37[2] + 1) = *(_OWORD *)&v40[32];
  *(_OWORD *)((char *)&v37[3] + 1) = *(_OWORD *)&v40[48];
  *(_OWORD *)((char *)&v37[4] + 1) = *(_OWORD *)&v40[64];
  *(_OWORD *)((char *)&v37[5] + 1) = *(_OWORD *)&v40[80];
  *(_OWORD *)((char *)v37 + 1) = *(_OWORD *)v40;
  *(_OWORD *)((char *)&v37[1] + 1) = *(_OWORD *)&v40[16];
  BYTE9(v37[9]) = 0;
  sub_22DE1EB60();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB75A0);
  v19 = sub_22DD900F0();
  v26[0] = v15;
  v20 = v19;
  v21 = v31;
  sub_22DE1EE78();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v29);
  v42[7] = v37[6];
  v42[8] = v37[7];
  v43[0] = v37[8];
  *(_OWORD *)((char *)v43 + 10) = *(_OWORD *)((char *)&v37[8] + 10);
  v42[4] = v37[3];
  v42[5] = v37[4];
  v42[6] = v37[5];
  v42[0] = v36;
  v42[1] = v37[0];
  v42[2] = v37[1];
  v42[3] = v37[2];
  sub_22DD901EC((uint64_t)v42);
  sub_22DE1E968();
  sub_22DE1E95C();
  sub_22DE1E950();
  sub_22DE1E95C();
  sub_22DE1E98C();
  *(_QWORD *)&v36 = v18;
  *((_QWORD *)&v36 + 1) = v20;
  swift_getOpaqueTypeConformance2();
  v22 = (uint64_t)v30;
  v23 = v33;
  sub_22DE1EE48();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v23);
  v24 = v28;
  sub_22DD90264(v22, v28);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v24, 0, 1, v35);
}

uint64_t sub_22DD8FD48@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  _BYTE v55[7];
  char v56;
  _BYTE v57[7];
  char v58;
  char v59;

  v44 = a1;
  v7 = sub_22DE1E2E4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22DE1EFC8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a3;
  sub_22DE1EFB0();
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BDF3FD0], v11);
  v45 = sub_22DE1EFD4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (qword_255DB5388 != -1)
    swift_once();
  sub_22DE1F130();
  sub_22DE1E5E4();
  v43 = v48;
  v42 = v49;
  v41 = v50;
  v40 = v51;
  v38 = v53;
  v39 = v52;
  if (qword_255DB53F8 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v7, (uint64_t)qword_255DC3E08);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v16, v7);
  v37 = sub_22DE1EF98();
  v46 = v44;
  v47 = a2;
  sub_22DD50840();
  swift_bridgeObjectRetain();
  v17 = sub_22DE1ED94();
  v19 = v18;
  v21 = v20 & 1;
  sub_22DE1ED1C();
  v22 = sub_22DE1ED64();
  v24 = v23;
  v26 = v25;
  v28 = v27;
  swift_release();
  sub_22DD4FC6C(v17, v19, v21);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v30 = v42;
  v59 = v42;
  v31 = v40;
  v58 = v40;
  v56 = v26 & 1;
  v54 = 1;
  *(_DWORD *)(a4 + 17) = v46;
  *(_DWORD *)(a4 + 20) = *(_DWORD *)((char *)&v46 + 3);
  *(_DWORD *)(a4 + 33) = *(_DWORD *)v57;
  *(_DWORD *)(a4 + 36) = *(_DWORD *)&v57[3];
  *(_DWORD *)(a4 + 105) = *(_DWORD *)v55;
  *(_DWORD *)(a4 + 108) = *(_DWORD *)&v55[3];
  v32 = v54;
  v33 = v43;
  *(_QWORD *)a4 = v45;
  *(_QWORD *)(a4 + 8) = v33;
  *(_BYTE *)(a4 + 16) = v30;
  *(_QWORD *)(a4 + 24) = v41;
  *(_BYTE *)(a4 + 32) = v31;
  v34 = v38;
  *(_QWORD *)(a4 + 40) = v39;
  *(_QWORD *)(a4 + 48) = v34;
  *(_QWORD *)(a4 + 56) = v37;
  *(_QWORD *)(a4 + 64) = 0x4000000000000000;
  *(_QWORD *)(a4 + 72) = 0;
  *(_QWORD *)(a4 + 80) = 0;
  *(_QWORD *)(a4 + 88) = v22;
  *(_QWORD *)(a4 + 96) = v24;
  *(_BYTE *)(a4 + 104) = v26 & 1;
  *(_QWORD *)(a4 + 112) = v28;
  *(_QWORD *)(a4 + 120) = KeyPath;
  *(_QWORD *)(a4 + 128) = 0x3FE0000000000000;
  *(_QWORD *)(a4 + 136) = 0;
  *(_BYTE *)(a4 + 144) = v32;
  swift_retain();
  swift_retain();
  sub_22DD50088(v22, v24, v26 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_22DD4FC6C(v22, v24, v26 & 1);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

unint64_t sub_22DD900F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB75A8;
  if (!qword_255DB75A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB75A0);
    v2[0] = sub_22DD9015C();
    v2[1] = sub_22DD901A8();
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB75A8);
  }
  return result;
}

unint64_t sub_22DD9015C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DB75B0;
  if (!qword_255DB75B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB75B8);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDF4498], v1);
    atomic_store(result, (unint64_t *)&qword_255DB75B0);
  }
  return result;
}

unint64_t sub_22DD901A8()
{
  unint64_t result;

  result = qword_255DB75C0;
  if (!qword_255DB75C0)
  {
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDF08F0], MEMORY[0x24BDF0900]);
    atomic_store(result, (unint64_t *)&qword_255DB75C0);
  }
  return result;
}

uint64_t sub_22DD901EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 112);
  v3 = *(_QWORD *)(a1 + 120);
  v4 = *(_BYTE *)(a1 + 128);
  swift_release();
  swift_release();
  sub_22DD4FC6C(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22DD90264(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_22DD902B8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_255DB75C8;
  if (!qword_255DB75C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB75D0);
    v2 = sub_22DD9031C();
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255DB75C8);
  }
  return result;
}

unint64_t sub_22DD9031C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_255DB75D8;
  if (!qword_255DB75D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7590);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB75A0);
    v2[3] = sub_22DD900F0();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_22DD504A8((unint64_t *)&qword_255DB58E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB75D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScoreDetail()
{
  return &type metadata for ScoreDetail;
}

uint64_t sub_22DD903D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD903E8(uint64_t a1, char a2)
{
  char v2;
  uint64_t v3;
  uint64_t v5;

  v2 = a2 & 1;
  v3 = swift_retain();
  sub_22DD83F30(v3, v2);
  swift_release();
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E068();
  swift_release();
  swift_release();
  v5 = sub_22DE1F8C8();
  sub_22DE1F328();
  sub_22DE1F328();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_22DD90504(uint64_t a1, char a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v2 = a2 & 1;
  v3 = swift_retain();
  sub_22DD83F30(v3, v2);
  swift_release();
  v4 = sub_22DD6F458();
  swift_release();
  v5 = swift_retain();
  v6 = sub_22DD83F30(v5, v2);
  swift_release();
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E068();
  swift_release();
  v7 = *(_QWORD *)(v6 + 24);
  result = swift_release();
  if (__OFSUB__(v4, v7))
  {
    __break(1u);
  }
  else
  {
    sub_22DE1F730();
    v9 = sub_22DE1F8C8();
    swift_bridgeObjectRelease();
    sub_22DE1F328();
    sub_22DE1F328();
    swift_bridgeObjectRelease();
    sub_22DE1F328();
    return v9;
  }
  return result;
}

uint64_t sub_22DD9069C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (**v34)();
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a3;
  v4 = a2 & 1;
  v5 = sub_22DE1E2E4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB75E0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v36 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB75E8);
  v37 = *(_QWORD *)(v15 - 8);
  v38 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v36 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_22DD903E8(a1, v4);
  v19 = v18;
  if (qword_255DB53D0 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v5, (uint64_t)qword_255DC3D90);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v20, v5);
  v21 = sub_22DE1EF98();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a1;
  *(_BYTE *)(v22 + 24) = v4 != 0;
  v23 = (uint64_t *)&v12[*(int *)(v9 + 40)];
  *v23 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
  swift_storeEnumTagMultiPayload();
  *((_QWORD *)v12 + 6) = sub_22DD9135C;
  *((_QWORD *)v12 + 7) = v22;
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)v12 = _Q0;
  *((_QWORD *)v12 + 2) = v17;
  *((_QWORD *)v12 + 3) = v19;
  *((_QWORD *)v12 + 4) = v21;
  v12[40] = 1;
  sub_22DD5003C((uint64_t)v12, (uint64_t)v14, &qword_255DB75E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB75F0);
  sub_22DE1E9BC();
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_22DE20F30;
  swift_retain();
  sub_22DE1E9B0();
  sub_22DD915F0(v29);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_22DD91858();
  v30 = v36;
  sub_22DE1EE6C();
  swift_bridgeObjectRelease();
  sub_22DD5071C((uint64_t)v14, &qword_255DB75E0);
  v32 = v37;
  v31 = v38;
  v33 = v39;
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 16))(v39, v30, v38);
  v34 = (uint64_t (**)())(v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7600) + 36));
  *v34 = sub_22DD912A0;
  v34[1] = 0;
  v34[2] = 0;
  v34[3] = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v30, v31);
}

uint64_t sub_22DD909E4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v5 = a2 & 1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7620);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v18 - v10;
  *(_QWORD *)a3 = sub_22DE1E9EC();
  *(_QWORD *)(a3 + 8) = 0x4040000000000000;
  *(_BYTE *)(a3 + 16) = 0;
  v12 = a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7628) + 44);
  v13 = swift_retain();
  v14 = sub_22DD83F30(v13, v5);
  swift_release();
  *(_QWORD *)v11 = sub_22DE1E9EC();
  *((_QWORD *)v11 + 1) = 0x4010000000000000;
  v11[16] = 0;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7630);
  sub_22DD90B60(a1, v5, (uint64_t)&v11[*(int *)(v15 + 44)]);
  sub_22DD506A0((uint64_t)v11, (uint64_t)v9, &qword_255DB7620);
  *(_QWORD *)v12 = v14;
  *(_OWORD *)(v12 + 8) = xmmword_22DE23430;
  *(_QWORD *)(v12 + 24) = 0x4062C00000000000;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7638);
  sub_22DD506A0((uint64_t)v9, v12 + *(int *)(v16 + 48), &qword_255DB7620);
  swift_retain();
  sub_22DD5071C((uint64_t)v11, &qword_255DB7620);
  sub_22DD5071C((uint64_t)v9, &qword_255DB7620);
  return swift_release();
}

uint64_t sub_22DD90B60@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;

  v5 = a2 & 1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7640);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7648);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  v38 = sub_22DE1E8F0();
  sub_22DD90E70(a1, v5, &v40);
  v16 = v41;
  v31 = v40;
  v30 = v42;
  v29 = v43;
  v37 = v44;
  v36 = v45;
  v33 = v47;
  v34 = v46;
  v32 = v48;
  v35 = v49;
  v17 = swift_retain();
  sub_22DD83F30(v17, v5);
  swift_release();
  sub_22DD6EBE4();
  v19 = v18;
  swift_release();
  v40 = v19;
  LOBYTE(v41) = 0;
  v39 = 0x3FF0000000000000;
  sub_22DD918A4();
  sub_22DE1E5A8();
  v20 = sub_22DE1EF38();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v9, v6);
  *(_QWORD *)&v13[*(int *)(v10 + 36)] = v20;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v28 = v15;
  sub_22DD5003C((uint64_t)v13, (uint64_t)v15, &qword_255DB7648);
  sub_22DD506A0((uint64_t)v15, (uint64_t)v13, &qword_255DB7648);
  *(_QWORD *)a3 = v38;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  v21 = v31;
  *(_QWORD *)(a3 + 24) = v31;
  *(_QWORD *)(a3 + 32) = v16;
  LOBYTE(v20) = v30;
  *(_BYTE *)(a3 + 40) = v30;
  v22 = v37;
  *(_QWORD *)(a3 + 48) = v29;
  *(_QWORD *)(a3 + 56) = v22;
  *(_BYTE *)(a3 + 64) = v36;
  v24 = v33;
  v23 = v34;
  *(_QWORD *)(a3 + 72) = v34;
  *(_QWORD *)(a3 + 80) = v24;
  LOBYTE(v9) = v32;
  *(_BYTE *)(a3 + 88) = v32;
  *(_QWORD *)(a3 + 96) = v35;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7658);
  sub_22DD506A0((uint64_t)v13, a3 + *(int *)(v25 + 48), &qword_255DB7648);
  sub_22DD50088(v21, v16, v20);
  swift_bridgeObjectRetain();
  sub_22DD50088(v23, v24, (char)v9);
  swift_bridgeObjectRetain();
  sub_22DD5071C((uint64_t)v28, &qword_255DB7648);
  sub_22DD5071C((uint64_t)v13, &qword_255DB7648);
  sub_22DD4FC6C(v21, v16, v20);
  swift_bridgeObjectRelease();
  sub_22DD4FC6C(v23, v24, (char)v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DD90E70@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char KeyPath;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;

  v5 = a2 & 1;
  v6 = sub_22DE1E2E4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22DE1E974();
  MEMORY[0x24BDAC7A8](v10);
  sub_22DE1E968();
  sub_22DE1E95C();
  v11 = swift_retain();
  v12 = sub_22DD83F30(v11, v5);
  swift_release();
  KeyPath = swift_getKeyPath();
  v48 = v12;
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E068();
  swift_release();
  v14 = *(_QWORD *)(v12 + 24);
  swift_release();
  v15 = floor(sqrt((double)v14 * 0.5));
  if ((~*(_QWORD *)&v15 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v15 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v15 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_7;
  }
  v46 = v7;
  v47 = a3;
  v16 = (uint64_t)v15;
  if ((uint64_t)v15 >= 99)
    v16 = 99;
  v48 = v16;
  sub_22DE1E92C();
  sub_22DE1E95C();
  sub_22DE1E98C();
  v12 = sub_22DE1ED7C();
  v17 = v5;
  v19 = v18;
  v21 = v20 & 1;
  v48 = sub_22DE1EF38();
  v22 = sub_22DE1ED4C();
  v43 = v23;
  v44 = v22;
  KeyPath = v24;
  v45 = v25;
  sub_22DD4FC6C(v12, v19, v21);
  swift_release();
  swift_bridgeObjectRelease();
  v48 = sub_22DD90504(a1, v17);
  v49 = v26;
  sub_22DD50840();
  a1 = sub_22DE1ED94();
  v5 = v27;
  LOBYTE(v12) = v28;
  if (qword_255DB53F0 != -1)
    goto LABEL_11;
LABEL_7:
  v29 = KeyPath & 1;
  v30 = __swift_project_value_buffer(v6, (uint64_t)qword_255DC3DF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v9, v30, v6);
  v48 = sub_22DE1EF98();
  v31 = sub_22DE1ED4C();
  v33 = v32;
  v35 = v34;
  v37 = v36 & 1;
  sub_22DD4FC6C(a1, v5, v12 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  LOBYTE(v48) = v29;
  v38 = v47;
  v40 = v43;
  v39 = v44;
  *v47 = v44;
  v38[1] = v40;
  *((_BYTE *)v38 + 16) = v29;
  v38[3] = v45;
  v38[4] = 0;
  *((_BYTE *)v38 + 40) = 1;
  v38[6] = v31;
  v38[7] = v33;
  *((_BYTE *)v38 + 64) = v37;
  v38[9] = v35;
  sub_22DD50088(v39, v40, v29);
  swift_bridgeObjectRetain();
  sub_22DD50088(v31, v33, v37);
  swift_bridgeObjectRetain();
  sub_22DD4FC6C(v31, v33, v37);
  swift_bridgeObjectRelease();
  sub_22DD4FC6C(v39, v40, v48);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DD912A0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v4;

  v0 = type metadata accessor for AnalyticsEvent();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  sub_22DE01A1C();
  return sub_22DD6F9A8((uint64_t)v2);
}

uint64_t sub_22DD9130C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DD9069C(*(_QWORD *)v1, *(_BYTE *)(v1 + 8), a1);
}

uint64_t sub_22DD91318()
{
  return sub_22DE1E7C4();
}

uint64_t sub_22DD91338()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD9135C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DD909E4(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), a1);
}

uint64_t sub_22DD91368()
{
  return sub_22DE1E7C4();
}

uint64_t sub_22DD91388(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_22DE1E1F4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7660);
    v10 = sub_22DE1F718();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_22DD504A8(&qword_255DB5D90, (uint64_t (*)(uint64_t))MEMORY[0x24BE31068], MEMORY[0x24BE31080]);
      v14 = sub_22DE1F25C();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_22DD504A8(qword_255DB5D98, (uint64_t (*)(uint64_t))MEMORY[0x24BE31068], MEMORY[0x24BE31088]);
          v20 = sub_22DE1F280();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t sub_22DD915F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_22DE1E9BC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7608);
    v10 = sub_22DE1F718();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_22DD504A8(&qword_255DB7610, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEB10], MEMORY[0x24BDEEB20]);
      v14 = sub_22DE1F25C();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_22DD504A8(&qword_255DB7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEB10], MEMORY[0x24BDEEB28]);
          v20 = sub_22DE1F280();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

unint64_t sub_22DD91858()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DB75F8;
  if (!qword_255DB75F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB75E0);
    result = MEMORY[0x22E3207B0](&unk_22DE25F78, v1);
    atomic_store(result, (unint64_t *)&qword_255DB75F8);
  }
  return result;
}

unint64_t sub_22DD918A4()
{
  unint64_t result;

  result = qword_255DB7650;
  if (!qword_255DB7650)
  {
    result = MEMORY[0x22E3207B0](MEMORY[0x24BEE13D0], MEMORY[0x24BEE13C8]);
    atomic_store(result, (unint64_t *)&qword_255DB7650);
  }
  return result;
}

unint64_t sub_22DD918F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_255DB7668;
  if (!qword_255DB7668)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7600);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB75E0);
    v2[3] = sub_22DD91858();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB7668);
  }
  return result;
}

uint64_t sub_22DD91988()
{
  return swift_allocateGenericValueMetadata();
}

void sub_22DD91990()
{
  unint64_t v0;

  sub_22DD91F9C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_22DD91A18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = a2[3];
    v3[2] = a2[2];
    v3[3] = v5;
    v6 = *(int *)(a3 + 44);
    v7 = (uint64_t *)((char *)v3 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7190);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_22DE1E500();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_22DD91AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7190);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_22DE1E500();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_22DD91B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(int *)(a3 + 44);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7190);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_22DE1E500();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_22DD91C24(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 44);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_22DD5071C((uint64_t)a1 + v7, &qword_255DB7190);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7190);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_22DE1E500();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_22DD91D08(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 44);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7190);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_22DE1E500();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_22DD91DB0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 44);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_22DD5071C((uint64_t)a1 + v7, &qword_255DB7190);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7190);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_22DE1E500();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22DD91E80()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD91E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB7670);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v8);
  }
}

uint64_t sub_22DD91F0C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD91F18(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB7670);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for Card(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Card);
}

void sub_22DD91F9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255DB76F8)
  {
    sub_22DE1E500();
    v0 = sub_22DE1E548();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255DB76F8);
  }
}

uint64_t sub_22DD91FF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD92024@<X0>(uint64_t a1@<X8>)
{
  return sub_22DD84110(a1);
}

uint64_t sub_22DD92048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  _QWORD v118[2];
  _QWORD v119[2];
  _QWORD v120[2];
  _QWORD v121[2];
  _QWORD v122[2];
  _QWORD v123[2];
  __int128 v124;
  __int128 v125;
  uint64_t v126;

  v110 = a2;
  v109 = sub_22DE1E500();
  v108 = *(_QWORD *)(v109 - 8);
  v3 = MEMORY[0x24BDAC7A8](v109);
  v107 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v106 = (uint64_t)&v85 - v5;
  v92 = sub_22DE1E734();
  MEMORY[0x24BDAC7A8](v92);
  v96 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7700);
  MEMORY[0x24BDAC7A8](v104);
  v103 = (uint64_t)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_22DE1E2E4();
  v87 = *(_QWORD *)(v113 - 8);
  MEMORY[0x24BDAC7A8](v113);
  v9 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v105 = a1;
  v12 = sub_22DE1F034();
  v86 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v85 - v13;
  v15 = sub_22DE1E6E0();
  v88 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v85 - v16;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB74D8);
  v18 = sub_22DE1E6E0();
  v89 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v111 = (char *)&v85 - v19;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6C58);
  v20 = sub_22DE1E6E0();
  v91 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v90 = (char *)&v85 - v21;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7468);
  v22 = sub_22DE1E6E0();
  v94 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v93 = (char *)&v85 - v23;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7708);
  v95 = v22;
  v24 = sub_22DE1E6E0();
  v98 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v112 = (char *)&v85 - v25;
  v100 = v26;
  v102 = sub_22DE1E6E0();
  v101 = *(_QWORD *)(v102 - 8);
  v27 = MEMORY[0x24BDAC7A8](v102);
  v97 = (char *)&v85 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v99 = (uint64_t)&v85 - v29;
  v115 = v10;
  v116 = v11;
  v117 = v114;
  sub_22DE1E8F0();
  sub_22DE1F028();
  sub_22DE1EC5C();
  v30 = MEMORY[0x22E3207B0](MEMORY[0x24BDF4498], v12);
  sub_22DE1EF08();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v14, v12);
  if (qword_255DB53D0 != -1)
    swift_once();
  v31 = v113;
  v32 = __swift_project_value_buffer(v113, (uint64_t)qword_255DC3D90);
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
  v33(v9, v32, v31);
  *(_QWORD *)&v124 = sub_22DE1EF98();
  sub_22DE1EC5C();
  v123[0] = v30;
  v123[1] = MEMORY[0x24BDECC60];
  v34 = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v15, v123);
  sub_22DE1EDB8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v17, v15);
  v35 = v9;
  if (qword_255DB53D8 != -1)
    swift_once();
  v36 = v113;
  v37 = __swift_project_value_buffer(v113, (uint64_t)qword_255DC3DA8);
  v33(v9, v37, v36);
  *(_QWORD *)&v124 = sub_22DE1EF98();
  v38 = sub_22DD508B0(&qword_255DB74D0, &qword_255DB74D8, MEMORY[0x24BDF06D0]);
  v122[0] = v34;
  v122[1] = v38;
  v39 = MEMORY[0x24BDED308];
  v40 = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v18, v122);
  v41 = v90;
  v42 = v111;
  sub_22DE1EE24();
  swift_release();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v42, v18);
  v43 = v114;
  v44 = sub_22DD508B0((unint64_t *)&qword_255DB6C50, &qword_255DB6C58, MEMORY[0x24BDF0710]);
  v121[0] = v40;
  v121[1] = v44;
  v45 = MEMORY[0x22E3207B0](v39, v20, v121);
  v46 = v93;
  sub_22DE1EDF4();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v41, v20);
  v47 = *v43;
  v48 = v96;
  v49 = &v96[*(int *)(v92 + 20)];
  v50 = *MEMORY[0x24BDEEB68];
  v51 = sub_22DE1E9C8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 104))(v49, v50, v51);
  *v48 = v47;
  v48[1] = v47;
  if (qword_255DB53F8 != -1)
    swift_once();
  v52 = v113;
  v53 = __swift_project_value_buffer(v113, (uint64_t)qword_255DC3E08);
  v33(v35, v53, v52);
  v54 = sub_22DE1EF98();
  sub_22DE1E56C();
  v55 = v103;
  sub_22DD92C90((uint64_t)v48, v103);
  v56 = *(double *)&v124 * 0.5;
  v57 = v55 + *(int *)(v104 + 68);
  sub_22DD92C90((uint64_t)v48, v57);
  *(double *)(v57 + *(int *)(sub_22DE1E728() + 20)) = v56;
  v58 = v57 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7710) + 36);
  v59 = v125;
  *(_OWORD *)v58 = v124;
  *(_OWORD *)(v58 + 16) = v59;
  *(_QWORD *)(v58 + 32) = v126;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7718);
  *(_QWORD *)(v57 + *(int *)(v60 + 52)) = v54;
  *(_WORD *)(v57 + *(int *)(v60 + 56)) = 256;
  v61 = sub_22DE1F130();
  v111 = (char *)v33;
  v62 = (uint64_t)v48;
  v64 = v63;
  v65 = (uint64_t *)(v57 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7720) + 36));
  *v65 = v61;
  v65[1] = v64;
  sub_22DD92CD4(v62);
  sub_22DE1F130();
  v66 = sub_22DD508B0(qword_255DB74F0, &qword_255DB7468, MEMORY[0x24BDEB950]);
  v120[0] = v45;
  v120[1] = v66;
  v67 = v95;
  v68 = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v95, v120);
  sub_22DD508B0(&qword_255DB7728, &qword_255DB7700, MEMORY[0x24BDEFA70]);
  sub_22DE1EEF0();
  sub_22DD5071C(v55, &qword_255DB7700);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v46, v67);
  if (qword_255DB53F0 != -1)
    swift_once();
  v69 = __swift_project_value_buffer(v52, (uint64_t)qword_255DC3DF0);
  ((void (*)(char *, uint64_t, uint64_t))v111)(v35, v69, v52);
  sub_22DE1EF98();
  v70 = v106;
  sub_22DD84110(v106);
  v71 = v108;
  v72 = v107;
  v73 = v109;
  (*(void (**)(char *, _QWORD, uint64_t))(v108 + 104))(v107, *MEMORY[0x24BDEB400], v109);
  sub_22DE1E4F4();
  v74 = *(void (**)(char *, uint64_t))(v71 + 8);
  v74(v72, v73);
  v74((char *)v70, v73);
  v75 = sub_22DD508B0(&qword_255DB7730, &qword_255DB7708, MEMORY[0x24BDEDC10]);
  v119[0] = v68;
  v119[1] = v75;
  v76 = MEMORY[0x24BDED308];
  v77 = v100;
  v78 = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v100, v119);
  v79 = (uint64_t)v97;
  v80 = v112;
  sub_22DE1EED8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v80, v77);
  v118[0] = v78;
  v118[1] = MEMORY[0x24BDEC468];
  v81 = v102;
  MEMORY[0x22E3207B0](v76, v102, v118);
  v82 = v99;
  sub_22DDDD0EC(v79, v81, v99);
  v83 = *(void (**)(uint64_t, uint64_t))(v101 + 8);
  v83(v79, v81);
  sub_22DDDB6AC(v82, v81, v110);
  return ((uint64_t (*)(uint64_t, uint64_t))v83)(v82, v81);
}

uint64_t sub_22DD92BA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t);
  uint64_t v14;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v14 - v10;
  (*(void (**)(void))(v9 + 16))();
  sub_22DDDD0EC((uint64_t)v8, a2, (uint64_t)v11);
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, a2);
  sub_22DDDB6AC((uint64_t)v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v12)(v11, a2);
}

uint64_t sub_22DD92C84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DD92BA8(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_22DD92C90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22DE1E734();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DD92CD4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22DE1E734();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22DD92D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  _QWORD v10[2];
  _QWORD v11[2];
  _QWORD v12[2];
  _QWORD v13[2];
  _QWORD v14[2];

  v0 = sub_22DE1F034();
  v1 = sub_22DE1E6E0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB74D8);
  v2 = sub_22DE1E6E0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB6C58);
  v3 = sub_22DE1E6E0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7468);
  v4 = sub_22DE1E6E0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7708);
  v5 = sub_22DE1E6E0();
  v6 = sub_22DE1E6E0();
  v14[0] = MEMORY[0x22E3207B0](MEMORY[0x24BDF4498], v0);
  v14[1] = MEMORY[0x24BDECC60];
  v7 = MEMORY[0x24BDED308];
  v13[0] = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v14);
  v13[1] = sub_22DD508B0(&qword_255DB74D0, &qword_255DB74D8, MEMORY[0x24BDF06D0]);
  v12[0] = MEMORY[0x22E3207B0](v7, v2, v13);
  v12[1] = sub_22DD508B0((unint64_t *)&qword_255DB6C50, &qword_255DB6C58, MEMORY[0x24BDF0710]);
  v11[0] = MEMORY[0x22E3207B0](v7, v3, v12);
  v11[1] = sub_22DD508B0(qword_255DB74F0, &qword_255DB7468, MEMORY[0x24BDEB950]);
  v10[0] = MEMORY[0x22E3207B0](v7, v4, v11);
  v10[1] = sub_22DD508B0(&qword_255DB7730, &qword_255DB7708, MEMORY[0x24BDEDC10]);
  v9[0] = MEMORY[0x22E3207B0](v7, v5, v10);
  v9[1] = MEMORY[0x24BDEC468];
  return MEMORY[0x22E3207B0](v7, v6, v9);
}

uint64_t sub_22DD92F30()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB5488, (uint64_t (*)(uint64_t))type metadata accessor for OnboardingController, (uint64_t)&unk_22DE23640);
  sub_22DE1E068();
  swift_release();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_22DD92FB4()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB5488, (uint64_t (*)(uint64_t))type metadata accessor for OnboardingController, (uint64_t)&unk_22DE23640);
  sub_22DE1E068();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_22DD93038(uint64_t a1, char a2)
{
  uint64_t KeyPath;

  *(_BYTE *)(a1 + 16) = a2;
  if (qword_255DB5328 != -1)
    swift_once();
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB5488, (uint64_t (*)(uint64_t))type metadata accessor for OnboardingController, (uint64_t)&unk_22DE23640);
  sub_22DE1E068();
  swift_release();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  sub_22DD504A8((unint64_t *)&qword_255DB58A8, (uint64_t (*)(uint64_t))type metadata accessor for UserDefaultsController, (uint64_t)&unk_22DE257C0);
  sub_22DE1E05C();
  return swift_release();
}

uint64_t sub_22DD9319C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB5488, (uint64_t (*)(uint64_t))type metadata accessor for OnboardingController, (uint64_t)&unk_22DE23640);
  sub_22DE1E068();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 17);
  return result;
}

uint64_t sub_22DD93228()
{
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB5488, (uint64_t (*)(uint64_t))type metadata accessor for OnboardingController, (uint64_t)&unk_22DE23640);
  sub_22DE1E05C();
  return swift_release();
}

uint64_t sub_22DD932D0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 17) = a2 & 1;
  return result;
}

uint64_t sub_22DD932DC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  sub_22DE1E08C();
  if (qword_255DB5328 != -1)
    swift_once();
  v1 = qword_255DC3CE8;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58A8, (uint64_t (*)(uint64_t))type metadata accessor for UserDefaultsController, (uint64_t)&unk_22DE257C0);
  sub_22DE1E068();
  swift_release();
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    v2 = 1;
  }
  else
  {
    v3 = qword_255DC3CE8;
    swift_getKeyPath();
    sub_22DE1E068();
    swift_release();
    v2 = *(_BYTE *)(v3 + 17) ^ 1;
  }
  *(_WORD *)(v0 + 16) = v2 & 1;
  return v0;
}

uint64_t sub_22DD93410()
{
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB5488, (uint64_t (*)(uint64_t))type metadata accessor for OnboardingController, (uint64_t)&unk_22DE23640);
  sub_22DE1E05C();
  swift_release();
  swift_getKeyPath();
  sub_22DE1E05C();
  return swift_release();
}

uint64_t sub_22DD9350C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Feedback20OnboardingController___observationRegistrar;
  v2 = sub_22DE1E098();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_22DD9355C()
{
  return type metadata accessor for OnboardingController();
}

uint64_t type metadata accessor for OnboardingController()
{
  uint64_t result;

  result = qword_255DB7768;
  if (!qword_255DB7768)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22DD935A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22DE1E098();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for OnboardingController.Step(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22DD93664 + 4 * byte_22DE23575[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22DD93698 + 4 * byte_22DE23570[v4]))();
}

uint64_t sub_22DD93698(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DD936A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DD936A8);
  return result;
}

uint64_t sub_22DD936B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DD936BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22DD936C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DD936C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OnboardingController.Step()
{
  return &type metadata for OnboardingController.Step;
}

unint64_t sub_22DD936E8()
{
  unint64_t result;

  result = qword_255DB7800;
  if (!qword_255DB7800)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE23618, &type metadata for OnboardingController.Step);
    atomic_store(result, (unint64_t *)&qword_255DB7800);
  }
  return result;
}

uint64_t sub_22DD9372C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58A8, (uint64_t (*)(uint64_t))type metadata accessor for UserDefaultsController, (uint64_t)&unk_22DE257C0);
  sub_22DE1E068();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_22DD937B8()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58A8, (uint64_t (*)(uint64_t))type metadata accessor for UserDefaultsController, (uint64_t)&unk_22DE257C0);
  sub_22DE1E05C();
  return swift_release();
}

uint64_t sub_22DD93860@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58A8, (uint64_t (*)(uint64_t))type metadata accessor for UserDefaultsController, (uint64_t)&unk_22DE257C0);
  sub_22DE1E068();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 17);
  return result;
}

uint64_t sub_22DD938EC()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58A8, (uint64_t (*)(uint64_t))type metadata accessor for UserDefaultsController, (uint64_t)&unk_22DE257C0);
  sub_22DE1E05C();
  return swift_release();
}

uint64_t sub_22DD93994()
{
  uint64_t KeyPath;
  uint64_t v1;

  if (qword_255DB5328 != -1)
    swift_once();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  sub_22DD504A8((unint64_t *)&qword_255DB58A8, (uint64_t (*)(uint64_t))type metadata accessor for UserDefaultsController, (uint64_t)&unk_22DE257C0);
  sub_22DE1E05C();
  swift_release();
  v1 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v1);
  sub_22DE1E05C();
  return swift_release();
}

void sub_22DD93B10()
{
  uint64_t v0;

  sub_22DDCA570(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_22DD93B34()
{
  uint64_t v0;

  sub_22DDCA474(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_22DD93B60()
{
  sub_22DD6F9FC();
}

void sub_22DD93B74()
{
  sub_22DD93B34();
}

void sub_22DD93B88()
{
  sub_22DD93B10();
}

_QWORD *sub_22DD93B9C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v7 = *v8;
    if (EnumCaseMultiPayload == 1)
    {
      v7[1] = v8[1];
      swift_retain();
      swift_retain();
      v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010) + 32);
      v11 = (char *)v7 + v10;
      v12 = (char *)v8 + v10;
      v13 = sub_22DE1E71C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_22DD93CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
  LODWORD(a1) = swift_getEnumCaseMultiPayload();
  result = swift_release();
  if ((_DWORD)a1 == 1)
  {
    swift_release();
    v6 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010) + 32);
    v7 = sub_22DE1E71C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  return result;
}

uint64_t sub_22DD93D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *v6 = *v7;
  if (EnumCaseMultiPayload == 1)
  {
    v6[1] = v7[1];
    swift_retain();
    swift_retain();
    v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010) + 32);
    v10 = (char *)v6 + v9;
    v11 = (char *)v7 + v9;
    v12 = sub_22DE1E71C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22DD93E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v6 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_22DD5071C(a1 + v7, &qword_255DB6010);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v8 = *v9;
    if (EnumCaseMultiPayload == 1)
    {
      v8[1] = v9[1];
      swift_retain();
      swift_retain();
      v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010) + 32);
      v12 = (char *)v8 + v11;
      v13 = (char *)v9 + v11;
      v14 = sub_22DE1E71C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22DD93F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)(a1 + v4);
  v6 = (_QWORD *)(a2 + v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = v6[1];
    *v5 = *v6;
    v5[1] = v8;
    v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010) + 32);
    v10 = (char *)v5 + v9;
    v11 = (char *)v6 + v9;
    v12 = sub_22DE1E71C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_22DD94028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_22DD5071C(a1 + v7, &qword_255DB6010);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = v9[1];
      *v8 = *v9;
      v8[1] = v11;
      v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010) + 32);
      v13 = (char *)v8 + v12;
      v14 = (char *)v9 + v12;
      v15 = sub_22DE1E71C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22DD94128()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD94134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB7808);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_22DD941AC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD941B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB7808);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DebugSheet()
{
  uint64_t result;

  result = qword_255DB7868;
  if (!qword_255DB7868)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22DD94268()
{
  unint64_t v0;

  sub_22DD942DC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_22DD942DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255DB7878[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7010);
    v0 = sub_22DE1E548();
    if (!v1)
      atomic_store(v0, qword_255DB7878);
  }
}

uint64_t sub_22DD94334()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD94344@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6670, (uint64_t (*)(uint64_t))type metadata accessor for DebugController, (uint64_t)")ٶ!ȷ");
  sub_22DE1E068();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 17);
  return result;
}

uint64_t sub_22DD943D0()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6670, (uint64_t (*)(uint64_t))type metadata accessor for DebugController, (uint64_t)")ٶ!ȷ");
  sub_22DE1E05C();
  return swift_release();
}

uint64_t sub_22DD94478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char *v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  int *v47;
  void (*v48)(char *, uint64_t);
  void (*v49)(char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;

  v54 = a2;
  v60 = a3;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB78C0);
  v58 = *(_QWORD *)(v53 - 8);
  v4 = MEMORY[0x24BDAC7A8](v53);
  v59 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v57 = (char *)&v51 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v56 = (char *)&v51 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v64 = (char *)&v51 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v51 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v51 - v15;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB78C8);
  v62 = *(_QWORD *)(v55 - 8);
  v17 = MEMORY[0x24BDAC7A8](v55);
  v63 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v61 = (char *)&v51 - v19;
  sub_22DE1E980();
  v67 = sub_22DE1ED7C();
  v68 = v20;
  v69 = v21 & 1;
  v70 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB78D0);
  sub_22DD508B0(&qword_255DB78D8, &qword_255DB78D0, MEMORY[0x24BDF46D0]);
  sub_22DE1F0F4();
  sub_22DE1E980();
  v67 = sub_22DE1ED7C();
  v68 = v23;
  v69 = v24 & 1;
  v70 = v25;
  v65 = a1;
  v66 = v54;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB78E0);
  sub_22DD95464();
  v52 = v16;
  sub_22DE1F0F4();
  sub_22DE1E980();
  v67 = sub_22DE1ED7C();
  v68 = v26;
  v69 = v27 & 1;
  v70 = v28;
  v29 = v14;
  v51 = v14;
  sub_22DE1F0F4();
  sub_22DE1E980();
  v67 = sub_22DE1ED7C();
  v68 = v30;
  v69 = v31 & 1;
  v70 = v32;
  v33 = v64;
  sub_22DE1F0F4();
  v34 = v63;
  v35 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
  v36 = v55;
  v35(v63, v61, v55);
  v37 = v58;
  v38 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  v39 = v56;
  v40 = v16;
  v41 = v53;
  v38(v56, v40, v53);
  v42 = v57;
  v38(v57, v29, v41);
  v43 = v59;
  v44 = v33;
  v45 = v41;
  v38(v59, v44, v41);
  v46 = v60;
  v35(v60, v34, v36);
  v47 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255DB78F0);
  v38(&v46[v47[12]], v39, v45);
  v38(&v46[v47[16]], v42, v45);
  v38(&v46[v47[20]], v43, v45);
  v48 = *(void (**)(char *, uint64_t))(v37 + 8);
  v48(v64, v45);
  v48(v51, v45);
  v48(v52, v45);
  v49 = *(void (**)(char *, uint64_t))(v62 + 8);
  v49(v61, v36);
  v48(v43, v45);
  v48(v42, v45);
  v48(v39, v45);
  return ((uint64_t (*)(char *, uint64_t))v49)(v63, v36);
}

uint64_t sub_22DD949C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[10];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB78A8);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v13 - v5;
  v7 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v7, v0);
  sub_22DE1F10C();
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  swift_getKeyPath();
  sub_22DE1F124();
  swift_release();
  v8(v6, v0);
  v9 = v13[7];
  v10 = v13[8];
  v11 = v13[9];
  swift_getKeyPath();
  v13[1] = v9;
  v13[2] = v10;
  v13[3] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6EE8);
  sub_22DE1F088();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_22DE1F040();
}

uint64_t sub_22DD94B4C@<X0>(uint64_t a1@<X8>)
{
  return sub_22DD952F0(a1);
}

uint64_t sub_22DD94B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t *v17;
  uint64_t v19;

  v6 = type metadata accessor for DebugSheet();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB57B0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD95618(a2, (uint64_t)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_22DD95730((uint64_t)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  swift_retain();
  sub_22DE1F01C();
  v15 = sub_22DE1EF50();
  KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(a3, v12, v9);
  v17 = (uint64_t *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB78E0) + 36));
  *v17 = KeyPath;
  v17[1] = v15;
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_22DD94CF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v0 = sub_22DE1E71C();
  MEMORY[0x24BDAC7A8](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB78A8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_22DE1F100();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v9 = v12;
  swift_getKeyPath();
  v12 = v9;
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  swift_retain();
  swift_release();
  sub_22DD93410();
  swift_release();
  type metadata accessor for DebugSheet();
  sub_22DD84140((uint64_t)v3);
  MEMORY[0x22E31F8EC](v1);
  sub_22DE1E710();
  sub_22DE1F07C();
  return sub_22DD5071C((uint64_t)v3, &qword_255DB7010);
}

uint64_t sub_22DD94EEC@<X0>(uint64_t a1@<X8>)
{
  return sub_22DD952F0(a1);
}

uint64_t sub_22DD94F10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB78A8);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  sub_22DE1F100();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v5 = v8;
  swift_getKeyPath();
  v8 = v5;
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  swift_retain();
  swift_release();
  sub_22DD93994();
  return swift_release();
}

uint64_t sub_22DD95028@<X0>(uint64_t a1@<X8>)
{
  return sub_22DD952F0(a1);
}

uint64_t sub_22DD95044@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t *v8;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB57B0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_22DE1F01C();
  v6 = sub_22DE1EF44();
  KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v5, v2);
  v8 = (uint64_t *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB78E0) + 36));
  *v8 = KeyPath;
  v8[1] = v6;
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_22DD95148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[16];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB78A8);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = swift_projectBox();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  sub_22DE1F100();
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
  v5 = v11;
  swift_getKeyPath();
  v11 = v5;
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  v6 = *(_QWORD *)(v5 + 24);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  v9 = v6;
  v10 = 0;
  v11 = v6;
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E05C();
  swift_release();
  return swift_release();
}

uint64_t sub_22DD952D0@<X0>(uint64_t a1@<X8>)
{
  return sub_22DD952F0(a1);
}

uint64_t sub_22DD952F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_22DE1E980();
  result = sub_22DE1ED7C();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_22DD9534C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB78A8);
  swift_allocBox();
  v1 = *(_BYTE *)(v0 + 8);
  v2 = swift_retain();
  sub_22DD83CC8(v2, v1);
  swift_release();
  type metadata accessor for BatchController();
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1F118();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB78B0);
  sub_22DD508B0(&qword_255DB78B8, &qword_255DB78B0, MEMORY[0x24BDF5428]);
  sub_22DE1ED34();
  return swift_release();
}

uint64_t sub_22DD9544C@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_22DD94478(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_22DD95454()
{
  return sub_22DD949C0();
}

uint64_t sub_22DD9545C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DD94B70(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_22DD95464()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB78E8;
  if (!qword_255DB78E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB78E0);
    v2[0] = sub_22DD508B0(&qword_255DB7090, &qword_255DB57B0, MEMORY[0x24BDF43B0]);
    v2[1] = sub_22DD508B0(&qword_255DB7350, &qword_255DB7358, MEMORY[0x24BDF1028]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB78E8);
  }
  return result;
}

uint64_t sub_22DD95500@<X0>(uint64_t a1@<X8>)
{
  return sub_22DD95044(a1);
}

uint64_t sub_22DD95528@<X0>(uint64_t a1@<X8>)
{
  return sub_22DD95044(a1);
}

uint64_t sub_22DD95550()
{
  return sub_22DD95148();
}

uint64_t sub_22DD95558@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_22DE1E8B4();
  *a1 = result;
  return result;
}

uint64_t sub_22DD95580@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_22DE1E8B4();
  *a1 = result;
  return result;
}

uint64_t sub_22DD955A8()
{
  swift_retain();
  return sub_22DE1E8C0();
}

uint64_t sub_22DD955D0()
{
  swift_retain();
  return sub_22DE1E8C0();
}

uint64_t sub_22DD95608()
{
  return sub_22DD94F10();
}

uint64_t sub_22DD95618(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DebugSheet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DD9565C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for DebugSheet();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_release();
  v3 = v0 + ((v2 + 24) & ~v2) + *(int *)(v1 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    v5 = v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010) + 32);
    v6 = sub_22DE1E71C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  return swift_deallocObject();
}

uint64_t sub_22DD95730(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DebugSheet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DD95774()
{
  type metadata accessor for DebugSheet();
  return sub_22DD94CF4();
}

uint64_t sub_22DD957B4()
{
  return sub_22DD508B0(&qword_255DB78F8, &qword_255DB7900, MEMORY[0x24BDF1A30]);
}

uint64_t FBKInlineThumbsDown.feedbackController.getter()
{
  uint64_t v0;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
  MEMORY[0x22E31F8EC](&v2, v0);
  return v2;
}

_QWORD *sub_22DD9582C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
  result = MEMORY[0x22E31F8EC](&v4, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_22DD95880(id *a1)
{
  id v1;

  v1 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
  return sub_22DE1F07C();
}

uint64_t FBKInlineThumbsDown.feedbackController.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
  return sub_22DE1F07C();
}

void (*FBKInlineThumbsDown.feedbackController.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v4 = *v1;
  v5 = v1[1];
  v3[5] = *v1;
  v3[6] = v5;
  v6 = (void *)v1[2];
  v3[7] = v6;
  *v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  swift_retain();
  swift_retain();
  v7 = v6;
  v3[8] = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
  MEMORY[0x22E31F8EC]();
  return sub_22DD959A8;
}

void sub_22DD959A8(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  *(_QWORD *)(*(_QWORD *)a1 + 32) = v3;
  v4 = (void *)*((_QWORD *)v2 + 7);
  v5 = *((_QWORD *)v2 + 6);
  *(_QWORD *)v2 = *((_QWORD *)v2 + 5);
  *((_QWORD *)v2 + 1) = v5;
  *((_QWORD *)v2 + 2) = v4;
  if ((a2 & 1) != 0)
  {
    v6 = v3;
    sub_22DE1F07C();
    swift_release();
    swift_release();

  }
  else
  {
    sub_22DE1F07C();
    swift_release();
    swift_release();

  }
  free(v2);
}

uint64_t FBKInlineThumbsDown.$feedbackController.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
  sub_22DE1F094();
  return v1;
}

uint64_t FBKInlineThumbsDown.subject.getter()
{
  return sub_22DD95E94((uint64_t (*)(uint64_t))MEMORY[0x24BDF47B0]);
}

uint64_t type metadata accessor for FBKInlineThumbsDown()
{
  uint64_t result;

  result = qword_255DB7970;
  if (!qword_255DB7970)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22DD95AE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = sub_22DE1E194();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  type metadata accessor for FBKInlineThumbsDown();
  v9(v6, (uint64_t)v8, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
  sub_22DE1F07C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t FBKInlineThumbsDown.subject.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_22DE1E194();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FBKInlineThumbsDown();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
  sub_22DE1F07C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*FBKInlineThumbsDown.subject.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = sub_22DE1E194();
  *v3 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[1] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[2] = malloc(v6);
  v3[3] = malloc(v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
  v3[4] = v7;
  v8 = malloc(*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v3[5] = v8;
  v9 = type metadata accessor for FBKInlineThumbsDown();
  sub_22DD95E00(v1 + *(int *)(v9 + 20), (uint64_t)v8);
  MEMORY[0x22E31F8EC](v7);
  return sub_22DD95D50;
}

void sub_22DD95D50(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 40);
  v4 = *(void **)(*(_QWORD *)a1 + 16);
  v5 = *(void **)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    v6 = *v2;
    v7 = v2[1];
    (*(void (**)(_QWORD, void *, _QWORD))(v7 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 16), v5, *v2);
    sub_22DE1F07C();
    sub_22DD95E48((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    sub_22DE1F07C();
    sub_22DD95E48((uint64_t)v3);
  }
  free(v3);
  free(v5);
  free(v4);
  free(v2);
}

uint64_t sub_22DD95E00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DD95E48(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FBKInlineThumbsDown.$subject.getter()
{
  return sub_22DD95E94((uint64_t (*)(uint64_t))MEMORY[0x24BDF47E0]);
}

uint64_t sub_22DD95E94(uint64_t (*a1)(uint64_t))
{
  uint64_t v2;

  type metadata accessor for FBKInlineThumbsDown();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
  return a1(v2);
}

uint64_t FBKInlineThumbsDown.disabled.getter()
{
  uint64_t v0;
  uint64_t v2;

  type metadata accessor for FBKInlineThumbsDown();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7910);
  MEMORY[0x22E31F8EC](&v2, v0);
  return v2;
}

_QWORD *sub_22DD95F3C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;

  type metadata accessor for FBKInlineThumbsDown();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7910);
  result = MEMORY[0x22E31F8EC](&v4, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_22DD95FAC()
{
  type metadata accessor for FBKInlineThumbsDown();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7910);
  return sub_22DE1F07C();
}

uint64_t FBKInlineThumbsDown.disabled.setter()
{
  type metadata accessor for FBKInlineThumbsDown();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7910);
  return sub_22DE1F07C();
}

void (*FBKInlineThumbsDown.disabled.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FBKInlineThumbsDown() + 24));
  v5 = *v4;
  v6 = v4[1];
  v3[3] = *v4;
  v3[4] = v6;
  LOBYTE(v4) = *((_BYTE *)v4 + 16);
  *((_BYTE *)v3 + 19) = (_BYTE)v4;
  *v3 = v5;
  v3[1] = v6;
  *((_BYTE *)v3 + 16) = (_BYTE)v4;
  swift_retain();
  swift_retain();
  v3[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7910);
  MEMORY[0x22E31F8EC]();
  return sub_22DD9610C;
}

void sub_22DD9610C(uint64_t a1)
{
  _QWORD *v1;
  char v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD **)a1;
  v2 = *(_BYTE *)(*(_QWORD *)a1 + 17);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 19);
  *v1 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v1[1] = v3;
  *((_BYTE *)v1 + 16) = v4;
  *((_BYTE *)v1 + 18) = v2;
  sub_22DE1F07C();
  swift_release();
  swift_release();
  free(v1);
}

uint64_t FBKInlineThumbsDown.$disabled.getter()
{
  uint64_t v1;

  type metadata accessor for FBKInlineThumbsDown();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7910);
  sub_22DE1F094();
  return v1;
}

uint64_t sub_22DD961C8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for FBKInlineThumbsDown() + 28));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_22DD96FCC;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_22DD50D8C(v4);
}

uint64_t sub_22DD96240(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_22DD96FC4;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for FBKInlineThumbsDown() + 28));
  v8 = *v7;
  sub_22DD50D8C(v3);
  result = sub_22DD50DE0(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t FBKInlineThumbsDown.onFormComplete.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FBKInlineThumbsDown() + 28));
  sub_22DD50D8C(v1);
  return v1;
}

uint64_t FBKInlineThumbsDown.onFormComplete.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t result;

  v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for FBKInlineThumbsDown() + 28));
  result = sub_22DD50DE0(*v5);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FBKInlineThumbsDown.onFormComplete.modify())(_QWORD)
{
  type metadata accessor for FBKInlineThumbsDown();
  return nullsub_1;
}

uint64_t FBKInlineThumbsDown.init(feedbackController:subject:disabled:onFormComplete:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10)
{
  int *v17;
  _QWORD *v18;
  uint64_t result;
  char *v20;

  v17 = (int *)type metadata accessor for FBKInlineThumbsDown();
  v18 = (_QWORD *)((char *)a9 + v17[7]);
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  result = sub_22DD96438(a4, (uint64_t)a9 + v17[5]);
  v20 = (char *)a9 + v17[6];
  *(_QWORD *)v20 = a5;
  *((_QWORD *)v20 + 1) = a6;
  v20[16] = a7;
  *v18 = a8;
  v18[1] = a10;
  return result;
}

uint64_t sub_22DD96438(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FBKInlineThumbsDown.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v21 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22DE1E14C();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v8 + 104))(v7, *MEMORY[0x24BE30E80]);
  v9 = type metadata accessor for FBKInlineThumbsDown();
  sub_22DE1F094();
  v10 = (uint64_t *)((char *)v1 + *(int *)(v9 + 28));
  v11 = *v10;
  v12 = v10[1];
  v22 = *v1;
  v23 = *(_OWORD *)(v1 + 1);
  sub_22DD50D8C(v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
  sub_22DE1F094();
  v13 = v24;
  v14 = v25;
  v15 = v26;
  v16 = (uint64_t *)((char *)v1 + *(int *)(v9 + 24));
  v17 = *v16;
  v18 = v16[1];
  LOBYTE(v16) = *((_BYTE *)v16 + 16);
  v22 = v17;
  *(_QWORD *)&v23 = v18;
  BYTE8(v23) = (_BYTE)v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7910);
  sub_22DE1F094();
  return sub_22DDA6998((uint64_t)v7, (uint64_t)v4, v11, v12, v13, v14, v15, v21, v24, v25, v26);
}

uint64_t sub_22DD96628()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD96644()
{
  uint64_t v0;

  type metadata accessor for FBKInlineThumbsDown();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
  return MEMORY[0x22E31F8EC](v0);
}

uint64_t *initializeBufferWithCopyOfBuffer for FBKInlineThumbsDown(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v8 = (void *)a2[2];
    a1[1] = a2[1];
    a1[2] = (uint64_t)v8;
    v9 = a3[5];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (char *)a2 + v9;
    v12 = *(uint64_t *)((char *)a2 + v9 + 8);
    *v10 = *(uint64_t *)((char *)a2 + v9);
    v10[1] = v12;
    swift_retain();
    swift_retain();
    v13 = v8;
    swift_retain();
    swift_retain();
    v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908) + 32);
    v15 = (char *)v10 + v14;
    v16 = &v11[v14];
    v17 = sub_22DE1E194();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = a3[6];
    v19 = a3[7];
    v20 = (char *)a1 + v18;
    v21 = (char *)a2 + v18;
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    v20[16] = v21[16];
    v23 = (uint64_t *)((char *)a1 + v19);
    v24 = (uint64_t *)((char *)a2 + v19);
    v25 = *v24;
    swift_retain();
    swift_retain();
    if (v25)
    {
      v26 = v24[1];
      *v23 = v25;
      v23[1] = v26;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v23 = *(_OWORD *)v24;
    }
  }
  return a1;
}

uint64_t destroy for FBKInlineThumbsDown(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_release();
  swift_release();

  v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908) + 32);
  v6 = sub_22DE1E194();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  result = swift_release();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 28)))
    return swift_release();
  return result;
}

_QWORD *initializeWithCopy for FBKInlineThumbsDown(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (void *)a2[2];
  a1[2] = v7;
  v8 = a3[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (char *)a2 + v8;
  v11 = *(_QWORD *)((char *)a2 + v8 + 8);
  *v9 = *(_QWORD *)((char *)a2 + v8);
  v9[1] = v11;
  swift_retain();
  swift_retain();
  v12 = v7;
  swift_retain();
  swift_retain();
  v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908) + 32);
  v14 = (char *)v9 + v13;
  v15 = &v10[v13];
  v16 = sub_22DE1E194();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = a3[6];
  v18 = a3[7];
  v19 = (char *)a1 + v17;
  v20 = (char *)a2 + v17;
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  v19[16] = v20[16];
  v22 = (_QWORD *)((char *)a1 + v18);
  v23 = (_QWORD *)((char *)a2 + v18);
  v24 = *v23;
  swift_retain();
  swift_retain();
  if (v24)
  {
    v25 = v23[1];
    *v22 = v24;
    v22[1] = v25;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
  }
  return a1;
}

_QWORD *assignWithCopy for FBKInlineThumbsDown(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  v9 = a3[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
  swift_retain();
  swift_release();
  *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
  swift_retain();
  swift_release();
  v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908) + 32);
  v13 = &v10[v12];
  v14 = &v11[v12];
  v15 = sub_22DE1E194();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  swift_retain();
  swift_release();
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_retain();
  swift_release();
  v17[16] = v18[16];
  v19 = a3[7];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = *(_QWORD *)((char *)a1 + v19);
  v23 = *v21;
  if (!v22)
  {
    if (v23)
    {
      v25 = v21[1];
      *v20 = v23;
      v20[1] = v25;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)v20 = *(_OWORD *)v21;
    return a1;
  }
  if (!v23)
  {
    swift_release();
    goto LABEL_7;
  }
  v24 = v21[1];
  *v20 = v23;
  v20[1] = v24;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for FBKInlineThumbsDown(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = a2 + v6;
  v9 = *(_QWORD *)(a2 + v6 + 8);
  *v7 = *(_QWORD *)(a2 + v6);
  v7[1] = v9;
  v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908) + 32);
  v11 = (char *)v7 + v10;
  v12 = v8 + v10;
  v13 = sub_22DE1E194();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[6];
  v15 = a3[7];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v17 + 16);
  v18 = (_QWORD *)(a1 + v15);
  v19 = (uint64_t *)(a2 + v15);
  v20 = *v19;
  if (*v19)
  {
    v21 = v19[1];
    *v18 = v20;
    v18[1] = v21;
  }
  else
  {
    *(_OWORD *)v18 = *(_OWORD *)v19;
  }
  return a1;
}

_QWORD *assignWithTake for FBKInlineThumbsDown(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  v6 = (void *)a1[2];
  a1[2] = a2[2];

  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  *(_QWORD *)((char *)a1 + v7) = *(_QWORD *)((char *)a2 + v7);
  swift_release();
  *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
  swift_release();
  v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908) + 32);
  v11 = &v8[v10];
  v12 = &v9[v10];
  v13 = sub_22DE1E194();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
  swift_release();
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_release();
  v15[16] = v16[16];
  v17 = a3[7];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = *(_QWORD *)((char *)a1 + v17);
  v21 = *v19;
  if (!v20)
  {
    if (v21)
    {
      v23 = v19[1];
      *v18 = v21;
      v18[1] = v23;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v18 = *(_OWORD *)v19;
    return a1;
  }
  if (!v21)
  {
    swift_release();
    goto LABEL_7;
  }
  v22 = v19[1];
  *v18 = v21;
  v18[1] = v22;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FBKInlineThumbsDown()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD96D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FBKInlineThumbsDown()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DD96E00(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_22DD96E78()
{
  unint64_t v0;

  sub_22DD96F00();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_22DD96F00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255DB7980)
  {
    sub_22DE1E194();
    v0 = sub_22DE1F0A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255DB7980);
  }
}

unint64_t sub_22DD96F58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DB79B8;
  if (!qword_255DB79B8)
  {
    v1 = type metadata accessor for FBKInlineViewButton();
    result = MEMORY[0x22E3207B0](&unk_22DE24330, v1);
    atomic_store(result, (unint64_t *)&qword_255DB79B8);
  }
  return result;
}

uint64_t sub_22DD96FA0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD96FC4(uint64_t a1)
{
  uint64_t v1;

  return sub_22DE13BC8(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_22DD96FCC(_QWORD *a1)
{
  uint64_t v1;

  return sub_22DE13BA4(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

uint64_t sub_22DD96FD8(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v8 = sub_22DE1F1B4();
  v19 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_22DE1F1D8();
  v11 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD78E9C();
  v14 = (void *)sub_22DE1F574();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_BYTE *)(v15 + 24) = a2 & 1;
  *(_QWORD *)(v15 + 32) = a3;
  *(_QWORD *)(v15 + 40) = a4;
  aBlock[4] = sub_22DD975E0;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = &block_descriptor_1;
  v16 = _Block_copy(aBlock);
  sub_22DD97608(a1, a2 & 1);
  swift_retain();
  swift_release();
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD78E50();
  sub_22DE1F67C();
  MEMORY[0x22E31FDFC](0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v18);
}

uint64_t sub_22DD971E8(unint64_t a1, char a2, uint64_t (*a3)(_BOOL8))
{
  uint64_t v4;
  _BOOL8 v5;

  if ((a2 & 1) != 0)
  {
    v5 = 0;
  }
  else
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v4 = sub_22DE1F7D8();
      sub_22DD975D4((id)a1, 0);
    }
    else
    {
      v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v5 = v4 > 0;
  }
  return a3(v5);
}

uint64_t sub_22DD97268()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BatchVisibilityController()
{
  return objc_opt_self();
}

uint64_t sub_22DD97298(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for ScoreController();
  v4 = swift_allocObject();
  *(_WORD *)(v4 + 16) = 0;
  sub_22DE1E08C();
  if (qword_255DB5328 != -1)
    swift_once();
  v5 = qword_255DC3CE8;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58A8, (uint64_t (*)(uint64_t))type metadata accessor for UserDefaultsController, (uint64_t)&unk_22DE257C0);
  sub_22DE1E068();
  swift_release();
  *(_QWORD *)(v4 + 24) = *(_QWORD *)(v5 + 24);
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E068();
  swift_release();
  if (*(uint64_t *)(v4 + 24) < 1)
  {
    sub_22DE1E104();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = a1;
    *(_QWORD *)(v6 + 24) = a2;
    swift_retain();
    MEMORY[0x22E31E968](1, 1, sub_22DD97598, v6);
    swift_release();
  }
  else
  {
    a1(1);
  }
  return swift_release();
}

uint64_t _s8Feedback29BatchEvaluationViewControllerC010shouldShowB2UI10completionyySbc_tFZ_0(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  if (MEMORY[0x22E32027C]())
    return sub_22DD97298(a1, a2);
  if (qword_255DB53A0 != -1)
    swift_once();
  v5 = sub_22DE1E410();
  __swift_project_value_buffer(v5, (uint64_t)qword_255DC3D30);
  v6 = sub_22DE1E3F8();
  v7 = sub_22DE1F4E4();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_22DD4B000, v6, v7, "BatchUI disabled", v8, 2u);
    MEMORY[0x22E320870](v8, -1, -1);
  }

  return ((uint64_t (*)(_QWORD))a1)(0);
}

uint64_t sub_22DD97574()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD97598(void *a1, char a2)
{
  uint64_t v2;

  return sub_22DD96FD8(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_22DD975A4()
{
  uint64_t v0;

  sub_22DD975D4(*(id *)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_release();
  return swift_deallocObject();
}

void sub_22DD975D4(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t sub_22DD975E0()
{
  uint64_t v0;

  return sub_22DD971E8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(uint64_t (**)(_BOOL8))(v0 + 32));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

id sub_22DD97608(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

uint64_t sub_22DD97614(uint64_t result)
{
  id v1;
  uint64_t v2;
  char v3;

  if (result)
  {
    v1 = (id)result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7A58);
    if (swift_dynamicCast())
    {
      v2 = 3;
      if (v3 == 4)
        v2 = 6;
      if (v3)
        return v2;
      else
        return 5;
    }
    else
    {
      return 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BatchStatusView()
{
  return &type metadata for BatchStatusView;
}

uint64_t sub_22DD976CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD976DC(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v5;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 ^ v3 ^ 1u;
  v5 = sub_22DE1F8E0();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 ^ v3 ^ 1u;
  return result;
}

uint64_t sub_22DD97738()
{
  sub_22DE1F964();
  swift_bridgeObjectRetain();
  sub_22DE1F310();
  swift_bridgeObjectRelease();
  sub_22DE1F970();
  return sub_22DE1F97C();
}

uint64_t sub_22DD977A8()
{
  swift_bridgeObjectRetain();
  sub_22DE1F310();
  swift_bridgeObjectRelease();
  return sub_22DE1F970();
}

uint64_t sub_22DD97800()
{
  sub_22DE1F964();
  swift_bridgeObjectRetain();
  sub_22DE1F310();
  swift_bridgeObjectRelease();
  sub_22DE1F970();
  return sub_22DE1F97C();
}

BOOL sub_22DD9786C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_22DD97880(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_22DD98050((uint64_t)v7, (uint64_t)v8) & 1;
}

uint64_t sub_22DD978C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char *v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t KeyPath;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7A68);
  v72 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v71 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v70 = (char *)&v57 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB55D8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v15 = *(unsigned __int8 *)(a1 + 32);
  v62 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 56);
  v63 = v4;
  if (!v16)
  {
    if (v15)
    {
      if (v15 == 2)
      {
        v78 = sub_22DE1EFBC();
LABEL_8:
        v17 = sub_22DE1EF38();
        goto LABEL_13;
      }
      v78 = sub_22DE1EFBC();
      goto LABEL_12;
    }
    v78 = sub_22DE1EFBC();
LABEL_10:
    v17 = sub_22DE1EF8C();
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  v78 = sub_22DE1EFBC();
  if (!v15)
    goto LABEL_10;
  if (v15 != 1)
    goto LABEL_8;
LABEL_12:
  v17 = sub_22DE1EF44();
LABEL_13:
  v79 = v17;
  v18 = sub_22DE1ECD4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v77 = sub_22DE1ECF8();
  sub_22DD5071C((uint64_t)v10, &qword_255DB55D8);
  KeyPath = swift_getKeyPath();
  v80 = v12;
  v81 = v11;
  sub_22DD50840();
  swift_bridgeObjectRetain();
  v19 = sub_22DE1ED94();
  v21 = v20;
  v23 = v22 & 1;
  sub_22DE1ED1C();
  v24 = sub_22DE1ED64();
  v74 = v25;
  v75 = v24;
  v27 = v26;
  v76 = v28;
  swift_release();
  sub_22DD4FC6C(v19, v21, v23);
  swift_bridgeObjectRelease();
  v73 = swift_getKeyPath();
  if (v13)
  {
    v80 = v14;
    v81 = v13;
    swift_bridgeObjectRetain();
    v29 = sub_22DE1ED94();
    v31 = v30;
    v33 = v32 & 1;
    v80 = sub_22DE1EF5C();
    v61 = sub_22DE1ED4C();
    v60 = v34;
    v68 = v35;
    v59 = v36 & 1;
    sub_22DD4FC6C(v29, v31, v33);
    swift_release();
    swift_bridgeObjectRelease();
    v58 = swift_getKeyPath();
    v67 = sub_22DE1ECB0();
    v65 = swift_getKeyPath();
    v66 = 1;
  }
  else
  {
    v61 = 0;
    v60 = 0;
    v59 = 0;
    v68 = 0;
    v58 = 0;
    v65 = 0;
    v66 = 0;
    v67 = 0;
  }
  v37 = v27 & 1;
  v64 = v27 & 1;
  v80 = v62;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7A70);
  sub_22DD508B0(&qword_255DB7A78, &qword_255DB7A70, MEMORY[0x24BEE12D8]);
  sub_22DD98150();
  sub_22DD98194();
  v38 = v70;
  sub_22DE1F0C4();
  v39 = v71;
  v40 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
  v41 = v63;
  v40(v71, v38, v63);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  v43 = v78;
  v42 = v79;
  *(_QWORD *)(a2 + 16) = v78;
  *(_QWORD *)(a2 + 24) = v42;
  v78 = v43;
  v44 = v77;
  *(_QWORD *)(a2 + 32) = KeyPath;
  *(_QWORD *)(a2 + 40) = v44;
  v45 = v74;
  *(_QWORD *)(a2 + 48) = v75;
  *(_QWORD *)(a2 + 56) = v45;
  *(_BYTE *)(a2 + 64) = v37;
  v46 = v73;
  *(_QWORD *)(a2 + 72) = v76;
  *(_QWORD *)(a2 + 80) = v46;
  *(_BYTE *)(a2 + 88) = 1;
  v47 = v61;
  v48 = v60;
  *(_QWORD *)(a2 + 96) = v61;
  *(_QWORD *)(a2 + 104) = v48;
  v49 = v59;
  v50 = v68;
  *(_QWORD *)(a2 + 112) = v59;
  *(_QWORD *)(a2 + 120) = v50;
  v51 = v66;
  *(_QWORD *)(a2 + 128) = v58;
  *(_QWORD *)(a2 + 136) = v51;
  v52 = v67;
  *(_QWORD *)(a2 + 144) = v65;
  *(_QWORD *)(a2 + 152) = v52;
  *(_QWORD *)(a2 + 160) = 0;
  *(_BYTE *)(a2 + 168) = 1;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7A90);
  v40((char *)(a2 + *(int *)(v53 + 112)), v39, v41);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22DD50088(v75, v74, v64);
  swift_bridgeObjectRetain();
  swift_retain();
  v54 = v68;
  sub_22DD981D8(v47, v48, v49, v68);
  v55 = *(void (**)(char *, uint64_t))(v72 + 8);
  v55(v70, v41);
  v55(v71, v41);
  sub_22DD98234(v47, v48, v49, v54);
  sub_22DD4FC6C(v75, v74, v64);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DD97EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v4;
  *(_QWORD *)(a2 + 32) = v5;
  *(_BYTE *)(a2 + 40) = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_22DD97F20@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v13[4];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB54B8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1[1];
  v13[0] = *v1;
  v13[1] = v6;
  v7 = v1[3];
  v13[2] = v1[2];
  v13[3] = v7;
  *(_QWORD *)v5 = sub_22DE1E9EC();
  *((_QWORD *)v5 + 1) = 0x4020000000000000;
  v5[16] = 0;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7A60);
  sub_22DD978C8((uint64_t)v13, (uint64_t)&v5[*(int *)(v8 + 44)]);
  if (qword_255DB52C0 != -1)
    swift_once();
  v9 = *(double *)&qword_255DC3CB0;
  v10 = sub_22DE1F130();
  sub_22DD4F7D0(0.0, 1, 0.0, 1, v9, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v10, v11);
  return sub_22DD5071C((uint64_t)v5, &qword_255DB54B8);
}

uint64_t sub_22DD98050(uint64_t a1, uint64_t a2)
{
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    v5 = sub_22DE1F8E0();
    result = 0;
    if ((v5 & 1) == 0)
      return result;
  }
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a2 + 24);
  if (!v7)
  {
    if (v8)
      return 0;
    goto LABEL_15;
  }
  if (!v8)
    return 0;
  v9 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && v7 == v8;
  if (v9 || (v10 = sub_22DE1F8E0(), result = 0, (v10 & 1) != 0))
  {
LABEL_15:
    if (*(unsigned __int8 *)(a1 + 32) == *(unsigned __int8 *)(a2 + 32)
      && (sub_22DD633F0(*(_QWORD *)(a1 + 40), *(_QWORD *)(a2 + 40)) & 1) != 0)
    {
      v11 = *(_QWORD *)(a1 + 56);
      v12 = *(_QWORD *)(a2 + 56);
      if (v11)
      {
        if (v12 && (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && v11 == v12 || (sub_22DE1F8E0() & 1) != 0))
          return 1;
      }
      else if (!v12)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_22DD98150()
{
  unint64_t result;

  result = qword_255DB7A80;
  if (!qword_255DB7A80)
  {
    result = MEMORY[0x22E3207B0]("uҶ!ة", &type metadata for BatchStatusView.Config.Button);
    atomic_store(result, (unint64_t *)&qword_255DB7A80);
  }
  return result;
}

unint64_t sub_22DD98194()
{
  unint64_t result;

  result = qword_255DB7A88;
  if (!qword_255DB7A88)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE22460, &type metadata for BatchButton);
    atomic_store(result, (unint64_t *)&qword_255DB7A88);
  }
  return result;
}

uint64_t sub_22DD981D8(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_22DD50088(result, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_22DD98234(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_22DD4FC6C(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BatchStatusView.Config.StatusType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for BatchStatusView.Config.StatusType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22DD9836C + 4 * byte_22DE239C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22DD983A0 + 4 * byte_22DE239C0[v4]))();
}

uint64_t sub_22DD983A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DD983A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DD983B0);
  return result;
}

uint64_t sub_22DD983BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DD983C4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22DD983C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DD983D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_22DD983DC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for BatchStatusView.Config.StatusType()
{
  return &type metadata for BatchStatusView.Config.StatusType;
}

uint64_t initializeWithCopy for BatchStatusView.Config.Button(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BatchStatusView.Config.Button(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for BatchStatusView.Config.Button(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BatchStatusView.Config.Button(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BatchStatusView.Config.Button(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BatchStatusView.Config.Button()
{
  return &type metadata for BatchStatusView.Config.Button;
}

uint64_t _s8Feedback15BatchStatusViewVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s8Feedback15BatchStatusViewVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s8Feedback15BatchStatusViewVwca_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8Feedback15BatchStatusViewVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for BatchStatusView.Config()
{
  return &type metadata for BatchStatusView.Config;
}

unint64_t sub_22DD98760()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB7A98;
  if (!qword_255DB7A98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB54C0);
    v2[0] = sub_22DD508B0(&qword_255DB7AA0, &qword_255DB54B8, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB7A98);
  }
  return result;
}

unint64_t sub_22DD987E8()
{
  unint64_t result;

  result = qword_255DB7AA8;
  if (!qword_255DB7AA8)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE23B64, &type metadata for BatchStatusView.Config.StatusType);
    atomic_store(result, (unint64_t *)&qword_255DB7AA8);
  }
  return result;
}

unint64_t sub_22DD98830()
{
  unint64_t result;

  result = qword_255DB7AB0;
  if (!qword_255DB7AB0)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE23AFC, &type metadata for BatchStatusView.Config.Button);
    atomic_store(result, (unint64_t *)&qword_255DB7AB0);
  }
  return result;
}

uint64_t sub_22DD98874()
{
  uint64_t v0;

  v0 = sub_22DE1E410();
  __swift_allocate_value_buffer(v0, qword_255DB7AC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255DB7AC0);
  return sub_22DE1E404();
}

unint64_t FBKFeedbackForm.addSandboxExtensionToURLs()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;

  v4 = MEMORY[0x24BEE4AF8];
  swift_beginAccess();
  v1 = swift_bridgeObjectRetain();
  v2 = sub_22DD98C74(v1, &v4);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_sandboxExtensionAttachments) = v2;
  swift_bridgeObjectRelease();
  return v4;
}

void sub_22DD98988(uint64_t a1@<X0>, unint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  objc_class *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  objc_super v40;
  void *v41;

  v36 = a2;
  v38 = a3;
  v34 = type metadata accessor for URLError();
  v37 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v35 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22DE1DFB4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v32 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v33 = a1;
  v13((char *)&v32 - v11, a1, v6);
  v14 = (objc_class *)type metadata accessor for SandboxExtensionURL();
  v15 = (char *)objc_allocWithZone(v14);
  v16 = &v15[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_state];
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  v17 = &v15[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_sandboxToken];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v13(&v15[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_url], (uint64_t)v12, v6);
  v40.receiver = v15;
  v40.super_class = v14;
  v18 = (char *)objc_msgSendSuper2(&v40, sel_init);
  v19 = sub_22DD98EFC();
  if (v3)
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v13(v10, v33, v6);
    v41 = v3;
    v21 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7A58);
    swift_dynamicCast();
    v22 = v39;
    v23 = (uint64_t)v35;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v35, v10, v6);
    *(_QWORD *)(v23 + *(int *)(v34 + 20)) = v22;
    v24 = v36;
    v25 = *v36;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v24 = v25;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v25 = sub_22DDFCD18(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
      *v24 = v25;
    }
    v28 = *(_QWORD *)(v25 + 16);
    v27 = *(_QWORD *)(v25 + 24);
    if (v28 >= v27 >> 1)
    {
      v25 = sub_22DDFCD18(v27 > 1, v28 + 1, 1, v25);
      *v24 = v25;
    }
    *(_QWORD *)(v25 + 16) = v28 + 1;
    sub_22DD9A9A0(v23, v25+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v28);

    v18 = 0;
  }
  else
  {
    v29 = v19;
    v30 = v20;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);

    v31 = (uint64_t *)&v18[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_sandboxToken];
    *v31 = v29;
    v31[1] = v30;
    swift_bridgeObjectRelease();
  }
  *v38 = v18;
}

uint64_t sub_22DD98C74(uint64_t a1, unint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v19[2];
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  v23 = a2;
  v5 = sub_22DE1DFB4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v20 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB7BC0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BEE4AF8];
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v12 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v21 = *(_QWORD *)(v6 + 72);
    v22 = v13;
    v19[1] = a1;
    swift_bridgeObjectRetain();
    v14 = (uint64_t)v20;
    while (1)
    {
      v22(v10, v12, v5);
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v15(v10, 0, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v10, 1, v5) == 1)
        break;
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v14, v10, v5);
      sub_22DD98988(v14, v23, &v25);
      if (v3)
      {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
      if (v25)
      {
        v24 = 0;
        MEMORY[0x22E31FC34](v16);
        if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_22DE1F3F4();
        sub_22DE1F40C();
        sub_22DE1F3E8();
        v3 = v24;
        v14 = (uint64_t)v20;
      }
      v12 += v21;
      if (!--v11)
      {
        v15(v10, 1, 1, v5);
        break;
      }
    }
  }
  else
  {
    v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v17(v10, 1, 1, v5);
  }
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_22DD98ECC(void *a1, uint64_t a2, unint64_t *a3)
{
  sub_22DD9A3B4(a1, a2, a3);
  return swift_release();
}

uint64_t sub_22DD98EFC()
{
  void *v0;
  void *v1;
  char v2;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13[4];

  v2 = sub_22DE1DF54();
  if (v1)
  {

  }
  else if ((v2 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7BB8);
    sub_22DE1DF78();
    return v13[0];
  }
  if (qword_255DB52E8 != -1)
    swift_once();
  v4 = sub_22DE1E410();
  __swift_project_value_buffer(v4, (uint64_t)qword_255DB7AC0);
  v5 = v0;
  v6 = sub_22DE1E3F8();
  v7 = sub_22DE1F4FC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v13[0] = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = sub_22DE1DF90();
    v13[3] = sub_22DDA2E30(v10, v11, v13);
    sub_22DE1F628();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22DD4B000, v6, v7, "Cannot generate sandbox extension. URL is not reachable at path: [%s]", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v9, -1, -1);
    MEMORY[0x22E320870](v8, -1, -1);

  }
  else
  {

  }
  sub_22DD9A370();
  swift_allocError();
  *v12 = 0;
  return swift_willThrow();
}

uint64_t sub_22DD99130@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  result = *MEMORY[0x24BDAC000];
  if (*MEMORY[0x24BDAC000])
  {
    sub_22DE1F334();
    sub_22DE1F2F8();
    swift_bridgeObjectRelease();
    v3 = sandbox_extension_issue_file();
    swift_release();
    if (v3)
    {
      v4 = sub_22DE1F334();
      v6 = v5;
      result = MEMORY[0x22E320870](v3, -1, -1);
      *a1 = v4;
      a1[1] = v6;
    }
    else
    {
      sub_22DD9A370();
      swift_allocError();
      *v7 = 3;
      return swift_willThrow();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_22DD99218()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (v0[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_state + 8] == 1)
  {
    v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_sandboxToken + 8];
    if (v1)
    {
      v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_sandboxToken];
      v3 = qword_255DB52E8;
      swift_bridgeObjectRetain();
      if (v3 != -1)
        swift_once();
      v4 = sub_22DE1E410();
      __swift_project_value_buffer(v4, (uint64_t)qword_255DB7AC0);
      v5 = v0;
      v6 = sub_22DE1E3F8();
      v7 = sub_22DE1F4F0();
      if (os_log_type_enabled(v6, v7))
      {
        v14 = v2;
        v8 = (uint8_t *)swift_slowAlloc();
        v9 = swift_slowAlloc();
        *(_DWORD *)v8 = 136315138;
        v15 = v9;
        v10 = sub_22DE1DF90();
        sub_22DDA2E30(v10, v11, &v15);
        sub_22DE1F628();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22DD4B000, v6, v7, "Consuming Sandbox Extension for url %s", v8, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E320870](v9, -1, -1);
        v12 = v8;
        v2 = v14;
        MEMORY[0x22E320870](v12, -1, -1);

      }
      else
      {

      }
      sub_22DD994EC(v2, v1, v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_22DD9A314();
      swift_allocError();
      *(_DWORD *)v13 = 0;
      *(_BYTE *)(v13 + 4) = 1;
      swift_willThrow();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_22DD9946C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  int v5;
  uint64_t v6;

  result = sandbox_extension_consume();
  if (result == -1)
  {
    v5 = MEMORY[0x22E31EC98]();
    sub_22DD9A314();
    swift_allocError();
    *(_DWORD *)v6 = v5;
    *(_BYTE *)(v6 + 4) = 0;
    return swift_willThrow();
  }
  else
  {
    v4 = a2 + OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_state;
    *(_QWORD *)v4 = result;
    *(_BYTE *)(v4 + 8) = 0;
  }
  return result;
}

void sub_22DD994EC(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v8;

  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_22DE1F724();
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    v5 = sandbox_extension_consume();
    if (v5 == -1)
    {
      v7 = MEMORY[0x22E31EC98]();
      sub_22DD9A314();
      swift_allocError();
      *(_DWORD *)v8 = v7;
      *(_BYTE *)(v8 + 4) = 0;
      swift_willThrow();
    }
    else
    {
      v6 = &a3[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_state];
      *(_QWORD *)v6 = v5;
      v6[8] = 0;
    }
  }
  else
  {
    if ((a1 & 0x1000000000000000) != 0)
      v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
    else
      v4 = sub_22DE1F76C();
    sub_22DD9946C(v4, (uint64_t)a3);
  }

}

void sub_22DD99624()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  v1 = &v0[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_state];
  if ((v0[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_state + 8] & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if (qword_255DB52E8 != -1)
      swift_once();
    v2 = sub_22DE1E410();
    __swift_project_value_buffer(v2, (uint64_t)qword_255DB7AC0);
    v3 = v0;
    v4 = sub_22DE1E3F8();
    v5 = sub_22DE1F4F0();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      *(_DWORD *)v6 = 136315138;
      v13 = v7;
      v8 = sub_22DE1DF90();
      sub_22DDA2E30(v8, v9, &v13);
      sub_22DE1F628();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22DD4B000, v4, v5, "Releasing Sandbox Extension for url %s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v7, -1, -1);
      MEMORY[0x22E320870](v6, -1, -1);

    }
    else
    {

    }
    v10 = sandbox_extension_release();
    if (v10 == sub_22DE1E428())
    {
      *(_QWORD *)v1 = 0;
      v1[8] = 1;
    }
    else
    {
      v11 = MEMORY[0x22E31EC98]();
      sub_22DD9A314();
      swift_allocError();
      *(_DWORD *)v12 = v11;
      *(_BYTE *)(v12 + 4) = 0;
      swift_willThrow();
    }
  }
}

void sub_22DD9986C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;

  v2 = v1;
  v4 = (void *)sub_22DE1DF3C();
  v5 = (void *)sub_22DE1F28C();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_sandboxToken + 8))
  {
    swift_bridgeObjectRetain();
    v6 = sub_22DE1F28C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = (id)sub_22DE1F28C();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);
  swift_unknownObjectRelease();

}

uint64_t sub_22DD999F8(char a1)
{
  if ((a1 & 1) != 0)
    return 7107189;
  else
    return 0x54786F62646E6173;
}

uint64_t sub_22DD99A30(char *a1, char *a2)
{
  return sub_22DDDD98C(*a1, *a2);
}

uint64_t sub_22DD99A3C()
{
  return sub_22DDDDC20();
}

uint64_t sub_22DD99A44()
{
  return sub_22DDDDD48();
}

uint64_t sub_22DD99A4C()
{
  return sub_22DDDDF84();
}

uint64_t sub_22DD99A54@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_22DE1F820();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_22DD99AB0@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_22DD999F8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_22DD99AD8()
{
  char *v0;

  return sub_22DD999F8(*v0);
}

uint64_t sub_22DD99AE0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_22DE1F820();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_22DD99B40()
{
  return 0;
}

void sub_22DD99B4C(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_22DD99B58()
{
  sub_22DD9A290();
  return sub_22DE1F9A0();
}

uint64_t sub_22DD99B80()
{
  sub_22DD9A290();
  return sub_22DE1F9AC();
}

id sub_22DD99BD4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SandboxExtensionURL();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_22DD99C5C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7B98);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DD9A290();
  sub_22DE1F994();
  v8[15] = 0;
  swift_bridgeObjectRetain();
  sub_22DE1F88C();
  if (v1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v8[14] = 1;
    sub_22DE1DFB4();
    sub_22DD9A2D4(&qword_255DB7BA0, MEMORY[0x24BDCDAE0]);
    sub_22DE1F8B0();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  }
}

id sub_22DD99DE4(_QWORD *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v20;
  objc_class *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  objc_super v29;
  char v30;

  v2 = v1;
  v4 = sub_22DE1DFB4();
  v23 = *(_QWORD *)(v4 - 8);
  v24 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7B80);
  v7 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v2[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_state];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  v11 = (uint64_t *)&v2[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_sandboxToken];
  *v11 = 0;
  v11[1] = 0;
  v12 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_22DD9A290();
  v26 = v2;
  v13 = v28;
  sub_22DE1F988();
  if (v13)
  {
    v18 = v26;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    v22 = (id)v11[1];

    swift_bridgeObjectRelease();
    type metadata accessor for SandboxExtensionURL();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v15 = v24;
    v14 = v25;
    v16 = v7;
    v30 = 0;
    *v11 = sub_22DE1F844();
    v11[1] = v17;
    swift_bridgeObjectRelease();
    v30 = 1;
    sub_22DD9A2D4(&qword_255DB7B90, MEMORY[0x24BDCDB10]);
    sub_22DE1F868();
    v20 = v26;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v26[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_url], v6, v15);

    v21 = (objc_class *)type metadata accessor for SandboxExtensionURL();
    v29.receiver = v20;
    v29.super_class = v21;
    v22 = objc_msgSendSuper2(&v29, sel_init);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  return v22;
}

id sub_22DD9A064@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v5;
  id result;

  v5 = objc_allocWithZone((Class)type metadata accessor for SandboxExtensionURL());
  result = sub_22DD99DE4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_22DD9A0B8(_QWORD *a1)
{
  return sub_22DD99C5C(a1);
}

unint64_t sub_22DD9A0D8(uint64_t a1)
{
  if ((a1 & 0x100000000) != 0)
    return 0xD00000000000001ALL;
  sub_22DE1F730();
  swift_bridgeObjectRelease();
  sub_22DE1F8C8();
  sub_22DE1F328();
  swift_bridgeObjectRelease();
  return 0xD000000000000019;
}

unint64_t sub_22DD9A19C()
{
  unsigned int *v0;

  return sub_22DD9A0D8(*v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32));
}

uint64_t sub_22DD9A1BC()
{
  return type metadata accessor for SandboxExtensionURL();
}

uint64_t type metadata accessor for SandboxExtensionURL()
{
  uint64_t result;

  result = qword_255DB7B70;
  if (!qword_255DB7B70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22DD9A200()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22DE1DFB4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SandboxExtensionURL.State()
{
  return &type metadata for SandboxExtensionURL.State;
}

unint64_t sub_22DD9A290()
{
  unint64_t result;

  result = qword_255DB7B88;
  if (!qword_255DB7B88)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE23E0C, &type metadata for SandboxExtensionURL.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DB7B88);
  }
  return result;
}

uint64_t sub_22DD9A2D4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_22DE1DFB4();
    result = MEMORY[0x22E3207B0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22DD9A314()
{
  unint64_t result;

  result = qword_255DB7BA8;
  if (!qword_255DB7BA8)
  {
    result = MEMORY[0x22E3207B0]("-Ҷ!ܨ", &type metadata for SandboxExtensionError);
    atomic_store(result, (unint64_t *)&qword_255DB7BA8);
  }
  return result;
}

uint64_t sub_22DD9A358(uint64_t a1)
{
  uint64_t v1;

  return sub_22DD9946C(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_22DD9A370()
{
  unint64_t result;

  result = qword_255DB7BB0;
  if (!qword_255DB7BB0)
  {
    result = MEMORY[0x22E3207B0](&protocol conformance descriptor for FBKAttachmentError, &type metadata for FBKAttachmentError);
    atomic_store(result, (unint64_t *)&qword_255DB7BB0);
  }
  return result;
}

void sub_22DD9A3B4(void *a1, uint64_t a2, unint64_t *a3)
{
  void *v3;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint8_t *v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  unint64_t *v26;
  uint64_t v27;

  if (*((_BYTE *)a1 + OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_state + 8) == 1)
  {
    if (qword_255DB52E8 != -1)
      swift_once();
    v7 = sub_22DE1E410();
    __swift_project_value_buffer(v7, (uint64_t)qword_255DB7AC0);
    v8 = a1;
    v9 = sub_22DE1E3F8();
    v10 = sub_22DE1F4F0();
    if (os_log_type_enabled(v9, v10))
    {
      v26 = a3;
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      *(_DWORD *)v11 = 136315138;
      v27 = v12;
      v13 = sub_22DE1DF90();
      sub_22DDA2E30(v13, v14, &v27);
      sub_22DE1F628();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22DD4B000, v9, v10, "Will consume Sandbox Extension for url %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v12, -1, -1);
      v15 = v11;
      a3 = v26;
      MEMORY[0x22E320870](v15, -1, -1);

    }
    else
    {

    }
    sub_22DD99218();
    if (v3)
    {
      v16 = v3;
      v17 = v3;
      v18 = sub_22DE1E3F8();
      v19 = sub_22DE1F4FC();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        v21 = swift_slowAlloc();
        v27 = v21;
        *(_DWORD *)v20 = 136315138;
        v22 = v3;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7A58);
        v23 = sub_22DE1F2EC();
        sub_22DDA2E30(v23, v24, &v27);
        sub_22DE1F628();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_22DD4B000, v18, v19, "Failed to access sandbox extension: %s", v20, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E320870](v21, -1, -1);
        MEMORY[0x22E320870](v20, -1, -1);
      }
      else
      {

      }
      sub_22DD9A370();
      swift_allocError();
      *v25 = 4;
      swift_willThrow();

    }
    else
    {
      sub_22DE1C060((uint64_t)v8 + OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_url, a2, a3);
      sub_22DD99624();
    }
  }
}

id sub_22DD9A768()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t *v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void (*v18)(char *, char *, uint64_t);
  id result;
  objc_class *v20;
  objc_super v21;

  v1 = sub_22DE1DFB4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB7BC0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v0[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_state];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  v9 = (uint64_t *)&v0[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_sandboxToken];
  sub_22DD70E78(0, (unint64_t *)&unk_255DB8E10);
  *v9 = 0;
  v9[1] = 0;
  v10 = v0;
  v11 = sub_22DE1F5C8();
  if (v11)
  {
    v12 = (void *)v11;
    v13 = sub_22DE1F2B0();
    v15 = v14;

  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  *v9 = v13;
  v9[1] = v15;
  swift_bridgeObjectRelease();
  sub_22DD70E78(0, (unint64_t *)&unk_255DB7BD0);
  v16 = sub_22DE1F5C8();
  if (v16)
  {
    v17 = (void *)v16;
    sub_22DE1DF84();

    v18 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
    v18(v7, v4, v1);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v7, 0, 1, v1);
    result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1);
    if ((_DWORD)result != 1)
    {
      v18(&v10[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_url], v7, v1);

      v20 = (objc_class *)type metadata accessor for SandboxExtensionURL();
      v21.receiver = v10;
      v21.super_class = v20;
      return objc_msgSendSuper2(&v21, sel_init);
    }
  }
  else
  {
    result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v7, 1, 1, v1);
  }
  __break(1u);
  return result;
}

uint64_t sub_22DD9A9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URLError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SandboxExtensionError(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SandboxExtensionError(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 5) = v3;
  return result;
}

uint64_t sub_22DD9AA44(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_22DD9AA60(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    *(_BYTE *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SandboxExtensionError()
{
  return &type metadata for SandboxExtensionError;
}

uint64_t storeEnumTagSinglePayload for SandboxExtensionURL.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22DD9AADC + 4 * byte_22DE23BD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22DD9AB10 + 4 * byte_22DE23BD0[v4]))();
}

uint64_t sub_22DD9AB10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DD9AB18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DD9AB20);
  return result;
}

uint64_t sub_22DD9AB2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DD9AB34);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22DD9AB38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DD9AB40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SandboxExtensionURL.CodingKeys()
{
  return &type metadata for SandboxExtensionURL.CodingKeys;
}

unint64_t sub_22DD9AB60()
{
  unint64_t result;

  result = qword_255DB7BE0;
  if (!qword_255DB7BE0)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE23D7C, &type metadata for SandboxExtensionURL.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DB7BE0);
  }
  return result;
}

unint64_t sub_22DD9ABA8()
{
  unint64_t result;

  result = qword_255DB7BE8;
  if (!qword_255DB7BE8)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE23CB4, &type metadata for SandboxExtensionURL.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DB7BE8);
  }
  return result;
}

unint64_t sub_22DD9ABF0()
{
  unint64_t result;

  result = qword_255DB7BF0;
  if (!qword_255DB7BF0)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE23CDC, &type metadata for SandboxExtensionURL.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DB7BF0);
  }
  return result;
}

uint64_t sub_22DD9AC34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t result;

  objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_255DCB7B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7C00);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_22DE23E60;
  v1 = sub_22DD70E78(0, (unint64_t *)&unk_255DB9C10);
  *(_QWORD *)(v0 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7C18);
  *(_QWORD *)(v0 + 32) = v1;
  v2 = type metadata accessor for FBKFeedbackForm();
  *(_QWORD *)(v0 + 88) = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7C20);
  *(_QWORD *)(v0 + 64) = v2;
  v3 = type metadata accessor for SandboxExtensionURL();
  *(_QWORD *)(v0 + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7C28);
  *(_QWORD *)(v0 + 96) = v3;
  v4 = objc_allocWithZone(MEMORY[0x24BDBCF20]);
  v5 = (void *)sub_22DE1F3C4();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_initWithArray_, v5);

  result = sub_22DE1F490();
  __break(1u);
  return result;
}

uint64_t sub_22DD9ADF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t result;

  objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_255DCE608);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7C00);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_22DE231A0;
  v1 = type metadata accessor for FBKSubmissionError();
  *(_QWORD *)(v0 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7C08);
  *(_QWORD *)(v0 + 32) = v1;
  v2 = sub_22DD70E78(0, &qword_255DB81C0);
  *(_QWORD *)(v0 + 88) = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7C10);
  *(_QWORD *)(v0 + 64) = v2;
  v3 = objc_allocWithZone(MEMORY[0x24BDBCF20]);
  v4 = (void *)sub_22DE1F3C4();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_initWithArray_, v4);

  result = sub_22DE1F490();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for ScoreLevelUp()
{
  return &type metadata for ScoreLevelUp;
}

uint64_t sub_22DD9AF9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DD9AFAC(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v23;
  uint64_t v25;

  v4 = sub_22DE1E2E4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7C30);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v25 - v12;
  if (qword_255DB53D0 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v4, (uint64_t)qword_255DC3D90);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v14, v4);
  v15 = sub_22DE1EF98();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_BYTE *)(v16 + 24) = a2 & 1;
  v17 = (uint64_t *)&v11[*(int *)(v8 + 40)];
  *v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
  swift_storeEnumTagMultiPayload();
  *((_QWORD *)v11 + 6) = sub_22DD9BBA8;
  *((_QWORD *)v11 + 7) = v16;
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)v11 = _Q0;
  *((_QWORD *)v11 + 2) = 0;
  *((_QWORD *)v11 + 3) = 0;
  *((_QWORD *)v11 + 4) = v15;
  v11[40] = 1;
  sub_22DD9BBB8((uint64_t)v11, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB75F0);
  sub_22DE1E9BC();
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_22DE20F30;
  swift_retain();
  sub_22DE1E9B0();
  sub_22DD915F0(v23);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_22DD9BC00();
  sub_22DE1EE6C();
  swift_bridgeObjectRelease();
  return sub_22DD5071C((uint64_t)v13, &qword_255DB7C30);
}

uint64_t sub_22DD9B23C@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[7];
  _BYTE v46[7];
  _BYTE v47[7];
  _QWORD v48[2];
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;

  v3 = a1 & 1;
  v4 = sub_22DE1E974();
  MEMORY[0x24BDAC7A8](v4);
  v44 = sub_22DE1F130();
  v43 = v5;
  sub_22DD9B6DC(v3, (uint64_t)v48);
  v6 = v48[0];
  v42 = v48[1];
  v41 = v49;
  v40 = v50;
  v39 = v51;
  v38 = v52;
  v7 = v54;
  v37 = v53;
  v8 = v55;
  v9 = v56;
  v10 = v57;
  sub_22DE1E968();
  sub_22DE1E95C();
  v11 = swift_retain();
  v12 = sub_22DD83F30(v11, v3);
  swift_release();
  swift_getKeyPath();
  v48[0] = v12;
  sub_22DD9BC54();
  sub_22DE1E068();
  swift_release();
  v13 = *(_QWORD *)(v12 + 24);
  result = swift_release();
  v15 = floor(sqrt((double)v13 * 0.5));
  if ((~*(_QWORD *)&v15 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v15 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v15 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v16 = (uint64_t)v15;
  if ((uint64_t)v15 >= 99)
    v16 = 99;
  v48[0] = v16;
  sub_22DE1E92C();
  sub_22DE1E95C();
  sub_22DE1E98C();
  v17 = sub_22DE1ED7C();
  v19 = v18;
  v21 = v20 & 1;
  sub_22DE1ECC8();
  v36 = v10;
  v22 = sub_22DE1ED64();
  v35 = v7;
  v24 = v23;
  v34 = v8;
  v26 = v25;
  swift_release();
  sub_22DD4FC6C(v17, v19, v21);
  swift_bridgeObjectRelease();
  sub_22DE1ECE0();
  v27 = sub_22DE1ED40();
  v29 = v28;
  v31 = v30;
  v33 = v32 & 1;
  sub_22DD4FC6C(v22, v24, v26 & 1);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a2 + 33) = v48[0];
  *(_DWORD *)(a2 + 36) = *(_DWORD *)((char *)v48 + 3);
  *(_DWORD *)(a2 + 49) = *(_DWORD *)v47;
  *(_DWORD *)(a2 + 52) = *(_DWORD *)&v47[3];
  *(_DWORD *)(a2 + 92) = *(_DWORD *)&v46[3];
  *(_DWORD *)(a2 + 89) = *(_DWORD *)v46;
  *(_DWORD *)(a2 + 121) = *(_DWORD *)v45;
  *(_DWORD *)(a2 + 124) = *(_DWORD *)&v45[3];
  *(_QWORD *)a2 = v44;
  *(_QWORD *)(a2 + 8) = v43;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v42;
  *(_BYTE *)(a2 + 32) = v41;
  *(_QWORD *)(a2 + 40) = v40;
  *(_BYTE *)(a2 + 48) = v39;
  *(_QWORD *)(a2 + 56) = v38;
  *(_QWORD *)(a2 + 64) = v37;
  *(_QWORD *)(a2 + 72) = v35;
  *(_QWORD *)(a2 + 80) = v34;
  *(_BYTE *)(a2 + 88) = v9;
  *(_QWORD *)(a2 + 96) = v36;
  *(_QWORD *)(a2 + 104) = v27;
  *(_QWORD *)(a2 + 112) = v29;
  *(_BYTE *)(a2 + 120) = v33;
  *(_QWORD *)(a2 + 128) = v31;
  swift_retain();
  sub_22DD50088(v35, v34, v9);
  swift_bridgeObjectRetain();
  sub_22DD50088(v27, v29, v33);
  swift_bridgeObjectRetain();
  sub_22DD4FC6C(v27, v29, v33);
  swift_bridgeObjectRelease();
  swift_release();
  sub_22DD4FC6C(v35, v34, v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DD9B6DC@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char KeyPath;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  char *v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52;
  uint64_t v53;
  unsigned __int8 v54;
  uint64_t v55;
  uint64_t v56;

  v3 = a1 & 1;
  v4 = sub_22DE1E2E4();
  v49 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v48 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB55D8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22DE1E974();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22DE1EF38();
  sub_22DE1F130();
  sub_22DE1E5E4();
  v47 = v51;
  v46 = v52;
  v45 = v53;
  v44 = v54;
  v42 = v56;
  v43 = v55;
  sub_22DE1E968();
  sub_22DE1E95C();
  v13 = swift_retain();
  v14 = sub_22DD83F30(v13, v3);
  swift_release();
  KeyPath = swift_getKeyPath();
  v50 = v14;
  sub_22DD9BC54();
  sub_22DE1E068();
  swift_release();
  v16 = *(_QWORD *)(v14 + 24);
  swift_release();
  v17 = floor(sqrt((double)v16 * 0.5));
  if ((~*(_QWORD *)&v17 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v17 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v17 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_7;
  }
  v40 = v4;
  v41 = v12;
  v18 = (uint64_t)v17;
  if ((uint64_t)v17 >= 99)
    v18 = 99;
  v50 = v18;
  sub_22DE1E92C();
  sub_22DE1E95C();
  sub_22DE1E98C();
  v19 = sub_22DE1ED7C();
  v21 = v20;
  v23 = v22 & 1;
  sub_22DE1ECE0();
  v24 = sub_22DE1ECD4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v8, 1, 1, v24);
  sub_22DE1ECF8();
  sub_22DD5071C((uint64_t)v8, &qword_255DB55D8);
  v8 = (char *)sub_22DE1ED64();
  v11 = v25;
  KeyPath = v26;
  swift_release();
  sub_22DD4FC6C(v19, v21, v23);
  swift_bridgeObjectRelease();
  if (qword_255DB53D0 != -1)
    goto LABEL_11;
LABEL_7:
  v27 = KeyPath & 1;
  v28 = v40;
  v29 = __swift_project_value_buffer(v40, (uint64_t)qword_255DC3D90);
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v29, v28);
  v50 = sub_22DE1EF98();
  v30 = sub_22DE1ED4C();
  v32 = v31;
  v34 = v33;
  v36 = v35 & 1;
  sub_22DD4FC6C((uint64_t)v8, (uint64_t)v11, v27);
  swift_release();
  swift_bridgeObjectRelease();
  v37 = v47;
  *(_QWORD *)a2 = v41;
  *(_QWORD *)(a2 + 8) = v37;
  *(_BYTE *)(a2 + 16) = v46;
  *(_QWORD *)(a2 + 24) = v45;
  *(_BYTE *)(a2 + 32) = v44;
  v38 = v42;
  *(_QWORD *)(a2 + 40) = v43;
  *(_QWORD *)(a2 + 48) = v38;
  *(_QWORD *)(a2 + 56) = v30;
  *(_QWORD *)(a2 + 64) = v32;
  *(_BYTE *)(a2 + 72) = v36;
  *(_QWORD *)(a2 + 80) = v34;
  swift_retain();
  sub_22DD50088(v30, v32, v36);
  swift_bridgeObjectRetain();
  sub_22DD4FC6C(v30, v32, v36);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DD9BB78()
{
  uint64_t v0;

  return sub_22DD9AFAC(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t sub_22DD9BB84()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DD9BBA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DD9B23C(*(_BYTE *)(v1 + 24), a1);
}

uint64_t sub_22DD9BBB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_22DD9BC00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DB7C38;
  if (!qword_255DB7C38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7C30);
    result = MEMORY[0x22E3207B0](&unk_22DE25F78, v1);
    atomic_store(result, (unint64_t *)&qword_255DB7C38);
  }
  return result;
}

unint64_t sub_22DD9BC54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DB58F0;
  if (!qword_255DB58F0)
  {
    v1 = type metadata accessor for ScoreController();
    result = MEMORY[0x22E3207B0](&protocol conformance descriptor for ScoreController, v1);
    atomic_store(result, (unint64_t *)&qword_255DB58F0);
  }
  return result;
}

uint64_t sub_22DD9BC9C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7C30);
  sub_22DD9BC00();
  return swift_getOpaqueTypeConformance2();
}

uint64_t FBKDraftError.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0xD000000000000013;
  switch(a1)
  {
    case 0:
      result = 0x206E776F6E6B6E55;
      break;
    case 1:
      return result;
    case 2:
      result = 0xD000000000000015;
      break;
    case 3:
      result = 0xD000000000000022;
      break;
    case 4:
      result = 0x2064696C61766E49;
      break;
    case 5:
      result = 0x6F7774656E206F4ELL;
      break;
    case 6:
      result = 0x6E61432072657355;
      break;
    case 7:
      result = 0xD000000000000018;
      break;
    case 8:
      result = 0xD000000000000020;
      break;
    default:
      result = sub_22DE1F8F8();
      __break(1u);
      break;
  }
  return result;
}

unint64_t static FBKDraftError.withRawValue(_:)(unint64_t a1)
{
  unint64_t result;
  char v2;

  result = sub_22DD9C050(a1);
  if ((v2 & 1) != 0)
    return 0;
  return result;
}

unint64_t FBKDraftError.init(rawValue:)(unint64_t a1)
{
  return sub_22DD9C050(a1);
}

unint64_t static FBKDraftError._nsErrorDomain.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_22DD9BE78()
{
  sub_22DE1F964();
  sub_22DE1F268();
  return sub_22DE1F97C();
}

uint64_t sub_22DD9BED8()
{
  sub_22DD9C220();
  return sub_22DE1DE88();
}

uint64_t sub_22DD9BF10()
{
  sub_22DE1F964();
  sub_22DE1F268();
  return sub_22DE1F97C();
}

unint64_t sub_22DD9BF6C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_22DD9C050(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_22DD9BF9C()
{
  uint64_t *v0;

  return FBKDraftError.description.getter(*v0);
}

uint64_t sub_22DD9BFA4()
{
  sub_22DD9C220();
  return sub_22DE1DEA0();
}

uint64_t sub_22DD9BFCC()
{
  sub_22DD9C220();
  return sub_22DE1DE94();
}

unint64_t sub_22DD9BFF4()
{
  return 0xD000000000000016;
}

uint64_t sub_22DD9C010()
{
  sub_22DD9C220();
  return sub_22DE1DE7C();
}

unint64_t sub_22DD9C050(unint64_t result)
{
  if (result > 8)
    return 0;
  return result;
}

unint64_t sub_22DD9C064()
{
  unint64_t result;

  result = qword_255DB7C40;
  if (!qword_255DB7C40)
  {
    result = MEMORY[0x22E3207B0](&protocol conformance descriptor for FBKDraftError, &type metadata for FBKDraftError);
    atomic_store(result, (unint64_t *)&qword_255DB7C40);
  }
  return result;
}

unint64_t sub_22DD9C0AC()
{
  unint64_t result;

  result = qword_255DB7C48;
  if (!qword_255DB7C48)
  {
    result = MEMORY[0x22E3207B0](&protocol conformance descriptor for FBKDraftError, &type metadata for FBKDraftError);
    atomic_store(result, (unint64_t *)&qword_255DB7C48);
  }
  return result;
}

unint64_t sub_22DD9C0F4()
{
  unint64_t result;

  result = qword_255DB7C50;
  if (!qword_255DB7C50)
  {
    result = MEMORY[0x22E3207B0](&protocol conformance descriptor for FBKDraftError, &type metadata for FBKDraftError);
    atomic_store(result, (unint64_t *)&qword_255DB7C50);
  }
  return result;
}

unint64_t sub_22DD9C13C()
{
  unint64_t result;

  result = qword_255DB7C58;
  if (!qword_255DB7C58)
  {
    result = MEMORY[0x22E3207B0](&protocol conformance descriptor for FBKDraftError, &type metadata for FBKDraftError);
    atomic_store(result, (unint64_t *)&qword_255DB7C58);
  }
  return result;
}

unint64_t sub_22DD9C184()
{
  unint64_t result;

  result = qword_255DB7C60;
  if (!qword_255DB7C60)
  {
    result = MEMORY[0x22E3207B0](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_255DB7C60);
  }
  return result;
}

unint64_t sub_22DD9C1CC()
{
  unint64_t result;

  result = qword_255DB7C68;
  if (!qword_255DB7C68)
  {
    result = MEMORY[0x22E3207B0](&protocol conformance descriptor for FBKDraftError, &type metadata for FBKDraftError);
    atomic_store(result, (unint64_t *)&qword_255DB7C68);
  }
  return result;
}

ValueMetadata *type metadata accessor for FBKDraftError()
{
  return &type metadata for FBKDraftError;
}

unint64_t sub_22DD9C220()
{
  unint64_t result;

  result = qword_255DB7C70;
  if (!qword_255DB7C70)
  {
    result = MEMORY[0x22E3207B0](&protocol conformance descriptor for FBKDraftError, &type metadata for FBKDraftError);
    atomic_store(result, (unint64_t *)&qword_255DB7C70);
  }
  return result;
}

uint64_t sub_22DD9C264@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t (*v30)(char *);
  uint64_t v31;
  char *v32;

  v4 = v3;
  v30 = a1;
  v7 = sub_22DE1DFB4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v32 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB7BC0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a2 + 16);
  v27[0] = a3;
  v27[1] = a2;
  if (v13)
  {
    v14 = a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v28 = *(_QWORD *)(v8 + 72);
    v29 = v15;
    swift_bridgeObjectRetain();
    v16 = v8;
    while (1)
    {
      v31 = v13;
      v29(v12, v14, v7);
      v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
      v17((uint64_t)v12, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v7) == 1)
        break;
      v18 = v16;
      v19 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
      v20 = v4;
      v21 = v32;
      v19(v32, v12, v7);
      v22 = v30(v21);
      v4 = v20;
      if (v20)
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v32, v7);
        return swift_bridgeObjectRelease();
      }
      if ((v22 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v26 = v27[0];
        v19((char *)v27[0], v32, v7);
        v23 = v26;
        v24 = 0;
        return v17(v23, v24, 1, v7);
      }
      v16 = v18;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v32, v7);
      v14 += v28;
      v13 = v31 - 1;
      if (v31 == 1)
        goto LABEL_9;
    }
  }
  else
  {
    v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
    swift_bridgeObjectRetain();
LABEL_9:
    v17((uint64_t)v12, 1, 1, v7);
  }
  swift_bridgeObjectRelease();
  v23 = v27[0];
  v24 = 1;
  return v17(v23, v24, 1, v7);
}

uint64_t sub_22DD9C498(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_22DD9C4C4()
{
  uint64_t v0;

  v0 = sub_22DE1E410();
  __swift_allocate_value_buffer(v0, qword_255DB7C78);
  __swift_project_value_buffer(v0, (uint64_t)qword_255DB7C78);
  return sub_22DE1E404();
}

uint64_t sub_22DD9C544()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_localClient;
  swift_beginAccess();
  return MEMORY[0x22E32090C](v1);
}

uint64_t sub_22DD9C58C()
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_22DD9C5E4(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_localClient;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x22E32090C](v5);
  return sub_22DD9C654;
}

void sub_22DD9C654(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

void sub_22DD9C6C0(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  void *v9;
  NSObject *v10;
  id v11;
  id v12;
  unsigned int v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t aBlock[6];
  uint64_t v29;
  objc_super v30;

  v2 = v1;
  v30.receiver = v2;
  v30.super_class = (Class)type metadata accessor for DraftingExtensionViewController();
  objc_msgSendSuper2(&v30, sel_viewWillDisappear_, a1 & 1);
  if (qword_255DB52F0 != -1)
    swift_once();
  v4 = sub_22DE1E410();
  __swift_project_value_buffer(v4, (uint64_t)qword_255DB7C78);
  v5 = sub_22DE1E3F8();
  v6 = sub_22DE1F514();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    aBlock[0] = v8;
    *(_DWORD *)v7 = 136446210;
    v29 = sub_22DDA2E30(0xD000000000000015, 0x800000022DE29CB0, aBlock);
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v5, v6, "%{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v8, -1, -1);
    MEMORY[0x22E320870](v7, -1, -1);
  }

  v9 = *(void **)&v2[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_bugFormTableViewController];
  if (v9)
  {
    v10 = v9;
    v11 = -[NSObject presentedViewController](v10, sel_presentedViewController);
    v12 = v11;
    if (v11)

    v13 = -[NSObject isBeingDismissedBySelf](v10, sel_isBeingDismissedBySelf);
    v14 = sub_22DE1E3F8();
    v15 = sub_22DE1F514();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      *(_DWORD *)v16 = 67109376;
      LODWORD(aBlock[0]) = v13;
      sub_22DE1F628();
      *(_WORD *)(v16 + 8) = 1024;
      LODWORD(aBlock[0]) = v12 != 0;
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v14, v15, "DraftingExtensionViewController will disappear. Did BFTVC dismiss self? %{BOOL}d. Did BFTVC present another view? %{BOOL}d", (uint8_t *)v16, 0xEu);
      MEMORY[0x22E320870](v16, -1, -1);
    }

    if ((v13 & 1) == 0 && !v12)
    {
      v17 = sub_22DE1E3F8();
      v18 = sub_22DE1F514();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_22DD4B000, v17, v18, "Controller is being dismissed by parent. Will delete draft", v19, 2u);
        MEMORY[0x22E320870](v19, -1, -1);
      }

      aBlock[4] = (uint64_t)sub_22DD9CBCC;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_22DD9CDA8;
      aBlock[3] = (uint64_t)&block_descriptor_2;
      v20 = _Block_copy(aBlock);
      -[NSObject _deleteCurrentDraftWithCompletion:](v10, sel__deleteCurrentDraftWithCompletion_, v20);
      _Block_release(v20);
      v21 = sub_22DE1E3F8();
      v22 = sub_22DE1F514();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_22DD4B000, v21, v22, "will delete all bug sessions", v23, 2u);
        MEMORY[0x22E320870](v23, -1, -1);
      }

      v24 = -[NSObject devicesController](v10, sel_devicesController);
      objc_msgSend(v24, sel_abortAllSessions);

    }
  }
  else
  {
    v10 = sub_22DE1E3F8();
    v25 = sub_22DE1F514();
    if (os_log_type_enabled(v10, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      aBlock[0] = v27;
      *(_DWORD *)v26 = 136446210;
      v29 = sub_22DDA2E30(0xD000000000000015, 0x800000022DE29CB0, aBlock);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v10, v25, "No BFTVC on %{public}s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v27, -1, -1);
      MEMORY[0x22E320870](v26, -1, -1);
    }
  }

}

void sub_22DD9CBCC(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  NSObject *oslog;
  uint64_t v12;

  if (qword_255DB52F0 != -1)
    swift_once();
  v2 = sub_22DE1E410();
  __swift_project_value_buffer(v2, (uint64_t)qword_255DB7C78);
  v3 = a1;
  v4 = a1;
  oslog = sub_22DE1E3F8();
  v5 = sub_22DE1F514();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v12 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7DA0);
    v9 = sub_22DE1F2EC();
    sub_22DDA2E30(v9, v10, &v12);
    sub_22DE1F628();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22DD4B000, oslog, v5, "Deleted draft. Error? %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v7, -1, -1);
    MEMORY[0x22E320870](v6, -1, -1);

  }
  else
  {

  }
}

void sub_22DD9CDA8(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

void sub_22DD9CE3C(char a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DraftingExtensionViewController();
  objc_msgSendSuper2(&v3, sel_viewDidAppear_, a1 & 1);
  sub_22DE1E0B0();
  sub_22DD9E570();
}

void sub_22DD9CEE8()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  objc_super v17;

  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for DraftingExtensionViewController();
  objc_msgSendSuper2(&v17, sel_viewDidLoad);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD398]), sel_init);
  objc_msgSend(v1, sel_setActivityIndicatorViewStyle_, 101);
  objc_msgSend(v1, sel_startAnimating);
  v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = v2;
  objc_msgSend(v2, sel_addSubview_, v1);

  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7CA0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_22DE24100;
  v5 = objc_msgSend(v1, sel_centerXAnchor);
  v6 = objc_msgSend(v0, sel_view);
  if (!v6)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, sel_centerXAnchor);

  v9 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v8);
  *(_QWORD *)(v4 + 32) = v9;
  v10 = objc_msgSend(v1, sel_centerYAnchor);
  v11 = objc_msgSend(v0, sel_view);
  if (v11)
  {
    v12 = v11;
    v13 = (void *)objc_opt_self();
    v14 = objc_msgSend(v12, sel_centerYAnchor);

    v15 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v14);
    *(_QWORD *)(v4 + 40) = v15;
    sub_22DE1F3E8();
    sub_22DD70E78(0, &qword_255DB86D0);
    v16 = (void *)sub_22DE1F3C4();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_activateConstraints_, v16);

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_22DD9D190()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  unsigned __int8 v6;
  id v7;
  uint64_t v8;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_session];
  if (v1)
  {
    v2 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v3 = *(_QWORD *)(v1 + 80);
    *(_QWORD *)(v1 + 80) = sub_22DDA4770;
    *(_QWORD *)(v1 + 88) = v2;
    swift_retain();
    swift_retain_n();
    sub_22DD50DE0(v3);
    swift_unknownObjectWeakAssign();
    v4 = (void *)objc_opt_self();
    v5 = objc_msgSend(v4, sel_standardUserDefaults);
    v6 = sub_22DDD5EC8();

    v7 = objc_msgSend(v4, sel_standardUserDefaults);
    LOBYTE(v5) = sub_22DDD5FE0();

    v8 = swift_allocObject();
    swift_weakInit();
    sub_22DDC60A0(v0, v6 & 1, v5 & 1, v1, v8);
    swift_release();
    swift_release_n();
    swift_release();
  }
}

void sub_22DD9D2F4(void *a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void (**v21)(char *, uint64_t);
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  void (**v29)(char *, uint64_t);
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (**v39)(char *, uint64_t);
  _QWORD aBlock[6];

  v6 = sub_22DE1F1B4();
  v39 = *(void (***)(char *, uint64_t))(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_22DE1F1D8();
  v9 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22DE1E410();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v16 = MEMORY[0x22E32090C](a3 + 16);
  if (v16)
  {
    v17 = (char *)v16;
    if ((a2 & 1) != 0)
    {
      if (a1 == (void *)6)
      {
        sub_22DD9D8A8();

      }
      else if (a1 == (void *)5)
      {
        sub_22DD9DE28();

      }
      else
      {
        if (qword_255DB52F0 != -1)
          swift_once();
        __swift_project_value_buffer(v12, (uint64_t)qword_255DB7C78);
        v30 = sub_22DE1E3F8();
        v31 = sub_22DE1F4FC();
        if (os_log_type_enabled(v30, v31))
        {
          v32 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v32 = 0;
          _os_log_impl(&dword_22DD4B000, v30, v31, "Failed to authenticate", v32, 2u);
          MEMORY[0x22E320870](v32, -1, -1);
        }

        sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
        v33 = (void *)sub_22DE1F574();
        v34 = swift_allocObject();
        *(_QWORD *)(v34 + 16) = v17;
        *(_QWORD *)(v34 + 24) = a1;
        aBlock[4] = sub_22DDA47C4;
        aBlock[5] = v34;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_22DD9C498;
        aBlock[3] = &block_descriptor_63;
        v35 = _Block_copy(aBlock);
        v36 = v17;
        swift_release();
        sub_22DE1F1CC();
        aBlock[0] = MEMORY[0x24BEE4AF8];
        sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
        sub_22DD78E50();
        sub_22DE1F67C();
        MEMORY[0x22E31FDFC](0, v11, v8, v35);
        _Block_release(v35);

        v39[1](v8, v6);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v38);
      }
    }
    else
    {
      v18 = qword_255DB52F0;
      v19 = a1;
      if (v18 != -1)
        swift_once();
      v20 = __swift_project_value_buffer(v12, (uint64_t)qword_255DB7C78);
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v20, v12);
      v21 = (void (**)(char *, uint64_t))v19;
      v22 = sub_22DE1E3F8();
      v23 = sub_22DE1F514();
      if (!os_log_type_enabled(v22, v23))
      {
        sub_22DDA47CC(a1, 0);
        sub_22DDA47CC(a1, 0);
        goto LABEL_12;
      }
      v24 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v24 = 134349056;
      v39 = v21;
      v25 = objc_msgSend(v21, sel_ID);
      if (v25)
      {
        v26 = v25;
        v38 = (uint64_t)(v24 + 4);
        v27 = objc_msgSend(v25, sel_integerValue);

        sub_22DDA47CC(a1, 0);
        aBlock[0] = v27;
        sub_22DE1F628();
        sub_22DDA47CC(a1, 0);
        _os_log_impl(&dword_22DD4B000, v22, v23, "Did start Feedback Session with Form [%{public}ld]", v24, 0xCu);
        MEMORY[0x22E320870](v24, -1, -1);
        v21 = v39;
LABEL_12:

        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        v28 = *(void **)&v17[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_formStub];
        *(_QWORD *)&v17[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_formStub] = a1;
        v29 = v21;

        v17[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_shouldInitializeViews] = 1;
        sub_22DD9E570();

        sub_22DDA47CC(a1, 0);
        return;
      }
      sub_22DDA47CC(a1, 0);
      __break(1u);
    }
  }
}

void sub_22DD9D804(uint64_t a1)
{
  void (*v1)(void);
  id v2;

  v1 = *(void (**)(void))(a1 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_setFeedbackFormReply);
  if (v1)
  {
    sub_22DD70E78(0, &qword_255DB7D70);
    swift_retain();
    v2 = (id)sub_22DE1F5E0();
    v1();
    sub_22DD50DE0((uint64_t)v1);

  }
}

void sub_22DD9D8A8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t aBlock;
  uint64_t v27;
  void (*v28)(uint64_t, void *);
  void *v29;
  void *v30;
  uint64_t v31;

  v1 = v0;
  if (qword_255DB52F0 != -1)
    swift_once();
  v2 = sub_22DE1E410();
  __swift_project_value_buffer(v2, (uint64_t)qword_255DB7C78);
  v3 = sub_22DE1E3F8();
  v4 = sub_22DE1F4E4();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_22DD4B000, v3, v4, "Showing user cancelled alert", v5, 2u);
    MEMORY[0x22E320870](v5, -1, -1);
  }

  type metadata accessor for FBKFeedbackForm();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_22DE1DED0();

  v9 = objc_msgSend(v7, (SEL)&selRef_controller_didAttachLocalFile_ + 1, ObjCClassFromMetadata, 0x800000022DE2A130);
  sub_22DE1DED0();

  v10 = (void *)sub_22DE1F28C();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_22DE1F28C();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v10, v11, 1, 0x800000022DE2A200);

  v13 = objc_msgSend(v7, (SEL)&selRef_controller_didAttachLocalFile_ + 1, ObjCClassFromMetadata);
  sub_22DE1DED0();

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v1;
  v15 = v1;
  v16 = (void *)sub_22DE1F28C();
  swift_bridgeObjectRelease();
  v30 = sub_22DDA4708;
  v31 = v14;
  aBlock = MEMORY[0x24BDAC760];
  v27 = 1107296256;
  v28 = sub_22DD9DDD8;
  v29 = &block_descriptor_45;
  v17 = _Block_copy(&aBlock);
  swift_release();
  v18 = (void *)objc_opt_self();
  v19 = objc_msgSend(v18, sel_actionWithTitle_style_handler_, v16, 0, v17, 0x800000022DE2A270);
  _Block_release(v17);

  objc_msgSend(v12, sel_addAction_, v19);
  v20 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_22DE1DED0();

  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v15;
  v22 = v15;
  v23 = (void *)sub_22DE1F28C();
  swift_bridgeObjectRelease();
  v30 = sub_22DDA472C;
  v31 = v21;
  aBlock = MEMORY[0x24BDAC760];
  v27 = 1107296256;
  v28 = sub_22DD9DDD8;
  v29 = &block_descriptor_51;
  v24 = _Block_copy(&aBlock);
  swift_release();
  v25 = objc_msgSend(v18, sel_actionWithTitle_style_handler_, v23, 0, v24, 0x800000022DE2A310);
  _Block_release(v24);

  objc_msgSend(v12, sel_addAction_, v25);
  objc_msgSend(v22, sel_presentViewController_animated_completion_, v12, 1, 0);

}

void sub_22DD9DDD8(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void sub_22DD9DE28()
{
  void *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t aBlock;
  uint64_t v27;
  void (*v28)(uint64_t, void *);
  void *v29;
  void *v30;
  uint64_t v31;

  v1 = v0;
  if (qword_255DB52F0 != -1)
    swift_once();
  v2 = sub_22DE1E410();
  __swift_project_value_buffer(v2, (uint64_t)qword_255DB7C78);
  v3 = sub_22DE1E3F8();
  v4 = sub_22DE1F4E4();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_22DD4B000, v3, v4, "Showing no network alert", v5, 2u);
    MEMORY[0x22E320870](v5, -1, -1);
  }

  type metadata accessor for FBKFeedbackForm();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_22DE1DED0();

  v9 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000022DE29EE0);
  sub_22DE1DED0();

  v10 = (void *)sub_22DE1F28C();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_22DE1F28C();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v10, v11, 1, 0x800000022DE29F80);

  v13 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_22DE1DED0();

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v1;
  v15 = v1;
  v16 = (void *)sub_22DE1F28C();
  swift_bridgeObjectRelease();
  v30 = sub_22DDA46C4;
  v31 = v14;
  aBlock = MEMORY[0x24BDAC760];
  v27 = 1107296256;
  v28 = sub_22DD9DDD8;
  v29 = &block_descriptor_33;
  v17 = _Block_copy(&aBlock);
  swift_release();
  v18 = (void *)objc_opt_self();
  v19 = objc_msgSend(v18, sel_actionWithTitle_style_handler_, v16, 0, v17, 0x800000022DE29FF0);
  _Block_release(v17);

  objc_msgSend(v12, sel_addAction_, v19);
  v20 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_22DE1DED0();

  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v15;
  v22 = v15;
  v23 = (void *)sub_22DE1F28C();
  swift_bridgeObjectRelease();
  v30 = sub_22DDA46E8;
  v31 = v21;
  aBlock = MEMORY[0x24BDAC760];
  v27 = 1107296256;
  v28 = sub_22DD9DDD8;
  v29 = &block_descriptor_39;
  v24 = _Block_copy(&aBlock);
  swift_release();
  v25 = objc_msgSend(v18, sel_actionWithTitle_style_handler_, v23, 0, v24, 0x800000022DE2A0A0);
  _Block_release(v24);

  objc_msgSend(v12, sel_addAction_, v25);
  objc_msgSend(v22, sel_presentViewController_animated_completion_, v12, 1, 0);

}

void sub_22DD9E334(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void (*v9)(void);
  id v10;

  if (qword_255DB52F0 != -1)
    swift_once();
  v5 = sub_22DE1E410();
  __swift_project_value_buffer(v5, (uint64_t)qword_255DB7C78);
  v6 = sub_22DE1E3F8();
  v7 = sub_22DE1F514();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_22DD4B000, v6, v7, a3, v8, 2u);
    MEMORY[0x22E320870](v8, -1, -1);
  }

  v9 = *(void (**)(void))(a2 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_setFeedbackFormReply);
  if (v9)
  {
    sub_22DD70E78(0, &qword_255DB7D70);
    swift_retain();
    v10 = (id)sub_22DE1F5E0();
    v9();
    sub_22DD50DE0((uint64_t)v9);

  }
}

uint64_t sub_22DD9E490(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  if (qword_255DB52F0 != -1)
    swift_once();
  v4 = sub_22DE1E410();
  __swift_project_value_buffer(v4, (uint64_t)qword_255DB7C78);
  v5 = sub_22DE1E3F8();
  v6 = sub_22DE1F514();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_22DD4B000, v5, v6, a3, v7, 2u);
    MEMORY[0x22E320870](v7, -1, -1);
  }

  return sub_22DD9D190();
}

void sub_22DD9E570()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  char *v24;
  void *v25;
  char *v26;
  char *v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  unsigned __int8 *v41;
  char *v42;
  unsigned __int8 *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 *v52;
  char *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  unint64_t v59;
  uint64_t v60;
  id v61;
  char *v62;
  unsigned __int8 *v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  unsigned __int8 *v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t *v77;
  unint64_t v78;
  uint64_t v79;
  unsigned __int8 *v80;
  id v81;
  id v82;
  id v83;
  id v84;
  void *v85;
  uint64_t inited;
  void *v87;
  void *v88;
  uint64_t v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  unint64_t v95;
  id v96;
  void *v97;
  void *v98;
  id v99;
  id v100;
  void **v101;
  void *v102;
  id v103;
  id v104;
  id v105;
  id v106;
  void *v107;
  unsigned __int8 *v108;
  char *v109;
  unsigned __int8 *v110;
  NSObject *v111;
  os_log_type_t v112;
  _BOOL4 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  void *v117;
  unint64_t v118;
  uint64_t v119;
  id v120;
  void *v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  void *v126;
  char *v127;
  NSObject *v128;
  os_log_type_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unsigned __int8 *v137;
  NSObject *v138;
  os_log_type_t v139;
  uint8_t *v140;
  uint64_t v141;
  id v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  id v147;
  uint64_t v148;
  void *v149;
  uint64_t v150;
  id v151;
  char *v152;
  unsigned __int8 *v153;
  NSObject *v154;
  os_log_type_t v155;
  uint64_t v156;
  uint64_t v157;
  unsigned __int8 *v158;
  uint64_t *v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unsigned __int8 v163;
  uint64_t v164;
  char *v165;
  NSObject *v166;
  os_log_type_t v167;
  _BOOL4 v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t *v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  NSObject *v177;
  os_log_type_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t *v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  NSObject *v187;
  os_log_type_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t *v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unsigned __int8 *v195;
  unsigned __int8 *v196;
  char *v197;
  NSObject *v198;
  os_log_type_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t *v202;
  unint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  char *v207;
  id v208;
  void *v209;
  id v210;
  id v211;
  void *v212;
  char *v213;
  char *v214;
  unint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  void *v222;
  void *v223;
  void *v224;
  id v225;
  id v226;
  void *v227;
  void *v228;
  uint64_t v229;
  id v230;
  void *v231;
  id v232;
  NSObject *v233;
  os_log_type_t v234;
  uint8_t *v235;
  void *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  NSObject *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t *v243;
  uint64_t v244;
  unsigned __int8 *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  void *v249;
  void *v250;
  id v251;
  id v252;
  uint64_t v253;
  void *v254;
  char *v255;
  void *v256;
  _QWORD v257[2];
  id v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  id v262;
  unsigned __int8 *v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  unsigned __int8 *v267;
  uint64_t v268;
  id v269;
  char *v270;
  NSObject *v271;
  _QWORD v272[10];
  unsigned __int8 *v273;
  uint64_t v274;
  void (*v275)(uint64_t, void *);
  void *v276;
  void *v277;
  uint64_t v278;

  v1 = v0;
  v268 = type metadata accessor for URLError();
  v2 = *(_QWORD *)(v268 - 8);
  MEMORY[0x24BDAC7A8](v268);
  v270 = (char *)v257 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
    __break(1u);
LABEL_123:
    __break(1u);
    goto LABEL_124;
  }
  v5 = v4;
  v6 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  objc_msgSend(v5, sel_setBackgroundColor_, v6);

  v7 = *(void **)&v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_formStub];
  if (!v7)
    goto LABEL_17;
  v8 = OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_shouldInitializeViews;
  if (v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_shouldInitializeViews] != 1)
    goto LABEL_17;
  v9 = v7;
  v10 = objc_msgSend(v1, sel_view);
  if (!v10)
  {
LABEL_124:
    __break(1u);
    goto LABEL_125;
  }
  v11 = v10;
  v12 = objc_msgSend(v10, sel_window);

  if (!v12)
  {

LABEL_17:
    if (qword_255DB52F0 != -1)
      swift_once();
    v38 = sub_22DE1E410();
    __swift_project_value_buffer(v38, (uint64_t)qword_255DB7C78);
    v271 = sub_22DE1E3F8();
    v39 = sub_22DE1F4E4();
    if (os_log_type_enabled(v271, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      _os_log_impl(&dword_22DD4B000, v271, v39, "Not ready to initialize views", v40, 2u);
      MEMORY[0x22E320870](v40, -1, -1);
    }

    return;
  }
  v1[v8] = 0;
  v13 = *(void **)&v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_form];
  if (!v13)
    goto LABEL_129;
  v261 = OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_form;
  v14 = qword_255DB52F0;
  v15 = v13;
  if (v14 != -1)
    swift_once();
  v266 = sub_22DE1E410();
  v271 = __swift_project_value_buffer(v266, (uint64_t)qword_255DB7C78);
  v16 = sub_22DE1E3F8();
  v17 = sub_22DE1F514();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_22DD4B000, v16, v17, "Initializing Views", v18, 2u);
    MEMORY[0x22E320870](v18, -1, -1);
  }

  sub_22DD70E78(0, &qword_255DB7D80);
  v19 = (void *)MEMORY[0x22E31FD54]();
  objc_opt_self();
  v20 = swift_dynamicCastObjCClass();
  if (!v20)
  {

LABEL_129:
    sub_22DE1F7CC();
    __break(1u);
    return;
  }
  v21 = (id)v20;
  v22 = *(void **)&v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_bugFormTableViewController];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_bugFormTableViewController] = v20;
  v23 = v19;

  objc_msgSend(v21, sel_setDelegate_, v1);
  v262 = v9;
  objc_msgSend(v21, sel_setPendingStub_, v9);
  objc_msgSend(v21, sel_setCanShowTopicPicker_, 0);
  v24 = &v15[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_localizedAttachmentLegalText];
  swift_beginAccess();
  if (*((_QWORD *)v24 + 1))
  {
    swift_bridgeObjectRetain();
    v25 = (void *)sub_22DE1F28C();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setLocalizedAttachmentLegalText_, v25);

  }
  v26 = &v15[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_authenticationMethod];
  swift_beginAccess();
  objc_msgSend(v21, sel_setShouldShowUserSwitcherInForm_, *v26 != 0);
  v27 = v15;
  v28 = v23;
  v29 = sub_22DE1E3F8();
  v30 = sub_22DE1F514();
  v31 = os_log_type_enabled(v29, v30);
  v265 = v1;
  v269 = v21;
  v260 = v2;
  if (v31)
  {
    v32 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v273 = (unsigned __int8 *)v33;
    *(_DWORD *)v32 = 136446466;
    v34 = (uint64_t *)&v27[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    v36 = *v34;
    v35 = v34[1];
    swift_bridgeObjectRetain();
    v272[0] = sub_22DDA2E30(v36, v35, (uint64_t *)&v273);
    sub_22DE1F628();

    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 1026;
    LODWORD(v272[0]) = objc_msgSend(v269, sel_shouldShowUserSwitcherInForm);
    sub_22DE1F628();

    _os_log_impl(&dword_22DD4B000, v29, v30, "Form [%{public}s]: shows user switcher: [%{BOOL,public}d]", (uint8_t *)v32, 0x12u);
    swift_arrayDestroy();
    v37 = v33;
    v21 = v269;
    MEMORY[0x22E320870](v37, -1, -1);
    MEMORY[0x22E320870](v32, -1, -1);

  }
  else
  {

  }
  v41 = (unsigned __int8 *)&v27[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_autoGathersDiagnosticExtensions];
  swift_beginAccess();
  objc_msgSend(v21, sel_setAutoGathersDiagnosticExtensions_, *v41);
  v42 = v27;
  v43 = (unsigned __int8 *)v28;
  v44 = sub_22DE1E3F8();
  v45 = sub_22DE1F514();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = swift_slowAlloc();
    v47 = swift_slowAlloc();
    v273 = (unsigned __int8 *)v47;
    *(_DWORD *)v46 = 136446466;
    v48 = (uint64_t *)&v42[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    v50 = *v48;
    v49 = v48[1];
    swift_bridgeObjectRetain();
    v272[0] = sub_22DDA2E30(v50, v49, (uint64_t *)&v273);
    sub_22DE1F628();

    swift_bridgeObjectRelease();
    *(_WORD *)(v46 + 12) = 1026;
    LODWORD(v272[0]) = objc_msgSend(v269, sel_autoGathersDiagnosticExtensions);
    sub_22DE1F628();

    _os_log_impl(&dword_22DD4B000, v44, v45, "Form [%{public}s]: autoGathersDiagnosticExtensions: [%{BOOL,public}d]", (uint8_t *)v46, 0x12u);
    swift_arrayDestroy();
    v51 = v47;
    v21 = v269;
    MEMORY[0x22E320870](v51, -1, -1);
    MEMORY[0x22E320870](v46, -1, -1);

  }
  else
  {

  }
  v52 = (unsigned __int8 *)&v42[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_alwaysDeletesDrafts];
  swift_beginAccess();
  objc_msgSend(v21, sel_setAlwaysDeletesDrafts_, *v52);
  v53 = v42;
  v54 = sub_22DE1E3F8();
  v55 = sub_22DE1F514();
  if (os_log_type_enabled(v54, v55))
  {
    v56 = swift_slowAlloc();
    v57 = swift_slowAlloc();
    v273 = (unsigned __int8 *)v57;
    *(_DWORD *)v56 = 136446466;
    v267 = v43;
    v58 = (uint64_t *)&v53[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    v60 = *v58;
    v59 = v58[1];
    swift_bridgeObjectRetain();
    v272[0] = sub_22DDA2E30(v60, v59, (uint64_t *)&v273);
    v43 = v267;
    sub_22DE1F628();
    swift_bridgeObjectRelease();
    *(_WORD *)(v56 + 12) = 1026;
    LODWORD(v272[0]) = *v52;
    sub_22DE1F628();

    _os_log_impl(&dword_22DD4B000, v54, v55, "Form [%{public}s]: alwaysDeletesDrafts: [%{BOOL,public}d]", (uint8_t *)v56, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v57, -1, -1);
    MEMORY[0x22E320870](v56, -1, -1);

  }
  else
  {

  }
  v61 = v269;
  objc_msgSend(v269, sel_setShowInlineUserInfo_, v53[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__showInlineUserInfo]);
  v62 = v53;
  v63 = v43;
  v64 = sub_22DE1E3F8();
  v65 = sub_22DE1F514();
  if (os_log_type_enabled(v64, v65))
  {
    v66 = swift_slowAlloc();
    v67 = swift_slowAlloc();
    v273 = (unsigned __int8 *)v67;
    *(_DWORD *)v66 = 136446466;
    v68 = (uint64_t *)&v62[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    v70 = *v68;
    v69 = v68[1];
    swift_bridgeObjectRetain();
    v272[0] = sub_22DDA2E30(v70, v69, (uint64_t *)&v273);
    sub_22DE1F628();

    swift_bridgeObjectRelease();
    *(_WORD *)(v66 + 12) = 1026;
    LODWORD(v272[0]) = objc_msgSend(v269, sel_showInlineUserInfo);
    sub_22DE1F628();

    _os_log_impl(&dword_22DD4B000, v64, v65, "Form [%{public}s]: show inline user info: [%{BOOL,public}d]", (uint8_t *)v66, 0x12u);
    swift_arrayDestroy();
    v71 = v67;
    v61 = v269;
    MEMORY[0x22E320870](v71, -1, -1);
    MEMORY[0x22E320870](v66, -1, -1);

  }
  else
  {

  }
  objc_msgSend(v61, sel_setShowUserSwitcherLast_, v62[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__showUserSwitcherLast]);
  v72 = v62;
  v73 = v63;
  v74 = sub_22DE1E3F8();
  v75 = sub_22DE1F514();
  if (os_log_type_enabled(v74, v75))
  {
    v76 = swift_slowAlloc();
    v267 = (unsigned __int8 *)swift_slowAlloc();
    v273 = v267;
    *(_DWORD *)v76 = 136446466;
    v77 = (uint64_t *)&v72[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    v79 = *v77;
    v78 = v77[1];
    swift_bridgeObjectRetain();
    v272[0] = sub_22DDA2E30(v79, v78, (uint64_t *)&v273);
    sub_22DE1F628();

    swift_bridgeObjectRelease();
    *(_WORD *)(v76 + 12) = 1026;
    LODWORD(v272[0]) = objc_msgSend(v269, sel_showUserSwitcherLast);
    v61 = v269;
    sub_22DE1F628();

    _os_log_impl(&dword_22DD4B000, v74, v75, "Form [%{public}s]: show user switcher last: [%{BOOL,public}d]", (uint8_t *)v76, 0x12u);
    v80 = v267;
    swift_arrayDestroy();
    MEMORY[0x22E320870](v80, -1, -1);
    MEMORY[0x22E320870](v76, -1, -1);

  }
  else
  {

  }
  if (objc_msgSend(v61, sel_showInlineUserInfo))
  {
    v81 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v82 = objc_msgSend(v81, sel_currentUser);

    if (v82)
    {
      v83 = objc_msgSend(v82, sel_username);

      if (v83)
      {
        v264 = sub_22DE1F2B0();

        v84 = objc_allocWithZone(MEMORY[0x24BDD1688]);
        v85 = (void *)sub_22DE1F28C();
        v267 = (unsigned __int8 *)objc_msgSend(v84, sel_initWithString_, v85);

        __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7D98);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_22DE20F30;
        v87 = (void *)*MEMORY[0x24BEBB360];
        *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBB360];
        v88 = (void *)objc_opt_self();
        v89 = *MEMORY[0x24BEBE1F0];
        v90 = v87;
        v91 = objc_msgSend(v88, sel_preferredFontForTextStyle_, v89);
        v92 = objc_msgSend(v91, sel_fontDescriptor);
        v93 = objc_msgSend(v92, sel_fontDescriptorWithSymbolicTraits_, 2);

        if (v93)
        {
          v94 = objc_msgSend(v88, sel_fontWithDescriptor_size_, v93, 0.0);

          v91 = v93;
        }
        else
        {
          v94 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBB520]), sel_init);
        }

        *(_QWORD *)(inited + 40) = v94;
        v95 = sub_22DE06BE0(inited);
        sub_22DDABF74(v95);
        swift_bridgeObjectRelease();
        v96 = objc_allocWithZone(MEMORY[0x24BDD1688]);
        v97 = (void *)sub_22DE1F28C();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_22DD504A8(&qword_255DB55C8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_22DE20BE0);
        v98 = (void *)sub_22DE1F238();
        swift_bridgeObjectRelease();
        v99 = objc_msgSend(v96, sel_initWithString_attributes_, v97, v98);

        v100 = v267;
        objc_msgSend(v267, sel_appendAttributedString_, v99);
        v101 = (void **)&v72[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_localizedAttributedLegalString];
        swift_beginAccess();
        v102 = *v101;
        if (*v101)
        {
          v103 = objc_allocWithZone(MEMORY[0x24BDD1688]);
          v104 = v102;
          v105 = objc_msgSend(v103, sel_initWithAttributedString_, v104);
          objc_msgSend(v105, sel_appendAttributedString_, v100);
          v106 = v105;
          v61 = v269;
          objc_msgSend(v269, sel_setLocalizedAttributedLegalString_, v106);

        }
        else
        {
          v106 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1688]), sel_initWithAttributedString_, v100);
          v61 = v269;
          objc_msgSend(v269, sel_setLocalizedAttributedLegalString_, v106);
        }

      }
    }
  }
  if (*(_QWORD *)&v72[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__largeTitleIcon + 8])
  {
    swift_bridgeObjectRetain();
    v107 = (void *)sub_22DE1F28C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v107 = 0;
  }
  objc_msgSend(v61, sel_setLargeTitleIcon_, v107);

  v108 = v73;
  v109 = v72;
  v110 = v108;
  v111 = sub_22DE1E3F8();
  v112 = sub_22DE1F4F0();
  v113 = os_log_type_enabled(v111, v112);
  v267 = v110;
  if (v113)
  {
    v114 = swift_slowAlloc();
    v115 = swift_slowAlloc();
    v273 = (unsigned __int8 *)v115;
    *(_DWORD *)v114 = 136446466;
    v116 = (uint64_t *)&v109[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    v117 = v61;
    v119 = *v116;
    v118 = v116[1];
    swift_bridgeObjectRetain();
    v272[0] = sub_22DDA2E30(v119, v118, (uint64_t *)&v273);
    sub_22DE1F628();

    swift_bridgeObjectRelease();
    *(_WORD *)(v114 + 12) = 2082;
    v120 = objc_msgSend(v117, sel_largeTitleIcon);
    if (v120)
    {
      v121 = v120;
      v122 = sub_22DE1F2B0();
      v124 = v123;

    }
    else
    {
      v122 = 0;
      v124 = 0xE000000000000000;
    }
    v272[0] = sub_22DDA2E30(v122, v124, (uint64_t *)&v273);
    sub_22DE1F628();
    v110 = v267;

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22DD4B000, v111, v112, "Form [%{public}s]: large title icon: [%{public}s]", (uint8_t *)v114, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v115, -1, -1);
    MEMORY[0x22E320870](v114, -1, -1);

    v61 = v269;
  }
  else
  {

  }
  objc_msgSend(v61, sel_setCanShowTeamPicker_, 0);
  sub_22DDA0B4C();
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9BE0);
  v126 = (void *)sub_22DE1F238();
  swift_bridgeObjectRelease();
  objc_msgSend(v61, sel_setPendingQandA_, v126);

  v127 = v109;
  v128 = sub_22DE1E3F8();
  v129 = sub_22DE1F514();
  if (os_log_type_enabled(v128, v129))
  {
    v130 = swift_slowAlloc();
    v131 = swift_slowAlloc();
    v264 = v125;
    v132 = v131;
    v273 = (unsigned __int8 *)v131;
    *(_DWORD *)v130 = 136446466;
    v133 = (uint64_t *)&v127[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    v135 = *v133;
    v134 = v133[1];
    swift_bridgeObjectRetain();
    v272[0] = sub_22DDA2E30(v135, v134, (uint64_t *)&v273);
    sub_22DE1F628();
    swift_bridgeObjectRelease();
    *(_WORD *)(v130 + 12) = 2050;
    v136 = *(_QWORD *)(sub_22DDA0B4C() + 16);

    swift_bridgeObjectRelease();
    v272[0] = v136;
    v110 = v267;
    sub_22DE1F628();

    _os_log_impl(&dword_22DD4B000, v128, v129, "Form [%{public}s]: prefilled Q&As count: [%{public}ld]", (uint8_t *)v130, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v132, -1, -1);
    MEMORY[0x22E320870](v130, -1, -1);

  }
  else
  {

  }
  v137 = v110;
  v138 = sub_22DE1E3F8();
  v139 = sub_22DE1F4F0();
  if (os_log_type_enabled(v138, v139))
  {
    v140 = (uint8_t *)swift_slowAlloc();
    v141 = swift_slowAlloc();
    v273 = (unsigned __int8 *)v141;
    *(_DWORD *)v140 = 136315138;
    v142 = objc_msgSend(v269, sel_pendingQandA);
    if (v142)
    {
      v143 = v142;
      v144 = sub_22DE1F244();

    }
    else
    {
      v144 = 0;
    }
    v272[0] = v144;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7D90);
    v145 = sub_22DE1F2EC();
    v272[0] = sub_22DDA2E30(v145, v146, (uint64_t *)&v273);
    sub_22DE1F628();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22DD4B000, v138, v139, "Pre-filling answers %s", v140, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v141, -1, -1);
    MEMORY[0x22E320870](v140, -1, -1);

  }
  else
  {

  }
  v147 = v269;
  if (v265[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_showsCompletionPage] == 1)
  {
    v148 = *(_QWORD *)&v265[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_session];
    v150 = 1;
    if (v148)
    {
      v149 = *(void **)(v148 + 40);
      if (v149)
      {
        if (objc_msgSend(v149, sel_isUnauthenticatedUser))
          v150 = 0;
      }
    }
  }
  else
  {
    v150 = 2;
  }
  objc_msgSend(v147, sel_setSubmissionStyle_, v150);
  v151 = objc_msgSend((id)objc_opt_self(), sel_predicateForAllStubs);
  objc_msgSend(v147, sel_setCandidateFormStubsPredicate_, v151);

  objc_msgSend(v147, sel_setShouldShowAttachmentButton_, (v127[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__hideAttachmentButton] & 1) == 0);
  v152 = v127;
  v153 = v137;
  v154 = sub_22DE1E3F8();
  v155 = sub_22DE1F514();
  if (os_log_type_enabled(v154, v155))
  {
    v156 = swift_slowAlloc();
    v157 = swift_slowAlloc();
    v273 = (unsigned __int8 *)v157;
    *(_DWORD *)v156 = 136446466;
    v158 = v153;
    v159 = (uint64_t *)&v152[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    v161 = *v159;
    v160 = v159[1];
    swift_bridgeObjectRetain();
    v162 = v161;
    v147 = v269;
    v272[0] = sub_22DDA2E30(v162, v160, (uint64_t *)&v273);
    sub_22DE1F628();

    v153 = v158;
    swift_bridgeObjectRelease();
    *(_WORD *)(v156 + 12) = 1026;
    LODWORD(v272[0]) = objc_msgSend(v147, sel_shouldShowAttachmentButton);
    sub_22DE1F628();

    _os_log_impl(&dword_22DD4B000, v154, v155, "Form [%{public}s]: shows attachment button: [%{BOOL,public}d]", (uint8_t *)v156, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v157, -1, -1);
    MEMORY[0x22E320870](v156, -1, -1);

  }
  else
  {

  }
  v163 = sub_22DDA0E68();
  v164 = OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__disableAccountSwitching;
  objc_msgSend(v147, sel_setDisableAccountSwitching_, (v152[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__disableAccountSwitching] | v163) & 1);
  v165 = v152;
  v166 = sub_22DE1E3F8();
  v167 = sub_22DE1F514();
  v168 = os_log_type_enabled(v166, v167);
  v263 = v153;
  if (v168)
  {
    v169 = swift_slowAlloc();
    v170 = swift_slowAlloc();
    v273 = (unsigned __int8 *)v170;
    *(_DWORD *)v169 = 136446466;
    v267 = (unsigned __int8 *)v152;
    v171 = (uint64_t *)&v165[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    v173 = *v171;
    v172 = v171[1];
    swift_bridgeObjectRetain();
    v272[0] = sub_22DDA2E30(v173, v172, (uint64_t *)&v273);
    sub_22DE1F628();
    swift_bridgeObjectRelease();
    *(_WORD *)(v169 + 12) = 1026;
    LODWORD(v272[0]) = v267[v164];
    sub_22DE1F628();

    _os_log_impl(&dword_22DD4B000, v166, v167, "Form [%{public}s]: disables account switching: [%{BOOL,public}d]", (uint8_t *)v169, 0x12u);
    swift_arrayDestroy();
    v174 = v170;
    v147 = v269;
    MEMORY[0x22E320870](v174, -1, -1);
    MEMORY[0x22E320870](v169, -1, -1);

  }
  else
  {

  }
  v175 = OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__alternateImagePreviewEnabled;
  objc_msgSend(v147, sel_setAlternateImagePreviewEnabled_, v165[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__alternateImagePreviewEnabled]);
  v176 = v165;
  v177 = sub_22DE1E3F8();
  v178 = sub_22DE1F514();
  if (os_log_type_enabled(v177, v178))
  {
    v179 = swift_slowAlloc();
    v180 = swift_slowAlloc();
    v273 = (unsigned __int8 *)v180;
    *(_DWORD *)v179 = 136446466;
    v267 = (unsigned __int8 *)(v179 + 4);
    v181 = (uint64_t *)&v176[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    v183 = *v181;
    v182 = v181[1];
    swift_bridgeObjectRetain();
    v272[0] = sub_22DDA2E30(v183, v182, (uint64_t *)&v273);
    sub_22DE1F628();
    swift_bridgeObjectRelease();
    *(_WORD *)(v179 + 12) = 1026;
    LODWORD(v272[0]) = v165[v175];
    sub_22DE1F628();

    _os_log_impl(&dword_22DD4B000, v177, v178, "Form [%{public}s]: uses alternate image preview: [%{BOOL,public}d]", (uint8_t *)v179, 0x12u);
    swift_arrayDestroy();
    v184 = v180;
    v147 = v269;
    MEMORY[0x22E320870](v184, -1, -1);
    MEMORY[0x22E320870](v179, -1, -1);

  }
  else
  {

  }
  v185 = OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__useInlineChoices;
  objc_msgSend(v147, sel_setUseInlineChoices_, v176[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__useInlineChoices]);
  v186 = v176;
  v187 = sub_22DE1E3F8();
  v188 = sub_22DE1F514();
  if (os_log_type_enabled(v187, v188))
  {
    v189 = swift_slowAlloc();
    v190 = swift_slowAlloc();
    v273 = (unsigned __int8 *)v190;
    *(_DWORD *)v189 = 136446466;
    v267 = (unsigned __int8 *)(v189 + 4);
    v191 = (uint64_t *)&v186[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    v193 = *v191;
    v192 = v191[1];
    swift_bridgeObjectRetain();
    v272[0] = sub_22DDA2E30(v193, v192, (uint64_t *)&v273);
    sub_22DE1F628();
    swift_bridgeObjectRelease();
    *(_WORD *)(v189 + 12) = 1026;
    LODWORD(v272[0]) = v176[v185];
    sub_22DE1F628();

    _os_log_impl(&dword_22DD4B000, v187, v188, "Form [%{public}s]: uses inline choices: [%{BOOL,public}d]", (uint8_t *)v189, 0x12u);
    swift_arrayDestroy();
    v194 = v190;
    v147 = v269;
    MEMORY[0x22E320870](v194, -1, -1);
    MEMORY[0x22E320870](v189, -1, -1);

  }
  else
  {

  }
  v195 = v263;
  v196 = (unsigned __int8 *)&v186[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_allowsAttachmentDragAndDrop];
  swift_beginAccess();
  objc_msgSend(v147, sel_setAllowsAttachmentDragAndDrop_, *v196);
  v197 = v186;
  v198 = sub_22DE1E3F8();
  v199 = sub_22DE1F514();
  if (os_log_type_enabled(v198, v199))
  {
    v200 = swift_slowAlloc();
    v201 = swift_slowAlloc();
    v273 = (unsigned __int8 *)v201;
    *(_DWORD *)v200 = 136446466;
    v202 = (uint64_t *)&v197[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    v204 = *v202;
    v203 = v202[1];
    swift_bridgeObjectRetain();
    v272[0] = sub_22DDA2E30(v204, v203, (uint64_t *)&v273);
    sub_22DE1F628();
    v195 = v263;
    swift_bridgeObjectRelease();
    *(_WORD *)(v200 + 12) = 1026;
    LODWORD(v272[0]) = *v196;
    v147 = v269;
    sub_22DE1F628();

    _os_log_impl(&dword_22DD4B000, v198, v199, "Form [%{public}s]: allowsAttachmentDragAndDrop: [%{BOOL,public}d]", (uint8_t *)v200, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v201, -1, -1);
    MEMORY[0x22E320870](v200, -1, -1);

  }
  else
  {

  }
  v205 = v265;
  v206 = (uint64_t)v270;
  v207 = v197;
  v208 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD7A0]), sel_initWithRootViewController_, v147);
  v209 = *(void **)&v205[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_feedbackDraftNavigationController];
  *(_QWORD *)&v205[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_feedbackDraftNavigationController] = v208;
  v210 = v208;

  v211 = objc_msgSend(v205, sel_view);
  if (!v211)
  {
LABEL_125:
    __break(1u);
    goto LABEL_129;
  }
  v212 = v211;
  objc_msgSend(v205, sel_embed_inView_, v210, v211);

  v213 = &v207[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_attachments];
  swift_beginAccess();
  v214 = "";
  if (*(_QWORD *)(*(_QWORD *)v213 + 16))
    goto LABEL_102;
  v259 = v207;
  v215 = sub_22DE1B24C();
  v216 = *(_QWORD *)(v215 + 16);
  if (!v216)
  {
    swift_bridgeObjectRelease();
    v207 = v259;
    if (sub_22DE1B2F4())
      goto LABEL_103;
    goto LABEL_105;
  }
  v257[1] = v215;
  v258 = v210;
  v217 = &v205[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_xpcClient];
  v218 = v260;
  v219 = v215 + ((*(unsigned __int8 *)(v260 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v260 + 80));
  v264 = (uint64_t)&v205[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_localClient];
  swift_beginAccess();
  v220 = *(_QWORD *)(v218 + 72);
  v271 = 0x800000022DE2A420;
  v267 = (unsigned __int8 *)(MEMORY[0x24BEE4AD8] + 8);
  do
  {
    sub_22DDA4870(v219, v206);
    v221 = MEMORY[0x22E32090C](v217);
    if (!v221)
    {
      v227 = (void *)MEMORY[0x22E32090C](v264);
      if (!v227)
        goto LABEL_129;
      goto LABEL_96;
    }
    v222 = (void *)v221;
    v223 = *(void **)(v221 + OBJC_IVAR___ExtensionController_xpcConnection);
    if (!v223)
      goto LABEL_123;
    v277 = sub_22DDC93CC;
    v278 = 0;
    v273 = (unsigned __int8 *)MEMORY[0x24BDAC760];
    v274 = 1107296256;
    v275 = sub_22DD9DDD8;
    v276 = &block_descriptor_72;
    v224 = _Block_copy(&v273);
    v225 = v223;
    v226 = objc_msgSend(v225, sel_remoteObjectProxyWithErrorHandler_, v224);
    _Block_release(v224);

    sub_22DE1F664();
    swift_unknownObjectRelease();
    sub_22DDA48F0((uint64_t)v272, (uint64_t)&v273);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7D88);
    if (swift_dynamicCast())
    {
      v227 = (void *)v272[7];
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v272);

LABEL_96:
      v228 = (void *)sub_22DE1DF3C();
      v229 = *(_QWORD *)(v206 + *(int *)(v268 + 20));
      v230 = objc_allocWithZone(MEMORY[0x24BDD1540]);
      v231 = (void *)sub_22DE1F28C();
      v232 = objc_msgSend(v230, sel_initWithDomain_code_userInfo_, v231, v229, 0);

      v206 = (uint64_t)v270;
      objc_msgSend(v227, sel_feedbackDidFailToAttachURL_nsError_, v228, v232);
      swift_unknownObjectRelease();

      goto LABEL_90;
    }
    if (qword_255DB5320 != -1)
      swift_once();
    __swift_project_value_buffer(v266, (uint64_t)qword_255DB8AE8);
    v233 = sub_22DE1E3F8();
    v234 = sub_22DE1F4FC();
    if (os_log_type_enabled(v233, v234))
    {
      v235 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v235 = 0;
      _os_log_impl(&dword_22DD4B000, v233, v234, "Failed to get remote object proxy", v235, 2u);
      MEMORY[0x22E320870](v235, -1, -1);
    }

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v272);
LABEL_90:
    sub_22DDA48B4(v206);
    v219 += v220;
    --v216;
  }
  while (v216);
  swift_bridgeObjectRelease();
  v205 = v265;
  v147 = v269;
  v195 = v263;
  v210 = v258;
  v207 = v259;
  v214 = "ActionIndicator" + 15;
LABEL_102:
  if (!sub_22DE1B2F4())
  {
LABEL_105:
    v236 = 0;
    goto LABEL_106;
  }
LABEL_103:
  sub_22DE1DFB4();
  v236 = (void *)sub_22DE1F238();
  swift_bridgeObjectRelease();
LABEL_106:
  objc_msgSend(v147, sel_setPendingAttachments_, v236);

  v237 = v261;
  v238 = *(_QWORD *)&v205[v261];
  if (v238)
  {
    v239 = v238 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_appToken;
    swift_beginAccess();
    if (*(_QWORD *)(v239 + 8))
    {
      v240 = *(NSObject **)v239;
      v241 = swift_bridgeObjectRetain();
      if (MEMORY[0x22E32027C](v241))
      {
        v242 = *(_QWORD *)&v205[v237];
        if (v242)
        {
          v243 = (uint64_t *)(v242 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_plugFormIds);
          swift_beginAccess();
          v244 = *v243;
          if (*v243)
          {
            v271 = v240;
            v245 = v195;
            v246 = *(_QWORD *)(v244 + 16);
            if (v246)
            {
              v258 = v210;
              v259 = v207;
              v273 = (unsigned __int8 *)MEMORY[0x24BEE4AF8];
              swift_bridgeObjectRetain();
              sub_22DE1F790();
              v247 = 0;
              do
              {
                v248 = v247 + 1;
                objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedInteger_, *(_QWORD *)(v244 + 8 * v247 + 32));
                sub_22DE1F778();
                sub_22DE1F79C();
                sub_22DE1F7A8();
                sub_22DE1F784();
                v247 = v248;
              }
              while (v246 != v248);
              swift_bridgeObjectRelease();
              v205 = v265;
              v147 = v269;
              v195 = v263;
              v210 = v258;
              v207 = v259;
            }
            else
            {
              v195 = v245;
            }
            sub_22DD70E78(0, &qword_255DB7D70);
            v249 = (void *)sub_22DE1F3C4();
            swift_bridgeObjectRelease();
            v214 = "";
          }
          else
          {
            v249 = 0;
            v214 = "ActionIndicator" + 15;
          }
        }
        else
        {
          v249 = 0;
        }
        objc_msgSend(v147, sel_setRequestedPlugIns_, v249);

        v250 = (void *)sub_22DE1F28C();
        swift_bridgeObjectRelease();
        objc_msgSend(v147, sel_setAppToken_, v250);

      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  v251 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v252 = objc_msgSend(v251, sel_defaultTeam);

  v253 = swift_allocObject();
  *(_QWORD *)(v253 + 16) = v205;
  v277 = sub_22DDA4868;
  v278 = v253;
  v273 = (unsigned __int8 *)MEMORY[0x24BDAC760];
  v274 = *((_QWORD *)v214 + 135);
  v275 = sub_22DD9CDA8;
  v276 = &block_descriptor_69;
  v254 = _Block_copy(&v273);
  v255 = v205;
  swift_release();
  v256 = v262;
  objc_msgSend(v147, sel_loadNewResponseForBugFormStub_forTeam_completion_, v262, v252, v254);
  _Block_release(v254);

}

uint64_t sub_22DDA0B4C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  int64_t v35;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_answers);
  swift_beginAccess();
  v2 = *v1;
  v34 = v2 + 64;
  v3 = 1 << *(_BYTE *)(v2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v2 + 64);
  v35 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v6 = 0;
  v7 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v6 << 6);
    }
    else
    {
      v11 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_38;
      if (v11 >= v35)
      {
LABEL_35:
        swift_release();
        return (uint64_t)v7;
      }
      v12 = *(_QWORD *)(v34 + 8 * v11);
      ++v6;
      if (!v12)
      {
        v6 = v11 + 1;
        if (v11 + 1 >= v35)
          goto LABEL_35;
        v12 = *(_QWORD *)(v34 + 8 * v6);
        if (!v12)
        {
          v6 = v11 + 2;
          if (v11 + 2 >= v35)
            goto LABEL_35;
          v12 = *(_QWORD *)(v34 + 8 * v6);
          if (!v12)
          {
            v13 = v11 + 3;
            if (v13 >= v35)
              goto LABEL_35;
            v12 = *(_QWORD *)(v34 + 8 * v13);
            if (!v12)
            {
              while (1)
              {
                v6 = v13 + 1;
                if (__OFADD__(v13, 1))
                  goto LABEL_39;
                if (v6 >= v35)
                  goto LABEL_35;
                v12 = *(_QWORD *)(v34 + 8 * v6);
                ++v13;
                if (v12)
                  goto LABEL_21;
              }
            }
            v6 = v13;
          }
        }
      }
LABEL_21:
      v5 = (v12 - 1) & v12;
      v10 = __clz(__rbit64(v12)) + (v6 << 6);
    }
    v14 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v15 = *v14;
    v16 = v14[1];
    v17 = *v14;
    v18 = v16;
    if (v16 <= 2)
    {
      v17 = *(_QWORD *)&aTitle_5[8 * v16];
      v18 = *(_QWORD *)&aDescrip[8 * v16 + 8];
    }
    v19 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    sub_22DDA492C(v15, v16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = sub_22DDFD368(v17, v18);
    v23 = v7[2];
    v24 = (v21 & 1) == 0;
    v25 = v23 + v24;
    if (__OFADD__(v23, v24))
      break;
    v26 = v21;
    if (v7[3] >= v25)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v21 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_22DDFFA74();
        if ((v26 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_22DDFE014(v25, isUniquelyReferenced_nonNull_native);
      v27 = sub_22DDFD368(v17, v18);
      if ((v26 & 1) != (v28 & 1))
        goto LABEL_40;
      v22 = v27;
      if ((v26 & 1) != 0)
      {
LABEL_4:
        v8 = v7[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v8 + 8 * v22) = v19;
        goto LABEL_5;
      }
    }
    v7[(v22 >> 6) + 8] |= 1 << v22;
    v29 = (uint64_t *)(v7[6] + 16 * v22);
    *v29 = v17;
    v29[1] = v18;
    *(_QWORD *)(v7[7] + 8 * v22) = v19;
    v30 = v7[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
      goto LABEL_37;
    v7[2] = v32;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  result = sub_22DE1F91C();
  __break(1u);
  return result;
}

id sub_22DDA0E68()
{
  id v0;
  NSObject *v1;
  id v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = objc_msgSend(v0, sel_currentUser);

  if (v1)
  {
    v2 = -[NSObject isAppleConnectUser](v1, sel_isAppleConnectUser);
  }
  else
  {
    if (qword_255DB52F0 != -1)
      swift_once();
    v3 = sub_22DE1E410();
    __swift_project_value_buffer(v3, (uint64_t)qword_255DB7C78);
    v1 = sub_22DE1E3F8();
    v4 = sub_22DE1F4FC();
    if (os_log_type_enabled(v1, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_22DD4B000, v1, v4, "No user in initializeViewIfNeeded()", v5, 2u);
      MEMORY[0x22E320870](v5, -1, -1);
    }
    v2 = 0;
  }

  return v2;
}

void sub_22DDA0F98(void *a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(_QWORD);
  void (*v16)(void *, uint64_t);
  void *v17;
  uint64_t v18;
  uint64_t v19;

  if (a1)
  {
    v4 = a1;
    if (qword_255DB52F0 != -1)
      swift_once();
    v5 = sub_22DE1E410();
    __swift_project_value_buffer(v5, (uint64_t)qword_255DB7C78);
    v6 = a1;
    v7 = a1;
    v8 = sub_22DE1E3F8();
    v9 = sub_22DE1F4FC();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v19 = v11;
      *(_DWORD *)v10 = 136315138;
      v12 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7A58);
      v13 = sub_22DE1F2EC();
      sub_22DDA2E30(v13, v14, &v19);
      sub_22DE1F628();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22DD4B000, v8, v9, "Failed to load new response with error: %s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v11, -1, -1);
      MEMORY[0x22E320870](v10, -1, -1);
    }
    else
    {

    }
    v16 = *(void (**)(void *, uint64_t))(a2
                                                 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_setFeedbackFormReply);
    if (v16)
    {
      sub_22DD70E78(0, &qword_255DB7D70);
      swift_retain();
      v17 = (void *)sub_22DE1F5E0();
      v16(v17, v18);

      sub_22DD50DE0((uint64_t)v16);
    }
    else
    {

    }
  }
  else
  {
    v15 = *(void (**)(_QWORD))(a2
                                        + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_setFeedbackFormReply);
    if (v15)
    {
      swift_retain();
      v15(0);
      sub_22DD50DE0((uint64_t)v15);
    }
  }
}

id DraftingExtensionViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_22DE1F28C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id DraftingExtensionViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  _QWORD *v6;
  void *v7;
  id v8;
  objc_super v10;

  *(_QWORD *)&v3[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_session] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_form] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_formStub] = 0;
  v3[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_shouldInitializeViews] = 0;
  v6 = &v3[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_setFeedbackFormReply];
  *v6 = 0;
  v6[1] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_feedbackDraftNavigationController] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v3[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_showsCompletionPage] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_bugFormTableViewController] = 0;
  if (a2)
  {
    v7 = (void *)sub_22DE1F28C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for DraftingExtensionViewController();
  v8 = objc_msgSendSuper2(&v10, sel_initWithNibName_bundle_, v7, a3);

  return v8;
}

id DraftingExtensionViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id DraftingExtensionViewController.init(coder:)(void *a1)
{
  _BYTE *v1;
  _QWORD *v3;
  id v4;
  objc_super v6;

  *(_QWORD *)&v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_session] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_form] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_formStub] = 0;
  v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_shouldInitializeViews] = 0;
  v3 = &v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_setFeedbackFormReply];
  *v3 = 0;
  v3[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_feedbackDraftNavigationController] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_showsCompletionPage] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_bugFormTableViewController] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for DraftingExtensionViewController();
  v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

id DraftingExtensionViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DraftingExtensionViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_22DDA1620(char a1)
{
  return sub_22DDA1764(a1, (uint64_t)&unk_24F991438, (uint64_t)sub_22DDA4694, (uint64_t)&block_descriptor_27);
}

void sub_22DDA163C(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;

  *(_BYTE *)(a1 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_showsCompletionPage) = a2;
  v2 = *(void **)(a1 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_bugFormTableViewController);
  if (v2)
  {
    v9 = *(id *)(a1 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_bugFormTableViewController);
    if ((a2 & 1) != 0)
    {
      v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_session);
      if (v3 && (v4 = *(void **)(v3 + 40)) != 0)
      {
        v5 = v2;
        if (objc_msgSend(v4, sel_isUnauthenticatedUser))
        {
          v6 = 0;
LABEL_11:
          objc_msgSend(v9, sel_setSubmissionStyle_, v6);

          return;
        }
      }
      else
      {
        v8 = v2;
      }
      v6 = 1;
      goto LABEL_11;
    }
    v7 = v2;
    v6 = 2;
    goto LABEL_11;
  }
}

uint64_t sub_22DDA1748(char a1)
{
  return sub_22DDA1764(a1, (uint64_t)&unk_24F9913C0, (uint64_t)sub_22DDA4688, (uint64_t)&block_descriptor_18);
}

uint64_t sub_22DDA1764(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v19 = a4;
  v7 = sub_22DE1F1B4();
  v21 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_22DE1F1D8();
  v10 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v13 = (void *)sub_22DE1F574();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v4;
  *(_BYTE *)(v14 + 24) = a1;
  aBlock[4] = a3;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = v19;
  v15 = _Block_copy(aBlock);
  v16 = v4;
  swift_release();
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD78E50();
  sub_22DE1F67C();
  MEMORY[0x22E31FDFC](0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v20);
}

void sub_22DDA1960(uint64_t a1, char a2)
{
  void *v2;
  void *v4;
  id v5;
  _QWORD v6[6];

  v2 = *(void **)(a1 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_bugFormTableViewController);
  if (v2)
  {
    v6[4] = nullsub_1;
    v6[5] = 0;
    v6[0] = MEMORY[0x24BDAC760];
    v6[1] = 1107296256;
    v6[2] = sub_22DD9CDA8;
    v6[3] = &block_descriptor_21;
    v4 = _Block_copy(v6);
    v5 = v2;
    objc_msgSend(v5, sel_saveDraftWithIsClosing_completion_, a2 & 1, v4);
    _Block_release(v4);

  }
}

uint64_t sub_22DDA1A60()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v14;
  uint64_t v15;
  _QWORD aBlock[6];

  v1 = sub_22DE1F1B4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v15 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22DE1F1D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v9 = (void *)sub_22DE1F574();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v0;
  aBlock[4] = sub_22DDA4638;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = &block_descriptor_12;
  v11 = _Block_copy(aBlock);
  v12 = v0;
  swift_release();
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD504A8((unint64_t *)&qword_255DB6898, v2, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD78E50();
  sub_22DE1F67C();
  MEMORY[0x22E31FDFC](0, v8, v4, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t DraftingExtensionViewController.setFeedbackForm(_:reply:)(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v7 = sub_22DE1F1B4();
  v20 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_22DE1F1D8();
  v10 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v13 = (void *)sub_22DE1F574();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a1;
  v14[3] = v3;
  v14[4] = a2;
  v14[5] = a3;
  aBlock[4] = sub_22DDA3568;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = &block_descriptor_3;
  v15 = _Block_copy(aBlock);
  v16 = a1;
  v17 = v3;
  swift_retain();
  swift_release();
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD78E50();
  sub_22DE1F67C();
  MEMORY[0x22E31FDFC](0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v19);
}

uint64_t sub_22DDA1EA4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  id v12;

  type metadata accessor for FeedbackSession();
  swift_allocObject();
  v8 = a1;
  *(_QWORD *)(a2 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_session) = sub_22DDC18E4(v8);
  swift_retain();
  swift_release();
  v9 = (_QWORD *)(a2 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_setFeedbackFormReply);
  v10 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_setFeedbackFormReply);
  *v9 = a3;
  v9[1] = a4;
  swift_retain();
  sub_22DD50DE0(v10);
  v11 = *(void **)(a2 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_form);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_form) = v8;
  v12 = v8;

  sub_22DD9D190();
  return swift_release();
}

Swift::Void __swiftcall DraftingExtensionViewController.prepareUIForLogOut()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_formStub);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_formStub) = 0;

  v2 = OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_feedbackDraftNavigationController;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_feedbackDraftNavigationController);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v4, sel_willMoveToParentViewController_, 0);
    objc_msgSend(v4, sel_removeFromParentViewController);
    v5 = objc_msgSend(v4, sel_view);
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, sel_removeFromSuperview);

      *(_BYTE *)(v0 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_shouldInitializeViews) = 1;
      v7 = *(id *)(v0 + v2);
      *(_QWORD *)(v0 + v2) = 0;

    }
    else
    {
      __break(1u);
    }
  }
}

void DraftingExtensionViewController.controller(_:didClickSwitchAccountsWithCurrentUser:)(uint64_t a1, void *a2)
{
  sub_22DDA3574(a2);
}

void DraftingExtensionViewController.controller(_:didFinishLoadingDraft:devicesController:draftingController:)(uint64_t a1, void *a2, void *a3, void *a4)
{
  sub_22DDA375C(a2, a3, a4);
}

void DraftingExtensionViewController.controller(_:didAttachLocalFile:)(uint64_t a1, void *a2)
{
  sub_22DDA3800(a2);
}

void DraftingExtensionViewController.controllerWillResignFirstActive(_:)()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_255DB52F0 != -1)
    swift_once();
  v0 = sub_22DE1E410();
  __swift_project_value_buffer(v0, (uint64_t)qword_255DB7C78);
  oslog = sub_22DE1E3F8();
  v1 = sub_22DE1F514();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_22DD4B000, oslog, v1, "Will resign first active", v2, 2u);
    MEMORY[0x22E320870](v2, -1, -1);
  }

}

void DraftingExtensionViewController.controller(_:didFinishSubmissionWithError:)(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t *v16;
  _QWORD *v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;
  BOOL v33;
  _BOOL4 v35;
  BOOL v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  id v49;
  char *v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  void *v64;
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  int64_t v72;
  unint64_t v73;
  int64_t v74;
  BOOL v75;
  os_log_t oslog;
  NSObject *osloga;
  uint64_t v78[3];

  if (a2)
  {
    v4 = MEMORY[0x22E32090C](v2 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_xpcClient);
    if (v4)
    {
      v5 = (void *)v4;
      v6 = a2;
      sub_22DDC9200();
      v8 = v7;

      if (!v8)
      {

        return;
      }
    }
    else
    {
      v45 = v2 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_localClient;
      swift_beginAccess();
      v46 = MEMORY[0x22E32090C](v45);
      if (!v46)
        goto LABEL_83;
      v8 = (void *)v46;
      v47 = a2;
    }
    v48 = (void *)sub_22DE1DEDC();
    v49 = objc_allocWithZone((Class)type metadata accessor for FBKSubmissionError());
    v50 = sub_22DDD140C(v48);
    objc_msgSend(v8, sel_didFailSubmissionWithError_, v50);

    swift_unknownObjectRelease();
    return;
  }
  v9 = *(void **)(v2 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_form);
  if (v9)
  {
    v68 = v2;
    v11 = v9;
    v12 = objc_msgSend(a1, sel_draftingController);
    v13 = sub_22DDA78F4(v11);

    v69 = a1;
    v14 = objc_msgSend(a1, sel_draftingController);
    v15 = sub_22DDA818C((uint64_t)v11);

    v16 = (uint64_t *)((char *)v11 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_formResponses);
    swift_beginAccess();
    *v16 = v15;
    swift_bridgeObjectRelease();
    oslog = v11;
    v17 = (Class *)((char *)&v11->isa + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_answers);
    swift_beginAccess();
    *v17 = MEMORY[0x24BEE4B00];
    swift_bridgeObjectRelease();
    v18 = 0;
    v70 = v13;
    v71 = v13 + 64;
    v19 = 1 << *(_BYTE *)(v13 + 32);
    v20 = -1;
    if (v19 < 64)
      v20 = ~(-1 << v19);
    v21 = v20 & *(_QWORD *)(v13 + 64);
    v72 = (unint64_t)(v19 + 63) >> 6;
    while (1)
    {
      if (v21)
      {
        v22 = __clz(__rbit64(v21));
        v21 &= v21 - 1;
        v23 = v22 | (v18 << 6);
      }
      else
      {
        v24 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
          __break(1u);
LABEL_79:
          __break(1u);
          goto LABEL_80;
        }
        if (v24 >= v72)
          goto LABEL_62;
        v25 = *(_QWORD *)(v71 + 8 * v24);
        ++v18;
        if (!v25)
        {
          v18 = v24 + 1;
          if (v24 + 1 >= v72)
            goto LABEL_62;
          v25 = *(_QWORD *)(v71 + 8 * v18);
          if (!v25)
          {
            v18 = v24 + 2;
            if (v24 + 2 >= v72)
              goto LABEL_62;
            v25 = *(_QWORD *)(v71 + 8 * v18);
            if (!v25)
            {
              v26 = v24 + 3;
              if (v26 >= v72)
              {
LABEL_62:
                swift_release();
                v51 = objc_msgSend(v69, sel_draftingController);
                v52 = objc_msgSend(v51, sel_formResponse);

                v53 = objc_msgSend(v52, sel_contentItem);
                if (v53)
                {
                  v54 = objc_msgSend(v53, sel_ID);

                  if (v54)
                  {
                    v55 = objc_msgSend(v54, sel_stringValue);

                    if (!v55)
                    {
                      sub_22DE1F2B0();
                      v55 = (id)sub_22DE1F28C();
                      swift_bridgeObjectRelease();
                    }
                    v56 = objc_msgSend(v69, sel_bugForm);
                    if (v56)
                    {
                      v57 = v56;
                      v58 = objc_msgSend(v56, sel_role);

                      v59 = sub_22DDB2FC0((uint64_t)v58);
                    }
                    else
                    {
                      v59 = 0;
                    }
                    v63 = MEMORY[0x22E32090C](v68 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_xpcClient);
                    if (v63)
                    {
                      v64 = (void *)v63;
                      sub_22DDC9200();
                      v66 = v65;

                      if (!v66)
                      {

                        return;
                      }
                    }
                    else
                    {
                      v67 = v68 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_localClient;
                      swift_beginAccess();
                      v66 = (void *)MEMORY[0x22E32090C](v67);
                      if (!v66)
                        goto LABEL_83;
                    }
                    objc_msgSend(v66, sel_feedbackDidCompleteWithResponseType_responseID_completedForm_, v59, v55, oslog);

                    swift_unknownObjectRelease();
                    return;
                  }
                }
                else
                {
                  __break(1u);
                }
                __break(1u);
LABEL_83:
                sub_22DE1F7CC();
                __break(1u);
                return;
              }
              v25 = *(_QWORD *)(v71 + 8 * v26);
              if (!v25)
              {
                while (1)
                {
                  v18 = v26 + 1;
                  if (__OFADD__(v26, 1))
                    goto LABEL_79;
                  if (v18 >= v72)
                    goto LABEL_62;
                  v25 = *(_QWORD *)(v71 + 8 * v18);
                  ++v26;
                  if (v25)
                    goto LABEL_25;
                }
              }
              v18 = v26;
            }
          }
        }
LABEL_25:
        v21 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v18 << 6);
      }
      v27 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v23);
      v28 = *(_QWORD *)(v27 + 16);
      if (v28)
      {
        v73 = v21;
        v74 = v18;
        v29 = (uint64_t *)(*(_QWORD *)(v13 + 48) + 16 * v23);
        v30 = *v29;
        v31 = v29[1];
        v33 = *v29 == 0x656C7469743ALL && v31 == 0xE600000000000000;
        v35 = v30 == 0x616572613ALL && v31 == 0xE500000000000000;
        v37 = v30 == 0x706972637365643ALL && v31 == 0xEC0000006E6F6974;
        v75 = v37;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v38 = (uint64_t *)(v27 + 40);
        do
        {
          v41 = *(v38 - 1);
          v42 = *v38;
          if (v33)
          {
            v39 = 0;
            v40 = 0;
          }
          else
          {
            v43 = sub_22DE1F8E0();
            if (((v43 | v35) & 1) != 0)
            {
              v39 = 0;
              v40 = ~v43 & 1;
            }
            else
            {
              v44 = sub_22DE1F8E0();
              if ((v44 & 1) != 0)
                v40 = 1;
              else
                v40 = 2;
              if (((v44 | v75) & 1) != 0)
              {
                v39 = 0;
              }
              else if ((sub_22DE1F8E0() & 1) != 0)
              {
                v39 = 0;
                v40 = 2;
              }
              else
              {
                swift_bridgeObjectRetain();
                v39 = v30;
                v40 = v31;
              }
            }
          }
          v38 += 2;
          v78[0] = v39;
          v78[1] = v40;
          swift_bridgeObjectRetain();
          sub_22DE0898C(v78, v41, v42);
          swift_bridgeObjectRelease();
          sub_22DDA40E0(v39, v40);
          --v28;
        }
        while (v28);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = v70;
        v21 = v73;
        v18 = v74;
      }
    }
  }
  if (qword_255DB52F0 != -1)
LABEL_80:
    swift_once();
  v60 = sub_22DE1E410();
  __swift_project_value_buffer(v60, (uint64_t)qword_255DB7C78);
  osloga = sub_22DE1E3F8();
  v61 = sub_22DE1F508();
  if (os_log_type_enabled(osloga, v61))
  {
    v62 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v62 = 0;
    _os_log_impl(&dword_22DD4B000, osloga, v61, "Could not report successful feedback submission because FBKFeedbackForm is nil", v62, 2u);
    MEMORY[0x22E320870](v62, -1, -1);
  }

}

void DraftingExtensionViewController.controller(_:didFailToLoadDraftWithError:)(uint64_t a1, void *a2)
{
  sub_22DDA40F4(a2);
}

void DraftingExtensionViewController.controller(_:didRequestDismissalWithSavedDraft:)(uint64_t a1, char a2)
{
  sub_22DDA431C(a2);
}

uint64_t sub_22DDA2D5C(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_22DDA2D6C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_22DDA2DA0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_22DDA2DC0(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_22DDA2E30(v6, v7, a3);
  v8 = *a1 + 8;
  sub_22DE1F628();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_22DDA2E30(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_22DDA2F00(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_22DDA48F0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_22DDA48F0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_22DDA2F00(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_22DE1F634();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_22DDA30B8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_22DE1F76C();
  if (!v8)
  {
    sub_22DE1F7C0();
    __break(1u);
LABEL_17:
    result = sub_22DE1F808();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_22DDA30B8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_22DDA314C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_22DDA32C0(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_22DDA32C0(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_22DDA314C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_22DDFD28C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_22DE1F73C();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_22DE1F7C0();
      __break(1u);
LABEL_10:
      v2 = sub_22DE1F340();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_22DE1F808();
    __break(1u);
LABEL_14:
    result = sub_22DE1F7C0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_22DDA32C0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7DA8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22DE1F808();
  __break(1u);
  return result;
}

_BYTE **sub_22DDA340C(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

void *sub_22DDA341C(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_22DE1F808();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_22DDA34B0(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_22DDA34D4@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for DraftingExtensionViewController()
{
  return objc_opt_self();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_22DDA3534()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DDA3568()
{
  uint64_t v0;

  return sub_22DDA1EA4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_22DDA3574(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;

  v2 = v1;
  if (qword_255DB52F0 != -1)
    swift_once();
  v4 = sub_22DE1E410();
  __swift_project_value_buffer(v4, (uint64_t)qword_255DB7C78);
  v5 = a1;
  v6 = sub_22DE1E3F8();
  v7 = sub_22DE1F514();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138543362;
    v10 = objc_msgSend(v5, sel_ID);
    sub_22DE1F628();
    *v9 = v10;

    _os_log_impl(&dword_22DD4B000, v6, v7, "User did tap switch user from user %{public}@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8160);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v9, -1, -1);
    MEMORY[0x22E320870](v8, -1, -1);

  }
  else
  {

  }
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_session))
  {
    swift_retain();
    sub_22DDC3288();
    swift_release();
  }
}

void sub_22DDA375C(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;

  v4 = OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_session;
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_session);
  if (v5)
  {
    v8 = *(void **)(v5 + 48);
    *(_QWORD *)(v5 + 48) = a1;
    v9 = a1;

    v10 = *(_QWORD *)(v3 + v4);
    if (v10)
    {
      v11 = *(void **)(v10 + 56);
      *(_QWORD *)(v10 + 56) = a2;
      v12 = a2;

      v13 = *(_QWORD *)(v3 + v4);
      if (v13)
      {
        v15 = *(id *)(v13 + 64);
        *(_QWORD *)(v13 + 64) = a3;
        v14 = a3;

      }
    }
  }
}

void sub_22DDA3800(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  void (*v23)(char *, char *, uint64_t);
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint8_t *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  void (*v44)(char *, uint64_t);
  void *v45;
  uint64_t v46;
  id v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  _QWORD *v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  unsigned int v56;
  id v57;
  id v58;
  void *v59;
  char *v60;
  id v61;
  id v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  id v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  _QWORD v72[2];
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  id v79[2];

  v79[1] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB7BC0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v72 - v7;
  v9 = sub_22DE1DFB4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v76 = (char *)v72 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v72 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v72 - v19;
  v21 = objc_msgSend(a1, sel_originalLocalFileURL);
  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_10;
  }
  v22 = v21;
  v77 = v20;
  sub_22DE1DF84();

  v23 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v23(v8, v18, v9);
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v24(v8, 0, 1, v9);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v25(v8, 1, v9) == 1)
  {
LABEL_10:
    sub_22DDA47FC((uint64_t)v8);
    goto LABEL_13;
  }
  v75 = v13;
  v26 = v77;
  v23(v77, v8, v9);
  v27 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_form);
  if (v27)
  {
    v28 = (uint64_t *)(v27 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_attachments);
    v29 = swift_beginAccess();
    v30 = *v28;
    MEMORY[0x24BDAC7A8](v29);
    v72[-2] = v26;
    swift_bridgeObjectRetain();
    sub_22DD9C264((uint64_t (*)(char *))sub_22DDA483C, v30, (uint64_t)v6);
    swift_bridgeObjectRelease();
    if (v25(v6, 1, v9) != 1)
    {
      sub_22DDA47FC((uint64_t)v6);
      v31 = v77;
      if (qword_255DB52F0 != -1)
        swift_once();
      v32 = sub_22DE1E410();
      v33 = __swift_project_value_buffer(v32, (uint64_t)qword_255DB7C78);
      v34 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
      v35 = v76;
      v34(v76, v31, v9);
      v36 = sub_22DE1E3F8();
      v37 = sub_22DE1F514();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = swift_slowAlloc();
        v74 = v33;
        v39 = (uint8_t *)v38;
        v40 = (void *)swift_slowAlloc();
        v73 = v34;
        v41 = v40;
        v79[0] = v40;
        *(_DWORD *)v39 = 136446210;
        v72[1] = v39 + 4;
        sub_22DD504A8((unint64_t *)&qword_255DB7D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
        v42 = sub_22DE1F8C8();
        v78 = sub_22DDA2E30(v42, v43, (uint64_t *)v79);
        sub_22DE1F628();
        swift_bridgeObjectRelease();
        v44 = *(void (**)(char *, uint64_t))(v10 + 8);
        v44(v35, v9);
        _os_log_impl(&dword_22DD4B000, v36, v37, "Deleting attached file from temp directory %{public}s", v39, 0xCu);
        swift_arrayDestroy();
        v45 = v41;
        v34 = v73;
        MEMORY[0x22E320870](v45, -1, -1);
        MEMORY[0x22E320870](v39, -1, -1);
      }
      else
      {
        v44 = *(void (**)(char *, uint64_t))(v10 + 8);
        v44(v35, v9);
      }

      v54 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      v55 = (void *)sub_22DE1DF3C();
      v79[0] = 0;
      v56 = objc_msgSend(v54, sel_removeItemAtURL_error_, v55, v79);

      if (v56)
      {
        v57 = v79[0];
      }
      else
      {
        v58 = v79[0];
        v59 = (void *)sub_22DE1DEE8();

        swift_willThrow();
        v60 = v75;
        v34(v75, v31, v9);
        v61 = v59;
        v62 = v59;
        v63 = sub_22DE1E3F8();
        v64 = sub_22DE1F4FC();
        if (os_log_type_enabled(v63, v64))
        {
          v65 = swift_slowAlloc();
          v76 = (char *)swift_slowAlloc();
          v79[0] = v76;
          *(_DWORD *)v65 = 136446466;
          sub_22DD504A8((unint64_t *)&qword_255DB7D78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
          v66 = sub_22DE1F8C8();
          v78 = sub_22DDA2E30(v66, v67, (uint64_t *)v79);
          sub_22DE1F628();
          swift_bridgeObjectRelease();
          v44(v60, v9);
          *(_WORD *)(v65 + 12) = 2080;
          v78 = (uint64_t)v59;
          v68 = v59;
          __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7A58);
          v69 = sub_22DE1F2EC();
          v78 = sub_22DDA2E30(v69, v70, (uint64_t *)v79);
          v31 = v77;
          sub_22DE1F628();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_22DD4B000, v63, v64, "Failed to delete file %{public}s error %s", (uint8_t *)v65, 0x16u);
          v71 = v76;
          swift_arrayDestroy();
          MEMORY[0x22E320870](v71, -1, -1);
          MEMORY[0x22E320870](v65, -1, -1);

        }
        else
        {

          v44(v60, v9);
        }
      }
      v44(v31, v9);
      return;
    }
  }
  else
  {
    v24(v6, 1, 1, v9);
  }
  sub_22DDA47FC((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_13:
  if (qword_255DB52F0 != -1)
    swift_once();
  v46 = sub_22DE1E410();
  __swift_project_value_buffer(v46, (uint64_t)qword_255DB7C78);
  v47 = a1;
  v48 = sub_22DE1E3F8();
  v49 = sub_22DE1F4FC();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = swift_slowAlloc();
    v51 = (_QWORD *)swift_slowAlloc();
    v52 = (void *)swift_slowAlloc();
    v79[0] = v52;
    *(_DWORD *)v50 = 136315394;
    v78 = sub_22DDA2E30(0xD000000000000021, 0x800000022DE2A370, (uint64_t *)v79);
    sub_22DE1F628();
    *(_WORD *)(v50 + 12) = 2112;
    v78 = (uint64_t)v47;
    v53 = v47;
    sub_22DE1F628();
    *v51 = v47;

    _os_log_impl(&dword_22DD4B000, v48, v49, "%s encountered attachment that it cannot not delete %@", (uint8_t *)v50, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8160);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v51, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v52, -1, -1);
    MEMORY[0x22E320870](v50, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_22DDA40E0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_22DDA40F4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(void *, uint64_t);
  void *v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v1;
  if (qword_255DB52F0 != -1)
    swift_once();
  v4 = sub_22DE1E410();
  __swift_project_value_buffer(v4, (uint64_t)qword_255DB7C78);
  v5 = a1;
  v6 = a1;
  v7 = sub_22DE1E3F8();
  v8 = sub_22DE1F4FC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v17 = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7A58);
    v12 = sub_22DE1F2EC();
    sub_22DDA2E30(v12, v13, &v17);
    sub_22DE1F628();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22DD4B000, v7, v8, "Failed to load new response with error: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v10, -1, -1);
    MEMORY[0x22E320870](v9, -1, -1);
  }
  else
  {

  }
  v14 = *(void (**)(void *, uint64_t))(v2
                                               + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_setFeedbackFormReply);
  if (v14)
  {
    sub_22DD70E78(0, &qword_255DB7D70);
    swift_retain();
    v15 = (void *)sub_22DE1F5E0();
    v14(v15, v16);
    sub_22DD50DE0((uint64_t)v14);

  }
}

void sub_22DDA431C(char a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v3 = MEMORY[0x22E32090C](v1 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_xpcClient);
  if (!v3)
  {
    v7 = v1 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_localClient;
    swift_beginAccess();
    v6 = (void *)MEMORY[0x22E32090C](v7);
    if (!v6)
    {
      sub_22DE1F7CC();
      __break(1u);
      return;
    }
LABEL_5:
    objc_msgSend(v6, sel_didRequestViewDismissalWithSaved_, a1 & 1);
    swift_unknownObjectRelease();
    return;
  }
  v4 = (void *)v3;
  sub_22DDC9200();
  v6 = v5;

  if (v6)
    goto LABEL_5;
}

void _s8Feedback31DraftingExtensionViewControllerC30controllerDidRequestFullScreen4withySo015FBKBugFormTabledE0C_tF_0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v1 = MEMORY[0x22E32090C](v0 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_xpcClient);
  if (!v1)
  {
    v5 = v0 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_localClient;
    swift_beginAccess();
    v4 = (void *)MEMORY[0x22E32090C](v5);
    if (!v4)
    {
      sub_22DE1F7CC();
      __break(1u);
      return;
    }
LABEL_5:
    objc_msgSend(v4, sel_didRequestViewFullScreen);
    swift_unknownObjectRelease();
    return;
  }
  v2 = (void *)v1;
  sub_22DDC9200();
  v4 = v3;

  if (v4)
    goto LABEL_5;
}

uint64_t sub_22DDA44FC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_localClient;
  swift_beginAccess();
  result = MEMORY[0x22E32090C](v3);
  *a2 = result;
  return result;
}

uint64_t sub_22DDA4550()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

uint64_t method lookup function for DraftingExtensionViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DraftingExtensionViewController.localClient.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of DraftingExtensionViewController.localClient.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of DraftingExtensionViewController.localClient.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x158))();
}

uint64_t sub_22DDA4604()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_22DDA4628()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

id sub_22DDA4638()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16)
                 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_bugFormTableViewController);
  if (result)
    return objc_msgSend(result, sel_closeDraftAndDelete_completion_, 1, 0);
  return result;
}

uint64_t sub_22DDA4664()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_22DDA4688()
{
  uint64_t v0;

  sub_22DDA1960(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_22DDA4694()
{
  uint64_t v0;

  sub_22DDA163C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_22DDA46A0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_22DDA46C4(uint64_t a1)
{
  uint64_t v1;

  sub_22DD9E334(a1, *(_QWORD *)(v1 + 16), "User gave up");
}

uint64_t sub_22DDA46E8(uint64_t a1)
{
  uint64_t v1;

  return sub_22DD9E490(a1, *(_QWORD *)(v1 + 16), "User wants to retry");
}

void sub_22DDA4708(uint64_t a1)
{
  uint64_t v1;

  sub_22DD9E334(a1, *(_QWORD *)(v1 + 16), "User cancelled authentication");
}

uint64_t sub_22DDA472C(uint64_t a1)
{
  uint64_t v1;

  return sub_22DD9E490(a1, *(_QWORD *)(v1 + 16), "User wants to retry authentication");
}

uint64_t sub_22DDA474C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_22DDA4770(void *a1, char a2)
{
  uint64_t v2;

  sub_22DD9D2F4(a1, a2 & 1, v2);
}

uint64_t sub_22DDA477C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22DDA47A0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_22DDA47C4()
{
  uint64_t v0;

  sub_22DD9D804(*(_QWORD *)(v0 + 16));
}

void sub_22DDA47CC(id a1, char a2)
{
  if ((a2 & 1) == 0)

}

uint64_t sub_22DDA47D8(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_22DDA47FC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB7BC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22DDA483C(uint64_t a1)
{
  uint64_t v1;

  return MEMORY[0x22E31E7E8](a1, *(_QWORD *)(v1 + 16)) & 1;
}

void sub_22DDA4868(void *a1)
{
  uint64_t v1;

  sub_22DDA0F98(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_22DDA4870(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URLError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DDA48B4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for URLError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22DDA48F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_22DDA492C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t FBKInlineThumbsUp.feedbackController.getter()
{
  uint64_t v0;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
  MEMORY[0x22E31F8EC](&v2, v0);
  return v2;
}

uint64_t FBKInlineThumbsUp.feedbackController.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
  return sub_22DE1F07C();
}

void (*FBKInlineThumbsUp.feedbackController.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v4 = *v1;
  v5 = v1[1];
  v3[5] = *v1;
  v3[6] = v5;
  v6 = (void *)v1[2];
  v3[7] = v6;
  *v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  swift_retain();
  swift_retain();
  v7 = v6;
  v3[8] = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
  MEMORY[0x22E31F8EC]();
  return sub_22DD959A8;
}

uint64_t FBKInlineThumbsUp.$feedbackController.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
  sub_22DE1F094();
  return v1;
}

uint64_t FBKInlineThumbsUp.subject.getter()
{
  return sub_22DDA4DE8((uint64_t (*)(uint64_t))MEMORY[0x24BDF47B0]);
}

uint64_t type metadata accessor for FBKInlineThumbsUp()
{
  uint64_t result;

  result = qword_255DB7E08;
  if (!qword_255DB7E08)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22DDA4B70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = sub_22DE1E194();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  type metadata accessor for FBKInlineThumbsUp();
  v9(v6, (uint64_t)v8, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
  sub_22DE1F07C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t FBKInlineThumbsUp.subject.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_22DE1E194();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FBKInlineThumbsUp();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
  sub_22DE1F07C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*FBKInlineThumbsUp.subject.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = sub_22DE1E194();
  *v3 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[1] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[2] = malloc(v6);
  v3[3] = malloc(v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
  v3[4] = v7;
  v8 = malloc(*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v3[5] = v8;
  v9 = type metadata accessor for FBKInlineThumbsUp();
  sub_22DD95E00(v1 + *(int *)(v9 + 20), (uint64_t)v8);
  MEMORY[0x22E31F8EC](v7);
  return sub_22DD95D50;
}

uint64_t FBKInlineThumbsUp.$subject.getter()
{
  return sub_22DDA4DE8((uint64_t (*)(uint64_t))MEMORY[0x24BDF47E0]);
}

uint64_t sub_22DDA4DE8(uint64_t (*a1)(uint64_t))
{
  uint64_t v2;

  type metadata accessor for FBKInlineThumbsUp();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
  return a1(v2);
}

uint64_t FBKInlineThumbsUp.disabled.getter()
{
  uint64_t v0;
  uint64_t v2;

  type metadata accessor for FBKInlineThumbsUp();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7910);
  MEMORY[0x22E31F8EC](&v2, v0);
  return v2;
}

_QWORD *sub_22DDA4E90@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;

  type metadata accessor for FBKInlineThumbsUp();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7910);
  result = MEMORY[0x22E31F8EC](&v4, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_22DDA4F00()
{
  type metadata accessor for FBKInlineThumbsUp();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7910);
  return sub_22DE1F07C();
}

uint64_t FBKInlineThumbsUp.disabled.setter()
{
  type metadata accessor for FBKInlineThumbsUp();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7910);
  return sub_22DE1F07C();
}

void (*FBKInlineThumbsUp.disabled.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FBKInlineThumbsUp() + 24));
  v5 = *v4;
  v6 = v4[1];
  v3[3] = *v4;
  v3[4] = v6;
  LOBYTE(v4) = *((_BYTE *)v4 + 16);
  *((_BYTE *)v3 + 19) = (_BYTE)v4;
  *v3 = v5;
  v3[1] = v6;
  *((_BYTE *)v3 + 16) = (_BYTE)v4;
  swift_retain();
  swift_retain();
  v3[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7910);
  MEMORY[0x22E31F8EC]();
  return sub_22DD9610C;
}

uint64_t FBKInlineThumbsUp.$disabled.getter()
{
  uint64_t v1;

  type metadata accessor for FBKInlineThumbsUp();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7910);
  sub_22DE1F094();
  return v1;
}

uint64_t sub_22DDA50C0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for FBKInlineThumbsUp() + 28));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_22DD96FCC;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_22DD50D8C(v4);
}

uint64_t sub_22DDA5138(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_22DD96FC4;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for FBKInlineThumbsUp() + 28));
  v8 = *v7;
  sub_22DD50D8C(v3);
  result = sub_22DD50DE0(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t FBKInlineThumbsUp.onFormComplete.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FBKInlineThumbsUp() + 28));
  sub_22DD50D8C(v1);
  return v1;
}

uint64_t FBKInlineThumbsUp.onFormComplete.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t result;

  v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for FBKInlineThumbsUp() + 28));
  result = sub_22DD50DE0(*v5);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FBKInlineThumbsUp.onFormComplete.modify())(_QWORD)
{
  type metadata accessor for FBKInlineThumbsUp();
  return nullsub_1;
}

uint64_t FBKInlineThumbsUp.init(feedbackController:subject:disabled:onFormComplete:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10)
{
  int *v17;
  _QWORD *v18;
  uint64_t result;
  char *v20;

  v17 = (int *)type metadata accessor for FBKInlineThumbsUp();
  v18 = (_QWORD *)((char *)a9 + v17[7]);
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  result = sub_22DD96438(a4, (uint64_t)a9 + v17[5]);
  v20 = (char *)a9 + v17[6];
  *(_QWORD *)v20 = a5;
  *((_QWORD *)v20 + 1) = a6;
  v20[16] = a7;
  *v18 = a8;
  v18[1] = a10;
  return result;
}

uint64_t FBKInlineThumbsUp.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v21 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22DE1E14C();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v8 + 104))(v7, *MEMORY[0x24BE30EB0]);
  v9 = type metadata accessor for FBKInlineThumbsUp();
  sub_22DE1F094();
  v10 = (uint64_t *)((char *)v1 + *(int *)(v9 + 28));
  v11 = *v10;
  v12 = v10[1];
  v22 = *v1;
  v23 = *(_OWORD *)(v1 + 1);
  sub_22DD50D8C(v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
  sub_22DE1F094();
  v13 = v24;
  v14 = v25;
  v15 = v26;
  v16 = (uint64_t *)((char *)v1 + *(int *)(v9 + 24));
  v17 = *v16;
  v18 = v16[1];
  LOBYTE(v16) = *((_BYTE *)v16 + 16);
  v22 = v17;
  *(_QWORD *)&v23 = v18;
  BYTE8(v23) = (_BYTE)v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7910);
  sub_22DE1F094();
  return sub_22DDA6998((uint64_t)v7, (uint64_t)v4, v11, v12, v13, v14, v15, v21, v24, v25, v26);
}

uint64_t sub_22DDA54D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DDA54F4()
{
  uint64_t v0;

  type metadata accessor for FBKInlineThumbsUp();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
  return MEMORY[0x22E31F8EC](v0);
}

uint64_t getEnumTagSinglePayload for FBKInlineThumbsUp()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DDA5560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FBKInlineThumbsUp()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DDA55EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_22DDA5664()
{
  unint64_t v0;

  sub_22DD96F00();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_22DDA56F0()
{
  swift_release();
  return swift_deallocObject();
}

_QWORD *initializeBufferWithCopyOfBuffer for CloseButton(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for CloseButton()
{
  return swift_release();
}

_QWORD *assignWithCopy for CloseButton(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for CloseButton(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CloseButton(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CloseButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CloseButton()
{
  return &type metadata for CloseButton;
}

uint64_t sub_22DDA5848()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DDA5858@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;

  v2 = sub_22DE1E2E4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22DE1EFBC();
  if (qword_255DB53E0 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v2, (uint64_t)qword_255DC3DC0);
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v8(v5, v7, v2);
  v9 = sub_22DE1EF98();
  v10 = sub_22DE1EC5C();
  sub_22DE1E4B8();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  if (qword_255DB53F8 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v2, (uint64_t)qword_255DC3E08);
  v8(v5, v19, v2);
  v20 = sub_22DE1EF98();
  result = sub_22DE1EC5C();
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v9;
  *(_BYTE *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v12;
  *(_QWORD *)(a1 + 32) = v14;
  *(_QWORD *)(a1 + 40) = v16;
  *(_QWORD *)(a1 + 48) = v18;
  *(_BYTE *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = v20;
  *(_BYTE *)(a1 + 72) = result;
  return result;
}

uint64_t sub_22DDA59DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a1;
  v2 = sub_22DE1E704();
  v19 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7E48);
  v18 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7E50);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v1;
  v12 = v1[1];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7E58);
  sub_22DDA5C14();
  sub_22DE1F01C();
  sub_22DE1E6F8();
  sub_22DD508B0(&qword_255DB7E88, &qword_255DB7E48, MEMORY[0x24BDF43B0]);
  sub_22DDA5D88();
  sub_22DE1EDDC();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v5);
  v15 = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v20, v11, v8);
  *(_WORD *)(v15 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7E90) + 36)) = 256;
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_22DDA5BF0()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_22DDA5C14()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB7E60;
  if (!qword_255DB7E60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7E58);
    v2[0] = sub_22DDA5C98();
    v2[1] = sub_22DD508B0(&qword_255DB74D0, &qword_255DB74D8, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB7E60);
  }
  return result;
}

unint64_t sub_22DDA5C98()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB7E68;
  if (!qword_255DB7E68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7E70);
    v2[0] = sub_22DDA5D04();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB7E68);
  }
  return result;
}

unint64_t sub_22DDA5D04()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255DB7E78;
  if (!qword_255DB7E78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7E80);
    v2 = sub_22DD508B0((unint64_t *)&qword_255DB6C50, &qword_255DB6C58, MEMORY[0x24BDF0710]);
    v3[0] = MEMORY[0x24BDF40E8];
    v3[1] = v2;
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255DB7E78);
  }
  return result;
}

unint64_t sub_22DDA5D88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DB69D8;
  if (!qword_255DB69D8)
  {
    v1 = sub_22DE1E704();
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED858], v1);
    atomic_store(result, (unint64_t *)&qword_255DB69D8);
  }
  return result;
}

unint64_t sub_22DDA5DD4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_255DB7E98;
  if (!qword_255DB7E98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7E90);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7E48);
    v2[3] = sub_22DE1E704();
    v2[4] = sub_22DD508B0(&qword_255DB7E88, &qword_255DB7E48, MEMORY[0x24BDF43B0]);
    v2[5] = sub_22DDA5D88();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_22DD508B0(&qword_255DB7EA0, &qword_255DB7EA8, MEMORY[0x24BDEB950]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB7E98);
  }
  return result;
}

uint64_t *sub_22DDA5EBC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  id v35;
  id v36;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_22DE1E14C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[5];
    v9 = (uint64_t *)((char *)v4 + v8);
    v10 = (char *)a2 + v8;
    v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *v9 = *(uint64_t *)((char *)a2 + v8);
    v9[1] = v11;
    swift_retain();
    swift_retain();
    v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908) + 32);
    v13 = (char *)v9 + v12;
    v14 = &v10[v12];
    v15 = sub_22DE1E194();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[6];
    v17 = (uint64_t *)((char *)v4 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    if (*v18)
    {
      v19 = v18[1];
      *v17 = *v18;
      v17[1] = v19;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
    }
    v21 = a3[7];
    v22 = a3[8];
    v23 = (uint64_t *)((char *)v4 + v21);
    v24 = (char *)a2 + v21;
    v25 = *(void **)v24;
    v26 = *((_QWORD *)v24 + 1);
    *v23 = *(_QWORD *)v24;
    v23[1] = v26;
    v27 = (uint64_t *)((char *)v4 + v22);
    v28 = (uint64_t *)((char *)a2 + v22);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = (void *)v28[2];
    v27[2] = v30;
    v31 = a3[9];
    v32 = (char *)v4 + v31;
    v33 = (char *)a2 + v31;
    v34 = *((_QWORD *)v33 + 1);
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_QWORD *)v32 + 1) = v34;
    v32[16] = v33[16];
    v35 = v25;
    swift_retain();
    swift_retain();
    swift_retain();
    v36 = v30;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_22DDA6040(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_22DE1E14C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  swift_release();
  swift_release();
  v6 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908) + 32);
  v7 = sub_22DE1E194();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  if (*(_QWORD *)(a1 + a2[6]))
    swift_release();

  swift_release();
  v8 = a1 + a2[8];
  swift_release();
  swift_release();

  swift_release();
  return swift_release();
}

uint64_t sub_22DDA6130(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;

  v6 = sub_22DE1E14C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = v10;
  swift_retain();
  swift_retain();
  v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908) + 32);
  v12 = (char *)v8 + v11;
  v13 = v9 + v11;
  v14 = sub_22DE1E194();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[6];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  if (*v17)
  {
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  v19 = a3[7];
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v19);
  v22 = a2 + v19;
  v23 = *(void **)v22;
  v24 = *(_QWORD *)(v22 + 8);
  *v21 = *(_QWORD *)v22;
  v21[1] = v24;
  v25 = (_QWORD *)(a1 + v20);
  v26 = (_QWORD *)(a2 + v20);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = (void *)v26[2];
  v25[2] = v28;
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = *(_QWORD *)(v31 + 8);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_QWORD *)(v30 + 8) = v32;
  *(_BYTE *)(v30 + 16) = *(_BYTE *)(v31 + 16);
  v33 = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  v34 = v28;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_22DDA628C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_22DE1E14C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  swift_retain();
  swift_release();
  v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908) + 32);
  v11 = v8 + v10;
  v12 = v9 + v10;
  v13 = sub_22DE1E194();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[6];
  v15 = (_QWORD *)(a1 + v14);
  v16 = a2 + v14;
  v17 = *(_QWORD *)(a1 + v14);
  v18 = *(_QWORD *)(a2 + v14);
  if (!v17)
  {
    if (v18)
    {
      v20 = *(_QWORD *)(v16 + 8);
      *v15 = v18;
      v15[1] = v20;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v15 = *(_OWORD *)v16;
    goto LABEL_8;
  }
  if (!v18)
  {
    swift_release();
    goto LABEL_7;
  }
  v19 = *(_QWORD *)(v16 + 8);
  *v15 = v18;
  v15[1] = v19;
  swift_retain();
  swift_release();
LABEL_8:
  v21 = a3[7];
  v22 = (_QWORD *)(a1 + v21);
  v23 = a2 + v21;
  v24 = *(void **)(a1 + v21);
  v25 = *(void **)(a2 + v21);
  *v22 = v25;
  v26 = v25;

  v22[1] = *(_QWORD *)(v23 + 8);
  swift_retain();
  swift_release();
  v27 = a3[8];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);
  swift_retain();
  swift_release();
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
  swift_retain();
  swift_release();
  v30 = *(void **)(v29 + 16);
  v31 = *(void **)(v28 + 16);
  *(_QWORD *)(v28 + 16) = v30;
  v32 = v30;

  v33 = a3[9];
  v34 = a1 + v33;
  v35 = a2 + v33;
  *(_QWORD *)(a1 + v33) = *(_QWORD *)(a2 + v33);
  swift_retain();
  swift_release();
  *(_QWORD *)(v34 + 8) = *(_QWORD *)(v35 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(v34 + 16) = *(_BYTE *)(v35 + 16);
  return a1;
}

uint64_t sub_22DDA6480(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_22DE1E14C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = v10;
  v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908) + 32);
  v12 = (char *)v8 + v11;
  v13 = v9 + v11;
  v14 = sub_22DE1E194();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[6];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v18 = *v17;
  if (*v17)
  {
    v19 = v17[1];
    *v16 = v18;
    v16[1] = v19;
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  v20 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_BYTE *)(v24 + 16) = *(_BYTE *)(v25 + 16);
  return a1;
}

uint64_t sub_22DDA658C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_22DE1E14C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_release();
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  swift_release();
  v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908) + 32);
  v11 = v8 + v10;
  v12 = v9 + v10;
  v13 = sub_22DE1E194();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = a3[6];
  v15 = (_QWORD *)(a1 + v14);
  v16 = a2 + v14;
  v17 = *(_QWORD *)(a1 + v14);
  v18 = *(_QWORD *)(a2 + v14);
  if (!v17)
  {
    if (v18)
    {
      v20 = *(_QWORD *)(v16 + 8);
      *v15 = v18;
      v15[1] = v20;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v15 = *(_OWORD *)v16;
    goto LABEL_8;
  }
  if (!v18)
  {
    swift_release();
    goto LABEL_7;
  }
  v19 = *(_QWORD *)(v16 + 8);
  *v15 = v18;
  v15[1] = v19;
  swift_release();
LABEL_8:
  v21 = a3[7];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  v24 = *(void **)(a1 + v21);
  *v22 = *v23;

  v22[1] = v23[1];
  swift_release();
  v25 = a3[8];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_QWORD *)(a1 + v25) = *(_QWORD *)(a2 + v25);
  swift_release();
  *(_QWORD *)(v26 + 8) = *(_QWORD *)(v27 + 8);
  swift_release();
  v28 = *(void **)(v26 + 16);
  *(_QWORD *)(v26 + 16) = *(_QWORD *)(v27 + 16);

  v29 = a3[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_QWORD *)(a1 + v29) = *(_QWORD *)v31;
  swift_release();
  *(_QWORD *)(v30 + 8) = *(_QWORD *)(v31 + 8);
  swift_release();
  *(_BYTE *)(v30 + 16) = *(_BYTE *)(v31 + 16);
  return a1;
}

uint64_t sub_22DDA6734()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DDA6740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_22DE1E14C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_22DDA67F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DDA67FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_22DE1E14C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for FBKInlineViewButton()
{
  uint64_t result;

  result = qword_255DB7F08;
  if (!qword_255DB7F08)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22DDA68E4()
{
  unint64_t v0;
  unint64_t v1;

  sub_22DE1E14C();
  if (v0 <= 0x3F)
  {
    sub_22DD96F00();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_22DDA6988()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DDA6998@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, char a11)
{
  int *v14;
  _QWORD *v15;
  id *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;
  uint64_t v21;
  __int128 v27;

  v14 = (int *)type metadata accessor for FBKInlineViewButton();
  v15 = (_QWORD *)(a8 + v14[6]);
  v16 = (id *)(a8 + v14[7]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7FA8);
  sub_22DE1EFEC();
  *(_OWORD *)v16 = v27;
  v17 = sub_22DE1E14C();
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a8, a1, v17);
  sub_22DD506A0(a2, a8 + v14[5], &qword_255DB7908);
  *v15 = a3;
  v15[1] = a4;
  sub_22DE1EFEC();
  sub_22DD5071C(a2, &qword_255DB7908);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, v17);

  result = swift_release();
  *(_OWORD *)v16 = v27;
  v20 = (_QWORD *)(a8 + v14[8]);
  *v20 = a5;
  v20[1] = a6;
  v20[2] = a7;
  v21 = a8 + v14[9];
  *(_QWORD *)v21 = a9;
  *(_QWORD *)(v21 + 8) = a10;
  *(_BYTE *)(v21 + 16) = a11;
  return result;
}

uint64_t sub_22DDA6B20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;

  v2 = v1;
  v61 = a1;
  v3 = sub_22DE1E908();
  v4 = *(_QWORD *)(v3 - 8);
  v59 = v3;
  v60 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v58 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22DE1F19C();
  v56 = *(_QWORD *)(v6 - 8);
  v57 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v51 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22DE1F184();
  v9 = *(_QWORD *)(v8 - 8);
  v52 = v8;
  v53 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v49 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22DE1E758();
  v54 = *(_QWORD *)(v11 - 8);
  v55 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v50 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FBKInlineViewButton();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7F50);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7F58);
  MEMORY[0x24BDAC7A8](v47);
  v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7F60);
  MEMORY[0x24BDAC7A8](v48);
  v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DDA73C0(v2, (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v25 = swift_allocObject();
  sub_22DDA7538((uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24);
  v62 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7F68);
  sub_22DD508B0(&qword_255DB7F70, &qword_255DB7F68, MEMORY[0x24BDF41A8]);
  sub_22DE1F01C();
  v26 = v2 + *(int *)(v13 + 36);
  v27 = *(_QWORD *)v26;
  v28 = *(_QWORD *)(v26 + 8);
  LOBYTE(v26) = *(_BYTE *)(v26 + 16);
  v63 = v27;
  v64 = v28;
  v65 = v26;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7910);
  MEMORY[0x22E31F8EC](&v66, v29);
  v30 = v66;
  KeyPath = swift_getKeyPath();
  v32 = swift_allocObject();
  *(_BYTE *)(v32 + 16) = v30;
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v21, v19, v16);
  v33 = (uint64_t *)&v21[*(int *)(v47 + 36)];
  *v33 = KeyPath;
  v33[1] = (uint64_t)sub_22DDA7710;
  v33[2] = v32;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v34 = v49;
  sub_22DE1F178();
  v35 = v51;
  sub_22DE1F190();
  sub_22DD504A8(&qword_255DB64D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF5618], MEMORY[0x24BDF5608]);
  v36 = v50;
  v37 = v52;
  sub_22DE1E74C();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v35, v57);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v34, v37);
  v38 = swift_getKeyPath();
  v39 = (uint64_t *)&v23[*(int *)(v48 + 36)];
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6480);
  v42 = v54;
  v41 = v55;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))((char *)v39 + *(int *)(v40 + 28), v36, v55);
  *v39 = v38;
  sub_22DD506A0((uint64_t)v21, (uint64_t)v23, &qword_255DB7F58);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v36, v41);
  sub_22DD5071C((uint64_t)v21, &qword_255DB7F58);
  v43 = v58;
  sub_22DE1E8FC();
  sub_22DDA774C();
  sub_22DD504A8(&qword_255DB7F98, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE988], MEMORY[0x24BDEE978]);
  v44 = v59;
  sub_22DE1EDD0();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v43, v44);
  return sub_22DD5071C((uint64_t)v23, &qword_255DB7F60);
}

void sub_22DDA6FEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];
  id v37;

  v2 = sub_22DE1E194();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22DE1E14C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v34 - v11;
  v13 = type metadata accessor for FBKInlineViewButton();
  *(_OWORD *)v36 = *(_OWORD *)(a1 + *(int *)(v13 + 28));
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7FA0);
  sub_22DE1EFF8();
  v14 = v37;

  if (!v14)
  {
    v35 = v2;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, a1, v6);
    v15 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v12, v6);
    v16 = v15;
    if ((_DWORD)v15 == *MEMORY[0x24BE30EB0])
    {
      v17 = a1 + *(int *)(v13 + 32);
      *(_QWORD *)v36 = *(_QWORD *)v17;
      *(_OWORD *)&v36[8] = *(_OWORD *)(v17 + 8);
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
      MEMORY[0x22E31F8EC](&v37, v18);
      v19 = v37;
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
      MEMORY[0x22E31F8EC](v20);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 104))(v10, v16, v6);
      v21 = (uint64_t)v10;
      v22 = (uint64_t)v5;
      v23 = 0;
    }
    else
    {
      if ((_DWORD)v15 == *MEMORY[0x24BE30E80])
      {
        v24 = a1 + *(int *)(v13 + 32);
        *(_QWORD *)v36 = *(_QWORD *)v24;
        *(_OWORD *)&v36[8] = *(_OWORD *)(v24 + 8);
      }
      else
      {
        v25 = (uint64_t *)(a1 + *(int *)(v13 + 32));
        v27 = *v25;
        v26 = v25[1];
        v28 = v25[2];
        if ((_DWORD)v15 != *MEMORY[0x24BE30E98])
        {
          *(_QWORD *)v36 = v27;
          *(_QWORD *)&v36[8] = v26;
          *(_QWORD *)&v36[16] = v28;
          v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
          MEMORY[0x22E31F8EC](&v37, v31);
          v32 = v37;
          v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
          MEMORY[0x22E31F8EC](v33);
          sub_22DDE3944(a1, (uint64_t)v5, 1, 0);

          (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v35);
          (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
          return;
        }
        *(_QWORD *)v36 = v27;
        *(_QWORD *)&v36[8] = v26;
        *(_QWORD *)&v36[16] = v28;
      }
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
      MEMORY[0x22E31F8EC](&v37, v29);
      v19 = v37;
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908);
      MEMORY[0x22E31F8EC](v30);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 104))(v10, v16, v6);
      v21 = (uint64_t)v10;
      v22 = (uint64_t)v5;
      v23 = 1;
    }
    sub_22DDE3944(v21, v22, v23, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v35);
  }
}

uint64_t sub_22DDA730C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _QWORD v6[3];

  v6[1] = sub_22DE1E140();
  v6[2] = v2;
  type metadata accessor for FBKInlineViewButton();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
  MEMORY[0x22E31F8EC](v6, v3);
  v4 = (void *)v6[0];
  sub_22DDE8864(a1);

  sub_22DD50840();
  return sub_22DE1EFE0();
}

uint64_t sub_22DDA73C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FBKInlineViewButton();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DDA7404()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (int *)type metadata accessor for FBKInlineViewButton();
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  v3 = sub_22DE1E14C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = v2 + v1[5];
  swift_release();
  swift_release();
  v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7908) + 32);
  v6 = sub_22DE1E194();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (*(_QWORD *)(v2 + v1[6]))
    swift_release();

  swift_release();
  v7 = v2 + v1[8];
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DDA7538(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FBKInlineViewButton();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_22DDA757C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FBKInlineViewButton() - 8) + 80);
  sub_22DDA6FEC(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_22DDA75A8()
{
  uint64_t v0;

  return sub_22DDA730C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_22DDA75B0()
{
  return sub_22DE1E7D0();
}

uint64_t sub_22DDA75D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_22DE1E758();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_22DE1E7DC();
}

uint64_t sub_22DDA764C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22DE1E884();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22DDA7678@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22DE1E884();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22DDA76A4()
{
  return sub_22DE1E890();
}

uint64_t sub_22DDA76C8()
{
  return sub_22DE1E890();
}

_BYTE *sub_22DDA76EC(_BYTE *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_22DDA7700()
{
  return swift_deallocObject();
}

_BYTE *sub_22DDA7710(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_22DDA7728()
{
  return sub_22DE1E7D0();
}

unint64_t sub_22DDA774C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB7F78;
  if (!qword_255DB7F78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7F60);
    v2[0] = sub_22DDA77D0();
    v2[1] = sub_22DD508B0(&qword_255DB7F90, &qword_255DB6480, MEMORY[0x24BDF1028]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB7F78);
  }
  return result;
}

unint64_t sub_22DDA77D0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB7F80;
  if (!qword_255DB7F80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7F58);
    v2[0] = sub_22DD508B0(&qword_255DB7F88, &qword_255DB7F50, MEMORY[0x24BDF43B0]);
    v2[1] = sub_22DD508B0(&qword_255DB6918, &qword_255DB6920, MEMORY[0x24BDF1248]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB7F80);
  }
  return result;
}

uint64_t sub_22DDA786C()
{
  uint64_t (*v0)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7F60);
  sub_22DE1E908();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEE988];
  sub_22DDA774C();
  sub_22DD504A8(&qword_255DB7F98, v0, MEMORY[0x24BDEE978]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DDA78F4(_QWORD *a1)
{
  void *v1;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  BOOL v14;
  id v15;
  void *v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int64_t v46;
  uint64_t v47;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  unint64_t v51;
  uint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  unint64_t v60;
  _QWORD *v61;
  char v62;
  char v63;
  unint64_t v64;
  uint64_t v65;
  _BOOL8 v66;
  uint64_t v67;
  char v68;
  unint64_t v69;
  char v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t result;
  _QWORD *v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  void *v81;
  int64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85[4];
  uint64_t v86;

  v3 = objc_msgSend(v1, sel_allVisibleAnswers);
  sub_22DD70E78(0, &qword_255DB7FC8);
  v4 = sub_22DE1F3D0();

  v85[0] = MEMORY[0x24BEE4AF8];
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_22DE1F7D8();
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      if (v5 < 1)
        goto LABEL_102;
      for (i = 0; i != v5; ++i)
      {
        if ((v4 & 0xC000000000000001) != 0)
          v7 = (id)MEMORY[0x22E31FFC4](i, v4);
        else
          v7 = *(id *)(v4 + 8 * i + 32);
        v8 = v7;
        if (objc_msgSend(v7, sel_isAnswered))
        {
          sub_22DE1F778();
          sub_22DE1F79C();
          sub_22DE1F7A8();
          sub_22DE1F784();
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease();
      v9 = v85[0];
      if ((v85[0] & 0x8000000000000000) != 0)
        goto LABEL_56;
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
  v9 = MEMORY[0x24BEE4AF8];
  if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
    goto LABEL_56;
LABEL_16:
  if ((v9 & 0x4000000000000000) != 0)
    goto LABEL_56;
  v10 = *(_QWORD *)(v9 + 16);
  v75 = a1;
  if (!v10)
    goto LABEL_57;
  do
  {
    v11 = 0;
    v79 = v9 & 0xC000000000000001;
    v76 = v9 + 32;
    a1 = (_QWORD *)MEMORY[0x24BEE4B00];
    v78 = v9;
    v77 = v10;
    while (1)
    {
      if (v79)
      {
        v12 = (id)MEMORY[0x22E31FFC4](v11, v9);
      }
      else
      {
        if (v11 >= *(_QWORD *)(v9 + 16))
          goto LABEL_54;
        v12 = *(id *)(v76 + 8 * v11);
      }
      v13 = v12;
      v14 = __OFADD__(v11++, 1);
      if (v14)
        break;
      v15 = objc_msgSend(v12, sel_values);
      if (v15)
      {
        v16 = v15;
        v9 = sub_22DE1F3D0();

        v17 = *(_QWORD *)(v9 + 16);
        v86 = MEMORY[0x24BEE4AF8];
        sub_22DE0F280(0, v17, 0);
        v18 = *(_QWORD *)(v9 + 16);
        v81 = v13;
        if (v18)
        {
          v19 = v9 + 32;
          while (1)
          {
            sub_22DDA48F0(v19, (uint64_t)v85);
            if (!swift_dynamicCast())
              break;
            v20 = v86;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_22DE0F280(0, *(_QWORD *)(v20 + 16) + 1, 1);
              v20 = v86;
            }
            v9 = *(_QWORD *)(v20 + 16);
            v21 = *(_QWORD *)(v20 + 24);
            if (v9 >= v21 >> 1)
            {
              sub_22DE0F280(v21 > 1, v9 + 1, 1);
              v20 = v86;
            }
            *(_QWORD *)(v20 + 16) = v9 + 1;
            v22 = v20 + 16 * v9;
            *(_QWORD *)(v22 + 32) = v83;
            *(_QWORD *)(v22 + 40) = v84;
            v19 += 32;
            if (!--v18)
            {
              swift_bridgeObjectRelease();
              goto LABEL_37;
            }
          }
          v83 = 0;
          v84 = 0;
          swift_release();

          swift_bridgeObjectRelease();
          goto LABEL_50;
        }
        v20 = v86;
        swift_bridgeObjectRelease();
LABEL_37:
        v23 = objc_msgSend(v13, sel_question);
        v24 = objc_msgSend(v23, sel_role);

        if (!v24)
          goto LABEL_103;
        v25 = sub_22DE1F2B0();
        v27 = v26;

        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v85[0] = (unint64_t)a1;
        v30 = sub_22DDFD368(v25, v27);
        v31 = a1[2];
        v32 = (v29 & 1) == 0;
        v33 = v31 + v32;
        if (__OFADD__(v31, v32))
          goto LABEL_53;
        v34 = v29;
        if (a1[3] >= v33)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            a1 = (_QWORD *)v85[0];
            if ((v29 & 1) == 0)
              goto LABEL_47;
          }
          else
          {
            sub_22DDFFA74();
            a1 = (_QWORD *)v85[0];
            if ((v34 & 1) == 0)
              goto LABEL_47;
          }
        }
        else
        {
          sub_22DDFE014(v33, isUniquelyReferenced_nonNull_native);
          v35 = sub_22DDFD368(v25, v27);
          if ((v34 & 1) != (v36 & 1))
            goto LABEL_104;
          v30 = v35;
          a1 = (_QWORD *)v85[0];
          if ((v34 & 1) == 0)
          {
LABEL_47:
            a1[(v30 >> 6) + 8] |= 1 << v30;
            v38 = (uint64_t *)(a1[6] + 16 * v30);
            *v38 = v25;
            v38[1] = v27;
            *(_QWORD *)(a1[7] + 8 * v30) = v20;
            v39 = a1[2];
            v14 = __OFADD__(v39, 1);
            v40 = v39 + 1;
            if (v14)
              goto LABEL_55;
            a1[2] = v40;
            swift_bridgeObjectRetain();
            goto LABEL_49;
          }
        }
        v37 = a1[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v37 + 8 * v30) = v20;
LABEL_49:

        swift_bridgeObjectRelease();
LABEL_50:
        swift_bridgeObjectRelease();
        v10 = v77;
        v9 = v78;
        if (v11 == v77)
        {
LABEL_51:
          swift_release();
          goto LABEL_58;
        }
      }
      else
      {

        if (v11 == v10)
          goto LABEL_51;
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    swift_bridgeObjectRetain();
    v10 = sub_22DE1F7D8();
    swift_release();
    v75 = a1;
  }
  while (v10);
LABEL_57:
  swift_release();
  a1 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_58:
  v41 = (char *)v75 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_answers;
  swift_beginAccess();
  v42 = *(_QWORD *)v41;
  v80 = *(_QWORD *)v41 + 64;
  v43 = 1 << *(_BYTE *)(*(_QWORD *)v41 + 32);
  v44 = -1;
  if (v43 < 64)
    v44 = ~(-1 << v43);
  v45 = v44 & *(_QWORD *)(*(_QWORD *)v41 + 64);
  v82 = (unint64_t)(v43 + 63) >> 6;
  swift_bridgeObjectRetain();
  v46 = 0;
  if (v45)
    goto LABEL_83;
  while (2)
  {
    v48 = v46 + 1;
    if (__OFADD__(v46, 1))
    {
      __break(1u);
      goto LABEL_99;
    }
    if (v48 >= v82)
      goto LABEL_97;
    v49 = *(_QWORD *)(v80 + 8 * v48);
    ++v46;
    if (v49)
      goto LABEL_77;
    v46 = v48 + 1;
    if (v48 + 1 >= v82)
      goto LABEL_97;
    v49 = *(_QWORD *)(v80 + 8 * v46);
    if (v49)
      goto LABEL_77;
    v46 = v48 + 2;
    if (v48 + 2 >= v82)
      goto LABEL_97;
    v49 = *(_QWORD *)(v80 + 8 * v46);
    if (v49)
      goto LABEL_77;
    v50 = v48 + 3;
    if (v50 >= v82)
    {
LABEL_97:
      swift_release();
      return (uint64_t)a1;
    }
    else
    {
      v49 = *(_QWORD *)(v80 + 8 * v50);
      if (v49)
      {
        v46 = v50;
LABEL_77:
        v45 = (v49 - 1) & v49;
        v51 = __clz(__rbit64(v49)) + (v46 << 6);
LABEL_78:
        v52 = (uint64_t *)(*(_QWORD *)(v42 + 48) + 16 * v51);
        v54 = *v52;
        v53 = v52[1];
        v55 = *v52;
        v56 = v53;
        if (v53 <= 2)
        {
          v55 = *(_QWORD *)&aTitle_6[8 * v53];
          v56 = *(_QWORD *)&aDescrip_0[8 * v53 + 8];
        }
        v57 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v51);
        v58 = a1[2];
        sub_22DDA492C(v54, v53);
        sub_22DDA492C(v54, v53);
        swift_bridgeObjectRetain();
        if (v58)
        {
          sub_22DDFD368(v55, v56);
          if ((v59 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_22DDA40E0(v54, v53);
            if (!v45)
              continue;
            goto LABEL_83;
          }
        }
        swift_bridgeObjectRelease();
        if (v53 <= 2)
        {
          v54 = *(_QWORD *)&aTitle_6[8 * v53];
          v53 = *(_QWORD *)&aDescrip_0[8 * v53 + 8];
        }
        v61 = a1;
        v62 = swift_isUniquelyReferenced_nonNull_native();
        v64 = sub_22DDFD368(v54, v53);
        v65 = v61[2];
        v66 = (v63 & 1) == 0;
        v67 = v65 + v66;
        if (__OFADD__(v65, v66))
          goto LABEL_100;
        v68 = v63;
        if (v61[3] >= v67)
        {
          if ((v62 & 1) != 0)
          {
            a1 = v61;
            if ((v63 & 1) == 0)
              goto LABEL_93;
          }
          else
          {
            sub_22DDFFA74();
            a1 = v61;
            if ((v68 & 1) == 0)
              goto LABEL_93;
          }
        }
        else
        {
          sub_22DDFE014(v67, v62);
          v69 = sub_22DDFD368(v54, v53);
          if ((v68 & 1) != (v70 & 1))
            goto LABEL_104;
          v64 = v69;
          a1 = v61;
          if ((v68 & 1) == 0)
          {
LABEL_93:
            a1[(v64 >> 6) + 8] |= 1 << v64;
            v71 = (uint64_t *)(a1[6] + 16 * v64);
            *v71 = v54;
            v71[1] = v53;
            *(_QWORD *)(a1[7] + 8 * v64) = v57;
            v72 = a1[2];
            v14 = __OFADD__(v72, 1);
            v73 = v72 + 1;
            if (v14)
              goto LABEL_101;
            a1[2] = v73;
            swift_bridgeObjectRetain();
            goto LABEL_63;
          }
        }
        v47 = a1[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v47 + 8 * v64) = v57;
LABEL_63:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!v45)
          continue;
LABEL_83:
        v60 = __clz(__rbit64(v45));
        v45 &= v45 - 1;
        v51 = v60 | (v46 << 6);
        goto LABEL_78;
      }
      while (1)
      {
        v46 = v50 + 1;
        if (__OFADD__(v50, 1))
          break;
        if (v46 >= v82)
          goto LABEL_97;
        v49 = *(_QWORD *)(v80 + 8 * v46);
        ++v50;
        if (v49)
          goto LABEL_77;
      }
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      result = sub_22DE1F91C();
      __break(1u);
    }
    return result;
  }
}

uint64_t sub_22DDA818C(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int64_t v40;
  unint64_t v41;
  unint64_t v43;
  int64_t v44;
  uint64_t *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  id v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t result;
  unint64_t v74;
  unsigned __int8 v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  int64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _OWORD v87[4];
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  unsigned __int8 v98;
  uint64_t v99;

  if (qword_255DB52F8 != -1)
    swift_once();
  v1 = sub_22DE1E410();
  __swift_project_value_buffer(v1, (uint64_t)qword_255DB7FB0);
  v2 = sub_22DE1E3F8();
  v3 = sub_22DE1F4E4();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    *(_QWORD *)&v93 = v5;
    *(_DWORD *)v4 = 136446210;
    *(_QWORD *)&v89 = sub_22DDA2E30(0xD000000000000022, 0x800000022DE2A7A0, (uint64_t *)&v93);
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v2, v3, "%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v5, -1, -1);
    MEMORY[0x22E320870](v4, -1, -1);
  }

  v6 = objc_msgSend(v80, sel_allVisibleAnswers);
  sub_22DD70E78(0, &qword_255DB7FC8);
  v7 = sub_22DE1F3D0();

  *(_QWORD *)&v93 = MEMORY[0x24BEE4AF8];
  if (!(v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_7;
LABEL_18:
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x24BEE4AF8];
LABEL_19:
    if ((v12 & 0x8000000000000000) != 0 || (v12 & 0x4000000000000000) != 0)
      goto LABEL_82;
    v13 = *(_QWORD *)(v12 + 16);
    while (v13)
    {
      v78 = v12 & 0xC000000000000001;
      v14 = MEMORY[0x24BEE4B00];
      v15 = 4;
      v74 = v12;
      v76 = v13;
      while (1)
      {
        v16 = v78 ? (id)MEMORY[0x22E31FFC4](v15 - 4, v12) : *(id *)(v12 + 8 * v15);
        v17 = v16;
        if (__OFADD__(v15 - 4, 1))
          break;
        v81 = v15 - 3;
        v83 = v14;
        v85 = v15;
        v18 = objc_msgSend(v16, sel_question);
        v19 = objc_msgSend(v18, sel_tat);
        v20 = sub_22DE1F2B0();
        v22 = v21;

        v23 = objc_msgSend(v18, sel_text);
        if (!v23)
          goto LABEL_84;
        v24 = v23;
        v25 = sub_22DE1F2B0();
        v27 = v26;

        LOBYTE(v24) = objc_msgSend(v18, sel_visible);
        sub_22DDA9748(v18, (uint64_t)&v89);
        v28 = v24 ^ 1;
        v29 = v89;
        v30 = BYTE8(v89);
        *(_QWORD *)&v89 = v20;
        *((_QWORD *)&v89 + 1) = v22;
        *(_QWORD *)&v90 = v25;
        *((_QWORD *)&v90 + 1) = v27;
        LOBYTE(v91) = v24 ^ 1;
        v31 = v29;
        *((_QWORD *)&v91 + 1) = v29;
        v75 = v30;
        LOBYTE(v92) = v30;
        v32 = sub_22DDAA81C(v17, (uint64_t *)&v89);

        *(_QWORD *)&v93 = v20;
        *((_QWORD *)&v93 + 1) = v22;
        v94 = v25;
        v95 = v27;
        v96 = v28;
        v97 = v31;
        v98 = v75;
        v99 = v32;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_22DDAA44C(v31, v75);
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v89 = v83;
        sub_22DDFF3D8(&v93, v20, v22, isUniquelyReferenced_nonNull_native);
        v14 = v89;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_22DDAA4C4(v31, v75);
        swift_bridgeObjectRelease();
        v12 = v74;
        v15 = v85 + 1;
        if (v81 == v76)
          goto LABEL_32;
      }
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      swift_bridgeObjectRetain();
      v13 = sub_22DE1F7D8();
      swift_release();
    }
    v14 = MEMORY[0x24BEE4B00];
LABEL_32:
    swift_release();
    v34 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_answers);
    swift_beginAccess();
    v35 = *v34;
    v36 = *v34 + 64;
    v37 = 1 << *(_BYTE *)(*v34 + 32);
    v38 = -1;
    if (v37 < 64)
      v38 = ~(-1 << v37);
    v39 = v38 & *(_QWORD *)(*v34 + 64);
    v79 = (unint64_t)(v37 + 63) >> 6;
    v82 = v35;
    swift_bridgeObjectRetain();
    v40 = 0;
    v12 = 0xE600000000000000;
    v77 = v36;
LABEL_35:
    v84 = v14;
    while (1)
    {
      if (v39)
      {
        v86 = (v39 - 1) & v39;
        v41 = __clz(__rbit64(v39)) | (v40 << 6);
      }
      else
      {
        if (__OFADD__(v40++, 1))
          goto LABEL_80;
        if (v40 >= v79)
        {
LABEL_78:
          swift_release();
          v70 = swift_bridgeObjectRetain();
          v71 = sub_22DDD073C(v70);
          swift_bridgeObjectRelease_n();
          return (uint64_t)v71;
        }
        v43 = *(_QWORD *)(v36 + 8 * v40);
        if (!v43)
        {
          v44 = v40 + 1;
          if (v40 + 1 >= v79)
            goto LABEL_78;
          v43 = *(_QWORD *)(v36 + 8 * v44);
          if (!v43)
          {
            v44 = v40 + 2;
            if (v40 + 2 >= v79)
              goto LABEL_78;
            v43 = *(_QWORD *)(v36 + 8 * v44);
            if (!v43)
            {
              v44 = v40 + 3;
              if (v40 + 3 >= v79)
                goto LABEL_78;
              v43 = *(_QWORD *)(v36 + 8 * v44);
              if (!v43)
              {
                while (1)
                {
                  v40 = v44 + 1;
                  if (__OFADD__(v44, 1))
                    goto LABEL_81;
                  if (v40 >= v79)
                    goto LABEL_78;
                  v43 = *(_QWORD *)(v36 + 8 * v40);
                  ++v44;
                  if (v43)
                    goto LABEL_49;
                }
              }
            }
          }
          v40 = v44;
        }
LABEL_49:
        v86 = (v43 - 1) & v43;
        v41 = __clz(__rbit64(v43)) + (v40 << 6);
      }
      v45 = (uint64_t *)(*(_QWORD *)(v82 + 48) + 16 * v41);
      v46 = *v45;
      v47 = v45[1];
      v48 = 0x706972637365643ALL;
      if (v47 != 2)
        v48 = v46;
      v49 = 0xEC0000006E6F6974;
      if (v47 != 2)
        v49 = v47;
      if (v47 == 1)
      {
        v48 = 0x616572613ALL;
        v49 = 0xE500000000000000;
      }
      if (v47)
        v50 = v48;
      else
        v50 = 0x656C7469743ALL;
      if (v47)
        v51 = v49;
      else
        v51 = 0xE600000000000000;
      v52 = *(_QWORD *)(v14 + 16);
      sub_22DDA492C(v46, v47);
      sub_22DDA492C(v46, v47);
      if (v52)
      {
        sub_22DDFD368(v50, v51);
        v54 = v53;
        swift_bridgeObjectRelease();
        if ((v54 & 1) == 0)
          goto LABEL_66;
        swift_bridgeObjectRelease();
        v39 = v86;
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_66:
        v55 = objc_msgSend(v80, sel_formResponse);
        v56 = objc_msgSend(v55, sel_answers);

        if (!v56)
          goto LABEL_85;
        v57 = sub_22DE1F49C();

        v58 = sub_22DDA940C(v57);
        swift_bridgeObjectRelease();
        if (!v58)
          goto LABEL_85;
        swift_bridgeObjectRetain();
        sub_22DDAA058(v58, v50, v51);
        v60 = v59;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v60)
        {
          v61 = v60;
          swift_bridgeObjectRelease();
          sub_22DDA9278(v61, (uint64_t *)v87);
          v89 = v87[0];
          v90 = v87[1];
          v91 = v87[2];
          v92 = v87[3];
          v68 = *((_QWORD *)&v87[0] + 1);
          v67 = *(_QWORD *)&v87[0];
          swift_bridgeObjectRetain();
          sub_22DDAA3E8((uint64_t)&v89);
          v69 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)&v87[0] = v14;
          sub_22DDFF3D8(&v89, v67, v68, v69);
          v14 = *(_QWORD *)&v87[0];

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_22DDAA460((uint64_t)&v89);
          v39 = v86;
          goto LABEL_35;
        }
        swift_bridgeObjectRetain();
        v62 = sub_22DE1E3F8();
        v63 = sub_22DE1F514();
        if (os_log_type_enabled(v62, v63))
        {
          v64 = (uint8_t *)swift_slowAlloc();
          v65 = swift_slowAlloc();
          *(_QWORD *)&v87[0] = v65;
          *(_DWORD *)v64 = 136446210;
          swift_bridgeObjectRetain();
          v88 = sub_22DDA2E30(v50, v51, (uint64_t *)v87);
          v36 = v77;
          sub_22DE1F628();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_22DD4B000, v62, v63, "Prefilled question %{public}s does not match a question tat in Form", v64, 0xCu);
          swift_arrayDestroy();
          v66 = v65;
          v14 = v84;
          MEMORY[0x22E320870](v66, -1, -1);
          MEMORY[0x22E320870](v64, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v12 = 0xE600000000000000;
        v39 = v86;
      }
    }
  }
  swift_bridgeObjectRetain();
  v8 = sub_22DE1F7D8();
  swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_18;
LABEL_7:
  if (v8 >= 1)
  {
    for (i = 0; i != v8; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x22E31FFC4](i, v7);
      else
        v10 = *(id *)(v7 + 8 * i + 32);
      v11 = v10;
      if (objc_msgSend(v10, sel_isAnswered))
      {
        sub_22DE1F778();
        sub_22DE1F79C();
        sub_22DE1F7A8();
        sub_22DE1F784();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v12 = v93;
    goto LABEL_19;
  }
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  result = sub_22DE1F7CC();
  __break(1u);
  return result;
}

uint64_t sub_22DDA90BC()
{
  uint64_t v0;

  v0 = sub_22DE1E410();
  __swift_allocate_value_buffer(v0, qword_255DB7FB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_255DB7FB0);
  return sub_22DE1E404();
}

uint64_t sub_22DDA9134(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[32];
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x24BEE4AF8];
  sub_22DE0F280(0, v2, 0);
  v3 = v12;
  if (v2)
  {
    for (i = a1 + 32; ; i += 32)
    {
      sub_22DDA48F0(i, (uint64_t)v11);
      if (!swift_dynamicCast())
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22DE0F280(0, *(_QWORD *)(v3 + 16) + 1, 1);
        v3 = v12;
      }
      v6 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_22DE0F280(v5 > 1, v6 + 1, 1);
        v3 = v12;
      }
      *(_QWORD *)(v3 + 16) = v6 + 1;
      v7 = v3 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v10;
      if (!--v2)
        return v3;
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

void sub_22DDA9278(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t *v29;

  v5 = objc_msgSend(a1, sel_question);
  v6 = objc_msgSend(v5, sel_tat);
  v7 = sub_22DE1F2B0();
  v9 = v8;

  v10 = objc_msgSend(v5, sel_text);
  if (v10)
  {
    v11 = v10;
    v12 = sub_22DE1F2B0();
    v14 = v13;

    v15 = objc_msgSend(v5, sel_visible);
    sub_22DDA9748(v5, (uint64_t)&v22);
    if (v2)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v29 = a2;
      v16 = v15 ^ 1;
      v17 = v22;
      v18 = v23;
      v22 = v7;
      v23 = v9;
      v24 = v12;
      v25 = v14;
      v21 = v16;
      v26 = v16;
      v27 = v17;
      v28 = v18;
      v19 = sub_22DDAA81C(a1, &v22);

      v20 = v29;
      *v29 = v7;
      v20[1] = v9;
      v20[2] = v12;
      v20[3] = v14;
      *((_BYTE *)v20 + 32) = v21;
      v20[5] = v17;
      *((_BYTE *)v20 + 48) = v18;
      v20[7] = v19;
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_22DDA940C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  _BYTE v28[40];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7FE8);
    v2 = sub_22DE1F718();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B08];
  }
  v27 = a1 + 56;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v26 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 56;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v8 << 6);
      v12 = v8;
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v13 >= v26)
      goto LABEL_39;
    v14 = *(_QWORD *)(v27 + 8 * v13);
    v12 = v8 + 1;
    if (!v14)
    {
      v12 = v8 + 2;
      if (v8 + 2 >= v26)
        goto LABEL_39;
      v14 = *(_QWORD *)(v27 + 8 * v12);
      if (!v14)
      {
        v12 = v8 + 3;
        if (v8 + 3 >= v26)
          goto LABEL_39;
        v14 = *(_QWORD *)(v27 + 8 * v12);
        if (!v14)
        {
          v12 = v8 + 4;
          if (v8 + 4 >= v26)
            goto LABEL_39;
          v14 = *(_QWORD *)(v27 + 8 * v12);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v10 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_28:
    sub_22DDAABD8(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)v28);
    v16 = (void *)sub_22DE1F6F4();
    sub_22DDAAC14((uint64_t)v28);
    objc_opt_self();
    v17 = swift_dynamicCastObjCClass();
    if (!v17)
    {
      swift_release_n();

      sub_22DD70E70();
      return 0;
    }
    v18 = v17;
    result = sub_22DE1F5EC();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v9) = v18;
    ++*(_QWORD *)(v2 + 16);
    v8 = v12;
    v5 = v10;
  }
  v15 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_39:
    swift_release();
    sub_22DD70E70();
    return v2;
  }
  v14 = *(_QWORD *)(v27 + 8 * v15);
  if (v14)
  {
    v12 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v12 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v12 >= v26)
      goto LABEL_39;
    v14 = *(_QWORD *)(v27 + 8 * v12);
    ++v15;
    if (v14)
      goto LABEL_27;
  }
LABEL_42:
  __break(1u);
  return result;
}

id sub_22DDA9748@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  id result;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  result = objc_msgSend(a1, sel_answerType);
  switch((unint64_t)result)
  {
    case 0uLL:
      *(_QWORD *)a2 = 0;
      goto LABEL_17;
    case 1uLL:
      v10 = 1;
      goto LABEL_16;
    case 2uLL:
    case 3uLL:
      result = (id)sub_22DDAA6A8(a1);
      if (!v2)
      {
        *(_QWORD *)a2 = result;
        *(_BYTE *)(a2 + 8) = 0;
      }
      return result;
    case 4uLL:
      result = (id)sub_22DDAA6A8(a1);
      if (v2)
        return result;
      *(_QWORD *)a2 = result;
      v11 = 1;
      goto LABEL_18;
    case 5uLL:
    case 6uLL:
    case 0xBuLL:
      v6 = objc_msgSend(a1, sel_answerType);
      sub_22DDAAC48();
      swift_allocError();
      *(_QWORD *)v7 = v6;
      *(_BYTE *)(v7 + 8) = 0;
      goto LABEL_4;
    case 7uLL:
      result = (id)sub_22DDAA6A8(a1);
      if (v2)
        return result;
      *(_QWORD *)a2 = result;
      v11 = 2;
      goto LABEL_18;
    case 8uLL:
      v10 = 2;
      goto LABEL_16;
    case 9uLL:
      *(_QWORD *)a2 = 3;
      *(_BYTE *)(a2 + 8) = 3;
      return result;
    case 0xAuLL:
      v10 = 4;
LABEL_16:
      *(_QWORD *)a2 = v10;
LABEL_17:
      v11 = 3;
LABEL_18:
      *(_BYTE *)(a2 + 8) = v11;
      break;
    default:
      v8 = objc_msgSend(a1, sel_answerType);
      sub_22DDAAC48();
      swift_allocError();
      *(_QWORD *)v9 = v8;
      *(_BYTE *)(v9 + 8) = 1;
LABEL_4:
      result = (id)swift_willThrow();
      break;
  }
  return result;
}

uint64_t sub_22DDA98C4()
{
  uint64_t v0;

  sub_22DE1F730();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8020);
  v0 = sub_22DE1F2EC();
  swift_bridgeObjectRelease();
  sub_22DE1F328();
  swift_bridgeObjectRetain();
  sub_22DE1F328();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_22DDA9990()
{
  return sub_22DDA98C4();
}

uint64_t sub_22DDA9998()
{
  uint64_t v0;

  sub_22DE1F730();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8018);
  v0 = sub_22DE1F2EC();
  swift_bridgeObjectRelease();
  sub_22DE1F328();
  swift_bridgeObjectRetain();
  sub_22DE1F328();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_22DDA9A64()
{
  return sub_22DDA9998();
}

uint64_t sub_22DDA9A6C()
{
  uint64_t v0;

  sub_22DE1F730();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8010);
  v0 = sub_22DE1F2EC();
  swift_bridgeObjectRelease();
  sub_22DE1F328();
  sub_22DE1F328();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_22DDA9BEC()
{
  return sub_22DDA9A6C();
}

uint64_t sub_22DDA9BF8()
{
  uint64_t v0;

  sub_22DE1F730();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8008);
  v0 = sub_22DE1F2EC();
  swift_bridgeObjectRelease();
  sub_22DE1F328();
  sub_22DE1F328();
  sub_22DE1F328();
  return v0;
}

uint64_t sub_22DDA9D38()
{
  return sub_22DDA9BF8();
}

void sub_22DDA9D44(id *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  os_log_type_t type;
  uint64_t v31[2];
  uint64_t v32;
  uint64_t v33;

  v6 = *a1;
  v7 = objc_msgSend(*a1, sel_value);
  sub_22DE1F664();
  swift_unknownObjectRelease();
  if ((swift_dynamicCast() & 1) != 0)
  {
    v8 = v31[0];
    v9 = v31[1];
    v10 = objc_msgSend(v6, sel_title);
    v11 = sub_22DE1F2B0();
    v13 = v12;

    *a3 = v11;
    a3[1] = v13;
    a3[2] = v8;
    a3[3] = v9;
  }
  else
  {
    if (qword_255DB52F8 != -1)
      swift_once();
    v14 = sub_22DE1E410();
    __swift_project_value_buffer(v14, (uint64_t)qword_255DB7FB0);
    v15 = a2;
    v16 = v6;
    v17 = v15;
    v18 = v16;
    v19 = sub_22DE1E3F8();
    v20 = sub_22DE1F4FC();
    if (os_log_type_enabled(v19, v20))
    {
      type = v20;
      v21 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v31[0] = v29;
      *(_DWORD *)v21 = 136315394;
      v22 = objc_msgSend(v17, sel_tat);
      v33 = v3;
      v23 = sub_22DE1F2B0();
      v25 = v24;

      v32 = sub_22DDA2E30(v23, v25, v31);
      sub_22DE1F628();

      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      v26 = objc_msgSend(v18, sel_value);
      sub_22DE1F664();
      swift_unknownObjectRelease();
      v27 = sub_22DE1F2EC();
      v32 = sub_22DDA2E30(v27, v28, v31);
      sub_22DE1F628();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22DD4B000, v19, type, "Invalid question choice value type. Question: [%s] choice type: [%s]", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v29, -1, -1);
      MEMORY[0x22E320870](v21, -1, -1);

    }
    else
    {

    }
    *(_OWORD *)a3 = 0u;
    *((_OWORD *)a3 + 1) = 0u;
  }
}

void sub_22DDAA058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  unint64_t v35;
  void *v36;

  v5 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_22DE1F6A0();
    sub_22DD70E78(0, &qword_255DB7FC8);
    sub_22DDAAB80();
    sub_22DE1F4A8();
    v5 = v31;
    v28 = v32;
    v6 = v33;
    v7 = v34;
    v8 = v35;
  }
  else
  {
    v9 = -1 << *(_BYTE *)(a1 + 32);
    v28 = a1 + 56;
    v10 = ~v9;
    v11 = -v9;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v8 = v12 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v6 = v10;
    v7 = 0;
  }
  v26 = v6;
  v27 = (unint64_t)(v6 + 64) >> 6;
  v29 = v7;
  v30 = v8;
  if (v5 < 0)
    goto LABEL_10;
LABEL_8:
  if (v8)
  {
    v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v14 = v13 | (v7 << 6);
    goto LABEL_29;
  }
  v16 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v16 < v27)
    {
      v17 = *(_QWORD *)(v28 + 8 * v16);
      ++v7;
      if (v17)
        goto LABEL_28;
      v7 = v16 + 1;
      if (v16 + 1 >= v27)
        goto LABEL_36;
      v17 = *(_QWORD *)(v28 + 8 * v7);
      if (v17)
        goto LABEL_28;
      v7 = v16 + 2;
      if (v16 + 2 >= v27)
        goto LABEL_36;
      v17 = *(_QWORD *)(v28 + 8 * v7);
      if (v17)
        goto LABEL_28;
      v7 = v16 + 3;
      if (v16 + 3 >= v27)
        goto LABEL_36;
      v17 = *(_QWORD *)(v28 + 8 * v7);
      if (v17)
      {
LABEL_28:
        v8 = (v17 - 1) & v17;
        v14 = __clz(__rbit64(v17)) + (v7 << 6);
LABEL_29:
        v15 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v14);
        if (v15)
        {
          while (1)
          {
            v19 = objc_msgSend(v15, sel_question, v26);
            v20 = a3;
            v21 = objc_msgSend(v19, sel_tat);

            v22 = sub_22DE1F2B0();
            v24 = v23;

            a3 = v20;
            if (v22 == a2 && v24 == v20)
              break;
            v25 = sub_22DE1F8E0();
            swift_bridgeObjectRelease();
            if ((v25 & 1) != 0)
              goto LABEL_36;

            v29 = v7;
            v30 = v8;
            if ((v5 & 0x8000000000000000) == 0)
              goto LABEL_8;
LABEL_10:
            if (sub_22DE1F6DC())
            {
              sub_22DD70E78(0, &qword_255DB7FC8);
              swift_unknownObjectRetain();
              swift_dynamicCast();
              v15 = v36;
              swift_unknownObjectRelease();
              v8 = v30;
              if (v36)
                continue;
            }
            goto LABEL_36;
          }
          swift_bridgeObjectRelease();
        }
        goto LABEL_36;
      }
      v7 = v16 + 4;
      if (v16 + 4 < v27)
      {
        v17 = *(_QWORD *)(v28 + 8 * v7);
        if (!v17)
        {
          v18 = v29 + 6;
          while (v27 != v18)
          {
            v17 = *(_QWORD *)(v28 + 8 * v18++);
            if (v17)
            {
              v7 = v18 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_36;
        }
        goto LABEL_28;
      }
    }
LABEL_36:
    sub_22DD70E70();
    return;
  }
  __break(1u);
}

uint64_t sub_22DDAA3E8(uint64_t a1)
{
  uint64_t v2;
  unsigned __int8 v3;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_BYTE *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22DDAA44C(v2, v3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22DDAA44C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;

  if (a2 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_22DDAA460(uint64_t a1)
{
  uint64_t v2;
  unsigned __int8 v3;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_BYTE *)(a1 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22DDAA4C4(v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22DDAA4C4(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;

  if (a2 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

_QWORD *sub_22DDAA4D8(unint64_t a1, void *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_19;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_22DE1F7D8())
  {
    v19 = v3 & 0xC000000000000001;
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v6 = 4;
    v17 = v4;
    v18 = v3;
    while (1)
    {
      v8 = v19 ? (id)MEMORY[0x22E31FFC4](v6 - 4, v3) : *(id *)(v3 + 8 * v6);
      v9 = v8;
      v10 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v26 = v8;
      sub_22DDA9D44(&v26, a2, &v22);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v5;
      }

      v11 = v23;
      if (v23)
      {
        v12 = v24;
        v13 = v25;
        v21 = v22;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_22DDFCD40(0, v5[2] + 1, 1, v5);
        v15 = v5[2];
        v14 = v5[3];
        if (v15 >= v14 >> 1)
          v5 = sub_22DDFCD40((_QWORD *)(v14 > 1), v15 + 1, 1, v5);
        v5[2] = v15 + 1;
        v7 = &v5[4 * v15];
        v7[4] = v21;
        v7[5] = v11;
        v7[6] = v12;
        v7[7] = v13;
        v4 = v17;
        v3 = v18;
      }
      ++v6;
      if (v10 == v4)
      {
        swift_bridgeObjectRelease();
        return v5;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x24BEE4AF8];
}

uint64_t sub_22DDAA6A8(void *a1)
{
  id v2;
  unint64_t v3;
  id v4;
  _QWORD *v5;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = objc_msgSend(a1, sel_allChoices);
  if (v2)
  {
    sub_22DD70E78(0, &qword_255DB8000);
    v3 = sub_22DE1F3D0();

    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      v8 = sub_22DE1F7D8();
      swift_bridgeObjectRelease();
      if (v8)
        goto LABEL_4;
    }
    else if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      v4 = a1;
      v5 = sub_22DDAA4D8(v3, v4);
      swift_bridgeObjectRelease();

      return (uint64_t)v5;
    }
    swift_bridgeObjectRelease();
    v7 = objc_msgSend(a1, sel_tat);
  }
  else
  {
    v7 = objc_msgSend(a1, sel_tat);
  }
  v9 = v7;
  v10 = sub_22DE1F2B0();
  v12 = v11;

  sub_22DDAAC8C();
  swift_allocError();
  *(_QWORD *)v13 = v10;
  *(_QWORD *)(v13 + 8) = v12;
  *(_BYTE *)(v13 + 16) = v2 != 0;
  return swift_willThrow();
}

uint64_t sub_22DDAA81C(void *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t result;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  _QWORD *v37;

  v5 = *a2;
  v4 = a2[1];
  v6 = a2[5];
  v7 = *((unsigned __int8 *)a2 + 48);
  if ((objc_msgSend(a1, sel_isAnswered) & 1) == 0)
    goto LABEL_26;
  v8 = objc_msgSend(a1, sel_values);
  if (!v8
    || (v9 = v8,
        v36 = v7,
        v10 = sub_22DE1F3D0(),
        v9,
        v11 = sub_22DDA9134(v10),
        v12 = v36,
        result = swift_bridgeObjectRelease(),
        !v11))
  {
LABEL_26:
    sub_22DDAAAF8();
    swift_allocError();
    *v29 = v5;
    v29[1] = v4;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return (uint64_t)v2;
  }
  v33 = *(_QWORD *)(v11 + 16);
  if (!v33)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  v14 = 0;
  v34 = v11 + 32;
  v31 = (_QWORD *)(v6 + 56);
  v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v32 = v6;
  v35 = v11;
  while (v14 < *(_QWORD *)(v11 + 16))
  {
    v37 = v2;
    v15 = (uint64_t *)(v34 + 16 * v14);
    v16 = *v15;
    v2 = (_QWORD *)v15[1];
    if (v12 > 2)
    {
      v21 = 0;
      v22 = 0;
      v20 = v15[1];
    }
    else
    {
      v17 = *(_QWORD *)(v6 + 16);
      if (!v17)
      {
LABEL_28:
        sub_22DDAAB3C();
        swift_allocError();
        *v30 = v16;
        v30[1] = v2;
        swift_bridgeObjectRetain();
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (uint64_t)v2;
      }
      v18 = v31;
      while (1)
      {
        v19 = *(v18 - 3);
        v20 = *(v18 - 2);
        v21 = *(v18 - 1);
        v22 = (_QWORD *)*v18;
        if (v21 == v16 && v22 == v2)
          break;
        if ((sub_22DE1F8E0() & 1) != 0)
          goto LABEL_19;
        v18 += 4;
        if (!--v17)
          goto LABEL_28;
      }
      v21 = v16;
      v22 = v2;
LABEL_19:
      swift_bridgeObjectRetain();
      v16 = v19;
      v12 = v36;
    }
    swift_bridgeObjectRetain();
    v24 = v37;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_22DDFCE4C(0, v37[2] + 1, 1, v37);
      v24 = (_QWORD *)result;
    }
    v26 = v24[2];
    v25 = v24[3];
    v27 = v24;
    if (v26 >= v25 >> 1)
    {
      result = (uint64_t)sub_22DDFCE4C((_QWORD *)(v25 > 1), v26 + 1, 1, v24);
      v27 = (_QWORD *)result;
    }
    ++v14;
    v27[2] = v26 + 1;
    v2 = v27;
    v28 = &v27[5 * v26];
    v28[4] = v16;
    v28[5] = v20;
    v28[6] = v21;
    v28[7] = v22;
    *((_BYTE *)v28 + 64) = v12 < 3;
    v6 = v32;
    v11 = v35;
    if (v14 == v33)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v2;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_22DDAAAF8()
{
  unint64_t result;

  result = qword_255DB7FD0;
  if (!qword_255DB7FD0)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE245C0, &_s11AnswerErrorVN);
    atomic_store(result, (unint64_t *)&qword_255DB7FD0);
  }
  return result;
}

unint64_t sub_22DDAAB3C()
{
  unint64_t result;

  result = qword_255DB7FD8;
  if (!qword_255DB7FD8)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE24580, &_s16AnswerValueErrorVN);
    atomic_store(result, (unint64_t *)&qword_255DB7FD8);
  }
  return result;
}

unint64_t sub_22DDAAB80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DB7FE0;
  if (!qword_255DB7FE0)
  {
    v1 = sub_22DD70E78(255, &qword_255DB7FC8);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_255DB7FE0);
  }
  return result;
}

uint64_t sub_22DDAABD8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_22DDAAC14(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

unint64_t sub_22DDAAC48()
{
  unint64_t result;

  result = qword_255DB7FF0;
  if (!qword_255DB7FF0)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE24540, &_s17QuestionKindErrorON);
    atomic_store(result, (unint64_t *)&qword_255DB7FF0);
  }
  return result;
}

unint64_t sub_22DDAAC8C()
{
  unint64_t result;

  result = qword_255DB7FF8;
  if (!qword_255DB7FF8)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE24500, &_s19QuestionChoiceErrorON);
    atomic_store(result, (unint64_t *)&qword_255DB7FF8);
  }
  return result;
}

uint64_t sub_22DDAACD4()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s19QuestionChoiceErrorOwxx()
{
  return sub_22DDAACEC();
}

uint64_t sub_22DDAACEC()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s19QuestionChoiceErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_22DDAACD4();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s19QuestionChoiceErrorOwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_22DDAACD4();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_22DDAACEC();
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t _s19QuestionChoiceErrorOwta(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_22DDAACEC();
  return a1;
}

uint64_t _s19QuestionChoiceErrorOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s19QuestionChoiceErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_22DDAAE74(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_22DDAAE7C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *_s19QuestionChoiceErrorOMa()
{
  return &_s19QuestionChoiceErrorON;
}

ValueMetadata *_s17QuestionKindErrorOMa()
{
  return &_s17QuestionKindErrorON;
}

ValueMetadata *_s16AnswerValueErrorVMa()
{
  return &_s16AnswerValueErrorVN;
}

ValueMetadata *_s11AnswerErrorVMa()
{
  return &_s11AnswerErrorVN;
}

uint64_t sub_22DDAAEDC@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;

  swift_getKeyPath();
  v12 = v1;
  sub_22DDABED8();
  sub_22DE1E068();
  swift_release();
  v3 = v1[2];
  v4 = v12[3];
  v5 = v12[4];
  v6 = v12[5];
  v7 = v12[6];
  v8 = v12[7];
  v10 = v12[8];
  v9 = v12[9];
  result = sub_22DD77554(v3, v4);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v10;
  a1[7] = v9;
  return result;
}

uint64_t sub_22DDAAFA4()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_22DDABED8();
  sub_22DE1E068();
  swift_release();
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t sub_22DDAB010()
{
  __int128 *v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _OWORD v5[5];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  unint64_t v10;

  sub_22DDABE70(v0, v5);
  result = 0x676E6964616F6CLL;
  switch(*((_QWORD *)&v5[0] + 1))
  {
    case 0:
      return result;
    case 1:
      result = 1702125938;
      break;
    case 2:
      result = 0x6B63616264656566;
      break;
    case 3:
      result = 0x64656873696E6966;
      break;
    default:
      v5[4] = v5[0];
      v6 = v5[1];
      v7 = v5[2];
      v8 = v5[3];
      v9 = 0;
      v10 = 0xE000000000000000;
      sub_22DE1F730();
      v3 = v9;
      v4 = v10;
      sub_22DE1F328();
      LOBYTE(v9) = v7;
      sub_22DE1F7B4();
      sub_22DE1F328();
      swift_bridgeObjectRetain();
      sub_22DE1F328();
      swift_bridgeObjectRelease();
      sub_22DE1F328();
      sub_22DDABE88((uint64_t)&v6, (uint64_t)&v9);
      sub_22DDABE88((uint64_t)&v9, (uint64_t)&v2);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7BB8);
      sub_22DE1F7B4();
      sub_22DE1F328();
      result = v3;
      break;
  }
  return result;
}

uint64_t sub_22DDAB20C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  __int128 v14;
  char v15;
  uint64_t v16;
  __int128 v17;
  _QWORD v18[2];
  __int128 v19;
  char v20;
  uint64_t v21;
  __int128 v22;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = a2[1];
  switch(v2)
  {
    case 0:
      if (v3)
        goto LABEL_11;
      goto LABEL_9;
    case 1:
      if (v3 != 1)
        goto LABEL_11;
      goto LABEL_9;
    case 2:
      if (v3 != 2)
        goto LABEL_11;
      goto LABEL_9;
    case 3:
      if (v3 != 3)
        goto LABEL_11;
LABEL_9:
      v4 = 1;
      break;
    default:
      v5 = *a2;
      v6 = *((_OWORD *)a2 + 1);
      v7 = a2[4];
      v8 = a2[5];
      v9 = *((_OWORD *)a2 + 3);
      v11 = *(_QWORD *)(a1 + 32);
      v10 = *(_QWORD *)(a1 + 40);
      v13[0] = *(_QWORD *)a1;
      v13[1] = v2;
      v14 = *(_OWORD *)(a1 + 16);
      v15 = v11;
      v16 = v10;
      v17 = *(_OWORD *)(a1 + 48);
      if (v3 >= 4)
      {
        v18[0] = v5;
        v18[1] = v3;
        v19 = v6;
        v20 = v7;
        v21 = v8;
        v22 = v9;
        v4 = sub_22DD98050((uint64_t)v13, (uint64_t)v18);
      }
      else
      {
LABEL_11:
        v4 = 0;
      }
      break;
  }
  return v4 & 1;
}

uint64_t sub_22DDAB2E4()
{
  __int128 *v0;
  _OWORD v2[4];

  sub_22DDABE70(v0, v2);
  return sub_22DDAB010();
}

void sub_22DDAB318(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD v16[4];

  v2 = v1;
  if (qword_255DB53A8 != -1)
    swift_once();
  v4 = sub_22DE1E410();
  __swift_project_value_buffer(v4, (uint64_t)qword_255DC3D48);
  sub_22DDABF20(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DD77554);
  swift_retain();
  sub_22DDABF20(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DD77554);
  swift_retain();
  v5 = sub_22DE1E3F8();
  v6 = sub_22DE1F4F0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v15 = v8;
    *(_DWORD *)v7 = 136315394;
    sub_22DDABF20(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DD77554);
    v9 = sub_22DDAB010();
    v11 = v10;
    sub_22DDABF20(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DD775A8);
    *(_QWORD *)&v16[0] = sub_22DDA2E30(v9, v11, &v15);
    sub_22DE1F628();
    swift_bridgeObjectRelease();
    sub_22DDABF20(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DD775A8);
    sub_22DDABF20(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DD775A8);
    *(_WORD *)(v7 + 12) = 2080;
    swift_getKeyPath();
    *(_QWORD *)&v16[0] = v2;
    sub_22DDABED8();
    sub_22DE1E068();
    swift_release();
    sub_22DDABE70((__int128 *)(v2 + 16), v16);
    sub_22DDABF20(v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DD77554);
    v12 = sub_22DDAB010();
    v14 = v13;
    sub_22DDABF20(v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DD775A8);
    sub_22DDA2E30(v12, v14, &v15);
    sub_22DE1F628();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    MEMORY[0x22E320870](v8, -1, -1);
    MEMORY[0x22E320870](v7, -1, -1);

  }
  else
  {
    sub_22DDABF20(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DD775A8);
    sub_22DDABF20(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DD775A8);

    swift_release_n();
  }
}

_QWORD *sub_22DDAB5F8(uint64_t a1, __int128 *a2)
{
  _OWORD *v4;
  uint64_t v5;
  unint64_t v6;
  _OWORD v8[4];

  v4 = (_OWORD *)(a1 + 16);
  sub_22DDABE70((__int128 *)(a1 + 16), v8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  sub_22DDABE70(a2, v4);
  sub_22DDABF20(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DD77554);
  sub_22DDABF20(v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DD77554);
  sub_22DD775A8(v5, v6);
  sub_22DDAB318(v8);
  return sub_22DDABF20(v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DD775A8);
}

uint64_t sub_22DDAB6DC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 80) = a2 & 1;
  return result;
}

uint64_t sub_22DDAB6E8(char a1)
{
  unint64_t v1;

  if ((a1 & 1) != 0)
    v1 = 3;
  else
    v1 = 1;
  swift_getKeyPath();
  sub_22DDABED8();
  sub_22DE1E05C();
  sub_22DD775A8(0, v1);
  swift_release();
  swift_getKeyPath();
  sub_22DE1E05C();
  return swift_release();
}

uint64_t sub_22DDAB820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22DD775A8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  v1 = v0 + OBJC_IVAR____TtC8Feedback15StateController___observationRegistrar;
  v2 = sub_22DE1E098();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_22DDAB884()
{
  return type metadata accessor for StateController();
}

uint64_t type metadata accessor for StateController()
{
  uint64_t result;

  result = qword_255DB8058;
  if (!qword_255DB8058)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22DDAB8C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22DE1E098();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StateController.StackState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22DDAB994 + 4 * byte_22DE246C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22DDAB9C8 + 4 * byte_22DE246C0[v4]))();
}

uint64_t sub_22DDAB9C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DDAB9D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DDAB9D8);
  return result;
}

uint64_t sub_22DDAB9E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DDAB9ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22DDAB9F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DDAB9F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StateController.StackState()
{
  return &type metadata for StateController.StackState;
}

unint64_t destroy for StateController.State(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for StateController.State(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    v4 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v4;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    v5 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v5;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for StateController.State(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = *((_QWORD *)a2 + 1);
  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
      *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    v7 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v7;
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StateController.State(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StateController.State(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 3;
  if (v4 >= 5)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StateController.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 3;
  }
  return result;
}

uint64_t sub_22DDABDCC(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_22DDABDE4(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 56) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for StateController.State()
{
  return &type metadata for StateController.State;
}

unint64_t sub_22DDABE2C()
{
  unint64_t result;

  result = qword_255DB80F0;
  if (!qword_255DB80F0)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE247D4, &type metadata for StateController.StackState);
    atomic_store(result, (unint64_t *)&qword_255DB80F0);
  }
  return result;
}

_OWORD *sub_22DDABE70(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[3];
  a2[2] = a1[2];
  a2[3] = v4;
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_22DDABE88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7BB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_22DDABED8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DB6248;
  if (!qword_255DB6248)
  {
    v1 = type metadata accessor for StateController();
    result = MEMORY[0x22E3207B0](&unk_22DE247FC, v1);
    atomic_store(result, (unint64_t *)&qword_255DB6248);
  }
  return result;
}

_QWORD *sub_22DDABF20(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  return a1;
}

void sub_22DDABF64()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 80) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_22DDABF74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  int64_t v30;
  _OWORD v31[4];
  _OWORD v32[2];
  _OWORD v33[3];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB81C8);
    v2 = sub_22DE1F7FC();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v29 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v30 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v30 << 6);
      goto LABEL_28;
    }
    v11 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v28)
      goto LABEL_37;
    v12 = *(_QWORD *)(v29 + 8 * v11);
    v13 = v30 + 1;
    if (!v12)
    {
      v13 = v30 + 2;
      if (v30 + 2 >= v28)
        goto LABEL_37;
      v12 = *(_QWORD *)(v29 + 8 * v13);
      if (!v12)
      {
        v13 = v30 + 3;
        if (v30 + 3 >= v28)
          goto LABEL_37;
        v12 = *(_QWORD *)(v29 + 8 * v13);
        if (!v12)
        {
          v13 = v30 + 4;
          if (v30 + 4 >= v28)
            goto LABEL_37;
          v12 = *(_QWORD *)(v29 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v30 = v13;
LABEL_28:
    v16 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    *(_QWORD *)&v33[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    v15 = *(void **)&v33[0];
    *(_QWORD *)&v32[0] = v16;
    sub_22DD70E78(0, &qword_255DB81D0);
    v17 = v15;
    v18 = v16;
    swift_dynamicCast();
    v19 = *(_QWORD *)&v33[0];
    sub_22DDB26A8((_OWORD *)((char *)v33 + 8), v31);
    sub_22DDB26A8(v31, v33);
    sub_22DDB26A8(v33, v32);
    sub_22DE1F2B0();
    sub_22DE1F964();
    sub_22DE1F310();
    v20 = sub_22DE1F97C();
    result = swift_bridgeObjectRelease();
    v21 = -1 << *(_BYTE *)(v2 + 32);
    v22 = v20 & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v6 + 8 * (v22 >> 6))) != 0)
    {
      v8 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v6 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v6 + 8 * v23);
      }
      while (v27 == -1);
      v8 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v6 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v19;
    result = (uint64_t)sub_22DDB26A8(v32, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v8));
    ++*(_QWORD *)(v2 + 16);
  }
  v14 = v30 + 5;
  if (v30 + 5 >= v28)
  {
LABEL_37:
    swift_release();
    sub_22DD70E70();
    return v2;
  }
  v12 = *(_QWORD *)(v29 + 8 * v14);
  if (v12)
  {
    v13 = v30 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v28)
      goto LABEL_37;
    v12 = *(_QWORD *)(v29 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_22DDAC324(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  int64_t i;
  uint64_t *v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8198);
    v2 = (_QWORD *)sub_22DE1F7FC();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v32 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v31 = (unint64_t)(63 - v3) >> 6;
  result = swift_bridgeObjectRetain();
  i = 0;
  v8 = (uint64_t *)&unk_255DB8180;
  v9 = MEMORY[0x24BEE4AD0] + 8;
  v30 = v1;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v17 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v17 >= v31)
    goto LABEL_32;
  v18 = *(_QWORD *)(v32 + 8 * v17);
  v19 = i + 1;
  if (!v18)
  {
    v19 = i + 2;
    if (i + 2 >= v31)
      goto LABEL_32;
    v18 = *(_QWORD *)(v32 + 8 * v19);
    if (!v18)
    {
      v19 = i + 3;
      if (i + 3 >= v31)
        goto LABEL_32;
      v18 = *(_QWORD *)(v32 + 8 * v19);
      if (!v18)
      {
        v19 = i + 4;
        if (i + 4 >= v31)
          goto LABEL_32;
        v18 = *(_QWORD *)(v32 + 8 * v19);
        if (!v18)
        {
          v20 = i + 5;
          if (i + 5 < v31)
          {
            v18 = *(_QWORD *)(v32 + 8 * v20);
            if (v18)
            {
              v19 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v19 = v20 + 1;
              if (__OFADD__(v20, 1))
                goto LABEL_36;
              if (v19 >= v31)
                break;
              v18 = *(_QWORD *)(v32 + 8 * v19);
              ++v20;
              if (v18)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_22DD70E70();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v5 = (v18 - 1) & v18;
  v16 = __clz(__rbit64(v18)) + (v19 << 6);
  for (i = v19; ; v16 = v15 | (i << 6))
  {
    v21 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v16);
    v23 = *v21;
    v22 = v21[1];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(v8);
    swift_dynamicCast();
    result = sub_22DDFD368(v23, v22);
    v24 = result;
    if ((v25 & 1) != 0)
    {
      v10 = i;
      v11 = v9;
      v12 = v8;
      v13 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v13 = v23;
      v13[1] = v22;
      v14 = v2[7];
      result = swift_unknownObjectRelease();
      *(_QWORD *)(v14 + 8 * v24) = v33;
      v8 = v12;
      v9 = v11;
      i = v10;
      v1 = v30;
      if (!v5)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v26 = (uint64_t *)(v2[6] + 16 * result);
    *v26 = v23;
    v26[1] = v22;
    *(_QWORD *)(v2[7] + 8 * result) = v33;
    v27 = v2[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_34;
    v2[2] = v29;
    if (!v5)
      goto LABEL_11;
LABEL_10:
    v15 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_22DDAC628(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  int64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _OWORD *v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t *v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8190);
    v2 = (_QWORD *)sub_22DE1F7FC();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v32 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v31 = (unint64_t)(63 - v3) >> 6;
  v6 = &v37;
  v7 = &v39;
  result = swift_bridgeObjectRetain();
  i = 0;
  v10 = MEMORY[0x24BEE4AD0] + 8;
  v11 = MEMORY[0x24BEE4AD8] + 8;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v20 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v20 >= v31)
    goto LABEL_32;
  v21 = *(_QWORD *)(v32 + 8 * v20);
  v22 = i + 1;
  if (!v21)
  {
    v22 = i + 2;
    if (i + 2 >= v31)
      goto LABEL_32;
    v21 = *(_QWORD *)(v32 + 8 * v22);
    if (!v21)
    {
      v22 = i + 3;
      if (i + 3 >= v31)
        goto LABEL_32;
      v21 = *(_QWORD *)(v32 + 8 * v22);
      if (!v21)
      {
        v22 = i + 4;
        if (i + 4 >= v31)
          goto LABEL_32;
        v21 = *(_QWORD *)(v32 + 8 * v22);
        if (!v21)
        {
          v23 = i + 5;
          if (i + 5 < v31)
          {
            v21 = *(_QWORD *)(v32 + 8 * v23);
            if (v21)
            {
              v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v22 = v23 + 1;
              if (__OFADD__(v23, 1))
                goto LABEL_36;
              if (v22 >= v31)
                break;
              v21 = *(_QWORD *)(v32 + 8 * v22);
              ++v23;
              if (v21)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_22DD70E70();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v34 = (v21 - 1) & v21;
  v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    v24 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v19);
    v35 = *v24;
    v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    sub_22DDB26A8(v6, v7);
    sub_22DDB26A8(v7, v40);
    sub_22DDB26A8(v40, &v38);
    result = sub_22DDFD368(v35, v36);
    v25 = result;
    if ((v26 & 1) != 0)
    {
      v33 = i;
      v12 = v7;
      v13 = v6;
      v14 = v1;
      v15 = v11;
      v16 = v10;
      v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v17 = v35;
      v17[1] = v36;
      v10 = v16;
      v11 = v15;
      v1 = v14;
      v6 = v13;
      v7 = v12;
      i = v33;
      v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      result = (unint64_t)sub_22DDB26A8(&v38, v18);
      v5 = v34;
      if (!v34)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v27 = (uint64_t *)(v2[6] + 16 * result);
    *v27 = v35;
    v27[1] = v36;
    result = (unint64_t)sub_22DDB26A8(&v38, (_OWORD *)(v2[7] + 32 * result));
    v28 = v2[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_34;
    v2[2] = v30;
    v5 = v34;
    if (!v34)
      goto LABEL_11;
LABEL_10:
    v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_22DDAC98C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  int64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _OWORD *v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t *v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8190);
    v2 = (_QWORD *)sub_22DE1F7FC();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v32 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v31 = (unint64_t)(63 - v3) >> 6;
  v6 = &v37;
  v7 = &v39;
  result = swift_bridgeObjectRetain();
  i = 0;
  v10 = MEMORY[0x24BEE4AD8] + 8;
  v11 = MEMORY[0x24BEE0D00];
  if (v5)
    goto LABEL_10;
LABEL_11:
  v20 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v20 >= v31)
    goto LABEL_32;
  v21 = *(_QWORD *)(v32 + 8 * v20);
  v22 = i + 1;
  if (!v21)
  {
    v22 = i + 2;
    if (i + 2 >= v31)
      goto LABEL_32;
    v21 = *(_QWORD *)(v32 + 8 * v22);
    if (!v21)
    {
      v22 = i + 3;
      if (i + 3 >= v31)
        goto LABEL_32;
      v21 = *(_QWORD *)(v32 + 8 * v22);
      if (!v21)
      {
        v22 = i + 4;
        if (i + 4 >= v31)
          goto LABEL_32;
        v21 = *(_QWORD *)(v32 + 8 * v22);
        if (!v21)
        {
          v23 = i + 5;
          if (i + 5 < v31)
          {
            v21 = *(_QWORD *)(v32 + 8 * v23);
            if (v21)
            {
              v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v22 = v23 + 1;
              if (__OFADD__(v23, 1))
                goto LABEL_36;
              if (v22 >= v31)
                break;
              v21 = *(_QWORD *)(v32 + 8 * v22);
              ++v23;
              if (v21)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_22DD70E70();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v34 = (v21 - 1) & v21;
  v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    v24 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v19);
    v35 = *v24;
    v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_22DDB26A8(v6, v7);
    sub_22DDB26A8(v7, v40);
    sub_22DDB26A8(v40, &v38);
    result = sub_22DDFD368(v35, v36);
    v25 = result;
    if ((v26 & 1) != 0)
    {
      v33 = i;
      v12 = v7;
      v13 = v6;
      v14 = v1;
      v15 = v11;
      v16 = v10;
      v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v17 = v35;
      v17[1] = v36;
      v10 = v16;
      v11 = v15;
      v1 = v14;
      v6 = v13;
      v7 = v12;
      i = v33;
      v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      result = (unint64_t)sub_22DDB26A8(&v38, v18);
      v5 = v34;
      if (!v34)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v27 = (uint64_t *)(v2[6] + 16 * result);
    *v27 = v35;
    v27[1] = v36;
    result = (unint64_t)sub_22DDB26A8(&v38, (_OWORD *)(v2[7] + 32 * result));
    v28 = v2[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_34;
    v2[2] = v30;
    v5 = v34;
    if (!v34)
      goto LABEL_11;
LABEL_10:
    v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_22DDACCF4()
{
  uint64_t v0;

  v0 = sub_22DE1E410();
  __swift_allocate_value_buffer(v0, qword_255DB8100);
  __swift_project_value_buffer(v0, (uint64_t)qword_255DB8100);
  return sub_22DE1E404();
}

void sub_22DDACD60(void *a1, void *a2, char *a3, char a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  _QWORD v20[6];

  v11 = *a3;
  if (!*a3)
  {
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = a6;
    *(_QWORD *)(v15 + 24) = a7;
    sub_22DD50D8C(a6);
    sub_22DDB1658(a2, (uint64_t)sub_22DDB29C8, v15);
    goto LABEL_5;
  }
  if ((sub_22DDB1868(a5 & 1) & 1) != 0)
  {
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = a6;
    *(_QWORD *)(v14 + 24) = a7;
    sub_22DD50D8C(a6);
    sub_22DDAD1DC(a2, (uint64_t)sub_22DDB29BC, v14);
LABEL_5:
    swift_release();
    return;
  }
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a6;
  *(_QWORD *)(v16 + 24) = a7;
  *(_BYTE *)(v16 + 32) = v11;
  *(_QWORD *)(v16 + 40) = v7;
  *(_QWORD *)(v16 + 48) = a2;
  *(_QWORD *)(v16 + 56) = a1;
  v20[4] = sub_22DDB29A4;
  v20[5] = v16;
  v20[0] = MEMORY[0x24BDAC760];
  v20[1] = 1107296256;
  v20[2] = sub_22DDAF6DC;
  v20[3] = &block_descriptor_137;
  v17 = _Block_copy(v20);
  sub_22DD50D8C(a6);
  v18 = a1;
  v19 = a2;
  swift_release();
  objc_msgSend(v19, sel_interactiveStartupUsingSystemAccount_completion_, a4 & 1, v17);
  _Block_release(v17);
}

void sub_22DDACF0C(uint64_t a1, id a2, void (*a3)(uint64_t, id))
{
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  uint64_t v21;

  if (a2)
  {
    v5 = a2;
    if (qword_255DB5300 != -1)
      swift_once();
    v6 = sub_22DE1E410();
    __swift_project_value_buffer(v6, (uint64_t)qword_255DB8100);
    v7 = a2;
    v8 = a2;
    v9 = sub_22DE1E3F8();
    v10 = sub_22DE1F4FC();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v21 = v12;
      *(_DWORD *)v11 = 136315138;
      swift_getErrorValue();
      v13 = sub_22DE1F928();
      sub_22DDA2E30(v13, v14, &v21);
      sub_22DE1F628();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22DD4B000, v9, v10, "AppleConnect login failed. Error: %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v12, -1, -1);
      MEMORY[0x22E320870](v11, -1, -1);

      if (!a3)
        goto LABEL_15;
    }
    else
    {

      if (!a3)
      {
LABEL_15:

        return;
      }
    }
    v20 = a2;
    a3(0, a2);

    goto LABEL_15;
  }
  if (qword_255DB5300 != -1)
    swift_once();
  v16 = sub_22DE1E410();
  __swift_project_value_buffer(v16, (uint64_t)qword_255DB8100);
  v17 = sub_22DE1E3F8();
  v18 = sub_22DE1F4F0();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v19 = 0;
    _os_log_impl(&dword_22DD4B000, v17, v18, "AppleConnect login successful, resuming.", v19, 2u);
    MEMORY[0x22E320870](v19, -1, -1);
  }

  if (a3)
    a3(a1, 0);
}

void sub_22DDAD1DC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t aBlock[6];

  v4 = v3;
  if (qword_255DB5300 != -1)
    swift_once();
  v8 = sub_22DE1E410();
  __swift_project_value_buffer(v8, (uint64_t)qword_255DB8100);
  v9 = sub_22DE1E3F8();
  v10 = sub_22DE1F514();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)v11 = 136446210;
    sub_22DDA2E30(0xD000000000000036, 0x800000022DE2AB40, aBlock);
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v9, v10, "%{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v12, -1, -1);
    MEMORY[0x22E320870](v11, -1, -1);
  }

  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v4;
  v13[3] = a1;
  v13[4] = a2;
  v13[5] = a3;
  aBlock[4] = (uint64_t)sub_22DDB2A78;
  aBlock[5] = (uint64_t)v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_22DDB084C;
  aBlock[3] = (uint64_t)&block_descriptor_161;
  v14 = _Block_copy(aBlock);
  v15 = a1;
  sub_22DD50D8C(a2);
  swift_release();
  FBKLoginWithAppleConnect();
  _Block_release(v14);
}

void sub_22DDAD3F0(void *a1, void (*a2)(id), uint64_t a3, void *a4)
{
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21;
  uint64_t v22;

  if (a1)
  {
    v6 = a1;
    if (qword_255DB5300 != -1)
      swift_once();
    v7 = sub_22DE1E410();
    __swift_project_value_buffer(v7, (uint64_t)qword_255DB8100);
    v8 = a1;
    v9 = a1;
    v10 = sub_22DE1E3F8();
    v11 = sub_22DE1F4FC();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v22 = v13;
      *(_DWORD *)v12 = 136315138;
      swift_getErrorValue();
      v14 = sub_22DE1F928();
      sub_22DDA2E30(v14, v15, &v22);
      sub_22DE1F628();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22DD4B000, v10, v11, "AppleConnect login failed. Error: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v13, -1, -1);
      MEMORY[0x22E320870](v12, -1, -1);
    }
    else
    {

    }
    v21 = (id)FBKErrorOfType();
    a2(v21);

  }
  else
  {
    if (qword_255DB5300 != -1)
      swift_once();
    v17 = sub_22DE1E410();
    __swift_project_value_buffer(v17, (uint64_t)qword_255DB8100);
    v18 = sub_22DE1E3F8();
    v19 = sub_22DE1F4F0();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_22DD4B000, v18, v19, "AppleConnect login successful, resuming.", v20, 2u);
      MEMORY[0x22E320870](v20, -1, -1);
    }

    objc_msgSend(a4, sel_setIsAppleConnectUser_, 1);
    a2(0);
  }
}

void sub_22DDAD6BC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  void *v13;
  id v14;
  _QWORD v15[6];

  v4 = v3;
  if (qword_255DB5300 != -1)
    swift_once();
  v8 = sub_22DE1E410();
  __swift_project_value_buffer(v8, (uint64_t)qword_255DB8100);
  v9 = sub_22DE1E3F8();
  v10 = sub_22DE1F514();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_22DD4B000, v9, v10, "FBK is running on an internal install, and AppleConnect is available, so we will use AppleConnect to recover.", v11, 2u);
    MEMORY[0x22E320870](v11, -1, -1);
  }

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v4;
  v12[3] = a1;
  v12[4] = a2;
  v12[5] = a3;
  v15[4] = sub_22DDB0EBC;
  v15[5] = v12;
  v15[0] = MEMORY[0x24BDAC760];
  v15[1] = 1107296256;
  v15[2] = sub_22DDB084C;
  v15[3] = &block_descriptor_3;
  v13 = _Block_copy(v15);
  v14 = a1;
  swift_retain();
  swift_release();
  FBKLoginWithAppleConnect();
  _Block_release(v13);
}

uint64_t sub_22DDAD838(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 + 80) = a6;
  *(_QWORD *)(v7 + 88) = v6;
  *(_QWORD *)(v7 + 64) = a2;
  *(_QWORD *)(v7 + 72) = a5;
  *(_BYTE *)(v7 + 177) = a4;
  *(_BYTE *)(v7 + 176) = a3;
  *(_QWORD *)(v7 + 56) = a1;
  sub_22DE1F448();
  *(_QWORD *)(v7 + 96) = sub_22DE1F43C();
  *(_QWORD *)(v7 + 104) = sub_22DE1F418();
  *(_QWORD *)(v7 + 112) = v8;
  return swift_task_switch();
}

uint64_t sub_22DDAD8B4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  if ((sub_22DDB1868(*(_BYTE *)(v0 + 177)) & 1) != 0)
  {
    if (qword_255DB5300 != -1)
      swift_once();
    v1 = sub_22DE1E410();
    *(_QWORD *)(v0 + 120) = __swift_project_value_buffer(v1, (uint64_t)qword_255DB8100);
    v2 = sub_22DE1E3F8();
    v3 = sub_22DE1F514();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_22DD4B000, v2, v3, "Will use AppleConnect to authenticate.", v4, 2u);
      MEMORY[0x22E320870](v4, -1, -1);
    }

  }
  else
  {
    if (qword_255DB5300 != -1)
      swift_once();
    v5 = sub_22DE1E410();
    __swift_project_value_buffer(v5, (uint64_t)qword_255DB8100);
    v6 = sub_22DE1E3F8();
    v7 = sub_22DE1F514();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_22DD4B000, v6, v7, "Will use AuthKit to authenticate.", v8, 2u);
      MEMORY[0x22E320870](v8, -1, -1);
    }

    v9 = swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v9;
    *(_QWORD *)v9 = v0;
    *(_QWORD *)(v9 + 8) = sub_22DDADBE8;
    v10 = *(_BYTE *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 56);
    v11 = *(_QWORD *)(v0 + 64);
    v13 = *(_OWORD *)(v0 + 72);
    *(_QWORD *)(v9 + 232) = *(_QWORD *)(v0 + 88);
    *(_OWORD *)(v9 + 216) = v13;
    *(_BYTE *)(v9 + 264) = v10;
    *(_QWORD *)(v9 + 200) = v12;
    *(_QWORD *)(v9 + 208) = v11;
  }
  return swift_task_switch();
}

uint64_t sub_22DDADA9C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[8];
  v2 = swift_task_alloc();
  v0[16] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[17] = v3;
  *v3 = v0;
  v3[1] = sub_22DDADB34;
  return sub_22DE1F8EC();
}

uint64_t sub_22DDADB34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DDADBA0()
{
  return swift_task_switch();
}

uint64_t sub_22DDADBB0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(1, 0);
}

uint64_t sub_22DDADBE8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 160) = a1;
  *(_QWORD *)(v3 + 168) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DDADC40()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168));
}

uint64_t sub_22DDADC74()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DDADCAC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v15;

  v1 = *(void **)(v0 + 144);
  swift_release();
  v2 = v1;
  v3 = v1;
  v4 = sub_22DE1E3F8();
  v5 = sub_22DE1F4FC();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 144);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v15 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v9 = sub_22DE1F928();
    *(_QWORD *)(v0 + 48) = sub_22DDA2E30(v9, v10, &v15);
    sub_22DE1F628();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22DD4B000, v4, v5, "AppleConnect login failed. Error: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v8, -1, -1);
    MEMORY[0x22E320870](v7, -1, -1);
  }
  else
  {
    v11 = *(void **)(v0 + 144);

  }
  v12 = *(void **)(v0 + 144);
  v13 = (id)FBKErrorOfType();

  return (*(uint64_t (**)(uint64_t, id))(v0 + 8))(4, v13);
}

uint64_t sub_22DDADE78(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 224) = a5;
  *(_QWORD *)(v6 + 232) = v5;
  *(_QWORD *)(v6 + 208) = a2;
  *(_QWORD *)(v6 + 216) = a4;
  *(_BYTE *)(v6 + 264) = a3;
  *(_QWORD *)(v6 + 200) = a1;
  return swift_task_switch();
}

uint64_t sub_22DDADE9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t *);
  uint64_t v5;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = *(_QWORD *)(v0 + 216);
  v1 = *(_QWORD *)(v0 + 224);
  if (v2)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = v1;
    v4 = sub_22DDB2E18;
  }
  else
  {
    v4 = 0;
  }
  sub_22DD50D8C(v2);
  sub_22DD50DE0((uint64_t)v4);
  v5 = swift_allocObject();
  *(_QWORD *)(v0 + 240) = v5;
  if (v2)
  {
    *(_OWORD *)(v5 + 16) = xmmword_22DE24880;
    return swift_task_switch();
  }
  else
  {
    v7 = *(unsigned __int8 *)(v0 + 264);
    v8 = *(void **)(v0 + 208);
    *(_QWORD *)(v0 + 120) = v0 + 184;
    *(_QWORD *)(v0 + 80) = v0;
    *(_QWORD *)(v0 + 88) = sub_22DDADFDC;
    v9 = swift_continuation_init();
    *(_QWORD *)(v0 + 144) = MEMORY[0x24BDAC760];
    v10 = (_QWORD *)(v0 + 144);
    v10[1] = 0x40000000;
    v10[2] = sub_22DDAFA4C;
    v10[3] = &block_descriptor_127;
    v10[4] = v9;
    objc_msgSend(v8, sel_interactiveStartupUsingSystemAccount_completion_, v7, v10);
    return swift_continuation_await();
  }
}

uint64_t sub_22DDADFDC()
{
  return swift_task_switch();
}

uint64_t sub_22DDAE028()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v1 + 16) = v2;
  v3 = sub_22DDB1AEC(v2);
  v4 = *(_QWORD *)(v1 + 24);
  if (v3)
    v5 = 1;
  else
    v5 = (v4 & 4) == 0;
  if (!v5)
    return swift_task_switch();
  v6 = v3;
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v4, v6);
}

uint64_t sub_22DDAE0AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0[30];
  v3 = v0[27];
  v2 = v0[28];
  v5 = v0[25];
  v4 = (void *)v0[26];
  v0[7] = v0 + 18;
  v0[2] = v0;
  v0[3] = sub_22DDAE180;
  v6 = swift_continuation_init();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v1;
  swift_retain();
  sub_22DDAE204(v5, v4, 0, 0, 1, v3, v2, (uint64_t)sub_22DDB2960, v7);
  swift_release();
  return swift_continuation_await();
}

uint64_t sub_22DDAE180()
{
  uint64_t v0;

  *(_OWORD *)(*(_QWORD *)v0 + 248) = *(_OWORD *)(*(_QWORD *)v0 + 144);
  return swift_task_switch();
}

uint64_t sub_22DDAE1D0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 256));
}

void sub_22DDAE204(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t (*v15)(uint64_t *);
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  id v43;
  _QWORD aBlock[6];

  if (a6)
  {
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = a6;
    *(_QWORD *)(v14 + 24) = a7;
    v15 = sub_22DDB24A4;
  }
  else
  {
    v15 = 0;
  }
  sub_22DD50D8C(a6);
  sub_22DD50DE0((uint64_t)v15);
  v16 = objc_msgSend(a2, sel_authenticationContextForUsername_, 0);
  objc_msgSend(v16, sel_setPresentingViewController_, a1);
  v17 = (void *)objc_opt_self();
  v18 = v16;
  v19 = objc_msgSend(v17, sel_mainBundle);
  sub_22DE1DED0();

  v20 = (void *)sub_22DE1F28C();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setTitle_, v20, 0xE000000000000000);

  objc_msgSend(v18, sel_setShouldAllowAppleIDCreation_, 0);
  objc_msgSend(v18, sel_setIsUsernameEditable_, a5 & 1);
  v43 = v18;
  v21 = objc_msgSend(v17, sel_mainBundle);
  sub_22DE1DED0();

  v22 = (void *)sub_22DE1F28C();
  swift_bridgeObjectRelease();
  objc_msgSend(v43, sel_setReason_, v22, 0xE000000000000000);

  if (a4)
  {
    v23 = v43;
    swift_bridgeObjectRetain();
    v24 = (void *)sub_22DE1F28C();
    objc_msgSend(v23, sel_setUsername_, v24);

    if ((a5 & 1) != 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v25 = v23;
      v26 = objc_msgSend(v17, (SEL)&ResourceBundleClass.base_prots + 7);
      sub_22DE1DED0();

      v27 = (void *)sub_22DE1F28C();
      swift_bridgeObjectRelease();
      objc_msgSend(v25, sel_setTitle_, v27, 0xE000000000000000);

      v28 = v25;
      v29 = objc_msgSend(v17, (SEL)&ResourceBundleClass.base_prots + 7);
      sub_22DE1DED0();

      __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8170);
      v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_22DE20F30;
      *(_QWORD *)(v30 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v30 + 64) = sub_22DDB2460();
      *(_QWORD *)(v30 + 32) = a3;
      *(_QWORD *)(v30 + 40) = a4;
      sub_22DE1F2C8();
      swift_bridgeObjectRelease();
      v31 = (void *)sub_22DE1F28C();
      swift_bridgeObjectRelease();
      objc_msgSend(v28, sel_setReason_, v31, 0x800000022DE2AA80);

    }
  }
  v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0ACC0]), sel_init);
  if (v32)
  {
    v33 = v32;
    v34 = swift_allocObject();
    *(_BYTE *)(v34 + 16) = a6 != 0;
    *(_QWORD *)(v34 + 24) = a8;
    *(_QWORD *)(v34 + 32) = a9;
    *(_QWORD *)(v34 + 40) = a6;
    *(_QWORD *)(v34 + 48) = a7;
    *(_QWORD *)(v34 + 56) = v39;
    *(_QWORD *)(v34 + 64) = a2;
    aBlock[4] = sub_22DDB2430;
    aBlock[5] = v34;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DDAF49C;
    aBlock[3] = &block_descriptor_46;
    v35 = _Block_copy(aBlock);
    sub_22DD50D8C(a6);
    v36 = v43;
    v37 = v33;
    sub_22DD50D8C(a8);
    v38 = a2;
    swift_release();
    objc_msgSend(v37, sel_authenticateWithContext_completion_, v36, v35);

    _Block_release(v35);
  }
  else
  {

  }
}

uint64_t sub_22DDAE7C0(uint64_t *a1, void (*a2)(uint64_t (*)(), uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  a2(sub_22DD54288, v5);
  return swift_release();
}

void sub_22DDAE82C(uint64_t a1, void *a2, char a3, uint64_t a4, NSObject *a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  void *v23;
  char **p_type;
  id v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  void *v29;
  _QWORD *v30;
  NSObject *v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  _BOOL4 v41;
  uint8_t *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  NSObject *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  void *v61;
  id v62;
  void *v63;
  uint64_t v64;
  NSObject *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  const void *v69;
  _QWORD *v70;
  NSObject *v71;
  uint64_t v72;
  void *v73;
  id v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  void *v77;
  uint64_t v78;
  NSObject *v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  uint64_t v92;
  uint64_t aBlock;
  uint64_t v94;
  uint64_t (*v95)(uint64_t);
  void *v96;
  void *v97;
  _QWORD *v98;

  v90 = a4;
  v91 = a5;
  v15 = sub_22DE1F1B4();
  v88 = *(_QWORD *)(v15 - 8);
  v89 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_22DE1F1D8();
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    v86 = v18;
    if (!a1)
    {
      v76 = v19;
      sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
      v77 = (void *)sub_22DE1F574();
      v78 = swift_allocObject();
      v80 = v90;
      v79 = v91;
      *(_QWORD *)(v78 + 16) = v90;
      *(_QWORD *)(v78 + 24) = v79;
      v97 = sub_22DDB24B0;
      v98 = (_QWORD *)v78;
      aBlock = MEMORY[0x24BDAC760];
      v94 = 1107296256;
      v95 = sub_22DD9C498;
      v96 = &block_descriptor_58;
      v81 = _Block_copy(&aBlock);
      sub_22DD50D8C(v80);
      swift_release();
      sub_22DE1F1CC();
      aBlock = MEMORY[0x24BEE4AF8];
      sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
      sub_22DD78E50();
      v82 = v89;
      sub_22DE1F67C();
      MEMORY[0x22E31FDFC](0, v21, v17, v81);
      _Block_release(v81);

      (*(void (**)(char *, uint64_t))(v88 + 8))(v17, v82);
      v75 = *(void (**)(char *, uint64_t))(v76 + 8);
      goto LABEL_27;
    }
    if (!a6)
    {
      v83 = swift_bridgeObjectRetain();
      v84 = sub_22DDAC324(v83);
      swift_bridgeObjectRelease();
      sub_22DDB1E7C(a9, v84, v90, (uint64_t)v91);
      swift_bridgeObjectRelease();
      return;
    }
    v87 = v19;
    sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
    swift_bridgeObjectRetain();
    sub_22DD50D8C(a6);
    v29 = (void *)sub_22DE1F574();
    v30 = (_QWORD *)swift_allocObject();
    v30[2] = a6;
    v30[3] = a7;
    v30[4] = a8;
    v30[5] = a9;
    v32 = v90;
    v31 = v91;
    v30[6] = a1;
    v30[7] = v32;
    v30[8] = v31;
    v97 = sub_22DDB2510;
    v98 = v30;
    aBlock = MEMORY[0x24BDAC760];
    v94 = 1107296256;
    v95 = sub_22DD9C498;
    v96 = &block_descriptor_64;
    v33 = _Block_copy(&aBlock);
    sub_22DD50D8C(v32);
    sub_22DD50D8C(a6);
    v34 = a9;
    swift_release();
    sub_22DE1F1CC();
    aBlock = MEMORY[0x24BEE4AF8];
    sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
    sub_22DD78E50();
    v35 = v89;
    sub_22DE1F67C();
    MEMORY[0x22E31FDFC](0, v21, v17, v33);
    _Block_release(v33);

    sub_22DD50DE0(a6);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v17, v35);
LABEL_25:
    v75 = *(void (**)(char *, uint64_t))(v87 + 8);
LABEL_27:
    v75(v21, v86);
    return;
  }
  v87 = v19;
  v22 = a2;
  v23 = (void *)sub_22DE1DEDC();
  p_type = &stru_24F998FF0.type;
  v25 = objc_msgSend(v23, sel_code);

  if (v25 != (id)-7003)
  {
    if (qword_255DB5300 != -1)
      swift_once();
    v36 = sub_22DE1E410();
    __swift_project_value_buffer(v36, (uint64_t)qword_255DB8100);
    v37 = a2;
    v38 = a2;
    v39 = sub_22DE1E3F8();
    v40 = sub_22DE1F514();
    v41 = os_log_type_enabled(v39, v40);
    v86 = v18;
    if (v41)
    {
      v42 = (uint8_t *)swift_slowAlloc();
      v43 = swift_slowAlloc();
      v92 = (uint64_t)a2;
      aBlock = v43;
      *(_DWORD *)v42 = 136446210;
      v44 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7A58);
      v45 = sub_22DE1F2EC();
      v92 = sub_22DDA2E30(v45, v46, &aBlock);
      sub_22DE1F628();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22DD4B000, v39, v40, "AK Authentication error: %{public}s", v42, 0xCu);
      swift_arrayDestroy();
      v47 = v43;
      p_type = (char **)(&stru_24F998FF0 + 16);
      MEMORY[0x22E320870](v47, -1, -1);
      MEMORY[0x22E320870](v42, -1, -1);
    }
    else
    {

    }
    v54 = (void *)sub_22DE1DEDC();
    v55 = objc_msgSend(v54, sel_domain);

    v56 = sub_22DE1F2B0();
    v58 = v57;

    if (v56 == sub_22DE1F2B0() && v58 == v59)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v60 = sub_22DE1F8E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v60 & 1) == 0)
        goto LABEL_23;
    }
    v61 = (void *)sub_22DE1DEDC();
    v62 = objc_msgSend(v61, p_type[411]);

    if (v62 == (id)-7005)
    {
      sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
      v63 = (void *)sub_22DE1F574();
      v64 = swift_allocObject();
      v66 = v90;
      v65 = v91;
      *(_QWORD *)(v64 + 16) = v90;
      *(_QWORD *)(v64 + 24) = v65;
      v97 = sub_22DDB2584;
      v98 = (_QWORD *)v64;
      aBlock = MEMORY[0x24BDAC760];
      v94 = 1107296256;
      v95 = sub_22DD9C498;
      v96 = &block_descriptor_76;
      v67 = _Block_copy(&aBlock);
      sub_22DD50D8C(v66);
      swift_release();
      sub_22DE1F1CC();
      aBlock = MEMORY[0x24BEE4AF8];
      sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
      sub_22DD78E50();
      v68 = v89;
      sub_22DE1F67C();
      MEMORY[0x22E31FDFC](0, v21, v17, v67);
      v69 = v67;
LABEL_24:
      _Block_release(v69);

      (*(void (**)(char *, uint64_t))(v88 + 8))(v17, v68);
      goto LABEL_25;
    }
LABEL_23:
    sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
    v63 = (void *)sub_22DE1F574();
    v70 = (_QWORD *)swift_allocObject();
    v72 = v90;
    v71 = v91;
    v70[2] = v90;
    v70[3] = v71;
    v70[4] = a2;
    v97 = sub_22DDB2558;
    v98 = v70;
    aBlock = MEMORY[0x24BDAC760];
    v94 = 1107296256;
    v95 = sub_22DD9C498;
    v96 = &block_descriptor_70;
    v73 = _Block_copy(&aBlock);
    v74 = a2;
    sub_22DD50D8C(v72);
    swift_release();
    sub_22DE1F1CC();
    aBlock = MEMORY[0x24BEE4AF8];
    sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
    sub_22DD78E50();
    v68 = v89;
    sub_22DE1F67C();
    MEMORY[0x22E31FDFC](0, v21, v17, v73);
    v69 = v73;
    goto LABEL_24;
  }
  if ((a3 & 1) != 0)
  {
    if (qword_255DB5300 != -1)
      swift_once();
    v26 = sub_22DE1E410();
    __swift_project_value_buffer(v26, (uint64_t)qword_255DB8100);
    v91 = sub_22DE1E3F8();
    v27 = sub_22DE1F4E4();
    if (os_log_type_enabled(v91, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_22DD4B000, v91, v27, "User cancelled re-authentication", v28, 2u);
      MEMORY[0x22E320870](v28, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
    v48 = (void *)sub_22DE1F574();
    v49 = swift_allocObject();
    v51 = v90;
    v50 = v91;
    *(_QWORD *)(v49 + 16) = v90;
    *(_QWORD *)(v49 + 24) = v50;
    v97 = sub_22DDB25A4;
    v98 = (_QWORD *)v49;
    aBlock = MEMORY[0x24BDAC760];
    v94 = 1107296256;
    v95 = sub_22DD9C498;
    v96 = &block_descriptor_82;
    v52 = _Block_copy(&aBlock);
    sub_22DD50D8C(v51);
    swift_release();
    sub_22DE1F1CC();
    aBlock = MEMORY[0x24BEE4AF8];
    sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
    sub_22DD78E50();
    v53 = v89;
    sub_22DE1F67C();
    MEMORY[0x22E31FDFC](0, v21, v17, v52);
    _Block_release(v52);

    (*(void (**)(char *, uint64_t))(v88 + 8))(v17, v53);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v21, v18);
  }
}

uint64_t sub_22DDAF39C(void (*a1)(uint64_t (*)(), _QWORD *), uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;
  id v14;

  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a3;
  v13[3] = a4;
  v13[4] = a5;
  v13[5] = a6;
  v13[6] = a7;
  v14 = a4;
  swift_bridgeObjectRetain();
  sub_22DD50D8C(a6);
  a1(sub_22DDB25FC, v13);
  return swift_release();
}

void sub_22DDAF43C(void (*a1)(void), uint64_t a2, char a3)
{
  void *v5;
  _BYTE *v6;

  if (a1)
  {
    sub_22DDB230C();
    v5 = (void *)swift_allocError();
    *v6 = a3;
    a1();

  }
}

uint64_t sub_22DDAF49C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8180);
    v4 = sub_22DE1F244();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_22DDAF52C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  _QWORD aBlock[7];

  v8 = sub_22DE1F2B0();
  if (*(_QWORD *)(a1 + 16) && (v10 = sub_22DDFD368(v8, v9), (v11 & 1) != 0))
  {
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v10);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    aBlock[6] = v12;
    swift_dynamicCast();
    v13 = (void *)sub_22DE1F28C();
    swift_bridgeObjectRelease();
    sub_22DDAC628(a1);
    v14 = (void *)sub_22DE1F238();
    swift_bridgeObjectRelease();
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = a3;
    *(_QWORD *)(v15 + 24) = a4;
    aBlock[4] = sub_22DDB2690;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DDAF6DC;
    aBlock[3] = &block_descriptor_97;
    v16 = _Block_copy(aBlock);
    sub_22DD50D8C(a3);
    swift_release();
    objc_msgSend(a2, sel_loginWithUsername_authenticationResults_completion_, v13, v14, v16);
    _Block_release(v16);

  }
  else
  {
    swift_bridgeObjectRelease();
    __break(1u);
  }
}

uint64_t sub_22DDAF6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(uint64_t, uint64_t);

  v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);
  return swift_release();
}

void sub_22DDAF724(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  uint64_t v9;
  void *v10;
  _QWORD v11[6];

  v8 = (void *)sub_22DE1F28C();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a4;
  *(_QWORD *)(v9 + 24) = a5;
  v11[4] = sub_22DDB2E14;
  v11[5] = v9;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_22DDAF6DC;
  v11[3] = &block_descriptor_18_0;
  v10 = _Block_copy(v11);
  sub_22DD50D8C(a4);
  swift_release();
  objc_msgSend(a1, sel_loginWithAppleConnectToken_completion_, v8, v10);
  _Block_release(v10);

}

void sub_22DDAF808(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  char v4;
  void *v5;
  void *v6;
  char *v7;
  id v8;

  if ((a2 & 1) != 0)
  {
    v4 = 0;
    goto LABEL_9;
  }
  if ((a2 & 2) != 0)
  {
    v4 = 1;
    goto LABEL_9;
  }
  if ((a2 & 4) != 0)
  {
    v4 = 2;
    goto LABEL_9;
  }
  if (a2)
  {
    v4 = 3;
LABEL_9:
    sub_22DDB230C();
    v5 = (void *)swift_allocError();
    v6 = v5;
    *v7 = v4;
    if (a3)
    {
      v8 = v5;
      a3(v6);

    }
    return;
  }
  if (a3)
    a3(0);
}

void sub_22DDAF8BC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  _QWORD v8[6];

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  v8[4] = sub_22DDB2A3C;
  v8[5] = v6;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_22DDAF9EC;
  v8[3] = &block_descriptor_155;
  v7 = _Block_copy(v8);
  sub_22DD50D8C(a2);
  swift_release();
  objc_msgSend(a1, sel_loginAsUnauthenticatedUserWithCompletion_, v7);
  _Block_release(v7);
}

void sub_22DDAF988(int a1, id a2, void (*a3)(id))
{
  id v5;

  if (a2)
  {
    if (a3)
    {
      v5 = a2;
      a3(a2);

    }
  }
  else if (a3)
  {
    a3(0);
  }
}

void sub_22DDAF9EC(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_22DDAFA4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3 = *(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40);
  *v3 = a2;
  v3[1] = a3;
  return swift_continuation_resume();
}

uint64_t sub_22DDAFA60(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  id v7;
  unint64_t *v8;

  if (a1)
  {
    swift_beginAccess();
    v6 = *(_QWORD *)(a3 + 24);
    v7 = a1;
    v8 = *(unint64_t **)(*(_QWORD *)(a2 + 64) + 40);
    *v8 = v6;
  }
  else
  {
    swift_beginAccess();
    v8 = *(unint64_t **)(*(_QWORD *)(a2 + 64) + 40);
    *v8 = *(_QWORD *)(a3 + 24) & 0xFFFFFFFFFFFFFFFBLL;
  }
  v8[1] = (unint64_t)a1;
  return swift_continuation_resume();
}

void sub_22DDAFAEC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, void *), uint64_t a4, char a5, uint64_t a6, void *a7, uint64_t a8)
{
  char v11;
  void *v12;
  void *v13;
  char *v14;
  id v15;
  _QWORD *v19;

  if ((a1 & 1) != 0)
  {
    v11 = 0;
    goto LABEL_9;
  }
  if ((a1 & 2) != 0)
  {
    v11 = 1;
    goto LABEL_9;
  }
  if ((a1 & 4) != 0)
  {
    v11 = 2;
    goto LABEL_9;
  }
  if (a1)
  {
    v11 = 3;
LABEL_9:
    sub_22DDB230C();
    v12 = (void *)swift_allocError();
    v13 = v12;
    *v14 = v11;
    if (a3)
    {
      v15 = v12;
      a3(a2, v13);

    }
    return;
  }
  if ((a2 & 4) != 0)
  {
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = a2;
    v19[3] = a3;
    v19[4] = a4;
    sub_22DD50D8C((uint64_t)a3);
    if (a5 == 1)
      sub_22DDB1658(a7, (uint64_t)sub_22DDB2B70, (uint64_t)v19);
    else
      sub_22DDAE204(a8, a7, 0, 0, 1, 0, 0, (uint64_t)sub_22DDB2B70, (uint64_t)v19);
    swift_release();
  }
  else if (a3)
  {
    a3(a2, 0);
  }
}

void sub_22DDAFC84(char a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  id v28;

  if ((a1 & 1) != 0)
  {
    ((void (*)(_QWORD))a3)(0);
  }
  else
  {
    v12 = a5 + 16;
    swift_beginAccess();
    v13 = MEMORY[0x22E32090C](v12);
    if (v13)
    {
      v14 = (void *)v13;
      if (qword_255DB5300 != -1)
        swift_once();
      v15 = sub_22DE1E410();
      __swift_project_value_buffer(v15, (uint64_t)qword_255DB8100);
      v16 = sub_22DE1E3F8();
      v17 = sub_22DE1F514();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_22DD4B000, v16, v17, "Recovering from invalid session with system account failed. Will prompt for username and password", v18, 2u);
        MEMORY[0x22E320870](v18, -1, -1);
      }

      v19 = objc_msgSend(a8, sel_username);
      if (v19)
      {
        v20 = v19;
        v21 = sub_22DE1F2B0();
        v23 = v22;

      }
      else
      {
        v21 = 0;
        v23 = 0;
      }
      sub_22DDAE204(a7, v14, v21, v23, 0, 0, 0, (uint64_t)a3, a4);

      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_255DB5300 != -1)
        swift_once();
      v24 = sub_22DE1E410();
      __swift_project_value_buffer(v24, (uint64_t)qword_255DB8100);
      v25 = sub_22DE1E3F8();
      v26 = sub_22DE1F508();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v27 = 0;
        _os_log_impl(&dword_22DD4B000, v25, v26, "Recovering from invalid session with system account failed and login manager is nil", v27, 2u);
        MEMORY[0x22E320870](v27, -1, -1);
      }

      v28 = (id)FBKErrorOfType();
      a3();

    }
  }
}

void sub_22DDAFEFC(char a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;

  if ((a1 & 1) != 0)
  {
    ((void (*)(_QWORD))a3)(0);
  }
  else
  {
    v12 = a5 + 16;
    swift_beginAccess();
    v13 = MEMORY[0x22E32090C](v12);
    if (v13)
    {
      v14 = (void *)v13;
      v15 = objc_msgSend(a8, sel_username);
      if (v15)
      {
        v16 = v15;
        v17 = sub_22DE1F2B0();
        v19 = v18;

      }
      else
      {
        v17 = 0;
        v19 = 0;
      }
      sub_22DDAE204(a7, v14, v17, v19, 0, 0, 0, (uint64_t)a3, a4);

      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_255DB5300 != -1)
        swift_once();
      v20 = sub_22DE1E410();
      __swift_project_value_buffer(v20, (uint64_t)qword_255DB8100);
      v21 = sub_22DE1E3F8();
      v22 = sub_22DE1F508();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_22DD4B000, v21, v22, "Recovering from invalid session with regular account failed and login manager is nil", v23, 2u);
        MEMORY[0x22E320870](v23, -1, -1);
      }

      v24 = (id)FBKErrorOfType();
      a3();

    }
  }
}

uint64_t sub_22DDB00C4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint8_t *v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  os_log_type_t v34;
  uint8_t *v35;
  void *v36;
  _QWORD *v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  uint8_t *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD aBlock[7];

  aBlock[6] = *MEMORY[0x24BDAC8D0];
  v13 = sub_22DE1F1B4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_22DE1F1D8();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = a6;
    *(_QWORD *)(v22 + 24) = a7;
    sub_22DD50D8C(a6);
    sub_22DDB2098(a5, a1, a2, (uint64_t)sub_22DDB2AFC, v22);
    return swift_release();
  }
  else
  {
    v46 = v19;
    v47 = v18;
    if (qword_255DB5300 != -1)
      swift_once();
    v45 = a5;
    v24 = sub_22DE1E410();
    __swift_project_value_buffer(v24, (uint64_t)qword_255DB8100);
    v25 = a3;
    v26 = a3;
    v27 = sub_22DE1E3F8();
    v28 = sub_22DE1F4FC();
    v29 = os_log_type_enabled(v27, v28);
    v48 = v14;
    if (v29)
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v43 = (_QWORD *)swift_slowAlloc();
      v44 = v30;
      *(_DWORD *)v30 = 138412290;
      if (a3)
      {
        v31 = a3;
        v32 = _swift_stdlib_bridgeErrorToNSError();
        aBlock[0] = v32;
        sub_22DE1F628();
      }
      else
      {
        aBlock[0] = 0;
        sub_22DE1F628();
        v32 = 0;
      }
      v33 = v43;
      *v43 = v32;

      v34 = v28;
      v35 = v44;
      _os_log_impl(&dword_22DD4B000, v27, v34, "Received error from AppleConnect: %@", v44, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8160);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v33, -1, -1);
      MEMORY[0x22E320870](v35, -1, -1);
    }
    else
    {

    }
    sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
    v36 = (void *)sub_22DE1F574();
    v37 = (_QWORD *)swift_allocObject();
    v38 = v45;
    v37[2] = v45;
    v37[3] = a3;
    v37[4] = a6;
    v37[5] = a7;
    aBlock[4] = sub_22DDB2AC0;
    aBlock[5] = v37;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DD9C498;
    aBlock[3] = &block_descriptor_167;
    v39 = _Block_copy(aBlock);
    v40 = a3;
    sub_22DD50D8C(a6);
    v41 = v38;
    swift_release();
    sub_22DE1F1CC();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
    sub_22DD78E50();
    sub_22DE1F67C();
    MEMORY[0x22E31FDFC](0, v21, v16, v39);
    _Block_release(v39);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v16, v13);
    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v21, v47);
  }
}

void sub_22DDB0534(void *a1, void (*a2)(uint64_t, void *))
{
  id v4;

  if (a1)
  {
    if (a2)
    {
      v4 = a1;
      a2(4, a1);

    }
  }
  else if (a2)
  {
    a2(1, 0);
  }
}

void sub_22DDB059C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;
  void *v9;
  id v10;
  _QWORD v11[6];

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  v11[4] = sub_22DDB2B38;
  v11[5] = v8;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_22DD9C498;
  v11[3] = &block_descriptor_176;
  v9 = _Block_copy(v11);
  v10 = a2;
  sub_22DD50D8C(a3);
  swift_release();
  objc_msgSend(a1, sel_logOutIfNeededAndRun_, v9);
  _Block_release(v9);
}

void sub_22DDB0678(void *a1, void (*a2)(uint64_t, id))
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  _BYTE *v11;
  id v12;
  id v13;

  if (!a1
    || (v3 = a1,
        __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7A58),
        sub_22DD70E78(0, &qword_255DB81C0),
        (swift_dynamicCast() & 1) == 0))
  {
    if (!a2)
      return;
    v4 = (id)FBKErrorOfType();
    a2(4, v4);
    goto LABEL_14;
  }
  v4 = v13;
  v5 = objc_msgSend(v13, sel_domain);
  v6 = sub_22DE1F2B0();
  v8 = v7;

  if (v6 == 0xD000000000000017 && v8 == 0x800000022DE2AB80)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = sub_22DE1F8E0();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
      goto LABEL_12;
  }
  if (objc_msgSend(v13, sel_code) != (id)-100)
  {
LABEL_12:
    if (a2)
    {
      v12 = (id)FBKErrorOfType();
      a2(4, v12);

    }
    goto LABEL_14;
  }
  if (a2)
  {
    sub_22DDB230C();
    v10 = (void *)swift_allocError();
    *v11 = 4;
    a2(4, v10);

    return;
  }
LABEL_14:

}

uint64_t sub_22DDB084C(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, uint64_t, void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v4 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    v5 = sub_22DE1F2B0();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  swift_retain();
  v8 = a3;
  v4(v5, v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_22DDB08CC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD aBlock[7];

  v41 = a6;
  aBlock[6] = *MEMORY[0x24BDAC8D0];
  v12 = sub_22DE1F1B4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_22DE1F1D8();
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
    return sub_22DDB2098(a5, a1, a2, v41, a7);
  v40 = v17;
  if (qword_255DB5300 != -1)
    swift_once();
  v21 = sub_22DE1E410();
  __swift_project_value_buffer(v21, (uint64_t)qword_255DB8100);
  v22 = a3;
  v23 = a3;
  v24 = sub_22DE1E3F8();
  v25 = sub_22DE1F4FC();
  if (os_log_type_enabled(v24, v25))
  {
    v37 = a7;
    v38 = v16;
    v39 = v13;
    v26 = (uint8_t *)swift_slowAlloc();
    v36 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v26 = 138412290;
    if (a3)
    {
      v27 = a3;
      v28 = _swift_stdlib_bridgeErrorToNSError();
      aBlock[0] = v28;
      sub_22DE1F628();
    }
    else
    {
      aBlock[0] = 0;
      sub_22DE1F628();
      v28 = 0;
    }
    v29 = v36;
    *v36 = v28;

    _os_log_impl(&dword_22DD4B000, v24, v25, "Received error from AppleConnect: %@", v26, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8160);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v29, -1, -1);
    MEMORY[0x22E320870](v26, -1, -1);

    v16 = v38;
    v13 = v39;
    a7 = v37;
  }
  else
  {

  }
  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v30 = (void *)sub_22DE1F574();
  v31 = (_QWORD *)swift_allocObject();
  v32 = v41;
  v31[2] = a5;
  v31[3] = v32;
  v31[4] = a7;
  aBlock[4] = sub_22DDB164C;
  aBlock[5] = v31;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = &block_descriptor_6;
  v33 = _Block_copy(aBlock);
  v34 = a5;
  swift_retain();
  swift_release();
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD78E50();
  sub_22DE1F67C();
  MEMORY[0x22E31FDFC](0, v19, v15, v33);
  _Block_release(v33);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v19, v16);
}

void sub_22DDB0D00(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  _QWORD v8[6];

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  v8[4] = sub_22DDB2350;
  v8[5] = v6;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_22DD9C498;
  v8[3] = &block_descriptor_24;
  v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_logOutIfNeededAndRun_, v7);
  _Block_release(v7);
}

void sub_22DDB0DC0(void (*a1)(void))
{
  id v2;

  v2 = (id)FBKErrorOfType();
  a1();

}

id sub_22DDB0E40()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Authentication();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for Authentication()
{
  return objc_opt_self();
}

uint64_t sub_22DDB0E90()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DDB0EBC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  return sub_22DDB08CC(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

void sub_22DDB0EE0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB81B8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  *(_QWORD *)(v8 + ((v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  aBlock[4] = sub_22DDB2738;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DDB084C;
  aBlock[3] = &block_descriptor_105;
  v9 = _Block_copy(aBlock);
  v10 = a2;
  swift_release();
  FBKLoginWithAppleConnect();
  _Block_release(v9);
}

uint64_t sub_22DDB101C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  char *v34;
  char *v35;
  uint8_t *v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  _QWORD aBlock[6];

  v50 = a2;
  v51 = a5;
  v8 = sub_22DE1F1B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22DE1F1D8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB81B8);
  v17 = *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64);
  MEMORY[0x24BDAC7A8](v16);
  if (a3)
  {
    aBlock[0] = a3;
    v20 = a3;
    return sub_22DE1F424();
  }
  else
  {
    v48 = v9;
    v49 = a4;
    v45 = v15;
    v46 = v13;
    v47 = v11;
    v22 = v50;
    if (v50)
    {
      v23 = v18;
      v24 = v19;
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))((char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v49, v18);
      v25 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v26 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v26 + v25, (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v23);
      sub_22DDB2098(v51, a1, v22, (uint64_t)sub_22DDB2854, v26);
    }
    else
    {
      v27 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      v28 = v19;
      v29 = v18;
      if (qword_255DB5300 != -1)
        swift_once();
      v30 = sub_22DE1E410();
      __swift_project_value_buffer(v30, (uint64_t)qword_255DB8100);
      v31 = sub_22DE1E3F8();
      v32 = sub_22DE1F4FC();
      v33 = os_log_type_enabled(v31, v32);
      v34 = v47;
      v50 = v12;
      v35 = v45;
      if (v33)
      {
        v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v36 = 0;
        _os_log_impl(&dword_22DD4B000, v31, v32, "Something went wrong in AppleConnect login attempt.", v36, 2u);
        MEMORY[0x22E320870](v36, -1, -1);
      }

      sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
      v44 = sub_22DE1F574();
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v27, v49, v29);
      v37 = (*(unsigned __int8 *)(v28 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
      v38 = swift_allocObject();
      v39 = v51;
      *(_QWORD *)(v38 + 16) = v51;
      (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v38 + v37, v27, v29);
      aBlock[4] = sub_22DDB281C;
      aBlock[5] = v38;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_22DD9C498;
      aBlock[3] = &block_descriptor_111;
      v40 = _Block_copy(aBlock);
      v41 = v39;
      sub_22DE1F1CC();
      v52 = MEMORY[0x24BEE4AF8];
      sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
      sub_22DD78E50();
      sub_22DE1F67C();
      v42 = (void *)v44;
      MEMORY[0x22E31FDFC](0, v35, v34, v40);
      _Block_release(v40);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v34, v8);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v35, v50);
    }
    return swift_release();
  }
}

uint64_t sub_22DDB1410(void *a1)
{
  id v1;

  if (a1)
  {
    v1 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB81B8);
    return sub_22DE1F424();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB81B8);
    return sub_22DE1F430();
  }
}

void sub_22DDB1470(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB81B8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_22DDB28FC;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = &block_descriptor_120;
  v9 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a1, sel_logOutIfNeededAndRun_, v9);
  _Block_release(v9);
}

id sub_22DDB15A0()
{
  id result;

  result = (id)FBKErrorOfType();
  if (result)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB81B8);
    return (id)sub_22DE1F424();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22DDB15F8(uint64_t (*a1)(void))
{
  uint64_t result;

  result = a1();
  if (result)
    return _swift_stdlib_bridgeErrorToNSError();
  return result;
}

uint64_t sub_22DDB1620()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_22DDB164C()
{
  uint64_t v0;

  sub_22DDB0D00(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_22DDB1658(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v6 = sub_22DE1F1B4();
  v18 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_22DE1F1D8();
  v9 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v12 = (void *)sub_22DE1F574();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = a3;
  aBlock[4] = sub_22DDB2A2C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = &block_descriptor_149;
  v14 = _Block_copy(aBlock);
  v15 = a1;
  sub_22DD50D8C(a2);
  swift_release();
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD78E50();
  sub_22DE1F67C();
  MEMORY[0x22E31FDFC](0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v17);
}

uint64_t sub_22DDB1868(char a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16[5];

  if ((a1 & 1) != 0)
  {
    if (qword_255DB5300 != -1)
      swift_once();
    v1 = sub_22DE1E410();
    __swift_project_value_buffer(v1, (uint64_t)qword_255DB8100);
    v2 = sub_22DE1E3F8();
    v3 = sub_22DE1F514();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_22DD4B000, v2, v3, "AC disabled via user default", v4, 2u);
      MEMORY[0x22E320870](v4, -1, -1);
    }

    return 0;
  }
  else
  {
    v6 = sub_22DE1E0E0();
    v16[3] = v6;
    v16[4] = sub_22DD504A8(&qword_255DB81A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE30E10], MEMORY[0x24BE30E08]);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BE30E00], v6);
    v8 = sub_22DE1E0A4();
    v9 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    v10 = MEMORY[0x22E32027C](v9);
    v11 = FBKIsAppleConnectAvailable();
    if (qword_255DB5300 != -1)
      swift_once();
    v12 = sub_22DE1E410();
    __swift_project_value_buffer(v12, (uint64_t)qword_255DB8100);
    v13 = sub_22DE1E3F8();
    v14 = sub_22DE1F514();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      *(_DWORD *)v15 = 67109632;
      LODWORD(v16[0]) = v8 & 1;
      sub_22DE1F628();
      *(_WORD *)(v15 + 8) = 1024;
      LODWORD(v16[0]) = v10;
      sub_22DE1F628();
      *(_WORD *)(v15 + 14) = 1024;
      LODWORD(v16[0]) = v11;
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v13, v14, "AC enabled? [true] CFB enabled? [%{BOOL}d], internal? [%{BOOL}d], AC available? [%{BOOL}d]", (uint8_t *)v15, 0x14u);
      MEMORY[0x22E320870](v15, -1, -1);
    }

    return v8 & v10 & v11;
  }
}

uint64_t sub_22DDB1AEC(uint64_t result)
{
  char v1;
  char *v2;

  if ((result & 1) != 0)
  {
    v1 = 0;
  }
  else if ((result & 2) != 0)
  {
    v1 = 1;
  }
  else if ((result & 4) != 0)
  {
    v1 = 2;
  }
  else
  {
    if (!result)
      return result;
    v1 = 3;
  }
  sub_22DDB230C();
  result = swift_allocError();
  *v2 = v1;
  return result;
}

void sub_22DDB1B50(void *a1, void *a2, int a3, id a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  id v21;
  char **v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, void *);
  void *v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  _QWORD *v36;

  v7 = v6;
  if (objc_msgSend(a4, sel_isSystemAccount))
  {
    if (qword_255DB5300 != -1)
      swift_once();
    v13 = sub_22DE1E410();
    __swift_project_value_buffer(v13, (uint64_t)qword_255DB8100);
    v14 = sub_22DE1E3F8();
    v15 = sub_22DE1F514();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_22DD4B000, v14, v15, "Recovering from invalid session with system account", v16, 2u);
      MEMORY[0x22E320870](v16, -1, -1);
    }

    v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = a5;
    v18[3] = a6;
    v18[4] = v17;
    v18[5] = v7;
    v18[6] = a1;
    v18[7] = a4;
    v35 = sub_22DDB23CC;
    v36 = v18;
    v31 = MEMORY[0x24BDAC760];
    v32 = 1107296256;
    v33 = sub_22DDAF9EC;
    v34 = &block_descriptor_40;
    v19 = _Block_copy(&v31);
    v20 = a1;
    v21 = a4;
    swift_retain();
    swift_release();
    v22 = &selRef_loginWithSystemAccountWithCompletion_;
  }
  else
  {
    if (qword_255DB5300 != -1)
      swift_once();
    v23 = sub_22DE1E410();
    __swift_project_value_buffer(v23, (uint64_t)qword_255DB8100);
    v24 = sub_22DE1E3F8();
    v25 = sub_22DE1F514();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_22DD4B000, v24, v25, "Recovering from invalid session with regular user account", v26, 2u);
      MEMORY[0x22E320870](v26, -1, -1);
    }

    v27 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v28 = (_QWORD *)swift_allocObject();
    v28[2] = a5;
    v28[3] = a6;
    v28[4] = v27;
    v28[5] = v7;
    v28[6] = a1;
    v28[7] = a4;
    v35 = sub_22DDB2380;
    v36 = v28;
    v31 = MEMORY[0x24BDAC760];
    v32 = 1107296256;
    v33 = sub_22DDAF9EC;
    v34 = &block_descriptor_33_0;
    v19 = _Block_copy(&v31);
    v29 = a1;
    v30 = a4;
    swift_retain();
    swift_release();
    v22 = &selRef_autoLoginWithCompletion_;
  }
  objc_msgSend(a2, *v22, v19);
  _Block_release(v19);
}

uint64_t sub_22DDB1E7C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v8 = sub_22DE1F1B4();
  v22 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22DE1F1D8();
  v20 = *(_QWORD *)(v11 - 8);
  v21 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v14 = (void *)sub_22DE1F574();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a2;
  v15[3] = a1;
  v15[4] = a3;
  v15[5] = a4;
  aBlock[4] = sub_22DDB2680;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = &block_descriptor_91;
  v16 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v17 = a1;
  sub_22DD50D8C(a3);
  swift_release();
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD78E50();
  sub_22DE1F67C();
  MEMORY[0x22E31FDFC](0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v13, v21);
}

uint64_t sub_22DDB2098(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v10 = sub_22DE1F1B4();
  v24 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_22DE1F1D8();
  v22 = *(_QWORD *)(v13 - 8);
  v23 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v16 = (void *)sub_22DE1F574();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a1;
  v17[3] = a2;
  v17[4] = a3;
  v17[5] = a4;
  v17[6] = a5;
  aBlock[4] = sub_22DDB22F8;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = &block_descriptor_12_0;
  v18 = _Block_copy(aBlock);
  v19 = a1;
  swift_bridgeObjectRetain();
  sub_22DD50D8C(a4);
  swift_release();
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD78E50();
  sub_22DE1F67C();
  MEMORY[0x22E31FDFC](0, v15, v12, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v15, v23);
}

uint64_t sub_22DDB22BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 40))
    swift_release();
  return swift_deallocObject();
}

void sub_22DDB22F8()
{
  uint64_t v0;

  sub_22DDAF724(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

unint64_t sub_22DDB230C()
{
  unint64_t result;

  result = qword_255DB8168;
  if (!qword_255DB8168)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE2494C, &type metadata for Authentication.AuthenticationError);
    atomic_store(result, (unint64_t *)&qword_255DB8168);
  }
  return result;
}

void sub_22DDB2350()
{
  uint64_t v0;

  sub_22DDB0DC0(*(void (**)(void))(v0 + 16));
}

uint64_t sub_22DDB2358()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22DDB2380(uint64_t a1, uint64_t a2)
{
  return sub_22DDB23D8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DDAFEFC);
}

uint64_t objectdestroy_29Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22DDB23CC(uint64_t a1, uint64_t a2)
{
  return sub_22DDB23D8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DDAFC84);
}

uint64_t sub_22DDB23D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7]);
}

uint64_t sub_22DDB23EC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  if (*(_QWORD *)(v0 + 40))
    swift_release();

  return swift_deallocObject();
}

void sub_22DDB2430(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_22DDAE82C(a1, a2, *(_BYTE *)(v2 + 16), *(_QWORD *)(v2 + 24), *(NSObject **)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(void **)(v2 + 64));
}

unint64_t sub_22DDB2460()
{
  unint64_t result;

  result = qword_255DB8178;
  if (!qword_255DB8178)
  {
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_255DB8178);
  }
  return result;
}

uint64_t sub_22DDB24A4(uint64_t *a1)
{
  uint64_t v1;

  return sub_22DDAE7C0(a1, *(void (**)(uint64_t (*)(), uint64_t))(v1 + 16));
}

void sub_22DDB24B0()
{
  uint64_t v0;

  sub_22DDAF43C(*(void (**)(void))(v0 + 16), *(_QWORD *)(v0 + 24), 3);
}

uint64_t sub_22DDB24CC()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 56))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DDB2510()
{
  uint64_t v0;

  return sub_22DDAF39C(*(void (**)(uint64_t (*)(), _QWORD *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_22DDB2524()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();

  return swift_deallocObject();
}

uint64_t sub_22DDB2558()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 16);
  if (v1)
    return v1(*(_QWORD *)(v0 + 32));
  return result;
}

void sub_22DDB2584()
{
  uint64_t v0;

  sub_22DDAF43C(*(void (**)(void))(v0 + 16), *(_QWORD *)(v0 + 24), 0);
}

void sub_22DDB25A4()
{
  uint64_t v0;

  sub_22DDAF43C(*(void (**)(void))(v0 + 16), *(_QWORD *)(v0 + 24), 4);
}

uint64_t sub_22DDB25C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 40))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DDB25FC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = (void *)v0[3];
  v1 = v0[4];
  v4 = v0[5];
  v3 = v0[6];
  v5 = sub_22DDAC324(v1);
  sub_22DDB1E7C(v2, v5, v4, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DDB2644()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

void sub_22DDB2680()
{
  uint64_t v0;

  sub_22DDAF52C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_22DDB2690(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_22DDAF808(a1, a2, *(void (**)(void *))(v2 + 16));
}

_OWORD *sub_22DDB26A8(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_22DDB26B8(uint64_t a1)
{
  uint64_t v1;

  sub_22DDB0EE0(a1, *(void **)(v1 + 16));
}

uint64_t sub_22DDB26C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB81B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_22DDB2738(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB81B8) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_22DDB101C(a1, a2, a3, v3 + v8, *(void **)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_22DDB27A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB81B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_22DDB281C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB81B8) - 8) + 80);
  sub_22DDB1470(*(void **)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_22DDB2854(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB81B8);
  return sub_22DDB1410(a1);
}

uint64_t objectdestroy_113Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB81B8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

id sub_22DDB28FC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB81B8);
  return sub_22DDB15A0();
}

uint64_t sub_22DDB292C()
{
  return swift_deallocObject();
}

uint64_t sub_22DDB293C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DDB2960(void *a1)
{
  uint64_t v1;

  return sub_22DDAFA60(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_22DDB2968()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();

  return swift_deallocObject();
}

void sub_22DDB29A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_22DDAFAEC(a1, a2, *(void (**)(uint64_t, void *))(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32), *(_QWORD *)(v2 + 40), *(void **)(v2 + 48), *(_QWORD *)(v2 + 56));
}

void sub_22DDB29BC(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_22DDACF0C(a1, a2, *(void (**)(uint64_t, id))(v2 + 16));
}

uint64_t sub_22DDB29C8(uint64_t result)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t);

  v2 = *(uint64_t (**)(_QWORD, uint64_t))(v1 + 16);
  if (v2)
    return v2(0, result);
  return result;
}

uint64_t sub_22DDB29F8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

void sub_22DDB2A2C()
{
  uint64_t v0;

  sub_22DDAF8BC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_22DDB2A3C(int a1, void *a2)
{
  uint64_t v2;

  sub_22DDAF988(a1, a2, *(void (**)(id))(v2 + 16));
}

uint64_t sub_22DDB2A44()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DDB2A78(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  return sub_22DDB00C4(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_22DDB2A84()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

void sub_22DDB2AC0()
{
  uint64_t v0;

  sub_22DDB059C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

void sub_22DDB2AFC(void *a1)
{
  uint64_t v1;

  sub_22DDB0534(a1, *(void (**)(uint64_t, void *))(v1 + 16));
}

uint64_t sub_22DDB2B04()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

void sub_22DDB2B38()
{
  uint64_t v0;

  sub_22DDB0678(*(void **)(v0 + 16), *(void (**)(uint64_t, id))(v0 + 24));
}

uint64_t sub_22DDB2B44()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DDB2B70(uint64_t result)
{
  uint64_t v1;
  uint64_t (*v2)(unint64_t, uint64_t);

  v2 = *(uint64_t (**)(unint64_t, uint64_t))(v1 + 24);
  if (v2)
    return v2(*(_QWORD *)(v1 + 16) & 0xFFFFFFFFFFFFFFFBLL, result);
  return result;
}

uint64_t getEnumTagSinglePayload for Authentication.AuthenticationError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Authentication.AuthenticationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_22DDB2C84 + 4 * byte_22DE24895[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_22DDB2CB8 + 4 * byte_22DE24890[v4]))();
}

uint64_t sub_22DDB2CB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DDB2CC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DDB2CC8);
  return result;
}

uint64_t sub_22DDB2CD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DDB2CDCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_22DDB2CE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DDB2CE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Authentication.AuthenticationError()
{
  return &type metadata for Authentication.AuthenticationError;
}

unint64_t sub_22DDB2D08()
{
  unint64_t result;

  result = qword_255DB81D8;
  if (!qword_255DB81D8)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE24924, &type metadata for Authentication.AuthenticationError);
    atomic_store(result, (unint64_t *)&qword_255DB81D8);
  }
  return result;
}

uint64_t FBKFeedbackDraftViewController.ResponseType.description.getter(unint64_t a1)
{
  uint64_t result;

  if (a1 < 3)
    return *(_QWORD *)&aUnknown_1[8 * a1];
  result = sub_22DE1F8F8();
  __break(1u);
  return result;
}

unint64_t FBKFeedbackDraftViewController.ResponseType.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

unint64_t sub_22DDB2E94()
{
  unint64_t result;

  result = qword_255DB81E0;
  if (!qword_255DB81E0)
  {
    result = MEMORY[0x22E3207B0](&protocol conformance descriptor for FBKFeedbackDraftViewController.ResponseType, &type metadata for FBKFeedbackDraftViewController.ResponseType);
    atomic_store(result, &qword_255DB81E0);
  }
  return result;
}

uint64_t sub_22DDB2ED8()
{
  sub_22DE1F964();
  sub_22DE1F970();
  return sub_22DE1F97C();
}

uint64_t sub_22DDB2F1C()
{
  return sub_22DE1F970();
}

uint64_t sub_22DDB2F44()
{
  sub_22DE1F964();
  sub_22DE1F970();
  return sub_22DE1F97C();
}

uint64_t *sub_22DDB2F84@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  BOOL v3;

  v2 = *result;
  v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2)
    v2 = 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  return result;
}

uint64_t sub_22DDB2FA0()
{
  unint64_t *v0;

  return FBKFeedbackDraftViewController.ResponseType.description.getter(*v0);
}

ValueMetadata *type metadata accessor for FBKFeedbackDraftViewController.ResponseType()
{
  return &type metadata for FBKFeedbackDraftViewController.ResponseType;
}

uint64_t dispatch thunk of FBKFeedbackDraftPresentationDelegate.controllerDidRequestDismissal(feedbackDraftViewController:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_22DDB2FC0(uint64_t a1)
{
  uint64_t result;

  if ((unint64_t)(a1 + 1) < 3)
    return a1 + 1;
  sub_22DE1F730();
  swift_bridgeObjectRelease();
  type metadata accessor for FBKBugFormRole(0);
  sub_22DE1F2EC();
  sub_22DE1F328();
  swift_bridgeObjectRelease();
  result = sub_22DE1F7CC();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for GiveFeedbackView()
{
  return &type metadata for GiveFeedbackView;
}

uint64_t sub_22DDB3094()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DDB30A4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5870);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_22DE231A0;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  a2 &= 1u;
  *(_BYTE *)(v7 + 24) = a2;
  *(_QWORD *)(v6 + 32) = 0xD000000000000012;
  *(_QWORD *)(v6 + 40) = 0x800000022DE2AC30;
  *(_BYTE *)(v6 + 48) = 0;
  *(_QWORD *)(v6 + 56) = sub_22DDB3540;
  *(_QWORD *)(v6 + 64) = v7;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_BYTE *)(v8 + 24) = a2;
  *(_QWORD *)(v6 + 72) = 1885956947;
  *(_QWORD *)(v6 + 80) = 0xE400000000000000;
  *(_BYTE *)(v6 + 88) = 1;
  *(_QWORD *)(v6 + 96) = sub_22DDB354C;
  *(_QWORD *)(v6 + 104) = v8;
  *(_QWORD *)a3 = 0xD000000000000029;
  *(_QWORD *)(a3 + 8) = 0x800000022DE2AC50;
  *(_QWORD *)(a3 + 16) = 0xD000000000000054;
  *(_QWORD *)(a3 + 24) = 0x800000022DE2AC80;
  *(_BYTE *)(a3 + 32) = 2;
  *(_QWORD *)(a3 + 40) = v6;
  *(_QWORD *)(a3 + 48) = 0xD000000000000022;
  *(_QWORD *)(a3 + 56) = 0x800000022DE2ACE0;
  return swift_retain_n();
}

uint64_t sub_22DDB31EC(uint64_t a1, char a2)
{
  char v2;
  uint64_t v3;

  v2 = a2 & 1;
  v3 = swift_retain();
  sub_22DD83CC8(v3, v2);
  swift_release();
  sub_22DE1F13C();
  sub_22DE1E674();
  swift_release();
  return swift_release();
}

uint64_t sub_22DDB3268(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5878);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22DE1F46C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_22DE1F448();
  swift_retain();
  v8 = sub_22DE1F43C();
  v9 = swift_allocObject();
  v10 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v10;
  *(_QWORD *)(v9 + 32) = a1;
  *(_BYTE *)(v9 + 40) = a2 & 1;
  sub_22DD54C94((uint64_t)v6, (uint64_t)&unk_255DB81F0, v9);
  return swift_release();
}

uint64_t sub_22DDB3350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 + 72) = a5;
  *(_QWORD *)(v5 + 24) = a4;
  sub_22DE1F448();
  *(_QWORD *)(v5 + 32) = sub_22DE1F43C();
  *(_QWORD *)(v5 + 40) = sub_22DE1F418();
  *(_QWORD *)(v5 + 48) = v6;
  return swift_task_switch();
}

uint64_t sub_22DDB33C0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_BYTE *)(v0 + 72) & 1;
  v2 = swift_retain();
  v3 = sub_22DD83CC8(v2, v1);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 16) = v3;
  sub_22DDB3608();
  sub_22DE1E068();
  swift_release();
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v3 + 16);
  swift_retain();
  swift_release();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = sub_22DDB348C;
  return sub_22DDCAA10();
}

uint64_t sub_22DDB348C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DDB34E0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DDB3510@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DDB30A4(*(_QWORD *)v1, *(_BYTE *)(v1 + 8), a1);
}

uint64_t sub_22DDB351C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DDB3540()
{
  uint64_t v0;

  return sub_22DDB31EC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_22DDB354C()
{
  uint64_t v0;

  return sub_22DDB3268(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_22DDB3558()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DDB3584(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_22DD54F04;
  return sub_22DDB3350(a1, v4, v5, v6, v7);
}

unint64_t sub_22DDB3608()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DB6240;
  if (!qword_255DB6240)
  {
    v1 = type metadata accessor for BatchController();
    result = MEMORY[0x22E3207B0](&protocol conformance descriptor for BatchController, v1);
    atomic_store(result, (unint64_t *)&qword_255DB6240);
  }
  return result;
}

uint64_t sub_22DDB3650()
{
  return sub_22DD6CF94();
}

ValueMetadata *type metadata accessor for CUMessageGeneratedContentPreviewController()
{
  return &type metadata for CUMessageGeneratedContentPreviewController;
}

uint64_t destroy for CUMessageOriginalContentPreviewController()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t _s8Feedback41CUMessageOriginalContentPreviewControllerVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CUMessageOriginalContentPreviewController(uint64_t a1, uint64_t a2)
{
  char v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CUMessageOriginalContentPreviewController(uint64_t a1, uint64_t a2)
{
  char v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CUMessageOriginalContentPreviewController(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CUMessageOriginalContentPreviewController(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CUMessageOriginalContentPreviewController()
{
  return &type metadata for CUMessageOriginalContentPreviewController;
}

uint64_t sub_22DDB3830()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DDB3840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  _QWORD v43[2];
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8280);
  v39 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8288);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v28 - v16;
  v38 = sub_22DE1E8F0();
  sub_22DDB3B34((uint64_t)v43);
  v32 = v43[1];
  v33 = v43[0];
  v30 = v44;
  v37 = v46;
  v36 = v47;
  v34 = v48;
  v35 = v45;
  v31 = v49;
  v40 = a1;
  v41 = a2;
  v42 = a3 & 1;
  sub_22DE1EC44();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8290);
  sub_22DD508B0(&qword_255DB8298, &qword_255DB8290, MEMORY[0x24BDF4700]);
  sub_22DE1E4E8();
  sub_22DD508B0(&qword_255DB82A0, &qword_255DB8280, MEMORY[0x24BDEB238]);
  sub_22DE1EE18();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v8);
  v28 = v12;
  v18 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v29 = v17;
  v18(v17, v15, v11);
  v19 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v19(v15, v17, v11);
  *(_QWORD *)a4 = v38;
  *(_QWORD *)(a4 + 8) = 0;
  *(_BYTE *)(a4 + 16) = 1;
  v21 = v32;
  v20 = v33;
  *(_QWORD *)(a4 + 24) = v33;
  *(_QWORD *)(a4 + 32) = v21;
  LOBYTE(v17) = v30;
  *(_BYTE *)(a4 + 40) = v30;
  v22 = v34;
  v23 = v37;
  *(_QWORD *)(a4 + 48) = v35;
  *(_QWORD *)(a4 + 56) = v23;
  *(_BYTE *)(a4 + 64) = v36;
  v24 = v31;
  *(_QWORD *)(a4 + 72) = v22;
  *(_QWORD *)(a4 + 80) = v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB82A8);
  v19((char *)(a4 + *(int *)(v25 + 48)), v15, v11);
  sub_22DD50088(v20, v21, (char)v17);
  v26 = *(void (**)(char *, uint64_t))(v28 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v26(v29, v11);
  v26(v15, v11);
  sub_22DD4FC6C(v20, v21, (char)v17);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DDB3B34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_22DE1E980();
  v2 = sub_22DE1ED7C();
  v4 = v3;
  v6 = v5 & 1;
  sub_22DE1ED10();
  v7 = sub_22DE1ED64();
  v9 = v8;
  v11 = v10;
  swift_release();
  v12 = v11 & 1;
  sub_22DD4FC6C(v2, v4, v6);
  swift_bridgeObjectRelease();
  sub_22DE1EF5C();
  v13 = sub_22DE1ED4C();
  v15 = v14;
  v17 = v16;
  v19 = v18;
  sub_22DD4FC6C(v7, v9, v12);
  swift_release();
  swift_bridgeObjectRelease();
  LOBYTE(v2) = v17 & 1;
  v20 = sub_22DE1EFBC();
  v21 = sub_22DE1EF5C();
  *(_QWORD *)a1 = v13;
  *(_QWORD *)(a1 + 8) = v15;
  *(_BYTE *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v19;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 48) = v20;
  *(_QWORD *)(a1 + 56) = v21;
  sub_22DD50088(v13, v15, v2);
  swift_bridgeObjectRetain();
  sub_22DD4FC6C(v13, v15, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DDB3CF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB82B0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a2 = sub_22DE1E9EC();
  *(_QWORD *)(a2 + 8) = 0x4040000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB82B8);
  v11 = a1;
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB82C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  swift_bridgeObjectRetain();
  sub_22DE1DEC4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB82C8);
  sub_22DD508B0(&qword_255DB82D0, &qword_255DB82C8, MEMORY[0x24BEE12C8]);
  sub_22DD508B0(&qword_255DB82D8, &qword_255DB82B0, MEMORY[0x24BDCC6C8]);
  v8 = sub_22DE1F3A0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  v11 = v8;
  sub_22DE1E050();
  type metadata accessor for CUMessagePreviewer(0);
  sub_22DD508B0(&qword_255DB82E0, &qword_255DB82C8, MEMORY[0x24BEE12D8]);
  sub_22DD504A8(&qword_255DB82E8, type metadata accessor for CUMessagePreviewer, (uint64_t)&unk_22DE24D24);
  sub_22DD504A8(qword_255DB82F0, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message, (uint64_t)&unk_22DE21660);
  return sub_22DE1F0D0();
}

uint64_t sub_22DDB3F10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22DD5C570(a1, a2, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
}

uint64_t sub_22DDB3F30(uint64_t a1, uint64_t a2, char a3)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  v4 = a3 & 1;
  v5 = sub_22DE1E1F4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = swift_retain();
  sub_22DD83ECC(v12, v4);
  swift_release();
  *v11 = a1;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BE31030], v5);
  swift_bridgeObjectRetain();
  sub_22DD7765C((uint64_t)v11, (uint64_t)v8);
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_22DD5C950((uint64_t)v11, type metadata accessor for FullScreenPreviewController.Content.PreviewType);
}

uint64_t sub_22DDB4078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8268);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)v0;
  v5 = *(_QWORD *)(v0 + 8);
  v6 = *(_BYTE *)(v0 + 16);
  *(_QWORD *)v3 = sub_22DE1E9EC();
  *((_QWORD *)v3 + 1) = 0;
  v3[16] = 1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8270);
  sub_22DDB3840(v4, v5, v6, (uint64_t)&v3[*(int *)(v7 + 44)]);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v4;
  *(_QWORD *)(v8 + 24) = v5;
  *(_BYTE *)(v8 + 32) = v6;
  sub_22DD508B0(&qword_255DB8278, &qword_255DB8268, MEMORY[0x24BDF4700]);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_22DE1EE00();
  swift_release();
  return sub_22DD5071C((uint64_t)v3, &qword_255DB8268);
}

uint64_t sub_22DDB41B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DDB41C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v32)(void);
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE v38[12];
  int v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  char v58;
  char v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;

  v2 = v1;
  v55 = a1;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7468);
  MEMORY[0x24BDAC7A8](v54);
  v4 = &v38[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v53 = sub_22DE1E734();
  MEMORY[0x24BDAC7A8](v53);
  v6 = &v38[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_22DE1E2E4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = &v38[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v38[-v12];
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8430);
  MEMORY[0x24BDAC7A8](v52);
  v15 = &v38[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v51 = sub_22DE1E8F0();
  sub_22DDB46B0((uint64_t)&v60);
  v42 = *((_QWORD *)&v60 + 1);
  v43 = v60;
  v41 = v61;
  v49 = *((_QWORD *)&v61 + 1);
  v48 = v62;
  v47 = *((_QWORD *)&v62 + 1);
  v45 = *((_QWORD *)&v63 + 1);
  v46 = v63;
  v44 = v64;
  v40 = BYTE8(v64);
  v50 = v65;
  v39 = BYTE8(v65);
  v16 = *(int *)(type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(0) + 32);
  if (*(_BYTE *)(v2 + v16) == 1)
  {
    v17 = sub_22DE1EF50();
  }
  else
  {
    if (qword_255DB5400 != -1)
      swift_once();
    v18 = __swift_project_value_buffer(v7, (uint64_t)qword_255DC3E20);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v13, v18, v7);
    v17 = sub_22DE1EF98();
  }
  v19 = v17;
  v20 = sub_22DE1EC5C();
  if (*(_BYTE *)(v2 + v16) == 1)
  {
    if (qword_255DB53D0 != -1)
      swift_once();
    v21 = qword_255DC3D90;
  }
  else
  {
    if (qword_255DB53D8 != -1)
      swift_once();
    v21 = qword_255DC3DA8;
  }
  v22 = __swift_project_value_buffer(v7, (uint64_t)v21);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v11, v22, v7);
  v59 = 1;
  v58 = v41;
  v57 = v40;
  v56 = v39;
  v23 = sub_22DE1EF98();
  v60 = (unint64_t)v51;
  LOBYTE(v61) = v59;
  *((_QWORD *)&v61 + 1) = v43;
  *(_QWORD *)&v62 = v42;
  BYTE8(v62) = v58;
  *(_QWORD *)&v63 = v49;
  BYTE8(v63) = v48;
  *(_QWORD *)&v64 = v47;
  *((_QWORD *)&v64 + 1) = v46;
  *(_QWORD *)&v65 = v45;
  *((_QWORD *)&v65 + 1) = v44;
  LOBYTE(v66) = v57;
  *((_QWORD *)&v66 + 1) = v50;
  LOBYTE(v67) = v56;
  *((_QWORD *)&v67 + 1) = v19;
  LOBYTE(v68) = v20;
  *((_QWORD *)&v68 + 1) = v23;
  v24 = (char *)v6 + *(int *)(v53 + 20);
  v25 = *MEMORY[0x24BDEEB68];
  v26 = sub_22DE1E9C8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v24, v25, v26);
  __asm { FMOV            V0.2D, #16.0 }
  *v6 = _Q0;
  v32 = MEMORY[0x24BDED998];
  sub_22DD5C570((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_WORD *)&v4[*(int *)(v54 + 36)] = 256;
  sub_22DD506A0((uint64_t)v4, (uint64_t)v15 + *(int *)(v52 + 36), &qword_255DB7468);
  v33 = v67;
  v15[6] = v66;
  v15[7] = v33;
  v15[8] = v68;
  v34 = v63;
  v15[2] = v62;
  v15[3] = v34;
  v35 = v65;
  v15[4] = v64;
  v15[5] = v35;
  v36 = v61;
  *v15 = v60;
  v15[1] = v36;
  sub_22DDB85F0((uint64_t)&v60);
  sub_22DD5071C((uint64_t)v4, &qword_255DB7468);
  sub_22DD5C950((uint64_t)v6, (uint64_t (*)(_QWORD))v32);
  sub_22DDB864C((uint64_t)&v60);
  return sub_22DD5003C((uint64_t)v15, v55, &qword_255DB8430);
}

uint64_t sub_22DDB46B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_22DD50840();
  swift_bridgeObjectRetain();
  v2 = sub_22DE1ED94();
  v4 = v3;
  v6 = v5 & 1;
  sub_22DE1ECBC();
  v7 = sub_22DE1ED64();
  v9 = v8;
  v11 = v10;
  v13 = v12;
  swift_release();
  sub_22DD4FC6C(v2, v4, v6);
  swift_bridgeObjectRelease();
  LOBYTE(v2) = sub_22DE1EC5C();
  sub_22DE1E4B8();
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v9;
  *(_BYTE *)(a1 + 16) = v11 & 1;
  *(_QWORD *)(a1 + 24) = v13;
  *(_BYTE *)(a1 + 32) = v2;
  *(_QWORD *)(a1 + 40) = v14;
  *(_QWORD *)(a1 + 48) = v15;
  *(_QWORD *)(a1 + 56) = v16;
  *(_QWORD *)(a1 + 64) = v17;
  *(_BYTE *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_BYTE *)(a1 + 88) = 1;
  sub_22DD50088(v7, v9, v11 & 1);
  swift_bridgeObjectRetain();
  sub_22DD4FC6C(v7, v9, v11 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DDB47EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = a1;
  v2 = type metadata accessor for CUMessageOriginalContentFullScreenPreviewController(0);
  v32 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v32 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v4 = sub_22DE1E2E4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8438);
  v8 = MEMORY[0x24BDAC7A8](v31);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v28 - v11;
  v13 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (qword_255DB53D0 != -1)
    swift_once();
  if (v13 <= 1)
    v14 = 0xE700000000000000;
  else
    v14 = 0xEC0000006E6F6974;
  v15 = 0x6567617373654DLL;
  if (v13 > 1)
    v15 = 0x61737265766E6F43;
  v29 = v15;
  v30 = v14;
  v16 = __swift_project_value_buffer(v4, (uint64_t)qword_255DC3D90);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v16, v4);
  v17 = sub_22DE1EF98();
  sub_22DD5C570(v1, (uint64_t)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CUMessageOriginalContentFullScreenPreviewController);
  v18 = (*(unsigned __int8 *)(v32 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v19 = swift_allocObject();
  sub_22DD647B0((uint64_t)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, type metadata accessor for CUMessageOriginalContentFullScreenPreviewController);
  v20 = (uint64_t *)&v10[*(int *)(v31 + 40)];
  *v20 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
  swift_storeEnumTagMultiPayload();
  *((_QWORD *)v10 + 6) = sub_22DDB8774;
  *((_QWORD *)v10 + 7) = v19;
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)v10 = _Q0;
  v26 = v30;
  *((_QWORD *)v10 + 2) = v29;
  *((_QWORD *)v10 + 3) = v26;
  *((_QWORD *)v10 + 4) = v17;
  v10[40] = 0;
  sub_22DD5003C((uint64_t)v10, (uint64_t)v12, &qword_255DB8438);
  return sub_22DD5003C((uint64_t)v12, v33, &qword_255DB8438);
}

uint64_t sub_22DDB4A74@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8440);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v14 - v9;
  *(_QWORD *)a2 = sub_22DE1E9EC();
  *(_QWORD *)(a2 + 8) = 0x4040000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  v15 = *a1;
  swift_bridgeObjectRetain_n();
  sub_22DDB618C(&v15);
  swift_bridgeObjectRelease();
  v11 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB82B8) + 44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB82C8);
  sub_22DE1E050();
  type metadata accessor for CUMessagePreviewer(0);
  sub_22DD508B0(&qword_255DB82E0, &qword_255DB82C8, MEMORY[0x24BEE12D8]);
  sub_22DD504A8(&qword_255DB82E8, type metadata accessor for CUMessagePreviewer, (uint64_t)&unk_22DE24D24);
  sub_22DD504A8(qword_255DB82F0, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message, (uint64_t)&unk_22DE21660);
  sub_22DE1F0D0();
  v12 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v12(v10, v8, v4);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v12)(v11, v10, v4);
}

uint64_t sub_22DDB4C5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[12];
  int v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *v53;
  _BYTE *v54;
  uint64_t v55;

  v49 = a3;
  v51 = a2;
  v55 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8228);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v54 = &v48[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v53 = (uint64_t *)&v48[-v8];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8230);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v52 = (uint64_t *)&v48[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8238);
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v48[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v50 = &v48[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB5958);
  MEMORY[0x24BDAC7A8](v18);
  v20 = &v48[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5948);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = &v48[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v22);
  v26 = &v48[-v25];
  v27 = type metadata accessor for BatchInteraction(0);
  sub_22DD506A0(a1 + *(int *)(v27 + 28), (uint64_t)v20, qword_255DB5958);
  v28 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v20, 1, v28) != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v31 = type metadata accessor for BatchInteraction.ContentPolarity;
      v32 = (uint64_t)v20;
    }
    else
    {
      sub_22DD5003C((uint64_t)v20, (uint64_t)v26, &qword_255DB5948);
      sub_22DD506A0((uint64_t)v26, (uint64_t)v24, &qword_255DB5948);
      v34 = type metadata accessor for BatchInteraction.ContentPreview(0);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v24, 1, v34) == 1)
      {
        sub_22DD5071C((uint64_t)v26, &qword_255DB5948);
        v30 = (uint64_t)v24;
        v29 = &qword_255DB5948;
        goto LABEL_3;
      }
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v35 = *(_QWORD *)v24;
        if (v24[8] == 1)
        {
          if (*(_QWORD *)(v35 + 16))
          {
            sub_22DD5C570(v35 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), (uint64_t)v14, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
            v36 = 0;
          }
          else
          {
            v36 = 1;
          }
          (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, v36, 1, v15);
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
          {
            v37 = v49 & 1;
            v38 = v50;
            sub_22DD647B0((uint64_t)v14, (uint64_t)v50, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
            v39 = sub_22DE1E8F0();
            v40 = (uint64_t)v52;
            *v52 = v39;
            *(_QWORD *)(v40 + 8) = 0;
            *(_BYTE *)(v40 + 16) = 1;
            v41 = v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB8240) + 44);
            v42 = sub_22DE1E9F8();
            v43 = (uint64_t)v53;
            *v53 = v42;
            *(_QWORD *)(v43 + 8) = 0x4030000000000000;
            *(_BYTE *)(v43 + 16) = 0;
            v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8248);
            sub_22DDB5174((uint64_t)v38, v51, v37, (uint64_t *)(v43 + *(int *)(v44 + 44)));
            v45 = v54;
            sub_22DD506A0(v43, (uint64_t)v54, &qword_255DB8228);
            sub_22DD506A0((uint64_t)v45, v41, &qword_255DB8228);
            v46 = v41 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB8250) + 48);
            *(_QWORD *)v46 = 0;
            *(_BYTE *)(v46 + 8) = 1;
            sub_22DD5071C(v43, &qword_255DB8228);
            sub_22DD5071C((uint64_t)v45, &qword_255DB8228);
            sub_22DD5071C((uint64_t)v26, &qword_255DB5948);
            v47 = v55;
            sub_22DD5003C(v40, v55, &qword_255DB8230);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
            return sub_22DD5C950((uint64_t)v38, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
          }
          sub_22DD5071C((uint64_t)v26, &qword_255DB5948);
          v29 = &qword_255DB8238;
          v30 = (uint64_t)v14;
        }
        else
        {
          swift_bridgeObjectRelease();
          v29 = &qword_255DB5948;
          v30 = (uint64_t)v26;
        }
        goto LABEL_3;
      }
      sub_22DD5071C((uint64_t)v26, &qword_255DB5948);
      v31 = type metadata accessor for BatchInteraction.ContentPreview;
      v32 = (uint64_t)v24;
    }
    sub_22DD5C950(v32, v31);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v55, 1, 1, v9);
  }
  v29 = qword_255DB5958;
  v30 = (uint64_t)v20;
LABEL_3:
  sub_22DD5071C(v30, v29);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v55, 1, 1, v9);
}

uint64_t sub_22DDB5174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void);
  uint64_t v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v75[2];
  char *v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  _OWORD v94[8];
  uint64_t v95;
  _OWORD v96[9];
  char v97;
  __int128 v98;
  _OWORD v99[9];
  __int128 v100;
  _OWORD v101[2];
  __int128 v102;
  __int128 v103;
  uint64_t v104;

  v78 = a1;
  v79 = a2;
  v93 = a4;
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7708);
  MEMORY[0x24BDAC7A8](v90);
  v92 = (uint64_t)v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_22DE1E2E4();
  v82 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v81 = (char *)v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_22DE1E734();
  MEMORY[0x24BDAC7A8](v80);
  v76 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7700);
  MEMORY[0x24BDAC7A8](v83);
  v89 = (uint64_t)v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8258);
  v9 = MEMORY[0x24BDAC7A8](v85);
  v11 = (_OWORD *)((char *)v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v91 = (uint64_t)v75 - v12;
  v77 = a3 & 1;
  sub_22DE1E980();
  v13 = sub_22DE1ED7C();
  v15 = v14;
  v17 = v16 & 1;
  sub_22DE1ED10();
  v18 = sub_22DE1ED64();
  v20 = v19;
  v22 = v21;
  v75[1] = v23;
  swift_release();
  sub_22DD4FC6C(v13, v15, v17);
  v24 = v76;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v98 = sub_22DE1EF5C();
  v25 = sub_22DE1ED4C();
  v86 = v26;
  v87 = v25;
  v28 = v27;
  v88 = v29;
  sub_22DD4FC6C(v18, v20, v22 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  v30 = sub_22DE1E9F8();
  sub_22DDB57FC((uint64_t)v94);
  *(_OWORD *)((char *)&v96[5] + 7) = v94[5];
  *(_OWORD *)((char *)&v96[6] + 7) = v94[6];
  *(_OWORD *)((char *)&v96[7] + 7) = v94[7];
  *(_OWORD *)((char *)&v96[1] + 7) = v94[1];
  *(_OWORD *)((char *)&v96[2] + 7) = v94[2];
  *(_OWORD *)((char *)&v96[3] + 7) = v94[3];
  *(_OWORD *)((char *)&v96[4] + 7) = v94[4];
  v97 = 0;
  *(_QWORD *)((char *)&v96[8] + 7) = v95;
  *(_OWORD *)((char *)v96 + 7) = v94[0];
  LOBYTE(v20) = sub_22DE1EC5C();
  sub_22DE1E4B8();
  *(_OWORD *)((char *)&v99[5] + 1) = v96[5];
  *(_OWORD *)((char *)&v99[6] + 1) = v96[6];
  *(_OWORD *)((char *)&v99[7] + 1) = v96[7];
  v99[8] = *(_OWORD *)((char *)&v96[7] + 15);
  *(_OWORD *)((char *)&v99[1] + 1) = v96[1];
  *(_OWORD *)((char *)&v99[2] + 1) = v96[2];
  *(_OWORD *)((char *)&v99[3] + 1) = v96[3];
  *(_OWORD *)((char *)&v99[4] + 1) = v96[4];
  *(_QWORD *)&v98 = v30;
  *((_QWORD *)&v98 + 1) = 0x4010000000000000;
  LOBYTE(v99[0]) = 0;
  *(_OWORD *)((char *)v99 + 1) = v96[0];
  LOBYTE(v100) = v20;
  *((_QWORD *)&v100 + 1) = v31;
  *(_QWORD *)&v101[0] = v32;
  *((_QWORD *)&v101[0] + 1) = v33;
  *(_QWORD *)&v101[1] = v34;
  BYTE8(v101[1]) = 0;
  v35 = (char *)v24 + *(int *)(v80 + 20);
  v36 = *MEMORY[0x24BDEEB68];
  v37 = sub_22DE1E9C8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v35, v36, v37);
  __asm { FMOV            V0.2D, #8.0 }
  *v24 = _Q0;
  if (qword_255DB53F8 != -1)
    swift_once();
  v43 = v28 & 1;
  v44 = v84;
  v45 = __swift_project_value_buffer(v84, (uint64_t)qword_255DC3E08);
  (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v81, v45, v44);
  v46 = sub_22DE1EF98();
  sub_22DE1E56C();
  v47 = MEMORY[0x24BDED998];
  v48 = v89;
  sub_22DD5C570((uint64_t)v24, v89, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  v49 = *(double *)&v102 * 0.5;
  v50 = v48 + *(int *)(v83 + 68);
  sub_22DD5C570((uint64_t)v24, v50, (uint64_t (*)(_QWORD))v47);
  *(double *)(v50 + *(int *)(sub_22DE1E728() + 20)) = v49;
  v51 = v50 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7710) + 36);
  v52 = v103;
  *(_OWORD *)v51 = v102;
  *(_OWORD *)(v51 + 16) = v52;
  *(_QWORD *)(v51 + 32) = v104;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7718);
  *(_QWORD *)(v50 + *(int *)(v53 + 52)) = v46;
  *(_WORD *)(v50 + *(int *)(v53 + 56)) = 256;
  v54 = sub_22DE1F130();
  v56 = v55;
  v57 = (uint64_t *)(v50 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7720) + 36));
  *v57 = v54;
  v57[1] = v56;
  sub_22DD5C950((uint64_t)v24, (uint64_t (*)(_QWORD))v47);
  v58 = sub_22DE1F130();
  v60 = v59;
  v61 = v92;
  sub_22DD506A0(v48, v92, &qword_255DB7700);
  v62 = (uint64_t *)(v61 + *(int *)(v90 + 36));
  *v62 = v58;
  v62[1] = v60;
  sub_22DD506A0(v61, (uint64_t)v11 + *(int *)(v85 + 36), &qword_255DB7708);
  v63 = v101[0];
  v11[10] = v100;
  v11[11] = v63;
  *(_OWORD *)((char *)v11 + 185) = *(_OWORD *)((char *)v101 + 9);
  v64 = v99[6];
  v11[6] = v99[5];
  v11[7] = v64;
  v65 = v99[8];
  v11[8] = v99[7];
  v11[9] = v65;
  v66 = v99[2];
  v11[2] = v99[1];
  v11[3] = v66;
  v67 = v99[4];
  v11[4] = v99[3];
  v11[5] = v67;
  v68 = v99[0];
  *v11 = v98;
  v11[1] = v68;
  sub_22DDB6044((uint64_t)&v98);
  sub_22DD5071C(v61, &qword_255DB7708);
  sub_22DD5071C(v48, &qword_255DB7700);
  sub_22DDB60E8((uint64_t)v94);
  v69 = v91;
  sub_22DD5003C((uint64_t)v11, v91, &qword_255DB8258);
  sub_22DD506A0(v69, (uint64_t)v11, &qword_255DB8258);
  v70 = v93;
  v72 = v86;
  v71 = v87;
  *v93 = v87;
  v70[1] = v72;
  *((_BYTE *)v70 + 16) = v43;
  v70[3] = v88;
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8260);
  sub_22DD506A0((uint64_t)v11, (uint64_t)v70 + *(int *)(v73 + 48), &qword_255DB8258);
  sub_22DD50088(v71, v72, v43);
  swift_bridgeObjectRetain();
  sub_22DD5071C(v69, &qword_255DB8258);
  sub_22DD5071C((uint64_t)v11, &qword_255DB8258);
  sub_22DD4FC6C(v71, v72, v43);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DDB57FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _BYTE v37[7];
  _BYTE v38[7];
  _BYTE v39[7];
  _BYTE v40[7];
  _QWORD v41[2];
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v2 = sub_22DE1E974();
  MEMORY[0x24BDAC7A8](v2);
  v35 = sub_22DE1E8F0();
  sub_22DDB5C54((uint64_t)v41);
  v29 = v41[0];
  v28 = v41[1];
  v26 = v42;
  v30 = v43;
  v34 = v44;
  v27 = v45;
  v32 = v46;
  v31 = v47;
  v36 = v48;
  v33 = v49;
  sub_22DE1E968();
  sub_22DE1E95C();
  sub_22DE1EFBC();
  sub_22DE1E944();
  swift_release();
  sub_22DE1E95C();
  type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(0);
  sub_22DE1E938();
  sub_22DE1E95C();
  sub_22DE1E98C();
  v3 = sub_22DE1ED7C();
  v5 = v4;
  v7 = v6 & 1;
  sub_22DE1ECB0();
  v8 = sub_22DE1ED64();
  v10 = v9;
  v12 = v11;
  swift_release();
  v13 = v12 & 1;
  sub_22DD4FC6C(v3, v5, v7);
  swift_bridgeObjectRelease();
  v41[0] = sub_22DE1EF5C();
  v14 = sub_22DE1ED4C();
  v16 = v15;
  v18 = v17 & 1;
  sub_22DD4FC6C(v8, v10, v13);
  swift_release();
  swift_bridgeObjectRelease();
  v19 = sub_22DE1ED70();
  v21 = v20;
  v23 = v22;
  LOBYTE(v10) = v24 & 1;
  sub_22DD4FC6C(v14, v16, v18);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 17) = v41[0];
  *(_DWORD *)(a1 + 20) = *(_DWORD *)((char *)v41 + 3);
  *(_DWORD *)(a1 + 41) = *(_DWORD *)v40;
  *(_DWORD *)(a1 + 44) = *(_DWORD *)&v40[3];
  *(_DWORD *)(a1 + 68) = *(_DWORD *)&v39[3];
  *(_DWORD *)(a1 + 65) = *(_DWORD *)v39;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)&v38[3];
  *(_DWORD *)(a1 + 89) = *(_DWORD *)v38;
  *(_DWORD *)(a1 + 124) = *(_DWORD *)&v37[3];
  *(_DWORD *)(a1 + 121) = *(_DWORD *)v37;
  *(_QWORD *)a1 = v35;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = v29;
  *(_QWORD *)(a1 + 32) = v28;
  *(_BYTE *)(a1 + 40) = v26;
  *(_QWORD *)(a1 + 48) = v30;
  *(_QWORD *)(a1 + 56) = v34;
  *(_BYTE *)(a1 + 64) = v27;
  *(_QWORD *)(a1 + 72) = v32;
  *(_QWORD *)(a1 + 80) = v31;
  *(_BYTE *)(a1 + 88) = v36;
  *(_QWORD *)(a1 + 96) = v33;
  *(_QWORD *)(a1 + 104) = v19;
  *(_QWORD *)(a1 + 112) = v21;
  *(_BYTE *)(a1 + 120) = v10;
  *(_QWORD *)(a1 + 128) = v23;
  sub_22DD50088(v29, v28, v26);
  swift_bridgeObjectRetain();
  sub_22DD50088(v32, v31, v36);
  swift_bridgeObjectRetain();
  sub_22DD50088(v19, v21, v10);
  swift_bridgeObjectRetain();
  sub_22DD4FC6C(v19, v21, v10);
  swift_bridgeObjectRelease();
  sub_22DD4FC6C(v29, v28, v26);
  swift_bridgeObjectRelease();
  sub_22DD4FC6C(v32, v31, v36);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DDB5C54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_22DD50840();
  swift_bridgeObjectRetain();
  v2 = sub_22DE1ED94();
  v4 = v3;
  v6 = v5 & 1;
  sub_22DE1ED1C();
  v7 = sub_22DE1ED64();
  v31 = v8;
  v32 = v7;
  v10 = v9;
  v33 = v11;
  swift_release();
  v30 = v10 & 1;
  sub_22DD4FC6C(v2, v4, v6);
  swift_bridgeObjectRelease();
  sub_22DDB7520();
  v12 = sub_22DE1ED94();
  v14 = v13;
  v16 = v15 & 1;
  sub_22DE1EF5C();
  v17 = sub_22DE1ED4C();
  v19 = v18;
  v21 = v20 & 1;
  sub_22DD4FC6C(v12, v14, v16);
  swift_release();
  swift_bridgeObjectRelease();
  sub_22DE1ECB0();
  v22 = sub_22DE1ED64();
  v24 = v23;
  v26 = v25;
  v28 = v27;
  swift_release();
  sub_22DD4FC6C(v17, v19, v21);
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v32;
  *(_QWORD *)(a1 + 8) = v31;
  *(_BYTE *)(a1 + 16) = v30;
  *(_QWORD *)(a1 + 24) = v33;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 48) = v22;
  *(_QWORD *)(a1 + 56) = v24;
  *(_BYTE *)(a1 + 64) = v26 & 1;
  *(_QWORD *)(a1 + 72) = v28;
  sub_22DD50088(v32, v31, v30);
  swift_bridgeObjectRetain();
  sub_22DD50088(v22, v24, v26 & 1);
  swift_bridgeObjectRetain();
  sub_22DD4FC6C(v22, v24, v26 & 1);
  swift_bridgeObjectRelease();
  sub_22DD4FC6C(v32, v31, v30);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DDB5E98(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  char v12;
  uint64_t v13;
  uint64_t v15;

  v4 = sub_22DE1E1F4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for BatchInteraction(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD5C570(a1, (uint64_t)v10, v11);
  if ((a2 & 1) != 0)
  {
    if (qword_255DB5338 != -1)
      swift_once();
    v13 = qword_255DC3D00;
    sub_22DE1E200();
    v12 = sub_22DD62E9C((uint64_t)v7, v13);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v12 = 0;
  }
  sub_22DD5C950((uint64_t)v10, type metadata accessor for BatchInteraction);
  return v12 & 1;
}

uint64_t sub_22DDB5FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_22DDB4C5C(a1, *(_QWORD *)v2, *(unsigned __int8 *)(v2 + 8), a2);
}

uint64_t sub_22DDB5FE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  type metadata accessor for FullScreenPreviewController(0);
  sub_22DD504A8(&qword_255DB5A00, type metadata accessor for FullScreenPreviewController, (uint64_t)&unk_22DE223F0);
  result = sub_22DE1E554();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_22DDB6044(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_BYTE *)(a1 + 112);
  v5 = *(_QWORD *)(a1 + 128);
  v6 = *(_QWORD *)(a1 + 136);
  v7 = *(_BYTE *)(a1 + 144);
  sub_22DD50088(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  swift_bridgeObjectRetain();
  sub_22DD50088(v2, v3, v4);
  swift_bridgeObjectRetain();
  sub_22DD50088(v5, v6, v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22DDB60E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_BYTE *)(a1 + 88);
  v5 = *(_QWORD *)(a1 + 104);
  v6 = *(_QWORD *)(a1 + 112);
  v7 = *(_BYTE *)(a1 + 120);
  sub_22DD4FC6C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_22DD4FC6C(v2, v3, v4);
  swift_bridgeObjectRelease();
  sub_22DD4FC6C(v5, v6, v7);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22DDB618C(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[2];

  v2 = *(_QWORD *)(type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_22DDB750C(v3);
  v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_22DDB620C(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_22DDB620C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  char *v61;
  char *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  uint64_t v85;
  char v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  unint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;

  v133 = type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(0);
  v126 = *(_QWORD *)(v133 - 8);
  v3 = MEMORY[0x24BDAC7A8](v133);
  v123 = (uint64_t)&v119 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v134 = (uint64_t)&v119 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v131 = (uint64_t)&v119 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v130 = (uint64_t)&v119 - v9;
  v10 = a1[1];
  result = sub_22DE1F8BC();
  if (result >= v10)
  {
    if (v10 < 0)
      goto LABEL_139;
    if (v10)
      return sub_22DDB6C08(0, v10, 1, a1);
    return result;
  }
  if (v10 >= 0)
    v12 = v10;
  else
    v12 = v10 + 1;
  if (v10 < -1)
    goto LABEL_147;
  v132 = a1;
  v121 = result;
  v127 = v1;
  if (v10 < 2)
  {
    v16 = (char *)MEMORY[0x24BEE4AF8];
    v125 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80));
    v120 = MEMORY[0x24BEE4AF8];
    if (v10 != 1)
    {
      v18 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_105:
      v111 = v16;
      if (v18 >= 2)
      {
        v112 = *v132;
        do
        {
          v113 = v18 - 2;
          if (v18 < 2)
            goto LABEL_134;
          if (!v112)
            goto LABEL_146;
          v114 = *(_QWORD *)&v111[16 * v113 + 32];
          v115 = *(_QWORD *)&v111[16 * v18 + 24];
          v116 = v127;
          sub_22DDB6E44(v112 + *(_QWORD *)(v126 + 72) * v114, v112 + *(_QWORD *)(v126 + 72) * *(_QWORD *)&v111[16 * v18 + 16], v112 + *(_QWORD *)(v126 + 72) * v115, v125);
          v127 = v116;
          if (v116)
            break;
          if (v115 < v114)
            goto LABEL_135;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v111 = sub_22DDB74F8((uint64_t)v111);
          if (v113 >= *((_QWORD *)v111 + 2))
            goto LABEL_136;
          v117 = &v111[16 * v113 + 32];
          *(_QWORD *)v117 = v114;
          *((_QWORD *)v117 + 1) = v115;
          v118 = *((_QWORD *)v111 + 2);
          if (v18 > v118)
            goto LABEL_137;
          memmove(&v111[16 * v18 + 16], &v111[16 * v18 + 32], 16 * (v118 - v18));
          *((_QWORD *)v111 + 2) = v118 - 1;
          v18 = v118 - 1;
        }
        while (v118 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v120 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v13 = v12 >> 1;
    v14 = sub_22DE1F400();
    *(_QWORD *)(v14 + 16) = v13;
    v15 = *(unsigned __int8 *)(v126 + 80);
    v120 = v14;
    v125 = v14 + ((v15 + 32) & ~v15);
  }
  v17 = 0;
  v16 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v19 = v17;
    v20 = v17 + 1;
    if (v17 + 1 >= v10)
    {
      ++v17;
      goto LABEL_24;
    }
    v21 = *v132;
    v22 = *(_QWORD *)(v126 + 72);
    v23 = v130;
    sub_22DD5C570(*v132 + v22 * v20, v130, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
    v24 = v21 + v22 * v17;
    v25 = v131;
    sub_22DD5C570(v24, v131, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
    LODWORD(v129) = sub_22DE1DFFC();
    sub_22DD5C950(v25, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
    sub_22DD5C950(v23, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
    v17 = v19 + 2;
    v128 = v21;
    v135 = v22;
    if (v19 + 2 >= v10)
      goto LABEL_21;
    v124 = v19;
    v26 = v16;
    v27 = v22 * v20;
    v28 = v21;
    v29 = v19 + 2;
    v30 = v22 * v29;
    do
    {
      v31 = v10;
      v32 = v130;
      sub_22DD5C570(v28 + v30, v130, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
      v33 = v131;
      sub_22DD5C570(v28 + v27, v131, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
      v34 = sub_22DE1DFFC();
      sub_22DD5C950(v33, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
      sub_22DD5C950(v32, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
      if (((v129 ^ v34) & 1) != 0)
      {
        v16 = v26;
        v17 = v29;
        v19 = v124;
        v10 = v31;
        if ((v129 & 1) != 0)
          goto LABEL_42;
        goto LABEL_24;
      }
      v28 += v135;
      ++v29;
      v10 = v31;
    }
    while (v31 != v29);
    v16 = v26;
    v17 = v31;
    v19 = v124;
LABEL_21:
    if ((v129 & 1) == 0)
      goto LABEL_24;
LABEL_42:
    v50 = v135;
    if (v17 < v19)
      goto LABEL_140;
    if (v19 < v17)
      break;
LABEL_24:
    v35 = v132;
    if (v17 < v10)
      goto LABEL_25;
LABEL_57:
    if (v17 < v19)
      goto LABEL_133;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_22DDB72F4(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
    v60 = *((_QWORD *)v16 + 2);
    v59 = *((_QWORD *)v16 + 3);
    v18 = v60 + 1;
    if (v60 >= v59 >> 1)
      v16 = sub_22DDB72F4((char *)(v59 > 1), v60 + 1, 1, v16);
    *((_QWORD *)v16 + 2) = v18;
    v61 = v16 + 32;
    v62 = &v16[16 * v60 + 32];
    *(_QWORD *)v62 = v19;
    *((_QWORD *)v62 + 1) = v17;
    if (v60)
    {
      while (1)
      {
        v63 = v18 - 1;
        if (v18 >= 4)
        {
          v68 = &v61[16 * v18];
          v69 = *((_QWORD *)v68 - 8);
          v70 = *((_QWORD *)v68 - 7);
          v74 = __OFSUB__(v70, v69);
          v71 = v70 - v69;
          if (v74)
            goto LABEL_122;
          v73 = *((_QWORD *)v68 - 6);
          v72 = *((_QWORD *)v68 - 5);
          v74 = __OFSUB__(v72, v73);
          v66 = v72 - v73;
          v67 = v74;
          if (v74)
            goto LABEL_123;
          v75 = v18 - 2;
          v76 = &v61[16 * v18 - 32];
          v78 = *(_QWORD *)v76;
          v77 = *((_QWORD *)v76 + 1);
          v74 = __OFSUB__(v77, v78);
          v79 = v77 - v78;
          if (v74)
            goto LABEL_125;
          v74 = __OFADD__(v66, v79);
          v80 = v66 + v79;
          if (v74)
            goto LABEL_128;
          if (v80 >= v71)
          {
            v98 = &v61[16 * v63];
            v100 = *(_QWORD *)v98;
            v99 = *((_QWORD *)v98 + 1);
            v74 = __OFSUB__(v99, v100);
            v101 = v99 - v100;
            if (v74)
              goto LABEL_132;
            v91 = v66 < v101;
            goto LABEL_94;
          }
        }
        else
        {
          if (v18 != 3)
          {
            v92 = *((_QWORD *)v16 + 4);
            v93 = *((_QWORD *)v16 + 5);
            v74 = __OFSUB__(v93, v92);
            v85 = v93 - v92;
            v86 = v74;
            goto LABEL_88;
          }
          v65 = *((_QWORD *)v16 + 4);
          v64 = *((_QWORD *)v16 + 5);
          v74 = __OFSUB__(v64, v65);
          v66 = v64 - v65;
          v67 = v74;
        }
        if ((v67 & 1) != 0)
          goto LABEL_124;
        v75 = v18 - 2;
        v81 = &v61[16 * v18 - 32];
        v83 = *(_QWORD *)v81;
        v82 = *((_QWORD *)v81 + 1);
        v84 = __OFSUB__(v82, v83);
        v85 = v82 - v83;
        v86 = v84;
        if (v84)
          goto LABEL_127;
        v87 = &v61[16 * v63];
        v89 = *(_QWORD *)v87;
        v88 = *((_QWORD *)v87 + 1);
        v74 = __OFSUB__(v88, v89);
        v90 = v88 - v89;
        if (v74)
          goto LABEL_130;
        if (__OFADD__(v85, v90))
          goto LABEL_131;
        if (v85 + v90 >= v66)
        {
          v91 = v66 < v90;
LABEL_94:
          if (v91)
            v63 = v75;
          goto LABEL_96;
        }
LABEL_88:
        if ((v86 & 1) != 0)
          goto LABEL_126;
        v94 = &v61[16 * v63];
        v96 = *(_QWORD *)v94;
        v95 = *((_QWORD *)v94 + 1);
        v74 = __OFSUB__(v95, v96);
        v97 = v95 - v96;
        if (v74)
          goto LABEL_129;
        if (v97 < v85)
          goto LABEL_14;
LABEL_96:
        v102 = v17;
        v103 = v63 - 1;
        if (v63 - 1 >= v18)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!*v132)
          goto LABEL_144;
        v104 = v16;
        v105 = &v61[16 * v103];
        v106 = *(_QWORD *)v105;
        v107 = &v61[16 * v63];
        v108 = *((_QWORD *)v107 + 1);
        v109 = v127;
        sub_22DDB6E44(*v132 + *(_QWORD *)(v126 + 72) * *(_QWORD *)v105, *v132 + *(_QWORD *)(v126 + 72) * *(_QWORD *)v107, *v132 + *(_QWORD *)(v126 + 72) * v108, v125);
        v127 = v109;
        if (v109)
          goto LABEL_116;
        if (v108 < v106)
          goto LABEL_119;
        if (v63 > *((_QWORD *)v104 + 2))
          goto LABEL_120;
        *(_QWORD *)v105 = v106;
        *(_QWORD *)&v61[16 * v103 + 8] = v108;
        v110 = *((_QWORD *)v104 + 2);
        if (v63 >= v110)
          goto LABEL_121;
        v16 = v104;
        v18 = v110 - 1;
        memmove(&v61[16 * v63], v107 + 16, 16 * (v110 - 1 - v63));
        *((_QWORD *)v104 + 2) = v110 - 1;
        v91 = v110 > 2;
        v17 = v102;
        if (!v91)
          goto LABEL_14;
      }
    }
    v18 = 1;
LABEL_14:
    v10 = v132[1];
    if (v17 >= v10)
      goto LABEL_105;
  }
  v129 = v10;
  v119 = v16;
  v51 = 0;
  v52 = v135 * (v17 - 1);
  v53 = v17 * v135;
  v54 = v19;
  v55 = v19 * v135;
  v35 = v132;
  v124 = v19;
  do
  {
    if (v54 != v17 + v51 - 1)
    {
      v56 = v128;
      if (!v128)
        goto LABEL_145;
      v57 = v128 + v55;
      v58 = v128 + v52;
      sub_22DD647B0(v128 + v55, v123, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
      if (v55 < v52 || v57 >= v56 + v53)
      {
        swift_arrayInitWithTakeFrontToBack();
        v50 = v135;
      }
      else
      {
        v50 = v135;
        if (v55 != v52)
          swift_arrayInitWithTakeBackToFront();
      }
      sub_22DD647B0(v123, v58, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
      v35 = v132;
      v19 = v124;
    }
    ++v54;
    --v51;
    v52 -= v50;
    v53 -= v50;
    v55 += v50;
  }
  while (v54 < v17 + v51);
  v16 = v119;
  v10 = v129;
  if (v17 >= v129)
    goto LABEL_57;
LABEL_25:
  if (__OFSUB__(v17, v19))
    goto LABEL_138;
  if (v17 - v19 >= v121)
    goto LABEL_57;
  if (__OFADD__(v19, v121))
    goto LABEL_141;
  if (v19 + v121 >= v10)
    v36 = v10;
  else
    v36 = v19 + v121;
  if (v36 >= v19)
  {
    if (v17 != v36)
    {
      v119 = v16;
      v37 = *(_QWORD *)(v126 + 72);
      v135 = v37 * (v17 - 1);
      v128 = v37;
      v38 = v17 * v37;
      v124 = v19;
      v122 = v36;
      do
      {
        v40 = 0;
        v41 = v19;
        v129 = v17;
        while (1)
        {
          v42 = *v35;
          v43 = v38;
          v44 = v38 + v40 + *v35;
          v45 = v130;
          v46 = v35;
          sub_22DD5C570(v44, v130, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
          v47 = v131;
          sub_22DD5C570(v135 + v40 + v42, v131, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
          LOBYTE(v42) = sub_22DE1DFFC();
          sub_22DD5C950(v47, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
          sub_22DD5C950(v45, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
          if ((v42 & 1) == 0)
            break;
          v48 = *v46;
          if (!*v46)
            goto LABEL_143;
          v38 = v43;
          v49 = v48 + v135 + v40;
          sub_22DD647B0(v48 + v43 + v40, v134, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
          swift_arrayInitWithTakeFrontToBack();
          sub_22DD647B0(v134, v49, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
          v39 = v129;
          v40 -= v128;
          ++v41;
          v35 = v132;
          if (v129 == v41)
            goto LABEL_35;
        }
        v39 = v129;
        v38 = v43;
        v35 = v46;
LABEL_35:
        v17 = v39 + 1;
        v135 += v128;
        v38 += v128;
        v19 = v124;
      }
      while (v17 != v122);
      v17 = v122;
      v16 = v119;
    }
    goto LABEL_57;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  result = sub_22DE1F7C0();
  __break(1u);
  return result;
}

uint64_t sub_22DDB6C08(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v25 = a1;
  v29 = type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(0);
  v7 = MEMORY[0x24BDAC7A8](v29);
  v30 = (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v26 = (uint64_t)&v23 - v10;
  result = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v23 - v13;
  v28 = a3;
  v24 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v32 = v15 * (v28 - 1);
    v27 = v15;
    v31 = v15 * v28;
LABEL_5:
    v16 = 0;
    v17 = v25;
    while (1)
    {
      v18 = *a4;
      sub_22DD5C570(v31 + v16 + *a4, (uint64_t)v14, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
      v19 = v26;
      sub_22DD5C570(v32 + v16 + v18, v26, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
      LOBYTE(v18) = sub_22DE1DFFC();
      sub_22DD5C950(v19, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
      result = sub_22DD5C950((uint64_t)v14, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
      if ((v18 & 1) == 0)
      {
LABEL_4:
        v32 += v27;
        v31 += v27;
        if (++v28 == v24)
          return result;
        goto LABEL_5;
      }
      v20 = *a4;
      if (!*a4)
        break;
      v21 = a4;
      v22 = v20 + v32 + v16;
      sub_22DD647B0(v20 + v31 + v16, v30, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_22DD647B0(v30, v22, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
      v16 -= v27;
      ++v17;
      a4 = v21;
      if (v28 == v17)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_22DDB6E44(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  BOOL v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t result;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;

  v44 = type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(0);
  v8 = MEMORY[0x24BDAC7A8](v44);
  v43 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v40 - v10;
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_62;
  v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_63;
  v15 = (uint64_t)(a2 - a1) / v13;
  v47 = a1;
  v46 = a4;
  v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v25 = a4 + v18;
      v45 = a4 + v18;
      v47 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        v27 = -v13;
        v41 = a4;
        v42 = a1;
        do
        {
          v28 = a3 + v27;
          sub_22DD5C570(v25 + v27, (uint64_t)v11, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
          v29 = a2 + v27;
          v30 = a3;
          v31 = (uint64_t)v11;
          v32 = v43;
          sub_22DD5C570(a2 + v27, v43, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
          v33 = sub_22DE1DFFC();
          v34 = v32;
          v11 = (char *)v31;
          sub_22DD5C950(v34, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
          sub_22DD5C950(v31, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
          if ((v33 & 1) != 0)
          {
            if (v30 < a2 || v28 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v37 = v41;
              v36 = v42;
            }
            else
            {
              v35 = v30 == a2;
              v37 = v41;
              v36 = v42;
              if (!v35)
                swift_arrayInitWithTakeBackToFront();
            }
            v47 += v27;
          }
          else
          {
            v38 = v45;
            v45 += v27;
            if (v30 < v38 || v28 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack();
              v29 = a2;
              v37 = v41;
              v36 = v42;
            }
            else
            {
              v35 = v30 == v38;
              v37 = v41;
              v36 = v42;
              if (!v35)
                swift_arrayInitWithTakeBackToFront();
              v29 = a2;
            }
          }
          v25 = v45;
          if (v45 <= v37)
            break;
          a2 = v29;
          a3 = v28;
        }
        while (v29 > v36);
      }
      goto LABEL_60;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v42 = a4 + v17;
    v45 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      v20 = v43;
      do
      {
        sub_22DD5C570(a2, (uint64_t)v11, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
        sub_22DD5C570(a4, v20, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
        v21 = sub_22DE1DFFC();
        sub_22DD5C950(v20, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
        sub_22DD5C950((uint64_t)v11, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
        v22 = v47;
        if ((v21 & 1) != 0)
        {
          v23 = a2 + v13;
          if (v47 < a2 || v47 >= v23)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 == a2)
          {
            v22 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v24 = v46 + v13;
          if (v47 < v46 || v47 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 != v46)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v46 = v24;
          v23 = a2;
        }
        v47 = v22 + v13;
        a4 = v46;
        if (v46 >= v42)
          break;
        a2 = v23;
      }
      while (v23 < a3);
    }
LABEL_60:
    sub_22DDB73EC(&v47, &v46, (uint64_t *)&v45);
    return 1;
  }
LABEL_64:
  result = sub_22DE1F808();
  __break(1u);
  return result;
}

char *sub_22DDB72F4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8448);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_22DDB73EC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(0);
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_22DE1F808();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_22DDB74F8(uint64_t a1)
{
  return sub_22DDB72F4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_22DDB750C(_QWORD *a1)
{
  return sub_22DE0F5F8(0, a1[2], 0, a1);
}

uint64_t sub_22DDB7520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  double v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;

  v0 = sub_22DE1E020();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DE1E014();
  type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(0);
  sub_22DE1DFE4();
  if (v4 >= 86400.0)
  {
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD17A0]), sel_init);
    objc_msgSend(v5, sel_setUnitsStyle_, 2);
    objc_msgSend(v5, sel_setDateTimeStyle_, 1);
    v8 = (void *)sub_22DE1DFF0();
    v6 = (void *)sub_22DE1DFF0();
    v7 = objc_msgSend(v5, sel_localizedStringForDate_relativeToDate_, v8, v6);

  }
  else
  {
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
    objc_msgSend(v5, sel_setDateStyle_, 0);
    objc_msgSend(v5, sel_setTimeStyle_, 1);
    v6 = (void *)sub_22DE1DFF0();
    v7 = objc_msgSend(v5, sel_stringFromDate_, v6);
  }

  v9 = sub_22DE1F2B0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v9;
}

uint64_t sub_22DDB76EC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DDB7718()
{
  uint64_t v0;

  return sub_22DDB3F30(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_22DDB7724@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DDB3CF0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t type metadata accessor for CUMessagePreviewer(uint64_t a1)
{
  return sub_22DD6481C(a1, qword_255DB8350);
}

_QWORD *sub_22DDB7744(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v4 = type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(v4 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_22DE1E020();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = v6[7];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_22DE1DEB8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
    v18 = v6[9];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_22DE1E050();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return a1;
}

uint64_t sub_22DDB7874(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = (int *)type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(0);
  v3 = a1 + v2[6];
  v4 = sub_22DE1E020();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = a1 + v2[7];
  v6 = sub_22DE1DEB8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + v2[9];
  v8 = sub_22DE1E050();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

_QWORD *sub_22DDB791C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = (int *)type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_22DE1E020();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = v6[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_22DE1DEB8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
  v16 = v6[9];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_22DE1E050();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

_QWORD *sub_22DDB7A20(_QWORD *a1, _QWORD *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(0);
  v5 = v4[6];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_22DE1E020();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  v9 = v4[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_22DE1DEB8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  *((_BYTE *)a1 + v4[8]) = *((_BYTE *)a2 + v4[8]);
  v13 = v4[9];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_22DE1E050();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

_OWORD *sub_22DDB7B30(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (int *)type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(0);
  v6 = v5[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22DE1E020();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = v5[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_22DE1DEB8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *((_BYTE *)a1 + v5[8]) = *((_BYTE *)a2 + v5[8]);
  v14 = v5[9];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_22DE1E050();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

_QWORD *sub_22DDB7C08(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_22DE1E020();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = v6[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_22DE1DEB8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
  v15 = v6[9];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_22DE1E050();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t sub_22DDB7CF8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DDB7D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_22DDB7D40()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DDB7D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_22DDB7D8C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22DDB7DF4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v7 = *v8;
    if (EnumCaseMultiPayload == 1)
    {
      v7[1] = v8[1];
      swift_retain();
      swift_retain();
      v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010) + 32);
      v11 = (char *)v7 + v10;
      v12 = (char *)v8 + v10;
      v13 = sub_22DE1E71C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22DDB7F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
  LODWORD(a1) = swift_getEnumCaseMultiPayload();
  result = swift_release();
  if ((_DWORD)a1 == 1)
  {
    swift_release();
    v6 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010) + 32);
    v7 = sub_22DE1E71C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  return result;
}

_QWORD *sub_22DDB7F9C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *v5 = *v6;
  if (EnumCaseMultiPayload == 1)
  {
    v5[1] = v6[1];
    swift_retain();
    swift_retain();
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010) + 32);
    v9 = (char *)v5 + v8;
    v10 = (char *)v6 + v8;
    v11 = sub_22DE1E71C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_22DDB807C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_22DD5071C((uint64_t)a1 + v6, &qword_255DB6010);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v7 = *v8;
    if (EnumCaseMultiPayload == 1)
    {
      v7[1] = v8[1];
      swift_retain();
      swift_retain();
      v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010) + 32);
      v11 = (char *)v7 + v10;
      v12 = (char *)v8 + v10;
      v13 = sub_22DE1E71C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_22DDB8188(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = v6[1];
    *v5 = *v6;
    v5[1] = v8;
    v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010) + 32);
    v10 = (char *)v5 + v9;
    v11 = (char *)v6 + v9;
    v12 = sub_22DE1E71C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_22DDB8258(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_22DD5071C((uint64_t)a1 + v6, &qword_255DB6010);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = v8[1];
      *v7 = *v8;
      v7[1] = v10;
      v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010) + 32);
      v12 = (char *)v7 + v11;
      v13 = (char *)v8 + v11;
      v14 = sub_22DE1E71C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22DDB8350()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DDB835C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB7808);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_22DDB83DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_22DDB83E8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB7808);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CUMessageOriginalContentFullScreenPreviewController(uint64_t a1)
{
  return sub_22DD6481C(a1, qword_255DB83E0);
}

void sub_22DDB8474()
{
  unint64_t v0;

  sub_22DD942DC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_22DDB84F0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255DB8418;
  if (!qword_255DB8418)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB8420);
    v2 = sub_22DD508B0(&qword_255DB8428, &qword_255DB8230, MEMORY[0x24BDF4498]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255DB8418);
  }
  return result;
}

uint64_t sub_22DDB856C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB8268);
  sub_22DD508B0(&qword_255DB8278, &qword_255DB8268, MEMORY[0x24BDF4700]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DDB85D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DDB85E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DDB85F0(uint64_t a1)
{
  sub_22DD50088(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_22DDB864C(uint64_t a1)
{
  sub_22DD4FC6C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22DDB86A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for CUMessageOriginalContentFullScreenPreviewController(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_bridgeObjectRelease();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    v5 = v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010) + 32);
    v6 = sub_22DE1E71C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  return swift_deallocObject();
}

uint64_t sub_22DDB8774@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CUMessageOriginalContentFullScreenPreviewController(0)
                                      - 8)
                          + 80);
  return sub_22DDB4A74((_QWORD **)(v1 + ((v3 + 16) & ~v3)), a1);
}

unint64_t sub_22DDB87B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB8450;
  if (!qword_255DB8450)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB8430);
    v2[0] = sub_22DDB883C();
    v2[1] = sub_22DD508B0(qword_255DB74F0, &qword_255DB7468, MEMORY[0x24BDEB950]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB8450);
  }
  return result;
}

unint64_t sub_22DDB883C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB8458;
  if (!qword_255DB8458)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB8460);
    v2[0] = sub_22DDB88C0();
    v2[1] = sub_22DD508B0((unint64_t *)&qword_255DB6C50, &qword_255DB6C58, MEMORY[0x24BDF0710]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB8458);
  }
  return result;
}

unint64_t sub_22DDB88C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB8468;
  if (!qword_255DB8468)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB8470);
    v2[0] = sub_22DD508B0(&qword_255DB8478, &qword_255DB8480, MEMORY[0x24BDF4498]);
    v2[1] = sub_22DD508B0(&qword_255DB74D0, &qword_255DB74D8, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB8468);
  }
  return result;
}

uint64_t sub_22DDB895C()
{
  return sub_22DD508B0(&qword_255DB8488, &qword_255DB8438, (uint64_t)&unk_22DE25F78);
}

uint64_t sub_22DDB898C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_22DE1E410();
  __swift_allocate_value_buffer(v0, qword_255DC3CD0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_255DC3CD0);
  if (qword_255DB53B8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_255DC3D78);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_22DDB8A1C(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_255DB5308 != -1)
    swift_once();
  v6 = sub_22DE1E410();
  __swift_project_value_buffer(v6, (uint64_t)qword_255DC3CD0);
  swift_bridgeObjectRetain_n();
  v7 = sub_22DE1E3F8();
  v8 = sub_22DE1F4FC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v11 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_bridgeObjectRetain();
    sub_22DDA2E30(a1, a2, &v11);
    sub_22DE1F628();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_22DD4B000, v7, v8, "Unexpected Error: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v10, -1, -1);
    MEMORY[0x22E320870](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *a3 = 0;
}

Feedback::FBKEvaluationError_optional __swiftcall FBKEvaluationError.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  Feedback::FBKEvaluationError_optional result;
  char v5;

  v2 = v1;
  v3 = sub_22DE1F820();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FBKEvaluationError.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_22DDB8C54 + 4 * byte_22DE24DB0[*v0]))(0xD000000000000010, 0x800000022DE288A0);
}

uint64_t sub_22DDB8C54(uint64_t a1)
{
  return a1 + 9;
}

void sub_22DDB8CD8(char *a1)
{
  sub_22DDDDA2C(*a1);
}

unint64_t sub_22DDB8CE8()
{
  unint64_t result;

  result = qword_255DB8490;
  if (!qword_255DB8490)
  {
    result = MEMORY[0x22E3207B0](&protocol conformance descriptor for FBKEvaluationError, &type metadata for FBKEvaluationError);
    atomic_store(result, (unint64_t *)&qword_255DB8490);
  }
  return result;
}

void sub_22DDB8D2C()
{
  char *v0;

  sub_22DDDDE7C(0, *v0);
}

void sub_22DDB8D38(uint64_t a1)
{
  char *v1;

  sub_22DDDDDA0(a1, *v1);
}

void sub_22DDB8D40(uint64_t a1)
{
  char *v1;

  sub_22DDDDE7C(a1, *v1);
}

Feedback::FBKEvaluationError_optional sub_22DDB8D48(Swift::String *a1)
{
  return FBKEvaluationError.init(rawValue:)(*a1);
}

uint64_t sub_22DDB8D54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FBKEvaluationError.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for FBKEvaluationError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FBKEvaluationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_22DDB8E54 + 4 * byte_22DE24DBD[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_22DDB8E88 + 4 * byte_22DE24DB8[v4]))();
}

uint64_t sub_22DDB8E88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DDB8E90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DDB8E98);
  return result;
}

uint64_t sub_22DDB8EA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DDB8EACLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_22DDB8EB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DDB8EB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FBKEvaluationError()
{
  return &type metadata for FBKEvaluationError;
}

ValueMetadata *type metadata accessor for DebugWindow()
{
  return &type metadata for DebugWindow;
}

uint64_t sub_22DDB8EE4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DDB8EF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v3 = *(uint64_t **)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = **(_QWORD **)a1;
  v36 = v3[1];
  v37 = *((_BYTE *)v3 + 16);
  v39 = *(_QWORD *)v4;
  v27 = v3[3];
  v28 = *(_QWORD *)(v4 + 8);
  v40 = *(_BYTE *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v30 = *(_QWORD *)v7;
  v9 = *(_QWORD *)v7;
  v31 = *(_QWORD *)(v7 + 8);
  v34 = *(_BYTE *)(v7 + 16);
  v10 = *(_QWORD *)(v7 + 24);
  v60 = *(_QWORD *)v8;
  v61 = *(_QWORD *)(v8 + 8);
  v38 = *(_BYTE *)(v8 + 16);
  v62 = *(_QWORD *)(v8 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)v11;
  v14 = *(_QWORD *)(v11 + 8);
  v32 = *(_BYTE *)(v11 + 16);
  v41 = *(_QWORD *)(v11 + 24);
  v42 = *(_QWORD *)v12;
  v58 = *(_QWORD *)(v12 + 8);
  v35 = *(_BYTE *)(v12 + 16);
  v59 = *(_QWORD *)(v12 + 24);
  v15 = *(_QWORD *)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 56);
  v43 = *(_QWORD *)v15;
  v17 = *(_QWORD *)v15;
  v44 = *(_QWORD *)(v15 + 8);
  v29 = *(_BYTE *)(v15 + 16);
  v18 = *(_QWORD *)(v15 + 24);
  v45 = *(_QWORD *)v16;
  v33 = *(_BYTE *)(v16 + 16);
  v46 = *(_QWORD *)(v16 + 8);
  v47 = *(_QWORD *)(v16 + 24);
  v19 = *(_QWORD *)(a1 + 64);
  v20 = *(_QWORD *)(a1 + 72);
  v48 = *(_QWORD *)v19;
  v21 = *(_QWORD *)v19;
  v49 = *(_QWORD *)(v19 + 8);
  v55 = *(_BYTE *)(v19 + 16);
  v22 = *(_QWORD *)(v19 + 24);
  v50 = *(_QWORD *)v20;
  v51 = *(_QWORD *)(v20 + 8);
  v56 = *(_BYTE *)(v20 + 16);
  v23 = *(_QWORD *)(a1 + 80);
  v54 = *(_QWORD *)v23;
  v24 = *(_QWORD *)v23;
  v52 = *(_QWORD *)(v20 + 24);
  v53 = *(_QWORD *)(v23 + 8);
  v57 = *(_BYTE *)(v23 + 16);
  v25 = *(_QWORD *)(v23 + 24);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v36;
  *(_BYTE *)(a2 + 16) = v37;
  *(_QWORD *)(a2 + 24) = v27;
  *(_QWORD *)(a2 + 32) = v39;
  *(_QWORD *)(a2 + 40) = v28;
  *(_BYTE *)(a2 + 48) = v40;
  *(_QWORD *)(a2 + 56) = v6;
  *(_QWORD *)(a2 + 64) = v9;
  *(_QWORD *)(a2 + 72) = v31;
  *(_BYTE *)(a2 + 80) = v34;
  *(_QWORD *)(a2 + 88) = v10;
  *(_QWORD *)(a2 + 96) = v60;
  *(_QWORD *)(a2 + 104) = v61;
  *(_BYTE *)(a2 + 112) = v38;
  *(_QWORD *)(a2 + 120) = v62;
  *(_QWORD *)(a2 + 128) = v13;
  *(_QWORD *)(a2 + 136) = v14;
  *(_BYTE *)(a2 + 144) = v32;
  *(_QWORD *)(a2 + 152) = v41;
  *(_QWORD *)(a2 + 160) = v42;
  *(_QWORD *)(a2 + 168) = v58;
  *(_BYTE *)(a2 + 176) = v35;
  *(_QWORD *)(a2 + 184) = v59;
  *(_QWORD *)(a2 + 192) = v17;
  *(_QWORD *)(a2 + 200) = v44;
  *(_BYTE *)(a2 + 208) = v29;
  *(_QWORD *)(a2 + 216) = v18;
  *(_QWORD *)(a2 + 224) = v45;
  *(_QWORD *)(a2 + 232) = v46;
  *(_BYTE *)(a2 + 240) = v33;
  *(_QWORD *)(a2 + 248) = v47;
  *(_QWORD *)(a2 + 256) = v21;
  *(_QWORD *)(a2 + 264) = v49;
  *(_BYTE *)(a2 + 272) = v55;
  *(_QWORD *)(a2 + 280) = v22;
  *(_QWORD *)(a2 + 288) = v50;
  *(_QWORD *)(a2 + 296) = v51;
  *(_BYTE *)(a2 + 304) = v56;
  *(_QWORD *)(a2 + 312) = v52;
  *(_QWORD *)(a2 + 320) = v24;
  *(_QWORD *)(a2 + 328) = v53;
  *(_BYTE *)(a2 + 336) = v57;
  *(_QWORD *)(a2 + 344) = v25;
  sub_22DD50088(v5, v36, v37);
  swift_bridgeObjectRetain();
  sub_22DD50088(v39, v28, v40);
  swift_bridgeObjectRetain();
  sub_22DD50088(v30, v31, v34);
  swift_bridgeObjectRetain();
  sub_22DD50088(v60, v61, v38);
  swift_bridgeObjectRetain();
  sub_22DD50088(v13, v14, v32);
  swift_bridgeObjectRetain();
  sub_22DD50088(v42, v58, v35);
  swift_bridgeObjectRetain();
  sub_22DD50088(v43, v44, v29);
  swift_bridgeObjectRetain();
  sub_22DD50088(v45, v46, v33);
  swift_bridgeObjectRetain();
  sub_22DD50088(v48, v49, v55);
  swift_bridgeObjectRetain();
  sub_22DD50088(v50, v51, v56);
  swift_bridgeObjectRetain();
  sub_22DD50088(v54, v53, v57);
  return swift_bridgeObjectRetain();
}

double sub_22DDB9240@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  double result;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
  sub_22DE1E068();
  swift_release();
  result = *(double *)(v3 + 24);
  *a2 = result;
  return result;
}

uint64_t sub_22DDB92CC()
{
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
  sub_22DE1E05C();
  return swift_release();
}

uint64_t sub_22DDB937C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (_QWORD *)*a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6248, (uint64_t (*)(uint64_t))type metadata accessor for StateController, (uint64_t)&unk_22DE247FC);
  sub_22DE1E068();
  swift_release();
  v4 = v3[2];
  v5 = v3[3];
  v6 = v3[4];
  v7 = v3[5];
  v8 = v3[6];
  v9 = v3[7];
  v10 = v3[8];
  v11 = v3[9];
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  a2[4] = v8;
  a2[5] = v9;
  a2[6] = v10;
  a2[7] = v11;
  return sub_22DD77554(v4, v5);
}

uint64_t sub_22DDB9424(__int128 *a1)
{
  _OWORD v2[4];

  sub_22DDABE70(a1, v2);
  swift_getKeyPath();
  sub_22DDABF20(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DD77554);
  sub_22DD504A8((unint64_t *)&qword_255DB6248, (uint64_t (*)(uint64_t))type metadata accessor for StateController, (uint64_t)&unk_22DE247FC);
  sub_22DE1E05C();
  sub_22DDABF20(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DD775A8);
  return swift_release();
}

uint64_t sub_22DDB94F4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6248, (uint64_t (*)(uint64_t))type metadata accessor for StateController, (uint64_t)&unk_22DE247FC);
  sub_22DE1E068();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 80);
  return result;
}

uint64_t sub_22DDB9580()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6248, (uint64_t (*)(uint64_t))type metadata accessor for StateController, (uint64_t)&unk_22DE247FC);
  sub_22DE1E05C();
  return swift_release();
}

double sub_22DDB9628@<D0>(char a1@<W1>, uint64_t a2@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  double v30;
  double result;
  _DWORD *v32;
  _DWORD *v33;
  uint64_t KeyPath;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  int v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[352];
  _BYTE v54[368];
  unsigned __int8 v55;
  _BYTE v56[7];
  _BYTE v57[359];
  _BYTE v58[7];
  _DWORD v59[2];
  _BYTE v60[359];
  _BYTE v61[11];
  __int16 v62;
  int v63;
  __int16 v64;
  _DWORD v65[2];
  _DWORD v66[2];
  _DWORD v67[2];
  _BYTE v68[359];

  v3 = a1 & 1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB55D8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22DE1E2E4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_22DE1E9F8();
  v43 = v3;
  sub_22DDB9B78(v3, (uint64_t)v53);
  v54[360] = 1;
  memcpy(&v54[7], v53, 0x160uLL);
  v45 = 1;
  memcpy(v57, v54, sizeof(v57));
  v44 = sub_22DE1EC5C();
  v55 = 1;
  if (qword_255DB53D0 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v7, (uint64_t)qword_255DC3D90);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v12(v10, v11, v7);
  v42 = sub_22DE1EF98();
  v41 = sub_22DE1EC5C();
  memcpy(v60, v57, sizeof(v60));
  v59[0] = *(_DWORD *)v56;
  *(_DWORD *)((char *)v59 + 3) = *(_DWORD *)&v56[3];
  v40 = v55;
  if (qword_255DB53D8 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v7, (uint64_t)qword_255DC3DA8);
  v12(v10, v13, v7);
  v39 = sub_22DE1EF98();
  memcpy(v68, v60, sizeof(v68));
  v67[0] = v59[0];
  *(_DWORD *)((char *)v67 + 3) = *(_DWORD *)((char *)v59 + 3);
  v66[0] = *(_DWORD *)v58;
  *(_DWORD *)((char *)v66 + 3) = *(_DWORD *)&v58[3];
  v38 = sub_22DE1EF44();
  sub_22DE1E56C();
  v14 = v48;
  v15 = v50;
  v35 = v51;
  v16 = v52;
  v17 = sub_22DE1F130();
  v36 = v18;
  v37 = v17;
  v65[0] = *(_DWORD *)v61;
  *(_DWORD *)((char *)v65 + 3) = *(_DWORD *)&v61[3];
  KeyPath = swift_getKeyPath();
  v63 = *(_DWORD *)&v61[7];
  v64 = v62;
  v19 = *MEMORY[0x24BDF1650];
  v20 = sub_22DE1ECD4();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 104);
  v32 = (_DWORD *)(a2 + 417);
  v33 = (_DWORD *)(a2 + 433);
  v23 = v49;
  v22(v6, v19, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v6, 0, 1, v20);
  v24 = sub_22DE1ECF8();
  sub_22DD569B8((uint64_t)v6);
  v25 = swift_getKeyPath();
  v26 = swift_retain();
  v27 = sub_22DD83CC8(v26, v43);
  swift_release();
  swift_getKeyPath();
  v47 = v27;
  sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  v28 = *(_QWORD *)(v27 + 56);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  v47 = v28;
  sub_22DD504A8((unint64_t *)&qword_255DB6670, (uint64_t (*)(uint64_t))type metadata accessor for DebugController, (uint64_t)")ٶ!ȷ");
  sub_22DE1E068();
  swift_release();
  v29 = *(unsigned __int8 *)(v28 + 17);
  swift_release();
  if (v29)
    v30 = 110.0;
  else
    v30 = -200.0;
  *(_QWORD *)a2 = v46;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = v45;
  memcpy((void *)(a2 + 17), v68, 0x167uLL);
  *(_BYTE *)(a2 + 376) = v44;
  *(_DWORD *)(a2 + 377) = v67[0];
  *(_DWORD *)(a2 + 380) = *(_DWORD *)((char *)v67 + 3);
  result = 0.0;
  *(_OWORD *)(a2 + 384) = 0u;
  *(_OWORD *)(a2 + 400) = 0u;
  *(_BYTE *)(a2 + 416) = v40;
  *v32 = v66[0];
  *(_DWORD *)(a2 + 420) = *(_DWORD *)((char *)v66 + 3);
  *(_QWORD *)(a2 + 424) = v42;
  *(_BYTE *)(a2 + 432) = v41;
  *v33 = v65[0];
  *(_DWORD *)(a2 + 436) = *(_DWORD *)((char *)v65 + 3);
  *(_QWORD *)(a2 + 440) = v39;
  *(double *)(a2 + 448) = v14 * 0.5;
  *(double *)(a2 + 456) = v14;
  *(_QWORD *)(a2 + 464) = v23;
  *(_QWORD *)(a2 + 472) = v15;
  *(_QWORD *)(a2 + 480) = v35;
  *(_QWORD *)(a2 + 488) = v16;
  *(_QWORD *)(a2 + 496) = v38;
  *(_WORD *)(a2 + 504) = 256;
  *(_WORD *)(a2 + 510) = v64;
  *(_DWORD *)(a2 + 506) = v63;
  *(_QWORD *)(a2 + 512) = v37;
  *(_QWORD *)(a2 + 520) = v36;
  *(_QWORD *)(a2 + 528) = KeyPath;
  *(_BYTE *)(a2 + 536) = 0;
  *(_QWORD *)(a2 + 544) = v25;
  *(_QWORD *)(a2 + 552) = v24;
  *(double *)(a2 + 560) = v30;
  *(_QWORD *)(a2 + 568) = 0x4060000000000000;
  return result;
}

uint64_t sub_22DDB9B78@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t result;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  _BYTE *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  double v102;
  double v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  _BYTE v108[4];
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _BYTE *v128;
  uint64_t v129;
  _BYTE *v130;
  uint64_t v131;
  _BYTE *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int v141;
  _BYTE *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  _BYTE *v147;
  uint64_t v148;
  _BYTE *v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  _BYTE *v161;
  uint64_t v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  _BYTE *v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  _BYTE *v173;
  uint64_t v174;
  uint64_t v175;
  char v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char v192;
  uint64_t v193;
  double v194;
  uint64_t *v195;
  uint64_t *v196;
  uint64_t *v197;
  uint64_t *v198;
  uint64_t *v199;
  uint64_t *v200;
  uint64_t *v201;
  uint64_t *v202;
  uint64_t *v203;
  uint64_t *v204;
  _OWORD v205[4];

  v148 = a2;
  v2 = a1 & 1;
  v3 = sub_22DE1E974();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v147 = &v108[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x24BDAC7A8](v4);
  v142 = &v108[-v7];
  v8 = MEMORY[0x24BDAC7A8](v6);
  v132 = &v108[-v9];
  v10 = MEMORY[0x24BDAC7A8](v8);
  v130 = &v108[-v11];
  v12 = MEMORY[0x24BDAC7A8](v10);
  v128 = &v108[-v13];
  v14 = MEMORY[0x24BDAC7A8](v12);
  v149 = &v108[-v15];
  v16 = MEMORY[0x24BDAC7A8](v14);
  MEMORY[0x24BDAC7A8](v16);
  v194 = 4.51359308e-308;
  v195 = (uint64_t *)0xE700000000000000;
  v17 = swift_retain();
  v18 = sub_22DD83CC8(v17, v2);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)&v205[0] = v18;
  v19 = sub_22DD504A8((unint64_t *)&qword_255DB6240, (uint64_t (*)(uint64_t))type metadata accessor for BatchController, (uint64_t)&protocol conformance descriptor for BatchController);
  sub_22DE1E068();
  swift_release();
  v20 = *(_QWORD *)(v18 + 48);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)&v205[0] = v20;
  v131 = sub_22DD504A8((unint64_t *)&qword_255DB6248, (uint64_t (*)(uint64_t))type metadata accessor for StateController, (uint64_t)&unk_22DE247FC);
  sub_22DE1E068();
  swift_release();
  sub_22DDABE70((__int128 *)(v20 + 16), v205);
  sub_22DDABF20(v205, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DD77554);
  swift_release();
  sub_22DDAB010();
  sub_22DE1F328();
  swift_bridgeObjectRelease();
  sub_22DDABF20(v205, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22DD775A8);
  v138 = sub_22DD50840();
  v21 = sub_22DE1ED94();
  v144 = v22;
  v145 = v21;
  v146 = v23;
  v143 = v24;
  sub_22DE1E968();
  sub_22DE1E95C();
  v25 = swift_retain();
  v26 = v2;
  *(double *)&v27 = COERCE_DOUBLE(sub_22DD83CC8(v25, v2));
  swift_release();
  swift_getKeyPath();
  v194 = *(double *)&v27;
  sub_22DE1E068();
  swift_release();
  v28 = *(double *)(v27 + 24);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  v194 = v28;
  sub_22DD504A8((unint64_t *)&qword_255DB58F0, (uint64_t (*)(uint64_t))type metadata accessor for ScoreController, (uint64_t)&protocol conformance descriptor for ScoreController);
  sub_22DE1E068();
  swift_release();
  v29 = *(double *)(*(_QWORD *)&v28 + 24);
  swift_release();
  v194 = v29;
  sub_22DE1E92C();
  sub_22DE1E95C();
  sub_22DE1E98C();
  v30 = sub_22DE1ED7C();
  v139 = v31;
  v140 = v30;
  v141 = v32;
  v137 = v33;
  sub_22DE1E968();
  sub_22DE1E95C();
  v34 = swift_retain();
  *(double *)&v35 = COERCE_DOUBLE(sub_22DD83CC8(v34, v26));
  swift_release();
  swift_getKeyPath();
  v194 = *(double *)&v35;
  sub_22DE1E068();
  swift_release();
  swift_retain();
  swift_release();
  sub_22DD6EBE4();
  v37 = v36;
  swift_release();
  v194 = v37;
  sub_22DE1E92C();
  sub_22DE1E95C();
  sub_22DE1E98C();
  v38 = sub_22DE1ED7C();
  v134 = v39;
  v135 = v38;
  v136 = v40;
  v133 = v41;
  sub_22DE1E968();
  sub_22DE1E95C();
  v42 = swift_retain();
  *(double *)&v43 = COERCE_DOUBLE(sub_22DD83CC8(v42, v26));
  swift_release();
  swift_getKeyPath();
  v194 = *(double *)&v43;
  v129 = v19;
  sub_22DE1E068();
  swift_release();
  v44 = *(double *)(v43 + 24);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  v194 = v44;
  sub_22DE1E068();
  swift_release();
  v45 = *(_QWORD *)(*(_QWORD *)&v44 + 24);
  result = swift_release();
  v47 = floor(sqrt((double)v45 * 0.5));
  if ((~*(_QWORD *)&v47 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v47 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v47 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v48 = (uint64_t)v47;
  if ((uint64_t)v47 >= 99)
    v48 = 99;
  v194 = *(double *)&v48;
  sub_22DE1E92C();
  sub_22DE1E95C();
  sub_22DE1E98C();
  v49 = sub_22DE1ED7C();
  v126 = v50;
  v127 = v49;
  LODWORD(v149) = v51;
  v125 = v52;
  sub_22DE1E968();
  sub_22DE1E95C();
  v53 = swift_retain();
  v54 = v26;
  *(double *)&v55 = COERCE_DOUBLE(sub_22DD83CC8(v53, v26));
  swift_release();
  swift_getKeyPath();
  v194 = *(double *)&v55;
  sub_22DE1E068();
  swift_release();
  swift_retain();
  swift_release();
  *(double *)&v56 = COERCE_DOUBLE(sub_22DD6F458());
  swift_release();
  v194 = *(double *)&v56;
  sub_22DE1E92C();
  sub_22DE1E95C();
  sub_22DE1E98C();
  v57 = sub_22DE1ED7C();
  v123 = v58;
  v124 = v57;
  LODWORD(v128) = v59;
  v122 = v60;
  sub_22DE1E968();
  sub_22DE1E95C();
  v61 = swift_retain();
  *(double *)&v62 = COERCE_DOUBLE(sub_22DD83CC8(v61, v26));
  swift_release();
  swift_getKeyPath();
  v194 = *(double *)&v62;
  sub_22DE1E068();
  swift_release();
  v63 = *(double *)(v62 + 40);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  v194 = v63;
  v112 = sub_22DD504A8(&qword_255DB6260, (uint64_t (*)(uint64_t))type metadata accessor for SwipeController, (uint64_t)&unk_22DE2298C);
  sub_22DE1E068();
  swift_release();
  v64 = *(double *)(*(_QWORD *)&v63 + 24);
  swift_release();
  v194 = v64;
  sub_22DE1E92C();
  sub_22DE1E95C();
  sub_22DE1E98C();
  v65 = sub_22DE1ED7C();
  v119 = v66;
  v120 = v65;
  v121 = v67;
  v130 = v68;
  sub_22DE1E968();
  sub_22DE1E95C();
  v69 = swift_retain();
  *(double *)&v70 = COERCE_DOUBLE(sub_22DD83CC8(v69, v54));
  swift_release();
  swift_getKeyPath();
  v194 = *(double *)&v70;
  sub_22DE1E068();
  swift_release();
  v71 = *(double *)(v70 + 40);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  v194 = v71;
  sub_22DE1E068();
  swift_release();
  v72 = *(double *)(*(_QWORD *)&v71 + 24);
  swift_release();
  v194 = fabs(v72);
  sub_22DE1E92C();
  sub_22DE1E95C();
  sub_22DE1E98C();
  v73 = sub_22DE1ED7C();
  v117 = v74;
  v118 = v73;
  v116 = v75;
  v132 = v76;
  v194 = 0.0;
  v195 = (uint64_t *)0xE000000000000000;
  sub_22DE1F328();
  v77 = swift_retain();
  v78 = sub_22DD83CC8(v77, v54);
  swift_release();
  swift_getKeyPath();
  v190 = v78;
  sub_22DE1E068();
  swift_release();
  v79 = *(_QWORD *)(v78 + 48);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  v190 = v79;
  sub_22DE1E068();
  swift_release();
  v80 = *(_BYTE *)(v79 + 80);
  swift_release();
  LOBYTE(v190) = v80;
  sub_22DE1F7B4();
  v81 = sub_22DE1ED94();
  v114 = v82;
  v115 = v81;
  v113 = v83;
  v131 = v84;
  sub_22DE1E968();
  sub_22DE1E95C();
  v85 = swift_retain();
  *(double *)&v86 = COERCE_DOUBLE(sub_22DD83CC8(v85, v54));
  swift_release();
  swift_getKeyPath();
  v194 = *(double *)&v86;
  sub_22DE1E068();
  swift_release();
  swift_retain();
  swift_release();
  v87 = sub_22DD7CFD4();
  swift_release();
  v194 = v87;
  sub_22DE1E92C();
  sub_22DE1E95C();
  sub_22DE1E98C();
  v88 = sub_22DE1ED7C();
  v110 = v89;
  v111 = v88;
  v109 = v90;
  v142 = v91;
  v194 = 0.0;
  v195 = (uint64_t *)0xE000000000000000;
  sub_22DE1F730();
  swift_bridgeObjectRelease();
  v194 = -2.31584178e77;
  v195 = (uint64_t *)0x800000022DE2AE70;
  v92 = swift_retain();
  v93 = sub_22DD83CC8(v92, v54);
  swift_release();
  swift_getKeyPath();
  v190 = v93;
  sub_22DE1E068();
  swift_release();
  v94 = *(_QWORD *)(v93 + 40);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  v190 = v94;
  sub_22DE1E068();
  swift_release();
  swift_release();
  sub_22DE1F328();
  swift_bridgeObjectRelease();
  v95 = sub_22DE1ED94();
  v97 = v96;
  LOBYTE(v78) = v98;
  v138 = v99;
  sub_22DE1E968();
  sub_22DE1E95C();
  v100 = swift_retain();
  *(double *)&v101 = COERCE_DOUBLE(sub_22DD83CC8(v100, v54));
  swift_release();
  swift_getKeyPath();
  v194 = *(double *)&v101;
  sub_22DE1E068();
  swift_release();
  v102 = *(double *)(v101 + 16);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  v194 = v102;
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  sub_22DE1E068();
  swift_release();
  swift_beginAccess();
  v103 = *(double *)(*(_QWORD *)(*(_QWORD *)&v102 + 24) + 16);
  swift_release();
  v194 = v103;
  sub_22DE1E92C();
  sub_22DE1E95C();
  sub_22DE1E98C();
  v104 = sub_22DE1ED7C();
  v190 = v145;
  v191 = v144;
  v193 = v143;
  v186 = v140;
  v187 = v139;
  v189 = v137;
  v182 = v135;
  v183 = v134;
  v185 = v133;
  v178 = v127;
  v179 = v126;
  v181 = v125;
  v174 = v124;
  v175 = v123;
  v177 = v122;
  v170 = v120;
  v171 = v119;
  v192 = v146 & 1;
  v188 = v141 & 1;
  v194 = COERCE_DOUBLE(&v190);
  v195 = &v186;
  v184 = v136 & 1;
  v180 = v149 & 1;
  v196 = &v182;
  v197 = &v178;
  v176 = v128 & 1;
  v172 = v121 & 1;
  v173 = v130;
  v198 = &v174;
  v199 = &v170;
  v166 = v118;
  v167 = v117;
  v168 = v116 & 1;
  v169 = v132;
  v162 = v115;
  v163 = v114;
  v164 = v113 & 1;
  v165 = v131;
  v200 = &v166;
  v201 = &v162;
  v158 = v111;
  v159 = v110;
  v160 = v109 & 1;
  v161 = v142;
  v154 = v95;
  v155 = v97;
  v156 = v78 & 1;
  v157 = v138;
  v202 = &v158;
  v203 = &v154;
  v150 = v104;
  v151 = v105;
  v152 = v106 & 1;
  v153 = v107;
  v204 = &v150;
  sub_22DDB8EF4((uint64_t)&v194, v148);
  sub_22DD4FC6C(v150, v151, v152);
  swift_bridgeObjectRelease();
  sub_22DD4FC6C(v154, v155, v156);
  swift_bridgeObjectRelease();
  sub_22DD4FC6C(v158, v159, v160);
  swift_bridgeObjectRelease();
  sub_22DD4FC6C(v162, v163, v164);
  swift_bridgeObjectRelease();
  sub_22DD4FC6C(v166, v167, v168);
  swift_bridgeObjectRelease();
  sub_22DD4FC6C(v170, v171, v172);
  swift_bridgeObjectRelease();
  sub_22DD4FC6C(v174, v175, v176);
  swift_bridgeObjectRelease();
  sub_22DD4FC6C(v178, v179, v180);
  swift_bridgeObjectRelease();
  sub_22DD4FC6C(v182, v183, v184);
  swift_bridgeObjectRelease();
  sub_22DD4FC6C(v186, v187, v188);
  swift_bridgeObjectRelease();
  sub_22DD4FC6C(v190, v191, v192);
  return swift_bridgeObjectRelease();
}

double sub_22DDBAEF4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DDB9628(*(_BYTE *)(v1 + 8), a1);
}

uint64_t sub_22DDBAF00@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  sub_22DE1E068();
  swift_release();
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_22DDBAFA4()
{
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  swift_bridgeObjectRetain();
  sub_22DE1E05C();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DDBB05C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_22DE1E848();
  *a1 = result;
  return result;
}

uint64_t sub_22DDBB084()
{
  swift_retain();
  return sub_22DE1E854();
}

uint64_t sub_22DDBB0B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_22DE1E848();
  *a1 = result;
  return result;
}

uint64_t sub_22DDBB0DC()
{
  swift_retain();
  return sub_22DE1E854();
}

uint64_t sub_22DDBB15C()
{
  uint64_t v0;

  return sub_22DDCF3D4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_22DDBB178()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB8498;
  if (!qword_255DB8498)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB84A0);
    v2[0] = sub_22DDBB1E4();
    v2[1] = sub_22DDBB4FC();
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB8498);
  }
  return result;
}

unint64_t sub_22DDBB1E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB84A8;
  if (!qword_255DB84A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB84B0);
    v2[0] = sub_22DDBB268();
    v2[1] = sub_22DD508B0(&qword_255DB74E0, &qword_255DB74E8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB84A8);
  }
  return result;
}

unint64_t sub_22DDBB268()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB84B8;
  if (!qword_255DB84B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB84C0);
    v2[0] = sub_22DDBB2EC();
    v2[1] = sub_22DD508B0(&qword_255DB5460, &qword_255DB5468, MEMORY[0x24BDF1028]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB84B8);
  }
  return result;
}

unint64_t sub_22DDBB2EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB84C8;
  if (!qword_255DB84C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB84D0);
    v2[0] = sub_22DDBB370();
    v2[1] = sub_22DD508B0(&qword_255DB6628, &qword_255DB6630, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB84C8);
  }
  return result;
}

unint64_t sub_22DDBB370()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB84D8;
  if (!qword_255DB84D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB84E0);
    v2[0] = sub_22DDBB3F4();
    v2[1] = sub_22DD508B0((unint64_t *)&qword_255DB6C50, &qword_255DB6C58, MEMORY[0x24BDF0710]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB84D8);
  }
  return result;
}

unint64_t sub_22DDBB3F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB84E8;
  if (!qword_255DB84E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB84F0);
    v2[0] = sub_22DDBB478();
    v2[1] = sub_22DD508B0(&qword_255DB74D0, &qword_255DB74D8, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB84E8);
  }
  return result;
}

unint64_t sub_22DDBB478()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB84F8;
  if (!qword_255DB84F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB8500);
    v2[0] = sub_22DD508B0(&qword_255DB8508, &qword_255DB8510, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB84F8);
  }
  return result;
}

unint64_t sub_22DDBB4FC()
{
  unint64_t result;

  result = qword_255DB8518;
  if (!qword_255DB8518)
  {
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED5C0], MEMORY[0x24BDED5D0]);
    atomic_store(result, (unint64_t *)&qword_255DB8518);
  }
  return result;
}

uint64_t sub_22DDBB540()
{
  uint64_t v0;

  v0 = sub_22DE1E410();
  __swift_allocate_value_buffer(v0, qword_255DB8520);
  __swift_project_value_buffer(v0, (uint64_t)qword_255DB8520);
  return sub_22DE1E404();
}

void sub_22DDBB5B8(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_form);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

id sub_22DDBB618()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_form);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_22DDBB65C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_delegate;
  swift_beginAccess();
  return MEMORY[0x22E32090C](v1);
}

uint64_t sub_22DDBB6A4()
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_22DDBB6FC(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_delegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x22E32090C](v5);
  return sub_22DD9C654;
}

uint64_t sub_22DDBB76C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_presentationDelegate;
  swift_beginAccess();
  return MEMORY[0x22E32090C](v1);
}

uint64_t sub_22DDBB7B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_presentationDelegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_22DDBB820(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_presentationDelegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x22E32090C](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_22DDBB894;
}

void sub_22DDBB894(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

void *sub_22DDBB908()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  NSObject *v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  char *v28;
  uint64_t v29;
  void *v30;
  char *v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  NSObject *v36;
  uint64_t v37;
  uint8_t *v38;
  id v39;
  uint8_t *buf;
  void *v42;
  os_log_type_t type;
  id aBlock;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  void *v47;
  uint64_t (*v48)();
  uint64_t v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_extensionKitQueryDelegate];
  if (!v1)
    return 0;
  v2 = *(void **)(v1
                + OBJC_IVAR____TtC8FeedbackP33_EE21497D76FC0771846C2AC1D57947B534FBK_EXQueryObserverDelegateWrapper_hostViewController);
  if (!v2)
    return 0;
  v3 = v0;
  v4 = OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController__xpcConnection;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController__xpcConnection])
  {
    v5 = qword_255DB5310;
    v6 = v2;
    if (v5 != -1)
      swift_once();
    v7 = sub_22DE1E410();
    __swift_project_value_buffer(v7, (uint64_t)qword_255DB8520);
    v8 = v6;
    v9 = sub_22DE1E3F8();
    v10 = sub_22DE1F514();
    if (os_log_type_enabled(v9, v10))
    {
      type = v10;
      v11 = (uint8_t *)swift_slowAlloc();
      v42 = (void *)swift_slowAlloc();
      aBlock = v42;
      *(_DWORD *)v11 = 136446210;
      buf = v11;
      v12 = v8;
      v13 = -[NSObject description](v12, sel_description);
      v14 = v4;
      v15 = v8;
      v16 = sub_22DE1F2B0();
      v18 = v17;

      v19 = v16;
      v8 = v15;
      v4 = v14;
      sub_22DDA2E30(v19, v18, (uint64_t *)&aBlock);
      sub_22DE1F628();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22DD4B000, v9, type, "Initializing XPC Connection for host view controller: %{public}s", buf, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v42, -1, -1);
      MEMORY[0x22E320870](buf, -1, -1);

    }
    else
    {

    }
    aBlock = 0;
    v21 = -[NSObject makeXPCConnectionWithError:](v8, sel_makeXPCConnectionWithError_, &aBlock);
    v22 = aBlock;
    if (v21)
    {
      v23 = (void *)sub_22DD9AC34();
      objc_msgSend(v21, sel_setRemoteObjectInterface_, v23);

      objc_msgSend(v21, sel_setExportedObject_, v3);
      v24 = (void *)sub_22DD9ADF0();
      objc_msgSend(v21, sel_setExportedInterface_, v24);

      v25 = swift_allocObject();
      *(_QWORD *)(v25 + 16) = v3;
      v48 = sub_22DDC1424;
      v49 = v25;
      v26 = (void *)MEMORY[0x24BDAC760];
      aBlock = (id)MEMORY[0x24BDAC760];
      v45 = 1107296256;
      v46 = sub_22DD9C498;
      v47 = &block_descriptor_56;
      v27 = _Block_copy(&aBlock);
      v28 = v3;
      swift_release();
      objc_msgSend(v21, sel_setInterruptionHandler_, v27);
      _Block_release(v27);
      v29 = swift_allocObject();
      *(_QWORD *)(v29 + 16) = v28;
      v48 = sub_22DDC1454;
      v49 = v29;
      aBlock = v26;
      v45 = 1107296256;
      v46 = sub_22DD9C498;
      v47 = &block_descriptor_62;
      v30 = _Block_copy(&aBlock);
      v31 = v28;
      swift_release();
      objc_msgSend(v21, sel_setInvalidationHandler_, v30);
      _Block_release(v30);
      v32 = *(void **)&v3[v4];
      *(_QWORD *)&v3[v4] = v21;
      v33 = v21;

      objc_msgSend(v33, sel_resume);
    }
    else
    {
      v34 = v22;
      v35 = (void *)sub_22DE1DEE8();

      swift_willThrow();
      v36 = sub_22DE1E3F8();
      v37 = sub_22DE1F4FC();
      if (os_log_type_enabled(v36, (os_log_type_t)v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v38 = 0;
        _os_log_impl(&dword_22DD4B000, v36, (os_log_type_t)v37, "Failed to create XPC connection", v38, 2u);
        MEMORY[0x22E320870](v38, -1, -1);

      }
      else
      {

      }
      v8 = v36;
    }

  }
  v20 = *(void **)&v3[v4];
  v39 = v20;
  return v20;
}

uint64_t sub_22DDBBDC4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint8_t *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v27 = a1;
  v7 = sub_22DE1F1B4();
  v28 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22DE1F1D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255DB5310 != -1)
    swift_once();
  v14 = sub_22DE1E410();
  __swift_project_value_buffer(v14, (uint64_t)qword_255DB8520);
  v15 = sub_22DE1E3F8();
  v16 = sub_22DE1F514();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = a2;
    v19 = a3;
    v20 = a4;
    v21 = v17;
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_22DD4B000, v15, v16, v18, v17, 2u);
    v22 = v21;
    a4 = v20;
    a3 = v19;
    MEMORY[0x22E320870](v22, -1, -1);
  }

  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v23 = (void *)sub_22DE1F574();
  v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = a3;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = a4;
  v25 = _Block_copy(aBlock);
  swift_release();
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD78E08();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD78E50();
  sub_22DE1F67C();
  MEMORY[0x22E31FDFC](0, v13, v9, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_22DDBC05C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = (char *)MEMORY[0x22E32090C](v3);
  if (v4)
  {
    v5 = *(void **)&v4[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController__xpcConnection];
    *(_QWORD *)&v4[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController__xpcConnection] = 0;

  }
  swift_beginAccess();
  v6 = MEMORY[0x22E32090C](v3);
  if (v6)
  {
    v7 = (void *)v6;
    sub_22DDBC0FC(0xD000000000000015, a2);

  }
}

void sub_22DDBC0FC(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  char *v12;

  v3 = v2;
  v6 = objc_msgSend(v2, sel_presentingViewController);
  v7 = v6;
  if (v6)

  if (qword_255DB5310 != -1)
    swift_once();
  v8 = sub_22DE1E410();
  __swift_project_value_buffer(v8, (uint64_t)qword_255DB8520);
  v9 = sub_22DE1E3F8();
  v10 = sub_22DE1F514();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v11 = 67109120;
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v9, v10, "is presented %{BOOL}d", v11, 8u);
    MEMORY[0x22E320870](v11, -1, -1);
  }

  if (v7)
  {
    swift_bridgeObjectRetain();
    v12 = _s8Feedback18FBKSubmissionErrorC16debugDescriptionACSS_tcfC_0(a1, a2);
    objc_msgSend(v3, sel_didFailSubmissionWithError_, v12);

  }
}

void *sub_22DDBC27C()
{
  void *result;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _BYTE v10[32];
  _QWORD aBlock[6];

  result = sub_22DDBB908();
  if (result)
  {
    v1 = result;
    aBlock[4] = sub_22DDBC440;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DD9DDD8;
    aBlock[3] = &block_descriptor_138;
    v2 = _Block_copy(aBlock);
    v3 = objc_msgSend(v1, sel_remoteObjectProxyWithErrorHandler_, v2);
    _Block_release(v2);

    sub_22DE1F664();
    swift_unknownObjectRelease();
    sub_22DDA48F0((uint64_t)aBlock, (uint64_t)v10);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB86E0);
    if (swift_dynamicCast())
    {
      v4 = v9;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    }
    else
    {
      if (qword_255DB5310 != -1)
        swift_once();
      v5 = sub_22DE1E410();
      __swift_project_value_buffer(v5, (uint64_t)qword_255DB8520);
      v6 = sub_22DE1E3F8();
      v7 = sub_22DE1F4FC();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v8 = 0;
        _os_log_impl(&dword_22DD4B000, v6, v7, "XPC proxy object is not of the expected object type.", v8, 2u);
        MEMORY[0x22E320870](v8, -1, -1);
      }

      __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
      return 0;
    }
    return (void *)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_22DDBC440(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  NSObject *oslog;
  uint64_t v12;

  if (qword_255DB5310 != -1)
    swift_once();
  v2 = sub_22DE1E410();
  __swift_project_value_buffer(v2, (uint64_t)qword_255DB8520);
  v3 = a1;
  v4 = a1;
  oslog = sub_22DE1E3F8();
  v5 = sub_22DE1F4FC();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v12 = v7;
    *(_DWORD *)v6 = 136446210;
    v8 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7A58);
    v9 = sub_22DE1F2EC();
    sub_22DDA2E30(v9, v10, &v12);
    sub_22DE1F628();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22DD4B000, oslog, v5, "XPC proxy object failed with error: %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v7, -1, -1);
    MEMORY[0x22E320870](v6, -1, -1);

  }
  else
  {

  }
}

char *FBKFeedbackDraftViewController.__allocating_init(feedbackForm:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return FBKFeedbackDraftViewController.init(feedbackForm:)(a1);
}

char *FBKFeedbackDraftViewController.init(feedbackForm:)(void *a1)
{
  _BYTE *v1;
  id v3;
  id v4;
  objc_class *v5;
  char *v6;
  objc_class *v7;
  id v8;
  char *v9;
  char *v10;
  id v11;
  void *v12;
  objc_super v14;
  objc_super v15;
  objc_super v16;

  swift_unknownObjectWeakInit();
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_presentationDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_extensionObserver] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_extensionKitQueryDelegate] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController__xpcConnection] = 0;
  v1[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_showsCompletionPage] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_form] = a1;
  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for FBKFeedbackDraftViewController();
  v3 = a1;
  v4 = objc_msgSendSuper2(&v16, sel_initWithNibName_bundle_, 0, 0);
  v5 = (objc_class *)type metadata accessor for FBK_EXQueryObserverDelegateWrapper();
  v6 = (char *)objc_allocWithZone(v5);
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v6[OBJC_IVAR____TtC8FeedbackP33_EE21497D76FC0771846C2AC1D57947B534FBK_EXQueryObserverDelegateWrapper_hostViewController] = 0;
  swift_unknownObjectWeakAssign();
  v7 = (objc_class *)type metadata accessor for FBK_EXHostViewControllerDelegateWrapper();
  v8 = objc_allocWithZone(v7);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v15.receiver = v8;
  v15.super_class = v7;
  v9 = (char *)v4;
  v10 = v6;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8FeedbackP33_EE21497D76FC0771846C2AC1D57947B534FBK_EXQueryObserverDelegateWrapper_extensionKitHostViewControllerDelegate] = objc_msgSendSuper2(&v15, sel_init);

  v14.receiver = v10;
  v14.super_class = v5;
  v11 = objc_msgSendSuper2(&v14, sel_init);
  v12 = *(void **)&v9[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_extensionKitQueryDelegate];
  *(_QWORD *)&v9[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_extensionKitQueryDelegate] = v11;

  sub_22DDBC880();
  return v9;
}

uint64_t type metadata accessor for FBKFeedbackDraftViewController()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FBK_EXQueryObserverDelegateWrapper()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FBK_EXHostViewControllerDelegateWrapper()
{
  return objc_opt_self();
}

void sub_22DDBC880()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  NSObject *v16;

  v1 = v0;
  objc_msgSend(v0, sel_setModalInPresentation_, 1);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_extensionKitQueryDelegate];
  if (!v2)
  {
    if (qword_255DB5310 != -1)
      swift_once();
    v13 = sub_22DE1E410();
    __swift_project_value_buffer(v13, (uint64_t)qword_255DB8520);
    v16 = sub_22DE1E3F8();
    v14 = sub_22DE1F508();
    if (os_log_type_enabled(v16, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_22DD4B000, v16, v14, "query observer is not initialized", v15, 2u);
      MEMORY[0x22E320870](v15, -1, -1);
    }
    goto LABEL_8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7CA0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_22DE25180;
  v4 = (void *)objc_opt_self();
  v5 = *MEMORY[0x24BE30D58];
  v6 = v2;
  *(_QWORD *)(v3 + 32) = objc_msgSend(v4, sel_extensionPointIdentifierQuery_, v5);
  sub_22DE1F3E8();
  v7 = objc_allocWithZone(MEMORY[0x24BDC79F8]);
  sub_22DD70E78(0, (unint64_t *)&unk_255DB86F0);
  v16 = v6;
  v8 = (void *)sub_22DE1F3C4();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithQueries_delegate_, v8, v16);

  v10 = OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_extensionObserver;
  v11 = *(void **)&v1[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_extensionObserver];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_extensionObserver] = v9;

  v12 = *(void **)&v1[v10];
  if (v12)
  {
    objc_msgSend(v12, sel_resume);
LABEL_8:

    return;
  }
  __break(1u);
}

id FBKFeedbackDraftViewController.__deallocating_deinit()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  objc_super v7;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_extensionKitQueryDelegate];
  if (v1)
  {
    v2 = *(void **)(v1
                  + OBJC_IVAR____TtC8FeedbackP33_EE21497D76FC0771846C2AC1D57947B534FBK_EXQueryObserverDelegateWrapper_hostViewController);
    *(_QWORD *)(v1
              + OBJC_IVAR____TtC8FeedbackP33_EE21497D76FC0771846C2AC1D57947B534FBK_EXQueryObserverDelegateWrapper_hostViewController) = 0;

  }
  v3 = OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController__xpcConnection;
  v4 = *(void **)&v0[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController__xpcConnection];
  if (v4)
  {
    objc_msgSend(v4, sel_invalidate);
    v5 = *(void **)&v0[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v0[v3] = 0;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for FBKFeedbackDraftViewController();
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_22DDBCBCC()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_showsCompletionPage);
  swift_beginAccess();
  return *v1;
}

void *sub_22DDBCC10(unsigned __int8 a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  void *result;

  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_showsCompletionPage);
  result = (void *)swift_beginAccess();
  *v3 = a1;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController__xpcConnection))
  {
    result = sub_22DDBC27C();
    if (result)
    {
      objc_msgSend(result, sel_setShowsCompletionPage_, *v3);
      return (void *)swift_unknownObjectRelease();
    }
  }
  return result;
}

void (*sub_22DDBCC94(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_showsCompletionPage;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_22DDBCCEC;
}

void sub_22DDBCCEC(_QWORD **a1, char a2)
{
  _QWORD *v3;
  void *v4;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    if (*(_QWORD *)(v3[3] + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController__xpcConnection))
    {
      v4 = sub_22DDBC27C();
      if (v4)
      {
        objc_msgSend(v4, sel_setShowsCompletionPage_, *(unsigned __int8 *)(v3[3] + v3[4]));
        swift_unknownObjectRelease();
      }
    }
  }
  free(v3);
}

id FBKFeedbackDraftViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_22DE1F28C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void FBKFeedbackDraftViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

Swift::Void __swiftcall FBKFeedbackDraftViewController.didRequestViewFullScreen()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t aBlock[6];

  v1 = v0;
  v2 = sub_22DE1F1B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22DE1F1D8();
  v22 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255DB5310 != -1)
    swift_once();
  v9 = sub_22DE1E410();
  __swift_project_value_buffer(v9, (uint64_t)qword_255DB8520);
  v10 = sub_22DE1E3F8();
  v11 = sub_22DE1F4F0();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v21 = v3;
    v14 = v13;
    aBlock[0] = v13;
    v20 = v8;
    *(_DWORD *)v12 = 136315138;
    v23 = sub_22DDA2E30(0xD00000000000001ALL, 0x800000022DE2AF00, aBlock);
    v8 = v20;
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v10, v11, "%s", v12, 0xCu);
    swift_arrayDestroy();
    v15 = v14;
    v3 = v21;
    MEMORY[0x22E320870](v15, -1, -1);
    MEMORY[0x22E320870](v12, -1, -1);
  }

  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v16 = (void *)sub_22DE1F574();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v1;
  aBlock[4] = (uint64_t)sub_22DDBD3A0;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_22DD9C498;
  aBlock[3] = (uint64_t)&block_descriptor_4;
  v18 = _Block_copy(aBlock);
  v19 = v1;
  swift_release();
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD78E08();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD78E50();
  sub_22DE1F67C();
  MEMORY[0x22E31FDFC](0, v8, v5, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v6);
}

void sub_22DDBD170(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSObject *oslog;
  _QWORD aBlock[6];

  v1 = objc_msgSend(a1, sel_sheetPresentationController);
  if (v1)
  {
    v2 = v1;
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = sub_22DDC162C;
    *(_QWORD *)(v4 + 24) = v3;
    aBlock[4] = sub_22DD7A850;
    aBlock[5] = v4;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DDDE064;
    aBlock[3] = &block_descriptor_135;
    v5 = _Block_copy(aBlock);
    v6 = v2;
    swift_retain();
    swift_release();
    objc_msgSend(v6, sel_animateChanges_, v5);

    _Block_release(v5);
    LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v6 & 1) == 0)
      return;
    __break(1u);
    goto LABEL_9;
  }
  if (qword_255DB5310 != -1)
LABEL_9:
    swift_once();
  v7 = sub_22DE1E410();
  __swift_project_value_buffer(v7, (uint64_t)qword_255DB8520);
  oslog = sub_22DE1E3F8();
  v8 = sub_22DE1F4FC();
  if (os_log_type_enabled(oslog, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_22DD4B000, oslog, v8, "FBKFeedbackDraftViewController has no Sheet Presentation Controller. Cannot go full screen", v9, 2u);
    MEMORY[0x22E320870](v9, -1, -1);
  }

}

uint64_t sub_22DDBD37C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_22DDBD3A0()
{
  uint64_t v0;

  sub_22DDBD170(*(void **)(v0 + 16));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

void sub_22DDBD3F8(void *a1)
{
  uint64_t v2;
  void *v3;
  _QWORD v4[6];

  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v4[4] = sub_22DDC1624;
  v4[5] = v2;
  v4[0] = MEMORY[0x24BDAC760];
  v4[1] = 1107296256;
  v4[2] = sub_22DD9C498;
  v4[3] = &block_descriptor_126;
  v3 = _Block_copy(v4);
  swift_release();
  objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, v3);
  _Block_release(v3);
}

void sub_22DDBD4AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x22E32090C](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = v2 + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_delegate;
    swift_beginAccess();
    v5 = (void *)MEMORY[0x22E32090C](v4);
    if (v5)
    {
      objc_msgSend(v5, sel_feedbackDraftViewControllerDidCancel_, v3);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

Swift::Void __swiftcall FBKFeedbackDraftViewController.draftDirtyStateUpdated(_:)(Swift::Bool a1)
{
  sub_22DDC0838(0xD00000000000001ALL, 0x800000022DE2B320);
}

Swift::Void __swiftcall FBKFeedbackDraftViewController.feedbackDidBeginSubmission()()
{
  sub_22DDC0838(0xD00000000000001CLL, 0x800000022DE2B300);
}

uint64_t FBKFeedbackDraftViewController.feedbackDidComplete(responseType:responseID:completedForm:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  void *v21;
  _QWORD *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t aBlock[6];

  v36 = a4;
  v33 = a2;
  v6 = sub_22DE1F1B4();
  v34 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22DE1F1D8();
  v37 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255DB5310 != -1)
    swift_once();
  v12 = sub_22DE1E410();
  __swift_project_value_buffer(v12, (uint64_t)qword_255DB8520);
  v13 = sub_22DE1E3F8();
  v14 = sub_22DE1F4F0();
  if (os_log_type_enabled(v13, v14))
  {
    v32 = v9;
    v15 = swift_slowAlloc();
    v31 = a3;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc();
    v30 = a1;
    v18 = v17;
    aBlock[0] = v17;
    *(_DWORD *)v16 = 136315138;
    v38 = sub_22DDA2E30(0xD00000000000003BLL, 0x800000022DE2AF20, aBlock);
    v9 = v32;
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v13, v14, "%s", v16, 0xCu);
    swift_arrayDestroy();
    v19 = v18;
    a1 = v30;
    MEMORY[0x22E320870](v19, -1, -1);
    v20 = v16;
    a3 = v31;
    MEMORY[0x22E320870](v20, -1, -1);
  }

  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v21 = (void *)sub_22DE1F574();
  v22 = (_QWORD *)swift_allocObject();
  v23 = v35;
  v24 = v36;
  v22[2] = v35;
  v22[3] = v24;
  v22[4] = v33;
  v22[5] = a3;
  v22[6] = a1;
  aBlock[4] = (uint64_t)sub_22DDC09F8;
  aBlock[5] = (uint64_t)v22;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_22DD9C498;
  aBlock[3] = (uint64_t)&block_descriptor_6_0;
  v25 = _Block_copy(aBlock);
  v26 = v23;
  v27 = v24;
  swift_bridgeObjectRetain();
  swift_release();
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD78E08();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD78E50();
  sub_22DE1F67C();
  MEMORY[0x22E31FDFC](0, v11, v8, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v11, v9);
}

void sub_22DDBD98C(char *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void **v10;
  void *v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  _QWORD aBlock[6];

  v10 = (void **)&a1[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_form];
  swift_beginAccess();
  v11 = *v10;
  *v10 = a2;
  v12 = a2;

  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a3;
  v14[4] = a4;
  v14[5] = a5;
  aBlock[4] = sub_22DDC1610;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = &block_descriptor_116;
  v15 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, v15);
  _Block_release(v15);
}

void sub_22DDBDAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x22E32090C](v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = v6 + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_delegate;
    swift_beginAccess();
    v9 = (void *)MEMORY[0x22E32090C](v8);
    if (v9)
    {
      v10 = v9;
      if ((objc_msgSend(v9, sel_respondsToSelector_, sel_feedbackDraftViewController_didCompleteWithFeedbackID_) & 1) != 0)
      {
        v11 = (void *)sub_22DE1F28C();
        objc_msgSend(v10, sel_feedbackDraftViewController_didCompleteWithFeedbackID_, v7, v11);
        swift_unknownObjectRelease();

      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    v12 = (void *)MEMORY[0x22E32090C](v8);
    if (v12)
    {
      v13 = v12;
      if ((objc_msgSend(v12, sel_respondsToSelector_, sel_feedbackDraftViewController_didCompleteWithResponseType_responseID_) & 1) != 0)
      {
        v14 = (void *)sub_22DE1F28C();
        objc_msgSend(v13, sel_feedbackDraftViewController_didCompleteWithResponseType_responseID_, v7, a4, v14);

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
    }
    else
    {

    }
  }
}

uint64_t FBKFeedbackDraftViewController.didFailSubmission(error:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t aBlock[6];

  v2 = sub_22DE1F1B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22DE1F1D8();
  v28 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255DB5310 != -1)
    swift_once();
  v9 = sub_22DE1E410();
  __swift_project_value_buffer(v9, (uint64_t)qword_255DB8520);
  v10 = sub_22DE1E3F8();
  v11 = sub_22DE1F4F0();
  if (os_log_type_enabled(v10, v11))
  {
    v25 = a1;
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v26 = v6;
    v14 = v3;
    v15 = v13;
    aBlock[0] = v13;
    *(_DWORD *)v12 = 136315138;
    v29 = sub_22DDA2E30(0xD000000000000019, 0x800000022DE2AF60, aBlock);
    a1 = v25;
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v10, v11, "%s", v12, 0xCu);
    swift_arrayDestroy();
    v16 = v15;
    v3 = v14;
    v6 = v26;
    MEMORY[0x22E320870](v16, -1, -1);
    MEMORY[0x22E320870](v12, -1, -1);
  }

  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v17 = (void *)sub_22DE1F574();
  v18 = swift_allocObject();
  v19 = v27;
  *(_QWORD *)(v18 + 16) = v27;
  *(_QWORD *)(v18 + 24) = a1;
  aBlock[4] = (uint64_t)sub_22DDC0A08;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_22DD9C498;
  aBlock[3] = (uint64_t)&block_descriptor_12_1;
  v20 = _Block_copy(aBlock);
  v21 = v19;
  v22 = a1;
  swift_release();
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD78E08();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD78E50();
  sub_22DE1F67C();
  MEMORY[0x22E31FDFC](0, v8, v5, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v8, v6);
}

void sub_22DDBDFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x22E32090C](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = v4 + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_delegate;
    swift_beginAccess();
    v7 = (void *)MEMORY[0x22E32090C](v6);
    if (v7)
    {
      v8 = v7;
      if ((objc_msgSend(v7, sel_respondsToSelector_, sel_feedbackDraftViewController_didFailToSubmitFeedback_) & 1) != 0)objc_msgSend(v8, sel_feedbackDraftViewController_didFailToSubmitFeedback_, v5, a2);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

uint64_t FBKFeedbackDraftViewController.feedbackDidFailToAttachURL(_:nsError:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  char *v27;
  char *v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t aBlock[6];

  v33 = a2;
  v3 = sub_22DE1F1B4();
  v38 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v37 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22DE1F1D8();
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v34 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22DE1DFB4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  if (qword_255DB5310 != -1)
    swift_once();
  v10 = sub_22DE1E410();
  __swift_project_value_buffer(v10, (uint64_t)qword_255DB8520);
  v11 = sub_22DE1E3F8();
  v12 = sub_22DE1F4F0();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v30 = a1;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v31 = v3;
    v16 = v15;
    aBlock[0] = v15;
    *(_DWORD *)v14 = 136315138;
    v39 = sub_22DDA2E30(0xD000000000000026, 0x800000022DE2AF80, aBlock);
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v11, v12, "%s", v14, 0xCu);
    swift_arrayDestroy();
    v17 = v16;
    v3 = v31;
    MEMORY[0x22E320870](v17, -1, -1);
    v18 = v14;
    a1 = v30;
    MEMORY[0x22E320870](v18, -1, -1);
  }

  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v19 = (void *)sub_22DE1F574();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v20 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v21 = swift_allocObject();
  v22 = v32;
  *(_QWORD *)(v21 + 16) = v32;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v21 + v20, (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v23 = v33;
  *(_QWORD *)(v21 + ((v9 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = v33;
  aBlock[4] = (uint64_t)sub_22DDC0AC8;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_22DD9C498;
  aBlock[3] = (uint64_t)&block_descriptor_18_1;
  v24 = _Block_copy(aBlock);
  v25 = v22;
  v26 = v23;
  swift_release();
  v27 = v34;
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD78E08();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD78E50();
  v28 = v37;
  sub_22DE1F67C();
  MEMORY[0x22E31FDFC](0, v27, v28, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v27, v36);
}

void sub_22DDBE4C0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  void *v18;

  v5 = a1 + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_delegate;
  swift_beginAccess();
  v6 = (void *)MEMORY[0x22E32090C](v5);
  if (v6)
  {
    v7 = v6;
    if ((objc_msgSend(v6, sel_respondsToSelector_, sel_feedbackDraftViewController_didFailToAttachURL_error_) & 1) == 0)
    {
      swift_unknownObjectRelease();
      return;
    }
    v8 = a3;
    v9 = objc_msgSend(v8, sel_domain);
    v10 = sub_22DE1F2B0();
    v12 = v11;

    if (v10 == 0xD000000000000025 && v12 == 0x800000022DE2A420)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = sub_22DE1F8E0();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {

        goto LABEL_11;
      }
    }
    v14 = objc_msgSend(v8, sel_code);

    v15 = sub_22DDC9BCC((unint64_t)v14);
    if ((v16 & 1) == 0)
    {
      v17 = v15;
LABEL_12:
      v18 = (void *)sub_22DE1DF3C();
      objc_msgSend(v7, sel_feedbackDraftViewController_didFailToAttachURL_error_, a1, v18, v17);
      swift_unknownObjectRelease();

      return;
    }
LABEL_11:
    v17 = 6;
    goto LABEL_12;
  }
}

Swift::Void __swiftcall FBKFeedbackDraftViewController.feedbackRestartDidFail(error:)(NSNumber error)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  NSNumber *v18;
  void *v19;
  void *v20;
  id v21;
  objc_class *v22;
  uint64_t v23;
  objc_class *isa;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t aBlock[6];

  v2 = sub_22DE1F1B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22DE1F1D8();
  v27 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255DB5310 != -1)
    swift_once();
  v9 = sub_22DE1E410();
  __swift_project_value_buffer(v9, (uint64_t)qword_255DB8520);
  v10 = sub_22DE1E3F8();
  v11 = sub_22DE1F4F0();
  if (os_log_type_enabled(v10, v11))
  {
    isa = error.super.super.isa;
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v25 = v6;
    v14 = v3;
    v15 = v13;
    aBlock[0] = v13;
    *(_DWORD *)v12 = 136315138;
    v28 = sub_22DDA2E30(0xD00000000000001ELL, 0x800000022DE2AFB0, aBlock);
    error.super.super.isa = isa;
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v10, v11, "%s", v12, 0xCu);
    swift_arrayDestroy();
    v16 = v15;
    v3 = v14;
    v6 = v25;
    MEMORY[0x22E320870](v16, -1, -1);
    MEMORY[0x22E320870](v12, -1, -1);
  }

  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v17 = (void *)sub_22DE1F574();
  v18 = (NSNumber *)swift_allocObject();
  v19 = v26;
  v18[2].super.super.isa = (Class)v26;
  v18[3].super.super.isa = error.super.super.isa;
  aBlock[4] = (uint64_t)sub_22DDC0B38;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_22DD9C498;
  aBlock[3] = (uint64_t)&block_descriptor_24_0;
  v20 = _Block_copy(aBlock);
  v21 = v19;
  v22 = error.super.super.isa;
  swift_release();
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD78E08();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD78E50();
  sub_22DE1F67C();
  MEMORY[0x22E31FDFC](0, v8, v5, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v6);
}

Swift::Void __swiftcall FBKFeedbackDraftViewController.didBeginHosting()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  void **v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  __int128 v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  os_log_type_t v34;
  uint8_t *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  char *v40;
  uint64_t v41;
  void **v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  NSObject *v48;
  uint64_t aBlock[6];

  v45 = type metadata accessor for URLError();
  v1 = *(_QWORD *)(v45 - 8);
  v2 = MEMORY[0x24BDAC7A8](v45);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v41 - v5;
  v7 = sub_22DDBC27C();
  if (v7)
  {
    v8 = v7;
    v9 = (void **)&v0[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_form];
    swift_beginAccess();
    v10 = *v9;
    aBlock[0] = MEMORY[0x24BEE4AF8];
    swift_beginAccess();
    v11 = v10;
    v12 = swift_bridgeObjectRetain();
    v13 = sub_22DD98C74(v12, (unint64_t *)aBlock);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v11[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_sandboxExtensionAttachments] = v13;

    swift_bridgeObjectRelease();
    v14 = *(_QWORD *)(aBlock[0] + 16);
    if (v14)
    {
      v42 = v9;
      v43 = v8;
      v44 = v0;
      v15 = &v0[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_delegate];
      v16 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
      v41 = aBlock[0];
      v17 = aBlock[0] + v16;
      swift_beginAccess();
      v18 = *(id *)(v1 + 72);
      *(_QWORD *)&v19 = 136315138;
      v47 = v19;
      v46 = MEMORY[0x24BEE4AD8] + 8;
      v48 = v18;
      do
      {
        sub_22DDA4870(v17, (uint64_t)v6);
        if (qword_255DB5310 != -1)
          swift_once();
        v22 = sub_22DE1E410();
        __swift_project_value_buffer(v22, (uint64_t)qword_255DB8520);
        sub_22DDA4870((uint64_t)v6, (uint64_t)v4);
        v23 = sub_22DE1E3F8();
        v24 = sub_22DE1F514();
        if (os_log_type_enabled(v23, v24))
        {
          v25 = swift_slowAlloc();
          v26 = v15;
          v27 = swift_slowAlloc();
          aBlock[0] = v27;
          *(_DWORD *)v25 = v47;
          v28 = URLError.description.getter();
          *(_QWORD *)(v25 + 4) = sub_22DDA2E30(v28, v29, aBlock);
          swift_bridgeObjectRelease();
          sub_22DDA48B4((uint64_t)v4);
          _os_log_impl(&dword_22DD4B000, v23, v24, "Error generating sandbox extensions %s", (uint8_t *)v25, 0xCu);
          swift_arrayDestroy();
          v30 = v27;
          v15 = v26;
          v18 = v48;
          MEMORY[0x22E320870](v30, -1, -1);
          MEMORY[0x22E320870](v25, -1, -1);
        }
        else
        {
          sub_22DDA48B4((uint64_t)v4);
        }

        v31 = (void *)MEMORY[0x22E32090C](v15);
        if (v31)
        {
          v32 = v31;
          if ((objc_msgSend(v31, sel_respondsToSelector_, sel_feedbackDraftViewController_didFailToAttachURL_error_) & 1) != 0)
          {
            v20 = *(_QWORD *)&v6[*(int *)(v45 + 20)];
            v21 = (void *)sub_22DE1DF3C();
            objc_msgSend(v32, sel_feedbackDraftViewController_didFailToAttachURL_error_, v44, v21, v20);
            swift_unknownObjectRelease();

          }
          else
          {
            swift_unknownObjectRelease();
          }
        }
        sub_22DDA48B4((uint64_t)v6);
        v17 += (uint64_t)v18;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      v0 = v44;
      v8 = v43;
      v9 = v42;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v36 = *v9;
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = v8;
    *(_QWORD *)(v37 + 24) = v0;
    aBlock[4] = (uint64_t)sub_22DDC0B74;
    aBlock[5] = v37;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_22DD9CDA8;
    aBlock[3] = (uint64_t)&block_descriptor_30;
    v38 = _Block_copy(aBlock);
    v39 = v36;
    swift_unknownObjectRetain();
    v40 = v0;
    swift_release();
    objc_msgSend(v8, sel_setFeedbackForm_reply_, v39, v38);
    _Block_release(v38);
    swift_unknownObjectRelease();

  }
  else
  {
    if (qword_255DB5310 != -1)
      swift_once();
    v33 = sub_22DE1E410();
    __swift_project_value_buffer(v33, (uint64_t)qword_255DB8520);
    v48 = sub_22DE1E3F8();
    v34 = sub_22DE1F4FC();
    if (os_log_type_enabled(v48, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_22DD4B000, v48, v34, "Failed to start feedback form, proxy object is nil.", v35, 2u);
      MEMORY[0x22E320870](v35, -1, -1);
    }

  }
}

void sub_22DDBF018(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;

  v1 = MEMORY[0x22E32090C](a1+ OBJC_IVAR____TtC8FeedbackP33_EE21497D76FC0771846C2AC1D57947B539FBK_EXHostViewControllerDelegateWrapper_controller);
  if (v1)
  {
    v2 = (void *)v1;
    v3 = v1 + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_delegate;
    swift_beginAccess();
    v4 = (void *)MEMORY[0x22E32090C](v3);
    if (v4)
    {
      objc_msgSend(v4, sel_feedbackDraftViewController_didFailToStartWithError_, v2, 7);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

Swift::Void __swiftcall FBKFeedbackDraftViewController.didFailToHost()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = v0 + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_delegate;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x22E32090C](v1);
  if (v2)
  {
    objc_msgSend(v2, sel_feedbackDraftViewController_didFailToStartWithError_, v0, 7);
    swift_unknownObjectRelease();
  }
}

id sub_22DDBF1B4()
{
  return sub_22DDC03B4((uint64_t (*)(_QWORD))type metadata accessor for FBK_EXHostViewControllerDelegateWrapper);
}

uint64_t sub_22DDBF1D0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v6 = sub_22DE1F1B4();
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_22DE1F1D8();
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v12 = (void *)sub_22DE1F574();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a2;
  v13[3] = a3;
  v13[4] = a1;
  aBlock[4] = sub_22DDC152C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = &block_descriptor_78;
  v14 = _Block_copy(aBlock);
  v15 = a1;
  swift_unknownObjectRetain();
  v16 = a3;
  swift_release();
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD78E08();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD78E50();
  sub_22DE1F67C();
  MEMORY[0x22E31FDFC](0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v18);
}

uint64_t sub_22DDBF3C8(void *a1, char *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unsigned __int8 *v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  const void *v21;
  id v22;
  char *v23;
  const void *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  void *v30;
  uint64_t v32;
  uint64_t aBlock;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  void *v36;
  void (*v37)();
  uint64_t v38;

  v6 = sub_22DE1F1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22DE1F1D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (unsigned __int8 *)&a2[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_showsCompletionPage];
  swift_beginAccess();
  objc_msgSend(a1, sel_setShowsCompletionPage_, *v14);
  if (a3)
  {
    sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
    v15 = a3;
    v16 = (void *)sub_22DE1F574();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = a2;
    *(_QWORD *)(v17 + 24) = v15;
    v37 = sub_22DDC1540;
    v38 = v17;
    aBlock = MEMORY[0x24BDAC760];
    v34 = 1107296256;
    v35 = sub_22DD9C498;
    v36 = &block_descriptor_88;
    v18 = _Block_copy(&aBlock);
    v32 = v11;
    v19 = v10;
    v20 = v7;
    v21 = v18;
    v22 = v15;
    v23 = a2;
    swift_release();
    sub_22DE1F1CC();
    aBlock = MEMORY[0x24BEE4AF8];
    sub_22DD78E08();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
    sub_22DD78E50();
    sub_22DE1F67C();
    MEMORY[0x22E31FDFC](0, v13, v9, v21);
    v24 = v21;
    v7 = v20;
    v10 = v19;
    v11 = v32;
    _Block_release(v24);

  }
  else
  {
    if (qword_255DB5310 != -1)
      swift_once();
    v25 = sub_22DE1E410();
    __swift_project_value_buffer(v25, (uint64_t)qword_255DB8520);
    v26 = sub_22DE1E3F8();
    v27 = sub_22DE1F514();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_22DD4B000, v26, v27, "Feedback form was set, and draft start successful.", v28, 2u);
      MEMORY[0x22E320870](v28, -1, -1);
    }

    sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
    v16 = (void *)sub_22DE1F574();
    v29 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v37 = sub_22DDC1538;
    v38 = v29;
    aBlock = MEMORY[0x24BDAC760];
    v34 = 1107296256;
    v35 = sub_22DD9C498;
    v36 = &block_descriptor_82_0;
    v30 = _Block_copy(&aBlock);
    swift_release();
    sub_22DE1F1CC();
    aBlock = MEMORY[0x24BEE4AF8];
    sub_22DD78E08();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
    sub_22DD78E50();
    sub_22DE1F67C();
    MEMORY[0x22E31FDFC](0, v13, v9, v30);
    _Block_release(v30);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_22DDBF7C4(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD v13[6];

  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = a2;
  v13[4] = a4;
  v13[5] = v10;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_22DD9C498;
  v13[3] = a5;
  v11 = _Block_copy(v13);
  v12 = a2;
  swift_release();
  objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, v11);
  _Block_release(v11);
}

void sub_22DDBF8A4(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x22E32090C](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = v4 + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_delegate;
    swift_beginAccess();
    v7 = MEMORY[0x22E32090C](v6);
    if (v7)
    {
      v8 = (void *)v7;
      v9 = sub_22DD9C050((unint64_t)objc_msgSend(a2, sel_integerValue));
      if ((v10 & 1) != 0)
        v11 = 0;
      else
        v11 = v9;
      objc_msgSend(v8, sel_feedbackDraftViewController_didFailToStartWithError_, v5, v11);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

void sub_22DDBF96C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x22E32090C](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = v2 + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_delegate;
    swift_beginAccess();
    v5 = (void *)MEMORY[0x22E32090C](v4);
    if (v5)
    {
      v6 = v5;
      if ((objc_msgSend(v5, sel_respondsToSelector_, sel_feedbackDraftViewControllerDidLoadForm_) & 1) != 0)
        objc_msgSend(v6, sel_feedbackDraftViewControllerDidLoadForm_, v3);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

void sub_22DDBFA28(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;

  v2 = OBJC_IVAR____TtC8FeedbackP33_EE21497D76FC0771846C2AC1D57947B534FBK_EXQueryObserverDelegateWrapper_hostViewController;
  if (!*(_QWORD *)(v1
                  + OBJC_IVAR____TtC8FeedbackP33_EE21497D76FC0771846C2AC1D57947B534FBK_EXQueryObserverDelegateWrapper_hostViewController))
  {
    v4 = objc_msgSend(a1, sel_extensions);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB86D8);
    v5 = sub_22DE1F3D0();

    v24 = v2;
    v25 = v1;
    v23 = a1;
    if (v5 >> 62)
      goto LABEL_24;
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v6; v6 = sub_22DE1F7D8())
    {
      v7 = 4;
      while (1)
      {
        v8 = v7 - 4;
        if ((v5 & 0xC000000000000001) == 0)
          break;
        v9 = (void *)MEMORY[0x22E31FFC4](v7 - 4, v5);
        v10 = v7 - 3;
        if (__OFADD__(v8, 1))
          goto LABEL_23;
LABEL_10:
        v11 = objc_msgSend(v9, sel_bundleIdentifier);
        v12 = sub_22DE1F2B0();
        v14 = v13;

        if (v12 == sub_22DE1F2B0() && v14 == v15)
        {
          swift_bridgeObjectRelease_n();
LABEL_22:
          swift_bridgeObjectRelease_n();
          sub_22DDBFD74((uint64_t)v9);
          objc_msgSend(v23, sel_suspend);
          swift_unknownObjectRelease();
          return;
        }
        v17 = sub_22DE1F8E0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v17 & 1) != 0)
          goto LABEL_22;
        swift_unknownObjectRelease();
        ++v7;
        if (v10 == v6)
          goto LABEL_16;
      }
      v9 = *(void **)(v5 + 8 * v7);
      swift_unknownObjectRetain();
      v10 = v7 - 3;
      if (!__OFADD__(v8, 1))
        goto LABEL_10;
LABEL_23:
      __break(1u);
LABEL_24:
      swift_bridgeObjectRetain();
    }
LABEL_16:
    swift_bridgeObjectRelease_n();
    if (qword_255DB5310 != -1)
      swift_once();
    v18 = sub_22DE1E410();
    __swift_project_value_buffer(v18, (uint64_t)qword_255DB8520);
    v19 = sub_22DE1E3F8();
    v20 = sub_22DE1F4FC();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_22DD4B000, v19, v20, "Failed to find drafting extension.", v21, 2u);
      MEMORY[0x22E320870](v21, -1, -1);
    }

    v22 = *(void **)(v25 + v24);
    *(_QWORD *)(v25 + v24) = 0;

  }
}

uint64_t sub_22DDBFD74(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD aBlock[6];

  v3 = sub_22DE1F1B4();
  v16 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22DE1F1D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v10 = (void *)sub_22DE1F574();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v1;
  *(_QWORD *)(v11 + 24) = a1;
  aBlock[4] = sub_22DDC0EFC;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = &block_descriptor_44;
  v12 = _Block_copy(aBlock);
  v13 = v1;
  swift_unknownObjectRetain();
  swift_release();
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD78E08();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD78E50();
  sub_22DE1F67C();
  MEMORY[0x22E31FDFC](0, v9, v5, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_22DDBFF60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  id v35;

  v4 = MEMORY[0x22E32090C](a1+ OBJC_IVAR____TtC8FeedbackP33_EE21497D76FC0771846C2AC1D57947B534FBK_EXQueryObserverDelegateWrapper_controller);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC7BB8]), sel_init);
    objc_msgSend(v6, sel_setExtension_, a2);
    v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC7BB0]), sel_initWithConfiguration_, v6);
    objc_msgSend(v35, sel_setDelegate_, *(_QWORD *)(a1+ OBJC_IVAR____TtC8FeedbackP33_EE21497D76FC0771846C2AC1D57947B534FBK_EXQueryObserverDelegateWrapper_extensionKitHostViewControllerDelegate));
    v7 = objc_msgSend(v35, sel_view);
    if (!v7)
    {

      goto LABEL_11;
    }
    v8 = v7;
    objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v9 = objc_msgSend(v5, sel_view);
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, sel_addSubview_, v8);

      __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7CA0);
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_22DE25190;
      v12 = objc_msgSend(v5, sel_view);
      if (v12)
      {
        v13 = v12;
        v14 = objc_msgSend(v12, sel_leadingAnchor);

        v15 = objc_msgSend(v8, sel_leadingAnchor);
        v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

        *(_QWORD *)(v11 + 32) = v16;
        v17 = objc_msgSend(v5, sel_view);
        if (v17)
        {
          v18 = v17;
          v19 = objc_msgSend(v17, sel_trailingAnchor);

          v20 = objc_msgSend(v8, sel_trailingAnchor);
          v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

          *(_QWORD *)(v11 + 40) = v21;
          v22 = objc_msgSend(v5, sel_view);
          if (v22)
          {
            v23 = v22;
            v24 = objc_msgSend(v22, sel_topAnchor);

            v25 = objc_msgSend(v8, sel_topAnchor);
            v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

            *(_QWORD *)(v11 + 48) = v26;
            v27 = objc_msgSend(v5, sel_view);
            if (v27)
            {
              v28 = v27;
              v29 = (void *)objc_opt_self();
              v30 = objc_msgSend(v28, sel_bottomAnchor);

              v31 = objc_msgSend(v8, sel_bottomAnchor);
              v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v31);

              *(_QWORD *)(v11 + 56) = v32;
              sub_22DE1F3E8();
              sub_22DD70E78(0, &qword_255DB86D0);
              v33 = (void *)sub_22DE1F3C4();
              swift_bridgeObjectRelease();
              objc_msgSend(v29, sel_activateConstraints_, v33);

              objc_msgSend(v5, sel_addChildViewController_, v35);
              v34 = *(void **)(a1
                             + OBJC_IVAR____TtC8FeedbackP33_EE21497D76FC0771846C2AC1D57947B534FBK_EXQueryObserverDelegateWrapper_hostViewController);
              *(_QWORD *)(a1
                        + OBJC_IVAR____TtC8FeedbackP33_EE21497D76FC0771846C2AC1D57947B534FBK_EXQueryObserverDelegateWrapper_hostViewController) = v35;

              v6 = v8;
              v35 = v34;
LABEL_11:

              return;
            }
            goto LABEL_16;
          }
LABEL_15:
          __break(1u);
LABEL_16:
          __break(1u);
          return;
        }
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_14;
  }
}

id sub_22DDC03A8()
{
  return sub_22DDC03B4((uint64_t (*)(_QWORD))type metadata accessor for FBK_EXQueryObserverDelegateWrapper);
}

id sub_22DDC03B4(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void sub_22DDC0434()
{
  _BYTE *v0;

  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_presentationDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_extensionObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_extensionKitQueryDelegate] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController__xpcConnection] = 0;
  v0[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_showsCompletionPage] = 1;

  sub_22DE1F7CC();
  __break(1u);
}

uint64_t _s8Feedback30FBKFeedbackDraftViewControllerC010didRequestD9Dismissal5savedySb_tF_0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t aBlock[6];

  v1 = v0;
  v2 = sub_22DE1F1B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22DE1F1D8();
  v23 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255DB5310 != -1)
    swift_once();
  v9 = sub_22DE1E410();
  __swift_project_value_buffer(v9, (uint64_t)qword_255DB8520);
  v10 = sub_22DE1E3F8();
  v11 = sub_22DE1F4F0();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v22 = v3;
    v14 = v13;
    aBlock[0] = v13;
    v21 = v8;
    *(_DWORD *)v12 = 136315138;
    v24 = sub_22DDA2E30(0xD00000000000001FLL, 0x800000022DE2B340, aBlock);
    v8 = v21;
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v10, v11, "%s", v12, 0xCu);
    swift_arrayDestroy();
    v15 = v14;
    v3 = v22;
    MEMORY[0x22E320870](v15, -1, -1);
    MEMORY[0x22E320870](v12, -1, -1);
  }

  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v16 = (void *)sub_22DE1F574();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v1;
  aBlock[4] = (uint64_t)sub_22DDC161C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_22DD9C498;
  aBlock[3] = (uint64_t)&block_descriptor_122;
  v18 = _Block_copy(aBlock);
  v19 = v1;
  swift_release();
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD78E08();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD78E50();
  sub_22DE1F67C();
  MEMORY[0x22E31FDFC](0, v8, v5, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v8, v6);
}

void sub_22DDC0838(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  NSObject *oslog;
  uint64_t v9;

  if (qword_255DB5310 != -1)
    swift_once();
  v4 = sub_22DE1E410();
  __swift_project_value_buffer(v4, (uint64_t)qword_255DB8520);
  oslog = sub_22DE1E3F8();
  v5 = sub_22DE1F4F0();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v9 = v7;
    *(_DWORD *)v6 = 136315138;
    sub_22DDA2E30(a1, a2, &v9);
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, oslog, v5, "%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v7, -1, -1);
    MEMORY[0x22E320870](v6, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_22DDC09C4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_22DDC09F8()
{
  uint64_t v0;

  sub_22DDBD98C(*(char **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

void sub_22DDC0A08()
{
  uint64_t v0;

  sub_22DDBF7C4(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_24F9931E0, (uint64_t)sub_22DDC15DC, (uint64_t)&block_descriptor_109);
}

uint64_t sub_22DDC0A38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_22DE1DFB4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_22DDC0AC8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_22DE1DFB4() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_22DDBE4C0(*(_QWORD *)(v0 + 16), v0 + v2, *(void **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_22DDC0B0C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_22DDC0B38()
{
  uint64_t v0;

  sub_22DDBF7C4(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_24F993190, (uint64_t)sub_22DDC1658, (uint64_t)&block_descriptor_102);
}

uint64_t sub_22DDC0B68()
{
  return objectdestroy_26Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_22DDC0B74(void *a1)
{
  uint64_t v1;

  return sub_22DDBF1D0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

id sub_22DDC0B7C@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_form);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_22DDC0BD0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_delegate;
  swift_beginAccess();
  result = MEMORY[0x22E32090C](v3);
  *a2 = result;
  return result;
}

uint64_t sub_22DDC0C24()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_22DDC0C78@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_presentationDelegate;
  swift_beginAccess();
  result = MEMORY[0x22E32090C](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_22DDC0CD0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_presentationDelegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_22DDC0D30@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_showsCompletionPage);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void *sub_22DDC0D80(unsigned __int8 *a1)
{
  return sub_22DDBCC10(*a1);
}

uint64_t method lookup function for FBKFeedbackDraftViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FBKFeedbackDraftViewController.form.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of FBKFeedbackDraftViewController.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of FBKFeedbackDraftViewController.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of FBKFeedbackDraftViewController.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of FBKFeedbackDraftViewController.presentationDelegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of FBKFeedbackDraftViewController.presentationDelegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of FBKFeedbackDraftViewController.presentationDelegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of FBKFeedbackDraftViewController.__allocating_init(feedbackForm:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 312))();
}

uint64_t dispatch thunk of FBKFeedbackDraftViewController.showsCompletionPage.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of FBKFeedbackDraftViewController.showsCompletionPage.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of FBKFeedbackDraftViewController.showsCompletionPage.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x158))();
}

uint64_t sub_22DDC0ED0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_22DDC0EFC()
{
  uint64_t v0;

  sub_22DDBFF60(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_22DDC0F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;

  v1 = v0;
  if (qword_255DB5310 != -1)
    swift_once();
  v2 = sub_22DE1E410();
  __swift_project_value_buffer(v2, (uint64_t)qword_255DB8520);
  v3 = sub_22DE1E3F8();
  v4 = sub_22DE1F4E4();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_22DD4B000, v3, v4, "hostViewController didBegingHosting", v5, 2u);
    MEMORY[0x22E320870](v5, -1, -1);
  }

  v6 = MEMORY[0x22E32090C](v1+ OBJC_IVAR____TtC8FeedbackP33_EE21497D76FC0771846C2AC1D57947B539FBK_EXHostViewControllerDelegateWrapper_controller);
  if (v6)
  {
    v7 = (id)v6;
    FBKFeedbackDraftViewController.didBeginHosting()();

  }
}

uint64_t sub_22DDC1014(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  const void *v27;
  id v28;
  char *v29;
  char *v30;
  void *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t aBlock[6];

  v2 = v1;
  v4 = sub_22DE1F1B4();
  v37 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v36 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22DE1F1D8();
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v33 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22DE1E410();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255DB5310 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v8, (uint64_t)qword_255DB8520);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  v13 = a1;
  v14 = a1;
  v15 = sub_22DE1E3F8();
  v16 = sub_22DE1F4FC();
  if (os_log_type_enabled(v15, v16))
  {
    v32 = v4;
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    aBlock[0] = v18;
    *(_DWORD *)v17 = 136315138;
    v31 = v1;
    if (a1)
    {
      swift_getErrorValue();
      v19 = sub_22DE1F928();
      v21 = v20;
    }
    else
    {
      v21 = 0xE600000000000000;
      v19 = 0x296C6C756E28;
    }
    v38 = sub_22DDA2E30(v19, v21, aBlock);
    sub_22DE1F628();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22DD4B000, v15, v16, "Failed to host view controller: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v18, -1, -1);
    MEMORY[0x22E320870](v17, -1, -1);

    result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v2 = v31;
    v4 = v32;
    if (a1)
      goto LABEL_10;
  }
  else
  {

    result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (a1)
    {
LABEL_10:
      sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
      v23 = (void *)sub_22DE1F574();
      v24 = swift_allocObject();
      *(_QWORD *)(v24 + 16) = v2;
      aBlock[4] = (uint64_t)sub_22DDC141C;
      aBlock[5] = v24;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_22DD9C498;
      aBlock[3] = (uint64_t)&block_descriptor_50;
      v25 = _Block_copy(aBlock);
      v26 = v2;
      v27 = v25;
      v28 = v26;
      swift_release();
      v29 = v33;
      sub_22DE1F1CC();
      aBlock[0] = MEMORY[0x24BEE4AF8];
      sub_22DD78E08();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
      sub_22DD78E50();
      v30 = v36;
      sub_22DE1F67C();
      MEMORY[0x22E31FDFC](0, v29, v30, v27);
      _Block_release(v27);

      (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v4);
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v29, v35);
    }
  }
  return result;
}

void sub_22DDC141C()
{
  uint64_t v0;

  sub_22DDBF018(*(_QWORD *)(v0 + 16));
}

uint64_t sub_22DDC1424()
{
  uint64_t v0;

  return sub_22DDBBDC4(*(_QWORD *)(v0 + 16), "XPC connection interrupted", (uint64_t)sub_22DDC14D0, (uint64_t)&block_descriptor_72_0);
}

uint64_t sub_22DDC1454()
{
  uint64_t v0;

  return sub_22DDBBDC4(*(_QWORD *)(v0 + 16), "XPC connection invalidated", (uint64_t)sub_22DDC14A8, (uint64_t)&block_descriptor_68);
}

uint64_t sub_22DDC1484()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_22DDC14A8()
{
  uint64_t v0;

  sub_22DDBC05C(v0, 0x800000022DE2B260);
}

void sub_22DDC14D0()
{
  uint64_t v0;

  sub_22DDBC05C(v0, 0x800000022DE2B280);
}

uint64_t sub_22DDC14F8()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_22DDC152C()
{
  uint64_t v0;

  return sub_22DDBF3C8(*(void **)(v0 + 16), *(char **)(v0 + 24), *(void **)(v0 + 32));
}

void sub_22DDC1538()
{
  uint64_t v0;

  sub_22DDBF96C(v0);
}

void sub_22DDC1540()
{
  uint64_t v0;

  sub_22DDBF7C4(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_24F993140, (uint64_t)sub_22DDC157C, (uint64_t)&block_descriptor_95);
}

uint64_t sub_22DDC1570()
{
  return objectdestroy_26Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_22DDC157C()
{
  uint64_t v0;

  sub_22DDBF8A4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_22DDC1594()
{
  return objectdestroy_26Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_22DDC15A0()
{
  return objectdestroy_26Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_26Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));

  return swift_deallocObject();
}

void sub_22DDC15DC()
{
  uint64_t v0;

  sub_22DDBDFE0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_22DDC15E4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_22DDC1610()
{
  uint64_t *v0;

  sub_22DDBDAC0(v0[2], v0[3], v0[4], v0[5]);
}

void sub_22DDC161C()
{
  uint64_t v0;

  sub_22DDBD3F8(*(void **)(v0 + 16));
}

void sub_22DDC1624()
{
  uint64_t v0;

  sub_22DDBD4AC(v0);
}

id sub_22DDC162C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setSelectedDetentIdentifier_, *MEMORY[0x24BEBE738]);
}

uint64_t sub_22DDC1648()
{
  return swift_deallocObject();
}

uint64_t sub_22DDC1728(uint64_t a1)
{
  uint64_t result;

  result = 0xD000000000000013;
  switch(a1)
  {
    case 0:
      result = 0x206E776F6E6B6E55;
      break;
    case 1:
      return result;
    case 2:
      result = 0xD000000000000015;
      break;
    case 3:
      result = 0xD000000000000022;
      break;
    case 4:
      result = 0x2064696C61766E49;
      break;
    case 5:
      result = 0x6F7774656E206F4ELL;
      break;
    case 6:
      result = 0x6E61432072657355;
      break;
    case 7:
      result = 0xD000000000000018;
      break;
    case 8:
      result = 0xD000000000000020;
      break;
    default:
      result = sub_22DE1F8F8();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_22DDC1864()
{
  uint64_t v0;

  v0 = sub_22DE1E410();
  __swift_allocate_value_buffer(v0, qword_255DB8700);
  __swift_project_value_buffer(v0, (uint64_t)qword_255DB8700);
  return sub_22DE1E404();
}

uint64_t sub_22DDC18E4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  char *v5;
  __int16 v6;
  char *v7;
  void *ObjCClassFromMetadata;
  void *v9;
  id v10;
  id v11;

  v2 = v1;
  *(_QWORD *)(v1 + 24) = 0;
  sub_22DE1E0C8();
  swift_allocObject();
  *(_QWORD *)(v1 + 32) = sub_22DE1E0BC();
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v1 + 80) = 0;
  *(_QWORD *)(v1 + 88) = 0;
  *(_QWORD *)(v1 + 16) = a1;
  v4 = a1;
  if (MEMORY[0x22E32027C]())
  {
    v5 = &v4[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_environment];
    swift_beginAccess();
    if ((v5[2] & 1) == 0)
    {
      v6 = *(_WORD *)v5;
      v7 = &v4[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_host];
      swift_beginAccess();
      if (*((_QWORD *)v7 + 1))
      {
        sub_22DD70E78(0, (unint64_t *)&qword_255DB8980);
        ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
        swift_bridgeObjectRetain();
        v9 = (void *)sub_22DE1F28C();
        swift_bridgeObjectRelease();
        objc_msgSend(ObjCClassFromMetadata, sel_overrideEnvironment_host_, v6, v9);

      }
    }
  }
  v10 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v11 = objc_msgSend(v10, sel_loginManager);

  if (v11)
  {
    swift_retain();
    objc_msgSend(v11, sel_setReAuthHandler_, v2);

    swift_release();
  }

  return v2;
}

uint64_t sub_22DDC1AA0(uint64_t a1, char a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_22DDC1B10(a1, a2 & 1);
    return swift_release();
  }
  return result;
}

void sub_22DDC1B10(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  _QWORD *v29;
  id v30;
  id v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  void (*v36)(_QWORD, uint64_t);
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  unint64_t v42;
  id v43;
  void *v44;
  void (*v45)(unsigned __int8 *);
  uint64_t KeyPath;
  uint64_t v47;
  int *v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  void (**v54)(unsigned __int8 *);
  uint64_t *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  void *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  id v76;
  char v77;
  id aBlock;
  uint64_t v79;
  uint64_t (*v80)(uint64_t);
  void *v81;
  void (*v82)();
  uint64_t v83;
  uint64_t v84;

  v3 = v2;
  v84 = *MEMORY[0x24BDAC8D0];
  v6 = sub_22DE1F1B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22DE1F1D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for AgreementConsentView();
  v15 = *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v17 = MEMORY[0x24BDAC7A8](v16);
  if ((a2 & 1) == 0)
  {
    v21 = *(void (**)(uint64_t, uint64_t))(v3 + 80);
    if (v21)
    {
      swift_retain();
      v21(a1, 1);
      sub_22DD50DE0((uint64_t)v21);
    }
    return;
  }
  v72 = (int *)v17;
  v73 = v20;
  v74 = v19;
  v75 = (uint64_t *)((char *)&v66 - v18);
  v76 = (id)objc_opt_self();
  v22 = objc_msgSend(v76, sel_sharedInstance);
  v23 = objc_msgSend(v22, sel_currentUser);

  if (v23)
  {
    v67 = v13;
    v68 = v11;
    v69 = v10;
    v70 = v9;
    if (qword_255DB5318 != -1)
      swift_once();
    v24 = sub_22DE1E410();
    __swift_project_value_buffer(v24, (uint64_t)qword_255DB8700);
    v25 = v23;
    v26 = sub_22DE1E3F8();
    v27 = sub_22DE1F514();
    if (os_log_type_enabled(v26, v27))
    {
      v71 = v7;
      v66 = v6;
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v28 = 138412290;
      v30 = objc_msgSend(v25, sel_ID);
      v31 = v30;
      if (v30)
        aBlock = v30;
      else
        aBlock = 0;
      sub_22DE1F628();
      *v29 = v31;

      _os_log_impl(&dword_22DD4B000, v26, v27, "Logged in as user %@", v28, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8160);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v29, -1, -1);
      MEMORY[0x22E320870](v28, -1, -1);

      v6 = v66;
      v7 = v71;
    }
    else
    {

    }
    v37 = v76;
    v38 = *(void **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = v23;
    v39 = v25;

    swift_retain_n();
    v40 = objc_msgSend(v37, sel_sharedInstance);
    v41 = objc_msgSend(v40, sel_pendingConsents);

    if (v41)
    {
      sub_22DD70E78(0, (unint64_t *)&qword_255DB5660);
      v42 = sub_22DE1F3D0();

      if (v42 >> 62)
      {
        swift_bridgeObjectRetain();
        v64 = sub_22DE1F7D8();
        swift_bridgeObjectRelease();
        if (v64)
          goto LABEL_22;
      }
      else if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_22:
        v71 = v7;
        v76 = v39;
        if ((v42 & 0xC000000000000001) != 0)
        {
          v43 = (id)MEMORY[0x22E31FFC4](0, v42);
        }
        else
        {
          if (!*(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10))
            __break(1u);
          v43 = *(id *)(v42 + 32);
        }
        v44 = v43;
        swift_bridgeObjectRelease();
        v45 = (void (*)(unsigned __int8 *))swift_allocObject();
        *((_QWORD *)v45 + 2) = v44;
        *((_QWORD *)v45 + 3) = v3;
        *((_QWORD *)v45 + 4) = sub_22DDC67C0;
        *((_QWORD *)v45 + 5) = v3;
        KeyPath = swift_getKeyPath();
        v47 = (uint64_t)v75;
        *v75 = KeyPath;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5670);
        swift_storeEnumTagMultiPayload();
        v48 = v72;
        v49 = (uint64_t *)(v47 + v72[5]);
        *v49 = swift_getKeyPath();
        __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5678);
        swift_storeEnumTagMultiPayload();
        v50 = v47 + v48[7];
        v77 = 0;
        v51 = v44;
        swift_retain_n();
        v52 = v51;
        sub_22DE1EFEC();
        v53 = v79;
        *(_BYTE *)v50 = (_BYTE)aBlock;
        *(_QWORD *)(v50 + 8) = v53;
        v54 = (void (**)(unsigned __int8 *))(v47 + v48[8]);
        v55 = (uint64_t *)(v47 + v48[6]);
        sub_22DDC6818();
        *v55 = sub_22DE1E6B0();
        v55[1] = v56;
        *v54 = sub_22DDC6800;
        v54[1] = v45;
        sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
        v57 = (void *)sub_22DE1F574();
        v58 = v74;
        sub_22DD542B0(v47, v74);
        v59 = (*(unsigned __int8 *)(v73 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
        v60 = swift_allocObject();
        sub_22DD542F8(v58, v60 + v59);
        *(_QWORD *)(v60 + ((v15 + v59 + 7) & 0xFFFFFFFFFFFFFFF8)) = v3;
        v82 = sub_22DDC69BC;
        v83 = v60;
        aBlock = (id)MEMORY[0x24BDAC760];
        v79 = 1107296256;
        v80 = sub_22DD9C498;
        v81 = &block_descriptor_46_0;
        v61 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        v62 = v67;
        sub_22DE1F1CC();
        aBlock = (id)MEMORY[0x24BEE4AF8];
        sub_22DD78E08();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
        sub_22DD78E50();
        v63 = v70;
        sub_22DE1F67C();
        MEMORY[0x22E31FDFC](0, v62, v63, v61);
        _Block_release(v61);

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v71 + 8))(v63, v6);
        (*(void (**)(char *, uint64_t))(v68 + 8))(v62, v69);
        sub_22DDC69FC(v47);
        return;
      }
      swift_bridgeObjectRelease();
    }
    v65 = swift_retain();
    sub_22DDC5DBC(v65, v3);
    swift_release_n();

    return;
  }
  if (qword_255DB5318 != -1)
    swift_once();
  v32 = sub_22DE1E410();
  __swift_project_value_buffer(v32, (uint64_t)qword_255DB8700);
  v33 = sub_22DE1E3F8();
  v34 = sub_22DE1F4FC();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v35 = 0;
    _os_log_impl(&dword_22DD4B000, v33, v34, "Failed to authenticate. No user", v35, 2u);
    MEMORY[0x22E320870](v35, -1, -1);
  }

  v36 = *(void (**)(_QWORD, uint64_t))(v3 + 80);
  if (v36)
  {
    swift_retain();
    v36(0, 1);
    sub_22DD50DE0((uint64_t)v36);
  }
}

void sub_22DDC2334(void *a1, char a2, uint64_t a3)
{
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(void *, uint64_t);
  void (*v22)(void *, _QWORD);
  uint64_t v23;

  if ((a2 & 1) != 0)
  {
    if (qword_255DB5318 != -1)
      swift_once();
    v14 = sub_22DE1E410();
    __swift_project_value_buffer(v14, (uint64_t)qword_255DB8700);
    v15 = sub_22DE1E3F8();
    v16 = sub_22DE1F4FC();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v23 = v18;
      *(_DWORD *)v17 = 136315138;
      v19 = sub_22DDC1728((uint64_t)a1);
      sub_22DDA2E30(v19, v20, &v23);
      sub_22DE1F628();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22DD4B000, v15, v16, "Failed to authenticate with error %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v18, -1, -1);
      MEMORY[0x22E320870](v17, -1, -1);
    }

    v21 = *(void (**)(void *, uint64_t))(a3 + 80);
    if (v21)
    {
      swift_retain();
      v21(a1, 1);
      sub_22DD50DE0((uint64_t)v21);
    }
  }
  else
  {
    v5 = qword_255DB5318;
    v6 = a1;
    if (v5 != -1)
      swift_once();
    v7 = sub_22DE1E410();
    __swift_project_value_buffer(v7, (uint64_t)qword_255DB8700);
    v8 = v6;
    v9 = sub_22DE1E3F8();
    v10 = sub_22DE1F514();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v11 = 138412290;
      v23 = (uint64_t)v8;
      v13 = v8;
      sub_22DE1F628();
      *v12 = a1;
      sub_22DDA47CC(a1, 0);
      sub_22DDA47CC(a1, 0);
      _os_log_impl(&dword_22DD4B000, v9, v10, "Loaded stub %@", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8160);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v12, -1, -1);
      MEMORY[0x22E320870](v11, -1, -1);
    }
    else
    {
      sub_22DDA47CC(a1, 0);
      sub_22DDA47CC(a1, 0);
    }

    v22 = *(void (**)(void *, _QWORD))(a3 + 80);
    if (v22)
    {
      sub_22DDC6AB0(a1, 0);
      sub_22DD50D8C((uint64_t)v22);
      v22(a1, 0);
      sub_22DDA47CC(a1, 0);
      sub_22DD50DE0((uint64_t)v22);
    }
    sub_22DDA47CC(a1, 0);
  }
}

void sub_22DDC26A4(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v9;
  id v10;
  uint64_t v11;
  void *v12;
  _QWORD v13[6];

  v9 = *a1;
  v10 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v9;
  *(_QWORD *)(v11 + 24) = a3;
  *(_QWORD *)(v11 + 32) = a4;
  *(_QWORD *)(v11 + 40) = a5;
  v13[4] = sub_22DDC6A64;
  v13[5] = v11;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_22DD9C498;
  v13[3] = &block_descriptor_52;
  v12 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_recordConsentResponseForConsent_response_completion_, a2, v9 ^ 1u, v12);
  _Block_release(v12);

}

void sub_22DDC27C0(char a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  void (*v4)(uint64_t, uint64_t);

  if ((a1 & 1) != 0)
  {
    v4 = *(void (**)(uint64_t, uint64_t))(a2 + 80);
    if (v4)
    {
      swift_retain();
      v4(8, 1);
      sub_22DD50DE0((uint64_t)v4);
    }
  }
  else
  {
    sub_22DDC2EE0(a3, a4);
  }
}

void sub_22DDC2824(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;

  v4 = type metadata accessor for AgreementConsentView();
  MEMORY[0x24BDAC7A8](v4);
  sub_22DD542B0(a1, (uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_255DB8978));
  v7 = (void *)sub_22DE1EA28();
  objc_msgSend(v7, sel_setModalPresentationStyle_, 2);
  objc_msgSend(v7, sel_setModalInPresentation_, 1);
  v8 = (void *)MEMORY[0x22E32090C](a2 + 72);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, sel_presentViewController_animated_completion_, v7, 1, 0);

  }
}

uint64_t sub_22DDC2904(uint64_t a1, void *a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_22DDC2994(a2, a3 & 1, a4 & 1, a5, a6);
    return swift_release();
  }
  return result;
}

void sub_22DDC2994(void *a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  id v20;
  uint8_t *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  char v28;
  id v29;

  v6 = v5;
  v11 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v12 = objc_msgSend(v11, sel_loginManager);
  if (v12)
  {
    v13 = v12;
    if (qword_255DB5318 != -1)
      swift_once();
    v14 = sub_22DE1E410();
    __swift_project_value_buffer(v14, (uint64_t)qword_255DB8700);
    v15 = a1;
    v16 = sub_22DE1E3F8();
    v17 = sub_22DE1F4F0();
    if (os_log_type_enabled(v16, v17))
    {
      v26 = v11;
      v18 = (uint8_t *)swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v18 = 138412290;
      v29 = v15;
      v25 = v6;
      v19 = a5;
      v20 = v15;
      sub_22DE1F628();
      *v24 = v15;

      a5 = v19;
      v6 = v25;
      _os_log_impl(&dword_22DD4B000, v16, v17, "Parent %@", v18, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8160);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v24, -1, -1);
      v21 = v18;
      v11 = v26;
      MEMORY[0x22E320870](v21, -1, -1);

    }
    else
    {

    }
    type metadata accessor for Authentication();
    v22 = (char *)(*(_QWORD *)(v6 + 16) + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_authenticationMethod);
    swift_beginAccess();
    v28 = *v22;
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = a4;
    *(_QWORD *)(v23 + 24) = a5;
    swift_retain();
    sub_22DDACD60(v15, v13, &v28, a2 & 1, a3 & 1, (uint64_t)sub_22DDC67B8, v23);
    swift_release();

  }
  else
  {
    sub_22DE1F7CC();
    __break(1u);
  }
}

uint64_t sub_22DDC2C94(int a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v21;

  v4 = sub_22DD97614(a2);
  if ((v5 & 1) != 0)
  {
    if (qword_255DB5318 != -1)
      swift_once();
    v16 = sub_22DE1E410();
    __swift_project_value_buffer(v16, (uint64_t)qword_255DB8700);
    v17 = sub_22DE1E3F8();
    v18 = sub_22DE1F514();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_22DD4B000, v17, v18, "Login complete", v19, 2u);
      MEMORY[0x22E320870](v19, -1, -1);
    }

    v14 = 0;
    v15 = 1;
  }
  else
  {
    v6 = v4;
    if (qword_255DB5318 != -1)
      swift_once();
    v7 = sub_22DE1E410();
    __swift_project_value_buffer(v7, (uint64_t)qword_255DB8700);
    v8 = sub_22DE1E3F8();
    v9 = sub_22DE1F4FC();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v21 = v11;
      *(_DWORD *)v10 = 136446210;
      v12 = sub_22DDC1728(v6);
      sub_22DDA2E30(v12, v13, &v21);
      sub_22DE1F628();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22DD4B000, v8, v9, "Error authenticating: %{public}s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v11, -1, -1);
      MEMORY[0x22E320870](v10, -1, -1);
    }

    v14 = v6;
    v15 = 0;
  }
  return a3(v14, v15);
}

void sub_22DDC2EE0(void (*a1)(uint64_t, uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  _QWORD aBlock[6];

  v5 = *(_QWORD *)(v2 + 16);
  v6 = (_QWORD *)(v5 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier);
  swift_beginAccess();
  v7 = v6[1];
  v8 = *v6 & 0xFFFFFFFFFFFFLL;
  if ((v7 & 0x2000000000000000) != 0)
    v8 = HIBYTE(v7) & 0xF;
  if (v8 || (v9 = v5 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_formId, swift_beginAccess(), *(_BYTE *)(v9 + 8) != 1))
  {
    v14 = v5 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_formId;
    swift_beginAccess();
    v15 = 0;
    if ((*(_BYTE *)(v14 + 8) & 1) == 0)
      v15 = (void *)sub_22DE1F61C();
    v16 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    swift_bridgeObjectRetain();
    v17 = (void *)sub_22DE1F28C();
    swift_bridgeObjectRelease();
    v18 = swift_allocObject();
    swift_weakInit();
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = v18;
    v19[3] = a1;
    v19[4] = a2;
    aBlock[4] = sub_22DDC6788;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DD9CDA8;
    aBlock[3] = &block_descriptor_31;
    v20 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v16, sel_feedbackFrameworkLoadDataWithFormTat_orFormID_completion_, v17, v15, v20);
    _Block_release(v20);

  }
  else
  {
    if (qword_255DB5318 != -1)
      swift_once();
    v10 = sub_22DE1E410();
    __swift_project_value_buffer(v10, (uint64_t)qword_255DB8700);
    v11 = sub_22DE1E3F8();
    v12 = sub_22DE1F514();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_22DD4B000, v11, v12, "FeedbackForm is misconfigured. Cannot load Form", v13, 2u);
      MEMORY[0x22E320870](v13, -1, -1);
    }

    a1(4, 1);
  }
}

void sub_22DDC3194(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  uint64_t Strong;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v7 = *(id *)(v5 + 16);
    sub_22DDF868C();
    v9 = v8;

    v10 = *(void **)(v5 + 24);
    *(_QWORD *)(v5 + 24) = v9;

    v11 = *(void **)(v5 + 24);
    if (v11)
    {
      v12 = v11;
      a3(v11, 0);
      swift_release();

    }
    else
    {
      a3((void *)1, 1);
      swift_release();
    }
  }
}

uint64_t sub_22DDC3288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5878);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22DE1F46C();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_22DD5071C((uint64_t)v4, &qword_255DB5878);
    v9 = 0;
    v10 = 0;
  }
  else
  {
    sub_22DE1F460();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_22DE1F418();
      v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      v9 = 0;
      v10 = 0;
    }
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = &unk_255DB8958;
  *(_QWORD *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_22DDC345C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_22DDC3474()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  unsigned __int8 v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v2 = objc_msgSend(v1, sel_loginManager);
  v0[3] = v2;

  if (!v2)
    return sub_22DE1F7CC();
  v3 = v0[2];
  v4 = MEMORY[0x22E32090C](v3 + 72);
  v0[4] = v4;
  type metadata accessor for Authentication();
  v5 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v6 = sub_22DDD5FE0();

  v7 = swift_allocObject();
  v0[5] = v7;
  *(_QWORD *)(v7 + 16) = v3;
  *(_QWORD *)(v7 + 24) = v2;
  swift_retain();
  v8 = v2;
  v9 = (_QWORD *)swift_task_alloc();
  v0[6] = v9;
  *v9 = v0;
  v9[1] = sub_22DDC3620;
  return sub_22DDAD838(v4, (uint64_t)v8, 0, v6 & 1, (uint64_t)sub_22DDC65F0, v7);
}

uint64_t sub_22DDC3620(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;

  v3 = *(void **)(*(_QWORD *)v2 + 32);
  *(_QWORD *)(*(_QWORD *)v2 + 56) = a2;
  swift_task_dealloc();

  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DDC3684()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  char v5;
  char v6;

  v1 = *(void **)(v0 + 56);
  v2 = *(void **)(v0 + 24);
  v3 = v1;
  v4 = sub_22DD97614((uint64_t)v1);
  v6 = v5 & 1;

  sub_22DDC1B10(v4, v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_22DDC36FC(uint64_t a1, uint64_t a2, _QWORD *a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id result;
  void *v12;
  id v13;
  unint64_t v14;
  unint64_t *v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  BOOL v36;
  _BOOL4 v38;
  _BOOL4 v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  id v55;
  _QWORD *v56;
  uint64_t v57;
  char *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  unint64_t v65;
  int64_t v66;
  _BOOL4 v67;
  _QWORD *v68;
  uint64_t v69[2];
  _WORD v70[8];

  v59 = a4;
  v60 = a2;
  v57 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5878);
  MEMORY[0x24BDAC7A8](v5);
  v58 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)a3[7];
  if (v7)
  {
    v8 = (void *)a3[6];
    if (v8)
    {
      strcpy((char *)v70, "StashedFiles-");
      v70[7] = -4864;
      v9 = v7;
      v10 = v8;
      result = objc_msgSend(v10, sel_ID);
      if (!result)
        goto LABEL_65;
      v12 = result;
      v13 = objc_msgSend(result, sel_stringValue);

      sub_22DE1F2B0();
      sub_22DE1F328();
      swift_bridgeObjectRelease();
      v14 = sub_22DDC3C78();
      swift_bridgeObjectRelease();
      if (v14)
      {
        v15 = (unint64_t *)(a3[2] + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_attachments);
        swift_beginAccess();
        *v15 = v14;
        swift_bridgeObjectRelease();
      }

    }
  }
  v16 = (void *)a3[8];
  if (!v16)
  {
LABEL_62:
    v48 = sub_22DE1F46C();
    v49 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v58, 1, 1, v48);
    v50 = (_QWORD *)swift_allocObject();
    v50[2] = 0;
    v50[3] = 0;
    v52 = v59;
    v51 = v60;
    v50[4] = a3;
    v50[5] = v52;
    v50[6] = v57;
    v50[7] = v51;
    swift_retain();
    v53 = v52;
    swift_retain();
    sub_22DD54C94(v49, (uint64_t)&unk_255DB8968, (uint64_t)v50);
    return (id)swift_release();
  }
  v56 = a3;
  v17 = (_QWORD *)a3[2];
  v55 = v16;
  v18 = sub_22DDA78F4(v17);
  v68 = v17;
  v19 = (_QWORD *)((char *)v17 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_answers);
  swift_beginAccess();
  *v19 = MEMORY[0x24BEE4B00];
  result = (id)swift_bridgeObjectRelease();
  v20 = 0;
  v21 = *(_QWORD *)(v18 + 64);
  v61 = v18;
  v62 = v18 + 64;
  v22 = 1 << *(_BYTE *)(v18 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v63 = (unint64_t)(v22 + 63) >> 6;
  while (v24)
  {
    v25 = __clz(__rbit64(v24));
    v24 &= v24 - 1;
    v26 = v25 | (v20 << 6);
LABEL_28:
    v30 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v26);
    v31 = *(_QWORD *)(v30 + 16);
    if (v31)
    {
      v65 = v24;
      v66 = v20;
      v32 = (uint64_t *)(*(_QWORD *)(v18 + 48) + 16 * v26);
      v34 = *v32;
      v33 = v32[1];
      v36 = *v32 == 0x656C7469743ALL && v33 == 0xE600000000000000;
      v38 = v34 == 0x616572613ALL && v33 == 0xE500000000000000;
      v40 = v34 == 0x706972637365643ALL && v33 == 0xEC0000006E6F6974;
      v67 = v40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v64 = v30;
      v41 = (uint64_t *)(v30 + 40);
      do
      {
        v45 = *(v41 - 1);
        v44 = *v41;
        if (v36)
        {
          v42 = 0;
          v43 = 0;
        }
        else
        {
          v46 = sub_22DE1F8E0();
          if (((v46 | v38) & 1) != 0)
          {
            v42 = 0;
            v43 = ~v46 & 1;
          }
          else
          {
            v47 = sub_22DE1F8E0();
            if ((v47 & 1) != 0)
              v43 = 1;
            else
              v43 = 2;
            if (((v47 | v67) & 1) != 0)
            {
              v42 = 0;
            }
            else if ((sub_22DE1F8E0() & 1) != 0)
            {
              v42 = 0;
              v43 = 2;
            }
            else
            {
              swift_bridgeObjectRetain();
              v42 = v34;
              v43 = v33;
            }
          }
        }
        v41 += 2;
        v69[0] = v42;
        v69[1] = v43;
        swift_bridgeObjectRetain();
        sub_22DE0898C(v69, v45, v44);
        swift_bridgeObjectRelease();
        sub_22DDA40E0(v42, v43);
        --v31;
      }
      while (v31);
      swift_bridgeObjectRelease();
      result = (id)swift_bridgeObjectRelease();
      v18 = v61;
      v24 = v65;
      v20 = v66;
    }
  }
  v27 = v20 + 1;
  if (__OFADD__(v20, 1))
  {
    __break(1u);
    goto LABEL_64;
  }
  if (v27 >= v63)
    goto LABEL_61;
  v28 = *(_QWORD *)(v62 + 8 * v27);
  ++v20;
  if (v28)
    goto LABEL_27;
  v20 = v27 + 1;
  if (v27 + 1 >= v63)
    goto LABEL_61;
  v28 = *(_QWORD *)(v62 + 8 * v20);
  if (v28)
    goto LABEL_27;
  v20 = v27 + 2;
  if (v27 + 2 >= v63)
    goto LABEL_61;
  v28 = *(_QWORD *)(v62 + 8 * v20);
  if (v28)
  {
LABEL_27:
    v24 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v20 << 6);
    goto LABEL_28;
  }
  v29 = v27 + 3;
  if (v29 >= v63)
  {
LABEL_61:
    swift_release();

    a3 = v56;
    goto LABEL_62;
  }
  v28 = *(_QWORD *)(v62 + 8 * v29);
  if (v28)
  {
    v20 = v29;
    goto LABEL_27;
  }
  while (1)
  {
    v20 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v20 >= v63)
      goto LABEL_61;
    v28 = *(_QWORD *)(v62 + 8 * v20);
    ++v29;
    if (v28)
      goto LABEL_27;
  }
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

unint64_t sub_22DDC3C78()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  id v23;
  id v24;
  unsigned __int8 v25;
  __int128 v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  void (*v39)(char *, char *, uint64_t);
  id v40;
  void *v41;
  void *v42;
  char *v43;
  unsigned int v44;
  id v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  _BOOL4 v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  id v61;
  void *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  char *v66;
  char *v67;
  id v68;
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  int v72;
  _BOOL4 v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  os_log_t v83;
  void *v84;
  void (*v85)(char *, uint64_t);
  id v86;
  uint64_t v87;
  id v88;
  id v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  char *v93;
  void *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  _QWORD v99[2];
  __int128 v100;
  uint64_t *v101;
  int v102;
  os_log_t v103;
  void *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  __int128 v109;
  char *v110;
  id v111;
  char *v112;
  void (*v113)(char *, uint64_t);
  unint64_t v114;
  char *v115;
  char *v116;
  unint64_t v117;
  uint64_t v118;
  char *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  id v123[2];

  v123[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB7BC0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v99 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_22DE1DFB4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v99 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v112 = (char *)v99 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v115 = (char *)v99 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v116 = (char *)v99 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v99 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v99 - v20;
  v120 = sub_22DE1F5B0();
  if (!v120)
    return 0;
  type metadata accessor for FBKFeedbackForm();
  sub_22DE1BC44((uint64_t)v19);
  sub_22DE1DF48();
  v22 = *(void (**)(char *, uint64_t))(v4 + 8);
  v119 = v19;
  v113 = v22;
  v22(v19, v3);
  v111 = (id)objc_opt_self();
  v23 = objc_msgSend(v111, sel_defaultManager);
  sub_22DE1DF90();
  v24 = (id)sub_22DE1F28C();
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v23, sel_fileExistsAtPath_, v24);

  if ((v25 & 1) == 0)
  {
    v27 = objc_msgSend(v111, sel_defaultManager);
    v28 = (void *)sub_22DE1DF3C();
    v123[0] = 0;
    v24 = objc_msgSend(v27, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v28, 1, 0, v123);

    if (!(_DWORD)v24)
    {
      v86 = v123[0];
      swift_bridgeObjectRelease();
      v24 = (id)sub_22DE1DEE8();

      swift_willThrow();
      if (qword_255DB5318 == -1)
      {
LABEL_35:
        v87 = sub_22DE1E410();
        __swift_project_value_buffer(v87, (uint64_t)qword_255DB8700);
        v88 = v24;
        v89 = v24;
        v90 = sub_22DE1E3F8();
        v91 = sub_22DE1F4FC();
        if (os_log_type_enabled(v90, v91))
        {
          v92 = (uint8_t *)swift_slowAlloc();
          v93 = v21;
          v94 = (void *)swift_slowAlloc();
          v123[0] = v94;
          *(_DWORD *)v92 = 136446210;
          swift_getErrorValue();
          v95 = sub_22DE1F928();
          v121 = sub_22DDA2E30(v95, v96, (uint64_t *)v123);
          sub_22DE1F628();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_22DD4B000, v90, v91, "Stashing files failed: %{public}s", v92, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x22E320870](v94, -1, -1);
          MEMORY[0x22E320870](v92, -1, -1);

          v97 = v93;
        }
        else
        {

          v97 = v21;
        }
        v113(v97, v3);
        return MEMORY[0x24BEE4AF8];
      }
LABEL_44:
      swift_once();
      goto LABEL_35;
    }
    v29 = v123[0];
  }
  v110 = v21;
  if (v120 >> 62)
  {
    swift_bridgeObjectRetain();
    v30 = sub_22DE1F7D8();
    swift_bridgeObjectRelease();
    v31 = v119;
    if (v30)
      goto LABEL_7;
  }
  else
  {
    v30 = *(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v31 = v119;
    if (v30)
    {
LABEL_7:
      if (v30 >= 1)
      {
        v32 = 0;
        v117 = v120 & 0xC000000000000001;
        v101 = &v122;
        v114 = MEMORY[0x24BEE4AF8];
        *(_QWORD *)&v26 = 138412290;
        v109 = v26;
        *(_QWORD *)&v26 = 136446722;
        v100 = v26;
        v99[1] = MEMORY[0x24BEE4AD8] + 8;
        v108 = v7;
        v106 = v10;
        v34 = v115;
        v33 = v116;
        v105 = v4;
        v107 = v2;
        v118 = v30;
        while (1)
        {
          v35 = v117 ? (id)MEMORY[0x22E31FFC4](v32, v120) : *(id *)(v120 + 8 * v32 + 32);
          v36 = v35;
          v37 = objc_msgSend(v35, sel_fileURL);
          if (!v37)
            break;
          v38 = v37;
          sub_22DE1DF84();

          v39 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
          v39(v2, v31, v3);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
            goto LABEL_23;
          v39(v33, v2, v3);
          sub_22DE1DF30();
          sub_22DE1DF48();
          swift_bridgeObjectRelease();
          v40 = objc_msgSend(v111, sel_defaultManager);
          v41 = (void *)sub_22DE1DF3C();
          v42 = (void *)sub_22DE1DF3C();
          v123[0] = 0;
          v43 = v34;
          v44 = objc_msgSend(v40, sel_copyItemAtURL_toURL_error_, v41, v42, v123);

          v45 = v123[0];
          if (v44)
          {
            (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v112, v43, v3);
            v46 = v45;
            v34 = v43;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v114 = sub_22DDFCD2C(0, *(_QWORD *)(v114 + 16) + 1, 1, v114);
            v2 = v107;
            v33 = v116;
            v48 = *(_QWORD *)(v114 + 16);
            v47 = *(_QWORD *)(v114 + 24);
            if (v48 >= v47 >> 1)
              v114 = sub_22DDFCD2C(v47 > 1, v48 + 1, 1, v114);
            v49 = v114;
            *(_QWORD *)(v114 + 16) = v48 + 1;
            v39((char *)(v49+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v48), v112, v3);

            v50 = v113;
            v113(v34, v3);
            v50(v33, v3);
          }
          else
          {
            v61 = v123[0];
            v62 = (void *)sub_22DE1DEE8();

            swift_willThrow();
            v63 = v108;
            if (qword_255DB5318 != -1)
              swift_once();
            v64 = sub_22DE1E410();
            __swift_project_value_buffer(v64, (uint64_t)qword_255DB8700);
            v65 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
            v66 = v106;
            v67 = v116;
            v65(v106, v116, v3);
            v65(v63, v115, v3);
            v68 = v62;
            v69 = v62;
            v70 = sub_22DE1E3F8();
            v71 = sub_22DE1F4FC();
            v72 = v71;
            v73 = os_log_type_enabled(v70, v71);
            v2 = v107;
            if (v73)
            {
              v74 = swift_slowAlloc();
              v104 = (void *)swift_slowAlloc();
              v123[0] = v104;
              *(_DWORD *)v74 = v100;
              v103 = v70;
              v75 = sub_22DE1DF90();
              v121 = sub_22DDA2E30(v75, v76, (uint64_t *)v123);
              v102 = v72;
              sub_22DE1F628();
              swift_bridgeObjectRelease();
              v77 = v66;
              v78 = v113;
              v113(v77, v3);
              *(_WORD *)(v74 + 12) = 2082;
              v79 = sub_22DE1DF90();
              v121 = sub_22DDA2E30(v79, v80, (uint64_t *)v123);
              sub_22DE1F628();
              swift_bridgeObjectRelease();
              v78(v108, v3);
              *(_WORD *)(v74 + 22) = 2082;
              swift_getErrorValue();
              v81 = sub_22DE1F928();
              v121 = sub_22DDA2E30(v81, v82, (uint64_t *)v123);
              sub_22DE1F628();
              swift_bridgeObjectRelease();

              v83 = v103;
              _os_log_impl(&dword_22DD4B000, v103, (os_log_type_t)v102, "Failed to stash file from %{public}s to %{public}s: %{public}s", (uint8_t *)v74, 0x20u);
              v84 = v104;
              swift_arrayDestroy();
              MEMORY[0x22E320870](v84, -1, -1);
              MEMORY[0x22E320870](v74, -1, -1);

              v34 = v115;
              v78(v115, v3);
              v33 = v116;
              v78(v116, v3);
              v4 = v105;
            }
            else
            {

              v85 = v113;
              v113(v63, v3);
              v85(v66, v3);

              v34 = v115;
              v85(v115, v3);
              v85(v67, v3);
              v4 = v105;
              v33 = v67;
            }
          }
          v56 = v118;
LABEL_10:
          ++v32;
          v31 = v119;
          if (v56 == v32)
            goto LABEL_41;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
LABEL_23:
        sub_22DD5071C((uint64_t)v2, (uint64_t *)&unk_255DB7BC0);
        if (qword_255DB5318 != -1)
          swift_once();
        v51 = sub_22DE1E410();
        __swift_project_value_buffer(v51, (uint64_t)qword_255DB8700);
        v52 = v36;
        v53 = sub_22DE1E3F8();
        v54 = sub_22DE1F4FC();
        v55 = os_log_type_enabled(v53, v54);
        v56 = v118;
        if (v55)
        {
          v57 = swift_slowAlloc();
          v58 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v57 = v109;
          *(_QWORD *)(v57 + 4) = v52;
          *v58 = v52;
          _os_log_impl(&dword_22DD4B000, v53, v54, "Cannot stash attachment %@", (uint8_t *)v57, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8160);
          swift_arrayDestroy();
          v59 = v58;
          v34 = v115;
          MEMORY[0x22E320870](v59, -1, -1);
          v60 = v57;
          v33 = v116;
          MEMORY[0x22E320870](v60, -1, -1);

        }
        else
        {

        }
        goto LABEL_10;
      }
      __break(1u);
      goto LABEL_44;
    }
  }
  v114 = MEMORY[0x24BEE4AF8];
LABEL_41:
  swift_bridgeObjectRelease();
  v113(v110, v3);
  return v114;
}

uint64_t sub_22DDC48D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch();
}

uint64_t sub_22DDC48F0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v3;

  v1 = MEMORY[0x22E32090C](v0[2] + 72);
  v0[6] = v1;
  if (v1)
  {
    sub_22DE1F448();
    v0[7] = sub_22DE1F43C();
    sub_22DE1F418();
    return swift_task_switch();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    v0[8] = v3;
    *v3 = v0;
    v3[1] = sub_22DDC49F8;
    return sub_22DDC4C4C();
  }
}

uint64_t sub_22DDC49A0()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;

  v1 = *(void **)(v0 + 48);
  swift_release();
  DraftingExtensionViewController.prepareUIForLogOut()();

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  *v2 = v0;
  v2[1] = sub_22DDC49F8;
  return sub_22DDC4C4C();
}

uint64_t sub_22DDC49F8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)*v0;
  swift_task_dealloc();
  v1[9] = sub_22DE1F448();
  v1[10] = sub_22DE1F43C();
  v1[11] = sub_22DE1F418();
  v1[12] = v2;
  return swift_task_switch();
}

uint64_t sub_22DDC4A88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  v0[13] = sub_22DE1F43C();
  v2 = swift_task_alloc();
  v0[14] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[15] = v3;
  *v3 = v0;
  v3[1] = sub_22DDC4B3C;
  return sub_22DE1F8D4();
}

uint64_t sub_22DDC4B3C()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DDC4BA4()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22DDC4BE0()
{
  uint64_t v0;
  void (*v1)(void);
  _QWORD *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = *(void (**)(void))(v0 + 32);
  v2 = *(_QWORD **)(v0 + 16);
  v3 = (void *)v2[3];
  v2[3] = 0;

  v4 = (void *)v2[5];
  v2[5] = 0;

  v5 = (void *)v2[6];
  v2[6] = 0;

  v6 = (void *)v2[7];
  v2[7] = 0;

  v1();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DDC4C4C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[19] = v0;
  sub_22DE1F448();
  v1[20] = sub_22DE1F43C();
  v1[21] = sub_22DE1F418();
  v1[22] = v2;
  return swift_task_switch();
}

id sub_22DDC4CB8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id result;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(void **)(v1 + 48);
  *(_QWORD *)(v0 + 184) = v2;
  if (v2)
  {
    v3 = *(void **)(v1 + 56);
    v4 = v2;
    objc_msgSend(v3, sel_abortAllSessions);
    v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    *(_QWORD *)(v0 + 192) = v5;
    result = objc_msgSend(v4, sel_contentItem);
    *(_QWORD *)(v0 + 200) = result;
    if (result)
    {
      v7 = result;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_22DDC4E94;
      v8 = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
      v9 = (_QWORD *)(v0 + 80);
      v9[1] = 0x40000000;
      v9[2] = sub_22DDC5210;
      v9[3] = &block_descriptor_5;
      v9[4] = v8;
      objc_msgSend(v5, sel_deleteDraftFromContentItem_completion_, v7, v9);
      return (id)swift_continuation_await();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_release();
    if (qword_255DB5318 != -1)
      swift_once();
    v10 = sub_22DE1E410();
    __swift_project_value_buffer(v10, (uint64_t)qword_255DB8700);
    v11 = sub_22DE1E3F8();
    v12 = sub_22DE1F514();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_22DD4B000, v11, v12, "No form response to delete, exiting early.", v13, 2u);
      MEMORY[0x22E320870](v13, -1, -1);
    }

    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_22DDC4E94()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 208) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_22DDC4EF0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  NSObject *v7;
  uint8_t *v8;

  v1 = *(void **)(v0 + 192);
  v2 = *(void **)(v0 + 200);
  swift_release();

  if (qword_255DB5318 != -1)
    swift_once();
  v3 = sub_22DE1E410();
  __swift_project_value_buffer(v3, (uint64_t)qword_255DB8700);
  v4 = sub_22DE1E3F8();
  v5 = sub_22DE1F514();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(NSObject **)(v0 + 184);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_22DD4B000, v4, v5, "Deleted draft.", v8, 2u);
    MEMORY[0x22E320870](v8, -1, -1);

  }
  else
  {

    v4 = v7;
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DDC4FF4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void *v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v16;
  uint64_t v17;

  v1 = *(void **)(v0 + 200);
  v2 = *(void **)(v0 + 192);
  swift_release();
  swift_willThrow();

  if (qword_255DB5318 != -1)
    swift_once();
  v3 = *(void **)(v0 + 208);
  v4 = sub_22DE1E410();
  __swift_project_value_buffer(v4, (uint64_t)qword_255DB8700);
  v5 = v3;
  v6 = v3;
  v7 = sub_22DE1E3F8();
  v8 = sub_22DE1F4FC();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(void **)(v0 + 208);
  if (v9)
  {
    v16 = *(void **)(v0 + 184);
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v17 = v12;
    *(_DWORD *)v11 = 136446210;
    swift_getErrorValue();
    v13 = sub_22DE1F928();
    *(_QWORD *)(v0 + 80) = sub_22DDA2E30(v13, v14, &v17);
    sub_22DE1F628();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22DD4B000, v7, v8, "Encountered error deleting draft: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v12, -1, -1);
    MEMORY[0x22E320870](v11, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DDC5210(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;

  if (!a2)
    return swift_continuation_throwingResume();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7A58);
  swift_allocError();
  *v3 = a2;
  v4 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_22DDC5284()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectWeakDestroy();
  sub_22DD50DE0(*(_QWORD *)(v0 + 80));
  return v0;
}

uint64_t sub_22DDC52E0()
{
  sub_22DDC5284();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FeedbackSession()
{
  return objc_opt_self();
}

void sub_22DDC5320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  unsigned __int8 v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  uint64_t v32;

  v1 = v0;
  if (qword_255DB5318 != -1)
    swift_once();
  v2 = sub_22DE1E410();
  __swift_project_value_buffer(v2, (uint64_t)qword_255DB8700);
  v3 = sub_22DE1E3F8();
  v4 = sub_22DE1F514();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v32 = v6;
    *(_DWORD *)v5 = 136315138;
    sub_22DDA2E30(0xD00000000000001ALL, 0x800000022DE2B420, &v32);
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v3, v4, "%s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v6, -1, -1);
    MEMORY[0x22E320870](v5, -1, -1);
  }

  v7 = MEMORY[0x22E32090C](v0 + 72);
  if (!v7)
  {
    v23 = sub_22DE1E3F8();
    v24 = sub_22DE1F508();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v32 = v26;
      *(_DWORD *)v25 = 136315138;
      sub_22DDA2E30(0xD00000000000001ALL, 0x800000022DE2B420, &v32);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v23, v24, "Presenter is nil, cannot continue with %s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v26, -1, -1);
      MEMORY[0x22E320870](v25, -1, -1);
    }
    goto LABEL_18;
  }
  v8 = (void *)v7;
  v9 = *(void **)(v0 + 40);
  if (!v9)
  {
    v23 = sub_22DE1E3F8();
    v27 = sub_22DE1F508();
    if (!os_log_type_enabled(v23, v27))
    {

      return;
    }
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v32 = v29;
    *(_DWORD *)v28 = 136315138;
    sub_22DDA2E30(0xD00000000000001ALL, 0x800000022DE2B420, &v32);
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v23, v27, "User is nil, cannot continue with %s", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v29, -1, -1);
    MEMORY[0x22E320870](v28, -1, -1);

LABEL_18:
    return;
  }
  v10 = (void *)objc_opt_self();
  v11 = v9;
  v12 = objc_msgSend(v10, sel_sharedInstance);
  v13 = objc_msgSend(v12, sel_loginManager);

  if (v13)
  {
    type metadata accessor for Authentication();
    v14 = (void *)objc_opt_self();
    v15 = v8;
    v16 = objc_msgSend(v14, sel_standardUserDefaults);
    sub_22DDD5EC8();

    v17 = objc_msgSend(v14, sel_standardUserDefaults);
    v18 = sub_22DDD5FE0();

    swift_retain_n();
    if (objc_msgSend(v11, sel_isUnauthenticatedUser))
    {
      if (qword_255DB5300 != -1)
        swift_once();
      __swift_project_value_buffer(v2, (uint64_t)qword_255DB8100);
      v19 = sub_22DE1E3F8();
      v20 = sub_22DE1F514();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_22DD4B000, v19, v20, "Cannot recover from invalid session with unauthenticated user", v21, 2u);
        MEMORY[0x22E320870](v21, -1, -1);
      }

      v22 = (id)FBKErrorOfType();
      sub_22DDC5990((uint64_t)v22, v1);
      swift_release_n();

    }
    else if ((sub_22DDB1868(v18 & 1) & 1) != 0)
    {
      v30 = (_QWORD *)swift_allocObject();
      v30[2] = sub_22DDC5DB4;
      v30[3] = v1;
      v30[4] = v11;
      v31 = v11;
      swift_retain();
      sub_22DDAD6BC(v13, (uint64_t)sub_22DDC654C, (uint64_t)v30);
      swift_release_n();

      swift_release();
    }
    else
    {
      sub_22DDB1B50(v8, v13, (int)&v32, v11, (uint64_t)sub_22DDC5DB4, v1);
      swift_release_n();

    }
  }
  else
  {
    sub_22DE1F7CC();
    __break(1u);
  }
}

void sub_22DDC5990(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  char *v16;
  void *v17;
  id v18;
  char *v19;
  NSObject *oslog;

  if (!a1)
  {
    if (qword_255DB5318 != -1)
      swift_once();
    v13 = sub_22DE1E410();
    __swift_project_value_buffer(v13, (uint64_t)qword_255DB8700);
    oslog = sub_22DE1E3F8();
    v14 = sub_22DE1F514();
    if (os_log_type_enabled(oslog, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_22DD4B000, oslog, v14, "Recovered from invalid session error", v15, 2u);
      MEMORY[0x22E320870](v15, -1, -1);
    }
    goto LABEL_15;
  }
  if (qword_255DB5318 != -1)
    swift_once();
  v3 = sub_22DE1E410();
  __swift_project_value_buffer(v3, (uint64_t)qword_255DB8700);
  v4 = sub_22DE1E3F8();
  v5 = sub_22DE1F514();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_22DD4B000, v4, v5, "Failed to recover from invalid session", v6, 2u);
    MEMORY[0x22E320870](v6, -1, -1);
  }

  v7 = MEMORY[0x22E32090C](a2 + 72);
  if (v7)
  {
    v8 = (char *)v7;
    oslog = (id)FBKErrorOfType();
    if (oslog)
    {
      v9 = MEMORY[0x22E32090C](&v8[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_xpcClient]);
      if (v9)
      {
        v10 = (void *)v9;
        sub_22DDC9200();
        v12 = v11;

        if (!v12)
        {

LABEL_15:
          return;
        }
        goto LABEL_17;
      }
      v16 = &v8[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_localClient];
      swift_beginAccess();
      v12 = (void *)MEMORY[0x22E32090C](v16);
      if (v12)
      {
LABEL_17:
        v17 = (void *)sub_22DE1DEDC();
        v18 = objc_allocWithZone((Class)type metadata accessor for FBKSubmissionError());
        v19 = sub_22DDD140C(v17);
        objc_msgSend(v12, sel_didFailSubmissionWithError_, v19);

        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    sub_22DE1F7CC();
    __break(1u);
  }
}

void sub_22DDC5C84(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8970);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_22DDC6700;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = &block_descriptor_22;
  v9 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_logOutIfNeededAndRun_, v9);
  _Block_release(v9);
}

void sub_22DDC5DB4(uint64_t a1)
{
  uint64_t v1;

  sub_22DDC5990(a1, v1);
}

uint64_t sub_22DDC5DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  _QWORD aBlock[6];

  v3 = *(_QWORD *)(a1 + 16);
  v4 = (_QWORD *)(v3 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier);
  swift_beginAccess();
  v5 = v4[1];
  v6 = *v4 & 0xFFFFFFFFFFFFLL;
  if ((v5 & 0x2000000000000000) != 0)
    v6 = HIBYTE(v5) & 0xF;
  if (v6 || (v7 = v3 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_formId, swift_beginAccess(), *(_BYTE *)(v7 + 8) != 1))
  {
    v13 = v3 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_formId;
    swift_beginAccess();
    if ((*(_BYTE *)(v13 + 8) & 1) != 0)
    {
      swift_retain();
      v14 = 0;
    }
    else
    {
      swift_retain();
      v14 = (void *)sub_22DE1F61C();
    }
    v15 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    swift_bridgeObjectRetain();
    v16 = (void *)sub_22DE1F28C();
    swift_bridgeObjectRelease();
    v17 = swift_allocObject();
    swift_weakInit();
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = v17;
    v18[3] = sub_22DDC6B44;
    v18[4] = a2;
    aBlock[4] = sub_22DDC6B10;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DD9CDA8;
    aBlock[3] = &block_descriptor_61;
    v19 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v15, sel_feedbackFrameworkLoadDataWithFormTat_orFormID_completion_, v16, v14, v19);
    _Block_release(v19);

  }
  else
  {
    v8 = qword_255DB5318;
    swift_retain();
    if (v8 != -1)
      swift_once();
    v9 = sub_22DE1E410();
    __swift_project_value_buffer(v9, (uint64_t)qword_255DB8700);
    v10 = sub_22DE1E3F8();
    v11 = sub_22DE1F514();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_22DD4B000, v10, v11, "FeedbackForm is misconfigured. Cannot load Form", v12, 2u);
      MEMORY[0x22E320870](v12, -1, -1);
    }

    sub_22DDC2334((void *)4, 1, a2);
  }
  return swift_release();
}

void sub_22DDC60A0(void *a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  _BYTE *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  _QWORD aBlock[6];

  v10 = (void *)objc_opt_self();
  swift_retain();
  v11 = objc_msgSend(v10, sel_sharedInstance);
  v12 = objc_msgSend(v11, sel_loginManager);
  if (v12)
  {
    v28 = v12;
    if (objc_msgSend(v12, sel_loginState) != (id)1
      || (v13 = objc_msgSend(v11, sel_currentUser)) == 0)
    {
      sub_22DDC2994(a1, a2 & 1, a3 & 1, (uint64_t)sub_22DDC6ABC, a5);
      swift_release();

      return;
    }
    v14 = v13;
    if ((objc_msgSend(v13, sel_isUnauthenticatedUser) & 1) != 0
      || (v15 = (_BYTE *)(*(_QWORD *)(a4 + 16) + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_authenticationMethod),
          swift_beginAccess(),
          !*v15))
    {
      if (qword_255DB5318 != -1)
        swift_once();
      v20 = sub_22DE1E410();
      __swift_project_value_buffer(v20, (uint64_t)qword_255DB8700);
      v21 = sub_22DE1E3F8();
      v22 = sub_22DE1F514();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_22DD4B000, v21, v22, "Logging out for unauthenticated session.", v23, 2u);
        MEMORY[0x22E320870](v23, -1, -1);
      }

      v24 = swift_allocObject();
      swift_weakInit();
      v25 = swift_allocObject();
      *(_QWORD *)(v25 + 16) = v24;
      *(_QWORD *)(v25 + 24) = a1;
      *(_BYTE *)(v25 + 32) = a2 & 1;
      *(_BYTE *)(v25 + 33) = a3 & 1;
      *(_QWORD *)(v25 + 40) = sub_22DDC6ABC;
      *(_QWORD *)(v25 + 48) = a5;
      aBlock[4] = sub_22DDC6AFC;
      aBlock[5] = v25;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_22DD9C498;
      aBlock[3] = &block_descriptor_68_0;
      v26 = _Block_copy(aBlock);
      v27 = a1;
      swift_retain();
      swift_release();
      objc_msgSend(v28, sel_logOutIfNeededAndRun_, v26);

      _Block_release(v26);
      goto LABEL_18;
    }
    if (qword_255DB5318 != -1)
      swift_once();
    v16 = sub_22DE1E410();
    __swift_project_value_buffer(v16, (uint64_t)qword_255DB8700);
    v17 = sub_22DE1E3F8();
    v18 = sub_22DE1F514();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_22DD4B000, v17, v18, "Extension is already logged in, resetting form+content items.", v19, 2u);
      MEMORY[0x22E320870](v19, -1, -1);
    }

    objc_msgSend(v11, sel_resetContentAndFormItems);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_22DDC1B10(0, 1);
      swift_release();

LABEL_18:
      swift_release();
      return;
    }
    swift_release();

  }
  else
  {
    swift_release_n();
    sub_22DE1F7CC();
    __break(1u);
  }
}

uint64_t sub_22DDC6520()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_22DDC654C(void *a1)
{
  uint64_t v1;

  sub_22DDAD3F0(a1, *(void (**)(id))(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_22DDC6558()
{
  return objectdestroy_2Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_22DDC6564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22DD54F04;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_22DDC65C4()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

id sub_22DDC65F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22DDC36FC(a1, a2, *(_QWORD **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_22DDC65F8()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DDC6634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  v4 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_22DDC6B14;
  *(_OWORD *)(v2 + 16) = v3;
  *(_OWORD *)(v2 + 32) = v4;
  return swift_task_switch();
}

void sub_22DDC6694(uint64_t a1)
{
  uint64_t v1;

  sub_22DDC5C84(a1, *(void **)(v1 + 16));
}

uint64_t sub_22DDC669C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8970);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_22DDC6700()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8970);
  return sub_22DE1F430();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_22DDC6758()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22DDC677C()
{
  return objectdestroy_2Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_22DDC6788(uint64_t a1)
{
  uint64_t v1;

  sub_22DDC3194(a1, *(_QWORD *)(v1 + 16), *(void (**)(void *, uint64_t))(v1 + 24));
}

uint64_t sub_22DDC6794()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DDC67B8(int a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22DDC2C94(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16));
}

void sub_22DDC67C0(void *a1, char a2)
{
  uint64_t v2;

  sub_22DDC2334(a1, a2 & 1, v2);
}

uint64_t sub_22DDC67CC()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_22DDC6800(unsigned __int8 *a1)
{
  uint64_t *v1;

  sub_22DDC26A4(a1, v1[2], v1[3], v1[4], v1[5]);
}

unint64_t sub_22DDC6818()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DB5668;
  if (!qword_255DB5668)
  {
    v1 = sub_22DD70E78(255, (unint64_t *)&qword_255DB5660);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BE312A8], v1);
    atomic_store(result, (unint64_t *)&qword_255DB5668);
  }
  return result;
}

uint64_t sub_22DDC6870()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (int *)type metadata accessor for AgreementConsentView();
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5670);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_22DE1E614();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  v5 = v3 + v1[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5678);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22DE1E6D4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  swift_release();
  if (*(_QWORD *)(v3 + v1[8]))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_22DDC69BC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for AgreementConsentView() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_22DDC2824(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_22DDC69FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AgreementConsentView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22DDC6A38()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_22DDC6A64()
{
  uint64_t v0;

  sub_22DDC27C0(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(uint64_t, uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_22DDC6A74()
{
  return objectdestroy_2Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_2Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_release();
  return swift_deallocObject();
}

id sub_22DDC6AB0(id result, char a2)
{
  if ((a2 & 1) == 0)
    return result;
  return result;
}

uint64_t sub_22DDC6ABC(uint64_t a1, char a2)
{
  return sub_22DDC1AA0(a1, a2 & 1);
}

uint64_t sub_22DDC6AC8()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DDC6AFC()
{
  uint64_t v0;

  return sub_22DDC2904(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32), *(_BYTE *)(v0 + 33), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

unint64_t static FBKEvaluation.systemImageName(for:hasResponse:)(_BYTE *a1)
{
  unint64_t v1;
  unint64_t v3;

  if (*a1)
  {
    if (*a1 == 1)
    {
      sub_22DE1F730();
      swift_bridgeObjectRelease();
      v1 = 0x7568742E646E6168;
    }
    else
    {
      sub_22DE1F730();
      swift_bridgeObjectRelease();
      v1 = 0xD000000000000016;
    }
  }
  else
  {
    v1 = 0x7568742E646E6168;
  }
  v3 = v1;
  sub_22DE1F328();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t FBKEvaluation.Response.Action.description.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 == 1)
    v1 = 0x442073626D756854;
  if (*v0)
    return v1;
  else
    return 0x552073626D756854;
}

BOOL static FBKEvaluation.Response.Action.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FBKEvaluation.Response.Action.hash(into:)()
{
  return sub_22DE1F970();
}

uint64_t FBKEvaluation.Response.Action.hashValue.getter()
{
  sub_22DE1F964();
  sub_22DE1F970();
  return sub_22DE1F97C();
}

uint64_t FBKEvaluation.Response.ID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_22DE1E050();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t FBKEvaluation.Response.action.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FBKEvaluation.Response(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for FBKEvaluation.Response(uint64_t a1)
{
  return sub_22DD6481C(a1, (uint64_t *)&unk_255DB89F0);
}

uint64_t FBKEvaluation.Response.feedback.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FBKEvaluation.Response(0) + 24);
  return sub_22DDC6DF4(v3, a1);
}

uint64_t sub_22DDC6DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6250);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FBKEvaluation.Response.description.getter()
{
  type metadata accessor for FBKEvaluation.Response(0);
  sub_22DE1F328();
  swift_bridgeObjectRelease();
  sub_22DE1F328();
  sub_22DE1E050();
  sub_22DD504A8(&qword_255DB72A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_22DE1F8C8();
  sub_22DE1F328();
  swift_bridgeObjectRelease();
  sub_22DE1F328();
  return 91;
}

uint64_t sub_22DDC6F74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6250);
  MEMORY[0x24BDAC7A8](v3);
  v30 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_22DE1E14C();
  v5 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22DE1E194();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22DE1E050();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FBKEvaluation.Response(0);
  v17 = *(_QWORD *)(v16 - 8);
  v32 = v16;
  v33 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DE1E1AC();
  if ((*(unsigned int (**)(char *, uint64_t))(v9 + 88))(v11, v8) == *MEMORY[0x24BE30F38])
  {
    (*(void (**)(char *, uint64_t))(v9 + 96))(v11, v8);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    sub_22DE1E158();
    v20 = v31;
    v21 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v31);
    v22 = v12;
    if (v21 == *MEMORY[0x24BE30EB0])
    {
      v23 = 0;
      v24 = v32;
LABEL_9:
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v19, v15, v22);
      v19[*(int *)(v24 + 20)] = v23;
      v27 = (uint64_t)v30;
      sub_22DE1E128();

      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v22);
      sub_22DDC8870(v27, (uint64_t)&v19[*(int *)(v24 + 24)]);
      v26 = v34;
      sub_22DDC88B8((uint64_t)v19, v34);
      v25 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v26, v25, 1, v24);
    }
    v24 = v32;
    if (v21 == *MEMORY[0x24BE30E80])
    {
      v23 = 1;
      goto LABEL_9;
    }
    if (v21 == *MEMORY[0x24BE30E98])
    {
      v23 = 2;
      goto LABEL_9;
    }
    if (v21 != *MEMORY[0x24BE30EA8] && v21 != *MEMORY[0x24BE30E90] && v21 != *MEMORY[0x24BE30EA0])
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v20);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v22);
    v25 = 1;
    v26 = v34;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v25 = 1;
    v26 = v34;
    v24 = v32;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v26, v25, 1, v24);
}

unint64_t FBKEvaluation.Input.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  void *v9;
  id v10;
  unint64_t v11;
  unint64_t v13;
  unint64_t v14;

  v1 = v0;
  v2 = sub_22DE1E050();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FBKEvaluation.Input(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (void **)((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22DDC7490(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = *v8;
    v13 = 0;
    v14 = 0xE000000000000000;
    sub_22DE1F730();
    swift_bridgeObjectRelease();
    v13 = 0xD000000000000013;
    v14 = 0x800000022DE2B500;
    v10 = objc_msgSend(v9, sel_description);
    sub_22DE1F2B0();

    sub_22DE1F328();
    swift_bridgeObjectRelease();
    return v13;
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v3 + 32))(v5, v8, v2);
    v13 = 540689481;
    v14 = 0xE400000000000000;
    sub_22DD504A8(&qword_255DB72A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    sub_22DE1F8C8();
    sub_22DE1F328();
    swift_bridgeObjectRelease();
    v11 = v13;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v11;
}

uint64_t type metadata accessor for FBKEvaluation.Input(uint64_t a1)
{
  return sub_22DD6481C(a1, qword_255DB8AA8);
}

uint64_t sub_22DDC7490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FBKEvaluation.Input(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void FBKEvaluation.Input.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void *v8;
  uint64_t v9;

  v1 = sub_22DE1E050();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FBKEvaluation.Input(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (void **)((char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22DDC7490(v0, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = *v7;
    sub_22DE1F970();
    sub_22DE1F604();

  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_22DE1F970();
    sub_22DD504A8(&qword_255DB5D30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_22DE1F268();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t FBKEvaluation.Input.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  void *v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_22DE1E050();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FBKEvaluation.Input(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (void **)((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22DE1F964();
  sub_22DDC7490(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = *v8;
    sub_22DE1F970();
    sub_22DE1F604();

  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_22DE1F970();
    sub_22DD504A8(&qword_255DB5D30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_22DE1F268();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_22DE1F97C();
}

uint64_t sub_22DDC7788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void **v8;
  void *v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_22DE1E050();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (void **)((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22DE1F964();
  sub_22DDC7490(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = *v8;
    sub_22DE1F970();
    sub_22DE1F604();

  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v3 + 32))(v6, v8, v2);
    sub_22DE1F970();
    sub_22DD504A8(&qword_255DB5D30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_22DE1F268();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return sub_22DE1F97C();
}

uint64_t _s8Feedback13FBKEvaluationV5InputO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void **v18;
  void *v19;
  void *v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;

  v4 = sub_22DE1E050();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FBKEvaluation.Input(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (void **)((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v24 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8AE0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (void **)&v17[*(int *)(v15 + 48)];
  sub_22DDC7490(a1, (uint64_t)v17);
  sub_22DDC7490(a2, (uint64_t)v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_22DDC7490((uint64_t)v17, (uint64_t)v11);
    v19 = *v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = *v18;
      sub_22DD64774();
      v21 = sub_22DE1F5F8();

LABEL_9:
      sub_22DDC86A4((uint64_t)v17);
      return v21 & 1;
    }

  }
  else
  {
    sub_22DDC7490((uint64_t)v17, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      (*(void (**)(char *, void **, uint64_t))(v5 + 32))(v7, v18, v4);
      v21 = sub_22DE1E038();
      v22 = *(void (**)(char *, uint64_t))(v5 + 8);
      v22(v7, v4);
      v22(v13, v4);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
  }
  sub_22DDC88FC((uint64_t)v17);
  v21 = 0;
  return v21 & 1;
}

unint64_t sub_22DDC7B10()
{
  unint64_t result;

  result = qword_255DB8988;
  if (!qword_255DB8988)
  {
    result = MEMORY[0x22E3207B0](&protocol conformance descriptor for FBKEvaluation.Response.Action, &type metadata for FBKEvaluation.Response.Action);
    atomic_store(result, (unint64_t *)&qword_255DB8988);
  }
  return result;
}

uint64_t sub_22DDC7B54()
{
  return sub_22DD504A8(&qword_255DB8990, type metadata accessor for FBKEvaluation.Input, (uint64_t)&protocol conformance descriptor for FBKEvaluation.Input);
}

ValueMetadata *type metadata accessor for FBKEvaluation()
{
  return &type metadata for FBKEvaluation;
}

_QWORD *initializeBufferWithCopyOfBuffer for FBKEvaluation.Response(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22DE1E050();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_22DE1E11C();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6250);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t destroy for FBKEvaluation.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_22DE1E11C();
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

uint64_t initializeWithCopy for FBKEvaluation.Response(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_22DE1E11C();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6250);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for FBKEvaluation.Response(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_22DE1E11C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6250);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for FBKEvaluation.Response(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_22DE1E11C();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6250);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for FBKEvaluation.Response(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_22DE1E050();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_22DE1E11C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6250);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for FBKEvaluation.Response()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DDC8168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  uint64_t v10;

  v6 = sub_22DE1E050();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 253)
  {
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 3)
      return v9 - 2;
    else
      return 0;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6250);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FBKEvaluation.Response()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DDC8218(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_22DE1E050();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 253)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6250);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_22DDC82BC()
{
  unint64_t v0;
  unint64_t v1;

  sub_22DE1E050();
  if (v0 <= 0x3F)
  {
    sub_22DDC8348();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_22DDC8348()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255DB8A00)
  {
    sub_22DE1E11C();
    v0 = sub_22DE1F610();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255DB8A00);
  }
}

uint64_t storeEnumTagSinglePayload for FBKEvaluation.Response.Action(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22DDC83E8 + 4 * byte_22DE25345[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22DDC841C + 4 * byte_22DE25340[v4]))();
}

uint64_t sub_22DDC841C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DDC8424(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DDC842CLL);
  return result;
}

uint64_t sub_22DDC8438(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DDC8440);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22DDC8444(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DDC844C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FBKEvaluation.Response.Action()
{
  return &type metadata for FBKEvaluation.Response.Action;
}

char *initializeBufferWithCopyOfBuffer for FBKEvaluation.Input(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = *a2;
      *(_QWORD *)a1 = *a2;
      v7 = v6;
    }
    else
    {
      v9 = sub_22DE1E050();
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for FBKEvaluation.Input(id *a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    v2 = sub_22DE1E050();
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
}

void **initializeWithCopy for FBKEvaluation.Input(void **a1, void **a2)
{
  void *v4;
  id v5;
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = *a2;
    *a1 = *a2;
    v5 = v4;
  }
  else
  {
    v6 = sub_22DE1E050();
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for FBKEvaluation.Input(void **a1, void **a2)
{
  void *v4;
  id v5;
  uint64_t v6;

  if (a1 != a2)
  {
    sub_22DDC86A4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = *a2;
      *a1 = *a2;
      v5 = v4;
    }
    else
    {
      v6 = sub_22DE1E050();
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22DDC86A4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FBKEvaluation.Input(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for FBKEvaluation.Input(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_22DE1E050();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for FBKEvaluation.Input(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_22DDC86A4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_22DE1E050();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_22DDC8800()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22DE1E050();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_22DDC8870(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6250);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DDC88B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FBKEvaluation.Response(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DDC88FC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8AE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22DDC893C()
{
  uint64_t v0;

  v0 = sub_22DE1E410();
  __swift_allocate_value_buffer(v0, qword_255DB8AE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_255DB8AE8);
  return sub_22DE1E404();
}

void sub_22DDC89B8()
{
  char *v0;
  uint64_t v1;
  NSObject *v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  NSObject *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  NSObject *v13;
  NSObject *oslog;

  sub_22DD70E78(0, (unint64_t *)&qword_255DB8980);
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_platform);
  v1 = OBJC_IVAR___ExtensionController_contentViewController;
  if (!*(_QWORD *)&v0[OBJC_IVAR___ExtensionController_contentViewController])
  {
    v2 = objc_msgSend(v0, sel_makeContentViewController);
    if (v2)
    {
      v3 = v2;
      type metadata accessor for DraftingExtensionViewController();
      v4 = swift_dynamicCastClass();
      if (v4)
      {
        v5 = (void *)v4;
        v6 = *(void **)&v0[v1];
        *(_QWORD *)&v0[v1] = v4;
        v3 = v3;

        swift_unknownObjectWeakAssign();
        v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
        objc_msgSend(v0, sel_setView_, v7);

        v8 = objc_msgSend(v5, sel_view);
        if (!v8)
        {
          if (qword_255DB5320 != -1)
            swift_once();
          v10 = sub_22DE1E410();
          __swift_project_value_buffer(v10, (uint64_t)qword_255DB8AE8);
          oslog = sub_22DE1E3F8();
          v11 = sub_22DE1F508();
          if (!os_log_type_enabled(oslog, v11))
          {
            v13 = oslog;
            oslog = v3;
            goto LABEL_12;
          }
          v12 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v12 = 0;
          _os_log_impl(&dword_22DD4B000, oslog, v11, "DraftingExtensionViewController has no view. Cannot load extension UI", v12, 2u);
          MEMORY[0x22E320870](v12, -1, -1);
LABEL_11:
          v13 = v3;
LABEL_12:

          return;
        }

        v9 = objc_msgSend(v0, sel_view);
        if (v9)
        {
          oslog = v9;
          objc_msgSend(v0, sel_embed_inView_, v5);
          goto LABEL_11;
        }
        __break(1u);
      }

    }
    sub_22DE1F7CC();
    __break(1u);
  }
}

uint64_t sub_22DDC8C74(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  unsigned __int8 v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t aBlock;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  void *v29;
  void (*v30)();
  uint64_t v31;
  id v32;
  _OWORD v33[2];

  v3 = (void *)sub_22DE1F28C();
  v4 = objc_msgSend(a1, sel_valueForEntitlement_, v3);

  if (v4)
  {
    sub_22DE1F664();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v33, 0, sizeof(v33));
  }
  sub_22DDC9648((uint64_t)v33, (uint64_t)&aBlock);
  if (v29)
  {
    sub_22DD70E78(0, &qword_255DB7D70);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = v32;
      v6 = objc_msgSend(v32, sel_BOOLValue);

      if ((v6 & 1) != 0)
      {
        objc_msgSend(a1, sel_setExportedObject_, *(_QWORD *)(v1 + OBJC_IVAR___ExtensionController_contentViewController));
        v7 = (void *)sub_22DD9AC34();
        objc_msgSend(a1, sel_setExportedInterface_, v7);

        v8 = (void *)sub_22DD9ADF0();
        objc_msgSend(a1, sel_setRemoteObjectInterface_, v8);

        v9 = objc_msgSend(a1, sel_serviceName);
        if (v9)
        {
          v10 = v9;
          v11 = sub_22DE1F2B0();
          v13 = v12;

        }
        else
        {
          v13 = 0xE600000000000000;
          v11 = 0x296C6C756E28;
        }
        v19 = swift_allocObject();
        *(_QWORD *)(v19 + 16) = v11;
        *(_QWORD *)(v19 + 24) = v13;
        v30 = sub_22DDC96B4;
        v31 = v19;
        v20 = MEMORY[0x24BDAC760];
        aBlock = MEMORY[0x24BDAC760];
        v27 = 1107296256;
        v28 = sub_22DD9C498;
        v29 = &block_descriptor_6;
        v21 = _Block_copy(&aBlock);
        swift_bridgeObjectRetain();
        swift_release();
        objc_msgSend(a1, sel_setInvalidationHandler_, v21);
        _Block_release(v21);
        v22 = swift_allocObject();
        *(_QWORD *)(v22 + 16) = v11;
        *(_QWORD *)(v22 + 24) = v13;
        v30 = sub_22DDC96EC;
        v31 = v22;
        aBlock = v20;
        v27 = 1107296256;
        v28 = sub_22DD9C498;
        v29 = &block_descriptor_6_1;
        v23 = _Block_copy(&aBlock);
        swift_release();
        objc_msgSend(a1, sel_setInterruptionHandler_, v23);
        _Block_release(v23);
        v24 = *(void **)(v1 + OBJC_IVAR___ExtensionController_xpcConnection);
        *(_QWORD *)(v1 + OBJC_IVAR___ExtensionController_xpcConnection) = a1;
        v25 = a1;

        objc_msgSend(v25, sel_resume);
        return 1;
      }
    }
  }
  else
  {
    sub_22DD7CA0C((uint64_t)&aBlock);
  }
  if (qword_255DB5320 != -1)
    swift_once();
  v14 = sub_22DE1E410();
  __swift_project_value_buffer(v14, (uint64_t)qword_255DB8AE8);
  v15 = sub_22DE1E3F8();
  v16 = sub_22DE1F4FC();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_22DD4B000, v15, v16, "Process is not entitled to draft a new feedback.", v17, 2u);
    MEMORY[0x22E320870](v17, -1, -1);
  }

  return 0;
}

void sub_22DDC9010(uint64_t a1, unint64_t a2, const char *a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_255DB5320 != -1)
    swift_once();
  v6 = sub_22DE1E410();
  __swift_project_value_buffer(v6, (uint64_t)qword_255DB8AE8);
  swift_bridgeObjectRetain_n();
  v7 = sub_22DE1E3F8();
  v8 = sub_22DE1F514();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v11 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_22DDA2E30(a1, a2, &v11);
    sub_22DE1F628();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_22DD4B000, v7, v8, a3, v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v10, -1, -1);
    MEMORY[0x22E320870](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_22DDC9200()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _BYTE v9[32];
  _QWORD aBlock[6];

  v1 = *(void **)(v0 + OBJC_IVAR___ExtensionController_xpcConnection);
  if (v1)
  {
    aBlock[4] = sub_22DDC93CC;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22DD9DDD8;
    aBlock[3] = &block_descriptor_9;
    v2 = _Block_copy(aBlock);
    v3 = v1;
    v4 = objc_msgSend(v3, sel_remoteObjectProxyWithErrorHandler_, v2);
    _Block_release(v2);

    sub_22DE1F664();
    swift_unknownObjectRelease();
    sub_22DDA48F0((uint64_t)aBlock, (uint64_t)v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7D88);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    }
    else
    {
      if (qword_255DB5320 != -1)
        swift_once();
      v5 = sub_22DE1E410();
      __swift_project_value_buffer(v5, (uint64_t)qword_255DB8AE8);
      v6 = sub_22DE1E3F8();
      v7 = sub_22DE1F4FC();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v8 = 0;
        _os_log_impl(&dword_22DD4B000, v6, v7, "Failed to get remote object proxy", v8, 2u);
        MEMORY[0x22E320870](v8, -1, -1);
      }

      __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_22DDC93CC()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_255DB5320 != -1)
    swift_once();
  v0 = sub_22DE1E410();
  __swift_project_value_buffer(v0, (uint64_t)qword_255DB8AE8);
  oslog = sub_22DE1E3F8();
  v1 = sub_22DE1F4FC();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_22DD4B000, oslog, v1, "Failed to get remote object proxy", v2, 2u);
    MEMORY[0x22E320870](v2, -1, -1);
  }

}

id sub_22DDC95C0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExtensionController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ExtensionController()
{
  return objc_opt_self();
}

uint64_t sub_22DDC9648(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB6C10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DDC9690()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_22DDC96B4()
{
  uint64_t v0;

  sub_22DDC9010(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), "Connection to service %s invalidated.");
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

void sub_22DDC96EC()
{
  uint64_t v0;

  sub_22DDC9010(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), "Connection to service %s interrupted.");
}

uint64_t static FBKAttachmentError.withError(nsError:)(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_domain);
  v3 = sub_22DE1F2B0();
  v5 = v4;

  if (v3 == 0xD000000000000025 && v5 == 0x800000022DE2A420)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = sub_22DE1F8E0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {

      return 6;
    }
  }
  v7 = objc_msgSend(v1, sel_code);

  if ((unint64_t)v7 >= 6)
    return 6;
  else
    return (uint64_t)v7;
}

uint64_t FBKAttachmentError.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0xD000000000000014;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0xD000000000000024;
      break;
    case 2:
      result = 0xD000000000000013;
      break;
    case 3:
      result = 0xD000000000000021;
      break;
    case 4:
      result = 0xD000000000000023;
      break;
    case 5:
      result = 0xD000000000000015;
      break;
    case 6:
      result = 0x6E776F6E6B6E55;
      break;
    default:
      result = sub_22DE1F8F8();
      __break(1u);
      break;
  }
  return result;
}

unint64_t FBKAttachmentError.init(rawValue:)(unint64_t a1)
{
  return sub_22DDC9BCC(a1);
}

unint64_t static FBKAttachmentError._nsErrorDomain.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_22DDC992C()
{
  sub_22DDCA080();
  return sub_22DE1DE88();
}

unint64_t sub_22DDC9964@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_22DDC9BCC(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_22DDC9994()
{
  sub_22DDCA080();
  return sub_22DE1DEA0();
}

uint64_t sub_22DDC99BC()
{
  sub_22DDCA080();
  return sub_22DE1DE94();
}

uint64_t sub_22DDC99E4()
{
  uint64_t *v0;

  return FBKAttachmentError.description.getter(*v0);
}

unint64_t sub_22DDC99EC()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_22DDC9A08()
{
  sub_22DDCA080();
  return sub_22DE1DE7C();
}

uint64_t URLError.description.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  v1 = 0xD000000000000014;
  switch(*(_QWORD *)(v0 + *(int *)(type metadata accessor for URLError() + 20)))
  {
    case 0:
      goto LABEL_7;
    case 1:
      v1 = 0xD000000000000024;
      goto LABEL_7;
    case 2:
      v1 = 0xD000000000000013;
      goto LABEL_7;
    case 3:
      v1 = 0xD000000000000021;
      goto LABEL_7;
    case 4:
      v1 = 0xD000000000000023;
      goto LABEL_7;
    case 5:
      v1 = 0xD000000000000015;
      goto LABEL_7;
    case 6:
      v1 = 0x6E776F6E6B6E55;
LABEL_7:
      sub_22DE1DF90();
      sub_22DE1F328();
      swift_bridgeObjectRelease();
      sub_22DE1F328();
      swift_bridgeObjectRetain();
      sub_22DE1F328();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = v1;
      break;
    default:
      result = sub_22DE1F8F8();
      __break(1u);
      break;
  }
  return result;
}

unint64_t sub_22DDC9BCC(unint64_t result)
{
  if (result > 6)
    return 0;
  return result;
}

uint64_t type metadata accessor for URLError()
{
  uint64_t result;

  result = qword_255DB8BB0;
  if (!qword_255DB8BB0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_22DDC9C1C()
{
  unint64_t result;

  result = qword_255DB8B38;
  if (!qword_255DB8B38)
  {
    result = MEMORY[0x22E3207B0](&protocol conformance descriptor for FBKAttachmentError, &type metadata for FBKAttachmentError);
    atomic_store(result, (unint64_t *)&qword_255DB8B38);
  }
  return result;
}

unint64_t sub_22DDC9C64()
{
  unint64_t result;

  result = qword_255DB8B40;
  if (!qword_255DB8B40)
  {
    result = MEMORY[0x22E3207B0](&protocol conformance descriptor for FBKAttachmentError, &type metadata for FBKAttachmentError);
    atomic_store(result, (unint64_t *)&qword_255DB8B40);
  }
  return result;
}

unint64_t sub_22DDC9CAC()
{
  unint64_t result;

  result = qword_255DB8B48;
  if (!qword_255DB8B48)
  {
    result = MEMORY[0x22E3207B0](&protocol conformance descriptor for FBKAttachmentError, &type metadata for FBKAttachmentError);
    atomic_store(result, (unint64_t *)&qword_255DB8B48);
  }
  return result;
}

unint64_t sub_22DDC9CF4()
{
  unint64_t result;

  result = qword_255DB8B50;
  if (!qword_255DB8B50)
  {
    result = MEMORY[0x22E3207B0](&protocol conformance descriptor for FBKAttachmentError, &type metadata for FBKAttachmentError);
    atomic_store(result, (unint64_t *)&qword_255DB8B50);
  }
  return result;
}

ValueMetadata *type metadata accessor for FBKAttachmentError()
{
  return &type metadata for FBKAttachmentError;
}

uint64_t *initializeBufferWithCopyOfBuffer for URLError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22DE1DFB4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for URLError(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22DE1DFB4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for URLError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22DE1DFB4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for URLError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22DE1DFB4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for URLError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22DE1DFB4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for URLError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22DE1DFB4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for URLError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DDC9F84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22DE1DFB4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for URLError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DDC9FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22DE1DFB4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_22DDCA00C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22DE1DFB4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_22DDCA080()
{
  unint64_t result;

  result = qword_255DB8BE8;
  if (!qword_255DB8BE8)
  {
    result = MEMORY[0x22E3207B0](&protocol conformance descriptor for FBKAttachmentError, &type metadata for FBKAttachmentError);
    atomic_store(result, (unint64_t *)&qword_255DB8BE8);
  }
  return result;
}

uint64_t sub_22DDCA0C4()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_22DDCA9B0();
  sub_22DE1E068();
  swift_release();
  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_22DDCA130()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_22DDCA9B0();
  sub_22DE1E068();
  swift_release();
  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t sub_22DDCA19C()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_22DDCA9B0();
  sub_22DE1E068();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_22DDCA208()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_22DDCA9B0();
  sub_22DE1E068();
  swift_release();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_22DDCA274()
{
  uint64_t result;

  type metadata accessor for UserDefaultsController();
  swift_allocObject();
  result = sub_22DDCA2B0();
  qword_255DC3CE8 = result;
  return result;
}

uint64_t sub_22DDCA2B0()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  unsigned __int8 v4;
  id v5;
  void *v6;
  unsigned __int8 v7;
  id v8;
  void *v9;
  unsigned __int8 v10;
  id v11;
  void *v12;
  id v13;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_sharedUserDefaults);
  v3 = (void *)sub_22DE1F28C();
  v4 = objc_msgSend(v2, sel_BOOLForKey_, v3);

  *(_BYTE *)(v0 + 16) = v4;
  v5 = objc_msgSend(v1, sel_sharedUserDefaults);
  v6 = (void *)sub_22DE1F28C();
  v7 = objc_msgSend(v5, sel_BOOLForKey_, v6);

  *(_BYTE *)(v0 + 17) = v7;
  v8 = objc_msgSend(v1, sel_sharedUserDefaults);
  v9 = (void *)sub_22DE1F28C();
  v10 = objc_msgSend(v8, sel_BOOLForKey_, v9);

  *(_BYTE *)(v0 + 18) = v10;
  v11 = objc_msgSend(v1, sel_sharedUserDefaults);
  v12 = (void *)sub_22DE1F28C();
  v13 = objc_msgSend(v11, sel_integerForKey_, v12);

  *(_QWORD *)(v0 + 24) = v13;
  sub_22DE1E08C();
  return v0;
}

void sub_22DDCA474(uint64_t a1, char a2)
{
  id v2;
  uint64_t v3;
  void *v4;

  *(_BYTE *)(a1 + 16) = a2;
  swift_getKeyPath();
  sub_22DDCA9B0();
  sub_22DE1E068();
  swift_release();
  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedUserDefaults);
  v3 = sub_22DE1F904();
  v4 = (void *)sub_22DE1F28C();
  objc_msgSend(v2, sel_setObject_forKey_, v3, v4);

  swift_unknownObjectRelease();
}

void sub_22DDCA570(uint64_t a1, char a2)
{
  id v2;
  uint64_t v3;
  void *v4;

  *(_BYTE *)(a1 + 17) = a2;
  swift_getKeyPath();
  sub_22DDCA9B0();
  sub_22DE1E068();
  swift_release();
  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedUserDefaults);
  v3 = sub_22DE1F904();
  v4 = (void *)sub_22DE1F28C();
  objc_msgSend(v2, sel_setObject_forKey_, v3, v4);

  swift_unknownObjectRelease();
}

void sub_22DDCA66C(uint64_t a1, char a2)
{
  id v2;
  uint64_t v3;
  void *v4;

  *(_BYTE *)(a1 + 18) = a2;
  swift_getKeyPath();
  sub_22DDCA9B0();
  sub_22DE1E068();
  swift_release();
  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedUserDefaults);
  v3 = sub_22DE1F904();
  v4 = (void *)sub_22DE1F28C();
  objc_msgSend(v2, sel_setObject_forKey_, v3, v4);

  swift_unknownObjectRelease();
}

void sub_22DDCA768()
{
  id v0;
  uint64_t v1;
  void *v2;

  swift_getKeyPath();
  sub_22DDCA9B0();
  sub_22DE1E068();
  swift_release();
  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedUserDefaults);
  v1 = sub_22DE1F904();
  v2 = (void *)sub_22DE1F28C();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);

  swift_unknownObjectRelease();
}

void sub_22DDCA860(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 24) = a2;
  sub_22DDCA768();
}

uint64_t sub_22DDCA88C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Feedback22UserDefaultsController___observationRegistrar;
  v2 = sub_22DE1E098();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_22DDCA8DC()
{
  return type metadata accessor for UserDefaultsController();
}

uint64_t type metadata accessor for UserDefaultsController()
{
  uint64_t result;

  result = qword_255DB8C20;
  if (!qword_255DB8C20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22DDCA920()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22DE1E098();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_22DDCA9B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DB58A8;
  if (!qword_255DB58A8)
  {
    v1 = type metadata accessor for UserDefaultsController();
    result = MEMORY[0x22E3207B0](&unk_22DE257C0, v1);
    atomic_store(result, (unint64_t *)&qword_255DB58A8);
  }
  return result;
}

uint64_t sub_22DDCAA10()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[42] = v0;
  v1[43] = type metadata accessor for AnalyticsEvent();
  v1[44] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6258);
  v1[45] = swift_task_alloc();
  v2 = type metadata accessor for BatchInteraction(0);
  v1[46] = v2;
  v1[47] = *(_QWORD *)(v2 - 8);
  v1[48] = swift_task_alloc();
  v1[49] = swift_task_alloc();
  v1[50] = swift_task_alloc();
  v1[51] = swift_task_alloc();
  v1[52] = swift_task_alloc();
  v1[53] = swift_task_alloc();
  v1[54] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5D68);
  v1[55] = swift_task_alloc();
  v3 = sub_22DE1E050();
  v1[56] = v3;
  v1[57] = *(_QWORD *)(v3 - 8);
  v1[58] = swift_task_alloc();
  v1[59] = swift_task_alloc();
  v4 = sub_22DE1E410();
  v1[60] = v4;
  v1[61] = *(_QWORD *)(v4 - 8);
  v1[62] = swift_task_alloc();
  v1[63] = swift_task_alloc();
  v1[64] = swift_task_alloc();
  v1[65] = swift_task_alloc();
  v1[66] = swift_task_alloc();
  v1[67] = swift_task_alloc();
  v1[68] = swift_task_alloc();
  v1[69] = swift_task_alloc();
  sub_22DE1F448();
  v1[70] = sub_22DE1F43C();
  v1[71] = sub_22DE1F418();
  v1[72] = v5;
  return swift_task_switch();
}

uint64_t sub_22DDCAC18()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21[2];

  if (qword_255DB53A8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 584) = __swift_project_value_buffer(*(_QWORD *)(v0 + 480), (uint64_t)qword_255DC3D48);
  v1 = sub_22DE1E3F8();
  v2 = sub_22DE1F4F0();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v21[0] = v4;
    *(_DWORD *)v3 = 136315138;
    *(_QWORD *)(v0 + 328) = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v21);
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v1, v2, "%s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v4, -1, -1);
    MEMORY[0x22E320870](v3, -1, -1);
  }

  v5 = *(_QWORD *)(v0 + 336);
  swift_getKeyPath();
  *(_QWORD *)(v0 + 592) = OBJC_IVAR____TtC8Feedback18DonationController___observationRegistrar;
  *(_QWORD *)(v0 + 296) = v5;
  *(_QWORD *)(v0 + 600) = sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  sub_22DE1E068();
  swift_release();
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v5 + 24) + 16))
  {
    swift_release();
    v6 = sub_22DE1E3F8();
    v7 = sub_22DE1F4E4();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v21[0] = v9;
      *(_DWORD *)v8 = 136315138;
      *(_QWORD *)(v0 + 120) = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v21);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v6, v7, "%s - skipping fetch since there are cached donations", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v9, -1, -1);
      MEMORY[0x22E320870](v8, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v11 = sub_22DE1E3F8();
    v12 = sub_22DE1F4F0();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v21[0] = v14;
      *(_DWORD *)v13 = 136315138;
      *(_QWORD *)(v0 + 320) = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v21);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v11, v12, "%s - putting UI into loading state", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v14, -1, -1);
      MEMORY[0x22E320870](v13, -1, -1);
    }

    v15 = *(_QWORD *)(v0 + 336);
    swift_retain();
    sub_22DE1F148();
    v16 = swift_task_alloc();
    *(_QWORD *)(v16 + 16) = sub_22DDD059C;
    *(_QWORD *)(v16 + 24) = v15;
    sub_22DE1E674();
    swift_release();
    swift_release();
    swift_task_dealloc();
    v17 = sub_22DE1E3F8();
    v18 = sub_22DE1F4E4();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v21[0] = v20;
      *(_DWORD *)v19 = 136315138;
      *(_QWORD *)(v0 + 312) = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v21);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v17, v18, "%s - will fetch multiple donations from daemon", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v20, -1, -1);
      MEMORY[0x22E320870](v19, -1, -1);
    }

    return swift_task_switch();
  }
}

uint64_t sub_22DDCB2A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 608) = v1;
  *(_DWORD *)(v1 + 16) = 10;
  *(_BYTE *)(v1 + 20) = 1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 616) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8DA0);
  *v2 = v0;
  v2[1] = sub_22DDCB360;
  return sub_22DE1F8EC();
}

uint64_t sub_22DDCB360()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 624) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DDCB3CC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 632) = *(_QWORD *)(v0 + 96);
  return swift_task_switch();
}

uint64_t sub_22DDCB3E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t result;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  _BOOL4 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  id v95;
  _QWORD *v96;
  void (*v97)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v98)(uint64_t, uint64_t);
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109[2];

  v0[11] = v0[79];
  v1 = v0[73];
  v2 = v0[69];
  v3 = v0[60];
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[61] + 16);
  v0[80] = v4;
  v97 = v4;
  v4(v2, v1, v3);
  v5 = sub_22DE1E3F8();
  v6 = sub_22DE1F4F0();
  v106 = v0;
  v99 = v0 + 11;
  if (os_log_type_enabled(v5, v6))
  {
    v107 = v0[69];
    v101 = v0[61];
    v103 = v0[60];
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v109[0] = v8;
    *(_DWORD *)v7 = 136315394;
    v0[36] = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v109);
    sub_22DE1F628();
    *(_WORD *)(v7 + 12) = 2080;
    swift_beginAccess();
    v9 = sub_22DE1E104();
    v10 = swift_bridgeObjectRetain();
    v11 = MEMORY[0x22E31FC58](v10, v9);
    v13 = v12;
    swift_bridgeObjectRelease();
    v0[38] = sub_22DDA2E30(v11, v13, v109);
    sub_22DE1F628();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22DD4B000, v5, v6, "%s - Fetched %s non-duped donations", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v8, -1, -1);
    MEMORY[0x22E320870](v7, -1, -1);

    v14 = *(void (**)(uint64_t, uint64_t))(v101 + 8);
    v14(v107, v103);
  }
  else
  {
    v15 = v0[69];
    v16 = v0[60];
    v17 = v0[61];

    v14 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v14(v15, v16);
  }
  v98 = (uint64_t (*)(uint64_t, uint64_t))v14;
  v0[81] = v14;
  v108 = (_QWORD *)sub_22DE06A54(MEMORY[0x24BEE4AF8]);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = v0[11];
  if (isUniquelyReferenced_nonNull_native >> 62)
    goto LABEL_30;
  v19 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v19)
  {
    v20 = 0;
    v21 = v0[57];
    v102 = v21;
    v104 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
    v100 = v19;
    while (v104)
    {
      v23 = (id)MEMORY[0x22E31FFC4](v20, isUniquelyReferenced_nonNull_native);
      v24 = v20 + 1;
      if (__OFADD__(v20, 1))
        goto LABEL_27;
LABEL_14:
      v26 = v0[55];
      v25 = v0[56];
      v27 = v23;
      sub_22DE1E1C4();

      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v26, 1, v25) == 1)
      {
        v22 = v0[55];

        sub_22DD5071C(v22, &qword_255DB5D68);
      }
      else
      {
        v28 = v21;
        v29 = isUniquelyReferenced_nonNull_native;
        v30 = v0[58];
        v31 = v0[59];
        v32 = v0[56];
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v28 + 32))(v31, v0[55], v32);
        v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
        v33(v30, v31, v32);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v109[0] = (uint64_t)v108;
        v35 = sub_22DDFD3CC(v30);
        v36 = v108[2];
        v37 = (v34 & 1) == 0;
        v38 = v36 + v37;
        if (__OFADD__(v36, v37))
          goto LABEL_28;
        v39 = v34;
        if (v108[3] >= v38)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_22DDFF84C();
            v108 = (_QWORD *)v109[0];
          }
        }
        else
        {
          v40 = v106[58];
          sub_22DDFDC80(v38, isUniquelyReferenced_nonNull_native);
          v41 = v109[0];
          v42 = sub_22DDFD3CC(v40);
          if ((v39 & 1) != (v43 & 1))
            return sub_22DE1F91C();
          v35 = v42;
          v108 = (_QWORD *)v41;
        }
        v0 = v106;
        isUniquelyReferenced_nonNull_native = v29;
        if ((v39 & 1) != 0)
        {
          v44 = v108[7];

          *(_QWORD *)(v44 + 8 * v35) = v27;
          v21 = v102;
        }
        else
        {
          v45 = v106[58];
          v46 = v106[56];
          v108[(v35 >> 6) + 8] |= 1 << v35;
          v21 = v102;
          v33(v108[6] + *(_QWORD *)(v102 + 72) * v35, v45, v46);
          *(_QWORD *)(v108[7] + 8 * v35) = v27;
          v47 = v108[2];
          v48 = __OFADD__(v47, 1);
          v49 = v47 + 1;
          if (v48)
            goto LABEL_29;
          v108[2] = v49;
        }
        v50 = v106[58];
        v51 = v106[59];
        v52 = v106[56];
        swift_bridgeObjectRelease();
        v53 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
        v53(v50, v52);
        v53(v51, v52);
        v19 = v100;
      }
      ++v20;
      if (v24 == v19)
        goto LABEL_31;
    }
    v23 = *(id *)(isUniquelyReferenced_nonNull_native + 8 * v20 + 32);
    v24 = v20 + 1;
    if (!__OFADD__(v20, 1))
      goto LABEL_14;
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    swift_bridgeObjectRetain_n();
    v19 = sub_22DE1F7D8();
    swift_bridgeObjectRelease();
  }
LABEL_31:
  v55 = v99;
  v0[82] = v108;
  v56 = v0[73];
  v57 = v0[67];
  v58 = v0[60];
  swift_bridgeObjectRelease();
  v59 = swift_bridgeObjectRetain();
  v60 = (unint64_t)sub_22DDD05EC(v59);
  v0[83] = v60;
  swift_bridgeObjectRelease();
  v97(v57, v56, v58);
  swift_retain_n();
  v61 = sub_22DE1E3F8();
  v62 = sub_22DE1F4F0();
  v63 = os_log_type_enabled(v61, v62);
  v64 = v0[67];
  v65 = v0[60];
  if (v63)
  {
    v105 = v0[60];
    v66 = swift_slowAlloc();
    v67 = swift_slowAlloc();
    v109[0] = v67;
    *(_DWORD *)v66 = 136315394;
    v0[34] = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v109);
    sub_22DE1F628();
    *(_WORD *)(v66 + 12) = 2080;
    v68 = sub_22DE1E104();
    v69 = swift_retain();
    v70 = MEMORY[0x22E31FC58](v69, v68);
    v72 = v71;
    swift_release();
    v0[35] = sub_22DDA2E30(v70, v72, v109);
    sub_22DE1F628();
    v55 = v99;
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_22DD4B000, v61, v62, "%s - Duped donations to %s", (uint8_t *)v66, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v67, -1, -1);
    MEMORY[0x22E320870](v66, -1, -1);

    v73 = v64;
    v74 = v105;
  }
  else
  {
    swift_release_n();

    v73 = v64;
    v74 = v65;
  }
  result = v98(v73, v74);
  if ((v60 & 0x8000000000000000) != 0 || (v60 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v75 = sub_22DE1F7D8();
    result = swift_release();
  }
  else
  {
    v75 = *(_QWORD *)(v60 + 16);
  }
  v76 = v106;
  v106[84] = v75;
  if (v75)
  {
    if (v75 < 1)
    {
      __break(1u);
    }
    else
    {
      v77 = v106[78];
      v106[95] = MEMORY[0x24BEE4AF8];
      v106[94] = 0;
      v106[93] = v98;
      v106[92] = v98;
      v106[91] = v98;
      v106[90] = v98;
      v106[89] = v98;
      v106[88] = v98;
      v106[87] = v98;
      v106[86] = v98;
      v106[85] = v77;
      v78 = v106[83];
      if ((v78 & 0xC000000000000001) != 0)
        v79 = (id)MEMORY[0x22E31FFC4](0);
      else
        v79 = *(id *)(v78 + 32);
      v90 = v79;
      v106[96] = v79;
      v91 = sub_22DE1E3F8();
      v92 = sub_22DE1F4F0();
      if (os_log_type_enabled(v91, v92))
      {
        v93 = (uint8_t *)swift_slowAlloc();
        v94 = swift_slowAlloc();
        v109[0] = v94;
        *(_DWORD *)v93 = 136315138;
        v55[22] = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v109);
        v76 = v106;
        sub_22DE1F628();
        _os_log_impl(&dword_22DD4B000, v91, v92, "%s - Will attempt to make BatchInteraction from donation", v93, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E320870](v94, -1, -1);
        MEMORY[0x22E320870](v93, -1, -1);
      }

      v95 = v90;
      v96 = (_QWORD *)swift_task_alloc();
      v76[97] = v96;
      *v96 = v76;
      v96[1] = sub_22DDCC4B4;
      return sub_22DD61CB4(v76[45], (uint64_t)v95);
    }
  }
  else
  {
    v80 = v106[42];
    swift_release();
    swift_release();
    swift_getKeyPath();
    v81 = swift_task_alloc();
    *(_QWORD *)(v81 + 16) = v80;
    v82 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v81 + 24) = MEMORY[0x24BEE4AF8];
    v106[16] = v80;
    swift_bridgeObjectRetain();
    sub_22DE1E05C();
    swift_release();
    swift_task_dealloc();
    swift_getKeyPath();
    v83 = swift_task_alloc();
    *(_QWORD *)(v83 + 16) = v80;
    *(_QWORD *)(v83 + 24) = v82;
    v106[17] = v80;
    swift_bridgeObjectRetain();
    sub_22DE1E05C();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_task_dealloc();
    v84 = sub_22DE1E3F8();
    v85 = sub_22DE1F4E4();
    if (os_log_type_enabled(v84, v85))
    {
      v86 = (uint8_t *)swift_slowAlloc();
      v87 = swift_slowAlloc();
      v109[0] = v87;
      *(_DWORD *)v86 = 136315138;
      v106[19] = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v109);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v84, v85, "%s - will enter active state", v86, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v87, -1, -1);
      MEMORY[0x22E320870](v86, -1, -1);
    }

    v88 = v106[42];
    swift_getKeyPath();
    v106[18] = v88;
    sub_22DE1E068();
    swift_release();
    v89 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_22DDAB6E8(v89 == 0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v106[1])();
  }
  return result;
}

uint64_t sub_22DDCC0B0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DDCC0EC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(void **)(v0 + 624);
  v2 = *(_QWORD *)(v0 + 584);
  v3 = *(_QWORD *)(v0 + 544);
  v4 = *(_QWORD *)(v0 + 480);
  v5 = *(_QWORD *)(v0 + 488);
  v6 = *(_QWORD *)(v0 + 336);
  swift_release();
  swift_retain();
  sub_22DE1F148();
  v7 = swift_task_alloc();
  *(_QWORD *)(v7 + 16) = sub_22DDD05D0;
  *(_QWORD *)(v7 + 24) = v6;
  sub_22DE1E674();
  swift_release();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v2, v4);
  v8 = v1;
  v9 = v1;
  v10 = sub_22DE1E3F8();
  v11 = sub_22DE1F4FC();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = *(void **)(v0 + 624);
    v23 = *(_QWORD *)(v0 + 488);
    v24 = *(_QWORD *)(v0 + 480);
    v25 = *(_QWORD *)(v0 + 544);
    v13 = swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v26 = v22;
    *(_DWORD *)v13 = 136315394;
    *(_QWORD *)(v0 + 104) = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, &v26);
    sub_22DE1F628();
    *(_WORD *)(v13 + 12) = 2112;
    v15 = v12;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 112) = v16;
    sub_22DE1F628();
    *v14 = v16;

    _os_log_impl(&dword_22DD4B000, v10, v11, "%s - failed to fetch from daemon: %@", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8160);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v14, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v22, -1, -1);
    MEMORY[0x22E320870](v13, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
  }
  else
  {
    v17 = *(void **)(v0 + 624);
    v18 = *(_QWORD *)(v0 + 544);
    v19 = *(_QWORD *)(v0 + 480);
    v20 = *(_QWORD *)(v0 + 488);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DDCC4B4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DDCC504()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  _QWORD *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  _QWORD *v36;
  void (*v38)(_QWORD, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  const double *v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  _BOOL4 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  void (*v69)(uint64_t, uint64_t);
  float64x2_t v70;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  void *v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  uint64_t v96;
  id v97;
  _QWORD *v98;
  void (*v99)(uint64_t, uint64_t);
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(uint64_t, uint64_t);
  uint64_t v107;
  float64x2_t v108;
  void (*v109)(uint64_t, uint64_t);
  uint64_t v110;
  uint64_t (*v111)(void);
  void (*v112)(uint64_t, uint64_t);
  __int128 v113;
  uint64_t v114[2];

  v1 = *(_QWORD *)(v0 + 360);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 376) + 48))(v1, 1, *(_QWORD *)(v0 + 368)) == 1)
  {
    v2 = *(void **)(v0 + 768);
    v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 640);
    v4 = *(_QWORD *)(v0 + 584);
    v5 = *(_QWORD *)(v0 + 504);
    v6 = *(_QWORD *)(v0 + 480);
    sub_22DD5071C(v1, &qword_255DB6258);
    v3(v5, v4, v6);
    v7 = v2;
    v8 = sub_22DE1E3F8();
    v9 = sub_22DE1F4FC();
    v10 = os_log_type_enabled(v8, v9);
    v11 = *(void **)(v0 + 768);
    v12 = *(_QWORD *)(v0 + 504);
    v13 = *(_QWORD *)(v0 + 480);
    if (v10)
    {
      v106 = *(void (**)(uint64_t, uint64_t))(v0 + 696);
      v105 = *(_QWORD *)(v0 + 480);
      v14 = swift_slowAlloc();
      v15 = (_QWORD *)swift_slowAlloc();
      v103 = swift_slowAlloc();
      v114[0] = v103;
      *(_DWORD *)v14 = 136315394;
      *(_QWORD *)(v0 + 192) = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v114);
      sub_22DE1F628();
      *(_WORD *)(v14 + 12) = 2112;
      *(_QWORD *)(v0 + 200) = v11;
      v104 = v12;
      v16 = v11;
      sub_22DE1F628();
      *v15 = v11;

      _os_log_impl(&dword_22DD4B000, v8, v9, "%s - Interaction could not be made from donation, will attempt to invalidate: %@", (uint8_t *)v14, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8160);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v15, -1, -1);
      swift_arrayDestroy();
      v17 = (_QWORD *)(v0 + 696);
      MEMORY[0x22E320870](v103, -1, -1);
      MEMORY[0x22E320870](v14, -1, -1);

      v106(v104, v105);
    }
    else
    {
      v17 = (_QWORD *)(v0 + 704);
      v35 = *(void (**)(uint64_t, uint64_t))(v0 + 704);

      v35(v12, v13);
    }
    *(_QWORD *)(v0 + 808) = *v17;
    v111 = (uint64_t (*)(void))((int)*MEMORY[0x24BE30E18] + MEMORY[0x24BE30E18]);
    v36 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 816) = v36;
    *v36 = v0;
    v36[1] = sub_22DDCDC60;
    return v111();
  }
  sub_22DD6E9A4(v1, *(_QWORD *)(v0 + 432));
  v18 = sub_22DE1E3F8();
  v19 = sub_22DE1F4F0();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v114[0] = v21;
    *(_DWORD *)v20 = 136315138;
    *(_QWORD *)(v0 + 256) = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v114);
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v18, v19, "%s - BatchInteraction was created successfully", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v21, -1, -1);
    MEMORY[0x22E320870](v20, -1, -1);
  }

  v22 = *(_QWORD *)(v0 + 432);
  v23 = *(_QWORD *)(v22 + *(int *)(*(_QWORD *)(v0 + 368) + 24));
  *(_QWORD *)(v0 + 784) = v23;
  if (v23)
  {
    v24 = *(_QWORD *)(v0 + 424);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 640))(*(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 584), *(_QWORD *)(v0 + 480));
    sub_22DD6E960(v22, v24);
    swift_retain();
    v25 = sub_22DE1E3F8();
    v26 = sub_22DE1F4F0();
    v27 = os_log_type_enabled(v25, v26);
    v28 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v29 = *(_QWORD *)(v0 + 528);
    v107 = *(_QWORD *)(v0 + 480);
    if (v27)
    {
      v101 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
      v30 = *(_QWORD *)(v0 + 424);
      v31 = swift_slowAlloc();
      v100 = v29;
      v32 = swift_slowAlloc();
      v114[0] = v32;
      *(_DWORD *)v31 = 136315394;
      *(_QWORD *)(v0 + 240) = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v114);
      sub_22DE1F628();
      *(_WORD *)(v31 + 12) = 2080;
      sub_22DD504A8(&qword_255DB72A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v33 = sub_22DE1F8C8();
      *(_QWORD *)(v0 + 248) = sub_22DDA2E30(v33, v34, v114);
      sub_22DE1F628();
      swift_bridgeObjectRelease();
      sub_22DD5C950(v30, type metadata accessor for BatchInteraction);
      _os_log_impl(&dword_22DD4B000, v25, v26, "%s - interaction %s has appInfoController", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v32, -1, -1);
      MEMORY[0x22E320870](v31, -1, -1);

      v101(v100, v107);
    }
    else
    {
      sub_22DD5C950(*(_QWORD *)(v0 + 424), type metadata accessor for BatchInteraction);

      v28(v29, v107);
    }
    v38 = *(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 640);
    v39 = *(_QWORD *)(v0 + 584);
    v40 = *(_QWORD *)(v0 + 480);
    v41 = *(_QWORD *)(v0 + 432);
    if (!*(_QWORD *)(v0 + 752))
    {
      v57 = *(_QWORD *)(v0 + 408);
      v56 = *(_QWORD *)(v0 + 416);
      v38(*(_QWORD *)(v0 + 520), v39, v40);
      sub_22DD6E960(v41, v56);
      sub_22DD6E960(v56, v57);
      sub_22DD5C950(v56, type metadata accessor for BatchInteraction);
      v58 = sub_22DE1E3F8();
      v59 = sub_22DE1F4F0();
      v60 = os_log_type_enabled(v58, v59);
      v61 = *(_QWORD *)(v0 + 520);
      v62 = *(_QWORD *)(v0 + 480);
      if (v60)
      {
        v112 = *(void (**)(uint64_t, uint64_t))(v0 + 712);
        v63 = *(_QWORD *)(v0 + 408);
        v110 = *(_QWORD *)(v0 + 520);
        v64 = swift_slowAlloc();
        v65 = swift_slowAlloc();
        v114[0] = v65;
        *(_DWORD *)v64 = 136315394;
        *(_QWORD *)(v0 + 224) = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v114);
        sub_22DE1F628();
        *(_WORD *)(v64 + 12) = 2080;
        sub_22DD504A8(&qword_255DB72A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v66 = sub_22DE1F8C8();
        *(_QWORD *)(v0 + 232) = sub_22DDA2E30(v66, v67, v114);
        v68 = (_QWORD *)(v0 + 712);
        sub_22DE1F628();
        swift_bridgeObjectRelease();
        sub_22DD5C950(v63, type metadata accessor for BatchInteraction);
        _os_log_impl(&dword_22DD4B000, v58, v59, "%s - will block on metadata lookup for interaction: %s", (uint8_t *)v64, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22E320870](v65, -1, -1);
        MEMORY[0x22E320870](v64, -1, -1);

        v112(v110, v62);
      }
      else
      {
        v68 = (_QWORD *)(v0 + 720);
        v99 = *(void (**)(uint64_t, uint64_t))(v0 + 720);
        sub_22DD5C950(*(_QWORD *)(v0 + 408), type metadata accessor for BatchInteraction);

        v99(v61, v62);
      }
      *(_QWORD *)(v0 + 792) = *v68;
      return swift_task_switch();
    }
    v43 = *(_QWORD *)(v0 + 392);
    v42 = *(_QWORD *)(v0 + 400);
    v38(*(_QWORD *)(v0 + 512), v39, v40);
    sub_22DD6E960(v41, v42);
    sub_22DD6E960(v42, v43);
    sub_22DD5C950(v42, type metadata accessor for BatchInteraction);
    v44 = sub_22DE1E3F8();
    v45 = sub_22DE1F4F0();
    v46 = os_log_type_enabled(v44, v45);
    v47 = *(_QWORD *)(v0 + 512);
    v48 = *(_QWORD *)(v0 + 480);
    if (v46)
    {
      v109 = *(void (**)(uint64_t, uint64_t))(v0 + 728);
      v49 = *(_QWORD *)(v0 + 392);
      v50 = swift_slowAlloc();
      v102 = v47;
      v51 = swift_slowAlloc();
      v114[0] = v51;
      *(_DWORD *)v50 = 136315394;
      *(_QWORD *)(v0 + 208) = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v114);
      sub_22DE1F628();
      *(_WORD *)(v50 + 12) = 2080;
      sub_22DD504A8(&qword_255DB72A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v52 = sub_22DE1F8C8();
      *(_QWORD *)(v0 + 216) = sub_22DDA2E30(v52, v53, v114);
      sub_22DE1F628();
      swift_bridgeObjectRelease();
      sub_22DD5C950(v49, type metadata accessor for BatchInteraction);
      _os_log_impl(&dword_22DD4B000, v44, v45, "%s - will start background task to attempt metadata lookup for interaction: %s", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v51, -1, -1);
      v54 = v50;
      v55 = (const double *)(v0 + 728);
      MEMORY[0x22E320870](v54, -1, -1);

      v109(v102, v48);
    }
    else
    {
      v55 = (const double *)(v0 + 736);
      v69 = *(void (**)(uint64_t, uint64_t))(v0 + 736);
      sub_22DD5C950(*(_QWORD *)(v0 + 392), type metadata accessor for BatchInteraction);

      v69(v47, v48);
    }
    v70 = vld1q_dup_f64(v55);
    v108 = v70;
    sub_22DE04660(0, 0);
    swift_release();
    v22 = *(_QWORD *)(v0 + 432);
  }
  else
  {
    v108 = *(float64x2_t *)(v0 + 736);
  }
  v113 = *(_OWORD *)(v0 + 720);
  sub_22DD6E960(v22, *(_QWORD *)(v0 + 384));
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v72 = *(_QWORD *)(v0 + 760);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v72 = sub_22DDFCD04(0, *(_QWORD *)(v72 + 16) + 1, 1, *(_QWORD *)(v0 + 760));
  v74 = *(_QWORD *)(v72 + 16);
  v73 = *(_QWORD *)(v72 + 24);
  if (v74 >= v73 >> 1)
    v72 = sub_22DDFCD04(v73 > 1, v74 + 1, 1, v72);
  v75 = *(void **)(v0 + 768);
  v76 = *(_QWORD *)(v0 + 432);
  v78 = *(_QWORD *)(v0 + 376);
  v77 = *(_QWORD *)(v0 + 384);
  *(_QWORD *)(v72 + 16) = v74 + 1;
  sub_22DD6E9A4(v77, v72+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(_QWORD *)(v78 + 72) * v74);

  sub_22DD5C950(v76, type metadata accessor for BatchInteraction);
  v79 = *(_QWORD *)(v0 + 752) + 1;
  if (v79 == *(_QWORD *)(v0 + 672))
  {
    v80 = *(_QWORD *)(v0 + 336);
    swift_release();
    swift_release();
    swift_getKeyPath();
    v81 = swift_task_alloc();
    v82 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v81 + 16) = v80;
    *(_QWORD *)(v81 + 24) = v82;
    *(_QWORD *)(v0 + 128) = v80;
    swift_bridgeObjectRetain();
    sub_22DE1E05C();
    swift_release();
    swift_task_dealloc();
    swift_getKeyPath();
    v83 = swift_task_alloc();
    *(_QWORD *)(v83 + 16) = v80;
    *(_QWORD *)(v83 + 24) = v72;
    *(_QWORD *)(v0 + 136) = v80;
    swift_bridgeObjectRetain();
    sub_22DE1E05C();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_task_dealloc();
    v84 = sub_22DE1E3F8();
    v85 = sub_22DE1F4E4();
    if (os_log_type_enabled(v84, v85))
    {
      v86 = (uint8_t *)swift_slowAlloc();
      v87 = swift_slowAlloc();
      v114[0] = v87;
      *(_DWORD *)v86 = 136315138;
      *(_QWORD *)(v0 + 152) = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v114);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v84, v85, "%s - will enter active state", v86, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v87, -1, -1);
      MEMORY[0x22E320870](v86, -1, -1);
    }

    v88 = *(_QWORD *)(v0 + 336);
    swift_getKeyPath();
    *(_QWORD *)(v0 + 144) = v88;
    sub_22DE1E068();
    swift_release();
    v89 = *(_QWORD *)(v72 + 16);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_22DDAB6E8(v89 == 0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 760) = v72;
    *(_QWORD *)(v0 + 752) = v79;
    *(_OWORD *)(v0 + 720) = v113;
    *(float64x2_t *)(v0 + 736) = v108;
    v90 = *(_QWORD *)(v0 + 664);
    if ((v90 & 0xC000000000000001) != 0)
      v91 = (id)MEMORY[0x22E31FFC4]();
    else
      v91 = *(id *)(v90 + 8 * v79 + 32);
    v92 = v91;
    *(_QWORD *)(v0 + 768) = v91;
    v93 = sub_22DE1E3F8();
    v94 = sub_22DE1F4F0();
    if (os_log_type_enabled(v93, v94))
    {
      v95 = (uint8_t *)swift_slowAlloc();
      v96 = swift_slowAlloc();
      v114[0] = v96;
      *(_DWORD *)v95 = 136315138;
      *(_QWORD *)(v0 + 264) = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v114);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v93, v94, "%s - Will attempt to make BatchInteraction from donation", v95, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v96, -1, -1);
      MEMORY[0x22E320870](v95, -1, -1);
    }

    v97 = v92;
    v98 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 776) = v98;
    *v98 = v0;
    v98[1] = sub_22DDCC4B4;
    return sub_22DD61CB4(*(_QWORD *)(v0 + 360), (uint64_t)v97);
  }
}

uint64_t sub_22DDCD550()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 800) = v1;
  *v1 = v0;
  v1[1] = sub_22DDCD5D0;
  return sub_22DE1F8D4();
}

uint64_t sub_22DDCD5D0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DDCD624()
{
  return swift_task_switch();
}

uint64_t sub_22DDCD638()
{
  uint64_t v0;
  uint64_t v1;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  id v23;
  void *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  id v29;
  _QWORD *v30;
  uint64_t v31[2];

  swift_release();
  v1 = *(_QWORD *)(v0 + 792);
  sub_22DD6E960(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 384));
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v3 = *(_QWORD *)(v0 + 760);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v3 = sub_22DDFCD04(0, *(_QWORD *)(v3 + 16) + 1, 1, *(_QWORD *)(v0 + 760));
  v5 = *(_QWORD *)(v3 + 16);
  v4 = *(_QWORD *)(v3 + 24);
  if (v5 >= v4 >> 1)
    v3 = sub_22DDFCD04(v4 > 1, v5 + 1, 1, v3);
  v6 = *(void **)(v0 + 768);
  v7 = *(_QWORD *)(v0 + 432);
  v9 = *(_QWORD *)(v0 + 376);
  v8 = *(_QWORD *)(v0 + 384);
  *(_QWORD *)(v3 + 16) = v5 + 1;
  sub_22DD6E9A4(v8, v3+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v5);

  sub_22DD5C950(v7, type metadata accessor for BatchInteraction);
  v10 = *(_QWORD *)(v0 + 752) + 1;
  if (v10 == *(_QWORD *)(v0 + 672))
  {
    v11 = *(_QWORD *)(v0 + 336);
    swift_release();
    swift_release();
    swift_getKeyPath();
    v12 = swift_task_alloc();
    v13 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v12 + 16) = v11;
    *(_QWORD *)(v12 + 24) = v13;
    *(_QWORD *)(v0 + 128) = v11;
    swift_bridgeObjectRetain();
    sub_22DE1E05C();
    swift_release();
    swift_task_dealloc();
    swift_getKeyPath();
    v14 = swift_task_alloc();
    *(_QWORD *)(v14 + 16) = v11;
    *(_QWORD *)(v14 + 24) = v3;
    *(_QWORD *)(v0 + 136) = v11;
    swift_bridgeObjectRetain();
    sub_22DE1E05C();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_task_dealloc();
    v15 = sub_22DE1E3F8();
    v16 = sub_22DE1F4E4();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v31[0] = v18;
      *(_DWORD *)v17 = 136315138;
      *(_QWORD *)(v0 + 152) = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v31);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v15, v16, "%s - will enter active state", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v18, -1, -1);
      MEMORY[0x22E320870](v17, -1, -1);
    }

    v19 = *(_QWORD *)(v0 + 336);
    swift_getKeyPath();
    *(_QWORD *)(v0 + 144) = v19;
    sub_22DE1E068();
    swift_release();
    v20 = *(_QWORD *)(v3 + 16);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_22DDAB6E8(v20 == 0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 760) = v3;
    *(_QWORD *)(v0 + 752) = v10;
    *(_QWORD *)(v0 + 744) = v1;
    *(_QWORD *)(v0 + 736) = v1;
    *(_QWORD *)(v0 + 728) = v1;
    *(_QWORD *)(v0 + 720) = v1;
    v22 = *(_QWORD *)(v0 + 664);
    if ((v22 & 0xC000000000000001) != 0)
      v23 = (id)MEMORY[0x22E31FFC4]();
    else
      v23 = *(id *)(v22 + 8 * v10 + 32);
    v24 = v23;
    *(_QWORD *)(v0 + 768) = v23;
    v25 = sub_22DE1E3F8();
    v26 = sub_22DE1F4F0();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v31[0] = v28;
      *(_DWORD *)v27 = 136315138;
      *(_QWORD *)(v0 + 264) = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v31);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v25, v26, "%s - Will attempt to make BatchInteraction from donation", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v28, -1, -1);
      MEMORY[0x22E320870](v27, -1, -1);
    }

    v29 = v24;
    v30 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 776) = v30;
    *v30 = v0;
    v30[1] = sub_22DDCC4B4;
    return sub_22DD61CB4(*(_QWORD *)(v0 + 360), (uint64_t)v29);
  }
}

uint64_t sub_22DDCDC60()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 824) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22DDCDCC4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  void *v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  id v30;
  _QWORD *v31;
  uint64_t v32[2];

  v1 = *(_QWORD *)(v0 + 352);
  v2 = *(id *)(v0 + 768);
  sub_22DE1E200();

  swift_storeEnumTagMultiPayload();
  sub_22DE01A1C();
  sub_22DD5C950(v1, (uint64_t (*)(_QWORD))type metadata accessor for AnalyticsEvent);
  v3 = sub_22DE1E3F8();
  v4 = sub_22DE1F4E4();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(void **)(v0 + 768);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v32[0] = v7;
    *(_DWORD *)v6 = 136315138;
    *(_QWORD *)(v0 + 184) = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v32);
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v3, v4, "%s - successfully invalidated donation", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v7, -1, -1);
    MEMORY[0x22E320870](v6, -1, -1);

  }
  else
  {

  }
  v8 = *(_QWORD *)(v0 + 824);
  v9 = *(_QWORD *)(v0 + 752) + 1;
  if (v9 == *(_QWORD *)(v0 + 672))
  {
    v10 = *(_QWORD *)(v0 + 760);
    v11 = *(_QWORD *)(v0 + 336);
    swift_release();
    swift_release();
    swift_getKeyPath();
    v12 = swift_task_alloc();
    v13 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v12 + 16) = v11;
    *(_QWORD *)(v12 + 24) = v13;
    *(_QWORD *)(v0 + 128) = v11;
    swift_bridgeObjectRetain();
    sub_22DE1E05C();
    swift_release();
    swift_task_dealloc();
    swift_getKeyPath();
    v14 = swift_task_alloc();
    *(_QWORD *)(v14 + 16) = v11;
    *(_QWORD *)(v14 + 24) = v10;
    *(_QWORD *)(v0 + 136) = v11;
    swift_bridgeObjectRetain();
    sub_22DE1E05C();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_task_dealloc();
    v15 = sub_22DE1E3F8();
    v16 = sub_22DE1F4E4();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v32[0] = v18;
      *(_DWORD *)v17 = 136315138;
      *(_QWORD *)(v0 + 152) = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v32);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v15, v16, "%s - will enter active state", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v18, -1, -1);
      MEMORY[0x22E320870](v17, -1, -1);
    }

    v19 = *(_QWORD *)(v0 + 336);
    swift_getKeyPath();
    *(_QWORD *)(v0 + 144) = v19;
    sub_22DE1E068();
    swift_release();
    v20 = *(_QWORD *)(v10 + 16);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_22DDAB6E8(v20 == 0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 808);
    *(_QWORD *)(v0 + 752) = v9;
    *(_QWORD *)(v0 + 744) = v22;
    *(_QWORD *)(v0 + 736) = v22;
    *(_QWORD *)(v0 + 728) = v22;
    *(_QWORD *)(v0 + 720) = v22;
    *(_QWORD *)(v0 + 712) = v22;
    *(_QWORD *)(v0 + 704) = v22;
    *(_QWORD *)(v0 + 680) = v8;
    v23 = *(_QWORD *)(v0 + 664);
    if ((v23 & 0xC000000000000001) != 0)
      v24 = (id)MEMORY[0x22E31FFC4]();
    else
      v24 = *(id *)(v23 + 8 * v9 + 32);
    v25 = v24;
    *(_QWORD *)(v0 + 768) = v24;
    v26 = sub_22DE1E3F8();
    v27 = sub_22DE1F4F0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v32[0] = v29;
      *(_DWORD *)v28 = 136315138;
      *(_QWORD *)(v0 + 264) = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v32);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v26, v27, "%s - Will attempt to make BatchInteraction from donation", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v29, -1, -1);
      MEMORY[0x22E320870](v28, -1, -1);
    }

    v30 = v25;
    v31 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 776) = v31;
    *v31 = v0;
    v31[1] = sub_22DDCC4B4;
    return sub_22DD61CB4(*(_QWORD *)(v0 + 360), (uint64_t)v30);
  }
}

uint64_t sub_22DDCE394()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t *v17;
  void *v18;
  void *v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  id v44;
  _QWORD *v45;
  id v46;
  NSObject *log;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52[2];

  v1 = v0;
  v2 = *(void **)(v0 + 824);
  v3 = *(void **)(v0 + 768);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 640))(*(_QWORD *)(v1 + 496), *(_QWORD *)(v1 + 584), *(_QWORD *)(v1 + 480));
  v4 = v3;
  v5 = v2;
  v6 = v4;
  v7 = v2;
  v8 = sub_22DE1E3F8();
  v9 = sub_22DE1F4FC();
  if (os_log_type_enabled(v8, v9))
  {
    v46 = *(id *)(v1 + 824);
    v10 = *(void **)(v1 + 768);
    v50 = *(_QWORD *)(v1 + 496);
    v51 = *(void (**)(uint64_t, uint64_t))(v1 + 648);
    v49 = *(_QWORD *)(v1 + 480);
    log = v8;
    v11 = swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    v48 = swift_slowAlloc();
    v52[0] = v48;
    *(_DWORD *)v11 = 136315650;
    *(_QWORD *)(v1 + 160) = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v52);
    sub_22DE1F628();
    *(_WORD *)(v11 + 12) = 2112;
    *(_QWORD *)(v1 + 168) = v10;
    v13 = v10;
    sub_22DE1F628();
    *v12 = v10;

    v14 = v13;
    *(_WORD *)(v11 + 22) = 2112;
    v15 = v46;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v1 + 176) = v16;
    sub_22DE1F628();
    v12[1] = v16;

    v17 = (uint64_t *)(v1 + 648);
    _os_log_impl(&dword_22DD4B000, log, v9, "%s - Error invalidating donation %@: %@", (uint8_t *)v11, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8160);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v12, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v48, -1, -1);
    MEMORY[0x22E320870](v11, -1, -1);

    v51(v50, v49);
  }
  else
  {
    v18 = *(void **)(v1 + 824);
    v19 = *(void **)(v1 + 768);
    v17 = (uint64_t *)(v1 + 688);
    v20 = *(void (**)(uint64_t, uint64_t))(v1 + 688);
    v21 = *(_QWORD *)(v1 + 496);
    v22 = *(_QWORD *)(v1 + 480);

    v20(v21, v22);
  }
  v23 = *(_QWORD *)(v1 + 752) + 1;
  if (v23 == *(_QWORD *)(v1 + 672))
  {
    v24 = *(_QWORD *)(v1 + 760);
    v25 = *(_QWORD *)(v1 + 336);
    swift_release();
    swift_release();
    swift_getKeyPath();
    v26 = swift_task_alloc();
    v27 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v26 + 16) = v25;
    *(_QWORD *)(v26 + 24) = v27;
    *(_QWORD *)(v1 + 128) = v25;
    swift_bridgeObjectRetain();
    sub_22DE1E05C();
    swift_release();
    swift_task_dealloc();
    swift_getKeyPath();
    v28 = swift_task_alloc();
    *(_QWORD *)(v28 + 16) = v25;
    *(_QWORD *)(v28 + 24) = v24;
    *(_QWORD *)(v1 + 136) = v25;
    swift_bridgeObjectRetain();
    sub_22DE1E05C();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_task_dealloc();
    v29 = sub_22DE1E3F8();
    v30 = sub_22DE1F4E4();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v52[0] = v32;
      *(_DWORD *)v31 = 136315138;
      *(_QWORD *)(v1 + 152) = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v52);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v29, v30, "%s - will enter active state", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v32, -1, -1);
      MEMORY[0x22E320870](v31, -1, -1);
    }

    v33 = *(_QWORD *)(v1 + 336);
    swift_getKeyPath();
    *(_QWORD *)(v1 + 144) = v33;
    sub_22DE1E068();
    swift_release();
    v34 = *(_QWORD *)(v24 + 16);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_22DDAB6E8(v34 == 0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v36 = *v17;
    *(_QWORD *)(v1 + 752) = v23;
    *(_QWORD *)(v1 + 744) = v36;
    *(_QWORD *)(v1 + 736) = v36;
    *(_QWORD *)(v1 + 728) = v36;
    *(_QWORD *)(v1 + 720) = v36;
    *(_QWORD *)(v1 + 712) = v36;
    *(_QWORD *)(v1 + 704) = v36;
    *(_QWORD *)(v1 + 696) = v36;
    *(_QWORD *)(v1 + 688) = v36;
    *(_QWORD *)(v1 + 680) = 0;
    v37 = *(_QWORD *)(v1 + 664);
    if ((v37 & 0xC000000000000001) != 0)
      v38 = (id)MEMORY[0x22E31FFC4]();
    else
      v38 = *(id *)(v37 + 8 * v23 + 32);
    v39 = v38;
    *(_QWORD *)(v1 + 768) = v38;
    v40 = sub_22DE1E3F8();
    v41 = sub_22DE1F4F0();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      v43 = swift_slowAlloc();
      v52[0] = v43;
      *(_DWORD *)v42 = 136315138;
      *(_QWORD *)(v1 + 264) = sub_22DDA2E30(0x29286863746566, 0xE700000000000000, v52);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v40, v41, "%s - Will attempt to make BatchInteraction from donation", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v43, -1, -1);
      MEMORY[0x22E320870](v42, -1, -1);
    }

    v44 = v39;
    v45 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 776) = v45;
    *v45 = v1;
    v45[1] = sub_22DDCC4B4;
    return sub_22DD61CB4(*(_QWORD *)(v1 + 360), (uint64_t)v44);
  }
}

uint64_t sub_22DDCEBC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;

  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  sub_22DE1E068();
  swift_release();
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v1 + 24) + 16))
  {
    swift_getKeyPath();
    sub_22DE1E068();
    swift_release();
    swift_getKeyPath();
    sub_22DE1E080();
    swift_release();
    swift_beginAccess();
    sub_22DDCF608(0, a1);
    swift_endAccess();
    swift_getKeyPath();
    sub_22DE1E074();
    swift_release();
    v3 = type metadata accessor for BatchInteraction(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a1, 0, 1, v3);
  }
  else
  {
    v5 = type metadata accessor for BatchInteraction(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, 1, 1, v5);
  }
}

uint64_t sub_22DDCED80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t *v8;
  unint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for BatchInteraction(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD6E960(a1, (uint64_t)v7);
  swift_getKeyPath();
  v15 = v2;
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  sub_22DE1E068();
  swift_release();
  v15 = v2;
  swift_getKeyPath();
  sub_22DE1E080();
  swift_release();
  v8 = (unint64_t *)(v2 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(v2 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v2 + 16) = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v9 = sub_22DDFCD04(0, *(_QWORD *)(v9 + 16) + 1, 1, v9);
    *v8 = v9;
  }
  v12 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 24);
  if (v12 >= v11 >> 1)
  {
    v9 = sub_22DDFCD04(v11 > 1, v12 + 1, 1, v9);
    *v8 = v9;
  }
  *(_QWORD *)(v9 + 16) = v12 + 1;
  sub_22DD6E9A4((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v12);
  swift_endAccess();
  v15 = v2;
  swift_getKeyPath();
  sub_22DE1E074();
  return swift_release();
}

uint64_t sub_22DDCEF68()
{
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  sub_22DE1E068();
  swift_release();
  swift_beginAccess();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_22DE1E05C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_22DE1E05C();
  return swift_release();
}

uint64_t sub_22DDCF0BC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_22DDCF0DC()
{
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  sub_22DE1E068();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_22DDCF178@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  sub_22DE1E068();
  swift_release();
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_22DDCF21C()
{
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  swift_bridgeObjectRetain();
  sub_22DE1E05C();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DDCF2D4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 16) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DDCF338()
{
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  sub_22DE1E068();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_22DDCF3D4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 24) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DDCF438()
{
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  sub_22DE1E068();
  swift_release();
  return swift_retain();
}

uint64_t sub_22DDCF4C0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  sub_22DE1E068();
  swift_release();
  *a2 = *(_QWORD *)(v3 + 32);
  return swift_retain();
}

uint64_t sub_22DDCF550()
{
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  swift_retain();
  sub_22DE1E05C();
  swift_release();
  return swift_release();
}

uint64_t sub_22DDCF608@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t *v2;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_22DDD05D8(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6 - 1;
  v8 = *(_QWORD *)(type metadata accessor for BatchInteraction(0) - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
  result = sub_22DD6E9A4(v10, a2);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    result = sub_22DE1F808();
    __break(1u);
    return result;
  }
  if (v9 > 0 || v10 >= v10 + v9 + v9 * (v7 - a1))
  {
    result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v9)
  {
    result = swift_arrayInitWithTakeBackToFront();
  }
  *(_QWORD *)(v5 + 16) = v7;
  *v2 = v5;
  return result;
}

uint64_t sub_22DDCF73C()
{
  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  sub_22DE1E068();
  swift_release();
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6248, (uint64_t (*)(uint64_t))type metadata accessor for StateController, (uint64_t)&unk_22DE247FC);
  swift_retain();
  sub_22DE1E05C();
  swift_release();
  swift_release();
  swift_getKeyPath();
  sub_22DE1E068();
  swift_release();
  swift_getKeyPath();
  swift_retain();
  sub_22DE1E05C();
  swift_release();
  return swift_release();
}

uint64_t sub_22DDCF910(uint64_t a1)
{
  uint64_t v2;

  swift_getKeyPath();
  sub_22DD504A8(&qword_255DB6268, (uint64_t (*)(uint64_t))type metadata accessor for DonationController, (uint64_t)&unk_22DE258E4);
  sub_22DE1E068();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5870);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_22DE20F30;
  *(_QWORD *)(v2 + 32) = 0x6961674120797254;
  *(_QWORD *)(v2 + 40) = 0xE90000000000006ELL;
  *(_BYTE *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 56) = sub_22DDD0A18;
  *(_QWORD *)(v2 + 64) = a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB6248, (uint64_t (*)(uint64_t))type metadata accessor for StateController, (uint64_t)&unk_22DE247FC);
  swift_retain();
  swift_retain();
  sub_22DE1E05C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_22DDCFAE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5878);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22DE1F46C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_22DE1F448();
  swift_retain();
  v6 = sub_22DE1F43C();
  v7 = (_QWORD *)swift_allocObject();
  v8 = MEMORY[0x24BEE6930];
  v7[2] = v6;
  v7[3] = v8;
  v7[4] = a1;
  sub_22DD54C94((uint64_t)v4, (uint64_t)&unk_255DB8DB0, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_22DDCFBC4()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = sub_22DE1F448();
  v0[3] = sub_22DE1F43C();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_22DDCFC28;
  return sub_22DDCAA10();
}

uint64_t sub_22DDCFC28()
{
  swift_task_dealloc();
  sub_22DE1F418();
  return swift_task_switch();
}

uint64_t sub_22DDCFC98()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DDCFCC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC8Feedback18DonationController___observationRegistrar;
  v2 = sub_22DE1E098();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_22DDCFD30()
{
  return type metadata accessor for DonationController();
}

uint64_t type metadata accessor for DonationController()
{
  uint64_t result;

  result = qword_255DB8CF8;
  if (!qword_255DB8CF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22DDCFD74()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22DE1E098();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_22DDCFE08(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v23 = a2;
  v24 = a3;
  v22 = a1;
  v25 = sub_22DE1F1B4();
  v28 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22DE1F1D8();
  v26 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8DB8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = sub_22DE1F1C0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD78E9C();
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5480], v11);
  v21 = sub_22DE1F598();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v8);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 21) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = swift_allocObject();
  *(_DWORD *)(v16 + 16) = v23;
  *(_BYTE *)(v16 + 20) = v24;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v16 + v15, (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_22DDD0B24;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = &block_descriptor_7;
  v17 = _Block_copy(aBlock);
  sub_22DE1F1CC();
  v29 = MEMORY[0x24BEE4AF8];
  sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD78E50();
  v18 = v25;
  sub_22DE1F67C();
  v19 = (void *)v21;
  MEMORY[0x22E31FDFC](0, v7, v4, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v18);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v27);
  return swift_release();
}

uint64_t sub_22DDD00D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8DB8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  sub_22DE1E104();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  MEMORY[0x22E31E968](a1, a2, sub_22DDD0BD8, v10);
  return swift_release();
}

uint64_t sub_22DDD01D8(void *a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  _BYTE v20[4];
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v21 = a2;
  v5 = sub_22DE1F1B4();
  v25 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_22DE1F1D8();
  v23 = *(_QWORD *)(v8 - 8);
  v24 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8DB8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22DD78E9C();
  v22 = sub_22DE1F574();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  LOBYTE(v13) = v21 & 1;
  *(_BYTE *)(v16 + 24) = v21 & 1;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v12 + 32))(v16 + v15, v14, v11);
  aBlock[4] = sub_22DDD0CA4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = &block_descriptor_32;
  v17 = _Block_copy(aBlock);
  sub_22DD97608(a1, v13);
  sub_22DE1F1CC();
  v26 = MEMORY[0x24BEE4AF8];
  sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD78E50();
  sub_22DE1F67C();
  v18 = (void *)v22;
  MEMORY[0x22E31FDFC](0, v10, v7, v17);
  _Block_release(v17);

  (*(void (**)(_BYTE *, uint64_t))(v25 + 8))(v7, v5);
  (*(void (**)(_BYTE *, uint64_t))(v23 + 8))(v10, v24);
  return swift_release();
}

uint64_t sub_22DDD044C(void *a1, char a2)
{
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8DB8);
    return sub_22DE1F424();
  }
  else
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8DB8);
    return sub_22DE1F430();
  }
}

uint64_t sub_22DDD04B8(void (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v2 = sub_22DE1E050();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v5);
  sub_22DD504A8(&qword_255DB72A0, v3, MEMORY[0x24BDCEAB8]);
  v8 = sub_22DE1F8C8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  return v8;
}

uint64_t sub_22DDD057C(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_22DDD059C()
{
  return sub_22DDCF73C();
}

uint64_t sub_22DDD05A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_22DDD05C4(uint64_t a1)
{
  uint64_t v1;

  return sub_22DDCFE08(a1, *(_DWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 20));
}

uint64_t sub_22DDD05D0()
{
  uint64_t v0;

  return sub_22DDCF910(v0);
}

uint64_t sub_22DDD05D8(unint64_t a1)
{
  return sub_22DDFCD04(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_22DDD05EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7CA0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  v6 = sub_22DDD0820(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_22DD70E70();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_22DDD06DC()
{
  uint64_t v0;

  return sub_22DDCF2D4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_22DDD06FC(uint64_t a1)
{
  return sub_22DE0544C(a1);
}

uint64_t sub_22DDD0704()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + 32) = *(_QWORD *)(v0 + 24);
  swift_retain();
  return swift_release();
}

_QWORD *sub_22DDD073C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DBA000);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 + 31;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 6);
  v6 = sub_22DDD0CE4(&v8, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_22DD70E70();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_22DDD0820(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_22DDD0A18()
{
  uint64_t v0;

  return sub_22DDCFAE8(v0);
}

uint64_t sub_22DDD0A28()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DDD0A54()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22DD54F04;
  return sub_22DDCFBC4();
}

uint64_t sub_22DDD0AC0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8DB8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 21) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_22DDD0B24()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB8DB8) - 8) + 80);
  return sub_22DDD00D8(*(unsigned int *)(v0 + 16), *(unsigned __int8 *)(v0 + 20), v0 + ((v1 + 21) & ~v1));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_22DDD0B74()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8DB8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_22DDD0BD8(void *a1, char a2)
{
  uint64_t v2;
  int v4;
  uint64_t v5;

  v4 = a2 & 1;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB8DB8) - 8) + 80);
  return sub_22DDD01D8(a1, v4, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_22DDD0C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8DB8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  sub_22DD975D4(*(id *)(v0 + 16), *(_BYTE *)(v0 + 24));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_22DDD0CA4()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8DB8);
  return sub_22DDD044C(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

_QWORD *sub_22DDD0CE4(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int64_t v27;
  uint64_t v28;

  v28 = a4 + 64;
  v5 = -1 << *(_BYTE *)(a4 + 32);
  if (-v5 < 64)
    v6 = ~(-1 << -(char)v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v10 = 0;
    v8 = 0;
LABEL_39:
    *result = a4;
    result[1] = v28;
    result[2] = ~v5;
    result[3] = v10;
    result[4] = v7;
    return (_QWORD *)v8;
  }
  v8 = a3;
  if (!a3)
  {
    v10 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v9 = a2;
  v25 = -1 << *(_BYTE *)(a4 + 32);
  v26 = result;
  v10 = 0;
  v11 = 0;
  v27 = (unint64_t)(63 - v5) >> 6;
  if (!v7)
    goto LABEL_9;
LABEL_8:
  v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v13 = v12 | (v10 << 6);
  while (1)
  {
    ++v11;
    v17 = *(_QWORD *)(a4 + 56) + (v13 << 6);
    v18 = *(_QWORD *)(v17 + 8);
    v19 = *(_QWORD *)(v17 + 16);
    v20 = *(_QWORD *)(v17 + 24);
    v21 = *(_BYTE *)(v17 + 32);
    v22 = *(_QWORD *)(v17 + 40);
    v23 = *(_BYTE *)(v17 + 48);
    v24 = *(_QWORD *)(v17 + 56);
    *(_QWORD *)v9 = *(_QWORD *)v17;
    *(_QWORD *)(v9 + 8) = v18;
    *(_QWORD *)(v9 + 16) = v19;
    *(_QWORD *)(v9 + 24) = v20;
    *(_BYTE *)(v9 + 32) = v21;
    *(_QWORD *)(v9 + 40) = v22;
    *(_BYTE *)(v9 + 48) = v23;
    *(_QWORD *)(v9 + 56) = v24;
    if (v11 == v8)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_22DDAA44C(v22, v23);
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v9 += 64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22DDAA44C(v22, v23);
    result = (_QWORD *)swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_8;
LABEL_9:
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v14 >= v27)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v14);
    if (!v15)
    {
      v10 += 2;
      if (v14 + 1 >= v27)
      {
        v7 = 0;
        v10 = v14;
      }
      else
      {
        v15 = *(_QWORD *)(v28 + 8 * v10);
        if (v15)
          goto LABEL_14;
        v16 = v14 + 2;
        if (v14 + 2 >= v27)
          goto LABEL_33;
        v15 = *(_QWORD *)(v28 + 8 * v16);
        if (v15)
        {
LABEL_17:
          v14 = v16;
          goto LABEL_18;
        }
        v10 = v14 + 3;
        if (v14 + 3 < v27)
        {
          v15 = *(_QWORD *)(v28 + 8 * v10);
          if (v15)
          {
LABEL_14:
            v14 = v10;
            goto LABEL_18;
          }
          v16 = v14 + 4;
          if (v14 + 4 >= v27)
          {
LABEL_33:
            v7 = 0;
            goto LABEL_37;
          }
          v15 = *(_QWORD *)(v28 + 8 * v16);
          if (!v15)
          {
            while (1)
            {
              v14 = v16 + 1;
              if (__OFADD__(v16, 1))
                goto LABEL_42;
              if (v14 >= v27)
              {
                v7 = 0;
                v10 = v27 - 1;
                goto LABEL_37;
              }
              v15 = *(_QWORD *)(v28 + 8 * v14);
              ++v16;
              if (v15)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v7 = 0;
        v10 = v14 + 2;
      }
LABEL_37:
      v8 = v11;
LABEL_38:
      v5 = v25;
      result = v26;
      goto LABEL_39;
    }
LABEL_18:
    v7 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v14 << 6);
    v10 = v14;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_22DDD0F88()
{
  return sub_22DDD05A4();
}

uint64_t sub_22DDD0F9C()
{
  return sub_22DDD06DC();
}

_QWORD *sub_22DDD0FB0()
{
  return sub_22DD6DF28();
}

uint64_t sub_22DDD0FC4()
{
  return sub_22DDBB15C();
}

uint64_t sub_22DDD1064()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_22DDD1134(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Feedback18FBKSubmissionError_serverErrorDetails);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DDD1184(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC8Feedback18FBKSubmissionError_serverErrorDetails);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_22DDD11EC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_22DDD1278()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC8Feedback18FBKSubmissionError_underlyingError);
  swift_beginAccess();
  return *v1;
}

void sub_22DDD1318(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC8Feedback18FBKSubmissionError_underlyingError);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

void sub_22DDD1368(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC8Feedback18FBKSubmissionError_underlyingError);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

uint64_t (*sub_22DDD13C8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

char *sub_22DDD140C(void *a1)
{
  char *v1;
  id v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char *v11;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  objc_super v16;

  *(_QWORD *)&v1[OBJC_IVAR____TtC8Feedback18FBKSubmissionError_serverErrorDetails] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Feedback18FBKSubmissionError_underlyingError] = a1;
  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for FBKSubmissionError();
  v3 = a1;
  v4 = (char *)objc_msgSendSuper2(&v16, sel_init);
  v5 = objc_msgSend(v3, sel_userInfo);
  v6 = sub_22DE1F244();

  v7 = sub_22DE1F2B0();
  if (*(_QWORD *)(v6 + 16) && (v9 = sub_22DDFD368(v7, v8), (v10 & 1) != 0))
  {
    sub_22DDA48F0(*(_QWORD *)(v6 + 56) + 32 * v9, (uint64_t)&v14);
  }
  else
  {
    v14 = 0u;
    v15 = 0u;
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v15 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8E20);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v11 = &v4[OBJC_IVAR____TtC8Feedback18FBKSubmissionError_serverErrorDetails];
      swift_beginAccess();
      *(_QWORD *)v11 = v13;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_22DD7CA0C((uint64_t)&v14);
  }
  return v4;
}

uint64_t sub_22DDD1644()
{
  uint64_t v0;
  id *v1;
  id v2;
  id v3;
  uint64_t v4;

  v1 = (id *)(v0 + OBJC_IVAR____TtC8Feedback18FBKSubmissionError_underlyingError);
  swift_beginAccess();
  v2 = *v1;
  v3 = objc_msgSend(v2, sel_description);
  v4 = sub_22DE1F2B0();

  return v4;
}

uint64_t static FBKSubmissionError.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_255DB8DC0;
}

uint64_t static FBKSubmissionError.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_255DB8DC0 = a1;
  return result;
}

uint64_t (*static FBKSubmissionError.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_22DDD1814(void *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  id *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Feedback18FBKSubmissionError_serverErrorDetails);
  swift_beginAccess();
  if (*v3)
  {
    swift_bridgeObjectRetain();
    v4 = sub_22DE1F238();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  v5 = (void *)sub_22DE1F28C();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);
  swift_unknownObjectRelease();

  v6 = (id *)(v1 + OBJC_IVAR____TtC8Feedback18FBKSubmissionError_underlyingError);
  swift_beginAccess();
  v7 = objc_msgSend(*v6, sel_domain);
  sub_22DE1F2B0();

  v8 = objc_msgSend(*v6, sel_code);
  v9 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  v10 = (void *)sub_22DE1F28C();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithDomain_code_userInfo_, v10, v8, 0);

  v12 = (void *)sub_22DE1F28C();
  objc_msgSend(a1, sel_encodeObject_forKey_, v11, v12);

}

id FBKSubmissionError.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_22DDD1CD4();

  return v4;
}

id FBKSubmissionError.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_22DDD1CD4();

  return v2;
}

id FBKSubmissionError.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FBKSubmissionError.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id FBKSubmissionError.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBKSubmissionError();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *_s8Feedback18FBKSubmissionErrorC16debugDescriptionACSS_tcfC_0(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8E28);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22DE20F30;
  *(_QWORD *)(inited + 32) = sub_22DE1F2B0();
  *(_QWORD *)(inited + 40) = v5;
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  v6 = sub_22DE06CE8(inited);
  sub_22DDAC98C(v6);
  swift_bridgeObjectRelease();
  v7 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  v8 = (void *)sub_22DE1F28C();
  v9 = (void *)sub_22DE1F238();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v7, sel_initWithDomain_code_userInfo_, v8, -1, v9);

  v11 = objc_allocWithZone((Class)type metadata accessor for FBKSubmissionError());
  return sub_22DDD140C(v10);
}

id sub_22DDD1CD4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  objc_super v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;

  v1 = &v0[OBJC_IVAR____TtC8Feedback18FBKSubmissionError_serverErrorDetails];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Feedback18FBKSubmissionError_serverErrorDetails] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8E00);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_22DE23E60;
  *(_QWORD *)(v2 + 32) = sub_22DD70E78(0, &qword_255DB8E08);
  *(_QWORD *)(v2 + 40) = sub_22DD70E78(0, (unint64_t *)&unk_255DB8E10);
  *(_QWORD *)(v2 + 48) = sub_22DD70E78(0, &qword_255DB7D70);
  v3 = v0;
  sub_22DE1F5D4();
  swift_bridgeObjectRelease();
  if (v9)
  {
    sub_22DDB26A8(&v8, &v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8E20);
    swift_dynamicCast();
    v4 = v6;
  }
  else
  {
    sub_22DD7CA0C((uint64_t)&v8);
    v4 = 0;
  }
  swift_beginAccess();
  *(_QWORD *)v1 = v4;
  swift_bridgeObjectRelease();
  sub_22DD70E78(0, &qword_255DB81C0);
  result = (id)sub_22DE1F5C8();
  if (result)
  {
    *(_QWORD *)&v3[OBJC_IVAR____TtC8Feedback18FBKSubmissionError_underlyingError] = result;

    v7.receiver = v3;
    v7.super_class = (Class)type metadata accessor for FBKSubmissionError();
    return objc_msgSendSuper2(&v7, sel_init);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for FBKSubmissionError()
{
  return objc_opt_self();
}

uint64_t sub_22DDD1EC8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC8Feedback18FBKSubmissionError_serverErrorDetails);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

id sub_22DDD1F20@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC8Feedback18FBKSubmissionError_underlyingError);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for FBKSubmissionError()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FBKSubmissionError.serverErrorDetails.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of FBKSubmissionError.serverErrorDetails.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of FBKSubmissionError.serverErrorDetails.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of FBKSubmissionError.underlyingError.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of FBKSubmissionError.underlyingError.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of FBKSubmissionError.underlyingError.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of FBKSubmissionError.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of FBKSubmissionError.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t View.inlineFeedback(controller:completion:)(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v18;

  v13 = type metadata accessor for FBKEvaluationViewModifier();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_retain();
  swift_retain();
  v16 = a3;
  sub_22DD50D8C(a4);
  sub_22DDD2194(a1, a2, (uint64_t)v16, a4, v15);
  MEMORY[0x22E31F79C](v15, a6, v13, a7);
  return sub_22DD5C950((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FBKEvaluationViewModifier);
}

{
  uint64_t v14;

  if (!a4)
    return View.inlineFeedback(controller:completion:)(a1, a2, a3, 0, 0, a6, a7);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a4;
  *(_QWORD *)(v14 + 24) = a5;
  swift_retain_n();
  View.inlineFeedback(controller:completion:)(a1, a2, a3, (uint64_t)sub_22DDD26CC, v14, a6, a7);
  swift_release();
  return sub_22DD50DE0(a4);
}

uint64_t type metadata accessor for FBKEvaluationViewModifier()
{
  uint64_t result;

  result = qword_255DB8E90;
  if (!qword_255DB8E90)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22DDD2194(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t *v10;
  uint64_t v11;
  id v12;
  uint64_t KeyPath;
  _QWORD v14[2];
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;

  v10 = (_QWORD *)((char *)a5 + *(int *)(type metadata accessor for FBKEvaluationViewModifier() + 20));
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7018);
  swift_storeEnumTagMultiPayload();
  v16 = a1;
  v17 = a2;
  v18 = a3;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
  MEMORY[0x22E31F8EC](&v19, v11);
  v12 = v19;
  if (a4)
  {
    KeyPath = swift_getKeyPath();
    v14[1] = v14;
    MEMORY[0x24BDAC7A8](KeyPath);
    v15 = a1;
    v16 = v12;
    sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
    swift_retain();
    sub_22DE1E05C();
    a1 = v15;
    swift_release();
    sub_22DD50DE0(a4);

    sub_22DD50DE0(a4);
  }
  else
  {

  }
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
}

uint64_t sub_22DDD2438(void *a1, char a2, void (*a3)(uint64_t *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  int v18;
  void (*v19)(uint64_t *);
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t *v23;
  id v24;
  uint64_t v26;
  void (*v27)(uint64_t *);

  v27 = a3;
  v5 = type metadata accessor for FBKEvaluation.Response(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8F40);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v26 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8F48);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (uint64_t *)((char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a2 & 1) != 0)
  {
    *v17 = (uint64_t)a1;
    swift_storeEnumTagMultiPayload();
    v24 = a1;
    v27(v17);
    v23 = &qword_255DB8F48;
    v22 = (uint64_t)v17;
  }
  else
  {
    sub_22DDC6F74(a1, (uint64_t)v14);
    sub_22DD506A0((uint64_t)v14, (uint64_t)v12, &qword_255DB8F40);
    v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5);
    v19 = v27;
    if (v18 == 1)
    {
      sub_22DD5071C((uint64_t)v12, &qword_255DB8F40);
      sub_22DDD4680();
      v20 = swift_allocError();
      *v21 = 3;
      *v17 = v20;
      swift_storeEnumTagMultiPayload();
      v19(v17);
      sub_22DD5071C((uint64_t)v17, &qword_255DB8F48);
      v22 = (uint64_t)v14;
      v23 = &qword_255DB8F40;
    }
    else
    {
      sub_22DD647B0((uint64_t)v12, (uint64_t)v8, type metadata accessor for FBKEvaluation.Response);
      sub_22DD5C570((uint64_t)v8, (uint64_t)v17, type metadata accessor for FBKEvaluation.Response);
      swift_storeEnumTagMultiPayload();
      v19(v17);
      sub_22DD5071C((uint64_t)v17, &qword_255DB8F48);
      sub_22DD5C950((uint64_t)v8, type metadata accessor for FBKEvaluation.Response);
      v23 = &qword_255DB8F40;
      v22 = (uint64_t)v14;
    }
  }
  return sub_22DD5071C(v22, v23);
}

uint64_t sub_22DDD26A8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22DDD26CC(void *a1, char a2)
{
  uint64_t v2;

  return sub_22DDD2438(a1, a2 & 1, *(void (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_22DDD26D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  type metadata accessor for FBKEvaluationViewModifier();
  v2 = sub_22DE1E6E0();
  v4[0] = v1;
  v4[1] = sub_22DD504A8(&qword_255DB7370, (uint64_t (*)(uint64_t))type metadata accessor for FBKEvaluationViewModifier, (uint64_t)&unk_22DE25A98);
  return MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v2, v4);
}

uint64_t *sub_22DDD2758(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = (void *)a2[2];
    a1[1] = a2[1];
    a1[2] = (uint64_t)v6;
    v7 = *(int *)(a3 + 20);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    swift_retain();
    swift_retain();
    v10 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7018);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_22DE1EB3C();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7020);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v12 + 16))(v8, v9, v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22DDD28A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_release();
  swift_release();

  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7018);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_22DE1EB3C();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *sub_22DDD2960(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  swift_retain();
  swift_retain();
  v9 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7018);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_22DE1EB3C();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7020);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v7, v8, v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
  }
  else
  {
    *v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_22DDD2A84(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 20);
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    sub_22DD5071C((uint64_t)a1 + v9, &qword_255DB7018);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7018);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_22DE1EB3C();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7020);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22DDD2BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 20);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7018);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_22DE1EB3C();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7020);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v5, v6, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_22DDD2CFC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  v6 = (void *)a1[2];
  a1[2] = a2[2];

  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_22DD5071C((uint64_t)a1 + v7, &qword_255DB7018);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7018);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_22DE1EB3C();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7020);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v8, v9, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22DDD2E4C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DDD2E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8E30);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_22DDD2ED8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DDD2EE4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8E30);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_22DDD2F5C()
{
  unint64_t v0;

  sub_22DDD2FD0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_22DDD2FD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255DB8EA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB7020);
    v0 = sub_22DE1E548();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255DB8EA0);
  }
}

uint64_t sub_22DDD3028()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DDD3038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  void *v14;
  id v15;
  uint64_t v16;
  char *v17;
  void *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  char *v50;
  uint64_t v51;
  void *v52;
  unint64_t v53;

  v3 = (uint64_t)v2;
  v43 = a1;
  v47 = a2;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8ED0);
  v39 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v38 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8ED8);
  MEMORY[0x24BDAC7A8](v44);
  v46 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FBKEvaluationViewModifier();
  v40 = *(_QWORD *)(v6 - 8);
  v7 = *(_QWORD *)(v40 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8EE0);
  v42 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v41 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  v10 = (uint64_t)v2[1];
  v12 = v2[2];
  v50 = *v2;
  v51 = v10;
  v52 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
  MEMORY[0x22E31F8EC](v49);
  v13 = (char *)v49[0];
  swift_getKeyPath();
  v50 = v13;
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  swift_release();
  v14 = *(void **)&v13[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__interaction];
  v15 = v14;

  if (v14)
  {
    v49[0] = v11;
    v49[1] = v10;
    v49[2] = v12;
    sub_22DE1F094();
    v17 = v50;
    v16 = v51;
    v18 = v52;
    swift_getKeyPath();
    v50 = v17;
    v51 = v16;
    v52 = v18;
    sub_22DE1F088();

    swift_release();
    swift_release();
    swift_release();
    sub_22DD5C570(v3, (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for FBKEvaluationViewModifier);
    v19 = (*(unsigned __int8 *)(v40 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    v20 = (v7 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    v21 = swift_allocObject();
    sub_22DD647B0((uint64_t)v8, v21 + v19, (uint64_t (*)(_QWORD))type metadata accessor for FBKEvaluationViewModifier);
    *(_QWORD *)(v21 + v20) = v15;
    v22 = v15;
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8EE8);
    v36 = sub_22DDD42C8();
    v37 = sub_22DDD4314();
    v24 = v41;
    v25 = v48;
    sub_22DE1EEC0();
    swift_release();
    swift_release();
    swift_release();
    v26 = v42;
    v27 = v45;
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v46, v24, v45);
    swift_storeEnumTagMultiPayload();
    v50 = (char *)v25;
    v51 = v23;
    v52 = (void *)v36;
    v53 = v37;
    swift_getOpaqueTypeConformance2();
    sub_22DE1EAD0();

    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v24, v27);
  }
  else
  {
    v30 = v38;
    v29 = v39;
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
    v32 = v48;
    v31(v38, v43, v48);
    v31(v46, (uint64_t)v30, v32);
    swift_storeEnumTagMultiPayload();
    v33 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB8EE8);
    v34 = sub_22DDD42C8();
    v35 = sub_22DDD4314();
    v50 = (char *)v32;
    v51 = v33;
    v52 = (void *)v34;
    v53 = v35;
    swift_getOpaqueTypeConformance2();
    sub_22DE1EAD0();
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v30, v32);
  }
}

uint64_t sub_22DDD3498()
{
  sub_22DE1F13C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8EE8);
  sub_22DE1E674();
  return swift_release();
}

uint64_t sub_22DDD3504@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  _QWORD v34[2];
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  __int128 v42;
  char *v43;

  v40 = a2;
  v39 = a3;
  v38 = sub_22DE1EB3C();
  v4 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v35 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_255DB8F18);
  MEMORY[0x24BDAC7A8](v37);
  v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7020);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v36 = (uint64_t)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v34 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v34 - v14;
  v16 = type metadata accessor for FBKEvaluationViewModifier();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = *(_QWORD *)a1;
  v42 = *(_OWORD *)(a1 + 8);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
  MEMORY[0x22E31F8EC](&v43, v19);
  v20 = v43;
  v21 = &v43[OBJC_IVAR____TtC8Feedback23FBKEvaluationController_blockPresentationDetentUsage];
  swift_beginAccess();
  if (*v21 != 1)
  {

    v34[1] = a1;
    sub_22DD5C570(a1, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FBKEvaluationViewModifier);
    sub_22DD8416C((uint64_t)v15);
    v27 = v38;
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v13, *MEMORY[0x24BDEFEE8], v38);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v27);
    v28 = (uint64_t)&v7[*((int *)v37 + 12)];
    sub_22DD506A0((uint64_t)v15, (uint64_t)v7, &qword_255DB7020);
    sub_22DD506A0((uint64_t)v13, v28, &qword_255DB7020);
    v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    if (v29((uint64_t)v7, 1, v27) == 1)
    {
      sub_22DD5071C((uint64_t)v13, &qword_255DB7020);
      sub_22DD5071C((uint64_t)v15, &qword_255DB7020);
      sub_22DD5C950((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FBKEvaluationViewModifier);
      if (v29(v28, 1, v27) == 1)
      {
        sub_22DD5071C((uint64_t)v7, &qword_255DB7020);
        v26 = 1;
        return sub_22DDD3A10(v40, v26 & 1, v39);
      }
    }
    else
    {
      v37 = v15;
      v30 = v36;
      sub_22DD506A0((uint64_t)v7, v36, &qword_255DB7020);
      if (v29(v28, 1, v27) != 1)
      {
        v31 = v35;
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v35, v28, v27);
        sub_22DD504A8(&qword_255DB8F20, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], MEMORY[0x24BDEFF08]);
        v26 = sub_22DE1F280();
        v32 = *(void (**)(char *, uint64_t))(v4 + 8);
        v32(v31, v27);
        sub_22DD5071C((uint64_t)v13, &qword_255DB7020);
        sub_22DD5071C((uint64_t)v37, &qword_255DB7020);
        sub_22DD5C950((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FBKEvaluationViewModifier);
        v32((char *)v30, v27);
        sub_22DD5071C((uint64_t)v7, &qword_255DB7020);
        return sub_22DDD3A10(v40, v26 & 1, v39);
      }
      sub_22DD5071C((uint64_t)v13, &qword_255DB7020);
      sub_22DD5071C((uint64_t)v37, &qword_255DB7020);
      sub_22DD5C950((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FBKEvaluationViewModifier);
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v30, v27);
    }
    sub_22DD5071C((uint64_t)v7, &qword_255DB8F18);
    v26 = 0;
    return sub_22DDD3A10(v40, v26 & 1, v39);
  }
  if (qword_255DB53B8 != -1)
    swift_once();
  v22 = sub_22DE1E410();
  __swift_project_value_buffer(v22, (uint64_t)qword_255DC3D78);
  v23 = sub_22DE1E3F8();
  v24 = sub_22DE1F4F0();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v25 = 0;
    _os_log_impl(&dword_22DD4B000, v23, v24, "blockPresentationDetentUsage. Will not use presentation detents", v25, 2u);
    MEMORY[0x22E320870](v25, -1, -1);
  }

  sub_22DD5C570(a1, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FBKEvaluationViewModifier);
  sub_22DD5C950((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FBKEvaluationViewModifier);
  v26 = 0;
  return sub_22DDD3A10(v40, v26 & 1, v39);
}

uint64_t sub_22DDD3A10@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  ValueMetadata **v3;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  ValueMetadata *v21;
  ValueMetadata *v22;
  ValueMetadata *v23;
  id v24;
  id v25;
  uint64_t v26;
  ValueMetadata *v27;
  unint64_t v28;
  ValueMetadata *v29;
  unint64_t v30;
  uint64_t OpaqueTypeConformance2;
  char *v32;
  ValueMetadata *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  ValueMetadata *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[3];
  id v65;
  id v66;
  ValueMetadata *v67;
  unint64_t v68;
  ValueMetadata *v69;

  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8F28);
  MEMORY[0x24BDAC7A8](v63);
  v8 = (_QWORD **)((char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_22DE1EC08();
  v58 = *(_QWORD *)(v9 - 8);
  v59 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v57 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8F30);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8F08);
  v54 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8F00);
  v56 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8F38);
  v17 = MEMORY[0x24BDAC7A8](v62);
  MEMORY[0x24BDAC7A8](v17);
  v21 = *v3;
  v22 = v3[1];
  v23 = v3[2];
  v67 = *v3;
  v68 = (unint64_t)v22;
  v69 = v23;
  if ((a2 & 1) != 0)
  {
    v51 = v19;
    v52 = (char *)&v49 - v18;
    v50 = v20;
    v24 = a1;
    v53 = a3;
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
    MEMORY[0x22E31F8EC](&v66);
    v65 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB75F0);
    sub_22DE1E9BC();
    v49 = v8;
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_22DE231A0;
    sub_22DE1E9A4();
    sub_22DE1E9B0();
    sub_22DD915F0(v26);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v64[0] = v21;
    v64[1] = v22;
    v64[2] = v23;
    sub_22DE1F094();
    v27 = v67;
    v28 = v68;
    v29 = v69;
    swift_getKeyPath();
    v67 = v27;
    v68 = v28;
    v69 = v29;
    sub_22DE1F088();

    swift_release();
    swift_release();
    swift_release();
    v30 = sub_22DDD43F4();
    sub_22DE1EE60();
    swift_bridgeObjectRelease();
    sub_22DD5071C((uint64_t)v13, &qword_255DB8F30);

    v67 = &type metadata for FeedbackFormView;
    v68 = v30;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v32 = v55;
    v33 = (ValueMetadata *)v60;
    sub_22DE1EE9C();
    (*(void (**)(char *, ValueMetadata *))(v54 + 8))(v15, v33);
    v34 = v57;
    sub_22DE1EBFC();
    v67 = v33;
    v68 = OpaqueTypeConformance2;
    v35 = swift_getOpaqueTypeConformance2();
    v36 = v50;
    v37 = (ValueMetadata *)v61;
    sub_22DE1EEA8();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v34, v59);
    (*(void (**)(char *, ValueMetadata *))(v56 + 8))(v32, v37);
    v39 = v51;
    v38 = v52;
    v40 = v36;
    v41 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v52, v40, v62);
    (*(void (**)(_QWORD *, char *, uint64_t))(v39 + 16))(v49, v38, v41);
    swift_storeEnumTagMultiPayload();
    v67 = v37;
    v68 = v35;
    swift_getOpaqueTypeConformance2();
    sub_22DE1EAD0();
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v38, v41);
  }
  else
  {
    v43 = a1;
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7280);
    MEMORY[0x22E31F8EC](v64, v44);
    v45 = v64[0];
    *v8 = v43;
    v8[1] = v45;
    swift_storeEnumTagMultiPayload();
    v46 = sub_22DDD43F4();
    v67 = &type metadata for FeedbackFormView;
    v68 = v46;
    v47 = swift_getOpaqueTypeConformance2();
    v67 = (ValueMetadata *)v60;
    v68 = v47;
    v48 = swift_getOpaqueTypeConformance2();
    v67 = (ValueMetadata *)v61;
    v68 = v48;
    swift_getOpaqueTypeConformance2();
    return sub_22DE1EAD0();
  }
}

uint64_t sub_22DDD3FA4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController__swiftUIDetent;
  swift_beginAccess();
  v5 = sub_22DE1E9BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_22DDD4068(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;

  v4 = sub_22DE1E9BC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = *a2;
  swift_getKeyPath();
  v11 = v8;
  v12 = v7;
  v13 = v8;
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E05C();
  swift_release();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

id sub_22DDD4178@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  swift_release();
  v4 = *(void **)(v3 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController__interaction);
  *a2 = v4;
  return v4;
}

void sub_22DDD4210(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  v2 = v1;
  sub_22DE1E05C();
  swift_release();

}

unint64_t sub_22DDD42C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255DB8EF0;
  if (!qword_255DB8EF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB8ED0);
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDEFB78], v1);
    atomic_store(result, (unint64_t *)&qword_255DB8EF0);
  }
  return result;
}

unint64_t sub_22DDD4314()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  result = qword_255DB8EF8;
  if (!qword_255DB8EF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB8EE8);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB8F00);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB8F08);
    v3 = sub_22DDD43F4();
    swift_getOpaqueTypeConformance2();
    v4[2] = v2;
    v4[3] = swift_getOpaqueTypeConformance2();
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = v3;
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255DB8EF8);
  }
  return result;
}

unint64_t sub_22DDD43F4()
{
  unint64_t result;

  result = qword_255DB8F10;
  if (!qword_255DB8F10)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE2839C, &type metadata for FeedbackFormView);
    atomic_store(result, (unint64_t *)&qword_255DB8F10);
  }
  return result;
}

uint64_t sub_22DDD4440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for FBKEvaluationViewModifier();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_release();
  swift_release();

  v5 = v0 + v3 + *(int *)(v1 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7018);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22DE1EB3C();
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_22DDD4540()
{
  type metadata accessor for FBKEvaluationViewModifier();
  return sub_22DDD3498();
}

uint64_t sub_22DDD4590@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22DDD3504(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_22DDD45A8()
{
  return sub_22DE1E800();
}

uint64_t sub_22DDD45C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7020);
  MEMORY[0x24BDAC7A8](v2);
  sub_22DD506A0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_255DB7020);
  return sub_22DE1E80C();
}

uint64_t sub_22DDD4650()
{
  uint64_t v0;

  return sub_22DDDF834(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_22DDD4668()
{
  uint64_t v0;

  sub_22DDDF99C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_22DDD4680()
{
  unint64_t result;

  result = qword_255DB8F50;
  if (!qword_255DB8F50)
  {
    result = MEMORY[0x22E3207B0](&protocol conformance descriptor for FBKEvaluationError, &type metadata for FBKEvaluationError);
    atomic_store(result, (unint64_t *)&qword_255DB8F50);
  }
  return result;
}

uint64_t sub_22DDD46C4()
{
  return sub_22DE1E800();
}

unint64_t sub_22DDD46F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];
  unint64_t v3;
  unint64_t v4;

  result = qword_255DB8F58;
  if (!qword_255DB8F58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB8F60);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB8ED0);
    v2[3] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB8EE8);
    v3 = sub_22DDD42C8();
    v4 = sub_22DDD4314();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = v3;
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB8F58);
  }
  return result;
}

void __swiftcall FBKFeedbackDraftLaunchController.IntroductionPage.init(imageSymbolName:title:message:continueLabel:notNowLabel:)(Feedback::FBKFeedbackDraftLaunchController::IntroductionPage *__return_ptr retstr, Swift::String_optional imageSymbolName, Swift::String_optional title, Swift::String_optional message, Swift::String continueLabel, Swift::String_optional notNowLabel)
{
  retstr->imageSymbolName = imageSymbolName;
  retstr->title = title;
  retstr->message = message;
  retstr->continueLabel = continueLabel;
  retstr->notNowLabel = notNowLabel;
}

uint64_t FBKFeedbackDraftLaunchController.IntroductionPage.imageSymbolName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FBKFeedbackDraftLaunchController.IntroductionPage.imageSymbolName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FBKFeedbackDraftLaunchController.IntroductionPage.imageSymbolName.modify())()
{
  return nullsub_1;
}

uint64_t FBKFeedbackDraftLaunchController.IntroductionPage.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FBKFeedbackDraftLaunchController.IntroductionPage.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FBKFeedbackDraftLaunchController.IntroductionPage.title.modify())()
{
  return nullsub_1;
}

uint64_t FBKFeedbackDraftLaunchController.IntroductionPage.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FBKFeedbackDraftLaunchController.IntroductionPage.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FBKFeedbackDraftLaunchController.IntroductionPage.message.modify())()
{
  return nullsub_1;
}

uint64_t FBKFeedbackDraftLaunchController.IntroductionPage.continueLabel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FBKFeedbackDraftLaunchController.IntroductionPage.continueLabel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*FBKFeedbackDraftLaunchController.IntroductionPage.continueLabel.modify())()
{
  return nullsub_1;
}

uint64_t FBKFeedbackDraftLaunchController.IntroductionPage.notNowLabel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FBKFeedbackDraftLaunchController.IntroductionPage.notNowLabel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*FBKFeedbackDraftLaunchController.IntroductionPage.notNowLabel.modify())()
{
  return nullsub_1;
}

uint64_t sub_22DDD49F0(char a1)
{
  return *(_QWORD *)&aImagesymtitle[8 * a1];
}

uint64_t sub_22DDD4A10()
{
  char *v0;

  return sub_22DDD49F0(*v0);
}

uint64_t sub_22DDD4A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22DDD5B24(a1, a2);
  *a3 = result;
  return result;
}

void sub_22DDD4A3C(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_22DDD4A48()
{
  sub_22DDD4C70();
  return sub_22DE1F9A0();
}

uint64_t sub_22DDD4A70()
{
  sub_22DDD4C70();
  return sub_22DE1F9AC();
}

uint64_t FBKFeedbackDraftLaunchController.IntroductionPage.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[10];
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8F68);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v13[7] = v1[3];
  v13[8] = v7;
  v8 = v1[4];
  v13[5] = v1[5];
  v13[6] = v8;
  v9 = v1[6];
  v13[3] = v1[7];
  v13[4] = v9;
  v10 = v1[8];
  v13[1] = v1[9];
  v13[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DDD4C70();
  sub_22DE1F994();
  v18 = 0;
  v11 = v13[9];
  sub_22DE1F88C();
  if (!v11)
  {
    v17 = 1;
    sub_22DE1F88C();
    v16 = 2;
    sub_22DE1F88C();
    v15 = 3;
    sub_22DE1F898();
    v14 = 4;
    sub_22DE1F88C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_22DDD4C70()
{
  unint64_t result;

  result = qword_255DB8F70;
  if (!qword_255DB8F70)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE25D54, &type metadata for FBKFeedbackDraftLaunchController.IntroductionPage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DB8F70);
  }
  return result;
}

uint64_t FBKFeedbackDraftLaunchController.IntroductionPage.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8F78);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22DDD4C70();
  sub_22DE1F988();
  if (!v2)
  {
    v40 = 0;
    v10 = sub_22DE1F844();
    v12 = v11;
    v39 = 1;
    swift_bridgeObjectRetain();
    v13 = sub_22DE1F844();
    v15 = v14;
    v33 = v13;
    v34 = v10;
    v38 = 2;
    swift_bridgeObjectRetain();
    v35 = v15;
    v16 = sub_22DE1F844();
    v18 = v17;
    v31 = v16;
    v32 = a2;
    v37 = 3;
    swift_bridgeObjectRetain();
    v19 = sub_22DE1F850();
    v21 = v20;
    v30 = v19;
    v36 = 4;
    swift_bridgeObjectRetain();
    v22 = sub_22DE1F844();
    v24 = v23;
    v25 = *(void (**)(char *, uint64_t))(v6 + 8);
    v29 = v22;
    v25(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v26 = v32;
    v27 = v35;
    *v32 = v34;
    v26[1] = v12;
    v26[2] = v33;
    v26[3] = v27;
    v26[4] = v31;
    v26[5] = v18;
    v26[6] = v30;
    v26[7] = v21;
    v26[8] = v29;
    v26[9] = v24;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DDD5004@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FBKFeedbackDraftLaunchController.IntroductionPage.init(from:)(a1, a2);
}

uint64_t sub_22DDD5018(_QWORD *a1)
{
  return FBKFeedbackDraftLaunchController.IntroductionPage.encode(to:)(a1);
}

void sub_22DDD502C(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC8Feedback32FBKFeedbackDraftLaunchController_form);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

id sub_22DDD508C()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC8Feedback32FBKFeedbackDraftLaunchController_form);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_22DDD50D0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC8Feedback32FBKFeedbackDraftLaunchController_introductionPages);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DDD5138()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_22DDD5180(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Feedback32FBKFeedbackDraftLaunchController_introductionPages);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_22DDD51D0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id FBKFeedbackDraftLaunchController.__allocating_init(feedbackForm:introductionPages:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Feedback32FBKFeedbackDraftLaunchController_form] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Feedback32FBKFeedbackDraftLaunchController_introductionPages] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id FBKFeedbackDraftLaunchController.init(feedbackForm:introductionPages:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR____TtC8Feedback32FBKFeedbackDraftLaunchController_form] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Feedback32FBKFeedbackDraftLaunchController_introductionPages] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for FBKFeedbackDraftLaunchController();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for FBKFeedbackDraftLaunchController()
{
  return objc_opt_self();
}

uint64_t sub_22DDD52E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[5];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB7BC0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (id *)(v1 + OBJC_IVAR____TtC8Feedback32FBKFeedbackDraftLaunchController_form);
  swift_beginAccess();
  v7 = *v6;
  sub_22DDFA070((uint64_t)v5);

  v8 = sub_22DE1DFB4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v8);
  sub_22DDA47FC((uint64_t)v5);
  v11[0] = 0;
  v11[1] = 0xE000000000000000;
  sub_22DE1F730();
  swift_bridgeObjectRelease();
  v11[3] = 0xD000000000000024;
  v11[4] = 0x800000022DE2BA40;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_22DE1F328();
  swift_bridgeObjectRelease();
  result = sub_22DE1F7CC();
  __break(1u);
  return result;
}

id FBKFeedbackDraftLaunchController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FBKFeedbackDraftLaunchController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id FBKFeedbackDraftLaunchController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FBKFeedbackDraftLaunchController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_22DDD5570@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC8Feedback32FBKFeedbackDraftLaunchController_form);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_22DDD55C4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC8Feedback32FBKFeedbackDraftLaunchController_introductionPages);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FBKFeedbackDraftLaunchController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FBKFeedbackDraftLaunchController.form.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of FBKFeedbackDraftLaunchController.introductionPages.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of FBKFeedbackDraftLaunchController.introductionPages.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of FBKFeedbackDraftLaunchController.introductionPages.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of FBKFeedbackDraftLaunchController.__allocating_init(feedbackForm:introductionPages:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of FBKFeedbackDraftLaunchController.launchURL.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t destroy for FBKFeedbackDraftLaunchController.IntroductionPage()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FBKFeedbackDraftLaunchController.IntroductionPage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FBKFeedbackDraftLaunchController.IntroductionPage(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

_QWORD *assignWithTake for FBKFeedbackDraftLaunchController.IntroductionPage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FBKFeedbackDraftLaunchController.IntroductionPage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FBKFeedbackDraftLaunchController.IntroductionPage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FBKFeedbackDraftLaunchController.IntroductionPage()
{
  return &type metadata for FBKFeedbackDraftLaunchController.IntroductionPage;
}

uint64_t storeEnumTagSinglePayload for FBKFeedbackDraftLaunchController.IntroductionPage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_22DDD59CC + 4 * byte_22DE25BC5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_22DDD5A00 + 4 * byte_22DE25BC0[v4]))();
}

uint64_t sub_22DDD5A00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DDD5A08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22DDD5A10);
  return result;
}

uint64_t sub_22DDD5A1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22DDD5A24);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_22DDD5A28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22DDD5A30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FBKFeedbackDraftLaunchController.IntroductionPage.CodingKeys()
{
  return &type metadata for FBKFeedbackDraftLaunchController.IntroductionPage.CodingKeys;
}

unint64_t sub_22DDD5A50()
{
  unint64_t result;

  result = qword_255DB8FB8;
  if (!qword_255DB8FB8)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE25D2C, &type metadata for FBKFeedbackDraftLaunchController.IntroductionPage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DB8FB8);
  }
  return result;
}

unint64_t sub_22DDD5A98()
{
  unint64_t result;

  result = qword_255DB8FC0;
  if (!qword_255DB8FC0)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE25C9C, &type metadata for FBKFeedbackDraftLaunchController.IntroductionPage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DB8FC0);
  }
  return result;
}

unint64_t sub_22DDD5AE0()
{
  unint64_t result;

  result = qword_255DB8FC8;
  if (!qword_255DB8FC8)
  {
    result = MEMORY[0x22E3207B0](&unk_22DE25CC4, &type metadata for FBKFeedbackDraftLaunchController.IntroductionPage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255DB8FC8);
  }
  return result;
}

uint64_t sub_22DDD5B24(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6D79536567616D69 && a2 == 0xEF656D614E6C6F62;
  if (v3 || (sub_22DE1F8E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_22DE1F8E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000 || (sub_22DE1F8E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65756E69746E6F63 && a2 == 0xED00006C6562614CLL || (sub_22DE1F8E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x614C776F4E746F6ELL && a2 == 0xEB000000006C6562)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_22DE1F8E0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

void NSUserDefaults.authenticationMethod.getter(char *a1@<X8>)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  char v11;

  v2 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v3 = (void *)sub_22DE1F28C();
  v4 = objc_msgSend(v2, sel_stringForKey_, v3);

  if (v4)
  {
    v5 = sub_22DE1F2B0();
    v7 = v6;

    v8 = v5 == 1701736302 && v7 == 0xE400000000000000;
    if (v8 || (sub_22DE1F8E0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v9 = 0;
    }
    else if (v5 == 0x6C616E6F6974706FLL && v7 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      v9 = 1;
    }
    else
    {
      v11 = sub_22DE1F8E0();
      swift_bridgeObjectRelease();
      if ((v11 & 1) != 0)
        v9 = 1;
      else
        v9 = 2;
    }
  }
  else
  {
    v9 = 2;
  }
  *a1 = v9;
}

id sub_22DDD5EC8()
{
  id v0;
  id v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = objc_msgSend(v0, sel_BOOLForKey_, *MEMORY[0x24BE30D90]);

  if ((v1 & 1) == 0)
  {
    if (qword_255DB5398 != -1)
      swift_once();
    v2 = sub_22DE1E410();
    __swift_project_value_buffer(v2, (uint64_t)qword_255DC3D18);
    v3 = sub_22DE1E3F8();
    v4 = sub_22DE1F514();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_22DD4B000, v3, v4, "Will not use system account", v5, 2u);
      MEMORY[0x22E320870](v5, -1, -1);
    }

  }
  return v1;
}

id sub_22DDD5FE0()
{
  id v0;
  id v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = objc_msgSend(v0, sel_BOOLForKey_, *MEMORY[0x24BE30D48]);

  if ((_DWORD)v1)
  {
    if (qword_255DB5398 != -1)
      swift_once();
    v2 = sub_22DE1E410();
    __swift_project_value_buffer(v2, (uint64_t)qword_255DC3D18);
    v3 = sub_22DE1E3F8();
    v4 = sub_22DE1F4E4();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_22DD4B000, v3, v4, "Will not use Apple Connect authentication", v5, 2u);
      MEMORY[0x22E320870](v5, -1, -1);
    }

  }
  return v1;
}

uint64_t *sub_22DDD60F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_22DE1DFB4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22DDD61B4(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_bridgeObjectRelease();
  v2 = sub_22DE1DFB4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *sub_22DDD6204(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_22DE1DFB4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_22DDD6294(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_22DDD633C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_22DE1DFB4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22DDD633C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WebView.HTMLContent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for WebView.HTMLContent(uint64_t a1)
{
  return sub_22DD6481C(a1, qword_255DB9040);
}

void *sub_22DDD638C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22DE1DFB4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_22DDD6418(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_22DDD633C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_22DE1DFB4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22DDD64B4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22DE1DFB4();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *sub_22DDD6524(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    type metadata accessor for WebView.HTMLContent(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_22DE1DFB4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v10 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  }
  return a1;
}

uint64_t sub_22DDD6600(uint64_t a1)
{
  uint64_t v2;

  type metadata accessor for WebView.HTMLContent(0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_bridgeObjectRelease();
  v2 = sub_22DE1DFB4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *sub_22DDD6660(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  type metadata accessor for WebView.HTMLContent(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22DE1DFB4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v8 = *(int *)(a3 + 24);
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
  return a1;
}

_QWORD *sub_22DDD6710(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_22DDD633C((uint64_t)a1);
    type metadata accessor for WebView.HTMLContent(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_22DE1DFB4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_22DDD67DC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for WebView.HTMLContent(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_22DE1DFB4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 24);
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
  return a1;
}

void *sub_22DDD6888(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_22DDD633C((uint64_t)a1);
    v6 = type metadata accessor for WebView.HTMLContent(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_22DE1DFB4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 24);
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
  return a1;
}

uint64_t sub_22DDD6944()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DDD6950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for WebView.HTMLContent(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_22DDD69DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DDD69E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for WebView.HTMLContent(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for WebView(uint64_t a1)
{
  return sub_22DD6481C(a1, qword_255DB90D0);
}

uint64_t sub_22DDD6A74()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for WebView.HTMLContent(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22DDD6AE8()
{
  return sub_22DDD6EAC(&qword_255DB5B00, (uint64_t)&unk_22DE25EE8);
}

id sub_22DDD6B0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = sub_22DE1DD8C();
  v22 = *(_QWORD *)(v2 - 8);
  v23 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_22DE1DFB4();
  v5 = *(_QWORD *)(v24 - 8);
  v6 = MEMORY[0x24BDAC7A8](v24);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - v9;
  v11 = type metadata accessor for WebView.HTMLContent(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDFA920]), sel_init);
  objc_msgSend(v14, sel__setColorFilterEnabled_, 1);
  v15 = type metadata accessor for WebView(0);
  objc_msgSend(v14, sel__setDrawsBackground_, *(unsigned __int8 *)(v1 + *(int *)(v15 + 20)));
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDFA918]), sel_initWithFrame_configuration_, v14, 0.0, 0.0, 0.0, 0.0);

  objc_msgSend(v16, sel_setUserInteractionEnabled_, (*(_BYTE *)(v1 + *(int *)(v15 + 24)) & 1) == 0);
  sub_22DDD6EEC(v1, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = v24;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v13, v24);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v17);
    sub_22DE1DD80();
    v18 = (void *)sub_22DE1DD74();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v23);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v17);
  }
  else
  {
    v19 = (void *)sub_22DE1F28C();
    swift_bridgeObjectRelease();

  }
  return v16;
}

uint64_t sub_22DDD6DB8()
{
  sub_22DDD6EAC(&qword_255DB9110, (uint64_t)&unk_22DE25E58);
  return sub_22DE1EAAC();
}

uint64_t sub_22DDD6E18()
{
  sub_22DDD6EAC(&qword_255DB9110, (uint64_t)&unk_22DE25E58);
  return sub_22DE1EA58();
}

void sub_22DDD6E78()
{
  sub_22DDD6EAC(&qword_255DB9110, (uint64_t)&unk_22DE25E58);
  sub_22DE1EAA0();
  __break(1u);
}

uint64_t sub_22DDD6EAC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for WebView(255);
    result = MEMORY[0x22E3207B0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22DDD6EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WebView.HTMLContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22DDD6F30(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[4] = a1;
  v2[5] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB73F8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v3 = sub_22DE1E20C();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5D80);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v4 = sub_22DE1E248();
  v2[14] = v4;
  v2[15] = *(_QWORD *)(v4 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22DDD7040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, unint64_t, uint64_t);
  uint64_t (*v29)(uint64_t, uint64_t);
  int v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  void (*v34)(uint64_t *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void (*v43)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  _QWORD *v76;
  unint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  _QWORD *v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  _BOOL4 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  sub_22DE1E218();
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v4(v3, 1, v1) == 1)
  {
    v5 = *(_QWORD *)(v0 + 96);
    sub_22DE1E230();
    sub_22DD5071C(v5, &qword_255DB5D80);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 120);
    v8 = *(_QWORD *)(v0 + 104);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 32))(v8, *(_QWORD *)(v0 + 96), v6);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v8, 0, 1, v6);
  }
  v9 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 112);
  if (v4(v9, 1, v10) == 1)
  {
    sub_22DD5071C(v9, &qword_255DB5D80);
    if (qword_255DB53A8 != -1)
      swift_once();
    v11 = sub_22DE1E410();
    __swift_project_value_buffer(v11, (uint64_t)qword_255DC3D48);
    v12 = sub_22DE1E3F8();
    v13 = sub_22DE1F4FC();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_22DD4B000, v12, v13, "Content is nil.", v14, 2u);
      MEMORY[0x22E320870](v14, -1, -1);
    }
    v15 = *(_QWORD *)(v0 + 32);

    v16 = type metadata accessor for BatchInteraction.ContentPreview(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
LABEL_57:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v18 = *(_QWORD *)(v0 + 128);
  v17 = *(_QWORD *)(v0 + 136);
  v19 = *(_QWORD *)(v0 + 120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v17, v9, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v18, v17, v10);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 88))(v18, v10);
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 128);
  v23 = *(_QWORD *)(v0 + 112);
  if (v20 != *MEMORY[0x24BE31148])
  {
    v44 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v44(*(_QWORD *)(v0 + 128), v23);
    if (qword_255DB53A8 != -1)
      swift_once();
    v45 = sub_22DE1E410();
    __swift_project_value_buffer(v45, (uint64_t)qword_255DC3D48);
    v46 = sub_22DE1E3F8();
    v47 = sub_22DE1F4FC();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      _os_log_impl(&dword_22DD4B000, v46, v47, "Content is not structured.", v48, 2u);
      MEMORY[0x22E320870](v48, -1, -1);
    }
    v49 = *(_QWORD *)(v0 + 136);
    v50 = *(_QWORD *)(v0 + 112);
    v51 = *(_QWORD *)(v0 + 32);

    v44(v49, v50);
    v52 = type metadata accessor for BatchInteraction.ContentPreview(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v51, 1, 1, v52);
    goto LABEL_57;
  }
  v25 = *(_QWORD *)(v0 + 80);
  v24 = *(_QWORD *)(v0 + 88);
  v26 = *(_QWORD *)(v0 + 64);
  v27 = *(_QWORD *)(v0 + 72);
  (*(void (**)(_QWORD, uint64_t))(v21 + 96))(*(_QWORD *)(v0 + 128), v23);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v27 + 32))(v24, v22, v26);
  v28 = *(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 16);
  v28(v25, v24, v26);
  v29 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 88);
  v30 = v29(v25, v26);
  v31 = *(_QWORD *)(v0 + 72);
  v32 = *(uint64_t **)(v0 + 80);
  v33 = *(_QWORD *)(v0 + 64);
  if (v30 != *MEMORY[0x24BE310B0])
  {
    v53 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v53(*(_QWORD *)(v0 + 80), v33);
    if (qword_255DB53A8 != -1)
      swift_once();
    v54 = sub_22DE1E410();
    __swift_project_value_buffer(v54, (uint64_t)qword_255DC3D48);
    v55 = sub_22DE1E3F8();
    v56 = sub_22DE1F4FC();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v57 = 0;
      _os_log_impl(&dword_22DD4B000, v55, v56, "Structured content is not a dictionary.", v57, 2u);
      MEMORY[0x22E320870](v57, -1, -1);
    }
    v58 = *(_QWORD *)(v0 + 136);
    v59 = *(_QWORD *)(v0 + 112);
    v60 = *(_QWORD *)(v0 + 120);
    v61 = *(_QWORD *)(v0 + 88);
    v62 = *(_QWORD *)(v0 + 64);
    v63 = *(_QWORD *)(v0 + 32);

    v53(v61, v62);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v59);
    v64 = type metadata accessor for BatchInteraction.ContentPreview(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v63, 1, 1, v64);
    goto LABEL_57;
  }
  v34 = *(void (**)(uint64_t *, uint64_t))(v31 + 96);
  v34(*(uint64_t **)(v0 + 80), v33);
  v35 = *v32;
  if (qword_255DB5330 == -1)
  {
    if (*(_QWORD *)(v35 + 16))
      goto LABEL_14;
LABEL_36:
    v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 72) + 56);
    v43(*(_QWORD *)(v0 + 56), 1, 1, *(_QWORD *)(v0 + 64));
LABEL_37:
    sub_22DD5071C(*(_QWORD *)(v0 + 56), &qword_255DB73F8);
    goto LABEL_38;
  }
  swift_once();
  if (!*(_QWORD *)(v35 + 16))
    goto LABEL_36;
LABEL_14:
  v36 = qword_255DC3CF8;
  v37 = qword_255DC3CF0;
  swift_bridgeObjectRetain();
  v38 = sub_22DDFD368(v37, v36);
  v39 = *(_QWORD *)(v0 + 64);
  v40 = *(_QWORD *)(v0 + 72);
  v41 = *(_QWORD *)(v0 + 56);
  if ((v42 & 1) != 0)
  {
    v28(*(_QWORD *)(v0 + 56), *(_QWORD *)(v35 + 56) + *(_QWORD *)(v40 + 72) * v38, *(_QWORD *)(v0 + 64));
    v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56);
    v43(v41, 0, 1, v39);
  }
  else
  {
    v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56);
    v43(*(_QWORD *)(v0 + 56), 1, 1, v39);
  }
  v65 = *(_QWORD *)(v0 + 64);
  v66 = *(_QWORD *)(v0 + 72);
  v67 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v67, 1, v65) == 1)
    goto LABEL_37;
  if (v29(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64)) == *MEMORY[0x24BE310D0])
  {
    v69 = *(uint64_t **)(v0 + 56);
    v68 = *(_QWORD *)(v0 + 64);
    swift_bridgeObjectRelease();
    v34(v69, v68);
    v70 = *v69;
    v71 = v69[1];
    *(_QWORD *)(v0 + 144) = v71;
    if (qword_255DB53A8 != -1)
      swift_once();
    v72 = sub_22DE1E410();
    __swift_project_value_buffer(v72, (uint64_t)qword_255DC3D48);
    v73 = sub_22DE1E3F8();
    v74 = sub_22DE1F4F0();
    if (os_log_type_enabled(v73, v74))
    {
      v75 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v75 = 0;
      _os_log_impl(&dword_22DD4B000, v73, v74, "found MAIL_KEY on donation", v75, 2u);
      MEMORY[0x22E320870](v75, -1, -1);
    }

    v76 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v76;
    *v76 = v0;
    v76[1] = sub_22DDD7B54;
    return sub_22DDD84C4(*(_QWORD *)(v0 + 32), v70, v71);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
LABEL_38:
  if (*(_QWORD *)(v35 + 16) && (v78 = sub_22DDFD368(0xD000000000000012, 0x800000022DE2BB30), (v79 & 1) != 0))
  {
    v28(*(_QWORD *)(v0 + 48), *(_QWORD *)(v35 + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 72) + 72) * v78, *(_QWORD *)(v0 + 64));
    v80 = 0;
  }
  else
  {
    v80 = 1;
  }
  v81 = *(_QWORD *)(v0 + 64);
  v82 = *(_QWORD *)(v0 + 72);
  v83 = *(_QWORD *)(v0 + 48);
  v43(v83, v80, 1, v81);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v83, 1, v81) == 1)
  {
    sub_22DD5071C(*(_QWORD *)(v0 + 48), &qword_255DB73F8);
LABEL_51:
    if (qword_255DB53A8 != -1)
      swift_once();
    v92 = sub_22DE1E410();
    __swift_project_value_buffer(v92, (uint64_t)qword_255DC3D48);
    v93 = sub_22DE1E3F8();
    v94 = sub_22DE1F4FC();
    v95 = os_log_type_enabled(v93, v94);
    v96 = *(_QWORD *)(v0 + 136);
    v97 = *(_QWORD *)(v0 + 112);
    v98 = *(_QWORD *)(v0 + 120);
    v99 = *(_QWORD *)(v0 + 88);
    v100 = *(_QWORD *)(v0 + 64);
    v101 = *(_QWORD *)(v0 + 72);
    if (v95)
    {
      v112 = *(_QWORD *)(v0 + 136);
      v111 = *(_QWORD *)(v0 + 64);
      v102 = swift_slowAlloc();
      v110 = v101;
      v103 = swift_slowAlloc();
      v113 = v103;
      *(_DWORD *)v102 = 136315394;
      v108 = v99;
      v109 = v98;
      v104 = qword_255DC3CF0;
      v105 = qword_255DC3CF8;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 16) = sub_22DDA2E30(v104, v105, &v113);
      sub_22DE1F628();
      swift_bridgeObjectRelease();
      *(_WORD *)(v102 + 12) = 2080;
      *(_QWORD *)(v0 + 24) = sub_22DDA2E30(0xD000000000000012, 0x800000022DE2BB30, &v113);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v93, v94, "%s nor %s existed on structured dictionary", (uint8_t *)v102, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v103, -1, -1);
      MEMORY[0x22E320870](v102, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v108, v111);
      (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v112, v97);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v99, v100);
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v96, v97);
    }
    v106 = *(_QWORD *)(v0 + 32);
    v107 = type metadata accessor for BatchInteraction.ContentPreview(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v106, 1, 1, v107);
    goto LABEL_57;
  }
  if (v29(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 64)) != *MEMORY[0x24BE310D0])
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 64));
    goto LABEL_51;
  }
  v84 = *(uint64_t **)(v0 + 48);
  v34(v84, *(_QWORD *)(v0 + 64));
  v85 = *v84;
  v86 = v84[1];
  *(_QWORD *)(v0 + 160) = v86;
  if (qword_255DB53A8 != -1)
    swift_once();
  v87 = sub_22DE1E410();
  __swift_project_value_buffer(v87, (uint64_t)qword_255DC3D48);
  v88 = sub_22DE1E3F8();
  v89 = sub_22DE1F4F0();
  if (os_log_type_enabled(v88, v89))
  {
    v90 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v90 = 0;
    _os_log_impl(&dword_22DD4B000, v88, v89, "found MESSAGE_KEY on donation", v90, 2u);
    MEMORY[0x22E320870](v90, -1, -1);
  }

  v91 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v91;
  *v91 = v0;
  v91[1] = sub_22DDD7C64;
  return sub_22DDD9478(*(_QWORD *)(v0 + 32), v85, v86);
}

uint64_t sub_22DDD7B54()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_22DDD7BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22DDD7C64()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

void sub_22DDD7CC0()
{
  qword_255DC3CF0 = 0x746F70536C69616DLL;
  qword_255DC3CF8 = 0xEF4449746867696CLL;
}

uint64_t sub_22DDD7CF0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;

  v11 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v14, v11);
  if (v15 == *MEMORY[0x24BE7A290])
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v14, v11);
    v16 = &v14[*(int *)(__swift_instantiateConcreteTypeFromMangledName(a3) + 48)];
    v17 = a4(0);
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(a6, v14, v17);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a6, 0, 1, v17);
    v19 = __swift_instantiateConcreteTypeFromMangledName(a5);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v16, v19);
  }
  if (v15 == *MEMORY[0x24BE7A298])
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v14, v11);
    swift_bridgeObjectRelease();
    if (qword_255DB53A8 != -1)
      swift_once();
    v21 = sub_22DE1E410();
    __swift_project_value_buffer(v21, (uint64_t)qword_255DC3D48);
    v22 = sub_22DE1E3F8();
    v23 = sub_22DE1F4FC();
    if (!os_log_type_enabled(v22, v23))
      goto LABEL_14;
    v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v24 = 0;
    v25 = "Entity notFound";
LABEL_13:
    _os_log_impl(&dword_22DD4B000, v22, v23, v25, v24, 2u);
    MEMORY[0x22E320870](v24, -1, -1);
LABEL_14:

    v27 = a4(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a6, 1, 1, v27);
  }
  if (v15 == *MEMORY[0x24BE7A288])
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v14, v11);
    swift_bridgeObjectRelease();
    if (qword_255DB53A8 != -1)
      swift_once();
    v26 = sub_22DE1E410();
    __swift_project_value_buffer(v26, (uint64_t)qword_255DC3D48);
    v22 = sub_22DE1E3F8();
    v23 = sub_22DE1F4FC();
    if (!os_log_type_enabled(v22, v23))
      goto LABEL_14;
    v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v24 = 0;
    v25 = "Entity entityConversionFailed";
    goto LABEL_13;
  }
  if (qword_255DB53A8 != -1)
    swift_once();
  v28 = sub_22DE1E410();
  __swift_project_value_buffer(v28, (uint64_t)qword_255DC3D48);
  v29 = sub_22DE1E3F8();
  v30 = sub_22DE1F4FC();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    _os_log_impl(&dword_22DD4B000, v29, v30, "Unsupported entity status", v31, 2u);
    MEMORY[0x22E320870](v31, -1, -1);
  }

  v32 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(a6, 1, 1, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_22DDD80B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  int v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  unint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v31 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (uint64_t *)((char *)&v31 - v11);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v13((char *)&v31 - v11, a1, v3);
  v14 = (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 88))(v12, v3);
  if (v14 == *MEMORY[0x24BE7A2D0])
  {
    (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v12, v3);
    v16 = *v12;
    v15 = v12[1];
    if (qword_255DB53A8 != -1)
      swift_once();
    v17 = sub_22DE1E410();
    __swift_project_value_buffer(v17, (uint64_t)qword_255DC3D48);
    swift_bridgeObjectRetain();
    v18 = sub_22DE1E3F8();
    v19 = sub_22DE1F4FC();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v34 = v21;
      *(_DWORD *)v20 = 136315138;
      swift_bridgeObjectRetain();
      v33 = sub_22DDA2E30(v16, v15, &v34);
      sub_22DE1F628();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22DD4B000, v18, v19, "Response has error: %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v21, -1, -1);
      MEMORY[0x22E320870](v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (v14 == *MEMORY[0x24BE7A2D8])
      return 1;
    if (qword_255DB53A8 != -1)
      swift_once();
    v23 = sub_22DE1E410();
    __swift_project_value_buffer(v23, (uint64_t)qword_255DC3D48);
    v13(v10, a1, v3);
    v24 = sub_22DE1E3F8();
    v25 = sub_22DE1F4FC();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v34 = v32;
      *(_DWORD *)v26 = 136315138;
      v31 = v26 + 4;
      v13(v7, (uint64_t)v10, v3);
      v27 = sub_22DE1F2EC();
      v33 = sub_22DDA2E30(v27, v28, &v34);
      sub_22DE1F628();
      swift_bridgeObjectRelease();
      v29 = *(void (**)(char *, uint64_t))(v4 + 8);
      v29(v10, v3);
      _os_log_impl(&dword_22DD4B000, v24, v25, "Response has unhandled state: %s", v26, 0xCu);
      v30 = v32;
      swift_arrayDestroy();
      MEMORY[0x22E320870](v30, -1, -1);
      MEMORY[0x22E320870](v26, -1, -1);
    }
    else
    {
      v29 = *(void (**)(char *, uint64_t))(v4 + 8);
      v29(v10, v3);
    }

    v29((char *)v12, v3);
  }
  return 0;
}

uint64_t sub_22DDD84C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_22DE1E050();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v5 = sub_22DE1E020();
  v3[8] = v5;
  v3[9] = *(_QWORD *)(v5 - 8);
  v3[10] = swift_task_alloc();
  v6 = type metadata accessor for BatchInteraction.ContentPreview.CUContent.Mail(0);
  v3[11] = v6;
  v3[12] = *(_QWORD *)(v6 - 8);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v7 = sub_22DE1E35C();
  v3[15] = v7;
  v3[16] = *(_QWORD *)(v7 - 8);
  v3[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9130);
  v3[18] = swift_task_alloc();
  v8 = sub_22DE1E338();
  v3[19] = v8;
  v3[20] = *(_QWORD *)(v8 - 8);
  v3[21] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9138);
  v3[22] = v9;
  v3[23] = *(_QWORD *)(v9 - 8);
  v3[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9140);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v10 = sub_22DE1DEB8();
  v3[28] = v10;
  v3[29] = *(_QWORD *)(v10 - 8);
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9148);
  v3[32] = v11;
  v3[33] = *(_QWORD *)(v11 - 8);
  v3[34] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9150);
  v3[35] = swift_task_alloc();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9158);
  v3[36] = v12;
  v3[37] = *(_QWORD *)(v12 - 8);
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22DDD8738()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, _QWORD);

  v1 = v0[35];
  sub_22DE1E2FC();
  swift_allocObject();
  v0[41] = sub_22DE1E2F0();
  v2 = sub_22DE1E3E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))((int)*MEMORY[0x24BE79B88] + MEMORY[0x24BE79B88]);
  v3 = (_QWORD *)swift_task_alloc();
  v0[42] = v3;
  *v3 = v0;
  v3[1] = sub_22DDD87F0;
  return v5(v0[40], v0[3], v0[4], v0[35]);
}

uint64_t sub_22DDD87F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 280);
  swift_task_dealloc();
  sub_22DD5071C(v1, &qword_255DB9150);
  return swift_task_switch();
}

uint64_t sub_22DDD8858()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t, uint64_t);
  void (*v82)(uint64_t, uint64_t);
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  uint8_t *v107;
  const char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void (*v123)(uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int *v127;
  uint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(uint64_t, unint64_t, _QWORD);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;

  v2 = v0[33];
  v1 = v0[34];
  v3 = v0[32];
  sub_22DE1E3BC();
  v4 = sub_22DDD80B4(v1, &qword_255DB9148);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v5 = v0[36];
  v6 = v0[37];
  if ((v4 & 1) == 0)
  {
    v27 = v0[2];
    (*(void (**)(_QWORD, _QWORD))(v6 + 8))(v0[40], v0[36]);
    swift_release();
    v28 = type metadata accessor for BatchInteraction.ContentPreview(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
    goto LABEL_49;
  }
  v8 = v0[39];
  v7 = v0[40];
  v9 = v0[28];
  v10 = v0[29];
  v11 = v0[26];
  sub_22DE1E3D4();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v12(v8, v7, v5);
  v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v14 = v13(v11, 1, v9);
  v15 = v0[39];
  v16 = v0[28];
  if (v14 == 1)
  {
    v17 = v0[38];
    v18 = v0[36];
    v19 = v0[25];
    sub_22DE1E3B0();
    v12(v17, v15, v18);
    v20 = v13(v19, 1, v16);
    v22 = v0[38];
    v21 = v0[39];
    v23 = v0[36];
    v24 = v0[37];
    if (v20 == 1)
    {
      v25 = v0[25];
      sub_22DE1E3C8();
      v26 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v26(v22, v23);
      v123 = v26;
      v26(v21, v23);
      sub_22DD5071C(v25, &qword_255DB9140);
    }
    else
    {
      v33 = v0[28];
      v34 = v0[29];
      v35 = v0[27];
      v36 = v0[25];
      v37 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v37(v0[38], v0[36]);
      v123 = v37;
      v37(v21, v23);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v35, v36, v33);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v35, 0, 1, v33);
    }
    v38 = v0[27];
    v39 = v0[28];
    sub_22DD5071C(v0[26], &qword_255DB9140);
    if (v13(v38, 1, v39) == 1)
      goto LABEL_10;
    v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[29] + 32);
  }
  else
  {
    v29 = v0[29];
    v31 = v0[26];
    v30 = v0[27];
    v123 = *(void (**)(uint64_t, uint64_t))(v0[37] + 8);
    v123(v0[39], v0[36]);
    v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32);
    v32(v30, v31, v16);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v16);
    if (v13(v30, 1, v16) == 1)
    {
LABEL_10:
      sub_22DD5071C(v0[27], &qword_255DB9140);
      if (qword_255DB53A8 != -1)
        swift_once();
      v40 = sub_22DE1E410();
      __swift_project_value_buffer(v40, (uint64_t)qword_255DC3D48);
      v41 = sub_22DE1E3F8();
      v42 = sub_22DE1F4FC();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v43 = 0;
        _os_log_impl(&dword_22DD4B000, v41, v42, "generatedContent is nil", v43, 2u);
        MEMORY[0x22E320870](v43, -1, -1);
      }
      v44 = v0[40];
      v45 = v0[36];
      v46 = v0[2];
      swift_release();

      v123(v44, v45);
      v47 = type metadata accessor for BatchInteraction.ContentPreview(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
      goto LABEL_49;
    }
  }
  v32(v0[31], v0[27], v0[28]);
  v48 = sub_22DE1E3A4();
  v49 = *(_QWORD *)(v48 + 16);
  if (v49)
  {
    v134 = v0[29];
    v50 = v0[23];
    v51 = v0[20];
    v131 = v0[16];
    v128 = v0[12];
    v129 = (_QWORD *)v0[13];
    v126 = v0[9];
    v127 = (int *)v0[11];
    v52 = v48 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
    v124 = *(_QWORD *)(v50 + 72);
    v125 = v0[6];
    v53 = MEMORY[0x24BEE4AF8];
    v132 = v51;
    v133 = v50;
    v135 = *(void (**)(uint64_t, unint64_t, _QWORD))(v50 + 16);
    v130 = v0;
    while (1)
    {
      v54 = v0[24];
      v56 = v0[18];
      v55 = v0[19];
      v135(v54, v52, v0[22]);
      sub_22DDD7CF0(v54, &qword_255DB9138, &qword_255DB9160, (uint64_t (*)(_QWORD))MEMORY[0x24BE79ED0], &qword_255DB9168, v56);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v56, 1, v55) == 1)
        break;
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v51 + 32))(v0[21], v0[18], v0[19]);
      v57 = sub_22DE1E314();
      if (!v58)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (qword_255DB53A8 != -1)
          swift_once();
        v104 = sub_22DE1E410();
        __swift_project_value_buffer(v104, (uint64_t)qword_255DC3D48);
        v105 = sub_22DE1E3F8();
        v106 = sub_22DE1F4FC();
        if (os_log_type_enabled(v105, v106))
        {
          v107 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v107 = 0;
          v108 = "originalContent is nil";
          goto LABEL_47;
        }
LABEL_48:
        v113 = v0[40];
        v114 = v0[36];
        v115 = v0[31];
        v116 = v0[28];
        v117 = v0[24];
        v119 = v0[21];
        v118 = v0[22];
        v120 = v0[19];
        v146 = v0[2];
        swift_release();

        (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v119, v120);
        (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v117, v118);
        (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v115, v116);
        v123(v113, v114);
        v121 = type metadata accessor for BatchInteraction.ContentPreview(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v146, 1, 1, v121);
        goto LABEL_49;
      }
      v59 = v57;
      v60 = v58;
      sub_22DE1E308();
      v61 = sub_22DE1E344();
      v144 = v49;
      v145 = v53;
      v142 = v60;
      v143 = v52;
      v141 = v59;
      if (v62)
      {
        v63 = v62;
        v139 = v61;
        (*(void (**)(_QWORD, _QWORD))(v131 + 8))(v0[17], v0[15]);
      }
      else
      {
        if (qword_255DB53A8 != -1)
          swift_once();
        v64 = sub_22DE1E410();
        __swift_project_value_buffer(v64, (uint64_t)qword_255DC3D48);
        v65 = sub_22DE1E3F8();
        v66 = sub_22DE1F4F0();
        if (os_log_type_enabled(v65, v66))
        {
          v67 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v67 = 0;
          _os_log_impl(&dword_22DD4B000, v65, v66, "The entity handle's name is nil, will fallback to their handle.", v67, 2u);
          MEMORY[0x22E320870](v67, -1, -1);
        }
        v68 = v0[17];
        v69 = v0[15];

        v70 = sub_22DE1E350();
        v63 = v71;
        (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v68, v69);
        if (!v63)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v105 = sub_22DE1E3F8();
          v106 = sub_22DE1F4FC();
          if (os_log_type_enabled(v105, v106))
          {
            v107 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v107 = 0;
            v108 = "sender is nil";
LABEL_47:
            _os_log_impl(&dword_22DD4B000, v105, v106, v108, v107, 2u);
            MEMORY[0x22E320870](v107, -1, -1);
          }
          goto LABEL_48;
        }
        v139 = v70;
      }
      v72 = v0;
      v73 = v0[31];
      v74 = v72[30];
      v75 = v72[28];
      v76 = (char *)v72[13];
      v140 = v72[14];
      v77 = v72[10];
      v136 = v72[8];
      v137 = v72[7];
      v138 = v72[5];
      v78 = sub_22DE1E32C();
      v80 = v79;
      sub_22DE1E320();
      v81 = *(void (**)(uint64_t, uint64_t, uint64_t))(v134 + 16);
      v81(v74, v73, v75);
      *(_QWORD *)v76 = v141;
      v129[1] = v142;
      v129[2] = v78;
      v129[3] = v80;
      v129[4] = v139;
      v129[5] = v63;
      (*(void (**)(char *, uint64_t, uint64_t))(v126 + 16))(&v76[v127[7]], v77, v136);
      v81((uint64_t)&v76[v127[9]], v74, v75);
      sub_22DE1E044();
      v82 = *(void (**)(uint64_t, uint64_t))(v134 + 8);
      v82(v74, v75);
      (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v77, v136);
      (*(void (**)(char *, uint64_t, uint64_t))(v125 + 32))(&v76[v127[8]], v137, v138);
      sub_22DD647B0((uint64_t)v76, v140, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Mail);
      v53 = v145;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v53 = sub_22DDFCAD0(0, *(_QWORD *)(v145 + 16) + 1, 1, v145);
      v84 = *(_QWORD *)(v53 + 16);
      v83 = *(_QWORD *)(v53 + 24);
      v0 = v130;
      if (v84 >= v83 >> 1)
        v53 = sub_22DDFCAD0(v83 > 1, v84 + 1, 1, v53);
      v85 = v130[24];
      v87 = v130[21];
      v86 = v130[22];
      v88 = v130[19];
      v89 = v130[14];
      *(_QWORD *)(v53 + 16) = v84 + 1;
      sub_22DD647B0(v89, v53+ ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80))+ *(_QWORD *)(v128 + 72) * v84, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Mail);
      v51 = v132;
      (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v87, v88);
      (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v85, v86);
      v52 = v143 + v124;
      v49 = v144 - 1;
      if (v144 == 1)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_44;
      }
    }
    v91 = v0[18];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22DD5071C(v91, &qword_255DB9130);
    if (qword_255DB53A8 != -1)
      swift_once();
    v92 = sub_22DE1E410();
    __swift_project_value_buffer(v92, (uint64_t)qword_255DC3D48);
    v93 = sub_22DE1E3F8();
    v94 = sub_22DE1F4FC();
    if (os_log_type_enabled(v93, v94))
    {
      v95 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v95 = 0;
      _os_log_impl(&dword_22DD4B000, v93, v94, "entity is nil", v95, 2u);
      MEMORY[0x22E320870](v95, -1, -1);
    }
    v96 = v0[40];
    v97 = v0[36];
    v98 = v0[31];
    v99 = v0[28];
    v100 = v0[24];
    v101 = v0[22];
    v102 = v0[2];
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v100, v101);
    (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v98, v99);
    v123(v96, v97);
    v103 = type metadata accessor for BatchInteraction.ContentPreview(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v102, 1, 1, v103);
  }
  else
  {
    v90 = v0[29];
    swift_release();
    swift_bridgeObjectRelease();
    v82 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
    v53 = MEMORY[0x24BEE4AF8];
LABEL_44:
    v109 = v0[40];
    v110 = v0[36];
    v111 = v0[2];
    v82(v0[31], v0[28]);
    v123(v109, v110);
    *(_QWORD *)v111 = v53;
    *(_BYTE *)(v111 + 8) = 0;
    v112 = type metadata accessor for BatchInteraction.ContentPreview(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v111, 0, 1, v112);
  }
LABEL_49:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_22DDD9478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_22DE1E050();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v5 = sub_22DE1E020();
  v3[8] = v5;
  v3[9] = *(_QWORD *)(v5 - 8);
  v3[10] = swift_task_alloc();
  v6 = type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message(0);
  v3[11] = v6;
  v3[12] = *(_QWORD *)(v6 - 8);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v7 = sub_22DE1E35C();
  v3[15] = v7;
  v3[16] = *(_QWORD *)(v7 - 8);
  v3[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9170);
  v3[18] = swift_task_alloc();
  v8 = sub_22DE1E398();
  v3[19] = v8;
  v3[20] = *(_QWORD *)(v8 - 8);
  v3[21] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9178);
  v3[22] = v9;
  v3[23] = *(_QWORD *)(v9 - 8);
  v3[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9140);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v10 = sub_22DE1DEB8();
  v3[28] = v10;
  v3[29] = *(_QWORD *)(v10 - 8);
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9180);
  v3[32] = v11;
  v3[33] = *(_QWORD *)(v11 - 8);
  v3[34] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9150);
  v3[35] = swift_task_alloc();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9188);
  v3[36] = v12;
  v3[37] = *(_QWORD *)(v12 - 8);
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22DDD96EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, _QWORD);

  v1 = v0[35];
  sub_22DE1E2FC();
  swift_allocObject();
  v0[41] = sub_22DE1E2F0();
  v2 = sub_22DE1E3E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))((int)*MEMORY[0x24BE79B80] + MEMORY[0x24BE79B80]);
  v3 = (_QWORD *)swift_task_alloc();
  v0[42] = v3;
  *v3 = v0;
  v3[1] = sub_22DDD97A4;
  return v5(v0[40], v0[3], v0[4], v0[35]);
}

uint64_t sub_22DDD97A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 280);
  swift_task_dealloc();
  sub_22DD5071C(v1, &qword_255DB9150);
  return swift_task_switch();
}

uint64_t sub_22DDD980C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t, uint64_t);
  char v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint8_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  uint8_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v116)(uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int *v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(uint64_t, unint64_t, _QWORD);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(uint64_t, uint64_t);
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;

  v2 = v0[33];
  v1 = v0[34];
  v3 = v0[32];
  sub_22DE1E3BC();
  v4 = sub_22DDD80B4(v1, &qword_255DB9180);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v5 = v0[36];
  v6 = v0[37];
  if ((v4 & 1) == 0)
  {
    v27 = v0[2];
    (*(void (**)(_QWORD, _QWORD))(v6 + 8))(v0[40], v0[36]);
    swift_release();
    v28 = type metadata accessor for BatchInteraction.ContentPreview(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
    goto LABEL_43;
  }
  v8 = v0[39];
  v7 = v0[40];
  v9 = v0[28];
  v10 = v0[29];
  v11 = v0[26];
  sub_22DE1E3D4();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v12(v8, v7, v5);
  v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v14 = v13(v11, 1, v9);
  v15 = v0[39];
  v16 = v0[28];
  if (v14 == 1)
  {
    v17 = v0[38];
    v18 = v0[36];
    v19 = v0[25];
    sub_22DE1E3B0();
    v12(v17, v15, v18);
    v20 = v13(v19, 1, v16);
    v22 = v0[38];
    v21 = v0[39];
    v23 = v0[36];
    v24 = v0[37];
    if (v20 == 1)
    {
      v25 = v0[25];
      sub_22DE1E3C8();
      v26 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v26(v22, v23);
      v116 = v26;
      v26(v21, v23);
      sub_22DD5071C(v25, &qword_255DB9140);
    }
    else
    {
      v33 = v0[28];
      v34 = v0[29];
      v35 = v0[27];
      v36 = v0[25];
      v37 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v37(v0[38], v0[36]);
      v116 = v37;
      v37(v21, v23);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v35, v36, v33);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v35, 0, 1, v33);
    }
    v38 = v0[27];
    v39 = v0[28];
    sub_22DD5071C(v0[26], &qword_255DB9140);
    if (v13(v38, 1, v39) == 1)
      goto LABEL_10;
    v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[29] + 32);
  }
  else
  {
    v29 = v0[29];
    v31 = v0[26];
    v30 = v0[27];
    v116 = *(void (**)(uint64_t, uint64_t))(v0[37] + 8);
    v116(v0[39], v0[36]);
    v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32);
    v32(v30, v31, v16);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v16);
    if (v13(v30, 1, v16) == 1)
    {
LABEL_10:
      sub_22DD5071C(v0[27], &qword_255DB9140);
      if (qword_255DB53A8 != -1)
        swift_once();
      v40 = sub_22DE1E410();
      __swift_project_value_buffer(v40, (uint64_t)qword_255DC3D48);
      v41 = sub_22DE1E3F8();
      v42 = sub_22DE1F4FC();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v43 = 0;
        _os_log_impl(&dword_22DD4B000, v41, v42, "synopsis, topic, and topLine are nil", v43, 2u);
        MEMORY[0x22E320870](v43, -1, -1);
      }
      v44 = v0[40];
      v45 = v0[36];
      v46 = v0[2];
      swift_release();

      v116(v44, v45);
      v47 = type metadata accessor for BatchInteraction.ContentPreview(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
      goto LABEL_43;
    }
  }
  v32(v0[31], v0[27], v0[28]);
  v48 = sub_22DE1E3A4();
  v49 = *(_QWORD *)(v48 + 16);
  if (v49)
  {
    v127 = v0[29];
    v50 = v0[23];
    v51 = v0[20];
    v125 = v0[16];
    v121 = v0[12];
    v122 = (_QWORD *)v0[13];
    v119 = v0[9];
    v120 = (int *)v0[11];
    v52 = v48 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
    v117 = *(_QWORD *)(v50 + 72);
    v118 = v0[6];
    v53 = MEMORY[0x24BEE4AF8];
    v126 = v50;
    v128 = *(void (**)(uint64_t, unint64_t, _QWORD))(v50 + 16);
    v123 = v0;
    v124 = v51;
    while (1)
    {
      v54 = v0[24];
      v56 = v0[18];
      v55 = v0[19];
      v128(v54, v52, v0[22]);
      sub_22DDD7CF0(v54, &qword_255DB9178, &qword_255DB9190, (uint64_t (*)(_QWORD))MEMORY[0x24BE7A0C0], &qword_255DB9198, v56);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v56, 1, v55) == 1)
        break;
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v51 + 32))(v0[21], v0[18], v0[19]);
      sub_22DE1E368();
      v57 = sub_22DE1E344();
      v137 = v49;
      v138 = v53;
      v136 = v52;
      if (v58)
      {
        v59 = v58;
        v133 = v57;
        (*(void (**)(_QWORD, _QWORD))(v125 + 8))(v0[17], v0[15]);
      }
      else
      {
        if (qword_255DB53A8 != -1)
          swift_once();
        v60 = sub_22DE1E410();
        __swift_project_value_buffer(v60, (uint64_t)qword_255DC3D48);
        v61 = sub_22DE1E3F8();
        v62 = sub_22DE1F4F0();
        if (os_log_type_enabled(v61, v62))
        {
          v63 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v63 = 0;
          _os_log_impl(&dword_22DD4B000, v61, v62, "The entity handle's name is nil, will fallback to their handle.", v63, 2u);
          MEMORY[0x22E320870](v63, -1, -1);
        }
        v64 = v0[17];
        v65 = v0[15];

        v66 = sub_22DE1E350();
        v59 = v67;
        (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v64, v65);
        if (!v59)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v103 = sub_22DE1E3F8();
          v104 = sub_22DE1F4FC();
          if (os_log_type_enabled(v103, v104))
          {
            v105 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v105 = 0;
            _os_log_impl(&dword_22DD4B000, v103, v104, "sender is nil", v105, 2u);
            MEMORY[0x22E320870](v105, -1, -1);
          }
          v106 = v0[40];
          v107 = v0[36];
          v108 = v0[31];
          v109 = v0[28];
          v110 = v0[24];
          v112 = v0[21];
          v111 = v0[22];
          v113 = v0[19];
          v139 = v0[2];
          swift_release();

          (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v112, v113);
          (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v110, v111);
          (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v108, v109);
          v116(v106, v107);
          v114 = type metadata accessor for BatchInteraction.ContentPreview(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56))(v139, 1, 1, v114);
          goto LABEL_43;
        }
        v133 = v66;
      }
      v68 = v0[30];
      v129 = v0[31];
      v69 = v0[28];
      v70 = (uint64_t *)v0[13];
      v135 = v0[14];
      v71 = v0[10];
      v130 = v0[8];
      v131 = v0[7];
      v132 = v0[5];
      v72 = sub_22DE1E380();
      v74 = v73;
      sub_22DE1E374();
      v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v127 + 16);
      v75(v68, v129, v69);
      v76 = sub_22DE1E38C() & 1;
      *v70 = v72;
      v122[1] = v74;
      v122[2] = v133;
      v122[3] = v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))((char *)v70 + v120[6], v71, v130);
      v75((uint64_t)v70 + v120[7], v68, v69);
      *((_BYTE *)v70 + v120[8]) = v76;
      sub_22DE1E044();
      v134 = *(void (**)(uint64_t, uint64_t))(v127 + 8);
      v134(v68, v69);
      (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v71, v130);
      (*(void (**)(char *, uint64_t, uint64_t))(v118 + 32))((char *)v70 + v120[9], v131, v132);
      sub_22DD647B0((uint64_t)v70, v135, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
      v53 = v138;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v53 = sub_22DDFCAE4(0, *(_QWORD *)(v138 + 16) + 1, 1, v138);
      v78 = *(_QWORD *)(v53 + 16);
      v77 = *(_QWORD *)(v53 + 24);
      v0 = v123;
      v51 = v124;
      if (v78 >= v77 >> 1)
        v53 = sub_22DDFCAE4(v77 > 1, v78 + 1, 1, v53);
      v79 = v123[24];
      v81 = v123[21];
      v80 = v123[22];
      v82 = v123[19];
      v83 = v123[14];
      *(_QWORD *)(v53 + 16) = v78 + 1;
      sub_22DD647B0(v83, v53+ ((*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80))+ *(_QWORD *)(v121 + 72) * v78, type metadata accessor for BatchInteraction.ContentPreview.CUContent.Message);
      (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v81, v82);
      (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v79, v80);
      v52 = v136 + v117;
      v49 = v137 - 1;
      if (v137 == 1)
      {
        swift_release();
        swift_bridgeObjectRelease();
        v98 = v134;
        goto LABEL_39;
      }
    }
    v85 = v0[18];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22DD5071C(v85, &qword_255DB9170);
    if (qword_255DB53A8 != -1)
      swift_once();
    v86 = sub_22DE1E410();
    __swift_project_value_buffer(v86, (uint64_t)qword_255DC3D48);
    v87 = sub_22DE1E3F8();
    v88 = sub_22DE1F4FC();
    if (os_log_type_enabled(v87, v88))
    {
      v89 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v89 = 0;
      _os_log_impl(&dword_22DD4B000, v87, v88, "entity is nil", v89, 2u);
      MEMORY[0x22E320870](v89, -1, -1);
    }
    v90 = v0[40];
    v91 = v0[36];
    v92 = v0[31];
    v93 = v0[28];
    v94 = v0[24];
    v95 = v0[22];
    v96 = v0[2];
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v94, v95);
    (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v92, v93);
    v116(v90, v91);
    v97 = type metadata accessor for BatchInteraction.ContentPreview(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v96, 1, 1, v97);
  }
  else
  {
    v84 = v0[29];
    swift_release();
    swift_bridgeObjectRelease();
    v98 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
    v53 = MEMORY[0x24BEE4AF8];
LABEL_39:
    v99 = v0[40];
    v100 = v0[36];
    v101 = v0[2];
    v98(v0[31], v0[28]);
    v116(v99, v100);
    *(_QWORD *)v101 = v53;
    *(_BYTE *)(v101 + 8) = 1;
    v102 = type metadata accessor for BatchInteraction.ContentPreview(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v101, 0, 1, v102);
  }
LABEL_43:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_22DDDA380()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7300);
  v0 = sub_22DE1E1F4();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_22DE20F30;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104))(v3 + v2, *MEMORY[0x24BE31030], v0);
  v4 = sub_22DD91388(v3);
  swift_setDeallocating();
  swift_arrayDestroy();
  result = swift_deallocClassInstance();
  qword_255DC3D00 = v4;
  return result;
}

uint64_t sub_22DDDA44C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void (*v6)(unint64_t, _QWORD, uint64_t);
  uint64_t v7;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7300);
  v0 = sub_22DE1E1F4();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_22DE231A0;
  v5 = v4 + v3;
  v6 = *(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104);
  v6(v5, *MEMORY[0x24BE31028], v0);
  v6(v5 + v2, *MEMORY[0x24BE31000], v0);
  v7 = sub_22DD91388(v4);
  swift_setDeallocating();
  swift_arrayDestroy();
  result = swift_deallocClassInstance();
  qword_255DC3D08 = v7;
  return result;
}

uint64_t FBKFeedbackForm.__allocating_init(serviceForm:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  int64_t v41;
  id v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[2];

  v2 = sub_22DE1E2CC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB91A0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v49 = (char *)&v40 - v10;
  v11 = sub_22DE1E284();
  v13 = v12;
  v14 = objc_allocWithZone((Class)type metadata accessor for FBKFeedbackForm());
  v15 = (char *)FBKFeedbackForm.init(identifier:)(v11, v13);
  sub_22DDDAA94((char *)v53);
  LOBYTE(v13) = v53[0];
  v16 = &v15[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_authenticationMethod];
  swift_beginAccess();
  *v16 = v13;
  v42 = a1;
  result = sub_22DE1E2A8();
  v50 = 0;
  v18 = *(_QWORD *)(result + 64);
  v43 = result + 64;
  v19 = 1 << *(_BYTE *)(result + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v18;
  v44 = (unint64_t)(v19 + 63) >> 6;
  v45 = result;
  v41 = v44 - 1;
  v47 = v3;
  v48 = v2;
  v46 = v9;
  while (1)
  {
    if (v21)
    {
      v51 = (v21 - 1) & v21;
      v22 = (uint64_t)v49;
      v23 = __clz(__rbit64(v21)) | (v50 << 6);
LABEL_7:
      v24 = v45;
      (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v9, *(_QWORD *)(v45 + 48) + *(_QWORD *)(v3 + 72) * v23, v2);
      v25 = *(_QWORD *)(v24 + 56);
      v26 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB91A8);
      *(_QWORD *)&v9[*(int *)(v26 + 48)] = *(_QWORD *)(v25 + 8 * v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v9, 0, 1, v26);
      swift_bridgeObjectRetain();
      goto LABEL_26;
    }
    v22 = (uint64_t)v49;
    v27 = v50 + 1;
    if (__OFADD__(v50, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v27 < v44)
    {
      v28 = *(_QWORD *)(v43 + 8 * v27);
      if (v28)
        goto LABEL_11;
      v29 = v50 + 2;
      ++v50;
      if (v27 + 1 < v44)
      {
        v28 = *(_QWORD *)(v43 + 8 * v29);
        if (v28)
          goto LABEL_14;
        v50 = v27 + 1;
        if (v27 + 2 < v44)
        {
          v28 = *(_QWORD *)(v43 + 8 * (v27 + 2));
          if (v28)
          {
            v27 += 2;
            goto LABEL_11;
          }
          v29 = v27 + 3;
          v50 = v27 + 2;
          if (v27 + 3 < v44)
            break;
        }
      }
    }
LABEL_25:
    v30 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB91A8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v9, 1, 1, v30);
    v51 = 0;
LABEL_26:
    sub_22DDDAC7C((uint64_t)v9, v22);
    v31 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB91A8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v22, 1, v31) == 1)
    {
      swift_release();

      return (uint64_t)v15;
    }
    v32 = *(_QWORD *)(v22 + *(int *)(v31 + 48));
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v22, v2);
    v52 = v32;
    v33 = *(_QWORD *)(v32 + 16);
    if (v33)
    {
      v34 = (uint64_t *)(v52 + 40);
      do
      {
        v38 = *(v34 - 1);
        v37 = *v34;
        swift_bridgeObjectRetain();
        v35 = sub_22DE1E2C0();
        v36 = v39;
        if (v35 == 0x656C7469743ALL && v39 == 0xE600000000000000 || (sub_22DE1F8E0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v35 = 0;
          v36 = 0;
        }
        else if (v35 == 0x616572613ALL && v36 == 0xE500000000000000 || (sub_22DE1F8E0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v35 = 0;
          v36 = 1;
        }
        else if (v35 == 0x706972637365643ALL && v36 == 0xEC0000006E6F6974 || (sub_22DE1F8E0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v35 = 0;
          v36 = 2;
        }
        v34 += 2;
        v53[0] = v35;
        v53[1] = v36;
        sub_22DE0898C(v53, v38, v37);
        swift_bridgeObjectRelease();
        sub_22DDA40E0(v35, v36);
        --v33;
      }
      while (v33);
    }
    swift_bridgeObjectRelease();
    v3 = v47;
    v2 = v48;
    result = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v5, v48);
    v9 = v46;
    v21 = v51;
  }
  v28 = *(_QWORD *)(v43 + 8 * v29);
  if (v28)
  {
LABEL_14:
    v27 = v29;
LABEL_11:
    v50 = v27;
    v51 = (v28 - 1) & v28;
    v23 = __clz(__rbit64(v28)) + (v27 << 6);
    goto LABEL_7;
  }
  while (1)
  {
    v27 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v27 >= v44)
    {
      v50 = v41;
      goto LABEL_25;
    }
    v28 = *(_QWORD *)(v43 + 8 * v27);
    ++v29;
    if (v28)
      goto LABEL_11;
  }
LABEL_44:
  __break(1u);
  return result;
}

void sub_22DDDAA94(char *a1@<X8>)
{
  void *v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = sub_22DE1E29C();
  if ((unint64_t)(v3 - 1) >= 3)
  {
    if (qword_255DB53A0 != -1)
      swift_once();
    v5 = sub_22DE1E410();
    __swift_project_value_buffer(v5, (uint64_t)qword_255DC3D30);
    v6 = v1;
    v7 = sub_22DE1E3F8();
    v8 = sub_22DE1F4FC();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      v11 = v10;
      *(_DWORD *)v9 = 136315394;
      sub_22DDA2E30(0xD000000000000020, 0x800000022DE2BB50, &v11);
      sub_22DE1F628();
      *(_WORD *)(v9 + 12) = 2048;
      sub_22DE1E29C();
      sub_22DE1E290();
      sub_22DE1F628();

      _os_log_impl(&dword_22DD4B000, v7, v8, "Unknown case in %s: %ld falling back to .optional", (uint8_t *)v9, 0x16u);
      v4 = 1;
      swift_arrayDestroy();
      MEMORY[0x22E320870](v10, -1, -1);
      MEMORY[0x22E320870](v9, -1, -1);

    }
    else
    {

      v4 = 1;
    }
  }
  else
  {
    v4 = v3 - 1;
  }
  *a1 = v4;
}

uint64_t sub_22DDDAC7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB91A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_22DDDACC4()
{
  unint64_t v0;

  sub_22DD942DC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_OWORD *sub_22DDDAD44(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _OWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)v3 = *a2;
    v3 = (_OWORD *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    v5 = a2[3];
    *((_QWORD *)v3 + 2) = a2[2];
    *((_QWORD *)v3 + 3) = v5;
    *((_QWORD *)v3 + 4) = a2[4];
    *((_BYTE *)v3 + 40) = *((_BYTE *)a2 + 40);
    v6 = a2[7];
    v7 = *(int *)(a3 + 40);
    v8 = (uint64_t *)((char *)a2 + v7);
    v9 = (_QWORD *)((char *)v3 + v7);
    *((_QWORD *)v3 + 6) = a2[6];
    *((_QWORD *)v3 + 7) = v6;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v9 = *v8;
    if (EnumCaseMultiPayload == 1)
    {
      v9[1] = v8[1];
      swift_retain();
      swift_retain();
      v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010) + 32);
      v12 = (char *)v9 + v11;
      v13 = (char *)v8 + v11;
      v14 = sub_22DE1E71C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_22DDDAE88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
  LODWORD(a1) = swift_getEnumCaseMultiPayload();
  result = swift_release();
  if ((_DWORD)a1 == 1)
  {
    swift_release();
    v6 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010) + 32);
    v7 = sub_22DE1E71C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  return result;
}

uint64_t sub_22DDDAF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(int *)(a3 + 40);
  v7 = (_QWORD *)(a2 + v6);
  v8 = (_QWORD *)(a1 + v6);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *v8 = *v7;
  if (EnumCaseMultiPayload == 1)
  {
    v8[1] = v7[1];
    swift_retain();
    swift_retain();
    v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010) + 32);
    v11 = (char *)v8 + v10;
    v12 = (char *)v7 + v10;
    v13 = sub_22DE1E71C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22DDDB044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 40);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_22DD5071C(a1 + v7, &qword_255DB6010);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v8 = *v9;
    if (EnumCaseMultiPayload == 1)
    {
      v8[1] = v9[1];
      swift_retain();
      swift_retain();
      v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010) + 32);
      v12 = (char *)v8 + v11;
      v13 = (char *)v9 + v11;
      v14 = sub_22DE1E71C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_22DDDB1A0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
  a1[3] = a2[3];
  v5 = *(int *)(a3 + 40);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = v7[1];
    *v6 = *v7;
    v6[1] = v9;
    v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010) + 32);
    v11 = (char *)v6 + v10;
    v12 = (char *)v7 + v10;
    v13 = sub_22DE1E71C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_22DDDB280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 40);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_22DD5071C(a1 + v7, &qword_255DB6010);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = v9[1];
      *v8 = *v9;
      v8[1] = v11;
      v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010) + 32);
      v13 = (char *)v8 + v12;
      v14 = (char *)v9 + v12;
      v15 = sub_22DE1E71C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22DDDB3A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DDDB3B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB7808);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t sub_22DDDB434()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22DDDB440(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 32) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB7808);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SheetContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SheetContainer);
}

uint64_t sub_22DDDB4C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DDDB4F8(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    MEMORY[0x24BDAC7A8](a1);
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return sub_22DE1F160();
  }
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata);
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return sub_22DE1F160();
}

uint64_t sub_22DDDB6AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_22DDDB6C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = sub_22DE1EAC4();
  MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_22DE1EAD0();
}

uint64_t sub_22DDDB788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v5 = sub_22DE1EAC4();
  MEMORY[0x24BDAC7A8](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_22DE1EAD0();
}

uint64_t sub_22DDDB84C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(char *, uint64_t);
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD v37[2];
  _QWORD v38[2];

  v36 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB9230);
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  sub_22DE1F058();
  sub_22DE1E6E0();
  sub_22DE1E6E0();
  v35 = v3;
  sub_22DE1E4DC();
  sub_22DE1E6E0();
  sub_22DE1E6E0();
  sub_22DE1EADC();
  swift_getTupleTypeMetadata2();
  v5 = sub_22DE1F154();
  v31 = MEMORY[0x22E3207B0](MEMORY[0x24BDF5428], v5);
  v32 = v5;
  v6 = sub_22DE1F058();
  v34 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v29 - v7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB74D8);
  v9 = sub_22DE1E6E0();
  v33 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v29 - v10;
  v12 = MEMORY[0x22E3207B0](MEMORY[0x24BDF4700], v6);
  v13 = sub_22DD508B0(&qword_255DB74D0, &qword_255DB74D8, MEMORY[0x24BDF06D0]);
  v29[2] = v12;
  v38[0] = v12;
  v38[1] = v13;
  v14 = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v9, v38);
  v37[0] = v9;
  v37[1] = v14;
  v29[1] = v14;
  v15 = MEMORY[0x22E32075C](0, v37, MEMORY[0x24BDF32D0], 0);
  v30 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)v29 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = v35;
  v29[-4] = v4;
  v29[-3] = v22;
  v29[-2] = v23;
  v24 = v23;
  sub_22DE1E9EC();
  sub_22DE1F04C();
  v37[0] = *(_QWORD *)(v24 + 32);
  swift_retain();
  sub_22DE1EC5C();
  sub_22DE1EDB8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v6);
  sub_22DE1EE90();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v9);
  v25 = v30;
  v26 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  v26(v21, v18, v15);
  v27 = *(void (**)(char *, uint64_t))(v25 + 8);
  v27(v18, v15);
  v26(v36, v21, v15);
  return ((uint64_t (*)(char *, uint64_t))v27)(v21, v15);
}

uint64_t *sub_22DDDBBFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(_QWORD, _QWORD, _QWORD);
  char *v69;
  void (*v70)(_QWORD, _QWORD);
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  void (*v81)(_QWORD, _QWORD, _QWORD);
  void (*v82)(_QWORD, _QWORD);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(_QWORD, _QWORD);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  int v112;
  int v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD v137[2];
  _QWORD v138[2];
  _QWORD v139[2];
  _QWORD v140[2];
  _QWORD v141[2];
  _QWORD v142[2];
  _QWORD v143[2];
  _QWORD v144[2];
  _QWORD v145[4];
  _QWORD v146[2];
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  char v158;
  uint64_t v159[2];
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  char v171;
  _QWORD v172[2];
  _QWORD v173[2];
  _QWORD v174[2];
  _QWORD v175[2];
  unsigned __int8 v176;
  unsigned __int8 v177;
  unsigned __int8 v178;
  char v179;
  _BYTE v180[7];
  _BYTE v181[7];
  _BYTE v182[7];
  _BYTE v183[7];
  _DWORD v184[5];

  v127 = a4;
  v7 = sub_22DE1E4DC();
  v102 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v101 = (char *)&v98 - v8;
  v136 = v9;
  v10 = sub_22DE1E6E0();
  v107 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v106 = (char *)&v98 - v11;
  v135 = v12;
  v13 = sub_22DE1E6E0();
  v108 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v110 = (char *)&v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v105 = (char *)&v98 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v109 = (char *)&v98 - v18;
  v19 = sub_22DE1F058();
  v98 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v98 - v20;
  v22 = sub_22DE1E6E0();
  v99 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v98 - v23;
  v132 = v25;
  v26 = sub_22DE1E6E0();
  v100 = *(_QWORD *)(v26 - 8);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v104 = (char *)&v98 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v98 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v103 = (char *)&v98 - v32;
  v126 = v13;
  v125 = sub_22DE1EADC();
  v134 = *(_QWORD *)(v125 - 8);
  v33 = MEMORY[0x24BDAC7A8](v125);
  v124 = (char *)&v98 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v123 = (char *)&v98 - v35;
  v121 = sub_22DE1E8F0();
  v37 = 0.0;
  if (*(_QWORD *)(a1 + 24))
  {
    if (*(double *)a1 * 0.25 > 8.0)
      v37 = *(double *)a1 * 0.25;
    else
      v37 = 8.0;
  }
  v133 = v19;
  sub_22DDDC6A0(a1, a2, a3, v36, (uint64_t)&v160);
  v130 = *((_QWORD *)&v160 + 1);
  v131 = v160;
  v122 = *((_QWORD *)&v161 + 1);
  v115 = v162;
  v38 = BYTE8(v162);
  v128 = *((_QWORD *)&v163 + 1);
  v120 = v163;
  v129 = v161;
  v118 = sub_22DE1EC5C();
  sub_22DE1E4B8();
  v116 = v40;
  v117 = v39;
  v42 = v41;
  v44 = v43;
  v119 = sub_22DE1EC74();
  v178 = 0;
  v177 = v38;
  v176 = 0;
  v45 = sub_22DE1E4B8();
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v112 = v178;
  v113 = v177;
  v114 = v176;
  v179 = 0;
  MEMORY[0x24BDAC7A8](v45);
  *(&v98 - 4) = a2;
  *(&v98 - 3) = a3;
  *(&v98 - 2) = a1;
  v111 = v26;
  if (v54 == 1)
  {
    sub_22DE1E9EC();
    sub_22DE1F04C();
    v55 = v133;
    v56 = MEMORY[0x22E3207B0](MEMORY[0x24BDF4700], v133);
    sub_22DE1EEFC();
    (*(void (**)(char *, uint64_t))(v98 + 8))(v21, v55);
    sub_22DE1EC68();
    if (*(_QWORD *)(a1 + 24))
    {
      v57.n128_f64[0] = *(double *)a1 * 0.25;
      if (v57.n128_f64[0] <= 8.0)
        v57.n128_f64[0] = 8.0;
    }
    v63 = v132;
    v140[0] = v56;
    v64 = MEMORY[0x24BDECC60];
    v140[1] = MEMORY[0x24BDECC60];
    v65 = MEMORY[0x24BDED308];
    v66 = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v132, v140, v57);
    sub_22DE1EF08();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v24, v63);
    v139[0] = v66;
    v139[1] = v64;
    MEMORY[0x22E3207B0](v65, v26, v139);
    v67 = v100;
    v68 = *(void (**)(_QWORD, _QWORD, _QWORD))(v100 + 16);
    v69 = v103;
    v68(v103, v31, v26);
    v70 = *(void (**)(_QWORD, _QWORD))(v67 + 8);
    v70(v31, v26);
    v71 = (uint64_t)v104;
    v68(v104, v69, v26);
    v138[0] = MEMORY[0x22E3207B0](MEMORY[0x24BDEB238], v136);
    v138[1] = v64;
    v137[0] = MEMORY[0x22E3207B0](v65, v135, v138);
    v137[1] = v64;
    v72 = v126;
    MEMORY[0x22E3207B0](v65, v126, v137);
    v73 = v123;
    sub_22DDDB6C4(v71, v26);
    v70(v71, v26);
    v70(v69, v26);
  }
  else
  {
    sub_22DE1EC44();
    v58 = v101;
    sub_22DE1E4E8();
    v59 = v136;
    v60 = MEMORY[0x22E3207B0](MEMORY[0x24BDEB238], v136);
    v61 = v106;
    sub_22DE1EEFC();
    (*(void (**)(char *, uint64_t))(v102 + 8))(v58, v59);
    sub_22DE1EC68();
    if (*(_QWORD *)(a1 + 24))
    {
      v62.n128_f64[0] = *(double *)a1 * 0.25;
      if (v62.n128_f64[0] <= 8.0)
        v62.n128_f64[0] = 8.0;
    }
    v74 = v135;
    v75 = MEMORY[0x24BDECC60];
    v175[0] = v60;
    v175[1] = MEMORY[0x24BDECC60];
    v76 = MEMORY[0x24BDED308];
    v77 = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v135, v175, v62);
    v78 = v105;
    sub_22DE1EF08();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v61, v74);
    v174[0] = v77;
    v174[1] = v75;
    v72 = v126;
    MEMORY[0x22E3207B0](v76, v126, v174);
    v79 = v108;
    v80 = v109;
    v81 = *(void (**)(_QWORD, _QWORD, _QWORD))(v108 + 16);
    v81(v109, v78, v72);
    v82 = *(void (**)(_QWORD, _QWORD))(v79 + 8);
    v82(v78, v72);
    v83 = (uint64_t)v110;
    v81(v110, v80, v72);
    v173[0] = MEMORY[0x22E3207B0](MEMORY[0x24BDF4700], v133);
    v173[1] = v75;
    v172[0] = MEMORY[0x22E3207B0](v76, v132, v173);
    v172[1] = v75;
    MEMORY[0x22E3207B0](v76, v26, v172);
    v73 = v123;
    sub_22DDDB788(v83, v26, v72);
    v82(v83, v72);
    v82(v80, v72);
  }
  v84 = v122;
  *(_QWORD *)&v147 = v121;
  *((double *)&v147 + 1) = v37;
  LOBYTE(v148) = v112;
  *(_DWORD *)((char *)&v148 + 1) = v184[0];
  DWORD1(v148) = *(_DWORD *)((char *)v184 + 3);
  v85 = v130;
  v86 = v131;
  *((_QWORD *)&v148 + 1) = v131;
  *(_QWORD *)&v149 = v130;
  v87 = v129;
  *((_QWORD *)&v149 + 1) = v129;
  *(_QWORD *)&v150 = v122;
  *((_QWORD *)&v150 + 1) = v115;
  LOBYTE(v151) = v113;
  *(_DWORD *)((char *)&v151 + 1) = *(_DWORD *)v183;
  DWORD1(v151) = *(_DWORD *)&v183[3];
  *((_QWORD *)&v151 + 1) = v120;
  *(_QWORD *)&v152 = v128;
  BYTE8(v152) = v118;
  HIDWORD(v152) = *(_DWORD *)&v182[3];
  *(_DWORD *)((char *)&v152 + 9) = *(_DWORD *)v182;
  *(_QWORD *)&v153 = v117;
  *((_QWORD *)&v153 + 1) = v116;
  *(_QWORD *)&v154 = v42;
  *((_QWORD *)&v154 + 1) = v44;
  LOBYTE(v155) = v114;
  *(_DWORD *)((char *)&v155 + 1) = *(_DWORD *)v181;
  DWORD1(v155) = *(_DWORD *)&v181[3];
  BYTE8(v155) = v119;
  HIDWORD(v155) = *(_DWORD *)&v180[3];
  *(_DWORD *)((char *)&v155 + 9) = *(_DWORD *)v180;
  *(_QWORD *)&v156 = v47;
  *((_QWORD *)&v156 + 1) = v49;
  *(_QWORD *)&v157 = v51;
  *((_QWORD *)&v157 + 1) = v53;
  v158 = v179;
  v159[0] = (uint64_t)&v147;
  v89 = (uint64_t)v124;
  v88 = v125;
  (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v124, v73, v125);
  v159[1] = v89;
  v90 = v87;
  v91 = v84;
  sub_22DDDCAA4(v86, v85, v90, v84);
  swift_retain();
  v146[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9230);
  v146[1] = v88;
  v145[2] = sub_22DDDCAD4();
  v145[0] = MEMORY[0x22E3207B0](MEMORY[0x24BDF4700], v133);
  v92 = MEMORY[0x24BDECC60];
  v145[1] = MEMORY[0x24BDECC60];
  v93 = MEMORY[0x24BDED308];
  v144[0] = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v132, v145);
  v144[1] = v92;
  v94 = MEMORY[0x22E3207B0](v93, v111, v144);
  v143[0] = MEMORY[0x22E3207B0](MEMORY[0x24BDEB238], v136);
  v143[1] = v92;
  v142[0] = MEMORY[0x22E3207B0](v93, v135, v143);
  v142[1] = v92;
  v95 = MEMORY[0x22E3207B0](v93, v72, v142);
  v141[0] = v94;
  v141[1] = v95;
  v145[3] = MEMORY[0x22E3207B0](MEMORY[0x24BDEF3E0], v88, v141);
  sub_22DDDB4F8(v159, 2uLL, (uint64_t)v146);
  v96 = *(void (**)(_QWORD, _QWORD))(v134 + 8);
  v96(v73, v88);
  sub_22DDDCBC4(v131, v130, v129, v91);
  swift_release();
  v96(v89, v88);
  v168 = v155;
  v169 = v156;
  v170 = v157;
  v171 = v158;
  v164 = v151;
  v165 = v152;
  v166 = v153;
  v167 = v154;
  v160 = v147;
  v161 = v148;
  v162 = v149;
  v163 = v150;
  return sub_22DDDCBF4((uint64_t *)&v160);
}

uint64_t sub_22DDDC6A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v41 = a2;
  v39 = a3;
  v7 = type metadata accessor for SheetContainer(0, a2, a3, a4);
  v40 = *(_QWORD *)(v7 - 8);
  v37 = *(_QWORD *)(v40 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v38 = (char *)v35 - v8;
  v9 = *(_QWORD *)(a1 + 24);
  if (v9)
  {
    v42 = *(_QWORD *)(a1 + 16);
    v43 = v9;
    sub_22DD50840();
    swift_bridgeObjectRetain();
    v10 = sub_22DE1ED94();
    v12 = v11;
    v14 = v13 & 1;
    sub_22DE1ECC8();
    v36 = a1;
    v15 = sub_22DE1ED64();
    v35[0] = v16;
    v35[1] = v17;
    v19 = v18;
    swift_release();
    v20 = v19 & 1;
    sub_22DD4FC6C(v10, v12, v14);
    swift_bridgeObjectRelease();
    v21 = v35[0];
    v22 = sub_22DE1ED58();
    v24 = v23;
    v26 = v25;
    v9 = v27 & 1;
    v28 = v20;
    a1 = v36;
    sub_22DD4FC6C(v15, v21, v28);
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = 0;
    v24 = 0;
    v26 = 0;
  }
  v29 = v40;
  v30 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v38, a1, v7);
  v31 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v32 = swift_allocObject();
  v33 = v39;
  *(_QWORD *)(v32 + 16) = v41;
  *(_QWORD *)(v32 + 24) = v33;
  (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v32 + v31, v30, v7);
  *(_QWORD *)a5 = v22;
  *(_QWORD *)(a5 + 8) = v24;
  *(_QWORD *)(a5 + 16) = v9;
  *(_QWORD *)(a5 + 24) = v26;
  *(_QWORD *)(a5 + 32) = 0;
  *(_BYTE *)(a5 + 40) = 1;
  *(_QWORD *)(a5 + 48) = sub_22DDDCD2C;
  *(_QWORD *)(a5 + 56) = v32;
  sub_22DDDCAA4(v22, v24, v9, v26);
  return sub_22DDDCBC4(v22, v24, v9, v26);
}

uint64_t sub_22DDDC8C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v5 = sub_22DE1E71C();
  MEMORY[0x24BDAC7A8](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SheetContainer(0, a2, a3, v9);
  sub_22DD84140((uint64_t)v8);
  MEMORY[0x22E31F8EC](v6);
  sub_22DE1E710();
  sub_22DE1F07C();
  return sub_22DD5071C((uint64_t)v8, &qword_255DB7010);
}

uint64_t sub_22DDDC9CC@<X0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, char *, uint64_t);
  void (*v12)(char *, uint64_t);
  uint64_t v14;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v14 - v9;
  (*(void (**)(void))(v8 + 48))();
  v11 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v11(v10, v7, a1);
  v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v7, a1);
  v11(a2, v10, a1);
  return ((uint64_t (*)(char *, uint64_t))v12)(v10, a1);
}

uint64_t *sub_22DDDCA98@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_22DDDBBFC(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_22DDDCAA4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_22DD50088(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_22DDDCAD4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB9238;
  if (!qword_255DB9238)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB9230);
    v2[0] = sub_22DDDCB40();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB9238);
  }
  return result;
}

unint64_t sub_22DDDCB40()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255DB9240;
  if (!qword_255DB9240)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB9248);
    v2[0] = sub_22DD508B0(&qword_255DB9250, qword_255DB9258, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255DB9240);
  }
  return result;
}

uint64_t sub_22DDDCBC4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_22DD4FC6C(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_22DDDCBF4(uint64_t *a1)
{
  sub_22DDDCBC4(a1[3], a1[4], a1[5], a1[6]);
  swift_release();
  return a1;
}

uint64_t sub_22DDDCC30@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_22DDDC9CC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_22DDDCC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;

  v5 = type metadata accessor for SheetContainer(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v7 = v4 + ((v6 + 32) & ~v6) + *(int *)(v5 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6010);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    v9 = v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255DB7010) + 32);
    v10 = sub_22DE1E71C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  return swift_deallocObject();
}

uint64_t sub_22DDDCD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SheetContainer(0, v5, v6, a4) - 8) + 80);
  return sub_22DDDC8C4(v4 + ((v7 + 32) & ~v7), v5, v6);
}

uint64_t sub_22DDDCD7C()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_22DDDCDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_22DDDCDF0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t sub_22DDDCE6C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t sub_22DDDCEC0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_22DDDCF08(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for SheetContainer.Config(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SheetContainer.Config);
}

uint64_t sub_22DDDCF60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB9230);
  sub_22DE1F058();
  sub_22DE1E6E0();
  sub_22DE1E6E0();
  sub_22DE1E4DC();
  sub_22DE1E6E0();
  sub_22DE1E6E0();
  sub_22DE1EADC();
  swift_getTupleTypeMetadata2();
  v0 = sub_22DE1F154();
  MEMORY[0x22E3207B0](MEMORY[0x24BDF5428], v0);
  v1 = sub_22DE1F058();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255DB74D8);
  v2 = sub_22DE1E6E0();
  v4[0] = MEMORY[0x22E3207B0](MEMORY[0x24BDF4700], v1);
  v4[1] = sub_22DD508B0(&qword_255DB74D0, &qword_255DB74D8, MEMORY[0x24BDF06D0]);
  MEMORY[0x22E3207B0](MEMORY[0x24BDED308], v2, v4);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22DDDD0F4()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22DE1E44C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_22DDDD164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8FeedbackP33_F562E464EE642380597E8DA5B39CDBBB11ImageLoader_subscription))
  {
    swift_retain();
    sub_22DE1E434();
    swift_release();
  }
  v1 = v0 + OBJC_IVAR____TtC8FeedbackP33_F562E464EE642380597E8DA5B39CDBBB11ImageLoader__image;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9460);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_22DDDD200()
{
  return type metadata accessor for ImageLoader();
}

uint64_t type metadata accessor for ImageLoader()
{
  uint64_t result;

  result = qword_255DB9320;
  if (!qword_255DB9320)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22DDDD244()
{
  unint64_t v0;

  sub_22DDDD578();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_22DDDD2C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9420);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9428);
  v15 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9430);
  v16 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(id *)(v0 + OBJC_IVAR____TtC8FeedbackP33_F562E464EE642380597E8DA5B39CDBBB11ImageLoader_publisher);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9438);
  __swift_instantiateConcreteTypeFromMangledName(qword_255DB9338);
  sub_22DD508B0(&qword_255DB9440, &qword_255DB9438, MEMORY[0x24BDB9E58]);
  sub_22DE1E488();
  swift_release();
  sub_22DD78E9C();
  v17 = (id)sub_22DE1F574();
  v11 = sub_22DE1F55C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
  sub_22DD508B0(&qword_255DB9448, &qword_255DB9428, MEMORY[0x24BDB96C0]);
  sub_22DDDD748();
  sub_22DE1E494();
  sub_22DDDD790((uint64_t)v4);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v5);
  swift_allocObject();
  swift_weakInit();
  sub_22DD508B0(&qword_255DB9458, &qword_255DB9430, MEMORY[0x24BDB9A08]);
  v12 = sub_22DE1E4AC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v8);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8FeedbackP33_F562E464EE642380597E8DA5B39CDBBB11ImageLoader_subscription) = v12;
  return swift_release();
}

void sub_22DDDD578()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255DB9330)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_255DB9338);
    v0 = sub_22DE1E464();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255DB9330);
  }
}

uint64_t sub_22DDDD5D0()
{
  return MEMORY[0x24BDB9D70];
}

void sub_22DDDD5DC(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  unint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;

  v3 = a1[1];
  if (v3 >> 60 == 15)
  {
    v4 = 0;
  }
  else
  {
    v5 = *a1;
    v6 = objc_allocWithZone(MEMORY[0x24BEBD640]);
    sub_22DD64850(v5, v3);
    v7 = (void *)sub_22DE1DFC0();
    v4 = objc_msgSend(v6, sel_initWithData_, v7);
    sub_22DDDD8F4(v5, v3);

  }
  *a2 = v4;
}

uint64_t sub_22DDDD67C(void **a1)
{
  void *v1;
  uint64_t result;
  id v3;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    v3 = v1;
    return sub_22DE1E458();
  }
  return result;
}

uint64_t sub_22DDDD70C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ImageLoader();
  result = sub_22DE1E440();
  *a1 = result;
  return result;
}

unint64_t sub_22DDDD748()
{
  unint64_t result;
  unint64_t v1;

  result = qword_255DB9450;
  if (!qword_255DB9450)
  {
    v1 = sub_22DD78E9C();
    result = MEMORY[0x22E3207B0](MEMORY[0x24BEE5670], v1);
    atomic_store(result, (unint64_t *)&qword_255DB9450);
  }
  return result;
}

uint64_t sub_22DDDD790(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9420);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22DDDD7D0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22DDDD7F4(void **a1)
{
  return sub_22DDDD67C(a1);
}

uint64_t sub_22DDDD7FC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22DE1E44C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_22DDDD87C(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v1;
  swift_retain();
  return sub_22DE1E458();
}

uint64_t sub_22DDDD8F4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_22DD64894(a1, a2);
  return a1;
}

uint64_t sub_22DDDD908(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aUikit_1[8 * a1] == *(_QWORD *)&aUikit_1[8 * a2] && qword_22DE26648[a1] == qword_22DE26648[a2])
    v3 = 1;
  else
    v3 = sub_22DE1F8E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_22DDDD98C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 7107189;
  else
    v3 = 0x54786F62646E6173;
  if (v2)
    v4 = 0xEC0000006E656B6FLL;
  else
    v4 = 0xE300000000000000;
  if ((a2 & 1) != 0)
    v5 = 7107189;
  else
    v5 = 0x54786F62646E6173;
  if ((a2 & 1) != 0)
    v6 = 0xE300000000000000;
  else
    v6 = 0xEC0000006E656B6FLL;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_22DE1F8E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_22DDDDA2C(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_22DDDDA78(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_22DDDDB18 + 4 * byte_22DE260B8[a2]))(a3 + 9);
}

uint64_t sub_22DDDDB18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 9 && v3 == 0x800000022DE288C0)
    v4 = 1;
  else
    v4 = sub_22DE1F8E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

id FBKEvaluationController.__allocating_init(subject:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return FBKEvaluationController.init(subject:)(a1);
}

uint64_t sub_22DDDDC20()
{
  sub_22DE1F964();
  sub_22DE1F310();
  swift_bridgeObjectRelease();
  return sub_22DE1F97C();
}

uint64_t sub_22DDDDCA0()
{
  sub_22DE1F964();
  sub_22DE1F310();
  swift_bridgeObjectRelease();
  return sub_22DE1F97C();
}

uint64_t sub_22DDDDD08()
{
  sub_22DE1F310();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22DDDDD48()
{
  sub_22DE1F310();
  return swift_bridgeObjectRelease();
}

void sub_22DDDDDA0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22DDDDDE4()
{
  sub_22DE1F310();
  return swift_bridgeObjectRelease();
}

void sub_22DDDDE7C(uint64_t a1, char a2)
{
  sub_22DE1F964();
  __asm { BR              X10 }
}

uint64_t sub_22DDDDED0()
{
  sub_22DE1F310();
  swift_bridgeObjectRelease();
  return sub_22DE1F97C();
}

uint64_t sub_22DDDDF84()
{
  sub_22DE1F964();
  sub_22DE1F310();
  swift_bridgeObjectRelease();
  return sub_22DE1F97C();
}

uint64_t sub_22DDDE000()
{
  sub_22DE1F964();
  sub_22DE1F310();
  swift_bridgeObjectRelease();
  return sub_22DE1F97C();
}

uint64_t sub_22DDDE064(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_22DDDE084@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController__isFeedbackFormPresented);
  return result;
}

uint64_t sub_22DDDE118()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E05C();
  return swift_release();
}

uint64_t FBKEvaluationController.APIType.description.getter()
{
  char *v0;

  return *(_QWORD *)&aUikit_1[8 * *v0];
}

uint64_t FBKEvaluationController.APIType.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aUikit_1[8 * *v0];
}

Feedback::FBKEvaluationController::APIType_optional __swiftcall FBKEvaluationController.APIType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  Feedback::FBKEvaluationController::APIType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_22DE1F820();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_22DDDE260(char *a1, char *a2)
{
  return sub_22DDDD908(*a1, *a2);
}

uint64_t sub_22DDDE26C()
{
  return sub_22DDDDCA0();
}

uint64_t sub_22DDDE274()
{
  return sub_22DDDDD08();
}

uint64_t sub_22DDDE27C()
{
  return sub_22DDDE000();
}

Feedback::FBKEvaluationController::APIType_optional sub_22DDDE284(Swift::String *a1)
{
  return FBKEvaluationController.APIType.init(rawValue:)(*a1);
}

uint64_t sub_22DDDE290@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FBKEvaluationController.APIType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22DDDE2B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  result = swift_release();
  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController__apiType);
  return result;
}

uint64_t sub_22DDDE34C()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E05C();
  return swift_release();
}

uint64_t sub_22DDDE3F4()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController_blockPresentationDetentUsage);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_22DDDE438(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController_blockPresentationDetentUsage);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_22DDDE480())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_22DDDE4C4(char a1)
{
  return *(_QWORD *)&aIdling_0[8 * a1];
}

uint64_t sub_22DDDE4E4()
{
  char *v0;

  return sub_22DDDE4C4(*v0);
}

uint64_t sub_22DDDE4EC()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController__evaluationState);
}

uint64_t sub_22DDDE578@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t result;

  v5 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  result = swift_release();
  *a3 = *(_BYTE *)(v5 + *a2);
  return result;
}

uint64_t sub_22DDDE610()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E05C();
  return swift_release();
}

uint64_t sub_22DDDE6B8(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  int v19;
  uint64_t KeyPath;
  char v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  char v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  char *v36;
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  char *v41;
  int v42;
  uint64_t v43;
  unint64_t v44;
  void (*v45)(char *);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  void (*v51)(char *);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(_QWORD);

  v53 = a1;
  v2 = sub_22DE1E410();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v50 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v47 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v47 - v9;
  if (qword_255DB53B8 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v2, (uint64_t)qword_255DC3D78);
  v51 = *(void (**)(char *))(v3 + 16);
  v52 = v11;
  v51(v10);
  v12 = v1;
  v13 = sub_22DE1E3F8();
  v14 = sub_22DE1F514();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v47 = swift_slowAlloc();
    v55 = (void (*)(_QWORD))v47;
    *(_DWORD *)v15 = 136446722;
    v54 = sub_22DDA2E30(0xD000000000000010, 0x800000022DE2C9D0, (uint64_t *)&v55);
    sub_22DE1F628();
    *(_WORD *)(v15 + 12) = 2080;
    swift_getKeyPath();
    v48 = v8;
    v54 = (uint64_t)v12;
    sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
    v49 = v2;
    sub_22DE1E068();
    swift_release();
    v54 = sub_22DDA2E30(*(_QWORD *)&aIdling_0[8 * v12[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__evaluationState]], *(_QWORD *)&aEvaluati[8 * v12[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__evaluationState] + 8], (uint64_t *)&v55);
    sub_22DE1F628();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2080;
    v54 = sub_22DDA2E30(*(_QWORD *)&aIdling_0[8 * (char)v53], *(_QWORD *)&aEvaluati[8 * (char)v53 + 8], (uint64_t *)&v55);
    v8 = v48;
    v2 = v49;
    sub_22DE1F628();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22DD4B000, v13, v14, "%{public}s [%s] -> [%s]", (uint8_t *)v15, 0x20u);
    v16 = v47;
    swift_arrayDestroy();
    MEMORY[0x22E320870](v16, -1, -1);
    MEMORY[0x22E320870](v15, -1, -1);

  }
  else
  {

  }
  v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v10, v2);
  if ((objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
  {
    v32 = sub_22DE1E3F8();
    v33 = sub_22DE1F4FC();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_22DD4B000, v32, v33, "BUG in Feedback.framework client.  State transitions must occur on main thread / queue.", v34, 2u);
      MEMORY[0x22E320870](v34, -1, -1);
    }

    return 0;
  }
  swift_getKeyPath();
  v55 = (void (*)(_QWORD))v12;
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  swift_release();
  v18 = OBJC_IVAR____TtC8Feedback23FBKEvaluationController__evaluationState;
  v19 = v12[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__evaluationState];
  KeyPath = swift_getKeyPath();
  if (!v19)
  {
    MEMORY[0x24BDAC7A8](KeyPath);
    *(&v47 - 2) = (uint64_t)v12;
    *((_BYTE *)&v47 - 8) = v53;
    v55 = (void (*)(_QWORD))v12;
    sub_22DE1E05C();
    swift_release();
    return 1;
  }
  v55 = (void (*)(_QWORD))v12;
  sub_22DE1E068();
  swift_release();
  v21 = v53;
  if (v12[v18] != v53)
  {
    if (!(_BYTE)v53)
    {
      v46 = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](v46);
      *(&v47 - 2) = (uint64_t)v12;
      *((_BYTE *)&v47 - 8) = 0;
      v55 = (void (*)(_QWORD))v12;
      sub_22DE1E05C();
      swift_release();
      return 1;
    }
    ((void (*)(char *, uint64_t, uint64_t))v51)(v8, v52, v2);
    v36 = v12;
    v37 = v8;
    v38 = sub_22DE1E3F8();
    v39 = sub_22DE1F4FC();
    LODWORD(v52) = v39;
    if (os_log_type_enabled(v38, v39))
    {
      v40 = swift_slowAlloc();
      v51 = (void (*)(char *))swift_slowAlloc();
      v55 = (void (*)(_QWORD))v51;
      *(_DWORD *)v40 = 136315394;
      swift_getKeyPath();
      v49 = v2;
      v54 = (uint64_t)v36;
      v41 = v37;
      sub_22DE1E068();
      swift_release();
      v54 = sub_22DDA2E30(*(_QWORD *)&aIdling_0[8 * v12[v18]], *(_QWORD *)&aEvaluati[8 * v12[v18] + 8], (uint64_t *)&v55);
      sub_22DE1F628();

      swift_bridgeObjectRelease();
      v42 = v53;
      *(_WORD *)(v40 + 12) = 2080;
      if (v42 == 2)
        v43 = 0x697461756C617645;
      else
        v43 = 0x676E6964616F4CLL;
      if (v42 == 2)
        v44 = 0xEA0000000000676ELL;
      else
        v44 = 0xE700000000000000;
      v54 = sub_22DDA2E30(v43, v44, (uint64_t *)&v55);
      sub_22DE1F628();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22DD4B000, v38, (os_log_type_t)v52, "Failed to transition from [%s] to [%s]", (uint8_t *)v40, 0x16u);
      v45 = v51;
      swift_arrayDestroy();
      MEMORY[0x22E320870](v45, -1, -1);
      MEMORY[0x22E320870](v40, -1, -1);

      v30 = v41;
      v31 = v49;
      goto LABEL_28;
    }

    v30 = v37;
    goto LABEL_27;
  }
  v22 = v50;
  ((void (*)(char *, uint64_t, uint64_t))v51)(v50, v52, v2);
  v23 = sub_22DE1E3F8();
  v24 = sub_22DE1F4FC();
  if (!os_log_type_enabled(v23, v24))
  {

    v30 = v22;
LABEL_27:
    v31 = v2;
    goto LABEL_28;
  }
  v25 = v21;
  v26 = (uint8_t *)swift_slowAlloc();
  v27 = swift_slowAlloc();
  *(_DWORD *)v26 = 136315138;
  v28 = 8 * v25;
  v29 = *(_QWORD *)&aIdling_0[v28];
  v55 = (void (*)(_QWORD))v27;
  v54 = sub_22DDA2E30(v29, *(_QWORD *)&aEvaluati[v28 + 8], (uint64_t *)&v55);
  sub_22DE1F628();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_22DD4B000, v23, v24, "Detected duplicate state transition to [%s].", v26, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x22E320870](v27, -1, -1);
  MEMORY[0x22E320870](v26, -1, -1);

  v30 = v22;
  v31 = v2;
LABEL_28:
  v17(v30, v31);
  return 0;
}

BOOL sub_22DDDEF84(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  if ((objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) != 0)
  {
    swift_getKeyPath();
    sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
    sub_22DE1E068();
    swift_release();
    return *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController__evaluationState) == a1;
  }
  else
  {
    if (qword_255DB53B8 != -1)
      swift_once();
    v4 = sub_22DE1E410();
    __swift_project_value_buffer(v4, (uint64_t)qword_255DC3D78);
    v5 = sub_22DE1E3F8();
    v6 = sub_22DE1F4FC();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_22DD4B000, v5, v6, "BUG in Feedback.framework client.  Reading state must occur on main thread / queue.", v7, 2u);
      MEMORY[0x22E320870](v7, -1, -1);
    }

    return 0;
  }
}

uint64_t sub_22DDDF0EC()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  swift_release();
  return MEMORY[0x22E32090C](v0 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController__delegate);
}

uint64_t sub_22DDDF184@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController__delegate;
  result = MEMORY[0x22E32090C](v3 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController__delegate);
  v6 = *(_QWORD *)(v4 + 8);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_22DDDF224()
{
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  swift_unknownObjectRetain();
  sub_22DE1E05C();
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_22DDDF2E0(void *a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, id, uint64_t, uint64_t);
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  BOOL v27;
  id v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  void (*v35)(char *, id, uint64_t, uint64_t);
  id v36;
  id v37;
  uint64_t v38;
  uint64_t ObjectType;
  char *v40;
  id v41;
  char *v42;

  v6 = type metadata accessor for FBKEvaluation.Response(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8F40);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v38 - v14;
  swift_beginAccess();
  v16 = MEMORY[0x22E32090C](a3 + 16);
  if (v16)
  {
    v17 = (char *)v16;
    v40 = v15;
    swift_getKeyPath();
    v42 = v17;
    sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
    sub_22DE1E068();
    swift_release();
    v18 = &v17[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__delegate];
    if (MEMORY[0x22E32090C](&v17[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__delegate]))
    {
      v41 = a1;
      v19 = *((_QWORD *)v18 + 1);
      ObjectType = swift_getObjectType();
      if ((a2 & 1) != 0)
      {
        v35 = *(void (**)(char *, id, uint64_t, uint64_t))(v19 + 24);
        v36 = v41;
        v37 = v41;
        v35(v17, v36, ObjectType, v19);
        swift_unknownObjectRelease();

        sub_22DD6E88C(v36);
      }
      else
      {
        v20 = *(void (**)(char *, id, uint64_t, uint64_t))(v19 + 8);
        v21 = v41;
        v20(v17, v21, ObjectType, v19);
        v22 = v21;
        v23 = (uint64_t)v40;
        sub_22DDC6F74(v22, (uint64_t)v40);
        sub_22DD506A0(v23, (uint64_t)v13, &qword_255DB8F40);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
        {
          sub_22DD5071C((uint64_t)v13, &qword_255DB8F40);
          if (qword_255DB53B8 != -1)
            swift_once();
          v24 = sub_22DE1E410();
          __swift_project_value_buffer(v24, (uint64_t)qword_255DC3D78);
          v25 = sub_22DE1E3F8();
          v26 = sub_22DE1F4FC();
          v27 = os_log_type_enabled(v25, v26);
          v28 = v41;
          if (v27)
          {
            v29 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v29 = 0;
            _os_log_impl(&dword_22DD4B000, v25, v26, "Failed to convert FBKSEvaluation to FBKEvaluation.Response.  Deprecated delegate method will not be called.", v29, 2u);
            MEMORY[0x22E320870](v29, -1, -1);
          }
          swift_unknownObjectRelease();

          sub_22DD6E88C(v28);
          v30 = (uint64_t)v40;
        }
        else
        {
          sub_22DD647B0((uint64_t)v13, (uint64_t)v9, type metadata accessor for FBKEvaluation.Response);
          (*(void (**)(char *, char *, uint64_t, uint64_t))(v19 + 16))(v17, v9, ObjectType, v19);
          swift_unknownObjectRelease();

          sub_22DD6E88C(v41);
          sub_22DD5C950((uint64_t)v9, type metadata accessor for FBKEvaluation.Response);
          v30 = v23;
        }
        sub_22DD5071C(v30, &qword_255DB8F40);
      }
    }
    else
    {
      if (qword_255DB53B8 != -1)
        swift_once();
      v31 = sub_22DE1E410();
      __swift_project_value_buffer(v31, (uint64_t)qword_255DC3D78);
      v32 = sub_22DE1E3F8();
      v33 = sub_22DE1F514();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v34 = 0;
        _os_log_impl(&dword_22DD4B000, v32, v33, "Evaluation finished but delegate is nil. No updates will be sent", v34, 2u);
        MEMORY[0x22E320870](v34, -1, -1);
      }

    }
  }
}

uint64_t _s8Feedback23FBKEvaluationControllerC8delegateAcA0bC8Delegate_p_tcfC_0(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;
  _BYTE *v6;

  ObjectType = swift_getObjectType();
  v5 = *(_QWORD *)(a2 + 8);
  v6 = objc_allocWithZone((Class)type metadata accessor for FBKEvaluationController(0));
  return sub_22DDF4414(a1, v6, ObjectType, v5);
}

uint64_t sub_22DDDF770@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController__swiftUIDetent;
  swift_beginAccess();
  v4 = sub_22DE1E9BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_22DDDF834(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_22DE1E9BC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  v8 = a1 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController__swiftUIDetent;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

uint64_t sub_22DDDF8FC()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController__isFeedbackFormPresented);
}

void *sub_22DDDF988()
{
  return sub_22DDE1214((uint64_t)&unk_22DE264E8, &OBJC_IVAR____TtC8Feedback23FBKEvaluationController__interaction);
}

void sub_22DDDF99C(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController__interaction);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController__interaction) = a2;
  v3 = a2;

}

id FBKEvaluationController.init(subject:)(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _BYTE *v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  char *v19;
  uint64_t v20;
  objc_class *v21;
  id v22;
  objc_super v24;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB63B0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22DE1E9BC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[OBJC_IVAR____TtC8Feedback23FBKEvaluationController_blockPresentationDetentUsage] = 0;
  v1[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__evaluationState] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__delegate + 8] = 0;
  *(_QWORD *)(swift_unknownObjectWeakInit() + 8) = 0;
  swift_unknownObjectWeakInit();
  v10 = v1;
  sub_22DE1E9A4();
  (*(void (**)(_BYTE *, char *, uint64_t))(v7 + 32))(&v10[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__swiftUIDetent], v9, v6);
  v10[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__isFeedbackFormPresented] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__interaction] = 0;
  v11 = &v10[OBJC_IVAR____TtC8Feedback23FBKEvaluationController___evaluation];
  *(_QWORD *)v11 = 0;
  v11[8] = -1;
  v12 = &v10[OBJC_IVAR____TtC8Feedback23FBKEvaluationController___evaluationCompletionHandler];
  *v12 = 0;
  v12[1] = 0;
  v13 = (uint64_t)&v10[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__subject];
  v14 = sub_22DE1E194();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  v15(v13, 1, 1, v14);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Feedback23FBKEvaluationController___cachedInteraction] = 0;
  v16 = &v10[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__formContext];
  v17 = type metadata accessor for FBKEvaluationController.FormContext(0);
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v16, 1, 1, v17);
  v18(v16, 1, 1, v17);
  v19 = &v10[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__actionPerformed];
  v20 = sub_22DE1E14C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  sub_22DE1E08C();
  v10[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__apiType] = 1;
  sub_22DD506A0(a1, (uint64_t)v5, &qword_255DB63B0);
  sub_22DD5071C(v13, &qword_255DB63B0);
  sub_22DD5003C((uint64_t)v5, v13, &qword_255DB63B0);

  v21 = (objc_class *)type metadata accessor for FBKEvaluationController(0);
  v24.receiver = v10;
  v24.super_class = v21;
  v22 = objc_msgSendSuper2(&v24, sel_init);
  sub_22DD5071C(a1, &qword_255DB63B0);
  return v22;
}

id FBKEvaluationController.__allocating_init(evaluatedFeature:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return FBKEvaluationController.init(evaluatedFeature:)(a1);
}

id FBKEvaluationController.init(evaluatedFeature:)(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _BYTE *v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  _QWORD *v37;
  objc_class *v38;
  id v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  objc_super v49;

  v48 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB63B0);
  MEMORY[0x24BDAC7A8](v2);
  v46 = (uint64_t *)((char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = sub_22DE1E050();
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v42 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB94D8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FBKEvaluation.Input(0);
  v47 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v45 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v44 = (uint64_t)&v41 - v11;
  v12 = sub_22DE1E9BC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[OBJC_IVAR____TtC8Feedback23FBKEvaluationController_blockPresentationDetentUsage] = 0;
  v1[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__evaluationState] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__delegate + 8] = 0;
  *(_QWORD *)(swift_unknownObjectWeakInit() + 8) = 0;
  swift_unknownObjectWeakInit();
  v16 = v1;
  sub_22DE1E9A4();
  (*(void (**)(_BYTE *, char *, uint64_t))(v13 + 32))(&v16[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__swiftUIDetent], v15, v12);
  v16[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__isFeedbackFormPresented] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__interaction] = 0;
  v17 = &v16[OBJC_IVAR____TtC8Feedback23FBKEvaluationController___evaluation];
  *(_QWORD *)v17 = 0;
  v17[8] = -1;
  v18 = &v16[OBJC_IVAR____TtC8Feedback23FBKEvaluationController___evaluationCompletionHandler];
  *v18 = 0;
  v18[1] = 0;
  v19 = (uint64_t)&v16[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__subject];
  v20 = sub_22DE1E194();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
  v22(v19, 1, 1, v20);
  v22(v19, 1, 1, v20);
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Feedback23FBKEvaluationController___cachedInteraction] = 0;
  v23 = &v16[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__formContext];
  v24 = type metadata accessor for FBKEvaluationController.FormContext(0);
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v25(v23, 1, 1, v24);
  v25(v23, 1, 1, v24);
  v26 = v48;
  v27 = &v16[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__actionPerformed];
  v28 = sub_22DE1E14C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
  sub_22DE1E08C();
  v16[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__apiType] = 1;
  sub_22DD506A0(v26, (uint64_t)v7, &qword_255DB94D8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v7, 1, v8) == 1)
  {

    sub_22DD5071C((uint64_t)v7, &qword_255DB94D8);
  }
  else
  {
    v29 = v44;
    sub_22DD647B0((uint64_t)v7, v44, type metadata accessor for FBKEvaluation.Input);
    v30 = v29;
    v31 = v45;
    sub_22DD647B0(v30, (uint64_t)v45, type metadata accessor for FBKEvaluation.Input);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v32 = v46;
      *v46 = *(_QWORD *)v31;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v21 + 104))(v32, *MEMORY[0x24BE30F00], v20);
      v22((uint64_t)v32, 0, 1, v20);
      sub_22DD5071C(v19, &qword_255DB63B0);
      v33 = (uint64_t)v32;
    }
    else
    {
      v34 = v42;
      v35 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
      v36 = v43;
      v35(v42, v31, v43);
      v37 = v46;
      v35((char *)v46, v34, v36);
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v21 + 104))(v37, *MEMORY[0x24BE30F38], v20);
      v22((uint64_t)v37, 0, 1, v20);
      sub_22DD5071C(v19, &qword_255DB63B0);
      v33 = (uint64_t)v37;
    }
    sub_22DD5003C(v33, v19, &qword_255DB63B0);

  }
  v38 = (objc_class *)type metadata accessor for FBKEvaluationController(0);
  v49.receiver = v16;
  v49.super_class = v38;
  v39 = objc_msgSendSuper2(&v49, sel_init);
  sub_22DD5071C(v26, &qword_255DB94D8);
  return v39;
}

void *sub_22DDE017C()
{
  uint64_t v0;
  void *v1;

  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  swift_release();
  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController___evaluation);
  sub_22DDF4BE8(v1, *(_BYTE *)(v0 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController___evaluation + 8));
  return v1;
}

id sub_22DDE0224@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController___evaluation;
  v5 = *(void **)(v3 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController___evaluation);
  *(_QWORD *)a2 = v5;
  v6 = *(_BYTE *)(v4 + 8);
  *(_BYTE *)(a2 + 8) = v6;
  return sub_22DDF4BE8(v5, v6);
}

uint64_t sub_22DDE02C8(uint64_t a1)
{
  void *v1;
  unsigned __int8 v2;

  v1 = *(void **)a1;
  v2 = *(_BYTE *)(a1 + 8);
  swift_getKeyPath();
  sub_22DDF4BE8(v1, v2);
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E05C();
  sub_22DDF4C00(v1, v2);
  return swift_release();
}

void sub_22DDE0394(void *a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = ~a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8F40);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  if (v5)
  {
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    *(&v15 - 4) = v2;
    *(&v15 - 3) = (uint64_t)a1;
    *((_BYTE *)&v15 - 16) = a2;
    v16 = v2;
    sub_22DDF7A04(a1);
    sub_22DDF7A04(a1);
    sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
    sub_22DE1E05C();
    sub_22DDF4C00(a1, a2);
    swift_release();
    if ((a2 & 1) != 0)
    {
      sub_22DDF4C00(a1, a2);
      sub_22DDF4C00(a1, a2);
    }
    else
    {
      sub_22DDF7A04(a1);
      sub_22DDC6F74(a1, (uint64_t)v11);
      sub_22DD506A0((uint64_t)v11, (uint64_t)v9, &qword_255DB8F40);
      v14 = type metadata accessor for FBKEvaluation.Response(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v9, 1, v14);
      sub_22DD5071C((uint64_t)v9, &qword_255DB8F40);
      sub_22DDF4C00(a1, a2);
      sub_22DDF4C00(a1, a2);
      sub_22DD5071C((uint64_t)v11, &qword_255DB8F40);
    }
  }
  else
  {
    v13 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v13);
    *(&v15 - 4) = v2;
    *(&v15 - 3) = (uint64_t)a1;
    *((_BYTE *)&v15 - 16) = -1;
    v16 = v2;
    sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
    sub_22DE1E05C();
    swift_release();
  }
}

id sub_22DDE063C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id *v13;
  int v14;
  id v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = type metadata accessor for FBKEvaluation.Response(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8F40);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v22 - v11;
  swift_getKeyPath();
  v23 = v1;
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  swift_release();
  v13 = (id *)(v1 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController___evaluation);
  v14 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController___evaluation + 8);
  if (v14 == 255)
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8F48);
    return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a1, 1, 1, v19);
  }
  else
  {
    v15 = *v13;
    if ((v14 & 1) != 0)
    {
      *a1 = (uint64_t)v15;
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8F48);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 0, 1, v21);
      return sub_22DDF7A04(v15);
    }
    else
    {
      sub_22DDF7A04(*v13);
      sub_22DDF7A04(v15);
      sub_22DDC6F74(v15, (uint64_t)v12);
      sub_22DD506A0((uint64_t)v12, (uint64_t)v10, &qword_255DB8F40);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
      {
        sub_22DD5071C((uint64_t)v10, &qword_255DB8F40);
        sub_22DDD4680();
        v16 = swift_allocError();
        *v17 = 3;
        sub_22DDF4C00(v15, v14);
        sub_22DD5071C((uint64_t)v12, &qword_255DB8F40);
        *a1 = v16;
      }
      else
      {
        sub_22DDF4C00(v15, v14);
        sub_22DD5071C((uint64_t)v12, &qword_255DB8F40);
        sub_22DD647B0((uint64_t)v10, (uint64_t)v6, type metadata accessor for FBKEvaluation.Response);
        sub_22DD647B0((uint64_t)v6, (uint64_t)a1, type metadata accessor for FBKEvaluation.Response);
      }
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8F48);
      swift_storeEnumTagMultiPayload();
      return (id)(*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 0, 1, v18);
    }
  }
}

uint64_t sub_22DDE0948(uint64_t a1)
{
  return sub_22DD5071C(a1, &qword_255DB94E0);
}

void (*sub_22DDE0964(uint64_t **a1))(uint64_t *a1)
{
  uint64_t v2;
  uint64_t *v3;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB94E0);
  v3 = (uint64_t *)malloc(*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64));
  *a1 = v3;
  sub_22DDE063C(v3);
  return sub_22DDE09BC;
}

void sub_22DDE09BC(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  sub_22DD5071C(*a1, &qword_255DB94E0);
  free(v1);
}

uint64_t sub_22DDE09EC()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  swift_release();
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController___evaluationCompletionHandler);
  sub_22DD50D8C(v1);
  return v1;
}

uint64_t sub_22DDE0A90@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  swift_release();
  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController___evaluationCompletionHandler);
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController___evaluationCompletionHandler + 8);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_22DDF7C98;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(uint64_t))v6;
  return sub_22DD50D8C(v4);
}

uint64_t sub_22DDE0B64(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, char);
  uint64_t KeyPath;

  v2 = *a1;
  v1 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = v1;
    v4 = sub_22DDF7C60;
  }
  else
  {
    v4 = 0;
  }
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  sub_22DD50D8C(v2);
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E05C();
  sub_22DD50DE0((uint64_t)v4);
  return swift_release();
}

uint64_t sub_22DDE0C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController___evaluationCompletionHandler);
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController___evaluationCompletionHandler);
  *v3 = a2;
  v3[1] = a3;
  sub_22DD50D8C(a2);
  return sub_22DD50DE0(v4);
}

void sub_22DDE0CDC(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  BOOL v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _BYTE *v16;
  int v17;
  void (*v18)(void *, uint64_t);
  uint64_t v19;
  uint64_t KeyPath;
  void (*v21)(void *, uint64_t);
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v5 = a2 & 1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB94F8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22DDDEF84(2u);
  if (v9)
  {
    sub_22DDF7A04(a1);
    v10 = a1;
    v11 = v5;
  }
  else
  {
    if (qword_255DB53B8 != -1)
      swift_once();
    v12 = sub_22DE1E410();
    __swift_project_value_buffer(v12, (uint64_t)qword_255DC3D78);
    v13 = sub_22DE1E3F8();
    v14 = sub_22DE1F4FC();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_22DD4B000, v13, v14, "Finished evaluation while not in .evaluating state.", v15, 2u);
      MEMORY[0x22E320870](v15, -1, -1);
    }

    sub_22DDD4680();
    v10 = (void *)swift_allocError();
    *v16 = 7;
    v11 = 1;
  }
  sub_22DDF7A04(a1);
  sub_22DDE0394(a1, v5);
  swift_getKeyPath();
  v23 = v3;
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  swift_release();
  v17 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController__apiType);
  swift_getKeyPath();
  if (v17 == 1)
  {
    v23 = v3;
    sub_22DE1E068();
    swift_release();
    v18 = *(void (**)(void *, uint64_t))(v3
                                                 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController___evaluationCompletionHandler);
    if (v18)
    {
      swift_retain();
      v18(v10, v11);
      sub_22DD50DE0((uint64_t)v18);
    }
    sub_22DDE9658();
    if (!v9)
      goto LABEL_13;
LABEL_12:
    v19 = type metadata accessor for FBKEvaluationController.FormContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    v23 = v3;
    sub_22DE1E05C();
    swift_release();
    sub_22DD5071C((uint64_t)v8, &qword_255DB94F8);
    sub_22DDDE6B8(0);
LABEL_13:
    sub_22DD6E88C(v10);
    return;
  }
  v23 = v3;
  sub_22DE1E068();
  swift_release();
  v21 = *(void (**)(void *, uint64_t))(v3
                                               + OBJC_IVAR____TtC8Feedback23FBKEvaluationController___evaluationCompletionHandler);
  if (v21)
  {
    swift_retain();
    v21(v10, v11);
    sub_22DD50DE0((uint64_t)v21);
    if (!v9)
      goto LABEL_13;
    goto LABEL_12;
  }
  sub_22DD6E88C(v10);
  sub_22DE1F7CC();
  __break(1u);
}

uint64_t sub_22DDE10DC@<X0>(uint64_t a1@<X8>)
{
  return sub_22DDE36C8(&OBJC_IVAR____TtC8Feedback23FBKEvaluationController__subject, &qword_255DB63B0, a1);
}

uint64_t sub_22DDE10F8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB63B0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22DD506A0(a1, (uint64_t)v6, &qword_255DB63B0);
  v7 = *a2;
  swift_getKeyPath();
  v10 = v7;
  v11 = v6;
  v12 = v7;
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E05C();
  swift_release();
  return sub_22DD5071C((uint64_t)v6, &qword_255DB63B0);
}

void *sub_22DDE1200()
{
  return sub_22DDE1214((uint64_t)&unk_22DE26160, &OBJC_IVAR____TtC8Feedback23FBKEvaluationController___cachedInteraction);
}

void *sub_22DDE1214(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  void *v4;
  id v5;

  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  swift_release();
  v4 = *(void **)(v2 + *a2);
  v5 = v4;
  return v4;
}

id sub_22DDE12A0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  swift_release();
  v4 = *(void **)(v3 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController___cachedInteraction);
  *a2 = v4;
  return v4;
}

void sub_22DDE1334(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  v2 = v1;
  sub_22DE1E05C();
  swift_release();

}

uint64_t sub_22DDE13E8@<X0>(uint64_t a1@<X8>)
{
  return sub_22DDE36C8(&OBJC_IVAR____TtC8Feedback23FBKEvaluationController__formContext, &qword_255DB94F8, a1);
}

uint64_t sub_22DDE1404@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22DDE3780(a1, &OBJC_IVAR____TtC8Feedback23FBKEvaluationController__formContext, &qword_255DB94F8, a2);
}

uint64_t sub_22DDE1420(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB94F8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22DD506A0(a1, (uint64_t)v6, &qword_255DB94F8);
  v7 = *a2;
  swift_getKeyPath();
  v10 = v7;
  v11 = v6;
  v12 = v7;
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E05C();
  swift_release();
  return sub_22DD5071C((uint64_t)v6, &qword_255DB94F8);
}

uint64_t sub_22DDE1528(uint64_t a1, uint64_t a2, uint64_t *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD506A0(a2, (uint64_t)v10, a3);
  v11 = a1 + *a4;
  swift_beginAccess();
  sub_22DDF7CC4((uint64_t)v10, v11, a3);
  return swift_endAccess();
}

void sub_22DDE15E8(uint64_t a1, void (*a2)(_QWORD, _QWORD), void (*a3)(_QWORD, _QWORD, _QWORD))
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_QWORD, _QWORD, _QWORD);
  uint64_t v49;
  void (*v50)(_QWORD, _QWORD);
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t aBlock[7];

  v4 = v3;
  v8 = sub_22DE1F1B4();
  v58 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v57 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22DE1F1D8();
  v55 = *(_QWORD *)(v10 - 8);
  v56 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v54 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22DE1E050();
  v59 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v52 = v13;
  v53 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_22DE1E194();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v51 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255DB53B8 != -1)
    swift_once();
  v17 = sub_22DE1E410();
  __swift_project_value_buffer(v17, (uint64_t)qword_255DC3D78);
  v18 = sub_22DE1E3F8();
  v19 = sub_22DE1F514();
  if (os_log_type_enabled(v18, v19))
  {
    v47 = v15;
    v20 = swift_slowAlloc();
    v50 = a2;
    v21 = (uint8_t *)v20;
    v22 = swift_slowAlloc();
    v48 = a3;
    v49 = a1;
    v23 = v22;
    aBlock[0] = v22;
    *(_DWORD *)v21 = 136446210;
    v60 = sub_22DDA2E30(0xD00000000000002CLL, 0x800000022DE2BBE0, aBlock);
    v15 = v47;
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v18, v19, "%{public}s", v21, 0xCu);
    swift_arrayDestroy();
    v24 = v23;
    a3 = v48;
    a1 = v49;
    MEMORY[0x22E320870](v24, -1, -1);
    v25 = v21;
    a2 = v50;
    MEMORY[0x22E320870](v25, -1, -1);
  }

  if (sub_22DDF4800())
  {
    if (a2)
    {
      v26 = sub_22DE1E0D4();
      sub_22DD504A8(&qword_255DB94E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE30DF0], MEMORY[0x24BE30DF8]);
      v27 = swift_allocError();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x24BE30DE8], v26);
      a2(v27, 1);
      v29 = (void *)v27;
LABEL_8:

    }
  }
  else if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
  {
    if ((sub_22DDDE6B8(1) & 1) != 0)
    {
      v30 = (uint64_t)v51;
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v51, a1, v12);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 104))(v30, *MEMORY[0x24BE30F38], v14);
      v31 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_22DD50D8C((uint64_t)a2);
      sub_22DDF4CF4(v30, v4, v31, a2, a3);
      sub_22DD50DE0((uint64_t)a2);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v30, v14);
      swift_release();
    }
    else if (a2)
    {
      sub_22DDD4680();
      v44 = swift_allocError();
      *v45 = 6;
      a2(v44, 1);
      v29 = (void *)v44;
      goto LABEL_8;
    }
  }
  else
  {
    sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
    v51 = (char *)sub_22DE1F574();
    v32 = v59;
    v33 = v53;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v53, a1, v12);
    v34 = v12;
    v35 = (*(unsigned __int8 *)(v32 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    v36 = (v52 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = v4;
    (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v37 + v35, v33, v34);
    v38 = (_QWORD *)(v37 + v36);
    *v38 = a2;
    v38[1] = a3;
    aBlock[4] = (uint64_t)sub_22DDF4CA4;
    aBlock[5] = v37;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_22DD9C498;
    aBlock[3] = (uint64_t)&block_descriptor_8;
    v39 = _Block_copy(aBlock);
    sub_22DD50D8C((uint64_t)a2);
    v40 = v4;
    swift_release();
    v41 = v54;
    sub_22DE1F1CC();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
    sub_22DD508B0((unint64_t *)&qword_255DB68A0, (uint64_t *)&unk_255DB8150, MEMORY[0x24BEE12C8]);
    v42 = v57;
    sub_22DE1F67C();
    v43 = v51;
    MEMORY[0x22E31FDFC](0, v41, v42, v39);
    _Block_release(v39);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v42, v8);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v41, v56);
  }
}

uint64_t sub_22DDE1C04(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v10 = sub_22DE1F1B4();
  v23 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_22DE1F1D8();
  v21 = *(_QWORD *)(v13 - 8);
  v22 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v20 = sub_22DE1F574();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = a4;
  *(_QWORD *)(v16 + 32) = a5;
  *(_QWORD *)(v16 + 40) = a1;
  *(_BYTE *)(v16 + 48) = a2 & 1;
  aBlock[4] = sub_22DDF7EC8;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = &block_descriptor_171;
  v17 = _Block_copy(aBlock);
  swift_retain();
  sub_22DD50D8C(a4);
  sub_22DDF7A04(a1);
  swift_release();
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD508B0((unint64_t *)&qword_255DB68A0, (uint64_t *)&unk_255DB8150, MEMORY[0x24BEE12C8]);
  sub_22DE1F67C();
  v18 = (void *)v20;
  MEMORY[0x22E31FDFC](0, v15, v12, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v15, v22);
}

void sub_22DDE1E4C(uint64_t a1, void (*a2)(uint64_t, _QWORD), uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v8 = a1 + 16;
  swift_beginAccess();
  v9 = MEMORY[0x22E32090C](v8);
  if (v9)
  {
    v10 = (void *)v9;
    sub_22DDDE6B8(0);

  }
  if (a2)
    a2(a4, a5 & 1);
}

void sub_22DDE1ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  void (*v16)(void *, uint64_t);
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD v31[3];
  uint64_t v32;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB94F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB94F8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB63B0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255DB53B8 != -1)
    swift_once();
  v11 = sub_22DE1E410();
  v31[0] = __swift_project_value_buffer(v11, (uint64_t)qword_255DC3D78);
  v12 = sub_22DE1E3F8();
  v13 = sub_22DE1F514();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v32 = v15;
    *(_DWORD *)v14 = 136446210;
    v31[1] = sub_22DDA2E30(0x29287465736572, 0xE700000000000000, &v32);
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v12, v13, "%{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v15, -1, -1);
    MEMORY[0x22E320870](v14, -1, -1);
  }

  if (sub_22DDF4800())
  {
    swift_getKeyPath();
    v32 = v1;
    sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
    sub_22DE1E068();
    swift_release();
    v16 = *(void (**)(void *, uint64_t))(v1
                                                 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController___evaluationCompletionHandler);
    if (v16)
    {
      v17 = sub_22DE1E0D4();
      sub_22DD504A8(&qword_255DB94E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE30DF0], MEMORY[0x24BE30DF8]);
      v18 = (void *)swift_allocError();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BE30DE8], v17);
      swift_retain();
      v16(v18, 1);
      sub_22DD50DE0((uint64_t)v16);

    }
  }
  else if (sub_22DDDEF84(0))
  {
    v20 = sub_22DE1E194();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v10, 1, 1, v20);
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    v31[-2] = v1;
    v31[-1] = v10;
    v32 = v1;
    sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
    sub_22DE1E05C();
    swift_release();
    sub_22DD5071C((uint64_t)v10, &qword_255DB63B0);
    v22 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v22);
    v31[-2] = v1;
    v31[-1] = 0;
    v32 = v1;
    sub_22DE1E05C();
    swift_release();
    v23 = type metadata accessor for FBKEvaluationController.FormContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v7, 1, 1, v23);
    v24 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v24);
    v31[-2] = v1;
    v31[-1] = v7;
    v32 = v1;
    sub_22DE1E05C();
    swift_release();
    sub_22DD5071C((uint64_t)v7, &qword_255DB94F8);
    v25 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v25);
    v31[-4] = v1;
    v31[-3] = 0;
    LOBYTE(v31[-2]) = -1;
    v32 = v1;
    sub_22DE1E05C();
    swift_release();
    v26 = sub_22DE1E14C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v4, 1, 1, v26);
    v27 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v27);
    v31[-2] = v1;
    v31[-1] = v4;
    v32 = v1;
    sub_22DE1E05C();
    swift_release();
    sub_22DD5071C((uint64_t)v4, &qword_255DB94F0);
  }
  else
  {
    v28 = sub_22DE1E3F8();
    v29 = sub_22DE1F4FC();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_22DD4B000, v28, v29, "Ignoring attempt to reset() FBKEvaluationController while not .idling", v30, 2u);
      MEMORY[0x22E320870](v30, -1, -1);
    }

  }
}

void sub_22DDE2560(uint64_t a1, void (*a2)(void *, _QWORD), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  void (*v24)(void *, _QWORD);
  void *v25;
  uint8_t *v26;
  id v27;
  int v28;
  _QWORD *v29;
  uint64_t v30;
  void **v31;
  char *v32;
  NSObject *v33;
  uint64_t v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint8_t *v43;
  void *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t KeyPath;
  id v50;
  uint64_t v51;
  void **v52;
  char *v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  void *v57;
  _QWORD *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  void (*v66)(void *, uint64_t);
  void *v67;
  _BYTE *v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint8_t *v74;
  void **v75;
  void (*v76)(char *, void **, uint64_t);
  void *v77;
  char *v78;
  void **v79;
  _QWORD *v80;
  void (*v81)(void *, _QWORD);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v4 = v3;
  v81 = a2;
  v82 = a3;
  v6 = sub_22DE1E050();
  v80 = *(_QWORD **)(v6 - 8);
  v7 = v80[8];
  v8 = MEMORY[0x24BDAC7A8](v6);
  v79 = (void **)((char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = MEMORY[0x24BDAC7A8](v8);
  v78 = (char *)&v74 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v74 - v11;
  v13 = sub_22DE1E194();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (void **)((char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (sub_22DDDEF84(0))
  {
    if (qword_255DB53B8 != -1)
      swift_once();
    v69 = sub_22DE1E410();
    __swift_project_value_buffer(v69, (uint64_t)qword_255DC3D78);
    v70 = sub_22DE1E3F8();
    v71 = sub_22DE1F4FC();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = (uint8_t *)swift_slowAlloc();
      v73 = swift_slowAlloc();
      v84 = v73;
      *(_DWORD *)v72 = 136446210;
      v83 = sub_22DDA2E30(0xD00000000000002ALL, 0x800000022DE2C8B0, &v84);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v70, v71, "%{public}s called while FBKEvaluationController is idling.", v72, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v73, -1, -1);
      MEMORY[0x22E320870](v72, -1, -1);
    }

    sub_22DE1F7CC();
    __break(1u);
  }
  else
  {
    swift_getKeyPath();
    v17 = (void *)(v3 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController___observationRegistrar);
    v84 = v4;
    v76 = (void (*)(char *, void **, uint64_t))sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
    v77 = v17;
    sub_22DE1E068();
    swift_release();
    v18 = *(void **)(v4 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController___cachedInteraction);
    if (v18)
    {
      v75 = v16;
      v19 = v18;
      if ((sub_22DE1E170() & 1) != 0)
      {
        if (qword_255DB53B8 != -1)
          swift_once();
        v20 = sub_22DE1E410();
        __swift_project_value_buffer(v20, (uint64_t)qword_255DC3D78);
        v21 = sub_22DE1E3F8();
        v22 = sub_22DE1F514();
        v23 = os_log_type_enabled(v21, v22);
        v24 = v81;
        v25 = v19;
        if (v23)
        {
          v26 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v26 = 0;
          _os_log_impl(&dword_22DD4B000, v21, v22, "Using cached interaction", v26, 2u);
          MEMORY[0x22E320870](v26, -1, -1);
        }

        v27 = v25;
        v24(v18, 0);
LABEL_21:

        return;
      }

      v16 = v75;
    }
    (*(void (**)(void **, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
    v28 = (*(uint64_t (**)(void **, uint64_t))(v14 + 88))(v16, v13);
    if (v28 == *MEMORY[0x24BE30F38])
    {
      (*(void (**)(void **, uint64_t))(v14 + 96))(v16, v13);
      v29 = v80;
      v76 = (void (*)(char *, void **, uint64_t))v80[4];
      v76(v12, v16, v6);
      if (qword_255DB53B8 != -1)
        swift_once();
      v77 = (void *)v4;
      v30 = sub_22DE1E410();
      __swift_project_value_buffer(v30, (uint64_t)qword_255DC3D78);
      v31 = (void **)v29[2];
      v32 = v78;
      ((void (*)(char *, char *, uint64_t))v31)(v78, v12, v6);
      v33 = sub_22DE1E3F8();
      v34 = v6;
      v35 = sub_22DE1F514();
      if (os_log_type_enabled(v33, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc();
        v37 = swift_slowAlloc();
        v75 = v31;
        v38 = v37;
        v84 = v37;
        *(_DWORD *)v36 = 136446210;
        v74 = v36 + 4;
        v39 = sub_22DE1E02C();
        v83 = sub_22DDA2E30(v39, v40, &v84);
        sub_22DE1F628();
        swift_bridgeObjectRelease();
        v41 = (void (*)(char *, uint64_t))v80[1];
        v41(v32, v34);
        _os_log_impl(&dword_22DD4B000, v33, v35, "Prefetching interaction for uuid %{public}s", v36, 0xCu);
        swift_arrayDestroy();
        v42 = v38;
        v31 = v75;
        MEMORY[0x22E320870](v42, -1, -1);
        v43 = v36;
        v29 = v80;
        MEMORY[0x22E320870](v43, -1, -1);
      }
      else
      {
        v41 = (void (*)(char *, uint64_t))v29[1];
        v41(v32, v34);
      }

      v51 = v34;
      sub_22DE1E104();
      v52 = v79;
      ((void (*)(void **, char *, uint64_t))v31)(v79, v12, v34);
      v53 = v12;
      v54 = (*((unsigned __int8 *)v29 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v29 + 80);
      v55 = (v7 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
      v56 = swift_allocObject();
      v76((char *)(v56 + v54), v52, v51);
      v57 = v77;
      *(_QWORD *)(v56 + v55) = v77;
      v58 = (_QWORD *)(v56 + ((v55 + 15) & 0xFFFFFFFFFFFFFFF8));
      v59 = v82;
      *v58 = v81;
      v58[1] = v59;
      v60 = v57;
      swift_retain();
      MEMORY[0x22E31E974](v53, sub_22DDF7900, v56);
      swift_release();
      v41(v53, v51);
    }
    else
    {
      if (v28 == *MEMORY[0x24BE30F00])
      {
        (*(void (**)(void **, uint64_t))(v14 + 96))(v16, v13);
        v44 = *v16;
        if (qword_255DB53B8 != -1)
          swift_once();
        v45 = sub_22DE1E410();
        __swift_project_value_buffer(v45, (uint64_t)qword_255DC3D78);
        v46 = sub_22DE1E3F8();
        v47 = sub_22DE1F514();
        if (os_log_type_enabled(v46, v47))
        {
          v48 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v48 = 0;
          _os_log_impl(&dword_22DD4B000, v46, v47, "Interaction already available", v48, 2u);
          MEMORY[0x22E320870](v48, -1, -1);
        }

        KeyPath = swift_getKeyPath();
        MEMORY[0x24BDAC7A8](KeyPath);
        v84 = v4;
        v50 = v44;
        sub_22DE1E05C();
        swift_release();

        v27 = v50;
        v81(v44, 0);
        goto LABEL_21;
      }
      if (qword_255DB53B8 != -1)
        swift_once();
      v61 = sub_22DE1E410();
      __swift_project_value_buffer(v61, (uint64_t)qword_255DC3D78);
      v62 = sub_22DE1E3F8();
      v63 = sub_22DE1F514();
      if (os_log_type_enabled(v62, v63))
      {
        v64 = (uint8_t *)swift_slowAlloc();
        v65 = swift_slowAlloc();
        v84 = v65;
        *(_DWORD *)v64 = 136446210;
        v83 = sub_22DDA2E30(0xD00000000000002ALL, 0x800000022DE2C8B0, &v84);
        sub_22DE1F628();
        _os_log_impl(&dword_22DD4B000, v62, v63, "%{public}s Unknown Subject case", v64, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E320870](v65, -1, -1);
        MEMORY[0x22E320870](v64, -1, -1);
      }

      v66 = v81;
      sub_22DDD4680();
      v67 = (void *)swift_allocError();
      sub_22DDB8A1C(0xD000000000000014, 0x800000022DE2C890, v68);
      v66(v67, 1);

      (*(void (**)(void **, uint64_t))(v14 + 8))(v16, v13);
    }
  }
}

uint64_t sub_22DDE2F1C(void *a1, int a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  _BYTE *v26;
  void *v27;
  _BYTE v29[4];
  int v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v32 = a5;
  v33 = a6;
  v31 = a4;
  v30 = a2;
  v36 = sub_22DE1F1B4();
  v39 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v35 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_22DE1F1D8();
  v37 = *(_QWORD *)(v9 - 8);
  v38 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_22DE1E050();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = &v29[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v34 = sub_22DE1F574();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = (v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  *(_BYTE *)(v18 + 24) = v30 & 1;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v13 + 32))(v18 + v16, v15, v12);
  v20 = v31;
  v19 = v32;
  *(_QWORD *)(v18 + v17) = v31;
  v21 = (_QWORD *)(v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8));
  v22 = v33;
  *v21 = v19;
  v21[1] = v22;
  aBlock[4] = sub_22DDF79AC;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = &block_descriptor_122_0;
  v23 = _Block_copy(aBlock);
  sub_22DDF7A04(a1);
  v24 = v20;
  swift_retain();
  swift_release();
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD508B0((unint64_t *)&qword_255DB68A0, (uint64_t *)&unk_255DB8150, MEMORY[0x24BEE12C8]);
  v26 = v35;
  v25 = v36;
  sub_22DE1F67C();
  v27 = (void *)v34;
  MEMORY[0x22E31FDFC](0, v11, v26, v23);
  _Block_release(v23);

  (*(void (**)(_BYTE *, uint64_t))(v39 + 8))(v26, v25);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v37 + 8))(v11, v38);
}

void sub_22DDE31FC(void *a1, int a2, uint64_t a3, uint64_t a4, void (*a5)(void *, uint64_t), uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t KeyPath;
  id v38;
  id v39;
  _QWORD v40[2];
  id v41;
  uint64_t v42;
  void (*v43)(void *, uint64_t);
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v12 = sub_22DE1E050();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v16 = a1;
    if (qword_255DB53B8 != -1)
      swift_once();
    v17 = sub_22DE1E410();
    __swift_project_value_buffer(v17, (uint64_t)qword_255DC3D78);
    v18 = a1;
    v19 = a1;
    v20 = sub_22DE1E3F8();
    v21 = sub_22DE1F4FC();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v45 = a6;
      v24 = (_QWORD *)v23;
      *(_DWORD *)v22 = 138543362;
      v25 = a1;
      v26 = _swift_stdlib_bridgeErrorToNSError();
      v47 = v26;
      sub_22DE1F628();
      *v24 = v26;
      sub_22DD6E88C(a1);
      sub_22DD6E88C(a1);
      _os_log_impl(&dword_22DD4B000, v20, v21, "Failed to fetch evaluation from daemon with error: %{public}@", v22, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8160);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v24, -1, -1);
      MEMORY[0x22E320870](v22, -1, -1);
    }
    else
    {
      sub_22DD6E88C(a1);
      sub_22DD6E88C(a1);
    }

    v35 = a1;
    a5(a1, 1);
    sub_22DD6E88C(a1);
  }
  else
  {
    v42 = a4;
    v43 = a5;
    v45 = a6;
    v44 = a2;
    v27 = qword_255DB53B8;
    v41 = a1;
    if (v27 != -1)
      swift_once();
    v28 = sub_22DE1E410();
    __swift_project_value_buffer(v28, (uint64_t)qword_255DC3D78);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
    v29 = sub_22DE1E3F8();
    v30 = sub_22DE1F514();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v47 = v32;
      *(_DWORD *)v31 = 136446210;
      v40[1] = v31 + 4;
      v33 = sub_22DE1E02C();
      v46 = sub_22DDA2E30(v33, v34, &v47);
      sub_22DE1F628();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      _os_log_impl(&dword_22DD4B000, v29, v30, "Did fetch feature interaction for uuid %{public}s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v32, -1, -1);
      MEMORY[0x22E320870](v31, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }

    v36 = v42;
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    v40[-2] = v36;
    v40[-1] = a1;
    v47 = v36;
    sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
    v38 = v41;
    sub_22DE1E05C();
    swift_release();

    v39 = v38;
    v43(a1, 0);

  }
  sub_22DD6E88C(a1);
}

uint64_t sub_22DDE36AC@<X0>(uint64_t a1@<X8>)
{
  return sub_22DDE36C8(&OBJC_IVAR____TtC8Feedback23FBKEvaluationController__actionPerformed, &qword_255DB94F0, a1);
}

uint64_t sub_22DDE36C8@<X0>(_QWORD *a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  swift_release();
  v7 = v3 + *a1;
  swift_beginAccess();
  return sub_22DD506A0(v7, a3, a2);
}

uint64_t sub_22DDE3780@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, uint64_t *a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  v7 = *a1;
  swift_getKeyPath();
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  swift_release();
  v8 = v7 + *a2;
  swift_beginAccess();
  return sub_22DD506A0(v8, a4, a3);
}

uint64_t sub_22DDE383C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB94F0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22DD506A0(a1, (uint64_t)v6, &qword_255DB94F0);
  v7 = *a2;
  swift_getKeyPath();
  v10 = v7;
  v11 = v6;
  v12 = v7;
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E05C();
  swift_release();
  return sub_22DD5071C((uint64_t)v6, &qword_255DB94F0);
}

void sub_22DDE3944(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void (*v46)(void *, uint64_t);
  uint64_t v47;
  void *v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  char *v53;
  char *v54;
  NSObject *v55;
  os_log_type_t v56;
  _BOOL4 v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char *v77;
  void (*v78)(unint64_t, char *, uint64_t);
  void *v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  void *v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, char *);
  uint64_t v88;
  uint64_t KeyPath;
  char *v90;
  char *v91;
  int v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  _BYTE *v99;
  char *v100;
  os_log_type_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  const char *v105;
  void *v106;
  _BYTE *v107;
  uint64_t v108;
  unint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  void (*v120)(char *, uint64_t, char *);
  uint64_t v121;
  id v122;
  void *v123;
  unint64_t v124;
  char *v125;
  unint64_t v126;
  uint64_t v127;
  char *v128;
  NSObject *v129;
  os_log_type_t v130;
  uint8_t *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  _QWORD v135[2];
  uint64_t v136;
  uint64_t v137;
  int v138;
  char *v139;
  char *v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  _QWORD *v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(char *, uint64_t, uint64_t);
  uint64_t aBlock[6];
  uint64_t v170;

  v5 = v4;
  v166 = a4;
  v138 = a3;
  v165 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6250);
  MEMORY[0x24BDAC7A8](v7);
  v139 = (char *)v135 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB94F0);
  MEMORY[0x24BDAC7A8](v9);
  v154 = (char *)v135 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_22DE1F1B4();
  v150 = *(_QWORD *)(v151 - 8);
  MEMORY[0x24BDAC7A8](v151);
  v149 = (char *)v135 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_22DE1F1D8();
  v147 = *(_QWORD *)(v148 - 8);
  MEMORY[0x24BDAC7A8](v148);
  v146 = (char *)v135 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_22DE1E194();
  v157 = *(_QWORD *)(v13 - 8);
  v158 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v152 = v14;
  v159 = (char *)v135 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = (_QWORD *)sub_22DE1F1A8();
  v143 = *(v144 - 1);
  MEMORY[0x24BDAC7A8](v144);
  v142 = (_QWORD *)((char *)v135 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v162 = sub_22DE1F1F0();
  v141 = *(_QWORD *)(v162 - 8);
  v16 = MEMORY[0x24BDAC7A8](v162);
  v140 = (char *)v135 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v161 = (char *)v135 - v18;
  v19 = sub_22DE1E14C();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v153 = (char *)v135 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v160 = (char *)v135 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v145 = (char *)v135 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v156 = (char *)v135 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)v135 - v30;
  v155 = v32;
  MEMORY[0x24BDAC7A8](v29);
  v34 = (char *)v135 - v33;
  if (qword_255DB53B8 != -1)
    swift_once();
  v164 = v31;
  v35 = sub_22DE1E410();
  v36 = __swift_project_value_buffer(v35, (uint64_t)qword_255DC3D78);
  v168 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v168(v34, a1, v19);
  v37 = sub_22DE1E3F8();
  v38 = sub_22DE1F514();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = swift_slowAlloc();
    v163 = v4;
    v40 = v39;
    v137 = swift_slowAlloc();
    aBlock[0] = v137;
    *(_DWORD *)v40 = 136446466;
    v170 = sub_22DDA2E30(0xD000000000000041, 0x800000022DE2BC30, aBlock);
    sub_22DE1F628();
    *(_WORD *)(v40 + 12) = 2082;
    v167 = v20;
    sub_22DD504A8(&qword_255DB9500, (uint64_t (*)(uint64_t))MEMORY[0x24BE30EB8], MEMORY[0x24BE30EE0]);
    v41 = sub_22DE1F8C8();
    v170 = sub_22DDA2E30(v41, v42, aBlock);
    v20 = v167;
    sub_22DE1F628();
    swift_bridgeObjectRelease();
    v43 = *(void (**)(char *, uint64_t))(v20 + 8);
    v43(v34, v19);
    _os_log_impl(&dword_22DD4B000, v37, v38, "%{public}s response %{public}s", (uint8_t *)v40, 0x16u);
    v44 = v137;
    swift_arrayDestroy();
    MEMORY[0x22E320870](v44, -1, -1);
    v45 = v40;
    v5 = v163;
    MEMORY[0x22E320870](v45, -1, -1);
  }
  else
  {
    v43 = *(void (**)(char *, uint64_t))(v20 + 8);
    v43(v34, v19);
  }

  if (sub_22DDF4800())
  {
    swift_getKeyPath();
    aBlock[0] = (uint64_t)v5;
    sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
    sub_22DE1E068();
    swift_release();
    v46 = *(void (**)(void *, uint64_t))&v5[OBJC_IVAR____TtC8Feedback23FBKEvaluationController___evaluationCompletionHandler];
    if (v46)
    {
      v47 = sub_22DE1E0D4();
      sub_22DD504A8(&qword_255DB94E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE30DF0], MEMORY[0x24BE30DF8]);
      v48 = (void *)swift_allocError();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(v49, *MEMORY[0x24BE30DE8], v47);
      swift_retain();
      v46(v48, 1);
      sub_22DD50DE0((uint64_t)v46);

    }
    return;
  }
  if ((sub_22DDE8E20() & 1) != 0)
  {
    v50 = sub_22DE1E3F8();
    v51 = sub_22DE1F514();
    if (!os_log_type_enabled(v50, v51))
    {
LABEL_35:

      return;
    }
    v52 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v52 = 0;
    _os_log_impl(&dword_22DD4B000, v50, v51, "Form is already presented. Moving to full screen", v52, 2u);
LABEL_33:
    MEMORY[0x22E320870](v52, -1, -1);
    goto LABEL_35;
  }
  v167 = v20;
  swift_getKeyPath();
  v53 = &v5[OBJC_IVAR____TtC8Feedback23FBKEvaluationController___observationRegistrar];
  aBlock[0] = (uint64_t)v5;
  v137 = sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  sub_22DE1E068();
  swift_release();
  if (v5[OBJC_IVAR____TtC8Feedback23FBKEvaluationController__evaluationState] == 1)
  {
    v54 = v164;
    v168(v164, a1, v19);
    v55 = sub_22DE1E3F8();
    v56 = sub_22DE1F514();
    v57 = os_log_type_enabled(v55, v56);
    v136 = a1;
    v135[1] = v53;
    if (v57)
    {
      v58 = (uint8_t *)swift_slowAlloc();
      v59 = swift_slowAlloc();
      v163 = v5;
      v60 = v59;
      aBlock[0] = v59;
      *(_DWORD *)v58 = 136315138;
      v135[0] = v58 + 4;
      sub_22DD504A8(&qword_255DB9500, (uint64_t (*)(uint64_t))MEMORY[0x24BE30EB8], MEMORY[0x24BE30EE0]);
      v61 = sub_22DE1F8C8();
      v170 = sub_22DDA2E30(v61, v62, aBlock);
      sub_22DE1F628();
      swift_bridgeObjectRelease();
      v43(v54, v19);
      _os_log_impl(&dword_22DD4B000, v55, v56, "[%s] performed while loading. Will retry momentarily", v58, 0xCu);
      swift_arrayDestroy();
      v63 = v60;
      v5 = v163;
      MEMORY[0x22E320870](v63, -1, -1);
      MEMORY[0x22E320870](v58, -1, -1);
    }
    else
    {
      v43(v54, v19);
    }

    v64 = v167;
    if (v166 > 9)
    {
      sub_22DDD4680();
      v106 = (void *)swift_allocError();
      *v107 = 0;
      sub_22DDE0CDC(v106, 1);

      v100 = v145;
      v168(v145, v136, v19);
      v50 = sub_22DE1E3F8();
      v101 = sub_22DE1F508();
      if (os_log_type_enabled(v50, v101))
      {
        v52 = (uint8_t *)swift_slowAlloc();
        v102 = swift_slowAlloc();
        aBlock[0] = v102;
        *(_DWORD *)v52 = 136315138;
        sub_22DD504A8(&qword_255DB9500, (uint64_t (*)(uint64_t))MEMORY[0x24BE30EB8], MEMORY[0x24BE30EE0]);
        v108 = sub_22DE1F8C8();
        v170 = sub_22DDA2E30(v108, v109, aBlock);
        sub_22DE1F628();
        swift_bridgeObjectRelease();
        v43(v100, v19);
        v105 = "[%s] action performed while controller stuck in loading state";
        goto LABEL_32;
      }
LABEL_34:
      v43(v100, v19);
      goto LABEL_35;
    }
    sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
    v135[0] = sub_22DE1F574();
    v65 = v140;
    sub_22DE1F1E4();
    v66 = v142;
    *v142 = 500;
    v67 = v143;
    v68 = v144;
    (*(void (**)(_QWORD *, _QWORD, _QWORD *))(v143 + 104))(v66, *MEMORY[0x24BEE5410], v144);
    MEMORY[0x22E31FA9C](v65, v66);
    (*(void (**)(_QWORD *, _QWORD *))(v67 + 8))(v66, v68);
    v144 = *(_QWORD **)(v141 + 8);
    ((void (*)(char *, uint64_t))v144)(v65, v162);
    v145 = (char *)v43;
    v69 = v156;
    v168(v156, v136, v19);
    v163 = (char *)v36;
    v71 = v157;
    v70 = v158;
    v72 = v159;
    (*(void (**)(char *, uint64_t, uint64_t))(v157 + 16))(v159, v165, v158);
    v73 = (*(unsigned __int8 *)(v64 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    v74 = (v155 + *(unsigned __int8 *)(v71 + 80) + v73) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
    v164 = (char *)v19;
    v75 = (v152 + v74 + 7) & 0xFFFFFFFFFFFFFFF8;
    v76 = swift_allocObject();
    *(_QWORD *)(v76 + 16) = v5;
    v77 = v69;
    v43 = (void (*)(char *, uint64_t))v145;
    (*(void (**)(unint64_t, char *, char *))(v64 + 32))(v76 + v73, v77, v164);
    v78 = *(void (**)(unint64_t, char *, uint64_t))(v71 + 32);
    v36 = (uint64_t)v163;
    v78(v76 + v74, v72, v70);
    *(_QWORD *)(v76 + v75) = v166;
    aBlock[4] = (uint64_t)sub_22DDF5BBC;
    aBlock[5] = v76;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_22DD9C498;
    aBlock[3] = (uint64_t)&block_descriptor_47;
    v79 = _Block_copy(aBlock);
    v80 = v5;
    swift_release();
    v81 = v146;
    sub_22DE1F1CC();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
    sub_22DD508B0((unint64_t *)&qword_255DB68A0, (uint64_t *)&unk_255DB8150, MEMORY[0x24BEE12C8]);
    v82 = v149;
    v19 = (uint64_t)v164;
    v83 = v151;
    sub_22DE1F67C();
    v84 = v161;
    v85 = (void *)v135[0];
    MEMORY[0x22E31FDC0](v161, v81, v82, v79);
    _Block_release(v79);

    a1 = v136;
    (*(void (**)(char *, uint64_t))(v150 + 8))(v82, v83);
    (*(void (**)(char *, uint64_t))(v147 + 8))(v81, v148);
    ((void (*)(char *, uint64_t))v144)(v84, v162);
  }
  if ((sub_22DDDE6B8(2) & 1) == 0)
  {
    v100 = v153;
    v168(v153, a1, v19);
    v50 = sub_22DE1E3F8();
    v101 = sub_22DE1F4FC();
    if (os_log_type_enabled(v50, v101))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      v102 = swift_slowAlloc();
      aBlock[0] = v102;
      *(_DWORD *)v52 = 136315138;
      v103 = sub_22DE1E140();
      v170 = sub_22DDA2E30(v103, v104, aBlock);
      sub_22DE1F628();
      swift_bridgeObjectRelease();
      v43(v100, v19);
      v105 = "Ignoring %s action as FBKEvaluationController is not idling";
LABEL_32:
      _os_log_impl(&dword_22DD4B000, v50, v101, v105, v52, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v102, -1, -1);
      goto LABEL_33;
    }
    goto LABEL_34;
  }
  v163 = (char *)v36;
  v86 = (uint64_t)v154;
  v87 = (void (*)(char *, uint64_t, char *))v168;
  v168(v154, a1, v19);
  v88 = v167;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v167 + 56))(v86, 0, 1, v19);
  KeyPath = swift_getKeyPath();
  v164 = (char *)v19;
  MEMORY[0x24BDAC7A8](KeyPath);
  v135[-2] = v5;
  v135[-1] = v86;
  aBlock[0] = (uint64_t)v5;
  sub_22DE1E05C();
  swift_release();
  v90 = v164;
  sub_22DD5071C(v86, &qword_255DB94F0);
  v91 = v160;
  v87(v160, a1, v90);
  v92 = (*(uint64_t (**)(char *, char *))(v88 + 88))(v91, v90);
  if (v92 == *MEMORY[0x24BE30EB0] || v92 == *MEMORY[0x24BE30E80] || v92 == *MEMORY[0x24BE30E98])
  {
    if ((v138 & 1) != 0)
    {
      v110 = v156;
      v168(v156, a1, (uint64_t)v90);
      v112 = v157;
      v111 = v158;
      v113 = v159;
      (*(void (**)(char *, uint64_t, uint64_t))(v157 + 16))(v159, v165, v158);
      v114 = (*(unsigned __int8 *)(v88 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
      v115 = (v155 + *(unsigned __int8 *)(v112 + 80) + v114) & ~(unint64_t)*(unsigned __int8 *)(v112 + 80);
      v116 = swift_allocObject();
      *(_QWORD *)(v116 + 16) = v5;
      (*(void (**)(unint64_t, char *, char *))(v88 + 32))(v116 + v114, v110, v90);
      (*(void (**)(unint64_t, char *, uint64_t))(v112 + 32))(v116 + v115, v113, v111);
      v117 = v5;
      sub_22DDE2560(v165, (void (*)(void *, _QWORD))sub_22DDF59B4, v116);
      swift_release();
    }
    else
    {
      v129 = sub_22DE1E3F8();
      v130 = sub_22DE1F514();
      if (os_log_type_enabled(v129, v130))
      {
        v131 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v131 = 0;
        MEMORY[0x22E320870](v131, -1, -1);
      }

      v132 = sub_22DE1E11C();
      v133 = (uint64_t)v139;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 56))(v139, 1, 1, v132);
      *(_QWORD *)(swift_allocObject() + 16) = v5;
      v134 = v5;
      sub_22DE1E188();
      swift_release();
      sub_22DD5071C(v133, &qword_255DB6250);
    }
  }
  else if (v92 == *MEMORY[0x24BE30EA8] || v92 == *MEMORY[0x24BE30E90] || v92 == *MEMORY[0x24BE30EA0])
  {
    v118 = v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v157 + 16))(v159, v165, v158);
    v119 = v156;
    v120 = (void (*)(char *, uint64_t, char *))v168;
    v168(v156, a1, (uint64_t)v90);
    v121 = sub_22DE1E11C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v139, 1, 1, v121);
    v122 = objc_allocWithZone((Class)sub_22DE1E1B8());
    v123 = (void *)sub_22DE1E1A0();
    v120(v119, a1, v90);
    v124 = (*(unsigned __int8 *)(v118 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80);
    v125 = v90;
    v126 = (v155 + v124 + 7) & 0xFFFFFFFFFFFFFFF8;
    v127 = swift_allocObject();
    (*(void (**)(unint64_t, char *, char *))(v118 + 32))(v127 + v124, v119, v125);
    *(_QWORD *)(v127 + v126) = v5;
    v128 = v5;
    sub_22DE1E164();
    swift_release();

  }
  else
  {
    v93 = sub_22DE1E3F8();
    v94 = sub_22DE1F514();
    if (os_log_type_enabled(v93, v94))
    {
      v95 = (uint8_t *)swift_slowAlloc();
      v96 = swift_slowAlloc();
      aBlock[0] = v96;
      *(_DWORD *)v95 = 136446210;
      v170 = sub_22DDA2E30(0xD000000000000041, 0x800000022DE2BC30, aBlock);
      sub_22DE1F628();
      _os_log_impl(&dword_22DD4B000, v93, v94, "%{public}s Unknown Action case", v95, 0xCu);
      swift_arrayDestroy();
      v97 = v96;
      v90 = v164;
      MEMORY[0x22E320870](v97, -1, -1);
      MEMORY[0x22E320870](v95, -1, -1);
    }

    sub_22DDD4680();
    v98 = (void *)swift_allocError();
    sub_22DDB8A1C(0xD000000000000013, 0x800000022DE2BC10, v99);
    sub_22DDE0CDC(v98, 1);

    v43(v160, (uint64_t)v90);
  }
}

uint64_t sub_22DDE4D3C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];

  v29 = a3;
  v26 = a1;
  v27 = a2;
  v30 = sub_22DE1F1B4();
  v33 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v25 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22DE1F1D8();
  v31 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22DE1E14C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9668);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v28 = sub_22DE1F574();
  sub_22DD506A0(v26, (uint64_t)v13, &qword_255DB9668);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v7);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = (v12 + *(unsigned __int8 *)(v8 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v16 = swift_allocObject();
  sub_22DD5003C((uint64_t)v13, v16 + v14, &qword_255DB9668);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v16 + v15, (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v17 = v29;
  *(_QWORD *)(v16 + ((v9 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v29;
  aBlock[4] = sub_22DDF7884;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = &block_descriptor_112;
  v18 = _Block_copy(aBlock);
  v19 = v17;
  swift_release();
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD508B0((unint64_t *)&qword_255DB68A0, (uint64_t *)&unk_255DB8150, MEMORY[0x24BEE12C8]);
  v20 = v25;
  v21 = v30;
  sub_22DE1F67C();
  v22 = (void *)v28;
  MEMORY[0x22E31FDFC](0, v6, v20, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v6, v32);
}

void sub_22DDE504C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a1;
  v29 = a3;
  v26 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6250);
  MEMORY[0x24BDAC7A8](v3);
  v27 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22DE1E14C();
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22DE1E194();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22DE1E050();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9668);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (id *)((char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22DD506A0(v28, (uint64_t)v18, &qword_255DB9668);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = *v18;
    v20 = *v18;
    sub_22DDE0CDC(v19, 1);

  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v13 + 32))(v15, v18, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v11, v15, v12);
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE30F38], v8);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v7, v26, v25);
    v21 = sub_22DE1E11C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v27, 1, 1, v21);
    v22 = objc_allocWithZone((Class)sub_22DE1E1B8());
    v23 = (void *)sub_22DE1E1A0();
    sub_22DDE0CDC(v23, 0);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

uint64_t sub_22DDE52D0(void *a1, int a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  char *v22;
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  void *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[7];

  v29 = a4;
  v30 = a5;
  v32 = a3;
  v31 = a2;
  v28 = a1;
  v36 = sub_22DE1F1B4();
  v39 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v35 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22DE1F1D8();
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v34 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22DE1E194();
  v10 = *(_QWORD *)(v9 - 8);
  v27 = v9;
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = sub_22DE1E14C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v33 = sub_22DE1F574();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v29, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v30, v9);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = (v14 + *(unsigned __int8 *)(v10 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  *(_BYTE *)(v18 + 24) = v31 & 1;
  v19 = v32;
  *(_QWORD *)(v18 + 32) = v32;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v18 + v16, v15, v12);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v17, (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v27);
  aBlock[4] = sub_22DDF7AD8;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = &block_descriptor_129;
  v20 = _Block_copy(aBlock);
  sub_22DDF7A04(v28);
  v21 = v19;
  swift_release();
  v22 = v34;
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD508B0((unint64_t *)&qword_255DB68A0, (uint64_t *)&unk_255DB8150, MEMORY[0x24BEE12C8]);
  v24 = v35;
  v23 = v36;
  sub_22DE1F67C();
  v25 = (void *)v33;
  MEMORY[0x22E31FDFC](0, v22, v24, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v22, v38);
}

void sub_22DDE5608(void *a1, char a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  int v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint8_t *v30;
  os_log_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint8_t *v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB6250);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5D68);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_22DE1E194();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v20 = a1;
    sub_22DDE0CDC(a1, 1);
    sub_22DD6E88C(a1);
  }
  else if (a1)
  {
    sub_22DDE6A3C(a4, a1);
    sub_22DD6E88C(a1);
  }
  else
  {
    if (qword_255DB53B8 != -1)
      swift_once();
    v21 = sub_22DE1E410();
    __swift_project_value_buffer(v21, (uint64_t)qword_255DC3D78);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a5, v16);
    v22 = sub_22DE1E3F8();
    v23 = sub_22DE1F514();
    if (os_log_type_enabled(v22, (os_log_type_t)v23))
    {
      v37 = v23;
      v39 = v22;
      v40 = a5;
      v24 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v42 = v36;
      v38 = v24;
      *(_DWORD *)v24 = 136446210;
      sub_22DE1E17C();
      v25 = sub_22DE1E050();
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v15, 1, v25) == 1)
      {
        sub_22DD5071C((uint64_t)v15, &qword_255DB5D68);
        v27 = 0;
        v28 = 0xE000000000000000;
      }
      else
      {
        v35 = sub_22DE1E02C();
        v28 = v29;
        (*(void (**)(char *, uint64_t))(v26 + 8))(v15, v25);
        v27 = v35;
      }
      v30 = v38;
      v41 = sub_22DDA2E30(v27, v28, &v42);
      sub_22DE1F628();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      v31 = v39;
      _os_log_impl(&dword_22DD4B000, v39, (os_log_type_t)v37, "Interaction not found: %{public}s", v30, 0xCu);
      v32 = v36;
      swift_arrayDestroy();
      MEMORY[0x22E320870](v32, -1, -1);
      MEMORY[0x22E320870](v30, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);

    }
    v33 = sub_22DE1E11C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v12, 1, 1, v33);
    *(_QWORD *)(swift_allocObject() + 16) = a3;
    v34 = a3;
    sub_22DE1E188();
    swift_release();
    sub_22DD5071C((uint64_t)v12, &qword_255DB6250);
  }
}

uint64_t sub_22DDE59DC(void *a1, char a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v6 = sub_22DE1F1B4();
  v18 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_22DE1F1D8();
  v9 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v12 = (void *)sub_22DE1F574();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_BYTE *)(v13 + 24) = a2 & 1;
  *(_QWORD *)(v13 + 32) = a3;
  aBlock[4] = sub_22DDF7BA4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = &block_descriptor_138_0;
  v14 = _Block_copy(aBlock);
  sub_22DDF7A04(a1);
  v15 = a3;
  swift_release();
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD508B0((unint64_t *)&qword_255DB68A0, (uint64_t *)&unk_255DB8150, MEMORY[0x24BEE12C8]);
  sub_22DE1F67C();
  MEMORY[0x22E31FDFC](0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v17);
}

void sub_22DDE5C0C(void *a1, char a2)
{
  void *v2;
  _BYTE *v3;

  if ((a2 & 1) != 0)
  {
    sub_22DDD4680();
    v2 = (void *)swift_allocError();
    sub_22DDB8A1C(0xD000000000000015, 0x800000022DE2C930, v3);
    sub_22DDE0CDC(v2, 1);

  }
  else
  {
    sub_22DDE0CDC(a1, 0);
  }
}

void sub_22DDE5C94(uint64_t a1, void (*a2)(_QWORD, _QWORD), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  void *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD *v33;
  void *v34;
  id v35;
  char *v36;
  char *v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  void *v42;
  _BYTE *v43;
  _QWORD *v44;
  void (*v45)(_QWORD, _QWORD);
  void *v46;
  id v47;
  _QWORD v48[2];
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(_QWORD, _QWORD);
  void *v62;
  uint64_t v63;
  uint64_t aBlock[7];

  v61 = a2;
  v60 = a1;
  v4 = sub_22DE1F1B4();
  v58 = *(_QWORD *)(v4 - 8);
  v59 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v57 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22DE1F1D8();
  v55 = *(_QWORD *)(v6 - 8);
  v56 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v54 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22DE1E194();
  v53 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v53 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v52 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB5D68);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_22DE1E050();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255DB53B8 != -1)
    swift_once();
  v17 = sub_22DE1E410();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_255DC3D78);
  v19 = sub_22DE1E3F8();
  v20 = sub_22DE1F514();
  if (os_log_type_enabled(v19, v20))
  {
    v50 = v8;
    v21 = swift_slowAlloc();
    v51 = v13;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc();
    v48[1] = v18;
    v24 = v23;
    aBlock[0] = v23;
    v49 = v12;
    *(_DWORD *)v22 = 136446210;
    v63 = sub_22DDA2E30(0xD00000000000002FLL, 0x800000022DE2BC80, aBlock);
    v12 = v49;
    v8 = v50;
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v19, v20, "%{public}s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v24, -1, -1);
    v25 = v22;
    v13 = v51;
    MEMORY[0x22E320870](v25, -1, -1);
  }

  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
  {
    if ((sub_22DDDE6B8(1) & 1) != 0)
    {
      sub_22DE1E17C();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
      {
        sub_22DD5071C((uint64_t)v12, &qword_255DB5D68);
        sub_22DDDE6B8(0);
        v61(0, 0);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
        sub_22DE1E1B8();
        v44 = (_QWORD *)swift_allocObject();
        v45 = v61;
        v46 = v62;
        v44[2] = v62;
        v44[3] = v45;
        v44[4] = a3;
        v47 = v46;
        swift_retain();
        MEMORY[0x22E31E9B0](v16, sub_22DDF5D7C, v44);
        swift_release();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      }
    }
    else
    {
      v39 = sub_22DE1E3F8();
      v40 = sub_22DE1F514();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v41 = 0;
        _os_log_impl(&dword_22DD4B000, v39, v40, "Failed to transition to .loading. Other operations in-flight.", v41, 2u);
        MEMORY[0x22E320870](v41, -1, -1);
      }

      sub_22DDD4680();
      v42 = (void *)swift_allocError();
      *v43 = 6;
      v61(v42, 1);

    }
  }
  else
  {
    sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
    v26 = (void *)sub_22DE1F574();
    v27 = v52;
    v28 = v53;
    v29 = v8;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v60, v8);
    v30 = (*(unsigned __int8 *)(v28 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v31 = swift_allocObject();
    v32 = v62;
    *(_QWORD *)(v31 + 16) = v62;
    (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v31 + v30, v27, v29);
    v33 = (_QWORD *)(v31 + ((v9 + v30 + 7) & 0xFFFFFFFFFFFFFFF8));
    *v33 = v61;
    v33[1] = a3;
    aBlock[4] = (uint64_t)sub_22DDF5CDC;
    aBlock[5] = v31;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_22DD9C498;
    aBlock[3] = (uint64_t)&block_descriptor_53;
    v34 = _Block_copy(aBlock);
    v35 = v32;
    swift_retain();
    swift_release();
    v36 = v54;
    sub_22DE1F1CC();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
    sub_22DD508B0((unint64_t *)&qword_255DB68A0, (uint64_t *)&unk_255DB8150, MEMORY[0x24BEE12C8]);
    v37 = v57;
    v38 = v59;
    sub_22DE1F67C();
    MEMORY[0x22E31FDFC](0, v36, v37, v34);
    _Block_release(v34);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v37, v38);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v36, v56);
  }
}

uint64_t sub_22DDE6308(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v10 = sub_22DE1F1B4();
  v24 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_22DE1F1D8();
  v22 = *(_QWORD *)(v13 - 8);
  v23 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22DD70E78(0, (unint64_t *)&qword_255DB8140);
  v16 = (void *)sub_22DE1F574();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  *(_BYTE *)(v17 + 24) = a2 & 1;
  *(_QWORD *)(v17 + 32) = a3;
  *(_QWORD *)(v17 + 40) = a4;
  *(_QWORD *)(v17 + 48) = a5;
  aBlock[4] = sub_22DDF7774;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22DD9C498;
  aBlock[3] = &block_descriptor_106;
  v18 = _Block_copy(aBlock);
  sub_22DDF7A04(a1);
  v19 = a3;
  swift_retain();
  swift_release();
  sub_22DE1F1CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22DD504A8((unint64_t *)&qword_255DB6898, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB8150);
  sub_22DD508B0((unint64_t *)&qword_255DB68A0, (uint64_t *)&unk_255DB8150, MEMORY[0x24BEE12C8]);
  sub_22DE1F67C();
  MEMORY[0x22E31FDFC](0, v15, v12, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v15, v23);
}

void sub_22DDE654C(id a1, char a2, uint64_t a3, void (*a4)(id, uint64_t))
{
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD *v20;
  id v21;
  id v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  id v27;
  id v28;
  _QWORD *v29;
  uint64_t v31;

  if ((a2 & 1) != 0)
  {
    v13 = a1;
    if (qword_255DB53B8 != -1)
      swift_once();
    v14 = sub_22DE1E410();
    __swift_project_value_buffer(v14, (uint64_t)qword_255DC3D78);
    v15 = a1;
    v16 = a1;
    v17 = sub_22DE1E3F8();
    v18 = sub_22DE1F4FC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v19 = 138543362;
      v21 = a1;
      v31 = _swift_stdlib_bridgeErrorToNSError();
      sub_22DE1F628();
      *v20 = v31;
      sub_22DD6E88C(a1);
      sub_22DD6E88C(a1);
      _os_log_impl(&dword_22DD4B000, v17, v18, "checkIfFeatureHadFeedback returned error: %{public}@", v19, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8160);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v20, -1, -1);
      MEMORY[0x22E320870](v19, -1, -1);
    }
    else
    {
      sub_22DD6E88C(a1);
      sub_22DD6E88C(a1);
    }

    sub_22DDDE6B8(0);
    v22 = a1;
    a4(a1, 1);
    sub_22DD6E88C(a1);
    sub_22DD6E88C(a1);
  }
  else if (a1)
  {
    v5 = qword_255DB53B8;
    v6 = a1;
    if (v5 != -1)
      swift_once();
    v7 = sub_22DE1E410();
    __swift_project_value_buffer(v7, (uint64_t)qword_255DC3D78);
    v8 = v6;
    v9 = sub_22DE1E3F8();
    v10 = sub_22DE1F4E4();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v29 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v11 = 138543362;
      v12 = v8;
      sub_22DE1F628();
      *v29 = a1;
      sub_22DD6E88C(a1);
      sub_22DD6E88C(a1);
      _os_log_impl(&dword_22DD4B000, v9, v10, "checkIfFeatureHadFeedback returned: %{public}@", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255DB8160);
      swift_arrayDestroy();
      MEMORY[0x22E320870](v29, -1, -1);
      MEMORY[0x22E320870](v11, -1, -1);
    }
    else
    {
      sub_22DD6E88C(a1);
      sub_22DD6E88C(a1);
    }

    v27 = v8;
    sub_22DDE0394(a1, 0);
    sub_22DDDE6B8(0);
    v28 = v27;
    a4(a1, 0);
    sub_22DD6E88C(a1);
    sub_22DD6E88C(a1);

  }
  else
  {
    if (qword_255DB53B8 != -1)
      swift_once();
    v23 = sub_22DE1E410();
    __swift_project_value_buffer(v23, (uint64_t)qword_255DC3D78);
    v24 = sub_22DE1E3F8();
    v25 = sub_22DE1F4F0();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_22DD4B000, v24, v25, "checkIfFeatureHadFeedback returned no response", v26, 2u);
      MEMORY[0x22E320870](v26, -1, -1);
    }

    sub_22DDDE6B8(0);
    a4(0, 0);
    sub_22DD6E88C(0);
  }
}

void sub_22DDE6A3C(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  void *v22;
  char *v23;
  unsigned __int8 *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  id v29;
  int v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint8_t *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  char *v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t ObjectType;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t);
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  id v61;
  void *v62;
  uint64_t v63;
  void *v64;
  void *v65;
  char *v66;
  id v67;
  void *v68;
  uint64_t v69;
  id v70;
  void *v71;
  id v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  char *v76;
  id v77;
  uint64_t v78;
  uint64_t v79[4];
  uint64_t v80[3];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB94F8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255DB7BC0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255DB53B8 != -1)
    swift_once();
  v12 = sub_22DE1E410();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_255DC3D78);
  v14 = sub_22DE1E3F8();
  v15 = sub_22DE1F514();
  v16 = os_log_type_enabled(v14, v15);
  v75 = v13;
  if (v16)
  {
    v17 = swift_slowAlloc();
    v77 = a1;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc();
    v80[0] = v19;
    *(_DWORD *)v18 = 136446210;
    v79[1] = sub_22DDA2E30(0xD000000000000025, 0x800000022DE2BFF0, v80);
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v14, v15, "%{public}s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v19, -1, -1);
    v20 = v18;
    a1 = v77;
    MEMORY[0x22E320870](v20, -1, -1);
  }

  if (!sub_22DDDEF84(2u))
    goto LABEL_45;
  v21 = sub_22DE1DFB4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v11, 1, 1, v21);
  v22 = (void *)sub_22DDE765C((uint64_t)a2, (void (*)(char *, uint64_t))a1, (uint64_t)v11);
  sub_22DD5071C((uint64_t)v11, (uint64_t *)&unk_255DB7BC0);
  objc_allocWithZone((Class)type metadata accessor for FBKFeedbackDraftViewController());
  v77 = v22;
  v23 = FBKFeedbackDraftViewController.init(feedbackForm:)(v77);
  v24 = (unsigned __int8 *)&v23[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController_showsCompletionPage];
  swift_beginAccess();
  *v24 = 0;
  if (*(_QWORD *)&v23[OBJC_IVAR____TtC8Feedback30FBKFeedbackDraftViewController__xpcConnection])
  {
    v25 = sub_22DDBC27C();
    if (v25)
    {
      objc_msgSend(v25, sel_setShowsCompletionPage_, *v24);
      swift_unknownObjectRelease();
    }
  }
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  v26 = sub_22DE1E14C();
  (*(void (**)(char *, void *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v8, a1, v26);
  v27 = type metadata accessor for FBKEvaluationController.FormContext(0);
  *(_QWORD *)&v8[*(int *)(v27 + 20)] = a2;
  *(_QWORD *)&v8[*(int *)(v27 + 24)] = v23;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v8, 0, 1, v27);
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  v79[0] = v3;
  sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
  v29 = a2;
  v76 = v23;
  sub_22DE1E05C();
  swift_release();
  sub_22DD5071C((uint64_t)v8, &qword_255DB94F8);
  swift_getKeyPath();
  v79[0] = v3;
  sub_22DE1E068();
  swift_release();
  v30 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController__apiType);
  v31 = sub_22DE1E3F8();
  v32 = sub_22DE1F4F0();
  v33 = os_log_type_enabled(v31, v32);
  if (v30 != 1)
  {
    if (v33)
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_22DD4B000, v31, v32, "Will use UIKit or AppKit APIs", v38, 2u);
      MEMORY[0x22E320870](v38, -1, -1);
    }

    swift_getKeyPath();
    v79[0] = v3;
    sub_22DE1E068();
    swift_release();
    v39 = MEMORY[0x22E32090C](v3 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController__delegate);
    if (!v39)
    {
      v44 = sub_22DE1E3F8();
      v45 = sub_22DE1F4FC();
      v46 = os_log_type_enabled(v44, v45);
      v47 = v76;
      if (v46)
      {
        v48 = (uint8_t *)swift_slowAlloc();
        v49 = swift_slowAlloc();
        v79[0] = v49;
        *(_DWORD *)v48 = 136446210;
        v78 = sub_22DDA2E30(0xD000000000000025, 0x800000022DE2BFF0, v79);
        sub_22DE1F628();
        _os_log_impl(&dword_22DD4B000, v44, v45, "%{public}s: delegate is nil. Cannot open form", v48, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E320870](v49, -1, -1);
        MEMORY[0x22E320870](v48, -1, -1);

LABEL_42:
        return;
      }

LABEL_44:
      return;
    }
    v40 = v39;
    objc_opt_self();
    v41 = swift_dynamicCastObjCClass();
    v42 = v76;
    if (v41)
    {
      v43 = (void *)v41;
      swift_unknownObjectRetain();
LABEL_28:
      v55 = sub_22DE1E3F8();
      v56 = sub_22DE1F4F0();
      if (os_log_type_enabled(v55, v56))
      {
        v57 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v57 = 0;
        _os_log_impl(&dword_22DD4B000, v55, v56, "Will present iOS UIKit ViewController as Sheet", v57, 2u);
        MEMORY[0x22E320870](v57, -1, -1);
      }

      objc_msgSend(v43, sel_presentViewController_animated_completion_, v42, 1, 0);
      if ((sub_22DDE85AC(v43) & 1) == 0)
      {

        swift_unknownObjectRelease();
        goto LABEL_37;
      }
      v58 = sub_22DE1E3F8();
      v59 = sub_22DE1F4F0();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v60 = 0;
        _os_log_impl(&dword_22DD4B000, v58, v59, "Is compact horizontal size class. Will use detents", v60, 2u);
        MEMORY[0x22E320870](v60, -1, -1);
      }

      v61 = objc_msgSend(v42, sel_presentationController);
      if (v61)
      {
        v62 = v61;
        objc_opt_self();
        v63 = swift_dynamicCastObjCClass();
        if (v63)
        {
          v64 = (void *)v63;
          v65 = (void *)sub_22DE1F28C();
          sub_22DD70E78(0, &qword_255DB9618);
          v66 = v42;
          v67 = v65;
          v68 = (void *)sub_22DE1F5BC();

          __swift_instantiateConcreteTypeFromMangledName(&qword_255DB7CA0);
          v69 = swift_allocObject();
          *(_OWORD *)(v69 + 16) = xmmword_22DE24100;
          *(_QWORD *)(v69 + 32) = objc_msgSend((id)objc_opt_self(), sel_largeDetent);
          *(_QWORD *)(v69 + 40) = v68;
          v79[0] = v69;
          sub_22DE1F3E8();
          v70 = v68;
          v71 = (void *)sub_22DE1F3C4();
          swift_bridgeObjectRelease();
          objc_msgSend(v64, sel_setDetents_, v71);

          objc_msgSend(v64, sel_setPrefersGrabberVisible_, 1);
          objc_msgSend(v64, sel_setSelectedDetentIdentifier_, *MEMORY[0x24BEBE738]);
          v72 = v67;
          objc_msgSend(v64, sel_setLargestUndimmedDetentIdentifier_, v72);

          swift_unknownObjectRelease();
LABEL_37:

          return;
        }

      }
      v44 = sub_22DE1E3F8();
      v73 = sub_22DE1F4FC();
      if (os_log_type_enabled(v44, v73))
      {
        v74 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v74 = 0;
        _os_log_impl(&dword_22DD4B000, v44, v73, "No Sheet Presentation Controller. Cannot customize detents", v74, 2u);
        MEMORY[0x22E320870](v74, -1, -1);

        swift_unknownObjectRelease();
        goto LABEL_42;
      }

      swift_unknownObjectRelease();
      goto LABEL_44;
    }
    swift_getObjectType();
    v50 = swift_conformsToProtocol2();
    if (v50)
      v51 = v50;
    else
      v51 = 0;
    if (v50)
      v52 = v40;
    else
      v52 = 0;
    if (v52)
    {
      ObjectType = swift_getObjectType();
      v54 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 16);
      swift_unknownObjectRetain();
      v43 = (void *)v54(v3, ObjectType, v51);
      swift_unknownObjectRelease();
      goto LABEL_28;
    }
    while (1)
    {
LABEL_45:
      sub_22DE1F7CC();
      __break(1u);
    }
  }
  if (v33)
  {
    v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v34 = 0;
    _os_log_impl(&dword_22DD4B000, v31, v32, "Will use SwiftUI APIs", v34, 2u);
    MEMORY[0x22E320870](v34, -1, -1);
  }

  v35 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v35);
  v79[0] = v3;
  v36 = v29;
  sub_22DE1E05C();
  swift_release();

  v37 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v37);
  v79[0] = v3;
  sub_22DE1E05C();

  swift_release();
}

uint64_t sub_22DDE765C(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _BYTE *v17;
  _QWORD *v18;
  _BYTE *v19;
  _BYTE *v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  void **v36;
  void *v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  int64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t *v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint8_t *v69;
  uint64_t *v70;
  id v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t result;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int64_t v92;
  unint64_t v93;
  int64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int64_t v115;
  id v116;
  id v117;
  uint64_t v118;
  int64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  int64_t v124;
  uint64_t v125;
  char *v126;
  __int128 v127;
  char *v128;
  _BYTE *v129;
  char *v130;
  void (*v131)(char *, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __int128 v135;
  uint64_t v136;

  *(_QWORD *)&v127 = a3;
  v125 = a1;
  v4 = sub_22DE1E2CC();
  v132 = *(_QWORD *)(v4 - 8);
  v133 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v130 = (char *)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v128 = (char *)&v115 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB91A0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v120 = (char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v121 = (char *)&v115 - v11;
  v134 = sub_22DE1E1F4();
  v124 = *(_QWORD *)(v134 - 8);
  MEMORY[0x24BDAC7A8](v134);
  v126 = (char *)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = (void (*)(char *, uint64_t))a2;
  v13 = sub_22DDEC3DC();
  v15 = v14;
  v16 = objc_allocWithZone((Class)type metadata accessor for FBKFeedbackForm());
  v17 = FBKFeedbackForm.init(identifier:)(v13, v15);
  v18 = &v17[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__largeTitleIcon];
  *v18 = 0xD00000000000001BLL;
  v18[1] = 0x800000022DE2C0B0;
  swift_bridgeObjectRelease();
  v17[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__showInlineUserInfo] = 1;
  v17[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__hideAttachmentButton] = 1;
  v19 = &v17[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_alwaysDeletesDrafts];
  swift_beginAccess();
  *v19 = 1;
  v20 = &v17[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_allowsAttachmentDragAndDrop];
  swift_beginAccess();
  *v20 = 0;
  v17[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__disableAccountSwitching] = 1;
  v21 = (void *)objc_opt_self();
  v22 = objc_msgSend(v21, sel_mainBundle);
  sub_22DE1DED0();

  v23 = objc_allocWithZone(MEMORY[0x24BDD1688]);
  swift_bridgeObjectRetain();
  v24 = (void *)sub_22DE1F28C();
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v23, sel_initWithString_, v24);

  v26 = *MEMORY[0x24BEBB388];
  v27 = (void *)sub_22DE1F28C();
  v28 = sub_22DE1F31C();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_addAttribute_value_range_, v26, v27, 0, v28);

  v29 = objc_msgSend(v21, sel_mainBundle);
  sub_22DE1DED0();

  v30 = objc_allocWithZone(MEMORY[0x24BDD1688]);
  v31 = (void *)sub_22DE1F28C();
  swift_bridgeObjectRelease();
  v32 = objc_msgSend(v30, sel_initWithString_, v31);

  v33 = objc_allocWithZone(MEMORY[0x24BDD1458]);
  v34 = (void *)sub_22DE1F28C();
  v35 = objc_msgSend(v33, sel_initWithString_, v34);

  objc_msgSend(v32, sel_appendAttributedString_, v35);
  v117 = v25;
  objc_msgSend(v32, sel_appendAttributedString_, v25);
  v36 = (void **)&v17[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_localizedAttributedLegalString];
  swift_beginAccess();
  v37 = *v36;
  *v36 = v32;
  v116 = v32;

  v17[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__useInlineChoices] = 1;
  v17[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__showUserSwitcherLast] = 1;
  v38 = sub_22DDEC570((void *)v127);
  if (*(_QWORD *)(v38 + 16))
  {
    v39 = sub_22DDFD584(0);
    if ((v40 & 1) != 0)
    {
      v41 = *(_QWORD *)(*(_QWORD *)(v38 + 56) + 16 * v39);
      swift_beginAccess();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_22DDECF94(v41);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v38 + 16))
    {
      sub_22DDFD584(1);
      if ((v42 & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        v43 = swift_bridgeObjectRetain();
        sub_22DDECF94(v43);
        swift_endAccess();
        swift_bridgeObjectRelease();
      }
    }
  }
  swift_bridgeObjectRelease();
  v44 = v133;
  v45 = (uint64_t)v120;
  v46 = (uint64_t)v121;
  v47 = (uint64_t *)v125;
  v48 = v124;
  *(_QWORD *)&v135 = 0;
  *((_QWORD *)&v135 + 1) = 0xE000000000000000;
  v49 = v126;
  sub_22DE1E200();
  v50 = sub_22DDED268();
  v52 = v51;
  v53 = *(void (**)(char *, uint64_t))(v48 + 8);
  v53(v49, v134);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v135 = v50;
  *((_QWORD *)&v135 + 1) = v52;
  sub_22DE1F328();
  sub_22DDED618();
  sub_22DE1F328();
  swift_bridgeObjectRelease();
  v54 = v135;
  v135 = 0uLL;
  sub_22DE0898C((uint64_t *)&v135, v54, *((uint64_t *)&v54 + 1));
  swift_bridgeObjectRelease();
  v135 = xmmword_22DE26680;
  sub_22DE1E200();
  v55 = sub_22DDEDA38();
  v57 = v56;
  v53(v49, v134);
  sub_22DE0898C((uint64_t *)&v135, v55, v57);
  swift_bridgeObjectRelease();
  sub_22DDA40E0(v135, *((unint64_t *)&v135 + 1));
  v58 = sub_22DE1E1D0();
  v60 = v47;
  if (v59)
  {
    v135 = xmmword_22DE26690;
    sub_22DE0898C((uint64_t *)&v135, v58, v59);
    swift_bridgeObjectRelease();
  }
  v61 = sub_22DE1E254();
  v63 = v128;
  v129 = v17;
  if (v62)
  {
    v135 = xmmword_22DE266A0;
    sub_22DE0898C((uint64_t *)&v135, v61, v62);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_255DB53B8 != -1)
LABEL_57:
      swift_once();
    v64 = sub_22DE1E410();
    __swift_project_value_buffer(v64, (uint64_t)qword_255DC3D78);
    v65 = v60;
    v66 = sub_22DE1E3F8();
    v67 = sub_22DE1F4FC();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      v134 = swift_slowAlloc();
      *(_QWORD *)&v135 = v134;
      *(_DWORD *)v68 = 136315138;
      *(_QWORD *)&v127 = v68 + 4;
      v69 = v68;
      v70 = v65;
      v71 = objc_msgSend(v70, sel_description);
      v72 = sub_22DE1F2B0();
      v74 = v73;

      v46 = (uint64_t)v121;
      v75 = v72;
      v17 = v129;
      v136 = sub_22DDA2E30(v75, v74, (uint64_t *)&v135);
      v63 = v128;
      sub_22DE1F628();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22DD4B000, v66, v67, "No bundle identifier found in interaction [%s]", v69, 0xCu);
      v76 = v134;
      swift_arrayDestroy();
      MEMORY[0x22E320870](v76, -1, -1);
      MEMORY[0x22E320870](v69, -1, -1);

    }
    else
    {

    }
    v44 = v133;
  }
  v135 = xmmword_22DE266B0;
  v77 = sub_22DDEDE0C();
  sub_22DE0898C((uint64_t *)&v135, v77, v78);
  swift_bridgeObjectRelease();
  v79 = sub_22DE1E23C();
  if (v79)
  {
    v124 = 0;
    v122 = v79;
    v83 = *(_QWORD *)(v79 + 64);
    result = v79 + 64;
    v82 = v83;
    v118 = result;
    v84 = 1 << *(_BYTE *)(result - 32);
    v85 = -1;
    if (v84 < 64)
      v85 = ~(-1 << v84);
    v86 = v85 & v82;
    v60 = qword_255DB91A8;
    v119 = (unint64_t)(v84 + 63) >> 6;
    v115 = v119 - 1;
    *(_QWORD *)&v80 = 136446467;
    v127 = v80;
    v126 = (char *)(MEMORY[0x24BEE4AD8] + 8);
    v87 = v130;
    while (!v86)
    {
      v92 = v124 + 1;
      if (__OFADD__(v124, 1))
      {
        __break(1u);
        goto LABEL_57;
      }
      if (v92 < v119)
      {
        v93 = *(_QWORD *)(v118 + 8 * v92);
        if (v93)
          goto LABEL_28;
        v94 = v124 + 2;
        ++v124;
        if (v92 + 1 < v119)
        {
          v93 = *(_QWORD *)(v118 + 8 * v94);
          if (v93)
            goto LABEL_31;
          v124 = v92 + 1;
          if (v92 + 2 < v119)
          {
            v93 = *(_QWORD *)(v118 + 8 * (v92 + 2));
            if (v93)
            {
              v92 += 2;
              goto LABEL_28;
            }
            v94 = v92 + 3;
            v124 = v92 + 2;
            if (v92 + 3 < v119)
            {
              v93 = *(_QWORD *)(v118 + 8 * v94);
              if (!v93)
              {
                while (1)
                {
                  v92 = v94 + 1;
                  if (__OFADD__(v94, 1))
                    break;
                  if (v92 >= v119)
                  {
                    v124 = v115;
                    goto LABEL_42;
                  }
                  v93 = *(_QWORD *)(v118 + 8 * v92);
                  ++v94;
                  if (v93)
                    goto LABEL_28;
                }
                __break(1u);
                return result;
              }
LABEL_31:
              v92 = v94;
LABEL_28:
              v125 = (v93 - 1) & v93;
              v88 = __clz(__rbit64(v93)) + (v92 << 6);
              v124 = v92;
LABEL_24:
              v89 = v122;
              (*(void (**)(uint64_t, unint64_t, uint64_t))(v132 + 16))(v45, *(_QWORD *)(v122 + 48) + *(_QWORD *)(v132 + 72) * v88, v44);
              v90 = *(_QWORD *)(v89 + 56);
              v91 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB91A8);
              *(_QWORD *)(v45 + *(int *)(v91 + 48)) = *(_QWORD *)(v90 + 8 * v88);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v45, 0, 1, v91);
              swift_bridgeObjectRetain();
              goto LABEL_43;
            }
          }
        }
      }
LABEL_42:
      v95 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB91A8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v45, 1, 1, v95);
      v125 = 0;
LABEL_43:
      sub_22DD5003C(v45, v46, &qword_255DB91A0);
      v96 = __swift_instantiateConcreteTypeFromMangledName(qword_255DB91A8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 48))(v46, 1, v96) == 1)
      {

        swift_release();
        return (uint64_t)v17;
      }
      v97 = *(_QWORD *)(v46 + *(int *)(v96 + 48));
      v98 = v132;
      (*(void (**)(char *, uint64_t, uint64_t))(v132 + 32))(v63, v46, v44);
      v99 = *(_QWORD *)(v97 + 16);
      if (v99)
      {
        v123 = v97;
        v100 = (unint64_t *)(v97 + 40);
        do
        {
          v103 = *v100;
          v134 = *(v100 - 1);
          v104 = qword_255DB53B8;
          swift_bridgeObjectRetain();
          if (v104 != -1)
            swift_once();
          v105 = sub_22DE1E410();
          __swift_project_value_buffer(v105, (uint64_t)qword_255DC3D78);
          v106 = v132;
          (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v87, v63, v44);
          swift_bridgeObjectRetain_n();
          v107 = sub_22DE1E3F8();
          v108 = sub_22DE1F4F0();
          if (os_log_type_enabled(v107, v108))
          {
            v109 = swift_slowAlloc();
            v110 = swift_slowAlloc();
            *(_QWORD *)&v135 = v110;
            *(_DWORD *)v109 = v127;
            sub_22DD504A8(&qword_255DB9620, (uint64_t (*)(uint64_t))MEMORY[0x24BE31270], MEMORY[0x24BE31290]);
            v111 = sub_22DE1F8C8();
            *(_QWORD *)(v109 + 4) = sub_22DDA2E30(v111, v112, (uint64_t *)&v135);
            swift_bridgeObjectRelease();
            v131 = *(void (**)(char *, uint64_t))(v106 + 8);
            v131(v87, v133);
            *(_WORD *)(v109 + 12) = 2081;
            swift_bridgeObjectRetain();
            v101 = v134;
            *(_QWORD *)(v109 + 14) = sub_22DDA2E30(v134, v103, (uint64_t *)&v135);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_22DD4B000, v107, v108, "Pre-filling question-answer: %{public}s -> %{private}s", (uint8_t *)v109, 0x16u);
            swift_arrayDestroy();
            v113 = v110;
            v63 = v128;
            MEMORY[0x22E320870](v113, -1, -1);
            v114 = v109;
            v44 = v133;
            MEMORY[0x22E320870](v114, -1, -1);

          }
          else
          {
            v131 = *(void (**)(char *, uint64_t))(v106 + 8);
            v131(v87, v44);

            swift_bridgeObjectRelease_n();
            v101 = v134;
          }
          v100 += 2;
          *(_QWORD *)&v135 = sub_22DE1E2C0();
          *((_QWORD *)&v135 + 1) = v102;
          v17 = v129;
          sub_22DE0898C((uint64_t *)&v135, v101, v103);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          --v99;
          v87 = v130;
        }
        while (v99);
        swift_bridgeObjectRelease();
        v45 = (uint64_t)v120;
        v46 = (uint64_t)v121;
        result = ((uint64_t (*)(char *, uint64_t))v131)(v63, v44);
      }
      else
      {
        swift_bridgeObjectRelease();
        result = (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v63, v44);
      }
      v60 = qword_255DB91A8;
      v86 = v125;
    }
    v125 = (v86 - 1) & v86;
    v88 = __clz(__rbit64(v86)) | (v124 << 6);
    goto LABEL_24;
  }

  return (uint64_t)v17;
}

uint64_t sub_22DDE8598()
{
  return *MEMORY[0x24BE30D68];
}

uint64_t sub_22DDE85AC(void *a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  int v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  const char *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController_blockPresentationDetentUsage);
  swift_beginAccess();
  v4 = *v3;
  if (v4 == 1)
  {
    if (qword_255DB53B8 != -1)
      swift_once();
    v5 = sub_22DE1E410();
    __swift_project_value_buffer(v5, (uint64_t)qword_255DC3D78);
    v6 = sub_22DE1E3F8();
    v7 = sub_22DE1F4F0();
    if (!os_log_type_enabled(v6, v7))
    {
      v13 = 0;
      goto LABEL_15;
    }
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = "blockPresentationDetentUsage. Will not use presentation detents";
LABEL_11:
    _os_log_impl(&dword_22DD4B000, v6, v7, v9, v8, 2u);
    v13 = v4 ^ 1u;
    MEMORY[0x22E320870](v8, -1, -1);
LABEL_15:

    return v13;
  }
  v10 = objc_msgSend(a1, sel_traitCollection);
  v11 = objc_msgSend(v10, sel_horizontalSizeClass);

  if (v11 == (id)1)
  {
    if (qword_255DB53B8 != -1)
      swift_once();
    v12 = sub_22DE1E410();
    __swift_project_value_buffer(v12, (uint64_t)qword_255DC3D78);
    v6 = sub_22DE1E3F8();
    v7 = sub_22DE1F4F0();
    if (!os_log_type_enabled(v6, v7))
    {
      v13 = 1;
      goto LABEL_15;
    }
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = "Is compact horizontal size class. Will use presentation detents";
    goto LABEL_11;
  }
  return 0;
}

uint64_t sub_22DDE8790(uint64_t a1, int a2)
{
  return sub_22DDE87B4(a1, a2, MEMORY[0x24BE30EB0]);
}

uint64_t sub_22DDE879C(uint64_t a1, int a2)
{
  return sub_22DDE87B4(a1, a2, MEMORY[0x24BE30E80]);
}

uint64_t sub_22DDE87A8(uint64_t a1, int a2)
{
  return sub_22DDE87B4(a1, a2, MEMORY[0x24BE30E98]);
}

uint64_t sub_22DDE87B4(uint64_t a1, int a2, unsigned int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v6 = sub_22DE1E14C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *a3, v6);
  sub_22DDE3944((uint64_t)v9, a1, a2, 0);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_22DDE8864(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40[3];
  uint64_t v41;

  v2 = sub_22DE1E14C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB9508);
  MEMORY[0x24BDAC7A8](v38);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255DB94F0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v39 = (char *)&v34 - v12;
  if (qword_255DB53B8 != -1)
    swift_once();
  v13 = sub_22DE1E410();
  __swift_project_value_buffer(v13, (uint64_t)qword_255DC3D78);
  v14 = sub_22DE1E3F8();
  v15 = sub_22DE1F4F0();
  if (os_log_type_enabled(v14, v15))
  {
    v34 = v11;
    v16 = swift_slowAlloc();
    v35 = a1;
    v36 = v7;
    v17 = (uint8_t *)v16;
    v18 = v3;
    v19 = swift_slowAlloc();
    v40[0] = v19;
    *(_DWORD *)v17 = 136446210;
    v41 = sub_22DDA2E30(0xD000000000000018, 0x800000022DE2BCB0, v40);
    v11 = v34;
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v14, v15, "%{public}s", v17, 0xCu);
    swift_arrayDestroy();
    v20 = v19;
    v3 = v18;
    MEMORY[0x22E320870](v20, -1, -1);
    v21 = v17;
    a1 = v35;
    v7 = v36;
    MEMORY[0x22E320870](v21, -1, -1);
  }

  v22 = objc_msgSend((id)objc_opt_self(), sel_isMainThread);
  v23 = (uint64_t)v39;
  if (v22)
  {
    swift_getKeyPath();
    v24 = v37;
    v40[0] = v37;
    sub_22DD504A8((unint64_t *)&qword_255DB7270, type metadata accessor for FBKEvaluationController, (uint64_t)&protocol conformance descriptor for FBKEvaluationController);
    sub_22DE1E068();
    swift_release();
    v25 = v24 + OBJC_IVAR____TtC8Feedback23FBKEvaluationController__actionPerformed;
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v23, a1, v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v23, 0, 1, v2);
    v26 = (uint64_t)&v7[*(int *)(v38 + 48)];
    sub_22DD506A0(v25, (uint64_t)v7, &qword_255DB94F0);
    sub_22DD506A0(v23, v26, &qword_255DB94F0);
    v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (v27((uint64_t)v7, 1, v2) == 1)
    {
      sub_22DD5071C(v23, &qword_255DB94F0);
      if (v27(v26, 1, v2) == 1)
      {
        sub_22DD5071C((uint64_t)v7, &qword_255DB94F0);
        return _s8Feedback23FBKEvaluationControllerC15systemImageName3for11hasResponseSS0A7Service14FBKSEvaluationC6ActionO_SbtFZ_0(a1);
      }
    }
    else
    {
      sub_22DD506A0((uint64_t)v7, (uint64_t)v11, &qword_255DB94F0);
      if (v27(v26, 1, v2) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v26, v2);
        sub_22DD504A8(&qword_255DB9510, (uint64_t (*)(uint64_t))MEMORY[0x24BE30EB8], MEMORY[0x24BE30ED0]);
        sub_22DE1F280();
        v33 = *(void (**)(char *, uint64_t))(v3 + 8);
        v33(v5, v2);
        sub_22DD5071C(v23, &qword_255DB94F0);
        v33(v11, v2);
        sub_22DD5071C((uint64_t)v7, &qword_255DB94F0);
        return _s8Feedback23FBKEvaluationControllerC15systemImageName3for11hasResponseSS0A7Service14FBKSEvaluationC6ActionO_SbtFZ_0(a1);
      }
      sub_22DD5071C(v23, &qword_255DB94F0);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
    }
    sub_22DD5071C((uint64_t)v7, &qword_255DB9508);
    return _s8Feedback23FBKEvaluationControllerC15systemImageName3for11hasResponseSS0A7Service14FBKSEvaluationC6ActionO_SbtFZ_0(a1);
  }
  v28 = sub_22DE1E3F8();
  v29 = sub_22DE1F4FC();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    v40[0] = v31;
    *(_DWORD *)v30 = 136446210;
    v41 = sub_22DDA2E30(0xD000000000000018, 0x800000022DE2BCB0, v40);
    sub_22DE1F628();
    _os_log_impl(&dword_22DD4B000, v28, v29, "%{public}s called off main thread.  Assuming no evaluation response.", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E320870](v31, -1, -1);
    MEMORY[0x22E320870](v30, -1, -1);
  }

  return _s8Feedback23FBKEvaluationControllerC15systemImageName3for11hasResponseSS0A7Service14FBKSEvaluationC6ActionO_SbtFZ_0(a1);
}

