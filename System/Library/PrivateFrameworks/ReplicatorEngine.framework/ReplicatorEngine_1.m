uint64_t *_s16ReplicatorEngine6RecordV5ValueVwca_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;

  v6 = *a2;
  v7 = a2[1];
  sub_245261C44(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_24525CB80(v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_2453875E4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *_s16ReplicatorEngine6RecordV5ValueVwtk_0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2453875E4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t *_s16ReplicatorEngine6RecordV5ValueVwta_0(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_24525CB80(v6, v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_2453875E4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_2452DE060()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_5Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 12)
  {
    v4 = *(_QWORD *)(a1 + 8) >> 60;
    if (((4 * (_DWORD)v4) & 0xC) != 0)
      return 16 - ((4 * (_DWORD)v4) & 0xC | (v4 >> 2));
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_2452DE0FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *__swift_store_extra_inhabitant_index_6Tm(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 12)
  {
    *(_QWORD *)result = 0;
    *((_QWORD *)result + 1) = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_2452DE18C()
{
  unint64_t v0;

  sub_2452DD4FC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_2452DE20C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_245387740();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      v13 = type metadata accessor for Record.ID.Ownership(0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t sub_2452DE310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_245387740();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *sub_2452DE394(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_245387740();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

_QWORD *sub_2452DE46C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_245387740();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_2452DE5B0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_245387740();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *sub_2452DE668(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_245387740();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_2452DE78C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_1Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Record.ID.Ownership(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_2452DE818()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_2Tm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Record.ID.Ownership(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2452DE89C()
{
  return sub_2452DEEC4();
}

uint64_t *sub_2452DE8A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    v8 = *(int *)(a3 + 24);
    v9 = (char *)a2 + v8;
    v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    v11 = sub_245387740();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v9, 1, v11))
    {
      v14 = type metadata accessor for Record.ID.Ownership(0);
      memcpy(v10, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v10, v9, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
  }
  return v3;
}

uint64_t sub_2452DE9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_245387740();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *sub_2452DEA50(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a2 + v7;
  v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  v10 = sub_245387740();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v8, 1, v10))
  {
    v13 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v9, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v9, v8, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  }
  return a1;
}

_QWORD *sub_2452DEB40(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_245387740();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_2452DECA4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_245387740();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *sub_2452DED64(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_245387740();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_2452DEE98()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452DEEA8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452DEEB8()
{
  return sub_2452DEEC4();
}

uint64_t sub_2452DEEC4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Record.ID.Ownership(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Record.CodingKeys()
{
  return &type metadata for Record.CodingKeys;
}

ValueMetadata *type metadata accessor for Record.ID.Ownership.CodingKeys()
{
  return &type metadata for Record.ID.Ownership.CodingKeys;
}

ValueMetadata *type metadata accessor for Record.ID.Ownership.LocalCodingKeys()
{
  return &type metadata for Record.ID.Ownership.LocalCodingKeys;
}

uint64_t storeEnumTagSinglePayload for Record.ID.Ownership.RemoteCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2452DEFB0 + 4 * asc_24538B090[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2452DEFD0 + 4 * byte_24538B095[v4]))();
}

_BYTE *sub_2452DEFB0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2452DEFD0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2452DEFD8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2452DEFE0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2452DEFE8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2452DEFF0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Record.ID.Ownership.RemoteCodingKeys()
{
  return &type metadata for Record.ID.Ownership.RemoteCodingKeys;
}

unint64_t sub_2452DF010()
{
  unint64_t result;

  result = qword_257452718;
  if (!qword_257452718)
  {
    result = MEMORY[0x2495330B0](&unk_24538B51C, &type metadata for Record.ID.Ownership.RemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452718);
  }
  return result;
}

unint64_t sub_2452DF058()
{
  unint64_t result;

  result = qword_257452720;
  if (!qword_257452720)
  {
    result = MEMORY[0x2495330B0](&unk_24538B624, &type metadata for Record.ID.Ownership.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452720);
  }
  return result;
}

unint64_t sub_2452DF0A0()
{
  unint64_t result;

  result = qword_257452728;
  if (!qword_257452728)
  {
    result = MEMORY[0x2495330B0](&unk_24538B6DC, &type metadata for Record.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452728);
  }
  return result;
}

unint64_t sub_2452DF0E8()
{
  unint64_t result;

  result = qword_257452730;
  if (!qword_257452730)
  {
    result = MEMORY[0x2495330B0](&unk_24538B64C, &type metadata for Record.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452730);
  }
  return result;
}

unint64_t sub_2452DF130()
{
  unint64_t result;

  result = qword_257452738;
  if (!qword_257452738)
  {
    result = MEMORY[0x2495330B0](&unk_24538B674, &type metadata for Record.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452738);
  }
  return result;
}

unint64_t sub_2452DF178()
{
  unint64_t result;

  result = qword_257452740;
  if (!qword_257452740)
  {
    result = MEMORY[0x2495330B0](&unk_24538B544, &type metadata for Record.ID.Ownership.LocalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452740);
  }
  return result;
}

unint64_t sub_2452DF1C0()
{
  unint64_t result;

  result = qword_257452748;
  if (!qword_257452748)
  {
    result = MEMORY[0x2495330B0](&unk_24538B56C, &type metadata for Record.ID.Ownership.LocalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452748);
  }
  return result;
}

unint64_t sub_2452DF208()
{
  unint64_t result;

  result = qword_257452750;
  if (!qword_257452750)
  {
    result = MEMORY[0x2495330B0](&unk_24538B48C, &type metadata for Record.ID.Ownership.RemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452750);
  }
  return result;
}

unint64_t sub_2452DF250()
{
  unint64_t result;

  result = qword_257452758;
  if (!qword_257452758)
  {
    result = MEMORY[0x2495330B0](&unk_24538B4B4, &type metadata for Record.ID.Ownership.RemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452758);
  }
  return result;
}

unint64_t sub_2452DF298()
{
  unint64_t result;

  result = qword_257452760;
  if (!qword_257452760)
  {
    result = MEMORY[0x2495330B0](&unk_24538B594, &type metadata for Record.ID.Ownership.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452760);
  }
  return result;
}

unint64_t sub_2452DF2E0()
{
  unint64_t result;

  result = qword_257452768;
  if (!qword_257452768)
  {
    result = MEMORY[0x2495330B0](&unk_24538B5BC, &type metadata for Record.ID.Ownership.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452768);
  }
  return result;
}

uint64_t sub_2452DF324(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C61636F6CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746F6D6572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_245388274();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2452DF404(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_245388274();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_2452DF4EC()
{
  unint64_t result;

  result = qword_257452778;
  if (!qword_257452778)
  {
    result = MEMORY[0x2495330B0](&unk_24538BDC4, &type metadata for Record.ID.Versions.V8.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452778);
  }
  return result;
}

unint64_t sub_2452DF530()
{
  unint64_t result;

  result = qword_257452790;
  if (!qword_257452790)
  {
    result = MEMORY[0x2495330B0](&unk_24538BD74, &type metadata for Record.ID.Versions.V0.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452790);
  }
  return result;
}

unint64_t sub_2452DF574()
{
  unint64_t result;

  result = qword_2574527A0;
  if (!qword_2574527A0)
  {
    result = MEMORY[0x2495330B0](&unk_24538BD24, &type metadata for Record.Value.Versions.V8.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574527A0);
  }
  return result;
}

unint64_t sub_2452DF5B8()
{
  unint64_t result;

  result = qword_2574527B8;
  if (!qword_2574527B8)
  {
    result = MEMORY[0x2495330B0](&unk_24538BCD4, &type metadata for Record.Value.Versions.V0.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574527B8);
  }
  return result;
}

uint64_t _s16ReplicatorEngine6RecordV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2452DF648 + 4 * byte_24538B09F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2452DF67C + 4 * byte_24538B09A[v4]))();
}

uint64_t sub_2452DF67C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452DF684(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2452DF68CLL);
  return result;
}

uint64_t sub_2452DF698(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2452DF6A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2452DF6A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452DF6AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Record.Value.Versions.V0.CodingKeys()
{
  return &type metadata for Record.Value.Versions.V0.CodingKeys;
}

ValueMetadata *type metadata accessor for Record.Value.Versions()
{
  return &type metadata for Record.Value.Versions;
}

ValueMetadata *type metadata accessor for Record.Value.Versions.V8.CodingKeys()
{
  return &type metadata for Record.Value.Versions.V8.CodingKeys;
}

ValueMetadata *type metadata accessor for Record.ID.Versions.V0.CodingKeys()
{
  return &type metadata for Record.ID.Versions.V0.CodingKeys;
}

ValueMetadata *type metadata accessor for Record.ID.Versions()
{
  return &type metadata for Record.ID.Versions;
}

uint64_t getEnumTagSinglePayload for MessagePriority(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s16ReplicatorEngine6RecordV5ValueV8VersionsO2V8V10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2452DF7EC + 4 * byte_24538B0A9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2452DF820 + 4 * byte_24538B0A4[v4]))();
}

uint64_t sub_2452DF820(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452DF828(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2452DF830);
  return result;
}

uint64_t sub_2452DF83C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2452DF844);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2452DF848(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452DF850(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Record.ID.Versions.V8.CodingKeys()
{
  return &type metadata for Record.ID.Versions.V8.CodingKeys;
}

unint64_t sub_2452DF870()
{
  unint64_t result;

  result = qword_257452800;
  if (!qword_257452800)
  {
    result = MEMORY[0x2495330B0](&unk_24538BA4C, &type metadata for Record.ID.Versions.V8.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452800);
  }
  return result;
}

unint64_t sub_2452DF8B8()
{
  unint64_t result;

  result = qword_257452808;
  if (!qword_257452808)
  {
    result = MEMORY[0x2495330B0](&unk_24538BB3C, &type metadata for Record.ID.Versions.V0.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452808);
  }
  return result;
}

unint64_t sub_2452DF900()
{
  unint64_t result;

  result = qword_257452810;
  if (!qword_257452810)
  {
    result = MEMORY[0x2495330B0](&unk_24538BBF4, &type metadata for Record.Value.Versions.V8.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452810);
  }
  return result;
}

unint64_t sub_2452DF948()
{
  unint64_t result;

  result = qword_257452818;
  if (!qword_257452818)
  {
    result = MEMORY[0x2495330B0](&unk_24538BCAC, &type metadata for Record.Value.Versions.V0.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452818);
  }
  return result;
}

unint64_t sub_2452DF990()
{
  unint64_t result;

  result = qword_257452820;
  if (!qword_257452820)
  {
    result = MEMORY[0x2495330B0](&unk_24538BC1C, &type metadata for Record.Value.Versions.V0.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452820);
  }
  return result;
}

unint64_t sub_2452DF9D8()
{
  unint64_t result;

  result = qword_257452828;
  if (!qword_257452828)
  {
    result = MEMORY[0x2495330B0](&unk_24538BC44, &type metadata for Record.Value.Versions.V0.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452828);
  }
  return result;
}

unint64_t sub_2452DFA20()
{
  unint64_t result;

  result = qword_257452830;
  if (!qword_257452830)
  {
    result = MEMORY[0x2495330B0](&unk_24538BB64, &type metadata for Record.Value.Versions.V8.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452830);
  }
  return result;
}

unint64_t sub_2452DFA68()
{
  unint64_t result;

  result = qword_257452838;
  if (!qword_257452838)
  {
    result = MEMORY[0x2495330B0](&unk_24538BB8C, &type metadata for Record.Value.Versions.V8.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452838);
  }
  return result;
}

unint64_t sub_2452DFAB0()
{
  unint64_t result;

  result = qword_257452840;
  if (!qword_257452840)
  {
    result = MEMORY[0x2495330B0](&unk_24538BA74, &type metadata for Record.ID.Versions.V0.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452840);
  }
  return result;
}

unint64_t sub_2452DFAF8()
{
  unint64_t result;

  result = qword_257452848;
  if (!qword_257452848)
  {
    result = MEMORY[0x2495330B0](&unk_24538BA9C, &type metadata for Record.ID.Versions.V0.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452848);
  }
  return result;
}

unint64_t sub_2452DFB40()
{
  unint64_t result;

  result = qword_257452850;
  if (!qword_257452850)
  {
    result = MEMORY[0x2495330B0](&unk_24538B984, &type metadata for Record.ID.Versions.V8.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452850);
  }
  return result;
}

unint64_t sub_2452DFB88()
{
  unint64_t result;

  result = qword_257452858;
  if (!qword_257452858)
  {
    result = MEMORY[0x2495330B0](&unk_24538B9AC, &type metadata for Record.ID.Versions.V8.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452858);
  }
  return result;
}

uint64_t sub_2452DFBCC()
{
  unint64_t v0;

  v0 = sub_245387FD4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_2452DFC10(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_245388274();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2452DFCE0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6F636F746F7270 && a2 == 0xEF6E6F6973726556)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_245388274();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2452DFE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_245387D70();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_245387D4C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_245387950();
  MEMORY[0x24BDAC7A8](v6);
  sub_2452E06B0(0, (unint64_t *)&qword_257450080);
  sub_245387944();
  v8[1] = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_257450050, v5, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450020);
  sub_2452E0BF0((unint64_t *)&qword_257450030, (uint64_t *)&unk_257450020);
  sub_245387E3C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5758], v0);
  result = sub_245387D94();
  qword_25744FAF0 = result;
  return result;
}

uint64_t sub_2452E000C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  NSObject *v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t aBlock;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  void *v28;
  uint64_t (*v29)();
  _QWORD *v30;

  v3 = v2;
  v6 = *v2;
  v7 = sub_245387920();
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_245387950();
  v10 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[2] = 0;
  v2[4] = a1;
  v2[5] = a2;
  sub_2452E06B0(0, (unint64_t *)&qword_257450090);
  v13 = qword_25744FB00;
  swift_bridgeObjectRetain();
  if (v13 != -1)
    swift_once();
  v2[3] = sub_245387DB8();
  swift_getObjectType();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v2;
  v14[3] = a1;
  v14[4] = a2;
  v14[5] = v6;
  v29 = sub_2452E0640;
  v30 = v14;
  aBlock = MEMORY[0x24BDAC760];
  v26 = 1107296256;
  v27 = sub_24525DD34;
  v28 = &block_descriptor_4;
  v15 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24534DA7C();
  sub_24534DA80();
  sub_245387DC4();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v22);
  swift_release();
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_245387DDC();
  swift_unknownObjectRelease();
  v16 = qword_25744FAF0;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v3;
  v17[3] = a1;
  v17[4] = a2;
  v17[5] = v6;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_2452E0694;
  *(_QWORD *)(v18 + 24) = v17;
  v29 = sub_245263BB8;
  v30 = (_QWORD *)v18;
  aBlock = MEMORY[0x24BDAC760];
  v26 = 1107296256;
  v27 = sub_24525B888;
  v28 = &block_descriptor_9;
  v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v16, v19);
  _Block_release(v19);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v19 & 1) == 0)
    return (uint64_t)v3;
  __break(1u);
  return result;
}

uint64_t sub_2452E0334(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_245387818();
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    sub_24538780C();
    swift_bridgeObjectRetain_n();
    v11 = sub_2453877F4();
    v12 = sub_245387D34();
    if (os_log_type_enabled(v11, v12))
    {
      v17 = v6;
      v13 = swift_slowAlloc();
      v16 = a2;
      v14 = (uint8_t *)v13;
      v15 = swift_slowAlloc();
      v19 = v15;
      *(_DWORD *)v14 = 136446210;
      swift_bridgeObjectRetain();
      v18 = sub_2453816D8(v16, a3, &v19);
      v6 = v17;
      sub_245387E0C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_245256000, v11, v12, "Dropping transaction for SIGTERM: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v15, -1, -1);
      MEMORY[0x24953317C](v14, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    byte_257452868 = 1;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    *(_QWORD *)(a1 + 16) = 0;
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2452E0514(uint64_t a1)
{
  uint64_t v2;

  if ((byte_257452868 & 1) != 0)
  {
    *(_QWORD *)(a1 + 16) = 0;
  }
  else
  {
    sub_245387B54();
    v2 = os_transaction_create();
    swift_release();
    *(_QWORD *)(a1 + 16) = v2;
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_2452E057C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 16);
  if (result)
  {
    *(_QWORD *)(a1 + 16) = 0;
    swift_unknownObjectRelease();
    swift_getObjectType();
    return sub_245387DD0();
  }
  return result;
}

uint64_t sub_2452E05B8()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for KeepAliveTransaction()
{
  return objc_opt_self();
}

uint64_t sub_2452E060C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2452E0640()
{
  uint64_t v0;

  return sub_2452E0334(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2452E0694()
{
  uint64_t v0;

  return sub_2452E0514(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2452E06A0()
{
  return swift_deallocObject();
}

uint64_t sub_2452E06B0(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_2452E06E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  double v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t aBlock;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  void *v52;
  uint64_t (*v53)();
  _QWORD *v54;

  v41 = a4;
  v42 = a5;
  v43 = a3;
  v47 = a1;
  v8 = sub_245387920();
  v45 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_245387950();
  v44 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_245387914();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (uint64_t *)((char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = sub_2453879B0();
  v17 = *(_QWORD *)(v40 - 8);
  v18 = MEMORY[0x24BDAC7A8](v40);
  v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v39 = (char *)&v36 - v21;
  type metadata accessor for KeepAliveTransaction();
  v22 = swift_allocObject();
  swift_bridgeObjectRetain();
  result = sub_2452E000C(v47, a2);
  if (a6 <= 0.0)
  {
    v33 = (_QWORD *)swift_allocObject();
    v34 = v42;
    v33[2] = v41;
    v33[3] = v34;
    v33[4] = v22;
    v53 = sub_2452E0BE4;
    v54 = v33;
    aBlock = MEMORY[0x24BDAC760];
    v50 = 1107296256;
    v51 = sub_24525DD34;
    v52 = &block_descriptor_15_0;
    v35 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    sub_245387938();
    v48 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    sub_2452E0BF0((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0);
    sub_245387E3C();
    MEMORY[0x2495320E4](0, v12, v10, v35);
    _Block_release(v35);
    swift_release();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v46);
    return swift_release();
  }
  v38 = v10;
  v47 = v8;
  v24 = a6 * 1000.0;
  if ((~COERCE__INT64(a6 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v24 < 9.22337204e18)
  {
    v25 = (uint64_t)v24;
    sub_245387998();
    *v16 = v25;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BEE5410], v13);
    v26 = v39;
    sub_2453879A4();
    (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
    v37 = *(void (**)(char *, uint64_t))(v17 + 8);
    v27 = v40;
    v37(v20, v40);
    v28 = (_QWORD *)swift_allocObject();
    v29 = v42;
    v28[2] = v41;
    v28[3] = v29;
    v28[4] = v22;
    v53 = sub_2452E0BE4;
    v54 = v28;
    aBlock = MEMORY[0x24BDAC760];
    v50 = 1107296256;
    v51 = sub_24525DD34;
    v52 = &block_descriptor_21;
    v30 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    sub_245387938();
    v48 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    sub_2452E0BF0((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0);
    v31 = v38;
    v32 = v47;
    sub_245387E3C();
    MEMORY[0x2495320B4](v26, v12, v31, v30);
    _Block_release(v30);
    swift_release();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v31, v32);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v46);
    v37(v26, v27);
    return swift_release();
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_2452E0BE4()
{
  return sub_2452E0C60((uint64_t)sub_2452E0CB0);
}

uint64_t sub_2452E0BF0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2495330B0](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_11Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2452E0C60(uint64_t a1)
{
  uint64_t v1;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v3 = *(void (**)(uint64_t, uint64_t))(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  swift_retain();
  v3(a1, v4);
  return swift_release();
}

uint64_t sub_2452E0CB0()
{
  uint64_t v0;

  return sub_2452E057C(v0);
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.handshakeDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2452E0CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  unsigned int (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char v57;
  void (*v58)(char *, uint64_t);
  char *v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int64_t v69;
  uint64_t *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;

  v4 = sub_245387740();
  v72 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v65 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F830);
  MEMORY[0x24BDAC7A8](v68);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ZoneVersion();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v60 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v60 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF88);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v71 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v19);
  v70 = (int64_t *)((char *)&v60 - v22);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v69 = 0;
  v66 = a1;
  v67 = v4;
  v25 = *(_QWORD *)(a1 + 64);
  v24 = a1 + 64;
  v23 = v25;
  v26 = 1 << *(_BYTE *)(v24 - 32);
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v28 = v27 & v23;
  v63 = (unint64_t)(v26 + 63) >> 6;
  v64 = v12;
  v60 = v63 - 1;
  v61 = v24;
  v62 = a2;
  while (1)
  {
    v29 = v71;
    if (v28)
    {
      v73 = (v28 - 1) & v28;
      v30 = __clz(__rbit64(v28)) | (v69 << 6);
LABEL_10:
      v31 = (uint64_t *)(*(_QWORD *)(v66 + 48) + 16 * v30);
      v33 = *v31;
      v32 = v31[1];
      v34 = *(_QWORD *)(v66 + 56) + *(_QWORD *)(v9 + 72) * v30;
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF80);
      sub_2452B792C(v34, (uint64_t)v29 + *(int *)(v35 + 48), (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      *v29 = v33;
      v29[1] = v32;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v29, 0, 1, v35);
      swift_bridgeObjectRetain();
      goto LABEL_29;
    }
    v36 = v69 + 1;
    if (__OFADD__(v69, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v36 < v63)
    {
      v37 = *(_QWORD *)(v61 + 8 * v36);
      if (v37)
        goto LABEL_14;
      v38 = v69 + 2;
      ++v69;
      if (v36 + 1 < v63)
      {
        v37 = *(_QWORD *)(v61 + 8 * v38);
        if (v37)
          goto LABEL_17;
        v69 = v36 + 1;
        if (v36 + 2 < v63)
        {
          v37 = *(_QWORD *)(v61 + 8 * (v36 + 2));
          if (v37)
          {
            v36 += 2;
            goto LABEL_14;
          }
          v38 = v36 + 3;
          v69 = v36 + 2;
          if (v36 + 3 < v63)
            break;
        }
      }
    }
LABEL_28:
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF80);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v29, 1, 1, v39);
    v73 = 0;
LABEL_29:
    v40 = (uint64_t)v29;
    v41 = v70;
    sub_2452BC850(v40, (uint64_t)v70, &qword_25744FF88);
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF80);
    v43 = 1;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v41, 1, v42) == 1)
      return v43;
    v44 = (uint64_t)v41 + *(int *)(v42 + 48);
    v45 = *v41;
    v46 = v41[1];
    sub_2452B7AB8(v44, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    v47 = sub_2452C1D98(v45, v46);
    v49 = v48;
    swift_bridgeObjectRelease();
    if ((v49 & 1) == 0)
      goto LABEL_39;
    sub_2452B792C(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v9 + 72) * v47, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    v50 = (uint64_t)&v7[*(int *)(v68 + 48)];
    sub_2452B792C((uint64_t)v15, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    sub_2452B792C((uint64_t)v17, v50, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
    v52 = v67;
    if (v51((uint64_t)v7, 1, v67) == 1)
    {
      if (v51(v50, 1, v52) != 1)
        goto LABEL_37;
    }
    else
    {
      v53 = (uint64_t)v64;
      sub_2452B792C((uint64_t)v7, (uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      if (v51(v50, 1, v52) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v53, v52);
LABEL_37:
        sub_2452E56E0((uint64_t)v7);
        goto LABEL_38;
      }
      v54 = v72;
      v55 = v7;
      v56 = v65;
      (*(void (**)(char *, uint64_t, uint64_t))(v72 + 32))(v65, v50, v52);
      v57 = sub_245387710();
      v58 = *(void (**)(char *, uint64_t))(v54 + 8);
      v59 = v56;
      v7 = v55;
      a2 = v62;
      v58(v59, v52);
      v58((char *)v53, v52);
      if ((v57 & 1) == 0)
      {
        sub_2452B7B5C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
LABEL_38:
        sub_2452B7B5C((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
LABEL_39:
        sub_2452B7B5C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
        return 0;
      }
    }
    sub_2452B7B5C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    sub_2452B7B5C((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    result = sub_2452B7B5C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    v28 = v73;
  }
  v37 = *(_QWORD *)(v61 + 8 * v38);
  if (v37)
  {
LABEL_17:
    v36 = v38;
LABEL_14:
    v73 = (v37 - 1) & v37;
    v30 = __clz(__rbit64(v37)) + (v36 << 6);
    v69 = v36;
    goto LABEL_10;
  }
  while (1)
  {
    v36 = v38 + 1;
    if (__OFADD__(v38, 1))
      break;
    if (v36 >= v63)
    {
      v69 = v60;
      goto LABEL_28;
    }
    v37 = *(_QWORD *)(v61 + 8 * v36);
    ++v38;
    if (v37)
      goto LABEL_14;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_2452E12C0(uint64_t a1, uint64_t a2)
{
  return sub_2452E12D8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2452C1EB4);
}

uint64_t sub_2452E12CC(uint64_t a1, uint64_t a2)
{
  return sub_2452E12D8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2452C1DFC);
}

uint64_t sub_2452E12D8(uint64_t result, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  char v35;
  BOOL v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;

  if (result == a2)
    return 1;
  v3 = a2;
  v4 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v5 = 0;
  v37 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v38 = (unint64_t)(v6 + 63) >> 6;
  v39 = result;
  while (v8)
  {
    v41 = (v8 - 1) & v8;
    v42 = v5;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_27:
    v15 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 32 * v10);
    v16 = *v15;
    v17 = v15[1];
    v19 = v15[2];
    v18 = v15[3];
    v20 = (uint64_t *)(*(_QWORD *)(v4 + 56) + 48 * v10);
    v22 = *v20;
    v21 = v20[1];
    v24 = v20[2];
    v23 = v20[3];
    v43 = v20[4];
    v44 = v20[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = v3;
    v26 = a3(v16, v17, v19, v18);
    LOBYTE(v19) = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0
      || ((v28 = (_QWORD *)(*(_QWORD *)(v3 + 56) + 48 * v26),
           v29 = v28[2],
           v30 = v28[3],
           v32 = v28[4],
           v31 = v28[5],
           *v28 == v22)
        ? (v33 = v28[1] == v21)
        : (v33 = 0),
          !v33 && (sub_245388274() & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v29 == v24 && v30 == v23)
    {
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v5 = v42;
      v9 = v32 == v43 && v31 == v44;
      v3 = v25;
      v4 = v39;
      v8 = v41;
      if (!v9)
        return 0;
    }
    else
    {
      v35 = sub_245388274();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      if ((v35 & 1) == 0)
        return result;
      v5 = v42;
      v36 = v32 == v43 && v31 == v44;
      v3 = v25;
      v4 = v39;
      v8 = v41;
      if (!v36)
        return result;
    }
  }
  v11 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v11 >= v38)
    return 1;
  v12 = *(_QWORD *)(v37 + 8 * v11);
  v13 = v5 + 1;
  if (v12)
    goto LABEL_26;
  v13 = v5 + 2;
  if (v5 + 2 >= v38)
    return 1;
  v12 = *(_QWORD *)(v37 + 8 * v13);
  if (v12)
    goto LABEL_26;
  v13 = v5 + 3;
  if (v5 + 3 >= v38)
    return 1;
  v12 = *(_QWORD *)(v37 + 8 * v13);
  if (v12)
  {
LABEL_26:
    v41 = (v12 - 1) & v12;
    v42 = v13;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    goto LABEL_27;
  }
  v14 = v5 + 4;
  if (v5 + 4 >= v38)
    return 1;
  v12 = *(_QWORD *)(v37 + 8 * v14);
  if (v12)
  {
    v13 = v5 + 4;
    goto LABEL_26;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v38)
      return 1;
    v12 = *(_QWORD *)(v37 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_26;
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_2452E15C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  char *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  char *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  int64_t v64;
  uint64_t v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  int64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _OWORD v73[10];
  _OWORD v74[11];

  v4 = type metadata accessor for PairingRelationship();
  v71 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v63 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FFA0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x24BDAC7A8](v11);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v68 = (uint64_t)&v63 - v15;
  v69 = 0;
  v16 = *(_QWORD *)(a1 + 64);
  v65 = a1 + 64;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v66 = (unint64_t)(v17 + 63) >> 6;
  v67 = a2;
  v64 = v66 - 1;
  v72 = v13;
  if (!v19)
    goto LABEL_8;
LABEL_6:
  v70 = (v19 - 1) & v19;
  v20 = __clz(__rbit64(v19)) | (v69 << 6);
LABEL_7:
  v21 = *(_QWORD *)(a1 + 56);
  v22 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v20);
  v23 = v22[1];
  *v13 = *v22;
  v13[1] = v23;
  v24 = v21 + *(_QWORD *)(v71 + 72) * v20;
  v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v26 = v24;
  v13 = v72;
  sub_2452B792C(v26, (uint64_t)v72 + *(int *)(v25 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v13, 0, 1, v25);
  swift_bridgeObjectRetain();
  while (1)
  {
    v31 = v68;
    sub_2452BC850((uint64_t)v13, v68, &qword_25744FFA0);
    v32 = (uint64_t *)v31;
    v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
    v34 = 1;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33) == 1)
      return v34;
    v35 = (uint64_t)v32 + *(int *)(v33 + 48);
    v36 = *v32;
    v37 = v32[1];
    sub_2452B7AB8(v35, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v38 = sub_2452C1D98(v36, v37);
    v40 = v39;
    swift_bridgeObjectRelease();
    if ((v40 & 1) == 0)
      goto LABEL_57;
    sub_2452B792C(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v71 + 72) * v38, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    if ((sub_245387710() & 1) == 0)
      goto LABEL_56;
    v41 = &v7[*(int *)(v4 + 20)];
    v42 = *((_OWORD *)v41 + 7);
    v74[6] = *((_OWORD *)v41 + 6);
    v74[7] = v42;
    v43 = *((_OWORD *)v41 + 9);
    v74[8] = *((_OWORD *)v41 + 8);
    v74[9] = v43;
    v44 = *((_OWORD *)v41 + 3);
    v74[2] = *((_OWORD *)v41 + 2);
    v74[3] = v44;
    v45 = *((_OWORD *)v41 + 5);
    v74[4] = *((_OWORD *)v41 + 4);
    v74[5] = v45;
    v46 = *((_OWORD *)v41 + 1);
    v74[0] = *(_OWORD *)v41;
    v74[1] = v46;
    v47 = &v9[*(int *)(v4 + 20)];
    v48 = *((_OWORD *)v47 + 7);
    v73[6] = *((_OWORD *)v47 + 6);
    v73[7] = v48;
    v49 = *((_OWORD *)v47 + 9);
    v73[8] = *((_OWORD *)v47 + 8);
    v73[9] = v49;
    v50 = *((_OWORD *)v47 + 3);
    v73[2] = *((_OWORD *)v47 + 2);
    v73[3] = v50;
    v51 = *((_OWORD *)v47 + 5);
    v73[4] = *((_OWORD *)v47 + 4);
    v73[5] = v51;
    v52 = *((_OWORD *)v47 + 1);
    v73[0] = *(_OWORD *)v47;
    v73[1] = v52;
    if ((_s16ReplicatorEngine16DeviceDescriptorV2eeoiySbAC_ACtFZ_0((uint64_t)v74, (uint64_t)v73) & 1) == 0
      || (sub_2453876BC() & 1) == 0
      || (sub_2453876BC() & 1) == 0)
    {
      goto LABEL_56;
    }
    v53 = a1;
    v54 = *(int *)(v4 + 32);
    v56 = *(_QWORD *)&v7[v54];
    v55 = *(_QWORD *)&v7[v54 + 8];
    v57 = (uint64_t *)&v9[v54];
    v59 = *v57;
    v58 = v57[1];
    switch(v55)
    {
      case 0uLL:
        if (v58)
          goto LABEL_55;
        sub_24526B484(v56, 0);
        v60 = v59;
        v61 = 0;
        goto LABEL_48;
      case 1uLL:
        if (v58 != 1)
          goto LABEL_55;
        sub_24526B484(v56, 1uLL);
        v60 = v59;
        v61 = 1;
        goto LABEL_48;
      case 2uLL:
        if (v58 != 2)
          goto LABEL_55;
        sub_24526B484(v56, 2uLL);
        v60 = v59;
        v61 = 2;
        goto LABEL_48;
    }
    if (v58 < 3)
      break;
    if (v56 == v59 && v55 == v58)
    {
      sub_24526B470(v56, v55);
      sub_24526B470(v56, v55);
      sub_24526B484(v56, v55);
      v60 = v56;
      v61 = v55;
LABEL_48:
      sub_24526B484(v60, v61);
      a1 = v53;
      a2 = v67;
      goto LABEL_49;
    }
    v62 = sub_245388274();
    sub_24526B470(v56, v55);
    sub_24526B470(v59, v58);
    sub_24526B484(v56, v55);
    sub_24526B484(v59, v58);
    a1 = v53;
    a2 = v67;
    if ((v62 & 1) == 0)
      goto LABEL_56;
LABEL_49:
    if ((sub_2453876BC() & 1) == 0)
      goto LABEL_56;
    sub_2452B7B5C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    result = sub_2452B7B5C((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v13 = v72;
    v19 = v70;
    if (v70)
      goto LABEL_6;
LABEL_8:
    v27 = v69 + 1;
    if (__OFADD__(v69, 1))
    {
      __break(1u);
      goto LABEL_61;
    }
    if (v27 < v66)
    {
      v28 = *(_QWORD *)(v65 + 8 * v27);
      if (v28)
        goto LABEL_11;
      v29 = v69 + 2;
      ++v69;
      if (v27 + 1 < v66)
      {
        v28 = *(_QWORD *)(v65 + 8 * v29);
        if (v28)
          goto LABEL_14;
        v69 = v27 + 1;
        if (v27 + 2 < v66)
        {
          v28 = *(_QWORD *)(v65 + 8 * (v27 + 2));
          if (v28)
          {
            v27 += 2;
            goto LABEL_11;
          }
          v69 = v27 + 2;
          if (v27 + 3 < v66)
          {
            v28 = *(_QWORD *)(v65 + 8 * (v27 + 3));
            if (v28)
            {
              v27 += 3;
              goto LABEL_11;
            }
            v29 = v27 + 4;
            v69 = v27 + 3;
            if (v27 + 4 < v66)
            {
              v28 = *(_QWORD *)(v65 + 8 * v29);
              if (!v28)
              {
                while (1)
                {
                  v27 = v29 + 1;
                  if (__OFADD__(v29, 1))
                    break;
                  if (v27 >= v66)
                  {
                    v69 = v64;
                    goto LABEL_28;
                  }
                  v28 = *(_QWORD *)(v65 + 8 * v27);
                  ++v29;
                  if (v28)
                    goto LABEL_11;
                }
LABEL_61:
                __break(1u);
                return result;
              }
LABEL_14:
              v27 = v29;
LABEL_11:
              v69 = v27;
              v70 = (v28 - 1) & v28;
              v20 = __clz(__rbit64(v28)) + (v27 << 6);
              goto LABEL_7;
            }
          }
        }
      }
    }
LABEL_28:
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v13, 1, 1, v30);
    v70 = 0;
  }
LABEL_55:
  sub_24526B470(v56, v55);
  sub_24526B470(v59, v58);
  sub_24526B484(v56, v55);
  sub_24526B484(v59, v58);
LABEL_56:
  sub_2452B7B5C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
LABEL_57:
  sub_2452B7B5C((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  return 0;
}

void sub_2452E1C38(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2452E1C6C()
{
  sub_245387B6C();
  return swift_bridgeObjectRelease();
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ZoneVersionAdvertisement.DeviceDescriptor.id.modify())()
{
  return nullsub_1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ZoneVersionAdvertisement.DeviceDescriptor.name.modify())()
{
  return nullsub_1;
}

__n128 ZoneVersionAdvertisement.DeviceDescriptor.protocolVersion.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = v1[2];
  *a1 = result;
  return result;
}

__n128 ZoneVersionAdvertisement.DeviceDescriptor.protocolVersion.setter(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  result = *a1;
  v1[2] = *a1;
  return result;
}

uint64_t (*ZoneVersionAdvertisement.DeviceDescriptor.protocolVersion.modify())()
{
  return nullsub_1;
}

void ZoneVersionAdvertisement.DeviceDescriptor.deviceType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 48);
}

_BYTE *ZoneVersionAdvertisement.DeviceDescriptor.deviceType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = *result;
  return result;
}

uint64_t (*ZoneVersionAdvertisement.DeviceDescriptor.deviceType.modify())()
{
  return nullsub_1;
}

__n128 ZoneVersionAdvertisement.DeviceDescriptor.screenDescriptor.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;
  __n128 result;
  __int128 v5;

  v2 = *(_BYTE *)(v1 + 88);
  v3 = *(_BYTE *)(v1 + 89);
  result = *(__n128 *)(v1 + 56);
  v5 = *(_OWORD *)(v1 + 72);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 32) = v2;
  *(_BYTE *)(a1 + 33) = v3;
  return result;
}

__n128 ZoneVersionAdvertisement.DeviceDescriptor.screenDescriptor.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  char v3;
  __n128 result;
  __int128 v5;

  v2 = *(_BYTE *)(a1 + 32);
  v3 = *(_BYTE *)(a1 + 33);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 56) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 72) = v5;
  *(_BYTE *)(v1 + 88) = v2;
  *(_BYTE *)(v1 + 89) = v3;
  return result;
}

uint64_t (*ZoneVersionAdvertisement.DeviceDescriptor.screenDescriptor.modify())()
{
  return nullsub_1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.zones.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.zones.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 96) = a1;
  return result;
}

uint64_t (*ZoneVersionAdvertisement.DeviceDescriptor.zones.modify())()
{
  return nullsub_1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.messageTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.messageTypes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 104) = a1;
  return result;
}

uint64_t (*ZoneVersionAdvertisement.DeviceDescriptor.messageTypes.modify())()
{
  return nullsub_1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.idsIdentityBlob.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  sub_245261C30(v1, *(_QWORD *)(v0 + 120));
  return v1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.idsIdentityBlob.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_24525FFF8(*(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120));
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return result;
}

uint64_t (*ZoneVersionAdvertisement.DeviceDescriptor.idsIdentityBlob.modify())()
{
  return nullsub_1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.marketingName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.marketingName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = a2;
  return result;
}

uint64_t (*ZoneVersionAdvertisement.DeviceDescriptor.marketingName.modify())()
{
  return nullsub_1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.productType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.productType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 144) = a1;
  *(_QWORD *)(v2 + 152) = a2;
  return result;
}

uint64_t (*ZoneVersionAdvertisement.DeviceDescriptor.productType.modify())()
{
  return nullsub_1;
}

BOOL ZoneVersionAdvertisement.DeviceDescriptor.isSource.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 48) == 2;
}

uint64_t ZoneVersionAdvertisement.description.getter()
{
  sub_245387EA8();
  sub_245387B90();
  sub_245387F5C();
  sub_245387B90();
  type metadata accessor for ZoneVersion();
  swift_bridgeObjectRetain();
  sub_245387A70();
  sub_245387B90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t ZoneVersionAdvertisement.remoteDevice.getter@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[2];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v2 = v1[7];
  v3 = v1[5];
  v22 = v1[6];
  v23 = v2;
  v4 = v1[7];
  v5 = v1[9];
  v24 = v1[8];
  v6 = v24;
  v25 = v5;
  v7 = v1[3];
  v9 = v1[1];
  v18 = v1[2];
  v8 = v18;
  v19 = v7;
  v10 = v1[3];
  v11 = v1[5];
  v20 = v1[4];
  v12 = v20;
  v21 = v11;
  v13 = v1[1];
  v17[0] = *v1;
  v14 = v17[0];
  v17[1] = v13;
  a1[6] = v22;
  a1[7] = v4;
  v15 = v1[9];
  a1[8] = v6;
  a1[9] = v15;
  a1[2] = v8;
  a1[3] = v10;
  a1[4] = v12;
  a1[5] = v3;
  *a1 = v14;
  a1[1] = v9;
  return sub_24526432C((uint64_t)v17);
}

uint64_t ZoneVersionAdvertisement.zoneVersions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static ZoneVersionAdvertisement.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v15[10];
  _OWORD v16[10];

  v2 = *(_OWORD *)(a1 + 112);
  v16[6] = *(_OWORD *)(a1 + 96);
  v16[7] = v2;
  v3 = *(_OWORD *)(a1 + 144);
  v16[8] = *(_OWORD *)(a1 + 128);
  v16[9] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v16[2] = *(_OWORD *)(a1 + 32);
  v16[3] = v4;
  v5 = *(_OWORD *)(a1 + 80);
  v16[4] = *(_OWORD *)(a1 + 64);
  v16[5] = v5;
  v6 = *(_OWORD *)(a1 + 16);
  v16[0] = *(_OWORD *)a1;
  v16[1] = v6;
  v7 = *(_QWORD *)(a1 + 160);
  v8 = *(_OWORD *)(a2 + 112);
  v15[6] = *(_OWORD *)(a2 + 96);
  v15[7] = v8;
  v9 = *(_OWORD *)(a2 + 144);
  v15[8] = *(_OWORD *)(a2 + 128);
  v15[9] = v9;
  v10 = *(_OWORD *)(a2 + 48);
  v15[2] = *(_OWORD *)(a2 + 32);
  v15[3] = v10;
  v11 = *(_OWORD *)(a2 + 80);
  v15[4] = *(_OWORD *)(a2 + 64);
  v15[5] = v11;
  v12 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v12;
  v13 = *(_QWORD *)(a2 + 160);
  if ((_s16ReplicatorEngine24ZoneVersionAdvertisementV16DeviceDescriptorV2eeoiySbAE_AEtFZ_0((uint64_t)v16, (uint64_t)v15) & 1) != 0)
    return sub_2452E0CFC(v7, v13);
  else
    return 0;
}

uint64_t sub_2452E2364(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v15[10];
  _OWORD v16[10];

  v2 = *(_OWORD *)(a1 + 112);
  v16[6] = *(_OWORD *)(a1 + 96);
  v16[7] = v2;
  v3 = *(_OWORD *)(a1 + 144);
  v16[8] = *(_OWORD *)(a1 + 128);
  v16[9] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v16[2] = *(_OWORD *)(a1 + 32);
  v16[3] = v4;
  v5 = *(_OWORD *)(a1 + 80);
  v16[4] = *(_OWORD *)(a1 + 64);
  v16[5] = v5;
  v6 = *(_OWORD *)(a1 + 16);
  v16[0] = *(_OWORD *)a1;
  v16[1] = v6;
  v7 = *(_QWORD *)(a1 + 160);
  v8 = *(_OWORD *)(a2 + 112);
  v15[6] = *(_OWORD *)(a2 + 96);
  v15[7] = v8;
  v9 = *(_OWORD *)(a2 + 144);
  v15[8] = *(_OWORD *)(a2 + 128);
  v15[9] = v9;
  v10 = *(_OWORD *)(a2 + 48);
  v15[2] = *(_OWORD *)(a2 + 32);
  v15[3] = v10;
  v11 = *(_OWORD *)(a2 + 80);
  v15[4] = *(_OWORD *)(a2 + 64);
  v15[5] = v11;
  v12 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v12;
  v13 = *(_QWORD *)(a2 + 160);
  if ((_s16ReplicatorEngine24ZoneVersionAdvertisementV16DeviceDescriptorV2eeoiySbAE_AEtFZ_0((uint64_t)v16, (uint64_t)v15) & 1) != 0)
    return sub_2452E0CFC(v7, v13);
  else
    return 0;
}

ReplicatorEngine::ZoneVersionAdvertisement::DeviceDescriptor::CodingKeys_optional __swiftcall ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReplicatorEngine::ZoneVersionAdvertisement::DeviceDescriptor::CodingKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_245387FD4();
  result.value = swift_bridgeObjectRelease();
  v5 = 11;
  if (v3 < 0xB)
    v5 = v3;
  *v2 = v5;
  return result;
}

ReplicatorEngine::ZoneVersionAdvertisement::DeviceDescriptor::CodingKeys_optional __swiftcall ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  _BYTE *v1;
  _BYTE *v2;
  ReplicatorEngine::ZoneVersionAdvertisement::DeviceDescriptor::CodingKeys_optional result;
  char v4;

  v2 = v1;
  result.value = ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys.init(rawValue:)(stringValue).value;
  *v2 = v4;
  return result;
}

ReplicatorEngine::ZoneVersionAdvertisement::DeviceDescriptor::CodingKeys_optional __swiftcall ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 11;
  return (ReplicatorEngine::ZoneVersionAdvertisement::DeviceDescriptor::CodingKeys_optional)intValue;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2452E24DC + 4 * byte_24538BE9B[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_2452E24DC()
{
  return 1701667182;
}

uint64_t sub_2452E24EC()
{
  return 0x6C6F636F746F7270;
}

uint64_t sub_2452E2510()
{
  return 0x656372756F537369;
}

uint64_t sub_2452E2528()
{
  return 0x7954656369766564;
}

unint64_t sub_2452E2544()
{
  return 0xD000000000000010;
}

uint64_t sub_2452E2560()
{
  return 0x73656E6F7ALL;
}

uint64_t sub_2452E2574()
{
  return 0x546567617373656DLL;
}

uint64_t sub_2452E2594()
{
  return 0x6E6974656B72616DLL;
}

uint64_t sub_2452E25B8()
{
  return 0x54746375646F7270;
}

uint64_t sub_2452E25D8()
{
  return 0x746E656449736469;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys.stringValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2452E2620 + 4 * byte_24538BEA6[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_2452E2620()
{
  return 1701667182;
}

uint64_t sub_2452E2630()
{
  return 0x6C6F636F746F7270;
}

uint64_t sub_2452E2654()
{
  return 0x656372756F537369;
}

uint64_t sub_2452E266C()
{
  return 0x7954656369766564;
}

unint64_t sub_2452E2688()
{
  return 0xD000000000000010;
}

uint64_t sub_2452E26A4()
{
  return 0x73656E6F7ALL;
}

uint64_t sub_2452E26B8()
{
  return 0x546567617373656DLL;
}

uint64_t sub_2452E26D8()
{
  return 0x6E6974656B72616DLL;
}

uint64_t sub_2452E26FC()
{
  return 0x54746375646F7270;
}

uint64_t sub_2452E271C()
{
  return 0x746E656449736469;
}

void sub_2452E2740(char *a1)
{
  sub_24536DA20(*a1);
}

uint64_t sub_2452E274C()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_24538843C();
  sub_2452E1C38((uint64_t)v3, v1);
  return sub_245388478();
}

void sub_2452E2790(uint64_t a1)
{
  char *v1;

  sub_2452E1C38(a1, *v1);
}

uint64_t sub_2452E2798()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_24538843C();
  sub_2452E1C38((uint64_t)v3, v1);
  return sub_245388478();
}

ReplicatorEngine::ZoneVersionAdvertisement::DeviceDescriptor::CodingKeys_optional sub_2452E27D8(Swift::String *a1)
{
  return ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys.init(rawValue:)(*a1);
}

uint64_t sub_2452E27E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ReplicatorEngine::ZoneVersionAdvertisement::DeviceDescriptor::CodingKeys_optional sub_2452E280C@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  ReplicatorEngine::ZoneVersionAdvertisement::DeviceDescriptor::CodingKeys_optional result;
  char v5;

  result.value = ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

void sub_2452E2840(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_2452E284C()
{
  sub_2452E4AA8();
  return sub_2453884D8();
}

uint64_t sub_2452E2874()
{
  sub_2452E4AA8();
  return sub_2453884E4();
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  _BYTE v73[7];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char v79;
  int v80;
  __int16 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  int v92;
  __int16 v93;
  char v94;
  _DWORD v95[3];
  _QWORD *v96;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257450198);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = 1;
  v9 = a1[3];
  v96 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_2452E4AA8();
  sub_245388490();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
    sub_24525FFF8(0, 0xF000000000000000);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v55 = v6;
    LOBYTE(v66) = 0;
    v10 = sub_24538801C();
    v11 = v5;
    v13 = v12;
    v54 = v10;
    LOBYTE(v66) = 1;
    v14 = sub_24538801C();
    v16 = v15;
    v53 = v14;
    LOBYTE(v56) = 2;
    sub_2452CC378();
    sub_245388034();
    v52 = v16;
    v17 = v66;
    v18 = v67;
    LOBYTE(v56) = 4;
    sub_2452CC3BC();
    sub_245388004();
    v50 = v18;
    v51 = v17;
    v19 = v66;
    if (v66 == 6)
    {
      LOBYTE(v66) = 3;
      if ((sub_245388028() & 1) != 0)
        v19 = 2;
      else
        v19 = 1;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF30);
    LOBYTE(v56) = 6;
    sub_2452CC400(&qword_25744FF40, (uint64_t (*)(void))sub_2452CC47C, (uint64_t (*)(void))sub_2452CC4C0, MEMORY[0x24BEE04E0]);
    sub_245388004();
    v21 = v66;
    if (!v66)
    {
      v21 = sub_2452E3170((uint64_t)&unk_251642080, (void (*)(_QWORD **__return_ptr, uint64_t, uint64_t))sub_2452E3100, 0, v53, v52, (void (*)(_QWORD **__return_ptr, _QWORD *))sub_2452E3104, 0, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_2452C1EB4, (void (*)(void))sub_2452C3068, (uint64_t)&type metadata for Zone.ID, (void (*)(void))sub_2452C7D4C);
      swift_arrayDestroy();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF10);
    LOBYTE(v56) = 7;
    sub_2452CC0A0(&qword_25744FF28, (uint64_t (*)(void))sub_2452CC504, (uint64_t (*)(void))sub_2452CC548, MEMORY[0x24BEE04E0]);
    sub_245388004();
    if (v66)
    {
      *((_QWORD *)&v49 + 1) = v66;
    }
    else
    {
      *((_QWORD *)&v49 + 1) = sub_2452E3170((uint64_t)&unk_251642020, (void (*)(_QWORD **__return_ptr, uint64_t, uint64_t))sub_2452E3100, 0, v53, v52, (void (*)(_QWORD **__return_ptr, _QWORD *))sub_2452E3104, 0, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_2452C1DFC, (void (*)(void))sub_2452C33D8, (uint64_t)&type metadata for MessageType.ID, (void (*)(void))sub_2452C7D58);
      swift_arrayDestroy();
    }
    LOBYTE(v56) = 5;
    sub_2452CC58C();
    sub_245388004();
    *(_QWORD *)&v49 = v21;
    v46 = v67;
    v47 = v66;
    v44 = v69;
    v45 = v68;
    v43 = v70;
    v48 = BYTE1(v70);
    LOBYTE(v66) = 9;
    v22 = sub_245387FF8();
    v24 = v23;
    v41 = v22;
    v42 = v13;
    LOBYTE(v66) = 10;
    v40 = sub_245387FF8();
    v26 = v25;
    v94 = v48;
    LOBYTE(v66) = 8;
    sub_2452CC5D0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v39 = v11;
    sub_245388004();
    (*(void (**)(char *, unint64_t))(v55 + 8))(v8, v39);
    v27 = v90;
    v28 = v91;
    sub_245261C30(v90, v91);
    sub_24525FFF8(0, 0xF000000000000000);
    v29 = v42;
    *(_QWORD *)&v56 = v54;
    *((_QWORD *)&v56 + 1) = v42;
    *(_QWORD *)&v57 = v53;
    *((_QWORD *)&v57 + 1) = v52;
    *(_QWORD *)&v58 = v51;
    *((_QWORD *)&v58 + 1) = v50;
    HIDWORD(v38) = v19;
    LOBYTE(v59) = v19;
    *((_QWORD *)&v59 + 1) = v47;
    *(_QWORD *)&v60 = v46;
    *((_QWORD *)&v60 + 1) = v45;
    *(_QWORD *)&v61 = v44;
    BYTE8(v61) = v43;
    BYTE9(v61) = v48;
    v30 = v49;
    v62 = v49;
    v55 = v27;
    *(_QWORD *)&v63 = v27;
    *((_QWORD *)&v63 + 1) = v28;
    v39 = v28;
    *(_QWORD *)&v64 = v41;
    *((_QWORD *)&v64 + 1) = v24;
    *(_QWORD *)&v65 = v40;
    *((_QWORD *)&v65 + 1) = v26;
    sub_24526432C((uint64_t)&v56);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24525FFF8(v27, v28);
    swift_bridgeObjectRelease();
    v31 = v52;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = *((_QWORD *)&v49 + 1);
    swift_bridgeObjectRelease();
    v33 = v63;
    a2[6] = v62;
    a2[7] = v33;
    v34 = v65;
    a2[8] = v64;
    a2[9] = v34;
    v35 = v59;
    a2[2] = v58;
    a2[3] = v35;
    v36 = v61;
    a2[4] = v60;
    a2[5] = v36;
    v37 = v57;
    *a2 = v56;
    a2[1] = v37;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
    v66 = v54;
    v67 = v29;
    v68 = v53;
    v69 = v31;
    v70 = v51;
    v71 = v50;
    v72 = BYTE4(v38);
    *(_DWORD *)v73 = v95[0];
    *(_DWORD *)&v73[3] = *(_DWORD *)((char *)v95 + 3);
    v74 = v47;
    v75 = v46;
    v76 = v45;
    v77 = v44;
    v78 = v43;
    v79 = v94;
    v81 = v93;
    v80 = v92;
    v82 = v30;
    v83 = v32;
    v84 = v55;
    v85 = v39;
    v86 = v41;
    v87 = v24;
    v88 = v40;
    v89 = v26;
    return sub_245269928((uint64_t)&v66);
  }
}

uint64_t sub_2452E3108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  a3[2] = 0xD000000000000011;
  a3[3] = 0x8000000245393670;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2452E3130@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *(_QWORD *)a2 = *a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 32) = xmmword_24538C360;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2452E3170(uint64_t a1, void (*a2)(_QWORD **__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD **__return_ptr, _QWORD *), uint64_t a7, uint64_t (*a8)(_QWORD *, uint64_t, uint64_t, uint64_t), void (*a9)(void), uint64_t a10, void (*a11)(void))
{
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char isUniquelyReferenced_nonNull_native;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  char v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[4];
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
    return MEMORY[0x24BEE4B00];
  swift_bridgeObjectRetain();
  v12 = (_QWORD *)MEMORY[0x24BEE4B00];
  v13 = 40;
  while (1)
  {
    v39 = v13;
    v40 = v11;
    swift_bridgeObjectRetain();
    a2(&v47, a4, a5);
    v16 = v47;
    v15 = v48;
    v18 = v49;
    v17 = v50;
    v46[0] = v47;
    v46[1] = v48;
    v46[2] = v49;
    v46[3] = v50;
    a6(&v47, v46);
    v19 = v47;
    v41 = v48;
    v42 = v49;
    v43 = v50;
    v44 = v51;
    v45 = v52;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v47 = v12;
    v22 = a8(v16, v15, v18, v17);
    v23 = v12[2];
    v24 = (v21 & 1) == 0;
    if (__OFADD__(v23, v24))
      break;
    v25 = v21;
    if (v12[3] >= v23 + v24)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v12 = v47;
        if ((v21 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        a11();
        v12 = v47;
        if ((v25 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      a9();
      v26 = a8(v16, v15, v18, v17);
      if ((v25 & 1) != (v27 & 1))
        goto LABEL_21;
      v22 = v26;
      v12 = v47;
      if ((v25 & 1) != 0)
      {
LABEL_3:
        v14 = (_QWORD *)(v12[7] + 48 * v22);
        *v14 = v19;
        v14[1] = v41;
        v14[2] = v42;
        v14[3] = v43;
        v14[4] = v44;
        v14[5] = v45;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
    }
    v12[(v22 >> 6) + 8] |= 1 << v22;
    v28 = (_QWORD *)(v12[6] + 32 * v22);
    *v28 = v16;
    v28[1] = v15;
    v28[2] = v18;
    v28[3] = v17;
    v29 = (_QWORD *)(v12[7] + 48 * v22);
    *v29 = v19;
    v29[1] = v41;
    v29[2] = v42;
    v29[3] = v43;
    v29[4] = v44;
    v29[5] = v45;
    v30 = v12[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
      goto LABEL_20;
    v12[2] = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = v39 + 16;
    v11 = v40 - 1;
    if (v40 == 1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v12;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_2453883DC();
  __break(1u);
  return result;
}

uint64_t ZoneVersionAdvertisement.DeviceDescriptor.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  int v46;
  char v47;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574501F0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = *(_QWORD *)(v1 + 16);
  v37 = *(_QWORD *)(v1 + 24);
  v38 = v6;
  v7 = *(_QWORD *)(v1 + 32);
  v35 = *(_QWORD *)(v1 + 40);
  v36 = v7;
  v46 = *(unsigned __int8 *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 64);
  v28 = *(_QWORD *)(v1 + 56);
  v29 = v8;
  v30 = *(_QWORD *)(v1 + 72);
  v33 = *(_QWORD *)(v1 + 80);
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 88);
  v31 = *(unsigned __int8 *)(v1 + 89);
  v32 = v7;
  v9 = *(_QWORD *)(v1 + 96);
  v26 = *(_QWORD *)(v1 + 104);
  v27 = v9;
  v10 = *(_QWORD *)(v1 + 120);
  v24 = *(_QWORD *)(v1 + 112);
  v25 = v10;
  v22 = *(_QWORD *)(v1 + 128);
  v23 = *(_QWORD *)(v1 + 136);
  v11 = *(_QWORD *)(v1 + 152);
  v34 = *(_QWORD *)(v1 + 144);
  v12 = a1[3];
  v13 = a1;
  v14 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v13, v12);
  sub_2452E4AA8();
  sub_24538849C();
  LOBYTE(v40) = 0;
  v15 = v39;
  sub_2453880A0();
  if (!v15)
  {
    v17 = v35;
    v16 = v36;
    v18 = v46;
    v39 = v11;
    v19 = v34;
    LOBYTE(v40) = 1;
    sub_2453880A0();
    v40 = v16;
    v41 = v17;
    v47 = 2;
    sub_2452CBF4C();
    sub_2453880B8();
    LOBYTE(v40) = 3;
    sub_2453880AC();
    LOBYTE(v40) = v18;
    v47 = 4;
    sub_2452CBF90();
    sub_2453880B8();
    v40 = v28;
    v41 = v29;
    v42 = v30;
    v43 = v33;
    v44 = v32;
    v45 = v31;
    v47 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744F8F0);
    sub_2452E4AEC(&qword_25744F8F8, &qword_25744F8F0, (uint64_t (*)(void))sub_2452CBFD4);
    sub_2453880B8();
    v40 = v27;
    v47 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF30);
    sub_2452CC400(&qword_25744FF38, (uint64_t (*)(void))sub_2452CC018, (uint64_t (*)(void))sub_2452CC05C, MEMORY[0x24BEE04C0]);
    sub_2453880B8();
    v40 = v26;
    v47 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF10);
    sub_2452CC0A0((unint64_t *)&unk_25744FF18, (uint64_t (*)(void))sub_2452CC11C, (uint64_t (*)(void))sub_2452CC160, MEMORY[0x24BEE04C0]);
    sub_2453880B8();
    v40 = v24;
    v41 = v25;
    v47 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744F698);
    sub_2452E4AEC((unint64_t *)&unk_25744F6A0, &qword_25744F698, (uint64_t (*)(void))sub_2452CC1A4);
    sub_2453880B8();
    v40 = v22;
    v41 = v23;
    v47 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257451B90);
    sub_2452E4B50();
    sub_2453880B8();
    v40 = v19;
    v41 = v39;
    v47 = 10;
    sub_2453880B8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v14, v3);
}

uint64_t sub_2452E38E0@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return ZoneVersionAdvertisement.DeviceDescriptor.init(from:)(a1, a2);
}

uint64_t sub_2452E38F4(_QWORD *a1)
{
  return ZoneVersionAdvertisement.DeviceDescriptor.encode(to:)(a1);
}

ReplicatorEngine::ZoneVersionAdvertisement::CodingKeys_optional __swiftcall ZoneVersionAdvertisement.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ReplicatorEngine::ZoneVersionAdvertisement::CodingKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_245387FD4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

ReplicatorEngine::ZoneVersionAdvertisement::CodingKeys_optional __swiftcall ZoneVersionAdvertisement.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ReplicatorEngine::ZoneVersionAdvertisement::CodingKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_245387FD4();
  result.value = swift_bridgeObjectRelease();
  if (v3)
  {
    if (v3 == 1)
      v5 = 1;
    else
      v5 = 2;
  }
  else
  {
    v5 = 0;
  }
  *v2 = v5;
  return result;
}

ReplicatorEngine::ZoneVersionAdvertisement::CodingKeys_optional __swiftcall ZoneVersionAdvertisement.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 2;
  return (ReplicatorEngine::ZoneVersionAdvertisement::CodingKeys_optional)intValue;
}

uint64_t ZoneVersionAdvertisement.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t ZoneVersionAdvertisement.CodingKeys.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x73726556656E6F7ALL;
  else
    return 0x654465746F6D6572;
}

uint64_t ZoneVersionAdvertisement.CodingKeys.stringValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x73726556656E6F7ALL;
  else
    return 0x654465746F6D6572;
}

uint64_t sub_2452E3A84(char *a1, char *a2)
{
  return sub_24536DD4C(*a1, *a2);
}

uint64_t sub_2452E3A90()
{
  sub_24538843C();
  sub_245387B6C();
  swift_bridgeObjectRelease();
  return sub_245388478();
}

uint64_t sub_2452E3B20()
{
  sub_245387B6C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2452E3B8C()
{
  sub_24538843C();
  sub_245387B6C();
  swift_bridgeObjectRelease();
  return sub_245388478();
}

ReplicatorEngine::ZoneVersionAdvertisement::CodingKeys_optional sub_2452E3C18(Swift::String *a1)
{
  return ZoneVersionAdvertisement.CodingKeys.init(rawValue:)(*a1);
}

void sub_2452E3C24(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x654465746F6D6572;
  if (*v1)
    v2 = 0x73726556656E6F7ALL;
  v3 = 0xEC00000065636976;
  if (*v1)
    v3 = 0xEC000000736E6F69;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2452E3C74()
{
  _BYTE *v0;

  if (*v0)
    return 0x73726556656E6F7ALL;
  else
    return 0x654465746F6D6572;
}

uint64_t sub_2452E3CC4()
{
  sub_2452E4BAC();
  return sub_2453884D8();
}

uint64_t sub_2452E3CEC()
{
  sub_2452E4BAC();
  return sub_2453884E4();
}

uint64_t ZoneVersionAdvertisement.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v17[8];
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v40 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257450190);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452E4BAC();
  sub_245388490();
  if (!v2)
  {
    v8 = v5;
    v9 = v40;
    v29 = 0;
    sub_2452E4BF0();
    sub_245388034();
    v25 = v36;
    v26 = v37;
    v27 = v38;
    v28 = v39;
    v21 = v32;
    v22 = v33;
    v23 = v34;
    v24 = v35;
    v19 = v30;
    v20 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF58);
    v17[7] = 1;
    sub_2452E4C34();
    sub_245388034();
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v7, v4);
    v10 = v18;
    v11 = v26;
    *(_OWORD *)(v9 + 96) = v25;
    *(_OWORD *)(v9 + 112) = v11;
    v12 = v28;
    *(_OWORD *)(v9 + 128) = v27;
    *(_OWORD *)(v9 + 144) = v12;
    v13 = v22;
    *(_OWORD *)(v9 + 32) = v21;
    *(_OWORD *)(v9 + 48) = v13;
    v14 = v24;
    *(_OWORD *)(v9 + 64) = v23;
    *(_OWORD *)(v9 + 80) = v14;
    v15 = v20;
    *(_OWORD *)v9 = v19;
    *(_OWORD *)(v9 + 16) = v15;
    *(_QWORD *)(v9 + 160) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t ZoneVersionAdvertisement.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v15;
  char v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574501E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *((_QWORD *)v3 + 20);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452E4BAC();
  sub_24538849C();
  v9 = v3[7];
  v23 = v3[6];
  v24 = v9;
  v10 = v3[9];
  v25 = v3[8];
  v26 = v10;
  v11 = v3[3];
  v19 = v3[2];
  v20 = v11;
  v12 = v3[5];
  v21 = v3[4];
  v22 = v12;
  v13 = v3[1];
  v17 = *v3;
  v18 = v13;
  v16 = 0;
  sub_2452E4CB0();
  sub_2453880B8();
  if (!v2)
  {
    *(_QWORD *)&v17 = v27;
    v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF58);
    sub_2452E4CF4();
    sub_2453880B8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2452E4090@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ZoneVersionAdvertisement.init(from:)(a1, a2);
}

uint64_t sub_2452E40A4(_QWORD *a1)
{
  return ZoneVersionAdvertisement.encode(to:)(a1);
}

void sub_2452E40B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_2452E4118(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x2452E42FCLL);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_2452E4320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_2452E40B8((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_2452E43F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_2453874AC();
  v11 = result;
  if (result)
  {
    result = sub_2453874D0();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_2453874C4();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_2452E40B8(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_2452E44A8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_2452E44F4()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_2452E4528 + *((int *)qword_2452E4700 + (v0 >> 62))))();
}

uint64_t sub_2452E4538@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t _s16ReplicatorEngine24ZoneVersionAdvertisementV16DeviceDescriptorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  double v16;
  double v17;
  double v18;
  double v19;
  char v20;
  uint64_t result;
  char v22;
  unint64_t v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a1 + 48);
  v8 = *(double *)(a1 + 56);
  v7 = *(double *)(a1 + 64);
  v10 = *(double *)(a1 + 72);
  v9 = *(double *)(a1 + 80);
  v40 = *(_BYTE *)(a1 + 88);
  v45 = *(_BYTE *)(a1 + 89);
  v44 = *(_QWORD *)(a1 + 96);
  v42 = *(_QWORD *)(a1 + 104);
  v36 = *(_QWORD *)(a1 + 112);
  v38 = *(_QWORD *)(a1 + 120);
  v32 = *(_QWORD *)(a1 + 128);
  v33 = *(_QWORD *)(a1 + 136);
  v28 = *(_QWORD *)(a1 + 144);
  v29 = *(_QWORD *)(a1 + 152);
  v12 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v14 = *(_QWORD *)(a2 + 32);
  v13 = *(_QWORD *)(a2 + 40);
  v15 = *(unsigned __int8 *)(a2 + 48);
  v17 = *(double *)(a2 + 56);
  v16 = *(double *)(a2 + 64);
  v19 = *(double *)(a2 + 72);
  v18 = *(double *)(a2 + 80);
  v39 = *(_BYTE *)(a2 + 88);
  v46 = *(_BYTE *)(a2 + 89);
  v43 = *(_QWORD *)(a2 + 96);
  v41 = *(_QWORD *)(a2 + 104);
  v37 = *(_QWORD *)(a2 + 120);
  v31 = *(_QWORD *)(a2 + 128);
  v34 = *(_QWORD *)(a2 + 136);
  v35 = *(_QWORD *)(a2 + 112);
  v27 = *(_QWORD *)(a2 + 144);
  v30 = *(_QWORD *)(a2 + 152);
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    v20 = sub_245388274();
    result = 0;
    if ((v20 & 1) == 0)
      return result;
  }
  if (v2 == v12 && v4 == v11)
  {
    result = 0;
  }
  else
  {
    v22 = sub_245388274();
    result = 0;
    if ((v22 & 1) == 0)
      return result;
  }
  if (v3 != v14 || v5 != v13 || v6 != v15)
    return result;
  if ((v45 & 1) != 0)
  {
    if ((v46 & 1) == 0)
      return 0;
  }
  else
  {
    if ((v46 & 1) != 0)
      return 0;
    result = 0;
    if (v8 != v17 || v7 != v16 || v10 != v19)
      return result;
    if ((v40 & 1) != 0)
    {
      if ((v39 & 1) == 0)
        return 0;
    }
    else
    {
      result = 0;
      if ((v39 & 1) != 0 || v9 != v18)
        return result;
    }
  }
  if ((sub_2452E12D8(v44, v43, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2452C1EB4) & 1) == 0
    || (sub_2452E12D8(v42, v41, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2452C1DFC) & 1) == 0)
  {
    return 0;
  }
  if (v38 >> 60 == 15)
  {
    v23 = v37;
    if (v37 >> 60 == 15)
      goto LABEL_33;
LABEL_31:
    sub_245261C30(v36, v38);
    sub_245261C30(v35, v23);
    sub_24525FFF8(v36, v38);
    sub_24525FFF8(v35, v23);
    return 0;
  }
  v23 = v37;
  if (v37 >> 60 == 15)
    goto LABEL_31;
  sub_245261C30(v36, v38);
  sub_245261C30(v35, v37);
  sub_2452E44A8(v36, v38);
  v25 = v24;
  sub_24525FFF8(v35, v37);
  sub_24525FFF8(v36, v38);
  if ((v25 & 1) == 0)
    return 0;
LABEL_33:
  if (!v33)
  {
    if (!v34)
      goto LABEL_40;
    return 0;
  }
  if (!v34)
    return 0;
  if (v32 == v31 && v33 == v34 || (v26 = sub_245388274(), result = 0, (v26 & 1) != 0))
  {
LABEL_40:
    if (v29)
    {
      if (v30 && (v28 == v27 && v29 == v30 || (sub_245388274() & 1) != 0))
        return 1;
    }
    else if (!v30)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_2452E4AA8()
{
  unint64_t result;

  result = qword_25744FC58;
  if (!qword_25744FC58)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys, &type metadata for ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744FC58);
  }
  return result;
}

uint64_t sub_2452E4AEC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    result = MEMORY[0x2495330B0](MEMORY[0x24BEE4AA8], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2452E4B50()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_257451B98;
  if (!qword_257451B98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257451B90);
    v2 = MEMORY[0x24BEE0D08];
    result = MEMORY[0x2495330B0](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_257451B98);
  }
  return result;
}

unint64_t sub_2452E4BAC()
{
  unint64_t result;

  result = qword_25744FC40;
  if (!qword_25744FC40)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for ZoneVersionAdvertisement.CodingKeys, &type metadata for ZoneVersionAdvertisement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744FC40);
  }
  return result;
}

unint64_t sub_2452E4BF0()
{
  unint64_t result;

  result = qword_25744FC78;
  if (!qword_25744FC78)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for ZoneVersionAdvertisement.DeviceDescriptor, &type metadata for ZoneVersionAdvertisement.DeviceDescriptor);
    atomic_store(result, (unint64_t *)&qword_25744FC78);
  }
  return result;
}

unint64_t sub_2452E4C34()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25744FF68;
  if (!qword_25744FF68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25744FF58);
    v2 = sub_2452E4D70(&qword_25744F828, (uint64_t)&protocol conformance descriptor for ZoneVersion);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x2495330B0](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25744FF68);
  }
  return result;
}

unint64_t sub_2452E4CB0()
{
  unint64_t result;

  result = qword_25744FC70;
  if (!qword_25744FC70)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for ZoneVersionAdvertisement.DeviceDescriptor, &type metadata for ZoneVersionAdvertisement.DeviceDescriptor);
    atomic_store(result, (unint64_t *)&qword_25744FC70);
  }
  return result;
}

unint64_t sub_2452E4CF4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25744FF60;
  if (!qword_25744FF60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25744FF58);
    v2 = sub_2452E4D70(&qword_25744F820, (uint64_t)&protocol conformance descriptor for ZoneVersion);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x2495330B0](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25744FF60);
  }
  return result;
}

uint64_t sub_2452E4D70(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ZoneVersion();
    result = MEMORY[0x2495330B0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2452E4DB4()
{
  unint64_t result;

  result = qword_257452870;
  if (!qword_257452870)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys, &type metadata for ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452870);
  }
  return result;
}

unint64_t sub_2452E4DFC()
{
  unint64_t result;

  result = qword_25744FC68;
  if (!qword_25744FC68)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys, &type metadata for ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744FC68);
  }
  return result;
}

unint64_t sub_2452E4E44()
{
  unint64_t result;

  result = qword_25744FC60;
  if (!qword_25744FC60)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys, &type metadata for ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744FC60);
  }
  return result;
}

unint64_t sub_2452E4E8C()
{
  unint64_t result;

  result = qword_257452878;
  if (!qword_257452878)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for ZoneVersionAdvertisement.CodingKeys, &type metadata for ZoneVersionAdvertisement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452878);
  }
  return result;
}

unint64_t sub_2452E4ED4()
{
  unint64_t result;

  result = qword_25744FC50;
  if (!qword_25744FC50)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for ZoneVersionAdvertisement.CodingKeys, &type metadata for ZoneVersionAdvertisement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744FC50);
  }
  return result;
}

unint64_t sub_2452E4F1C()
{
  unint64_t result;

  result = qword_25744FC48;
  if (!qword_25744FC48)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for ZoneVersionAdvertisement.CodingKeys, &type metadata for ZoneVersionAdvertisement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744FC48);
  }
  return result;
}

uint64_t destroy for ZoneVersionAdvertisement(uint64_t a1)
{
  unint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(a1 + 120);
  if (v2 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(a1 + 112), v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ZoneVersionAdvertisement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  v6 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v6;
  v7 = (uint64_t *)(a2 + 112);
  v8 = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 112) = *(_OWORD *)v7;
  }
  else
  {
    v9 = *v7;
    sub_245261C44(*v7, v8);
    *(_QWORD *)(a1 + 112) = v9;
    *(_QWORD *)(a1 + 120) = v8;
  }
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v10;
  v11 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v11;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ZoneVersionAdvertisement(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v4 = *(_OWORD *)(a2 + 56);
  v5 = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 56) = v4;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (uint64_t *)(a2 + 112);
  v7 = *(_QWORD *)(a2 + 120);
  if (*(_QWORD *)(a1 + 120) >> 60 != 15)
  {
    if (v7 >> 60 != 15)
    {
      v9 = *v6;
      sub_245261C44(*v6, *(_QWORD *)(a2 + 120));
      v10 = *(_QWORD *)(a1 + 112);
      v11 = *(_QWORD *)(a1 + 120);
      *(_QWORD *)(a1 + 112) = v9;
      *(_QWORD *)(a1 + 120) = v7;
      sub_24525CB80(v10, v11);
      goto LABEL_8;
    }
    sub_2452CAE18(a1 + 112);
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 112) = *(_OWORD *)v6;
    goto LABEL_8;
  }
  v8 = *v6;
  sub_245261C44(*v6, *(_QWORD *)(a2 + 120));
  *(_QWORD *)(a1 + 112) = v8;
  *(_QWORD *)(a1 + 120) = v7;
LABEL_8:
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy168_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for ZoneVersionAdvertisement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(a2 + 112);
  v7 = *(_QWORD *)(a1 + 120);
  if (v7 >> 60 != 15)
  {
    v8 = *(_QWORD *)(a2 + 120);
    if (v8 >> 60 != 15)
    {
      v9 = *(_QWORD *)(a1 + 112);
      *(_QWORD *)(a1 + 112) = *v6;
      *(_QWORD *)(a1 + 120) = v8;
      sub_24525CB80(v9, v7);
      goto LABEL_6;
    }
    sub_2452CAE18(a1 + 112);
  }
  *(_OWORD *)(a1 + 112) = *(_OWORD *)v6;
LABEL_6:
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ZoneVersionAdvertisement(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 168))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ZoneVersionAdvertisement(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 168) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ZoneVersionAdvertisement()
{
  return &type metadata for ZoneVersionAdvertisement;
}

ValueMetadata *type metadata accessor for ZoneVersionAdvertisement.DeviceDescriptor()
{
  return &type metadata for ZoneVersionAdvertisement.DeviceDescriptor;
}

uint64_t getEnumTagSinglePayload for ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_2452E5564 + 4 * byte_24538BEB6[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_2452E5598 + 4 * byte_24538BEB1[v4]))();
}

uint64_t sub_2452E5598(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452E55A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2452E55A8);
  return result;
}

uint64_t sub_2452E55B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2452E55BCLL);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_2452E55C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452E55C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys()
{
  return &type metadata for ZoneVersionAdvertisement.DeviceDescriptor.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ZoneVersionAdvertisement.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2452E5630 + 4 * byte_24538BEC0[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2452E5664 + 4 * byte_24538BEBB[v4]))();
}

uint64_t sub_2452E5664(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452E566C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2452E5674);
  return result;
}

uint64_t sub_2452E5680(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2452E5688);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2452E568C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452E5694(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ZoneVersionAdvertisement.CodingKeys()
{
  return &type metadata for ZoneVersionAdvertisement.CodingKeys;
}

uint64_t dispatch thunk of ZoneVersionAdvertising.zoneVersionPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ZoneVersionAdvertising.isEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ZoneVersionAdvertising.isEnabled.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ZoneVersionAdvertising.isEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ZoneVersionAdvertising.advertise(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ZoneVersionAdvertising.subscribe()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_2452E56E0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F830);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t BasicTimer.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440BFA0);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v0 + 24) = v1;
  return v0;
}

uint64_t BasicTimer.init()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440BFA0);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v0 + 24) = v1;
  return v0;
}

uint64_t sub_2452E57AC(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  os_unfair_lock_s *v9;

  v9 = *(os_unfair_lock_s **)(v4 + 24);
  swift_retain();
  os_unfair_lock_lock(v9 + 4);
  sub_2452E58C8(a1, a2, a3, a4);
  os_unfair_lock_unlock(v9 + 4);
  return swift_release();
}

void sub_2452E5824(double a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4, uint64_t a5)
{
  sub_2452E58C8(a3, a4, a5, a1);
}

uint64_t sub_2452E5858()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = *(os_unfair_lock_s **)(v0 + 24);
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_2452E6030();
  os_unfair_lock_unlock(v1 + 4);
  return swift_release();
}

uint64_t sub_2452E58A0()
{
  return sub_2452E6030();
}

void sub_2452E58C8(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  const os_unfair_lock *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint8_t *v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(uint64_t *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t ObjectType;
  uint64_t *v40;
  _QWORD *v41;
  uint64_t v42;
  void *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD aBlock[7];

  v5 = v4;
  v54 = a3;
  v52 = a2;
  v50 = a1;
  v7 = sub_245387920();
  v59 = *(_QWORD *)(v7 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v58 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_245387950();
  v56 = *(_QWORD *)(v9 - 8);
  v57 = v9;
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v53 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_245387914();
  v47 = *(_QWORD *)(v49 - 8);
  v11 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v51 = (uint64_t *)((char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v46 - v13);
  v60 = sub_2453879C8();
  v48 = *(_QWORD *)(v60 - 8);
  v15 = MEMORY[0x24BDAC7A8](v60);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v46 - v18;
  v20 = sub_245387DA0();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(const os_unfair_lock **)(v4 + 24);
  swift_retain();
  os_unfair_lock_assert_owner(v24 + 4);
  swift_release();
  if (*(_QWORD *)(v5 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_245387DD0();
    swift_unknownObjectRelease();
  }
  *(_QWORD *)(v5 + 16) = 0;
  swift_unknownObjectRelease();
  if (qword_25744FD90 != -1)
    swift_once();
  v25 = sub_245387818();
  __swift_project_value_buffer(v25, (uint64_t)qword_257462FB0);
  v26 = sub_2453877F4();
  v27 = sub_245387D10();
  v28 = os_log_type_enabled(v26, v27);
  v55 = v19;
  if (v28)
  {
    v29 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v29 = 134349056;
    *(double *)aBlock = a4;
    sub_245387E0C();
    _os_log_impl(&dword_245256000, v26, v27, "Timer will fire in %{public}fs", v29, 0xCu);
    MEMORY[0x24953317C](v29, -1, -1);
  }

  v30 = a4 * 1000.0;
  if ((~COERCE__INT64(a4 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v30 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v30 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
    return;
  }
  v46 = v7;
  if ((uint64_t)v30 >= 0x7FFFFFFF)
    v31 = 0x7FFFFFFFLL;
  else
    v31 = (uint64_t)v30;
  sub_2452E6270();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_2452E62AC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574503D0);
  sub_2452E62F4();
  sub_245387E3C();
  v32 = sub_245387DAC();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  sub_2453879BC();
  *v14 = v31;
  v33 = v47;
  v34 = v49;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v47 + 104))(v14, *MEMORY[0x24BEE5410], v49);
  v35 = v55;
  MEMORY[0x249531D48](v17, v14);
  v36 = *(void (**)(uint64_t *, uint64_t))(v33 + 8);
  v36(v14, v34);
  v37 = v17;
  v38 = v60;
  v50 = *(void (**)(char *, uint64_t))(v48 + 8);
  v50(v37, v60);
  ObjectType = swift_getObjectType();
  sub_24534DB2C((uint64_t)v14);
  v40 = v51;
  sub_24534DB70(v51);
  MEMORY[0x249532144](v35, v14, v40, ObjectType);
  v36(v40, v34);
  v36(v14, v34);
  v41 = (_QWORD *)swift_allocObject();
  v42 = v52;
  v41[2] = v5;
  v41[3] = v42;
  v41[4] = v54;
  aBlock[4] = sub_2452E636C;
  aBlock[5] = v41;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525DD34;
  aBlock[3] = &block_descriptor_5;
  v43 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  v44 = v53;
  sub_24534DA7C();
  v45 = v58;
  sub_24534DA80();
  sub_245387DC4();
  _Block_release(v43);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v45, v46);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v44, v57);
  swift_release();
  *(_QWORD *)(v5 + 16) = v32;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  if (*(_QWORD *)(v5 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_245387DDC();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v50(v35, v38);
  }
  else
  {
    v50(v35, v38);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_2452E5ED4(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  os_unfair_lock_s *v3;
  uint64_t v4;

  v3 = *(os_unfair_lock_s **)(a1 + 24);
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  sub_2452E5F48();
  os_unfair_lock_unlock(v3 + 4);
  v4 = swift_release();
  return a2(v4);
}

uint64_t sub_2452E5F48()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  if (qword_25744FD90 != -1)
    swift_once();
  v0 = sub_245387818();
  __swift_project_value_buffer(v0, (uint64_t)qword_257462FB0);
  v1 = sub_2453877F4();
  v2 = sub_245387D10();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_245256000, v1, v2, "Timer fired", v3, 2u);
    MEMORY[0x24953317C](v3, -1, -1);
  }

  return sub_2452E6030();
}

uint64_t sub_2452E6030()
{
  uint64_t v0;
  uint64_t v1;
  const os_unfair_lock *v2;
  uint64_t result;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  v1 = v0;
  v2 = *(const os_unfair_lock **)(v0 + 24);
  swift_retain();
  os_unfair_lock_assert_owner(v2 + 4);
  result = swift_release();
  if (*(_QWORD *)(v1 + 16))
  {
    if (qword_25744FD90 != -1)
      swift_once();
    v4 = sub_245387818();
    __swift_project_value_buffer(v4, (uint64_t)qword_257462FB0);
    v5 = sub_2453877F4();
    v6 = sub_245387D10();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_245256000, v5, v6, "Cancelling timer", v7, 2u);
      MEMORY[0x24953317C](v7, -1, -1);
    }

    if (*(_QWORD *)(v1 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_245387DD0();
      swift_unknownObjectRelease();
    }
    *(_QWORD *)(v1 + 16) = 0;
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t BasicTimer.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t BasicTimer.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2452E61C4(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, double a4)
{
  return sub_2452E57AC(a1, a2, a3, a4);
}

uint64_t sub_2452E61E4()
{
  return sub_2452E5858();
}

uint64_t sub_2452E6204(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t type metadata accessor for BasicTimer()
{
  return objc_opt_self();
}

uint64_t method lookup function for BasicTimer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BasicTimer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of BasicTimer.start(duration:queue:handler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of BasicTimer.cancel()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

unint64_t sub_2452E6270()
{
  unint64_t result;

  result = qword_257450090;
  if (!qword_257450090)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257450090);
  }
  return result;
}

unint64_t sub_2452E62AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2574503D8;
  if (!qword_2574503D8)
  {
    v1 = sub_245387DA0();
    result = MEMORY[0x2495330B0](MEMORY[0x24BEE57D0], v1);
    atomic_store(result, (unint64_t *)&qword_2574503D8);
  }
  return result;
}

unint64_t sub_2452E62F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257451BA8;
  if (!qword_257451BA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2574503D0);
    result = MEMORY[0x2495330B0](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_257451BA8);
  }
  return result;
}

uint64_t sub_2452E6340()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2452E636C()
{
  uint64_t v0;

  return sub_2452E5ED4(*(_QWORD *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t dispatch thunk of PinnedIdentityManaging.fetchIdentityBlob(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of PinnedIdentityManaging.setIdentityBlob(blob:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of TimerProtocol.start(duration:queue:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of TimerProtocol.cancel()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_2452E63B0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_bridgeObjectRetain();
  sub_245387B90();
  sub_2453880F4();
  sub_245387B90();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_2452E6428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452890);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)((char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  sub_2453876C8();
  *v12 = a1;
  v12[1] = a2;
  v12[2] = a3;
  sub_2452E7604((uint64_t)v12, (uint64_t)v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  swift_beginAccess();
  sub_24531C414((uint64_t)v8, a3);
  swift_endAccess();
  sub_2452E6630();
  return sub_2452E7648((uint64_t)v12);
}

uint64_t sub_2452E656C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452890);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  swift_beginAccess();
  sub_24531C414((uint64_t)v5, a2);
  swift_endAccess();
  return sub_2452E6630();
}

uint64_t sub_2452E6630()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  _QWORD v19[4];

  v1 = sub_2453879D4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (_QWORD *)((char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (void *)v0[2];
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  v7 = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v7 & 1) != 0)
  {
    v9 = v0[4];
    if (v9)
    {
      v10 = *(os_unfair_lock_s **)(v9 + 24);
      swift_retain();
      swift_retain();
      os_unfair_lock_lock(v10 + 4);
      sub_2452E6204(v11, sub_24525C730);
      os_unfair_lock_unlock(v10 + 4);
      swift_release();
      swift_release();
    }
    v0[4] = 0;
    swift_release();
    sub_2452E68EC();
    result = swift_beginAccess();
    if (*(_QWORD *)(v0[3] + 16))
    {
      type metadata accessor for BasicTimer();
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440BFA0);
      v13 = swift_allocObject();
      *(_DWORD *)(v13 + 16) = 0;
      *(_QWORD *)(v12 + 24) = v13;
      v0[4] = v12;
      result = swift_release();
      v14 = v0[4];
      if (v14)
      {
        v15 = swift_allocObject();
        v16 = swift_weakInit();
        v17 = *(os_unfair_lock_s **)(v14 + 24);
        MEMORY[0x24BDAC7A8](v16);
        v19[-6] = v14;
        v19[-5] = 0x4072C00000000000;
        v19[-4] = v6;
        v19[-3] = sub_2452E79EC;
        v19[-2] = v15;
        swift_retain();
        swift_retain();
        swift_retain();
        os_unfair_lock_lock(v17 + 4);
        sub_2452E6204(v18, (uint64_t (*)(void))sub_24525C890);
        os_unfair_lock_unlock(v17 + 4);
        swift_release();
        swift_release_n();
        return swift_release();
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2452E6898()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_2452E6630();
    return swift_release();
  }
  return result;
}

uint64_t sub_2452E68EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  char v22;
  char v23;
  int64_t i;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t *v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  char v61[16];
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452898);
  v1 = MEMORY[0x24BDAC7A8](v60);
  v59 = (uint64_t *)((char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = MEMORY[0x24BDAC7A8](v1);
  v58 = (uint64_t *)((char *)&v49 - v4);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v57 = (uint64_t *)((char *)&v49 - v6);
  MEMORY[0x24BDAC7A8](v5);
  v56 = (uint64_t *)((char *)&v49 - v7);
  v8 = sub_2453876EC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v49 - v13;
  sub_2453876C8();
  sub_245387674();
  v15 = (uint64_t *)(v0 + 24);
  swift_beginAccess();
  v16 = *(_QWORD *)(v0 + 24);
  v62 = v12;
  swift_bridgeObjectRetain();
  v17 = sub_24532A068((uint64_t)sub_2452E7684, (uint64_t)v61, v16);
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v49 = 0;
    v50 = v15;
    v51 = v14;
    v52 = v9;
    v53 = v12;
    v54 = v8;
    v66 = MEMORY[0x24BEE4AF8];
    sub_24532C668(0, v18, 0);
    v19 = sub_245330EE4(v17);
    v21 = v20;
    v55 = v17 + 64;
    v23 = v22 & 1;
    for (i = v18 - 1; ; --i)
    {
      v25 = v60;
      v26 = v56;
      v27 = (uint64_t)v56 + *(int *)(v60 + 48);
      v28 = sub_2452E788C(v27, v19, v21, v23 & 1, v17);
      *v26 = v28;
      v29 = (uint64_t)v57;
      *v57 = v28;
      sub_2452E7604(v27, v29 + *(int *)(v25 + 48));
      v30 = v58;
      sub_2452E7924(v29, (uint64_t)v58);
      sub_2452E796C((uint64_t)v26);
      v31 = *(int *)(v25 + 48);
      v32 = (_QWORD *)((char *)v59 + v31);
      *v59 = *v30;
      sub_2452E7604((uint64_t)v30 + v31, (uint64_t)v32);
      v33 = v32[1];
      v64 = *v32;
      v65 = v33;
      swift_bridgeObjectRetain();
      sub_245387B90();
      v63 = v32[2];
      sub_2453880F4();
      sub_245387B90();
      swift_bridgeObjectRelease();
      v34 = v64;
      v35 = v65;
      sub_2452E7648((uint64_t)v32);
      sub_2452E796C((uint64_t)v30);
      v36 = v66;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_24532C668(0, *(_QWORD *)(v36 + 16) + 1, 1);
        v36 = v66;
      }
      v39 = *(_QWORD *)(v36 + 16);
      v38 = *(_QWORD *)(v36 + 24);
      if (v39 >= v38 >> 1)
      {
        result = sub_24532C668(v38 > 1, v39 + 1, 1);
        v36 = v66;
      }
      *(_QWORD *)(v36 + 16) = v39 + 1;
      v40 = v36 + 16 * v39;
      *(_QWORD *)(v40 + 32) = v34;
      *(_QWORD *)(v40 + 40) = v35;
      if (v19 < 0 || v19 >= -(-1 << *(_BYTE *)(v17 + 32)))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
        return result;
      }
      if (((*(_QWORD *)(v55 + (((unint64_t)v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
        goto LABEL_19;
      if (*(_DWORD *)(v17 + 36) != v21)
        goto LABEL_20;
      v41 = sub_245387E54();
      if (!i)
        break;
      v19 = v41;
      v23 = 0;
      v21 = *(_DWORD *)(v17 + 36);
    }
    swift_release();
    v12 = v53;
    v8 = v54;
    v14 = v51;
    v9 = v52;
    v15 = v50;
    if (!*(_QWORD *)(v36 + 16))
      goto LABEL_16;
  }
  else
  {
    swift_release();
    v36 = MEMORY[0x24BEE4AF8];
    if (!*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    {
LABEL_16:
      v48 = *(void (**)(char *, uint64_t))(v9 + 8);
      v48(v14, v8);
      goto LABEL_17;
    }
  }
  v64 = v36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257450000);
  sub_24526381C(&qword_257450008, &qword_257450000, MEMORY[0x24BEE12B0]);
  v42 = sub_245387AC4();
  v44 = v43;
  swift_bridgeObjectRelease();
  sub_24535987C(0xD000000000000012, 0x8000000245393AE0, 0xD000000000000012, 0x8000000245393B00, 0xD000000000000012, 0x8000000245393B00, v42, v44);
  v45 = swift_bridgeObjectRelease();
  v46 = *v15;
  MEMORY[0x24BDAC7A8](v45);
  *(&v49 - 2) = (uint64_t)v12;
  swift_bridgeObjectRetain();
  v47 = sub_24532A068((uint64_t)sub_2452E79AC, (uint64_t)(&v49 - 4), v46);
  swift_bridgeObjectRelease();
  v48 = *(void (**)(char *, uint64_t))(v9 + 8);
  v48(v14, v8);
  *v15 = v47;
LABEL_17:
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v48)(v12, v8);
}

BOOL sub_2452E6E24(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  v21[1] = a3;
  v5 = sub_2453876EC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452898);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (_QWORD *)((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v21 - v14;
  v16 = *a1;
  v17 = (char *)v21 + *(int *)(v13 + 48) - v14;
  *(_QWORD *)((char *)v21 - v14) = v16;
  sub_2452E7604(a2, (uint64_t)v17);
  v18 = (uint64_t)v12 + *(int *)(v9 + 48);
  *v12 = v16;
  sub_2452E7604((uint64_t)v17, v18);
  v19 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v18 + *(int *)(v19 + 24), v5);
  sub_2452E7648(v18);
  sub_24525C6C4((unint64_t *)&unk_2574525D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  LOBYTE(v16) = sub_245387AD0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_2452E796C((uint64_t)v15);
  return (v16 & 1) == 0;
}

uint64_t sub_2452E6FB8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  v21[1] = a3;
  v5 = sub_2453876EC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452898);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (_QWORD *)((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v21 - v14;
  v16 = *a1;
  v17 = (char *)v21 + *(int *)(v13 + 48) - v14;
  *(_QWORD *)((char *)v21 - v14) = v16;
  sub_2452E7604(a2, (uint64_t)v17);
  v18 = (uint64_t)v12 + *(int *)(v9 + 48);
  *v12 = v16;
  sub_2452E7604((uint64_t)v17, v18);
  v19 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v18 + *(int *)(v19 + 24), v5);
  sub_2452E7648(v18);
  LOBYTE(v16) = sub_245387680();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_2452E796C((uint64_t)v15);
  return v16 & 1;
}

uint64_t sub_2452E7124()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConnectionDurationMonitor()
{
  return objc_opt_self();
}

uint64_t *sub_2452E7180(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_2453876EC();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_2452E7224(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_2453876EC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_2452E726C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_2453876EC();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_2452E72E4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2453876EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_2452E7368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2453876EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_2452E73CC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2453876EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_2452E7440()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452E744C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2453876EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_2452E74C8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452E74D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2453876EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor()
{
  uint64_t result;

  result = qword_257452880;
  if (!qword_257452880)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2452E7584()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2453876EC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2452E7604(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2452E7648(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_2452E7684(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2452E6E24(a1, a2, *(_QWORD *)(v2 + 16));
}

_QWORD *sub_2452E76A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v1 = sub_245387D70();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_245387D4C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5);
  v7 = sub_245387950();
  MEMORY[0x24BDAC7A8](v7);
  v11[0] = sub_24525C748();
  sub_245387938();
  v11[1] = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_257450050, v6, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450020);
  sub_24526381C((unint64_t *)&qword_257450030, (uint64_t *)&unk_257450020, MEMORY[0x24BEE12C8]);
  sub_245387E3C();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5750], v1);
  v8 = sub_245387D94();
  v9 = MEMORY[0x24BEE4B00];
  v0[2] = v8;
  v0[3] = v9;
  v0[4] = 0;
  type metadata accessor for BugCapture();
  v0[5] = swift_allocObject();
  return v0;
}

uint64_t sub_2452E788C(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v6 = result;
    v7 = *(_QWORD *)(a5 + 56);
    v8 = *(_QWORD *)(*(_QWORD *)(a5 + 48) + 8 * a2);
    v9 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
    sub_2452E7604(v7 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a2, v6);
    return v8;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_2452E7924(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2452E796C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452898);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2452E79AC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2452E6FB8(a1, a2, *(_QWORD *)(v2 + 16)) & 1;
}

uint64_t sub_2452E79C8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2452E79EC()
{
  return sub_2452E6898();
}

uint64_t PinnedIdentityManager.__allocating_init(firstLockStateProvider:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PinnedIdentityManager.init(firstLockStateProvider:)(a1);
  return v2;
}

uint64_t PinnedIdentityManager.init(firstLockStateProvider:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;

  v19 = a1;
  v1 = sub_245387D70();
  v2 = *(_QWORD *)(v1 - 8);
  v14 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_245387D4C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5);
  v7 = sub_245387950();
  MEMORY[0x24BDAC7A8](v7);
  v17 = sub_24525C748();
  sub_245387944();
  v20 = MEMORY[0x24BEE4AF8];
  v16 = sub_24525C6C4((unint64_t *)&unk_257450050, v6, MEMORY[0x24BEE5698]);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450020);
  sub_2452E0BF0((unint64_t *)&qword_257450030, (uint64_t *)&unk_257450020);
  sub_245387E3C();
  v8 = *MEMORY[0x24BEE5758];
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v9(v4, v8, v1);
  v10 = sub_245387D94();
  v11 = v18;
  *(_QWORD *)(v18 + 64) = v10;
  sub_245387944();
  v20 = MEMORY[0x24BEE4AF8];
  sub_245387E3C();
  v9(v4, v8, v14);
  *(_QWORD *)(v11 + 72) = sub_245387D94();
  *(_QWORD *)(v11 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4FC80]), sel_init);
  sub_2452B7C5C(v19, v11 + 24);
  return v11;
}

uint64_t PinnedIdentityManager.fetchIdentityBlob(completion:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  void *v26;
  char *v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t aBlock;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  void *v38;
  void *v39;
  _QWORD *v40;

  v5 = sub_245387920();
  v32 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_245387950();
  v8 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v2[6];
  v12 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v11);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12) & 1) != 0)
  {
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = v2;
    v13[3] = a1;
    v13[4] = a2;
    v39 = sub_2452E8AE8;
    v40 = v13;
    aBlock = MEMORY[0x24BDAC760];
    v36 = 1107296256;
    v37 = sub_24525DD34;
    v38 = &block_descriptor_6;
    v14 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    sub_245387938();
    v34 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    sub_2452E0BF0((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0);
    sub_245387E3C();
    MEMORY[0x2495320E4](0, v10, v7, v14);
    _Block_release(v14);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v5);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v33);
  }
  else
  {
    v15 = a2;
    v30 = v10;
    v31 = v8;
    v16 = v32;
    if (qword_25744FD90 != -1)
      swift_once();
    v17 = sub_245387818();
    __swift_project_value_buffer(v17, (uint64_t)qword_257462FB0);
    v18 = sub_2453877F4();
    v19 = sub_245387D1C();
    v20 = v16;
    v21 = v5;
    v22 = a1;
    v23 = v15;
    if (os_log_type_enabled(v18, v19))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_245256000, v18, v19, "Cannot fetch IDS identity blob before first unlock", v24, 2u);
      MEMORY[0x24953317C](v24, -1, -1);
    }

    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = v22;
    *(_QWORD *)(v25 + 24) = v23;
    v39 = sub_2452E8A98;
    v40 = (_QWORD *)v25;
    aBlock = MEMORY[0x24BDAC760];
    v36 = 1107296256;
    v37 = sub_24525DD34;
    v38 = &block_descriptor_6;
    v26 = _Block_copy(&aBlock);
    swift_retain();
    v27 = v30;
    sub_245387938();
    v34 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    sub_2452E0BF0((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0);
    sub_245387E3C();
    MEMORY[0x2495320E4](0, v27, v7, v26);
    _Block_release(v26);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v21);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v33);
  }
  return swift_release();
}

void sub_2452E80BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  _QWORD *v7;
  void *v8;
  _QWORD v9[6];

  v6 = *(void **)(a1 + 16);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = a3;
  v9[4] = sub_2452E8B58;
  v9[5] = v7;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_2452E8600;
  v9[3] = &block_descriptor_18_0;
  v8 = _Block_copy(v9);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_fetchIdentityForPinningWithCompletion_, v8);
  _Block_release(v8);
}

uint64_t sub_2452E8194(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  id v26;
  _QWORD v28[4];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[6];

  v9 = sub_245387920();
  v31 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_245387950();
  v29 = *(_QWORD *)(v12 - 8);
  v30 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = qword_25744FD90;
  v16 = a1;
  if (v15 != -1)
    swift_once();
  v17 = sub_245387818();
  __swift_project_value_buffer(v17, (uint64_t)qword_257462FB0);
  v18 = v16;
  v19 = sub_2453877F4();
  v20 = sub_245387D34();
  if (os_log_type_enabled(v19, v20))
  {
    v28[1] = a3;
    v28[2] = a4;
    v28[3] = a5;
    *(_DWORD *)swift_slowAlloc() = 134349056;
    v21 = objc_msgSend(v18, sel_identityBlob);
    sub_245387638();
    v23 = v22;

    __asm { BR              X10 }
  }

  v24 = (_QWORD *)swift_allocObject();
  v24[2] = a4;
  v24[3] = a5;
  v24[4] = v18;
  aBlock[4] = sub_2452E8B90;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525DD34;
  aBlock[3] = &block_descriptor_24_0;
  v25 = _Block_copy(aBlock);
  v26 = v18;
  swift_retain();
  sub_245387938();
  v32 = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_2452E0BF0((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0);
  sub_245387E3C();
  MEMORY[0x2495320E4](0, v14, v11, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v30);
  return swift_release();
}

uint64_t sub_2452E8580(void (*a1)(uint64_t, unint64_t), int a2, id a3)
{
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  if (a3)
  {
    v4 = objc_msgSend(a3, sel_identityBlob);
    v5 = sub_245387638();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0xF000000000000000;
  }
  a1(v5, v7);
  return sub_24525FFF8(v5, v7);
}

void sub_2452E8600(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, void *);
  id v6;
  id v7;

  v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, a3);
  swift_release();

}

void PinnedIdentityManager.setIdentityBlob(blob:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  _QWORD v4[6];

  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_24538762C();
  v4[4] = sub_2452E8710;
  v4[5] = 0;
  v4[0] = MEMORY[0x24BDAC760];
  v4[1] = 1107296256;
  v4[2] = sub_2452E88E8;
  v4[3] = &block_descriptor_9_0;
  v3 = _Block_copy(v4);
  objc_msgSend(v1, sel_pinIdentityBlob_withCompletion_, v2, v3);
  _Block_release(v3);

}

void sub_2452E8710(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  NSObject *oslog;
  uint64_t v11;

  if (a1)
  {
    v2 = a1;
    if (qword_25744FD90 != -1)
      swift_once();
    v3 = sub_245387818();
    __swift_project_value_buffer(v3, (uint64_t)qword_257462FB0);
    v4 = a1;
    v5 = a1;
    oslog = sub_2453877F4();
    v6 = sub_245387D1C();
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v7 = 138543362;
      v9 = a1;
      v11 = _swift_stdlib_bridgeErrorToNSError();
      sub_245387E0C();
      *v8 = v11;

      _os_log_impl(&dword_245256000, oslog, v6, "Error while attempting to pin IDS identity blob: %{public}@", v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v8, -1, -1);
      MEMORY[0x24953317C](v7, -1, -1);

    }
    else
    {

    }
  }
}

void sub_2452E88E8(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

id *PinnedIdentityManager.deinit()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 3));
  return v0;
}

uint64_t PinnedIdentityManager.__deallocating_deinit()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 3));
  return swift_deallocClassInstance();
}

uint64_t sub_2452E89AC(uint64_t a1, uint64_t a2)
{
  return PinnedIdentityManager.fetchIdentityBlob(completion:)(a1, a2);
}

void sub_2452E89CC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  _QWORD v4[6];

  v1 = *(void **)(*(_QWORD *)v0 + 16);
  v2 = (void *)sub_24538762C();
  v4[4] = sub_2452E8710;
  v4[5] = 0;
  v4[0] = MEMORY[0x24BDAC760];
  v4[1] = 1107296256;
  v4[2] = sub_2452E88E8;
  v4[3] = &block_descriptor_12;
  v3 = _Block_copy(v4);
  objc_msgSend(v1, sel_pinIdentityBlob_withCompletion_, v2, v3);
  _Block_release(v3);

}

uint64_t sub_2452E8A6C()
{
  return swift_slowAlloc();
}

uint64_t sub_2452E8A74()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2452E8A98()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 16))(0, 0xF000000000000000);
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

void sub_2452E8AD8()
{
  JUMPOUT(0x24953317CLL);
}

void sub_2452E8AE8()
{
  uint64_t *v0;

  sub_2452E80BC(v0[2], v0[3], v0[4]);
}

uint64_t type metadata accessor for PinnedIdentityManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for PinnedIdentityManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PinnedIdentityManager.__allocating_init(firstLockStateProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t objectdestroy_2Tm_0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2452E8B58(void *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_2452E8194(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_2452E8B64()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2452E8B90()
{
  uint64_t v0;

  return sub_2452E8580(*(void (**)(uint64_t, unint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(id *)(v0 + 32));
}

uint64_t sub_2452E8BC4()
{
  return sub_2452E8C0C(&OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper____lazy_storage___messagePublisher, (uint64_t)&OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__messagePublisher, &qword_257450370, &qword_257450368);
}

uint64_t sub_2452E8BE8()
{
  return sub_2452E8C0C(&OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper____lazy_storage___devicesDidChangePublisher, (uint64_t)&OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__devicesDidChangePublisher, &qword_257450380, &qword_257450378);
}

uint64_t sub_2452E8C0C(uint64_t *a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;

  v5 = *a1;
  v6 = *(_QWORD *)(v4 + *a1);
  if (v6)
  {
    v7 = v6;
  }
  else
  {
    v10 = v4;
    __swift_instantiateConcreteTypeFromMangledName(a3);
    sub_24526381C(a4, a3, MEMORY[0x24BDB9CB0]);
    v7 = sub_24538789C();
    *(_QWORD *)(v10 + v5) = v7;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v7;
}

uint64_t sub_2452E8CBC()
{
  return sub_2452E8C0C(&OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper____lazy_storage___didUpdatePairedDevicePublisher, (uint64_t)&OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__didUpdatePairedDevicePublisher, &qword_257450360, &qword_257450358);
}

uint64_t sub_2452E8CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice;
  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice);
  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = v6;
  *(_BYTE *)(a2 + 32) = *(_BYTE *)(v2 + 32);
  return sub_24526385C(v3, v4);
}

uint64_t sub_2452E8D28()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2574503A8);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = MEMORY[0x24BEE4B00];
  qword_2574502D0 = result;
  return result;
}

uint64_t sub_2452E8D68@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;

  v26 = a4;
  v7 = sub_245387D70();
  v25 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_245387D4C();
  MEMORY[0x24BDAC7A8](v24);
  v10 = sub_245387950();
  MEMORY[0x24BDAC7A8](v10);
  v11 = *a1;
  if (!*(_QWORD *)(*a1 + 16))
    goto LABEL_5;
  swift_bridgeObjectRetain();
  v12 = sub_2452C1D98(a2, a3);
  if ((v13 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    v23[1] = sub_2452E06B0(0, (unint64_t *)&qword_257450080);
    sub_245387944();
    v27 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_257450050, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450020);
    v23[0] = a2;
    sub_24526381C((unint64_t *)&qword_257450030, (uint64_t *)&unk_257450020, MEMORY[0x24BEE12C8]);
    sub_245387E3C();
    (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v9, *MEMORY[0x24BEE5758], v7);
    v15 = (void *)sub_245387D94();
    v16 = objc_allocWithZone((Class)type metadata accessor for IDSServiceWrapper());
    swift_bridgeObjectRetain();
    v17 = v15;
    v18 = v23[0];
    sub_2452E903C(v23[0], a3, v17);
    v20 = v19;
    swift_bridgeObjectRetain();
    v14 = v20;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27 = *a1;
    *a1 = 0x8000000000000000;
    sub_245328CEC((uint64_t)v14, v18, a3, isUniquelyReferenced_nonNull_native);
    *a1 = v27;

    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v14 = *(id *)(*(_QWORD *)(v11 + 56) + 8 * v12);
LABEL_6:
  result = swift_bridgeObjectRelease();
  *v26 = v14;
  return result;
}

void sub_2452E903C(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  char *v16;
  os_unfair_lock_s *v17;
  char *v18;
  uint64_t v19;
  objc_super v20;

  *(_QWORD *)&v3[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper____lazy_storage___messagePublisher] = 0;
  v5 = OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__messagePublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257450370);
  swift_allocObject();
  v6 = v3;
  *(_QWORD *)&v3[v5] = sub_245387884();
  *(_QWORD *)&v6[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper____lazy_storage___devicesDidChangePublisher] = 0;
  v7 = OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__devicesDidChangePublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257450380);
  swift_allocObject();
  *(_QWORD *)&v6[v7] = sub_245387884();
  *(_QWORD *)&v6[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper____lazy_storage___didUpdatePairedDevicePublisher] = 0;
  v8 = OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__didUpdatePairedDevicePublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257450360);
  swift_allocObject();
  *(_QWORD *)&v6[v8] = sub_245387884();
  v9 = OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_pairedDeviceLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440BFA0);
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + 16) = 0;
  *(_QWORD *)&v6[v9] = v10;
  v11 = &v6[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice];
  v11[32] = 0;
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *(_DWORD *)&v6[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_pairedDeviceNotificationToken] = -1;
  v12 = objc_allocWithZone(MEMORY[0x24BE4FCB8]);
  v13 = (void *)sub_245387AF4();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, sel_initWithService_, v13);

  if (v14)
  {
    *(_QWORD *)&v6[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_idsService] = v14;
    *(_QWORD *)&v6[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_queue] = a3;
    v15 = a3;

    v20.receiver = v6;
    v20.super_class = (Class)type metadata accessor for IDSServiceWrapper();
    v16 = (char *)objc_msgSendSuper2(&v20, sel_init);
    v17 = *(os_unfair_lock_s **)&v16[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_pairedDeviceLock];
    v18 = (char *)(id)MEMORY[0x24BDAC7A8](v16);
    swift_retain();
    os_unfair_lock_lock(v17 + 4);
    sub_2452E6204(v19, sub_2452ECE78);
    os_unfair_lock_unlock(v17 + 4);
    swift_release();
    objc_msgSend(*(id *)&v18[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_idsService], sel_addDelegate_queue_, v18, *(_QWORD *)&v18[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_queue]);
    sub_2452E9318();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2452E92B8(uint64_t a1)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  _OWORD v8[2];
  char v9;

  sub_2452EA7B8((uint64_t)v8);
  v2 = v9;
  v3 = a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice;
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice);
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice + 8);
  v6 = v8[1];
  *(_OWORD *)v3 = v8[0];
  *(_OWORD *)(v3 + 16) = v6;
  *(_BYTE *)(v3 + 32) = v2;
  return sub_24526388C(v4, v5);
}

uint64_t sub_2452E9318()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  int *v10;
  _QWORD v12[6];

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v2, sel_addObserver_selector_name_object_, v0, sel_pairedDeviceStateChangedWithNotification_, *MEMORY[0x24BE6B440], 0);

  v3 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v3, sel_addObserver_selector_name_object_, v0, sel_pairedDeviceStateChangedWithNotification_, *MEMORY[0x24BE6B450], 0);

  v4 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v4, sel_addObserver_selector_name_object_, v0, sel_pairedDeviceStateChangedWithNotification_, *MEMORY[0x24BE6B420], 0);

  v5 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v5, sel_addObserver_selector_name_object_, v0, sel_pairedDeviceStateChangedWithNotification_, *MEMORY[0x24BE6B428], 0);

  sub_245387B18();
  v6 = *(NSObject **)(v0 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_queue);
  v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v12[4] = sub_2452ECEB4;
  v12[5] = v7;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_245333644;
  v12[3] = &block_descriptor_7;
  v8 = _Block_copy(v12);
  swift_release();
  v9 = sub_245387B54();
  swift_bridgeObjectRelease();
  v10 = (int *)(v0 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_pairedDeviceNotificationToken);
  swift_beginAccess();
  notify_register_dispatch((const char *)(v9 + 32), v10, v6, v8);
  swift_endAccess();
  _Block_release(v8);
  return swift_release();
}

id sub_2452E9550()
{
  char *v0;
  id v1;
  int *v2;
  objc_super v4;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

  v2 = (int *)&v0[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_pairedDeviceNotificationToken];
  swift_beginAccess();
  notify_cancel(*v2);
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for IDSServiceWrapper();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_2452E9758@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned __int8 a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t result;
  char v6;
  unsigned __int8 v7;

  v7 = a3;
  result = sub_2452E97AC(a1, a2, &v7);
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t sub_2452E97AC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  int v13;
  id v14;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  void *v34;
  id v35;
  void *v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  unsigned int v44;
  void *v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  int v53;
  uint64_t v54;
  _QWORD *v55;
  id v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  os_log_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  id v75;
  id v76;
  uint64_t v77;
  id v78;
  id v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  os_log_t v96;
  unint64_t v97;
  uint64_t v98;
  _OWORD v99[2];
  __int128 v100;
  uint64_t v101;
  uint64_t v102[7];

  v4 = v3;
  v102[5] = *MEMORY[0x24BDAC8D0];
  v8 = sub_2453879D4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(v4 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_queue);
  v13 = *a3;
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v14 = v12;
  LOBYTE(a3) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((a3 & 1) == 0)
  {
    __break(1u);
    swift_once();
    v18 = sub_245387818();
    __swift_project_value_buffer(v18, (uint64_t)qword_257462FE0);
    v19 = (id)v9;
    v20 = (id)v9;
    v21 = sub_2453877F4();
    v22 = sub_245387D1C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v102[0] = v24;
      *(_DWORD *)v23 = 136446210;
      *(_QWORD *)&v100 = v9;
      v25 = (id)v9;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C868);
      v26 = sub_245387B48();
      *(_QWORD *)&v100 = sub_2453816D8(v26, v27, v102);
      sub_245387E0C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_245256000, v21, v22, "Failed to encode message: %{public}s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v24, -1, -1);
      MEMORY[0x24953317C](v23, -1, -1);
    }
    else
    {

    }
    return v9;
  }
  v102[3] = type metadata accessor for Message();
  v102[4] = sub_24525C6C4((unint64_t *)&unk_257452980, (uint64_t (*)(uint64_t))type metadata accessor for Message, (uint64_t)&protocol conformance descriptor for Message);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v102);
  sub_245263EF4(a1, (uint64_t)boxed_opaque_existential_1);
  type metadata accessor for PropertyListTypeEncoder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = 0;
  *(_BYTE *)(inited + 24) = 1;
  v17 = (void *)sub_24537B31C(v102);
  v29 = sub_24537E224(v17);
  v31 = v30;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
  *(_QWORD *)&v100 = 0x6567617373656DLL;
  *((_QWORD *)&v100 + 1) = 0xE700000000000000;
  sub_245261C44(v29, v31);
  sub_245387E78();
  v101 = MEMORY[0x24BDCDDE8];
  *(_QWORD *)&v100 = v29;
  *((_QWORD *)&v100 + 1) = v31;
  sub_2452CC368(&v100, v99);
  v32 = MEMORY[0x24BEE4B00];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v98 = v32;
  sub_245328E48(v99, (uint64_t)v102, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_2452CC334((uint64_t)v102);
  v34 = *(void **)(v4 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_idsService);
  v35 = objc_msgSend(v34, sel_devices);
  if (v35)
  {
    v36 = v35;
    sub_2452E06B0(0, (unint64_t *)&unk_2574500C0);
    v37 = sub_245387C20();

    swift_bridgeObjectRetain();
    v38 = sub_2452EB920(v37, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v39 = sub_245331384((uint64_t)v38);
    swift_bridgeObjectRelease();
    v40 = sub_2452EA4C8(v39);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v40 + 16))
      goto LABEL_10;
LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_25744F650 != -1)
      swift_once();
    v67 = sub_245387818();
    __swift_project_value_buffer(v67, (uint64_t)qword_257462FE0);
    swift_bridgeObjectRetain_n();
    v68 = sub_2453877F4();
    v69 = sub_245387D1C();
    if (os_log_type_enabled(v68, v69))
    {
      v70 = (uint8_t *)swift_slowAlloc();
      v71 = swift_slowAlloc();
      v102[0] = v71;
      v97 = v29;
      *(_DWORD *)v70 = 136446210;
      swift_bridgeObjectRetain();
      v72 = sub_245387CD4();
      v74 = v73;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v100 = sub_2453816D8(v72, v74, v102);
      v29 = v97;
      sub_245387E0C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v68, v69, "Unable to find matching IDS identifier for destinations: %{public}s", v70, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v71, -1, -1);
      MEMORY[0x24953317C](v70, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_2452ECE2C();
    v9 = swift_allocError();
    v87 = v29;
    v88 = v31;
    goto LABEL_38;
  }
  if (qword_25744F650 != -1)
    swift_once();
  v63 = sub_245387818();
  __swift_project_value_buffer(v63, (uint64_t)qword_257462FE0);
  v64 = sub_2453877F4();
  v65 = sub_245387D1C();
  if (os_log_type_enabled(v64, v65))
  {
    v66 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v66 = 0;
    _os_log_impl(&dword_245256000, v64, v65, "Unable to find any IDS devices", v66, 2u);
    MEMORY[0x24953317C](v66, -1, -1);
  }

  if (!*(_QWORD *)(MEMORY[0x24BEE4B08] + 16))
    goto LABEL_21;
LABEL_10:
  v97 = v31;
  v41 = (void *)sub_245387A4C();
  swift_bridgeObjectRelease();
  v42 = (void *)sub_245387CC8();
  swift_bridgeObjectRelease();
  v43 = (void *)sub_245387A4C();
  v102[0] = 0;
  *(_QWORD *)&v100 = 0;
  v44 = objc_msgSend(v34, sel_sendMessage_toDestinations_priority_options_identifier_error_, v41, v42, -100 * v13 + 300, v43, v102, &v100);

  v45 = (void *)v102[0];
  if (v44)
  {
    v46 = qword_25744F650;
    v47 = (id)v100;
    if (v45)
    {
      v48 = v45;
      if (v46 != -1)
        swift_once();
      v49 = sub_245387818();
      __swift_project_value_buffer(v49, (uint64_t)qword_257462FE0);
      swift_bridgeObjectRetain_n();
      v50 = v48;
      v51 = sub_2453877F4();
      v52 = sub_245387D34();
      v53 = v52;
      v96 = v51;
      if (os_log_type_enabled(v51, v52))
      {
        v54 = swift_slowAlloc();
        v55 = (_QWORD *)swift_slowAlloc();
        v95 = swift_slowAlloc();
        v102[0] = v95;
        *(_DWORD *)v54 = 138543618;
        *(_QWORD *)&v100 = v50;
        v56 = v50;
        v94 = v53;
        v57 = v56;
        sub_245387E0C();
        *v55 = v45;

        *(_WORD *)(v54 + 12) = 2082;
        swift_bridgeObjectRetain();
        v58 = sub_245387CD4();
        v60 = v59;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v100 = sub_2453816D8(v58, v60, v102);
        sub_245387E0C();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v61 = v96;
        _os_log_impl(&dword_245256000, v96, (os_log_type_t)v94, "Sent IDS message %{public}@ to %{public}s", (uint8_t *)v54, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v55, -1, -1);
        v62 = v95;
        swift_arrayDestroy();
        MEMORY[0x24953317C](v62, -1, -1);
        MEMORY[0x24953317C](v54, -1, -1);
        sub_24525CB80(v29, v97);

      }
      else
      {
        swift_bridgeObjectRelease_n();

        sub_24525CB80(v29, v97);
      }

      return 1;
    }
    if (v46 != -1)
      swift_once();
    v89 = sub_245387818();
    __swift_project_value_buffer(v89, (uint64_t)qword_257462FE0);
    v90 = sub_2453877F4();
    v91 = sub_245387D1C();
    if (os_log_type_enabled(v90, v91))
    {
      v92 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v92 = 0;
      _os_log_impl(&dword_245256000, v90, v91, "Failed to retrieve identifier for message", v92, 2u);
      MEMORY[0x24953317C](v92, -1, -1);
    }

    sub_2452ECE2C();
    v9 = swift_allocError();
    v87 = v29;
    v88 = v97;
LABEL_38:
    sub_24525CB80(v87, v88);
    return v9;
  }
  v75 = (id)v100;
  v76 = v45;
  v9 = sub_245387584();

  swift_willThrow();
  if (qword_25744F650 != -1)
    swift_once();
  v77 = sub_245387818();
  __swift_project_value_buffer(v77, (uint64_t)qword_257462FE0);
  v78 = (id)v9;
  v79 = (id)v9;
  v80 = sub_2453877F4();
  v81 = sub_245387D1C();
  if (os_log_type_enabled(v80, v81))
  {
    v82 = (uint8_t *)swift_slowAlloc();
    v83 = swift_slowAlloc();
    v102[0] = v83;
    *(_DWORD *)v82 = 136446210;
    *(_QWORD *)&v100 = v9;
    v84 = (id)v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C868);
    v85 = sub_245387B48();
    *(_QWORD *)&v100 = sub_2453816D8(v85, v86, v102);
    sub_245387E0C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_245256000, v80, v81, "Failed to send message: %{public}s", v82, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v83, -1, -1);
    MEMORY[0x24953317C](v82, -1, -1);
    sub_24525CB80(v29, v97);
  }
  else
  {
    sub_24525CB80(v29, v97);

  }
  return v9;
}

uint64_t sub_2452EA4C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452998);
    v2 = sub_245387E9C();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B08];
  }
  v3 = a1 + 56;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(63 - v4) >> 6;
  v8 = v2 + 56;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_28;
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v7)
      goto LABEL_37;
    v14 = *(_QWORD *)(v3 + 8 * v13);
    v15 = v10 + 1;
    if (!v14)
    {
      v15 = v10 + 2;
      if (v10 + 2 >= v7)
        goto LABEL_37;
      v14 = *(_QWORD *)(v3 + 8 * v15);
      if (!v14)
      {
        v15 = v10 + 3;
        if (v10 + 3 >= v7)
          goto LABEL_37;
        v14 = *(_QWORD *)(v3 + 8 * v15);
        if (!v14)
        {
          v15 = v10 + 4;
          if (v10 + 4 >= v7)
            goto LABEL_37;
          v14 = *(_QWORD *)(v3 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v14 - 1) & v14;
    v10 = v15;
LABEL_28:
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    result = sub_245387E60();
    v17 = -1 << *(_BYTE *)(v2 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v8 + 8 * (v18 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v8 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v20 = 0;
      v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v22 = v19 == v21;
        if (v19 == v21)
          v19 = 0;
        v20 |= v22;
        v23 = *(_QWORD *)(v8 + 8 * v19);
      }
      while (v23 == -1);
      v11 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v2 + 48) + 40 * v11;
    *(_OWORD *)v12 = v24;
    *(_OWORD *)(v12 + 16) = v25;
    *(_QWORD *)(v12 + 32) = v26;
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v10 + 5;
  if (v10 + 5 >= v7)
  {
LABEL_37:
    swift_release();
    sub_2452ECE70();
    return v2;
  }
  v14 = *(_QWORD *)(v3 + 8 * v16);
  if (v14)
  {
    v15 = v10 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v7)
      goto LABEL_37;
    v14 = *(_QWORD *)(v3 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_2452EA7B8(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  void *v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[4];
  char v45;
  uint64_t v46;

  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_idsService), sel_devices));
  if (!v3)
  {
    if (qword_25744F650 != -1)
      swift_once();
    v16 = sub_245387818();
    __swift_project_value_buffer(v16, (uint64_t)qword_257462FE0);
    v17 = sub_2453877F4();
    v18 = sub_245387D1C();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_245256000, v17, v18, "Unable to find any IDS devices; cannot find paired device", v19, 2u);
      MEMORY[0x24953317C](v19, -1, -1);
    }

    goto LABEL_34;
  }
  v4 = v3;
  v5 = (void *)sub_2452E06B0(0, (unint64_t *)&unk_2574500C0);
  v6 = sub_245387C20();

  if (qword_25744F650 != -1)
LABEL_31:
    swift_once();
  v7 = sub_245387818();
  __swift_project_value_buffer(v7, (uint64_t)qword_257462FE0);
  swift_bridgeObjectRetain_n();
  v8 = sub_2453877F4();
  v9 = sub_245387D34();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v44[0] = v11;
    *(_DWORD *)v10 = 136446210;
    v12 = swift_bridgeObjectRetain();
    v13 = MEMORY[0x249531F88](v12, v5);
    v15 = v14;
    swift_bridgeObjectRelease();
    v46 = sub_2453816D8(v13, v15, v44);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v8, v9, "Finding active paired device in devices: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v11, -1, -1);
    MEMORY[0x24953317C](v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_245387F8C();
    if (v20)
      goto LABEL_13;
    goto LABEL_33;
  }
  v20 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v20)
  {
LABEL_33:
    swift_bridgeObjectRelease_n();
LABEL_34:
    *(_BYTE *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return;
  }
LABEL_13:
  v21 = 4;
  while (1)
  {
    if ((v6 & 0xC000000000000001) != 0)
      v22 = (id)MEMORY[0x24953221C](v21 - 4, v6);
    else
      v22 = *(id *)(v6 + 8 * v21);
    v5 = v22;
    v23 = v21 - 3;
    if (__OFADD__(v21 - 4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (objc_msgSend(v22, sel_isLocallyPaired) && objc_msgSend(v5, sel_isActive))
      break;

    ++v21;
    if (v23 == v20)
      goto LABEL_33;
  }
  swift_bridgeObjectRelease_n();
  v24 = v5;
  v25 = objc_msgSend(v24, sel_uniqueIDOverride);
  if (!v25)
  {
    __break(1u);
    goto LABEL_36;
  }
  v26 = v25;
  v42 = a1;
  v27 = sub_245387B18();
  v29 = v28;

  v30 = objc_msgSend(v24, sel_name);
  if (!v30)
  {
LABEL_36:
    __break(1u);
    return;
  }
  v31 = v30;
  v32 = sub_245387B18();
  v34 = v33;

  v35 = objc_msgSend(v24, sel_deviceType);
  if ((unint64_t)v35 >= 7)
    v36 = 0;
  else
    v36 = 0x3040101010200uLL >> (8 * v35);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v37 = sub_2453877F4();
  v38 = sub_245387D34();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc();
    v43 = swift_slowAlloc();
    v46 = v43;
    *(_DWORD *)v39 = 136446210;
    v44[0] = v27;
    v44[1] = v29;
    v44[2] = v32;
    v44[3] = v34;
    v45 = v36;
    PairedDevice.description.getter();
    v44[0] = sub_2453816D8(v40, v41, &v46);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v37, v38, "IDS PairedDevice is %{public}s", v39, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v43, -1, -1);
    MEMORY[0x24953317C](v39, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  *(_QWORD *)v42 = v27;
  *(_QWORD *)(v42 + 8) = v29;
  *(_QWORD *)(v42 + 16) = v32;
  *(_QWORD *)(v42 + 24) = v34;
  *(_BYTE *)(v42 + 32) = v36;
}

uint64_t type metadata accessor for IDSServiceWrapper()
{
  return objc_opt_self();
}

uint64_t sub_2452EB118()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_pairedDeviceLock);
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_2452E6204(v2, (uint64_t (*)(void))sub_2452EB800);
  os_unfair_lock_unlock(v1 + 4);
  swift_release();
  if ((v4 & 1) != 0)
    sub_245387878();
  return sub_24526388C(v5, v6);
}

void sub_2452EB238(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  int v27;
  uint64_t v28;
  os_log_type_t type;
  uint64_t v30;
  uint64_t v31;
  NSObject *log;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice);
  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice + 8);
  v31 = a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice;
  v38 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice + 24);
  v39 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice + 16);
  v40 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper__lock_pairedDevice + 32);
  sub_24526385C(v2, v3);
  sub_2452EA7B8((uint64_t)&v42);
  v4 = v42;
  v36 = v43;
  v6 = v44;
  v5 = v45;
  v7 = v46;
  if (qword_25744F650 != -1)
    swift_once();
  v8 = sub_245387818();
  __swift_project_value_buffer(v8, (uint64_t)qword_257462FE0);
  sub_24526385C(v2, v3);
  sub_24526385C(v4, v36);
  v35 = v2;
  v37 = v3;
  sub_24526385C(v2, v3);
  v9 = v4;
  sub_24526385C(v4, v36);
  v10 = sub_2453877F4();
  v11 = sub_245387D34();
  log = v10;
  v12 = os_log_type_enabled(v10, v11);
  v13 = v7;
  if (v12)
  {
    type = v11;
    v14 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    v47 = v30;
    *(_DWORD *)v14 = 136446466;
    v15 = v38;
    v42 = v2;
    v43 = v3;
    v44 = v39;
    v45 = v38;
    v46 = v40;
    sub_24526385C(v2, v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2574521A0);
    v16 = v5;
    v17 = v6;
    v18 = sub_245387B48();
    v42 = sub_2453816D8(v18, v19, &v47);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_24526388C(v2, v3);
    sub_24526388C(v2, v3);
    *(_WORD *)(v14 + 12) = 2082;
    v42 = v9;
    v43 = v36;
    v44 = v6;
    v45 = v16;
    v46 = v13;
    sub_24526385C(v9, v36);
    v20 = sub_245387B48();
    v42 = sub_2453816D8(v20, v21, &v47);
    v22 = v36;
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_24526388C(v9, v36);
    sub_24526388C(v9, v36);
    _os_log_impl(&dword_245256000, log, type, "Updating paired device from %{public}s to %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v30, -1, -1);
    MEMORY[0x24953317C](v14, -1, -1);

    v23 = v39;
    v24 = v37;
    if (v37)
      goto LABEL_5;
LABEL_15:
    if (!v22)
    {
      v26 = 0;
      v9 = v35;
      v22 = v24;
      v17 = v23;
      v16 = v15;
      LOBYTE(v13) = v40;
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  v34 = v5;
  v27 = v7;
  v15 = v38;
  v23 = v39;
  sub_24526388C(v2, v37);
  sub_24526388C(v2, v37);
  v22 = v36;
  sub_24526388C(v9, v36);
  sub_24526388C(v9, v36);

  v24 = v37;
  v17 = v6;
  v13 = v27;
  v16 = v34;
  if (!v37)
    goto LABEL_15;
LABEL_5:
  if (!v22)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_18:
    sub_24526385C(v9, v22);
    v25 = v35;
    sub_24526388C(v35, v24);
    sub_24526388C(v9, v22);
LABEL_19:
    sub_24526388C(v25, v24);
    v28 = *(_QWORD *)(v31 + 8);
    v41 = *(_QWORD *)v31;
    *(_QWORD *)v31 = v9;
    *(_QWORD *)(v31 + 8) = v22;
    *(_QWORD *)(v31 + 16) = v17;
    *(_QWORD *)(v31 + 24) = v16;
    *(_BYTE *)(v31 + 32) = v13;
    sub_24526385C(v9, v22);
    sub_24526388C(v41, v28);
    v26 = 1;
    goto LABEL_20;
  }
  v25 = v35;
  if ((v35 != v9 || v24 != v22) && (sub_245388274() & 1) == 0
    || (v23 != v17 || v15 != v16) && (sub_245388274() & 1) == 0
    || v40 != v13)
  {
    goto LABEL_19;
  }
  LOBYTE(v13) = v40;
  sub_24526388C(v9, v22);
  v26 = 0;
  v9 = v35;
  v22 = v24;
  v17 = v23;
  v16 = v15;
LABEL_20:
  *(_BYTE *)a2 = v26;
  *(_QWORD *)(a2 + 8) = v9;
  *(_QWORD *)(a2 + 16) = v22;
  *(_QWORD *)(a2 + 24) = v17;
  *(_QWORD *)(a2 + 32) = v16;
  *(_BYTE *)(a2 + 40) = v13;
}

void sub_2452EB800(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2452EB238(*(_QWORD *)(v1 + 16), a1);
}

void sub_2452EB818(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x24953323C](v2);
  if (v3)
  {
    v4 = (void *)v3;
    if (qword_25744F650 != -1)
      swift_once();
    v5 = sub_245387818();
    __swift_project_value_buffer(v5, (uint64_t)qword_257462FE0);
    v6 = sub_2453877F4();
    v7 = sub_245387D34();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_245256000, v6, v7, "Paired watch updated, will check for pairing change", v8, 2u);
      MEMORY[0x24953317C](v8, -1, -1);
    }

    sub_2452EB118();
  }
}

_QWORD *sub_2452EB920(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  _QWORD *result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;

  if (!(a1 >> 62))
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_20:
    v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_21:
    swift_bridgeObjectRelease();
    return v4;
  }
LABEL_19:
  swift_bridgeObjectRetain();
  v3 = sub_245387F8C();
  if (!v3)
    goto LABEL_20;
LABEL_3:
  v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v5 = 4;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v6 = (id)MEMORY[0x24953221C](v5 - 4, a1);
    else
      v6 = *(id *)(a1 + 8 * v5);
    v7 = v6;
    v8 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    result = objc_msgSend(v6, sel_uniqueIDOverride);
    if (!result)
      break;
    v10 = result;
    v11 = sub_245387B18();
    v13 = v12;

    LOBYTE(v10) = sub_24531D83C(v11, v13, a2);
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0 && (v14 = IDSCopyIDForDevice()) != 0)
    {
      v15 = (void *)v14;
      v16 = sub_245387B18();
      v18 = v17;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_245323DF8(0, v4[2] + 1, 1, v4);
      v20 = v4[2];
      v19 = v4[3];
      if (v20 >= v19 >> 1)
        v4 = sub_245323DF8((_QWORD *)(v19 > 1), v20 + 1, 1, v4);
      v4[2] = v20 + 1;
      v21 = &v4[2 * v20];
      v21[4] = v16;
      v21[5] = v18;
    }
    else
    {

    }
    ++v5;
    if (v8 == v3)
      goto LABEL_21;
  }
  __break(1u);
  return result;
}

void sub_2452EBB00(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  id v24;
  void *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  __int128 v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  _QWORD v63[5];
  char v64;
  _OWORD v65[2];

  v4 = v3;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  v8 = MEMORY[0x24BDAC7A8](v57);
  v56 = (uint64_t)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v47 - v10;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574521D0);
  MEMORY[0x24BDAC7A8](v52);
  v13 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452C90);
  MEMORY[0x24BDAC7A8](v14);
  v55 = (uint64_t)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for Message();
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v51 = (uint64_t)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25744F650 != -1)
    swift_once();
  v17 = sub_245387818();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_257462FE0);
  v19 = a3;
  v20 = sub_2453877F4();
  v21 = sub_245387D04();
  if (!os_log_type_enabled(v20, v21))
  {

    goto LABEL_11;
  }
  v48 = v13;
  v49 = v4;
  v22 = (uint8_t *)swift_slowAlloc();
  v23 = swift_slowAlloc();
  *(_QWORD *)&v58 = v23;
  *(_DWORD *)v22 = 136446210;
  v50 = a1;
  v47[1] = v18;
  if (!a3)
    goto LABEL_9;
  v24 = objc_msgSend(v19, sel_originalGUID);
  if (!v24)
  {
    a3 = 0;
LABEL_9:
    v27 = 0;
    goto LABEL_10;
  }
  v25 = v24;
  a3 = (void *)sub_245387B18();
  v27 = v26;

LABEL_10:
  v61 = (uint64_t)a3;
  v62 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257451B90);
  v28 = sub_245387B48();
  v61 = sub_2453816D8(v28, v29, (uint64_t *)&v58);
  sub_245387E0C();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_245256000, v20, v21, "IDS incomingResourceAt:%{public}s", v22, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x24953317C](v23, -1, -1);
  MEMORY[0x24953317C](v22, -1, -1);

  a1 = v50;
  v13 = v48;
LABEL_11:
  if (a2)
  {
    *(_QWORD *)&v65[0] = 0x6567617373656DLL;
    *((_QWORD *)&v65[0] + 1) = 0xE700000000000000;
    sub_245387E78();
    if (*(_QWORD *)(a2 + 16) && (v30 = sub_2452C20BC((uint64_t)&v61), (v31 & 1) != 0))
    {
      sub_245263FBC(*(_QWORD *)(a2 + 56) + 32 * v30, (uint64_t)&v58);
    }
    else
    {
      v58 = 0u;
      v59 = 0u;
    }
    sub_2452CC334((uint64_t)&v61);
    if (*((_QWORD *)&v59 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v32 = v65[0];
        type metadata accessor for OPACKCoder();
        sub_24537DFE8(v65);
        sub_245263FBC((uint64_t)v65, (uint64_t)v63);
        v42 = MEMORY[0x24BEE4AF8];
        v43 = sub_24531B410(MEMORY[0x24BEE4AF8]);
        v61 = v42;
        v62 = v43;
        v63[4] = 0;
        v64 = 1;
        *((_QWORD *)&v59 + 1) = &type metadata for PropertyListTypeDecoder.RootDecoder;
        v60 = sub_245263FF8();
        *(_QWORD *)&v58 = swift_allocObject();
        sub_245264070((uint64_t)&v61, v58 + 16);
        v44 = v55;
        Message.init(from:)(&v58, v55);
        sub_2452640AC((uint64_t)&v61);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v44, 0, 1, v54);
        v45 = v51;
        sub_245263E24(v44, v51);
        v46 = (uint64_t)&v13[*(int *)(v52 + 48)];
        sub_245263EF4(v45, (uint64_t)v13);
        sub_245263F38(a1, v46);
        sub_245387878();
        sub_24525CB80(v32, *((unint64_t *)&v32 + 1));
        sub_245263F80((uint64_t)v13, &qword_2574521D0);
        sub_245263E80(v45);
        return;
      }
    }
    else
    {
      sub_245263F80((uint64_t)&v58, &qword_25440C9B0);
    }
    sub_245263F38(a1, (uint64_t)v11);
    swift_bridgeObjectRetain_n();
    v33 = sub_2453877F4();
    v34 = sub_245387D1C();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v36 = swift_slowAlloc();
      v61 = v36;
      *(_DWORD *)v35 = 136315394;
      sub_245263F38((uint64_t)v11, v56);
      v37 = sub_245387B48();
      *(_QWORD *)&v58 = sub_2453816D8(v37, v38, &v61);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_245263F80((uint64_t)v11, &qword_25744F610);
      *(_WORD *)(v35 + 12) = 2080;
      swift_bridgeObjectRetain();
      v39 = sub_245387A7C();
      v41 = v40;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v58 = sub_2453816D8(v39, v41, &v61);
      sub_245387E0C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v33, v34, "Message has no payload, url:%s, metadata.keys:%s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v36, -1, -1);
      MEMORY[0x24953317C](v35, -1, -1);

    }
    else
    {
      sub_245263F80((uint64_t)v11, &qword_25744F610);

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_2452EC310(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  id v22;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[2];
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  _QWORD v57[5];
  char v58;
  _OWORD v59[2];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574521D0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  MEMORY[0x24BDAC7A8](v9);
  v49 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452C90);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Message();
  v50 = *(_QWORD *)(v14 - 8);
  v51 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v48 = (uint64_t)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25744F650 != -1)
    swift_once();
  v16 = sub_245387818();
  __swift_project_value_buffer(v16, (uint64_t)qword_257462FE0);
  v17 = a2;
  v18 = sub_2453877F4();
  v19 = sub_245387D04();
  if (!os_log_type_enabled(v18, v19))
  {

    goto LABEL_11;
  }
  v45[0] = v13;
  v45[1] = v3;
  v20 = (uint8_t *)swift_slowAlloc();
  v21 = swift_slowAlloc();
  *(_QWORD *)&v52 = v21;
  *(_DWORD *)v20 = 136446210;
  v47 = v8;
  v46 = v6;
  if (!a2)
    goto LABEL_9;
  v22 = objc_msgSend(v17, sel_originalGUID);
  if (!v22)
  {
    a2 = 0;
LABEL_9:
    v25 = 0;
    goto LABEL_10;
  }
  v23 = v22;
  a2 = (void *)sub_245387B18();
  v25 = v24;

LABEL_10:
  v55 = (uint64_t)a2;
  v56 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257451B90);
  v26 = sub_245387B48();
  v55 = sub_2453816D8(v26, v27, (uint64_t *)&v52);
  sub_245387E0C();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_245256000, v18, v19, "IDS incomingMessage:%{public}s", v20, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x24953317C](v21, -1, -1);
  MEMORY[0x24953317C](v20, -1, -1);

  v8 = v47;
  v6 = v46;
  v13 = (char *)v45[0];
LABEL_11:
  if (a1)
  {
    *(_QWORD *)&v59[0] = 0x6567617373656DLL;
    *((_QWORD *)&v59[0] + 1) = 0xE700000000000000;
    sub_245387E78();
    if (*(_QWORD *)(a1 + 16) && (v28 = sub_2452C20BC((uint64_t)&v55), (v29 & 1) != 0))
    {
      sub_245263FBC(*(_QWORD *)(a1 + 56) + 32 * v28, (uint64_t)&v52);
    }
    else
    {
      v52 = 0u;
      v53 = 0u;
    }
    sub_2452CC334((uint64_t)&v55);
    if (*((_QWORD *)&v53 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v30 = v59[0];
        type metadata accessor for OPACKCoder();
        sub_24537DFE8(v59);
        sub_245263FBC((uint64_t)v59, (uint64_t)v57);
        v31 = (uint64_t)v13;
        v32 = MEMORY[0x24BEE4AF8];
        v33 = sub_24531B410(MEMORY[0x24BEE4AF8]);
        v55 = v32;
        v56 = v33;
        v57[4] = 0;
        v58 = 1;
        *((_QWORD *)&v53 + 1) = &type metadata for PropertyListTypeDecoder.RootDecoder;
        v54 = sub_245263FF8();
        *(_QWORD *)&v52 = swift_allocObject();
        sub_245264070((uint64_t)&v55, v52 + 16);
        Message.init(from:)(&v52, v31);
        sub_2452640AC((uint64_t)&v55);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(v31, 0, 1, v51);
        v41 = v48;
        sub_245263E24(v31, v48);
        v42 = sub_2453875E4();
        v43 = (uint64_t)v49;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v49, 1, 1, v42);
        v44 = (uint64_t)&v8[*(int *)(v6 + 48)];
        sub_245263EF4(v41, (uint64_t)v8);
        sub_2452ECDE4(v43, v44);
        sub_245387878();
        sub_24525CB80(v30, *((unint64_t *)&v30 + 1));
        sub_245263F80((uint64_t)v8, &qword_2574521D0);
        sub_245263E80(v41);
        return;
      }
    }
    else
    {
      sub_245263F80((uint64_t)&v52, &qword_25440C9B0);
    }
    swift_bridgeObjectRetain_n();
    v34 = sub_2453877F4();
    v35 = sub_245387D1C();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v55 = v37;
      *(_DWORD *)v36 = 136315138;
      swift_bridgeObjectRetain();
      v38 = sub_245387A7C();
      v40 = v39;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v52 = sub_2453816D8(v38, v40, &v55);
      sub_245387E0C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v34, v35, "Message has no payload, message.keys:%s", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v37, -1, -1);
      MEMORY[0x24953317C](v36, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_2452ECA6C(uint64_t a1, unint64_t a2, int a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29[2];

  v29[1] = *MEMORY[0x24BDAC8D0];
  v8 = sub_245387818();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25744F650 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v8, (uint64_t)qword_257462FE0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  swift_bridgeObjectRetain();
  v13 = a4;
  swift_bridgeObjectRetain();
  v14 = a4;
  v15 = sub_2453877F4();
  v16 = sub_245387D04();
  if (os_log_type_enabled(v15, v16))
  {
    v27 = a3;
    v26 = v9;
    v17 = swift_slowAlloc();
    v24 = (_QWORD *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v29[0] = v25;
    *(_DWORD *)v17 = 136446722;
    if (a2)
    {
      swift_bridgeObjectRetain();
      v28 = sub_2453816D8(a1, a2, v29);
      sub_245387E0C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v17 + 12) = 1026;
      LODWORD(v28) = v27 & 1;
      sub_245387E0C();
      *(_WORD *)(v17 + 18) = 2114;
      if (a4)
      {
        v18 = a4;
        v19 = _swift_stdlib_bridgeErrorToNSError();
        v28 = v19;
        sub_245387E0C();
      }
      else
      {
        v28 = 0;
        sub_245387E0C();
        v19 = 0;
      }
      v21 = v25;
      v20 = v26;
      v22 = v24;
      *v24 = v19;

      _os_log_impl(&dword_245256000, v15, v16, "IDS message:%{public}s didSendWithSuccess:%{BOOL,public}d error:%{public}@", (uint8_t *)v17, 0x1Cu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v22, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v21, -1, -1);
      MEMORY[0x24953317C](v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v8);
    }
    else
    {

      __break(1u);
    }
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_2452ECDB0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_2452ECDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2452ECE2C()
{
  unint64_t result;

  result = qword_257452990;
  if (!qword_257452990)
  {
    result = MEMORY[0x2495330B0](&unk_24538C5A4, &type metadata for IDSServiceWrapper.SyncError);
    atomic_store(result, (unint64_t *)&qword_257452990);
  }
  return result;
}

uint64_t sub_2452ECE70()
{
  return swift_release();
}

uint64_t sub_2452ECE78()
{
  uint64_t v0;

  return sub_2452E92B8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2452ECE90()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_2452ECEB4(uint64_t a1)
{
  uint64_t v1;

  sub_2452EB818(a1, v1);
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t storeEnumTagSinglePayload for IDSServiceWrapper.SyncError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2452ECF14 + 4 * byte_24538C4F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2452ECF34 + 4 * byte_24538C4F5[v4]))();
}

_BYTE *sub_2452ECF14(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2452ECF34(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2452ECF3C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2452ECF44(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2452ECF4C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2452ECF54(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IDSServiceWrapper.SyncError()
{
  return &type metadata for IDSServiceWrapper.SyncError;
}

unint64_t sub_2452ECF74()
{
  unint64_t result;

  result = qword_2574529A0;
  if (!qword_2574529A0)
  {
    result = MEMORY[0x2495330B0](&unk_24538C57C, &type metadata for IDSServiceWrapper.SyncError);
    atomic_store(result, (unint64_t *)&qword_2574529A0);
  }
  return result;
}

uint64_t sub_2452ECFB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 24);
  }
  else
  {
    v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FED0);
    sub_24526381C((unint64_t *)&qword_25744FEC8, &qword_25744FED0, MEMORY[0x24BDB9CB0]);
    v1 = sub_24538789C();
    *(_QWORD *)(v2 + 24) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_2452ED05C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_release();
}

uint64_t (*sub_2452ED06C(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_2452ECFB8();
  return sub_2452ED0A0;
}

uint64_t sub_2452ED0A0(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + 24) = *a1;
  return swift_release();
}

void sub_2452ED0B0(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  os_unfair_lock_s *v3;
  uint64_t *v4;
  os_unfair_lock_s *v5;
  BOOL v6;

  v3 = *(os_unfair_lock_s **)(*(_QWORD *)a1 + 16);
  v4 = (uint64_t *)&v3[4];
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_2452ED1D0(v4, &v6);
  os_unfair_lock_unlock(v5);
  *a2 = v6;
}

void sub_2452ED118(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;

  v2 = *(os_unfair_lock_s **)(*(_QWORD *)a2 + 16);
  v3 = v2 + 4;
  v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_2452EDEC0(v3);
  os_unfair_lock_unlock(v4);
}

BOOL sub_2452ED174()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t *v2;
  os_unfair_lock_s *v3;
  BOOL v5;

  v1 = *(os_unfair_lock_s **)(v0 + 16);
  v2 = (uint64_t *)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_2452ED1D0(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_2452ED1D0@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL *v15;
  __int128 v16[2];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = *a1;
  v4 = MEMORY[0x24BEE4AF8];
  v20 = MEMORY[0x24BEE4AF8];
  v5 = *(_QWORD *)(v3 + 16);
  result = swift_bridgeObjectRetain();
  if (v5)
  {
    v15 = a2;
    v7 = 0;
    v8 = v3 + 32;
    v9 = MEMORY[0x24BEE4AF8];
    while (v7 < *(_QWORD *)(v3 + 16))
    {
      sub_24525E4F0(v8, (uint64_t)&v17);
      v10 = v18;
      v11 = v19;
      __swift_project_boxed_opaque_existential_1(&v17, v18);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11) & 1) != 0)
      {
        result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
      }
      else
      {
        sub_2452B7C5C(&v17, (uint64_t)v16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_24532C684(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v20;
        v13 = *(_QWORD *)(v20 + 16);
        v12 = *(_QWORD *)(v20 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_24532C684(v12 > 1, v13 + 1, 1);
          v9 = v20;
        }
        *(_QWORD *)(v9 + 16) = v13 + 1;
        result = sub_2452B7C5C(v16, v9 + 40 * v13 + 32);
      }
      ++v7;
      v8 += 40;
      if (v5 == v7)
      {
        v4 = v20;
        a2 = v15;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    v14 = *(_QWORD *)(v4 + 16);
    result = swift_release();
    *a2 = v14 == 0;
  }
  return result;
}

void sub_2452ED358(char a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;

  v3 = *(os_unfair_lock_s **)(v1 + 16);
  v4 = v3 + 4;
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_2452ED3AC(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_2452ED3AC(_QWORD *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[40];
  __int128 v19[2];
  uint64_t v20;

  v2 = a1;
  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 16);
  if (v4)
  {
    v20 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_24532C684(0, v4, 0);
    v6 = v3 + 32;
    v7 = v20;
    v8 = a2 & 1;
    do
    {
      sub_24525E4F0(v6, (uint64_t)v18);
      sub_24525E4F0((uint64_t)v18, (uint64_t)&v15);
      v10 = v16;
      v9 = v17;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v15, v16);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(v8, v10, v9);
      sub_2452B7C5C(&v15, (uint64_t)v19);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24532C684(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v20;
      }
      v12 = *(_QWORD *)(v7 + 16);
      v11 = *(_QWORD *)(v7 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_24532C684(v11 > 1, v12 + 1, 1);
        v7 = v20;
      }
      *(_QWORD *)(v7 + 16) = v12 + 1;
      sub_2452B7C5C(v19, v7 + 40 * v12 + 32);
      v6 += 40;
      --v4;
    }
    while (v4);
    v2 = a1;
  }
  else
  {
    swift_bridgeObjectRetain();
    v7 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *v2 = v7;
  return result;
}

void (*sub_2452ED548(uint64_t a1))(char *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t *v4;
  os_unfair_lock_s *v5;
  BOOL v7;

  v3 = *(os_unfair_lock_s **)(v1 + 16);
  *(_QWORD *)a1 = v3;
  v4 = (uint64_t *)&v3[4];
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_2452ED1D0(v4, &v7);
  *(_QWORD *)(a1 + 8) = 0;
  os_unfair_lock_unlock(v5);
  *(_BYTE *)(a1 + 16) = v7;
  return sub_2452ED5C0;
}

void sub_2452ED5C0(char *a1)
{
  os_unfair_lock_s *v1;
  _QWORD *v2;
  char v3;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)a1 + 24);
  v2 = (_QWORD *)(*(_QWORD *)a1 + 16);
  v3 = a1[16];
  os_unfair_lock_lock(v1);
  sub_2452ED3AC(v2, v3);
  os_unfair_lock_unlock(v1);
}

_QWORD *MuxingZoneAdvertiser.__allocating_init(zoneAdvertisers:)(uint64_t a1)
{
  _QWORD *v2;

  swift_allocObject();
  v2 = sub_2452EDBDC(a1);
  swift_bridgeObjectRelease();
  return v2;
}

_QWORD *MuxingZoneAdvertiser.init(zoneAdvertisers:)(uint64_t a1)
{
  _QWORD *v1;

  v1 = sub_2452EDBDC(a1);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2452ED688()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_245387878();
    return swift_release();
  }
  return result;
}

void sub_2452ED720(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  _OWORD v10[10];
  uint64_t v11;

  v2 = *(_OWORD *)(a1 + 144);
  v10[8] = *(_OWORD *)(a1 + 128);
  v10[9] = v2;
  v11 = *(_QWORD *)(a1 + 160);
  v3 = *(_OWORD *)(a1 + 80);
  v10[4] = *(_OWORD *)(a1 + 64);
  v10[5] = v3;
  v4 = *(_OWORD *)(a1 + 112);
  v10[6] = *(_OWORD *)(a1 + 96);
  v10[7] = v4;
  v5 = *(_OWORD *)(a1 + 16);
  v10[0] = *(_OWORD *)a1;
  v10[1] = v5;
  v6 = *(_OWORD *)(a1 + 48);
  v7 = *(os_unfair_lock_s **)(v1 + 16);
  v8 = (uint64_t)&v7[4];
  v9 = v7 + 6;
  v10[2] = *(_OWORD *)(a1 + 32);
  v10[3] = v6;
  os_unfair_lock_lock(v7 + 6);
  sub_2452ED7A4(v8, (uint64_t)v10);
  os_unfair_lock_unlock(v9);
}

uint64_t sub_2452ED7A4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v12[10];
  uint64_t v13;

  v2 = *(_QWORD *)(*(_QWORD *)result + 16);
  if (v2)
  {
    v4 = (_QWORD *)(*(_QWORD *)result + 32);
    swift_bridgeObjectRetain();
    do
    {
      v5 = v4[3];
      v6 = v4[4];
      __swift_project_boxed_opaque_existential_1(v4, v5);
      v7 = *(_OWORD *)(a2 + 144);
      v12[8] = *(_OWORD *)(a2 + 128);
      v12[9] = v7;
      v13 = *(_QWORD *)(a2 + 160);
      v8 = *(_OWORD *)(a2 + 80);
      v12[4] = *(_OWORD *)(a2 + 64);
      v12[5] = v8;
      v9 = *(_OWORD *)(a2 + 112);
      v12[6] = *(_OWORD *)(a2 + 96);
      v12[7] = v9;
      v10 = *(_OWORD *)(a2 + 16);
      v12[0] = *(_OWORD *)a2;
      v12[1] = v10;
      v11 = *(_OWORD *)(a2 + 48);
      v12[2] = *(_OWORD *)(a2 + 32);
      v12[3] = v11;
      (*(void (**)(_OWORD *, uint64_t, uint64_t))(v6 + 40))(v12, v5, v6);
      v4 += 5;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_2452ED86C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(v0 + 16);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_2452ED8BC(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_2452ED8BC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(*(_QWORD *)result + 16);
  if (v1)
  {
    v2 = *(_QWORD *)result + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_24525E4F0(v2, (uint64_t)v5);
      v3 = v6;
      v4 = v7;
      __swift_project_boxed_opaque_existential_1(v5, v6);
      (*(void (**)(uint64_t, uint64_t))(v4 + 48))(v3, v4);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
      v2 += 40;
      --v1;
    }
    while (v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t MuxingZoneAdvertiser.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MuxingZoneAdvertiser.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2452ED9D0()
{
  return sub_2452ECFB8();
}

BOOL sub_2452ED9F0()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t *v2;
  os_unfair_lock_s *v3;
  BOOL v5;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 16);
  v2 = (uint64_t *)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_2452ED1D0(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_2452EDA50()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 16);
  v2 = v1 + 4;
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_2452EDEC0(v2);
  os_unfair_lock_unlock(v3);
}

void (*sub_2452EDAA8(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_2452ED548((uint64_t)v2);
  return sub_24527E9D8;
}

void sub_2452EDAF0()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 16);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_2452EDED8(v2);
  os_unfair_lock_unlock(v3);
}

void sub_2452EDB88()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 16);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_2452ED8BC(v2);
  os_unfair_lock_unlock(v3);
}

_QWORD *sub_2452EDBDC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2574500E0);
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 16) = MEMORY[0x24BEE4AF8];
  v1[2] = v3;
  v1[3] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FED0);
  swift_allocObject();
  v4 = sub_245387884();
  v1[5] = MEMORY[0x24BEE4B08];
  v1[4] = v4;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + 16) = a1;
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  swift_release();
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v6 = (_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain();
    v7 = MEMORY[0x24BDB9AF8];
    do
    {
      v8 = v6[3];
      v9 = v6[4];
      __swift_project_boxed_opaque_existential_1(v6, v8);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
      swift_allocObject();
      swift_weakInit();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25744FE70);
      sub_24526381C(&qword_25744FE68, &qword_25744FE70, v7);
      sub_2453878C0();
      swift_release();
      swift_release();
      swift_beginAccess();
      sub_245387860();
      swift_endAccess();
      swift_release();
      v6 += 5;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_2452EDDCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2452ECFB8();
  *a1 = result;
  return result;
}

uint64_t sub_2452EDDF4(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 24) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t type metadata accessor for MuxingZoneAdvertiser()
{
  return objc_opt_self();
}

uint64_t method lookup function for MuxingZoneAdvertiser()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MuxingZoneAdvertiser.zoneVersionPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of MuxingZoneAdvertiser.zoneVersionPublisher.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of MuxingZoneAdvertiser.zoneVersionPublisher.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of MuxingZoneAdvertiser.isEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of MuxingZoneAdvertiser.isEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of MuxingZoneAdvertiser.isEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of MuxingZoneAdvertiser.__allocating_init(zoneAdvertisers:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of MuxingZoneAdvertiser.advertise(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of MuxingZoneAdvertiser.subscribe()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t sub_2452EDEC0(_QWORD *a1)
{
  uint64_t v1;

  return sub_2452ED3AC(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_2452EDED8(uint64_t a1)
{
  uint64_t v1;

  return sub_2452ED7A4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_2452EDEF0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2452EDF14()
{
  return sub_2452ED688();
}

uint64_t dispatch thunk of HandshakeTask.handshakeDescriptor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HandshakeTask.schedule.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HandshakeTask.init(handshakeDescriptor:schedule:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of HandshakeTask.cancel()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_2452EDF3C(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void (*v14)(uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t, double);

  v9 = v4[7];
  if (v9 && *(_QWORD *)(v9 + 16))
  {
    *(_QWORD *)(v9 + 16) = 0;
    swift_retain();
    swift_unknownObjectRelease();
    swift_getObjectType();
    sub_245387DD0();
    swift_release();
  }
  type metadata accessor for KeepAliveTransaction();
  swift_allocObject();
  v4[7] = sub_2452E000C(0x76696C417065654BLL, 0xEE0072656D695465);
  swift_release();
  v10 = v4[5];
  v11 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v10);
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v12;
  v13[3] = a2;
  v13[4] = a3;
  v14 = *(void (**)(uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t, double))(v11 + 8);
  swift_retain();
  swift_retain();
  v14(a1, sub_2452EE2C4, v13, v10, v11, a4);
  swift_release();
  return swift_release();
}

uint64_t sub_2452EE0A8(uint64_t a1, void (*a2)(void))
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    a2();
    v5 = *(_QWORD *)(v4 + 56);
    if (v5)
    {
      if (*(_QWORD *)(v5 + 16))
      {
        *(_QWORD *)(v5 + 16) = 0;
        swift_retain();
        swift_unknownObjectRelease();
        swift_getObjectType();
        sub_245387DD0();
        swift_release();
      }
    }
    *(_QWORD *)(v4 + 56) = 0;
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_2452EE158()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  v3 = v0[7];
  if (v3 && *(_QWORD *)(v3 + 16))
  {
    *(_QWORD *)(v3 + 16) = 0;
    swift_retain();
    swift_unknownObjectRelease();
    swift_getObjectType();
    sub_245387DD0();
    swift_release();
  }
  v0[7] = 0;
  return swift_release();
}

uint64_t sub_2452EE1E8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for KeepAliveTimer()
{
  return objc_opt_self();
}

uint64_t sub_2452EE234(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  return sub_2452EDF3C(a1, a2, a3, a4);
}

uint64_t sub_2452EE254()
{
  return sub_2452EE158();
}

uint64_t sub_2452EE274()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2452EE298()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2452EE2C4()
{
  uint64_t v0;

  return sub_2452EE0A8(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

void sub_2452EE2D0()
{
  uint64_t v0;

  if (__OFSUB__(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 32)))
    __break(1u);
}

uint64_t ExponentialBackoffRetryTimer.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440BFA0);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v0 + 48) = v1;
  *(_QWORD *)(v0 + 16) = 3;
  *(_QWORD *)(v0 + 24) = 0x4030000000000000;
  *(_OWORD *)(v0 + 32) = xmmword_24538C690;
  return v0;
}

_QWORD *ExponentialBackoffRetryTimer.init()()
{
  _QWORD *v0;
  uint64_t v1;

  v0[5] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440BFA0);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  v0[6] = v1;
  v0[2] = 3;
  v0[3] = 0x4030000000000000;
  v0[4] = 3;
  return v0;
}

uint64_t ExponentialBackoffRetryTimer.__allocating_init(maxRetries:intervalUntilRetry:)(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 40) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440BFA0);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  *(double *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a1;
  return v4;
}

uint64_t ExponentialBackoffRetryTimer.init(maxRetries:intervalUntilRetry:)(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v5;

  *(_QWORD *)(v2 + 40) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440BFA0);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v2 + 48) = v5;
  *(_QWORD *)(v2 + 16) = a1;
  *(double *)(v2 + 24) = a2;
  *(_QWORD *)(v2 + 32) = a1;
  return v2;
}

uint64_t ExponentialBackoffRetryTimer.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t ExponentialBackoffRetryTimer.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ExponentialBackoffRetryTimer()
{
  return objc_opt_self();
}

uint64_t PairingRelationship.init(id:remoteDevice:lastIncomingConnectionDate:lastOutgoingConnectionDate:state:initialPairingDate:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;

  v28 = a2[6];
  v29 = a2[7];
  v30 = a2[8];
  v31 = a2[9];
  v24 = a2[2];
  v25 = a2[3];
  v26 = a2[4];
  v27 = a2[5];
  v22 = *a2;
  v23 = a2[1];
  v12 = *a5;
  v13 = a5[1];
  v14 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a7, a1, v14);
  v15 = (int *)type metadata accessor for PairingRelationship();
  v16 = (_OWORD *)(a7 + v15[5]);
  v16[6] = v28;
  v16[7] = v29;
  v16[8] = v30;
  v16[9] = v31;
  v16[2] = v24;
  v16[3] = v25;
  v16[4] = v26;
  v16[5] = v27;
  *v16 = v22;
  v16[1] = v23;
  v17 = a7 + v15[6];
  v18 = sub_2453876EC();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
  v21(v17, a3, v18);
  v21(a7 + v15[7], a4, v18);
  v19 = (_QWORD *)(a7 + v15[8]);
  *v19 = v12;
  v19[1] = v13;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v21)(a7 + v15[9], a6, v18);
}

BOOL PairingRelationship.isPaired.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PairingRelationship() + 32) + 8) != 0;
}

uint64_t sub_2452EE66C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2452EE6A0 + 4 * byte_24538C6D0[*v0]))(0x6375646F72746E69, 0xEA00000000006465);
}

uint64_t sub_2452EE6A0()
{
  return 0x676E6972696170;
}

uint64_t sub_2452EE6B8()
{
  return 0x646572696170;
}

uint64_t sub_2452EE6CC()
{
  return 0x6E6974617267696DLL;
}

uint64_t sub_2452EE6E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2452F107C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2452EE70C()
{
  sub_2452EFA94();
  return sub_2453884D8();
}

uint64_t sub_2452EE734()
{
  sub_2452EFA94();
  return sub_2453884E4();
}

uint64_t sub_2452EE75C()
{
  sub_2452EFBA4();
  return sub_2453884D8();
}

uint64_t sub_2452EE784()
{
  sub_2452EFBA4();
  return sub_2453884E4();
}

uint64_t sub_2452EE7AC()
{
  return 1836020326;
}

uint64_t sub_2452EE7BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1836020326 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_245388274();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2452EE840()
{
  sub_2452EFAD8();
  return sub_2453884D8();
}

uint64_t sub_2452EE868()
{
  sub_2452EFAD8();
  return sub_2453884E4();
}

uint64_t sub_2452EE890()
{
  sub_2452EFB1C();
  return sub_2453884D8();
}

uint64_t sub_2452EE8B8()
{
  sub_2452EFB1C();
  return sub_2453884E4();
}

uint64_t sub_2452EE8E0()
{
  sub_2452EFB60();
  return sub_2453884D8();
}

uint64_t sub_2452EE908()
{
  sub_2452EFB60();
  return sub_2453884E4();
}

uint64_t PairingRelationship.State.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  char v41;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574529B0);
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574529B8);
  v31 = *(_QWORD *)(v6 - 8);
  v32 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v30 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574529C0);
  v28 = *(_QWORD *)(v8 - 8);
  v29 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574529C8);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574529D0);
  v36 = *(_QWORD *)(v15 - 8);
  v37 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v2;
  v19 = v2[1];
  v27 = v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452EFA94();
  sub_24538849C();
  switch(v19)
  {
    case 0:
      v38 = 0;
      sub_2452EFBA4();
      v21 = v37;
      sub_245388070();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v17, v21);
    case 1:
      v39 = 1;
      sub_2452EFB60();
      v23 = v37;
      sub_245388070();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v29);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v17, v23);
    case 2:
      v40 = 2;
      sub_2452EFB1C();
      v20 = v30;
      v21 = v37;
      sub_245388070();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v32);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v17, v21);
    default:
      v41 = 3;
      sub_2452EFAD8();
      v24 = v33;
      v25 = v37;
      sub_245388070();
      v26 = v35;
      sub_2453880A0();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v26);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v17, v25);
  }
}

uint64_t PairingRelationship.State.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;

  v30 = a2;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452A00);
  v26 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v29 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452A08);
  v23[4] = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452A10);
  v23[5] = *(_QWORD *)(v5 - 8);
  v23[6] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v27 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452A18);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452A20);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_2452EFA94();
  v16 = v32;
  sub_245388490();
  if (!v16)
  {
    v23[2] = v7;
    v23[3] = v10;
    v23[1] = v8;
    v32 = v12;
    v17 = sub_245388058();
    v18 = v11;
    if (*(_QWORD *)(v17 + 16) == 1)
      __asm { BR              X10 }
    v19 = sub_245387EE4();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v21 = &type metadata for PairingRelationship.State;
    sub_245387FEC();
    sub_245387ECC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v18);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
}

uint64_t sub_2452EF20C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PairingRelationship.State.init(from:)(a1, a2);
}

uint64_t sub_2452EF220(_QWORD *a1)
{
  return PairingRelationship.State.encode(to:)(a1);
}

uint64_t PairingRelationship.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_245387740();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PairingRelationship.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_245387740();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*PairingRelationship.id.modify())()
{
  return nullsub_1;
}

uint64_t PairingRelationship.remoteDevice.getter@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _OWORD v19[2];
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v3 = (_OWORD *)(v1 + *(int *)(type metadata accessor for PairingRelationship() + 20));
  v4 = v3[7];
  v5 = v3[5];
  v24 = v3[6];
  v25 = v4;
  v6 = v3[7];
  v7 = v3[9];
  v26 = v3[8];
  v8 = v26;
  v27 = v7;
  v9 = v3[3];
  v11 = v3[1];
  v20 = v3[2];
  v10 = v20;
  v21 = v9;
  v12 = v3[3];
  v13 = v3[5];
  v22 = v3[4];
  v14 = v22;
  v23 = v13;
  v15 = v3[1];
  v19[0] = *v3;
  v16 = v19[0];
  v19[1] = v15;
  a1[6] = v24;
  a1[7] = v6;
  v17 = v3[9];
  a1[8] = v8;
  a1[9] = v17;
  a1[2] = v10;
  a1[3] = v12;
  a1[4] = v14;
  a1[5] = v5;
  *a1 = v16;
  a1[1] = v11;
  return sub_24526432C((uint64_t)v19);
}

__n128 PairingRelationship.remoteDevice.setter(uint64_t a1)
{
  uint64_t v1;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __n128 result;
  __int128 v14;
  _OWORD v15[10];

  v3 = (_OWORD *)(v1 + *(int *)(type metadata accessor for PairingRelationship() + 20));
  v4 = v3[7];
  v15[6] = v3[6];
  v15[7] = v4;
  v5 = v3[9];
  v15[8] = v3[8];
  v15[9] = v5;
  v6 = v3[3];
  v15[2] = v3[2];
  v15[3] = v6;
  v7 = v3[5];
  v15[4] = v3[4];
  v15[5] = v7;
  v8 = v3[1];
  v15[0] = *v3;
  v15[1] = v8;
  sub_245269928((uint64_t)v15);
  v9 = *(_OWORD *)(a1 + 112);
  v3[6] = *(_OWORD *)(a1 + 96);
  v3[7] = v9;
  v10 = *(_OWORD *)(a1 + 144);
  v3[8] = *(_OWORD *)(a1 + 128);
  v3[9] = v10;
  v11 = *(_OWORD *)(a1 + 48);
  v3[2] = *(_OWORD *)(a1 + 32);
  v3[3] = v11;
  v12 = *(_OWORD *)(a1 + 80);
  v3[4] = *(_OWORD *)(a1 + 64);
  v3[5] = v12;
  result = *(__n128 *)a1;
  v14 = *(_OWORD *)(a1 + 16);
  *v3 = *(_OWORD *)a1;
  v3[1] = v14;
  return result;
}

uint64_t (*PairingRelationship.remoteDevice.modify())(_QWORD)
{
  type metadata accessor for PairingRelationship();
  return nullsub_1;
}

uint64_t PairingRelationship.lastIncomingConnectionDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PairingRelationship() + 24);
  v4 = sub_2453876EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PairingRelationship.lastIncomingConnectionDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PairingRelationship() + 24);
  v4 = sub_2453876EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PairingRelationship.lastIncomingConnectionDate.modify())(_QWORD)
{
  type metadata accessor for PairingRelationship();
  return nullsub_1;
}

uint64_t PairingRelationship.lastOutgoingConnectionDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PairingRelationship() + 28);
  v4 = sub_2453876EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PairingRelationship.lastOutgoingConnectionDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PairingRelationship() + 28);
  v4 = sub_2453876EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PairingRelationship.lastOutgoingConnectionDate.modify())(_QWORD)
{
  type metadata accessor for PairingRelationship();
  return nullsub_1;
}

uint64_t PairingRelationship.state.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PairingRelationship() + 32));
  v4 = *v3;
  v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_24526B470(v4, v5);
}

uint64_t PairingRelationship.state.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = v1 + *(int *)(type metadata accessor for PairingRelationship() + 32);
  result = sub_24526B484(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = v3;
  return result;
}

uint64_t (*PairingRelationship.state.modify())(_QWORD)
{
  type metadata accessor for PairingRelationship();
  return nullsub_1;
}

uint64_t PairingRelationship.initialPairingDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PairingRelationship() + 36);
  v4 = sub_2453876EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PairingRelationship.initialPairingDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PairingRelationship() + 36);
  v4 = sub_2453876EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PairingRelationship.initialPairingDate.modify())(_QWORD)
{
  type metadata accessor for PairingRelationship();
  return nullsub_1;
}

uint64_t PairingRelationship.description.getter()
{
  sub_245387EA8();
  sub_245387B90();
  sub_245387740();
  sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_2453880F4();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  type metadata accessor for PairingRelationship();
  sub_245387F5C();
  sub_245387B90();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  DeviceDescriptor.shortDescription.getter();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  sub_2453876EC();
  sub_24525C6C4((unint64_t *)&qword_2574525E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
  sub_2453880F4();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  sub_2453880F4();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  return 0;
}

uint64_t _s16ReplicatorEngine19PairingRelationshipV5StateO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (!v3)
  {
    if (!v5)
    {
      v3 = 0;
      v6 = 1;
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if (v3 == 1)
  {
    if (v5 == 1)
    {
      v3 = 1;
      v6 = 1;
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if (v3 != 2)
  {
    if (v5 >= 3)
    {
      if (v2 == v4 && v3 == v5)
        v6 = 1;
      else
        v6 = sub_245388274();
      goto LABEL_12;
    }
LABEL_11:
    v6 = 0;
LABEL_12:
    sub_24526B470(v4, v5);
    sub_24526B470(v2, v3);
    goto LABEL_13;
  }
  if (v5 != 2)
    goto LABEL_11;
  v6 = 1;
  v3 = 2;
LABEL_13:
  sub_24526B484(v2, v3);
  sub_24526B484(v4, v5);
  return v6 & 1;
}

uint64_t type metadata accessor for PairingRelationship()
{
  uint64_t result;

  result = qword_25744FAB8;
  if (!qword_25744FAB8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_2452EFA94()
{
  unint64_t result;

  result = qword_2574529D8;
  if (!qword_2574529D8)
  {
    result = MEMORY[0x2495330B0](&unk_24538CC84, &type metadata for PairingRelationship.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574529D8);
  }
  return result;
}

unint64_t sub_2452EFAD8()
{
  unint64_t result;

  result = qword_2574529E0;
  if (!qword_2574529E0)
  {
    result = MEMORY[0x2495330B0](&unk_24538CC34, &type metadata for PairingRelationship.State.MigratingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574529E0);
  }
  return result;
}

unint64_t sub_2452EFB1C()
{
  unint64_t result;

  result = qword_2574529E8;
  if (!qword_2574529E8)
  {
    result = MEMORY[0x2495330B0](&unk_24538CBE4, &type metadata for PairingRelationship.State.PairedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574529E8);
  }
  return result;
}

unint64_t sub_2452EFB60()
{
  unint64_t result;

  result = qword_2574529F0;
  if (!qword_2574529F0)
  {
    result = MEMORY[0x2495330B0](&unk_24538CB94, &type metadata for PairingRelationship.State.PairingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574529F0);
  }
  return result;
}

unint64_t sub_2452EFBA4()
{
  unint64_t result;

  result = qword_2574529F8;
  if (!qword_2574529F8)
  {
    result = MEMORY[0x2495330B0](&unk_24538CB44, &type metadata for PairingRelationship.State.IntroducedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574529F8);
  }
  return result;
}

uint64_t _s16ReplicatorEngine19PairingRelationshipV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _OWORD v19[10];
  _OWORD v20[10];

  if ((sub_245387710() & 1) == 0)
    return 0;
  v4 = type metadata accessor for PairingRelationship();
  v5 = (_OWORD *)(a1 + *(int *)(v4 + 20));
  v6 = v5[7];
  v20[6] = v5[6];
  v20[7] = v6;
  v7 = v5[9];
  v20[8] = v5[8];
  v20[9] = v7;
  v8 = v5[3];
  v20[2] = v5[2];
  v20[3] = v8;
  v9 = v5[5];
  v20[4] = v5[4];
  v20[5] = v9;
  v10 = v5[1];
  v20[0] = *v5;
  v20[1] = v10;
  v11 = (_OWORD *)(a2 + *(int *)(v4 + 20));
  v12 = v11[7];
  v19[6] = v11[6];
  v19[7] = v12;
  v13 = v11[9];
  v19[8] = v11[8];
  v19[9] = v13;
  v14 = v11[3];
  v19[2] = v11[2];
  v19[3] = v14;
  v15 = v11[5];
  v19[4] = v11[4];
  v19[5] = v15;
  v16 = v11[1];
  v19[0] = *v11;
  v19[1] = v16;
  if ((_s16ReplicatorEngine16DeviceDescriptorV2eeoiySbAC_ACtFZ_0((uint64_t)v20, (uint64_t)v19) & 1) == 0)
    return 0;
  if ((sub_2453876BC() & 1) != 0
    && (sub_2453876BC() & 1) != 0
    && (v17 = *(int *)(v4 + 32),
        v20[0] = *(_OWORD *)(a1 + v17),
        v19[0] = *(_OWORD *)(a2 + v17),
        (_s16ReplicatorEngine19PairingRelationshipV5StateO2eeoiySbAE_AEtFZ_0((uint64_t *)v20, (uint64_t *)v19) & 1) != 0))
  {
    return sub_2453876BC();
  }
  else
  {
    return 0;
  }
}

char *initializeBufferWithCopyOfBuffer for PairingRelationship(char *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  unint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_245387740();
    (*(void (**)(char *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = *(_QWORD *)((char *)a2 + v8 + 8);
    *(_QWORD *)v9 = *(_QWORD *)((char *)a2 + v8);
    *((_QWORD *)v9 + 1) = v11;
    v12 = *(_QWORD *)((char *)a2 + v8 + 24);
    *((_QWORD *)v9 + 2) = *(_QWORD *)((char *)a2 + v8 + 16);
    *((_QWORD *)v9 + 3) = v12;
    *((_OWORD *)v9 + 2) = *(_OWORD *)((char *)a2 + v8 + 32);
    v9[48] = *((_BYTE *)a2 + v8 + 48);
    *(_OWORD *)(v9 + 56) = *(_OWORD *)((char *)a2 + v8 + 56);
    *(_OWORD *)(v9 + 72) = *(_OWORD *)((char *)a2 + v8 + 72);
    *((_WORD *)v9 + 44) = *(_WORD *)((char *)a2 + v8 + 88);
    v13 = *(_QWORD *)((char *)a2 + v8 + 104);
    *((_QWORD *)v9 + 12) = *(_QWORD *)((char *)a2 + v8 + 96);
    *((_QWORD *)v9 + 13) = v13;
    v14 = (_QWORD *)((char *)a2 + v8 + 112);
    v15 = *(_QWORD *)((char *)a2 + v8 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15 >> 60 == 15)
    {
      *((_OWORD *)v9 + 7) = *(_OWORD *)v14;
    }
    else
    {
      v17 = *v14;
      sub_245261C44(*v14, v15);
      *((_QWORD *)v9 + 14) = v17;
      *((_QWORD *)v9 + 15) = v15;
    }
    v18 = v10[17];
    *((_QWORD *)v9 + 16) = v10[16];
    *((_QWORD *)v9 + 17) = v18;
    v19 = v10[19];
    *((_QWORD *)v9 + 18) = v10[18];
    *((_QWORD *)v9 + 19) = v19;
    v20 = a3[6];
    v21 = &a1[v20];
    v22 = (char *)a2 + v20;
    v23 = sub_2453876EC();
    v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24(v21, v22, v23);
    v24(&a1[a3[7]], (char *)a2 + a3[7], v23);
    v25 = a3[8];
    v26 = &a1[v25];
    v27 = (_QWORD *)((char *)a2 + v25);
    v28 = v27[1];
    if (v28 >= 3)
    {
      *(_QWORD *)v26 = *v27;
      *((_QWORD *)v26 + 1) = v28;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v26 = *(_OWORD *)v27;
    }
    v24(&a1[a3[9]], (char *)a2 + a3[9], v23);
  }
  return a1;
}

uint64_t destroy for PairingRelationship(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v10)(uint64_t, uint64_t);

  v4 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 120);
  if (v6 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v5 + 112), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = a1 + a2[6];
  v8 = sub_2453876EC();
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v10(v7, v8);
  v10(a1 + a2[7], v8);
  if (*(_QWORD *)(a1 + a2[8] + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t, uint64_t))v10)(a1 + a2[9], v8);
}

uint64_t initializeWithCopy for PairingRelationship(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  unint64_t v26;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (_QWORD *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  v11 = *(_QWORD *)(a2 + v7 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = v11;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(a2 + v7 + 32);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(a2 + v7 + 48);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(a2 + v7 + 56);
  *(_OWORD *)(v8 + 72) = *(_OWORD *)(a2 + v7 + 72);
  *(_WORD *)(v8 + 88) = *(_WORD *)(a2 + v7 + 88);
  v12 = *(_QWORD *)(a2 + v7 + 104);
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(a2 + v7 + 96);
  *(_QWORD *)(v8 + 104) = v12;
  v13 = (uint64_t *)(a2 + v7 + 112);
  v14 = *(_QWORD *)(a2 + v7 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14 >> 60 == 15)
  {
    *(_OWORD *)(v8 + 112) = *(_OWORD *)v13;
  }
  else
  {
    v15 = *v13;
    sub_245261C44(*v13, v14);
    *(_QWORD *)(v8 + 112) = v15;
    *(_QWORD *)(v8 + 120) = v14;
  }
  v16 = v9[17];
  *(_QWORD *)(v8 + 128) = v9[16];
  *(_QWORD *)(v8 + 136) = v16;
  v17 = v9[19];
  *(_QWORD *)(v8 + 144) = v9[18];
  *(_QWORD *)(v8 + 152) = v17;
  v18 = a3[6];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_2453876EC();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22(v19, v20, v21);
  v22(a1 + a3[7], a2 + a3[7], v21);
  v23 = a3[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = v25[1];
  if (v26 >= 3)
  {
    *v24 = *v25;
    v24[1] = v26;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v24 = *(_OWORD *)v25;
  }
  v22(a1 + a3[9], a2 + a3[9], v21);
  return a1;
}

uint64_t assignWithCopy for PairingRelationship(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  v10 = *(_OWORD *)(v9 + 56);
  v11 = *(_OWORD *)(v9 + 72);
  *(_WORD *)(v8 + 88) = *(_WORD *)(v9 + 88);
  *(_OWORD *)(v8 + 72) = v11;
  *(_OWORD *)(v8 + 56) = v10;
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)(v9 + 112);
  v13 = *(_QWORD *)(v9 + 120);
  if (*(_QWORD *)(v8 + 120) >> 60 == 15)
  {
    if (v13 >> 60 != 15)
    {
      v14 = *v12;
      sub_245261C44(*v12, *(_QWORD *)(v9 + 120));
      *(_QWORD *)(v8 + 112) = v14;
      *(_QWORD *)(v8 + 120) = v13;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v13 >> 60 == 15)
  {
    sub_2452CAE18(v8 + 112);
LABEL_6:
    *(_OWORD *)(v8 + 112) = *(_OWORD *)v12;
    goto LABEL_8;
  }
  v15 = *v12;
  sub_245261C44(*v12, *(_QWORD *)(v9 + 120));
  v16 = *(_QWORD *)(v8 + 112);
  v17 = *(_QWORD *)(v8 + 120);
  *(_QWORD *)(v8 + 112) = v15;
  *(_QWORD *)(v8 + 120) = v13;
  sub_24525CB80(v16, v17);
LABEL_8:
  *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 + 128);
  *(_QWORD *)(v8 + 136) = *(_QWORD *)(v9 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 144) = *(_QWORD *)(v9 + 144);
  *(_QWORD *)(v8 + 152) = *(_QWORD *)(v9 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[6];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_2453876EC();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24);
  v22(v19, v20, v21);
  v22(a1 + a3[7], a2 + a3[7], v21);
  v23 = a3[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = *(_QWORD *)(a1 + v23 + 8);
  v27 = *(_QWORD *)(a2 + v23 + 8);
  if (v26 >= 3)
  {
    if (v27 >= 3)
    {
      *v24 = *v25;
      v24[1] = v25[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_2452F0434((uint64_t)v24);
    goto LABEL_13;
  }
  if (v27 < 3)
  {
LABEL_13:
    *(_OWORD *)v24 = *(_OWORD *)v25;
    goto LABEL_15;
  }
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
LABEL_15:
  v22(a1 + a3[9], a2 + a3[9], v21);
  return a1;
}

uint64_t sub_2452F0434(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452DB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for PairingRelationship(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[7];
  v9[6] = v10[6];
  v9[7] = v11;
  v12 = v10[9];
  v9[8] = v10[8];
  v9[9] = v12;
  v13 = v10[3];
  v9[2] = v10[2];
  v9[3] = v13;
  v14 = v10[5];
  v9[4] = v10[4];
  v9[5] = v14;
  v15 = v10[1];
  *v9 = *v10;
  v9[1] = v15;
  v16 = a1 + v8;
  v17 = a2 + v8;
  v18 = sub_2453876EC();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
  v19(v16, v17, v18);
  v19(a1 + a3[7], a2 + a3[7], v18);
  v20 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v19(a1 + v20, a2 + v20, v18);
  return a1;
}

uint64_t assignWithTake for PairingRelationship(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  unint64_t v26;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
  *(_OWORD *)(v8 + 72) = *(_OWORD *)(v9 + 72);
  *(_WORD *)(v8 + 88) = *(_WORD *)(v9 + 88);
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRelease();
  v12 = (_OWORD *)(v9 + 112);
  v13 = *(_QWORD *)(v8 + 120);
  if (v13 >> 60 == 15)
    goto LABEL_4;
  v14 = *(_QWORD *)(v9 + 120);
  if (v14 >> 60 == 15)
  {
    sub_2452CAE18(v8 + 112);
LABEL_4:
    *(_OWORD *)(v8 + 112) = *v12;
    goto LABEL_6;
  }
  v15 = *(_QWORD *)(v8 + 112);
  *(_QWORD *)(v8 + 112) = *(_QWORD *)v12;
  *(_QWORD *)(v8 + 120) = v14;
  sub_24525CB80(v15, v13);
LABEL_6:
  v16 = *(_QWORD *)(v9 + 136);
  *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 + 128);
  *(_QWORD *)(v8 + 136) = v16;
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v9 + 152);
  *(_QWORD *)(v8 + 144) = *(_QWORD *)(v9 + 144);
  *(_QWORD *)(v8 + 152) = v17;
  swift_bridgeObjectRelease();
  v18 = a3[6];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_2453876EC();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40);
  v22(v19, v20, v21);
  v22(a1 + a3[7], a2 + a3[7], v21);
  v23 = a3[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  if (*(_QWORD *)(a1 + v23 + 8) >= 3uLL)
  {
    v26 = v25[1];
    if (v26 >= 3)
    {
      *v24 = *v25;
      v24[1] = v26;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_2452F0434((uint64_t)v24);
  }
  *(_OWORD *)v24 = *(_OWORD *)v25;
LABEL_11:
  v22(a1 + a3[9], a2 + a3[9], v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for PairingRelationship()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452F074C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_245387740();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_2453876EC();
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for PairingRelationship()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452F0804(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_245387740();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_2453876EC();
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_2452F08AC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_245387740();
  if (v1 <= 0x3F)
  {
    result = sub_2453876EC();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t destroy for PairingRelationship.State(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s16ReplicatorEngine19PairingRelationshipV5StateOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for PairingRelationship.State(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PairingRelationship.State(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PairingRelationship.State(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PairingRelationship.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

_QWORD *sub_2452F0B54(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PairingRelationship.State()
{
  return &type metadata for PairingRelationship.State;
}

uint64_t storeEnumTagSinglePayload for PairingRelationship.State.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2452F0BD0 + 4 * byte_24538C6DD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2452F0C04 + 4 * byte_24538C6D8[v4]))();
}

uint64_t sub_2452F0C04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452F0C0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2452F0C14);
  return result;
}

uint64_t sub_2452F0C20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2452F0C28);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2452F0C2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452F0C34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PairingRelationship.State.CodingKeys()
{
  return &type metadata for PairingRelationship.State.CodingKeys;
}

ValueMetadata *type metadata accessor for PairingRelationship.State.IntroducedCodingKeys()
{
  return &type metadata for PairingRelationship.State.IntroducedCodingKeys;
}

ValueMetadata *type metadata accessor for PairingRelationship.State.PairingCodingKeys()
{
  return &type metadata for PairingRelationship.State.PairingCodingKeys;
}

ValueMetadata *type metadata accessor for PairingRelationship.State.PairedCodingKeys()
{
  return &type metadata for PairingRelationship.State.PairedCodingKeys;
}

uint64_t storeEnumTagSinglePayload for PairingRelationship.State.MigratingCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2452F0CC0 + 4 * byte_24538C6E2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2452F0CE0 + 4 * byte_24538C6E7[v4]))();
}

_BYTE *sub_2452F0CC0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2452F0CE0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2452F0CE8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2452F0CF0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2452F0CF8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2452F0D00(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PairingRelationship.State.MigratingCodingKeys()
{
  return &type metadata for PairingRelationship.State.MigratingCodingKeys;
}

unint64_t sub_2452F0D20()
{
  unint64_t result;

  result = qword_257452A28;
  if (!qword_257452A28)
  {
    result = MEMORY[0x2495330B0](&unk_24538C974, &type metadata for PairingRelationship.State.MigratingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452A28);
  }
  return result;
}

unint64_t sub_2452F0D68()
{
  unint64_t result;

  result = qword_257452A30;
  if (!qword_257452A30)
  {
    result = MEMORY[0x2495330B0](&unk_24538CB1C, &type metadata for PairingRelationship.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452A30);
  }
  return result;
}

unint64_t sub_2452F0DB0()
{
  unint64_t result;

  result = qword_257452A38;
  if (!qword_257452A38)
  {
    result = MEMORY[0x2495330B0](&unk_24538CA3C, &type metadata for PairingRelationship.State.IntroducedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452A38);
  }
  return result;
}

unint64_t sub_2452F0DF8()
{
  unint64_t result;

  result = qword_257452A40;
  if (!qword_257452A40)
  {
    result = MEMORY[0x2495330B0](&unk_24538CA64, &type metadata for PairingRelationship.State.IntroducedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452A40);
  }
  return result;
}

unint64_t sub_2452F0E40()
{
  unint64_t result;

  result = qword_257452A48;
  if (!qword_257452A48)
  {
    result = MEMORY[0x2495330B0](&unk_24538C9EC, &type metadata for PairingRelationship.State.PairingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452A48);
  }
  return result;
}

unint64_t sub_2452F0E88()
{
  unint64_t result;

  result = qword_257452A50;
  if (!qword_257452A50)
  {
    result = MEMORY[0x2495330B0](&unk_24538CA14, &type metadata for PairingRelationship.State.PairingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452A50);
  }
  return result;
}

unint64_t sub_2452F0ED0()
{
  unint64_t result;

  result = qword_257452A58;
  if (!qword_257452A58)
  {
    result = MEMORY[0x2495330B0](&unk_24538C99C, &type metadata for PairingRelationship.State.PairedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452A58);
  }
  return result;
}

unint64_t sub_2452F0F18()
{
  unint64_t result;

  result = qword_257452A60;
  if (!qword_257452A60)
  {
    result = MEMORY[0x2495330B0](&unk_24538C9C4, &type metadata for PairingRelationship.State.PairedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452A60);
  }
  return result;
}

unint64_t sub_2452F0F60()
{
  unint64_t result;

  result = qword_257452A68;
  if (!qword_257452A68)
  {
    result = MEMORY[0x2495330B0](&unk_24538C8E4, &type metadata for PairingRelationship.State.MigratingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452A68);
  }
  return result;
}

unint64_t sub_2452F0FA8()
{
  unint64_t result;

  result = qword_257452A70;
  if (!qword_257452A70)
  {
    result = MEMORY[0x2495330B0](&unk_24538C90C, &type metadata for PairingRelationship.State.MigratingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452A70);
  }
  return result;
}

unint64_t sub_2452F0FF0()
{
  unint64_t result;

  result = qword_257452A78;
  if (!qword_257452A78)
  {
    result = MEMORY[0x2495330B0](&unk_24538CA8C, &type metadata for PairingRelationship.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452A78);
  }
  return result;
}

unint64_t sub_2452F1038()
{
  unint64_t result;

  result = qword_257452A80;
  if (!qword_257452A80)
  {
    result = MEMORY[0x2495330B0](&unk_24538CAB4, &type metadata for PairingRelationship.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452A80);
  }
  return result;
}

uint64_t sub_2452F107C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6375646F72746E69 && a2 == 0xEA00000000006465;
  if (v2 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E6972696170 && a2 == 0xE700000000000000 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646572696170 && a2 == 0xE600000000000000 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6974617267696DLL && a2 == 0xE900000000000067)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_245388274();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2452F1248()
{
  sub_24538843C();
  sub_245388460();
  return sub_245388478();
}

uint64_t sub_2452F128C()
{
  return sub_245388460();
}

uint64_t sub_2452F12B4()
{
  sub_24538843C();
  sub_245388460();
  return sub_245388478();
}

uint64_t sub_2452F12F4@<X0>(unsigned int *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_2452F3050(*a1);
  *a2 = result;
  return result;
}

void sub_2452F131C(_DWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_2452F1328()
{
  sub_2452F44C8();
  return sub_245387C14();
}

uint64_t sub_2452F1384()
{
  sub_2452F44C8();
  return sub_245387BFC();
}

uint64_t sub_2452F13D0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_245387740();
  __swift_allocate_value_buffer(v3, qword_257463040);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_257463040);
  sub_2453876F8();
  v5 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  __break(1u);
  return result;
}

void sub_2452F14B0(int a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v8[9];
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v9 = a1;
  v13 = *MEMORY[0x24BDAC8D0];
  v11 = sub_245387740();
  v4 = *(_QWORD *)(v11 - 8);
  v5 = MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v5);
  v12 = a3;
  v6 = (char *)&loc_2452F1554 + *((int *)qword_2452F1C98 + (a3 >> 62));
  v10 = v4;
  v8[8] = (char *)v8 - v7;
  __asm { BR              X10 }
}

uint64_t sub_2452F156C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  char v17;
  char v18;

  *(_WORD *)(v5 - 104) = v3;
  *(_BYTE *)(v5 - 102) = BYTE2(v3);
  *(_BYTE *)(v5 - 101) = BYTE3(v3);
  *(_BYTE *)(v5 - 100) = BYTE4(v3);
  *(_BYTE *)(v5 - 99) = BYTE5(v3);
  *(_QWORD *)(v5 - 168) = v2;
  *(_BYTE *)(v5 - 98) = BYTE6(v3);
  *(_QWORD *)(v5 - 152) = v1;
  *(_BYTE *)(v5 - 97) = HIBYTE(v3);
  v6 = v0;
  v7 = *(_QWORD *)(v5 - 120);
  v8 = *(_QWORD *)(v5 - 112);
  *(_BYTE *)(v5 - 96) = v8;
  *(_QWORD *)(v5 - 200) = v8 >> 16;
  *(_QWORD *)(v5 - 192) = v8 >> 8;
  *(_BYTE *)(v5 - 95) = BYTE1(v8);
  *(_BYTE *)(v5 - 94) = BYTE2(v8);
  *(_QWORD *)(v5 - 184) = HIDWORD(v8);
  *(_QWORD *)(v5 - 176) = v8 >> 24;
  *(_BYTE *)(v5 - 93) = BYTE3(v8);
  *(_QWORD *)(v5 - 160) = v8 >> 40;
  *(_BYTE *)(v5 - 92) = BYTE4(v8);
  *(_BYTE *)(v5 - 91) = BYTE5(v8);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v9(v6, v5 - 104, v7);
  *(_QWORD *)(v5 - 104) = v3;
  *(_BYTE *)(v5 - 96) = v8;
  *(_BYTE *)(v5 - 95) = *(_QWORD *)(v5 - 192);
  *(_BYTE *)(v5 - 94) = *(_QWORD *)(v5 - 200);
  v10 = *(_QWORD *)(v5 - 168);
  *(_BYTE *)(v5 - 93) = *(_QWORD *)(v5 - 176);
  *(_BYTE *)(v5 - 92) = *(_QWORD *)(v5 - 184);
  v11 = *(_QWORD *)(v5 - 152);
  *(_BYTE *)(v5 - 91) = *(_QWORD *)(v5 - 160);
  v9(v10, v5 - 88, *(_QWORD *)(v5 - 120));
  if (qword_257451C80 != -1)
    swift_once();
  v12 = *(_QWORD *)(v5 - 120);
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_257463040);
  v9(v11, v13, v12);
  sub_24525CB80(v3, *(_QWORD *)(v5 - 112));
  v14 = (int *)type metadata accessor for NetworkSyncHeader(0);
  *(_DWORD *)(v11 + v14[5]) = *(_DWORD *)(v5 - 132);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 128) + 32);
  v15(v11 + v14[6], *(_QWORD *)(v5 - 144), v12);
  result = v15(v11 + v14[7], v10, v12);
  *(_DWORD *)(v11 + v14[8]) = HIDWORD(v3);
  *(_DWORD *)(v11 + v14[10]) = *(_DWORD *)(v5 - 160);
  *(_DWORD *)(v11 + v14[11]) = v3 >> 24;
  if ((v3 >> 40) >= 4)
    v17 = 0;
  else
    v17 = BYTE5(v3);
  *(_BYTE *)(v11 + v14[9]) = v17;
  if ((v3 >> 16) >= 3)
    v18 = 2;
  else
    v18 = BYTE2(v3);
  *(_BYTE *)(v11 + v14[12]) = v18;
  return result;
}

uint64_t sub_2452F1CA8()
{
  uint64_t v0;
  char v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  int *v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  uint64_t v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  uint64_t v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  int __src;
  uint64_t v78;
  char v79;
  char v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v89 = *MEMORY[0x24BDAC8D0];
  v78 = sub_245387728();
  v79 = v1;
  v80 = v2;
  v81 = v3;
  v82 = v4;
  v83 = v5;
  v84 = v6;
  v85 = v7;
  v86 = v8;
  v9 = (int *)type metadata accessor for NetworkSyncHeader(0);
  __src = *(_DWORD *)(v0 + v9[5]);
  v68 = sub_245387728();
  v69 = v10;
  v70 = v11;
  v71 = v12;
  v72 = v13;
  v73 = v14;
  v74 = v15;
  v75 = v16;
  v76 = v17;
  v59 = sub_245387728();
  v60 = v18;
  v61 = v19;
  v62 = v20;
  v63 = v21;
  v64 = v22;
  v65 = v23;
  v66 = v24;
  v67 = v25;
  v26 = v9[9];
  v58 = *(_DWORD *)(v0 + v9[8]);
  v57 = *(unsigned __int8 *)(v0 + v26);
  v27 = *(_DWORD *)(v0 + v9[10]);
  v55 = *(_DWORD *)(v0 + v9[11]);
  v56 = v27;
  v54 = *(unsigned __int8 *)(v0 + v9[12]);
  v87 = sub_2452F3060(&v78, 16);
  v88 = v28;
  v29 = sub_2452F2F90(&__src, &v78);
  v31 = v30 & 0xFFFFFFFFFFFFFFLL;
  sub_245387650();
  sub_24525CB80(v29, v31);
  v32 = sub_2452F3060(&v68, 16);
  v34 = v33;
  sub_245387650();
  sub_24525CB80(v32, v34);
  v35 = sub_2452F3060(&v59, 16);
  v37 = v36;
  sub_245387650();
  sub_24525CB80(v35, v37);
  v38 = sub_2452F2F90(&v58, &v59);
  v40 = v39 & 0xFFFFFFFFFFFFFFLL;
  sub_245387650();
  sub_24525CB80(v38, v40);
  v41 = sub_2452F2F90(&v57, &v58);
  v43 = v42 & 0xFFFFFFFFFFFFFFLL;
  sub_245387650();
  sub_24525CB80(v41, v43);
  v44 = sub_2452F2F90(&v56, &v57);
  v46 = v45 & 0xFFFFFFFFFFFFFFLL;
  sub_245387650();
  sub_24525CB80(v44, v46);
  v47 = sub_2452F2F90(&v55, &v56);
  v49 = v48 & 0xFFFFFFFFFFFFFFLL;
  sub_245387650();
  sub_24525CB80(v47, v49);
  v50 = sub_2452F2F90(&v54, &v55);
  v52 = v51 & 0xFFFFFFFFFFFFFFLL;
  sub_245387650();
  sub_24525CB80(v50, v52);
  return v87;
}

uint64_t type metadata accessor for NetworkSyncHeader(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_257452AA0);
}

uint64_t sub_2452F2044(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2452F2074 + 4 * byte_24538CCE0[a1]))(0x786966657270, 0xE600000000000000);
}

uint64_t sub_2452F2074()
{
  return 0x654C726564616568;
}

uint64_t sub_2452F2094()
{
  return 0x496567617373656DLL;
}

uint64_t sub_2452F20B0()
{
  return 0x44497265646E6573;
}

uint64_t sub_2452F20C8()
{
  return 0x6874676E656CLL;
}

uint64_t sub_2452F20D8()
{
  return 0x546567617373656DLL;
}

uint64_t sub_2452F20F8()
{
  return 0x65636E6575716573;
}

uint64_t sub_2452F212C()
{
  return 0x797469726F697270;
}

uint64_t sub_2452F2144(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[32];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452AD8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452F3B8C();
  sub_24538849C();
  v11[31] = 0;
  sub_245387740();
  sub_24526B308(&qword_25744F6C8, MEMORY[0x24BDCEA70]);
  sub_2453880B8();
  if (!v2)
  {
    v9 = type metadata accessor for NetworkSyncHeader(0);
    v11[30] = 1;
    sub_2453880C4();
    v11[29] = 2;
    sub_2453880B8();
    v11[28] = 3;
    sub_2453880B8();
    v11[27] = 4;
    sub_2453880C4();
    v11[26] = *(_BYTE *)(v3 + *(int *)(v9 + 36));
    v11[25] = 5;
    sub_2452F3CD8();
    sub_2453880B8();
    v11[24] = 6;
    sub_2453880C4();
    v11[15] = 7;
    sub_2453880C4();
    v11[14] = *(_BYTE *)(v3 + *(int *)(v9 + 48));
    v11[13] = 8;
    sub_2452F3D1C();
    sub_2453880B8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2452F2410@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  int v21;
  int *v22;
  void (*v23)(uint64_t, char *, uint64_t);
  char *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;

  v30 = a2;
  v3 = sub_245387740();
  v37 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v29 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v31 = (char *)&v29 - v10;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452AB8);
  v11 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for NetworkSyncHeader(0);
  MEMORY[0x24BDAC7A8](v33);
  v34 = a1;
  v35 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452F3B8C();
  v15 = v36;
  sub_245388490();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  v16 = v9;
  v29 = v6;
  v36 = v11;
  v48 = 0;
  sub_24526B308(&qword_25744F6D8, MEMORY[0x24BDCEAA8]);
  v17 = v31;
  sub_245388034();
  v18 = v3;
  v19 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v20 = (uint64_t)v35;
  v19(v35, v17, v18);
  v47 = 1;
  v21 = sub_245388040();
  v31 = (char *)v19;
  v22 = (int *)v33;
  *(_DWORD *)(v20 + *(int *)(v33 + 20)) = v21;
  v46 = 2;
  sub_245388034();
  v23 = (void (*)(uint64_t, char *, uint64_t))v31;
  ((void (*)(uint64_t, char *, uint64_t))v31)(v20 + v22[6], v16, v18);
  v45 = 3;
  v24 = v29;
  sub_245388034();
  v23(v20 + v22[7], v24, v18);
  v44 = 4;
  v25 = sub_245388040();
  v26 = (uint64_t)v34;
  *(_DWORD *)(v20 + v22[8]) = v25;
  v42 = 5;
  sub_2452F3BD0();
  sub_245388034();
  v27 = v36;
  *(_BYTE *)(v20 + v22[9]) = v43;
  v41 = 6;
  *(_DWORD *)(v20 + v22[10]) = sub_245388040();
  v40 = 7;
  *(_DWORD *)(v20 + v22[11]) = sub_245388040();
  v38 = 8;
  sub_2452F3C14();
  sub_245388034();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v32);
  *(_BYTE *)(v20 + v22[12]) = v39;
  sub_2452F3C58(v20, v30);
  __swift_destroy_boxed_opaque_existential_1(v26);
  return sub_2452F3C9C(v20);
}

uint64_t sub_2452F2958()
{
  unsigned __int8 *v0;

  return sub_2452F2044(*v0);
}

uint64_t sub_2452F2960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2452F40A8(a1, a2);
  *a3 = result;
  return result;
}

void sub_2452F2984(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_2452F2990()
{
  sub_2452F3B8C();
  return sub_2453884D8();
}

uint64_t sub_2452F29B8()
{
  sub_2452F3B8C();
  return sub_2453884E4();
}

uint64_t sub_2452F29E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2452F2410(a1, a2);
}

uint64_t sub_2452F29F4(_QWORD *a1)
{
  return sub_2452F2144(a1);
}

void sub_2452F2A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_245387740();
  MEMORY[0x24BDAC7A8](v3);
  __asm { BR              X9 }
}

uint64_t sub_2452F2AA0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (BYTE6(v1) != 20)
  {
    sub_2452F310C();
    swift_allocError();
    swift_willThrow();
    return sub_24525CB80(v2, v1);
  }
  *(_QWORD *)(v7 - 112) = v0;
  if (v5)
  {
    *(_QWORD *)(v7 - 120) = v6;
    if (v5 == 1)
    {
      if ((int)v2 <= v2 >> 32)
      {
        sub_245261C44(v2, v1);
        v8 = sub_2453874AC();
        if (v8)
        {
          v9 = v8;
          v10 = sub_2453874D0();
          v11 = (int)v2 - v10;
          if (!__OFSUB__((int)v2, v10))
          {
            sub_2453874C4();
            v12 = v9 + v11;
            v6 = *(_QWORD *)(v7 - 120);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v12, v3);
            sub_24525CB80(v2, v1);
            goto LABEL_13;
          }
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        sub_2453874C4();
        __break(1u);
LABEL_35:
        sub_2453874C4();
        __break(1u);
        goto LABEL_36;
      }
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v14 = *(_QWORD *)(v2 + 16);
    swift_retain();
    swift_retain();
    v15 = sub_2453874AC();
    if (!v15)
      goto LABEL_35;
    v16 = v15;
    v17 = sub_2453874D0();
    v18 = __OFSUB__(v14, v17);
    v19 = v14 - v17;
    if (v18)
      goto LABEL_29;
    sub_2453874C4();
    v20 = v16 + v19;
    v6 = *(_QWORD *)(v7 - 120);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v20, v3);
    swift_release();
    swift_release();
  }
  else
  {
    *(_QWORD *)(v7 - 102) = v2;
    *(_WORD *)(v7 - 94) = v1;
    *(_BYTE *)(v7 - 92) = BYTE2(v1);
    *(_BYTE *)(v7 - 91) = BYTE3(v1);
    *(_BYTE *)(v7 - 90) = BYTE4(v1);
    *(_BYTE *)(v7 - 89) = BYTE5(v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v7 - 102, v3);
  }
LABEL_13:
  if (qword_257451C80 != -1)
    swift_once();
  __swift_project_value_buffer(v3, (uint64_t)qword_257463040);
  if ((sub_245387710() & 1) == 0 || !v5)
    goto LABEL_26;
  if (v5 == 1)
  {
    if ((int)v2 <= v2 >> 32)
    {
      sub_245261C44(v2, v1);
      v21 = sub_2453874AC();
      if (v21)
      {
        v22 = v21;
        v23 = sub_2453874D0();
        v24 = (int)v2 - v23;
        if (!__OFSUB__((int)v2, v23))
        {
          sub_2453874C4();
          v25 = *(_DWORD *)(v22 + v24 + 16);
          sub_24525CB80(v2, v1);
          goto LABEL_25;
        }
LABEL_33:
        __break(1u);
      }
LABEL_37:
      sub_2453874C4();
      __break(1u);
      JUMPOUT(0x2452F2E4CLL);
    }
    goto LABEL_31;
  }
  v26 = *(_QWORD *)(v2 + 16);
  swift_retain();
  swift_retain();
  v27 = sub_2453874AC();
  if (!v27)
  {
LABEL_36:
    sub_2453874C4();
    __break(1u);
    goto LABEL_37;
  }
  v28 = v27;
  v29 = sub_2453874D0();
  v18 = __OFSUB__(v26, v29);
  v30 = v26 - v29;
  if (v18)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  sub_2453874C4();
  v25 = *(_DWORD *)(v28 + v30 + 16);
  swift_release();
  swift_release();
LABEL_25:
  v31 = *(_QWORD *)(v7 - 112);
  if (v25 < 0x48)
  {
LABEL_26:
    sub_2452F310C();
    swift_allocError();
    swift_willThrow();
    sub_24525CB80(v2, v1);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v3);
  }
  sub_24525CB80(v2, v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v31, v4, v3);
  result = type metadata accessor for NetworkSyncHeaderPreamble(0);
  *(_DWORD *)(v31 + *(int *)(result + 20)) = v25;
  return result;
}

BOOL sub_2452F2E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_245387710() & 1) != 0 && *(_DWORD *)(a1 + *(int *)(a3 + 20)) == *(_DWORD *)(a2 + *(int *)(a3 + 20));
}

BOOL sub_2452F2EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;

  if ((sub_245387710() & 1) != 0
    && (v4 = type metadata accessor for NetworkSyncHeader(0),
        *(_DWORD *)(a1 + *(int *)(v4 + 20)) == *(_DWORD *)(a2 + *(int *)(v4 + 20)))
    && (v5 = (int *)v4, (sub_245387710() & 1) != 0)
    && (sub_245387710() & 1) != 0
    && *(_DWORD *)(a1 + v5[8]) == *(_DWORD *)(a2 + v5[8])
    && *(unsigned __int8 *)(a1 + v5[9]) == *(unsigned __int8 *)(a2 + v5[9])
    && *(_DWORD *)(a1 + v5[10]) == *(_DWORD *)(a2 + v5[10])
    && *(_DWORD *)(a1 + v5[11]) == *(_DWORD *)(a2 + v5[11]))
  {
    return *(unsigned __int8 *)(a1 + v5[12]) == *(unsigned __int8 *)(a2 + v5[12]);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_2452F2F90(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_2452F3050(uint64_t result)
{
  if (result >= 4)
    return 4;
  else
    return result;
}

uint64_t sub_2452F3060(_BYTE *__src, uint64_t a2)
{
  uint64_t result;

  if (!a2)
    return 0;
  if (a2 <= 14)
    return sub_2452F2F90(__src, &__src[a2]);
  sub_2453874DC();
  swift_allocObject();
  sub_2453874A0();
  if ((unint64_t)a2 < 0x7FFFFFFF)
    return a2 << 32;
  sub_245387608();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

unint64_t sub_2452F310C()
{
  unint64_t result;

  result = qword_257452A88;
  if (!qword_257452A88)
  {
    result = MEMORY[0x2495330B0](&unk_24538CEA0, &type metadata for NetworkSyncHeader.NetworkSyncHeaderError);
    atomic_store(result, (unint64_t *)&qword_257452A88);
  }
  return result;
}

uint64_t type metadata accessor for NetworkSyncHeaderPreamble(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_257452A90);
}

uint64_t storeEnumTagSinglePayload for NetworkSyncHeader.NetworkSyncHeaderError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2452F31A4 + 4 * byte_24538CCE9[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2452F31C4 + 4 * byte_24538CCEE[v4]))();
}

_BYTE *sub_2452F31A4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2452F31C4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2452F31CC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2452F31D4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2452F31DC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2452F31E4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NetworkSyncHeader.NetworkSyncHeaderError()
{
  return &type metadata for NetworkSyncHeader.NetworkSyncHeaderError;
}

uint64_t *sub_2452F3200(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_245387740();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_2452F3288(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_245387740();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_2452F32BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2452F3318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2452F3374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2452F33D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2452F342C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452F3438(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_245387740();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_2452F3474()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452F3480(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_245387740();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_2452F34C0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_245387740();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_2452F3534(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_245387740();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[6];
    *(_DWORD *)((char *)a1 + a3[5]) = *(_DWORD *)((char *)a2 + a3[5]);
    v8((_QWORD *)((char *)a1 + v9), (_QWORD *)((char *)a2 + v9), v7);
    v8((_QWORD *)((char *)a1 + a3[7]), (_QWORD *)((char *)a2 + a3[7]), v7);
    v10 = a3[9];
    *(_DWORD *)((char *)a1 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
    *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
    v11 = a3[11];
    *(_DWORD *)((char *)a1 + a3[10]) = *(_DWORD *)((char *)a2 + a3[10]);
    *(_DWORD *)((char *)a1 + v11) = *(_DWORD *)((char *)a2 + v11);
    *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  }
  return a1;
}

uint64_t sub_2452F3620(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_245387740();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  v6(a1 + *(int *)(a2 + 24), v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 28), v4);
}

uint64_t sub_2452F369C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_245387740();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  v7(a1 + v8, a2 + v8, v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v9 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v10 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_DWORD *)(a1 + v10) = *(_DWORD *)(a2 + v10);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_2452F375C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_245387740();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_DWORD *)(a1 + a3[11]) = *(_DWORD *)(a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_2452F3828(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_245387740();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  v7(a1 + v8, a2 + v8, v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v9 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v10 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_DWORD *)(a1 + v10) = *(_DWORD *)(a2 + v10);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_2452F38E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_245387740();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  v7(a1 + v8, a2 + v8, v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v9 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v10 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_DWORD *)(a1 + v10) = *(_DWORD *)(a2 + v10);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_2452F39A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452F39B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_245387740();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 48));
  if (v9 >= 3)
    return v9 - 2;
  else
    return 0;
}

uint64_t sub_2452F3A2C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452F3A38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_245387740();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 48)) = a2 + 2;
  return result;
}

uint64_t sub_2452F3AB0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_245387740();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_2452F3B48()
{
  unint64_t result;

  result = qword_257452AB0;
  if (!qword_257452AB0)
  {
    result = MEMORY[0x2495330B0](&unk_24538CE78, &type metadata for NetworkSyncHeader.NetworkSyncHeaderError);
    atomic_store(result, (unint64_t *)&qword_257452AB0);
  }
  return result;
}

unint64_t sub_2452F3B8C()
{
  unint64_t result;

  result = qword_257452AC0;
  if (!qword_257452AC0)
  {
    result = MEMORY[0x2495330B0](&unk_24538D0A0, &type metadata for NetworkSyncHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452AC0);
  }
  return result;
}

unint64_t sub_2452F3BD0()
{
  unint64_t result;

  result = qword_257452AC8;
  if (!qword_257452AC8)
  {
    result = MEMORY[0x2495330B0](&unk_24538D078, &type metadata for NetworkSyncHeader.MessageType);
    atomic_store(result, (unint64_t *)&qword_257452AC8);
  }
  return result;
}

unint64_t sub_2452F3C14()
{
  unint64_t result;

  result = qword_257452AD0;
  if (!qword_257452AD0)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for MessagePriority, &type metadata for MessagePriority);
    atomic_store(result, (unint64_t *)&qword_257452AD0);
  }
  return result;
}

uint64_t sub_2452F3C58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NetworkSyncHeader(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2452F3C9C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NetworkSyncHeader(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2452F3CD8()
{
  unint64_t result;

  result = qword_257452AE0;
  if (!qword_257452AE0)
  {
    result = MEMORY[0x2495330B0](&unk_24538D050, &type metadata for NetworkSyncHeader.MessageType);
    atomic_store(result, (unint64_t *)&qword_257452AE0);
  }
  return result;
}

unint64_t sub_2452F3D1C()
{
  unint64_t result;

  result = qword_257452AE8;
  if (!qword_257452AE8)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for MessagePriority, &type metadata for MessagePriority);
    atomic_store(result, (unint64_t *)&qword_257452AE8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NetworkSyncHeader.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NetworkSyncHeader.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_2452F3E3C + 4 * byte_24538CCF8[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_2452F3E70 + 4 * byte_24538CCF3[v4]))();
}

uint64_t sub_2452F3E70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452F3E78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2452F3E80);
  return result;
}

uint64_t sub_2452F3E8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2452F3E94);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_2452F3E98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452F3EA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NetworkSyncHeader.CodingKeys()
{
  return &type metadata for NetworkSyncHeader.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for NetworkSyncHeader.MessageType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2452F3F08 + 4 * byte_24538CD02[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2452F3F3C + 4 * byte_24538CCFD[v4]))();
}

uint64_t sub_2452F3F3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452F3F44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2452F3F4CLL);
  return result;
}

uint64_t sub_2452F3F58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2452F3F60);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2452F3F64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452F3F6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NetworkSyncHeader.MessageType()
{
  return &type metadata for NetworkSyncHeader.MessageType;
}

unint64_t sub_2452F3F8C()
{
  unint64_t result;

  result = qword_257452AF0;
  if (!qword_257452AF0)
  {
    result = MEMORY[0x2495330B0](&unk_24538CEF8, &type metadata for NetworkSyncHeader.MessageType);
    atomic_store(result, (unint64_t *)&qword_257452AF0);
  }
  return result;
}

unint64_t sub_2452F3FD4()
{
  unint64_t result;

  result = qword_257452AF8;
  if (!qword_257452AF8)
  {
    result = MEMORY[0x2495330B0](&unk_24538D028, &type metadata for NetworkSyncHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452AF8);
  }
  return result;
}

unint64_t sub_2452F401C()
{
  unint64_t result;

  result = qword_257452B00;
  if (!qword_257452B00)
  {
    result = MEMORY[0x2495330B0](&unk_24538CF98, &type metadata for NetworkSyncHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452B00);
  }
  return result;
}

unint64_t sub_2452F4064()
{
  unint64_t result;

  result = qword_257452B08;
  if (!qword_257452B08)
  {
    result = MEMORY[0x2495330B0](&unk_24538CFC0, &type metadata for NetworkSyncHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452B08);
  }
  return result;
}

uint64_t sub_2452F40A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x786966657270 && a2 == 0xE600000000000000;
  if (v2 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x654C726564616568 && a2 == 0xEC0000006874676ELL || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496567617373656DLL && a2 == 0xE900000000000044 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x44497265646E6573 && a2 == 0xE800000000000000 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6874676E656CLL && a2 == 0xE600000000000000 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x546567617373656DLL && a2 == 0xEB00000000657079 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x65636E6575716573 && a2 == 0xED0000746E756F43 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x65636E6575716573 && a2 == 0xED00007865646E49 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_245388274();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

unint64_t sub_2452F44C8()
{
  unint64_t result;

  result = qword_257452B10;
  if (!qword_257452B10)
  {
    result = MEMORY[0x2495330B0](&unk_24538CF20, &type metadata for NetworkSyncHeader.MessageType);
    atomic_store(result, (unint64_t *)&qword_257452B10);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeatureFlags(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2452F454C + 4 * byte_24538D0F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2452F456C + 4 * byte_24538D0F5[v4]))();
}

_BYTE *sub_2452F454C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2452F456C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2452F4574(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2452F457C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2452F4584(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2452F458C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlags()
{
  return &type metadata for FeatureFlags;
}

unint64_t sub_2452F45AC()
{
  unint64_t result;

  result = qword_257452B18;
  if (!qword_257452B18)
  {
    result = MEMORY[0x2495330B0](&unk_24538D150, &type metadata for FeatureFlags);
    atomic_store(result, (unint64_t *)&qword_257452B18);
  }
  return result;
}

const char *sub_2452F45F0()
{
  return "Replicator";
}

const char *sub_2452F4604()
{
  return "AdditionalZoneAdvertisements";
}

__n128 HandshakeDescriptor.init(remoteDeviceID:deviceType:protocolVersion:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, __n128 *a4@<X3>, uint64_t a5@<X8>)
{
  char v5;
  __n128 result;

  v5 = *a3;
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = v5;
  result = *a4;
  *(__n128 *)(a5 + 24) = *a4;
  return result;
}

uint64_t HandshakeDescriptor.remoteDeviceID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HandshakeDescriptor.remoteDeviceID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*HandshakeDescriptor.remoteDeviceID.modify())()
{
  return nullsub_1;
}

void HandshakeDescriptor.deviceType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *HandshakeDescriptor.deviceType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*HandshakeDescriptor.deviceType.modify())()
{
  return nullsub_1;
}

__n128 HandshakeDescriptor.protocolVersion.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  __n128 result;

  result = *(__n128 *)(v1 + 24);
  *a1 = result;
  return result;
}

__n128 HandshakeDescriptor.protocolVersion.setter(__n128 *a1)
{
  uint64_t v1;
  __n128 result;

  result = *a1;
  *(__n128 *)(v1 + 24) = *a1;
  return result;
}

uint64_t (*HandshakeDescriptor.protocolVersion.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeDescriptor.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_245387B6C();
  swift_bridgeObjectRelease();
  sub_24538846C();
  sub_24538846C();
  return sub_24538846C();
}

uint64_t HandshakeDescriptor.hashValue.getter()
{
  sub_24538843C();
  swift_bridgeObjectRetain();
  sub_245387B6C();
  swift_bridgeObjectRelease();
  sub_24538846C();
  sub_24538846C();
  sub_24538846C();
  return sub_245388478();
}

uint64_t sub_2452F4804()
{
  sub_24538843C();
  swift_bridgeObjectRetain();
  sub_245387B6C();
  swift_bridgeObjectRelease();
  sub_24538846C();
  sub_24538846C();
  sub_24538846C();
  return sub_245388478();
}

uint64_t sub_2452F4898()
{
  swift_bridgeObjectRetain();
  sub_245387B6C();
  swift_bridgeObjectRelease();
  sub_24538846C();
  sub_24538846C();
  return sub_24538846C();
}

uint64_t sub_2452F4914()
{
  sub_24538843C();
  swift_bridgeObjectRetain();
  sub_245387B6C();
  swift_bridgeObjectRelease();
  sub_24538846C();
  sub_24538846C();
  sub_24538846C();
  return sub_245388478();
}

uint64_t HandshakeSchedulerEvent.handshakeDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t HandshakeSchedulerEvent.handshakeDescriptor.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v5 = a1[3];
  v6 = a1[4];
  result = swift_bridgeObjectRelease();
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  *(_QWORD *)(v1 + 32) = v6;
  return result;
}

uint64_t (*HandshakeSchedulerEvent.handshakeDescriptor.modify())()
{
  return nullsub_1;
}

void HandshakeSchedulerEvent.schedule.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 40);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t HandshakeSchedulerEvent.schedule.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 40) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 48) = v2;
  return result;
}

uint64_t (*HandshakeSchedulerEvent.schedule.modify())()
{
  return nullsub_1;
}

BOOL _s16ReplicatorEngine19HandshakeDescriptorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  _BOOL8 result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(unsigned __int8 *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    if (v2 != v5)
      return 0;
  }
  else
  {
    v9 = sub_245388274();
    result = 0;
    if ((v9 & 1) == 0 || v2 != v5)
      return result;
  }
  return v3 == v6 && v4 == v7;
}

unint64_t sub_2452F4AEC()
{
  unint64_t result;

  result = qword_257452B20;
  if (!qword_257452B20)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for HandshakeDescriptor, &type metadata for HandshakeDescriptor);
    atomic_store(result, (unint64_t *)&qword_257452B20);
  }
  return result;
}

uint64_t destroy for HandshakeDescriptor()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HandshakeDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HandshakeDescriptor(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for HandshakeDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for HandshakeDescriptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HandshakeDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HandshakeDescriptor()
{
  return &type metadata for HandshakeDescriptor;
}

uint64_t initializeWithCopy for HandshakeSchedulerEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HandshakeSchedulerEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  return a1;
}

uint64_t assignWithTake for HandshakeSchedulerEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for HandshakeSchedulerEvent()
{
  return &type metadata for HandshakeSchedulerEvent;
}

uint64_t dispatch thunk of HandshakeScheduling.handshakePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HandshakeScheduling.scheduleHandshake(with:schedule:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_2452F4E08()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t result;
  _QWORD v8[6];

  v1 = v0;
  v2 = *v0;
  v3 = v1[2];
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_2452F5D48;
  *(_QWORD *)(v5 + 24) = v4;
  v8[4] = sub_2452643B4;
  v8[5] = v5;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_24525B888;
  v8[3] = &block_descriptor_13_1;
  v6 = _Block_copy(v8);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v1 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_2452F4F34(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  os_unfair_lock_s *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  void (*v73)(uint64_t, char *, uint64_t);
  void (**v74)(char *, char *, uint64_t);
  char *v75;
  char *v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;

  v71 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v74 = (void (**)(char *, char *, uint64_t))((char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v68 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v68 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v68 - v12;
  v14 = sub_2453876EC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v72 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v70 = (char *)&v68 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v68 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20);
  v77 = (void (*)(char *, char *, uint64_t))((char *)&v68 - v24);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v68 - v26;
  v69 = v28;
  MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)&v68 - v29;
  sub_2453876C8();
  v31 = (uint64_t)a1 + OBJC_IVAR____TtC16ReplicatorEngine21WatchAssertionMonitor_queue_currentAssertionCreationDate;
  swift_beginAccess();
  v76 = v13;
  sub_2452F5CC0(v31, (uint64_t)v13);
  v32 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v32(v11, v30, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  sub_2452F5D60((uint64_t)v11, (uint64_t)v8);
  swift_beginAccess();
  sub_2452D5654((uint64_t)v8, v31);
  swift_endAccess();
  v75 = v30;
  v33 = v30;
  v34 = v14;
  v68 = v32;
  v32(v27, v33, v14);
  v35 = a1 + 12;
  swift_beginAccess();
  v36 = a1[12];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  a1[12] = v36;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v36 = sub_2453244B0(0, *(_QWORD *)(v36 + 16) + 1, 1, v36);
    *v35 = v36;
  }
  v39 = *(_QWORD *)(v36 + 16);
  v38 = *(_QWORD *)(v36 + 24);
  if (v39 >= v38 >> 1)
  {
    v36 = sub_2453244B0(v38 > 1, v39 + 1, 1, v36);
    *v35 = v36;
  }
  *(_QWORD *)(v36 + 16) = v39 + 1;
  v40 = *(unsigned __int8 *)(v15 + 80);
  v41 = v36 + ((v40 + 32) & ~v40) + *(_QWORD *)(v15 + 72) * v39;
  v73 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 32);
  v73(v41, v27, v14);
  swift_endAccess();
  sub_2453876C8();
  v42 = v77;
  sub_245387674();
  v43 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
  v44 = v43(v22, v14);
  v45 = a1[12];
  MEMORY[0x24BDAC7A8](v44);
  *(&v68 - 2) = v42;
  swift_bridgeObjectRetain();
  v46 = sub_24531D39C((uint64_t (*)(char *))sub_2452F5DA8, (uint64_t)(&v68 - 4), v45);
  v47 = *(_QWORD *)(v46 + 16);
  if (a1[9] < v47)
  {
    swift_bridgeObjectRelease();
    v78 = v47;
    v48 = sub_2453880F4();
    sub_24535987C(0x7373416863746157, 0xEE006E6F69747265, 0x7669737365637845, 0xEE00746E756F4365, 0x7669737365637845, 0xEE00746E756F4365, v48, v49);
    swift_bridgeObjectRelease();
    v46 = MEMORY[0x24BEE4AF8];
  }
  v50 = (uint64_t)v76;
  a1[12] = v46;
  swift_bridgeObjectRelease();
  v51 = OBJC_IVAR____TtC16ReplicatorEngine21WatchAssertionMonitor_queue_assertionTimer;
  if (*(_QWORD *)((char *)a1 + OBJC_IVAR____TtC16ReplicatorEngine21WatchAssertionMonitor_queue_assertionTimer))
  {
    v52 = (uint64_t)v74;
    sub_2452F5CC0(v50, (uint64_t)v74);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v52, 1, v34) == 1)
    {
      sub_2452F5D08(v52);
      sub_24535987C(0x7373416863746157, 0xEE006E6F69747265, 0x6465706D6F7453, 0xE700000000000000, 0x6465706D6F7453, 0xE700000000000000, 1701736270, 0xE400000000000000);
    }
    else
    {
      v64 = v72;
      v73((uint64_t)v72, (char *)v52, v34);
      sub_2452F5DD4();
      v65 = sub_2453880F4();
      sub_24535987C(0x7373416863746157, 0xEE006E6F69747265, 0x6465706D6F7453, 0xE700000000000000, 0x6465706D6F7453, 0xE700000000000000, v65, v66);
      swift_bridgeObjectRelease();
      v43(v64, v34);
    }
  }
  else
  {
    type metadata accessor for BasicTimer();
    v53 = swift_allocObject();
    *(_QWORD *)(v53 + 16) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440BFA0);
    v54 = swift_allocObject();
    *(_DWORD *)(v54 + 16) = 0;
    *(_QWORD *)(v53 + 24) = v54;
    *(_QWORD *)((char *)a1 + v51) = v53;
    if (v53)
    {
      v55 = (void (*)(char *, char *, uint64_t))a1[11];
      v56 = (void (*)(char *, char *, uint64_t))a1[2];
      v57 = v70;
      v68(v70, v75, v34);
      v58 = (v40 + 24) & ~v40;
      v59 = (v69 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
      v60 = swift_allocObject();
      *(_QWORD *)(v60 + 16) = a1;
      v61 = ((uint64_t (*)(uint64_t, char *, uint64_t))v73)(v60 + v58, v57, v34);
      v74 = &v68;
      *(_QWORD *)(v60 + v59) = v71;
      v62 = *(os_unfair_lock_s **)(v53 + 24);
      MEMORY[0x24BDAC7A8](v61);
      *(&v68 - 6) = (void (*)(char *, char *, uint64_t))v53;
      *(&v68 - 5) = v55;
      *(&v68 - 4) = v56;
      *(&v68 - 3) = (void (*)(char *, char *, uint64_t))sub_2452F5E9C;
      *(&v68 - 2) = (void (*)(char *, char *, uint64_t))v60;
      swift_retain();
      swift_retain();
      swift_retain();
      os_unfair_lock_lock(v62 + 4);
      sub_2452E6204(v63, (uint64_t (*)(void))sub_24525C890);
      v50 = (uint64_t)v76;
      os_unfair_lock_unlock(v62 + 4);
      swift_release();
      swift_release();
      swift_release();
    }
  }
  sub_2452F5D08(v50);
  v43(v75, v34);
  return v43((char *)v77, v34);
}

uint64_t sub_2452F5644()
{
  uint64_t v0;
  unint64_t v1;

  sub_2453876EC();
  sub_2452F5DD4();
  v0 = sub_2453880F4();
  sub_24535987C(0x7373416863746157, 0xEE006E6F69747265, 0x74756F656D6954, 0xE700000000000000, 0x74756F656D6954, 0xE700000000000000, v0, v1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2452F56D8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t result;
  _QWORD v8[6];

  v1 = v0;
  v2 = *v0;
  v3 = v1[2];
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_2452F5C90;
  *(_QWORD *)(v5 + 24) = v4;
  v8[4] = sub_245263BB8;
  v8[5] = v5;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_24525B888;
  v8[3] = &block_descriptor_8;
  v6 = _Block_copy(v8);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v1 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_2452F5804(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v17;
  uint64_t v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  _QWORD v23[2];
  uint64_t v24;
  unint64_t v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v23 - v6;
  v8 = sub_2453876EC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v23 - v13;
  v15 = a1 + OBJC_IVAR____TtC16ReplicatorEngine21WatchAssertionMonitor_queue_currentAssertionCreationDate;
  swift_beginAccess();
  sub_2452F5CC0(v15, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2452F5D08((uint64_t)v7);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
  sub_2453876C8();
  sub_245387668();
  if (*(double *)(a1 + 64) < v17)
  {
    v24 = 0;
    v25 = 0xE000000000000000;
    sub_245387CA4();
    sub_24535987C(0x7373416863746157, 0xEE006E6F69747265, 0x646C65687265764FLL, 0xE800000000000000, 0x646C65687265764FLL, 0xE800000000000000, v24, v25);
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5, 1, 1, v8);
  swift_beginAccess();
  sub_2452D5654((uint64_t)v5, v15);
  swift_endAccess();
  v18 = OBJC_IVAR____TtC16ReplicatorEngine21WatchAssertionMonitor_queue_assertionTimer;
  v19 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine21WatchAssertionMonitor_queue_assertionTimer);
  if (v19)
  {
    v23[0] = v23;
    v20 = *(os_unfair_lock_s **)(v19 + 24);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v20 + 4);
    sub_2452E6204(v21, sub_24525C730);
    os_unfair_lock_unlock(v20 + 4);
    swift_release();
    swift_release();
  }
  v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v12, v8);
  v22(v14, v8);
  *(_QWORD *)(a1 + v18) = 0;
  return swift_release();
}

uint64_t sub_2452F5AC4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  sub_2452F5D08(v0 + OBJC_IVAR____TtC16ReplicatorEngine21WatchAssertionMonitor_queue_currentAssertionCreationDate);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2452F5B1C()
{
  return type metadata accessor for WatchAssertionMonitor();
}

uint64_t type metadata accessor for WatchAssertionMonitor()
{
  uint64_t result;

  result = qword_257452B28;
  if (!qword_257452B28)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2452F5B60()
{
  unint64_t v0;

  sub_2452D63C4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for WatchAssertionMonitor.Options(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WatchAssertionMonitor.Options(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for WatchAssertionMonitor.Options()
{
  return &type metadata for WatchAssertionMonitor.Options;
}

uint64_t sub_2452F5C6C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2452F5C90()
{
  uint64_t v0;

  return sub_2452F5804(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2452F5C98()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t sub_2452F5CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2452F5D08(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2452F5D48()
{
  uint64_t v0;

  return sub_2452F4F34(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2452F5D50()
{
  return swift_deallocObject();
}

uint64_t sub_2452F5D60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2452F5DA8()
{
  return sub_245387680() & 1;
}

unint64_t sub_2452F5DD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2574525E0;
  if (!qword_2574525E0)
  {
    v1 = sub_2453876EC();
    result = MEMORY[0x2495330B0](MEMORY[0x24BDCE988], v1);
    atomic_store(result, (unint64_t *)&qword_2574525E0);
  }
  return result;
}

uint64_t sub_2452F5E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2453876EC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2452F5E9C()
{
  sub_2453876EC();
  return sub_2452F5644();
}

uint64_t UnfilteredReplicationPolicy.allowSync<A>(replicator:recordID:pairingRelationship:)()
{
  return 1;
}

ValueMetadata *type metadata accessor for UnfilteredReplicationPolicy()
{
  return &type metadata for UnfilteredReplicationPolicy;
}

uint64_t sub_2452F5F0C()
{
  _BYTE *v0;

  if (*v0)
    return 1752392040;
  else
    return 0x7974706D65;
}

uint64_t sub_2452F5F3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2452F6F70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2452F5F60()
{
  sub_2452F69B0();
  return sub_2453884D8();
}

uint64_t sub_2452F5F88()
{
  sub_2452F69B0();
  return sub_2453884E4();
}

uint64_t sub_2452F5FB0()
{
  sub_2452F6A7C();
  return sub_2453884D8();
}

uint64_t sub_2452F5FD8()
{
  sub_2452F6A7C();
  return sub_2453884E4();
}

uint64_t sub_2452F6000()
{
  sub_2452F6A38();
  return sub_2453884D8();
}

uint64_t sub_2452F6028()
{
  sub_2452F6A38();
  return sub_2453884E4();
}

uint64_t ZoneVersion.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574501C8);
  v27 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v26 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_245387740();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v25 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574501D0);
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ZoneVersion();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574501C0);
  v13 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452F69B0();
  sub_24538849C();
  sub_2452F69F4(v30, (uint64_t)v12);
  v30 = v5;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) == 1)
  {
    v31 = 0;
    sub_2452F6A7C();
    v16 = v29;
    sub_245388070();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v16);
  }
  else
  {
    v18 = v25;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v25, v12, v4);
    v32 = 1;
    sub_2452F6A38();
    v19 = v26;
    v20 = v29;
    sub_245388070();
    sub_24526B308(&qword_25744F6C8, MEMORY[0x24BDCEA70]);
    v21 = v28;
    sub_2453880B8();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v21);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v20);
  }
}

uint64_t ZoneVersion.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char v42;
  char v43;

  v41 = a1;
  v39 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257450170);
  v4 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  v36 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v38 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257450178);
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v37 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257450168);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ZoneVersion();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v32 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452F69B0();
  v18 = v40;
  sub_245388490();
  if (!v18)
  {
    v32 = v12;
    v19 = v37;
    v20 = v38;
    v40 = v9;
    v21 = v39;
    v22 = sub_245388058();
    if (*(_QWORD *)(v22 + 16) == 1)
    {
      if ((*(_BYTE *)(v22 + 32) & 1) != 0)
      {
        v37 = (char *)v22;
        v43 = 1;
        sub_2452F6A38();
        sub_245387FE0();
        v27 = sub_245387740();
        sub_24526B308(&qword_25744F6D8, MEMORY[0x24BDCEAA8]);
        v28 = v20;
        v29 = v27;
        v30 = v35;
        sub_245388034();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v28, v30);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v15, 0, 1, v29);
        sub_2452F6AC0((uint64_t)v15, (uint64_t)v17);
      }
      else
      {
        v42 = 0;
        sub_2452F6A7C();
        sub_245387FE0();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v34);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v8);
        v31 = sub_245387740();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v17, 1, 1, v31);
      }
      sub_2452F6AC0((uint64_t)v17, v21);
    }
    else
    {
      v23 = sub_245387EE4();
      swift_allocError();
      v25 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
      *v25 = v32;
      sub_245387FEC();
      sub_245387ECC();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
}

uint64_t sub_2452F6778@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ZoneVersion.init(from:)(a1, a2);
}

uint64_t sub_2452F678C(_QWORD *a1)
{
  return ZoneVersion.encode(to:)(a1);
}

uint64_t _s16ReplicatorEngine11ZoneVersionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v4 = sub_245387740();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ZoneVersion();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F830);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_2452F69F4(a1, (uint64_t)v14);
  sub_2452F69F4(a2, v15);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) != 1)
  {
    sub_2452F69F4((uint64_t)v14, (uint64_t)v10);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v17 = sub_245387710();
      v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v7, v4);
      v18(v10, v4);
      sub_2452F7048((uint64_t)v14);
      return v17 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_6;
  }
  if (v16(v15, 1, v4) != 1)
  {
LABEL_6:
    sub_2452E56E0((uint64_t)v14);
    v17 = 0;
    return v17 & 1;
  }
  sub_2452F7048((uint64_t)v14);
  v17 = 1;
  return v17 & 1;
}

uint64_t type metadata accessor for ZoneVersion()
{
  uint64_t result;

  result = qword_25744F620;
  if (!qword_25744F620)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_2452F69B0()
{
  unint64_t result;

  result = qword_25744F7E0;
  if (!qword_25744F7E0)
  {
    result = MEMORY[0x2495330B0](&unk_24538D684, &type metadata for ZoneVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744F7E0);
  }
  return result;
}

uint64_t sub_2452F69F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ZoneVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2452F6A38()
{
  unint64_t result;

  result = qword_25744F7F8;
  if (!qword_25744F7F8)
  {
    result = MEMORY[0x2495330B0](&unk_24538D634, &type metadata for ZoneVersion.HashCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744F7F8);
  }
  return result;
}

unint64_t sub_2452F6A7C()
{
  unint64_t result;

  result = qword_2574502C0;
  if (!qword_2574502C0)
  {
    result = MEMORY[0x2495330B0](&unk_24538D5E4, &type metadata for ZoneVersion.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574502C0);
  }
  return result;
}

uint64_t sub_2452F6AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ZoneVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for ZoneVersion()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452F6B10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_245387740();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ZoneVersion()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452F6B68(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_245387740();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t storeEnumTagSinglePayload for ZoneVersion.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2452F6C04 + 4 * byte_24538D355[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2452F6C38 + 4 * asc_24538D350[v4]))();
}

uint64_t sub_2452F6C38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452F6C40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2452F6C48);
  return result;
}

uint64_t sub_2452F6C54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2452F6C5CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2452F6C60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452F6C68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ZoneVersion.CodingKeys()
{
  return &type metadata for ZoneVersion.CodingKeys;
}

ValueMetadata *type metadata accessor for ZoneVersion.EmptyCodingKeys()
{
  return &type metadata for ZoneVersion.EmptyCodingKeys;
}

uint64_t storeEnumTagSinglePayload for ZoneVersion.HashCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2452F6CD4 + 4 * byte_24538D35A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2452F6CF4 + 4 * byte_24538D35F[v4]))();
}

_BYTE *sub_2452F6CD4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2452F6CF4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2452F6CFC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2452F6D04(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2452F6D0C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2452F6D14(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ZoneVersion.HashCodingKeys()
{
  return &type metadata for ZoneVersion.HashCodingKeys;
}

unint64_t sub_2452F6D34()
{
  unint64_t result;

  result = qword_257452B38;
  if (!qword_257452B38)
  {
    result = MEMORY[0x2495330B0](&unk_24538D4B4, &type metadata for ZoneVersion.HashCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452B38);
  }
  return result;
}

unint64_t sub_2452F6D7C()
{
  unint64_t result;

  result = qword_257452B40;
  if (!qword_257452B40)
  {
    result = MEMORY[0x2495330B0](&unk_24538D5BC, &type metadata for ZoneVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452B40);
  }
  return result;
}

unint64_t sub_2452F6DC4()
{
  unint64_t result;

  result = qword_25744F818;
  if (!qword_25744F818)
  {
    result = MEMORY[0x2495330B0](&unk_24538D4DC, &type metadata for ZoneVersion.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744F818);
  }
  return result;
}

unint64_t sub_2452F6E0C()
{
  unint64_t result;

  result = qword_25744F810;
  if (!qword_25744F810)
  {
    result = MEMORY[0x2495330B0](&unk_24538D504, &type metadata for ZoneVersion.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744F810);
  }
  return result;
}

unint64_t sub_2452F6E54()
{
  unint64_t result;

  result = qword_25744F808;
  if (!qword_25744F808)
  {
    result = MEMORY[0x2495330B0](&unk_24538D424, &type metadata for ZoneVersion.HashCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744F808);
  }
  return result;
}

unint64_t sub_2452F6E9C()
{
  unint64_t result;

  result = qword_25744F800;
  if (!qword_25744F800)
  {
    result = MEMORY[0x2495330B0](&unk_24538D44C, &type metadata for ZoneVersion.HashCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744F800);
  }
  return result;
}

unint64_t sub_2452F6EE4()
{
  unint64_t result;

  result = qword_25744F7F0;
  if (!qword_25744F7F0)
  {
    result = MEMORY[0x2495330B0](&unk_24538D52C, &type metadata for ZoneVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744F7F0);
  }
  return result;
}

unint64_t sub_2452F6F2C()
{
  unint64_t result;

  result = qword_25744F7E8;
  if (!qword_25744F7E8)
  {
    result = MEMORY[0x2495330B0](&unk_24538D554, &type metadata for ZoneVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744F7E8);
  }
  return result;
}

uint64_t sub_2452F6F70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7974706D65 && a2 == 0xE500000000000000;
  if (v2 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1752392040 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_245388274();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2452F7048(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ZoneVersion();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2452F7084()
{
  return sub_2452F709C((void (*)(uint64_t *__return_ptr))sub_2452F97E8);
}

uint64_t sub_2452F7090()
{
  return sub_2452F709C((void (*)(uint64_t *__return_ptr))sub_2452F9874);
}

uint64_t sub_2452F709C(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v6;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 56) + 16);
  os_unfair_lock_lock(v3);
  a1(&v6);
  v4 = v6;
  os_unfair_lock_unlock(v3);
  return v4;
}

uint64_t (*sub_2452F70F0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t MetadataStore.__allocating_init(persistentStore:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  MetadataStore.init(persistentStore:)(a1);
  return v2;
}

uint64_t MetadataStore.init(persistentStore:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  *(_QWORD *)(v1 + 48) = 0;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440BFA0);
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  v4 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)(v1 + 64) = v4;
  *(_QWORD *)(v1 + 80) = 0;
  *(_QWORD *)(v1 + 88) = 0;
  *(_QWORD *)(v1 + 72) = v4;
  *(_WORD *)(v1 + 96) = 1;
  *(_QWORD *)(v1 + 104) = MEMORY[0x24BEE4B08];
  swift_beginAccess();
  sub_2452F9568(a1, v1 + 16);
  v5 = swift_endAccess();
  v6 = (void *)MEMORY[0x249532900](v5);
  sub_2452F8DA4(v1);
  objc_autoreleasePoolPop(v6);
  sub_245263F80(a1, &qword_25744FCA0);
  return v1;
}

uint64_t MetadataStore.deinit()
{
  uint64_t v0;

  sub_245263F80(v0 + 16, &qword_25744FCA0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MetadataStore.__deallocating_deinit()
{
  uint64_t v0;

  sub_245263F80(v0 + 16, &qword_25744FCA0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t MetadataStore.allowListEnabled.getter()
{
  return sub_2452F7890((void (*)(uint64_t *__return_ptr))sub_2452F95B0);
}

uint64_t MetadataStore.allowListEnabled.setter(char a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[40];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 56) + 16);
  os_unfair_lock_lock(v3);
  sub_2452E6204(v4, (uint64_t (*)(void))sub_2452F95F8);
  os_unfair_lock_unlock(v3);
  v6 = sub_2452F70F0();
  v7 = *(_QWORD *)(v5 + 24);
  if (v7)
  {
    v8 = *(_QWORD *)(v5 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v5, *(_QWORD *)(v5 + 24));
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v8 + 48))(a1 & 1, v7, v8);
  }
  return ((uint64_t (*)(_BYTE *, _QWORD))v6)(v10, 0);
}

uint64_t (*MetadataStore.allowListEnabled.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  char v4;
  char v6;

  *(_QWORD *)a1 = v1;
  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 56) + 16);
  os_unfair_lock_lock(v3);
  sub_2452F95B0(&v6);
  v4 = v6;
  os_unfair_lock_unlock(v3);
  *(_BYTE *)(a1 + 8) = v4;
  return sub_2452F7404;
}

uint64_t sub_2452F7404(uint64_t a1)
{
  return MetadataStore.allowListEnabled.setter(*(_BYTE *)(a1 + 8));
}

uint64_t MetadataStore.allowList.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 56) + 16);
  os_unfair_lock_lock(v1);
  sub_2452F9608(&v4);
  v2 = v4;
  os_unfair_lock_unlock(v1);
  return v2;
}

void sub_2452F7470(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  os_unfair_lock_s *v3;
  uint64_t v4;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(*(_QWORD *)a1 + 56) + 16);
  os_unfair_lock_lock(v3);
  sub_2452F9AB8(&v4);
  os_unfair_lock_unlock(v3);
  *a2 = v4;
}

uint64_t MetadataStore.allowList.setter(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[40];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 56) + 16);
  os_unfair_lock_lock(v3);
  sub_2452E6204(v4, sub_2452F9650);
  os_unfair_lock_unlock(v3);
  v6 = sub_2452F70F0();
  v7 = *(_QWORD *)(v5 + 24);
  if (v7)
  {
    v8 = *(_QWORD *)(v5 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v5, *(_QWORD *)(v5 + 24));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 64))(a1, v7, v8);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return ((uint64_t (*)(_BYTE *, _QWORD))v6)(v10, 0);
}

uint64_t (*MetadataStore.allowList.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v6;

  a1[1] = v1;
  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 56) + 16);
  os_unfair_lock_lock(v3);
  sub_2452F9608(&v6);
  v4 = v6;
  os_unfair_lock_unlock(v3);
  *a1 = v4;
  return sub_2452F75F8;
}

uint64_t sub_2452F75F8(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) == 0)
    return MetadataStore.allowList.setter(*a1);
  v2 = swift_bridgeObjectRetain();
  MetadataStore.allowList.setter(v2);
  return swift_bridgeObjectRelease();
}

uint64_t MetadataStore.localDeviceID.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 56) + 16);
  os_unfair_lock_lock(v1);
  sub_2452F96C4(&v4);
  v2 = v4;
  os_unfair_lock_unlock(v1);
  return v2;
}

double sub_2452F7690@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  os_unfair_lock_s *v3;
  double result;
  __int128 v5;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(*(_QWORD *)a1 + 56) + 16);
  os_unfair_lock_lock(v3);
  sub_2452F9B4C(&v5);
  os_unfair_lock_unlock(v3);
  result = *(double *)&v5;
  *a2 = v5;
  return result;
}

uint64_t MetadataStore.localDeviceID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[40];

  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 56) + 16);
  os_unfair_lock_lock(v5);
  sub_2452E6204(v6, sub_2452F9688);
  os_unfair_lock_unlock(v5);
  v8 = sub_2452F70F0();
  v9 = *(_QWORD *)(v7 + 24);
  if (v9)
  {
    v10 = *(_QWORD *)(v7 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v7, *(_QWORD *)(v7 + 24));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, a2, v9, v10);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return ((uint64_t (*)(_BYTE *, _QWORD))v8)(v12, 0);
}

uint64_t (*MetadataStore.localDeviceID.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  a1[2] = v1;
  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 56) + 16);
  os_unfair_lock_lock(v3);
  sub_2452F96C4(v7);
  v4 = v7[0];
  v5 = v7[1];
  os_unfair_lock_unlock(v3);
  *a1 = v4;
  a1[1] = v5;
  return sub_2452F7824;
}

uint64_t sub_2452F7824(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return MetadataStore.localDeviceID.setter(*a1, v2);
  swift_bridgeObjectRetain();
  MetadataStore.localDeviceID.setter(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t MetadataStore.isEnabled.getter()
{
  return sub_2452F7890((void (*)(uint64_t *__return_ptr))sub_2452F96D0);
}

uint64_t sub_2452F7890(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v6;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 56) + 16);
  os_unfair_lock_lock(v3);
  a1(&v6);
  v4 = v6;
  os_unfair_lock_unlock(v3);
  return v4;
}

void sub_2452F78E4(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  os_unfair_lock_s *v3;
  char v4;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(*(_QWORD *)a1 + 56) + 16);
  os_unfair_lock_lock(v3);
  sub_2452F9AF4(&v4);
  os_unfair_lock_unlock(v3);
  *a2 = v4;
}

uint64_t MetadataStore.isEnabled.setter(char a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[40];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 56) + 16);
  os_unfair_lock_lock(v3);
  sub_2452E6204(v4, (uint64_t (*)(void))sub_2452F96DC);
  os_unfair_lock_unlock(v3);
  v6 = sub_2452F70F0();
  v7 = *(_QWORD *)(v5 + 24);
  if (v7)
  {
    v8 = *(_QWORD *)(v5 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v5, *(_QWORD *)(v5 + 24));
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v8 + 32))(a1 & 1, v7, v8);
  }
  return ((uint64_t (*)(_BYTE *, _QWORD))v6)(v10, 0);
}

uint64_t (*MetadataStore.isEnabled.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  char v4;
  char v6;

  *(_QWORD *)a1 = v1;
  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 56) + 16);
  os_unfair_lock_lock(v3);
  sub_2452F96D0(&v6);
  v4 = v6;
  os_unfair_lock_unlock(v3);
  *(_BYTE *)(a1 + 8) = v4;
  return sub_2452F7A5C;
}

uint64_t sub_2452F7A5C(uint64_t a1)
{
  return MetadataStore.isEnabled.setter(*(_BYTE *)(a1 + 8));
}

Swift::Void __swiftcall MetadataStore.removeAll()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  uint64_t v14;

  v1 = v0;
  if (qword_25744FD90 != -1)
    swift_once();
  v2 = sub_245387818();
  __swift_project_value_buffer(v2, (uint64_t)qword_257462FB0);
  v3 = sub_2453877F4();
  v4 = sub_245387D34();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_245256000, v3, v4, "Removing all metadata store records", v5, 2u);
    MEMORY[0x24953317C](v5, -1, -1);
  }

  v6 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 56) + 16);
  os_unfair_lock_lock(v6);
  sub_2452E6204(v7, sub_2452F96EC);
  os_unfair_lock_unlock(v6);
  swift_beginAccess();
  sub_2452F973C(v1 + 16, (uint64_t)v13);
  if (v14)
  {
    sub_24525E4F0((uint64_t)v13, (uint64_t)v10);
    sub_245263F80((uint64_t)v13, &qword_25744FCA0);
    v8 = v11;
    v9 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v9 + 80))(v8, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    sub_245263F80((uint64_t)v13, &qword_25744FCA0);
  }
}

uint64_t MetadataStore.update(_:)(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];
  uint64_t v12;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 56) + 16);
  os_unfair_lock_lock(v3);
  sub_2452E6204(v4, sub_2452F9784);
  os_unfair_lock_unlock(v3);
  swift_beginAccess();
  sub_2452F973C(v1 + 16, (uint64_t)v11);
  if (!v12)
    return sub_245263F80((uint64_t)v11, &qword_25744FCA0);
  sub_24525E4F0((uint64_t)v11, (uint64_t)v8);
  sub_245263F80((uint64_t)v11, &qword_25744FCA0);
  v5 = v9;
  v6 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 88))(a1, v5, v6);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

uint64_t sub_2452F7CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PairingRelationship();
  v7 = (uint64_t *)(a2 + *(int *)(v6 + 20));
  v8 = *v7;
  v9 = v7[1];
  sub_2452B792C(a2, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 0, 1, v6);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_24531BC10((uint64_t)v5, v8, v9);
  return swift_endAccess();
}

Swift::Void __swiftcall MetadataStore.removePairingRelationship(with:)(Swift::String with)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];
  uint64_t v12;

  object = with._object;
  countAndFlagsBits = with._countAndFlagsBits;
  v4 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 56) + 16);
  os_unfair_lock_lock(v4);
  sub_2452E6204(v5, sub_2452F979C);
  os_unfair_lock_unlock(v4);
  swift_beginAccess();
  sub_2452F973C(v1 + 16, (uint64_t)v11);
  if (v12)
  {
    sub_24525E4F0((uint64_t)v11, (uint64_t)v8);
    sub_245263F80((uint64_t)v11, &qword_25744FCA0);
    v6 = v9;
    v7 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v7 + 96))(countAndFlagsBits, object, v6, v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    sub_245263F80((uint64_t)v11, &qword_25744FCA0);
  }
}

uint64_t sub_2452F7EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PairingRelationship();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_24531BC10((uint64_t)v7, a2, a3);
  return swift_endAccess();
}

Swift::Void __swiftcall MetadataStore.update(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  uint64_t v11;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 56) + 16);
  os_unfair_lock_lock(v3);
  sub_2452E6204(v4, sub_2452F97B8);
  os_unfair_lock_unlock(v3);
  swift_beginAccess();
  sub_2452F973C(v1 + 16, (uint64_t)v10);
  if (v11)
  {
    sub_24525E4F0((uint64_t)v10, (uint64_t)v7);
    sub_245263F80((uint64_t)v10, &qword_25744FCA0);
    v5 = v8;
    v6 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    (*(void (**)(void *, uint64_t, uint64_t))(v6 + 104))(a1._rawValue, v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    sub_245263F80((uint64_t)v10, &qword_25744FCA0);
  }
}

uint64_t sub_2452F80BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  _QWORD *v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  _QWORD v46[4];
  __int128 v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[3];
  _QWORD *v57;

  v5 = type metadata accessor for Record.ID(0);
  v49 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v50 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RecordMetadata();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v54 = (uint64_t)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v46 - v11;
  result = MEMORY[0x24BDAC7A8](v10);
  v55 = (uint64_t)v46 - v15;
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v46[0] = v5;
    v46[1] = a1;
    v46[2] = v2;
    v17 = (_QWORD *)(a2 + 72);
    v18 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v19 = *(_QWORD *)(v14 + 72);
    swift_bridgeObjectRetain();
    *(_QWORD *)&v20 = 136446210;
    v47 = v20;
    v46[3] = MEMORY[0x24BEE4AD8] + 8;
    v21 = v50;
    v51 = v12;
    v52 = v19;
    v48 = (_QWORD *)(a2 + 72);
    while (1)
    {
      v53 = v18;
      sub_2452B792C(v18, v55, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      if (qword_25744FD90 != -1)
        swift_once();
      v23 = sub_245387818();
      __swift_project_value_buffer(v23, (uint64_t)qword_257462FB0);
      sub_2452B792C(v55, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      v24 = sub_2453877F4();
      v25 = sub_245387D34();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint64_t)v12;
        v27 = swift_slowAlloc();
        v28 = swift_slowAlloc();
        v56[0] = v28;
        *(_DWORD *)v27 = v47;
        v29 = RecordMetadata.description.getter();
        *(_QWORD *)(v27 + 4) = sub_2453816D8(v29, v30, v56);
        swift_bridgeObjectRelease();
        v17 = v48;
        sub_2452B7B5C(v26, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
        _os_log_impl(&dword_245256000, v24, v25, "Updating record metadata: %{public}s", (uint8_t *)v27, 0xCu);
        swift_arrayDestroy();
        v21 = v50;
        MEMORY[0x24953317C](v28, -1, -1);
        MEMORY[0x24953317C](v27, -1, -1);
      }
      else
      {
        sub_2452B7B5C((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      }

      v31 = v55;
      sub_2452B792C(v55, (uint64_t)v21, type metadata accessor for Record.ID);
      swift_beginAccess();
      sub_2452B792C(v31, v54, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v57 = (_QWORD *)*v17;
      v33 = v57;
      *v17 = 0x8000000000000000;
      v35 = sub_2452C2000(v21);
      v36 = v33[2];
      v37 = (v34 & 1) == 0;
      v38 = v36 + v37;
      if (__OFADD__(v36, v37))
        break;
      v39 = v34;
      if (v33[3] >= v38)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_2452C816C();
      }
      else
      {
        sub_2452C3C4C(v38, isUniquelyReferenced_nonNull_native);
        v40 = sub_2452C2000(v21);
        if ((v39 & 1) != (v41 & 1))
          goto LABEL_23;
        v35 = v40;
      }
      v12 = v51;
      v42 = v57;
      if ((v39 & 1) != 0)
      {
        v22 = v52;
        sub_2452F9BCC(v54, v57[7] + v35 * v52);
      }
      else
      {
        v57[(v35 >> 6) + 8] |= 1 << v35;
        sub_2452B792C((uint64_t)v21, v42[6] + *(_QWORD *)(v49 + 72) * v35, type metadata accessor for Record.ID);
        v22 = v52;
        sub_2452F9B88(v54, v42[7] + v35 * v52);
        v43 = v42[2];
        v44 = __OFADD__(v43, 1);
        v45 = v43 + 1;
        if (v44)
          goto LABEL_22;
        v42[2] = v45;
      }
      *v17 = v42;
      swift_bridgeObjectRelease();
      sub_2452B7B5C((uint64_t)v21, type metadata accessor for Record.ID);
      swift_endAccess();
      sub_2452B7B5C(v55, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      v18 = v53 + v22;
      if (!--v16)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    result = sub_2453883DC();
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall MetadataStore.remove(recordIDs:)(Swift::OpaquePointer recordIDs)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  uint64_t v11;

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 56) + 16);
  os_unfair_lock_lock(v3);
  sub_2452E6204(v4, sub_2452F97D0);
  os_unfair_lock_unlock(v3);
  swift_beginAccess();
  sub_2452F973C(v1 + 16, (uint64_t)v10);
  if (v11)
  {
    sub_24525E4F0((uint64_t)v10, (uint64_t)v7);
    sub_245263F80((uint64_t)v10, &qword_25744FCA0);
    v5 = v8;
    v6 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    (*(void (**)(void *, uint64_t, uint64_t))(v6 + 112))(recordIDs._rawValue, v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    sub_245263F80((uint64_t)v10, &qword_25744FCA0);
  }
}

uint64_t sub_2452F861C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  char v35;
  char v36;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[4];
  __int128 v45;
  uint64_t v46;
  uint64_t *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52[3];
  uint64_t v53;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F848);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Record.ID(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v9);
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v44[1] = a1;
    v44[2] = v2;
    v16 = (uint64_t *)(a2 + 72);
    v17 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v18 = (char *)v44 - v14;
    v19 = *(_QWORD *)(v13 + 72);
    swift_bridgeObjectRetain();
    *(_QWORD *)&v20 = 136446210;
    v45 = v20;
    v44[3] = MEMORY[0x24BEE4AD8] + 8;
    v50 = v7;
    v51 = v11;
    v48 = v18;
    v49 = v19;
    v47 = v16;
    do
    {
      sub_2452B792C(v17, (uint64_t)v18, type metadata accessor for Record.ID);
      v23 = v18;
      if (qword_25744FD90 != -1)
        swift_once();
      v24 = sub_245387818();
      __swift_project_value_buffer(v24, (uint64_t)qword_257462FB0);
      sub_2452B792C((uint64_t)v18, (uint64_t)v11, type metadata accessor for Record.ID);
      v25 = sub_2453877F4();
      v26 = sub_245387D34();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = swift_slowAlloc();
        v28 = swift_slowAlloc();
        v52[0] = v28;
        *(_DWORD *)v27 = v45;
        v29 = Record.ID.description.getter();
        *(_QWORD *)(v27 + 4) = sub_2453816D8(v29, v30, v52);
        swift_bridgeObjectRelease();
        sub_2452B7B5C((uint64_t)v51, type metadata accessor for Record.ID);
        _os_log_impl(&dword_245256000, v25, v26, "Removing record metadata: %{public}s", (uint8_t *)v27, 0xCu);
        swift_arrayDestroy();
        v31 = v28;
        v11 = v51;
        MEMORY[0x24953317C](v31, -1, -1);
        v32 = v27;
        v7 = v50;
        MEMORY[0x24953317C](v32, -1, -1);
      }
      else
      {
        sub_2452B7B5C((uint64_t)v11, type metadata accessor for Record.ID);
      }

      v33 = v47;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v34 = sub_2452C2000(v23);
      v36 = v35;
      swift_bridgeObjectRelease();
      if ((v36 & 1) != 0)
      {
        v46 = v15;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v38 = *v33;
        v53 = *v33;
        *v33 = 0x8000000000000000;
        v39 = v33;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_2452C816C();
          v38 = v53;
        }
        v22 = v49;
        sub_2452B7B5C(*(_QWORD *)(v38 + 48) + v34 * v49, type metadata accessor for Record.ID);
        v40 = *(_QWORD *)(v38 + 56);
        v41 = type metadata accessor for RecordMetadata();
        v42 = *(_QWORD *)(v41 - 8);
        v43 = v40 + *(_QWORD *)(v42 + 72) * v34;
        v7 = v50;
        sub_2452F9B88(v43, (uint64_t)v50);
        sub_245371948(v34, v38);
        *v39 = v38;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v7, 0, 1, v41);
        v11 = v51;
        v15 = v46;
      }
      else
      {
        v21 = type metadata accessor for RecordMetadata();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v7, 1, 1, v21);
        v22 = v49;
      }
      sub_245263F80((uint64_t)v7, &qword_25744F848);
      swift_endAccess();
      v18 = v48;
      sub_2452B7B5C((uint64_t)v48, type metadata accessor for Record.ID);
      v17 += v22;
      --v15;
    }
    while (v15);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2452F8A0C(uint64_t a1, uint64_t a2)
{
  return MetadataStore.localDeviceID.setter(a1, a2);
}

uint64_t (*sub_2452F8A2C(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = MetadataStore.localDeviceID.modify(v2);
  return sub_245275DE8;
}

uint64_t sub_2452F8A74(char a1)
{
  return MetadataStore.isEnabled.setter(a1);
}

uint64_t (*sub_2452F8A94(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = MetadataStore.isEnabled.modify((uint64_t)v2);
  return sub_245275DE8;
}

uint64_t sub_2452F8ADC(char a1)
{
  return MetadataStore.allowListEnabled.setter(a1);
}

uint64_t (*sub_2452F8AFC(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = MetadataStore.allowListEnabled.modify((uint64_t)v2);
  return sub_245275DE8;
}

uint64_t sub_2452F8B44(uint64_t a1)
{
  return MetadataStore.allowList.setter(a1);
}

uint64_t (*sub_2452F8B64(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = MetadataStore.allowList.modify(v2);
  return sub_245275DE8;
}

void sub_2452F8BAC()
{
  MetadataStore.removeAll()();
}

uint64_t sub_2452F8BCC(uint64_t a1)
{
  return MetadataStore.update(_:)(a1);
}

void sub_2452F8BEC(uint64_t a1, uint64_t a2)
{
  MetadataStore.removePairingRelationship(with:)(*(Swift::String *)&a1);
}

void sub_2452F8C0C(Swift::OpaquePointer a1)
{
  MetadataStore.update(_:)(a1);
}

void sub_2452F8C2C(Swift::OpaquePointer a1)
{
  MetadataStore.remove(recordIDs:)(a1);
}

uint64_t sub_2452F8C4C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  __int128 v3;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(*(_QWORD *)v0 + 56) + 16);
  os_unfair_lock_lock(v1);
  sub_2452F9B4C(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_2452F8CB0()
{
  return sub_2452F8D3C();
}

uint64_t sub_2452F8CBC()
{
  return sub_2452F8CD4();
}

uint64_t sub_2452F8CC8()
{
  return sub_2452F8CD4();
}

uint64_t sub_2452F8CD4()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v3;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(*(_QWORD *)v0 + 56) + 16);
  os_unfair_lock_lock(v1);
  sub_2452F9AB8(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_2452F8D30()
{
  return sub_2452F8D3C();
}

uint64_t sub_2452F8D3C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  unsigned __int8 v3;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(*(_QWORD *)v0 + 56) + 16);
  os_unfair_lock_lock(v1);
  sub_2452F9AF4(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_2452F8D98()
{
  return sub_2452F8CD4();
}

void sub_2452F8DA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  __int128 v15;
  uint64_t v16;
  _BYTE v17[40];

  v2 = a1 + 16;
  swift_beginAccess();
  sub_2452F973C(v2, (uint64_t)&v15);
  if (v16)
  {
    sub_2452B7C5C(&v15, (uint64_t)v17);
    if (qword_25744FD90 != -1)
      swift_once();
    v3 = sub_245387818();
    __swift_project_value_buffer(v3, (uint64_t)qword_257462FB0);
    v4 = sub_2453877F4();
    v5 = sub_245387D34();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_245256000, v4, v5, "Restoring metadata", v6, 2u);
      MEMORY[0x24953317C](v6, -1, -1);
    }

    MEMORY[0x24BDAC7A8](v7);
    v9 = v8 + 4;
    os_unfair_lock_lock(v8 + 4);
    sub_2452E6204(v10, (uint64_t (*)(void))sub_2452F9C10);
    os_unfair_lock_unlock(v9);
    if (v1)
      __break(1u);
    else
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  else
  {
    sub_245263F80((uint64_t)&v15, &qword_25744FCA0);
    if (qword_25744FD90 != -1)
      swift_once();
    v11 = sub_245387818();
    __swift_project_value_buffer(v11, (uint64_t)qword_257462FB0);
    v12 = sub_2453877F4();
    v13 = sub_245387D34();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_245256000, v12, v13, "Persistent store is not set; not restoring metadata", v14, 2u);
      MEMORY[0x24953317C](v14, -1, -1);
    }

  }
}

void sub_2452F8FF8(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;

  v5 = a2[3];
  v4 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v5);
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 8) + 24))(v5);
  swift_beginAccess();
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  v8 = a2[3];
  v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v8);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v7 + 8) + 32))(v8);
  swift_beginAccess();
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  v11 = a2[3];
  v10 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v11);
  *(_QWORD *)(a1 + 80) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v10 + 8) + 8))(v11);
  *(_QWORD *)(a1 + 88) = v12;
  swift_bridgeObjectRelease();
  v14 = a2[3];
  v13 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v14);
  *(_QWORD *)(a1 + 104) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v13 + 8) + 48))(v14);
  swift_bridgeObjectRelease();
  v16 = a2[3];
  v15 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v16);
  *(_BYTE *)(a1 + 97) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v15 + 8) + 40))(v16) & 1;
  v18 = a2[3];
  v17 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v18);
  *(_BYTE *)(a1 + 96) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v17 + 8) + 16))(v18) & 1;
  if (qword_25744FD90 != -1)
    swift_once();
  v19 = sub_245387818();
  __swift_project_value_buffer(v19, (uint64_t)qword_257462FB0);
  swift_retain();
  v20 = sub_2453877F4();
  v21 = sub_245387D34();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v22 = 134349056;
    sub_245387E0C();
    swift_release();
    _os_log_impl(&dword_245256000, v20, v21, "Restored %{public}ld record metadata items", v22, 0xCu);
    MEMORY[0x24953317C](v22, -1, -1);

  }
  else
  {

    swift_release();
  }
}

unint64_t MetadataStore.description.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v3;

  sub_245387EA8();
  swift_bridgeObjectRelease();
  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 56) + 16);
  os_unfair_lock_lock(v1);
  sub_2452F97E8(&v3);
  os_unfair_lock_unlock(v1);
  type metadata accessor for Record.ID(0);
  type metadata accessor for RecordMetadata();
  sub_2452F982C();
  sub_245387A70();
  sub_245387B90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_245387B90();
  os_unfair_lock_lock(v1);
  sub_2452F9874(&v3);
  os_unfair_lock_unlock(v1);
  type metadata accessor for PairingRelationship();
  sub_245387A70();
  sub_245387B90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000010;
}

unint64_t sub_2452F93EC()
{
  return MetadataStore.description.getter();
}

Swift::Bool __swiftcall MetadataStore.blockedByAllowList(ID:)(Swift::String ID)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  os_unfair_lock_s *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;
  uint64_t v14;
  uint64_t v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 56) + 16);
  os_unfair_lock_lock(v5);
  sub_2452F95B0((_BYTE *)&v14 + 7);
  v6 = HIBYTE(v14);
  os_unfair_lock_unlock(v5);
  if (v6 == 1)
  {
    os_unfair_lock_lock(v5);
    sub_2452F9608(&v15);
    v7 = v15;
    os_unfair_lock_unlock(v5);
    sub_2453876F8();
    v8 = sub_245387740();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8);
    if (v10 == 1)
    {
      __break(1u);
      return v10;
    }
    v11 = sub_24531D6B8((uint64_t)v4, v7);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v4, v8);
    v12 = v11 ^ 1;
  }
  else
  {
    v12 = 0;
  }
  LOBYTE(v10) = v12 & 1;
  return v10;
}

BOOL sub_2452F9544(uint64_t a1, uint64_t a2)
{
  return MetadataStore.blockedByAllowList(ID:)(*(Swift::String *)&a1);
}

uint64_t sub_2452F9568(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FCA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_2452F95B0(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 97);
}

_QWORD *sub_2452F95BC@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X1>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = a1(&v5);
  if (!v2)
    *a2 = v5;
  return result;
}

void sub_2452F95F8()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 97) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_2452F9608@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 104);
  return swift_bridgeObjectRetain();
}

double sub_2452F9614@<D0>(void (*a1)(__int128 *__return_ptr)@<X1>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;

  a1(&v5);
  if (!v2)
  {
    result = *(double *)&v5;
    *a2 = v5;
  }
  return result;
}

uint64_t sub_2452F9650()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + 104) = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2452F9688()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = v0[4];
  *(_QWORD *)(v1 + 80) = v0[3];
  *(_QWORD *)(v1 + 88) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2452F96C4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 88);
  *a1 = *(_QWORD *)(v1 + 80);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void sub_2452F96D0(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 96);
}

void sub_2452F96DC()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 96) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_2452F96EC()
{
  uint64_t v0;

  swift_beginAccess();
  *(_QWORD *)(v0 + 72) = MEMORY[0x24BEE4B00];
  return swift_bridgeObjectRelease();
}

uint64_t sub_2452F973C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FCA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2452F9784()
{
  uint64_t v0;

  return sub_2452F7CFC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2452F979C()
{
  uint64_t *v0;

  return sub_2452F7EF8(v0[2], v0[3], v0[4]);
}

uint64_t sub_2452F97B8()
{
  uint64_t v0;

  return sub_2452F80BC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2452F97D0()
{
  uint64_t v0;

  return sub_2452F861C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2452F97E8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  *a1 = *(_QWORD *)(v1 + 72);
  return swift_bridgeObjectRetain();
}

unint64_t sub_2452F982C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257452340;
  if (!qword_257452340)
  {
    v1 = type metadata accessor for Record.ID(255);
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for Record.ID, v1);
    atomic_store(result, (unint64_t *)&qword_257452340);
  }
  return result;
}

uint64_t sub_2452F9874@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  *a1 = *(_QWORD *)(v1 + 64);
  return swift_bridgeObjectRetain();
}

void sub_2452F98B8(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  sub_2452F78E4(a1, a2);
}

uint64_t sub_2452F98D4(char *a1)
{
  return MetadataStore.allowListEnabled.setter(*a1);
}

uint64_t sub_2452F98FC()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return MetadataStore.allowList.setter(v0);
}

uint64_t sub_2452F9928(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return MetadataStore.localDeviceID.setter(v1, v2);
}

void sub_2452F9964(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  sub_2452F78E4(a1, a2);
}

uint64_t sub_2452F9980(char *a1)
{
  return MetadataStore.isEnabled.setter(*a1);
}

uint64_t type metadata accessor for MetadataStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for MetadataStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MetadataStore.recordMetadata.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of MetadataStore.pairingRelationships.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of MetadataStore.__allocating_init(persistentStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 328))();
}

uint64_t sub_2452F99F0@<X0>(_QWORD *a1@<X8>)
{
  return sub_2452F9B30(a1);
}

uint64_t sub_2452F9A04@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 104);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2452F9A20@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  *a1 = *(_QWORD *)(v1 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2452F9A6C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  *a1 = *(_QWORD *)(v1 + 72);
  return swift_bridgeObjectRetain();
}

_QWORD *sub_2452F9AB8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
    *a1 = v5;
  return result;
}

_QWORD *sub_2452F9AF4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
    *a1 = v5;
  return result;
}

uint64_t sub_2452F9B30@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 88);
  *a1 = *(_QWORD *)(v1 + 80);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

double sub_2452F9B4C@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double result;
  __int128 v5;

  (*(void (**)(__int128 *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
  {
    result = *(double *)&v5;
    *a1 = v5;
  }
  return result;
}

uint64_t sub_2452F9B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RecordMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2452F9BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RecordMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_2452F9C10()
{
  uint64_t v0;

  sub_2452F8FF8(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

void sub_2452F9C28(_BYTE *a1@<X8>)
{
  sub_2452F95B0(a1);
}

void sub_2452F9C3C(_BYTE *a1@<X8>)
{
  sub_2452F96D0(a1);
}

uint64_t sub_2452F9C50@<X0>(_QWORD *a1@<X8>)
{
  return sub_2452F9A04(a1);
}

double ScreenDescriptor.pointSize.getter()
{
  double *v0;

  return *v0 / v0[2];
}

double ScreenDescriptor.size.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void ScreenDescriptor.size.setter(double a1, double a2)
{
  double *v2;

  *v2 = a1;
  v2[1] = a2;
}

uint64_t (*ScreenDescriptor.size.modify())()
{
  return nullsub_1;
}

double ScreenDescriptor.scale.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void ScreenDescriptor.scale.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*ScreenDescriptor.scale.modify())()
{
  return nullsub_1;
}

uint64_t ScreenDescriptor.cornerRadius.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t ScreenDescriptor.cornerRadius.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = result;
  *(_BYTE *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*ScreenDescriptor.cornerRadius.modify())()
{
  return nullsub_1;
}

uint64_t ScreenDescriptor.init(size:scale:cornerRadius:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>)
{
  *(double *)a3 = a4;
  *(double *)(a3 + 8) = a5;
  *(double *)(a3 + 16) = a6;
  *(_QWORD *)(a3 + 24) = result;
  *(_BYTE *)(a3 + 32) = a2 & 1;
  return result;
}

void static ScreenDescriptor.mainScreen.getter(uint64_t a1@<X8>)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double Width;
  double Height;
  uint64_t v11;
  char v13;
  uint64_t v14;
  char v15;
  double v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  float v22;
  float v23;
  double v24;
  CGRect v25;
  CGRect v26;

  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_mainDisplay);
  if (!v3)
    goto LABEL_22;
  v4 = v3;
  v5 = objc_msgSend(v3, sel_nativeOrientation);
  v6 = sub_245387B18();
  v8 = v7;

  objc_msgSend(v4, sel_frame);
  Width = CGRectGetWidth(v25);
  objc_msgSend(v4, sel_frame);
  Height = CGRectGetHeight(v26);
  if (sub_245387B18() == v6 && v11 == v8)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = sub_245388274();
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
    {
      swift_bridgeObjectRelease();

    }
    else if (sub_245387B18() == v6 && v14 == v8)
    {
      swift_bridgeObjectRelease_n();

    }
    else
    {
      v15 = sub_245388274();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if ((v15 & 1) != 0)
        v16 = Width;
      else
        v16 = Height;
      if ((v15 & 1) == 0)
        Height = Width;
      Width = v16;
    }
  }
  v17 = objc_msgSend(v2, sel_mainDisplay);
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v17, sel_currentMode);
    v20 = objc_msgSend(v19, sel_preferredScale);

    sub_2452F9F64();
    v21 = (void *)sub_245387DF4();
    MGGetFloat32Answer();
    v23 = v22;

    *(double *)a1 = Height;
    *(double *)(a1 + 8) = Width;
    v24 = v23;
    if (v23 <= -1.0)
      v24 = 0.0;
    *(double *)(a1 + 16) = (double)(uint64_t)v20;
    *(double *)(a1 + 24) = v24;
    *(_BYTE *)(a1 + 32) = v23 <= -1.0;
    *(_BYTE *)(a1 + 33) = 0;
  }
  else
  {
LABEL_22:
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_WORD *)(a1 + 32) = 256;
  }
}

unint64_t sub_2452F9F64()
{
  unint64_t result;

  result = qword_2574500B0;
  if (!qword_2574500B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2574500B0);
  }
  return result;
}

uint64_t sub_2452F9FA4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C616373;
  if (*v0 != 1)
    v1 = 0x615272656E726F63;
  if (*v0)
    return v1;
  else
    return 1702521203;
}

uint64_t sub_2452F9FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2452FA7C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2452FA020()
{
  sub_2452FA4A4();
  return sub_2453884D8();
}

uint64_t sub_2452FA048()
{
  sub_2452FA4A4();
  return sub_2453884E4();
}

uint64_t ScreenDescriptor.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574501E0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v10 = v1[2];
  v14 = v1[3];
  v11 = *((_BYTE *)v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452FA4A4();
  sub_24538849C();
  v16 = v8;
  v17 = v9;
  v15 = 0;
  type metadata accessor for CGSize(0);
  sub_2452FA52C(&qword_257450098, MEMORY[0x24BDBD848]);
  sub_2453880B8();
  if (!v2)
  {
    v12 = v14;
    v16 = v10;
    v15 = 1;
    sub_2452FA4E8();
    sub_2453880B8();
    v16 = v12;
    LOBYTE(v17) = v11;
    v15 = 2;
    sub_245388088();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ScreenDescriptor.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257450188);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452FA4A4();
  sub_245388490();
  if (!v2)
  {
    type metadata accessor for CGSize(0);
    v16 = 0;
    sub_2452FA52C(&qword_2574500A0, MEMORY[0x24BDBD860]);
    sub_245388034();
    v9 = v17;
    v10 = v18;
    v16 = 1;
    sub_2452FA56C();
    sub_245388034();
    v12 = v17;
    v16 = 2;
    sub_245388004();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = v17;
    v14 = v18;
    *(_QWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
    *(_QWORD *)(a2 + 16) = v12;
    *(_QWORD *)(a2 + 24) = v13;
    *(_BYTE *)(a2 + 32) = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2452FA428@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ScreenDescriptor.init(from:)(a1, a2);
}

uint64_t sub_2452FA43C(_QWORD *a1)
{
  return ScreenDescriptor.encode(to:)(a1);
}

uint64_t _s16ReplicatorEngine16ScreenDescriptorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4;

  if (*(double *)a1 != *(double *)a2
    || *(double *)(a1 + 8) != *(double *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16))
  {
    return 0;
  }
  v4 = *(_BYTE *)(a2 + 32);
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) == 0)
      return 0;
  }
  else
  {
    if (*(double *)(a1 + 24) != *(double *)(a2 + 24))
      v4 = 1;
    if ((v4 & 1) != 0)
      return 0;
  }
  return 1;
}

unint64_t sub_2452FA4A4()
{
  unint64_t result;

  result = qword_25744F8B8;
  if (!qword_25744F8B8)
  {
    result = MEMORY[0x2495330B0](&unk_24538D934, &type metadata for ScreenDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744F8B8);
  }
  return result;
}

unint64_t sub_2452FA4E8()
{
  unint64_t result;

  result = qword_25744F6F0;
  if (!qword_25744F6F0)
  {
    result = MEMORY[0x2495330B0](MEMORY[0x24BEE50C0], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_25744F6F0);
  }
  return result;
}

uint64_t sub_2452FA52C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CGSize(255);
    result = MEMORY[0x2495330B0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2452FA56C()
{
  unint64_t result;

  result = qword_25744F6F8;
  if (!qword_25744F6F8)
  {
    result = MEMORY[0x2495330B0](MEMORY[0x24BEE50E8], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_25744F6F8);
  }
  return result;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ScreenDescriptor(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ScreenDescriptor(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 33) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ScreenDescriptor()
{
  return &type metadata for ScreenDescriptor;
}

uint64_t storeEnumTagSinglePayload for ScreenDescriptor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2452FA670 + 4 * byte_24538D7C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2452FA6A4 + 4 * byte_24538D7C0[v4]))();
}

uint64_t sub_2452FA6A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452FA6AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2452FA6B4);
  return result;
}

uint64_t sub_2452FA6C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2452FA6C8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2452FA6CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452FA6D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScreenDescriptor.CodingKeys()
{
  return &type metadata for ScreenDescriptor.CodingKeys;
}

unint64_t sub_2452FA6F4()
{
  unint64_t result;

  result = qword_257452B48;
  if (!qword_257452B48)
  {
    result = MEMORY[0x2495330B0](&unk_24538D90C, &type metadata for ScreenDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452B48);
  }
  return result;
}

unint64_t sub_2452FA73C()
{
  unint64_t result;

  result = qword_25744F8C8;
  if (!qword_25744F8C8)
  {
    result = MEMORY[0x2495330B0](&unk_24538D87C, &type metadata for ScreenDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744F8C8);
  }
  return result;
}

unint64_t sub_2452FA784()
{
  unint64_t result;

  result = qword_25744F8C0;
  if (!qword_25744F8C0)
  {
    result = MEMORY[0x2495330B0](&unk_24538D8A4, &type metadata for ScreenDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744F8C0);
  }
  return result;
}

uint64_t sub_2452FA7C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702521203 && a2 == 0xE400000000000000;
  if (v2 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_245388274();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2452FA91C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v35 = a3;
  v39 = a2;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452C50);
  v34 = *(_QWORD *)(v41 - 8);
  v4 = MEMORY[0x24BDAC7A8](v41);
  v38 = (uint64_t *)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (uint64_t *)((char *)&v34 - v7);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (uint64_t *)((char *)&v34 - v9);
  v11 = *(_QWORD *)(a1 + 64);
  v36 = a1 + 64;
  v12 = 1 << *(_BYTE *)(a1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v37 = (unint64_t)(v12 + 63) >> 6;
  v40 = a1;
  result = swift_bridgeObjectRetain();
  v16 = 0;
  if (!v14)
    goto LABEL_5;
LABEL_4:
  v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v17 | (v16 << 6); ; i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    v22 = *(_QWORD *)(v40 + 56);
    v23 = (uint64_t *)(*(_QWORD *)(v40 + 48) + 16 * i);
    v25 = *v23;
    v24 = v23[1];
    v26 = v22
        + *(_QWORD *)(*(_QWORD *)(type metadata accessor for NetworkMessenger.ExpiringConnection(0) - 8) + 72) * i;
    v27 = v41;
    sub_2452B792C(v26, (uint64_t)v10 + *(int *)(v41 + 48), type metadata accessor for NetworkMessenger.ExpiringConnection);
    *v10 = v25;
    v10[1] = v24;
    sub_2452BC850((uint64_t)v10, (uint64_t)v8, &qword_257452C50);
    v28 = *(int *)(v27 + 48);
    v29 = v38;
    v30 = (_QWORD *)((char *)v38 + v28);
    v31 = v8[1];
    *v38 = *v8;
    v29[1] = v31;
    sub_2452B792C((uint64_t)v8 + v28, (uint64_t)v30, type metadata accessor for NetworkMessenger.ExpiringConnection);
    v32 = *v30;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_2452B7B5C((uint64_t)v30, type metadata accessor for NetworkMessenger.ExpiringConnection);
    swift_unknownObjectRelease();
    if (v32 == v39)
    {
      swift_release();
      v33 = v35;
      sub_2452BC850((uint64_t)v8, v35, &qword_257452C50);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v33, 0, 1, v41);
      return swift_unknownObjectRelease();
    }
    result = sub_245263F80((uint64_t)v8, &qword_257452C50);
    if (v14)
      goto LABEL_4;
LABEL_5:
    v19 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v19 >= v37)
      goto LABEL_25;
    v20 = *(_QWORD *)(v36 + 8 * v19);
    ++v16;
    if (v20)
      goto LABEL_20;
    v16 = v19 + 1;
    if (v19 + 1 >= v37)
      goto LABEL_25;
    v20 = *(_QWORD *)(v36 + 8 * v16);
    if (v20)
      goto LABEL_20;
    v16 = v19 + 2;
    if (v19 + 2 >= v37)
      goto LABEL_25;
    v20 = *(_QWORD *)(v36 + 8 * v16);
    if (v20)
      goto LABEL_20;
    v16 = v19 + 3;
    if (v19 + 3 >= v37)
      goto LABEL_25;
    v20 = *(_QWORD *)(v36 + 8 * v16);
    if (v20)
      goto LABEL_20;
    v21 = v19 + 4;
    if (v21 >= v37)
    {
LABEL_25:
      swift_release();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v35, 1, 1, v41);
      return swift_unknownObjectRelease();
    }
    v20 = *(_QWORD *)(v36 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        v16 = v21 + 1;
        if (__OFADD__(v21, 1))
          goto LABEL_28;
        if (v16 >= v37)
          goto LABEL_25;
        v20 = *(_QWORD *)(v36 + 8 * v16);
        ++v21;
        if (v20)
          goto LABEL_20;
      }
    }
    v16 = v21;
LABEL_20:
    v14 = (v20 - 1) & v20;
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2452FAC4C(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452D20);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_245319274();
  sub_24538849C();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452CD0);
  sub_245319950(&qword_257452D28, (uint64_t (*)(void))sub_2452CC1A4, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
  sub_2453880B8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2452FAD70()
{
  return 0x7475626972747461;
}

uint64_t sub_2452FAD8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_245388274();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2452FAE2C()
{
  sub_245319274();
  return sub_2453884D8();
}

uint64_t sub_2452FAE54()
{
  sub_245319274();
  return sub_2453884E4();
}

_QWORD *sub_2452FAE7C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_245316EC4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_2452FAEA4(_QWORD *a1)
{
  uint64_t *v1;

  return sub_2452FAC4C(a1, *v1);
}

uint64_t sub_2452FAEBC()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C58);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = 1;
  off_257452B50 = (_UNKNOWN *)result;
  return result;
}

uint64_t sub_2452FAEF8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_24532DC40(v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_2452FAF64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  uint64_t result;
  _QWORD v11[6];

  v3 = v2;
  v6 = *(NSObject **)(v3 + 24);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v3;
  v7[3] = a1;
  v7[4] = a2;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_24531961C;
  *(_QWORD *)(v8 + 24) = v7;
  v11[4] = sub_2452643B4;
  v11[5] = v8;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_24525B888;
  v11[3] = &block_descriptor_333;
  v9 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v6 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_2452FB098(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  os_unfair_lock_s *v13;
  uint64_t *v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[3];

  v4 = v2;
  v7 = sub_2453879D4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v4 + 24);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BEE5610], v7);
  v12 = v11;
  LOBYTE(v11) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_4;
  }
  v13 = *(os_unfair_lock_s **)(v4 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_terminusRemoteDeviceIDLock);
  v14 = (uint64_t *)&v13[4];
  v15 = v13 + 8;
  os_unfair_lock_lock(v13 + 8);
  sub_2452FB39C(v14, a1, a2, (uint64_t)v24);
  os_unfair_lock_unlock(v15);
  v10 = (_QWORD *)v24[2];
  if (LOBYTE(v24[0]) != 1)
    return swift_bridgeObjectRelease();
  v3 = v24[1];
  if (qword_25744FD98 != -1)
    goto LABEL_10;
LABEL_4:
  v16 = sub_245387818();
  __swift_project_value_buffer(v16, (uint64_t)qword_257462FC8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v17 = sub_2453877F4();
  v18 = sub_245387D34();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v24[0] = v22;
    *(_DWORD *)v19 = 136446466;
    swift_bridgeObjectRetain();
    v23 = sub_2453816D8(a1, a2, v24);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 2082;
    swift_bridgeObjectRetain();
    v23 = sub_2453816D8(v3, (unint64_t)v10, v24);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_245256000, v17, v18, "set terminusRemoteDeviceID:%{public}s changed from %{public}s; updating connections key",
      (uint8_t *)v19,
      0x16u);
    v20 = v22;
    swift_arrayDestroy();
    MEMORY[0x24953317C](v20, -1, -1);
    MEMORY[0x24953317C](v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_2452FB440(a1, a2, v3, (unint64_t)v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2452FB39C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char v11;
  char v12;

  v5 = *a1;
  v6 = a1[1];
  if (*a1 == a2 && v6 == a3)
  {
    v12 = 0;
  }
  else
  {
    v11 = sub_245388274();
    v12 = 0;
    if ((v11 & 1) == 0)
    {
      *a1 = a2;
      a1[1] = a3;
      v12 = 1;
    }
  }
  *(_BYTE *)a4 = v12;
  *(_QWORD *)(a4 + 8) = v5;
  *(_QWORD *)(a4 + 16) = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2452FB440(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  int v25;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[3];

  v39 = (_QWORD *)a3;
  v40 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452C40);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v35 - v10;
  v12 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v38 = (uint64_t)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2453879D4();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (uint64_t *)((char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = *(void **)(v4 + 24);
  *v18 = v19;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x24BEE5610], v15);
  v20 = v19;
  LOBYTE(v19) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) == 0)
  {
    __break(1u);
LABEL_15:
    swift_once();
    goto LABEL_10;
  }
  swift_beginAccess();
  v21 = *(_QWORD *)(v4 + 56);
  if (!*(_QWORD *)(v21 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
LABEL_8:
    sub_245263F80((uint64_t)v11, &qword_257452C40);
    return swift_endAccess();
  }
  swift_bridgeObjectRetain();
  v18 = v39;
  v22 = sub_2452C1D98((uint64_t)v39, a4);
  if ((v23 & 1) != 0)
  {
    sub_2452B792C(*(_QWORD *)(v21 + 56) + *(_QWORD *)(v13 + 72) * v22, (uint64_t)v11, type metadata accessor for NetworkMessenger.ExpiringConnection);
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v24(v11, 0, 1, v12);
  }
  else
  {
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v24(v11, 1, 1, v12);
  }
  v16 = a2;
  swift_bridgeObjectRelease();
  v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  a2 = v40;
  if (v25 == 1)
    goto LABEL_8;
  v36 = v24;
  sub_2452B7AB8((uint64_t)v11, v38, type metadata accessor for NetworkMessenger.ExpiringConnection);
  swift_endAccess();
  if (qword_25744FD98 != -1)
    goto LABEL_15;
LABEL_10:
  v27 = sub_245387818();
  __swift_project_value_buffer(v27, (uint64_t)qword_257462FC8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v28 = sub_2453877F4();
  v29 = sub_245387D34();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = swift_slowAlloc();
    v42[0] = swift_slowAlloc();
    v31 = v42[0];
    *(_DWORD *)v30 = 136446466;
    swift_bridgeObjectRetain();
    v41 = sub_2453816D8((uint64_t)v18, a4, v42);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v30 + 12) = 2082;
    swift_bridgeObjectRetain();
    v41 = sub_2453816D8(v40, v16, v42);
    v18 = v39;
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_245256000, v28, v29, "updating connection key from %{public}s to %{public}s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    v32 = v31;
    a2 = v40;
    MEMORY[0x24953317C](v32, -1, -1);
    MEMORY[0x24953317C](v30, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  v33 = v37;
  sub_245327DD4((uint64_t)v18, a4, v37);
  swift_endAccess();
  sub_245263F80(v33, &qword_257452C40);
  v34 = v38;
  sub_2452B792C(v38, v33, type metadata accessor for NetworkMessenger.ExpiringConnection);
  v36((char *)v33, 0, 1, v12);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_24531C5EC(v33, a2, v16);
  swift_endAccess();
  return sub_2452B7B5C(v34, type metadata accessor for NetworkMessenger.ExpiringConnection);
}

uint64_t sub_2452FB924(uint64_t isEscapingClosureAtFileLocation)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint32_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  int out_token;
  uint64_t aBlock;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  unint64_t v27;
  uint64_t v28;

  v2 = v1;
  v28 = *MEMORY[0x24BDAC8D0];
  out_token = -1;
  v5 = *(void **)(v1 + 120);
  v4 = *(_QWORD *)(v1 + 128);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  v26 = sub_245319690;
  v27 = v6;
  v7 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v23 = 1107296256;
  v24 = sub_245333644;
  v25 = &block_descriptor_339;
  v8 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain_n();
  swift_release();
  v9 = sub_245387B54();
  v10 = notify_register_dispatch((const char *)(v9 + 32), &out_token, (dispatch_queue_t)isEscapingClosureAtFileLocation, v8);
  swift_release();
  _Block_release(v8);
  if (!v10)
  {
    if (qword_25744FD90 != -1)
      swift_once();
    v17 = sub_245387818();
    __swift_project_value_buffer(v17, (uint64_t)qword_257462FB0);
    swift_bridgeObjectRetain();
    v12 = sub_2453877F4();
    v13 = sub_245387D34();
    if (!os_log_type_enabled(v12, v13))
      goto LABEL_10;
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    aBlock = v15;
    *(_DWORD *)v14 = 136315138;
    swift_bridgeObjectRetain();
    sub_2453816D8((uint64_t)v5, v4, &aBlock);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    v16 = "registered for %s notifications";
    goto LABEL_9;
  }
  if (qword_25744FD90 != -1)
    goto LABEL_13;
  while (1)
  {
    v11 = sub_245387818();
    __swift_project_value_buffer(v11, (uint64_t)qword_257462FB0);
    swift_bridgeObjectRetain();
    v12 = sub_2453877F4();
    v13 = sub_245387D1C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      aBlock = v15;
      *(_DWORD *)v14 = 136315138;
      swift_bridgeObjectRetain();
      sub_2453816D8((uint64_t)v5, v4, &aBlock);
      sub_245387E0C();
      swift_bridgeObjectRelease_n();
      v16 = "Could not register for %s notifications";
LABEL_9:
      _os_log_impl(&dword_245256000, v12, v13, v16, v14, 0xCu);
      swift_arrayDestroy();
      v18 = v15;
      v7 = MEMORY[0x24BDAC760];
      MEMORY[0x24953317C](v18, -1, -1);
      MEMORY[0x24953317C](v14, -1, -1);

    }
    else
    {
LABEL_10:

      swift_bridgeObjectRelease_n();
    }
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v2;
    *(_QWORD *)(v19 + 24) = &out_token;
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = sub_245319698;
    *(_QWORD *)(v4 + 24) = v19;
    v26 = sub_2452643B4;
    v27 = v4;
    aBlock = v7;
    v23 = 1107296256;
    v24 = sub_24525B888;
    v25 = &block_descriptor_349;
    v5 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync((dispatch_queue_t)isEscapingClosureAtFileLocation, v5);
    _Block_release(v5);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      break;
    __break(1u);
LABEL_13:
    swift_once();
  }
  return result;
}

id *sub_2452FBD8C()
{
  id *v0;
  char *v1;
  uint64_t v2;

  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v1 = (char *)v0 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_temporaryFileURL;
  v2 = sub_2453875E4();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2452FBE68()
{
  sub_2452FBD8C();
  return swift_deallocClassInstance();
}

uint64_t sub_2452FBE8C()
{
  return type metadata accessor for NetworkMessenger(0);
}

uint64_t type metadata accessor for NetworkMessenger(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_25744F8A8);
}

uint64_t sub_2452FBEA8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2453875E4();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

char *sub_2452FBF8C(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_245387740();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = (int *)type metadata accessor for Message();
    v11 = v10[5];
    v12 = &a1[v11];
    v13 = &a2[v11];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v11], 1, v7))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v9(v12, v13, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
    }
    v16 = v10[6];
    v17 = &a1[v16];
    v18 = &a2[v16];
    v19 = *((_QWORD *)v18 + 1);
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *((_QWORD *)v17 + 1) = v19;
    v20 = v10[7];
    v21 = &a1[v20];
    v22 = &a2[v20];
    v23 = *((_QWORD *)v22 + 1);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = v23;
    *(_QWORD *)&a1[v10[8]] = *(_QWORD *)&a2[v10[8]];
    v24 = v10[9];
    v25 = (uint64_t *)&a1[v24];
    v26 = (uint64_t *)&a2[v24];
    v27 = *v26;
    v28 = v26[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_245261C44(v27, v28);
    *v25 = v27;
    v25[1] = v28;
    v29 = *(int *)(a3 + 24);
    *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
    a1[v29] = a2[v29];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2452FC118(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;

  v2 = sub_245387740();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v4(a1, v2);
  v5 = type metadata accessor for Message();
  v6 = a1 + *(int *)(v5 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v6, 1, v2))
    v4(v6, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24525CB80(*(_QWORD *)(a1 + *(int *)(v5 + 36)), *(_QWORD *)(a1 + *(int *)(v5 + 36) + 8));
  return swift_bridgeObjectRelease();
}

uint64_t sub_2452FC1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  int *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v6 = sub_245387740();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = (int *)type metadata accessor for Message();
  v10 = v9[5];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v10, 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v11, (uint64_t)v12, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = v9[6];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = v9[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  *(_QWORD *)(a1 + v9[8]) = *(_QWORD *)(a2 + v9[8]);
  v22 = v9[9];
  v23 = (uint64_t *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v25 = *v24;
  v26 = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_245261C44(v25, v26);
  *v23 = v25;
  v23[1] = v26;
  v27 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v27) = *(_BYTE *)(a2 + v27);
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_2452FC340(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v5 = sub_245387740();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v8 = (int *)type metadata accessor for Message();
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  v13 = v12(&a1[v9], 1, v5);
  v14 = v12(v11, 1, v5);
  if (!v13)
  {
    if (!v14)
    {
      v7(v10, v11, v5);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v11, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v10, 0, 1, v5);
LABEL_7:
  v16 = v8[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = v8[7];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v8[8]] = *(_QWORD *)&a2[v8[8]];
  v22 = v8[9];
  v23 = (uint64_t *)&a1[v22];
  v24 = (uint64_t *)&a2[v22];
  v25 = *v24;
  v26 = v24[1];
  sub_245261C44(*v24, v26);
  v27 = *v23;
  v28 = v23[1];
  *v23 = v25;
  v23[1] = v26;
  sub_24525CB80(v27, v28);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_2452FC52C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_245387740();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = (int *)type metadata accessor for Message();
  v10 = v9[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v10], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v8(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  *(_OWORD *)&a1[v9[6]] = *(_OWORD *)&a2[v9[6]];
  *(_OWORD *)&a1[v9[7]] = *(_OWORD *)&a2[v9[7]];
  *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
  *(_OWORD *)&a1[v9[9]] = *(_OWORD *)&a2[v9[9]];
  v14 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  a1[v14] = a2[v14];
  return a1;
}

char *sub_2452FC658(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v5 = sub_245387740();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v8 = (int *)type metadata accessor for Message();
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  v13 = v12(&a1[v9], 1, v5);
  v14 = v12(v11, 1, v5);
  if (!v13)
  {
    if (!v14)
    {
      v7(v10, v11, v5);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v11, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v10, 0, 1, v5);
LABEL_7:
  v16 = v8[6];
  v17 = &a1[v16];
  v18 = (uint64_t *)&a2[v16];
  v20 = *v18;
  v19 = v18[1];
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v21 = v8[7];
  v22 = &a1[v21];
  v23 = (uint64_t *)&a2[v21];
  v25 = *v23;
  v24 = v23[1];
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v8[8]] = *(_QWORD *)&a2[v8[8]];
  v26 = v8[9];
  v27 = *(_QWORD *)&a1[v26];
  v28 = *(_QWORD *)&a1[v26 + 8];
  *(_OWORD *)&a1[v26] = *(_OWORD *)&a2[v26];
  sub_24525CB80(v27, v28);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_2452FC80C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452FC818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for Message();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_2452FC8A0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452FC8AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Message();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for NetworkMessenger.PartialIncomingMessage(uint64_t a1)
{
  return sub_2452B73E8(a1, qword_257452B60);
}

uint64_t sub_2452FC938()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Message();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2452FC9B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_2453876EC();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_unknownObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_2452FCA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_unknownObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2453876EC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_2452FCA94(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2453876EC();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_unknownObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *sub_2452FCB04(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2453876EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *sub_2452FCB78(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2453876EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_2452FCBD4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_unknownObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2453876EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_2452FCC40()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452FCC4C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2453876EC();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_2452FCCC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2452FCCD4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_2453876EC();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for NetworkMessenger.ExpiringConnection(uint64_t a1)
{
  return sub_2452B73E8(a1, qword_257452B78);
}

uint64_t sub_2452FCD5C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2453876EC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2452FCDD0()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  uint64_t result;
  _QWORD v5[6];

  v1 = *(NSObject **)(v0 + 24);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_2453194FC;
  *(_QWORD *)(v2 + 24) = v0;
  v5[4] = sub_2452643B4;
  v5[5] = v2;
  v5[0] = MEMORY[0x24BDAC760];
  v5[1] = 1107296256;
  v5[2] = sub_24525B888;
  v5[3] = &block_descriptor_288;
  v3 = _Block_copy(v5);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v1 & 1) != 0)
    __break(1u);
  return result;
}

NSObject *sub_2452FCED8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  NSObject *result;
  NSObject *v17;
  void *v18;
  const char *v19;
  NSObject *application_service;
  nw_listener_t v21;
  NSObject *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  NSObject *v41;
  dispatch_queue_t v42;
  uint64_t v43;
  uint64_t aBlock;
  uint64_t v45;
  void *v46;
  void *v47;
  void *v48;
  uint64_t v49;

  v1 = v0;
  v2 = sub_2453879D4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (void *)v1[3];
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    v42 = v7;
    if (qword_25744FD98 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v8 = sub_245387818();
  __swift_project_value_buffer(v8, (uint64_t)qword_257462FC8);
  swift_retain_n();
  v9 = sub_2453877F4();
  v10 = sub_245387D34();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock = v12;
    *(_DWORD *)v11 = 136446210;
    if (*((_BYTE *)v1 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType))
      v13 = 0xD000000000000011;
    else
      v13 = 0x72656E657473696CLL;
    if (*((_BYTE *)v1 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType))
      v14 = 0x8000000245394770;
    else
      v14 = 0xE800000000000000;
    v43 = sub_2453816D8(v13, v14, &aBlock);
    sub_245387E0C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v9, v10, "Starting %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v12, -1, -1);
    MEMORY[0x24953317C](v11, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v15 = *((unsigned __int8 *)v1 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType);
  LOBYTE(aBlock) = *((_BYTE *)v1 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType);
  result = sub_245317A4C((unsigned __int8 *)&aBlock);
  if (result)
  {
    v17 = result;
    v18 = (void *)sub_245387AF4();
    v19 = (const char *)objc_msgSend(v18, sel_UTF8String);
    result = v18;
    if (v19)
    {
      application_service = nw_advertise_descriptor_create_application_service(v19);
      v21 = nw_listener_create(v17);
      if (v21)
      {
        v22 = v21;
        swift_retain_n();
        swift_unknownObjectRetain_n();
        v23 = sub_2453877F4();
        v24 = sub_245387D34();
        if (os_log_type_enabled(v23, v24))
        {
          v25 = swift_slowAlloc();
          v41 = application_service;
          v26 = v25;
          v27 = swift_slowAlloc();
          aBlock = v27;
          *(_DWORD *)v26 = 136446466;
          if (v15)
            v28 = 0xD000000000000011;
          else
            v28 = 0x72656E657473694CLL;
          if (v15)
            v29 = 0x8000000245394750;
          else
            v29 = 0xE800000000000000;
          v43 = sub_2453816D8(v28, v29, &aBlock);
          sub_245387E0C();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v26 + 12) = 2082;
          v43 = (uint64_t)v22;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450040);
          v30 = sub_245387B48();
          v43 = sub_2453816D8(v30, v31, &aBlock);
          sub_245387E0C();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_245256000, v23, v24, "%{public}s created %{public}s", (uint8_t *)v26, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24953317C](v27, -1, -1);
          v32 = v26;
          application_service = v41;
          MEMORY[0x24953317C](v32, -1, -1);

        }
        else
        {

          swift_unknownObjectRelease_n();
          swift_release_n();
        }
        nw_listener_set_advertise_descriptor(v22, application_service);
        v33 = swift_allocObject();
        swift_weakInit();
        v34 = swift_allocObject();
        *(_QWORD *)(v34 + 16) = v33;
        *(_QWORD *)(v34 + 24) = v22;
        v48 = sub_245319550;
        v49 = v34;
        v35 = MEMORY[0x24BDAC760];
        aBlock = MEMORY[0x24BDAC760];
        v45 = 1107296256;
        v46 = sub_245308370;
        v47 = &block_descriptor_295;
        v36 = _Block_copy(&aBlock);
        swift_unknownObjectRetain();
        swift_release();
        nw_listener_set_new_connection_handler(v22, v36);
        _Block_release(v36);
        v37 = swift_allocObject();
        *(_QWORD *)(v37 + 16) = v22;
        v48 = sub_24531957C;
        v49 = v37;
        aBlock = v35;
        v45 = 1107296256;
        v46 = sub_24530996C;
        v47 = &block_descriptor_301;
        v38 = _Block_copy(&aBlock);
        swift_unknownObjectRetain();
        swift_release();
        MEMORY[0x249532B4C](v22, v38);
        _Block_release(v38);
        v1[5] = v22;
        swift_unknownObjectRetain();
        swift_unknownObjectRelease();
        nw_listener_set_queue(v22, v42);
        nw_listener_start(v22);
        v39 = (void *)v1[6];
        if (v39)
        {
          v1[6] = 0;
          sub_245317B88(v39);
          swift_unknownObjectRelease();
        }
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
      return swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_2452FD520(NSObject *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  _QWORD *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  NSObject *v44;
  unint64_t v45;
  unint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  _BOOL4 v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  NSObject *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t isEscapingClosureAtFileLocation;
  NSObject *v82;
  os_log_type_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  NSObject **v90;
  NSObject **v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  nw_connection_t *v95;
  NSObject **v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t id;
  NSObject *v100;
  _QWORD *v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  nw_connection_t *v108;
  char *v109;
  _QWORD *v110;
  NSObject **v111;
  uint64_t v112;
  NSObject *v113;
  NSObject *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118[2];
  uint64_t v119;
  uint64_t aBlock;
  unint64_t v121;
  uint64_t (*v122)(uint64_t);
  void *v123;
  uint64_t (*v124)();
  uint64_t v125;

  v4 = v3;
  v117 = a2;
  v7 = sub_245387740();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v107 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452C40);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (NSObject **)((char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v109 = (char *)&v104 - v14;
  v15 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
  v112 = *(_QWORD *)(v15 - 8);
  v113 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v108 = (nw_connection_t *)((char *)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_2453879D4();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (uint64_t *)((char *)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = *(void **)(v4 + 24);
  *v20 = v21;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x24BEE5610], v17);
  v22 = v21;
  LOBYTE(v21) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v20, v17);
  if ((v21 & 1) == 0)
  {
    __break(1u);
LABEL_49:
    swift_once();
    goto LABEL_5;
  }
  LODWORD(v18) = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType);
  if ((_DWORD)v18 == 1 && !a3)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v105 = v8;
  v106 = v7;
  v111 = v13;
  if (qword_25744FD98 != -1)
    goto LABEL_49;
LABEL_5:
  v23 = sub_245387818();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_257462FC8);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_unknownObjectRetain_n();
  v25 = sub_2453877F4();
  v26 = v4;
  v27 = sub_245387D34();
  v28 = os_log_type_enabled(v25, v27);
  v115 = v24;
  if (!v28)
  {

    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease_n();
    swift_release_n();
    v36 = v4;
    if ((_DWORD)v18)
      goto LABEL_15;
LABEL_17:
    LOBYTE(aBlock) = v18;
    v37 = sub_245317D6C((char *)&aBlock);
    if (!v37)
    {
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    v38 = v37;
    v39 = (_QWORD *)swift_slowAlloc();
    *v39 = 0;
    v39[1] = 0;
    nw_endpoint_set_agent_identifier();
    v114 = v38;
    v110 = v39;
    if (a3)
    {
      swift_bridgeObjectRetain_n();
      v40 = sub_2453877F4();
      v41 = sub_245387D34();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        v43 = swift_slowAlloc();
        aBlock = v43;
        *(_DWORD *)v42 = 136315138;
        v38 = v114;
        swift_bridgeObjectRetain();
        v118[0] = sub_2453816D8(v117, a3, &aBlock);
        sub_245387E0C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_245256000, v40, v41, "Using overrideDeviceID %s", v42, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v43, -1, -1);
        MEMORY[0x24953317C](v42, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v44 = nw_connection_create(a1, v38);
      v46 = a3;
    }
    else
    {
      v44 = nw_connection_create(a1, v38);
      swift_getObjectType();
      v117 = sub_245309390();
      v46 = v45;
    }
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v47 = sub_2453877F4();
    v48 = sub_245387D34();
    v49 = os_log_type_enabled(v47, v48);
    v116 = (uint64_t)v44;
    if (v49)
    {
      v50 = swift_slowAlloc();
      v104 = swift_slowAlloc();
      v118[0] = v104;
      *(_DWORD *)v50 = 136446722;
      aBlock = (uint64_t)v44;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
      v51 = sub_245387B48();
      aBlock = sub_2453816D8(v51, v52, v118);
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2082;
      aBlock = (uint64_t)a1;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257452C70);
      v53 = sub_245387B48();
      aBlock = sub_2453816D8(v53, v54, v118);
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 22) = 2082;
      aBlock = v117;
      v121 = v46;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257451B90);
      v55 = sub_245387B48();
      aBlock = sub_2453816D8(v55, v56, v118);
      sub_245387E0C();
      swift_bridgeObjectRelease_n();
      v44 = v116;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v47, v48, "New outgoing connection created %{public}s from %{public}s; DeviceID: %{public}s",
        (uint8_t *)v50,
        0x20u);
      v57 = v104;
      swift_arrayDestroy();
      MEMORY[0x24953317C](v57, -1, -1);
      MEMORY[0x24953317C](v50, -1, -1);

      if (v46)
        goto LABEL_26;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_unknownObjectRelease_n();
      swift_unknownObjectRelease_n();
      if (v46)
      {
LABEL_26:
        swift_unknownObjectRetain_n();
        swift_bridgeObjectRetain_n();
        v58 = sub_2453877F4();
        v59 = sub_245387D34();
        if (os_log_type_enabled(v58, v59))
        {
          v60 = swift_slowAlloc();
          v61 = swift_slowAlloc();
          aBlock = v61;
          *(_DWORD *)v60 = 136446466;
          swift_bridgeObjectRetain();
          v118[0] = sub_2453816D8(v117, v46, &aBlock);
          sub_245387E0C();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v60 + 12) = 2082;
          v118[0] = (uint64_t)v44;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
          v62 = sub_245387B48();
          v118[0] = sub_2453816D8(v62, v63, &aBlock);
          sub_245387E0C();
          swift_unknownObjectRelease_n();
          v44 = v116;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_245256000, v58, v59, "DeviceID %{public}s will be used for connection: %{public}s", (uint8_t *)v60, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24953317C](v61, -1, -1);
          MEMORY[0x24953317C](v60, -1, -1);

        }
        else
        {

          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        v74 = v113;
        v75 = (uint64_t)v109;
        swift_beginAccess();
        v76 = *(_QWORD *)(v36 + 56);
        if (!*(_QWORD *)(v76 + 16))
        {
          isEscapingClosureAtFileLocation = *(_QWORD *)(v112 + 56);
          ((void (*)(uint64_t, uint64_t, uint64_t, NSObject *))isEscapingClosureAtFileLocation)(v75, 1, 1, v74);
LABEL_38:
          sub_245263F80(v75, &qword_257452C40);
          swift_endAccess();
LABEL_46:
          v96 = v111;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          sub_2453876C8();
          *v96 = v44;
          ((void (*)(NSObject **, _QWORD, uint64_t, NSObject *))isEscapingClosureAtFileLocation)(v96, 0, 1, v74);
          swift_beginAccess();
          v97 = v117;
          sub_24531C5EC((uint64_t)v96, v117, v46);
          swift_endAccess();
          v98 = *(_QWORD *)(v36 + 112);
          id = nw_connection_get_id();
          v100 = *(NSObject **)(v98 + 16);
          v101 = (_QWORD *)swift_allocObject();
          v101[2] = v97;
          v101[3] = v46;
          v101[4] = id;
          v101[5] = v98;
          v102 = swift_allocObject();
          *(_QWORD *)(v102 + 16) = sub_2453199CC;
          *(_QWORD *)(v102 + 24) = v101;
          v124 = sub_2452643B4;
          v125 = v102;
          aBlock = MEMORY[0x24BDAC760];
          v121 = 1107296256;
          v122 = sub_24525B888;
          v123 = &block_descriptor_226;
          v103 = _Block_copy(&aBlock);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          v44 = v116;
          swift_release();
          dispatch_sync(v100, v103);
          _Block_release(v103);
          LOBYTE(v100) = swift_isEscapingClosureAtFileLocation();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          if ((v100 & 1) == 0)
          {
LABEL_47:
            sub_245318018(v44);
            MEMORY[0x24953317C](v110, -1, -1);
            swift_unknownObjectRelease();
            return;
          }
          __break(1u);
          goto LABEL_51;
        }
        swift_bridgeObjectRetain();
        v77 = sub_2452C1D98(v117, v46);
        if ((v78 & 1) != 0)
        {
          v79 = *(_QWORD *)(v76 + 56);
          v80 = v112;
          sub_2452B792C(v79 + *(_QWORD *)(v112 + 72) * v77, v75, type metadata accessor for NetworkMessenger.ExpiringConnection);
          isEscapingClosureAtFileLocation = *(_QWORD *)(v80 + 56);
          ((void (*)(uint64_t, _QWORD, uint64_t, NSObject *))isEscapingClosureAtFileLocation)(v75, 0, 1, v74);
        }
        else
        {
          v80 = v112;
          isEscapingClosureAtFileLocation = *(_QWORD *)(v112 + 56);
          ((void (*)(uint64_t, uint64_t, uint64_t, NSObject *))isEscapingClosureAtFileLocation)(v75, 1, 1, v74);
        }
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, NSObject *))(v80 + 48))(v75, 1, v74) == 1)
          goto LABEL_38;
        sub_2452B7AB8(v75, (uint64_t)v108, type metadata accessor for NetworkMessenger.ExpiringConnection);
        swift_endAccess();
        swift_unknownObjectRetain_n();
        swift_bridgeObjectRetain_n();
        v82 = sub_2453877F4();
        v83 = sub_245387D34();
        if (os_log_type_enabled(v82, v83))
        {
          v84 = swift_slowAlloc();
          v115 = swift_slowAlloc();
          aBlock = v115;
          *(_DWORD *)v84 = 136446466;
          v118[0] = (uint64_t)v44;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
          v85 = sub_245387B48();
          v118[0] = sub_2453816D8(v85, v86, &aBlock);
          sub_245387E0C();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v84 + 12) = 2082;
          swift_bridgeObjectRetain();
          v118[0] = sub_2453816D8(v117, v46, &aBlock);
          v44 = v116;
          sub_245387E0C();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_245256000, v82, v83, "Canceling existing connection %{public}s for DeviceID %{public}s", (uint8_t *)v84, 0x16u);
          v87 = v115;
          swift_arrayDestroy();
          MEMORY[0x24953317C](v87, -1, -1);
          v88 = v84;
          v74 = v113;
          MEMORY[0x24953317C](v88, -1, -1);

LABEL_45:
          v95 = v108;
          nw_connection_cancel(*v108);
          sub_2452B7B5C((uint64_t)v95, type metadata accessor for NetworkMessenger.ExpiringConnection);
          goto LABEL_46;
        }
LABEL_44:

        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease_n();
        goto LABEL_45;
      }
    }
    v64 = v107;
    sub_245387734();
    v65 = sub_245387704();
    v46 = v66;
    (*(void (**)(char *, uint64_t))(v105 + 8))(v64, v106);
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v67 = sub_2453877F4();
    v68 = sub_245387D34();
    if (os_log_type_enabled(v67, v68))
    {
      v69 = swift_slowAlloc();
      v70 = swift_slowAlloc();
      aBlock = v70;
      *(_DWORD *)v69 = 136446466;
      v118[0] = v116;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
      v71 = sub_245387B48();
      v118[0] = sub_2453816D8(v71, v72, &aBlock);
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v69 + 12) = 2082;
      swift_bridgeObjectRetain();
      v118[0] = sub_2453816D8(v65, v46, &aBlock);
      sub_245387E0C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_245256000, v67, v68, "Unable to get DeviceID from connection: %{public}s; Using uuidString %{public}s instead",
        (uint8_t *)v69,
        0x16u);
      swift_arrayDestroy();
      v73 = v70;
      v44 = v116;
      MEMORY[0x24953317C](v73, -1, -1);
      MEMORY[0x24953317C](v69, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_unknownObjectRelease_n();
    }
    v89 = v113;
    v90 = v111;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_2453876C8();
    *v90 = v44;
    (*(void (**)(NSObject **, _QWORD, uint64_t, NSObject *))(v112 + 56))(v90, 0, 1, v89);
    swift_beginAccess();
    sub_24531C5EC((uint64_t)v90, v65, v46);
    swift_endAccess();
    v91 = *(NSObject ***)(v36 + 112);
    v92 = nw_connection_get_id();
    v74 = v91[2];
    v82 = swift_allocObject();
    v82[2].isa = (Class)v65;
    v82[3].isa = (Class)v46;
    v82[4].isa = (Class)v92;
    v82[5].isa = (Class)v91;
    v93 = swift_allocObject();
    *(_QWORD *)(v93 + 16) = sub_245318E00;
    *(_QWORD *)(v93 + 24) = v82;
    v124 = sub_2452643B4;
    v125 = v93;
    aBlock = MEMORY[0x24BDAC760];
    v121 = 1107296256;
    v122 = sub_24525B888;
    v123 = &block_descriptor_215;
    v94 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v74, v94);
    _Block_release(v94);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      goto LABEL_47;
    __break(1u);
    goto LABEL_44;
  }
  v29 = swift_slowAlloc();
  v30 = swift_slowAlloc();
  v119 = v30;
  *(_DWORD *)v29 = 136315650;
  if ((_DWORD)v18)
    v31 = 0x73756E696D726574;
  else
    v31 = 0x647261646E617473;
  aBlock = sub_2453816D8(v31, 0xE800000000000000, &v119);
  sub_245387E0C();
  v116 = v26;
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v29 + 12) = 2082;
  aBlock = (uint64_t)a1;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C70);
  v32 = sub_245387B48();
  aBlock = sub_2453816D8(v32, v33, &v119);
  sub_245387E0C();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v29 + 22) = 2080;
  v34 = 0xE000000000000000;
  if (a3)
  {
    aBlock = 0;
    v121 = 0xE000000000000000;
    sub_245387EA8();
    swift_bridgeObjectRelease();
    aBlock = 0xD000000000000012;
    v121 = 0x8000000245394620;
    v118[0] = v117;
    v118[1] = a3;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257451B90);
    sub_245387B48();
    sub_245387B90();
    swift_bridgeObjectRelease();
    v35 = aBlock;
    v34 = v121;
  }
  else
  {
    v35 = 0;
  }
  aBlock = sub_2453816D8(v35, v34, &v119);
  sub_245387E0C();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_245256000, v25, v27, "Creating %s connection from %{public}s%s", (uint8_t *)v29, 0x20u);
  swift_arrayDestroy();
  MEMORY[0x24953317C](v30, -1, -1);
  MEMORY[0x24953317C](v29, -1, -1);

  v36 = v116;
  if (!(_DWORD)v18)
    goto LABEL_17;
LABEL_15:
  if (a3)
  {
    sub_2452FB098(v117, a3);
    goto LABEL_17;
  }
LABEL_53:
  __break(1u);
}

uint64_t sub_2452FE79C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  NSObject *application_service;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  uint64_t v47;

  v3 = v2;
  v47 = *MEMORY[0x24BDAC8D0];
  v6 = sub_245387740();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2453879D4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(v3 + 24);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEE5610], v10);
  v15 = v14;
  LOBYTE(v14) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0)
  {
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType) == 1)
    {
      if (qword_25744FD98 == -1)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_10:
  swift_once();
LABEL_4:
  v16 = sub_245387818();
  __swift_project_value_buffer(v16, (uint64_t)qword_257462FC8);
  swift_bridgeObjectRetain_n();
  v17 = sub_2453877F4();
  v18 = sub_245387D34();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v35 = v6;
    v36 = v7;
    v21 = v20;
    v38 = v20;
    *(_DWORD *)v19 = 136446210;
    swift_bridgeObjectRetain();
    v37 = sub_2453816D8(a1, a2, &v38);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_245256000, v17, v18, "Creating terminus connection to %{public}s", v19, 0xCu);
    swift_arrayDestroy();
    v22 = v21;
    v6 = v35;
    v7 = v36;
    MEMORY[0x24953317C](v22, -1, -1);
    MEMORY[0x24953317C](v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_245387734();
  v38 = sub_245387728();
  v39 = v23;
  v40 = v24;
  v41 = v25;
  v42 = v26;
  v43 = v27;
  v44 = v28;
  v45 = v29;
  v46 = v30;
  sub_245387B54();
  application_service = nw_endpoint_create_application_service();
  swift_release();
  sub_2452FD520(application_service, a1, a2);
  v33 = v32;
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v33;
}

uint64_t sub_2452FEB34(uint64_t a1)
{
  uint64_t v1;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t result;
  _QWORD v8[6];

  v3 = *(NSObject **)(v1 + 24);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = a1;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_245318D88;
  *(_QWORD *)(v5 + 24) = v4;
  v8[4] = sub_2452643B4;
  v8[5] = v5;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_24525B888;
  v8[3] = &block_descriptor_205;
  v6 = _Block_copy(v8);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v3 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_2452FEC70(uint64_t a1, NSObject *a2)
{
  return sub_2452FEC94(a2);
}

uint64_t sub_2452FEC94(NSObject *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  uint64_t id;
  NSObject *v22;
  uint64_t v23;
  void *v24;
  char isEscapingClosureAtFileLocation;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unsigned __int8 v38;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t aBlock;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  void *v47;
  uint64_t (*v48)();
  char *v49;

  v3 = v1;
  v5 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2453879D4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(v3 + 24);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v13 = v12;
  LOBYTE(v12) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    swift_once();
    goto LABEL_11;
  }
  v14 = swift_beginAccess();
  MEMORY[0x24BDAC7A8](v14);
  *(&v40 - 2) = (uint64_t)a1;
  v15 = swift_bridgeObjectRetain();
  v9 = sub_245318324(v15, (uint64_t (*)(_QWORD, _QWORD, char *))sub_245318784, (uint64_t)(&v40 - 4));
  v17 = v16;
  v19 = v18;
  v20 = ~(_BYTE)v18;
  swift_bridgeObjectRelease();
  if (v20)
  {
    swift_beginAccess();
    sub_2453187EC(v9, v17, v19 & 1);
    sub_245316CDC((uint64_t)v7, v9, v17);
    swift_endAccess();
    sub_2453187D4(v9, v17, v19);
    sub_2452B7B5C((uint64_t)v7, type metadata accessor for NetworkMessenger.ExpiringConnection);
    swift_bridgeObjectRelease();
  }
  v41 = v19;
  v42 = v17;
  sub_245309970();
  v2 = *(_QWORD *)(v3 + 112);
  id = nw_connection_get_id();
  v22 = *(NSObject **)(v2 + 16);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v2;
  *(_QWORD *)(v23 + 24) = id;
  v7 = (char *)swift_allocObject();
  *((_QWORD *)v7 + 2) = sub_2453187BC;
  *((_QWORD *)v7 + 3) = v23;
  v48 = sub_2452643B4;
  v49 = v7;
  aBlock = MEMORY[0x24BDAC760];
  v45 = 1107296256;
  v46 = sub_24525B888;
  v47 = &block_descriptor_164;
  v24 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v22, v24);
  _Block_release(v24);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    goto LABEL_16;
  swift_getObjectType();
  v26 = sub_245309390();
  if (v27)
  {
    v2 = v26;
    v7 = v27;
  }
  else if (*(_BYTE *)(v3 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType) == 1)
  {
    v28 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_terminusRemoteDeviceIDLock);
    os_unfair_lock_lock((os_unfair_lock_t)(v28 + 32));
    v2 = *(_QWORD *)(v28 + 16);
    v7 = *(char **)(v28 + 24);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock((os_unfair_lock_t)(v28 + 32));
  }
  else
  {
    v2 = 0;
    v7 = 0;
  }
  if (qword_25744FD98 != -1)
    goto LABEL_17;
LABEL_11:
  v29 = sub_245387818();
  __swift_project_value_buffer(v29, (uint64_t)qword_257462FC8);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  v30 = sub_2453877F4();
  v31 = sub_245387D34();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v43 = v33;
    aBlock = (uint64_t)a1;
    *(_DWORD *)v32 = 136446466;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
    v40 = v9;
    v34 = sub_245387B48();
    aBlock = sub_2453816D8(v34, v35, &v43);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2082;
    aBlock = v2;
    v45 = (uint64_t)v7;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257451B90);
    v36 = sub_245387B48();
    aBlock = sub_2453816D8(v36, v37, &v43);
    v9 = v40;
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v30, v31, "Canceling connection %{public}s for deviceID: %{public}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v33, -1, -1);
    MEMORY[0x24953317C](v32, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease_n();
  }
  v38 = v41;
  nw_connection_cancel(a1);
  return sub_2453187D4(v9, v42, v38);
}

uint64_t sub_2452FF214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452C40);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  v11 = *(_QWORD *)(a1 + 56);
  if (*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    v12 = sub_2452C1D98(a2, a3);
    if ((v13 & 1) != 0)
    {
      v14 = v12;
      v15 = *(_QWORD *)(v11 + 56);
      v16 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
      v17 = *(_QWORD *)(v16 - 8);
      sub_2452B792C(v15 + *(_QWORD *)(v17 + 72) * v14, (uint64_t)v10, type metadata accessor for NetworkMessenger.ExpiringConnection);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v10, 0, 1, v16);
    }
    else
    {
      v16 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v10, 1, 1, v16);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v10, 1, 1, v16);
  }
  type metadata accessor for NetworkMessenger.ExpiringConnection(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v10, 1, v16))
  {
    sub_245263F80((uint64_t)v10, &qword_257452C40);
    result = swift_endAccess();
    v19 = 0;
  }
  else
  {
    v19 = *v10;
    swift_unknownObjectRetain();
    sub_245263F80((uint64_t)v10, &qword_257452C40);
    result = swift_endAccess();
  }
  *a4 = v19;
  return result;
}

uint64_t sub_2452FF3DC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v48 = a5;
  v49 = a6;
  v50 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v46 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Message();
  v43 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v43 + 64);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v44 = (uint64_t)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v39 - v15;
  v45 = *a4;
  if (qword_25744FD98 != -1)
    swift_once();
  v17 = sub_245387818();
  __swift_project_value_buffer(v17, (uint64_t)qword_257462FC8);
  sub_2452B792C(a1, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  v18 = sub_2453877F4();
  v19 = sub_245387D34();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v42 = v10;
    v21 = (uint8_t *)v20;
    v22 = swift_slowAlloc();
    v41 = a2;
    v23 = v22;
    v52 = v22;
    v40 = v11;
    *(_DWORD *)v21 = 136446210;
    v24 = Message.description.getter();
    v51 = sub_2453816D8(v24, v25, &v52);
    v11 = v40;
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_2452B7B5C((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Message);
    _os_log_impl(&dword_245256000, v18, v19, "Queuing message: %{public}s", v21, 0xCu);
    swift_arrayDestroy();
    v26 = v23;
    a2 = v41;
    MEMORY[0x24953317C](v26, -1, -1);
    v27 = v21;
    v10 = v42;
    MEMORY[0x24953317C](v27, -1, -1);
  }
  else
  {
    sub_2452B7B5C((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  }

  v28 = v47;
  v42 = *(_QWORD *)(v47 + 24);
  v29 = v44;
  sub_2452B792C(a1, v44, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  v30 = v46;
  sub_2452BC89C(a2, v46, &qword_25744F610);
  v31 = (*(unsigned __int8 *)(v43 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  v32 = (v13 + *(unsigned __int8 *)(v10 + 80) + v31) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v33 = (v11 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  v34 = (_QWORD *)swift_allocObject();
  v36 = v48;
  v35 = v49;
  v34[2] = v28;
  v34[3] = v36;
  v34[4] = v35;
  sub_2452B7AB8(v29, (uint64_t)v34 + v31, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  sub_2452BC850(v30, (uint64_t)v34 + v32, &qword_25744F610);
  v37 = (char *)v34 + v33;
  *(_QWORD *)v37 = v50;
  v37[8] = v45;
  swift_retain();
  sub_245317690(v36);
  swift_unknownObjectRetain();
  sub_2452E06E8(0xD000000000000018, 0x8000000245394480, v42, (uint64_t)sub_2453189F8, (uint64_t)v34, 0.0);
  return swift_release();
}

uint64_t sub_2452FF778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(_QWORD);
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  void (*v38)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[3];
  uint64_t v51;
  uint64_t v52;

  v49 = a8;
  v40 = a4;
  v41 = a7;
  v44 = a2;
  v45 = a5;
  v42 = a3;
  v43 = a1;
  v47 = a9;
  v48 = sub_2453879D4();
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v12 = (uint64_t *)((char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Message();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2452B792C(a6, (uint64_t)v20, v21);
  sub_2452BC89C(v41, (uint64_t)v16, &qword_25744F610);
  v22 = (*(unsigned __int8 *)(v18 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v23 = (v19 + *(unsigned __int8 *)(v14 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v24 = (v15 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = a4;
  v26 = v44;
  v28 = v42;
  v27 = v43;
  v25[3] = v45;
  v25[4] = v27;
  v25[5] = v26;
  v25[6] = v28;
  sub_2452B7AB8((uint64_t)v20, (uint64_t)v25 + v22, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  sub_2452BC850((uint64_t)v16, (uint64_t)v25 + v23, &qword_25744F610);
  v29 = (char *)v25 + v24;
  v30 = v48;
  *(_QWORD *)v29 = v49;
  v29[8] = v47;
  v31 = *(void **)(v28 + 24);
  *v12 = v31;
  v32 = v46;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v46 + 104))(v12, *MEMORY[0x24BEE5610], v30);
  sub_245317690(v40);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  v33 = v31;
  LOBYTE(v23) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v32 + 8))(v12, v30);
  if ((v23 & 1) != 0)
  {
    sub_24525E4F0(v28 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency, (uint64_t)v50);
    v35 = v51;
    v36 = v52;
    __swift_project_boxed_opaque_existential_1(v50, v51);
    v37 = (_QWORD *)swift_allocObject();
    v37[2] = v28;
    v37[3] = sub_245318C3C;
    v37[4] = v25;
    v38 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v36 + 40);
    swift_retain();
    swift_retain();
    v38(sub_245319B54, v37, v35, v36);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2452FFA44(void *a1, void (*a2)(void *, uint64_t), uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD *v21;
  id v22;
  _QWORD *v25;
  id v26;
  uint64_t v28;
  unsigned __int8 v29;

  if (!a1)
  {
    v29 = a10;
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = a2;
    v25[3] = a3;
    v25[4] = a4;
    v25[5] = a5;
    sub_245317690((uint64_t)a2);
    swift_retain();
    sub_2452FFCD0(a7, a8, a9, &v29, (uint64_t)sub_245318D24, (uint64_t)v25);
    swift_release();
    return;
  }
  v14 = a1;
  if (qword_25744FD90 != -1)
    swift_once();
  v15 = sub_245387818();
  __swift_project_value_buffer(v15, (uint64_t)qword_257462FB0);
  v16 = a1;
  v17 = a1;
  v18 = sub_2453877F4();
  v19 = sub_245387D34();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v20 = 138543362;
    v22 = a1;
    v28 = _swift_stdlib_bridgeErrorToNSError();
    sub_245387E0C();
    *v21 = v28;

    _os_log_impl(&dword_245256000, v18, v19, "Cannot send message because prerequisites are not met: %{public}@", v20, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v21, -1, -1);
    MEMORY[0x24953317C](v20, -1, -1);

    if (!a2)
      goto LABEL_10;
    goto LABEL_9;
  }

  if (a2)
  {
LABEL_9:
    v26 = a1;
    a2(a1, 1);

  }
LABEL_10:
  a4();

}

uint64_t sub_2452FFCD0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  int v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  _BOOL4 v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  void *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  char *v83;
  char *v84;
  char *v85;
  id v86;
  void *v87;
  unsigned __int8 v88;
  uint64_t *v89;
  uint64_t inited;
  void *v91;
  char *v92;
  char *v93;
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  uint64_t v102;
  void *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void (*v108)(char *, uint64_t, uint64_t);
  uint64_t v109;
  void (*v110)(char *, char *, uint64_t);
  char *v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t aBlock;
  uint64_t v144;
  uint64_t (*v145)(uint64_t);
  void *v146;
  uint64_t (*v147)();
  uint64_t v148;

  v119 = a3;
  v127 = a2;
  v139 = a1;
  v113 = type metadata accessor for NetworkSyncHeader(0);
  MEMORY[0x24BDAC7A8](v113);
  v11 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_245387920();
  v131 = *(_QWORD *)(v134 - 8);
  MEMORY[0x24BDAC7A8](v134);
  v130 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_245387950();
  v133 = *(_QWORD *)(v135 - 8);
  MEMORY[0x24BDAC7A8](v135);
  v132 = (char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  v114 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v117 = (char *)&v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v116 = (char *)&v109 - v18;
  v115 = v19;
  MEMORY[0x24BDAC7A8](v17);
  v124 = (uint64_t)&v109 - v20;
  v126 = sub_2453875E4();
  v125 = *(_QWORD *)(v126 - 8);
  v21 = MEMORY[0x24BDAC7A8](v126);
  v111 = (char *)&v109 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v122 = (char *)&v109 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v138 = (char *)&v109 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v109 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_245387740();
  v129 = *(_QWORD *)(v140 - 8);
  v29 = MEMORY[0x24BDAC7A8](v140);
  v121 = (char *)&v109 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v120 = (char *)&v109 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v128 = (char *)&v109 - v33;
  v123 = type metadata accessor for Message();
  MEMORY[0x24BDAC7A8](v123);
  v35 = (char *)&v109 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_2453879D4();
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v39 = (uint64_t *)((char *)&v109 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = *a4;
  v141 = v6;
  v41 = *(void **)(v6 + 24);
  *v39 = v41;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v37 + 104))(v39, *MEMORY[0x24BEE5610], v36);
  v42 = v41;
  LOBYTE(v41) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v37 + 8))(v39, v36);
  if ((v41 & 1) != 0)
  {
    v118 = v11;
    if (qword_25744FD98 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v43 = sub_245387818();
  v44 = __swift_project_value_buffer(v43, (uint64_t)qword_257462FC8);
  sub_2452B792C(v139, (uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  v136 = v44;
  v45 = sub_2453877F4();
  v46 = sub_245387D10();
  v47 = os_log_type_enabled(v45, v46);
  v137 = a5;
  v112 = v40;
  if (v47)
  {
    v48 = (uint8_t *)swift_slowAlloc();
    v49 = swift_slowAlloc();
    aBlock = v49;
    *(_DWORD *)v48 = 136446210;
    sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v50 = sub_2453880F4();
    v142 = sub_2453816D8(v50, v51, &aBlock);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_2452B7B5C((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for Message);
    _os_log_impl(&dword_245256000, v45, v46, "sending message with ID %{public}s", v48, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v49, -1, -1);
    MEMORY[0x24953317C](v48, -1, -1);
  }
  else
  {
    sub_2452B7B5C((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  }

  v52 = *(_QWORD *)(v141 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency + 24);
  v53 = *(_QWORD *)(v141 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency + 32);
  v54 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v141 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency), v52);
  v55 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v57 = (char *)&v109 - v56;
  (*(void (**)(char *))(v55 + 16))((char *)&v109 - v56);
  v58 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 24))(v52, v53);
  v60 = v59;
  (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v52);
  v61 = v138;
  if (v60)
  {
    sub_2453876F8();
    v62 = v129;
    v63 = v140;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v28, 1, v140) == 1)
    {
      sub_245263F80((uint64_t)v28, &qword_25440C700);
      swift_bridgeObjectRetain();
      v64 = sub_2453877F4();
      v65 = sub_245387D1C();
      if (os_log_type_enabled(v64, v65))
      {
        v66 = (uint8_t *)swift_slowAlloc();
        v67 = swift_slowAlloc();
        aBlock = v67;
        *(_DWORD *)v66 = 136446210;
        swift_bridgeObjectRetain();
        v142 = sub_2453816D8(v58, v60, &aBlock);
        sub_245387E0C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_245256000, v64, v65, "Cannot create UUID from sender device ID: %{public}s", v66, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v67, -1, -1);
        MEMORY[0x24953317C](v66, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v80 = v134;
      v79 = v135;
      v81 = swift_allocObject();
      *(_QWORD *)(v81 + 16) = v137;
      *(_QWORD *)(v81 + 24) = a6;
      v147 = sub_2453199C8;
      v148 = v81;
      aBlock = MEMORY[0x24BDAC760];
      v144 = 1107296256;
      v145 = sub_24525DD34;
      v146 = &block_descriptor_57_0;
      v82 = _Block_copy(&aBlock);
      swift_retain();
      v83 = v132;
      sub_245387938();
      v142 = MEMORY[0x24BEE4AF8];
      sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
      sub_2452D53B0();
      v84 = v130;
      sub_245387E3C();
      MEMORY[0x2495320E4](0, v83, v84, v82);
      _Block_release(v82);
      (*(void (**)(char *, uint64_t))(v131 + 8))(v84, v80);
      (*(void (**)(char *, uint64_t))(v133 + 8))(v83, v79);
      return swift_release();
    }
    swift_bridgeObjectRelease();
    v110 = *(void (**)(char *, char *, uint64_t))(v62 + 32);
    v110(v128, v28, v63);
    v76 = v124;
    sub_2452BC89C(v127, v124, &qword_25744F610);
    v77 = v125;
    v78 = v126;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48))(v76, 1, v126) == 1)
    {
      sub_245263F80(v76, &qword_25744F610);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))(v61, v76, v78);
    v85 = v61;
    v86 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    sub_2453875C0();
    v87 = (void *)sub_245387AF4();
    swift_bridgeObjectRelease();
    v88 = objc_msgSend(v86, sel_fileExistsAtPath_, v87);

    if ((v88 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v77 + 8))(v85, v78);
LABEL_19:
      v146 = (void *)v123;
      v147 = (uint64_t (*)())sub_24525C6C4((unint64_t *)&unk_257452980, (uint64_t (*)(uint64_t))type metadata accessor for Message, (uint64_t)&protocol conformance descriptor for Message);
      v89 = __swift_allocate_boxed_opaque_existential_1(&aBlock);
      sub_2452B792C(v139, (uint64_t)v89, (uint64_t (*)(_QWORD))type metadata accessor for Message);
      type metadata accessor for PropertyListTypeEncoder();
      inited = swift_initStackObject();
      *(_QWORD *)(inited + 16) = 0;
      *(_BYTE *)(inited + 24) = 1;
      v91 = (void *)sub_24537B31C(&aBlock);
      sub_24537E224(v91);
      v138 = v92;
      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
      v108 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
      v108(v120, v139, v63);
      v108(v121, (uint64_t)v128, v63);
      __asm { BR              X10 }
    }
    v93 = v122;
    (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v122, v85, v78);
    v94 = sub_2453877F4();
    v95 = sub_245387D28();
    if (os_log_type_enabled(v94, v95))
    {
      v96 = (uint8_t *)swift_slowAlloc();
      v97 = swift_slowAlloc();
      aBlock = v97;
      *(_DWORD *)v96 = 136446210;
      v98 = sub_2453875C0();
      v142 = sub_2453816D8(v98, v99, &aBlock);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      v100 = *(void (**)(char *, uint64_t))(v77 + 8);
      v100(v122, v78);
      _os_log_impl(&dword_245256000, v94, v95, "File at given url doesn't exist: %{public}s", v96, 0xCu);
      swift_arrayDestroy();
      v101 = v97;
      v62 = v129;
      MEMORY[0x24953317C](v101, -1, -1);
      MEMORY[0x24953317C](v96, -1, -1);
    }
    else
    {
      v100 = *(void (**)(char *, uint64_t))(v77 + 8);
      v100(v93, v78);
    }

    v102 = swift_allocObject();
    *(_QWORD *)(v102 + 16) = v137;
    *(_QWORD *)(v102 + 24) = a6;
    v147 = (uint64_t (*)())sub_245317314;
    v148 = v102;
    aBlock = MEMORY[0x24BDAC760];
    v144 = 1107296256;
    v145 = sub_24525DD34;
    v146 = &block_descriptor_72;
    v103 = _Block_copy(&aBlock);
    swift_retain();
    v104 = v132;
    sub_245387938();
    v142 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    sub_2452D53B0();
    v105 = v130;
    v106 = v134;
    sub_245387E3C();
    MEMORY[0x2495320E4](0, v104, v105, v103);
    _Block_release(v103);
    (*(void (**)(char *, uint64_t))(v131 + 8))(v105, v106);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v104, v135);
    v100(v138, v78);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v128, v140);
  }
  else
  {
    v68 = sub_2453877F4();
    v69 = sub_245387D1C();
    if (os_log_type_enabled(v68, v69))
    {
      v70 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v70 = 0;
      _os_log_impl(&dword_245256000, v68, v69, "Cannot send messages before we have a local device ID", v70, 2u);
      MEMORY[0x24953317C](v70, -1, -1);
    }

    v71 = swift_allocObject();
    *(_QWORD *)(v71 + 16) = v137;
    *(_QWORD *)(v71 + 24) = a6;
    v147 = sub_2453199C8;
    v148 = v71;
    aBlock = MEMORY[0x24BDAC760];
    v144 = 1107296256;
    v145 = sub_24525DD34;
    v146 = &block_descriptor_51;
    v72 = _Block_copy(&aBlock);
    swift_retain();
    v73 = v132;
    sub_245387938();
    v142 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    sub_2452D53B0();
    v74 = v130;
    v75 = v134;
    sub_245387E3C();
    MEMORY[0x2495320E4](0, v73, v74, v72);
    _Block_release(v72);
    (*(void (**)(char *, uint64_t))(v131 + 8))(v74, v75);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v73, v135);
  }
  return swift_release();
}

uint64_t sub_245301478(uint64_t a1, NSObject *a2, uint64_t a3, unsigned __int8 *a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  void *v39;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v42;
  dispatch_queue_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t aBlock[7];

  v52 = a7;
  v50 = a6;
  v53 = a3;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  v45 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v45 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v48 = (uint64_t)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Message();
  v44 = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(v44 + 64);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v46 = (uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v42 - v16;
  v47 = *a4;
  v18 = *a5;
  v49 = a5[1];
  if (qword_25744FD98 != -1)
    swift_once();
  v19 = sub_245387818();
  __swift_project_value_buffer(v19, (uint64_t)qword_257462FC8);
  sub_2452B792C(a1, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  v20 = sub_2453877F4();
  v21 = sub_245387D34();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v43 = a2;
    v23 = (uint8_t *)v22;
    v24 = swift_slowAlloc();
    aBlock[0] = v24;
    v42 = a1;
    *(_DWORD *)v23 = 136446210;
    v25 = Message.description.getter();
    v54 = sub_2453816D8(v25, v26, aBlock);
    a1 = v42;
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_2452B7B5C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for Message);
    _os_log_impl(&dword_245256000, v20, v21, "Queuing message with expected response: %{public}s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v24, -1, -1);
    v27 = v23;
    a2 = v43;
    MEMORY[0x24953317C](v27, -1, -1);
  }
  else
  {
    sub_2452B7B5C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  }

  v28 = v51;
  v43 = *(dispatch_queue_t *)(v51 + 24);
  v29 = a1;
  v30 = v46;
  sub_2452B792C(v29, v46, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  v31 = v48;
  sub_2452BC89C((uint64_t)a2, v48, &qword_25744F610);
  v32 = (*(unsigned __int8 *)(v44 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  v33 = (v14 + *(unsigned __int8 *)(v45 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  v34 = (_QWORD *)swift_allocObject();
  v35 = v50;
  v34[2] = v28;
  v34[3] = v35;
  v34[4] = v52;
  sub_2452B7AB8(v30, (uint64_t)v34 + v32, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  sub_2452BC850(v31, (uint64_t)v34 + v33, &qword_25744F610);
  v36 = (char *)v34 + ((v33 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v36 = v53;
  v36[8] = v47;
  v37 = (_QWORD *)((char *)v34 + ((v33 + v12 + 23) & 0xFFFFFFFFFFFFFFF8));
  *v37 = v18;
  v37[1] = v49;
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = sub_2453162F8;
  *(_QWORD *)(v38 + 24) = v34;
  aBlock[4] = (uint64_t)sub_245263BB8;
  aBlock[5] = v38;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24525B888;
  aBlock[3] = (uint64_t)&block_descriptor_9;
  v39 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v43, v39);
  _Block_release(v39);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_2453018DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, double a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t (*v23)(_QWORD);
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  void (*v42)(uint64_t (*)(uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[3];
  uint64_t v63;
  uint64_t v64;

  v59 = a8;
  v60 = a2;
  v58 = a7;
  v57 = a6;
  v53 = a5;
  v55 = a3;
  v12 = sub_245387740();
  v51 = *(_QWORD *)(v12 - 8);
  v52 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v50 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_2453879D4();
  v54 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v15 = (uint64_t *)((char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x24BDAC7A8](v16);
  v19 = type metadata accessor for Message();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = a4;
  sub_2452B792C(a4, (uint64_t)v22, v23);
  sub_2452BC89C(v53, (uint64_t)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_25744F610);
  v24 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v25 = (v21 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = (*(unsigned __int8 *)(v17 + 80) + v25 + 8) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v27 = (v26 + v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v28 = swift_allocObject();
  v29 = v55;
  *(_QWORD *)(v28 + 16) = v60;
  *(_QWORD *)(v28 + 24) = v29;
  v30 = v28 + v24;
  v31 = v29;
  sub_2452B7AB8((uint64_t)v22, v30, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  *(_QWORD *)(v28 + v25) = a1;
  sub_2452BC850((uint64_t)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v28 + v26, &qword_25744F610);
  v32 = v28 + ((v26 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  v33 = v56;
  *(_QWORD *)v32 = v57;
  *(_BYTE *)(v32 + 8) = v58;
  v34 = v28 + v27;
  *(double *)v34 = a9;
  *(_QWORD *)(v34 + 8) = v59;
  v35 = *(void **)(a1 + 24);
  *v15 = v35;
  v36 = v54;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v54 + 104))(v15, *MEMORY[0x24BEE5610], v33);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  v37 = v35;
  LOBYTE(v35) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v36 + 8))(v15, v33);
  if ((v35 & 1) != 0)
  {
    sub_24525E4F0(a1 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency, (uint64_t)v62);
    v39 = v63;
    v40 = v64;
    __swift_project_boxed_opaque_existential_1(v62, v63);
    v41 = (_QWORD *)swift_allocObject();
    v41[2] = a1;
    v41[3] = sub_24531655C;
    v41[4] = v28;
    v42 = *(void (**)(uint64_t (*)(uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t))(v40 + 40);
    swift_retain();
    swift_retain();
    v42(sub_245316628, v41, v39, v40);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
    swift_release();
    v44 = (uint64_t)v50;
    v43 = v51;
    v45 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v49, v52);
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = v60;
    *(_QWORD *)(v46 + 24) = v31;
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v61 = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 64) = 0x8000000000000000;
    sub_2453290E4((uint64_t)sub_24525C56C, v46, v44, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(a1 + 64) = v61;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v44, v45);
    return swift_endAccess();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_245301CBC(void *a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, double a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  uint64_t v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v50 = a8;
  v51 = a7;
  v48 = a4;
  v49 = a6;
  v57 = a5;
  v54 = a3;
  v55 = a2;
  v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452BF8);
  MEMORY[0x24BDAC7A8](v52);
  v53 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  v14 = *(char **)(v13 - 8);
  v15 = *((_QWORD *)v14 + 8);
  MEMORY[0x24BDAC7A8](v13);
  v56 = (uint64_t)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Message();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_245387740();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  if (a1)
  {
    v26 = a1;
    if (qword_25744FD90 != -1)
      swift_once();
    v27 = sub_245387818();
    __swift_project_value_buffer(v27, (uint64_t)qword_257462FB0);
    v28 = a1;
    v29 = a1;
    v30 = sub_2453877F4();
    v31 = sub_245387D34();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v32 = 138543362;
      v34 = a1;
      v35 = _swift_stdlib_bridgeErrorToNSError();
      v58 = v35;
      sub_245387E0C();
      *v33 = v35;

      _os_log_impl(&dword_245256000, v30, v31, "Cannot send message because prerequisites are not met: %{public}@", v32, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v33, -1, -1);
      MEMORY[0x24953317C](v32, -1, -1);
    }
    else
    {

    }
    v45 = (uint64_t)v53;
    *(_QWORD *)v53 = a1;
    swift_storeEnumTagMultiPayload();
    v46 = a1;
    v55(v45);

    return sub_245263F80(v45, (uint64_t *)&unk_257452BF8);
  }
  else
  {
    v53 = v14;
    v54 = a10;
    v36 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
    v47 = (char *)&v47 - v25;
    v37 = v48;
    v36((char *)&v47 - v25, v48, v20);
    v55 = *(void (**)(uint64_t))(v57 + 24);
    sub_2452B792C(v37, (uint64_t)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for Message);
    sub_2452BC89C(v49, v56, &qword_25744F610);
    v36(v24, (uint64_t)v47, v20);
    v38 = (*(unsigned __int8 *)(v17 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v39 = (v18 + v53[80] + v38) & ~(unint64_t)v53[80];
    v53 = (char *)((v15 + v39 + 7) & 0xFFFFFFFFFFFFFFF8);
    v40 = (unint64_t)&v53[*(unsigned __int8 *)(v21 + 80) + 9] & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = v57;
    sub_2452B7AB8((uint64_t)v19, v41 + v38, (uint64_t (*)(_QWORD))type metadata accessor for Message);
    sub_2452BC850(v56, v41 + v39, &qword_25744F610);
    v42 = &v53[v41];
    *(_QWORD *)v42 = v51;
    v42[8] = v50;
    (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v41 + v40, v24, v20);
    v43 = v41 + ((v22 + v40 + 7) & 0xFFFFFFFFFFFFFFF8);
    *(double *)v43 = a9;
    *(_QWORD *)(v43 + 8) = v54;
    swift_retain();
    swift_unknownObjectRetain();
    sub_2452E06E8(0xD000000000000018, 0x8000000245394480, (uint64_t)v55, (uint64_t)sub_245316B04, v41, 0.0);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v47, v20);
  }
}

uint64_t sub_245302170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *, uint64_t), char a7, uint64_t a8, double a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t result;
  double v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  void *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(uint64_t, char *, uint64_t);
  unint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD aBlock[7];

  v66 = a5;
  v67 = a6;
  v65 = a4;
  v69 = a1;
  v14 = sub_245387920();
  v63 = *(_QWORD *)(v14 - 8);
  v64 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v62 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_245387950();
  v60 = *(_QWORD *)(v16 - 8);
  v61 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v59 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_245387914();
  v54 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v19 = (uint64_t *)((char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v58 = sub_2453879B0();
  v53 = *(_QWORD *)(v58 - 8);
  v20 = MEMORY[0x24BDAC7A8](v58);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v68 = (char *)&v48 - v23;
  v24 = sub_245387740();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(aBlock[0]) = a7;
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v56 = a8;
  v52 = v28;
  v28(v27, a8, v24);
  v29 = *(unsigned __int8 *)(v25 + 80);
  v30 = (v29 + 24) & ~v29;
  v31 = (v26 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v50 = v31 + 16;
  v51 = v29 | 7;
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = a3;
  v49 = *(void (**)(uint64_t, char *, uint64_t))(v25 + 32);
  v49(v32 + v30, v27, v24);
  v33 = (_QWORD *)(v32 + v31);
  *v33 = v69;
  v33[1] = a2;
  swift_retain();
  v57 = a2;
  swift_retain();
  sub_2452FFCD0(v65, v66, (uint64_t)v67, (unsigned __int8 *)aBlock, (uint64_t)sub_245317014, v32);
  swift_release();
  result = sub_245387998();
  v35 = (a9 + 1.0) * 1000.0;
  if ((~*(_QWORD *)&v35 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v35 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v35 < 9.22337204e18)
  {
    *v19 = (uint64_t)v35;
    v36 = v31;
    v37 = v54;
    v38 = v55;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v54 + 104))(v19, *MEMORY[0x24BEE5410], v55);
    sub_2453879A4();
    (*(void (**)(_QWORD *, uint64_t))(v37 + 8))(v19, v38);
    v67 = *(void (**)(char *, uint64_t))(v53 + 8);
    v39 = v58;
    v67(v22, v58);
    v52(v27, v56, v24);
    v40 = swift_allocObject();
    *(_QWORD *)(v40 + 16) = a3;
    v49(v40 + v30, v27, v24);
    v41 = (_QWORD *)(v40 + v36);
    v42 = v57;
    *v41 = v69;
    v41[1] = v42;
    aBlock[4] = sub_245317114;
    aBlock[5] = v40;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24525DD34;
    aBlock[3] = &block_descriptor_36;
    v43 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    v44 = v59;
    sub_245387938();
    v70 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    sub_2452D53B0();
    v45 = v62;
    v46 = v64;
    sub_245387E3C();
    v47 = v68;
    MEMORY[0x2495320B4](v68, v44, v45, v43);
    _Block_release(v43);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v45, v46);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v44, v61);
    v67(v47, v39);
    return swift_release();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_245302670(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  _QWORD v27[2];
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[7];
  uint64_t v32;
  uint64_t v33;

  v12 = sub_245387920();
  v29 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_245387950();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v27[0] = v17;
    v27[1] = a6;
    v28 = a5;
    MEMORY[0x24BDAC7A8](v17);
    v27[-2] = a3;
    v27[-1] = a4;
    v20 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C60);
    sub_245387D7C();
    v21 = v32;
    if (v32)
    {
      v22 = v33;
      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 16) = v21;
      *(_QWORD *)(v23 + 24) = v22;
      v24 = (_QWORD *)swift_allocObject();
      v24[2] = sub_245319B50;
      v24[3] = v23;
      v24[4] = a1;
      aBlock[4] = sub_245318860;
      aBlock[5] = v24;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24525DD34;
      aBlock[3] = &block_descriptor_174;
      v25 = _Block_copy(aBlock);
      swift_retain();
      sub_245263EDC(a1, 1);
      swift_retain();
      sub_245387938();
      v30 = MEMORY[0x24BEE4AF8];
      sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
      sub_2452D53B0();
      sub_245387E3C();
      MEMORY[0x2495320E4](0, v19, v14, v25);
      _Block_release(v25);
      sub_245263EE8(a1, 1);
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v12);
      (*(void (**)(char *, _QWORD))(v16 + 8))(v19, v27[0]);
      v17 = swift_release();
    }
    else
    {
      sub_245263EE8(a1, 1);
    }
    a5 = v28;
  }
  return a5(v17);
}

uint64_t sub_245302934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t (*v13)();
  uint64_t v14;
  uint64_t (*v15)();
  uint64_t result;

  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 64);
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_2452C2058(a2), (v8 & 1) != 0))
  {
    v9 = v7;
    v10 = *(_QWORD *)(v6 + 56);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = *(_OWORD *)(v10 + 16 * v9);
    swift_retain();
    v12 = 0;
    v13 = sub_245319B50;
  }
  else
  {
    v13 = 0;
    v11 = 0;
    v12 = 1;
  }
  swift_endAccess();
  swift_beginAccess();
  v14 = sub_245327F30(a2);
  swift_endAccess();
  sub_2453175F8(v14);
  v15 = 0;
  result = 0;
  if ((v12 & 1) == 0)
  {
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v13;
    *(_QWORD *)(result + 24) = v11;
    v15 = sub_245319B50;
  }
  *a3 = v15;
  a3[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_245302A70(void (*a1)(_QWORD *), uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452BF8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = a3;
  swift_storeEnumTagMultiPayload();
  v8 = a3;
  a1(v7);
  return sub_245263F80((uint64_t)v7, (uint64_t *)&unk_257452BF8);
}

uint64_t sub_245302B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t aBlock[7];

  v8 = sub_245387920();
  v50 = *(_QWORD *)(v8 - 8);
  v51 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v49 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_245387950();
  v47 = *(_QWORD *)(v10 - 8);
  v48 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v46 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_245387740();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v16 = *(_QWORD *)(a1 + 64);
  if (!*(_QWORD *)(v16 + 16))
    return swift_endAccess();
  v17 = sub_2452C2058(a2);
  if ((v18 & 1) == 0)
    return swift_endAccess();
  v19 = v17;
  v45 = a2;
  v43 = a4;
  v20 = *(_QWORD *)(v16 + 56);
  v21 = swift_allocObject();
  v44 = *(_OWORD *)(v20 + 16 * v19);
  v42 = v21;
  *(_OWORD *)(v21 + 16) = v44;
  swift_endAccess();
  v22 = qword_25744FD98;
  swift_retain();
  if (v22 != -1)
    swift_once();
  *(_QWORD *)&v44 = a3;
  v23 = sub_245387818();
  __swift_project_value_buffer(v23, (uint64_t)qword_257462FC8);
  v24 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v45, v12);
  v25 = sub_2453877F4();
  v26 = sub_245387D34();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    aBlock[0] = v41;
    *(_DWORD *)v27 = 136446210;
    v40 = v27 + 4;
    sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v28 = sub_2453880F4();
    v52 = sub_2453816D8(v28, v29, aBlock);
    v24 = v45;
    sub_245387E0C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    _os_log_impl(&dword_245256000, v25, v26, "Backstop fired; timeout when waiting for response for message: %{public}s",
      v27,
      0xCu);
    v30 = v41;
    swift_arrayDestroy();
    MEMORY[0x24953317C](v30, -1, -1);
    MEMORY[0x24953317C](v27, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }

  swift_beginAccess();
  v32 = sub_245327F30(v24);
  swift_endAccess();
  sub_2453175F8(v32);
  v33 = swift_allocObject();
  v34 = v42;
  *(_QWORD *)(v33 + 16) = sub_24525C56C;
  *(_QWORD *)(v33 + 24) = v34;
  aBlock[4] = (uint64_t)sub_24531715C;
  aBlock[5] = v33;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24525DD34;
  aBlock[3] = (uint64_t)&block_descriptor_45_1;
  v35 = _Block_copy(aBlock);
  swift_retain();
  v36 = v46;
  sub_245387938();
  v52 = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_2452D53B0();
  v37 = v49;
  v38 = v51;
  sub_245387E3C();
  MEMORY[0x2495320E4](0, v36, v37, v35);
  _Block_release(v35);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v37, v38);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v48);
  v39 = swift_release();
  ((void (*)(uint64_t))v44)(v39);
  return swift_release();
}

uint64_t sub_245302FBC(void (*a1)(uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452BF8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_245317164();
  v5 = swift_allocError();
  *v6 = 2;
  *v4 = v5;
  swift_storeEnumTagMultiPayload();
  a1(v4);
  return sub_245263F80((uint64_t)v4, (uint64_t *)&unk_257452BF8);
}

uint64_t sub_24530307C()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257450000);
  sub_245387D7C();
  return v1;
}

uint64_t sub_2453030D8(uint64_t a1, uint64_t a2)
{
  return sub_2452FAF64(a1, a2);
}

void sub_2453030F8(_BYTE *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *(_BYTE *)(*v1 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType);
}

uint64_t sub_245303110@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_24525E4F0(*v1 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency, a1);
}

uint64_t sub_245303128()
{
  return sub_2452FCDD0();
}

uint64_t sub_245303148@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
  result = sub_245387D7C();
  *a1 = v3;
  return result;
}

uint64_t sub_2453031B4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
  result = sub_245387D7C();
  *a1 = v3;
  return result;
}

uint64_t sub_245303220(uint64_t *a1)
{
  return sub_2452FEB34(*a1);
}

uint64_t sub_245303244@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C68);
  result = sub_245387D7C();
  *a1 = v3;
  return result;
}

uint64_t sub_2453032B0(uint64_t a1, uint64_t a2, uint64_t *a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6)
{
  return sub_2452FF3DC(a1, a2, *a3, a4, a5, a6);
}

uint64_t sub_2453032D4(uint64_t a1, NSObject *a2, uint64_t *a3, unsigned __int8 *a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  return sub_245301478(a1, a2, *a3, a4, a5, a6, a7);
}

void sub_2453032F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  _QWORD *v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[3];

  v4 = v3;
  v28[2] = *MEMORY[0x24BDAC8D0];
  v8 = sub_2453879D4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (_QWORD *)((char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(v4 + 24);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v13 = v12;
  LOBYTE(v12) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    if (qword_257451C88 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v14 = off_257452B50;
  v15 = (os_unfair_lock_s *)((char *)off_257452B50 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)off_257452B50 + 6);
  v16 = v14[2];
  if (v16 == -1)
  {
    __break(1u);
  }
  else
  {
    v26 = a2;
    v14[2] = v16 + 1;
    os_unfair_lock_unlock(v15);
    if (qword_25744FD98 == -1)
      goto LABEL_5;
  }
  swift_once();
LABEL_5:
  v17 = sub_245387818();
  __swift_project_value_buffer(v17, (uint64_t)qword_257462FC8);
  swift_unknownObjectRetain_n();
  v18 = sub_2453877F4();
  v19 = sub_245387D34();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v25[1] = a1;
    v21 = v20;
    v22 = swift_slowAlloc();
    v28[0] = v22;
    *(_DWORD *)v21 = 134349314;
    v27 = v16;
    sub_245387E0C();
    *(_WORD *)(v21 + 12) = 2082;
    v25[0] = v21 + 14;
    v27 = a3;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
    v23 = sub_245387B48();
    v27 = sub_2453816D8(v23, v24, v28);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v18, v19, "Sending data (sendID:%{public}llu) to: %{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v22, -1, -1);
    MEMORY[0x24953317C](v21, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  sub_2453079A8(a3);
  __asm { BR              X10 }
}

uint64_t sub_2453038F8(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  char v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v11 = sub_245387920();
  v24 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_245387950();
  v14 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2453875E4();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(a3, 1, v17);
  if ((_DWORD)result == 1)
  {
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = a5;
    *(_QWORD *)(v19 + 24) = a6;
    *(_QWORD *)(v19 + 32) = a1;
    v20 = a2 & 1;
    *(_BYTE *)(v19 + 40) = v20;
    aBlock[4] = sub_245317730;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24525DD34;
    aBlock[3] = &block_descriptor_147;
    v21 = _Block_copy(aBlock);
    swift_retain();
    sub_245263EDC(a1, v20);
    sub_245387938();
    v25 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    sub_2452D53B0();
    sub_245387E3C();
    MEMORY[0x2495320E4](0, v16, v13, v21);
    _Block_release(v21);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v11);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v23);
    return swift_release();
  }
  return result;
}

uint64_t sub_245303B20(uint64_t a1, uint64_t a2, int a3, int a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  id v53;
  void *v54;
  id v55;
  void *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  id v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  _BOOL4 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint8_t *v71;
  uint64_t v72;
  void *v73;
  unint64_t v74;
  uint64_t v75;
  id v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  uint8_t *v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(char *, uint64_t, uint64_t);
  char *v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  int *v126;
  char *v127;
  void (*v128)(uint64_t, char *, uint64_t);
  uint64_t v129;
  NSObject *v130;
  os_log_type_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  unint64_t v142;
  uint64_t result;
  uint64_t v144;
  NSObject *v145;
  os_log_type_t v146;
  uint8_t *v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  char *v163;
  unint64_t v164;
  uint64_t v165;
  void (*v166)(unint64_t, char *, uint64_t);
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  void *v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  char *v182;
  char *v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  int v189;
  int v190;
  int v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  unint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  __int128 aBlock;
  __int128 v210;
  void (*v211)();
  uint64_t v212;
  uint64_t v213;

  v9 = v8;
  v205 = a7;
  v188 = a6;
  v191 = a4;
  v190 = a3;
  v186 = a2;
  v207 = a1;
  v213 = *MEMORY[0x24BDAC8D0];
  v202 = sub_245387920();
  v198 = *(_QWORD *)(v202 - 8);
  MEMORY[0x24BDAC7A8](v202);
  v199 = (unint64_t)&v177 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = sub_245387950();
  v200 = *(_QWORD *)(v203 - 8);
  MEMORY[0x24BDAC7A8](v203);
  v201 = (char *)&v177 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2453875E4();
  v196 = *(_QWORD *)(v14 - 8);
  v197 = v14;
  v15 = *(_QWORD *)(v196 + 64);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v177 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v195 = (char *)&v177 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v184 = (char *)&v177 - v20;
  v181 = type metadata accessor for NetworkSyncHeader(0);
  v21 = MEMORY[0x24BDAC7A8](v181);
  v178 = (uint64_t)&v177 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v180 = (char *)&v177 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v187 = (uint64_t)&v177 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v177 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = sub_245387740();
  v194 = *(_QWORD *)(v193 - 8);
  v29 = *(_QWORD *)(v194 + 64);
  v30 = MEMORY[0x24BDAC7A8](v193);
  v183 = (char *)&v177 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v182 = (char *)&v177 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v185 = (char *)&v177 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v179 = (char *)&v177 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v192 = (char *)&v177 - v37;
  v38 = sub_2453879D4();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v41 = (uint64_t *)((char *)&v177 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  v189 = *a5;
  v42 = *(void **)(v9 + 24);
  *v41 = v42;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v39 + 104))(v41, *MEMORY[0x24BEE5610], v38);
  v43 = v42;
  LOBYTE(v42) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v39 + 8))(v41, v38);
  if ((v42 & 1) == 0)
  {
    __break(1u);
    goto LABEL_57;
  }
  v204 = a8;
  v206 = v9;
  v44 = *(_QWORD *)(v9 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency + 24);
  v45 = *(_QWORD *)(v9 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency + 32);
  v46 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v9 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency), v44);
  v47 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v49 = (char *)&v177 - v48;
  (*(void (**)(char *))(v47 + 16))((char *)&v177 - v48);
  v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 24))(v44, v45);
  v52 = v51;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v44);
  if (!v52)
  {
    if (qword_25744FD98 == -1)
    {
LABEL_8:
      v63 = sub_245387818();
      __swift_project_value_buffer(v63, (uint64_t)qword_257462FC8);
      v64 = sub_2453877F4();
      v65 = sub_245387D1C();
      v66 = os_log_type_enabled(v64, v65);
      v67 = v204;
      v68 = v205;
      v69 = v203;
      v70 = v201;
      if (v66)
      {
        v71 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v71 = 0;
        _os_log_impl(&dword_245256000, v64, v65, "Cannot send messages before we have a local device ID", v71, 2u);
        MEMORY[0x24953317C](v71, -1, -1);
      }

      v72 = swift_allocObject();
      *(_QWORD *)(v72 + 16) = v68;
      *(_QWORD *)(v72 + 24) = v67;
      v211 = (void (*)())sub_2453199C8;
      v212 = v72;
      *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v210 = sub_24525DD34;
      *((_QWORD *)&v210 + 1) = &block_descriptor_78_0;
      v73 = _Block_copy(&aBlock);
      swift_retain();
      sub_245387938();
      v208 = MEMORY[0x24BEE4AF8];
      sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
      sub_2452D53B0();
      v74 = v199;
      v75 = v202;
      sub_245387E3C();
      MEMORY[0x2495320E4](0, v70, v74, v73);
      _Block_release(v73);
      (*(void (**)(unint64_t, uint64_t))(v198 + 8))(v74, v75);
      (*(void (**)(char *, uint64_t))(v200 + 8))(v70, v69);
      return swift_release();
    }
LABEL_57:
    swift_once();
    goto LABEL_8;
  }
  v53 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_2453875C0();
  v54 = (void *)sub_245387AF4();
  swift_bridgeObjectRelease();
  *(_QWORD *)&aBlock = 0;
  v55 = objc_msgSend(v53, sel_attributesOfItemAtPath_error_, v54, &aBlock);

  v56 = (void *)aBlock;
  if (!v55)
  {
    v76 = (id)aBlock;
    swift_bridgeObjectRelease();
    v77 = (void *)sub_245387584();

    swift_willThrow();
    v78 = v197;
    if (qword_25744FD98 != -1)
      swift_once();
    v79 = sub_245387818();
    __swift_project_value_buffer(v79, (uint64_t)qword_257462FC8);
    v80 = v196;
    (*(void (**)(char *, uint64_t, uint64_t))(v196 + 16))(v17, v207, v78);
    v81 = sub_2453877F4();
    v82 = sub_245387D1C();
    if (os_log_type_enabled(v81, v82))
    {
      v83 = (uint8_t *)swift_slowAlloc();
      v84 = swift_slowAlloc();
      *(_QWORD *)&aBlock = v84;
      *(_DWORD *)v83 = 136446210;
      sub_24525C6C4(&qword_257452C18, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v85 = sub_2453880F4();
      v208 = sub_2453816D8(v85, v86, (uint64_t *)&aBlock);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v17, v78);
      _os_log_impl(&dword_245256000, v81, v82, "Cannot get attributes of file at URL: %{public}s", v83, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v84, -1, -1);
      MEMORY[0x24953317C](v83, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v80 + 8))(v17, v78);
    }

    v111 = v204;
    v112 = v205;
    v107 = v202;
    v106 = v203;
    v108 = v201;
    v113 = swift_allocObject();
    *(_QWORD *)(v113 + 16) = v112;
    *(_QWORD *)(v113 + 24) = v111;
    v211 = sub_245317330;
    v212 = v113;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v110 = &block_descriptor_84;
    goto LABEL_46;
  }
  type metadata accessor for FileAttributeKey(0);
  sub_24525C6C4(&qword_2574520C0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2453897BC);
  v57 = sub_245387A64();
  v58 = v56;

  v59 = v197;
  if (*(_QWORD *)(v57 + 16))
  {
    v60 = (id)*MEMORY[0x24BDD0D08];
    v61 = sub_2452C211C((uint64_t)v60);
    if ((v62 & 1) != 0)
    {
      sub_245263FBC(*(_QWORD *)(v57 + 56) + 32 * v61, (uint64_t)&aBlock);
    }
    else
    {
      aBlock = 0u;
      v210 = 0u;
    }

  }
  else
  {
    aBlock = 0u;
    v210 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v210 + 1))
  {
    swift_bridgeObjectRelease();
    sub_245263F80((uint64_t)&aBlock, &qword_25440C9B0);
LABEL_27:
    v95 = v196;
    v96 = v195;
    if (qword_25744FD98 != -1)
      swift_once();
    v97 = sub_245387818();
    __swift_project_value_buffer(v97, (uint64_t)qword_257462FC8);
    (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v96, v207, v59);
    v98 = sub_2453877F4();
    v99 = sub_245387D1C();
    if (os_log_type_enabled(v98, v99))
    {
      v100 = (uint8_t *)swift_slowAlloc();
      v101 = swift_slowAlloc();
      *(_QWORD *)&aBlock = v101;
      *(_DWORD *)v100 = 136446210;
      sub_24525C6C4(&qword_257452C18, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v102 = sub_2453880F4();
      v208 = sub_2453816D8(v102, v103, (uint64_t *)&aBlock);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v96, v59);
      _os_log_impl(&dword_245256000, v98, v99, "Cannot retrieve size of file at URL: %{public}s", v100, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v101, -1, -1);
      MEMORY[0x24953317C](v100, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v95 + 8))(v96, v59);
    }

    v104 = v204;
    v105 = v205;
    v107 = v202;
    v106 = v203;
    v108 = v201;
    v109 = swift_allocObject();
    *(_QWORD *)(v109 + 16) = v105;
    *(_QWORD *)(v109 + 24) = v104;
    v211 = (void (*)())sub_2453199C8;
    v212 = v109;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v110 = &block_descriptor_90_0;
    goto LABEL_46;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  v87 = v208;
  sub_2453876F8();
  v88 = v194;
  v89 = v193;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v194 + 48))(v28, 1, v193) == 1)
  {
    sub_245263F80((uint64_t)v28, &qword_25440C700);
    if (qword_25744FD98 != -1)
      swift_once();
    v90 = sub_245387818();
    __swift_project_value_buffer(v90, (uint64_t)qword_257462FC8);
    swift_bridgeObjectRetain();
    v91 = sub_2453877F4();
    v92 = sub_245387D1C();
    if (os_log_type_enabled(v91, v92))
    {
      v93 = (uint8_t *)swift_slowAlloc();
      v94 = swift_slowAlloc();
      *(_QWORD *)&aBlock = v94;
      *(_DWORD *)v93 = 136446210;
      swift_bridgeObjectRetain();
      v208 = sub_2453816D8(v50, v52, (uint64_t *)&aBlock);
      sub_245387E0C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_245256000, v91, v92, "Cannot create UUID from sender device ID: %{public}s", v93, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v94, -1, -1);
      MEMORY[0x24953317C](v93, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v138 = v204;
    v139 = v205;
    v107 = v202;
    v106 = v203;
    v108 = v201;
    v140 = swift_allocObject();
    *(_QWORD *)(v140 + 16) = v139;
    *(_QWORD *)(v140 + 24) = v138;
    v211 = (void (*)())sub_2453199C8;
    v212 = v140;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v110 = &block_descriptor_96;
LABEL_46:
    *(_QWORD *)&v210 = sub_24525DD34;
    *((_QWORD *)&v210 + 1) = v110;
    v141 = _Block_copy(&aBlock);
    swift_retain();
    sub_245387938();
    v208 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    sub_2452D53B0();
    v142 = v199;
    sub_245387E3C();
    MEMORY[0x2495320E4](0, v108, v142, v141);
    _Block_release(v141);
    (*(void (**)(unint64_t, uint64_t))(v198 + 8))(v142, v107);
    (*(void (**)(char *, uint64_t))(v200 + 8))(v108, v106);
    return swift_release();
  }
  swift_bridgeObjectRelease();
  v114 = v192;
  v195 = *(char **)(v88 + 32);
  ((void (*)(char *, char *, uint64_t))v195)(v192, v28, v89);
  sub_2453878F0();
  v115 = v188;
  v116 = swift_unknownObjectRetain();
  v117 = MEMORY[0x249531C58](v116);
  if (!v117)
  {
    if (qword_25744FD98 != -1)
      swift_once();
    v144 = sub_245387818();
    __swift_project_value_buffer(v144, (uint64_t)qword_257462FC8);
    swift_unknownObjectRetain_n();
    v145 = sub_2453877F4();
    v146 = sub_245387D1C();
    if (os_log_type_enabled(v145, v146))
    {
      v147 = (uint8_t *)swift_slowAlloc();
      v148 = swift_slowAlloc();
      *(_DWORD *)v147 = 136446210;
      v208 = v115;
      *(_QWORD *)&aBlock = v148;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
      v149 = sub_245387B48();
      v208 = sub_2453816D8(v149, v150, (uint64_t *)&aBlock);
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v145, v146, "Cannot create NWConnection from nw_connection_t for %{public}s", v147, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v148, -1, -1);
      MEMORY[0x24953317C](v147, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    v169 = v204;
    v170 = v205;
    v172 = v202;
    v171 = v203;
    v173 = v201;
    v174 = swift_allocObject();
    *(_QWORD *)(v174 + 16) = v170;
    *(_QWORD *)(v174 + 24) = v169;
    v211 = (void (*)())sub_2453199C8;
    v212 = v174;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v210 = sub_24525DD34;
    *((_QWORD *)&v210 + 1) = &block_descriptor_102;
    v175 = _Block_copy(&aBlock);
    swift_retain();
    sub_245387938();
    v208 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    sub_2452D53B0();
    v176 = v199;
    sub_245387E3C();
    MEMORY[0x2495320E4](0, v173, v176, v175);
    _Block_release(v175);
    (*(void (**)(unint64_t, uint64_t))(v198 + 8))(v176, v172);
    (*(void (**)(char *, uint64_t))(v200 + 8))(v173, v171);
    (*(void (**)(char *, uint64_t))(v194 + 8))(v192, v193);
    return swift_release();
  }
  v201 = (char *)v117;
  LOBYTE(aBlock) = v189;
  v203 = v87;
  v118 = v186;
  sub_245305398(v207, v186, v190, v191, (unsigned __int8 *)&aBlock, v115, 0, 0);
  v119 = *(void (**)(char *, uint64_t, uint64_t))(v88 + 16);
  v120 = v179;
  v121 = v203;
  v119(v179, v118, v89);
  v119(v185, (uint64_t)v114, v89);
  if ((v121 & 0x8000000000000000) == 0)
  {
    v122 = v187;
    v123 = (uint64_t)v180;
    if (!HIDWORD(v121))
    {
      v124 = v191 + 1;
      if (v191 == -1)
      {
        __break(1u);
      }
      else if (qword_257451C80 == -1)
      {
LABEL_40:
        v125 = __swift_project_value_buffer(v89, (uint64_t)qword_257463040);
        v119((char *)v122, v125, v89);
        v126 = (int *)v181;
        *(_DWORD *)(v122 + *(int *)(v181 + 20)) = 72;
        v127 = v120;
        v128 = (void (*)(uint64_t, char *, uint64_t))v195;
        ((void (*)(uint64_t, char *, uint64_t))v195)(v122 + v126[6], v127, v89);
        v128(v122 + v126[7], v185, v89);
        *(_DWORD *)(v122 + v126[8]) = v203;
        *(_BYTE *)(v122 + v126[9]) = 1;
        *(_DWORD *)(v122 + v126[10]) = v190;
        *(_DWORD *)(v122 + v126[11]) = v124;
        *(_BYTE *)(v122 + v126[12]) = v189;
        if (qword_25744FD98 != -1)
          swift_once();
        v129 = sub_245387818();
        __swift_project_value_buffer(v129, (uint64_t)qword_257462FC8);
        sub_2452B792C(v122, v123, type metadata accessor for NetworkSyncHeader);
        swift_unknownObjectRetain_n();
        v130 = sub_2453877F4();
        v131 = sub_245387D34();
        if (os_log_type_enabled(v130, v131))
        {
          v132 = swift_slowAlloc();
          v202 = swift_slowAlloc();
          *(_QWORD *)&aBlock = v202;
          *(_DWORD *)v132 = 136446466;
          sub_2452B792C(v123, v178, type metadata accessor for NetworkSyncHeader);
          v133 = sub_245387B48();
          v208 = sub_2453816D8(v133, v134, (uint64_t *)&aBlock);
          sub_245387E0C();
          swift_bridgeObjectRelease();
          sub_2452B7B5C(v123, type metadata accessor for NetworkSyncHeader);
          *(_WORD *)(v132 + 12) = 2082;
          v208 = v115;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
          v135 = sub_245387B48();
          v208 = sub_2453816D8(v135, v136, (uint64_t *)&aBlock);
          v89 = v193;
          sub_245387E0C();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_245256000, v130, v131, "Sending file header: %{public}s to %{public}s", (uint8_t *)v132, 0x16u);
          v137 = v202;
          swift_arrayDestroy();
          MEMORY[0x24953317C](v137, -1, -1);
          MEMORY[0x24953317C](v132, -1, -1);

        }
        else
        {
          sub_2452B7B5C(v123, type metadata accessor for NetworkSyncHeader);

          swift_unknownObjectRelease_n();
        }
        v151 = sub_2452F1CA8();
        v199 = v152;
        v200 = v151;
        sub_2453032F8(v151, v152, v115);
        v202 = swift_allocObject();
        swift_weakInit();
        v153 = v196;
        (*(void (**)(char *, uint64_t, uint64_t))(v196 + 16))(v184, v207, v197);
        v119(v182, v186, v89);
        v119(v183, (uint64_t)v192, v89);
        v154 = (*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80);
        v155 = *(unsigned __int8 *)(v194 + 80);
        v156 = (v15 + v155 + v154) & ~v155;
        v157 = (v29 + v155 + v156) & ~v155;
        v206 = v157 + v29;
        v158 = (v157 + v29) & 0xFFFFFFFFFFFFFFFCLL;
        v159 = (v158 + 11) & 0xFFFFFFFFFFFFFFFCLL;
        v160 = (v159 + 11) & 0xFFFFFFFFFFFFFFF8;
        v161 = (v160 + 15) & 0xFFFFFFFFFFFFFFF8;
        v162 = swift_allocObject();
        v198 = v158 + v162;
        v163 = v201;
        *(_QWORD *)(v162 + 16) = v202;
        *(_QWORD *)(v162 + 24) = v163;
        (*(void (**)(unint64_t, char *, uint64_t))(v153 + 32))(v162 + v154, v184, v197);
        v164 = v162 + v156;
        v165 = v193;
        v166 = (void (*)(unint64_t, char *, uint64_t))v195;
        ((void (*)(unint64_t, char *, uint64_t))v195)(v164, v182, v193);
        v166(v162 + v157, v183, v165);
        *(_BYTE *)(v162 + v206) = v189;
        *(_DWORD *)(v198 + 4) = v190;
        *(_DWORD *)(v162 + v159) = v191;
        *(_QWORD *)(v162 + v160) = v188;
        v167 = (_QWORD *)(v162 + v161);
        v168 = v204;
        *v167 = v205;
        v167[1] = v168;
        *(_QWORD *)(v162 + ((v161 + 23) & 0xFFFFFFFFFFFFFFF8)) = v203;
        sub_2453878D8();
        swift_unknownObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_2453878CC();
        sub_2453878E4();
        swift_release();
        swift_release();
        sub_24525CB80(v200, v199);
        swift_release();
        sub_2452B7B5C(v187, type metadata accessor for NetworkSyncHeader);
        (*(void (**)(char *, uint64_t))(v194 + 8))(v192, v165);
        return swift_release();
      }
      swift_once();
      goto LABEL_40;
    }
  }
  result = sub_245387F74();
  __break(1u);
  return result;
}

void sub_245305398(uint64_t a1, uint64_t a2, int a3, int a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  _BOOL4 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  _BOOL4 v54;
  uint64_t v55;
  uint8_t *v56;
  uint64_t v57;
  void *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t);
  char *v71;
  uint64_t v72;
  id v73;
  id v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  id v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  uint64_t v95;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v97;
  char v98;
  unint64_t v99;
  uint64_t v100;
  _BOOL8 v101;
  uint64_t v102;
  char v103;
  unint64_t v104;
  char v105;
  _QWORD *v106;
  uint64_t *v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  char *v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t inited;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *, uint64_t, uint64_t);
  uint64_t v129;
  void (*v130)(char *, uint64_t, uint64_t);
  void (*v131)(char *, uint64_t);
  char *v132;
  uint64_t v133;
  _QWORD *v134;
  char *v135;
  int v136;
  uint64_t v137;
  int v138;
  int v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *aBlock;
  unint64_t v162;
  uint64_t (*v163)(uint64_t);
  ValueMetadata *v164;
  uint64_t (*v165)();
  uint64_t v166;

  v155 = a7;
  v139 = a4;
  v138 = a3;
  v140 = a2;
  v158 = a1;
  v149 = sub_245387920();
  v147 = *(_QWORD *)(v149 - 8);
  MEMORY[0x24BDAC7A8](v149);
  v146 = (char *)&v129 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_245387950();
  v145 = *(_QWORD *)(v148 - 8);
  MEMORY[0x24BDAC7A8](v148);
  v144 = (char *)&v129 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = type metadata accessor for NetworkSyncHeader(0);
  MEMORY[0x24BDAC7A8](v137);
  v15 = (char *)&v129 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v16);
  v157 = (char *)&v129 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_245387740();
  v156 = *(_QWORD *)(v154 - 8);
  v18 = MEMORY[0x24BDAC7A8](v154);
  v142 = (char *)&v129 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v141 = (char *)&v129 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v153 = (char *)&v129 - v22;
  v151 = sub_2453875E4();
  v23 = *(uint64_t **)(v151 - 8);
  v24 = MEMORY[0x24BDAC7A8](v151);
  v26 = (char *)&v129 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v129 - v27;
  v136 = *a5;
  v152 = v8;
  v30 = *(_QWORD *)(v8 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency + 24);
  v29 = *(_QWORD *)(v8 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency + 32);
  v31 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v8 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency), v30);
  v32 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v129 - v33;
  (*(void (**)(char *))(v32 + 16))((char *)&v129 - v33);
  v150 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 24))(v30, v29);
  v36 = v35;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v30);
  if (!v36)
  {
    if (qword_25744FD98 != -1)
      goto LABEL_49;
    goto LABEL_6;
  }
  v135 = v26;
  v132 = v15;
  v134 = a8;
  if (qword_25744FD98 != -1)
    goto LABEL_47;
LABEL_3:
  v37 = sub_245387818();
  v38 = __swift_project_value_buffer(v37, (uint64_t)qword_257462FC8);
  v39 = (void (*)(char *, uint64_t, uint64_t))v23[2];
  v40 = v151;
  v39(v28, v158, v151);
  swift_unknownObjectRetain_n();
  v143 = v38;
  v41 = sub_2453877F4();
  v42 = sub_245387D34();
  v43 = os_log_type_enabled(v41, v42);
  v133 = a6;
  v130 = v39;
  if (v43)
  {
    v44 = a6;
    v45 = swift_slowAlloc();
    v129 = swift_slowAlloc();
    aBlock = (_QWORD *)v129;
    *(_DWORD *)v45 = 136446466;
    sub_24525C6C4(&qword_257452C18, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v46 = sub_2453880F4();
    v159 = sub_2453816D8(v46, v47, (uint64_t *)&aBlock);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    v131 = (void (*)(char *, uint64_t))v23[1];
    v131(v28, v40);
    *(_WORD *)(v45 + 12) = 2082;
    v159 = v44;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
    v48 = sub_245387B48();
    v159 = sub_2453816D8(v48, v49, (uint64_t *)&aBlock);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v41, v42, "Sending file attributes for URL %{public}s to %{public}s", (uint8_t *)v45, 0x16u);
    v50 = v129;
    swift_arrayDestroy();
    MEMORY[0x24953317C](v50, -1, -1);
    MEMORY[0x24953317C](v45, -1, -1);

  }
  else
  {
    v131 = (void (*)(char *, uint64_t))v23[1];
    v131(v28, v40);

    swift_unknownObjectRelease_n();
  }
  v62 = v154;
  v63 = v156;
  v64 = (uint64_t)v157;
  v65 = v150;
  sub_2453876F8();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v64, 1, v62) == 1)
  {
    sub_245263F80(v64, &qword_25440C700);
    swift_bridgeObjectRetain();
    v66 = sub_2453877F4();
    v67 = sub_245387D1C();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      v69 = swift_slowAlloc();
      aBlock = (_QWORD *)v69;
      *(_DWORD *)v68 = 136446210;
      swift_bridgeObjectRetain();
      v159 = sub_2453816D8(v65, v36, (uint64_t *)&aBlock);
      sub_245387E0C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_245256000, v66, v67, "Cannot create UUID from sender device ID: %{public}s", v68, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v69, -1, -1);
      MEMORY[0x24953317C](v68, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v85 = v134;
    v86 = v155;
    if (v155)
    {
      v87 = swift_allocObject();
      *(_QWORD *)(v87 + 16) = v86;
      *(_QWORD *)(v87 + 24) = v85;
      v165 = sub_2453199C8;
      v166 = v87;
      aBlock = (_QWORD *)MEMORY[0x24BDAC760];
      v162 = 1107296256;
      v163 = sub_24525DD34;
      v164 = (ValueMetadata *)&block_descriptor_132;
      v88 = _Block_copy(&aBlock);
      swift_retain_n();
      v59 = v144;
      sub_245387938();
      v159 = MEMORY[0x24BEE4AF8];
      sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
      sub_2452D53B0();
      v89 = v146;
      v90 = v149;
      sub_245387E3C();
      MEMORY[0x2495320E4](0, v59, v89, v88);
      _Block_release(v88);
      sub_2453175F8(v86);
      (*(void (**)(char *, uint64_t))(v147 + 8))(v89, v90);
LABEL_20:
      (*(void (**)(char *, uint64_t))(v145 + 8))(v59, v148);
      swift_release();
    }
    return;
  }
  swift_bridgeObjectRelease();
  v70 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 32);
  v70(v153, v64, v62);
  v160 = MEMORY[0x24BEE4B00];
  v71 = 0;
  URL.extendedAttributeNames()();
  v150 = (uint64_t)v70;
  v91 = *(_QWORD *)(v72 + 16);
  if (!v91)
  {
    swift_bridgeObjectRelease();
LABEL_41:
    v114 = sub_2453877F4();
    v115 = sub_245387D34();
    if (os_log_type_enabled(v114, v115))
    {
      v116 = (uint8_t *)swift_slowAlloc();
      v117 = swift_slowAlloc();
      aBlock = (_QWORD *)v117;
      *(_DWORD *)v116 = 136446210;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v118 = sub_245387A70();
      v120 = v119;
      swift_bridgeObjectRelease();
      v159 = sub_2453816D8(v118, v120, (uint64_t *)&aBlock);
      v62 = v154;
      sub_245387E0C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v114, v115, "Attributes: %{public}s", v116, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v117, -1, -1);
      MEMORY[0x24953317C](v116, -1, -1);
    }

    v121 = v142;
    v122 = v141;
    swift_beginAccess();
    v123 = v160;
    v164 = &type metadata for NetworkMessenger.ExtendedAttributes;
    v165 = (uint64_t (*)())sub_245317608();
    aBlock = (_QWORD *)v123;
    type metadata accessor for PropertyListTypeEncoder();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = 0;
    *(_BYTE *)(inited + 24) = 1;
    swift_bridgeObjectRetain();
    v125 = (void *)sub_24537B31C(&aBlock);
    if (!v71)
    {
      sub_24537E224(v125);
      v127 = v126;
      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
      v128 = *(void (**)(char *, uint64_t, uint64_t))(v156 + 16);
      v128(v122, v140, v62);
      v128(v121, (uint64_t)v153, v62);
      __asm { BR              X10 }
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
    swift_unexpectedError();
    __break(1u);
LABEL_51:
    sub_2453883DC();
    __break(1u);
    JUMPOUT(0x2453066DCLL);
  }
  v149 = v72;
  v23 = (uint64_t *)(v72 + 40);
  while (1)
  {
    v28 = (char *)*(v23 - 1);
    v94 = *v23;
    MEMORY[0x24BDAC7A8](v72);
    swift_bridgeObjectRetain();
    sub_2453875A8();
    if (v71)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v111 = v71;
      v71 = 0;
      v62 = v154;
      v112 = v151;
      v113 = v135;
      v130(v135, v158, v151);
      v73 = v111;
      v74 = v111;
      v75 = sub_2453877F4();
      v76 = sub_245387D1C();
      if (os_log_type_enabled(v75, v76))
      {
        v77 = swift_slowAlloc();
        v78 = swift_slowAlloc();
        aBlock = (_QWORD *)v78;
        *(_DWORD *)v77 = 136446466;
        sub_24525C6C4(&qword_257452C18, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
        v79 = sub_2453880F4();
        v159 = sub_2453816D8(v79, v80, (uint64_t *)&aBlock);
        sub_245387E0C();
        swift_bridgeObjectRelease();
        v131(v113, v112);
        *(_WORD *)(v77 + 12) = 2082;
        v159 = (uint64_t)v111;
        v81 = v111;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25440C868);
        v82 = sub_245387B48();
        v159 = sub_2453816D8(v82, v83, (uint64_t *)&aBlock);
        sub_245387E0C();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_245256000, v75, v76, "Could not fetch extended attributes for URL %{public}s; error: %{public}s",
          (uint8_t *)v77,
          0x16u);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v78, -1, -1);
        v84 = v77;
        v62 = v154;
        MEMORY[0x24953317C](v84, -1, -1);

      }
      else
      {

        v131(v113, v112);
      }
      goto LABEL_41;
    }
    v157 = 0;
    v95 = v91;
    a6 = (uint64_t)aBlock;
    v36 = v162;
    sub_245261C44((uint64_t)aBlock, v162);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v97 = v160;
    aBlock = (_QWORD *)v160;
    v99 = sub_2452C1D98((uint64_t)v28, v94);
    v100 = *(_QWORD *)(v97 + 16);
    v101 = (v98 & 1) == 0;
    v102 = v100 + v101;
    if (__OFADD__(v100, v101))
    {
      __break(1u);
LABEL_47:
      swift_once();
      goto LABEL_3;
    }
    v103 = v98;
    if (*(_QWORD *)(v97 + 24) < v102)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      a8 = aBlock;
      if ((v98 & 1) == 0)
        goto LABEL_33;
    }
    else
    {
      sub_2452C9A24();
      a8 = aBlock;
      if ((v103 & 1) == 0)
        goto LABEL_33;
    }
LABEL_23:
    v92 = a8[7] + 16 * v99;
    sub_24525CB80(*(_QWORD *)v92, *(_QWORD *)(v92 + 8));
    *(_QWORD *)v92 = a6;
    *(_QWORD *)(v92 + 8) = v36;
LABEL_24:
    v23 += 2;
    v160 = (uint64_t)a8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v72 = sub_24525CB80(a6, v36);
    v91 = v95 - 1;
    v93 = v95 == 1;
    v71 = v157;
    if (v93)
    {
      swift_bridgeObjectRelease();
      v62 = v154;
      goto LABEL_41;
    }
  }
  sub_2452C6684(v102, isUniquelyReferenced_nonNull_native);
  v104 = sub_2452C1D98((uint64_t)v28, v94);
  if ((v103 & 1) != (v105 & 1))
    goto LABEL_51;
  v99 = v104;
  a8 = aBlock;
  if ((v103 & 1) != 0)
    goto LABEL_23;
LABEL_33:
  a8[(v99 >> 6) + 8] |= 1 << v99;
  v106 = (_QWORD *)(a8[6] + 16 * v99);
  *v106 = v28;
  v106[1] = v94;
  v107 = (uint64_t *)(a8[7] + 16 * v99);
  *v107 = a6;
  v107[1] = v36;
  v108 = a8[2];
  v109 = __OFADD__(v108, 1);
  v110 = v108 + 1;
  if (!v109)
  {
    a8[2] = v110;
    swift_bridgeObjectRetain();
    goto LABEL_24;
  }
  __break(1u);
LABEL_49:
  swift_once();
LABEL_6:
  v51 = sub_245387818();
  __swift_project_value_buffer(v51, (uint64_t)qword_257462FC8);
  v52 = sub_2453877F4();
  v53 = sub_245387D1C();
  v54 = os_log_type_enabled(v52, v53);
  v55 = v155;
  if (v54)
  {
    v56 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v56 = 0;
    _os_log_impl(&dword_245256000, v52, v53, "Cannot send messages before we have a local device ID", v56, 2u);
    MEMORY[0x24953317C](v56, -1, -1);
  }

  if (v55)
  {
    v57 = swift_allocObject();
    *(_QWORD *)(v57 + 16) = v55;
    *(_QWORD *)(v57 + 24) = a8;
    v165 = sub_2453199C8;
    v166 = v57;
    aBlock = (_QWORD *)MEMORY[0x24BDAC760];
    v162 = 1107296256;
    v163 = sub_24525DD34;
    v164 = (ValueMetadata *)&block_descriptor_126;
    v58 = _Block_copy(&aBlock);
    swift_retain_n();
    v59 = v144;
    sub_245387938();
    v159 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    sub_2452D53B0();
    v60 = v146;
    v61 = v149;
    sub_245387E3C();
    MEMORY[0x2495320E4](0, v59, v60, v58);
    _Block_release(v58);
    sub_2453175F8(v55);
    (*(void (**)(char *, uint64_t))(v147 + 8))(v60, v61);
    goto LABEL_20;
  }
}

uint64_t sub_24530677C(NSObject *a1, int a2, uint64_t a3, uint64_t a4, NSObject *a5, void (*a6)(_BYTE *, _BYTE *, uint64_t), uint64_t a7, uint64_t a8, char a9, int a10, int a11, unint64_t a12, uint64_t a13, uint64_t a14, NSObject *a15)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  NSObject *v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  void (*v59)(_BYTE *, uint64_t);
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  NSObject *v65;
  NSObject *v66;
  os_log_type_t v67;
  int v68;
  _BOOL4 v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  NSObject *v79;
  os_log_t v80;
  _BYTE *v81;
  NSObject *v82;
  os_log_type_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  NSObject *v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  void (*v93)(_BYTE *, uint64_t, uint64_t);
  int v94;
  uint64_t v95;
  void (*v96)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  _BYTE *v105;
  _BYTE *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  _BYTE *v114;
  _BYTE *v115;
  uint64_t result;
  _BYTE v117[4];
  int v118;
  uint64_t v119;
  _BYTE *v120;
  os_log_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _BYTE *v126;
  uint64_t v127;
  _BYTE *v128;
  uint64_t v129;
  uint64_t v130;
  _BYTE *v131;
  uint64_t v132;
  _BYTE *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _BYTE *v137;
  _BYTE *v138;
  int v139;
  uint64_t Strong;
  void (*v141)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v142;
  uint64_t v143;
  NSObject *v144;
  os_log_t v145;
  NSObject *aBlock;
  uint64_t v147;
  uint64_t (*v148)(uint64_t);
  void *v149;
  void *v150;
  uint64_t v151;

  v124 = a8;
  v123 = a7;
  v141 = a6;
  v144 = a5;
  LODWORD(v122) = a2;
  v121 = a1;
  v136 = sub_245387920();
  v134 = *(_QWORD *)(v136 - 8);
  MEMORY[0x24BDAC7A8](v136);
  v133 = &v117[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v135 = sub_245387950();
  v132 = *(_QWORD *)(v135 - 8);
  MEMORY[0x24BDAC7A8](v135);
  v131 = &v117[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v127 = sub_245387740();
  v125 = *(_QWORD *)(v127 - 8);
  v18 = MEMORY[0x24BDAC7A8](v127);
  v126 = &v117[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v18);
  v137 = &v117[-v20];
  v21 = (int *)type metadata accessor for NetworkSyncHeader(0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = &v117[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = sub_2453875E4();
  v25 = *(_QWORD *)(v24 - 8);
  v142 = v24;
  v143 = v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v128 = &v117[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = &v117[-v29];
  MEMORY[0x24BDAC7A8](v28);
  v32 = &v117[-v31];
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452C20);
  MEMORY[0x24BDAC7A8](v33);
  v35 = &v117[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v36 = sub_245387908();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v120 = &v117[-((v39 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = MEMORY[0x24BDAC7A8](v38);
  v42 = &v117[-v41];
  MEMORY[0x24BDAC7A8](v40);
  v138 = &v117[-v43];
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v129 = a13;
    sub_2452BC89C(a3, (uint64_t)v35, &qword_257452C20);
    v139 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36);
    v130 = a14;
    if (v139 == 1)
    {
      sub_245263F80((uint64_t)v35, &qword_257452C20);
      if (qword_25744FD98 != -1)
        swift_once();
      v44 = sub_245387818();
      v45 = __swift_project_value_buffer(v44, (uint64_t)qword_257462FC8);
      v47 = v142;
      v46 = v143;
      v48 = *(_BYTE **)(v143 + 16);
      ((void (*)(_BYTE *, _QWORD, uint64_t))v48)(v32, v141, v142);
      v49 = v144;
      swift_retain_n();
      v50 = sub_2453877F4();
      v51 = sub_245387D34();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = swift_slowAlloc();
        v137 = v48;
        v138 = (_BYTE *)v45;
        v53 = v52;
        v54 = swift_slowAlloc();
        *(_DWORD *)v53 = 136315906;
        v145 = v144;
        aBlock = v54;
        sub_2453878F0();
        swift_retain();
        v55 = sub_245387B48();
        v145 = (os_log_t)sub_2453816D8(v55, v56, (uint64_t *)&aBlock);
        v47 = v142;
        sub_245387E0C();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v53 + 12) = 2050;
        v145 = a15;
        sub_245387E0C();
        *(_WORD *)(v53 + 22) = 2050;
        v145 = v121;
        sub_245387E0C();
        *(_WORD *)(v53 + 32) = 2082;
        sub_24525C6C4(&qword_257452C18, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
        v57 = sub_2453880F4();
        v145 = (os_log_t)sub_2453816D8(v57, v58, (uint64_t *)&aBlock);
        sub_245387E0C();
        swift_bridgeObjectRelease();
        v59 = *(void (**)(_BYTE *, uint64_t))(v143 + 8);
        v59(v32, v47);
        _os_log_impl(&dword_245256000, v50, v51, "%s; file size: %{public}ld; bytes sent: %{public}ld; file path: %{public}s",
          (uint8_t *)v53,
          0x2Au);
        swift_arrayDestroy();
        v49 = v144;
        MEMORY[0x24953317C](v54, -1, -1);
        v60 = v53;
        v48 = v137;
        MEMORY[0x24953317C](v60, -1, -1);
      }
      else
      {
        swift_release_n();
        v59 = *(void (**)(_BYTE *, uint64_t))(v46 + 8);
        v59(v32, v47);
      }

      v81 = v128;
      if ((v122 & 1) == 0)
        goto LABEL_23;
      ((void (*)(_BYTE *, _QWORD, uint64_t))v48)(v128, v141, v47);
      swift_retain_n();
      v82 = sub_2453877F4();
      v83 = sub_245387D34();
      if (os_log_type_enabled(v82, v83))
      {
        v84 = swift_slowAlloc();
        v144 = swift_slowAlloc();
        v145 = v49;
        aBlock = v144;
        *(_DWORD *)v84 = 136315394;
        sub_2453878F0();
        swift_retain();
        v85 = sub_245387B48();
        v145 = (os_log_t)sub_2453816D8(v85, v86, (uint64_t *)&aBlock);
        sub_245387E0C();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v84 + 12) = 2082;
        sub_24525C6C4(&qword_257452C18, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
        v87 = sub_2453880F4();
        v145 = (os_log_t)sub_2453816D8(v87, v88, (uint64_t *)&aBlock);
        sub_245387E0C();
        swift_bridgeObjectRelease();
        v59(v81, v47);
        _os_log_impl(&dword_245256000, v82, v83, "%s; Send completed for %{public}s", (uint8_t *)v84, 0x16u);
        v89 = v144;
        swift_arrayDestroy();
        MEMORY[0x24953317C](v89, -1, -1);
        MEMORY[0x24953317C](v84, -1, -1);
      }
      else
      {
        swift_release_n();
        v59(v81, v47);
      }

      v109 = v135;
      v108 = v136;
      v110 = v134;
      v111 = v129;
      v112 = swift_allocObject();
      *(_QWORD *)(v112 + 16) = v111;
      *(_QWORD *)(v112 + 24) = v130;
      v150 = sub_2453175B4;
      v151 = v112;
      aBlock = MEMORY[0x24BDAC760];
      v147 = 1107296256;
      v148 = sub_24525DD34;
      v149 = &block_descriptor_114;
      v113 = _Block_copy(&aBlock);
      swift_retain();
      v114 = v131;
      sub_245387938();
      v145 = (os_log_t)MEMORY[0x24BEE4AF8];
      sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
      sub_2452D53B0();
      v115 = v133;
      sub_245387E3C();
      MEMORY[0x2495320E4](0, v114, v115, v113);
      _Block_release(v113);
      (*(void (**)(_BYTE *, uint64_t))(v110 + 8))(v115, v108);
      (*(void (**)(_BYTE *, uint64_t))(v132 + 8))(v114, v109);
LABEL_22:
      swift_release();
LABEL_23:
      swift_release();
      return v139 == 1;
    }
    v61 = v138;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v37 + 32))(v138, v35, v36);
    if (qword_25744FD98 != -1)
      swift_once();
    LODWORD(v128) = a11;
    v62 = sub_245387818();
    __swift_project_value_buffer(v62, (uint64_t)qword_257462FC8);
    v63 = v142;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v143 + 16))(v30, v141, v142);
    v141 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v37 + 16);
    v141(v42, v61, v36);
    v64 = v36;
    v65 = v144;
    swift_retain_n();
    v66 = sub_2453877F4();
    v67 = sub_245387D1C();
    v68 = v67;
    v69 = os_log_type_enabled(v66, v67);
    v119 = v64;
    if (v69)
    {
      v70 = swift_slowAlloc();
      v122 = swift_slowAlloc();
      v145 = v65;
      aBlock = v122;
      *(_DWORD *)v70 = 136315650;
      v121 = v66;
      sub_2453878F0();
      v118 = v68;
      swift_retain();
      v71 = sub_245387B48();
      v145 = (os_log_t)sub_2453816D8(v71, v72, (uint64_t *)&aBlock);
      sub_245387E0C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v70 + 12) = 2082;
      sub_24525C6C4(&qword_257452C18, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v73 = v142;
      v74 = sub_2453880F4();
      v145 = (os_log_t)sub_2453816D8(v74, v75, (uint64_t *)&aBlock);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v143 + 8))(v30, v73);
      *(_WORD *)(v70 + 22) = 2082;
      v76 = v119;
      v141(v120, v42, v119);
      v77 = sub_245387B48();
      v63 = v78;
      v145 = (os_log_t)sub_2453816D8(v77, v78, (uint64_t *)&aBlock);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      v79 = *(NSObject **)(v37 + 8);
      ((void (*)(_BYTE *, uint64_t))v79)(v42, v76);
      v80 = v121;
      _os_log_impl(&dword_245256000, v121, (os_log_type_t)v118, "%s; Failed to send file %{public}s error: %{public}s",
        (uint8_t *)v70,
        0x20u);
      v66 = v122;
      swift_arrayDestroy();
      MEMORY[0x24953317C](v66, -1, -1);
      MEMORY[0x24953317C](v70, -1, -1);

    }
    else
    {
      swift_release_n();
      (*(void (**)(_BYTE *, unint64_t))(v143 + 8))(v30, v63);
      v79 = *(NSObject **)(v37 + 8);
      ((void (*)(_BYTE *, uint64_t))v79)(v42, v64);

    }
    v90 = v127;
    v91 = v126;
    v92 = v125;
    v93 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v125 + 16);
    v93(v137, v123, v127);
    v93(v91, v124, v90);
    v94 = (_DWORD)v128 + 1;
    if ((_DWORD)v128 == -1)
    {
      __break(1u);
    }
    else
    {
      v144 = v79;
      v63 = a12;
      LODWORD(v79) = a10;
      LOBYTE(v66) = a9;
      if (qword_257451C80 == -1)
      {
LABEL_18:
        v95 = __swift_project_value_buffer(v90, (uint64_t)qword_257463040);
        v93(v23, v95, v90);
        *(_DWORD *)&v23[v21[5]] = 72;
        v96 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v92 + 32);
        v96(&v23[v21[6]], v137, v90);
        v96(&v23[v21[7]], v91, v90);
        *(_DWORD *)&v23[v21[8]] = 0;
        v23[v21[9]] = 3;
        *(_DWORD *)&v23[v21[10]] = (_DWORD)v79;
        *(_DWORD *)&v23[v21[11]] = v94;
        v23[v21[12]] = (_BYTE)v66;
        v97 = sub_2452F1CA8();
        v99 = v98;
        v100 = v63;
        v101 = Strong;
        sub_2453032F8(v97, v98, v100);
        v143 = *(_QWORD *)(v101 + 32);
        v102 = swift_allocObject();
        v103 = v130;
        *(_QWORD *)(v102 + 16) = v129;
        *(_QWORD *)(v102 + 24) = v103;
        v150 = sub_2453175DC;
        v151 = v102;
        aBlock = MEMORY[0x24BDAC760];
        v147 = 1107296256;
        v148 = sub_24525DD34;
        v149 = &block_descriptor_120;
        v104 = _Block_copy(&aBlock);
        swift_retain();
        v105 = v131;
        sub_245387938();
        v145 = (os_log_t)MEMORY[0x24BEE4AF8];
        sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
        sub_2452D53B0();
        v106 = v133;
        v107 = v136;
        sub_245387E3C();
        MEMORY[0x2495320E4](0, v105, v106, v104);
        _Block_release(v104);
        sub_24525CB80(v97, v99);
        (*(void (**)(_BYTE *, uint64_t))(v134 + 8))(v106, v107);
        (*(void (**)(_BYTE *, uint64_t))(v132 + 8))(v105, v135);
        sub_2452B7B5C((uint64_t)v23, type metadata accessor for NetworkSyncHeader);
        ((void (*)(_BYTE *, uint64_t))v144)(v138, v119);
        goto LABEL_22;
      }
    }
    swift_once();
    goto LABEL_18;
  }
  result = sub_245387F80();
  __break(1u);
  return result;
}

void sub_24530769C(void (*a1)(void *, uint64_t), uint64_t a2, char a3)
{
  void *v5;
  _BYTE *v6;

  sub_245317164();
  v5 = (void *)swift_allocError();
  *v6 = a3;
  a1(v5, 1);

}

uint64_t sub_2453076F8(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v10 = sub_245387920();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v22 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_245387950();
  v14 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a3 + 32);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a4;
  *(_QWORD *)(v17 + 24) = a5;
  *(_QWORD *)(v17 + 32) = a1;
  a2 &= 1u;
  *(_BYTE *)(v17 + 40) = a2;
  aBlock[4] = sub_2453176F0;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525DD34;
  aBlock[3] = &block_descriptor_141;
  v18 = _Block_copy(aBlock);
  sub_245317690(a4);
  sub_245263EDC(a1, a2);
  sub_245387938();
  v23 = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_25744FF00, v11, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_2452D53B0();
  sub_245387E3C();
  MEMORY[0x2495320E4](0, v16, v13, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v21);
  return swift_release();
}

void sub_245307900(void (*a1)(void *, uint64_t), uint64_t a2, void *a3, char a4)
{
  if (a1)
  {
    if ((a4 & 1) != 0)
    {
      sub_245317690((uint64_t)a1);
      sub_245263EDC(a3, 1);
      a1(a3, 1);
      sub_2453175F8((uint64_t)a1);
      sub_245263EE8(a3, 1);
    }
    else
    {
      swift_retain();
      a1((void *)1, 0);
      sub_2453175F8((uint64_t)a1);
    }
  }
}

uint64_t sub_2453079A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t result;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v2 = v1;
  v4 = sub_2453876EC();
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452C40);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v39 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452C48);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (uint64_t *)((char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_2453879D4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char **)((char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = *(void **)(v2 + 24);
  *v19 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x24BEE5610], v16);
  v21 = v20;
  LOBYTE(v20) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) != 0)
  {
    v23 = (uint64_t *)(v2 + 56);
    swift_beginAccess();
    swift_unknownObjectRetain();
    v24 = swift_bridgeObjectRetain();
    sub_2452FA91C(v24, a1, (uint64_t)v15);
    swift_bridgeObjectRelease();
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452C50);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v15, 1, v25) == 1)
    {
      v26 = &qword_257452C48;
      v27 = (uint64_t)v15;
    }
    else
    {
      v28 = *v15;
      v29 = v15[1];
      sub_2452B7B5C((uint64_t)v15 + *(int *)(v25 + 48), type metadata accessor for NetworkMessenger.ExpiringConnection);
      swift_beginAccess();
      v30 = *v23;
      if (*(_QWORD *)(*v23 + 16))
      {
        swift_bridgeObjectRetain();
        v31 = sub_2452C1D98(v28, v29);
        if ((v32 & 1) != 0)
        {
          v33 = v31;
          v34 = *(_QWORD *)(v30 + 56);
          v35 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
          v39 = v6;
          v36 = v28;
          v37 = *(_QWORD *)(v35 - 8);
          sub_2452B792C(v34 + *(_QWORD *)(v37 + 72) * v33, (uint64_t)v12, type metadata accessor for NetworkMessenger.ExpiringConnection);
          v38 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56);
          v28 = v36;
          v6 = v39;
          v38(v12, 0, 1, v35);
        }
        else
        {
          v35 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v12, 1, 1, v35);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v35 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v12, 1, 1, v35);
      }
      swift_endAccess();
      type metadata accessor for NetworkMessenger.ExpiringConnection(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v12, 1, v35))
      {
        sub_2453876C8();
        (*(void (**)(char *, char *, uint64_t))(v40 + 40))(&v12[*(int *)(v35 + 20)], v6, v41);
      }
      sub_2452BC89C((uint64_t)v12, (uint64_t)v10, &qword_257452C40);
      swift_beginAccess();
      sub_24531C5EC((uint64_t)v10, v28, v29);
      swift_endAccess();
      v27 = (uint64_t)v12;
      v26 = &qword_257452C40;
    }
    sub_245263F80(v27, v26);
    sub_245314574();
    return sub_245314AC8();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_245307D64(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  _QWORD *v16;
  void *v17;
  nw_content_context_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v20 = sub_24538798C();
  v12 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_245387974();
  v15 = sub_24538795C();
  v19 = (nw_content_context_t)*MEMORY[0x24BDE0850];
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a4;
  v16[3] = a3;
  v16[4] = a5;
  v16[5] = a6;
  v16[6] = a7;
  aBlock[4] = sub_245317798;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_245308370;
  aBlock[3] = &block_descriptor_153;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  sub_245317690(a6);
  swift_release();
  nw_connection_send(a3, v15, v19, 1, v17);
  _Block_release(v17);

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v20);
}

void sub_245307EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  _BYTE *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  sub_2453079A8(a3);
  if (!a1)
  {
    if (qword_25744FD98 != -1)
      swift_once();
    v19 = sub_245387818();
    __swift_project_value_buffer(v19, (uint64_t)qword_257462FC8);
    swift_unknownObjectRetain_n();
    v20 = sub_2453877F4();
    v21 = sub_245387D34();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v23 = swift_slowAlloc();
      v26 = v23;
      *(_DWORD *)v22 = 134349314;
      sub_245387E0C();
      *(_WORD *)(v22 + 12) = 2082;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
      v24 = sub_245387B48();
      sub_2453816D8(v24, v25, &v26);
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v20, v21, "Data (sendID:%{public}llu) sent to: %{public}s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v23, -1, -1);
      MEMORY[0x24953317C](v22, -1, -1);

      if (!a5)
        return;
    }
    else
    {

      swift_unknownObjectRelease_n();
      if (!a5)
        return;
    }
    a5(1, 0);
    return;
  }
  v7 = qword_25744FD98;
  swift_unknownObjectRetain();
  if (v7 != -1)
    swift_once();
  v8 = sub_245387818();
  __swift_project_value_buffer(v8, (uint64_t)qword_257462FC8);
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  v9 = sub_2453877F4();
  v10 = sub_245387D1C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v26 = v12;
    *(_DWORD *)v11 = 134349570;
    sub_245387E0C();
    *(_WORD *)(v11 + 12) = 2082;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C38);
    v13 = sub_245387B48();
    sub_2453816D8(v13, v14, &v26);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 22) = 2082;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
    v15 = sub_245387B48();
    sub_2453816D8(v15, v16, &v26);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v9, v10, "Failed to send message data (sendID:%{public}llu): %{public}s to %{public}s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v12, -1, -1);
    MEMORY[0x24953317C](v11, -1, -1);

    if (a5)
    {
LABEL_6:
      sub_2453177A8();
      v17 = (void *)swift_allocError();
      *v18 = 0;
      a5((uint64_t)v17, 1);
      swift_unknownObjectRelease();

      return;
    }
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();
    if (a5)
      goto LABEL_6;
  }
  swift_unknownObjectRelease();
}

uint64_t sub_245308370(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_2453083B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t result;
  _QWORD v12[6];

  v7 = *(NSObject **)(a3 + 24);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a4;
  *(_QWORD *)(v8 + 24) = a5;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_245316910;
  *(_QWORD *)(v9 + 24) = v8;
  v12[4] = sub_2452643B4;
  v12[5] = v9;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_24525B888;
  v12[3] = &block_descriptor_24_1;
  v10 = _Block_copy(v12);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v7, v10);
  _Block_release(v10);
  LOBYTE(a5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((a5 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_2453084E4(NSObject *a1, uint64_t a2, uint64_t *p_aBlock)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  nw_connection_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  nw_connection_t *v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  nw_connection_t *v80;
  NSObject **v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  _QWORD *v86;
  uint64_t v87;
  void *v88;
  NSObject **v89;
  uint64_t v90;
  uint64_t v91;
  NSObject **v92;
  uint64_t id;
  NSObject *v94;
  void *v95;
  char *v96;
  NSObject *v97;
  nw_connection_t *v98;
  uint64_t v99;
  uint64_t v100;
  NSObject **v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t aBlock;
  uint64_t v109;
  uint64_t (*v110)(uint64_t);
  void *v111;
  uint64_t (*v112)();
  char *v113;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452C40);
  v6 = MEMORY[0x24BDAC7A8](v5);
  isEscapingClosureAtFileLocation = (uint64_t)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v104 = (char *)&v96 - v9;
  v10 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
  v105 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = ((char *)&v96 - v15);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (nw_connection_t *)((char *)&v96 - v17);
  v19 = sub_245387740();
  v99 = *(_QWORD *)(v19 - 8);
  v100 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v23 = result;
  v96 = v13;
  v102 = v10;
  if (qword_25744FD98 != -1)
    goto LABEL_38;
  while (1)
  {
    v24 = sub_245387818();
    v25 = __swift_project_value_buffer(v24, (uint64_t)qword_257462FC8);
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain_n();
    v103 = v25;
    v26 = sub_2453877F4();
    v27 = sub_245387D34();
    v28 = os_log_type_enabled(v26, v27);
    v97 = v16;
    v98 = v18;
    v101 = (NSObject **)isEscapingClosureAtFileLocation;
    if (v28)
    {
      v29 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      v106 = v23;
      v107 = v30;
      v31 = v30;
      *(_DWORD *)v29 = 136446722;
      aBlock = (uint64_t)p_aBlock;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450040);
      v32 = sub_245387B48();
      aBlock = sub_2453816D8(v32, v33, &v107);
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2082;
      aBlock = (uint64_t)a1;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
      p_aBlock = &aBlock;
      v34 = sub_245387B48();
      aBlock = sub_2453816D8(v34, v35, &v107);
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 22) = 2082;
      swift_getObjectType();
      aBlock = sub_245309390();
      v109 = v36;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257451B90);
      v37 = sub_245387B48();
      aBlock = sub_2453816D8(v37, v38, &v107);
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v26, v27, "%{public}s; Received new connection: %{public}s; DeviceID: %{public}s",
        (uint8_t *)v29,
        0x20u);
      swift_arrayDestroy();
      v39 = v31;
      v23 = v106;
      MEMORY[0x24953317C](v39, -1, -1);
      MEMORY[0x24953317C](v29, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
      swift_unknownObjectRelease_n();
    }
    swift_getObjectType();
    v106 = sub_245309390();
    if (v40)
    {
      v41 = v40;
      goto LABEL_10;
    }
    if (*(_BYTE *)(v23 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType) == 1)
      break;
    v106 = v23;
    sub_245387734();
    v71 = sub_245387704();
    v73 = v72;
    (*(void (**)(char *, uint64_t))(v99 + 8))(v21, v100);
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v74 = sub_2453877F4();
    v75 = sub_245387D34();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = swift_slowAlloc();
      v77 = swift_slowAlloc();
      v107 = (uint64_t)a1;
      aBlock = v77;
      *(_DWORD *)v76 = 136446466;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
      v78 = sub_245387B48();
      v107 = sub_2453816D8(v78, v79, &aBlock);
      p_aBlock = &aBlock;
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v76 + 12) = 2082;
      swift_bridgeObjectRetain();
      v107 = sub_2453816D8(v71, v73, &aBlock);
      sub_245387E0C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_245256000, v74, v75, "Unable to get DeviceID from connection: %{public}s; Using uuidString %{public}s instead",
        (uint8_t *)v76,
        0x16u);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v77, -1, -1);
      MEMORY[0x24953317C](v76, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_unknownObjectRelease_n();
    }
    v89 = v101;
    v90 = v102;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_2453876C8();
    *v89 = a1;
    (*(void (**)(NSObject **, _QWORD, uint64_t, uint64_t))(v105 + 56))(v89, 0, 1, v90);
    v91 = v106;
    swift_beginAccess();
    sub_24531C5EC((uint64_t)v89, v71, v73);
    swift_endAccess();
    v92 = *(NSObject ***)(v91 + 112);
    swift_retain();
    id = nw_connection_get_id();
    v16 = v92[2];
    v94 = swift_allocObject();
    v94[2].isa = (Class)v71;
    v94[3].isa = (Class)v73;
    v23 = v91;
    v94[4].isa = (Class)id;
    v94[5].isa = (Class)v92;
    v18 = (nw_connection_t *)swift_allocObject();
    v18[2] = (nw_connection_t)sub_2453199CC;
    v18[3] = v94;
    v112 = sub_2452643B4;
    v113 = (char *)v18;
    aBlock = MEMORY[0x24BDAC760];
    v109 = 1107296256;
    v110 = sub_24525B888;
    v111 = &block_descriptor_312;
    v95 = _Block_copy(&aBlock);
    v21 = v113;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v16, v95);
    _Block_release(v95);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      goto LABEL_33;
    __break(1u);
LABEL_38:
    swift_once();
  }
  v42 = *(_QWORD *)(v23 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_terminusRemoteDeviceIDLock);
  os_unfair_lock_lock((os_unfair_lock_t)(v42 + 32));
  v41 = *(_QWORD *)(v42 + 24);
  v106 = *(_QWORD *)(v42 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v42 + 32));
LABEL_10:
  swift_unknownObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v43 = sub_2453877F4();
  v44 = sub_245387D34();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = swift_slowAlloc();
    v46 = swift_slowAlloc();
    aBlock = v46;
    *(_DWORD *)v45 = 136446722;
    if (*(_BYTE *)(v23 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType))
      v47 = 0xD000000000000016;
    else
      v47 = 0x6920656369766544;
    if (*(_BYTE *)(v23 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType))
      v48 = 0x8000000245394790;
    else
      v48 = 0xE900000000000064;
    v107 = sub_2453816D8(v47, v48, &aBlock);
    sub_245387E0C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 12) = 2082;
    swift_bridgeObjectRetain();
    v107 = sub_2453816D8(v106, v41, &aBlock);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v45 + 22) = 2082;
    v107 = (uint64_t)a1;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
    v49 = sub_245387B48();
    v107 = sub_2453816D8(v49, v50, &aBlock);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v43, v44, "%{public}s %{public}s will be used for connection: %{public}s", (uint8_t *)v45, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v46, -1, -1);
    MEMORY[0x24953317C](v45, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v51 = v102;
  v52 = (uint64_t)v104;
  swift_beginAccess();
  v53 = *(_QWORD *)(v23 + 56);
  if (*(_QWORD *)(v53 + 16))
  {
    swift_bridgeObjectRetain();
    v54 = sub_2452C1D98(v106, v41);
    if ((v55 & 1) != 0)
    {
      v56 = *(_QWORD *)(v53 + 56);
      v57 = v105;
      sub_2452B792C(v56 + *(_QWORD *)(v105 + 72) * v54, v52, type metadata accessor for NetworkMessenger.ExpiringConnection);
      v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56);
      v58(v52, 0, 1, v51);
    }
    else
    {
      v57 = v105;
      v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56);
      v58(v52, 1, 1, v51);
    }
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v52, 1, v51) != 1)
    {
      v59 = v52;
      v60 = v98;
      sub_2452B7AB8(v59, (uint64_t)v98, type metadata accessor for NetworkMessenger.ExpiringConnection);
      swift_endAccess();
      v61 = (uint64_t)v60;
      v62 = (uint64_t)v97;
      sub_2452B792C(v61, (uint64_t)v97, type metadata accessor for NetworkMessenger.ExpiringConnection);
      swift_bridgeObjectRetain_n();
      v63 = sub_2453877F4();
      v64 = sub_245387D34();
      v65 = v64;
      if (os_log_type_enabled(v63, v64))
      {
        v66 = swift_slowAlloc();
        LODWORD(v104) = v65;
        v67 = v66;
        v105 = swift_slowAlloc();
        aBlock = v105;
        *(_DWORD *)v67 = 136446466;
        v103 = v67 + 4;
        sub_2452B792C(v62, (uint64_t)v96, type metadata accessor for NetworkMessenger.ExpiringConnection);
        v68 = sub_245387B48();
        v107 = sub_2453816D8(v68, v69, &aBlock);
        sub_245387E0C();
        v51 = v102;
        swift_bridgeObjectRelease();
        sub_2452B7B5C(v62, type metadata accessor for NetworkMessenger.ExpiringConnection);
        *(_WORD *)(v67 + 12) = 2082;
        swift_bridgeObjectRetain();
        v107 = sub_2453816D8(v106, v41, &aBlock);
        sub_245387E0C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_245256000, v63, (os_log_type_t)v104, "Canceling existing connection %{public}s for DeviceID %{public}s", (uint8_t *)v67, 0x16u);
        v70 = v105;
        swift_arrayDestroy();
        MEMORY[0x24953317C](v70, -1, -1);
        MEMORY[0x24953317C](v67, -1, -1);

      }
      else
      {
        sub_2452B7B5C(v62, type metadata accessor for NetworkMessenger.ExpiringConnection);

        swift_bridgeObjectRelease_n();
      }
      v80 = v98;
      nw_connection_cancel(*v98);
      sub_2452B7B5C((uint64_t)v80, type metadata accessor for NetworkMessenger.ExpiringConnection);
      goto LABEL_32;
    }
  }
  else
  {
    v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56);
    v58(v52, 1, 1, v51);
  }
  sub_245263F80(v52, &qword_257452C40);
  swift_endAccess();
LABEL_32:
  v81 = v101;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_2453876C8();
  *v81 = a1;
  v58((uint64_t)v81, 0, 1, v51);
  swift_beginAccess();
  v82 = v106;
  sub_24531C5EC((uint64_t)v81, v106, v41);
  swift_endAccess();
  v83 = *(_QWORD *)(v23 + 112);
  swift_retain();
  v84 = nw_connection_get_id();
  v85 = *(NSObject **)(v83 + 16);
  v86 = (_QWORD *)swift_allocObject();
  v86[2] = v82;
  v86[3] = v41;
  v86[4] = v84;
  v86[5] = v83;
  v87 = swift_allocObject();
  *(_QWORD *)(v87 + 16) = sub_2453199CC;
  *(_QWORD *)(v87 + 24) = v86;
  v112 = sub_2452643B4;
  v113 = (char *)v87;
  aBlock = MEMORY[0x24BDAC760];
  v109 = 1107296256;
  v110 = sub_24525B888;
  v111 = &block_descriptor_323;
  v88 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v85, v88);
  _Block_release(v88);
  LOBYTE(v88) = swift_isEscapingClosureAtFileLocation();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v88 & 1) == 0)
  {
LABEL_33:
    sub_245318018(a1);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_245309390()
{
  NSObject *v0;
  uint64_t v1;

  nw_connection_copy_endpoint(v0);
  if (nw_endpoint_get_device_id())
  {
    v1 = sub_245387B9C();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return v1;
}

void sub_2453093F4(int a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v3 = 0x25744F000uLL;
  if (a1 == 2)
  {
    if (qword_25744FD98 != -1)
      swift_once();
    v4 = sub_245387818();
    __swift_project_value_buffer(v4, (uint64_t)qword_257462FC8);
    swift_unknownObjectRetain_n();
    v5 = sub_2453877F4();
    v6 = sub_245387D34();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v31 = v8;
      *(_DWORD *)v7 = 136446210;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450040);
      v9 = sub_245387B48();
      sub_2453816D8(v9, v10, &v31);
      v3 = 0x25744F000;
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v5, v6, "%{public}s; Listener is ready", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v8, -1, -1);
      v11 = (uint64_t)v7;
      goto LABEL_10;
    }
  }
  else
  {
    if (qword_25744FD98 != -1)
      swift_once();
    v12 = sub_245387818();
    __swift_project_value_buffer(v12, (uint64_t)qword_257462FC8);
    swift_unknownObjectRetain_n();
    v5 = sub_2453877F4();
    v13 = sub_245387D04();
    if (os_log_type_enabled(v5, v13))
    {
      v14 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v31 = v15;
      *(_DWORD *)v14 = 136446466;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450040);
      v16 = sub_245387B48();
      sub_2453816D8(v16, v17, &v31);
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2082;
      type metadata accessor for nw_listener_state_t(0);
      v18 = sub_245387B48();
      sub_2453816D8(v18, v19, &v31);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v5, v13, "%{public}s; Listener state changed to %{public}s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      v20 = v15;
      v3 = 0x25744F000;
      MEMORY[0x24953317C](v20, -1, -1);
      v11 = v14;
LABEL_10:
      MEMORY[0x24953317C](v11, -1, -1);

      if (!a2)
        return;
      goto LABEL_13;
    }
  }

  swift_unknownObjectRelease_n();
  if (!a2)
    return;
LABEL_13:
  v21 = *(_QWORD *)(v3 + 3480);
  swift_unknownObjectRetain();
  if (v21 != -1)
    swift_once();
  v22 = sub_245387818();
  __swift_project_value_buffer(v22, (uint64_t)qword_257462FC8);
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  v23 = sub_2453877F4();
  v24 = sub_245387D1C();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    v31 = v26;
    *(_DWORD *)v25 = 136446466;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450040);
    v27 = sub_245387B48();
    sub_2453816D8(v27, v28, &v31);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C38);
    v29 = sub_245387B48();
    sub_2453816D8(v29, v30, &v31);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v23, v24, "%{public}s; Listener failed with error: %{public}s",
      (uint8_t *)v25,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v26, -1, -1);
    MEMORY[0x24953317C](v25, -1, -1);
    swift_unknownObjectRelease();

  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();
  }
}

void sub_245309970()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;

  v1 = sub_2453879D4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (uint64_t *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (void *)v0[3];
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  LOBYTE(v5) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_7;
  }
  swift_beginAccess();
  if (*(_QWORD *)(v0[7] + 16))
    return;
  v7 = (void *)v0[12];
  if (!v7)
    return;
  objc_msgSend(v7, sel_invalidate);
  v8 = (void *)v0[12];
  v0[12] = 0;

  if (v0[13])
  {
    swift_retain();
    sub_2452F56D8();
    swift_release();
  }
  if (qword_25744FD98 != -1)
    goto LABEL_12;
LABEL_7:
  v9 = sub_245387818();
  __swift_project_value_buffer(v9, (uint64_t)qword_257462FC8);
  v10 = sub_2453877F4();
  v11 = sub_245387D34();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_245256000, v10, v11, "Invalidated prevent-sleep assertion", v12, 2u);
    MEMORY[0x24953317C](v12, -1, -1);
  }

}

void sub_245309B2C(NSObject *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  v3 = sub_2453879D4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (_QWORD *)((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(v1 + 24);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE5610], v3);
  v8 = v7;
  LOBYTE(v7) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) != 0)
  {
    v9 = swift_allocObject();
    swift_weakInit();
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v9;
    *(_QWORD *)(v10 + 24) = a1;
    aBlock[4] = sub_245318E48;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24530CA98;
    aBlock[3] = &block_descriptor_240_0;
    v11 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    swift_release();
    nw_connection_receive(a1, 0x14u, 0x14u, v11);
    _Block_release(v11);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_245309C94(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, NSObject *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  id v40;
  void *v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  id v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int v80;
  NSObject *v81;
  os_log_type_t v82;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  os_log_type_t v93;
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  id v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t aBlock;
  unint64_t v123;
  void (*v124)(uint64_t, void *, uint64_t, uint64_t, uint64_t);
  void *v125;
  uint64_t (*v126)(void *, uint64_t, int, uint64_t);
  uint64_t v127;
  uint64_t v128[6];

  v111 = a3;
  v120 = a2;
  v128[4] = *MEMORY[0x24BDAC8D0];
  v9 = type metadata accessor for NetworkSyncHeaderPreamble(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v114 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v103 - v12;
  v14 = sub_24538798C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v113 = (char *)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_245387818();
  v116 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v119 = (char *)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v20 = result;
  v108 = v15;
  v109 = v14;
  if (qword_25744FD98 != -1)
    swift_once();
  v21 = __swift_project_value_buffer(v17, (uint64_t)qword_257462FC8);
  swift_unknownObjectRetain_n();
  v22 = sub_2453877F4();
  v23 = sub_245387D34();
  v24 = os_log_type_enabled(v22, v23);
  v115 = v20;
  v117 = a1;
  v118 = v21;
  v107 = v13;
  v106 = v9;
  if (v24)
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    aBlock = v26;
    *(_DWORD *)v25 = 136446210;
    v128[0] = (uint64_t)a6;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
    v27 = sub_245387B48();
    v128[0] = sub_2453816D8(v27, v28, &aBlock);
    a1 = v117;
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v22, v23, "Received header preamble from: %{public}s", v25, 0xCu);
    swift_arrayDestroy();
    v29 = v26;
    v21 = v118;
    MEMORY[0x24953317C](v29, -1, -1);
    MEMORY[0x24953317C](v25, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  v30 = a1;
  swift_unknownObjectRetain_n();
  v31 = v30;
  v32 = sub_2453877F4();
  v33 = sub_245387D34();
  v34 = os_log_type_enabled(v32, v33);
  v110 = v17;
  v112 = v31;
  if (!v34)
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();

    swift_unknownObjectRelease_n();
    if (a4)
      goto LABEL_14;
LABEL_16:
    v58 = v120;
    if (!v120)
      goto LABEL_21;
    goto LABEL_19;
  }
  v105 = a4;
  v35 = swift_slowAlloc();
  v103 = (_QWORD *)swift_slowAlloc();
  v36 = swift_slowAlloc();
  aBlock = v36;
  *(_DWORD *)v35 = 136447234;
  v128[0] = (uint64_t)a6;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
  v37 = sub_245387B48();
  v128[0] = sub_2453816D8(v37, v38, &aBlock);
  sub_245387E0C();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v35 + 12) = 2112;
  v104 = v36;
  if (a1)
  {
    v39 = v112;
    v128[0] = (uint64_t)v112;
    v40 = v112;
    sub_245387E0C();
  }
  else
  {
    v128[0] = 0;
    sub_245387E0C();
    v39 = v112;
  }
  v41 = v117;
  v42 = v103;
  *v103 = v117;

  *(_WORD *)(v35 + 22) = 2080;
  v128[0] = v120;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C80);
  v43 = sub_245387B48();
  v128[0] = sub_2453816D8(v43, v44, &aBlock);
  sub_245387E0C();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v35 + 32) = 1024;
  LODWORD(v128[0]) = v111 & 1;
  sub_245387E0C();
  *(_WORD *)(v35 + 38) = 2080;
  v45 = v105;
  v128[0] = v105;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C88);
  v46 = sub_245387B48();
  v128[0] = sub_2453816D8(v46, v47, &aBlock);
  sub_245387E0C();
  swift_unknownObjectRelease_n();
  a1 = v41;
  a4 = v45;
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_245256000, v32, v33, "%{public}s; Parameters: content: %@, context: %s, isComplete: %{BOOL}d, error: %s",
    (uint8_t *)v35,
    0x30u);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
  swift_arrayDestroy();
  MEMORY[0x24953317C](v42, -1, -1);
  v48 = v104;
  swift_arrayDestroy();
  MEMORY[0x24953317C](v48, -1, -1);
  MEMORY[0x24953317C](v35, -1, -1);

  v17 = v110;
  v21 = v118;
  if (!v45)
    goto LABEL_16;
LABEL_14:
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  v49 = sub_2453877F4();
  v50 = sub_245387D1C();
  if (os_log_type_enabled(v49, v50))
  {
    v51 = swift_slowAlloc();
    v52 = swift_slowAlloc();
    aBlock = v52;
    *(_DWORD *)v51 = 136446466;
    v128[0] = (uint64_t)a6;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
    v53 = sub_245387B48();
    v128[0] = sub_2453816D8(v53, v54, &aBlock);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 12) = 2082;
    v128[0] = a4;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C38);
    v55 = sub_245387B48();
    v128[0] = sub_2453816D8(v55, v56, &aBlock);
    v21 = v118;
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    a1 = v117;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v49, v50, "%{public}s; Received error: %{public}s", (uint8_t *)v51, 0x16u);
    swift_arrayDestroy();
    v57 = v52;
    v17 = v110;
    MEMORY[0x24953317C](v57, -1, -1);
    MEMORY[0x24953317C](v51, -1, -1);
    swift_unknownObjectRelease();

    goto LABEL_16;
  }

  swift_unknownObjectRelease_n();
  swift_unknownObjectRelease_n();
  v58 = v120;
  if (!v120)
    goto LABEL_21;
LABEL_19:
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  v59 = sub_2453877F4();
  v60 = sub_245387D34();
  if (!os_log_type_enabled(v59, v60))
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();
    if (a1)
    {
LABEL_22:
      v67 = v113;
      sub_245387968();
      v68 = v112;
      v69 = sub_245387980();
      aBlock = sub_245318E50(v69);
      v123 = v70;
      MEMORY[0x24BDAC7A8](aBlock);
      *(&v103 - 2) = v67;
      sub_245316634();
      (*(void (**)(_QWORD *, uint64_t))(v108 + 8))(v67, v109);
      v71 = aBlock;
      v72 = v123;
      sub_245261C44(aBlock, v123);
      v73 = v114;
      sub_2452F2A0C(v71, v72);
      v78 = (uint64_t)v73;
      v79 = (uint64_t)v107;
      sub_2452B7AB8(v78, (uint64_t)v107, type metadata accessor for NetworkSyncHeaderPreamble);
      v80 = *(_DWORD *)(v79 + *(int *)(v106 + 20));
      swift_unknownObjectRetain_n();
      v81 = sub_2453877F4();
      v82 = sub_245387D34();
      if (os_log_type_enabled(v81, v82))
      {
        v84 = swift_slowAlloc();
        v85 = swift_slowAlloc();
        v120 = v71;
        v86 = v68;
        v87 = v85;
        aBlock = v85;
        *(_DWORD *)v84 = 136446466;
        LODWORD(v128[0]) = v80;
        v88 = sub_2453880F4();
        v128[0] = sub_2453816D8(v88, v89, &aBlock);
        sub_245387E0C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v84 + 12) = 2082;
        v128[0] = (uint64_t)a6;
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
        v90 = sub_245387B48();
        v128[0] = sub_2453816D8(v90, v91, &aBlock);
        sub_245387E0C();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_245256000, v81, v82, "Expecting header with length %{public}s from %{public}s", (uint8_t *)v84, 0x16u);
        swift_arrayDestroy();
        v92 = v87;
        v68 = v86;
        v71 = v120;
        MEMORY[0x24953317C](v92, -1, -1);
        MEMORY[0x24953317C](v84, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      if (v80 < 0x14)
        __break(1u);
      sub_2453079A8((uint64_t)a6);
      v100 = swift_allocObject();
      swift_weakInit();
      v101 = swift_allocObject();
      *(_QWORD *)(v101 + 16) = v100;
      *(_QWORD *)(v101 + 24) = a6;
      *(_DWORD *)(v101 + 32) = v80;
      v126 = sub_245318F08;
      v127 = v101;
      aBlock = MEMORY[0x24BDAC760];
      v123 = 1107296256;
      v124 = sub_24530CA98;
      v125 = &block_descriptor_247;
      v102 = _Block_copy(&aBlock);
      swift_unknownObjectRetain();
      swift_release();
      nw_connection_receive(a6, v80 - 20, v80 - 20, v102);
      _Block_release(v102);
      swift_release();
      sub_24525CB80(v71, v72);

      return sub_2452B7B5C((uint64_t)v107, type metadata accessor for NetworkSyncHeaderPreamble);
    }
    goto LABEL_24;
  }
  v61 = swift_slowAlloc();
  v62 = swift_slowAlloc();
  aBlock = v62;
  *(_DWORD *)v61 = 136446466;
  v128[0] = (uint64_t)a6;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
  v63 = sub_245387B48();
  v128[0] = sub_2453816D8(v63, v64, &aBlock);
  sub_245387E0C();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v61 + 12) = 2082;
  v128[0] = v58;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C78);
  v65 = sub_245387B48();
  v128[0] = sub_2453816D8(v65, v66, &aBlock);
  v21 = v118;
  sub_245387E0C();
  swift_unknownObjectRelease_n();
  a1 = v117;
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_245256000, v59, v60, "%{public}s; Received context: %{public}s", (uint8_t *)v61, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x24953317C](v62, -1, -1);
  MEMORY[0x24953317C](v61, -1, -1);
  swift_unknownObjectRelease();

LABEL_21:
  if (a1)
    goto LABEL_22;
LABEL_24:
  (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v119, v21, v17);
  v74 = swift_beginAccess();
  MEMORY[0x24BDAC7A8](v74);
  *(&v103 - 2) = &a6->isa;
  v75 = swift_bridgeObjectRetain();
  v76 = sub_2453177EC(v75, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2453199C4);
  swift_bridgeObjectRelease();
  if ((v76 & 1) != 0)
    v77 = sub_245387D1C();
  else
    v77 = sub_245387D04();
  v93 = v77;
  swift_unknownObjectRetain_n();
  v94 = sub_2453877F4();
  v95 = v93;
  if (os_log_type_enabled(v94, v93))
  {
    v96 = (uint8_t *)swift_slowAlloc();
    v97 = swift_slowAlloc();
    v128[0] = v97;
    *(_DWORD *)v96 = 136446210;
    v121 = (uint64_t)a6;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
    v98 = sub_245387B48();
    v121 = sub_2453816D8(v98, v99, v128);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v94, v95, "Received nil instead of header length; destroying connection %{public}s",
      v96,
      0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v97, -1, -1);
    MEMORY[0x24953317C](v96, -1, -1);

    (*(void (**)(char *, uint64_t))(v116 + 8))(v119, v110);
  }
  else
  {

    swift_unknownObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v116 + 8))(v119, v17);
  }
  sub_2452FEC94(a6);
  return swift_release();
}

uint64_t sub_24530AEA8(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, NSObject *a6, int a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  id v34;
  NSObject *v35;
  uint64_t v36;
  os_log_type_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  os_log_type_t v50;
  os_log_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  NSObject *v69;
  id v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  os_log_type_t v91;
  os_log_type_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  os_log_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  int v103;
  id v104;
  char *v105;
  uint64_t v106;
  char *v107;
  NSObject *v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;

  v111 = a7;
  v122 = *MEMORY[0x24BDAC8D0];
  v12 = type metadata accessor for NetworkSyncHeader(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v99 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v99 - v19;
  v21 = sub_24538798C();
  v109 = *(_QWORD *)(v21 - 8);
  v110 = v21;
  MEMORY[0x24BDAC7A8](v21);
  v108 = ((char *)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v115 = sub_245387818();
  v112 = *(_QWORD *)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115);
  v107 = (char *)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  v116 = result;
  if (!result)
    return result;
  v105 = v18;
  if (qword_25744FD98 != -1)
    swift_once();
  v25 = __swift_project_value_buffer(v115, (uint64_t)qword_257462FC8);
  swift_unknownObjectRetain_n();
  v117 = (id)v25;
  v26 = sub_2453877F4();
  v27 = sub_245387D34();
  v28 = os_log_type_enabled(v26, v27);
  v113 = (uint64_t)a1;
  v114 = v20;
  v106 = v12;
  v102 = v15;
  v103 = a3;
  if (v28)
  {
    v29 = (uint8_t *)swift_slowAlloc();
    v30 = swift_slowAlloc();
    v119 = (uint64_t)a6;
    v120 = v30;
    *(_DWORD *)v29 = 136446210;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
    v31 = sub_245387B48();
    v119 = sub_2453816D8(v31, v32, &v120);
    a1 = (void *)v113;
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    v20 = v114;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v26, v27, "Received header from: %{public}s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v30, -1, -1);
    MEMORY[0x24953317C](v29, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  v33 = a1;
  swift_unknownObjectRetain_n();
  v34 = v33;
  v35 = sub_2453877F4();
  v36 = a4;
  v37 = sub_245387D34();
  if (!os_log_type_enabled(v35, v37))
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();

    swift_unknownObjectRelease_n();
    v43 = v36;
    if (v36)
      goto LABEL_14;
LABEL_16:
    if (!a2)
      goto LABEL_21;
    goto LABEL_19;
  }
  v99 = v35;
  v101 = v36;
  v38 = swift_slowAlloc();
  v39 = (_QWORD *)swift_slowAlloc();
  v100 = swift_slowAlloc();
  v119 = (uint64_t)a6;
  v120 = v100;
  *(_DWORD *)v38 = 136447234;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
  v40 = sub_245387B48();
  v119 = sub_2453816D8(v40, v41, &v120);
  sub_245387E0C();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v38 + 12) = 2112;
  if (a1)
  {
    v119 = (uint64_t)v34;
    v42 = v34;
  }
  else
  {
    v119 = 0;
  }
  sub_245387E0C();
  v44 = (void *)v113;
  *v39 = v113;

  *(_WORD *)(v38 + 22) = 2080;
  v119 = a2;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C80);
  v104 = v34;
  v45 = sub_245387B48();
  v119 = sub_2453816D8(v45, v46, &v120);
  sub_245387E0C();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v38 + 32) = 1024;
  LODWORD(v119) = v103 & 1;
  sub_245387E0C();
  *(_WORD *)(v38 + 38) = 2080;
  v47 = v101;
  v119 = v101;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C88);
  v48 = sub_245387B48();
  v119 = sub_2453816D8(v48, v49, &v120);
  sub_245387E0C();
  swift_unknownObjectRelease_n();
  a1 = v44;
  swift_bridgeObjectRelease();
  v50 = v37;
  v43 = v47;
  v34 = v104;
  v51 = v99;
  _os_log_impl(&dword_245256000, v99, v50, "%{public}s; Parameters: content: %@, context: %s, isComplete: %{BOOL}d, error: %s",
    (uint8_t *)v38,
    0x30u);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
  swift_arrayDestroy();
  MEMORY[0x24953317C](v39, -1, -1);
  v52 = v100;
  swift_arrayDestroy();
  MEMORY[0x24953317C](v52, -1, -1);
  MEMORY[0x24953317C](v38, -1, -1);

  v20 = v114;
  if (!v43)
    goto LABEL_16;
LABEL_14:
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  v53 = sub_2453877F4();
  v54 = sub_245387D1C();
  if (os_log_type_enabled(v53, v54))
  {
    v55 = swift_slowAlloc();
    v56 = swift_slowAlloc();
    v119 = (uint64_t)a6;
    v120 = v56;
    *(_DWORD *)v55 = 136446466;
    v104 = (id)a2;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
    v57 = sub_245387B48();
    v119 = sub_2453816D8(v57, v58, &v120);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 12) = 2082;
    v119 = v43;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C38);
    v59 = sub_245387B48();
    v119 = sub_2453816D8(v59, v60, &v120);
    v20 = v114;
    a2 = (uint64_t)v104;
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    a1 = (void *)v113;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v53, v54, "%{public}s; Received error: %{public}s", (uint8_t *)v55, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v56, -1, -1);
    MEMORY[0x24953317C](v55, -1, -1);
    swift_unknownObjectRelease();

    goto LABEL_16;
  }

  swift_unknownObjectRelease_n();
  swift_unknownObjectRelease_n();
  if (!a2)
    goto LABEL_21;
LABEL_19:
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  v61 = sub_2453877F4();
  v62 = sub_245387D34();
  if (!os_log_type_enabled(v61, v62))
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();
    if (a1)
      goto LABEL_22;
    goto LABEL_25;
  }
  v63 = swift_slowAlloc();
  v64 = swift_slowAlloc();
  v119 = (uint64_t)a6;
  v120 = v64;
  *(_DWORD *)v63 = 136446466;
  v104 = v34;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
  v65 = sub_245387B48();
  v119 = sub_2453816D8(v65, v66, &v120);
  sub_245387E0C();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v63 + 12) = 2082;
  v119 = a2;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C78);
  v67 = sub_245387B48();
  v119 = sub_2453816D8(v67, v68, &v120);
  a1 = (void *)v113;
  sub_245387E0C();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_245256000, v61, v62, "%{public}s; Received context: %{public}s", (uint8_t *)v63, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x24953317C](v64, -1, -1);
  MEMORY[0x24953317C](v63, -1, -1);
  v34 = v104;
  swift_unknownObjectRelease();

LABEL_21:
  if (a1)
  {
LABEL_22:
    v69 = v108;
    sub_245387968();
    v70 = v34;
    v71 = sub_245387980();
    v120 = sub_245318E50(v71);
    v121 = v72;
    MEMORY[0x24BDAC7A8](v120);
    *(&v99 - 2) = v69;
    sub_245316634();
    (*(void (**)(NSObject *, uint64_t))(v109 + 8))(v69, v110);
    v74 = v120;
    v73 = v121;
    sub_245261C44(v120, v121);
    sub_2452F14B0(v111, v74, v73);
    v75 = (uint64_t)v105;
    sub_2452B792C((uint64_t)v20, (uint64_t)v105, type metadata accessor for NetworkSyncHeader);
    swift_unknownObjectRetain_n();
    v76 = sub_2453877F4();
    v77 = sub_245387D34();
    if (os_log_type_enabled(v76, v77))
    {
      v78 = swift_slowAlloc();
      v115 = v74;
      v79 = v78;
      v113 = swift_slowAlloc();
      v119 = (uint64_t)a6;
      v120 = v113;
      *(_DWORD *)v79 = 136446466;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
      v117 = v70;
      v80 = sub_245387B48();
      v119 = sub_2453816D8(v80, v81, &v120);
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v79 + 12) = 2082;
      sub_2452B792C(v75, (uint64_t)v102, type metadata accessor for NetworkSyncHeader);
      v82 = v106;
      v83 = sub_245387B48();
      v119 = sub_2453816D8(v83, v84, &v120);
      v70 = v117;
      v20 = v114;
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_2452B7B5C(v75, type metadata accessor for NetworkSyncHeader);
      _os_log_impl(&dword_245256000, v76, v77, "%{public}s; Header: %{public}s", (uint8_t *)v79, 0x16u);
      v85 = v113;
      swift_arrayDestroy();
      MEMORY[0x24953317C](v85, -1, -1);
      v86 = v79;
      v74 = v115;
      MEMORY[0x24953317C](v86, -1, -1);

    }
    else
    {
      swift_unknownObjectRelease_n();
      sub_2452B7B5C(v75, type metadata accessor for NetworkSyncHeader);

      v82 = v106;
    }
    sub_2453079A8((uint64_t)a6);
    if (v20[*(int *)(v82 + 36)] == 1)
      sub_24530BE00((uint64_t)a6, (uint64_t)v20);
    else
      sub_24530C8A0(a6, (uint64_t)v20);
    swift_release();
    sub_24525CB80(v74, v73);

    return sub_2452B7B5C((uint64_t)v20, type metadata accessor for NetworkSyncHeader);
  }
LABEL_25:
  v87 = v107;
  (*(void (**)(char *, id, uint64_t))(v112 + 16))(v107, v117, v115);
  v88 = swift_beginAccess();
  MEMORY[0x24BDAC7A8](v88);
  *(&v99 - 2) = a6;
  v89 = swift_bridgeObjectRetain();
  v90 = sub_2453177EC(v89, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2453199C4);
  swift_bridgeObjectRelease();
  if ((v90 & 1) != 0)
    v91 = sub_245387D1C();
  else
    v91 = sub_245387D04();
  v92 = v91;
  swift_unknownObjectRetain_n();
  v93 = sub_2453877F4();
  v94 = v92;
  if (os_log_type_enabled(v93, v92))
  {
    v95 = (uint8_t *)swift_slowAlloc();
    v96 = swift_slowAlloc();
    v119 = v96;
    *(_DWORD *)v95 = 136446210;
    v118 = (uint64_t)a6;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
    v97 = sub_245387B48();
    v118 = sub_2453816D8(v97, v98, &v119);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v93, v94, "Received nil instead of header; destroying connection %{public}s",
      v95,
      0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v96, -1, -1);
    MEMORY[0x24953317C](v95, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v112 + 8))(v87, v115);
  sub_2452FEC94(a6);
  return swift_release();
}

void sub_24530BE00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v72 = a1;
  v4 = (int *)type metadata accessor for NetworkSyncHeader(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v71 = (uint64_t)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v69 = (uint64_t)&v65 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v67 = (uint64_t)&v65 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v66 = (uint64_t)&v65 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452CA8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v68 = (uint64_t)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2453879D4();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (uint64_t *)((char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v70 = v2;
  v22 = *(void **)(v2 + 24);
  *v21 = v22;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v19 + 104))(v21, *MEMORY[0x24BEE5610], v18);
  v23 = v22;
  LOBYTE(v22) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v19 + 8))(v21, v18);
  if ((v22 & 1) == 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  if (*(_DWORD *)(a2 + v4[10]) != 3)
  {
    if (qword_25744FD98 == -1)
    {
LABEL_10:
      v37 = sub_245387818();
      __swift_project_value_buffer(v37, (uint64_t)qword_257462FC8);
      v26 = v71;
      sub_2452B792C(a2, v71, type metadata accessor for NetworkSyncHeader);
      v38 = v72;
      swift_unknownObjectRetain_n();
      v28 = sub_2453877F4();
      v39 = sub_245387D34();
      if (!os_log_type_enabled(v28, v39))
        goto LABEL_18;
      v30 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v73 = v38;
      v74 = v40;
      *(_DWORD *)v30 = 136446466;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
      v41 = sub_245387B48();
      v73 = sub_2453816D8(v41, v42, &v74);
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2082;
      sub_245387740();
      sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v43 = sub_2453880F4();
      v73 = sub_2453816D8(v43, v44, &v74);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_2452B7B5C(v26, type metadata accessor for NetworkSyncHeader);
      v45 = "%{public}s; Received unexpected sequence count for file: %{public}s";
LABEL_16:
      _os_log_impl(&dword_245256000, v28, v39, v45, (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      v36 = v40;
      goto LABEL_17;
    }
LABEL_31:
    swift_once();
    goto LABEL_10;
  }
  if (*(_DWORD *)(a2 + v4[11]) != 2)
  {
    if (qword_25744FD98 != -1)
      swift_once();
    v46 = sub_245387818();
    __swift_project_value_buffer(v46, (uint64_t)qword_257462FC8);
    v26 = v69;
    sub_2452B792C(a2, v69, type metadata accessor for NetworkSyncHeader);
    v47 = v72;
    swift_unknownObjectRetain_n();
    v28 = sub_2453877F4();
    v39 = sub_245387D34();
    if (!os_log_type_enabled(v28, v39))
      goto LABEL_18;
    v30 = swift_slowAlloc();
    v40 = swift_slowAlloc();
    v73 = v47;
    v74 = v40;
    *(_DWORD *)v30 = 136446466;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
    v48 = sub_245387B48();
    v73 = sub_2453816D8(v48, v49, &v74);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2082;
    sub_245387740();
    sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v50 = sub_2453880F4();
    v73 = sub_2453816D8(v50, v51, &v74);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_2452B7B5C(v26, type metadata accessor for NetworkSyncHeader);
    v45 = "%{public}s; Received unexpected sequence index for file: %{public}s";
    goto LABEL_16;
  }
  v24 = a2 + v4[6];
  sub_24530FB50(v24, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_245263F80((uint64_t)v14, &qword_257452CA8);
    if (qword_25744FD98 != -1)
      swift_once();
    v25 = sub_245387818();
    __swift_project_value_buffer(v25, (uint64_t)qword_257462FC8);
    v26 = v67;
    sub_2452B792C(a2, v67, type metadata accessor for NetworkSyncHeader);
    v27 = v72;
    swift_unknownObjectRetain_n();
    v28 = sub_2453877F4();
    v29 = sub_245387D34();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v73 = v27;
      v74 = v31;
      *(_DWORD *)v30 = 136446466;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
      v32 = sub_245387B48();
      v73 = sub_2453816D8(v32, v33, &v74);
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2082;
      sub_245387740();
      sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v34 = sub_2453880F4();
      v73 = sub_2453816D8(v34, v35, &v74);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_2452B7B5C(v26, type metadata accessor for NetworkSyncHeader);
      _os_log_impl(&dword_245256000, v28, v29, "%{public}s; Received unexpected file for nonexistent message: %{public}s",
        (uint8_t *)v30,
        0x16u);
      swift_arrayDestroy();
      v36 = v31;
LABEL_17:
      MEMORY[0x24953317C](v36, -1, -1);
      MEMORY[0x24953317C](v30, -1, -1);
LABEL_19:

      return;
    }
LABEL_18:
    swift_unknownObjectRelease_n();
    sub_2452B7B5C(v26, type metadata accessor for NetworkSyncHeader);
    goto LABEL_19;
  }
  v52 = v68;
  sub_2452B7AB8((uint64_t)v14, v68, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
  if (*(_QWORD *)(v52 + *(int *)(v15 + 20)))
  {
    sub_2453100AC(v72, a2, 0);
  }
  else
  {
    if (qword_25744FD98 != -1)
      swift_once();
    v53 = sub_245387818();
    __swift_project_value_buffer(v53, (uint64_t)qword_257462FC8);
    v54 = v66;
    sub_2452B792C(a2, v66, type metadata accessor for NetworkSyncHeader);
    v55 = v72;
    swift_unknownObjectRetain_n();
    v56 = sub_2453877F4();
    v57 = sub_245387D34();
    v58 = v57;
    if (os_log_type_enabled(v56, v57))
    {
      v59 = swift_slowAlloc();
      v71 = swift_slowAlloc();
      v73 = v55;
      v74 = v71;
      *(_DWORD *)v59 = 136446466;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
      v60 = sub_245387B48();
      LODWORD(v69) = v58;
      v73 = sub_2453816D8(v60, v61, &v74);
      sub_245387E0C();
      v52 = v68;
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v59 + 12) = 2082;
      sub_245387740();
      sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v62 = sub_2453880F4();
      v73 = sub_2453816D8(v62, v63, &v74);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_2452B7B5C(v54, type metadata accessor for NetworkSyncHeader);
      _os_log_impl(&dword_245256000, v56, (os_log_type_t)v69, "%{public}s; Received file for message without extended attributes: %{public}s",
        (uint8_t *)v59,
        0x16u);
      v64 = v71;
      swift_arrayDestroy();
      MEMORY[0x24953317C](v64, -1, -1);
      MEMORY[0x24953317C](v59, -1, -1);
    }
    else
    {
      swift_unknownObjectRelease_n();
      sub_2452B7B5C(v54, type metadata accessor for NetworkSyncHeader);
    }

    sub_24530F1CC(v24, 1);
  }
  sub_2452B7B5C(v52, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
}

void sub_24530C8A0(NSObject *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint32_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  void *v19;
  uint64_t v20;
  NSObject *v21;
  _QWORD aBlock[6];

  v21 = a1;
  v4 = type metadata accessor for NetworkSyncHeader(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2453879D4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(v2 + 24);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v13 = v12;
  LOBYTE(v12) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    v14 = *(_DWORD *)(a2 + *(int *)(v4 + 32));
    v15 = swift_allocObject();
    swift_weakInit();
    sub_2452B792C(a2, (uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NetworkSyncHeader);
    v16 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v17 = swift_allocObject();
    v18 = v21;
    *(_QWORD *)(v17 + 16) = v15;
    *(_QWORD *)(v17 + 24) = v18;
    sub_2452B7AB8((uint64_t)v7, v17 + v16, type metadata accessor for NetworkSyncHeader);
    aBlock[4] = sub_245319044;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24530CA98;
    aBlock[3] = &block_descriptor_256;
    v19 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    swift_release();
    nw_connection_receive(v18, v14, v14, v19);
    _Block_release(v19);
  }
  else
  {
    __break(1u);
  }
}

void sub_24530CA98(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(void *, uint64_t, uint64_t, uint64_t);
  id v10;

  v9 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v10 = a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v9(a2, a3, a4, a5);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

}

uint64_t sub_24530CB30(void *a1, void *a2, int a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint64_t v40;
  NSObject *v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  BOOL v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  int v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  os_log_type_t v89;
  os_log_type_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  NSObject *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  int v105;
  id v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  void *v119;
  id v120[3];
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;

  v114 = a7;
  v105 = a3;
  v118 = a2;
  v119 = a1;
  v124 = *MEMORY[0x24BDAC8D0];
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452C90);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Message();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for NetworkSyncHeader(0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v112 = (uint64_t)&v97 - v20;
  v111 = sub_24538798C();
  v110 = *(_QWORD *)(v111 - 8);
  MEMORY[0x24BDAC7A8](v111);
  v109 = (char *)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_245387818();
  v113 = *(_QWORD *)(v117 - 8);
  MEMORY[0x24BDAC7A8](v117);
  v108 = (char *)&v97 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v24 = result;
  v101 = v19;
  v100 = v15;
  v102 = v13;
  v103 = v12;
  if (qword_25744FD98 != -1)
    swift_once();
  v25 = __swift_project_value_buffer(v117, (uint64_t)qword_257462FC8);
  swift_unknownObjectRetain_n();
  v26 = sub_2453877F4();
  v27 = sub_245387D34();
  v28 = os_log_type_enabled(v26, v27);
  v116 = v24;
  v107 = v16;
  v115 = v25;
  v104 = v11;
  if (v28)
  {
    v29 = (uint8_t *)swift_slowAlloc();
    v30 = swift_slowAlloc();
    v121 = v30;
    *(_DWORD *)v29 = 136446210;
    v120[0] = a6;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
    v31 = sub_245387B48();
    v120[0] = (id)sub_2453816D8(v31, v32, &v121);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    v25 = v115;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v26, v27, "Received message data from: %{public}s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v30, -1, -1);
    MEMORY[0x24953317C](v29, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  v33 = v119;
  v34 = (uint64_t)v118;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  v35 = v33;
  swift_unknownObjectRetain_n();
  v36 = v35;
  v37 = sub_2453877F4();
  v38 = sub_245387D34();
  v39 = os_log_type_enabled(v37, v38);
  v106 = v36;
  if (!v39)
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();

    swift_unknownObjectRelease_n();
    if (!a4)
      goto LABEL_18;
    goto LABEL_14;
  }
  v40 = swift_slowAlloc();
  v41 = a6;
  v42 = (_QWORD *)swift_slowAlloc();
  v99 = swift_slowAlloc();
  v121 = v99;
  *(_DWORD *)v40 = 136447234;
  v120[0] = v41;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
  v43 = sub_245387B48();
  v120[0] = (id)sub_2453816D8(v43, v44, &v121);
  sub_245387E0C();
  v98 = v41;
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v40 + 12) = 2112;
  if (v33)
  {
    v45 = v106;
    v120[0] = v106;
    v46 = v106;
    sub_245387E0C();
  }
  else
  {
    v120[0] = 0;
    sub_245387E0C();
    v45 = v106;
  }
  *v42 = v33;

  *(_WORD *)(v40 + 22) = 2080;
  v34 = (uint64_t)v118;
  v120[0] = v118;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C80);
  v47 = sub_245387B48();
  v120[0] = (id)sub_2453816D8(v47, v48, &v121);
  sub_245387E0C();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v40 + 32) = 1024;
  LODWORD(v120[0]) = v105 & 1;
  v33 = v119;
  sub_245387E0C();
  *(_WORD *)(v40 + 38) = 2080;
  v120[0] = (id)a4;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C88);
  v49 = sub_245387B48();
  v120[0] = (id)sub_2453816D8(v49, v50, &v121);
  sub_245387E0C();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_245256000, v37, v38, "%{public}s; Parameters: content: %@, context: %s, isComplete: %{BOOL}d, error: %s",
    (uint8_t *)v40,
    0x30u);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
  swift_arrayDestroy();
  MEMORY[0x24953317C](v42, -1, -1);
  v51 = v99;
  swift_arrayDestroy();
  MEMORY[0x24953317C](v51, -1, -1);
  MEMORY[0x24953317C](v40, -1, -1);

  v25 = v115;
  a6 = v98;
  if (a4)
  {
LABEL_14:
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain_n();
    v52 = sub_2453877F4();
    v53 = sub_245387D1C();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = swift_slowAlloc();
      v55 = swift_slowAlloc();
      v121 = v55;
      *(_DWORD *)v54 = 136446466;
      v120[0] = a6;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
      v56 = sub_245387B48();
      v120[0] = (id)sub_2453816D8(v56, v57, &v121);
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 12) = 2082;
      v120[0] = (id)a4;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257452C38);
      v58 = sub_245387B48();
      v120[0] = (id)sub_2453816D8(v58, v59, &v121);
      v34 = (uint64_t)v118;
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v52, v53, "%{public}s; Received error: %{public}s", (uint8_t *)v54, 0x16u);
      swift_arrayDestroy();
      v60 = v55;
      v25 = v115;
      MEMORY[0x24953317C](v60, -1, -1);
      MEMORY[0x24953317C](v54, -1, -1);
      swift_unknownObjectRelease();

    }
    else
    {

      swift_unknownObjectRelease_n();
      swift_unknownObjectRelease_n();
    }
    v33 = v119;
  }
LABEL_18:
  if (v34)
  {
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain_n();
    v61 = sub_2453877F4();
    v62 = sub_245387D34();
    if (!os_log_type_enabled(v61, v62))
    {

      swift_unknownObjectRelease_n();
      swift_unknownObjectRelease_n();
      if (v33)
      {
LABEL_22:
        v70 = v109;
        sub_245387968();
        v118 = v106;
        v71 = sub_245387980();
        v121 = sub_245318E50(v71);
        v122 = v72;
        MEMORY[0x24BDAC7A8](v121);
        *(&v97 - 2) = (uint64_t)v70;
        sub_245316634();
        (*(void (**)(char *, uint64_t))(v110 + 8))(v70, v111);
        v74 = v121;
        v73 = v122;
        v75 = v114;
        v76 = v112;
        sub_2452B792C(v114, v112, type metadata accessor for NetworkSyncHeader);
        swift_unknownObjectRetain();
        sub_245261C44(v74, v73);
        swift_unknownObjectRetain();
        sub_245261C44(v74, v73);
        v77 = sub_2453877F4();
        v78 = sub_245387D34();
        v79 = os_log_type_enabled(v77, v78);
        v119 = (void *)v74;
        if (v79)
        {
          v113 = 0;
          v80 = v76;
          v117 = v73 >> 62;
          v81 = swift_slowAlloc();
          v121 = swift_slowAlloc();
          *(_DWORD *)v81 = 136446722;
          v120[0] = a6;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
          v82 = sub_245387B48();
          v120[0] = (id)sub_2453816D8(v82, v83, &v121);
          sub_245387E0C();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v81 + 12) = 1026;
          v84 = *(_DWORD *)(v80 + *(int *)(v107 + 32));
          sub_2452B7B5C(v80, type metadata accessor for NetworkSyncHeader);
          LODWORD(v120[0]) = v84;
          sub_245387E0C();
          *(_WORD *)(v81 + 18) = 2050;
          __asm { BR              X9 }
        }
        sub_24525CB80(v74, v73);
        sub_2452B7B5C(v76, type metadata accessor for NetworkSyncHeader);
        swift_unknownObjectRelease_n();
        sub_24525CB80(v74, v73);

        __asm { BR              X10 }
      }
      goto LABEL_25;
    }
    v63 = swift_slowAlloc();
    v64 = swift_slowAlloc();
    v121 = v64;
    *(_DWORD *)v63 = 136446466;
    v120[0] = a6;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
    v65 = sub_245387B48();
    v120[0] = (id)sub_2453816D8(v65, v66, &v121);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v63 + 12) = 2082;
    v120[0] = (id)v34;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C78);
    v67 = sub_245387B48();
    v120[0] = (id)sub_2453816D8(v67, v68, &v121);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v61, v62, "%{public}s; Received context: %{public}s", (uint8_t *)v63, 0x16u);
    swift_arrayDestroy();
    v69 = v64;
    v33 = v119;
    MEMORY[0x24953317C](v69, -1, -1);
    MEMORY[0x24953317C](v63, -1, -1);
    swift_unknownObjectRelease();

  }
  if (v33)
    goto LABEL_22;
LABEL_25:
  v85 = v108;
  (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v108, v25, v117);
  v86 = swift_beginAccess();
  MEMORY[0x24BDAC7A8](v86);
  *(&v97 - 2) = (uint64_t)a6;
  v87 = swift_bridgeObjectRetain();
  v88 = sub_2453177EC(v87, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2453199C4);
  swift_bridgeObjectRelease();
  if ((v88 & 1) != 0)
    v89 = sub_245387D1C();
  else
    v89 = sub_245387D04();
  v90 = v89;
  swift_unknownObjectRetain_n();
  v91 = sub_2453877F4();
  v92 = v90;
  if (os_log_type_enabled(v91, v90))
  {
    v93 = (uint8_t *)swift_slowAlloc();
    v94 = swift_slowAlloc();
    v120[0] = (id)v94;
    *(_DWORD *)v93 = 136446210;
    v123 = (uint64_t)a6;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
    v95 = sub_245387B48();
    v123 = sub_2453816D8(v95, v96, (uint64_t *)v120);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v91, v92, "Received nil instead of data; destroying connection %{public}s",
      v93,
      0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v94, -1, -1);
    MEMORY[0x24953317C](v93, -1, -1);

    (*(void (**)(char *, uint64_t))(v113 + 8))(v108, v117);
  }
  else
  {

    swift_unknownObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v85, v117);
  }
  sub_2452FEC94(a6);
  return swift_release();
}

void sub_24530E1B8()
{
  sub_245387F80();
  __break(1u);
  JUMPOUT(0x24530E20CLL);
}

uint64_t sub_24530E22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v4 = v3;
  v8 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
  MEMORY[0x24BDAC7A8](v8);
  v47 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  MEMORY[0x24BDAC7A8](v10);
  v46 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for Message();
  MEMORY[0x24BDAC7A8](v45);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2453879D4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (uint64_t *)((char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = *(void **)(v4 + 24);
  *v17 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BEE5610], v14);
  v19 = v18;
  LOBYTE(v18) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) != 0)
  {
    if (qword_25744FD98 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v20 = sub_245387818();
  __swift_project_value_buffer(v20, (uint64_t)qword_257462FC8);
  sub_2452B792C(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  swift_unknownObjectRetain_n();
  v21 = sub_2453877F4();
  v22 = sub_245387D34();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v44 = v4;
    v24 = v23;
    v41 = swift_slowAlloc();
    v48 = a2;
    v49 = v41;
    *(_DWORD *)v24 = 136446466;
    v43 = a1;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
    v25 = sub_245387B48();
    v42 = a3;
    v26 = a2;
    v48 = sub_2453816D8(v25, v27, &v49);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    v28 = (uint64_t *)&v13[*(int *)(v45 + 28)];
    v30 = *v28;
    v29 = v28[1];
    swift_bridgeObjectRetain();
    v31 = v30;
    a2 = v26;
    a3 = v42;
    v48 = sub_2453816D8(v31, v29, &v49);
    a1 = v43;
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_2452B7B5C((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Message);
    _os_log_impl(&dword_245256000, v21, v22, "%{public}s; Received message from %{public}s", (uint8_t *)v24, 0x16u);
    v32 = v41;
    swift_arrayDestroy();
    MEMORY[0x24953317C](v32, -1, -1);
    MEMORY[0x24953317C](v24, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
    sub_2452B7B5C((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  }

  v33 = type metadata accessor for NetworkSyncHeader(0);
  if (*(_DWORD *)(a3 + *(int *)(v33 + 40)) == 1)
  {
    v34 = sub_2453875E4();
    v35 = (uint64_t)v46;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v46, 1, 1, v34);
    sub_2453128CC(a1, v35, a2);
    return sub_245263F80(v35, &qword_25744F610);
  }
  else
  {
    v37 = v33;
    v38 = v47;
    sub_2452B792C(a1, v47, (uint64_t (*)(_QWORD))type metadata accessor for Message);
    v39 = *(_BYTE *)(a3 + *(int *)(v37 + 48));
    *(_QWORD *)(v38 + *(int *)(v8 + 20)) = 0;
    *(_BYTE *)(v38 + *(int *)(v8 + 24)) = v39;
    sub_2453133C8(v38);
    return sub_2452B7B5C(v38, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
  }
}

void sub_24530E68C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  const char *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  uint64_t v81;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452CA8);
  MEMORY[0x24BDAC7A8](v8);
  v78 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
  v74 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v73 = (uint64_t)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = (int *)type metadata accessor for NetworkSyncHeader(0);
  v11 = MEMORY[0x24BDAC7A8](v79);
  v77 = (uint64_t)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v75 = (uint64_t)&v68 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v72 = (uint64_t)&v68 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v68 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v68 - v20;
  v22 = sub_2453879D4();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (uint64_t *)((char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = *(void **)(v4 + 24);
  *v25 = v26;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v23 + 104))(v25, *MEMORY[0x24BEE5610], v22);
  v27 = v26;
  LOBYTE(v26) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v23 + 8))(v25, v22);
  if ((v26 & 1) != 0)
  {
    if (qword_25744FD98 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v28 = sub_245387818();
  v29 = __swift_project_value_buffer(v28, (uint64_t)qword_257462FC8);
  sub_2452B792C(a3, (uint64_t)v21, type metadata accessor for NetworkSyncHeader);
  sub_2452B792C(a3, (uint64_t)v19, type metadata accessor for NetworkSyncHeader);
  swift_unknownObjectRetain_n();
  v30 = sub_2453877F4();
  v31 = sub_245387D34();
  if (os_log_type_enabled(v30, v31))
  {
    v68 = v29;
    v69 = a2;
    v70 = a1;
    v71 = v4;
    v32 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v81 = v33;
    *(_DWORD *)v32 = 67240706;
    v34 = v79;
    v35 = *(_DWORD *)&v21[v79[11]];
    sub_2452B7B5C((uint64_t)v21, type metadata accessor for NetworkSyncHeader);
    LODWORD(v80) = v35;
    sub_245387E0C();
    *(_WORD *)(v32 + 8) = 1026;
    v36 = *(_DWORD *)&v19[v34[10]];
    v37 = v36 - 1;
    if (!v36)
    {
      __break(1u);
      return;
    }
    sub_2452B7B5C((uint64_t)v19, type metadata accessor for NetworkSyncHeader);
    LODWORD(v80) = v37;
    sub_245387E0C();
    *(_WORD *)(v32 + 14) = 2082;
    a2 = v69;
    v80 = v69;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
    v38 = sub_245387B48();
    v80 = sub_2453816D8(v38, v39, &v81);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v30, v31, "Received extended attributes %{public}u/%{public}u from: %{public}s", (uint8_t *)v32, 0x18u);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v33, -1, -1);
    MEMORY[0x24953317C](v32, -1, -1);

    a1 = v70;
  }
  else
  {
    sub_2452B7B5C((uint64_t)v19, type metadata accessor for NetworkSyncHeader);
    sub_2452B7B5C((uint64_t)v21, type metadata accessor for NetworkSyncHeader);

    swift_unknownObjectRelease_n();
  }
  v40 = v78;
  if (*(_DWORD *)(a3 + v79[10]) != 3)
  {
    v41 = v77;
    sub_2452B792C(a3, v77, type metadata accessor for NetworkSyncHeader);
    swift_unknownObjectRetain_n();
    v42 = sub_2453877F4();
    v43 = sub_245387D34();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      v81 = v45;
      *(_DWORD *)v44 = 136446466;
      sub_245387740();
      sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v51 = sub_2453880F4();
      v80 = sub_2453816D8(v51, v52, &v81);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_2452B7B5C(v41, type metadata accessor for NetworkSyncHeader);
      *(_WORD *)(v44 + 12) = 2082;
      v80 = a2;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
      v53 = sub_245387B48();
      v80 = sub_2453816D8(v53, v54, &v81);
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      v50 = "Received unexpected sequence count for file: %{public}s from: %{public}s";
      goto LABEL_16;
    }
    goto LABEL_17;
  }
  if (*(_DWORD *)(a3 + v79[11]) != 1)
  {
    v41 = v75;
    sub_2452B792C(a3, v75, type metadata accessor for NetworkSyncHeader);
    swift_unknownObjectRetain_n();
    v42 = sub_2453877F4();
    v43 = sub_245387D34();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      v81 = v45;
      *(_DWORD *)v44 = 136446466;
      sub_245387740();
      sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v55 = sub_2453880F4();
      v80 = sub_2453816D8(v55, v56, &v81);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_2452B7B5C(v41, type metadata accessor for NetworkSyncHeader);
      *(_WORD *)(v44 + 12) = 2082;
      v80 = a2;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
      v57 = sub_245387B48();
      v80 = sub_2453816D8(v57, v58, &v81);
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      v50 = "Received unexpected sequence index for file: %{public}s from: %{public}s";
      goto LABEL_16;
    }
LABEL_17:
    sub_2452B7B5C(v41, type metadata accessor for NetworkSyncHeader);

    swift_unknownObjectRelease_n();
    return;
  }
  sub_24530FB50(a3 + v79[6], v78);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v40, 1, v76) == 1)
  {
    sub_245263F80(v40, &qword_257452CA8);
    v41 = v72;
    sub_2452B792C(a3, v72, type metadata accessor for NetworkSyncHeader);
    swift_unknownObjectRetain_n();
    v42 = sub_2453877F4();
    v43 = sub_245387D1C();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      v81 = v45;
      *(_DWORD *)v44 = 136446466;
      sub_245387740();
      sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v46 = sub_2453880F4();
      v80 = sub_2453816D8(v46, v47, &v81);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_2452B7B5C(v41, type metadata accessor for NetworkSyncHeader);
      *(_WORD *)(v44 + 12) = 2082;
      v80 = a2;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
      v48 = sub_245387B48();
      v80 = sub_2453816D8(v48, v49, &v81);
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      v50 = "Can't receive extended attributes without preexisting metadata: %{public}s from: %{public}s";
LABEL_16:
      _os_log_impl(&dword_245256000, v42, v43, v50, (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v45, -1, -1);
      MEMORY[0x24953317C](v44, -1, -1);

      return;
    }
    goto LABEL_17;
  }
  v59 = v73;
  sub_2452B7AB8(v40, v73, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
  swift_unknownObjectRetain_n();
  v60 = sub_2453877F4();
  v61 = sub_245387D34();
  if (os_log_type_enabled(v60, v61))
  {
    v62 = (uint8_t *)swift_slowAlloc();
    v63 = swift_slowAlloc();
    v80 = a2;
    v81 = v63;
    *(_DWORD *)v62 = 136446210;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
    v64 = sub_245387B48();
    v80 = sub_2453816D8(v64, v65, &v81);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v60, v61, "Updating partial data; waiting for more from: %{public}s", v62, 0xCu);
    swift_arrayDestroy();
    v66 = v63;
    v59 = v73;
    MEMORY[0x24953317C](v66, -1, -1);
    MEMORY[0x24953317C](v62, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  v67 = *(int *)(v76 + 20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v59 + v67) = a1;
  sub_2453133C8(v59);
  sub_2452B7B5C(v59, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
}

uint64_t sub_24530F1CC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int64_t v30;
  char *v31;
  unint64_t i;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  void *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  id v70;
  void *v71;
  unsigned int v72;
  id v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  int64_t v81;
  uint64_t *v82;
  char *v83;
  int v84;
  char *v85;
  uint64_t v86;
  int64_t v87;
  uint64_t v88;
  uint64_t v89;
  int64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105[7];

  v84 = a2;
  v101 = a1;
  v105[6] = *(id *)MEMORY[0x24BDAC8D0];
  v80 = sub_245387590();
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v78 = (char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_2453875E4();
  v76 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v85 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452CA8);
  MEMORY[0x24BDAC7A8](v5);
  v83 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_245387740();
  v8 = *(_QWORD *)(v7 - 8);
  v99 = v7;
  v100 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v98 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Message();
  MEMORY[0x24BDAC7A8](v10);
  v97 = (uint64_t)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452CB0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v76 - v16;
  v18 = sub_2453879D4();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (uint64_t *)((char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = *(void **)(v2 + 24);
  *v21 = v22;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v19 + 104))(v21, *MEMORY[0x24BEE5610], v18);
  v23 = v22;
  LOBYTE(v22) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v19 + 8))(v21, v18);
  if ((v22 & 1) == 0)
  {
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  v82 = (uint64_t *)(v2 + 72);
  swift_beginAccess();
  v24 = *(_QWORD *)(v2 + 72);
  v25 = *(_QWORD *)(v24 + 64);
  v86 = v24 + 64;
  v26 = 1 << *(_BYTE *)(v24 + 32);
  if (v26 < 64)
    v27 = ~(-1 << v26);
  else
    v27 = -1;
  v28 = v27 & v25;
  v87 = (unint64_t)(v26 + 63) >> 6;
  v29 = swift_bridgeObjectRetain();
  v30 = 0;
  v92 = v2;
  v91 = v29;
  v31 = v98;
  if (v28)
    goto LABEL_6;
LABEL_8:
  v33 = v30 + 1;
  if (__OFADD__(v30, 1))
    goto LABEL_59;
  if (v33 < v87)
  {
    v34 = *(_QWORD *)(v86 + 8 * v33);
    v35 = v30 + 1;
    if (v34)
      goto LABEL_21;
    v35 = v30 + 2;
    if (v30 + 2 >= v87)
      goto LABEL_56;
    v34 = *(_QWORD *)(v86 + 8 * v35);
    if (v34)
      goto LABEL_21;
    v35 = v30 + 3;
    if (v30 + 3 >= v87)
      goto LABEL_56;
    v34 = *(_QWORD *)(v86 + 8 * v35);
    if (v34)
    {
LABEL_21:
      v89 = (v34 - 1) & v34;
      v90 = v35;
      for (i = __clz(__rbit64(v34)) + (v35 << 6); ; i = __clz(__rbit64(v28)) | (v30 << 6))
      {
        v37 = *(_QWORD *)(v29 + 56);
        v38 = (uint64_t *)(*(_QWORD *)(v29 + 48) + 16 * i);
        v39 = v38[1];
        v88 = *v38;
        v40 = *(_QWORD *)(v37 + 8 * i);
        v41 = *(_QWORD *)(v40 + 64);
        v94 = v40 + 64;
        v42 = 1 << *(_BYTE *)(v40 + 32);
        if (v42 < 64)
          v43 = ~(-1 << v42);
        else
          v43 = -1;
        v44 = v43 & v41;
        v95 = (unint64_t)(v42 + 63) >> 6;
        v81 = v95 - 1;
        v96 = v40;
        swift_bridgeObjectRetain_n();
        v93 = v39;
        swift_bridgeObjectRetain();
        v102 = 0;
        while (1)
        {
          if (v44)
          {
            v45 = __clz(__rbit64(v44));
            v44 &= v44 - 1;
            v46 = v45 | (v102 << 6);
            goto LABEL_28;
          }
          v50 = v102 + 1;
          if (__OFADD__(v102, 1))
          {
            __break(1u);
            goto LABEL_58;
          }
          if (v50 < v95)
          {
            v51 = *(_QWORD *)(v94 + 8 * v50);
            if (v51)
              goto LABEL_32;
            v52 = v102 + 2;
            ++v102;
            if (v50 + 1 < v95)
            {
              v51 = *(_QWORD *)(v94 + 8 * v52);
              if (v51)
                goto LABEL_35;
              v102 = v50 + 1;
              if (v50 + 2 < v95)
              {
                v51 = *(_QWORD *)(v94 + 8 * (v50 + 2));
                if (v51)
                {
                  v50 += 2;
LABEL_32:
                  v44 = (v51 - 1) & v51;
                  v46 = __clz(__rbit64(v51)) + (v50 << 6);
                  v102 = v50;
LABEL_28:
                  v47 = *(_QWORD *)(v96 + 56);
                  *v15 = *(_BYTE *)(*(_QWORD *)(v96 + 48) + v46);
                  v48 = v47
                      + *(_QWORD *)(*(_QWORD *)(type metadata accessor for NetworkMessenger.PartialIncomingMessage(0)
                                              - 8)
                                  + 72)
                      * v46;
                  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452CB8);
                  sub_2452B792C(v48, (uint64_t)&v15[*(int *)(v49 + 48)], type metadata accessor for NetworkMessenger.PartialIncomingMessage);
                  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v15, 0, 1, v49);
                  goto LABEL_47;
                }
                v52 = v50 + 3;
                v102 = v50 + 2;
                if (v50 + 3 < v95)
                {
                  v51 = *(_QWORD *)(v94 + 8 * v52);
                  if (v51)
                  {
LABEL_35:
                    v50 = v52;
                    goto LABEL_32;
                  }
                  while (1)
                  {
                    v50 = v52 + 1;
                    if (__OFADD__(v52, 1))
                      goto LABEL_60;
                    if (v50 >= v95)
                      break;
                    v51 = *(_QWORD *)(v94 + 8 * v50);
                    ++v52;
                    if (v51)
                      goto LABEL_32;
                  }
                  v102 = v81;
                }
              }
            }
          }
          v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452CB8);
          (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v15, 1, 1, v53);
          v44 = 0;
LABEL_47:
          sub_2452BC850((uint64_t)v15, (uint64_t)v17, &qword_257452CB0);
          v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452CB8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48))(v17, 1, v54) == 1)
            break;
          v55 = *v17;
          v56 = (uint64_t)&v17[*(int *)(v54 + 48)];
          v57 = v97;
          sub_2452B792C(v56, v97, (uint64_t (*)(_QWORD))type metadata accessor for Message);
          sub_2452B7B5C(v56, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
          v58 = v99;
          v59 = v100;
          (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v31, v57, v99);
          sub_2452B7B5C(v57, (uint64_t (*)(_QWORD))type metadata accessor for Message);
          LOBYTE(v56) = sub_245387710();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v31, v58);
          if ((v56 & 1) != 0)
          {
            v104 = v96;
            v60 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
            v61 = (uint64_t)v83;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v83, 1, 1, v60);
            sub_24531C784(v61, v55);
            v62 = v104;
            v63 = v82;
            swift_beginAccess();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v103 = *v63;
            *v63 = 0x8000000000000000;
            sub_245329250(v62, v88, v93, isUniquelyReferenced_nonNull_native);
            *v63 = v103;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_endAccess();
            swift_release();
            result = swift_release();
            goto LABEL_50;
          }
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        v29 = v91;
        v30 = v90;
        v28 = v89;
        if (!v89)
          goto LABEL_8;
LABEL_6:
        v89 = (v28 - 1) & v28;
        v90 = v30;
      }
    }
    v36 = v30 + 4;
    if (v30 + 4 < v87)
    {
      v34 = *(_QWORD *)(v86 + 8 * v36);
      if (v34)
      {
        v35 = v30 + 4;
        goto LABEL_21;
      }
      while (1)
      {
        v35 = v36 + 1;
        if (__OFADD__(v36, 1))
          break;
        if (v35 >= v87)
          goto LABEL_56;
        v34 = *(_QWORD *)(v86 + 8 * v35);
        ++v36;
        if (v34)
          goto LABEL_21;
      }
LABEL_61:
      __break(1u);
    }
  }
LABEL_56:
  result = swift_release();
LABEL_50:
  if ((v84 & 1) != 0)
  {
    v105[0] = (id)sub_245387704();
    v105[1] = v66;
    v67 = v79;
    v68 = v78;
    v69 = v80;
    (*(void (**)(char *, _QWORD, uint64_t))(v79 + 104))(v78, *MEMORY[0x24BDCD7A0], v80);
    sub_2453192B8();
    sub_2453875D8();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v69);
    swift_bridgeObjectRelease();
    v70 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v71 = (void *)sub_24538759C();
    v105[0] = 0;
    v72 = objc_msgSend(v70, sel_removeItemAtURL_error_, v71, v105);

    if (v72)
    {
      v73 = v105[0];
    }
    else
    {
      v74 = v105[0];
      v75 = (void *)sub_245387584();

      swift_willThrow();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v85, v77);
  }
  return result;
}

uint64_t sub_24530FB50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;

  v60 = a1;
  v51 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
  v59 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452CB0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v48 - v10;
  v12 = sub_2453879D4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(void **)(v2 + 24);
  *v15 = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE5610], v12);
  v17 = v16;
  LOBYTE(v16) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) == 0)
    goto LABEL_54;
  v50 = a2;
  swift_beginAccess();
  v19 = *(_QWORD *)(v2 + 72);
  v20 = *(_QWORD *)(v19 + 64);
  v52 = v19 + 64;
  v21 = 1 << *(_BYTE *)(v19 + 32);
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v23 = v22 & v20;
  v53 = (unint64_t)(v21 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v24 = 0;
  v56 = result;
  if (!v23)
    goto LABEL_8;
  while (2)
  {
    v54 = (v23 - 1) & v23;
    v55 = v24;
    v25 = __clz(__rbit64(v23)) | (v24 << 6);
LABEL_22:
    v30 = *(_QWORD *)(*(_QWORD *)(result + 56) + 8 * v25);
    v31 = *(_QWORD *)(v30 + 64);
    v57 = v30 + 64;
    v32 = 1 << *(_BYTE *)(v30 + 32);
    if (v32 < 64)
      v33 = ~(-1 << v32);
    else
      v33 = -1;
    v34 = v33 & v31;
    v58 = (unint64_t)(v32 + 63) >> 6;
    v49 = v58 - 1;
    result = swift_bridgeObjectRetain();
    v35 = 0;
    if (v34)
    {
LABEL_26:
      v36 = __clz(__rbit64(v34));
      v34 &= v34 - 1;
      v37 = v36 | (v35 << 6);
LABEL_27:
      v38 = *(_QWORD *)(v30 + 56);
      *v9 = *(_BYTE *)(*(_QWORD *)(v30 + 48) + v37);
      v39 = v38 + *(_QWORD *)(v59 + 72) * v37;
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452CB8);
      sub_2452B792C(v39, (uint64_t)&v9[*(int *)(v40 + 48)], type metadata accessor for NetworkMessenger.PartialIncomingMessage);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v9, 0, 1, v40);
      goto LABEL_46;
    }
    while (1)
    {
      v41 = v35 + 1;
      if (__OFADD__(v35, 1))
      {
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
      if (v41 < v58)
      {
        v42 = *(_QWORD *)(v57 + 8 * v41);
        if (v42)
          goto LABEL_31;
        v43 = v35 + 2;
        ++v35;
        if (v41 + 1 < v58)
        {
          v42 = *(_QWORD *)(v57 + 8 * v43);
          if (v42)
            goto LABEL_34;
          v35 = v41 + 1;
          if (v41 + 2 < v58)
          {
            v42 = *(_QWORD *)(v57 + 8 * (v41 + 2));
            if (v42)
            {
              v41 += 2;
              goto LABEL_31;
            }
            v43 = v41 + 3;
            v35 = v41 + 2;
            if (v41 + 3 < v58)
            {
              v42 = *(_QWORD *)(v57 + 8 * v43);
              if (v42)
              {
LABEL_34:
                v41 = v43;
LABEL_31:
                v34 = (v42 - 1) & v42;
                v37 = __clz(__rbit64(v42)) + (v41 << 6);
                v35 = v41;
                goto LABEL_27;
              }
              while (1)
              {
                v41 = v43 + 1;
                if (__OFADD__(v43, 1))
                  break;
                if (v41 >= v58)
                {
                  v35 = v49;
                  goto LABEL_45;
                }
                v42 = *(_QWORD *)(v57 + 8 * v41);
                ++v43;
                if (v42)
                  goto LABEL_31;
              }
LABEL_56:
              __break(1u);
              goto LABEL_57;
            }
          }
        }
      }
LABEL_45:
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452CB8);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v9, 1, 1, v44);
      v34 = 0;
LABEL_46:
      sub_2452BC850((uint64_t)v9, (uint64_t)v11, &qword_257452CB0);
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452CB8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v11, 1, v45) == 1)
        break;
      sub_2452B7AB8((uint64_t)&v11[*(int *)(v45 + 48)], (uint64_t)v5, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
      if ((sub_245387710() & 1) != 0)
      {
        swift_release();
        swift_release();
        v46 = v50;
        sub_2452B7AB8((uint64_t)v5, v50, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
        v47 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v46, v47, 1, v51);
      }
      result = sub_2452B7B5C((uint64_t)v5, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
      if (v34)
        goto LABEL_26;
    }
    swift_release();
    v24 = v55;
    result = v56;
    v23 = v54;
    if (v54)
      continue;
    break;
  }
LABEL_8:
  v26 = v24 + 1;
  if (__OFADD__(v24, 1))
    goto LABEL_55;
  if (v26 >= v53)
    goto LABEL_52;
  v27 = *(_QWORD *)(v52 + 8 * v26);
  v28 = v24 + 1;
  if (v27)
    goto LABEL_21;
  v28 = v24 + 2;
  if (v24 + 2 >= v53)
    goto LABEL_52;
  v27 = *(_QWORD *)(v52 + 8 * v28);
  if (v27)
    goto LABEL_21;
  v28 = v24 + 3;
  if (v24 + 3 >= v53)
    goto LABEL_52;
  v27 = *(_QWORD *)(v52 + 8 * v28);
  if (v27)
    goto LABEL_21;
  v29 = v24 + 4;
  if (v24 + 4 >= v53)
  {
LABEL_52:
    swift_release();
    v47 = 1;
    v46 = v50;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v46, v47, 1, v51);
  }
  v27 = *(_QWORD *)(v52 + 8 * v29);
  if (v27)
  {
    v28 = v24 + 4;
LABEL_21:
    v54 = (v27 - 1) & v27;
    v55 = v28;
    v25 = __clz(__rbit64(v27)) + (v28 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    v28 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v28 >= v53)
      goto LABEL_52;
    v27 = *(_QWORD *)(v52 + 8 * v28);
    ++v29;
    if (v27)
      goto LABEL_21;
  }
LABEL_57:
  __break(1u);
  return result;
}

void sub_2453100AC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint32_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  NSObject *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  id v56;
  void *v57;
  unsigned int v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t i;
  unint64_t v68;
  int64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint8_t *v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  int64_t v106;
  uint64_t v107;
  char *v108;
  NSObject *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t aBlock;
  uint64_t v113;
  void (*v114)(uint64_t, void *, uint64_t, uint64_t, uint64_t);
  void *v115;
  uint64_t (*v116)(uint64_t, unint64_t, int, uint64_t);
  uint64_t v117;

  v109 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  MEMORY[0x24BDAC7A8](v5);
  v102 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_245387590();
  v105 = *(char **)(v7 - 8);
  v106 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2453875E4();
  v103 = *(_QWORD *)(v10 - 8);
  v104 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v108 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452CA8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v107 = (uint64_t)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for NetworkSyncHeader(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v99 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v32 = (char *)&v99 - v31;
  v33 = *(int *)(v27 + 32);
  v110 = a2;
  LODWORD(v33) = *(_DWORD *)(a2 + v33);
  v34 = v33 - a3;
  if (v33 < a3)
  {
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if (v34 >> 15)
  {
    v34 = 0x8000;
    goto LABEL_9;
  }
  if (v34)
  {
LABEL_9:
    v46 = swift_allocObject();
    swift_weakInit();
    sub_2452B792C(v110, (uint64_t)v32, type metadata accessor for NetworkSyncHeader);
    v47 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v48 = (v20 + v47 + 3) & 0xFFFFFFFFFFFFFFFCLL;
    v49 = swift_allocObject();
    v50 = v109;
    *(_QWORD *)(v49 + 16) = v46;
    *(_QWORD *)(v49 + 24) = v50;
    sub_2452B7AB8((uint64_t)v32, v49 + v47, type metadata accessor for NetworkSyncHeader);
    *(_DWORD *)(v49 + v48) = v34;
    *(_DWORD *)(v49 + ((v48 + 7) & 0xFFFFFFFFFFFFFFFCLL)) = a3;
    v116 = sub_2453193C8;
    v117 = v49;
    aBlock = MEMORY[0x24BDAC760];
    v113 = 1107296256;
    v114 = sub_24530CA98;
    v115 = &block_descriptor_279;
    v51 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    swift_release();
    nw_connection_receive(v50, v34, v34, v51);
    _Block_release(v51);
    return;
  }
  v35 = v30;
  v36 = v29;
  v99 = v28;
  v101 = v27;
  v32 = (char *)(v110 + *(int *)(v27 + 24));
  sub_24530FB50((uint64_t)v32, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_245263F80((uint64_t)v14, &qword_257452CA8);
    if (qword_25744FD98 == -1)
    {
LABEL_6:
      v37 = sub_245387818();
      __swift_project_value_buffer(v37, (uint64_t)qword_257462FC8);
      sub_2452B792C(v110, (uint64_t)v24, type metadata accessor for NetworkSyncHeader);
      v38 = sub_2453877F4();
      v39 = sub_245387D1C();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = swift_slowAlloc();
        v100 = v32;
        v41 = (uint8_t *)v40;
        v42 = swift_slowAlloc();
        aBlock = v42;
        *(_DWORD *)v41 = 136446210;
        sub_245387740();
        sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v43 = sub_2453880F4();
        v111 = sub_2453816D8(v43, v44, &aBlock);
        sub_245387E0C();
        swift_bridgeObjectRelease();
        sub_2452B7B5C((uint64_t)v24, type metadata accessor for NetworkSyncHeader);
        _os_log_impl(&dword_245256000, v38, v39, "Partial message does not exist for completed incoming file: %{public}s", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v42, -1, -1);
        v45 = v41;
        v32 = v100;
        MEMORY[0x24953317C](v45, -1, -1);
      }
      else
      {
        sub_2452B7B5C((uint64_t)v24, type metadata accessor for NetworkSyncHeader);
      }

      sub_24530F1CC((uint64_t)v32, 1);
      return;
    }
LABEL_50:
    swift_once();
    goto LABEL_6;
  }
  v52 = (uint64_t)v14;
  v53 = v107;
  sub_2452B7AB8(v52, v107, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
  v24 = *(char **)(v53 + *(int *)(v15 + 20));
  if (!v24)
  {
    if (qword_25744FD98 != -1)
      goto LABEL_52;
    goto LABEL_36;
  }
  swift_bridgeObjectRetain();
  v100 = v32;
  aBlock = sub_245387704();
  v113 = v54;
  v35 = (unint64_t)v105;
  v55 = v106;
  (*((void (**)(char *, _QWORD, int64_t))v105 + 13))(v9, *MEMORY[0x24BDCD7A0], v106);
  sub_2453192B8();
  sub_2453875D8();
  (*(void (**)(char *, int64_t))(v35 + 8))(v9, v55);
  swift_bridgeObjectRelease();
  v56 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_2453875CC();
  v57 = (void *)sub_245387AF4();
  swift_bridgeObjectRelease();
  v58 = objc_msgSend(v56, sel_fileExistsAtPath_, v57);

  if (!v58)
  {
    swift_bridgeObjectRelease();
    if (qword_25744FD98 != -1)
      swift_once();
    v84 = sub_245387818();
    __swift_project_value_buffer(v84, (uint64_t)qword_257462FC8);
    sub_2452B792C(v110, v36, type metadata accessor for NetworkSyncHeader);
    v85 = sub_2453877F4();
    v86 = sub_245387D1C();
    if (os_log_type_enabled(v85, v86))
    {
      v87 = (uint8_t *)swift_slowAlloc();
      v88 = swift_slowAlloc();
      aBlock = v88;
      *(_DWORD *)v87 = 136446210;
      sub_245387740();
      sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v89 = sub_2453880F4();
      v111 = sub_2453816D8(v89, v90, &aBlock);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_2452B7B5C(v36, type metadata accessor for NetworkSyncHeader);
      _os_log_impl(&dword_245256000, v85, v86, "File does not exist for extended attributes: %{public}s", v87, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v88, -1, -1);
      MEMORY[0x24953317C](v87, -1, -1);
    }
    else
    {
      sub_2452B7B5C(v36, type metadata accessor for NetworkSyncHeader);
    }

    v92 = v103;
    v91 = v104;
    sub_24530F1CC((uint64_t)v100, 1);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v108, v91);
    goto LABEL_47;
  }
  v60 = 0;
  v32 = 0;
  v61 = *((_QWORD *)v24 + 8);
  v105 = v24 + 64;
  v62 = 1 << v24[32];
  v63 = -1;
  if (v62 < 64)
    v63 = ~(-1 << v62);
  v64 = v63 & v61;
  v106 = (unint64_t)(v62 + 63) >> 6;
  if ((v63 & v61) == 0)
    goto LABEL_16;
LABEL_15:
  v65 = __clz(__rbit64(v64));
  v64 &= v64 - 1;
  for (i = v65 | (v60 << 6); ; i = __clz(__rbit64(v68)) + (v60 << 6))
  {
    v70 = 16 * i;
    v71 = *(_QWORD *)(*((_QWORD *)v24 + 6) + v70 + 8);
    v72 = (uint64_t *)(*((_QWORD *)v24 + 7) + v70);
    v73 = *v72;
    v35 = v72[1];
    MEMORY[0x24BDAC7A8](v59);
    *(&v99 - 4) = v73;
    *(&v99 - 3) = v35;
    *(&v99 - 2) = v74;
    *(&v99 - 1) = v71;
    swift_bridgeObjectRetain();
    sub_245261C44(v73, v35);
    sub_2453875A8();
    sub_24525CB80(v73, v35);
    v59 = swift_bridgeObjectRelease();
    if (v64)
      goto LABEL_15;
LABEL_16:
    if (__OFADD__(v60++, 1))
      goto LABEL_49;
    if (v60 >= v106)
    {
LABEL_46:
      swift_release();
      sub_24530F1CC((uint64_t)v100, 0);
      v94 = (uint64_t)v102;
      v93 = v103;
      v95 = v108;
      v96 = v104;
      (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v102, v108, v104);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v93 + 56))(v94, 0, 1, v96);
      v97 = v107;
      v98 = (uint64_t)v109;
      sub_2453128CC(v107, v94, (uint64_t)v109);
      sub_245263F80(v94, &qword_25744F610);
      sub_245309B2C(v98);
      (*(void (**)(char *, uint64_t))(v93 + 8))(v95, v96);
      sub_2452B7B5C(v97, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
      return;
    }
    v68 = *(_QWORD *)&v105[8 * v60];
    if (!v68)
      break;
LABEL_26:
    v64 = (v68 - 1) & v68;
  }
  v69 = v60 + 1;
  if (v60 + 1 >= v106)
    goto LABEL_46;
  v68 = *(_QWORD *)&v105[8 * v69];
  if (v68)
    goto LABEL_25;
  v69 = v60 + 2;
  if (v60 + 2 >= v106)
    goto LABEL_46;
  v68 = *(_QWORD *)&v105[8 * v69];
  if (v68)
    goto LABEL_25;
  v69 = v60 + 3;
  if (v60 + 3 >= v106)
    goto LABEL_46;
  v68 = *(_QWORD *)&v105[8 * v69];
  if (v68)
  {
LABEL_25:
    v60 = v69;
    goto LABEL_26;
  }
  while (1)
  {
    v60 = v69 + 1;
    if (__OFADD__(v69, 1))
      break;
    if (v60 >= v106)
      goto LABEL_46;
    v68 = *(_QWORD *)&v105[8 * v60];
    ++v69;
    if (v68)
      goto LABEL_26;
  }
  __break(1u);
LABEL_52:
  swift_once();
LABEL_36:
  v75 = sub_245387818();
  __swift_project_value_buffer(v75, (uint64_t)qword_257462FC8);
  sub_2452B792C(v110, v35, type metadata accessor for NetworkSyncHeader);
  v76 = sub_2453877F4();
  v77 = sub_245387D1C();
  if (os_log_type_enabled(v76, v77))
  {
    v78 = swift_slowAlloc();
    v100 = v32;
    v79 = (uint8_t *)v78;
    v80 = swift_slowAlloc();
    aBlock = v80;
    *(_DWORD *)v79 = 136446210;
    sub_245387740();
    sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v81 = sub_2453880F4();
    v111 = sub_2453816D8(v81, v82, &aBlock);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_2452B7B5C(v35, type metadata accessor for NetworkSyncHeader);
    _os_log_impl(&dword_245256000, v76, v77, "Extended attributes do not exist for completed incoming file: %{public}s", v79, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v80, -1, -1);
    v83 = v79;
    v32 = v100;
    MEMORY[0x24953317C](v83, -1, -1);
  }
  else
  {
    sub_2452B7B5C(v35, type metadata accessor for NetworkSyncHeader);
  }

  sub_24530F1CC((uint64_t)v32, 1);
LABEL_47:
  sub_2452B7B5C(v107, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
}

uint64_t sub_245310F90(uint64_t a1, unint64_t a2, int a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7, int a8)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  os_log_type_t v98;
  os_log_type_t v99;
  char *v100;
  NSObject *v101;
  uint8_t *v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  id v106;
  void *v107;
  unsigned int v108;
  uint64_t v109;
  void (*v110)(char *, char *, uint64_t);
  char *v111;
  NSObject *v112;
  os_log_type_t v113;
  uint64_t v114;
  uint8_t *v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  void (*v119)(char *, uint64_t);
  uint64_t v120;
  char *v121;
  NSObject *v122;
  os_log_type_t v123;
  uint64_t v124;
  uint8_t *v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  void *v133;
  id v134;
  void *v135;
  char *v136;
  uint64_t v137;
  NSObject *v138;
  uint64_t v139;
  os_log_type_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char *v145;
  uint64_t v146;
  unint64_t v147;
  char *v148;
  uint64_t (*v149)(char *, uint64_t);
  char *v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  char *v159;
  int v160;
  uint64_t v161;
  int v162;
  id v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  NSObject *v170;
  unint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  unint64_t v178;
  char *v179;
  void *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;

  v160 = a8;
  v174 = a7;
  v162 = a3;
  v178 = a2;
  v180 = (void *)a1;
  v185 = *MEMORY[0x24BDAC8D0];
  v172 = type metadata accessor for NetworkSyncHeader(0);
  MEMORY[0x24BDAC7A8](v172);
  v11 = (char *)&v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = sub_245387590();
  v168 = *(_QWORD *)(v169 - 8);
  MEMORY[0x24BDAC7A8](v169);
  v167 = (char *)&v152 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2453875E4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v152 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v159 = (char *)&v152 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v152 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20);
  v158 = (char *)&v152 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v152 - v25;
  v166 = sub_24538798C();
  v165 = *(_QWORD *)(v166 - 8);
  MEMORY[0x24BDAC7A8](v166);
  v164 = (char *)&v152 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = (_QWORD *)sub_245387818();
  v171 = *(v177 - 1);
  MEMORY[0x24BDAC7A8](v177);
  v173 = (char *)&v152 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v30 = result;
  v154 = v22;
  v156 = v14;
  if (qword_25744FD98 != -1)
    swift_once();
  v31 = __swift_project_value_buffer((uint64_t)v177, (uint64_t)qword_257462FC8);
  swift_unknownObjectRetain_n();
  v32 = sub_2453877F4();
  v33 = sub_245387D34();
  v34 = os_log_type_enabled(v32, v33);
  v175 = v30;
  v161 = v13;
  v170 = a6;
  v179 = v26;
  v176 = v31;
  v157 = v17;
  v155 = v11;
  if (v34)
  {
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v182 = (uint64_t)a6;
    v183 = v36;
    *(_DWORD *)v35 = 136446210;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
    v37 = sub_245387B48();
    v182 = sub_2453816D8(v37, v38, &v183);
    a6 = v170;
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    v26 = v179;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v32, v33, "Received file data from: %{public}s", v35, 0xCu);
    swift_arrayDestroy();
    v39 = v36;
    v31 = v176;
    MEMORY[0x24953317C](v39, -1, -1);
    MEMORY[0x24953317C](v35, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  v40 = v180;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  v41 = v40;
  v42 = v178;
  swift_unknownObjectRetain_n();
  v43 = v41;
  v44 = sub_2453877F4();
  v45 = sub_245387D34();
  v46 = os_log_type_enabled(v44, v45);
  v163 = v43;
  if (!v46)
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();

    swift_unknownObjectRelease_n();
    if (a4)
      goto LABEL_18;
LABEL_11:
    if (!v42)
      goto LABEL_12;
    goto LABEL_22;
  }
  v47 = swift_slowAlloc();
  v48 = (_QWORD *)swift_slowAlloc();
  v153 = swift_slowAlloc();
  v182 = (uint64_t)a6;
  v183 = v153;
  *(_DWORD *)v47 = 136447234;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
  v49 = sub_245387B48();
  v182 = sub_2453816D8(v49, v50, &v183);
  sub_245387E0C();
  v51 = (uint64_t)v180;
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v47 + 12) = 2112;
  if (v51)
  {
    v52 = v163;
    v182 = (uint64_t)v163;
    v53 = v163;
    sub_245387E0C();
  }
  else
  {
    v182 = 0;
    sub_245387E0C();
    v52 = v163;
  }
  *v48 = v51;

  *(_WORD *)(v47 + 22) = 2080;
  v42 = v178;
  v182 = v178;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C80);
  v72 = sub_245387B48();
  v182 = sub_2453816D8(v72, v73, &v183);
  sub_245387E0C();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v47 + 32) = 1024;
  LODWORD(v182) = v162 & 1;
  sub_245387E0C();
  *(_WORD *)(v47 + 38) = 2080;
  v182 = a4;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C88);
  v74 = sub_245387B48();
  v182 = sub_2453816D8(v74, v75, &v183);
  v40 = v180;
  sub_245387E0C();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_245256000, v44, v45, "%{public}s; Parameters: content: %@, context: %s, isComplete: %{BOOL}d, error: %s",
    (uint8_t *)v47,
    0x30u);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
  swift_arrayDestroy();
  MEMORY[0x24953317C](v48, -1, -1);
  v76 = v153;
  swift_arrayDestroy();
  MEMORY[0x24953317C](v76, -1, -1);
  MEMORY[0x24953317C](v47, -1, -1);

  a6 = v170;
  v26 = v179;
  v31 = v176;
  if (!a4)
    goto LABEL_11;
LABEL_18:
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  v77 = sub_2453877F4();
  v78 = sub_245387D1C();
  if (!os_log_type_enabled(v77, v78))
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();
    if (!v42)
      goto LABEL_12;
LABEL_22:
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain_n();
    v86 = sub_2453877F4();
    v87 = sub_245387D34();
    if (os_log_type_enabled(v86, v87))
    {
      v88 = swift_slowAlloc();
      v89 = swift_slowAlloc();
      v182 = (uint64_t)a6;
      v183 = v89;
      *(_DWORD *)v88 = 136446466;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
      v90 = sub_245387B48();
      v182 = sub_2453816D8(v90, v91, &v183);
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v88 + 12) = 2082;
      v182 = v42;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257452C78);
      v92 = sub_245387B48();
      v182 = sub_2453816D8(v92, v93, &v183);
      v94 = (uint64_t)v180;
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v86, v87, "%{public}s; Received context: %{public}s", (uint8_t *)v88, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v89, -1, -1);
      MEMORY[0x24953317C](v88, -1, -1);
      v26 = v179;
      swift_unknownObjectRelease();

      if (v94)
        goto LABEL_13;
    }
    else
    {

      swift_unknownObjectRelease_n();
      swift_unknownObjectRelease_n();
      if (v40)
        goto LABEL_13;
    }
LABEL_26:
    (*(void (**)(char *, uint64_t, _QWORD *))(v171 + 16))(v173, v31, v177);
    v95 = swift_beginAccess();
    MEMORY[0x24BDAC7A8](v95);
    v96 = swift_bridgeObjectRetain();
    v97 = sub_2453177EC(v96, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2453199C4);
    swift_bridgeObjectRelease();
    if ((v97 & 1) != 0)
      v98 = sub_245387D1C();
    else
      v98 = sub_245387D04();
    v99 = v98;
    swift_unknownObjectRetain_n();
    v100 = v173;
    v101 = sub_2453877F4();
    if (os_log_type_enabled(v101, v99))
    {
      v102 = (uint8_t *)swift_slowAlloc();
      v103 = swift_slowAlloc();
      v182 = v103;
      *(_DWORD *)v102 = 136446210;
      v181 = (uint64_t)a6;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
      v104 = sub_245387B48();
      v181 = sub_2453816D8(v104, v105, &v182);
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v101, v99, "Received nil instead of file data; destroying connection %{public}s",
        v102,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v103, -1, -1);
      MEMORY[0x24953317C](v102, -1, -1);

      (*(void (**)(char *, _QWORD *))(v171 + 8))(v173, v177);
    }
    else
    {

      swift_unknownObjectRelease_n();
      (*(void (**)(char *, _QWORD *))(v171 + 8))(v100, v177);
    }
    sub_2452FEC94(a6);
    return swift_release();
  }
  v79 = swift_slowAlloc();
  v80 = swift_slowAlloc();
  v182 = (uint64_t)a6;
  v183 = v80;
  *(_DWORD *)v79 = 136446466;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
  v81 = sub_245387B48();
  v182 = sub_2453816D8(v81, v82, &v183);
  sub_245387E0C();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v79 + 12) = 2082;
  v182 = a4;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452C38);
  v83 = sub_245387B48();
  v182 = sub_2453816D8(v83, v84, &v183);
  v40 = v180;
  v42 = v178;
  sub_245387E0C();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_245256000, v77, v78, "%{public}s; Received error: %{public}s", (uint8_t *)v79, 0x16u);
  swift_arrayDestroy();
  v85 = v80;
  v26 = v179;
  MEMORY[0x24953317C](v85, -1, -1);
  MEMORY[0x24953317C](v79, -1, -1);
  swift_unknownObjectRelease();

  if (v42)
    goto LABEL_22;
LABEL_12:
  if (!v40)
    goto LABEL_26;
LABEL_13:
  v54 = v164;
  sub_245387968();
  v173 = (char *)v163;
  v55 = sub_245387980();
  v183 = sub_245318E50(v55);
  v184 = v56;
  MEMORY[0x24BDAC7A8](v183);
  sub_245316634();
  v177 = 0;
  (*(void (**)(char *, uint64_t))(v165 + 8))(v54, v166);
  v58 = v183;
  v57 = v184;
  v166 = v174 + *(int *)(v172 + 24);
  v59 = sub_245387704();
  v61 = v60;
  v183 = v59;
  v184 = v60;
  v62 = v168;
  v63 = v167;
  v64 = v169;
  (*(void (**)(char *, _QWORD, uint64_t))(v168 + 104))(v167, *MEMORY[0x24BDCD7A0], v169);
  sub_2453192B8();
  sub_2453875D8();
  v65 = v64;
  v66 = v57;
  (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v65);
  sub_245261C44(v58, v57);
  sub_245261C44(v58, v57);
  swift_bridgeObjectRetain();
  v67 = sub_2453877F4();
  v68 = sub_245387D34();
  v69 = os_log_type_enabled(v67, v68);
  v180 = (void *)v58;
  v171 = v57 >> 62;
  if (v69)
  {
    v70 = swift_slowAlloc();
    v183 = swift_slowAlloc();
    *(_DWORD *)v70 = 136446722;
    swift_bridgeObjectRetain();
    v182 = sub_2453816D8(v59, v61, &v183);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v70 + 12) = 1026;
    LODWORD(v182) = v160;
    sub_245387E0C();
    *(_WORD *)(v70 + 18) = 2050;
    __asm { BR              X10 }
  }
  sub_24525CB80(v58, v57);
  swift_bridgeObjectRelease_n();
  sub_24525CB80(v58, v57);

  v71 = v161;
  v106 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_2453875CC();
  v107 = (void *)sub_245387AF4();
  swift_bridgeObjectRelease();
  v108 = objc_msgSend(v106, sel_fileExistsAtPath_, v107);

  v109 = v156;
  v110 = *(void (**)(char *, char *, uint64_t))(v156 + 16);
  v178 = v66;
  if (v108)
  {
    v111 = v158;
    v110(v158, v26, v71);
    v112 = sub_2453877F4();
    v113 = sub_245387D34();
    if (os_log_type_enabled(v112, v113))
    {
      v114 = v109;
      v115 = (uint8_t *)swift_slowAlloc();
      v116 = swift_slowAlloc();
      v183 = v116;
      *(_DWORD *)v115 = 136446210;
      v117 = sub_2453875CC();
      v182 = sub_2453816D8(v117, v118, &v183);
      v71 = v161;
      sub_245387E0C();
      swift_bridgeObjectRelease();
      v119 = *(void (**)(char *, uint64_t))(v114 + 8);
      v119(v111, v71);
      _os_log_impl(&dword_245256000, v112, v113, "Appending chunk to %{public}s", v115, 0xCu);
      swift_arrayDestroy();
      v120 = v116;
      v26 = v179;
      MEMORY[0x24953317C](v120, -1, -1);
      MEMORY[0x24953317C](v115, -1, -1);
    }
    else
    {
      v119 = *(void (**)(char *, uint64_t))(v109 + 8);
      v119(v111, v71);
    }

    v131 = v157;
    sub_24531947C();
    v132 = (uint64_t)v154;
    v110(v154, v26, v71);
    v133 = v177;
    v134 = sub_2453127B8(v132);
    if (!v133)
    {
      v135 = v134;
      sub_245387CF8();
      v151 = (void *)sub_24538762C();
      objc_msgSend(v135, sel_writeData_, v151);

      goto LABEL_47;
    }
  }
  else
  {
    v121 = v159;
    v110(v159, v26, v71);
    v122 = sub_2453877F4();
    v123 = sub_245387D34();
    if (os_log_type_enabled(v122, v123))
    {
      v124 = v109;
      v125 = (uint8_t *)swift_slowAlloc();
      v126 = swift_slowAlloc();
      v183 = v126;
      *(_DWORD *)v125 = 136446210;
      v127 = sub_2453875CC();
      v182 = sub_2453816D8(v127, v128, &v183);
      v71 = v161;
      sub_245387E0C();
      swift_bridgeObjectRelease();
      v129 = v121;
      v119 = *(void (**)(char *, uint64_t))(v124 + 8);
      v119(v129, v71);
      _os_log_impl(&dword_245256000, v122, v123, "Creating new file at %{public}s", v125, 0xCu);
      swift_arrayDestroy();
      v130 = v126;
      v26 = v179;
      MEMORY[0x24953317C](v130, -1, -1);
      MEMORY[0x24953317C](v125, -1, -1);
    }
    else
    {
      v136 = v121;
      v119 = *(void (**)(char *, uint64_t))(v109 + 8);
      v119(v136, v71);
    }

    v131 = v157;
    v133 = v177;
    sub_245387644();
    if (!v133)
    {
LABEL_47:
      sub_2453079A8((uint64_t)v170);
      __asm { BR              X11 }
    }
  }
  v177 = v119;
  v137 = (uint64_t)v155;
  sub_2452B792C(v174, (uint64_t)v155, type metadata accessor for NetworkSyncHeader);
  v110(v131, v26, v71);
  v138 = sub_2453877F4();
  v139 = v71;
  v140 = sub_245387D1C();
  if (os_log_type_enabled(v138, v140))
  {
    v141 = swift_slowAlloc();
    v142 = swift_slowAlloc();
    v183 = v142;
    *(_DWORD *)v141 = 136446466;
    sub_245387740();
    sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v143 = sub_2453880F4();
    v182 = sub_2453816D8(v143, v144, &v183);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_2452B7B5C(v137, type metadata accessor for NetworkSyncHeader);
    *(_WORD *)(v141 + 12) = 2082;
    v145 = v157;
    v146 = sub_2453875CC();
    v182 = sub_2453816D8(v146, v147, &v183);
    v26 = v179;
    sub_245387E0C();
    swift_bridgeObjectRelease();
    v148 = v145;
    v149 = (uint64_t (*)(char *, uint64_t))v177;
    ((void (*)(char *, uint64_t))v177)(v148, v139);
    _os_log_impl(&dword_245256000, v138, v140, "Can't write file chunk: %{public}s to %{public}s", (uint8_t *)v141, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v142, -1, -1);
    MEMORY[0x24953317C](v141, -1, -1);
  }
  else
  {
    sub_2452B7B5C(v137, type metadata accessor for NetworkSyncHeader);
    v149 = (uint64_t (*)(char *, uint64_t))v177;
    ((void (*)(char *, uint64_t))v177)(v131, v139);
  }

  v150 = v173;
  sub_24530F1CC(v166, 1);

  swift_release();
  sub_24525CB80((uint64_t)v180, v178);

  return v149(v26, v139);
}

id sub_2453127B8(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  uint64_t v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = (void *)sub_24538759C();
  v11[0] = 0;
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForUpdatingURL_error_, v2, v11);

  v4 = v11[0];
  if (v3)
  {
    v5 = sub_2453875E4();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v7 = v4;
    v6(a1, v5);
  }
  else
  {
    v8 = v11[0];
    sub_245387584();

    swift_willThrow();
    v9 = sub_2453875E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

uint64_t sub_2453128CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  _QWORD *v35;
  uint64_t v36;
  uint8_t *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  NSObject *v51;
  os_log_type_t v52;
  _BOOL4 v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  void *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  NSObject *v84;
  os_log_type_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  char *v102;
  uint64_t v103;
  uint64_t aBlock[6];
  uint64_t v105;

  v4 = v3;
  v102 = (char *)a3;
  v99 = a2;
  *(_QWORD *)&v101 = a1;
  v100 = type metadata accessor for Message();
  MEMORY[0x24BDAC7A8](v100);
  v98 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_245387920();
  v95 = *(_QWORD *)(v6 - 8);
  v96 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v94 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_245387950();
  v92 = *(_QWORD *)(v8 - 8);
  v93 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v91 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_245387740();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v97 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v103 = (uint64_t)&v87 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452CA0);
  v88 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v90 = (uint64_t)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v87 - v21;
  v23 = sub_2453879D4();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (uint64_t *)((char *)&v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = *(void **)(v4 + 24);
  *v26 = v27;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v24 + 104))(v26, *MEMORY[0x24BEE5610], v23);
  v28 = v27;
  v29 = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v24 + 8))(v26, v23);
  if ((v29 & 1) == 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  v30 = (uint64_t)v102;
  v26 = (_QWORD *)v4;
  sub_2453079A8((uint64_t)v102);
  v4 = v101;
  sub_2452B792C(v101, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  sub_2452BC89C(v99, (uint64_t)&v22[*(int *)(v18 + 28)], &qword_25744F610);
  *(_QWORD *)&v22[*(int *)(v18 + 32)] = v30;
  sub_2452BC89C(v4 + *(int *)(v100 + 20), (uint64_t)v12, &qword_25440C700);
  v29 = (uint64_t)v22;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    swift_unknownObjectRetain();
    sub_245263F80((uint64_t)v12, &qword_25440C700);
    if (qword_25744FD98 == -1)
    {
LABEL_4:
      v31 = sub_245387818();
      __swift_project_value_buffer(v31, (uint64_t)qword_257462FC8);
      v32 = sub_2453877F4();
      v33 = sub_245387D34();
      v34 = os_log_type_enabled(v32, v33);
      v35 = v26;
      v36 = (uint64_t)v98;
      if (v34)
      {
        v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v37 = 0;
        _os_log_impl(&dword_245256000, v32, v33, "Message is not a response", v37, 2u);
        MEMORY[0x24953317C](v37, -1, -1);
      }

      sub_2452B792C(v4, v36, (uint64_t (*)(_QWORD))type metadata accessor for Message);
      swift_retain_n();
      v38 = sub_2453877F4();
      v39 = sub_245387D34();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = swift_slowAlloc();
        v41 = swift_slowAlloc();
        aBlock[0] = v41;
        *(_DWORD *)v40 = 136446466;
        if (*((_BYTE *)v35 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType))
          v42 = 0x73756E696D726574;
        else
          v42 = 0;
        if (*((_BYTE *)v35 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType))
          v43 = 0xE900000000000020;
        else
          v43 = 0xE000000000000000;
        v105 = sub_2453816D8(v42, v43, aBlock);
        sub_245387E0C();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 12) = 2082;
        v44 = Message.description.getter();
        v105 = sub_2453816D8(v44, v45, aBlock);
        sub_245387E0C();
        swift_bridgeObjectRelease();
        sub_2452B7B5C(v36, (uint64_t (*)(_QWORD))type metadata accessor for Message);
        _os_log_impl(&dword_245256000, v38, v39, "Publishing incoming %{public}smessage: %{public}s", (uint8_t *)v40, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v41, -1, -1);
        MEMORY[0x24953317C](v40, -1, -1);
      }
      else
      {
        swift_release_n();
        sub_2452B7B5C(v36, (uint64_t (*)(_QWORD))type metadata accessor for Message);
      }

      sub_245387878();
      v63 = v29;
      return sub_245263F80(v63, &qword_257452CA0);
    }
LABEL_31:
    swift_once();
    goto LABEL_4;
  }
  v46 = v103;
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v103, v12, v13);
  v47 = qword_25744FD98;
  swift_unknownObjectRetain();
  if (v47 != -1)
    swift_once();
  v102 = v22;
  v48 = sub_245387818();
  v49 = __swift_project_value_buffer(v48, (uint64_t)qword_257462FC8);
  v50 = v97;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v97, v46, v13);
  v51 = sub_2453877F4();
  v52 = sub_245387D34();
  v53 = os_log_type_enabled(v51, v52);
  v54 = v26;
  v87 = v13;
  if (v53)
  {
    v55 = swift_slowAlloc();
    v100 = v49;
    *(_QWORD *)&v101 = v26;
    v56 = v14;
    v57 = v50;
    v58 = (uint8_t *)v55;
    v59 = swift_slowAlloc();
    aBlock[0] = v59;
    *(_DWORD *)v58 = 136446210;
    sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v60 = sub_2453880F4();
    v105 = sub_2453816D8(v60, v61, aBlock);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    v62 = *(void (**)(char *, uint64_t))(v56 + 8);
    v54 = (_QWORD *)v101;
    v62(v57, v13);
    _os_log_impl(&dword_245256000, v51, v52, "Message is a response to outgoing message: %{public}s", v58, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v59, -1, -1);
    MEMORY[0x24953317C](v58, -1, -1);
  }
  else
  {
    v62 = *(void (**)(char *, uint64_t))(v14 + 8);
    v62(v50, v13);
  }

  swift_beginAccess();
  v64 = v54[8];
  v65 = v103;
  if (!*(_QWORD *)(v64 + 16) || (v66 = sub_2452C2058(v103), (v67 & 1) == 0))
  {
    swift_endAccess();
    v84 = sub_2453877F4();
    v85 = sub_245387D1C();
    if (os_log_type_enabled(v84, v85))
    {
      v86 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v86 = 0;
      _os_log_impl(&dword_245256000, v84, v85, "No response handler found", v86, 2u);
      MEMORY[0x24953317C](v86, -1, -1);
    }

    v62((char *)v65, v87);
    v63 = (uint64_t)v102;
    return sub_245263F80(v63, &qword_257452CA0);
  }
  v68 = v66;
  v69 = *(_QWORD *)(v64 + 56);
  v70 = swift_allocObject();
  v101 = *(_OWORD *)(v69 + 16 * v68);
  *(_OWORD *)(v70 + 16) = v101;
  swift_endAccess();
  swift_retain();
  v71 = sub_2453877F4();
  v72 = sub_245387D34();
  if (os_log_type_enabled(v71, v72))
  {
    v73 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v73 = 0;
    _os_log_impl(&dword_245256000, v71, v72, "Found response handler", v73, 2u);
    MEMORY[0x24953317C](v73, -1, -1);
  }

  swift_beginAccess();
  v74 = sub_245327F30(v65);
  swift_endAccess();
  sub_2453175F8(v74);
  *(_QWORD *)&v101 = v54[4];
  v75 = (uint64_t)v102;
  v76 = v90;
  sub_2452BC89C((uint64_t)v102, v90, &qword_257452CA0);
  v77 = (*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
  v78 = swift_allocObject();
  *(_QWORD *)(v78 + 16) = sub_245319B50;
  *(_QWORD *)(v78 + 24) = v70;
  sub_2452BC850(v76, v78 + v77, &qword_257452CA0);
  aBlock[4] = (uint64_t)sub_245319240;
  aBlock[5] = v78;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24525DD34;
  aBlock[3] = (uint64_t)&block_descriptor_272;
  v79 = _Block_copy(aBlock);
  swift_retain();
  v80 = v91;
  sub_245387938();
  v105 = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_2452D53B0();
  v81 = v94;
  v82 = v96;
  sub_245387E3C();
  MEMORY[0x2495320E4](0, v80, v81, v79);
  _Block_release(v79);
  swift_release();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v81, v82);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v80, v93);
  v62((char *)v65, v87);
  sub_245263F80(v75, &qword_257452CA0);
  return swift_release();
}

uint64_t sub_2453133C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t result;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452CA8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2453879D4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v1 + 24);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v11 = v10;
  LOBYTE(v10) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    v13 = (uint64_t *)(a1 + *(int *)(type metadata accessor for Message() + 28));
    v15 = *v13;
    v14 = v13[1];
    v16 = (uint64_t *)(v1 + 72);
    swift_beginAccess();
    v17 = *(_QWORD *)(v1 + 72);
    if (*(_QWORD *)(v17 + 16))
    {
      swift_bridgeObjectRetain();
      v18 = sub_2452C1D98(v15, v14);
      if ((v19 & 1) != 0)
      {
        v20 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v18);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_7:
        v27 = v20;
        v21 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
        v22 = *(_BYTE *)(a1 + *(int *)(v21 + 24));
        sub_2452B792C(a1, (uint64_t)v5, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v5, 0, 1, v21);
        sub_24531C784((uint64_t)v5, v22);
        v23 = v27;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v26 = *v16;
        *v16 = 0x8000000000000000;
        sub_245329250(v23, v15, v14, isUniquelyReferenced_nonNull_native);
        *v16 = v26;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_endAccess();
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    v20 = sub_245331218(MEMORY[0x24BEE4AF8]);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_245313620(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452BF8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2452BC89C(a3, (uint64_t)v7, &qword_257452CA0);
  swift_storeEnumTagMultiPayload();
  a1(v7);
  return sub_245263F80((uint64_t)v7, (uint64_t *)&unk_257452BF8);
}

uint64_t sub_2453136D0(int a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  const char *v53;
  NSObject *v54;
  NSObject *v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    switch(a1)
    {
      case 1:
        if (a2)
        {
          v8 = qword_25744FD98;
          swift_unknownObjectRetain();
          if (v8 != -1)
            swift_once();
          v9 = sub_245387818();
          __swift_project_value_buffer(v9, (uint64_t)qword_257462FC8);
          swift_unknownObjectRetain_n();
          swift_unknownObjectRetain_n();
          v10 = sub_2453877F4();
          v11 = sub_245387D1C();
          if (os_log_type_enabled(v10, v11))
          {
            v12 = swift_slowAlloc();
            v13 = swift_slowAlloc();
            v77 = v13;
            *(_DWORD *)v12 = 136446466;
            swift_unknownObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
            v14 = sub_245387B48();
            sub_2453816D8(v14, v15, &v77);
            sub_245387E0C();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v12 + 12) = 2082;
            swift_unknownObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_257452C38);
            v16 = sub_245387B48();
            sub_2453816D8(v16, v17, &v77);
            sub_245387E0C();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_245256000, v10, v11, "Connection failed and entered waiting state: %{public}s: %{public}s", (uint8_t *)v12, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x24953317C](v13, -1, -1);
            v18 = v12;
            goto LABEL_13;
          }
          goto LABEL_27;
        }
        if (qword_25744FD98 != -1)
          swift_once();
        v56 = sub_245387818();
        __swift_project_value_buffer(v56, (uint64_t)qword_257462FC8);
        swift_unknownObjectRetain_n();
        v57 = sub_2453877F4();
        v58 = sub_245387D34();
        if (os_log_type_enabled(v57, v58))
        {
          v59 = swift_slowAlloc();
          v60 = swift_slowAlloc();
          v77 = v60;
          *(_DWORD *)v59 = 136446466;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
          v61 = sub_245387B48();
          sub_2453816D8(v61, v62, &v77);
          sub_245387E0C();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v59 + 12) = 2082;
          type metadata accessor for nw_connection_state_t(0);
          v63 = sub_245387B48();
          sub_2453816D8(v63, v64, &v77);
          sub_245387E0C();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_245256000, v57, v58, "Connection state changed: %{public}s; state: %{public}s",
            (uint8_t *)v59,
            0x16u);
          swift_arrayDestroy();
          v65 = v60;
          goto LABEL_43;
        }
        goto LABEL_50;
      case 3:
        if (qword_25744FD98 != -1)
          swift_once();
        v29 = sub_245387818();
        __swift_project_value_buffer(v29, (uint64_t)qword_257462FC8);
        swift_unknownObjectRetain_n();
        v30 = sub_2453877F4();
        v31 = sub_245387D34();
        if (os_log_type_enabled(v30, v31))
        {
          v32 = (uint8_t *)swift_slowAlloc();
          v33 = swift_slowAlloc();
          v77 = v33;
          *(_DWORD *)v32 = 136446210;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
          v34 = sub_245387B48();
          sub_2453816D8(v34, v35, &v77);
          sub_245387E0C();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_245256000, v30, v31, "Connection ready: %{public}s", v32, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24953317C](v33, -1, -1);
          MEMORY[0x24953317C](v32, -1, -1);

        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        v54 = nw_protocol_copy_quic_definition();
        v55 = nw_connection_copy_protocol_metadata(a4, v54);
        swift_unknownObjectRelease();
        if (v55)
        {
          if (nw_protocol_metadata_is_quic(v55))
            nw_quic_set_keepalive();
          swift_unknownObjectRelease();
        }
        sub_245309B2C(a4);
        goto LABEL_54;
      case 4:
        if (a2)
        {
          v36 = qword_25744FD98;
          swift_unknownObjectRetain();
          if (v36 != -1)
            swift_once();
          v37 = sub_245387818();
          __swift_project_value_buffer(v37, (uint64_t)qword_257462FC8);
          swift_unknownObjectRetain_n();
          swift_unknownObjectRetain_n();
          v38 = sub_2453877F4();
          v39 = sub_245387D1C();
          if (os_log_type_enabled(v38, v39))
          {
            v40 = swift_slowAlloc();
            v41 = swift_slowAlloc();
            v77 = v41;
            *(_DWORD *)v40 = 136446466;
            swift_unknownObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
            v42 = sub_245387B48();
            sub_2453816D8(v42, v43, &v77);
            sub_245387E0C();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v40 + 12) = 2082;
            swift_unknownObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_257452C38);
            v44 = sub_245387B48();
            sub_2453816D8(v44, v45, &v77);
            sub_245387E0C();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_245256000, v38, v39, "Connection failed: %{public}s: %{public}s", (uint8_t *)v40, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x24953317C](v41, -1, -1);
            MEMORY[0x24953317C](v40, -1, -1);
            swift_unknownObjectRelease();

            goto LABEL_53;
          }

          swift_unknownObjectRelease_n();
          goto LABEL_52;
        }
        if (qword_25744FD98 != -1)
          swift_once();
        v73 = sub_245387818();
        __swift_project_value_buffer(v73, (uint64_t)qword_257462FC8);
        swift_unknownObjectRetain_n();
        v47 = sub_2453877F4();
        v48 = sub_245387D34();
        if (!os_log_type_enabled(v47, v48))
        {
LABEL_49:

LABEL_52:
          swift_unknownObjectRelease_n();
          goto LABEL_53;
        }
        v49 = (uint8_t *)swift_slowAlloc();
        v50 = swift_slowAlloc();
        v77 = v50;
        *(_DWORD *)v49 = 136446210;
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
        v74 = sub_245387B48();
        sub_2453816D8(v74, v75, &v77);
        sub_245387E0C();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        v53 = "Connection failed: %{public}s";
LABEL_48:
        _os_log_impl(&dword_245256000, v47, v48, v53, v49, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v50, -1, -1);
        MEMORY[0x24953317C](v49, -1, -1);

LABEL_53:
        sub_2452FEC94(a4);
LABEL_54:
        result = swift_release();
        break;
      case 5:
        if (qword_25744FD98 != -1)
          swift_once();
        v46 = sub_245387818();
        __swift_project_value_buffer(v46, (uint64_t)qword_257462FC8);
        swift_unknownObjectRetain_n();
        v47 = sub_2453877F4();
        v48 = sub_245387D34();
        if (!os_log_type_enabled(v47, v48))
          goto LABEL_49;
        v49 = (uint8_t *)swift_slowAlloc();
        v50 = swift_slowAlloc();
        v77 = v50;
        *(_DWORD *)v49 = 136446210;
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
        v51 = sub_245387B48();
        sub_2453816D8(v51, v52, &v77);
        sub_245387E0C();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        v53 = "Connection cancelled: %{public}s";
        goto LABEL_48;
      default:
        if (a2)
        {
          v19 = qword_25744FD98;
          swift_unknownObjectRetain();
          if (v19 != -1)
            swift_once();
          v20 = sub_245387818();
          __swift_project_value_buffer(v20, (uint64_t)qword_257462FC8);
          swift_unknownObjectRetain_n();
          swift_unknownObjectRetain_n();
          v10 = sub_2453877F4();
          v21 = sub_245387D1C();
          if (os_log_type_enabled(v10, v21))
          {
            v22 = swift_slowAlloc();
            v76 = swift_slowAlloc();
            v77 = v76;
            *(_DWORD *)v22 = 136446722;
            swift_unknownObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
            v23 = sub_245387B48();
            sub_2453816D8(v23, v24, &v77);
            sub_245387E0C();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v22 + 12) = 2082;
            type metadata accessor for nw_connection_state_t(0);
            v25 = sub_245387B48();
            sub_2453816D8(v25, v26, &v77);
            sub_245387E0C();
            swift_bridgeObjectRelease();
            *(_WORD *)(v22 + 22) = 2082;
            swift_unknownObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_257452C38);
            v27 = sub_245387B48();
            sub_2453816D8(v27, v28, &v77);
            sub_245387E0C();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_245256000, v10, v21, "Connection state changed: %{public}s; state: %{public}s; error: %{public}s",
              (uint8_t *)v22,
              0x20u);
            swift_arrayDestroy();
            MEMORY[0x24953317C](v76, -1, -1);
            v18 = v22;
LABEL_13:
            MEMORY[0x24953317C](v18, -1, -1);

          }
          else
          {
LABEL_27:

            swift_unknownObjectRelease_n();
            swift_unknownObjectRelease_n();
          }
          sub_2452FEC94(a4);
          swift_unknownObjectRelease();
        }
        else
        {
          if (qword_25744FD98 != -1)
            swift_once();
          v66 = sub_245387818();
          __swift_project_value_buffer(v66, (uint64_t)qword_257462FC8);
          swift_unknownObjectRetain_n();
          v57 = sub_2453877F4();
          v67 = sub_245387D34();
          if (os_log_type_enabled(v57, v67))
          {
            v59 = swift_slowAlloc();
            v68 = swift_slowAlloc();
            v77 = v68;
            *(_DWORD *)v59 = 136446466;
            swift_unknownObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
            v69 = sub_245387B48();
            sub_2453816D8(v69, v70, &v77);
            sub_245387E0C();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v59 + 12) = 2082;
            type metadata accessor for nw_connection_state_t(0);
            v71 = sub_245387B48();
            sub_2453816D8(v71, v72, &v77);
            sub_245387E0C();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_245256000, v57, v67, "Connection state changed: %{public}s; state: %{public}s",
              (uint8_t *)v59,
              0x16u);
            swift_arrayDestroy();
            v65 = v68;
LABEL_43:
            MEMORY[0x24953317C](v65, -1, -1);
            MEMORY[0x24953317C](v59, -1, -1);

          }
          else
          {
LABEL_50:

            swift_unknownObjectRelease_n();
          }
        }
        goto LABEL_54;
    }
  }
  return result;
}

void sub_245314574()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  os_unfair_lock_s *v40;
  uint64_t v41;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2453876EC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v46 = (char *)v42 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v42 - v12;
  v14 = sub_2453879D4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (_QWORD *)((char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = *(void **)(v1 + 24);
  *v17 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BEE5610], v14);
  v47 = v18;
  LOBYTE(v18) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  v45 = v9;
  v19 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 80) + 24);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v19 + 4);
  sub_2452E6204(v20, sub_24525C730);
  os_unfair_lock_unlock(v19 + 4);
  swift_release();
  swift_release();
  sub_245314D28(v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_245263F80((uint64_t)v4, &qword_25744F6B0);
    if (qword_25744FD98 == -1)
    {
LABEL_4:
      v21 = sub_245387818();
      __swift_project_value_buffer(v21, (uint64_t)qword_257462FC8);
      v22 = sub_2453877F4();
      v23 = sub_245387D34();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_245256000, v22, v23, "Not starting connection expiration timer", v24, 2u);
        MEMORY[0x24953317C](v24, -1, -1);
      }

      return;
    }
LABEL_14:
    swift_once();
    goto LABEL_4;
  }
  v25 = v13;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v13, v4, v5);
  if (qword_25744FD98 != -1)
    swift_once();
  v44 = 0;
  v26 = sub_245387818();
  __swift_project_value_buffer(v26, (uint64_t)qword_257462FC8);
  v27 = v46;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v46, v25, v5);
  v28 = sub_2453877F4();
  v29 = sub_245387D34();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    v43 = swift_slowAlloc();
    v49 = v43;
    *(_DWORD *)v30 = 136446210;
    v42[1] = v30 + 4;
    sub_24525C6C4((unint64_t *)&qword_2574525E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
    v31 = sub_2453880F4();
    v48 = sub_2453816D8(v31, v32, &v49);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    v33 = *(void (**)(char *, uint64_t))(v6 + 8);
    v33(v27, v5);
    _os_log_impl(&dword_245256000, v28, v29, "Connection expiration timer will fire at %{public}s", v30, 0xCu);
    v34 = v43;
    swift_arrayDestroy();
    MEMORY[0x24953317C](v34, -1, -1);
    MEMORY[0x24953317C](v30, -1, -1);
  }
  else
  {
    v33 = *(void (**)(char *, uint64_t))(v6 + 8);
    v33(v27, v5);
  }

  v35 = *(_QWORD *)(v1 + 80);
  swift_retain();
  v36 = v45;
  sub_2453876C8();
  sub_245387668();
  v38 = v37;
  v39 = ((uint64_t (*)(char *, uint64_t))v33)(v36, v5);
  v40 = *(os_unfair_lock_s **)(v35 + 24);
  MEMORY[0x24BDAC7A8](v39);
  v42[-6] = v35;
  v42[-5] = v38;
  v42[-4] = v47;
  v42[-3] = sub_245318770;
  v42[-2] = v1;
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v40 + 4);
  sub_2452E6204(v41, (uint64_t (*)(void))sub_24525C890);
  os_unfair_lock_unlock(v40 + 4);
  swift_release();
  swift_release();
  swift_release();
  v33(v25, v5);
}

uint64_t sub_245314AC8()
{
  _QWORD *v0;
  double v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t result;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  double v18;

  v2 = v0;
  v3 = sub_2453879D4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (_QWORD *)((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = (void *)v2[3];
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE5610], v3);
  v8 = v7;
  LOBYTE(v7) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_7;
  }
  if (v2[12])
    return result;
  result = swift_beginAccess();
  if (!*(_QWORD *)(v2[7] + 16))
    return result;
  result = sub_245318658();
  if ((result & 1) == 0)
    return result;
  v1 = sub_245317F00();
  if (qword_25744FD98 != -1)
    goto LABEL_14;
LABEL_7:
  v10 = sub_245387818();
  __swift_project_value_buffer(v10, (uint64_t)qword_257462FC8);
  v11 = sub_2453877F4();
  v12 = sub_245387D34();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v13 = 134349056;
    v18 = v1;
    sub_245387E0C();
    _os_log_impl(&dword_245256000, v11, v12, "Creating prevent-sleep assertion with duration %{public}f", v13, 0xCu);
    MEMORY[0x24953317C](v13, -1, -1);
  }

  v14 = objc_allocWithZone(MEMORY[0x24BEB3730]);
  v15 = (void *)sub_245387AF4();
  v16 = objc_msgSend(v14, sel_initWithIdentifier_, v15);

  v17 = (void *)v2[12];
  v2[12] = v16;

  result = v2[12];
  if (result)
    result = (uint64_t)objc_msgSend((id)result, sel_acquireWithTimeout_handler_, 0, 0.0);
  if (v2[13])
  {
    swift_retain();
    sub_2452F4E08();
    return swift_release();
  }
  return result;
}

uint64_t sub_245314D28@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  char *v58;
  int64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  char *v68;
  char v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  int64_t v77;
  char *v78;
  _QWORD *v79;
  char *v80;
  char *v81;
  char *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  int64_t v91;
  void (*v92)(char *, char *, uint64_t);

  v75 = a1;
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452C50);
  v2 = MEMORY[0x24BDAC7A8](v84);
  v83 = (uint64_t *)((char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = MEMORY[0x24BDAC7A8](v2);
  v79 = (uint64_t *)((char *)&v73 - v5);
  MEMORY[0x24BDAC7A8](v4);
  v82 = (char *)&v73 - v6;
  v7 = sub_2453876EC();
  v87 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v86 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v81 = (char *)&v73 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v80 = (char *)&v73 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v78 = (char *)&v73 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v73 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v74 = (char *)&v73 - v19;
  v20 = sub_2453879D4();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (uint64_t *)((char *)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = v1;
  v25 = *(void **)(v1 + 24);
  *v23 = v25;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v21 + 104))(v23, *MEMORY[0x24BEE5610], v20);
  v26 = v25;
  LOBYTE(v25) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v21 + 8))(v23, v20);
  if ((v25 & 1) != 0)
  {
    v88 = v7;
    sub_245317F00();
    swift_beginAccess();
    v28 = *(_QWORD *)(v24 + 56);
    swift_bridgeObjectRetain();
    v89 = v18;
    sub_24538765C();
    v29 = *(_QWORD *)(v28 + 64);
    v76 = v28 + 64;
    v30 = 1 << *(_BYTE *)(v28 + 32);
    v31 = -1;
    if (v30 < 64)
      v31 = ~(-1 << v30);
    v32 = v31 & v29;
    v77 = (unint64_t)(v30 + 63) >> 6;
    v85 = v28;
    result = swift_bridgeObjectRetain();
    v33 = 0;
    v34 = v80;
    v35 = v88;
    v36 = v89;
    while (1)
    {
      if (v32)
      {
        v90 = (v32 - 1) & v32;
        v91 = v33;
        v37 = __clz(__rbit64(v32)) | (v33 << 6);
      }
      else
      {
        v59 = v33 + 1;
        if (__OFADD__(v33, 1))
        {
          __break(1u);
          break;
        }
        v61 = v88;
        v60 = v89;
        if (v59 >= v77)
        {
LABEL_29:
          swift_release();
          v65 = v87;
          v66 = *(void (**)(char *, char *, uint64_t))(v87 + 32);
          v67 = v74;
          v66(v74, v60, v61);
          swift_bridgeObjectRelease();
          v68 = v86;
          sub_24538765C();
          v69 = sub_2453876BC();
          v70 = *(void (**)(char *, uint64_t))(v65 + 8);
          v70(v68, v61);
          if ((v69 & 1) != 0)
          {
            v70(v67, v61);
            v71 = 1;
            v72 = v75;
          }
          else
          {
            v72 = v75;
            v66(v75, v67, v61);
            v71 = 0;
          }
          return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56))(v72, v71, 1, v61);
        }
        v62 = *(_QWORD *)(v76 + 8 * v59);
        v63 = v33 + 1;
        if (!v62)
        {
          v63 = v33 + 2;
          if (v33 + 2 >= v77)
            goto LABEL_29;
          v62 = *(_QWORD *)(v76 + 8 * v63);
          if (!v62)
          {
            v63 = v33 + 3;
            if (v33 + 3 >= v77)
              goto LABEL_29;
            v62 = *(_QWORD *)(v76 + 8 * v63);
            if (!v62)
            {
              v63 = v33 + 4;
              if (v33 + 4 >= v77)
                goto LABEL_29;
              v62 = *(_QWORD *)(v76 + 8 * v63);
              if (!v62)
              {
                v63 = v33 + 5;
                if (v33 + 5 >= v77)
                  goto LABEL_29;
                v62 = *(_QWORD *)(v76 + 8 * v63);
                if (!v62)
                {
                  v64 = v33 + 6;
                  if (v33 + 6 >= v77)
                    goto LABEL_29;
                  v62 = *(_QWORD *)(v76 + 8 * v64);
                  if (!v62)
                  {
                    while (1)
                    {
                      v63 = v64 + 1;
                      if (__OFADD__(v64, 1))
                        goto LABEL_35;
                      if (v63 >= v77)
                        goto LABEL_29;
                      v62 = *(_QWORD *)(v76 + 8 * v63);
                      ++v64;
                      if (v62)
                        goto LABEL_28;
                    }
                  }
                  v63 = v33 + 6;
                }
              }
            }
          }
        }
LABEL_28:
        v90 = (v62 - 1) & v62;
        v91 = v63;
        v37 = __clz(__rbit64(v62)) + (v63 << 6);
      }
      v38 = *(_QWORD *)(v85 + 56);
      v39 = (uint64_t *)(*(_QWORD *)(v85 + 48) + 16 * v37);
      v40 = *v39;
      v41 = v39[1];
      v42 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
      v43 = v38 + *(_QWORD *)(*(_QWORD *)(v42 - 8) + 72) * v37;
      v44 = v84;
      v45 = v82;
      sub_2452B792C(v43, (uint64_t)&v82[*(int *)(v84 + 48)], type metadata accessor for NetworkMessenger.ExpiringConnection);
      *v45 = v40;
      v45[1] = v41;
      v46 = v79;
      sub_2452BC850((uint64_t)v45, (uint64_t)v79, &qword_257452C50);
      v47 = v87;
      v92 = *(void (**)(char *, char *, uint64_t))(v87 + 32);
      v92(v34, v36, v35);
      v48 = *(int *)(v44 + 48);
      v49 = v83;
      v50 = (uint64_t)v83 + v48;
      v51 = v46[1];
      *v83 = *v46;
      v49[1] = v51;
      sub_2452B792C((uint64_t)v46 + v48, v50, type metadata accessor for NetworkMessenger.ExpiringConnection);
      v52 = v50 + *(int *)(v42 + 20);
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
      v54 = v86;
      v53(v86, v52, v35);
      swift_bridgeObjectRetain();
      sub_2452B7B5C(v50, type metadata accessor for NetworkMessenger.ExpiringConnection);
      v55 = v81;
      sub_245387674();
      v56 = *(void (**)(char *, uint64_t))(v47 + 8);
      v56(v54, v35);
      sub_24525C6C4((unint64_t *)&unk_2574525D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
      if ((sub_245387AD0() & 1) != 0)
        v57 = v55;
      else
        v57 = v34;
      v58 = v78;
      v53(v78, (uint64_t)v57, v35);
      v56(v55, v35);
      v56(v34, v35);
      v92(v36, v58, v35);
      result = sub_245263F80((uint64_t)v46, &qword_257452C50);
      v32 = v90;
      v33 = v91;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

unint64_t sub_245315360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  id v7;
  unint64_t result;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  NSObject *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  __int128 v27;
  uint64_t v28;
  _QWORD *v29;
  NSObject *v30;
  uint64_t v31;

  v1 = v0;
  v2 = sub_2453879D4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (unint64_t)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v1 + 24);
  *(_QWORD *)v5 = v6;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_2453879F8();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    result = sub_245315654();
    v5 = result;
    if (!(result >> 62))
    {
      v10 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v10)
        goto LABEL_4;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  result = sub_245387F8C();
  v10 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_4:
  if (v10 >= 1)
  {
    v11 = 0;
    v12 = v5 & 0xC000000000000001;
    v13 = 0x25744F000uLL;
    *(_QWORD *)&v9 = 136446210;
    v27 = v9;
    v26[1] = MEMORY[0x24BEE4AD8] + 8;
    v28 = v10;
    v29 = (_QWORD *)v5;
    do
    {
      if (v12)
      {
        v14 = MEMORY[0x24953221C](v11, v5);
      }
      else
      {
        v14 = *(NSObject **)(v5 + 8 * v11 + 32);
        swift_unknownObjectRetain();
      }
      if (*(_QWORD *)(v13 + 3480) != -1)
        swift_once();
      v15 = sub_245387818();
      __swift_project_value_buffer(v15, (uint64_t)qword_257462FC8);
      swift_unknownObjectRetain_n();
      v16 = sub_2453877F4();
      v17 = sub_245387D34();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = swift_slowAlloc();
        v19 = v12;
        v20 = v1;
        v21 = swift_slowAlloc();
        v30 = v14;
        v31 = v21;
        *(_DWORD *)v18 = v27;
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
        v22 = sub_245387B48();
        *(_QWORD *)(v18 + 4) = sub_2453816D8(v22, v23, &v31);
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_245256000, v16, v17, "Destroying expired connection: %{public}s", (uint8_t *)v18, 0xCu);
        swift_arrayDestroy();
        v24 = v21;
        v1 = v20;
        v12 = v19;
        v10 = v28;
        v5 = (unint64_t)v29;
        MEMORY[0x24953317C](v24, -1, -1);
        v25 = v18;
        v13 = 0x25744F000;
        MEMORY[0x24953317C](v25, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      ++v11;
      sub_2452FEC94(v14);
      swift_unknownObjectRelease();
    }
    while (v10 != v11);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_245315654()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  char **v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v55;
  char *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;

  v1 = v0;
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452C50);
  v2 = MEMORY[0x24BDAC7A8](v66);
  v65 = (char **)((char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = MEMORY[0x24BDAC7A8](v2);
  v64 = (char **)((char *)&v55 - v5);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v63 = (char **)((char *)&v55 - v7);
  MEMORY[0x24BDAC7A8](v6);
  v62 = (char *)&v55 - v8;
  v9 = (uint64_t *)sub_2453876EC();
  v10 = *(v9 - 1);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v55 - v14;
  v16 = sub_2453879D4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(void **)(v1 + 24);
  *(_QWORD *)v19 = v20;
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x24BEE5610], v16);
  v21 = v20;
  LOBYTE(v20) = sub_2453879F8();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) == 0)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  sub_2453876C8();
  sub_245387674();
  v19 = *(char **)(v10 + 8);
  ((void (*)(char *, uint64_t *))v19)(v13, v9);
  v22 = sub_245317F00();
  v23 = swift_beginAccess();
  v1 = *(_QWORD *)(v1 + 56);
  MEMORY[0x24BDAC7A8](v23);
  *((double *)&v55 - 2) = v22;
  *(&v55 - 1) = v15;
  swift_bridgeObjectRetain();
  v24 = sub_24532A0B8((uint64_t)sub_2453187F8, (uint64_t)(&v55 - 4), v1);
  swift_bridgeObjectRelease();
  v25 = v24;
  v26 = *(_QWORD *)(v24 + 16);
  if (v26)
  {
    v55 = v19;
    v56 = v15;
    v57 = v9;
    v69 = MEMORY[0x24BEE4AF8];
    sub_245387F38();
    v28 = sub_245330EE4(v24);
    v29 = 0;
    v30 = v24 + 64;
    v31 = *(_BYTE *)(v24 + 32);
    v58 = v24 + 80;
    v59 = v27;
    v68 = v24;
    v60 = v24 + 64;
    v61 = v26;
    v15 = (char *)v66;
    do
    {
      if (v28 < 0 || v28 >= 1 << v31)
      {
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      v1 = (unint64_t)v28 >> 6;
      if ((*(_QWORD *)(v30 + 8 * ((unint64_t)v28 >> 6)) & (1 << v28)) == 0)
        goto LABEL_27;
      if (*(_DWORD *)(v25 + 36) != (_DWORD)v27)
        goto LABEL_28;
      v67 = v29;
      v33 = v62;
      v34 = (uint64_t)&v62[*((int *)v15 + 12)];
      v35 = *(_QWORD *)(v25 + 48);
      v36 = *(_QWORD *)(v68 + 56);
      v37 = (uint64_t *)(v35 + 16 * v28);
      v39 = *v37;
      v38 = v37[1];
      v40 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
      sub_2452B792C(v36 + *(_QWORD *)(*(_QWORD *)(v40 - 8) + 72) * v28, v34, type metadata accessor for NetworkMessenger.ExpiringConnection);
      *v33 = v39;
      v33[1] = v38;
      v41 = v63;
      *v63 = v39;
      v41[1] = v38;
      sub_2452B792C(v34, (uint64_t)v41 + *((int *)v15 + 12), type metadata accessor for NetworkMessenger.ExpiringConnection);
      v42 = (uint64_t)v41;
      v43 = v64;
      v9 = &qword_257452C50;
      sub_2452BC850(v42, (uint64_t)v64, &qword_257452C50);
      swift_bridgeObjectRetain_n();
      sub_245263F80((uint64_t)v33, &qword_257452C50);
      v44 = *((int *)v15 + 12);
      v45 = v65;
      v46 = (char **)((char *)v65 + v44);
      v47 = v43[1];
      *v65 = *v43;
      v45[1] = v47;
      sub_2452B792C((uint64_t)v43 + v44, (uint64_t)v46, type metadata accessor for NetworkMessenger.ExpiringConnection);
      v19 = *v46;
      swift_unknownObjectRetain();
      sub_2452B7B5C((uint64_t)v46, type metadata accessor for NetworkMessenger.ExpiringConnection);
      sub_245263F80((uint64_t)v43, &qword_257452C50);
      sub_245387F20();
      sub_245387F44();
      v25 = v68;
      sub_245387F50();
      sub_245387F2C();
      v31 = *(_BYTE *)(v25 + 32);
      v32 = 1 << v31;
      if (v28 >= 1 << v31)
        goto LABEL_29;
      v30 = v60;
      v48 = *(_QWORD *)(v60 + 8 * v1);
      if ((v48 & (1 << v28)) == 0)
        goto LABEL_30;
      LODWORD(v27) = v59;
      if (*(_DWORD *)(v25 + 36) != (_DWORD)v59)
        goto LABEL_31;
      v49 = v48 & (-2 << (v28 & 0x3F));
      if (v49)
      {
        v32 = __clz(__rbit64(v49)) | v28 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v50 = v1 + 1;
        v51 = (v32 + 63) >> 6;
        if (v1 + 1 < v51)
        {
          v52 = *(_QWORD *)(v60 + 8 * v50);
          if (v52)
          {
LABEL_19:
            v32 = __clz(__rbit64(v52)) + (v50 << 6);
          }
          else
          {
            while (v51 - 2 != v1)
            {
              v52 = *(_QWORD *)(v58 + 8 * v1++);
              if (v52)
              {
                v50 = v1 + 1;
                goto LABEL_19;
              }
            }
          }
        }
      }
      v29 = v67 + 1;
      v28 = v32;
    }
    while (v67 + 1 != v61);
    v1 = v69;
    swift_release();
    v15 = v56;
    v9 = v57;
    v19 = v55;
    if ((v1 & 0x8000000000000000) == 0)
      goto LABEL_23;
    goto LABEL_33;
  }
  swift_release();
  v1 = MEMORY[0x24BEE4AF8];
  if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
  {
LABEL_33:
    v53 = (uint64_t)sub_24532DD24(v1);
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
LABEL_23:
  if ((v1 & 0x4000000000000000) != 0)
    goto LABEL_33;
  v53 = v1 & 0xFFFFFFFFFFFFFF8;
LABEL_25:
  ((void (*)(char *, uint64_t *))v19)(v15, v9);
  return v53;
}

BOOL sub_245315B88(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a3;
  v25 = a2;
  v4 = sub_2453876EC();
  v26 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v25 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452C50);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (uint64_t *)((char *)&v25 - v15);
  v18 = *a1;
  v17 = a1[1];
  v19 = (char *)&v25 + *(int *)(v14 + 48) - v15;
  *v16 = v18;
  v16[1] = v17;
  sub_2452B792C(v25, (uint64_t)v19, type metadata accessor for NetworkMessenger.ExpiringConnection);
  v20 = (uint64_t)v13 + *(int *)(v10 + 48);
  *v13 = v18;
  v13[1] = v17;
  sub_2452B792C((uint64_t)v19, v20, type metadata accessor for NetworkMessenger.ExpiringConnection);
  v21 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
  v22 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v7, v20 + *(int *)(v21 + 20), v4);
  swift_bridgeObjectRetain();
  sub_2452B7B5C(v20, type metadata accessor for NetworkMessenger.ExpiringConnection);
  sub_245387698();
  v23 = *(void (**)(char *, uint64_t))(v22 + 8);
  v23(v7, v4);
  sub_24525C6C4((unint64_t *)&unk_2574525D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  LOBYTE(v22) = sub_245387AD0();
  v23(v9, v4);
  sub_245263F80((uint64_t)v16, &qword_257452C50);
  return (v22 & 1) == 0;
}

void sub_245315D8C(void *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = sub_2453879D4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = (void *)a2[3];
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v9 = v8;
  LOBYTE(v8) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_4;
  }
  if (!xpc_dictionary_get_string(a1, (const char *)*MEMORY[0x24BDACF50]))
    return;
  if (qword_25744FD98 != -1)
    goto LABEL_11;
LABEL_4:
  v10 = sub_245387818();
  __swift_project_value_buffer(v10, (uint64_t)qword_257462FC8);
  v11 = sub_2453877F4();
  v12 = sub_245387D34();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v18 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = sub_245387B9C();
    v17 = sub_2453816D8(v15, v16, &v18);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v11, v12, "Wake event received [rapport]: %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v14, -1, -1);
    MEMORY[0x24953317C](v13, -1, -1);
  }

  if (a2[5])
  {
    sub_245317B88(a1);
  }
  else
  {
    a2[6] = a1;
    swift_unknownObjectRelease();
    swift_unknownObjectRetain();
  }
}

void sub_245315FD0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_25744FD90 != -1)
    swift_once();
  v5 = sub_245387818();
  __swift_project_value_buffer(v5, (uint64_t)qword_257462FB0);
  swift_bridgeObjectRetain_n();
  v6 = sub_2453877F4();
  v7 = sub_245387D34();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v10 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_bridgeObjectRetain();
    sub_2453816D8(a2, a3, &v10);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_245256000, v6, v7, "received notification %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v9, -1, -1);
    MEMORY[0x24953317C](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_24531616C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for Message();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_release();
  swift_release();
  v7 = v0 + v3;
  v8 = sub_245387740();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v11 = v7 + *(int *)(v1 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8))
    v10(v11, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24525CB80(*(_QWORD *)(v7 + *(int *)(v1 + 36)), *(_QWORD *)(v7 + *(int *)(v1 + 36) + 8));
  v12 = sub_2453875E4();
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v0 + v6, 1, v12))
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v0 + v6, v12);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2453162F8()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for Message() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8);
  v5 = (v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  return sub_2453018DC(v0[2], v0[3], v0[4], (uint64_t)v0 + v2, (uint64_t)v0 + v5, *(uint64_t *)((char *)v0 + ((v6 + 7) & 0xFFFFFFFFFFFFFFF8)), *((unsigned __int8 *)v0 + ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(uint64_t *)((char *)v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(double *)((char *)v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_245316394()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_2453163BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for Message();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_release();
  v7 = v0 + v3;
  v8 = sub_245387740();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v11 = v7 + *(int *)(v1 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8))
    v10(v11, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24525CB80(*(_QWORD *)(v7 + *(int *)(v1 + 36)), *(_QWORD *)(v7 + *(int *)(v1 + 36) + 8));
  swift_release();
  v12 = sub_2453875E4();
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v0 + v6, 1, v12))
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v0 + v6, v12);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24531655C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v3 = *(_QWORD *)(type metadata accessor for Message() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v7 + *(_QWORD *)(v6 + 64);
  return sub_245301CBC(a1, *(void (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, *(_QWORD *)(v1 + v5), v1 + v7, *(_QWORD *)(v1 + ((v8 + 7) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(double *)(v1 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_24531661C()
{
  return objectdestroy_10Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_245316628(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_2453083B8(a1, a2, v2[2], v2[3], v2[4]);
}

void sub_245316634()
{
  __asm { BR              X12 }
}

uint64_t sub_245316694@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *, char *);
  _QWORD *v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  unsigned __int8 v10;

  v6 = v1;
  LOWORD(v7) = a1;
  BYTE2(v7) = BYTE2(a1);
  HIBYTE(v7) = BYTE3(a1);
  v8 = BYTE4(a1);
  v9 = BYTE5(a1);
  v10 = BYTE6(a1);
  result = v2(&v6, (char *)&v6 + BYTE6(a1));
  v5 = v7 | ((unint64_t)v8 << 32) | ((unint64_t)v9 << 40) | ((unint64_t)v10 << 48);
  *v3 = v6;
  v3[1] = v5;
  return result;
}

uint64_t sub_245316868(uint64_t (*a1)(uint64_t, uint64_t))
{
  int *v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = sub_2453875FC();
  v4 = *v1;
  v5 = v1[1];
  if ((int)v5 < (int)v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  result = sub_2453874AC();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v6 = result;
  result = sub_2453874D0();
  v7 = v4 - result;
  if (__OFSUB__(v4, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v8 = v5 - v4;
  v9 = sub_2453874C4();
  if (v9 >= v8)
    v10 = v8;
  else
    v10 = v9;
  return a1(v6 + v7, v6 + v7 + v10);
}

uint64_t sub_245316910()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(0);
}

uint64_t sub_245316934()
{
  return swift_deallocObject();
}

uint64_t sub_245316944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);

  v1 = type metadata accessor for Message();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v15 = *(_QWORD *)(v5 + 64);
  v7 = sub_245387740();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  swift_release();
  v10 = v0 + v3;
  v16 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v16(v10, v7);
  v11 = v10 + *(int *)(v1 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v11, 1, v7))
    v16(v11, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24525CB80(*(_QWORD *)(v10 + *(int *)(v1 + 36)), *(_QWORD *)(v10 + *(int *)(v1 + 36) + 8));
  v12 = sub_2453875E4();
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v0 + v6, 1, v12))
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v0 + v6, v12);
  swift_unknownObjectRelease();
  v16(v0 + ((((v15 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + v9 + 9) & ~v9), v7);
  return swift_deallocObject();
}

uint64_t sub_245316B04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v5 = *(_QWORD *)(type metadata accessor for Message() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8);
  v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)(sub_245387740() - 8);
  v12 = (v10 + *(unsigned __int8 *)(v11 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  return sub_245302170(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, v2 + v9, *(void (**)(char *, uint64_t))(v2 + v10), *(_BYTE *)(v2 + v10 + 8), v2 + v12, *(double *)(v2 + ((*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_245316BEC(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  result = sub_2453874AC();
  v15 = result;
  if (result)
  {
    result = sub_2453874D0();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v15 += a1 - result;
  }
  v16 = __OFSUB__(a2, a1);
  v17 = a2 - a1;
  if (v16)
  {
    __break(1u);
    goto LABEL_13;
  }
  v18 = sub_2453874C4();
  if (v18 >= v17)
    v19 = v17;
  else
    v19 = v18;
  v20 = v15 + v19;
  if (v15)
    v21 = v20;
  else
    v21 = 0;
  sub_245307D64(v15, v21, a4, a5, a6, a7, a8);
  swift_release();
  swift_unknownObjectRelease();
  return sub_2453175F8(a7);
}

uint64_t sub_245316CDC(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = v3;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    v13 = *v3;
    *v3 = 0x8000000000000000;
    sub_2452C9A10();
    *v3 = v13;
    result = swift_bridgeObjectRelease();
  }
  if ((a2 & 0x8000000000000000) != 0 || (v9 = *v3, 1 << *(_BYTE *)(*v4 + 32) <= (uint64_t)a2))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(_QWORD *)(v9 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(v9 + 36) == a3)
  {
    *v4 = 0x8000000000000000;
    v10 = *(_QWORD *)(v9 + 56);
    v11 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * a2);
    v12 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
    sub_2452B7AB8(v10 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a2, a1, type metadata accessor for NetworkMessenger.ExpiringConnection);
    sub_245372F54(a2, v9);
    *v4 = v9;
    swift_bridgeObjectRelease();
    return v11;
  }
LABEL_10:
  __break(1u);
  return result;
}

void (*sub_245316DFC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_245316E50(v6, a2, a3);
  return sub_24527E9D8;
}

uint64_t (*sub_245316E50(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x24953221C](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_unknownObjectRetain();
LABEL_5:
    *v3 = v4;
    return sub_245316EBC;
  }
  __break(1u);
  return result;
}

uint64_t sub_245316EBC()
{
  return swift_unknownObjectRelease();
}

_QWORD *sub_245316EC4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452CC0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_245319274();
  sub_245388490();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452CD0);
    sub_245319950((unint64_t *)&unk_257452CD8, (uint64_t (*)(void))sub_2452CC5D0, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
    sub_245388034();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = (_QWORD *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_245317014(void *a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(sub_245387740() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_245302670(a1, v4, *(_QWORD *)(v2 + 16), v2 + v6, *(uint64_t (**)(_QWORD))v7, *(_QWORD *)(v7 + 8));
}

uint64_t objectdestroy_29Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_245387740();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_245317114()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(sub_245387740() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (uint64_t *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_245302B14(*(_QWORD *)(v0 + 16), v0 + v2, *v3, v3[1]);
}

uint64_t sub_24531715C()
{
  uint64_t v0;

  return sub_245302FBC(*(void (**)(uint64_t *))(v0 + 16));
}

unint64_t sub_245317164()
{
  unint64_t result;

  result = qword_257452C08;
  if (!qword_257452C08)
  {
    result = MEMORY[0x2495330B0](&unk_24538DD74, &type metadata for NetworkMessenger.NetworkMessengerOperationalError);
    atomic_store(result, (unint64_t *)&qword_257452C08);
  }
  return result;
}

uint64_t sub_2453171AC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 16))(*(_QWORD *)(v0 + 32), 1);
}

uint64_t sub_2453171D8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = sub_2453875E4();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2453172A0(void *a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2453038F8(a1, v4, v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void sub_245317314()
{
  uint64_t v0;

  sub_24530769C(*(void (**)(void *, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), 0);
}

void sub_245317330()
{
  uint64_t v0;

  sub_24530769C(*(void (**)(void *, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), 2);
}

uint64_t sub_24531734C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_245317370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void (*v10)(unint64_t, uint64_t);

  v1 = sub_2453875E4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_245387740();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v3 + v4 + v7) & ~v7;
  v9 = (*(_QWORD *)(v6 + 64) + v7 + v8) & ~v7;
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v10 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
  v10(v0 + v8, v5);
  v10(v0 + v9, v5);
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_245317490(NSObject *a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;

  v7 = *(_QWORD *)(sub_2453875E4() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(sub_245387740() - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v8 + v9 + v11) & ~v11;
  v13 = *(_QWORD *)(v10 + 64);
  v14 = (v13 + v11 + v12) & ~v11;
  v15 = v14 + v13;
  v16 = ((v15 & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFFCLL;
  v17 = (v16 + 11) & 0xFFFFFFFFFFFFFFF8;
  return sub_24530677C(a1, a2, a3, *(_QWORD *)(v3 + 16), *(NSObject **)(v3 + 24), (void (*)(_BYTE *, _BYTE *, uint64_t))(v3 + v8), v3 + v12, v3 + v14, *(_BYTE *)(v3 + v15), *(_DWORD *)((v15 & 0xFFFFFFFFFFFFFFFCLL) + v3 + 4), *(_DWORD *)(v3 + v16), *(_QWORD *)(v3 + v17), *(_QWORD *)(v3 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v3 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(NSObject **)(v3 + ((((v17 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8))) & 1;
}

uint64_t sub_245317590()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2453175B4()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 16))(1, 0);
}

void sub_2453175DC()
{
  uint64_t v0;

  sub_24530769C(*(void (**)(void *, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), 1);
}

uint64_t sub_2453175F8(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

unint64_t sub_245317608()
{
  unint64_t result;

  result = qword_257452C28;
  if (!qword_257452C28)
  {
    result = MEMORY[0x2495330B0](&unk_24538DD4C, &type metadata for NetworkMessenger.ExtendedAttributes);
    atomic_store(result, (unint64_t *)&qword_257452C28);
  }
  return result;
}

uint64_t sub_24531764C()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_245317680(void *a1, char a2)
{
  uint64_t *v2;

  return sub_2453076F8(a1, a2 & 1, v2[2], v2[3], v2[4]);
}

uint64_t sub_245317690(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_2453176A0@<X0>(const char *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_24538349C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_2453176B8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  sub_245263EE8(*(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

void sub_2453176F0()
{
  uint64_t v0;

  sub_245307900(*(void (**)(void *, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_245317700()
{
  uint64_t v0;

  swift_release();
  sub_245263EE8(*(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_245317730()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_24531775C()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  if (*(_QWORD *)(v0 + 40))
    swift_release();
  return swift_deallocObject();
}

void sub_245317798(uint64_t a1)
{
  uint64_t v1;

  sub_245307EE8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(uint64_t, uint64_t))(v1 + 40));
}

unint64_t sub_2453177A8()
{
  unint64_t result;

  result = qword_257452C30;
  if (!qword_257452C30)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for NetworkMessagingCriticalError, &type metadata for NetworkMessagingCriticalError);
    atomic_store(result, (unint64_t *)&qword_257452C30);
  }
  return result;
}

uint64_t sub_2453177EC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);

  v27 = a2;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452C50);
  MEMORY[0x24BDAC7A8](v26);
  v4 = (uint64_t *)((char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(_QWORD *)(a1 + 64);
  v24 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v25 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v19 >= v25)
      goto LABEL_24;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_24;
      v20 = *(_QWORD *)(v24 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v25)
          goto LABEL_24;
        v20 = *(_QWORD *)(v24 + 8 * v10);
        if (!v20)
        {
          v10 = v19 + 3;
          if (v19 + 3 >= v25)
            goto LABEL_24;
          v20 = *(_QWORD *)(v24 + 8 * v10);
          if (!v20)
          {
            v21 = v19 + 4;
            if (v21 >= v25)
            {
LABEL_24:
              v22 = 0;
              goto LABEL_25;
            }
            v20 = *(_QWORD *)(v24 + 8 * v21);
            if (!v20)
            {
              while (1)
              {
                v10 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_27;
                if (v10 >= v25)
                  goto LABEL_24;
                v20 = *(_QWORD *)(v24 + 8 * v10);
                ++v21;
                if (v20)
                  goto LABEL_22;
              }
            }
            v10 = v21;
          }
        }
      }
    }
LABEL_22:
    v8 = (v20 - 1) & v20;
    v12 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_5:
    v13 = *(_QWORD *)(a1 + 56);
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v16 = *v14;
    v15 = v14[1];
    v17 = v13
        + *(_QWORD *)(*(_QWORD *)(type metadata accessor for NetworkMessenger.ExpiringConnection(0) - 8) + 72) * v12;
    v18 = (uint64_t)v4 + *(int *)(v26 + 48);
    sub_2452B792C(v17, v18, type metadata accessor for NetworkMessenger.ExpiringConnection);
    *v4 = v16;
    v4[1] = v15;
    swift_bridgeObjectRetain();
    LOBYTE(v15) = v27(v16, v15, v18);
    result = sub_245263F80((uint64_t)v4, &qword_257452C50);
    if ((v15 & 1) != 0)
    {
      v22 = 1;
LABEL_25:
      swift_release();
      return v22;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_245317A4C(unsigned __int8 *a1)
{
  int v1;
  NSObject *application_service_quic;
  NSObject *v3;
  xpc_object_t empty;
  size_t v5;
  xpc_object_t v6;
  size_t v7;
  uint64_t result;

  v1 = *a1;
  application_service_quic = nw_parameters_create_application_service_quic();
  if (application_service_quic)
  {
    v3 = application_service_quic;
    nw_parameters_set_prohibit_expensive(application_service_quic, 1);
    nw_parameters_set_prohibit_constrained(v3, 1);
    nw_parameters_set_include_peer_to_peer(v3, 1);
    nw_parameters_set_attach_protocol_listener();
    if (v1)
    {
      empty = xpc_array_create_empty();
      v5 = sub_245387824();
      xpc_array_set_string(empty, v5, "com.apple.networkrelay");
      v6 = xpc_array_create_empty();
      v7 = sub_245387824();
      xpc_array_set_string(v6, v7, "ASListener");
      nw_parameters_set_required_netagent_classes();
      nw_parameters_set_local_only(v3, 0);
      nw_parameters_set_traffic_class();
      nw_parameters_set_multipath_service(v3, nw_multipath_service_disabled);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    return (uint64_t)v3;
  }
  else
  {
    result = sub_245387F80();
    __break(1u);
  }
  return result;
}

void sub_245317B88(void *a1)
{
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  NSObject *oslog;
  uint64_t v9;

  if (xpc_dictionary_get_string(a1, (const char *)*MEMORY[0x24BDACF50]) && xpc_dictionary_get_BOOL(a1, "replyRequired"))
  {
    if (xpc_dictionary_create_reply(a1))
    {
      xpc_dictionary_send_reply();
      swift_unknownObjectRelease();
    }
    else
    {
      if (qword_25744FD98 != -1)
        swift_once();
      v2 = sub_245387818();
      __swift_project_value_buffer(v2, (uint64_t)qword_257462FC8);
      oslog = sub_2453877F4();
      v3 = sub_245387D34();
      if (os_log_type_enabled(oslog, v3))
      {
        v4 = (uint8_t *)swift_slowAlloc();
        v5 = swift_slowAlloc();
        v9 = v5;
        *(_DWORD *)v4 = 136446210;
        v6 = sub_245387B9C();
        sub_2453816D8(v6, v7, &v9);
        sub_245387E0C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_245256000, oslog, v3, "Failed to reply to wake event [rapport]: %{public}s", v4, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v5, -1, -1);
        MEMORY[0x24953317C](v4, -1, -1);

      }
      else
      {

      }
    }
  }
}

uint64_t sub_245317D6C(char *a1)
{
  char v1;
  NSObject *application_service_quic;
  NSObject *v3;
  xpc_object_t empty;
  size_t v5;
  xpc_object_t v6;
  size_t v7;
  xpc_object_t v8;
  size_t v9;
  xpc_object_t v10;
  size_t v11;
  uint64_t result;

  v1 = *a1;
  application_service_quic = nw_parameters_create_application_service_quic();
  if (application_service_quic)
  {
    v3 = application_service_quic;
    nw_parameters_set_prohibit_expensive(application_service_quic, 1);
    nw_parameters_set_prohibit_constrained(v3, 1);
    nw_parameters_set_include_peer_to_peer(v3, 1);
    if ((v1 & 1) != 0)
    {
      empty = xpc_array_create_empty();
      v5 = sub_245387824();
      xpc_array_set_string(empty, v5, "com.apple.networkrelay");
      v6 = xpc_array_create_empty();
      v7 = sub_245387824();
      xpc_array_set_string(v6, v7, "ASResolver");
      swift_unknownObjectRetain();
      nw_parameters_set_preferred_netagent_classes();
      nw_parameters_set_traffic_class();
      swift_unknownObjectRelease();
      nw_parameters_set_multipath_service(v3, nw_multipath_service_disabled);
    }
    else
    {
      v8 = xpc_array_create(0, 0);
      v9 = sub_245387824();
      xpc_array_set_string(v8, v9, "com.apple.rapport.browse");
      v10 = xpc_array_create(0, 0);
      v11 = sub_245387824();
      xpc_array_set_string(v10, v11, "RapportBrowseAgent");
      nw_parameters_set_preferred_netagent_classes();
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return (uint64_t)v3;
  }
  else
  {
    result = sub_245387F80();
    __break(1u);
  }
  return result;
}

double sub_245317F00()
{
  id v0;
  void *v1;
  id v2;
  double v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = (void *)sub_245387AF4();
  v2 = objc_msgSend(v0, sel_valueForKey_, v1);

  if (v2)
  {
    sub_245387E24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_2452BC850((uint64_t)v5, (uint64_t)v6, &qword_25440C9B0);
  if (v7)
  {
    if ((swift_dynamicCast() & 1) != 0)
      return v4;
  }
  else
  {
    sub_245263F80((uint64_t)v6, &qword_25440C9B0);
  }
  return 30.0;
}

void sub_245318018(NSObject *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  NSObject *v9;
  char v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t aBlock[6];

  v2 = v1;
  v4 = sub_2453879D4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v2 + 24);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v9 = v8;
  v10 = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v10 & 1) != 0)
  {
    if (qword_25744FD98 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v11 = sub_245387818();
  __swift_project_value_buffer(v11, (uint64_t)qword_257462FC8);
  swift_unknownObjectRetain_n();
  v12 = sub_2453877F4();
  v13 = sub_245387D34();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v22 = (uint64_t)a1;
    aBlock[0] = v15;
    *(_DWORD *)v14 = 136446210;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
    v16 = sub_245387B48();
    v22 = sub_2453816D8(v16, v17, aBlock);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v12, v13, "Starting connection: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v15, -1, -1);
    MEMORY[0x24953317C](v14, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  v18 = swift_allocObject();
  swift_weakInit();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(v19 + 24) = a1;
  aBlock[4] = (uint64_t)sub_245318E38;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24530996C;
  aBlock[3] = (uint64_t)&block_descriptor_233;
  v20 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_release();
  nw_connection_set_state_changed_handler(a1, v20);
  _Block_release(v20);
  nw_connection_set_queue(a1, v9);
  nw_connection_start(a1);
  sub_245314574();
}

uint64_t sub_245318324(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD, char *), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t (*v45)(_QWORD, _QWORD, char *);
  uint64_t v46;
  unint64_t v47;

  v40 = a3;
  v45 = a2;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452C50);
  v4 = MEMORY[0x24BDAC7A8](v44);
  v43 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v42 = (uint64_t *)((char *)&v34 - v7);
  MEMORY[0x24BDAC7A8](v6);
  v41 = (char *)&v34 - v8;
  result = sub_245330EE4(a1);
  if ((v11 & 1) != 0)
    goto LABEL_32;
  if (*(_DWORD *)(a1 + 36) != (_DWORD)v10)
    goto LABEL_31;
  v12 = result;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  if (result == v13)
    return 0;
  v14 = a1 + 64;
  v36 = v10;
  v35 = a1 + 88;
  v15 = v10;
  v38 = v10;
  v39 = a1 + 64;
  v16 = v44;
  v17 = v41;
  while ((v12 & 0x8000000000000000) == 0 && v12 < v13)
  {
    if ((_DWORD)v10 != (_DWORD)v15 || (*(_QWORD *)(v14 + 8 * ((unint64_t)v12 >> 6)) & (1 << v12)) == 0)
      goto LABEL_27;
    v46 = 1 << v12;
    v37 = v15;
    v47 = (unint64_t)v12 >> 6;
    v19 = (uint64_t)v17 + *(int *)(v16 + 48);
    v20 = *(_QWORD *)(a1 + 56);
    v21 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v23 = *v21;
    v22 = v21[1];
    v24 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
    sub_2452B792C(v20 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v12, v19, type metadata accessor for NetworkMessenger.ExpiringConnection);
    *v17 = v23;
    v17[1] = v22;
    v25 = (uint64_t)v42;
    *v42 = v23;
    *(_QWORD *)(v25 + 8) = v22;
    sub_2452B792C(v19, v25 + *(int *)(v16 + 48), type metadata accessor for NetworkMessenger.ExpiringConnection);
    v26 = v43;
    sub_2452BC850(v25, (uint64_t)v43, &qword_257452C50);
    swift_bridgeObjectRetain_n();
    sub_245263F80((uint64_t)v17, &qword_257452C50);
    LOBYTE(v19) = v45(*(_QWORD *)v26, *((_QWORD *)v26 + 1), &v26[*(int *)(v16 + 48)]);
    result = sub_245263F80((uint64_t)v26, &qword_257452C50);
    if ((v19 & 1) != 0)
      return v12;
    v27 = *(_BYTE *)(a1 + 32);
    v18 = 1 << v27;
    if (v12 >= 1 << v27)
      goto LABEL_28;
    v14 = v39;
    v28 = v47;
    v29 = *(_QWORD *)(v39 + 8 * v47);
    if ((v29 & v46) == 0)
      goto LABEL_29;
    LODWORD(v10) = v38;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v38)
      goto LABEL_30;
    v30 = v29 & (-2 << (v12 & 0x3F));
    if (v30)
    {
      v18 = __clz(__rbit64(v30)) | v12 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = v47 + 1;
      v32 = (v18 + 63) >> 6;
      if (v47 + 1 < v32)
      {
        v33 = *(_QWORD *)(v39 + 8 * v31);
        if (!v33)
        {
          v31 = v47 + 2;
          if (v47 + 2 >= v32)
            goto LABEL_7;
          v33 = *(_QWORD *)(v39 + 8 * v31);
          if (!v33)
          {
            while (v32 - 3 != v28)
            {
              v33 = *(_QWORD *)(v35 + 8 * v28++);
              if (v33)
              {
                v31 = v28 + 2;
                goto LABEL_19;
              }
            }
            goto LABEL_7;
          }
        }
LABEL_19:
        v18 = __clz(__rbit64(v33)) + (v31 << 6);
      }
    }
LABEL_7:
    v13 = 1 << v27;
    v12 = v18;
    v15 = v36;
    if (v18 == v13)
      return 0;
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_245318658()
{
  id v0;
  void *v1;
  id v2;
  unsigned __int8 v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = (void *)sub_245387AF4();
  v2 = objc_msgSend(v0, sel_valueForKey_, v1);

  if (v2)
  {
    sub_245387E24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_2452BC850((uint64_t)v5, (uint64_t)v6, &qword_25440C9B0);
  if (v7)
  {
    if ((swift_dynamicCast() & 1) != 0)
      return v4;
  }
  else
  {
    sub_245263F80((uint64_t)v6, &qword_25440C9B0);
  }
  return 0;
}

uint64_t sub_245318770()
{
  unint64_t v0;

  v0 = sub_245315360();
  return sub_245314574(v0);
}

BOOL sub_245318784(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  return *a3 == *(_QWORD *)(v3 + 16);
}

uint64_t sub_245318798()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2453187BC()
{
  uint64_t v0;

  return sub_2452E656C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2453187C4()
{
  return swift_deallocObject();
}

uint64_t sub_2453187D4(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_2452BC024(result, a2, a3 & 1);
  return result;
}

uint64_t sub_2453187EC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

BOOL sub_2453187F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_245315B88(a1, a2, *(_QWORD *)(v2 + 24));
}

uint64_t sub_245318818@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t v1;

  return sub_245302934(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t objectdestroy_59Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_245318860()
{
  uint64_t v0;

  return sub_245302A70(*(void (**)(_QWORD *))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_24531886C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for Message();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8) + 80);
  v6 = v4 + v5;
  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  v7 = v6 & ~v5;
  v8 = v0 + v3;
  v9 = sub_245387740();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v12 = v8 + *(int *)(v1 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9))
    v11(v12, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24525CB80(*(_QWORD *)(v8 + *(int *)(v1 + 36)), *(_QWORD *)(v8 + *(int *)(v1 + 36) + 8));
  v13 = sub_2453875E4();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v0 + v7, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0 + v7, v13);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2453189F8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;

  v5 = *(_QWORD *)(type metadata accessor for Message() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8);
  v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (char *)v2 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_2452FF778(a1, a2, v2[2], v2[3], v2[4], (uint64_t)v2 + v6, (uint64_t)v2 + v9, *(_QWORD *)v10, v10[8]);
}

uint64_t sub_245318AA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for Message();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8) + 80);
  v6 = v4 + v5;
  if (*(_QWORD *)(v0 + 16))
    swift_release();
  v7 = v6 & ~v5;
  swift_release();
  swift_release();
  v8 = v0 + v3;
  v9 = sub_245387740();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v12 = v8 + *(int *)(v1 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9))
    v11(v12, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24525CB80(*(_QWORD *)(v8 + *(int *)(v1 + 36)), *(_QWORD *)(v8 + *(int *)(v1 + 36) + 8));
  v13 = sub_2453875E4();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v0 + v7, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0 + v7, v13);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_245318C3C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(type metadata accessor for Message() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  sub_2452FFA44(a1, *(void (**)(void *, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), v1 + v4, v1 + v7, *(_QWORD *)v8, *(_BYTE *)(v8 + 8));
}

uint64_t sub_245318CE4()
{
  return objectdestroy_10Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_245318CF0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_245318D24(uint64_t a1, char a2)
{
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD);
  uint64_t (*v4)(void);

  v3 = *(void (**)(uint64_t, _QWORD))(v2 + 16);
  v4 = *(uint64_t (**)(void))(v2 + 32);
  if (v3)
    v3(a1, a2 & 1);
  return v4();
}

uint64_t sub_245318D64@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_2452FF214(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_245318D80()
{
  return objectdestroy_197Tm();
}

uint64_t sub_245318D88()
{
  uint64_t v0;

  return sub_2452FEC94(*(NSObject **)(v0 + 24));
}

uint64_t sub_245318DAC()
{
  return swift_deallocObject();
}

uint64_t sub_245318DBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_2452FE79C(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
  *a1 = result;
  return result;
}

uint64_t sub_245318E00()
{
  uint64_t *v0;

  return sub_2452E6428(v0[2], v0[3], v0[4]);
}

uint64_t sub_245318E0C()
{
  return swift_deallocObject();
}

uint64_t sub_245318E20()
{
  return swift_deallocObject();
}

uint64_t sub_245318E30()
{
  return objectdestroy_197Tm();
}

uint64_t sub_245318E38(int a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2453136D0(a1, a2, *(_QWORD *)(v2 + 16), *(NSObject **)(v2 + 24));
}

uint64_t sub_245318E40()
{
  return objectdestroy_197Tm();
}

uint64_t sub_245318E48(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;

  return sub_245309C94(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(NSObject **)(v4 + 24));
}

uint64_t sub_245318E50(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      sub_2453874DC();
      swift_allocObject();
      sub_2453874B8();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_245387608();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_245318EEC()
{
  return sub_245318F14();
}

uint64_t sub_245318F00()
{
  return objectdestroy_197Tm();
}

uint64_t sub_245318F08(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;

  return sub_24530AEA8(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(NSObject **)(v4 + 24), *(_DWORD *)(v4 + 32));
}

uint64_t sub_245318F14()
{
  sub_24538798C();
  sub_24525C6C4(&qword_257452CF8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5538], MEMORY[0x24BDCF7E0]);
  return sub_245387470();
}

uint64_t sub_245318F8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = type metadata accessor for NetworkSyncHeader(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  swift_release();
  swift_unknownObjectRelease();
  v4 = v0 + v3;
  v5 = sub_245387740();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(v4 + *(int *)(v1 + 24), v5);
  v6(v4 + *(int *)(v1 + 28), v5);
  return swift_deallocObject();
}

uint64_t sub_245319044(void *a1, void *a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NetworkSyncHeader(0) - 8) + 80);
  return sub_24530CB30(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(NSObject **)(v4 + 24), v4 + ((v9 + 32) & ~v9));
}

uint64_t sub_2453190AC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_2453190E0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(unint64_t, uint64_t);
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452CA0);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + v2;
  v4 = sub_245387740();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
  v6(v0 + v2, v4);
  v7 = type metadata accessor for Message();
  v8 = v0 + v2 + *(int *)(v7 + 20);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
    v6(v8, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24525CB80(*(_QWORD *)(v3 + *(int *)(v7 + 36)), *(_QWORD *)(v3 + *(int *)(v7 + 36) + 8));
  v9 = v3 + *(int *)(v1 + 28);
  v10 = sub_2453875E4();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_245319240()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257452CA0) - 8) + 80);
  return sub_245313620(*(void (**)(char *))(v0 + 16), *(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

unint64_t sub_245319274()
{
  unint64_t result;

  result = qword_257452CC8;
  if (!qword_257452CC8)
  {
    result = MEMORY[0x2495330B0](&unk_24538DCFC, &type metadata for NetworkMessenger.ExtendedAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452CC8);
  }
  return result;
}

unint64_t sub_2453192B8()
{
  unint64_t result;

  result = qword_257452CE8;
  if (!qword_257452CE8)
  {
    result = MEMORY[0x2495330B0](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_257452CE8);
  }
  return result;
}

uint64_t sub_2453192FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = type metadata accessor for NetworkSyncHeader(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  swift_release();
  swift_unknownObjectRelease();
  v4 = v0 + v3;
  v5 = sub_245387740();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(v4 + *(int *)(v1 + 24), v5);
  v6(v4 + *(int *)(v1 + 28), v5);
  return swift_deallocObject();
}

uint64_t sub_2453193C8(uint64_t a1, unint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;

  v9 = *(_QWORD *)(type metadata accessor for NetworkSyncHeader(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return sub_245310F90(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(NSObject **)(v4 + 24), v4 + v10, *(_DWORD *)(v4 + ((*(_QWORD *)(v9 + 64) + v10 + 3) & 0xFFFFFFFFFFFFFFFCLL)));
}

void sub_245319460(uint64_t a1)
{
  uint64_t v1;

  sub_245382F28(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_24531947C()
{
  unint64_t result;

  result = qword_257452CF0;
  if (!qword_257452CF0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257452CF0);
  }
  return result;
}

void sub_2453194B8(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_2452FD520(*(NSObject **)(v1 + 24), 0, 0);
  *a1 = v3;
}

uint64_t sub_245319500()
{
  return swift_deallocObject();
}

uint64_t sub_245319510()
{
  return objectdestroy_197Tm();
}

uint64_t objectdestroy_197Tm()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_245319550(NSObject *a1)
{
  uint64_t v1;

  return sub_2453084E4(a1, *(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_245319558()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_24531957C(int a1, uint64_t a2)
{
  sub_2453093F4(a1, a2);
}

uint64_t sub_245319588()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_207Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2453195C8()
{
  return swift_deallocObject();
}

uint64_t sub_2453195D8()
{
  return objectdestroy_10Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t objectdestroy_10Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

uint64_t sub_24531961C()
{
  uint64_t v0;

  return sub_2452FB098(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_245319644()
{
  return swift_deallocObject();
}

uint64_t sub_245319654@<X0>(_QWORD *a1@<X8>)
{
  return sub_2452FAEF8(a1);
}

uint64_t sub_24531966C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_245319690(uint64_t a1)
{
  uint64_t v1;

  sub_245315FD0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_245319698()
{
  uint64_t v0;

  *(_DWORD *)(*(_QWORD *)(v0 + 16) + 88) = **(_DWORD **)(v0 + 24);
}

uint64_t sub_2453196A8()
{
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for NetworkMessenger.ExtendedAttributes.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2453196F8 + 4 * byte_24538D9BA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_245319718 + 4 * byte_24538D9BF[v4]))();
}

_BYTE *sub_2453196F8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_245319718(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_245319720(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_245319728(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_245319730(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_245319738(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NetworkMessenger.ExtendedAttributes.CodingKeys()
{
  return &type metadata for NetworkMessenger.ExtendedAttributes.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for NetworkMessenger.NetworkMessengerOperationalError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2453197A0 + 4 * byte_24538D9C9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2453197D4 + 4 * byte_24538D9C4[v4]))();
}

uint64_t sub_2453197D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2453197DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2453197E4);
  return result;
}

uint64_t sub_2453197F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2453197F8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2453197FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_245319804(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NetworkMessenger.NetworkMessengerOperationalError()
{
  return &type metadata for NetworkMessenger.NetworkMessengerOperationalError;
}

ValueMetadata *type metadata accessor for NetworkMessenger.ExtendedAttributes()
{
  return &type metadata for NetworkMessenger.ExtendedAttributes;
}

unint64_t sub_245319834()
{
  unint64_t result;

  result = qword_257452D00;
  if (!qword_257452D00)
  {
    result = MEMORY[0x2495330B0](&unk_24538DC1C, &type metadata for NetworkMessenger.NetworkMessengerOperationalError);
    atomic_store(result, (unint64_t *)&qword_257452D00);
  }
  return result;
}

unint64_t sub_24531987C()
{
  unint64_t result;

  result = qword_257452D08;
  if (!qword_257452D08)
  {
    result = MEMORY[0x2495330B0](&unk_24538DCD4, &type metadata for NetworkMessenger.ExtendedAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452D08);
  }
  return result;
}

unint64_t sub_2453198C4()
{
  unint64_t result;

  result = qword_257452D10;
  if (!qword_257452D10)
  {
    result = MEMORY[0x2495330B0](&unk_24538DC44, &type metadata for NetworkMessenger.ExtendedAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452D10);
  }
  return result;
}

unint64_t sub_24531990C()
{
  unint64_t result;

  result = qword_257452D18;
  if (!qword_257452D18)
  {
    result = MEMORY[0x2495330B0](&unk_24538DC6C, &type metadata for NetworkMessenger.ExtendedAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452D18);
  }
  return result;
}

uint64_t sub_245319950(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257452CD0);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x2495330B0](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_245319B58(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = *(_QWORD *)(v1 + *a1);
  if (v3)
  {
    v4 = v3;
  }
  else
  {
    v5 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FEF8);
    sub_24526381C(&qword_25744FEF0, &qword_25744FEF8, MEMORY[0x24BDB9CB0]);
    v4 = sub_24538789C();
    *(_QWORD *)(v5 + v2) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

void sub_245319C04(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  char *v17;
  char *v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  char *v23;
  void *v24;
  char *v25;
  id v26;
  void *v27;
  uint64_t v28;
  objc_class *ObjectType;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  objc_super v39;
  uint64_t v40;

  v30 = a3;
  v37 = a1;
  v38 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v4 = sub_245387D70();
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_245387D4C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_245387950();
  MEMORY[0x24BDAC7A8](v8);
  v9 = OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency__accountsChanged;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FEF8);
  swift_allocObject();
  v10 = v3;
  *(_QWORD *)&v3[v9] = sub_245387884();
  *(_QWORD *)&v10[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency____lazy_storage___accountsChanged] = 0;
  v11 = OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency__devicesChanged;
  swift_allocObject();
  *(_QWORD *)&v10[v11] = sub_245387884();
  *(_QWORD *)&v10[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency____lazy_storage___devicesChanged] = 0;
  v12 = OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440BFA0);
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + 16) = 0;
  *(_QWORD *)&v10[v12] = v13;
  *(_OWORD *)&v10[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_identityBlob] = xmmword_24538DDC0;
  v34 = OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_calloutQueue;
  sub_2452E06B0(0, (unint64_t *)&qword_257450080);
  sub_245387944();
  v40 = MEMORY[0x24BEE4AF8];
  v32 = sub_24525C6C4((unint64_t *)&unk_257450050, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450020);
  v33 = sub_24526381C((unint64_t *)&qword_257450030, (uint64_t *)&unk_257450020, MEMORY[0x24BEE12C8]);
  sub_245387E3C();
  v14 = *MEMORY[0x24BEE5758];
  v15 = v36;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 104);
  v16(v6, v14, v36);
  *(_QWORD *)&v10[v34] = sub_245387D94();
  v35 = OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_identityFetchQueue;
  sub_245387944();
  v40 = MEMORY[0x24BEE4AF8];
  sub_245387E3C();
  v16(v6, v14, v15);
  *(_QWORD *)&v10[v35] = sub_245387D94();
  v17 = &v10[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_localDeviceID];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v10[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_fetchingLocalDeviceID] = 0;
  v18 = &v10[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_serviceName];
  v19 = v38;
  *(_QWORD *)v18 = v37;
  *((_QWORD *)v18 + 1) = v19;
  v20 = objc_allocWithZone(MEMORY[0x24BE4FCB8]);
  swift_bridgeObjectRetain();
  v21 = (void *)sub_245387AF4();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v20, sel_initWithService_, v21);

  if (v22)
  {
    *(_QWORD *)&v10[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_service] = v22;

    v39.receiver = v10;
    v39.super_class = ObjectType;
    v23 = (char *)objc_msgSendSuper2(&v39, sel_init);
    v24 = *(void **)&v23[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_service];
    v25 = v23;
    v26 = v24;
    v27 = v30;
    objc_msgSend(v26, sel_addDelegate_queue_, v25, v30);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24531A03C@<X0>(_BYTE *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BYTE *v15;
  const void *v16;
  uint64_t v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[8];

  v4 = sub_245387920();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_245387950();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)&a1[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_localDeviceID + 8];
  if (v12)
  {
    *a2 = *(_QWORD *)&a1[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_localDeviceID];
    a2[1] = v12;
  }
  else
  {
    if ((a1[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_fetchingLocalDeviceID] & 1) == 0)
    {
      a1[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_fetchingLocalDeviceID] = 1;
      v22 = *(_QWORD *)&a1[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_identityFetchQueue];
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = a1;
      aBlock[4] = sub_24531B0E8;
      aBlock[5] = v13;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24525DD34;
      aBlock[3] = &block_descriptor_20;
      v14 = _Block_copy(aBlock);
      v21 = v5;
      v19 = v14;
      v15 = a1;
      sub_245387938();
      aBlock[7] = MEMORY[0x24BEE4AF8];
      v20 = sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
      sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
      sub_245387E3C();
      v16 = v19;
      MEMORY[0x2495320E4](0, v11, v7, v19);
      _Block_release(v16);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v4);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      swift_release();
    }
    *a2 = 0;
    a2[1] = 0;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_24531A284()
{
  uint64_t v0;
  void *v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;
  uint64_t v4;

  v0 = IDSCopyLocalDeviceUniqueID();
  if (v0)
  {
    v1 = (void *)v0;
    sub_245387B18();

  }
  MEMORY[0x24BDAC7A8](v0);
  v3 = v2 + 4;
  os_unfair_lock_lock(v2 + 4);
  sub_2452E6204(v4, sub_24531B050);
  os_unfair_lock_unlock(v3);
  return swift_bridgeObjectRelease();
}

id sub_24531A338()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_service), sel_devices));
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return (id)v2;
  v3 = v1;
  sub_2452E06B0(0, (unint64_t *)&unk_2574500C0);
  v4 = sub_245387C20();

  if (v4 >> 62)
    goto LABEL_16;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return (id)v2;
  }
  while (1)
  {
    result = (id)sub_24532C6CC(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0)
      break;
    v7 = 0;
    while (v5 != v7)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x24953221C](v7, v4);
      else
        v8 = *(id *)(v4 + 8 * v7 + 32);
      v9 = v8;
      result = objc_msgSend(v8, sel_uniqueIDOverride);
      if (!result)
        goto LABEL_20;
      v10 = result;
      v11 = sub_245387B18();
      v13 = v12;

      v15 = *(_QWORD *)(v2 + 16);
      v14 = *(_QWORD *)(v2 + 24);
      if (v15 >= v14 >> 1)
        sub_24532C6CC(v14 > 1, v15 + 1, 1);
      ++v7;
      *(_QWORD *)(v2 + 16) = v15 + 1;
      v16 = v2 + 16 * v15;
      *(_QWORD *)(v16 + 32) = v11;
      *(_QWORD *)(v16 + 40) = v13;
      if (v5 == v7)
        goto LABEL_17;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    v5 = sub_245387F8C();
    swift_bridgeObjectRelease();
    if (!v5)
      goto LABEL_17;
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

void sub_24531A500(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_unfair_lock_s *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 aBlock;
  uint64_t (*v24)(uint64_t);
  void *v25;
  uint64_t (*v26)();
  _QWORD *v27;

  v5 = sub_245387920();
  v20 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_245387950();
  v8 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock);
  v21 = v2;
  v12 = v11 + 4;
  os_unfair_lock_lock(v11 + 4);
  sub_2452F9614((void (*)(__int128 *__return_ptr))sub_24531AF8C, &aBlock);
  os_unfair_lock_unlock(v12);
  v14 = *((_QWORD *)&aBlock + 1);
  if (*((_QWORD *)&aBlock + 1))
  {
    v15 = aBlock;
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = a1;
    v16[3] = a2;
    v16[4] = v15;
    v16[5] = v14;
    v26 = sub_24531AFD8;
    v27 = v16;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v24 = sub_24525DD34;
    v25 = &block_descriptor_10;
    v17 = _Block_copy(&aBlock);
    swift_retain();
    sub_245387938();
    v22 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
    sub_245387E3C();
    MEMORY[0x2495320E4](0, v10, v7, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v5);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v19);
    swift_release();
  }
  else
  {
    MEMORY[0x24BDAC7A8](v13);
    *(&v19 - 4) = v2;
    *(&v19 - 3) = a1;
    *(&v19 - 2) = a2;
    os_unfair_lock_lock(v12);
    sub_2452E6204(v18, sub_24531AFB8);
    os_unfair_lock_unlock(v12);
  }
}

uint64_t sub_24531A794(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  void *v15;
  _BYTE *v16;
  _QWORD v18[2];
  uint64_t v19;
  _QWORD aBlock[8];

  v6 = sub_245387920();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_245387950();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_fetchingLocalDeviceID] = 1;
  v18[1] = *(_QWORD *)&a1[OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_identityFetchQueue];
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  aBlock[4] = sub_24531B044;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525DD34;
  aBlock[3] = &block_descriptor_6_0;
  v15 = _Block_copy(aBlock);
  v16 = a1;
  swift_retain();
  sub_245387938();
  aBlock[7] = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_25744FF00, v7, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
  sub_245387E3C();
  MEMORY[0x2495320E4](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_24531A9B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[7];

  v22 = a2;
  v5 = sub_245387920();
  v25 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_245387950();
  v23 = *(_QWORD *)(v8 - 8);
  v24 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = IDSCopyLocalDeviceUniqueID();
  if (v11)
  {
    v12 = (void *)v11;
    v13 = sub_245387B18();
    v15 = v14;

  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  MEMORY[0x24BDAC7A8](v11);
  *(&v22 - 4) = a1;
  *(&v22 - 3) = v13;
  v17 = v16 + 4;
  *(&v22 - 2) = v15;
  os_unfair_lock_lock(v16 + 4);
  sub_2452E6204(v18, sub_24531B050);
  os_unfair_lock_unlock(v17);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v22;
  v19[3] = a3;
  v19[4] = v13;
  v19[5] = v15;
  aBlock[4] = sub_24531AFD8;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525DD34;
  aBlock[3] = &block_descriptor_13_2;
  v20 = _Block_copy(aBlock);
  swift_retain();
  sub_245387938();
  v26 = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
  sub_245387E3C();
  MEMORY[0x2495320E4](0, v10, v7, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v24);
  return swift_release();
}

id sub_24531AC70()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ConcreteIDSDependency()
{
  return objc_opt_self();
}

uint64_t sub_24531AD98()
{
  return sub_245319B58(&OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency____lazy_storage___accountsChanged);
}

uint64_t sub_24531ADC8()
{
  return sub_245319B58(&OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency____lazy_storage___devicesChanged);
}

uint64_t sub_24531ADF8()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  __int128 v3;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(*v0 + OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock) + 16);
  os_unfair_lock_lock(v1);
  sub_24531B0AC(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

id sub_24531AE6C()
{
  return sub_24531A338();
}

void sub_24531AE8C(uint64_t a1, uint64_t a2)
{
  sub_24531A500(a1, a2);
}

uint64_t sub_24531AF8C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_localDeviceID);
  v3 = v2[1];
  *a1 = *v2;
  a1[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24531AFB8()
{
  uint64_t v0;

  return sub_24531A794(*(_BYTE **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_24531AFD8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_24531B018()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24531B044()
{
  uint64_t *v0;

  return sub_24531A9B8(v0[2], v0[3], v0[4]);
}

uint64_t sub_24531B050()
{
  return sub_24531B204();
}

uint64_t objectdestroyTm_0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24531B094@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_24531A03C(*(_BYTE **)(v1 + 16), a1);
}

double sub_24531B0AC@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_2452F9614(*(void (**)(__int128 *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_24531B0C4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_24531B0E8()
{
  return sub_24531A284();
}

uint64_t sub_24531B0F0()
{
  uint64_t v0;
  void *v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;
  uint64_t v4;

  v0 = IDSCopyLocalDeviceUniqueID();
  if (v0)
  {
    v1 = (void *)v0;
    sub_245387B18();

  }
  MEMORY[0x24BDAC7A8](v0);
  v3 = v2 + 4;
  os_unfair_lock_lock(v2 + 4);
  sub_2452E6204(v4, sub_24531B050);
  os_unfair_lock_unlock(v3);
  swift_bridgeObjectRelease();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FEF8);
  sub_24526381C((unint64_t *)&unk_25744F658, &qword_25744FEF8, MEMORY[0x24BDB9CA8]);
  sub_245387890();
  return swift_release();
}

uint64_t sub_24531B204()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v1 = v0[2];
  v2 = v0[4];
  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_localDeviceID);
  *v3 = v0[3];
  v3[1] = v2;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_BYTE *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine21ConcreteIDSDependency_lock_fetchingLocalDeviceID) = 0;
  return result;
}

unint64_t sub_24531B270(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F668);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450140);
  v6 = sub_245387FB0();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2452BC89C(v12, (uint64_t)v5, &qword_25744F668);
    v14 = *v5;
    v15 = v5[1];
    result = sub_2452C1D98(*v5, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v7[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    v20 = v7[7];
    v21 = type metadata accessor for ZoneVersion();
    result = sub_2452B7AB8(v9, v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    v22 = v7[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24531B410(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C998);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452E50);
  v6 = sub_245387FB0();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2452BC89C(v12, (uint64_t)v5, &qword_25440C998);
    result = sub_2452C1F4C((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_245387F68();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    result = (unint64_t)sub_2452CC368(v9, (_OWORD *)(v7[7] + 32 * v16));
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24531B5AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452E58);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257450110);
  v6 = sub_245387FB0();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v27 = (uint64_t)v5 + *(int *)(v2 + 48);
  v9 = v6 + 64;
  v10 = *(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v11 = a1 + ((v10 + 32) & ~v10);
  v26 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2452BC89C(v11, (uint64_t)v5, &qword_257452E58);
    v12 = *v5;
    v13 = v5[1];
    v14 = v5[2];
    v15 = v5[3];
    result = sub_2452C1EB4(*v5, v13, v14, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v9 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v7[6] + 32 * result);
    *v19 = v12;
    v19[1] = v13;
    v19[2] = v14;
    v19[3] = v15;
    v20 = v7[7];
    v21 = type metadata accessor for ZoneVersion();
    result = sub_2452B7AB8(v27, v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    v22 = v7[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v7[2] = v24;
    v11 += v26;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24531B764(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452E68);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452500);
  v6 = sub_245387FB0();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (char *)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2452BC89C(v12, (uint64_t)v5, (uint64_t *)&unk_257452E68);
    result = sub_2452C2000(v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = type metadata accessor for Record.ID(0);
    sub_2452B7AB8((uint64_t)v5, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, type metadata accessor for Record.ID);
    v19 = v7[7];
    v20 = sub_245387740();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v16, v9, v20);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24531B91C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257450150);
  v2 = sub_245387FB0();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2452BC89C(v6, (uint64_t)&v15, &qword_25744FFA8);
    v7 = v15;
    v8 = v16;
    result = sub_2452C1D98(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_2452CC368(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24531BA50(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_2452B7DEC();
  result = sub_245387CE0();
  v3 = 0;
  v20 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v16 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v8)
      goto LABEL_23;
    v17 = *(_QWORD *)(v4 + 8 * v16);
    ++v3;
    if (!v17)
    {
      v3 = v16 + 1;
      if (v16 + 1 >= v8)
        goto LABEL_23;
      v17 = *(_QWORD *)(v4 + 8 * v3);
      if (!v17)
      {
        v3 = v16 + 2;
        if (v16 + 2 >= v8)
          goto LABEL_23;
        v17 = *(_QWORD *)(v4 + 8 * v3);
        if (!v17)
        {
          v3 = v16 + 3;
          if (v16 + 3 >= v8)
            goto LABEL_23;
          v17 = *(_QWORD *)(v4 + 8 * v3);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v17 - 1) & v17;
    v10 = __clz(__rbit64(v17)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 32 * v10);
    v12 = *v11;
    v13 = v11[1];
    v14 = v11[2];
    v15 = v11[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_245324D54(&v19, v12, v13, v14, v15);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v18 = v16 + 4;
  if (v18 >= v8)
  {
LABEL_23:
    swift_release();
    return v20;
  }
  v17 = *(_QWORD *)(v4 + 8 * v18);
  if (v17)
  {
    v3 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v17 = *(_QWORD *)(v4 + 8 * v3);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24531BC10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PairingRelationship();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_245263F80(a1, (uint64_t *)&unk_25744FAD0);
    sub_245327DF0(a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship, (void (*)(unint64_t, uint64_t))sub_245371DBC, (void (*)(void))sub_2452C8404, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_245263F80((uint64_t)v10, (uint64_t *)&unk_25744FAD0);
  }
  else
  {
    sub_2452B7AB8(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_245328F80((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_2452C8404, (void (*)(void))sub_2452C4220, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24531BDA8(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_245387740();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_245263F80(a1, &qword_25440C700);
    sub_245327928(a2, (uint64_t)v8);
    sub_2452B7B5C((uint64_t)a2, type metadata accessor for Record.ID);
    return sub_245263F80((uint64_t)v8, &qword_25440C700);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v3;
    *v3 = 0x8000000000000000;
    sub_2453285B4((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v16;
    swift_bridgeObjectRelease();
    return sub_2452B7B5C((uint64_t)a2, type metadata accessor for Record.ID);
  }
}

uint64_t sub_24531BF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;

  v6 = v5;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452DA8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ZoneVersion();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(a1, 1) == 1)
  {
    sub_245263F80(a1, &qword_257452DA8);
    sub_245327A64(a2, a3, a4, a5, (uint64_t)v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_245263F80((uint64_t)v14, &qword_257452DA8);
  }
  else
  {
    sub_2452B7AB8(a1, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v6;
    *v6 = 0x8000000000000000;
    sub_24532873C((uint64_t)v17, a2, a3, a4, a5, isUniquelyReferenced_nonNull_native);
    *v6 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24531C0B4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452E80);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Replicator.Session(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_245263F80(a1, &qword_257452E80);
    sub_245327C88(a2, type metadata accessor for Replicator.Session, (void (*)(unint64_t, uint64_t))sub_245372820, (void (*)(void))sub_2452C8D7C, (uint64_t)v8);
    v13 = sub_245387740();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_245263F80((uint64_t)v8, &qword_257452E80);
  }
  else
  {
    sub_2452B7AB8(a1, (uint64_t)v11, type metadata accessor for Replicator.Session);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_245328A40((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_2452C8D7C, (void (*)(void))sub_2452C5258, type metadata accessor for Replicator.Session);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = sub_245387740();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_24531C264(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for NetworkBrowser.Monitor();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_245263F80(a1, &qword_2574525C0);
    sub_245327C88(a2, (uint64_t (*)(_QWORD))type metadata accessor for NetworkBrowser.Monitor, (void (*)(unint64_t, uint64_t))sub_245372AB8, (void (*)(void))sub_2452C9178, (uint64_t)v8);
    v13 = sub_245387740();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_245263F80((uint64_t)v8, &qword_2574525C0);
  }
  else
  {
    sub_2452B7AB8(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for NetworkBrowser.Monitor);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_245328A40((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_2452C9178, (void (*)(void))sub_2452C5920, (uint64_t (*)(_QWORD))type metadata accessor for NetworkBrowser.Monitor);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = sub_245387740();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_24531C414(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452890);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_245263F80(a1, &qword_257452890);
    v13 = sub_2452C20EC(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_2452C9450();
        v17 = v22;
      }
      sub_2452B7AB8(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
      sub_245372D98(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_245263F80((uint64_t)v8, &qword_257452890);
  }
  else
  {
    sub_2452B7AB8(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_245328BC4((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24531C5EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452C40);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_245263F80(a1, &qword_257452C40);
    sub_245327DF0(a2, a3, type metadata accessor for NetworkMessenger.ExpiringConnection, (void (*)(unint64_t, uint64_t))sub_245372F54, (void (*)(void))sub_2452C9A10, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_245263F80((uint64_t)v10, &qword_257452C40);
  }
  else
  {
    sub_2452B7AB8(a1, (uint64_t)v13, type metadata accessor for NetworkMessenger.ExpiringConnection);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_245328F80((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_2452C9A10, (void (*)(void))sub_2452C6670, type metadata accessor for NetworkMessenger.ExpiringConnection);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24531C784(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452CA8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_245263F80(a1, &qword_257452CA8);
    v13 = sub_2452C219C(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_2452C9FDC();
        v17 = v22;
      }
      sub_2452B7AB8(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, (uint64_t)v8, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
      sub_2453733F4(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_245263F80((uint64_t)v8, &qword_257452CA8);
  }
  else
  {
    sub_2452B7AB8(a1, (uint64_t)v12, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_2453293D4((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24531C95C(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  __int128 v7[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_2452B7C5C((__int128 *)a1, (uint64_t)v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v2;
    *v2 = 0x8000000000000000;
    sub_245329630(v7, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v6;
    swift_bridgeObjectRelease();
    return sub_2452B7D94((uint64_t)a2);
  }
  else
  {
    sub_245263F80(a1, &qword_257452E40);
    sub_24532801C(a2, (uint64_t)v7);
    sub_2452B7D94((uint64_t)a2);
    return sub_245263F80((uint64_t)v7, &qword_257452E40);
  }
}

uint64_t MetadataStoring.pairingRelationship(relationshipID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v16[16];
  uint64_t v17;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FFA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a3 + 8) + 32))(a2);
  v17 = a1;
  sub_2453218E0((uint64_t (*)(uint64_t))sub_245321CFC, v11, (uint64_t)v10);
  swift_bridgeObjectRelease();
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v10, 1, v12) == 1)
  {
    sub_245263F80((uint64_t)v10, &qword_25744FFA0);
    v13 = type metadata accessor for PairingRelationship();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a4, 1, 1, v13);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_2452B7AB8((uint64_t)&v10[*(int *)(v12 + 48)], a4, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v15 = type metadata accessor for PairingRelationship();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a4, 0, 1, v15);
  }
}

uint64_t MetadataStoring.pairingRelationship(remoteDeviceID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a4 + 8) + 32))(a3);
  if (*(_QWORD *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    v9 = sub_2452C1D98(a1, a2);
    if ((v10 & 1) != 0)
    {
      v11 = v9;
      v12 = *(_QWORD *)(v8 + 56);
      v13 = type metadata accessor for PairingRelationship();
      v14 = *(_QWORD *)(v13 - 8);
      sub_2452B792C(v12 + *(_QWORD *)(v14 + 72) * v11, a5, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a5, 0, 1, v13);
    }
    else
    {
      v16 = type metadata accessor for PairingRelationship();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a5, 1, 1, v16);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = type metadata accessor for PairingRelationship();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a5, 1, 1, v15);
  }
  return swift_bridgeObjectRelease();
}

uint64_t MetadataStoring.metadata(for:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a3 + 8) + 24))(a2);
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_2452C2000(a1), (v8 & 1) != 0))
  {
    v9 = v7;
    v10 = *(_QWORD *)(v6 + 56);
    v11 = type metadata accessor for RecordMetadata();
    v12 = *(_QWORD *)(v11 - 8);
    sub_2452B792C(v10 + *(_QWORD *)(v12 + 72) * v9, a4, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a4, 0, 1, v11);
  }
  else
  {
    v13 = type metadata accessor for RecordMetadata();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a4, 1, 1, v13);
  }
  return swift_bridgeObjectRelease();
}

uint64_t MetadataStoring.metadata(for:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a3 + 8) + 24))(a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_2452B9034(v7, v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t MetadataStoring.zones()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  int64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;

  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
  v4 = MEMORY[0x24BDAC7A8](v43);
  v40 = (uint64_t *)((char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v38 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v42 = (uint64_t)&v38 - v8;
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 24))(a1);
  v48 = MEMORY[0x24BEE4B08];
  v10 = *(_QWORD *)(v9 + 64);
  v38 = v9 + 64;
  v11 = 1 << *(_BYTE *)(v9 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v39 = (unint64_t)(v11 + 63) >> 6;
  v44 = v9;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  v16 = (uint64_t)v41;
  while (1)
  {
    if (v13)
    {
      v45 = (v13 - 1) & v13;
      v46 = v15;
      v17 = __clz(__rbit64(v13)) | (v15 << 6);
      goto LABEL_5;
    }
    v33 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v33 >= v39)
      goto LABEL_23;
    v34 = *(_QWORD *)(v38 + 8 * v33);
    v35 = v15 + 1;
    if (!v34)
    {
      v35 = v15 + 2;
      if (v15 + 2 >= v39)
        goto LABEL_23;
      v34 = *(_QWORD *)(v38 + 8 * v35);
      if (!v34)
      {
        v35 = v15 + 3;
        if (v15 + 3 >= v39)
          goto LABEL_23;
        v34 = *(_QWORD *)(v38 + 8 * v35);
        if (!v34)
        {
          v35 = v15 + 4;
          if (v15 + 4 >= v39)
            goto LABEL_23;
          v34 = *(_QWORD *)(v38 + 8 * v35);
          if (!v34)
            break;
        }
      }
    }
LABEL_22:
    v45 = (v34 - 1) & v34;
    v46 = v35;
    v17 = __clz(__rbit64(v34)) + (v35 << 6);
LABEL_5:
    v18 = v44;
    v19 = *(_QWORD *)(v44 + 48);
    v20 = type metadata accessor for Record.ID(0);
    v21 = v42;
    sub_2452B792C(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v17, v42, type metadata accessor for Record.ID);
    v22 = *(_QWORD *)(v18 + 56);
    v23 = v22 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for RecordMetadata() - 8) + 72) * v17;
    v24 = v43;
    sub_2452B792C(v23, v21 + *(int *)(v43 + 48), (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    sub_2452BC850(v21, v16, &qword_25744FD30);
    v25 = *(int *)(v24 + 48);
    v26 = v40;
    v27 = (uint64_t)v40 + v25;
    v28 = v16 + v25;
    sub_2452B792C(v16, (uint64_t)v40, type metadata accessor for Record.ID);
    sub_2452B792C(v28, v27, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v29 = v26[2];
    v30 = v26[3];
    v32 = v26[4];
    v31 = v26[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2452B7B5C((uint64_t)v26, type metadata accessor for Record.ID);
    sub_245324D54(&v47, v29, v30, v32, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2452B7B5C(v27, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    result = sub_245263F80(v16, &qword_25744FD30);
    v13 = v45;
    v15 = v46;
  }
  v36 = v15 + 5;
  if (v15 + 5 >= v39)
  {
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    v37 = sub_24532D744(v48);
    swift_bridgeObjectRelease();
    return (uint64_t)v37;
  }
  v34 = *(_QWORD *)(v38 + 8 * v36);
  if (v34)
  {
    v35 = v15 + 5;
    goto LABEL_22;
  }
  while (1)
  {
    v35 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v35 >= v39)
      goto LABEL_23;
    v34 = *(_QWORD *)(v38 + 8 * v35);
    ++v36;
    if (v34)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24531D168(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_24531D18C(a1, a2, a3, type metadata accessor for Replicator.SyncItem, (void (*)(BOOL, uint64_t, uint64_t))sub_24532C610);
}

uint64_t sub_24531D18C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(BOOL, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  void (*v22)(BOOL, uint64_t, uint64_t);
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *);
  uint64_t v29;
  uint64_t v30;

  v22 = a5;
  v6 = a4;
  v28 = a1;
  v29 = a2;
  v8 = a4(0);
  v27 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v26 = (uint64_t)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v22 - v12;
  v14 = MEMORY[0x24BEE4AF8];
  v30 = MEMORY[0x24BEE4AF8];
  v25 = *(_QWORD *)(a3 + 16);
  if (v25)
  {
    v15 = 0;
    v16 = MEMORY[0x24BEE4AF8];
    v23 = v6;
    v24 = a3;
    while (v15 < *(_QWORD *)(a3 + 16))
    {
      v17 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      v18 = *(_QWORD *)(v27 + 72);
      sub_2452B792C(a3 + v17 + v18 * v15, (uint64_t)v13, v6);
      v14 = v29;
      v19 = v28(v13);
      if (v5)
      {
        sub_2452B7B5C((uint64_t)v13, v6);
        swift_release();
        swift_bridgeObjectRelease();
        return v14;
      }
      if ((v19 & 1) != 0)
      {
        sub_2452B7AB8((uint64_t)v13, v26, v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v22(0, *(_QWORD *)(v16 + 16) + 1, 1);
        v16 = v30;
        v21 = *(_QWORD *)(v30 + 16);
        v20 = *(_QWORD *)(v30 + 24);
        if (v21 >= v20 >> 1)
        {
          v22(v20 > 1, v21 + 1, 1);
          v16 = v30;
        }
        *(_QWORD *)(v16 + 16) = v21 + 1;
        v6 = v23;
        result = sub_2452B7AB8(v26, v16 + v17 + v21 * v18, v23);
        a3 = v24;
      }
      else
      {
        result = sub_2452B7B5C((uint64_t)v13, v6);
      }
      if (v25 == ++v15)
      {
        v14 = v30;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v14;
  }
  return result;
}

uint64_t sub_24531D39C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_24531D3C8(a1, a2, a3, &qword_25744F6B0, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], (void (*)(BOOL, uint64_t, uint64_t))sub_24532C6A0);
}

uint64_t sub_24531D3C8(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), void (*a6)(BOOL, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  char v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  void (*v32)(BOOL, uint64_t, uint64_t);
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t (*v38)(char *);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v32 = a6;
  v8 = a4;
  v9 = v6;
  v38 = a1;
  v39 = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v11);
  v40 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a5(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v36 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v15);
  v41 = (char *)&v30 - v18;
  v42 = MEMORY[0x24BEE4AF8];
  v37 = *(_QWORD *)(a3 + 16);
  if (v37)
  {
    v31 = v8;
    v19 = 0;
    v20 = (uint64_t)v40;
    v35 = a3;
    while (v19 < *(_QWORD *)(a3 + 16))
    {
      v21 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      v22 = *(_QWORD *)(v14 + 72);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 16))(v20, a3 + v21 + v22 * v19, v13);
      v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v34(v20, 0, 1, v13);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v20, 1, v13) == 1)
      {
        v8 = v31;
        goto LABEL_18;
      }
      v23 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 32);
      v24 = v41;
      v23(v41, v20, v13);
      v25 = v38(v24);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v14 + 8))(v41, v13);
        swift_bridgeObjectRelease();
        return swift_release();
      }
      if ((v25 & 1) != 0)
      {
        v23(v36, (uint64_t)v41, v13);
        v26 = v42;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v33 = 0;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v32(0, *(_QWORD *)(v26 + 16) + 1, 1);
          v26 = v42;
        }
        v29 = *(_QWORD *)(v26 + 16);
        v28 = *(_QWORD *)(v26 + 24);
        if (v29 >= v28 >> 1)
        {
          v32(v28 > 1, v29 + 1, 1);
          v26 = v42;
        }
        *(_QWORD *)(v26 + 16) = v29 + 1;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v23)(v26 + v21 + v29 * v22, v36, v13);
        v42 = v26;
        v9 = v33;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v41, v13);
      }
      ++v19;
      a3 = v35;
      v20 = (uint64_t)v40;
      if (v37 == v19)
      {
        v8 = v31;
        v34((uint64_t)v40, 1, 1, v13);
        goto LABEL_18;
      }
    }
    __break(1u);
  }
  else
  {
    v20 = (uint64_t)v40;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v40, 1, 1, v13);
LABEL_18:
    swift_bridgeObjectRelease();
    sub_245263F80(v20, v8);
    return v42;
  }
  return result;
}

uint64_t sub_24531D6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_245387740();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_24525C6C4(&qword_25744F6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]),
        v6 = sub_245387AAC(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_24525C6C4(&qword_257452430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v12 = sub_245387AE8();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_24531D83C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_24538843C();
    sub_245387B6C();
    v6 = sub_245388478();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_245388274() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_245388274() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_24531D970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  BOOL v20;

  if (!*(_QWORD *)(a5 + 16))
    return 0;
  sub_24538843C();
  sub_245387B6C();
  sub_245387B6C();
  v10 = sub_245388478();
  v11 = -1 << *(_BYTE *)(a5 + 32);
  v12 = v10 & ~v11;
  v13 = a5 + 56;
  if (((*(_QWORD *)(a5 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
    return 0;
  v14 = ~v11;
  v15 = *(_QWORD *)(a5 + 48);
  while (1)
  {
    v16 = (_QWORD *)(v15 + 32 * v12);
    v17 = v16[2];
    v18 = v16[3];
    v19 = *v16 == a1 && v16[1] == a2;
    if (v19 || (sub_245388274() & 1) != 0)
    {
      v20 = v17 == a3 && v18 == a4;
      if (v20 || (sub_245388274() & 1) != 0)
        break;
    }
    v12 = (v12 + 1) & v14;
    if (((*(_QWORD *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      return 0;
  }
  return 1;
}

BOOL sub_24531DAB0(unsigned __int8 a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = a1;
  sub_24538843C();
  sub_24538846C();
  v4 = sub_245388478();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(unsigned __int8 *)(v8 + v11);
    result = v12 == v3;
    if (v12 == v3)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_24531DB9C(uint64_t (*a1)(char *), char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *);

  v31 = a1;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
  v6 = MEMORY[0x24BDAC7A8](v30);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v27 - v9;
  v11 = *(_QWORD *)(a3 + 64);
  v28 = a3 + 64;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v29 = (unint64_t)(v12 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v16 = 0;
  while (v14)
  {
    v17 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v18 = v17 | (v16 << 6);
LABEL_19:
    v22 = *(_QWORD *)(a3 + 48);
    v23 = type metadata accessor for Record.ID(0);
    sub_2452B792C(v22 + *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * v18, (uint64_t)v10, type metadata accessor for Record.ID);
    v24 = *(_QWORD *)(a3 + 56);
    v25 = type metadata accessor for RecordMetadata();
    sub_2452B792C(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v18, (uint64_t)&v10[*(int *)(v30 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    sub_2452BC850((uint64_t)v10, (uint64_t)v8, &qword_25744FD30);
    v26 = v31(v8);
    result = sub_245263F80((uint64_t)v8, &qword_25744FD30);
    if (v3)
      goto LABEL_28;
    if ((v26 & 1) != 0)
    {
      a2 = 1;
LABEL_28:
      swift_release();
      return a2 & 1;
    }
  }
  if (__OFADD__(v16++, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v16 >= v29)
    goto LABEL_27;
  v20 = *(_QWORD *)(v28 + 8 * v16);
  if (v20)
  {
LABEL_18:
    v14 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v16 << 6);
    goto LABEL_19;
  }
  v21 = v16 + 1;
  if (v16 + 1 >= v29)
    goto LABEL_27;
  v20 = *(_QWORD *)(v28 + 8 * v21);
  if (v20)
    goto LABEL_17;
  v21 = v16 + 2;
  if (v16 + 2 >= v29)
    goto LABEL_27;
  v20 = *(_QWORD *)(v28 + 8 * v21);
  if (v20)
    goto LABEL_17;
  v21 = v16 + 3;
  if (v16 + 3 >= v29)
    goto LABEL_27;
  v20 = *(_QWORD *)(v28 + 8 * v21);
  if (v20)
    goto LABEL_17;
  v21 = v16 + 4;
  if (v16 + 4 >= v29)
  {
LABEL_27:
    a2 = 0;
    goto LABEL_28;
  }
  v20 = *(_QWORD *)(v28 + 8 * v21);
  if (v20)
  {
LABEL_17:
    v16 = v21;
    goto LABEL_18;
  }
  while (1)
  {
    v16 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v16 >= v29)
      goto LABEL_27;
    v20 = *(_QWORD *)(v28 + 8 * v16);
    ++v21;
    if (v20)
      goto LABEL_18;
  }
LABEL_30:
  __break(1u);
  return result;
}

BOOL sub_24531DE44(uint64_t (*a1)(char *), _BOOL8 a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  int v16;
  BOOL v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char v21;
  char v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v25[2];
  int v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  _BOOL8 v30;
  uint64_t (*v31)(char *);
  uint64_t v32;

  v4 = v3;
  v30 = a2;
  v31 = a1;
  v32 = sub_245387740();
  v6 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 + 16);
  if (v12)
  {
    v13 = a3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v27 = *(_QWORD *)(v6 + 72);
    v28 = v8;
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v25[1] = a3;
    swift_bridgeObjectRetain();
    while (1)
    {
      v14 = v32;
      v29(v11, v13, v32);
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v15(v11, 0, 1, v14);
      v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v14);
      v17 = v16 != 1;
      if (v16 == 1)
        break;
      v26 = 1;
      v18 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v19 = v6;
      v20 = v28;
      v18(v28, v11, v14);
      v17 = v30;
      v21 = v31(v20);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v14);
        swift_bridgeObjectRelease();
        return v17;
      }
      v22 = v21;
      v23 = v15;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v14);
      if ((v22 & 1) != 0)
      {
        v17 = v26;
        break;
      }
      v13 += v27;
      --v12;
      v4 = 0;
      v6 = v19;
      if (!v12)
        goto LABEL_9;
    }
  }
  else
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
LABEL_9:
    v23(v11, 1, 1, v32);
    v17 = 0;
  }
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t MetadataStoring.mismatchedRecordIDs(for:remoteRecordVersions:zoneIDs:disabledClientIDs:)(uint64_t a1, int64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t result;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  int64_t v60;
  unint64_t v61;
  uint64_t v62;
  int64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  BOOL v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  size_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  int64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  int64_t v138;
  unint64_t v139;
  uint64_t v140;
  int v141;
  _QWORD *v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v160;
  unint64_t v161;
  unint64_t v162;
  int64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  _QWORD *v170;
  char *v171;
  int64_t v172;
  void *v173;
  void (*v174)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  int64_t v179;
  void (*v180)(char *, uint64_t, uint64_t);
  int64_t v181;
  uint64_t *v182;
  _QWORD *v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  int64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  unint64_t v197;
  uint64_t v198;
  uint64_t v199;
  _QWORD *v200;
  uint64_t v201;
  unint64_t v202;
  unint64_t v203;

  v186 = a6;
  v189 = a5;
  v183 = a4;
  v166 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F848);
  MEMORY[0x24BDAC7A8](v7);
  v190 = (uint64_t)&v160 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = type metadata accessor for MetadataRecordPredicate();
  MEMORY[0x24BDAC7A8](v164);
  v165 = (uint64_t)&v160 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v169 = (uint64_t)&v160 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v171 = (char *)&v160 - v13;
  v14 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v14);
  v178 = (uint64_t)&v160 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_245387740();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v168 = (char *)&v160 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v167 = (uint64_t)&v160 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v160 - v22;
  v177 = type metadata accessor for Record.ID(0);
  v199 = *(_QWORD *)(v177 - 8);
  v24 = MEMORY[0x24BDAC7A8](v177);
  v192 = (uint64_t)&v160 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v198 = (uint64_t)&v160 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v200 = (uint64_t *)((char *)&v160 - v29);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v160 - v31;
  v33 = MEMORY[0x24BDAC7A8](v30);
  v176 = (uint64_t *)((char *)&v160 - v34);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v175 = (uint64_t)&v160 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v38 = (uint64_t *)((char *)&v160 - v37);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452368);
  v40 = MEMORY[0x24BDAC7A8](v39);
  v185 = (char *)&v160 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x24BDAC7A8](v40);
  v196 = (uint64_t)&v160 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)&v160 - v45;
  MEMORY[0x24BDAC7A8](v44);
  v48 = (char *)&v160 - v47;
  v49 = swift_bridgeObjectRetain();
  v50 = sub_245331658(v49);
  v188 = v50;
  v51 = (uint64_t)v48;
  swift_bridgeObjectRelease();
  v203 = MEMORY[0x24BEE4B00];
  v52 = *(_QWORD *)(a2 + 64);
  v172 = a2 + 64;
  v53 = 1 << *(_BYTE *)(a2 + 32);
  if (v53 < 64)
    v54 = ~(-1 << v53);
  else
    v54 = -1;
  v197 = v54 & v52;
  v55 = (unint64_t)(v53 + 63) >> 6;
  v201 = v50 + 56;
  v161 = v55 - 1;
  result = swift_bridgeObjectRetain();
  v57 = 0;
  v173 = 0;
  v179 = v55;
  v162 = v55 - 5;
  v181 = a2;
  v163 = a2 + 104;
  v193 = v16;
  v194 = v17;
  v191 = v51;
  v170 = v32;
  v182 = v38;
  v184 = v46;
  while (1)
  {
    if (v197)
    {
      v58 = __clz(__rbit64(v197));
      v197 &= v197 - 1;
      v195 = v57;
      v59 = v58 | (v57 << 6);
      goto LABEL_9;
    }
    v63 = v57 + 1;
    if (__OFADD__(v57, 1))
      break;
    if (v63 >= v179)
    {
      v195 = v57;
    }
    else
    {
      v64 = *(_QWORD *)(v172 + 8 * v63);
      if (v64)
        goto LABEL_13;
      if ((uint64_t)(v57 + 2) >= v179)
      {
        v195 = v57 + 1;
      }
      else
      {
        v64 = *(_QWORD *)(v172 + 8 * (v57 + 2));
        if (v64)
        {
          v63 = v57 + 2;
          goto LABEL_13;
        }
        if ((uint64_t)(v57 + 3) >= v179)
        {
          v195 = v57 + 2;
        }
        else
        {
          v64 = *(_QWORD *)(v172 + 8 * (v57 + 3));
          if (v64)
          {
            v63 = v57 + 3;
LABEL_13:
            v197 = (v64 - 1) & v64;
            v59 = __clz(__rbit64(v64)) + (v63 << 6);
            v195 = v63;
LABEL_9:
            v60 = v181;
            sub_2452B792C(*(_QWORD *)(v181 + 48) + *(_QWORD *)(v199 + 72) * v59, (uint64_t)v46, type metadata accessor for Record.ID);
            v61 = *(_QWORD *)(v60 + 56) + *(_QWORD *)(v17 + 72) * v59;
            v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452D90);
            (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(&v46[*(int *)(v62 + 48)], v61, v16);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v46, 0, 1, v62);
            v51 = v191;
            goto LABEL_16;
          }
          v63 = v57 + 4;
          if ((uint64_t)(v57 + 4) >= v179)
          {
            v195 = v57 + 3;
          }
          else
          {
            v64 = *(_QWORD *)(v172 + 8 * v63);
            if (v64)
              goto LABEL_13;
            while (v162 != v57)
            {
              v64 = *(_QWORD *)(v163 + 8 * v57++);
              if (v64)
              {
                v63 = v57 + 4;
                goto LABEL_13;
              }
            }
            v195 = v161;
          }
        }
      }
    }
    v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452D90);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v46, 1, 1, v65);
    v197 = 0;
LABEL_16:
    sub_2452BC850((uint64_t)v46, v51, &qword_257452368);
    v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452D90);
    v67 = *(_QWORD *)(v66 - 8);
    v68 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
    if (v68(v51, 1, v66) == 1)
    {
      swift_release();
      v114 = v165;
      sub_2452B792C(v166, v165 + *(int *)(v164 + 32), (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      *(_WORD *)v114 = 513;
      *(_BYTE *)(v114 + 2) = 1;
      *(_QWORD *)(v114 + 8) = v188;
      v115 = v186;
      v116 = v187;
      v117 = MetadataStoring.recordVersions(matching:)(v114, v189, v186);
      v118 = sub_24532D960(v117);
      swift_bridgeObjectRelease();
      v119 = (uint64_t)v183;
      swift_bridgeObjectRetain();
      v120 = sub_245331844(v118, v119);
      swift_release();
      v121 = swift_bridgeObjectRelease();
      MEMORY[0x24BDAC7A8](v121);
      *(&v160 - 6) = v189;
      *(&v160 - 5) = v115;
      v122 = v166;
      *(&v160 - 4) = v116;
      *(&v160 - 3) = v122;
      *(&v160 - 2) = (uint64_t)&v203;
      swift_bridgeObjectRetain();
      v123 = v193;
      v124 = sub_24531D18C((uint64_t (*)(char *))sub_245331AA8, (uint64_t)(&v160 - 8), v120, type metadata accessor for Record.ID, (void (*)(BOOL, uint64_t, uint64_t))sub_24532C528);
      swift_bridgeObjectRelease();
      v125 = v190;
      v126 = *(_QWORD *)(v203 + 64);
      v188 = v203 + 64;
      v127 = 1 << *(_BYTE *)(v203 + 32);
      v128 = -1;
      if (v127 < 64)
        v128 = ~(-1 << v127);
      v129 = v128 & v126;
      v191 = (unint64_t)(v127 + 63) >> 6;
      v181 = v191 - 1;
      v197 = v203;
      result = swift_bridgeObjectRetain();
      v130 = 0;
      v182 = (uint64_t *)(v119 + 72);
      v131 = v194;
      v132 = (uint64_t)v185;
      v195 = v67;
      while (2)
      {
        if (v129)
        {
          v133 = v124;
          v134 = __clz(__rbit64(v129));
          v129 &= v129 - 1;
          v201 = v130;
          v135 = v134 | (v130 << 6);
          goto LABEL_63;
        }
        v138 = v130 + 1;
        if (__OFADD__(v130, 1))
          goto LABEL_117;
        if (v138 < v191)
        {
          v139 = *(_QWORD *)(v188 + 8 * v138);
          if (v139)
          {
LABEL_67:
            v133 = v124;
            v129 = (v139 - 1) & v139;
            v135 = __clz(__rbit64(v139)) + (v138 << 6);
            v201 = v138;
LABEL_63:
            v136 = v197;
            sub_2452B792C(*(_QWORD *)(v197 + 48) + *(_QWORD *)(v199 + 72) * v135, v132, type metadata accessor for Record.ID);
            (*(void (**)(uint64_t, unint64_t, uint64_t))(v131 + 16))(v132 + *(int *)(v66 + 48), *(_QWORD *)(v136 + 56) + *(_QWORD *)(v131 + 72) * v135, v123);
            v137 = 0;
            v124 = v133;
            v67 = v195;
LABEL_76:
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v132, v137, 1, v66);
            v140 = v196;
            sub_2452BC850(v132, v196, &qword_257452368);
            v141 = v68(v140, 1, v66);
            v142 = v200;
            if (v141 == 1)
            {
              swift_release();
              sub_2452B7B5C(v165, (uint64_t (*)(_QWORD))type metadata accessor for MetadataRecordPredicate);
              swift_bridgeObjectRelease();
              return v124;
            }
            sub_2452B7AB8(v140, (uint64_t)v200, type metadata accessor for Record.ID);
            v143 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v186 + 8) + 24))(v189);
            if (*(_QWORD *)(v143 + 16))
            {
              v144 = sub_2452C2000(v142);
              if ((v145 & 1) != 0)
              {
                v146 = v144;
                v147 = *(_QWORD *)(v143 + 56);
                v148 = type metadata accessor for RecordMetadata();
                v149 = *(_QWORD *)(v148 - 8);
                v150 = v147 + *(_QWORD *)(v149 + 72) * v146;
                v125 = v190;
                sub_2452B792C(v150, v190, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v149 + 56))(v125, 0, 1, v148);
              }
              else
              {
                v148 = type metadata accessor for RecordMetadata();
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 56))(v125, 1, 1, v148);
              }
              v142 = v200;
            }
            else
            {
              v148 = type metadata accessor for RecordMetadata();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 56))(v125, 1, 1, v148);
            }
            swift_bridgeObjectRelease();
            type metadata accessor for RecordMetadata();
            v151 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 48))(v125, 1, v148);
            sub_245263F80(v125, &qword_25744F848);
            sub_2452B792C((uint64_t)v142, v198, type metadata accessor for Record.ID);
            if (v151 == 1)
            {
LABEL_88:
              sub_2452B7B5C(v198, type metadata accessor for Record.ID);
              sub_2452B792C((uint64_t)v200, v192, type metadata accessor for Record.ID);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v124 = sub_245323F2C(0, *(_QWORD *)(v124 + 16) + 1, 1, v124, &qword_257450270, type metadata accessor for Record.ID);
              v123 = v193;
              v131 = v194;
              v156 = *(_QWORD *)(v124 + 16);
              v155 = *(_QWORD *)(v124 + 24);
              if (v156 >= v155 >> 1)
                v124 = sub_245323F2C(v155 > 1, v156 + 1, 1, v124, &qword_257450270, type metadata accessor for Record.ID);
              v125 = v190;
              *(_QWORD *)(v124 + 16) = v156 + 1;
              sub_2452B7AB8(v192, v124+ ((*(unsigned __int8 *)(v199 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v199 + 80))+ *(_QWORD *)(v199 + 72) * v156, type metadata accessor for Record.ID);
            }
            else
            {
              v152 = (char *)v183[2];
              if (v152)
              {
                v153 = *(_QWORD *)(v198 + 32);
                v154 = *(_QWORD *)(v198 + 40);
                if (v183[4] == v153 && v183[5] == v154 || (sub_245388274() & 1) != 0)
                  goto LABEL_88;
                if (v152 != (char *)1)
                {
                  if (v183[6] == v153 && v183[7] == v154)
                    goto LABEL_88;
                  result = sub_245388274();
                  if ((result & 1) != 0)
                    goto LABEL_88;
                  if (v152 != (char *)2)
                  {
                    v157 = v182;
                    v158 = 2;
                    while (!__OFADD__(v158, 1))
                    {
                      if (*(v157 - 1) == v153 && *v157 == v154)
                        goto LABEL_88;
                      v184 = (char *)(v158 + 1);
                      result = sub_245388274();
                      if ((result & 1) != 0)
                        goto LABEL_88;
                      v157 += 2;
                      ++v158;
                      if (v184 == v152)
                        goto LABEL_59;
                    }
                    goto LABEL_118;
                  }
                }
              }
LABEL_59:
              sub_2452B7B5C(v198, type metadata accessor for Record.ID);
              v125 = v190;
              v123 = v193;
              v131 = v194;
            }
            sub_2452B7B5C((uint64_t)v200, type metadata accessor for Record.ID);
            result = (*(uint64_t (**)(uint64_t, uint64_t))(v131 + 8))(v196 + *(int *)(v66 + 48), v123);
            v132 = (uint64_t)v185;
            v130 = v201;
            continue;
          }
          v130 += 2;
          if (v138 + 1 >= v191)
          {
            v129 = 0;
            v137 = 1;
            v201 = v138;
            goto LABEL_76;
          }
          v139 = *(_QWORD *)(v188 + 8 * v130);
          if (v139)
          {
LABEL_70:
            v138 = v130;
            goto LABEL_67;
          }
          if (v138 + 2 < v191)
          {
            v139 = *(_QWORD *)(v188 + 8 * (v138 + 2));
            if (v139)
            {
              v138 += 2;
              goto LABEL_67;
            }
            v130 = v138 + 3;
            if (v138 + 3 >= v191)
            {
              v129 = 0;
              v137 = 1;
              v201 = v138 + 2;
              goto LABEL_76;
            }
            v139 = *(_QWORD *)(v188 + 8 * v130);
            if (!v139)
            {
              while (1)
              {
                v138 = v130 + 1;
                if (__OFADD__(v130, 1))
                  goto LABEL_119;
                if (v138 >= v191)
                {
                  v129 = 0;
                  v137 = 1;
                  v201 = v181;
                  goto LABEL_76;
                }
                v139 = *(_QWORD *)(v188 + 8 * v138);
                ++v130;
                if (v139)
                  goto LABEL_67;
              }
            }
            goto LABEL_70;
          }
        }
        break;
      }
      v201 = v130;
      v129 = 0;
      v137 = 1;
      goto LABEL_76;
    }
    v69 = v51 + *(int *)(v66 + 48);
    sub_2452B7AB8(v51, (uint64_t)v38, type metadata accessor for Record.ID);
    v70 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 32);
    v70(v23, v69, v16);
    v71 = v188;
    if (*(_QWORD *)(v188 + 16))
    {
      v180 = v70;
      v72 = v23;
      v73 = v38[2];
      v74 = v38[3];
      v76 = v38[4];
      v75 = v38[5];
      sub_24538843C();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_245387B6C();
      sub_245387B6C();
      v77 = sub_245388478();
      v78 = -1 << *(_BYTE *)(v71 + 32);
      v79 = v77 & ~v78;
      if (((*(_QWORD *)(v201 + ((v79 >> 3) & 0xFFFFFFFFFFFFF8)) >> v79) & 1) != 0)
      {
        v80 = ~v78;
        v81 = *(_QWORD *)(v71 + 48);
        while (1)
        {
          v82 = (_QWORD *)(v81 + 32 * v79);
          v83 = v82[2];
          v84 = v82[3];
          v85 = *v82 == v73 && v82[1] == v74;
          if (v85 || (sub_245388274() & 1) != 0)
          {
            v86 = v83 == v76 && v84 == v75;
            if (v86 || (sub_245388274() & 1) != 0)
              break;
          }
          v79 = (v79 + 1) & v80;
          if (((*(_QWORD *)(v201 + ((v79 >> 3) & 0xFFFFFFFFFFFFF8)) >> v79) & 1) == 0)
            goto LABEL_5;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v87 = *v182;
        v88 = v182[1];
        v16 = v193;
        v89 = v178;
        v174 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v194 + 56);
        v174(v178, 1, 1, v193);
        v90 = v176;
        *v176 = v87;
        v90[1] = v88;
        v90[2] = v73;
        v90[3] = v74;
        v90[4] = v76;
        v90[5] = v75;
        sub_2452B792C(v89, (uint64_t)v90 + *(int *)(v177 + 24), type metadata accessor for Record.ID.Ownership);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v23 = v72;
        if (sub_245387B78() < 51)
        {
          v17 = v194;
          v46 = v184;
        }
        else
        {
          v91 = v167;
          v92 = v173;
          sub_245321734(v87, v88, v167);
          v46 = v184;
          if (v92)
          {

            swift_bridgeObjectRetain();
            v93 = sub_2453310BC(50);
            v95 = v94;
            v97 = v96;
            v99 = v98;
            swift_bridgeObjectRelease();
            v87 = MEMORY[0x249531EBC](v93, v95, v97, v99);
            v101 = v100;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v173 = 0;
            v88 = v101;
            v17 = v194;
          }
          else
          {
            v173 = 0;
            v87 = sub_245387704();
            v102 = v91;
            v104 = v103;
            v17 = v194;
            (*(void (**)(uint64_t, uint64_t))(v194 + 8))(v102, v16);
            swift_bridgeObjectRelease();
            v88 = v104;
          }
        }
        v105 = v174;
        sub_2452B7B5C(v178, type metadata accessor for Record.ID.Ownership);
        v106 = (uint64_t)v176;
        v107 = (uint64_t *)((char *)v176 + *(int *)(v177 + 28));
        *v107 = v87;
        v107[1] = v88;
        v108 = v175;
        sub_2452B7AB8(v106, v175, type metadata accessor for Record.ID);
        v109 = v170;
        sub_2452B792C(v108, (uint64_t)v170, type metadata accessor for Record.ID);
        v110 = (uint64_t)v171;
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v171, v23, v16);
        v105(v110, 0, 1, v16);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v110, 1, v16) == 1)
        {
          sub_245263F80(v110, &qword_25440C700);
          v111 = v169;
          sub_245327928(v109, v169);
          sub_2452B7B5C((uint64_t)v109, type metadata accessor for Record.ID);
          sub_245263F80(v111, &qword_25440C700);
        }
        else
        {
          v112 = (uint64_t)v168;
          v180(v168, v110, v16);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v202 = v203;
          v203 = 0x8000000000000000;
          sub_2453285B4(v112, v109, isUniquelyReferenced_nonNull_native);
          v203 = v202;
          swift_bridgeObjectRelease();
          sub_2452B7B5C((uint64_t)v109, type metadata accessor for Record.ID);
        }
        sub_2452B7B5C(v175, type metadata accessor for Record.ID);
        v38 = v182;
        v51 = v191;
      }
      else
      {
LABEL_5:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v16 = v193;
        v17 = v194;
        v23 = v72;
        v38 = v182;
        v46 = v184;
        v51 = v191;
      }
    }
    else
    {
      v46 = v184;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v23, v16);
    result = sub_2452B7B5C((uint64_t)v38, type metadata accessor for Record.ID);
    v57 = v195;
  }
  __break(1u);
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
  return result;
}

uint64_t sub_24531F36C@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, uint64_t)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;

  v36 = a2;
  v37 = a1;
  v31 = a4;
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v6 = MEMORY[0x24BDAC7A8](v34);
  v35 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v30 - v8);
  v10 = *(_QWORD *)(a3 + 64);
  v32 = a3 + 64;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v33 = (unint64_t)(v11 + 63) >> 6;
  v38 = a3;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    v21 = *(_QWORD *)(v38 + 56);
    v22 = (uint64_t *)(*(_QWORD *)(v38 + 48) + 16 * i);
    v24 = *v22;
    v23 = v22[1];
    v25 = type metadata accessor for PairingRelationship();
    sub_2452B792C(v21 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * i, (uint64_t)v9 + *(int *)(v34 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    *v9 = v24;
    v9[1] = v23;
    v26 = v35;
    sub_2452BC850((uint64_t)v9, v35, (uint64_t *)&unk_25744FF90);
    swift_bridgeObjectRetain();
    v36(v37, v26);
    if (v4)
    {
      v27 = sub_2453876EC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v37, v27);
      sub_245263F80(v26, (uint64_t *)&unk_25744FF90);
      return swift_release();
    }
    result = sub_245263F80(v26, (uint64_t *)&unk_25744FF90);
    if (v13)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v15++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v15 >= v33)
      goto LABEL_26;
    v19 = *(_QWORD *)(v32 + 8 * v15);
    if (!v19)
      break;
LABEL_17:
    v13 = (v19 - 1) & v19;
  }
  v20 = v15 + 1;
  if (v15 + 1 >= v33)
    goto LABEL_26;
  v19 = *(_QWORD *)(v32 + 8 * v20);
  if (v19)
    goto LABEL_16;
  v20 = v15 + 2;
  if (v15 + 2 >= v33)
    goto LABEL_26;
  v19 = *(_QWORD *)(v32 + 8 * v20);
  if (v19)
    goto LABEL_16;
  v20 = v15 + 3;
  if (v15 + 3 >= v33)
    goto LABEL_26;
  v19 = *(_QWORD *)(v32 + 8 * v20);
  if (v19)
    goto LABEL_16;
  v20 = v15 + 4;
  if (v15 + 4 >= v33)
  {
LABEL_26:
    v28 = v31;
    swift_release();
    v29 = sub_2453876EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v28, v37, v29);
  }
  v19 = *(_QWORD *)(v32 + 8 * v20);
  if (v19)
  {
LABEL_16:
    v15 = v20;
    goto LABEL_17;
  }
  while (1)
  {
    v15 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v15 >= v33)
      goto LABEL_26;
    v19 = *(_QWORD *)(v32 + 8 * v15);
    ++v20;
    if (v19)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24531F650(uint64_t a1, void (*a2)(uint64_t *, char *), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t i;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t *, char *);
  uint64_t v31;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
  v7 = MEMORY[0x24BDAC7A8](v29);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v27 - v10;
  v31 = a1;
  v12 = *(_QWORD *)(a4 + 64);
  v27 = a4 + 64;
  v13 = 1 << *(_BYTE *)(a4 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v28 = (unint64_t)(v13 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  if (!v15)
    goto LABEL_5;
LABEL_4:
  v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (i = v18 | (v17 << 6); ; i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    v23 = *(_QWORD *)(a4 + 48);
    v24 = type metadata accessor for Record.ID(0);
    sub_2452B792C(v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * i, (uint64_t)v11, type metadata accessor for Record.ID);
    v25 = *(_QWORD *)(a4 + 56);
    v26 = type metadata accessor for RecordMetadata();
    sub_2452B792C(v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * i, (uint64_t)&v11[*(int *)(v29 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    sub_2452BC850((uint64_t)v11, (uint64_t)v9, &qword_25744FD30);
    v30(&v31, v9);
    if (v4)
    {
      swift_bridgeObjectRelease();
      sub_245263F80((uint64_t)v9, &qword_25744FD30);
      return swift_release();
    }
    result = sub_245263F80((uint64_t)v9, &qword_25744FD30);
    if (v15)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v28)
      goto LABEL_26;
    v21 = *(_QWORD *)(v27 + 8 * v17);
    if (!v21)
      break;
LABEL_17:
    v15 = (v21 - 1) & v21;
  }
  v22 = v17 + 1;
  if (v17 + 1 >= v28)
    goto LABEL_26;
  v21 = *(_QWORD *)(v27 + 8 * v22);
  if (v21)
    goto LABEL_16;
  v22 = v17 + 2;
  if (v17 + 2 >= v28)
    goto LABEL_26;
  v21 = *(_QWORD *)(v27 + 8 * v22);
  if (v21)
    goto LABEL_16;
  v22 = v17 + 3;
  if (v17 + 3 >= v28)
    goto LABEL_26;
  v21 = *(_QWORD *)(v27 + 8 * v22);
  if (v21)
    goto LABEL_16;
  v22 = v17 + 4;
  if (v17 + 4 >= v28)
  {
LABEL_26:
    swift_release();
    return v31;
  }
  v21 = *(_QWORD *)(v27 + 8 * v22);
  if (v21)
  {
LABEL_16:
    v17 = v22;
    goto LABEL_17;
  }
  while (1)
  {
    v17 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v17 >= v28)
      goto LABEL_26;
    v21 = *(_QWORD *)(v27 + 8 * v17);
    ++v22;
    if (v21)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t MetadataStoring.mismatchedZoneVersions(for:remoteZoneVersions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unsigned int v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  void (*v57)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  unsigned int (*v63)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  _BYTE *v76;
  _BYTE *v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t (*v84)(_BYTE *, uint64_t, uint64_t);
  uint64_t v85;
  int v86;
  uint64_t v87;
  _BYTE *v88;
  char v89;
  void (*v90)(_BYTE *, uint64_t);
  uint64_t *v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  unint64_t v99;
  uint64_t v100;
  _BOOL8 v101;
  uint64_t v102;
  unint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  BOOL v108;
  uint64_t v109;
  char v110;
  uint64_t result;
  _BYTE v112[4];
  int isUniquelyReferenced_nonNull_native;
  _BYTE *v114;
  uint64_t v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  int64_t v119;
  _BYTE *v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  _BYTE *v124;
  uint64_t v125;
  _BYTE *v126;
  uint64_t v127;
  _BYTE *v128;
  _BYTE *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  int64_t v134;
  uint64_t v135;
  _BYTE *v136;
  _BYTE *v137;
  uint64_t v138;
  _BYTE *v139;
  _BYTE *v140;
  uint64_t v141;

  v121 = sub_245387740();
  v127 = *(_QWORD *)(v121 - 8);
  MEMORY[0x24BDAC7A8](v121);
  v116 = &v112[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F830);
  MEMORY[0x24BDAC7A8](v117);
  v126 = &v112[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452DA0);
  MEMORY[0x24BDAC7A8](v122);
  v137 = &v112[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452DA8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v129 = &v112[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = MEMORY[0x24BDAC7A8](v12);
  v139 = &v112[-v15];
  v16 = MEMORY[0x24BDAC7A8](v14);
  v140 = &v112[-v17];
  MEMORY[0x24BDAC7A8](v16);
  v19 = &v112[-v18];
  v135 = type metadata accessor for ZoneVersion();
  v20 = *(_QWORD **)(v135 - 8);
  v21 = MEMORY[0x24BDAC7A8](v135);
  v114 = &v112[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = MEMORY[0x24BDAC7A8](v21);
  v128 = &v112[-v24];
  v25 = MEMORY[0x24BDAC7A8](v23);
  v120 = &v112[-v26];
  MEMORY[0x24BDAC7A8](v25);
  v136 = &v112[-v27];
  v28 = MetadataStoring.zoneVersions(for:)(a1, a3, a4);
  v29 = a2;
  v30 = v20;
  v31 = v28;
  v32 = swift_bridgeObjectRetain();
  v33 = sub_24531BA50(v32);
  v34 = swift_bridgeObjectRetain();
  v35 = sub_24531BA50(v34);
  v36 = sub_245322938(v33, v35);
  v37 = 0;
  v38 = *(_QWORD *)(v36 + 56);
  v118 = v36 + 56;
  v125 = v36;
  v39 = 1 << *(_BYTE *)(v36 + 32);
  v40 = -1;
  if (v39 < 64)
    v40 = ~(-1 << v39);
  v41 = v40 & v38;
  v119 = (unint64_t)(v39 + 63) >> 6;
  v115 = MEMORY[0x24BEE4B00];
  v130 = a2;
  v123 = v31;
  v124 = v19;
  while (1)
  {
    if (v41)
    {
      v43 = __clz(__rbit64(v41));
      v44 = (v41 - 1) & v41;
      v45 = v43 | (v37 << 6);
      goto LABEL_23;
    }
    v46 = v37 + 1;
    if (__OFADD__(v37, 1))
    {
      __break(1u);
      goto LABEL_67;
    }
    if (v46 >= v119)
      goto LABEL_65;
    v47 = *(_QWORD *)(v118 + 8 * v46);
    ++v37;
    if (!v47)
    {
      v37 = v46 + 1;
      if (v46 + 1 >= v119)
        goto LABEL_65;
      v47 = *(_QWORD *)(v118 + 8 * v37);
      if (!v47)
      {
        v37 = v46 + 2;
        if (v46 + 2 >= v119)
          goto LABEL_65;
        v47 = *(_QWORD *)(v118 + 8 * v37);
        if (!v47)
          break;
      }
    }
LABEL_22:
    v44 = (v47 - 1) & v47;
    v45 = __clz(__rbit64(v47)) + (v37 << 6);
LABEL_23:
    v133 = v44;
    v134 = v37;
    v49 = (uint64_t *)(*(_QWORD *)(v125 + 48) + 32 * v45);
    v50 = *v49;
    v51 = v49[1];
    v52 = v49[2];
    v53 = v49[3];
    v54 = *(_QWORD *)(v31 + 16);
    v138 = v53;
    v131 = v52;
    v132 = v50;
    if (v54)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v55 = sub_2452C1EB4(v50, v51, v52, v53);
      if ((v56 & 1) != 0)
      {
        sub_2452B792C(*(_QWORD *)(v31 + 56) + v30[9] * v55, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
        v57 = (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v30[7];
        v58 = v19;
        v59 = 0;
      }
      else
      {
        v57 = (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v30[7];
        v58 = v19;
        v59 = 1;
      }
      v60 = v135;
      v57(v58, v59, 1, v135);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = v130;
    }
    else
    {
      v57 = (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v30[7];
      v60 = v135;
      v57(v19, 1, 1, v135);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v61 = v51;
    v62 = v30;
    v63 = (unsigned int (*)(_BYTE *, uint64_t, uint64_t))v30[6];
    if (v63(v19, 1, v60) == 1)
    {
      v64 = v136;
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v127 + 56))(v136, 1, 1, v121);
      v65 = (uint64_t)v19;
      v66 = v64;
      sub_245263F80(v65, &qword_257452DA8);
    }
    else
    {
      v68 = (uint64_t)v19;
      v66 = v136;
      sub_2452B7AB8(v68, (uint64_t)v136, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    }
    v67 = (uint64_t)v128;
    v69 = v140;
    sub_2452B792C((uint64_t)v66, (uint64_t)v140, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    v70 = v135;
    v57(v69, 0, 1, v135);
    if (*(_QWORD *)(v29 + 16))
    {
      v71 = v67;
      swift_bridgeObjectRetain();
      v72 = v138;
      swift_bridgeObjectRetain();
      v73 = sub_2452C1EB4(v132, v51, v131, v72);
      if ((v74 & 1) != 0)
      {
        v75 = *(_QWORD *)(v29 + 56) + v62[9] * v73;
        v76 = v139;
        sub_2452B792C(v75, (uint64_t)v139, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
        v77 = v76;
        v78 = 0;
      }
      else
      {
        v77 = v139;
        v78 = 1;
      }
      v57(v77, v78, 1, v70);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v67 = v71;
    }
    else
    {
      v57(v139, 1, 1, v70);
    }
    v79 = v137;
    v80 = (uint64_t)&v137[*(int *)(v122 + 48)];
    sub_2452BC89C((uint64_t)v140, (uint64_t)v137, &qword_257452DA8);
    sub_2452BC89C((uint64_t)v139, v80, &qword_257452DA8);
    if (v63(v79, 1, v70) != 1)
    {
      sub_2452BC89C((uint64_t)v137, (uint64_t)v129, &qword_257452DA8);
      if (v63((_BYTE *)v80, 1, v70) == 1)
      {
        v91 = &qword_257452DA0;
        v30 = v62;
        v92 = v136;
        v31 = v123;
LABEL_52:
        v93 = v138;
        v94 = v131;
        sub_245263F80((uint64_t)v139, &qword_257452DA8);
        sub_245263F80((uint64_t)v140, &qword_257452DA8);
        sub_2452B7B5C((uint64_t)v129, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
        goto LABEL_53;
      }
      v81 = v120;
      sub_2452B7AB8(v80, (uint64_t)v120, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      v82 = v126;
      v83 = (uint64_t)&v126[*(int *)(v117 + 48)];
      sub_2452B792C((uint64_t)v129, (uint64_t)v126, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      sub_2452B792C((uint64_t)v81, v83, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      v84 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v127 + 48);
      v85 = v121;
      v86 = v84(v82, 1, v121);
      v30 = v62;
      if (v86 == 1)
      {
        if (v84((_BYTE *)v83, 1, v85) == 1)
          goto LABEL_45;
      }
      else
      {
        sub_2452B792C((uint64_t)v126, v67, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
        if (v84((_BYTE *)v83, 1, v85) != 1)
        {
          v87 = v127;
          v88 = v116;
          (*(void (**)(_BYTE *, uint64_t, uint64_t))(v127 + 32))(v116, v83, v85);
          v89 = sub_245387710();
          v90 = *(void (**)(_BYTE *, uint64_t))(v87 + 8);
          v30 = v62;
          v90(v88, v85);
          v90(v128, v85);
          if ((v89 & 1) != 0)
          {
LABEL_45:
            sub_2452B7B5C((uint64_t)v126, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
            sub_2452B7B5C((uint64_t)v120, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
            sub_245263F80((uint64_t)v139, &qword_257452DA8);
            sub_245263F80((uint64_t)v140, &qword_257452DA8);
            sub_2452B7B5C((uint64_t)v129, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
            v31 = v123;
            v19 = v124;
LABEL_5:
            sub_245263F80((uint64_t)v137, &qword_257452DA8);
            sub_2452B7B5C((uint64_t)v136, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v29 = v130;
            goto LABEL_6;
          }
          sub_2452B7B5C((uint64_t)v126, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
          v31 = v123;
          goto LABEL_51;
        }
        (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v67, v85);
      }
      sub_245263F80((uint64_t)v126, &qword_25744F830);
      v31 = v123;
LABEL_51:
      v51 = v61;
      sub_2452B7B5C((uint64_t)v120, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      v91 = &qword_257452DA8;
      v92 = v136;
      goto LABEL_52;
    }
    sub_245263F80((uint64_t)v139, &qword_257452DA8);
    sub_245263F80((uint64_t)v140, &qword_257452DA8);
    v42 = v63((_BYTE *)v80, 1, v70);
    v30 = v62;
    v31 = v123;
    v19 = v124;
    if (v42 == 1)
      goto LABEL_5;
    v91 = &qword_257452DA0;
    v92 = v136;
    v93 = v138;
    v94 = v131;
LABEL_53:
    sub_245263F80((uint64_t)v137, v91);
    sub_2452B792C((uint64_t)v92, (uint64_t)v114, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    v95 = v115;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v141 = v95;
    v96 = v132;
    v97 = v94;
    v99 = sub_2452C1EB4(v132, v51, v94, v93);
    v100 = *(_QWORD *)(v95 + 16);
    v101 = (v98 & 1) == 0;
    v102 = v100 + v101;
    if (__OFADD__(v100, v101))
      goto LABEL_68;
    if (*(_QWORD *)(v95 + 24) >= v102)
    {
      v29 = v130;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        goto LABEL_59;
      v110 = v98;
      sub_2452C8B00();
      LOBYTE(v98) = v110;
      v93 = v138;
    }
    else
    {
      LODWORD(v115) = v98;
      sub_2452C4EB8(v102, isUniquelyReferenced_nonNull_native);
      v103 = sub_2452C1EB4(v96, v51, v97, v93);
      v104 = v98 & 1;
      LOBYTE(v98) = v115;
      if ((v115 & 1) != v104)
        goto LABEL_70;
      v99 = v103;
    }
    v29 = v130;
LABEL_59:
    v105 = v141;
    v115 = v141;
    if ((v98 & 1) != 0)
    {
      sub_2452BC64C((uint64_t)v114, *(_QWORD *)(v141 + 56) + v30[9] * v99, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    }
    else
    {
      *(_QWORD *)(v141 + 8 * (v99 >> 6) + 64) |= 1 << v99;
      v106 = (uint64_t *)(*(_QWORD *)(v105 + 48) + 32 * v99);
      *v106 = v96;
      v106[1] = v51;
      v106[2] = v97;
      v106[3] = v93;
      sub_2452B7AB8((uint64_t)v114, *(_QWORD *)(v105 + 56) + v30[9] * v99, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      v107 = *(_QWORD *)(v115 + 16);
      v108 = __OFADD__(v107, 1);
      v109 = v107 + 1;
      if (v108)
        goto LABEL_69;
      *(_QWORD *)(v115 + 16) = v109;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2452B7B5C((uint64_t)v136, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    v19 = v124;
LABEL_6:
    v41 = v133;
    v37 = v134;
  }
  v48 = v46 + 3;
  if (v48 >= v119)
  {
LABEL_65:
    swift_bridgeObjectRelease();
    swift_release();
    return v115;
  }
  v47 = *(_QWORD *)(v118 + 8 * v48);
  if (v47)
  {
    v37 = v48;
    goto LABEL_22;
  }
  while (1)
  {
    v37 = v48 + 1;
    if (__OFADD__(v48, 1))
      break;
    if (v37 >= v119)
      goto LABEL_65;
    v47 = *(_QWORD *)(v118 + 8 * v37);
    ++v48;
    if (v47)
      goto LABEL_22;
  }
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  result = sub_2453883DC();
  __break(1u);
  return result;
}

uint64_t MetadataStoring.recordVersions(for:zoneIDs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v8 = type metadata accessor for MetadataRecordPredicate();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2452B792C(a1, (uint64_t)&v11[*(int *)(v9 + 32)], (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  *(_WORD *)v11 = 258;
  v11[2] = 2;
  *((_QWORD *)v11 + 1) = a2;
  swift_bridgeObjectRetain();
  v12 = MetadataStoring.recordVersions(matching:)((uint64_t)v11, a3, a4);
  sub_2452B7B5C((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for MetadataRecordPredicate);
  return v12;
}

uint64_t MetadataStoring.hasRecords(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD v6[4];

  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a3 + 8) + 24))(a2);
  v6[2] = a1;
  LOBYTE(a1) = sub_24531DB9C((uint64_t (*)(char *))sub_245331ACC, (char)v6, v4);
  swift_bridgeObjectRelease();
  return a1 & 1;
}

uint64_t MetadataStoring.recordVersions(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[4];

  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a3 + 8) + 24))(a2);
  v7[2] = a1;
  v5 = sub_24531F650(MEMORY[0x24BEE4B00], (void (*)(uint64_t *, char *))sub_245331AE8, (uint64_t)v7, v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t MutableMetadataStoring.removeIncompatiblePairingRelationships(protocolVersion:)(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  unint64_t v75;
  unint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  int64_t v80;
  char *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  int64_t v85;

  v83 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v7 = MEMORY[0x24BDAC7A8](v83);
  v74 = (uint64_t *)((char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = MEMORY[0x24BDAC7A8](v7);
  v77 = (uint64_t *)((char *)&v70 - v10);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v82 = (uint64_t *)((char *)&v70 - v12);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (uint64_t *)((char *)&v70 - v14);
  MEMORY[0x24BDAC7A8](v13);
  v81 = (char *)&v70 - v16;
  v17 = a1[1];
  v75 = *a1;
  v76 = v17;
  v71 = a3;
  v72 = a2;
  v18 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 8) + 8) + 32);
  v73 = v3;
  v19 = v18(a2);
  v20 = *(_QWORD *)(v19 + 64);
  v79 = v19 + 64;
  v21 = 1 << *(_BYTE *)(v19 + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & v20;
  v80 = (unint64_t)(v21 + 63) >> 6;
  v84 = v19;
  result = swift_bridgeObjectRetain();
  v25 = 0;
  v78 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v26 = v83;
  while (1)
  {
    if (v23)
    {
      v27 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      v85 = v25;
      v28 = v27 | (v25 << 6);
      goto LABEL_24;
    }
    v29 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
      __break(1u);
LABEL_37:
      __break(1u);
      return result;
    }
    if (v29 >= v80)
      goto LABEL_32;
    v30 = *(_QWORD *)(v79 + 8 * v29);
    v31 = v25 + 1;
    if (!v30)
    {
      v31 = v25 + 2;
      if (v25 + 2 >= v80)
        goto LABEL_32;
      v30 = *(_QWORD *)(v79 + 8 * v31);
      if (!v30)
      {
        v31 = v25 + 3;
        if (v25 + 3 >= v80)
          goto LABEL_32;
        v30 = *(_QWORD *)(v79 + 8 * v31);
        if (!v30)
        {
          v31 = v25 + 4;
          if (v25 + 4 >= v80)
            goto LABEL_32;
          v30 = *(_QWORD *)(v79 + 8 * v31);
          if (!v30)
            break;
        }
      }
    }
LABEL_23:
    v23 = (v30 - 1) & v30;
    v85 = v31;
    v28 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_24:
    v33 = *(_QWORD *)(v84 + 56);
    v34 = (uint64_t *)(*(_QWORD *)(v84 + 48) + 16 * v28);
    v35 = *v34;
    v36 = v34[1];
    v37 = type metadata accessor for PairingRelationship();
    v38 = v33 + *(_QWORD *)(*(_QWORD *)(v37 - 8) + 72) * v28;
    v39 = v81;
    sub_2452B792C(v38, (uint64_t)&v81[*(int *)(v26 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    *v39 = v35;
    v39[1] = v36;
    sub_2452BC850((uint64_t)v39, (uint64_t)v15, (uint64_t *)&unk_25744FF90);
    v40 = *(int *)(v26 + 48);
    v41 = v82;
    v42 = (uint64_t)v82 + v40;
    v43 = (uint64_t)v15 + v40;
    v44 = v15[1];
    *v82 = *v15;
    v41[1] = v44;
    sub_2452B792C((uint64_t)v15 + v40, v42, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v45 = (uint64_t *)(v42 + *(int *)(v37 + 32));
    v46 = *v45;
    v47 = v45[1];
    swift_bridgeObjectRetain();
    sub_24526B470(v46, v47);
    sub_2452B7B5C(v42, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    if (v47)
    {
      sub_24526B484(v46, v47);
    }
    else
    {
      v48 = v77;
      v49 = (uint64_t)v77 + *(int *)(v26 + 48);
      v50 = v15[1];
      *v77 = *v15;
      v48[1] = v50;
      sub_2452B792C(v43, v49, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v51 = v49 + *(int *)(v37 + 20);
      v53 = *(_QWORD *)(v51 + 32);
      v52 = *(_QWORD *)(v51 + 40);
      sub_2452B7B5C(v49, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      if (v53 < v76 || v75 < v52)
      {
        v54 = *(int *)(v26 + 48);
        v55 = v74;
        v56 = (uint64_t)v74 + v54;
        v57 = *v15;
        v58 = v15[1];
        *v74 = *v15;
        v55[1] = v58;
        sub_2452B792C(v43, (uint64_t)v55 + v54, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v78 = sub_245323DF8(0, v78[2] + 1, 1, v78);
        v60 = v78[2];
        v59 = v78[3];
        if (v60 >= v59 >> 1)
          v78 = sub_245323DF8((_QWORD *)(v59 > 1), v60 + 1, 1, v78);
        v61 = v78;
        v78[2] = v60 + 1;
        v62 = &v61[2 * v60];
        v62[4] = v57;
        v62[5] = v58;
        sub_2452B7B5C(v56, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      }
    }
    v25 = v85;
    result = sub_245263F80((uint64_t)v15, (uint64_t *)&unk_25744FF90);
  }
  v32 = v25 + 5;
  if (v25 + 5 < v80)
  {
    v30 = *(_QWORD *)(v79 + 8 * v32);
    if (!v30)
    {
      while (1)
      {
        v31 = v32 + 1;
        if (__OFADD__(v32, 1))
          goto LABEL_37;
        if (v31 >= v80)
          goto LABEL_32;
        v30 = *(_QWORD *)(v79 + 8 * v31);
        ++v32;
        if (v30)
          goto LABEL_23;
      }
    }
    v31 = v25 + 5;
    goto LABEL_23;
  }
LABEL_32:
  swift_release();
  swift_bridgeObjectRelease();
  v63 = v78[2];
  v64 = v72;
  if (v63)
  {
    v65 = *(_QWORD *)(v71 + 16);
    v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 96);
    v67 = v78 + 5;
    do
    {
      v69 = *(v67 - 1);
      v68 = *v67;
      swift_bridgeObjectRetain();
      v66(v69, v68, v64, v65);
      swift_bridgeObjectRelease();
      v67 += 2;
      --v63;
    }
    while (v63);
  }
  return swift_bridgeObjectRelease();
}

uint64_t MetadataStoring.orphanedRecordIDs()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63[16];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
  v5 = MEMORY[0x24BDAC7A8](v58);
  v57 = (uint64_t)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v56 = (uint64_t)&v47 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v55 = (uint64_t)&v47 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v54 = (uint64_t)&v47 - v11;
  v12 = type metadata accessor for Record.ID(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v62 = (uint64_t)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 24))(a1);
  v64 = a1;
  v65 = a2;
  v66 = v2;
  v16 = sub_24532A108((uint64_t)sub_245331B00, (uint64_t)v63, v15, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_24532A7BC);
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17)
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  v67 = MEMORY[0x24BEE4AF8];
  sub_24532C528(0, v17, 0);
  result = sub_245330EE8(v16);
  v20 = result;
  v21 = 0;
  v22 = v16 + 64;
  v23 = *(_BYTE *)(v16 + 32);
  v48 = v16 + 88;
  v52 = v16;
  v53 = v13;
  v49 = v17;
  v50 = v19;
  v51 = v16 + 64;
  while ((v20 & 0x8000000000000000) == 0 && v20 < 1 << v23)
  {
    v26 = (unint64_t)v20 >> 6;
    if ((*(_QWORD *)(v22 + 8 * ((unint64_t)v20 >> 6)) & (1 << v20)) == 0)
      goto LABEL_29;
    if (*(_DWORD *)(v16 + 36) != (_DWORD)v19)
      goto LABEL_30;
    v59 = v21;
    v60 = 1 << v20;
    v27 = v58;
    v28 = v54;
    v29 = v54 + *(int *)(v58 + 48);
    v30 = *(_QWORD *)(v16 + 48);
    v61 = *(_QWORD *)(v13 + 72);
    sub_2452B792C(v30 + v61 * v20, v54, type metadata accessor for Record.ID);
    v31 = *(_QWORD *)(v16 + 56);
    v32 = type metadata accessor for RecordMetadata();
    sub_2452B792C(v31 + *(_QWORD *)(*(_QWORD *)(v32 - 8) + 72) * v20, v29, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v33 = v55;
    sub_2452B792C(v28, v55, type metadata accessor for Record.ID);
    sub_2452B792C(v29, v33 + *(int *)(v27 + 48), (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v34 = v56;
    sub_2452BC850(v33, v56, &qword_25744FD30);
    sub_245263F80(v28, &qword_25744FD30);
    v35 = *(int *)(v27 + 48);
    v36 = v57;
    v37 = v57 + v35;
    v38 = v34 + v35;
    sub_2452B792C(v34, v57, type metadata accessor for Record.ID);
    sub_2452B792C(v38, v37, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    sub_2452B7AB8(v36, v62, type metadata accessor for Record.ID);
    sub_2452B7B5C(v37, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    sub_245263F80(v34, &qword_25744FD30);
    v39 = v67;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24532C528(0, *(_QWORD *)(v39 + 16) + 1, 1);
      v39 = v67;
    }
    v41 = *(_QWORD *)(v39 + 16);
    v40 = *(_QWORD *)(v39 + 24);
    v13 = v53;
    if (v41 >= v40 >> 1)
    {
      sub_24532C528(v40 > 1, v41 + 1, 1);
      v39 = v67;
    }
    *(_QWORD *)(v39 + 16) = v41 + 1;
    result = sub_2452B7AB8(v62, v39+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ v41 * v61, type metadata accessor for Record.ID);
    v16 = v52;
    v23 = *(_BYTE *)(v52 + 32);
    v24 = 1 << v23;
    if (v20 >= 1 << v23)
      goto LABEL_31;
    v22 = v51;
    v42 = *(_QWORD *)(v51 + 8 * v26);
    if ((v42 & v60) == 0)
      goto LABEL_32;
    LODWORD(v19) = v50;
    if (*(_DWORD *)(v52 + 36) != (_DWORD)v50)
      goto LABEL_33;
    v43 = v42 & (-2 << (v20 & 0x3F));
    if (v43)
    {
      v24 = __clz(__rbit64(v43)) | v20 & 0xFFFFFFFFFFFFFFC0;
      v25 = v49;
    }
    else
    {
      v44 = v26 + 1;
      v45 = (v24 + 63) >> 6;
      v25 = v49;
      if (v26 + 1 < v45)
      {
        v46 = *(_QWORD *)(v51 + 8 * v44);
        if (!v46)
        {
          v44 = v26 + 2;
          if (v26 + 2 >= v45)
            goto LABEL_4;
          v46 = *(_QWORD *)(v51 + 8 * v44);
          if (!v46)
          {
            while (v45 - 3 != v26)
            {
              v46 = *(_QWORD *)(v48 + 8 * v26++);
              if (v46)
              {
                v44 = v26 + 2;
                goto LABEL_19;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_19:
        v24 = __clz(__rbit64(v46)) + (v44 << 6);
      }
    }
LABEL_4:
    v21 = v59 + 1;
    v20 = v24;
    if (v59 + 1 == v25)
    {
      swift_release();
      return v39;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t MetadataStoring.expiredRecordIDs()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  int64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
  v4 = MEMORY[0x24BDAC7A8](v57);
  v56 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v55 = (uint64_t)&v46 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v54 = (uint64_t)&v46 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v53 = (uint64_t)&v46 - v10;
  v11 = type metadata accessor for Record.ID(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v61 = (uint64_t)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 24))(a1);
  v15 = sub_245329EC8(v14);
  swift_bridgeObjectRelease();
  v16 = v15[2];
  if (!v16)
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  v62 = MEMORY[0x24BEE4AF8];
  sub_24532C528(0, v16, 0);
  result = sub_245330EE8((uint64_t)v15);
  v19 = result;
  v20 = 0;
  v21 = v15 + 8;
  v22 = *((_BYTE *)v15 + 32);
  v47 = v15 + 11;
  v48 = v16;
  v51 = v15;
  v52 = v12;
  v49 = v18;
  v50 = v15 + 8;
  while ((v19 & 0x8000000000000000) == 0 && v19 < 1 << v22)
  {
    v25 = (unint64_t)v19 >> 6;
    if ((v21[(unint64_t)v19 >> 6] & (1 << v19)) == 0)
      goto LABEL_29;
    if (*((_DWORD *)v15 + 9) != (_DWORD)v18)
      goto LABEL_30;
    v58 = v20;
    v59 = 1 << v19;
    v26 = v57;
    v27 = v53;
    v28 = v53 + *(int *)(v57 + 48);
    v29 = v15[6];
    v60 = *(_QWORD *)(v12 + 72);
    sub_2452B792C(v29 + v60 * v19, v53, type metadata accessor for Record.ID);
    v30 = v15[7];
    v31 = type metadata accessor for RecordMetadata();
    sub_2452B792C(v30 + *(_QWORD *)(*(_QWORD *)(v31 - 8) + 72) * v19, v28, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v32 = v54;
    sub_2452B792C(v27, v54, type metadata accessor for Record.ID);
    sub_2452B792C(v28, v32 + *(int *)(v26 + 48), (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v33 = v55;
    sub_2452BC850(v32, v55, &qword_25744FD30);
    sub_245263F80(v27, &qword_25744FD30);
    v34 = *(int *)(v26 + 48);
    v35 = v56;
    v36 = v56 + v34;
    v37 = v33 + v34;
    sub_2452B792C(v33, v56, type metadata accessor for Record.ID);
    sub_2452B792C(v37, v36, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    sub_2452B7AB8(v35, v61, type metadata accessor for Record.ID);
    sub_2452B7B5C(v36, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    sub_245263F80(v33, &qword_25744FD30);
    v38 = v62;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24532C528(0, *(_QWORD *)(v38 + 16) + 1, 1);
      v38 = v62;
    }
    v40 = *(_QWORD *)(v38 + 16);
    v39 = *(_QWORD *)(v38 + 24);
    v12 = v52;
    if (v40 >= v39 >> 1)
    {
      sub_24532C528(v39 > 1, v40 + 1, 1);
      v38 = v62;
    }
    *(_QWORD *)(v38 + 16) = v40 + 1;
    result = sub_2452B7AB8(v61, v38+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ v40 * v60, type metadata accessor for Record.ID);
    v15 = v51;
    v22 = *((_BYTE *)v51 + 32);
    v23 = 1 << v22;
    if (v19 >= 1 << v22)
      goto LABEL_31;
    v21 = v50;
    v41 = v50[v25];
    if ((v41 & v59) == 0)
      goto LABEL_32;
    LODWORD(v18) = v49;
    if (*((_DWORD *)v51 + 9) != (_DWORD)v49)
      goto LABEL_33;
    v42 = v41 & (-2 << (v19 & 0x3F));
    if (v42)
    {
      v23 = __clz(__rbit64(v42)) | v19 & 0xFFFFFFFFFFFFFFC0;
      v24 = v48;
    }
    else
    {
      v43 = v25 + 1;
      v44 = (v23 + 63) >> 6;
      v24 = v48;
      if (v25 + 1 < v44)
      {
        v45 = v50[v43];
        if (!v45)
        {
          v43 = v25 + 2;
          if (v25 + 2 >= v44)
            goto LABEL_4;
          v45 = v50[v43];
          if (!v45)
          {
            while (v44 - 3 != v25)
            {
              v45 = v47[v25++];
              if (v45)
              {
                v43 = v25 + 2;
                goto LABEL_19;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_19:
        v23 = __clz(__rbit64(v45)) + (v43 << 6);
      }
    }
LABEL_4:
    v20 = v58 + 1;
    v19 = v23;
    if (v58 + 1 == v24)
    {
      swift_release();
      return v38;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t MetadataStoring.zoneVersion(for:pairingRelationship:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21;
  _BYTE v22[16];
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  v21 = *a1;
  v13 = *((_QWORD *)a1 + 2);
  v14 = *((_QWORD *)a1 + 3);
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a4 + 8) + 24))(a3);
  v23 = v21;
  v24 = v13;
  v25 = v14;
  v26 = a2;
  v16 = (_QWORD *)sub_24531F650(MEMORY[0x24BEE4AF8], (void (*)(uint64_t *, char *))sub_245331B20, (uint64_t)v22, v15);
  swift_bridgeObjectRelease();
  sub_24532251C(v16);
  swift_bridgeObjectRelease();
  v17 = sub_245387740();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v17) == 1)
  {
    sub_245263F80((uint64_t)v12, &qword_25440C700);
    v19 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(a5, v12, v17);
    v19 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(a5, v19, 1, v17);
}

unint64_t MetadataStoring.zoneVersions(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17[4];
  uint64_t v18;

  v7 = a1 + *(int *)(type metadata accessor for PairingRelationship() + 32);
  v8 = *(_QWORD *)v7;
  v9 = *(_QWORD *)(v7 + 8);
  if (v9 == 2)
  {
    sub_24526B484(*(_QWORD *)v7, 2uLL);
    sub_24526B484(0, 2uLL);
    v10 = MetadataStoring.zones()(a2, a3);
    v18 = MEMORY[0x24BEE4B00];
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain();
      v12 = (uint64_t *)(v10 + 56);
      do
      {
        v13 = *(v12 - 1);
        v14 = *v12;
        v15 = *(v12 - 2);
        v17[0] = *(v12 - 3);
        v17[1] = v15;
        v17[2] = v13;
        v17[3] = v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_245321D18((uint64_t)&v18, v17, v3, a1, a2, a3);
        v12 += 4;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease_n();
      return v18;
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x24BEE4B00];
    }
  }
  else
  {
    sub_24526B470(*(_QWORD *)v7, *(_QWORD *)(v7 + 8));
    sub_24526B484(v8, v9);
    sub_24526B484(0, 2uLL);
    return sub_24531B5AC(MEMORY[0x24BEE4AF8]);
  }
}

uint64_t sub_245321734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  _QWORD v23[2];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C730);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UniformHasher();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = _s16ReplicatorEngine13UniformHasherVACycfC_0();
  v17 = (void *)MEMORY[0x249532900](v16);
  sub_245323B0C(a1, a2);
  if (v3)
  {
    objc_autoreleasePoolPop(v17);
    return sub_2452B7B5C((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for UniformHasher);
  }
  objc_autoreleasePoolPop(v17);
  sub_245387A28();
  *(_QWORD *)&v9[*(int *)(v7 + 36)] = 16;
  v18 = sub_245378E40((uint64_t)v9);
  sub_24525C9C8(v18, v19);
  v20 = sub_245387740();
  v21 = *(_QWORD *)(v20 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v12, 1, v20);
  if ((_DWORD)result != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(a3, v12, v20);
    return sub_2452B7B5C((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for UniformHasher);
  }
  __break(1u);
  return result;
}

uint64_t sub_2453218E0@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;

  v36 = a1;
  v32 = a3;
  v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v31 = *(_QWORD *)(v37 - 8);
  v5 = MEMORY[0x24BDAC7A8](v37);
  v35 = (uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v30 - v7);
  v9 = *(_QWORD *)(a2 + 64);
  v33 = a2 + 64;
  v10 = 1 << *(_BYTE *)(a2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v34 = (unint64_t)(v10 + 63) >> 6;
  v38 = a2;
  result = swift_bridgeObjectRetain();
  v14 = 0;
  if (!v12)
    goto LABEL_5;
LABEL_4:
  v15 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v15 | (v14 << 6); ; i = __clz(__rbit64(v18)) + (v14 << 6))
  {
    v20 = *(_QWORD *)(v38 + 56);
    v21 = (uint64_t *)(*(_QWORD *)(v38 + 48) + 16 * i);
    v23 = *v21;
    v22 = v21[1];
    v24 = type metadata accessor for PairingRelationship();
    sub_2452B792C(v20 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * i, (uint64_t)v8 + *(int *)(v37 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    *v8 = v23;
    v8[1] = v22;
    v25 = v35;
    sub_2452BC850((uint64_t)v8, v35, (uint64_t *)&unk_25744FF90);
    swift_bridgeObjectRetain();
    v26 = v36(v25);
    if (v3)
    {
      sub_245263F80(v25, (uint64_t *)&unk_25744FF90);
      return swift_release();
    }
    if ((v26 & 1) != 0)
    {
      swift_release();
      v27 = v32;
      sub_2452BC850(v25, v32, (uint64_t *)&unk_25744FF90);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v27, 0, 1, v37);
    }
    result = sub_245263F80(v25, (uint64_t *)&unk_25744FF90);
    if (v12)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v14++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v14 >= v34)
      goto LABEL_28;
    v18 = *(_QWORD *)(v33 + 8 * v14);
    if (!v18)
      break;
LABEL_17:
    v12 = (v18 - 1) & v18;
  }
  v19 = v14 + 1;
  if (v14 + 1 >= v34)
    goto LABEL_28;
  v18 = *(_QWORD *)(v33 + 8 * v19);
  if (v18)
    goto LABEL_16;
  v19 = v14 + 2;
  if (v14 + 2 >= v34)
    goto LABEL_28;
  v18 = *(_QWORD *)(v33 + 8 * v19);
  if (v18)
    goto LABEL_16;
  v19 = v14 + 3;
  if (v14 + 3 >= v34)
    goto LABEL_28;
  v18 = *(_QWORD *)(v33 + 8 * v19);
  if (v18)
    goto LABEL_16;
  v19 = v14 + 4;
  if (v14 + 4 >= v34)
  {
LABEL_28:
    v29 = v31;
    v28 = v32;
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v28, 1, 1, v37);
  }
  v18 = *(_QWORD *)(v33 + 8 * v19);
  if (v18)
  {
LABEL_16:
    v14 = v19;
    goto LABEL_17;
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v34)
      goto LABEL_28;
    v18 = *(_QWORD *)(v33 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_17;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_245321BDC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[2];

  v2 = sub_245387740();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (_QWORD *)((char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(int *)(v7 + 48);
  v11 = (uint64_t)v9 + v10;
  v12 = a1[1];
  *v9 = *a1;
  v9[1] = v12;
  sub_2452B792C((uint64_t)a1 + v10, (uint64_t)v9 + v10, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v11, v2);
  sub_2452B7B5C(v11, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  v13 = sub_245387710();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v13 & 1;
}

uint64_t sub_245321CFC(_QWORD *a1)
{
  return sub_245321BDC(a1) & 1;
}

uint64_t sub_245321D18(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22[2];
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v22[0] = a6;
  v22[1] = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452DA8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a2;
  v15 = a2[1];
  v17 = a2[2];
  v18 = a2[3];
  *(_QWORD *)&v23 = v16;
  *((_QWORD *)&v23 + 1) = v15;
  v24 = v17;
  v25 = v18;
  sub_2452B792C(a4, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  v19 = type metadata accessor for PairingRelationship();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v11, 0, 1, v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MetadataStoring.zoneVersion(for:pairingRelationship:)(&v23, (uint64_t)v11, a5, v22[0], (uint64_t)v14);
  sub_245263F80((uint64_t)v11, (uint64_t *)&unk_25744FAD0);
  v20 = type metadata accessor for ZoneVersion();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v14, 0, 1, v20);
  return sub_24531BF1C((uint64_t)v14, v16, v15, v17, v18);
}

uint64_t sub_245321EA8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  char v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;
  int v55;
  char v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v72 = a7;
  v74 = a5;
  v75 = a6;
  v69 = a1;
  v73 = sub_245387740();
  v77 = *(_QWORD *)(v73 - 8);
  v10 = MEMORY[0x24BDAC7A8](v73);
  v76 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v67 = (char *)&v67 - v12;
  v13 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v13);
  v68 = (uint64_t)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v70 = (uint64_t)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v79 = (uint64_t)&v67 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v71 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v78 = (uint64_t)&v67 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char **)((char *)&v67 - v25);
  v81 = v24;
  v27 = *(int *)(v24 + 48);
  v28 = (char *)&v67 + v27 - v25;
  v29 = a2 + v27;
  v82 = a2;
  sub_2452B792C(a2, (uint64_t)&v67 - v25, type metadata accessor for Record.ID);
  v80 = v29;
  sub_2452B792C(v29, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
  v30 = v26[2];
  v31 = v26[3];
  v33 = v26[4];
  v32 = v26[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2452B7B5C((uint64_t)v26, type metadata accessor for Record.ID);
  v34 = v30 == a3 && v31 == a4;
  if (!v34 && (sub_245388274() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_2452B7B5C((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
  }
  if (v33 == v74 && v32 == v75)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v38 = v76;
    v37 = v77;
  }
  else
  {
    v36 = sub_245388274();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v38 = v76;
    v37 = v77;
    if ((v36 & 1) == 0)
      return sub_2452B7B5C((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
  }
  sub_2452B7B5C((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
  v39 = type metadata accessor for PairingRelationship();
  v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48);
  v41 = v72;
  v42 = v40(v72, 1, v39);
  v43 = v78;
  v44 = v78 + *(int *)(v81 + 48);
  sub_2452B792C(v82, v78, type metadata accessor for Record.ID);
  sub_2452B792C(v80, v44, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
  v45 = v79;
  sub_2452BC89C(v41, v79, (uint64_t *)&unk_25744FAD0);
  if (v42 != 1)
  {
    v50 = v45;
    v51 = v70;
    sub_2452BC89C(v50, v70, (uint64_t *)&unk_25744FAD0);
    result = v40(v51, 1, v39);
    v47 = v73;
    if ((_DWORD)result == 1)
    {
      __break(1u);
      return result;
    }
    v53 = type metadata accessor for Record.ID(0);
    v54 = v68;
    sub_2452B792C(v44 + *(int *)(v53 + 24), v68, type metadata accessor for Record.ID.Ownership);
    v55 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v54, 1, v47);
    v48 = v38;
    if (v55 == 1)
    {
      v56 = 0;
      v57 = v70;
    }
    else
    {
      v58 = v67;
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v67, v54, v47);
      v57 = v70;
      v56 = sub_245387710();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v58, v47);
    }
    v49 = (uint64_t)v71;
    v59 = type metadata accessor for RecordMetadata();
    if (*(_QWORD *)(v44 + *(int *)(v59 + 24)))
    {
      MEMORY[0x24BDAC7A8](v59);
      *(&v67 - 2) = (char *)v57;
      v61 = sub_24531DE44((uint64_t (*)(char *))sub_2452BC630, (_BOOL8)(&v67 - 4), v60);
      if (v55 != 1)
      {
        v46 = v69;
        goto LABEL_29;
      }
      v46 = v69;
      if (!v61)
      {
LABEL_29:
        sub_245263F80(v79, (uint64_t *)&unk_25744FAD0);
        sub_245263F80(v78, &qword_25744FD30);
        result = sub_2452B7B5C(v57, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        if ((v56 & 1) == 0)
          return result;
        goto LABEL_30;
      }
    }
    else
    {
      v34 = v55 == 1;
      v46 = v69;
      if (!v34)
        goto LABEL_29;
    }
    sub_245263F80(v79, (uint64_t *)&unk_25744FAD0);
    sub_245263F80(v78, &qword_25744FD30);
    sub_2452B7B5C(v57, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    goto LABEL_30;
  }
  sub_245263F80(v45, (uint64_t *)&unk_25744FAD0);
  sub_245263F80(v43, &qword_25744FD30);
  v46 = v69;
  v47 = v73;
  v48 = v38;
  v49 = (uint64_t)v71;
LABEL_30:
  v62 = v49 + *(int *)(v81 + 48);
  sub_2452B792C(v82, v49, type metadata accessor for Record.ID);
  sub_2452B792C(v80, v62, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
  v63 = type metadata accessor for RecordMetadata();
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v48, v62 + *(int *)(v63 + 20), v47);
  sub_2452B7B5C(v62, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
  v64 = *v46;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v64 = sub_245323F2C(0, *(_QWORD *)(v64 + 16) + 1, 1, v64, &qword_257450210, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
  v66 = *(_QWORD *)(v64 + 16);
  v65 = *(_QWORD *)(v64 + 24);
  if (v66 >= v65 >> 1)
    v64 = sub_245323F2C(v65 > 1, v66 + 1, 1, v64, &qword_257450210, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
  *(_QWORD *)(v64 + 16) = v66 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v64+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v66, v48, v47);
  *v46 = v64;
  return sub_2452B7B5C(v49, type metadata accessor for Record.ID);
}

void sub_24532251C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7[4];

  v7[3] = *(_QWORD **)MEMORY[0x24BDAC8D0];
  v2 = sub_245387740();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_245387A1C();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_245387A40();
  MEMORY[0x24BDAC7A8](v4);
  sub_245387464();
  swift_allocObject();
  sub_245387458();
  v7[0] = a1;
  swift_bridgeObjectRetain();
  sub_24532DE18(v7);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFB0);
  sub_245332F24();
  sub_24538744C();
  v6 = v5;
  swift_release();
  _s16ReplicatorEngine13UniformHasherVACycfC_0();
  __asm { BR              X10 }
}

uint64_t sub_245322938(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = result;
  v3 = 0;
  v20 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v16 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v8)
      goto LABEL_23;
    v17 = *(_QWORD *)(v4 + 8 * v16);
    ++v3;
    if (!v17)
    {
      v3 = v16 + 1;
      if (v16 + 1 >= v8)
        goto LABEL_23;
      v17 = *(_QWORD *)(v4 + 8 * v3);
      if (!v17)
      {
        v3 = v16 + 2;
        if (v16 + 2 >= v8)
          goto LABEL_23;
        v17 = *(_QWORD *)(v4 + 8 * v3);
        if (!v17)
        {
          v3 = v16 + 3;
          if (v16 + 3 >= v8)
            goto LABEL_23;
          v17 = *(_QWORD *)(v4 + 8 * v3);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v17 - 1) & v17;
    v10 = __clz(__rbit64(v17)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v10);
    v12 = *v11;
    v13 = v11[1];
    v14 = v11[2];
    v15 = v11[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_245324D54(&v19, v12, v13, v14, v15);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v18 = v16 + 4;
  if (v18 >= v8)
  {
LABEL_23:
    swift_release();
    return v20;
  }
  v17 = *(_QWORD *)(v4 + 8 * v18);
  if (v17)
  {
    v3 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v17 = *(_QWORD *)(v4 + 8 * v3);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_245322ADC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;

  v56 = a4;
  v62 = a3;
  v60 = sub_245387740();
  v58 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v54 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452E60);
  MEMORY[0x24BDAC7A8](v57);
  v59 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v55 = (uint64_t)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v61 = (char *)&v53 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v53 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F848);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for RecordMetadata();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a6 + 8) + 24))(a5);
  if (*(_QWORD *)(v25 + 16) && (v26 = sub_2452C2000(a1), (v27 & 1) != 0))
  {
    sub_2452B792C(*(_QWORD *)(v25 + 56) + *(_QWORD *)(v22 + 72) * v26, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v28 = 0;
  }
  else
  {
    v28 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, v28, 1, v21);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_245263F80((uint64_t)v20, &qword_25744F848);
  }
  else
  {
    sub_2452B7AB8((uint64_t)v20, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    if (*(_QWORD *)(*(_QWORD *)(v62 + *(int *)(type metadata accessor for PairingRelationship() + 20) + 96) + 16))
    {
      v29 = a1[4];
      v30 = a1[5];
      v32 = a1[2];
      v31 = a1[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2452C1EB4(v32, v31, v29, v30);
      v34 = v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v34 & 1) != 0)
      {
        v35 = &v24[*(int *)(v21 + 20)];
        v36 = v58;
        v37 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
        v38 = v60;
        v37(v17, v35, v60);
        v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
        v40 = 1;
        v39(v17, 0, 1, v38);
        v41 = *v56;
        if (*(_QWORD *)(*v56 + 16) && (v42 = sub_2452C2000(a1), (v43 & 1) != 0))
        {
          v44 = (uint64_t)v61;
          v37(v61, (char *)(*(_QWORD *)(v41 + 56) + *(_QWORD *)(v36 + 72) * v42), v38);
          v40 = 0;
        }
        else
        {
          v44 = (uint64_t)v61;
        }
        v39((char *)v44, v40, 1, v38);
        v47 = v59;
        v48 = v59 + *(int *)(v57 + 48);
        sub_2452BC89C((uint64_t)v17, v59, &qword_25440C700);
        sub_2452BC89C(v44, v48, &qword_25440C700);
        v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
        if (v49(v47, 1, v38) == 1)
        {
          sub_245263F80(v44, &qword_25440C700);
          sub_245263F80((uint64_t)v17, &qword_25440C700);
          sub_2452B7B5C((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
          if (v49(v48, 1, v38) == 1)
          {
            sub_245263F80(v47, &qword_25440C700);
            goto LABEL_13;
          }
        }
        else
        {
          v50 = v55;
          sub_2452BC89C(v47, v55, &qword_25440C700);
          if (v49(v48, 1, v38) != 1)
          {
            v51 = v54;
            (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v54, v48, v38);
            sub_24525C6C4(&qword_257452430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
            LODWORD(v62) = sub_245387AE8();
            v52 = *(void (**)(char *, uint64_t))(v36 + 8);
            v52(v51, v38);
            sub_245263F80((uint64_t)v61, &qword_25440C700);
            sub_245263F80((uint64_t)v17, &qword_25440C700);
            sub_2452B7B5C((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
            v52((char *)v50, v38);
            sub_245263F80(v47, &qword_25440C700);
            v45 = v62 ^ 1;
            return v45 & 1;
          }
          sub_245263F80(v44, &qword_25440C700);
          sub_245263F80((uint64_t)v17, &qword_25440C700);
          sub_2452B7B5C((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
          (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v50, v38);
        }
        sub_245263F80(v47, &qword_257452E60);
        v45 = 1;
        return v45 & 1;
      }
    }
    sub_2452B7B5C((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
  }
LABEL_13:
  v45 = 0;
  return v45 & 1;
}

uint64_t sub_24532304C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (uint64_t *)((char *)&v24 - v14);
  v16 = a2 + *(int *)(v13 + 48);
  result = RecordMetadata.matches(predicate:)(a3);
  if ((result & 1) != 0)
  {
    v18 = *(int *)(v9 + 48);
    v26 = a1;
    v19 = (uint64_t)v15 + v18;
    v25 = (uint64_t)v15 + v18;
    sub_2452B792C(a2, (uint64_t)v15, type metadata accessor for Record.ID);
    sub_2452B792C(v16, v19, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v20 = (uint64_t)&v12[*(int *)(v9 + 48)];
    sub_2452B792C(a2, (uint64_t)v12, type metadata accessor for Record.ID);
    sub_2452B792C(v16, v20, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v21 = v20 + *(int *)(type metadata accessor for RecordMetadata() + 20);
    v22 = sub_245387740();
    v23 = *(_QWORD *)(v22 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v8, v21, v22);
    sub_2452B7B5C(v20, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v8, 0, 1, v22);
    sub_24531BDA8((uint64_t)v8, v15);
    sub_2452B7B5C((uint64_t)v12, type metadata accessor for Record.ID);
    return sub_2452B7B5C(v25, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
  }
  return result;
}

uint64_t sub_245323238(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a2;
  v25 = sub_245387740();
  v3 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v23 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Record.ID(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(int *)(v12 + 48);
  v16 = (uint64_t)&v14[v15];
  v17 = a1 + v15;
  sub_2452B792C(a1, (uint64_t)v14, type metadata accessor for Record.ID);
  sub_2452B792C(v17, v16, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
  sub_2452B792C(v16, (uint64_t)v10, type metadata accessor for Record.ID);
  sub_2452B7B5C(v16, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
  sub_2452B792C((uint64_t)&v10[*(int *)(v8 + 24)], (uint64_t)v7, type metadata accessor for Record.ID.Ownership);
  v18 = v25;
  sub_2452B7B5C((uint64_t)v10, type metadata accessor for Record.ID);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v7, 1, v18) == 1)
  {
    v19 = 0;
  }
  else
  {
    v20 = v23;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v23, v7, v18);
    v19 = sub_245387710();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v20, v18);
  }
  sub_2452B7B5C((uint64_t)v14, type metadata accessor for Record.ID);
  return v19 & 1;
}

uint64_t sub_245323458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2452B792C(a1, (uint64_t)v11, type metadata accessor for Record.ID);
  sub_2452B792C(a2, (uint64_t)v11 + *(int *)(v9 + 48), (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
  LOBYTE(a5) = sub_245323544(v11, a4, a5);
  sub_245263F80((uint64_t)v11, &qword_25744FD30);
  return a5 & 1;
}

uint64_t sub_245323544(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_245387740();
  v9 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v35 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F848);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for RecordMetadata();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a3;
  v38 = v3;
  v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a3 + 8) + 24))(a2);
  if (*(_QWORD *)(v21 + 16) && (v22 = sub_2452C2000(a1), (v23 & 1) != 0))
  {
    sub_2452B792C(*(_QWORD *)(v21 + 56) + *(_QWORD *)(v18 + 72) * v22, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v24 = 0;
  }
  else
  {
    v24 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, v24, 1, v17);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_245263F80((uint64_t)v16, &qword_25744F848);
    return 0;
  }
  else
  {
    sub_2452B7AB8((uint64_t)v16, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v26 = type metadata accessor for Record.ID(0);
    sub_2452B792C((uint64_t)a1 + *(int *)(v26 + 24), (uint64_t)v13, type metadata accessor for Record.ID.Ownership);
    v27 = v39;
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v39);
    if ((_DWORD)v28 == 1)
    {
      v25 = *(_QWORD *)&v20[*(int *)(v17 + 24)];
      if (v25)
      {
        MEMORY[0x24BDAC7A8](v28);
        v29 = v37;
        *(&v35 - 4) = (char *)a2;
        *(&v35 - 3) = (char *)v29;
        *(&v35 - 2) = v38;
        swift_bridgeObjectRetain();
        v30 = *(_QWORD *)(sub_24531D3C8((uint64_t (*)(char *))sub_24533300C, (uint64_t)(&v35 - 6), v25, &qword_25440C700, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], (void (*)(BOOL, uint64_t, uint64_t))sub_24532C5C8)+ 16);
        swift_bridgeObjectRelease();
        v25 = v30 == 0;
      }
      sub_2452B7B5C((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    }
    else
    {
      v31 = (uint64_t)v35;
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v35, v13, v27);
      v32 = v36;
      MetadataStoring.pairingRelationship(relationshipID:)(v31, a2, v37, v36);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v31, v27);
      sub_2452B7B5C((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      v33 = type metadata accessor for PairingRelationship();
      v25 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33) == 1;
      sub_245263F80(v32, (uint64_t *)&unk_25744FAD0);
    }
  }
  return v25;
}

BOOL sub_2453238CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v13;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MetadataStoring.pairingRelationship(relationshipID:)(a1, a3, a4, (uint64_t)v9);
  v10 = type metadata accessor for PairingRelationship();
  v11 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10) != 1;
  sub_245263F80((uint64_t)v9, (uint64_t *)&unk_25744FAD0);
  return v11;
}

uint64_t sub_2453239A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _OWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[5];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574502B8);
  v21[3] = v9;
  v21[4] = sub_245332FA0();
  v10 = swift_allocObject();
  v21[0] = v10;
  *(_OWORD *)(v10 + 16) = xmmword_24538DE20;
  *(_QWORD *)(v10 + 32) = a1;
  *(_QWORD *)(v10 + 40) = a2;
  v11 = __swift_project_boxed_opaque_existential_1(v21, v9);
  v12 = v11[1];
  v18[0] = *v11;
  v18[1] = v12;
  sub_245388424();
  v13 = v19;
  v14 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  sub_24525C9C8(v13, v14);
  v15 = sub_245387740();
  v16 = *(_QWORD *)(v15 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a3, v8, v15);
  __break(1u);
  return result;
}

uint64_t sub_245323B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[6];

  v3 = v2;
  v9[5] = *MEMORY[0x24BDAC8D0];
  v9[3] = MEMORY[0x24BEE0D00];
  v9[4] = MEMORY[0x24BEE0D08];
  v9[0] = a1;
  v9[1] = a2;
  type metadata accessor for PropertyListTypeEncoder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = 0;
  *(_BYTE *)(inited + 24) = 1;
  swift_bridgeObjectRetain();
  v5 = (void *)sub_24537B31C(v9);
  if (!v3)
  {
    sub_24537E224(v5);
    v7 = v6;
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

_QWORD *sub_245323DF8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25744F670);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_245330FCC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_245323F04(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_245323F2C(a1, a2, a3, a4, (uint64_t *)&unk_257450218, (uint64_t (*)(_QWORD))MEMORY[0x24BE609E0]);
}

uint64_t sub_245323F18(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_245323F2C(a1, a2, a3, a4, &qword_257450230, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
}

uint64_t sub_245323F2C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_245387F74();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_245332B64(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_245324138(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257450268);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_245331714(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_24532425C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2453245F8(a1, a2, a3, a4, &qword_257452E98, (uint64_t *)&unk_257452EA0);
}

_QWORD *sub_245324270(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450258);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_245332878(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24532437C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_245323F2C(a1, a2, a3, a4, &qword_257452E78, type metadata accessor for Replicator.SyncItem);
}

_QWORD *sub_245324390(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450288);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_245332968(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24532449C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_245323F2C(a1, a2, a3, a4, &qword_257450210, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_2453244B0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_245323F2C(a1, a2, a3, a4, &qword_257452E38, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

_QWORD *sub_2453244C4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452E10);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 160);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[20 * v8 + 4])
          memmove(v12, a4 + 4, 160 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_245332A70(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2453245E4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2453245F8(a1, a2, a3, a4, (uint64_t *)&unk_257450238, (uint64_t *)&unk_25744FAE0);
}

_QWORD *sub_2453245F8(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 17;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 4);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v16 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4])
          memmove(v16, a4 + 4, 16 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_245332E20(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_245324710(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2453330AC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_245324830(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_24538843C();
  swift_bridgeObjectRetain();
  sub_245387B6C();
  v8 = sub_245388478();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_245388274() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_245388274() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_245326090(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_2453249DC(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_245387740();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_24525C6C4(&qword_25744F6D0, v11, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_245387AAC();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_24525C6C4(&qword_257452430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v21 = sub_245387AE8();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_245326228((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_245324C38(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_24538843C();
  sub_24538846C();
  v6 = sub_245388478();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_24532642C(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  result = 0;
  LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_245324D54(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  BOOL v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v28;
  uint64_t v30;

  v10 = *v5;
  sub_24538843C();
  swift_bridgeObjectRetain();
  sub_245387B6C();
  sub_245387B6C();
  v11 = sub_245388478();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  v14 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v15 = ~v12;
    v16 = *(_QWORD *)(v10 + 48);
    while (1)
    {
      v17 = (_QWORD *)(v16 + 32 * v13);
      v18 = v17[2];
      v19 = v17[3];
      v20 = *v17 == a2 && v17[1] == a3;
      if (v20 || (sub_245388274() & 1) != 0)
      {
        v21 = v18 == a4 && v19 == a5;
        if (v21 || (sub_245388274() & 1) != 0)
          break;
      }
      v13 = (v13 + 1) & v15;
      if (((*(_QWORD *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_15;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = (uint64_t *)(*(_QWORD *)(*v28 + 48) + 32 * v13);
    v23 = v22[1];
    v24 = v22[2];
    v25 = v22[3];
    *a1 = *v22;
    a1[1] = v23;
    a1[2] = v24;
    a1[3] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v28;
    *v28 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_245326578(a2, a3, a4, a5, v13, isUniquelyReferenced_nonNull_native);
    *v28 = v30;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    result = 1;
    a1[2] = a4;
    a1[3] = a5;
  }
  return result;
}

uint64_t sub_245324F58()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452E20);
  v3 = sub_245387E90();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_24538843C();
      sub_245387B6C();
      result = sub_245388478();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_245325234()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_245387740();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452E48);
  v6 = sub_245387E90();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_33;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_33;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_33;
            v19 = v35[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v33;
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v34)
                    goto LABEL_33;
                  v19 = v35[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v5 + 48);
      v23 = *(_QWORD *)(v36 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v22 + v23 * v17, v2);
      sub_24525C6C4(&qword_25744F6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      result = sub_245387AAC();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v23, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_2453255A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452EC0);
  result = sub_245387E90();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_24538843C();
      sub_24538846C();
      result = sub_245388478();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_245325848()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  uint64_t (*v18)(uint64_t);
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  char *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;

  v1 = v0;
  v2 = sub_245387740();
  v50 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v43 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v4);
  v49 = (uint64_t)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for Record.ID(0);
  v48 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452EB0);
  v9 = sub_245387E90();
  v10 = v9;
  if (*(_QWORD *)(v8 + 16))
  {
    v42 = v0;
    v11 = 1 << *(_BYTE *)(v8 + 32);
    v12 = *(_QWORD *)(v8 + 56);
    v45 = (_QWORD *)(v8 + 56);
    if (v11 < 64)
      v13 = ~(-1 << v11);
    else
      v13 = -1;
    v14 = v13 & v12;
    v44 = (unint64_t)(v11 + 63) >> 6;
    v15 = v9 + 56;
    result = swift_retain();
    v17 = 0;
    v18 = type metadata accessor for Record.ID;
    v46 = v8;
    v47 = v2;
    while (1)
    {
      if (v14)
      {
        v20 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v51 = v17;
        v21 = v20 | (v17 << 6);
      }
      else
      {
        v22 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v22 >= v44)
          goto LABEL_36;
        v23 = v45[v22];
        v24 = v17 + 1;
        if (!v23)
        {
          v24 = v17 + 2;
          if (v17 + 2 >= v44)
            goto LABEL_36;
          v23 = v45[v24];
          if (!v23)
          {
            v24 = v17 + 3;
            if (v17 + 3 >= v44)
              goto LABEL_36;
            v23 = v45[v24];
            if (!v23)
            {
              v25 = v17 + 4;
              if (v17 + 4 >= v44)
              {
LABEL_36:
                swift_release();
                v1 = v42;
                v40 = 1 << *(_BYTE *)(v8 + 32);
                if (v40 > 63)
                  bzero(v45, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v45 = -1 << v40;
                *(_QWORD *)(v8 + 16) = 0;
                break;
              }
              v23 = v45[v25];
              if (!v23)
              {
                while (1)
                {
                  v24 = v25 + 1;
                  if (__OFADD__(v25, 1))
                    goto LABEL_42;
                  if (v24 >= v44)
                    goto LABEL_36;
                  v23 = v45[v24];
                  ++v25;
                  if (v23)
                    goto LABEL_23;
                }
              }
              v24 = v17 + 4;
            }
          }
        }
LABEL_23:
        v14 = (v23 - 1) & v23;
        v51 = v24;
        v21 = __clz(__rbit64(v23)) + (v24 << 6);
      }
      v26 = *(_QWORD *)(v8 + 48);
      v27 = *(_QWORD *)(v48 + 72);
      v28 = v18;
      sub_2452B7AB8(v26 + v27 * v21, (uint64_t)v7, v18);
      sub_24538843C();
      swift_bridgeObjectRetain();
      sub_245387B6C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_245387B6C();
      sub_245387B6C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = v49;
      sub_2452B792C((uint64_t)&v7[*(int *)(v52 + 24)], v49, type metadata accessor for Record.ID.Ownership);
      v30 = v50;
      v31 = v47;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v29, 1, v47) == 1)
      {
        sub_245388448();
      }
      else
      {
        v32 = v43;
        (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v43, v29, v31);
        sub_245388448();
        sub_24525C6C4(&qword_25744F6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        sub_245387AB8();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v31);
      }
      v18 = v28;
      swift_bridgeObjectRetain();
      sub_245387B6C();
      swift_bridgeObjectRelease();
      result = sub_245388478();
      v33 = -1 << *(_BYTE *)(v10 + 32);
      v34 = result & ~v33;
      v35 = v34 >> 6;
      if (((-1 << v34) & ~*(_QWORD *)(v15 + 8 * (v34 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v36 = 0;
        v37 = (unint64_t)(63 - v33) >> 6;
        do
        {
          if (++v35 == v37 && (v36 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v38 = v35 == v37;
          if (v35 == v37)
            v35 = 0;
          v36 |= v38;
          v39 = *(_QWORD *)(v15 + 8 * v35);
        }
        while (v39 == -1);
        v19 = __clz(__rbit64(~v39)) + (v35 << 6);
      }
      *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      result = sub_2452B7AB8((uint64_t)v7, *(_QWORD *)(v10 + 48) + v19 * v27, v28);
      ++*(_QWORD *)(v10 + 16);
      v8 = v46;
      v17 = v51;
    }
  }
  result = swift_release();
  *v1 = v10;
  return result;
}

uint64_t sub_245325D78()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450398);
  v3 = sub_245387E90();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v33 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v32 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v32)
          goto LABEL_33;
        v16 = v33[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v32)
            goto LABEL_33;
          v16 = v33[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v32)
              goto LABEL_33;
            v16 = v33[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v31 = 1 << *(_BYTE *)(v2 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v10 >= v32)
                    goto LABEL_33;
                  v16 = v33[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = v2;
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v14);
      v20 = *v19;
      v21 = v19[1];
      v22 = v19[2];
      v23 = v19[3];
      sub_24538843C();
      sub_245387B6C();
      sub_245387B6C();
      result = sub_245388478();
      v24 = -1 << *(_BYTE *)(v4 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v8 + 8 * v26);
        }
        while (v30 == -1);
        v11 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v11);
      *v12 = v20;
      v12[1] = v21;
      v12[2] = v22;
      v12[3] = v23;
      ++*(_QWORD *)(v4 + 16);
      v2 = v18;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_245326090(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_245324F58();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_245347EEC();
      goto LABEL_22;
    }
    sub_24532673C();
  }
  v11 = *v4;
  sub_24538843C();
  sub_245387B6C();
  result = sub_245388478();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_245388274(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_2453883D0();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_245388274();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_245326228(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_245387740();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_245325234();
  }
  else
  {
    if (v11 > v10)
    {
      sub_24534809C();
      goto LABEL_12;
    }
    sub_2453269E8();
  }
  v12 = *v3;
  sub_24525C6C4(&qword_25744F6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v13 = sub_245387AAC();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_24525C6C4(&qword_257452430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v18 = sub_245387AE8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_2453883D0();
  __break(1u);
  return result;
}

uint64_t sub_24532642C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_2453255A0();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_2453482C0();
      goto LABEL_14;
    }
    sub_245326D10();
  }
  v8 = *v3;
  sub_24538843C();
  sub_24538846C();
  result = sub_245388478();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      result = sub_2453883D0();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v10 + a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_245326578(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t *v6;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v11 = result;
  v12 = *(_QWORD *)(*v6 + 16);
  v13 = *(_QWORD *)(*v6 + 24);
  if (v13 > v12 && (a6 & 1) != 0)
    goto LABEL_22;
  if ((a6 & 1) != 0)
  {
    sub_245325D78();
  }
  else
  {
    if (v13 > v12)
    {
      result = (uint64_t)sub_245348670();
      goto LABEL_22;
    }
    sub_245327484();
  }
  v14 = *v6;
  sub_24538843C();
  sub_245387B6C();
  sub_245387B6C();
  result = sub_245388478();
  v15 = -1 << *(_BYTE *)(v14 + 32);
  a5 = result & ~v15;
  v16 = v14 + 56;
  if (((*(_QWORD *)(v14 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) != 0)
  {
    v17 = ~v15;
    v18 = *(_QWORD *)(v14 + 48);
    while (1)
    {
      v19 = (_QWORD *)(v18 + 32 * a5);
      v20 = v19[2];
      v21 = v19[3];
      v22 = *v19 == v11 && v19[1] == a2;
      if (v22 || (result = sub_245388274(), (result & 1) != 0))
      {
        if (v20 == a3 && v21 == a4)
          break;
        result = sub_245388274();
        if ((result & 1) != 0)
          break;
      }
      a5 = (a5 + 1) & v17;
      if (((*(_QWORD *)(v16 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) == 0)
        goto LABEL_22;
    }
    result = sub_2453883D0();
    __break(1u);
  }
LABEL_22:
  v24 = *v29;
  *(_QWORD *)(*v29 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  v25 = (uint64_t *)(*(_QWORD *)(v24 + 48) + 32 * a5);
  *v25 = v11;
  v25[1] = a2;
  v25[2] = a3;
  v25[3] = a4;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v28;
  return result;
}

uint64_t sub_24532673C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452E20);
  v3 = sub_245387E90();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_24538843C();
    swift_bridgeObjectRetain();
    sub_245387B6C();
    result = sub_245388478();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2453269E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_245387740();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452E48);
  v7 = sub_245387E90();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_24525C6C4(&qword_25744F6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_245387AAC();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_245326D10()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452EC0);
  result = sub_245387E90();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_24538843C();
    sub_24538846C();
    result = sub_245388478();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_245326F88()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;

  v1 = v0;
  v2 = sub_245387740();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v40 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v5);
  v46 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for Record.ID(0);
  v45 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452EB0);
  v10 = sub_245387E90();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = swift_release();
LABEL_38:
    *v1 = v11;
    return result;
  }
  v39 = v0;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 56);
  v41 = v9 + 56;
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v42 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 56;
  result = swift_retain();
  v18 = 0;
  v43 = v3;
  v44 = v2;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v47 = v18;
      v21 = v20 | (v18 << 6);
      goto LABEL_24;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v22 >= v42)
      goto LABEL_36;
    v23 = *(_QWORD *)(v41 + 8 * v22);
    v24 = v18 + 1;
    if (!v23)
    {
      v24 = v18 + 2;
      if (v18 + 2 >= v42)
        goto LABEL_36;
      v23 = *(_QWORD *)(v41 + 8 * v24);
      if (!v23)
      {
        v24 = v18 + 3;
        if (v18 + 3 >= v42)
          goto LABEL_36;
        v23 = *(_QWORD *)(v41 + 8 * v24);
        if (!v23)
          break;
      }
    }
LABEL_23:
    v15 = (v23 - 1) & v23;
    v47 = v24;
    v21 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_24:
    v26 = v9;
    v27 = *(_QWORD *)(v45 + 72);
    sub_2452B792C(*(_QWORD *)(v9 + 48) + v27 * v21, (uint64_t)v8, type metadata accessor for Record.ID);
    sub_24538843C();
    swift_bridgeObjectRetain();
    sub_245387B6C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_245387B6C();
    sub_245387B6C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = v46;
    sub_2452B792C((uint64_t)&v8[*(int *)(v48 + 24)], v46, type metadata accessor for Record.ID.Ownership);
    v30 = v43;
    v29 = v44;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v28, 1, v44) == 1)
    {
      sub_245388448();
    }
    else
    {
      v31 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v40, v28, v29);
      sub_245388448();
      sub_24525C6C4(&qword_25744F6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_245387AB8();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v29);
    }
    v9 = v26;
    swift_bridgeObjectRetain();
    sub_245387B6C();
    swift_bridgeObjectRelease();
    result = sub_245388478();
    v32 = -1 << *(_BYTE *)(v11 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v16 + 8 * v34);
      }
      while (v38 == -1);
      v19 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = sub_2452B7AB8((uint64_t)v8, *(_QWORD *)(v11 + 48) + v19 * v27, type metadata accessor for Record.ID);
    ++*(_QWORD *)(v11 + 16);
    v18 = v47;
  }
  v25 = v18 + 4;
  if (v18 + 4 >= v42)
  {
LABEL_36:
    result = swift_release_n();
    v1 = v39;
    goto LABEL_38;
  }
  v23 = *(_QWORD *)(v41 + 8 * v25);
  if (v23)
  {
    v24 = v18 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v42)
      goto LABEL_36;
    v23 = *(_QWORD *)(v41 + 8 * v24);
    ++v25;
    if (v23)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_245327484()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450398);
  v3 = sub_245387E90();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v30 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v31 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v31)
      goto LABEL_33;
    v16 = *(_QWORD *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v31)
        goto LABEL_33;
      v16 = *(_QWORD *)(v30 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v31)
          goto LABEL_33;
        v16 = *(_QWORD *)(v30 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v14);
    v19 = *v18;
    v20 = v18[1];
    v21 = v18[2];
    v22 = v18[3];
    sub_24538843C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_245387B6C();
    sub_245387B6C();
    result = sub_245388478();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v11);
    *v12 = v19;
    v12[1] = v20;
    v12[2] = v21;
    v12[3] = v22;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v30 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v31)
      goto LABEL_33;
    v16 = *(_QWORD *)(v30 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24532776C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_2452C1D98(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2452C8418();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_245371DC8(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_245327838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v10;
  char v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v5 = v4;
  swift_bridgeObjectRetain();
  v10 = sub_2452C1EB4(a1, a2, a3, a4);
  LOBYTE(a4) = v11;
  swift_bridgeObjectRelease();
  if ((a4 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v5;
  v16 = *v5;
  *v5 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2452C8424();
    v13 = v16;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v10);
  sub_245371F9C(v10, v13);
  *v5 = v13;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_245327928@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_2452C2000(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2452C85F0();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = type metadata accessor for Record.ID(0);
    sub_2452B7B5C(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, type metadata accessor for Record.ID);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = sub_245387740();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a2, v12 + *(_QWORD *)(v14 + 72) * v6, v13);
    sub_24537219C(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = sub_245387740();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_245327A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v6 = v5;
  swift_bridgeObjectRetain();
  v12 = sub_2452C1EB4(a1, a2, a3, a4);
  LOBYTE(a4) = v13;
  swift_bridgeObjectRelease();
  if ((a4 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v6;
    v21 = *v6;
    *v6 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2452C8B00();
      v15 = v21;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v15 + 56);
    v17 = type metadata accessor for ZoneVersion();
    v18 = *(_QWORD *)(v17 - 8);
    sub_2452B7AB8(v16 + *(_QWORD *)(v18 + 72) * v12, a5, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    sub_2453725F8(v12, v15);
    *v6 = v15;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a5, 0, 1, v17);
  }
  else
  {
    v20 = type metadata accessor for ZoneVersion();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a5, 1, 1, v20);
  }
}

uint64_t sub_245327BB0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_2452C2058(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2452C8F48();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_245387740();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_24537282C(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_245327C88@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, void (*a3)(unint64_t, uint64_t)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v9;
  unint64_t v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v9 = v5;
  swift_bridgeObjectRetain();
  v12 = sub_2452C2058(a1);
  LOBYTE(a1) = v13;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v9;
    v23 = *v9;
    *v9 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a4();
      v15 = v23;
    }
    v16 = *(_QWORD *)(v15 + 48);
    v17 = sub_245387740();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v12, v17);
    v18 = *(_QWORD *)(v15 + 56);
    v19 = a2(0);
    v20 = *(_QWORD *)(v19 - 8);
    sub_2452B7AB8(v18 + *(_QWORD *)(v20 + 72) * v12, a5, a2);
    a3(v12, v15);
    *v9 = v15;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(a5, 0, 1, v19);
  }
  else
  {
    v22 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a5, 1, 1, v22);
  }
}

uint64_t sub_245327DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_245327DF0(a1, a2, type metadata accessor for NetworkMessenger.ExpiringConnection, (void (*)(unint64_t, uint64_t))sub_245372F54, (void (*)(void))sub_2452C9A10, a3);
}

uint64_t sub_245327DF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, void (*a4)(unint64_t, uint64_t)@<X3>, void (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t *v6;
  uint64_t *v10;
  unint64_t v14;
  char v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v10 = v6;
  swift_bridgeObjectRetain();
  v14 = sub_2452C1D98(a1, a2);
  LOBYTE(a2) = v15;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v10;
    v23 = *v10;
    *v10 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a5();
      v17 = v23;
    }
    swift_bridgeObjectRelease();
    v18 = *(_QWORD *)(v17 + 56);
    v19 = a3(0);
    v20 = *(_QWORD *)(v19 - 8);
    sub_2452B7AB8(v18 + *(_QWORD *)(v20 + 72) * v14, a6, a3);
    a4(v14, v17);
    *v10 = v17;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(a6, 0, 1, v19);
  }
  else
  {
    v22 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a6, 1, 1, v22);
  }
}

uint64_t sub_245327F30(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_2452C2058(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2452C9BE8();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_245387740();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v4);
  sub_245373168(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_24532801C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_2452C225C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2452CA3A4();
      v9 = v11;
    }
    swift_bridgeObjectRelease();
    sub_2452B7C5C((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v6), a2);
    sub_2453735D4(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_245328110(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;

  v5 = v4;
  v10 = *v4;
  v12 = sub_2452C1D98(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_2452C7F34();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_245333070(a1, v18[7] + 168 * v12);
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    v23 = v18[7] + 168 * v12;
    v24 = *(_OWORD *)a1;
    v25 = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v23 + 16) = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v23 + 32) = v25;
    *(_OWORD *)v23 = v24;
    v26 = *(_OWORD *)(a1 + 48);
    v27 = *(_OWORD *)(a1 + 64);
    v28 = *(_OWORD *)(a1 + 96);
    *(_OWORD *)(v23 + 80) = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v23 + 96) = v28;
    *(_OWORD *)(v23 + 48) = v26;
    *(_OWORD *)(v23 + 64) = v27;
    v29 = *(_OWORD *)(a1 + 112);
    v30 = *(_OWORD *)(a1 + 128);
    v31 = *(_OWORD *)(a1 + 144);
    *(_QWORD *)(v23 + 160) = *(_QWORD *)(a1 + 160);
    *(_OWORD *)(v23 + 128) = v30;
    *(_OWORD *)(v23 + 144) = v31;
    *(_OWORD *)(v23 + 112) = v29;
    v32 = v18[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (!v33)
    {
      v18[2] = v34;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_2452C3764(v15, a4 & 1);
  v20 = sub_2452C1D98(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_245333070(a1, v18[7] + 168 * v12);
    goto LABEL_11;
  }
LABEL_15:
  result = sub_2453883DC();
  __break(1u);
  return result;
}

uint64_t sub_2453282A4(uint64_t a1, _QWORD *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for Record.ID(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_2452C2000(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    v19 = *v4;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7];
      v21 = type metadata accessor for RecordMetadata();
      return sub_2452BC64C(a1, v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v13, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_2452C816C();
    goto LABEL_7;
  }
  sub_2452C3C4C(v16, a3 & 1);
  v23 = sub_2452C2000(a2);
  if ((v17 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_2453883DC();
    __break(1u);
    return result;
  }
  v13 = v23;
  v19 = *v4;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_2452B792C((uint64_t)a2, (uint64_t)v10, type metadata accessor for Record.ID);
  return sub_2453298BC(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_245328414(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_245329264(a1, a2, a3, a4, (void (*)(void))sub_2452C8418, (void (*)(void))sub_2452C4234);
}

uint64_t sub_245328428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;

  v7 = v6;
  v14 = *v6;
  v16 = sub_2452C1EB4(a2, a3, a4, a5);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0)
    goto LABEL_7;
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_2452C8424();
LABEL_7:
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = v22[7];
      result = swift_release();
      *(_QWORD *)(v23 + 8 * v16) = a1;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v27 = (uint64_t *)(v22[6] + 32 * v16);
    *v27 = a2;
    v27[1] = a3;
    v27[2] = a4;
    v27[3] = a5;
    *(_QWORD *)(v22[7] + 8 * v16) = a1;
    v28 = v22[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (!v29)
    {
      v22[2] = v30;
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_2452C4240(v19, a6 & 1);
  v25 = sub_2452C1EB4(a2, a3, a4, a5);
  if ((v20 & 1) == (v26 & 1))
  {
    v16 = v25;
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_2453883DC();
  __break(1u);
  return result;
}

uint64_t sub_2453285B4(uint64_t a1, _QWORD *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for Record.ID(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_2452C2000(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = v11[3];
    if (v18 >= v16 && (a3 & 1) != 0)
    {
LABEL_7:
      v19 = *v4;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v20 = v19[7];
        v21 = sub_245387740();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v13, a1, v21);
      }
      goto LABEL_11;
    }
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_2452C85F0();
      goto LABEL_7;
    }
    sub_2452C4564(v16, a3 & 1);
    v23 = sub_2452C2000(a2);
    if ((v17 & 1) == (v24 & 1))
    {
      v13 = v23;
      v19 = *v4;
      if ((v17 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_2452B792C((uint64_t)a2, (uint64_t)v10, type metadata accessor for Record.ID);
      return sub_245329974(v13, (uint64_t)v10, a1, v19);
    }
  }
  result = sub_2453883DC();
  __break(1u);
  return result;
}

uint64_t sub_24532873C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  char v27;

  v7 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_2452C1EB4(a2, a3, a4, a5);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= v19 && (a6 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = v22[7];
        v24 = type metadata accessor for ZoneVersion();
        return sub_2452BC64C(a1, v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v16, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      }
      goto LABEL_11;
    }
    if (v21 >= v19 && (a6 & 1) == 0)
    {
      sub_2452C8B00();
      goto LABEL_7;
    }
    sub_2452C4EB8(v19, a6 & 1);
    v26 = sub_2452C1EB4(a2, a3, a4, a5);
    if ((v20 & 1) == (v27 & 1))
    {
      v16 = v26;
      v22 = *v7;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_245329A2C(v16, a2, a3, a4, a5, a1, v22);
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_2453883DC();
  __break(1u);
  return result;
}

uint64_t sub_2453288B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_2452C1D98(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_2452C8D90();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_bridgeObjectRelease();
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_2452C526C(v17, a5 & 1);
  v23 = sub_2452C1D98(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_2453883DC();
  __break(1u);
  return result;
}

uint64_t sub_245328A24(uint64_t a1, uint64_t a2, char a3)
{
  return sub_245328A40(a1, a2, a3, (void (*)(void))sub_2452C9178, (void (*)(void))sub_2452C5920, (uint64_t (*)(_QWORD))type metadata accessor for NetworkBrowser.Monitor);
}

uint64_t sub_245328A40(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), void (*a5)(void), uint64_t (*a6)(_QWORD))
{
  _QWORD *v6;
  _QWORD **v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  unint64_t v27;
  char v28;
  uint64_t v29;
  void (*v30)(void);
  void (*v31)(void);
  uint64_t v32;

  v30 = a4;
  v31 = a5;
  v8 = (_QWORD **)v6;
  v32 = a1;
  v11 = sub_245387740();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (_QWORD *)*v6;
  v17 = sub_2452C2058(a2);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_14;
  }
  v21 = v16;
  v22 = v15[3];
  if (v22 >= v20 && (a3 & 1) != 0)
  {
LABEL_7:
    v23 = *v8;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = v23[7];
      v25 = a6(0);
      return sub_2452BC64C(v32, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v17, a6);
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a3 & 1) == 0)
  {
    v30();
    goto LABEL_7;
  }
  v31();
  v27 = sub_2452C2058(a2);
  if ((v21 & 1) != (v28 & 1))
  {
LABEL_14:
    result = sub_2453883DC();
    __break(1u);
    return result;
  }
  v17 = v27;
  v23 = *v8;
  if ((v21 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  return sub_245329ACC(v17, (uint64_t)v14, v32, v23, a6);
}

uint64_t sub_245328BC4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_2452C20EC(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
        return sub_2452BC64C(a1, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
      }
      return sub_245329B84(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_2452C9450();
      goto LABEL_7;
    }
    sub_2452C5D20(v13, a3 & 1);
    v20 = sub_2452C20EC(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_245329B84(v10, a2, a1, v16);
    }
  }
  result = sub_2453883DC();
  __break(1u);
  return result;
}

void sub_245328CEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_2452C1D98(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_2452C967C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_2452C6050(v15, a4 & 1);
  v20 = sub_2452C1D98(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_2453883DC();
  __break(1u);
}

_OWORD *sub_245328E48(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_2452C20BC(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
        return sub_2452CC368(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_2452C982C();
      goto LABEL_7;
    }
    sub_2452C635C(v13, a3 & 1);
    v19 = sub_2452C20BC(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_2452CC2F8(a2, (uint64_t)v21);
      return sub_245329C10(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_2453883DC();
  __break(1u);
  return result;
}

uint64_t sub_245328F80(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), uint64_t (*a7)(_QWORD))
{
  _QWORD *v7;
  _QWORD **v11;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  unint64_t v27;
  char v28;

  v11 = (_QWORD **)v7;
  v15 = (_QWORD *)*v7;
  v17 = sub_2452C1D98(a2, a3);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v15[3];
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v11;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = v23[7];
        v25 = a7(0);
        return sub_2452BC64C(a1, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v17, a7);
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    a6();
    v27 = sub_2452C1D98(a2, a3);
    if ((v21 & 1) == (v28 & 1))
    {
      v17 = v27;
      v23 = *v11;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_245329C88(v17, a2, a3, a1, v23, a7);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_2453883DC();
  __break(1u);
  return result;
}

uint64_t sub_2453290E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  v5 = (_QWORD **)v4;
  v28 = a2;
  v9 = sub_245387740();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v4;
  v15 = sub_2452C2058(a3);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
  {
LABEL_7:
    v21 = *v5;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = (uint64_t *)(v21[7] + 16 * v15);
      result = swift_release();
      v24 = v28;
      *v22 = a1;
      v22[1] = v24;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_2452C9BE8();
    goto LABEL_7;
  }
  sub_2452C6990(v18, a4 & 1);
  v25 = sub_2452C2058(a3);
  if ((v19 & 1) != (v26 & 1))
  {
LABEL_14:
    result = sub_2453883DC();
    __break(1u);
    return result;
  }
  v15 = v25;
  v21 = *v5;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  return sub_245329D20(v15, (uint64_t)v12, a1, v28, v21);
}

uint64_t sub_245329250(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_245329264(a1, a2, a3, a4, (void (*)(void))sub_2452C9E24, (void (*)(void))sub_2452C6D24);
}

uint64_t sub_245329264(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void))
{
  _QWORD *v6;
  _QWORD *v9;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;

  v9 = v6;
  v14 = *v6;
  v16 = sub_2452C1D98(a2, a3);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= v19 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v21 >= v19 && (a4 & 1) == 0)
  {
    a5();
LABEL_7:
    v22 = (_QWORD *)*v9;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = v22[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 8 * v16) = a1;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v27 = (uint64_t *)(v22[6] + 16 * v16);
    *v27 = a2;
    v27[1] = a3;
    *(_QWORD *)(v22[7] + 8 * v16) = a1;
    v28 = v22[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (!v29)
    {
      v22[2] = v30;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  a6();
  v25 = sub_2452C1D98(a2, a3);
  if ((v20 & 1) == (v26 & 1))
  {
    v16 = v25;
    v22 = (_QWORD *)*v9;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_2453883DC();
  __break(1u);
  return result;
}

uint64_t sub_2453293D4(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_2452C219C(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
        return sub_2452BC64C(a1, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
      }
      return sub_245329DC0(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_2452C9FDC();
      goto LABEL_7;
    }
    sub_2452C7040(v13, a3 & 1);
    v20 = sub_2452C219C(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_245329DC0(v10, a2, a1, v16);
    }
  }
  result = sub_2453883DC();
  __break(1u);
  return result;
}

uint64_t sub_2453294FC(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v7 = a2 & 1;
  v8 = *v3;
  v10 = sub_2452C2200(a2 & 1);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_2452CA204();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = v7;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v19 = v16[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_2452C7380(result, a3 & 1);
  result = sub_2452C2200(v7);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_2453883DC();
  __break(1u);
  return result;
}

uint64_t sub_245329630(__int128 *a1, uint64_t *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_2452C225C(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7] + 40 * v10;
        __swift_destroy_boxed_opaque_existential_1(v17);
        return sub_2452B7C5C(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_2452CA3A4();
      goto LABEL_7;
    }
    sub_2452C7650(v13, a3 & 1);
    v19 = sub_2452C225C(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_245329E4C(v10, (uint64_t)a2, a1, v16);
      return sub_2452B7D58((uint64_t)a2);
    }
  }
  result = sub_2453883DC();
  __break(1u);
  return result;
}

uint64_t sub_245329754(uint64_t a1, char a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v5 = v4;
  v10 = *v4;
  v12 = sub_2452C225C((uint64_t *)a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_2452CA5A0();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7] + 16 * v12;
      *(_QWORD *)v19 = a1;
      *(_BYTE *)(v19 + 8) = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v21 = v18[6] + 40 * v12;
    v22 = *(_OWORD *)a3;
    v23 = *(_OWORD *)(a3 + 16);
    *(_QWORD *)(v21 + 32) = *(_QWORD *)(a3 + 32);
    *(_OWORD *)v21 = v22;
    *(_OWORD *)(v21 + 16) = v23;
    v24 = v18[7] + 16 * v12;
    *(_QWORD *)v24 = a1;
    *(_BYTE *)(v24 + 8) = a2;
    v25 = v18[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (!v26)
    {
      v18[2] = v27;
      return sub_2452B7D58(a3);
    }
    goto LABEL_14;
  }
  sub_2452C79D8(result, a4 & 1);
  result = sub_2452C225C((uint64_t *)a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_2453883DC();
  __break(1u);
  return result;
}

uint64_t sub_2453298BC(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for Record.ID(0);
  sub_2452B7AB8(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, type metadata accessor for Record.ID);
  v10 = a4[7];
  v11 = type metadata accessor for RecordMetadata();
  result = sub_2452B7AB8(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_245329974(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for Record.ID(0);
  sub_2452B7AB8(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, type metadata accessor for Record.ID);
  v10 = a4[7];
  v11 = sub_245387740();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a3, v11);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_245329A2C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a7[(a1 >> 6) + 8] |= 1 << a1;
  v10 = (_QWORD *)(a7[6] + 32 * a1);
  *v10 = a2;
  v10[1] = a3;
  v10[2] = a4;
  v10[3] = a5;
  v11 = a7[7];
  v12 = type metadata accessor for ZoneVersion();
  result = sub_2452B7AB8(a6, v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
  v14 = a7[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a7[2] = v16;
  return result;
}

uint64_t sub_245329AC0(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_245329ACC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for NetworkBrowser.Monitor);
}

uint64_t sub_245329ACC(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a4[6];
  v11 = sub_245387740();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a2, v11);
  v12 = a4[7];
  v13 = a5(0);
  result = sub_2452B7AB8(a3, v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a1, a5);
  v15 = a4[2];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    a4[2] = v17;
  return result;
}

uint64_t sub_245329B84(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  result = sub_2452B7AB8(a3, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

_OWORD *sub_245329C10(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_2452CC368(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

uint64_t sub_245329C88(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(_QWORD))
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = (_QWORD *)(a5[6] + 16 * a1);
  *v10 = a2;
  v10[1] = a3;
  v11 = a5[7];
  v12 = a6(0);
  result = sub_2452B7AB8(a4, v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, a6);
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

uint64_t sub_245329D20(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a5[6];
  v11 = sub_245387740();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a2, v11);
  v13 = (_QWORD *)(a5[7] + 16 * a1);
  *v13 = a3;
  v13[1] = a4;
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

uint64_t sub_245329DC0(unint64_t a1, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  v7 = a4[7];
  v8 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
  result = sub_2452B7AB8(a3, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_245329E4C(unint64_t a1, uint64_t a2, __int128 *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_2452B7C5C(a3, a4[7] + 40 * a1);
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

_QWORD *sub_245329EC8(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  _QWORD *v2;
  char v3;
  unint64_t v4;
  size_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[2];

  v2 = (_QWORD *)isStackAllocationSafe;
  v9[1] = *MEMORY[0x24BDAC8D0];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_24532A284((_QWORD *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    if (v1)
      swift_willThrow();
    else
      return (_QWORD *)v6;
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v2 = (_QWORD *)sub_24532A284((unint64_t *)v7, v4, v2);
    MEMORY[0x24953317C](v7, -1, -1);
  }
  return v2;
}

uint64_t sub_24532A018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24532A108(a1, a2, a3, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_24532A7BC);
}

uint64_t sub_24532A068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24532A108(a1, a2, a3, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_24532AA90);
}

uint64_t sub_24532A0B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24532A108(a1, a2, a3, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_24532ACDC);
}

uint64_t sub_24532A108(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v9;
  char v10;
  unint64_t v11;
  size_t v12;
  uint64_t v13;
  void *v14;
  _QWORD v16[2];

  v6 = v4;
  v9 = isStackAllocationSafe;
  v16[1] = *MEMORY[0x24BDAC8D0];
  v10 = *(_BYTE *)(a3 + 32);
  v11 = (unint64_t)((1 << v10) + 63) >> 6;
  v12 = 8 * v11;
  if ((v10 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v16 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v12);
    v13 = a4((char *)v16 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v11, a3, v9, a2);
    if (v4)
      swift_willThrow();
    else
      return v13;
  }
  else
  {
    v14 = (void *)swift_slowAlloc();
    bzero(v14, v12);
    v6 = a4((char *)v14, v11, a3, v9, a2);
    MEMORY[0x24953317C](v14, -1, -1);
  }
  return v6;
}

uint64_t sub_24532A284(unint64_t *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char *v21;
  int64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t (*v29)();
  uint64_t v30;
  unint64_t v31;
  BOOL v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)();
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  char *v51;
  uint64_t v52;
  unint64_t *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  _QWORD *v58;
  int64_t v59;
  int v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  int64_t v72;

  v52 = a2;
  v53 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
  MEMORY[0x24BDAC7A8](v4);
  v69 = (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2453876EC();
  v67 = *(_QWORD *)(v6 - 8);
  v68 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v57 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v56 = (char *)&v52 - v9;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
  v10 = MEMORY[0x24BDAC7A8](v63);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v52 - v13;
  v15 = type metadata accessor for RecordMetadata();
  v65 = *(_QWORD *)(v15 - 8);
  v66 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Record.ID(0);
  v64 = *(_QWORD *)(v18 - 8);
  result = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = 0;
  v22 = 0;
  v70 = a3;
  v23 = a3;
  v24 = (uint64_t)v17;
  v25 = v23[8];
  v58 = v23 + 8;
  v26 = 1 << *((_BYTE *)v23 + 32);
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v28 = v27 & v25;
  v59 = (unint64_t)(v26 + 63) >> 6;
  v29 = type metadata accessor for RecordMetadata;
  v55 = v14;
  v62 = v21;
  v30 = v67;
  while (v28)
  {
    v71 = (v28 - 1) & v28;
    v72 = v22;
    v31 = __clz(__rbit64(v28)) | (v22 << 6);
LABEL_18:
    v36 = v70;
    sub_2452B792C(v70[6] + *(_QWORD *)(v64 + 72) * v31, (uint64_t)v21, type metadata accessor for Record.ID);
    v37 = v36[7];
    v38 = *(_QWORD *)(v65 + 72);
    v61 = v31;
    sub_2452B792C(v37 + v38 * v31, v24, (uint64_t (*)(_QWORD))v29);
    v39 = v63;
    v40 = (uint64_t)&v14[*(int *)(v63 + 48)];
    sub_2452B792C((uint64_t)v21, (uint64_t)v14, type metadata accessor for Record.ID);
    sub_2452B792C(v24, v40, (uint64_t (*)(_QWORD))v29);
    v41 = (uint64_t)&v12[*(int *)(v39 + 48)];
    sub_2452B792C((uint64_t)v14, (uint64_t)v12, type metadata accessor for Record.ID);
    sub_2452B792C(v40, v41, (uint64_t (*)(_QWORD))v29);
    v42 = v29;
    v43 = v69;
    sub_2452BC89C(v41 + *(int *)(v66 + 28), v69, &qword_25744F6B0);
    sub_2452B7B5C(v41, (uint64_t (*)(_QWORD))v42);
    v44 = v68;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v43, 1, v68) == 1)
    {
      sub_245263F80((uint64_t)v14, &qword_25744FD30);
      sub_245263F80(v43, &qword_25744F6B0);
      sub_2452B7B5C((uint64_t)v12, type metadata accessor for Record.ID);
      sub_2452B7B5C(v24, (uint64_t (*)(_QWORD))v42);
      v21 = v62;
      result = sub_2452B7B5C((uint64_t)v62, type metadata accessor for Record.ID);
      v22 = v72;
      v29 = v42;
      v28 = v71;
    }
    else
    {
      v45 = v56;
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v56, v43, v44);
      sub_2452B7B5C((uint64_t)v12, type metadata accessor for Record.ID);
      v46 = v24;
      v47 = v12;
      v48 = v57;
      sub_2453876C8();
      v60 = sub_24538768C();
      v49 = *(void (**)(char *, uint64_t))(v30 + 8);
      v50 = v48;
      v12 = v47;
      v24 = v46;
      v49(v50, v44);
      v51 = v45;
      v14 = v55;
      v49(v51, v44);
      sub_245263F80((uint64_t)v14, &qword_25744FD30);
      sub_2452B7B5C(v46, (uint64_t (*)(_QWORD))v42);
      v21 = v62;
      result = sub_2452B7B5C((uint64_t)v62, type metadata accessor for Record.ID);
      v22 = v72;
      v29 = v42;
      v28 = v71;
      if ((v60 & 1) != 0)
      {
        *(unint64_t *)((char *)v53 + ((v61 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v61;
        v32 = __OFADD__(v54++, 1);
        if (v32)
          goto LABEL_30;
      }
    }
  }
  v32 = __OFADD__(v22, 1);
  v33 = v22 + 1;
  if (v32)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v33 >= v59)
    return sub_24532AF60(v53, v52, v54, v70);
  v34 = v58[v33];
  if (v34)
  {
LABEL_17:
    v71 = (v34 - 1) & v34;
    v72 = v33;
    v31 = __clz(__rbit64(v34)) + (v33 << 6);
    goto LABEL_18;
  }
  v35 = v33 + 1;
  if (v33 + 1 >= v59)
    return sub_24532AF60(v53, v52, v54, v70);
  v34 = v58[v35];
  if (v34)
    goto LABEL_16;
  v35 = v33 + 2;
  if (v33 + 2 >= v59)
    return sub_24532AF60(v53, v52, v54, v70);
  v34 = v58[v35];
  if (v34)
    goto LABEL_16;
  v35 = v33 + 3;
  if (v33 + 3 >= v59)
    return sub_24532AF60(v53, v52, v54, v70);
  v34 = v58[v35];
  if (v34)
  {
LABEL_16:
    v33 = v35;
    goto LABEL_17;
  }
  while (1)
  {
    v33 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v33 >= v59)
      return sub_24532AF60(v53, v52, v54, v70);
    v34 = v58[v33];
    ++v35;
    if (v34)
      goto LABEL_17;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24532A7BC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  _QWORD *v36;
  int64_t v37;
  uint64_t v38;

  v35 = a4;
  v26 = a2;
  v27 = a1;
  v5 = type metadata accessor for RecordMetadata();
  v34 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v32 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Record.ID(0);
  v33 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x24BDAC7A8](v7);
  v31 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v36 = (_QWORD *)a3;
  v11 = *(_QWORD *)(a3 + 64);
  v28 = 0;
  v29 = a3 + 64;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v30 = (unint64_t)(v12 + 63) >> 6;
  v15 = (uint64_t)v31;
  v16 = (uint64_t)v32;
  while (v14)
  {
    v17 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v37 = v10;
    v18 = v17 | (v10 << 6);
LABEL_17:
    v23 = v36;
    sub_2452B792C(v36[6] + *(_QWORD *)(v33 + 72) * v18, v15, type metadata accessor for Record.ID);
    sub_2452B792C(v23[7] + *(_QWORD *)(v34 + 72) * v18, v16, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v24 = v38;
    v25 = v35(v15, v16);
    sub_2452B7B5C(v16, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    result = sub_2452B7B5C(v15, type metadata accessor for Record.ID);
    v38 = v24;
    if (v24)
      return result;
    v10 = v37;
    if ((v25 & 1) != 0)
    {
      *(unint64_t *)((char *)v27 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = __OFADD__(v28++, 1);
      if (v19)
        goto LABEL_30;
    }
  }
  v19 = __OFADD__(v10, 1);
  v20 = v10 + 1;
  if (v19)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v20 >= v30)
    return sub_24532AF60(v27, v26, v28, v36);
  v21 = *(_QWORD *)(v29 + 8 * v20);
  if (v21)
  {
LABEL_16:
    v14 = (v21 - 1) & v21;
    v37 = v20;
    v18 = __clz(__rbit64(v21)) + (v20 << 6);
    goto LABEL_17;
  }
  v22 = v20 + 1;
  if (v20 + 1 >= v30)
    return sub_24532AF60(v27, v26, v28, v36);
  v21 = *(_QWORD *)(v29 + 8 * v22);
  if (v21)
    goto LABEL_15;
  v22 = v20 + 2;
  if (v20 + 2 >= v30)
    return sub_24532AF60(v27, v26, v28, v36);
  v21 = *(_QWORD *)(v29 + 8 * v22);
  if (v21)
    goto LABEL_15;
  v22 = v20 + 3;
  if (v20 + 3 >= v30)
    return sub_24532AF60(v27, v26, v28, v36);
  v21 = *(_QWORD *)(v29 + 8 * v22);
  if (v21)
  {
LABEL_15:
    v20 = v22;
    goto LABEL_16;
  }
  while (1)
  {
    v20 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v20 >= v30)
      return sub_24532AF60(v27, v26, v28, v36);
    v21 = *(_QWORD *)(v29 + 8 * v20);
    ++v22;
    if (v21)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24532AA90(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, char *))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t *, char *);
  uint64_t v30;

  v29 = a4;
  v23 = a2;
  v24 = a1;
  v6 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  v28 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v11 = *(_QWORD *)(a3 + 64);
  v25 = 0;
  v26 = a3 + 64;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v27 = (unint64_t)(v12 + 63) >> 6;
  while (v14)
  {
    v15 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v16 = v15 | (v10 << 6);
LABEL_17:
    v20 = *(_QWORD *)(a3 + 56);
    v30 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v16);
    sub_2452B792C(v20 + *(_QWORD *)(v28 + 72) * v16, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
    v21 = v29(&v30, v9);
    result = sub_2452B7B5C((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
    if (v4)
      return result;
    if ((v21 & 1) != 0)
    {
      *(unint64_t *)((char *)v24 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = __OFADD__(v25++, 1);
      if (v17)
        goto LABEL_30;
    }
  }
  v17 = __OFADD__(v10++, 1);
  if (v17)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v10 >= v27)
    return sub_24532BEEC(v24, v23, v25, (_QWORD *)a3);
  v18 = *(_QWORD *)(v26 + 8 * v10);
  if (v18)
  {
LABEL_16:
    v14 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
    goto LABEL_17;
  }
  v19 = v10 + 1;
  if (v10 + 1 >= v27)
    return sub_24532BEEC(v24, v23, v25, (_QWORD *)a3);
  v18 = *(_QWORD *)(v26 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v10 + 2;
  if (v10 + 2 >= v27)
    return sub_24532BEEC(v24, v23, v25, (_QWORD *)a3);
  v18 = *(_QWORD *)(v26 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v10 + 3;
  if (v10 + 3 >= v27)
    return sub_24532BEEC(v24, v23, v25, (_QWORD *)a3);
  v18 = *(_QWORD *)(v26 + 8 * v19);
  if (v18)
  {
LABEL_15:
    v10 = v19;
    goto LABEL_16;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v27)
      return sub_24532BEEC(v24, v23, v25, (_QWORD *)a3);
    v18 = *(_QWORD *)(v26 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24532ACDC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, char *))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t (*v31)(_QWORD *, char *);

  v31 = a4;
  v24 = a2;
  v25 = a1;
  v6 = type metadata accessor for NetworkMessenger.ExpiringConnection(0);
  v29 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v11 = *(_QWORD *)(a3 + 64);
  v26 = 0;
  v27 = a3 + 64;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v28 = (unint64_t)(v12 + 63) >> 6;
  while (v14)
  {
    v15 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v16 = v15 | (v10 << 6);
LABEL_17:
    v20 = *(_QWORD *)(a3 + 56);
    v21 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * v16);
    v22 = v21[1];
    v30[0] = *v21;
    v30[1] = v22;
    sub_2452B792C(v20 + *(_QWORD *)(v29 + 72) * v16, (uint64_t)v9, type metadata accessor for NetworkMessenger.ExpiringConnection);
    swift_bridgeObjectRetain();
    v23 = v31(v30, v9);
    sub_2452B7B5C((uint64_t)v9, type metadata accessor for NetworkMessenger.ExpiringConnection);
    result = swift_bridgeObjectRelease();
    if (v4)
      return result;
    if ((v23 & 1) != 0)
    {
      *(unint64_t *)((char *)v25 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = __OFADD__(v26++, 1);
      if (v17)
        goto LABEL_30;
    }
  }
  v17 = __OFADD__(v10++, 1);
  if (v17)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v10 >= v28)
    return sub_24532C1F0(v25, v24, v26, (_QWORD *)a3, type metadata accessor for NetworkMessenger.ExpiringConnection, (uint64_t *)&unk_257452DF0);
  v18 = *(_QWORD *)(v27 + 8 * v10);
  if (v18)
  {
LABEL_16:
    v14 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
    goto LABEL_17;
  }
  v19 = v10 + 1;
  if (v10 + 1 >= v28)
    return sub_24532C1F0(v25, v24, v26, (_QWORD *)a3, type metadata accessor for NetworkMessenger.ExpiringConnection, (uint64_t *)&unk_257452DF0);
  v18 = *(_QWORD *)(v27 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v10 + 2;
  if (v10 + 2 >= v28)
    return sub_24532C1F0(v25, v24, v26, (_QWORD *)a3, type metadata accessor for NetworkMessenger.ExpiringConnection, (uint64_t *)&unk_257452DF0);
  v18 = *(_QWORD *)(v27 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v10 + 3;
  if (v10 + 3 >= v28)
    return sub_24532C1F0(v25, v24, v26, (_QWORD *)a3, type metadata accessor for NetworkMessenger.ExpiringConnection, (uint64_t *)&unk_257452DF0);
  v18 = *(_QWORD *)(v27 + 8 * v19);
  if (v18)
  {
LABEL_15:
    v10 = v19;
    goto LABEL_16;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v28)
      return sub_24532C1F0(v25, v24, v26, (_QWORD *)a3, type metadata accessor for NetworkMessenger.ExpiringConnection, (uint64_t *)&unk_257452DF0);
    v18 = *(_QWORD *)(v27 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24532AF4C(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_24532C1F0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship, (uint64_t *)&unk_2574524A0);
}

uint64_t sub_24532AF60(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  BOOL v46;
  uint64_t v47;
  char *v49;
  unint64_t *v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v51 = a2;
  v50 = a1;
  v6 = sub_245387740();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v49 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for RecordMetadata();
  v60 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v59 = (uint64_t)&v49 - v16;
  v64 = type metadata accessor for Record.ID(0);
  v58 = *(_QWORD *)(v64 - 8);
  v17 = MEMORY[0x24BDAC7A8](v64);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v57 = (uint64_t)&v49 - v20;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  v54 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257450128);
  result = sub_245387FB0();
  v22 = result;
  if (v51 < 1)
    v23 = 0;
  else
    v23 = *v50;
  v24 = 0;
  v25 = result + 64;
  v55 = v7;
  v56 = v6;
  v52 = a4;
  v53 = v15;
  while (1)
  {
    if (v23)
    {
      v61 = (v23 - 1) & v23;
      v62 = v24;
      v26 = __clz(__rbit64(v23)) | (v24 << 6);
    }
    else
    {
      v27 = v24 + 1;
      if (__OFADD__(v24, 1))
        goto LABEL_43;
      if (v27 >= v51)
        return v22;
      v28 = v50[v27];
      v29 = v24 + 1;
      if (!v28)
      {
        v29 = v24 + 2;
        if (v24 + 2 >= v51)
          return v22;
        v28 = v50[v29];
        if (!v28)
        {
          v29 = v24 + 3;
          if (v24 + 3 >= v51)
            return v22;
          v28 = v50[v29];
          if (!v28)
          {
            v30 = v24 + 4;
            if (v24 + 4 >= v51)
              return v22;
            v28 = v50[v30];
            if (!v28)
            {
              while (1)
              {
                v29 = v30 + 1;
                if (__OFADD__(v30, 1))
                  goto LABEL_44;
                if (v29 >= v51)
                  return v22;
                v28 = v50[v29];
                ++v30;
                if (v28)
                  goto LABEL_24;
              }
            }
            v29 = v24 + 4;
          }
        }
      }
LABEL_24:
      v61 = (v28 - 1) & v28;
      v62 = v29;
      v26 = __clz(__rbit64(v28)) + (v29 << 6);
    }
    v31 = a4[6];
    v32 = v57;
    v63 = *(_QWORD *)(v58 + 72);
    sub_2452B792C(v31 + v63 * v26, v57, type metadata accessor for Record.ID);
    v33 = *(_QWORD *)(v60 + 72);
    v34 = a4[7] + v33 * v26;
    v35 = v59;
    sub_2452B792C(v34, v59, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    sub_2452B7AB8(v32, (uint64_t)v19, type metadata accessor for Record.ID);
    sub_2452B7AB8(v35, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    sub_24538843C();
    swift_bridgeObjectRetain();
    sub_245387B6C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_245387B6C();
    sub_245387B6C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v36 = (uint64_t)v54;
    sub_2452B792C((uint64_t)&v19[*(int *)(v64 + 24)], (uint64_t)v54, type metadata accessor for Record.ID.Ownership);
    v38 = v55;
    v37 = v56;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v36, 1, v56) == 1)
    {
      sub_245388448();
    }
    else
    {
      v39 = v49;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v49, v36, v37);
      sub_245388448();
      sub_24525C6C4(&qword_25744F6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_245387AB8();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v37);
    }
    swift_bridgeObjectRetain();
    sub_245387B6C();
    swift_bridgeObjectRelease();
    result = sub_245388478();
    v40 = -1 << *(_BYTE *)(v22 + 32);
    v41 = result & ~v40;
    v42 = v41 >> 6;
    v15 = v53;
    if (((-1 << v41) & ~*(_QWORD *)(v25 + 8 * (v41 >> 6))) != 0)
    {
      v43 = __clz(__rbit64((-1 << v41) & ~*(_QWORD *)(v25 + 8 * (v41 >> 6)))) | v41 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v44 = 0;
      v45 = (unint64_t)(63 - v40) >> 6;
      do
      {
        if (++v42 == v45 && (v44 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v46 = v42 == v45;
        if (v42 == v45)
          v42 = 0;
        v44 |= v46;
        v47 = *(_QWORD *)(v25 + 8 * v42);
      }
      while (v47 == -1);
      v43 = __clz(__rbit64(~v47)) + (v42 << 6);
    }
    *(_QWORD *)(v25 + ((v43 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v43;
    sub_2452B7AB8((uint64_t)v19, *(_QWORD *)(v22 + 48) + v43 * v63, type metadata accessor for Record.ID);
    result = sub_2452B7AB8((uint64_t)v15, *(_QWORD *)(v22 + 56) + v43 * v33, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    ++*(_QWORD *)(v22 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v52;
    v23 = v61;
    v24 = v62;
    if (!a3)
      return v22;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_24532B55C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574500F0);
  result = sub_245387FB0();
  v7 = result;
  if (a2 < 1)
    v8 = 0;
  else
    v8 = *a1;
  v9 = 0;
  v10 = result + 64;
  v38 = v4;
  while (1)
  {
    if (v8)
    {
      v39 = (v8 - 1) & v8;
      v40 = v9;
      v11 = __clz(__rbit64(v8)) | (v9 << 6);
    }
    else
    {
      v12 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_40;
      if (v12 >= a2)
        return v7;
      v13 = a1[v12];
      v14 = v9 + 1;
      if (!v13)
      {
        v14 = v9 + 2;
        if (v9 + 2 >= a2)
          return v7;
        v13 = a1[v14];
        if (!v13)
        {
          v14 = v9 + 3;
          if (v9 + 3 >= a2)
            return v7;
          v13 = a1[v14];
          if (!v13)
          {
            v15 = v9 + 4;
            if (v9 + 4 >= a2)
              return v7;
            v13 = a1[v15];
            if (!v13)
            {
              while (1)
              {
                v14 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_41;
                if (v14 >= a2)
                  return v7;
                v13 = a1[v14];
                ++v15;
                if (v13)
                  goto LABEL_24;
              }
            }
            v14 = v9 + 4;
          }
        }
      }
LABEL_24:
      v39 = (v13 - 1) & v13;
      v40 = v14;
      v11 = __clz(__rbit64(v13)) + (v14 << 6);
    }
    v16 = *(_QWORD *)(v4 + 56);
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 32 * v11);
    v18 = *v17;
    v19 = v17[1];
    v21 = v17[2];
    v20 = v17[3];
    v22 = (uint64_t *)(v16 + 48 * v11);
    v23 = v22[1];
    v24 = v22[3];
    v41 = *v22;
    v42 = v22[2];
    v43 = v22[5];
    v44 = v22[4];
    sub_24538843C();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_245387B6C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_245387B6C();
    swift_bridgeObjectRelease();
    result = sub_245388478();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v10 + 8 * (v26 >> 6))) != 0)
    {
      v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v10 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v31 = v27 == v30;
        if (v27 == v30)
          v27 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v10 + 8 * v27);
      }
      while (v32 == -1);
      v28 = __clz(__rbit64(~v32)) + (v27 << 6);
    }
    *(_QWORD *)(v10 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    v33 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 32 * v28);
    *v33 = v18;
    v33[1] = v19;
    v33[2] = v21;
    v33[3] = v20;
    v34 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 48 * v28);
    *v34 = v41;
    v34[1] = v23;
    v34[2] = v42;
    v34[3] = v24;
    v34[4] = v44;
    v34[5] = v43;
    ++*(_QWORD *)(v7 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    v4 = v38;
    v8 = v39;
    v9 = v40;
    if (!v5)
      return v7;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_24532B8A4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450100);
  result = sub_245387FB0();
  v8 = result;
  v35 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  v37 = v4;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v38 = v10;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v35)
        return v8;
      v15 = a1[v14];
      v16 = v10 + 1;
      if (!v15)
      {
        v16 = v10 + 2;
        if (v10 + 2 >= v35)
          return v8;
        v15 = a1[v16];
        if (!v15)
        {
          v16 = v10 + 3;
          if (v10 + 3 >= v35)
            return v8;
          v15 = a1[v16];
          if (!v15)
          {
            v17 = v10 + 4;
            if (v10 + 4 >= v35)
              return v8;
            v15 = a1[v17];
            if (!v15)
            {
              while (1)
              {
                v16 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v16 >= v35)
                  return v8;
                v15 = a1[v16];
                ++v17;
                if (v15)
                  goto LABEL_24;
              }
            }
            v16 = v10 + 4;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v38 = v16;
      v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    v18 = *(_QWORD *)(v4 + 56);
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 32 * v13);
    v20 = *v19;
    v21 = v19[1];
    v23 = v19[2];
    v22 = v19[3];
    v24 = *(_QWORD *)(v18 + 8 * v13);
    sub_24538843C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_245387B6C();
    sub_245387B6C();
    result = sub_245388478();
    v25 = -1 << *(_BYTE *)(v8 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v31 = v27 == v30;
        if (v27 == v30)
          v27 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v27);
      }
      while (v32 == -1);
      v28 = __clz(__rbit64(~v32)) + (v27 << 6);
    }
    *(_QWORD *)(v11 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    v33 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 32 * v28);
    *v33 = v20;
    v33[1] = v21;
    v33[2] = v23;
    v33[3] = v22;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v28) = v24;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    v4 = v37;
    v10 = v38;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_24532BB80(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v8 = type metadata accessor for ZoneVersion();
  v47 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v9);
  v46 = (uint64_t)&v41 - v11;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  v45 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257450110);
  result = sub_245387FB0();
  v13 = result;
  v41 = a1;
  v42 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *a1;
  v15 = 0;
  v16 = result + 64;
  v17 = v45;
  v43 = a4;
  v44 = result;
  while (1)
  {
    if (v14)
    {
      v48 = (v14 - 1) & v14;
      v49 = v15;
      v18 = __clz(__rbit64(v14)) | (v15 << 6);
    }
    else
    {
      v19 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_40;
      if (v19 >= v42)
        return v13;
      v20 = v41[v19];
      v21 = v15 + 1;
      if (!v20)
      {
        v21 = v15 + 2;
        if (v15 + 2 >= v42)
          return v13;
        v20 = v41[v21];
        if (!v20)
        {
          v21 = v15 + 3;
          if (v15 + 3 >= v42)
            return v13;
          v20 = v41[v21];
          if (!v20)
          {
            v22 = v15 + 4;
            if (v15 + 4 >= v42)
              return v13;
            v20 = v41[v22];
            if (!v20)
            {
              while (1)
              {
                v21 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v21 >= v42)
                  return v13;
                v20 = v41[v21];
                ++v22;
                if (v20)
                  goto LABEL_24;
              }
            }
            v21 = v15 + 4;
          }
        }
      }
LABEL_24:
      v48 = (v20 - 1) & v20;
      v49 = v21;
      v18 = __clz(__rbit64(v20)) + (v21 << 6);
    }
    v23 = a4[7];
    v24 = (uint64_t *)(a4[6] + 32 * v18);
    v26 = *v24;
    v25 = v24[1];
    v27 = v24[2];
    v28 = v24[3];
    v29 = v46;
    v30 = *(_QWORD *)(v47 + 72);
    sub_2452B792C(v23 + v30 * v18, v46, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    sub_2452B7AB8(v29, v17, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    v13 = v44;
    sub_24538843C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_245387B6C();
    sub_245387B6C();
    result = sub_245388478();
    v31 = -1 << *(_BYTE *)(v13 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v16 + 8 * (v32 >> 6))) != 0)
    {
      v34 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v16 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      v17 = v45;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v31) >> 6;
      v17 = v45;
      do
      {
        if (++v33 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v37 = v33 == v36;
        if (v33 == v36)
          v33 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v16 + 8 * v33);
      }
      while (v38 == -1);
      v34 = __clz(__rbit64(~v38)) + (v33 << 6);
    }
    *(_QWORD *)(v16 + ((v34 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v34;
    v39 = (_QWORD *)(*(_QWORD *)(v13 + 48) + 32 * v34);
    *v39 = v26;
    v39[1] = v25;
    v39[2] = v27;
    v39[3] = v28;
    result = sub_2452B7AB8(v17, *(_QWORD *)(v13 + 56) + v34 * v30, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    ++*(_QWORD *)(v13 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v43;
    v14 = v48;
    v15 = v49;
    if (!a3)
      return v13;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_24532BEEC(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  unint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v8 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  v36 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v37 = (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v34 - v11;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452460);
  result = sub_245387FB0();
  v14 = result;
  v34 = a1;
  v35 = a2;
  if (a2 < 1)
    v15 = 0;
  else
    v15 = *a1;
  v16 = 0;
  v17 = result + 64;
  while (1)
  {
    if (v15)
    {
      v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v19 = v18 | (v16 << 6);
    }
    else
    {
      v20 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_40;
      if (v20 >= v35)
        return v14;
      v21 = v34[v20];
      ++v16;
      if (!v21)
      {
        v16 = v20 + 1;
        if (v20 + 1 >= v35)
          return v14;
        v21 = v34[v16];
        if (!v21)
        {
          v16 = v20 + 2;
          if (v20 + 2 >= v35)
            return v14;
          v21 = v34[v16];
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v35)
              return v14;
            v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                v16 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v16 >= v35)
                  return v14;
                v21 = v34[v16];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v16 = v22;
          }
        }
      }
LABEL_24:
      v15 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v16 << 6);
    }
    v23 = *(_QWORD *)(a4[6] + 8 * v19);
    v24 = *(_QWORD *)(v36 + 72);
    sub_2452B792C(a4[7] + v24 * v19, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
    sub_2452B7AB8((uint64_t)v12, v37, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
    result = sub_245388430();
    v25 = -1 << *(_BYTE *)(v14 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v17 + 8 * (v26 >> 6))) != 0)
    {
      v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v17 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v31 = v27 == v30;
        if (v27 == v30)
          v27 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v17 + 8 * v27);
      }
      while (v32 == -1);
      v28 = __clz(__rbit64(~v32)) + (v27 << 6);
    }
    *(_QWORD *)(v17 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * v28) = v23;
    result = sub_2452B7AB8(v37, *(_QWORD *)(v14 + 56) + v28 * v24, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
    ++*(_QWORD *)(v14 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    if (!a3)
      return v14;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_24532C1F0(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD), uint64_t *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD);
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(_QWORD);

  v50 = a5;
  v11 = a5(0);
  v47 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v49 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v46 = (char *)&v44 - v14;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(a6);
  result = sub_245387FB0();
  v16 = result;
  v44 = a1;
  v45 = a2;
  if (a2 < 1)
    v17 = 0;
  else
    v17 = *a1;
  v18 = 0;
  v19 = result + 64;
  v20 = (uint64_t)v46;
  while (1)
  {
    if (v17)
    {
      v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v48 = v18;
      v22 = v21 | (v18 << 6);
    }
    else
    {
      v23 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_40;
      if (v23 >= v45)
        return v16;
      v24 = v44[v23];
      v25 = v18 + 1;
      if (!v24)
      {
        v25 = v18 + 2;
        if (v18 + 2 >= v45)
          return v16;
        v24 = v44[v25];
        if (!v24)
        {
          v25 = v18 + 3;
          if (v18 + 3 >= v45)
            return v16;
          v24 = v44[v25];
          if (!v24)
          {
            v26 = v18 + 4;
            if (v18 + 4 >= v45)
              return v16;
            v24 = v44[v26];
            if (!v24)
            {
              while (1)
              {
                v25 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_41;
                if (v25 >= v45)
                  return v16;
                v24 = v44[v25];
                ++v26;
                if (v24)
                  goto LABEL_24;
              }
            }
            v25 = v18 + 4;
          }
        }
      }
LABEL_24:
      v17 = (v24 - 1) & v24;
      v48 = v25;
      v22 = __clz(__rbit64(v24)) + (v25 << 6);
    }
    v27 = a4[7];
    v28 = a4;
    v29 = (uint64_t *)(a4[6] + 16 * v22);
    v30 = *v29;
    v31 = v29[1];
    v32 = *(_QWORD *)(v47 + 72);
    v33 = v50;
    sub_2452B792C(v27 + v32 * v22, v20, v50);
    sub_2452B7AB8(v20, v49, v33);
    sub_24538843C();
    swift_bridgeObjectRetain();
    sub_245387B6C();
    result = sub_245388478();
    v34 = -1 << *(_BYTE *)(v16 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      v37 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v40 = v36 == v39;
        if (v36 == v39)
          v36 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v19 + 8 * v36);
      }
      while (v41 == -1);
      v37 = __clz(__rbit64(~v41)) + (v36 << 6);
    }
    *(_QWORD *)(v19 + ((v37 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v37;
    v42 = (_QWORD *)(*(_QWORD *)(v16 + 48) + 16 * v37);
    *v42 = v30;
    v42[1] = v31;
    result = sub_2452B7AB8(v49, *(_QWORD *)(v16 + 56) + v37 * v32, v50);
    ++*(_QWORD *)(v16 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v28;
    v18 = v48;
    if (!a3)
      return v16;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_24532C528(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24532D064(a1, a2, a3, (_QWORD *)*v3, &qword_257450270, type metadata accessor for Record.ID);
  *v3 = result;
  return result;
}

uint64_t sub_24532C554(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24532D064(a1, a2, a3, (_QWORD *)*v3, &qword_257452E28, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  *v3 = result;
  return result;
}

uint64_t sub_24532C580(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24532CD3C(a1, a2, a3, *v3, &qword_257450228);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24532C5AC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24532C704(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24532C5C8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24532D064(a1, a2, a3, (_QWORD *)*v3, &qword_257450210, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
  *v3 = result;
  return result;
}

uint64_t sub_24532C5F4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24532C86C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24532C610(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24532D064(a1, a2, a3, (_QWORD *)*v3, &qword_257452E78, type metadata accessor for Replicator.SyncItem);
  *v3 = result;
  return result;
}

uint64_t sub_24532C63C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24532CD3C(a1, a2, a3, *v3, &qword_257450268);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24532C668(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24532CBD4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24532C684(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24532CEC4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_24532C6A0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24532D064(a1, a2, a3, (_QWORD *)*v3, &qword_257452E38, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
  *v3 = result;
  return result;
}

uint64_t sub_24532C6CC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24532D244(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24532C6E8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24532D3AC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_24532C704(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450258);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_245387FBC();
  __break(1u);
  return result;
}

uint64_t sub_24532C86C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452370);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_245387FBC();
  __break(1u);
  return result;
}

uint64_t sub_24532C9EC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452E90);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_245387FBC();
  __break(1u);
  return result;
}

uint64_t sub_24532CBD4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744F670);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_245387FBC();
  __break(1u);
  return result;
}

uint64_t sub_24532CD3C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[48 * v9])
      memmove(v13, v14, 48 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[48 * v9] || v13 >= &v14[48 * v9])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = sub_245387FBC();
  __break(1u);
  return result;
}

uint64_t sub_24532CEC4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450248);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FB90);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_245387FBC();
  __break(1u);
  return result;
}

uint64_t sub_24532D064(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_245387FBC();
  __break(1u);
  return result;
}

uint64_t sub_24532D244(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2574503E8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_245387FBC();
  __break(1u);
  return result;
}

uint64_t sub_24532D3AC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452E30);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF50);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_245387FBC();
  __break(1u);
  return result;
}

size_t sub_24532D534(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257450210);
  v3 = *(_QWORD *)(sub_245387740() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      v9 = sub_24532FAE8(&v10, (uint64_t)v6 + v5, v1, a1);
      sub_2452ECE70();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_24532D62C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257450270);
  v3 = *(_QWORD *)(type metadata accessor for Record.ID(0) - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = sub_24532FE38(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_2452ECE70();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_24532D744(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450258);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 1;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  v6 = sub_2453300F4((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2452ECE70();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

size_t sub_24532D828(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452E90);
  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90) - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90) - 8)
                              + 80);
      v10 = sub_24533030C(&v11, (uint64_t)v6 + ((v9 + 32) & ~v9), v1, a1);
      swift_bridgeObjectRetain();
      sub_2452ECE70();
      if (v10 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_24532D960(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257450270);
  v3 = *(_QWORD *)(type metadata accessor for Record.ID(0) - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = sub_245330618(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_2452ECE70();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_24532DA78(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744F670);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_2453308D4((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2452ECE70();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_24532DB5C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450258);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 1;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  v6 = sub_245330AD0((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2452ECE70();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_24532DC40(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744F670);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_245330CE8((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2452ECE70();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_24532DD24(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452DD0);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_24532F6A4((unint64_t)(v3 + 4), v2, v1);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_245387F8C();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_24532DE18(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(sub_245387740() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_245330F98(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_24532DE98(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_24532DE98(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  char *v77;
  void (*v78)(char *, uint64_t, uint64_t);
  unint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  char v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  BOOL v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char *v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  unint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;

  v2 = v1;
  v4 = sub_245387740();
  v159 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v146 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v153 = (char *)&v138 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v155 = (char *)&v138 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v154 = (char *)&v138 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v142 = (char *)&v138 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v149 = (char *)&v138 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v144 = (char *)&v138 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v143 = (char *)&v138 - v19;
  v158 = a1;
  v20 = a1[1];
  result = sub_2453880E8();
  if (result >= v20)
  {
    if (v20 < 0)
      goto LABEL_150;
    if (v20)
      return sub_24532EA30(0, v20, 1, v158);
    return result;
  }
  if (v20 >= 0)
    v22 = v20;
  else
    v22 = v20 + 1;
  if (v20 < -1)
    goto LABEL_158;
  v139 = result;
  if (v20 < 2)
  {
    v27 = (char *)MEMORY[0x24BEE4AF8];
    v26 = MEMORY[0x24BEE4AF8]
        + ((*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80));
    v138 = MEMORY[0x24BEE4AF8];
    if (v20 != 1)
    {
      v29 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_116:
      if (v29 >= 2)
      {
        v131 = *v158;
        do
        {
          v132 = v29 - 2;
          if (v29 < 2)
            goto LABEL_145;
          if (!v131)
            goto LABEL_157;
          v133 = *(_QWORD *)&v27[16 * v132 + 32];
          v134 = *(_QWORD *)&v27[16 * v29 + 24];
          v135 = v26;
          sub_24532ECF8(v131 + *(_QWORD *)(v159 + 72) * v133, v131 + *(_QWORD *)(v159 + 72) * *(_QWORD *)&v27[16 * v29 + 16], v131 + *(_QWORD *)(v159 + 72) * v134, v26);
          if (v2)
            break;
          if (v134 < v133)
            goto LABEL_146;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v27 = sub_24532F690((uint64_t)v27);
          if (v132 >= *((_QWORD *)v27 + 2))
            goto LABEL_147;
          v136 = &v27[16 * v132 + 32];
          *(_QWORD *)v136 = v133;
          *((_QWORD *)v136 + 1) = v134;
          v137 = *((_QWORD *)v27 + 2);
          if (v29 > v137)
            goto LABEL_148;
          memmove(&v27[16 * v29 + 16], &v27[16 * v29 + 32], 16 * (v137 - v29));
          *((_QWORD *)v27 + 2) = v137 - 1;
          v29 = v137 - 1;
          v26 = v135;
        }
        while (v137 > 2);
      }
LABEL_127:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v138 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v23 = v22 >> 1;
    v24 = sub_245387C38();
    *(_QWORD *)(v24 + 16) = v23;
    v25 = *(unsigned __int8 *)(v159 + 80);
    v138 = v24;
    v26 = v24 + ((v25 + 32) & ~v25);
  }
  v28 = 0;
  v27 = (char *)MEMORY[0x24BEE4AF8];
  v148 = v26;
  v152 = v4;
  while (1)
  {
    v30 = v28;
    v31 = v28 + 1;
    if (v28 + 1 >= v20)
    {
      v39 = v28 + 1;
      goto LABEL_67;
    }
    v156 = v20;
    v32 = *v158;
    v33 = *(_QWORD *)(v159 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v159 + 16);
    v34(v143, *v158 + v33 * v31, v4);
    v147 = v30;
    v145 = v32;
    v157 = v33;
    v34(v144, v32 + v33 * v30, v4);
    v35 = sub_245387704();
    v37 = v36;
    if (v35 == sub_245387704() && v37 == v38)
      LODWORD(v151) = 0;
    else
      LODWORD(v151) = sub_245388274();
    v40 = v142;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v41 = *(void (**)(char *, uint64_t))(v159 + 8);
    v42 = v152;
    v41(v144, v152);
    v41(v143, v42);
    v39 = v147 + 2;
    if (v147 + 2 < v156)
    {
      v140 = v27;
      v141 = v2;
      v150 = v157 * v31;
      v43 = v145;
      v44 = v157 * v39;
      while (1)
      {
        v45 = v152;
        v34(v149, v43 + v44, v152);
        v34(v40, v43 + v150, v45);
        v46 = sub_245387704();
        v48 = v47;
        if (v46 == sub_245387704() && v48 == v49)
          v50 = 0;
        else
          v50 = sub_245388274();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v51 = v152;
        v41(v40, v152);
        v41(v149, v51);
        if (((v151 ^ v50) & 1) != 0)
          break;
        ++v39;
        v43 += v157;
        if (v156 == v39)
        {
          v52 = v156;
          v39 = v156;
          v27 = v140;
          v2 = v141;
          goto LABEL_32;
        }
      }
      v27 = v140;
      v2 = v141;
    }
    v52 = v156;
LABEL_32:
    v30 = v147;
    v53 = v145;
    if ((v151 & 1) == 0)
      break;
    if (v39 < v147)
      goto LABEL_151;
    if (v147 >= v39)
      break;
    v140 = v27;
    v141 = v2;
    v54 = 0;
    v55 = v157 * (v39 - 1);
    v56 = v39 * v157;
    v57 = v147;
    v58 = v147 * v157;
    do
    {
      if (v57 != v39 + v54 - 1)
      {
        if (!v53)
          goto LABEL_156;
        v60 = v39;
        v61 = v53 + v55;
        v151 = *(_QWORD *)(v159 + 32);
        ((void (*)(char *, uint64_t, uint64_t))v151)(v146, v53 + v58, v152);
        if (v58 < v55 || v53 + v58 >= (unint64_t)(v53 + v56))
        {
          v59 = v152;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v59 = v152;
          if (v58 != v55)
            swift_arrayInitWithTakeBackToFront();
        }
        ((void (*)(uint64_t, char *, uint64_t))v151)(v61, v146, v59);
        v39 = v60;
        v53 = v145;
      }
      ++v57;
      --v54;
      v55 -= v157;
      v56 -= v157;
      v58 += v157;
    }
    while (v57 < v39 + v54);
    v27 = v140;
    v2 = v141;
    v62 = v152;
    v30 = v147;
    v52 = v156;
    if (v39 < v156)
      goto LABEL_48;
LABEL_67:
    if (v39 < v30)
      goto LABEL_144;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v27 = sub_24532F2D4(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
    v80 = *((_QWORD *)v27 + 2);
    v79 = *((_QWORD *)v27 + 3);
    v29 = v80 + 1;
    v26 = v148;
    v157 = v39;
    if (v80 >= v79 >> 1)
    {
      v130 = sub_24532F2D4((char *)(v79 > 1), v80 + 1, 1, v27);
      v26 = v148;
      v27 = v130;
    }
    *((_QWORD *)v27 + 2) = v29;
    v81 = v27 + 32;
    v82 = &v27[16 * v80 + 32];
    v83 = v157;
    *(_QWORD *)v82 = v30;
    *((_QWORD *)v82 + 1) = v83;
    if (v80)
    {
      while (1)
      {
        v84 = v29 - 1;
        if (v29 >= 4)
        {
          v89 = &v81[16 * v29];
          v90 = *((_QWORD *)v89 - 8);
          v91 = *((_QWORD *)v89 - 7);
          v95 = __OFSUB__(v91, v90);
          v92 = v91 - v90;
          if (v95)
            goto LABEL_133;
          v94 = *((_QWORD *)v89 - 6);
          v93 = *((_QWORD *)v89 - 5);
          v95 = __OFSUB__(v93, v94);
          v87 = v93 - v94;
          v88 = v95;
          if (v95)
            goto LABEL_134;
          v96 = v29 - 2;
          v97 = &v81[16 * v29 - 32];
          v99 = *(_QWORD *)v97;
          v98 = *((_QWORD *)v97 + 1);
          v95 = __OFSUB__(v98, v99);
          v100 = v98 - v99;
          if (v95)
            goto LABEL_136;
          v95 = __OFADD__(v87, v100);
          v101 = v87 + v100;
          if (v95)
            goto LABEL_139;
          if (v101 >= v92)
          {
            v119 = &v81[16 * v84];
            v121 = *(_QWORD *)v119;
            v120 = *((_QWORD *)v119 + 1);
            v95 = __OFSUB__(v120, v121);
            v122 = v120 - v121;
            if (v95)
              goto LABEL_143;
            v112 = v87 < v122;
            goto LABEL_104;
          }
        }
        else
        {
          if (v29 != 3)
          {
            v113 = *((_QWORD *)v27 + 4);
            v114 = *((_QWORD *)v27 + 5);
            v95 = __OFSUB__(v114, v113);
            v106 = v114 - v113;
            v107 = v95;
            goto LABEL_98;
          }
          v86 = *((_QWORD *)v27 + 4);
          v85 = *((_QWORD *)v27 + 5);
          v95 = __OFSUB__(v85, v86);
          v87 = v85 - v86;
          v88 = v95;
        }
        if ((v88 & 1) != 0)
          goto LABEL_135;
        v96 = v29 - 2;
        v102 = &v81[16 * v29 - 32];
        v104 = *(_QWORD *)v102;
        v103 = *((_QWORD *)v102 + 1);
        v105 = __OFSUB__(v103, v104);
        v106 = v103 - v104;
        v107 = v105;
        if (v105)
          goto LABEL_138;
        v108 = &v81[16 * v84];
        v110 = *(_QWORD *)v108;
        v109 = *((_QWORD *)v108 + 1);
        v95 = __OFSUB__(v109, v110);
        v111 = v109 - v110;
        if (v95)
          goto LABEL_141;
        if (__OFADD__(v106, v111))
          goto LABEL_142;
        if (v106 + v111 >= v87)
        {
          v112 = v87 < v111;
LABEL_104:
          if (v112)
            v84 = v96;
          goto LABEL_106;
        }
LABEL_98:
        if ((v107 & 1) != 0)
          goto LABEL_137;
        v115 = &v81[16 * v84];
        v117 = *(_QWORD *)v115;
        v116 = *((_QWORD *)v115 + 1);
        v95 = __OFSUB__(v116, v117);
        v118 = v116 - v117;
        if (v95)
          goto LABEL_140;
        if (v118 < v106)
          goto LABEL_14;
LABEL_106:
        v123 = v84 - 1;
        if (v84 - 1 >= v29)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!*v158)
          goto LABEL_155;
        v124 = v27;
        v125 = &v81[16 * v123];
        v126 = *(_QWORD *)v125;
        v127 = &v81[16 * v84];
        v128 = *((_QWORD *)v127 + 1);
        sub_24532ECF8(*v158 + *(_QWORD *)(v159 + 72) * *(_QWORD *)v125, *v158 + *(_QWORD *)(v159 + 72) * *(_QWORD *)v127, *v158 + *(_QWORD *)(v159 + 72) * v128, v26);
        if (v2)
          goto LABEL_127;
        if (v128 < v126)
          goto LABEL_130;
        if (v84 > *((_QWORD *)v124 + 2))
          goto LABEL_131;
        *(_QWORD *)v125 = v126;
        *(_QWORD *)&v81[16 * v123 + 8] = v128;
        v129 = *((_QWORD *)v124 + 2);
        if (v84 >= v129)
          goto LABEL_132;
        v27 = v124;
        v29 = v129 - 1;
        memmove(&v81[16 * v84], v127 + 16, 16 * (v129 - 1 - v84));
        *((_QWORD *)v124 + 2) = v129 - 1;
        v26 = v148;
        if (v129 <= 2)
          goto LABEL_14;
      }
    }
    v29 = 1;
LABEL_14:
    v20 = v158[1];
    v28 = v157;
    v4 = v152;
    if (v157 >= v20)
      goto LABEL_116;
  }
  v62 = v152;
  if (v39 >= v52)
    goto LABEL_67;
LABEL_48:
  if (__OFSUB__(v39, v30))
    goto LABEL_149;
  if (v39 - v30 >= v139)
    goto LABEL_67;
  if (__OFADD__(v30, v139))
    goto LABEL_152;
  if (v30 + v139 >= v52)
    v63 = v52;
  else
    v63 = v30 + v139;
  if (v63 >= v30)
  {
    if (v39 != v63)
    {
      v147 = v30;
      v140 = v27;
      v141 = v2;
      v64 = *(_QWORD *)(v159 + 72);
      v150 = *(_QWORD *)(v159 + 16);
      v151 = v64;
      v156 = v39 * v64;
      v157 = v64 * (v39 - 1);
      v145 = v63;
      do
      {
        v66 = 0;
        v67 = v147;
        while (1)
        {
          v68 = *v158;
          v69 = (void (*)(char *, uint64_t, uint64_t))v150;
          ((void (*)(char *, uint64_t, uint64_t))v150)(v154, v156 + v66 + *v158, v62);
          v69(v155, v157 + v66 + v68, v62);
          v70 = sub_245387704();
          v72 = v71;
          if (v70 == sub_245387704() && v72 == v73)
            break;
          v74 = sub_245388274();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v75 = *(void (**)(char *, uint64_t))(v159 + 8);
          v62 = v152;
          v75(v155, v152);
          v75(v154, v62);
          if ((v74 & 1) == 0)
            goto LABEL_58;
          v76 = *v158;
          if (!*v158)
            goto LABEL_154;
          v77 = (char *)(v76 + v157 + v66);
          v78 = *(void (**)(char *, uint64_t, uint64_t))(v159 + 32);
          v78(v153, v76 + v156 + v66, v62);
          swift_arrayInitWithTakeFrontToBack();
          v78(v77, (uint64_t)v153, v62);
          v66 -= v151;
          if (v39 == ++v67)
            goto LABEL_58;
        }
        swift_bridgeObjectRelease_n();
        v65 = *(void (**)(char *, uint64_t))(v159 + 8);
        v62 = v152;
        v65(v155, v152);
        v65(v154, v62);
LABEL_58:
        ++v39;
        v157 += v151;
        v156 += v151;
      }
      while (v39 != v145);
      v39 = v145;
      v27 = v140;
      v2 = v141;
      v30 = v147;
    }
    goto LABEL_67;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  result = sub_245387F74();
  __break(1u);
  return result;
}

uint64_t sub_24532EA30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t *v37;
  _QWORD *v38;
  char *v39;
  char *v40;
  uint64_t v41;

  v37 = a4;
  v31 = a1;
  v6 = sub_245387740();
  v38 = *(_QWORD **)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v36 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v40 = (char *)&v29 - v10;
  result = MEMORY[0x24BDAC7A8](v9);
  v39 = (char *)&v29 - v12;
  v35 = a3;
  v30 = a2;
  if (a3 != a2)
  {
    v13 = v38[9];
    v32 = (void (*)(char *, uint64_t, uint64_t))v38[2];
    v33 = v13;
    v14 = v13 * (v35 - 1);
    v41 = v13 * v35;
LABEL_6:
    v16 = 0;
    v17 = v31;
    v34 = v14;
    while (1)
    {
      v18 = *v37;
      v19 = v32;
      v32(v39, v41 + v16 + *v37, v6);
      v19(v40, v14 + v16 + v18, v6);
      v20 = sub_245387704();
      v22 = v21;
      if (v20 == sub_245387704() && v22 == v23)
      {
        swift_bridgeObjectRelease_n();
        v15 = (void (*)(char *, uint64_t))v38[1];
        v15(v40, v6);
        result = ((uint64_t (*)(char *, uint64_t))v15)(v39, v6);
        v14 = v34;
LABEL_5:
        v14 += v33;
        v41 += v33;
        if (++v35 == v30)
          return result;
        goto LABEL_6;
      }
      v24 = sub_245388274();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25 = (void (*)(char *, uint64_t))v38[1];
      v25(v40, v6);
      result = ((uint64_t (*)(char *, uint64_t))v25)(v39, v6);
      v14 = v34;
      if ((v24 & 1) == 0)
        goto LABEL_5;
      v26 = *v37;
      if (!*v37)
        break;
      v27 = v26 + v34 + v16;
      v28 = (void (*)(char *, uint64_t, uint64_t))v38[4];
      v28(v36, v26 + v41 + v16, v6);
      swift_arrayInitWithTakeFrontToBack();
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v27, v36, v6);
      v16 -= v33;
      if (v35 == ++v17)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24532ECF8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char v32;
  void (*v33)(char *, uint64_t);
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  unint64_t v40;
  void (*v41)(char *, unint64_t, uint64_t);
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  void (*v48)(char *, uint64_t);
  BOOL v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t result;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;

  v8 = sub_245387740();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v58 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v57 = (char *)&v54 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v54 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v54 - v16;
  v19 = *(_QWORD *)(v18 + 72);
  v59 = v18;
  v60 = v19;
  if (!v19)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v60 == -1)
    goto LABEL_69;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v60 == -1)
    goto LABEL_70;
  v21 = (uint64_t)(a2 - a1) / v60;
  v63 = a1;
  v62 = a4;
  v22 = v20 / v60;
  if (v21 >= v20 / v60)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v60;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v37 = a4 + v24;
      v61 = a4 + v24;
      v63 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        v39 = -v60;
        v60 = *(_QWORD *)(v59 + 16);
        v55 = a4;
        v56 = a1;
        do
        {
          v40 = a3;
          v41 = (void (*)(char *, unint64_t, uint64_t))v60;
          ((void (*)(char *, unint64_t, uint64_t))v60)(v57, v37 + v39, v8);
          v42 = a2 + v39;
          v41(v58, a2 + v39, v8);
          v43 = sub_245387704();
          v45 = v44;
          if (v43 == sub_245387704() && v45 == v46)
            v47 = 0;
          else
            v47 = sub_245388274();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a3 += v39;
          v48 = *(void (**)(char *, uint64_t))(v59 + 8);
          v48(v58, v8);
          v48(v57, v8);
          if ((v47 & 1) != 0)
          {
            if (v40 < a2 || a3 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v50 = v55;
              v51 = v56;
            }
            else
            {
              v49 = v40 == a2;
              v50 = v55;
              v51 = v56;
              if (!v49)
                swift_arrayInitWithTakeBackToFront();
            }
            v63 += v39;
          }
          else
          {
            v52 = v61;
            v61 += v39;
            if (v40 < v52 || a3 >= v52)
            {
              swift_arrayInitWithTakeFrontToBack();
              v42 = a2;
              v50 = v55;
              v51 = v56;
            }
            else
            {
              v51 = v56;
              if (v40 != v52)
                swift_arrayInitWithTakeBackToFront();
              v42 = a2;
              v50 = v55;
            }
          }
          v37 = v61;
          if (v61 <= v50)
            break;
          a2 = v42;
        }
        while (v42 > v51);
      }
LABEL_67:
      sub_24532F584(&v63, &v62, (uint64_t *)&v61);
      return 1;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v60;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v58 = (char *)(a4 + v23);
    v61 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v59 + 16);
      while (1)
      {
        v26(v17, a2, v8);
        v26(v15, a4, v8);
        v27 = sub_245387704();
        v29 = v28;
        if (v27 == sub_245387704() && v29 == v30)
          break;
        v32 = sub_245388274();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v33 = *(void (**)(char *, uint64_t))(v59 + 8);
        v33(v15, v8);
        v33(v17, v8);
        if ((v32 & 1) == 0)
          goto LABEL_31;
        v34 = v63;
        v35 = a2 + v60;
        if (v63 < a2 || v63 >= v35)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v63 == a2)
        {
          v34 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_37:
        v63 = v34 + v60;
        a4 = v62;
        if (v62 < (unint64_t)v58)
        {
          a2 = v35;
          if (v35 < a3)
            continue;
        }
        goto LABEL_67;
      }
      swift_bridgeObjectRelease_n();
      v31 = *(void (**)(char *, uint64_t))(v59 + 8);
      v31(v15, v8);
      v31(v17, v8);
LABEL_31:
      v34 = v63;
      v36 = v62 + v60;
      if (v63 < v62 || v63 >= v36)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v63 != v62)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v62 = v36;
      v35 = a2;
      goto LABEL_37;
    }
    goto LABEL_67;
  }
LABEL_71:
  result = sub_245387FBC();
  __break(1u);
  return result;
}

char *sub_24532F2D4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257450298);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_24532F3CC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_245387FBC();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_24532F4DC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_245387FBC();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

uint64_t sub_24532F584(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = sub_245387740();
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_245387FBC();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_24532F690(uint64_t a1)
{
  return sub_24532F2D4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24532F6A4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_245387F8C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_245387F8C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_24533282C();
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257452DE0);
          v12 = sub_245316DFC(v16, i, a3);
          v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C10);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_245387FBC();
  __break(1u);
  return result;
}

uint64_t sub_24532F8A0(_QWORD *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  unint64_t v24;
  _OWORD *v25;
  __int128 *v26;
  __int128 v27;
  uint64_t v28;
  _BYTE *v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v4 = v3;
  v8 = sub_245387A1C();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDC62F0];
  MEMORY[0x24BDAC7A8](v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v4, v8);
  sub_24525C6C4(&qword_25440C718, v9, MEMORY[0x24BDC6300]);
  sub_245387BC0();
  v12 = *(_QWORD *)(v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25440C730) + 36));
  result = sub_245263F80(v4, &qword_25440C730);
  v14 = v33;
  v15 = v34;
  if (!a2)
    goto LABEL_6;
  if (!a3)
  {
LABEL_7:
    *a1 = v14;
    a1[1] = v15;
    a1[2] = v12;
    return a3;
  }
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    if (!v12 || (--v12, v16 = *(_QWORD *)(v33 + 16), v34 == v16))
    {
LABEL_6:
      a3 = 0;
      goto LABEL_7;
    }
    if (v34 < v16)
    {
      v17 = v34 + 1;
      *a2 = *(_BYTE *)(v33 + 32 + v34);
      if (a3 == 1)
      {
        ++v15;
      }
      else
      {
        v18 = a3 - 2;
        if (a3 - 2 >= v16 + ~v15)
          v18 = v16 + ~v15;
        if (v18 >= v12)
          v18 = v12;
        v19 = v18 + 1;
        if (v19 <= 0x10 || (v20 = v15 + v14, ((unint64_t)&a2[-v15 - v14] & 0xFFFFFFFFFFFFFFF0) == 0x20))
        {
          v21 = 1;
          v22 = a2;
        }
        else
        {
          v23 = v19 & 0xF;
          if ((v19 & 0xF) == 0)
            v23 = 16;
          v24 = v19 - v23;
          v17 += v19 - v23;
          v22 = &a2[v19 - v23];
          v21 = v24 + 1;
          v12 -= v24;
          v25 = a2 + 1;
          v26 = (__int128 *)(v20 + 33);
          do
          {
            v27 = *v26++;
            *v25++ = v27;
            v24 -= 16;
          }
          while (v24);
        }
        v28 = 0;
        v29 = v22 + 1;
        v30 = v12 - 1;
        v31 = v21;
        while (1)
        {
          if (v12 == v28)
          {
            v12 = 0;
            v15 = v17 + v28;
            a3 = v21 + v28;
            goto LABEL_7;
          }
          v32 = v30;
          if (!(v17 - v16 + v28))
            break;
          ++v31;
          v29[v28] = *(_BYTE *)(v17 + v14 + 32 + v28);
          ++v28;
          --v30;
          if (!(v21 - a3 + v28))
          {
            v15 = v17 + v28;
            v12 = v32;
            goto LABEL_7;
          }
        }
        v15 = v16;
        v12 = v30;
        a3 = v31;
      }
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24532FAE8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_245387740();
  v41 = *(_QWORD *)(v11 - 8);
  result = MEMORY[0x24BDAC7A8](v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 56;
  v14 = *(_QWORD *)(a4 + 56);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
    v21 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return v21;
  }
  if (!a3)
  {
    v20 = 0;
    v21 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 56;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v11);
    if (v21 == v39)
    {
      v21 = v39;
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v10, 1, 1, v11);
          v19 = 0;
LABEL_38:
          sub_245263F80((uint64_t)v10, &qword_25440C700);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_24532FE38(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;

  v8 = type metadata accessor for Record.ID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v31 - v14;
  v36 = a4;
  v18 = *(_QWORD *)(a4 + 56);
  v17 = a4 + 56;
  v16 = v18;
  v35 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 24);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v30 = v35;
    *a1 = v36;
    a1[1] = v30;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v32 = -1 << *(_BYTE *)(v17 - 24);
  v33 = a1;
  v22 = 0;
  v23 = 0;
  v34 = (unint64_t)(63 - v19) >> 6;
  v31 = v34 - 1;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    sub_2452B792C(*(_QWORD *)(v36 + 48) + v29 * v25, (uint64_t)v12, type metadata accessor for Record.ID);
    sub_2452B7AB8((uint64_t)v12, (uint64_t)v15, type metadata accessor for Record.ID);
    result = sub_2452B7AB8((uint64_t)v15, a2, type metadata accessor for Record.ID);
    if (v23 == a3)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v34)
      goto LABEL_32;
    v27 = *(_QWORD *)(v35 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v34)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v34)
    goto LABEL_32;
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v34)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v34)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v32;
    a1 = v33;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v34)
    {
      v21 = 0;
      v22 = v31;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v35 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2453300F4(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 32 * v16);
    v21 = v20[1];
    v22 = v20[2];
    v23 = v20[3];
    *v11 = *v20;
    v11[1] = v21;
    v11[2] = v22;
    v11[3] = v23;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 4;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_24533030C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v39 = *(_QWORD *)(v8 - 8);
  v40 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v32 - v13;
  v41 = a4;
  v15 = *(_QWORD *)(a4 + 64);
  v37 = a4 + 64;
  v16 = -1 << *(_BYTE *)(a4 + 32);
  if (-v16 < 64)
    v17 = ~(-1 << -(char)v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  if (!a2)
  {
    v19 = 0;
    a3 = 0;
LABEL_39:
    v31 = v37;
    *a1 = v41;
    a1[1] = v31;
    a1[2] = ~v16;
    a1[3] = v19;
    a1[4] = v18;
    return a3;
  }
  if (!a3)
  {
    v19 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v34 = v16;
  v35 = a1;
  v19 = 0;
  v20 = 0;
  v36 = (unint64_t)(63 - v16) >> 6;
  v33 = v36 - 1;
  v38 = a3;
  if (!v18)
    goto LABEL_9;
LABEL_8:
  v21 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  v22 = v21 | (v19 << 6);
  while (1)
  {
    ++v20;
    v26 = *(_QWORD *)(v41 + 56);
    v27 = (uint64_t *)(*(_QWORD *)(v41 + 48) + 16 * v22);
    v28 = *v27;
    v29 = v27[1];
    v30 = type metadata accessor for PairingRelationship();
    sub_2452B792C(v26 + *(_QWORD *)(*(_QWORD *)(v30 - 8) + 72) * v22, (uint64_t)v11 + *(int *)(v40 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    *v11 = v28;
    v11[1] = v29;
    sub_2452BC850((uint64_t)v11, (uint64_t)v14, (uint64_t *)&unk_25744FF90);
    sub_2452BC850((uint64_t)v14, a2, (uint64_t *)&unk_25744FF90);
    a3 = v38;
    if (v20 == v38)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    a2 += *(_QWORD *)(v39 + 72);
    result = swift_bridgeObjectRetain();
    if (v18)
      goto LABEL_8;
LABEL_9:
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v23 >= v36)
      goto LABEL_33;
    v24 = *(_QWORD *)(v37 + 8 * v23);
    if (!v24)
    {
      v19 += 2;
      if (v23 + 1 >= v36)
      {
        v18 = 0;
        v19 = v23;
      }
      else
      {
        v24 = *(_QWORD *)(v37 + 8 * v19);
        if (v24)
          goto LABEL_14;
        v25 = v23 + 2;
        if (v23 + 2 >= v36)
          goto LABEL_33;
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (v24)
        {
LABEL_17:
          v23 = v25;
          goto LABEL_18;
        }
        v19 = v23 + 3;
        if (v23 + 3 < v36)
        {
          v24 = *(_QWORD *)(v37 + 8 * v19);
          if (v24)
          {
LABEL_14:
            v23 = v19;
            goto LABEL_18;
          }
          v25 = v23 + 4;
          if (v23 + 4 >= v36)
          {
LABEL_33:
            v18 = 0;
            goto LABEL_37;
          }
          v24 = *(_QWORD *)(v37 + 8 * v25);
          if (!v24)
          {
            while (1)
            {
              v23 = v25 + 1;
              if (__OFADD__(v25, 1))
                goto LABEL_42;
              if (v23 >= v36)
              {
                v18 = 0;
                v19 = v33;
                goto LABEL_37;
              }
              v24 = *(_QWORD *)(v37 + 8 * v23);
              ++v25;
              if (v24)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v18 = 0;
        v19 = v23 + 2;
      }
LABEL_37:
      a3 = v20;
LABEL_38:
      v16 = v34;
      a1 = v35;
      goto LABEL_39;
    }
LABEL_18:
    v18 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v23 << 6);
    v19 = v23;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_245330618(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;

  v8 = type metadata accessor for Record.ID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v31 - v14;
  v36 = a4;
  v18 = *(_QWORD *)(a4 + 64);
  v17 = a4 + 64;
  v16 = v18;
  v35 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 32);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v30 = v35;
    *a1 = v36;
    a1[1] = v30;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v32 = -1 << *(_BYTE *)(v17 - 32);
  v33 = a1;
  v22 = 0;
  v23 = 0;
  v34 = (unint64_t)(63 - v19) >> 6;
  v31 = v34 - 1;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    sub_2452B792C(*(_QWORD *)(v36 + 48) + v29 * v25, (uint64_t)v12, type metadata accessor for Record.ID);
    sub_2452B7AB8((uint64_t)v12, (uint64_t)v15, type metadata accessor for Record.ID);
    result = sub_2452B7AB8((uint64_t)v15, a2, type metadata accessor for Record.ID);
    if (v23 == a3)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v34)
      goto LABEL_32;
    v27 = *(_QWORD *)(v35 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v34)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v34)
    goto LABEL_32;
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v34)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v34)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v32;
    a1 = v33;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v34)
    {
      v21 = 0;
      v22 = v31;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v35 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2453308D4(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_245330AD0(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 32 * v16);
    v21 = v20[1];
    v22 = v20[2];
    v23 = v20[3];
    *v11 = *v20;
    v11[1] = v21;
    v11[2] = v22;
    v11[3] = v23;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 4;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_245330CE8(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_245330EE8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_245330F70(_QWORD *a1)
{
  return sub_24532C9EC(0, a1[2], 0, a1);
}

uint64_t sub_245330F84(uint64_t a1)
{
  return sub_24532CBD4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_245330F98(_QWORD *a1)
{
  return sub_24532D064(0, a1[2], 0, a1, &qword_257450210, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_245330FCC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_245387FBC();
  __break(1u);
  return result;
}

uint64_t sub_2453310BC(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_245387B84();
    return sub_245387BB4();
  }
  return result;
}

unint64_t sub_245331144(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *i;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452E88);
    v3 = (_QWORD *)sub_245387FB0();
    for (i = (_QWORD *)(a1 + 40); ; i += 2)
    {
      v5 = *((_BYTE *)i - 8);
      v6 = *i;
      result = sub_2452C1F9C(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_QWORD *)(v3[7] + 8 * result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_245331218(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452E00);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (unsigned __int8 *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452470);
    v7 = (_QWORD *)sub_245387FB0();
    v8 = (uint64_t)&v5[*(int *)(v2 + 48)];
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_2452BC89C(v9, (uint64_t)v5, (uint64_t *)&unk_257452E00);
      v11 = *v5;
      result = sub_2452C219C(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v7[6] + result) = v11;
      v15 = v7[7];
      v16 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
      result = sub_2452B7AB8(v8, v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_245331384(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_245387CE0();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_245324830(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_245331418(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = sub_245387740();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v18 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  sub_24525C6C4(&qword_25744F6D0, v3, MEMORY[0x24BDCEA88]);
  v19 = sub_245387CE0();
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(_QWORD *)(v4 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v15(v12, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v16(v12, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v12, v2);
      sub_2453249DC((uint64_t)v9, v7);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v2);
      v14 += v18;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v16(v12, 1, 1, v2);
  }
  return v19;
}

uint64_t sub_2453315E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_24533302C();
  result = sub_245387CE0();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_245324C38(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_245331658(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  sub_2452B7DEC();
  result = sub_245387CE0();
  v10 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v5 = *(v4 - 3);
      v6 = *(v4 - 2);
      v7 = *(v4 - 1);
      v8 = *v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_245324D54(&v9, v5, v6, v7, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 4;
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

uint64_t sub_245331714(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_245387FBC();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MetadataRecordPredicate()
{
  uint64_t result;

  result = qword_257452DC0;
  if (!qword_257452DC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_245331844(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v24;
  unint64_t v25;
  _QWORD v26[2];
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v5 = type metadata accessor for Record.ID(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v29 = (uint64_t)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v34 = (uint64_t)v26 - v9;
  result = MEMORY[0x24BEE4AF8];
  v35 = MEMORY[0x24BEE4AF8];
  v31 = *(_QWORD *)(a1 + 16);
  if (!v31)
    return result;
  v26[1] = v2;
  v11 = 0;
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v32 = *(_QWORD *)(v8 + 72);
  v28 = v12;
  v30 = a1 + v12;
  v27 = (_QWORD *)(a2 + 56);
  v13 = MEMORY[0x24BEE4AF8];
  v14 = type metadata accessor for Record.ID;
  v33 = a2;
  while (1)
  {
    v15 = v14;
    sub_2452B792C(v30 + v32 * v11, v34, v14);
    v16 = *(_QWORD *)(a2 + 16);
    if (!v16)
      goto LABEL_20;
    v17 = *(_QWORD *)(v34 + 32);
    v18 = *(_QWORD *)(v34 + 40);
    if (*(_QWORD *)(v33 + 32) != v17 || *(_QWORD *)(v33 + 40) != v18)
    {
      result = sub_245388274();
      if ((result & 1) == 0)
        break;
    }
LABEL_3:
    v14 = v15;
    sub_2452B7B5C(v34, v15);
LABEL_4:
    ++v11;
    a2 = v33;
    if (v11 == v31)
      return v35;
  }
  if (v16 == 1)
  {
LABEL_20:
    v14 = v15;
    sub_2452B7AB8(v34, v29, v15);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_24532C528(0, *(_QWORD *)(v13 + 16) + 1, 1);
    v13 = v35;
    v25 = *(_QWORD *)(v35 + 16);
    v24 = *(_QWORD *)(v35 + 24);
    if (v25 >= v24 >> 1)
    {
      sub_24532C528(v24 > 1, v25 + 1, 1);
      v13 = v35;
    }
    *(_QWORD *)(v13 + 16) = v25 + 1;
    sub_2452B7AB8(v29, v13 + v28 + v25 * v32, v15);
    goto LABEL_4;
  }
  v20 = v27;
  v21 = 1;
  while (1)
  {
    v22 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (*(v20 - 1) == v17 && *v20 == v18)
      goto LABEL_3;
    result = sub_245388274();
    if ((result & 1) != 0)
      goto LABEL_3;
    v20 += 2;
    ++v21;
    if (v22 == v16)
      goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_245331AA8(_QWORD *a1)
{
  uint64_t v1;

  return sub_245322ADC(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(uint64_t **)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t sub_245331ACC(uint64_t a1)
{
  uint64_t v1;

  return sub_245323238(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_245331AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_24532304C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_245331B00(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_245323458(a1, a2, v2[4], v2[2], v2[3]) & 1;
}

uint64_t sub_245331B20(unint64_t *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_245321EA8(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

_QWORD *initializeBufferWithCopyOfBuffer for MetadataRecordPredicate(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;
  int *v32;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v18 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v18 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    *(_QWORD *)(a1 + 8) = a2[1];
    v5 = *(int *)(a3 + 32);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_245387740();
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
    v32 = (int *)type metadata accessor for PairingRelationship();
    v10 = v32[5];
    v11 = v6 + v10;
    v12 = (_QWORD *)(v7 + v10);
    v13 = *(_QWORD *)(v7 + v10 + 8);
    *(_QWORD *)v11 = *(_QWORD *)(v7 + v10);
    *(_QWORD *)(v11 + 8) = v13;
    v14 = *(_QWORD *)(v7 + v10 + 24);
    *(_QWORD *)(v11 + 16) = *(_QWORD *)(v7 + v10 + 16);
    *(_QWORD *)(v11 + 24) = v14;
    *(_OWORD *)(v11 + 32) = *(_OWORD *)(v7 + v10 + 32);
    *(_BYTE *)(v11 + 48) = *(_BYTE *)(v7 + v10 + 48);
    *(_OWORD *)(v11 + 56) = *(_OWORD *)(v7 + v10 + 56);
    *(_OWORD *)(v11 + 72) = *(_OWORD *)(v7 + v10 + 72);
    *(_WORD *)(v11 + 88) = *(_WORD *)(v7 + v10 + 88);
    v15 = *(_QWORD *)(v7 + v10 + 104);
    *(_QWORD *)(v11 + 96) = *(_QWORD *)(v7 + v10 + 96);
    *(_QWORD *)(v11 + 104) = v15;
    v16 = (uint64_t *)(v7 + v10 + 112);
    v17 = *(_QWORD *)(v7 + v10 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17 >> 60 == 15)
    {
      *(_OWORD *)(v11 + 112) = *(_OWORD *)v16;
    }
    else
    {
      v19 = *v16;
      sub_245261C44(*v16, v17);
      *(_QWORD *)(v11 + 112) = v19;
      *(_QWORD *)(v11 + 120) = v17;
    }
    v20 = v12[17];
    *(_QWORD *)(v11 + 128) = v12[16];
    *(_QWORD *)(v11 + 136) = v20;
    v21 = v12[19];
    *(_QWORD *)(v11 + 144) = v12[18];
    *(_QWORD *)(v11 + 152) = v21;
    v22 = v32[6];
    v23 = v6 + v22;
    v24 = v7 + v22;
    v25 = sub_2453876EC();
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(v23, v24, v25);
    v26(v6 + v32[7], v7 + v32[7], v25);
    v27 = v32[8];
    v28 = (_QWORD *)(v6 + v27);
    v29 = (_QWORD *)(v7 + v27);
    v30 = v29[1];
    if (v30 >= 3)
    {
      *v28 = *v29;
      v28[1] = v30;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v28 = *(_OWORD *)v29;
    }
    v26(v6 + v32[9], v7 + v32[9], v25);
  }
  return v3;
}

uint64_t destroy for MetadataRecordPredicate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (int *)type metadata accessor for PairingRelationship();
  v7 = v4 + v6[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v7 + 120);
  if (v8 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v7 + 112), v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = v4 + v6[6];
  v10 = sub_2453876EC();
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v12(v9, v10);
  v12(v4 + v6[7], v10);
  if (*(_QWORD *)(v4 + v6[8] + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t, uint64_t))v12)(v4 + v6[9], v10);
}

uint64_t initializeWithCopy for MetadataRecordPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  unint64_t v28;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(int *)(a3 + 32);
  v4 = a1 + v3;
  v5 = a2 + v3;
  v6 = sub_245387740();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  swift_bridgeObjectRetain();
  v7(v4, v5, v6);
  v8 = (int *)type metadata accessor for PairingRelationship();
  v9 = v8[5];
  v10 = v4 + v9;
  v11 = (_QWORD *)(v5 + v9);
  v12 = *(_QWORD *)(v5 + v9 + 8);
  *(_QWORD *)v10 = *(_QWORD *)(v5 + v9);
  *(_QWORD *)(v10 + 8) = v12;
  v13 = *(_QWORD *)(v5 + v9 + 24);
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v5 + v9 + 16);
  *(_QWORD *)(v10 + 24) = v13;
  *(_OWORD *)(v10 + 32) = *(_OWORD *)(v5 + v9 + 32);
  *(_BYTE *)(v10 + 48) = *(_BYTE *)(v5 + v9 + 48);
  *(_OWORD *)(v10 + 56) = *(_OWORD *)(v5 + v9 + 56);
  *(_OWORD *)(v10 + 72) = *(_OWORD *)(v5 + v9 + 72);
  *(_WORD *)(v10 + 88) = *(_WORD *)(v5 + v9 + 88);
  v14 = *(_QWORD *)(v5 + v9 + 104);
  *(_QWORD *)(v10 + 96) = *(_QWORD *)(v5 + v9 + 96);
  *(_QWORD *)(v10 + 104) = v14;
  v15 = (uint64_t *)(v5 + v9 + 112);
  v16 = *(_QWORD *)(v5 + v9 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16 >> 60 == 15)
  {
    *(_OWORD *)(v10 + 112) = *(_OWORD *)v15;
  }
  else
  {
    v17 = *v15;
    sub_245261C44(*v15, v16);
    *(_QWORD *)(v10 + 112) = v17;
    *(_QWORD *)(v10 + 120) = v16;
  }
  v18 = v11[17];
  *(_QWORD *)(v10 + 128) = v11[16];
  *(_QWORD *)(v10 + 136) = v18;
  v19 = v11[19];
  *(_QWORD *)(v10 + 144) = v11[18];
  *(_QWORD *)(v10 + 152) = v19;
  v20 = v8[6];
  v21 = v4 + v20;
  v22 = v5 + v20;
  v23 = sub_2453876EC();
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24(v21, v22, v23);
  v24(v4 + v8[7], v5 + v8[7], v23);
  v25 = v8[8];
  v26 = (_QWORD *)(v4 + v25);
  v27 = (_QWORD *)(v5 + v25);
  v28 = v27[1];
  if (v28 >= 3)
  {
    *v26 = *v27;
    v26[1] = v28;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
  }
  v24(v4 + v8[9], v5 + v8[9], v23);
  return a1;
}

uint64_t assignWithCopy for MetadataRecordPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)type metadata accessor for PairingRelationship();
  v11 = v10[5];
  v12 = v7 + v11;
  v13 = v8 + v11;
  *(_QWORD *)v12 = *(_QWORD *)(v8 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v8 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  v14 = *(_OWORD *)(v13 + 56);
  v15 = *(_OWORD *)(v13 + 72);
  *(_WORD *)(v12 + 88) = *(_WORD *)(v13 + 88);
  *(_OWORD *)(v12 + 72) = v15;
  *(_OWORD *)(v12 + 56) = v14;
  *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = (uint64_t *)(v13 + 112);
  v17 = *(_QWORD *)(v13 + 120);
  if (*(_QWORD *)(v12 + 120) >> 60 == 15)
  {
    if (v17 >> 60 != 15)
    {
      v18 = *v16;
      sub_245261C44(*v16, *(_QWORD *)(v13 + 120));
      *(_QWORD *)(v12 + 112) = v18;
      *(_QWORD *)(v12 + 120) = v17;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v17 >> 60 == 15)
  {
    sub_2452CAE18(v12 + 112);
LABEL_6:
    *(_OWORD *)(v12 + 112) = *(_OWORD *)v16;
    goto LABEL_8;
  }
  v19 = *v16;
  sub_245261C44(*v16, *(_QWORD *)(v13 + 120));
  v20 = *(_QWORD *)(v12 + 112);
  v21 = *(_QWORD *)(v12 + 120);
  *(_QWORD *)(v12 + 112) = v19;
  *(_QWORD *)(v12 + 120) = v17;
  sub_24525CB80(v20, v21);
LABEL_8:
  *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
  *(_QWORD *)(v12 + 136) = *(_QWORD *)(v13 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 144) = *(_QWORD *)(v13 + 144);
  *(_QWORD *)(v12 + 152) = *(_QWORD *)(v13 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = v10[6];
  v23 = v7 + v22;
  v24 = v8 + v22;
  v25 = sub_2453876EC();
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24);
  v26(v23, v24, v25);
  v26(v7 + v10[7], v8 + v10[7], v25);
  v27 = v10[8];
  v28 = (_QWORD *)(v7 + v27);
  v29 = (_QWORD *)(v8 + v27);
  v30 = *(_QWORD *)(v7 + v27 + 8);
  v31 = *(_QWORD *)(v8 + v27 + 8);
  if (v30 >= 3)
  {
    if (v31 >= 3)
    {
      *v28 = *v29;
      v28[1] = v29[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_245263F80((uint64_t)v28, (uint64_t *)&unk_257452DB0);
    goto LABEL_13;
  }
  if (v31 < 3)
  {
LABEL_13:
    *(_OWORD *)v28 = *(_OWORD *)v29;
    goto LABEL_15;
  }
  *v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
LABEL_15:
  v26(v7 + v10[9], v8 + v10[9], v25);
  return a1;
}

uint64_t initializeWithTake for MetadataRecordPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 32);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  v8 = (int *)type metadata accessor for PairingRelationship();
  v9 = v8[5];
  v10 = (_OWORD *)(v5 + v9);
  v11 = (_OWORD *)(v6 + v9);
  v12 = v11[7];
  v10[6] = v11[6];
  v10[7] = v12;
  v13 = v11[9];
  v10[8] = v11[8];
  v10[9] = v13;
  v14 = v11[3];
  v10[2] = v11[2];
  v10[3] = v14;
  v15 = v11[5];
  v10[4] = v11[4];
  v10[5] = v15;
  v16 = v11[1];
  *v10 = *v11;
  v10[1] = v16;
  v17 = v8[6];
  v18 = v5 + v17;
  v19 = v6 + v17;
  v20 = sub_2453876EC();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
  v21(v18, v19, v20);
  v21(v5 + v8[7], v6 + v8[7], v20);
  *(_OWORD *)(v5 + v8[8]) = *(_OWORD *)(v6 + v8[8]);
  v21(v5 + v8[9], v6 + v8[9], v20);
  return a1;
}

uint64_t assignWithTake for MetadataRecordPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)type metadata accessor for PairingRelationship();
  v11 = v10[5];
  v12 = v7 + v11;
  v13 = v8 + v11;
  v14 = *(_QWORD *)(v8 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(v8 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_OWORD *)(v12 + 56) = *(_OWORD *)(v13 + 56);
  *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
  *(_WORD *)(v12 + 88) = *(_WORD *)(v13 + 88);
  *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  swift_bridgeObjectRelease();
  v16 = (_OWORD *)(v13 + 112);
  v17 = *(_QWORD *)(v12 + 120);
  if (v17 >> 60 == 15)
    goto LABEL_4;
  v18 = *(_QWORD *)(v13 + 120);
  if (v18 >> 60 == 15)
  {
    sub_2452CAE18(v12 + 112);
LABEL_4:
    *(_OWORD *)(v12 + 112) = *v16;
    goto LABEL_6;
  }
  v19 = *(_QWORD *)(v12 + 112);
  *(_QWORD *)(v12 + 112) = *(_QWORD *)v16;
  *(_QWORD *)(v12 + 120) = v18;
  sub_24525CB80(v19, v17);
LABEL_6:
  v20 = *(_QWORD *)(v13 + 136);
  *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
  *(_QWORD *)(v12 + 136) = v20;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v13 + 152);
  *(_QWORD *)(v12 + 144) = *(_QWORD *)(v13 + 144);
  *(_QWORD *)(v12 + 152) = v21;
  swift_bridgeObjectRelease();
  v22 = v10[6];
  v23 = v7 + v22;
  v24 = v8 + v22;
  v25 = sub_2453876EC();
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 40);
  v26(v23, v24, v25);
  v26(v7 + v10[7], v8 + v10[7], v25);
  v27 = v10[8];
  v28 = (_QWORD *)(v7 + v27);
  v29 = (_QWORD *)(v8 + v27);
  if (*(_QWORD *)(v7 + v27 + 8) >= 3uLL)
  {
    v30 = v29[1];
    if (v30 >= 3)
    {
      *v28 = *v29;
      v28[1] = v30;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_245263F80((uint64_t)v28, (uint64_t *)&unk_257452DB0);
  }
  *(_OWORD *)v28 = *(_OWORD *)v29;
LABEL_11:
  v26(v7 + v10[9], v8 + v10[9], v25);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetadataRecordPredicate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2453326A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for PairingRelationship();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for MetadataRecordPredicate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_245332734(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = type metadata accessor for PairingRelationship();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2453327A8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PairingRelationship();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_24533282C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257452DE8;
  if (!qword_257452DE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257452DE0);
    result = MEMORY[0x2495330B0](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_257452DE8);
  }
  return result;
}

uint64_t sub_245332878(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_245387FBC();
  __break(1u);
  return result;
}

uint64_t sub_245332968(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257450000);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_245387FBC();
  __break(1u);
  return result;
}

uint64_t sub_245332A70(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 160 * a1 + 32;
    v6 = a3 + 160 * v4;
    if (v5 >= v6 || v5 + 160 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_245387FBC();
  __break(1u);
  return result;
}

uint64_t sub_245332B64(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_245387FBC();
  __break(1u);
  return result;
}

uint64_t sub_245332C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;

  v4 = sub_245387740();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a2;
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v15 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v19 = *(_QWORD *)(v5 + 72);
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    while (1)
    {
      v16(v13, v15, v4);
      v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v17(v13, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v13, v4);
      sub_2453249DC((uint64_t)v10, v8);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      v15 += v19;
      if (!--v14)
        goto LABEL_7;
    }
  }
  else
  {
    v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
LABEL_7:
    v17(v13, 1, 1, v4);
  }
  return v20;
}

uint64_t sub_245332E20(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_245387FBC();
  __break(1u);
  return result;
}

unint64_t sub_245332F24()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25744FFC0;
  if (!qword_25744FFC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_25744FFB0);
    v2 = sub_24525C6C4(&qword_25744F6C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    result = MEMORY[0x2495330B0](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25744FFC0);
  }
  return result;
}

unint64_t sub_245332FA0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2574502B0;
  if (!qword_2574502B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2574502B8);
    v2 = MEMORY[0x24BDCFB90];
    result = MEMORY[0x2495330B0](MEMORY[0x24BDD0790], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2574502B0);
  }
  return result;
}

uint64_t sub_245332FFC()
{
  return swift_deallocObject();
}

BOOL sub_24533300C(uint64_t a1)
{
  uint64_t *v1;

  return sub_2453238CC(a1, v1[4], v1[2], v1[3]);
}

unint64_t sub_24533302C()
{
  unint64_t result;

  result = qword_25744F748;
  if (!qword_25744F748)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for DeviceType, &type metadata for DeviceType);
    atomic_store(result, (unint64_t *)&qword_25744F748);
  }
  return result;
}

uint64_t sub_245333070(uint64_t a1, uint64_t a2)
{
  assignWithTake for ZoneVersionAdvertisement(a2, a1);
  return a2;
}

uint64_t sub_2453330AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_245387FBC();
  __break(1u);
  return result;
}

ReplicatorEngine::MessagePriority_optional __swiftcall MessagePriority.init(rawValue:)(Swift::UInt32 rawValue)
{
  char *v1;
  char v2;

  if (rawValue >= 3)
    v2 = 3;
  else
    v2 = rawValue;
  *v1 = v2;
  return (ReplicatorEngine::MessagePriority_optional)rawValue;
}

uint64_t MessagePriority.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void *static MessagePriority.allCases.getter()
{
  return &unk_25163FE08;
}

unint64_t sub_2453331E4()
{
  unint64_t result;

  result = qword_257452EC8;
  if (!qword_257452EC8)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for MessagePriority, &type metadata for MessagePriority);
    atomic_store(result, (unint64_t *)&qword_257452EC8);
  }
  return result;
}

ReplicatorEngine::MessagePriority_optional sub_245333228(Swift::UInt32 *a1)
{
  return MessagePriority.init(rawValue:)(*a1);
}

uint64_t sub_245333230()
{
  sub_245333404();
  return sub_245387C14();
}

uint64_t sub_24533328C()
{
  sub_245333404();
  return sub_245387BFC();
}

unint64_t sub_2453332DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257452ED0;
  if (!qword_257452ED0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257452ED8);
    result = MEMORY[0x2495330B0](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_257452ED0);
  }
  return result;
}

void sub_245333328(_QWORD *a1@<X8>)
{
  *a1 = &unk_25163FEC0;
}

uint64_t storeEnumTagSinglePayload for MessagePriority(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_245333384 + 4 * byte_24538DEB5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2453333B8 + 4 * asc_24538DEB0[v4]))();
}

uint64_t sub_2453333B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2453333C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2453333C8);
  return result;
}

uint64_t sub_2453333D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2453333DCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2453333E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2453333E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MessagePriority()
{
  return &type metadata for MessagePriority;
}

unint64_t sub_245333404()
{
  unint64_t result;

  result = qword_257452EE0;
  if (!qword_257452EE0)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for MessagePriority, &type metadata for MessagePriority);
    atomic_store(result, (unint64_t *)&qword_257452EE0);
  }
  return result;
}

uint64_t IDSDependencyDevice.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IDSDependencyDevice.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*IDSDependencyDevice.id.modify())()
{
  return nullsub_1;
}

ReplicatorEngine::IDSDependencyDevice __swiftcall IDSDependencyDevice.init(id:)(ReplicatorEngine::IDSDependencyDevice id)
{
  ReplicatorEngine::IDSDependencyDevice *v1;

  *v1 = id;
  return id;
}

_QWORD *initializeBufferWithCopyOfBuffer for IDSDependencyDevice(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for IDSDependencyDevice(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for IDSDependencyDevice(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IDSDependencyDevice(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IDSDependencyDevice(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSDependencyDevice()
{
  return &type metadata for IDSDependencyDevice;
}

uint64_t dispatch thunk of IDSDependency.accountsChanged.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of IDSDependency.devicesChanged.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of IDSDependency.localDeviceID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of IDSDependency.allDevices.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of IDSDependency.fetchLocalDeviceID(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of ActiveWatchIDSIDProviding.getActiveWatchIDSDeviceUniqueIDOverride(callBackQueue:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of ActiveWatchPairingEnforcing.init(pairingRelationshipManager:activeWatchIDSIDProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ActiveWatchPairingEnforcing.beginMonitoringActivePairedWatchDevice(activePairedWatchStateChanged:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of ActiveWatchPairingEnforcing.stopMonitoringActivePairedWatchDevice()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ActiveWatchPairingEnforcing.enforceOnlyActiveWatchPaired(watchPairingRelationships:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t sub_245333644(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

id sub_245333680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  _QWORD v14[2];

  v1 = v0;
  v2 = sub_245387D70();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_245387D4C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_245387950();
  MEMORY[0x24BDAC7A8](v7);
  v8 = *(void **)(v0 + 96);
  if (v8)
  {
    v9 = *(id *)(v0 + 96);
  }
  else
  {
    v14[0] = sub_24525C748();
    sub_245387944();
    v14[1] = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_257450050, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450020);
    sub_2452E0BF0((unint64_t *)&qword_257450030, (uint64_t *)&unk_257450020);
    sub_245387E3C();
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5758], v2);
    v10 = (void *)sub_245387D94();
    v11 = *(void **)(v0 + 96);
    *(_QWORD *)(v1 + 96) = v10;
    v9 = v10;

    v8 = 0;
  }
  v12 = v8;
  return v9;
}

void sub_245333864(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  NSObject *v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t aBlock;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t (*v33)(uint64_t);
  _QWORD *v34;

  v5 = *(_QWORD *)(v2 + 112);
  v6 = *(_QWORD *)(v5 + 16);
  v7 = MEMORY[0x24BDAC760];
  if (v6)
  {
    v28 = (id)objc_opt_self();
    swift_bridgeObjectRetain();
    v8 = 0;
    v9 = a1;
    do
    {
      v10 = *(void **)(v5 + 8 * v8++ + 32);
      v11 = v10;
      v12 = objc_msgSend(v28, sel_defaultCenter);
      v13 = swift_allocObject();
      swift_weakInit();
      v14 = (_QWORD *)swift_allocObject();
      v14[2] = v13;
      v14[3] = v9;
      v14[4] = a2;
      v33 = sub_245336E24;
      v34 = v14;
      aBlock = MEMORY[0x24BDAC760];
      v30 = 1107296256;
      v31 = sub_245334078;
      v32 = &block_descriptor_63_0;
      v15 = _Block_copy(&aBlock);
      v16 = v11;
      swift_retain();
      swift_release();
      v17 = objc_msgSend(v12, sel_addObserverForName_object_queue_usingBlock_, v16, 0, 0, v15);
      _Block_release(v15);
      swift_unknownObjectRelease();

    }
    while (v6 != v8);
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x24BDAC760];
    a1 = v9;
  }
  sub_245387B18();
  v18 = sub_245333680();
  v19 = swift_allocObject();
  swift_weakInit();
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v19;
  v20[3] = a1;
  v20[4] = a2;
  v33 = sub_245336E34;
  v34 = v20;
  aBlock = v7;
  v30 = 1107296256;
  v31 = sub_245333644;
  v32 = &block_descriptor_70;
  v21 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v22 = sub_245387B54();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  notify_register_dispatch((const char *)(v22 + 32), (int *)(v2 + 104), v18, v21);
  swift_endAccess();
  swift_release();
  _Block_release(v21);

  sub_245387B18();
  v23 = sub_245333680();
  v24 = swift_allocObject();
  swift_weakInit();
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = v24;
  v25[3] = a1;
  v25[4] = a2;
  v33 = sub_245336E5C;
  v34 = v25;
  aBlock = v7;
  v30 = 1107296256;
  v31 = sub_245333644;
  v32 = &block_descriptor_77;
  v26 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v27 = sub_245387B54();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  notify_register_dispatch((const char *)(v27 + 32), (int *)(v2 + 108), v23, v26);
  swift_endAccess();
  swift_release();
  _Block_release(v26);

}

uint64_t sub_245333C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v6 = sub_245387920();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_245387950();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v15 = result;
    v16 = (void *)sub_245387488();
    v17 = sub_245387B18();
    v27 = v7;
    v28 = v11;
    v18 = v17;
    v20 = v19;

    v21 = sub_245333680();
    v26 = v10;
    v22 = v21;
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = v18;
    v23[3] = v20;
    v23[4] = a3;
    v23[5] = a4;
    v23[6] = v15;
    aBlock[4] = sub_245336EB4;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24525DD34;
    aBlock[3] = &block_descriptor_83;
    v24 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    sub_245387938();
    v29 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    sub_2452E0BF0((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0);
    sub_245387E3C();
    MEMORY[0x2495320E4](0, v13, v9, v24);
    _Block_release(v24);
    swift_release();

    (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v26);
    return swift_release();
  }
  return result;
}

uint64_t sub_245333E9C(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  if (qword_25744FD90 != -1)
    swift_once();
  v6 = sub_245387818();
  __swift_project_value_buffer(v6, (uint64_t)qword_257462FB0);
  swift_bridgeObjectRetain_n();
  v7 = sub_2453877F4();
  v8 = sub_245387D34();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_bridgeObjectRetain();
    sub_2453816D8(a1, a2, &v14);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_245256000, v7, v8, "Paired watch state changed: \"%{public}s\", will check for pairing change", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v10, -1, -1);
    MEMORY[0x24953317C](v9, -1, -1);

  }
  else
  {

    v11 = swift_bridgeObjectRelease_n();
  }
  v12 = a3(v11);
  sub_245334568(v12, 0, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_245334078(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_245387494();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_24538747C();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_24533411C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, const char *a5)
{
  uint64_t result;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_25744FD90 != -1)
      swift_once();
    v8 = sub_245387818();
    __swift_project_value_buffer(v8, (uint64_t)qword_257462FB0);
    v9 = sub_2453877F4();
    v10 = sub_245387D34();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_245256000, v9, v10, a5, v11, 2u);
      MEMORY[0x24953317C](v11, -1, -1);
    }

    v12 = a3();
    sub_245334568(v12, 0, 0);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24533425C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v4 = 0;
    do
    {
      v5 = *(void **)(v1 + 8 * v4++ + 32);
      v6 = v5;
      v7 = objc_msgSend(v3, sel_defaultCenter);
      objc_msgSend(v7, sel_removeObserver_name_object_, v0, v6, 0);

    }
    while (v2 != v4);
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  notify_cancel(*(_DWORD *)(v0 + 104));
  swift_beginAccess();
  return notify_cancel(*(_DWORD *)(v0 + 108));
}

uint64_t sub_24533435C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  _QWORD *v14;
  void *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v7 = sub_245387920();
  v19 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_245387950();
  v10 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_245333680();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v3;
  v14[3] = a1;
  v14[4] = a2;
  v14[5] = a3;
  aBlock[4] = sub_245336DC4;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525DD34;
  aBlock[3] = &block_descriptor_54;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_245317690(a2);
  sub_245387938();
  v20 = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_2452E0BF0((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0);
  sub_245387E3C();
  MEMORY[0x2495320E4](0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v18);
  return swift_release();
}

uint64_t sub_245334568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  char v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  void (*v18)(id, void (*)(uint64_t), _QWORD *, uint64_t, uint64_t);
  uint64_t v19;

  v7 = sub_2453879D4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (id *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v10 = sub_245333680();
  (*(void (**)(id *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BEE5610], v7);
  v11 = sub_2453879F8();
  result = (*(uint64_t (**)(id *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) != 0)
  {
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a2;
    v13[3] = a3;
    v13[4] = v3;
    v14 = v3[10];
    v15 = v3[11];
    __swift_project_boxed_opaque_existential_1(v3 + 7, v14);
    sub_245317690(a2);
    swift_retain();
    v16 = sub_245333680();
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = v3;
    v17[3] = a1;
    v17[4] = sub_245336C3C;
    v17[5] = v13;
    v18 = *(void (**)(id, void (*)(uint64_t), _QWORD *, uint64_t, uint64_t))(v15 + 8);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v18(v16, sub_245336C80, v17, v14, v15);
    swift_release();

    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2453346F8(_QWORD *a1, char a2, void (*a3)(void), _QWORD *a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  _BOOL4 v24;
  uint64_t v25;
  uint8_t *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  void (*v32)(void);
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t *v36;
  _QWORD *v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  NSObject *v48;
  void *v49;
  os_log_type_t v50;
  uint8_t *v51;
  _QWORD *v52;
  id v53;
  uint64_t v54;
  __int128 v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  os_log_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint8_t *v93;
  os_log_t v94;
  int v95;
  void (*v96)(void);
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  __int128 v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  void (*v113)(void);
  uint64_t v114;
  uint64_t v115[2];

  v10 = type metadata accessor for PairingRelationship();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v108 = (char *)&v92 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v107 = (char *)&v92 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v92 - v18;
  if ((a2 & 1) != 0)
  {
    v44 = a1;
    if (qword_25744FD90 != -1)
      swift_once();
    v45 = sub_245387818();
    __swift_project_value_buffer(v45, (uint64_t)qword_257462FB0);
    v46 = a1;
    v47 = a1;
    v48 = sub_2453877F4();
    v49 = a1;
    v50 = sub_245387D34();
    if (os_log_type_enabled(v48, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      v52 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v51 = 138412290;
      v53 = v49;
      v54 = _swift_stdlib_bridgeErrorToNSError();
      v115[0] = v54;
      sub_245387E0C();
      *v52 = v54;
      sub_245336D70(v49, 1);
      sub_245336D70(v49, 1);
      _os_log_impl(&dword_245256000, v48, v50, "failed to get active watch pairing relationship. will try again later: %@", v51, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v52, -1, -1);
      MEMORY[0x24953317C](v51, -1, -1);

      if (!a3)
        goto LABEL_22;
    }
    else
    {
      sub_245336D70(v49, 1);
      sub_245336D70(v49, 1);

      if (!a3)
      {
LABEL_22:
        sub_245336D70(v49, 1);
        return;
      }
    }
    a3();
    goto LABEL_22;
  }
  v99 = v17;
  v106 = v16;
  v20 = qword_25744FD90;
  swift_bridgeObjectRetain();
  if (v20 != -1)
    goto LABEL_37;
  while (1)
  {
    v21 = sub_245387818();
    v22 = __swift_project_value_buffer(v21, (uint64_t)qword_257462FB0);
    sub_245336D7C(a1, 0);
    swift_bridgeObjectRetain();
    v104 = v22;
    v23 = sub_2453877F4();
    v95 = sub_245387D34();
    v24 = os_log_type_enabled(v23, (os_log_type_t)v95);
    v25 = MEMORY[0x24BEE4AD8];
    v109 = v10;
    v96 = a3;
    v98 = a4;
    v97 = a1;
    v101 = a5;
    if (!v24)
    {
      sub_245336D70(a1, 0);
      sub_245336D70(a1, 0);

      goto LABEL_24;
    }
    v94 = v23;
    v26 = (uint8_t *)swift_slowAlloc();
    v92 = swift_slowAlloc();
    v115[0] = v92;
    v93 = v26;
    *(_DWORD *)v26 = 136315138;
    v27 = a1;
    v28 = (_QWORD *)a1[2];
    v29 = MEMORY[0x24BEE4AF8];
    if (!v28)
      break;
    v114 = MEMORY[0x24BEE4AF8];
    sub_24532C6E8(0, (int64_t)v28, 0);
    v103 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450130);
    a5 = (_QWORD *)((char *)v27
                  + ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80)));
    v102 = *(_QWORD *)(v99 + 72);
    *(_QWORD *)&v100 = &v110;
    while (1)
    {
      v105 = v28;
      sub_245336C8C((uint64_t)a5, (uint64_t)v19);
      a1 = v19;
      v30 = &v19[*(int *)(v10 + 20)];
      v31 = (char *)*((_QWORD *)v30 + 3);
      v110 = *((_QWORD *)v30 + 2);
      v111 = v31;
      v32 = (void (*)(void))*((_QWORD *)v30 + 1);
      v112 = *(_QWORD *)v30;
      v113 = v32;
      a4 = (_QWORD *)sub_245387FB0();
      v10 = v110;
      v19 = v111;
      v33 = v112;
      a3 = v113;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v34 = sub_2452C1D98(v10, (uint64_t)v19);
      if ((v35 & 1) != 0)
        break;
      a4[(v34 >> 6) + 8] |= 1 << v34;
      v36 = (uint64_t *)(a4[6] + 16 * v34);
      *v36 = v10;
      v36[1] = (uint64_t)v19;
      v37 = (_QWORD *)(a4[7] + 16 * v34);
      *v37 = v33;
      v37[1] = a3;
      v38 = a4[2];
      v39 = __OFADD__(v38, 1);
      v40 = v38 + 1;
      if (v39)
        goto LABEL_36;
      a4[2] = v40;
      __swift_instantiateConcreteTypeFromMangledName(qword_257452EE8);
      swift_arrayDestroy();
      swift_release();
      v19 = (char *)a1;
      sub_245336CD0((uint64_t)a1);
      v29 = v114;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24532C6E8(0, *(_QWORD *)(v29 + 16) + 1, 1);
        v29 = v114;
      }
      v10 = v109;
      v41 = v105;
      v43 = *(_QWORD *)(v29 + 16);
      v42 = *(_QWORD *)(v29 + 24);
      if (v43 >= v42 >> 1)
      {
        sub_24532C6E8(v42 > 1, v43 + 1, 1);
        v29 = v114;
      }
      *(_QWORD *)(v29 + 16) = v43 + 1;
      *(_QWORD *)(v29 + 8 * v43 + 32) = a4;
      a5 = (_QWORD *)((char *)a5 + v102);
      v28 = (_QWORD *)((char *)v41 - 1);
      if (!v28)
      {
        a3 = v96;
        a5 = v101;
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    swift_once();
  }
LABEL_23:
  v56 = v93;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF50);
  v58 = MEMORY[0x249531F88](v29, v57);
  v60 = v59;
  swift_bridgeObjectRelease();
  v114 = sub_2453816D8(v58, v60, v115);
  sub_245387E0C();
  swift_bridgeObjectRelease();
  a1 = v97;
  sub_245336D70(v97, 0);
  sub_245336D70(a1, 0);
  v61 = v94;
  _os_log_impl(&dword_245256000, v94, (os_log_type_t)v95, "nonActiveWatchPairingRelationships:%s", v56, 0xCu);
  v25 = MEMORY[0x24BEE4AD8];
  v62 = v92;
  swift_arrayDestroy();
  MEMORY[0x24953317C](v62, -1, -1);
  MEMORY[0x24953317C](v56, -1, -1);

LABEL_24:
  v63 = v106;
  v64 = (uint64_t)v108;
  v65 = a1[2];
  if (v65)
  {
    v105 = a5 + 2;
    v66 = (uint64_t)a1 + ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80));
    v103 = *(_QWORD *)(v99 + 72);
    *(_QWORD *)&v55 = 136315394;
    v100 = v55;
    v99 = v25 + 8;
    v67 = (uint64_t)v107;
    do
    {
      sub_245336C8C(v66, v67);
      sub_245336C8C(v67, v64);
      sub_245336C8C(v67, v63);
      v77 = sub_2453877F4();
      v78 = sub_245387D34();
      if (os_log_type_enabled(v77, v78))
      {
        v79 = swift_slowAlloc();
        v102 = swift_slowAlloc();
        v115[0] = v102;
        *(_DWORD *)v79 = v100;
        v68 = v109;
        v80 = v64 + *(int *)(v109 + 20);
        v81 = v64;
        v82 = *(_QWORD *)(v80 + 16);
        v83 = *(_QWORD *)(v80 + 24);
        swift_bridgeObjectRetain();
        *(_QWORD *)(v79 + 4) = sub_2453816D8(v82, v83, v115);
        swift_bridgeObjectRelease();
        sub_245336CD0(v81);
        *(_WORD *)(v79 + 12) = 2080;
        v84 = (uint64_t *)(v63 + *(int *)(v68 + 20));
        v85 = *v84;
        v86 = v84[1];
        swift_bridgeObjectRetain();
        *(_QWORD *)(v79 + 14) = sub_2453816D8(v85, v86, v115);
        swift_bridgeObjectRelease();
        sub_245336CD0(v63);
        _os_log_impl(&dword_245256000, v77, v78, "removing non-active watch relationship \"%s\" %s", (uint8_t *)v79, 0x16u);
        v87 = v102;
        swift_arrayDestroy();
        MEMORY[0x24953317C](v87, -1, -1);
        v88 = v79;
        a5 = v101;
        MEMORY[0x24953317C](v88, -1, -1);

      }
      else
      {
        sub_245336CD0(v64);
        sub_245336CD0(v63);

        v68 = v109;
      }
      v69 = a5[5];
      v70 = a5[6];
      __swift_project_boxed_opaque_existential_1(v105, v69);
      v71 = (uint64_t)v107;
      v72 = &v107[*(int *)(v68 + 20)];
      v73 = *(_QWORD *)v72;
      v74 = *((_QWORD *)v72 + 1);
      v75 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 24);
      swift_bridgeObjectRetain();
      v76 = v69;
      v67 = v71;
      v75(v73, v74, v76, v70);
      swift_bridgeObjectRelease();
      sub_245336CD0(v71);
      v66 += v103;
      --v65;
      v63 = v106;
      v64 = (uint64_t)v108;
    }
    while (v65);
    sub_245336D70(v97, 0);
    v89 = a5[5];
    v90 = a5[6];
    __swift_project_boxed_opaque_existential_1(v105, v89);
    v91 = (*(uint64_t (**)(uint64_t, uint64_t))(v90 + 32))(v89, v90);
    if (v96)
      ((void (*)(uint64_t))v96)(v91);
  }
  else
  {
    sub_245336D70(a1, 0);
    if (a3)
      a3();
  }
}

void sub_245335058(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *, uint64_t), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char v19;
  void *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void (*v35)(void *, uint64_t);
  unint64_t *v36;

  v34 = a5;
  v35 = a4;
  v32 = a3;
  v6 = type metadata accessor for PairingRelationship();
  v33 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v32 - v10;
  v12 = sub_2453879D4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (id *)((char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(_QWORD *)a1;
  v17 = *(_QWORD *)(a1 + 8);
  v18 = *(unsigned __int8 *)(a1 + 16);
  *v15 = sub_245333680();
  (*(void (**)(id *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE5610], v12);
  v19 = sub_2453879F8();
  (*(void (**)(id *, uint64_t))(v13 + 8))(v15, v12);
  if ((v19 & 1) != 0)
  {
    if (v18)
    {
      sub_2452B9768();
      v20 = (void *)swift_allocError();
      *v21 = v16;
      v35(v20, 1);

    }
    else if (v17)
    {
      v22 = v32;
      swift_bridgeObjectRetain();
      sub_245336D50(v16, v17, 0);
      v23 = sub_2453367CC(v22, v16, v17);
      sub_245336D60(v16, v17, 0);
      swift_bridgeObjectRelease();
      v35((void *)v23, 0);
      swift_bridgeObjectRelease();
    }
    else
    {
      v24 = (unint64_t *)MEMORY[0x24BEE4AF8];
      v36 = (unint64_t *)MEMORY[0x24BEE4AF8];
      v25 = *(_QWORD *)(v32 + 16);
      v26 = swift_bridgeObjectRetain();
      if (v25)
      {
        v27 = *(_QWORD *)(v33 + 72);
        v33 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
        v28 = v26 + v33;
        v29 = (unint64_t *)MEMORY[0x24BEE4AF8];
        do
        {
          sub_245336C8C(v28, (uint64_t)v11);
          if (v11[*(int *)(v6 + 20) + 48] == 4)
          {
            sub_245336D0C((uint64_t)v11, (uint64_t)v9);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              sub_24532C554(0, v29[2] + 1, 1);
            v29 = v36;
            v31 = v36[2];
            v30 = v36[3];
            if (v31 >= v30 >> 1)
            {
              sub_24532C554(v30 > 1, v31 + 1, 1);
              v29 = v36;
            }
            v29[2] = v31 + 1;
            sub_245336D0C((uint64_t)v9, (uint64_t)v29 + v33 + v31 * v27);
          }
          else
          {
            sub_245336CD0((uint64_t)v11);
          }
          v28 += v27;
          --v25;
        }
        while (v25);
        v24 = v36;
      }
      swift_bridgeObjectRelease();
      v35(v24, 0);
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24533534C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActiveWatchPairingEnforcer()
{
  return objc_opt_self();
}

uint64_t sub_2453353A8@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;

  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = __swift_mutable_project_boxed_opaque_existential_1(a1, v7);
  v10 = sub_2453369D8(v9, a2, v3, v7, v8);
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  *a3 = v10;
  return result;
}

void sub_24533540C(uint64_t a1, uint64_t a2)
{
  sub_245333864(a1, a2);
}

uint64_t sub_24533542C()
{
  return sub_24533425C();
}

uint64_t sub_24533544C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24533435C(a1, a2, a3);
}

id sub_24533546C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  _QWORD v14[2];

  v1 = v0;
  v2 = sub_245387D70();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_245387D4C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_245387950();
  MEMORY[0x24BDAC7A8](v7);
  v8 = *(void **)(v0 + 16);
  if (v8)
  {
    v9 = *(id *)(v0 + 16);
  }
  else
  {
    v14[0] = sub_24525C748();
    sub_245387944();
    v14[1] = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_257450050, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450020);
    sub_2452E0BF0((unint64_t *)&qword_257450030, (uint64_t *)&unk_257450020);
    sub_245387E3C();
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5758], v2);
    v10 = (void *)sub_245387D94();
    v11 = *(void **)(v0 + 16);
    *(_QWORD *)(v1 + 16) = v10;
    v9 = v10;

    v8 = 0;
  }
  v12 = v8;
  return v9;
}

uint64_t sub_245335650(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v7 = sub_245387920();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v21 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_245387950();
  v11 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_24533546C();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v3;
  v15[3] = a1;
  v15[4] = a2;
  v15[5] = a3;
  aBlock[4] = sub_245336BFC;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525DD34;
  aBlock[3] = &block_descriptor_42;
  v16 = _Block_copy(aBlock);
  swift_retain();
  v17 = a1;
  swift_retain();
  sub_245387938();
  v22 = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_25744FF00, v8, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_2452E0BF0((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0);
  sub_245387E3C();
  MEMORY[0x2495320E4](0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
  return swift_release();
}

uint64_t sub_245335858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  char v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint8_t *v62;
  uint8_t *v63;
  uint64_t v64;
  void *v65;
  const void *v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint8_t *v71;
  uint8_t *v72;
  uint64_t v73;
  void *v74;
  uint64_t v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t aBlock;
  uint64_t v85;
  uint64_t (*v86)(uint64_t);
  void *v87;
  uint64_t (*v88)();
  _QWORD *v89;

  v80 = a1;
  v5 = sub_245387920();
  v81 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_245387950();
  v82 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2453879D4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (id *)((char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v14 = sub_24533546C();
  (*(void (**)(id *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5610], v11);
  v15 = sub_2453879F8();
  (*(void (**)(id *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_44;
  }
  v16 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (!v16)
  {
    if (qword_25744FD90 == -1)
    {
LABEL_10:
      v34 = sub_245387818();
      __swift_project_value_buffer(v34, (uint64_t)qword_257462FB0);
      v35 = sub_2453877F4();
      v36 = sub_245387D1C();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v37 = 0;
        _os_log_impl(&dword_245256000, v35, v36, "No NanoRegistry singleton", v37, 2u);
        MEMORY[0x24953317C](v37, -1, -1);
      }

      v38 = swift_allocObject();
      *(_QWORD *)(v38 + 16) = a2;
      *(_QWORD *)(v38 + 24) = a3;
      v88 = sub_245336AAC;
      v89 = (_QWORD *)v38;
      aBlock = MEMORY[0x24BDAC760];
      v85 = 1107296256;
      v86 = sub_24525DD34;
      v87 = &block_descriptor_11;
      v39 = _Block_copy(&aBlock);
      swift_retain();
      sub_245387938();
      v83 = MEMORY[0x24BEE4AF8];
      sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
      sub_2452E0BF0((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0);
      sub_245387E3C();
      MEMORY[0x2495320E4](0, v10, v7, v39);
      v40 = v39;
      goto LABEL_18;
    }
LABEL_44:
    swift_once();
    goto LABEL_10;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, sel_getActivePairedDeviceExcludingAltAccount);
  if (v18)
  {
    v19 = v18;
    v79 = v8;
    v20 = objc_allocWithZone(MEMORY[0x24BE4FCB8]);
    v21 = (void *)sub_245387AF4();
    v22 = objc_msgSend(v20, sel_initWithService_, v21);

    if (v22)
    {
      v23 = objc_msgSend(v22, sel_devices);
      if (v23)
      {
        v24 = v23;
        v25 = v19;
        v26 = objc_msgSend(v17, sel_deviceForNRDevice_fromIDSDevices_, v25, v24);

        if (v26)
        {
          v27 = objc_msgSend(v26, sel_uniqueIDOverride);
          v77 = v26;
          if (v27)
          {
            v28 = v27;
            v29 = sub_245387B18();
            v78 = v25;
            v31 = v30;

            v32 = (_QWORD *)swift_allocObject();
            v32[2] = a2;
            v32[3] = a3;
            v32[4] = v29;
            v32[5] = v31;
            v88 = sub_245336B78;
            v89 = v32;
            aBlock = MEMORY[0x24BDAC760];
            v85 = 1107296256;
            v86 = sub_24525DD34;
            v87 = &block_descriptor_36_0;
            v33 = _Block_copy(&aBlock);
            swift_retain();
            sub_245387938();
            v83 = MEMORY[0x24BEE4AF8];
            sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
            sub_2452E0BF0((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0);
            sub_245387E3C();
            MEMORY[0x2495320E4](0, v10, v7, v33);
            _Block_release(v33);

LABEL_41:
            (*(void (**)(char *, uint64_t))(v81 + 8))(v7, v5);
            (*(void (**)(char *, uint64_t))(v82 + 8))(v10, v79);
            return swift_release();
          }
          if (qword_25744FD90 != -1)
            swift_once();
          v67 = sub_245387818();
          __swift_project_value_buffer(v67, (uint64_t)qword_257462FB0);
          v68 = sub_2453877F4();
          v69 = sub_245387D1C();
          if (os_log_type_enabled(v68, v69))
          {
            v70 = (uint8_t *)swift_slowAlloc();
            v78 = v25;
            v71 = v70;
            *(_WORD *)v70 = 0;
            _os_log_impl(&dword_245256000, v68, v69, "Could not fetch IDS ID from activePairedDevice", v70, 2u);
            v72 = v71;
            v25 = v78;
            MEMORY[0x24953317C](v72, -1, -1);
          }

          v73 = swift_allocObject();
          *(_QWORD *)(v73 + 16) = a2;
          *(_QWORD *)(v73 + 24) = a3;
          v88 = sub_245336B08;
          v89 = (_QWORD *)v73;
          aBlock = MEMORY[0x24BDAC760];
          v85 = 1107296256;
          v86 = sub_24525DD34;
          v87 = &block_descriptor_30_0;
          v74 = _Block_copy(&aBlock);
          swift_retain();
          sub_245387938();
          v83 = MEMORY[0x24BEE4AF8];
          sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
          sub_2452E0BF0((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0);
          sub_245387E3C();
          MEMORY[0x2495320E4](0, v10, v7, v74);

          v66 = v74;
        }
        else
        {
          if (qword_25744FD90 != -1)
            swift_once();
          v58 = sub_245387818();
          __swift_project_value_buffer(v58, (uint64_t)qword_257462FB0);
          v59 = sub_2453877F4();
          v60 = sub_245387D1C();
          if (os_log_type_enabled(v59, v60))
          {
            v61 = (uint8_t *)swift_slowAlloc();
            v78 = v25;
            v62 = v61;
            *(_WORD *)v61 = 0;
            _os_log_impl(&dword_245256000, v59, v60, "Could not fetch device from activePairedDevice", v61, 2u);
            v63 = v62;
            v25 = v78;
            MEMORY[0x24953317C](v63, -1, -1);
          }

          v64 = swift_allocObject();
          *(_QWORD *)(v64 + 16) = a2;
          *(_QWORD *)(v64 + 24) = a3;
          v88 = sub_245336B08;
          v89 = (_QWORD *)v64;
          aBlock = MEMORY[0x24BDAC760];
          v85 = 1107296256;
          v86 = sub_24525DD34;
          v87 = &block_descriptor_24_2;
          v65 = _Block_copy(&aBlock);
          swift_retain();
          sub_245387938();
          v83 = MEMORY[0x24BEE4AF8];
          sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
          sub_2452E0BF0((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0);
          sub_245387E3C();
          MEMORY[0x2495320E4](0, v10, v7, v65);

          v66 = v65;
        }
        _Block_release(v66);

        goto LABEL_41;
      }
      if (qword_25744FD90 != -1)
        swift_once();
      v78 = v22;
      v53 = sub_245387818();
      __swift_project_value_buffer(v53, (uint64_t)qword_257462FB0);
      v54 = sub_2453877F4();
      v55 = sub_245387D1C();
      if (os_log_type_enabled(v54, v55))
      {
        v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v56 = 0;
        _os_log_impl(&dword_245256000, v54, v55, "IDSService has no devices", v56, 2u);
        MEMORY[0x24953317C](v56, -1, -1);
      }

      v57 = swift_allocObject();
      *(_QWORD *)(v57 + 16) = a2;
      *(_QWORD *)(v57 + 24) = a3;
      v88 = sub_245336AFC;
      v89 = (_QWORD *)v57;
      aBlock = MEMORY[0x24BDAC760];
      v85 = 1107296256;
      v86 = sub_24525DD34;
      v87 = &block_descriptor_18_1;
      v52 = _Block_copy(&aBlock);
      swift_retain();
      sub_245387938();
      v83 = MEMORY[0x24BEE4AF8];
      sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
      sub_2452E0BF0((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0);
      sub_245387E3C();
      MEMORY[0x2495320E4](0, v10, v7, v52);

    }
    else
    {
      if (qword_25744FD90 != -1)
        swift_once();
      v47 = sub_245387818();
      __swift_project_value_buffer(v47, (uint64_t)qword_257462FB0);
      v48 = sub_2453877F4();
      v49 = sub_245387D1C();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v50 = 0;
        _os_log_impl(&dword_245256000, v48, v49, "Could not create IDSService", v50, 2u);
        MEMORY[0x24953317C](v50, -1, -1);
      }

      v51 = swift_allocObject();
      *(_QWORD *)(v51 + 16) = a2;
      *(_QWORD *)(v51 + 24) = a3;
      v88 = sub_245336AFC;
      v89 = (_QWORD *)v51;
      aBlock = MEMORY[0x24BDAC760];
      v85 = 1107296256;
      v86 = sub_24525DD34;
      v87 = &block_descriptor_12_0;
      v52 = _Block_copy(&aBlock);
      swift_retain();
      sub_245387938();
      v83 = MEMORY[0x24BEE4AF8];
      sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
      sub_2452E0BF0((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0);
      sub_245387E3C();
      MEMORY[0x2495320E4](0, v10, v7, v52);

    }
    _Block_release(v52);

    goto LABEL_41;
  }
  if (qword_25744FD90 != -1)
    swift_once();
  v41 = sub_245387818();
  __swift_project_value_buffer(v41, (uint64_t)qword_257462FB0);
  v42 = sub_2453877F4();
  v43 = sub_245387D34();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v44 = 0;
    _os_log_impl(&dword_245256000, v42, v43, "No paired device from activePairedDevice", v44, 2u);
    MEMORY[0x24953317C](v44, -1, -1);
  }

  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = a2;
  *(_QWORD *)(v45 + 24) = a3;
  v88 = sub_245336AAC;
  v89 = (_QWORD *)v45;
  aBlock = MEMORY[0x24BDAC760];
  v85 = 1107296256;
  v86 = sub_24525DD34;
  v87 = &block_descriptor_6_1;
  v46 = _Block_copy(&aBlock);
  swift_retain();
  sub_245387938();
  v83 = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_2452E0BF0((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0);
  sub_245387E3C();
  MEMORY[0x2495320E4](0, v10, v7, v46);

  v40 = v46;
LABEL_18:
  _Block_release(v40);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v10, v8);
  return swift_release();
}

uint64_t sub_245336670()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActiveWatchIDSIDProvider()
{
  return objc_opt_self();
}

uint64_t sub_2453366B4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_245335650(a1, a2, a3);
}

_QWORD *sub_2453366D4(uint64_t a1, __int128 *a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a1, a4);
  a3[12] = 0;
  a3[13] = -1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574503B8);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24538A110;
  v11 = (void *)*MEMORY[0x24BE6B440];
  v12 = (void *)*MEMORY[0x24BE6B450];
  *(_QWORD *)(v10 + 32) = *MEMORY[0x24BE6B440];
  *(_QWORD *)(v10 + 40) = v12;
  v13 = (void *)*MEMORY[0x24BE6B420];
  v14 = (void *)*MEMORY[0x24BE6B428];
  *(_QWORD *)(v10 + 48) = *MEMORY[0x24BE6B420];
  *(_QWORD *)(v10 + 56) = v14;
  a3[14] = v10;
  sub_2452B7C5C(&v20, (uint64_t)(a3 + 2));
  sub_2452B7C5C(a2, (uint64_t)(a3 + 7));
  v15 = v11;
  v16 = v12;
  v17 = v13;
  v18 = v14;
  return a3;
}

uint64_t sub_2453367CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char *v21;
  BOOL v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a2;
  v31 = a3;
  v5 = type metadata accessor for PairingRelationship();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v29 = (uint64_t)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v27 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)v27 - v12;
  result = MEMORY[0x24BEE4AF8];
  v32 = MEMORY[0x24BEE4AF8];
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v16 = *(unsigned __int8 *)(v11 + 80);
    v17 = *(_QWORD *)(v11 + 72);
    v27[1] = v3;
    v28 = (v16 + 32) & ~v16;
    v18 = a1 + v28;
    v19 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      sub_245336C8C(v18, (uint64_t)v13);
      v20 = v13[*(int *)(v5 + 20) + 48];
      sub_245336C8C((uint64_t)v13, (uint64_t)v10);
      if (v20 != 4
        || ((v21 = &v10[*(int *)(v5 + 20)], *(_QWORD *)v21 == v30) ? (v22 = *((_QWORD *)v21 + 1) == v31) : (v22 = 0), v22))
      {
        sub_245336CD0((uint64_t)v10);
      }
      else
      {
        v23 = sub_245388274();
        sub_245336CD0((uint64_t)v10);
        if ((v23 & 1) == 0)
        {
          sub_245336D0C((uint64_t)v13, v29);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_24532C554(0, *(_QWORD *)(v19 + 16) + 1, 1);
          v19 = v32;
          v25 = *(_QWORD *)(v32 + 16);
          v24 = *(_QWORD *)(v32 + 24);
          v26 = v25 + 1;
          if (v25 >= v24 >> 1)
          {
            v27[0] = v25 + 1;
            sub_24532C554(v24 > 1, v25 + 1, 1);
            v26 = v27[0];
            v19 = v32;
          }
          *(_QWORD *)(v19 + 16) = v26;
          sub_245336D0C(v29, v19 + v28 + v25 * v17);
          goto LABEL_5;
        }
      }
      sub_245336CD0((uint64_t)v13);
LABEL_5:
      v18 += v17;
      if (!--v15)
        return v32;
    }
  }
  return result;
}

_QWORD *sub_2453369D8(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v14;

  v9 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActiveWatchPairingEnforcer();
  v12 = (_QWORD *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a4);
  return sub_2453366D4((uint64_t)v11, a2, v12, a4, a5);
}

uint64_t sub_245336A88()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t sub_245336AC8()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD *);
  _QWORD v3[2];
  char v4;

  v1 = *(uint64_t (**)(_QWORD *))(v0 + 16);
  v3[0] = 0;
  v3[1] = 0;
  v4 = 0;
  return v1(v3);
}

uint64_t sub_245336AFC()
{
  return sub_245336B14((__n128)xmmword_24538E080);
}

uint64_t sub_245336B08()
{
  return sub_245336B14((__n128)xmmword_24538E090);
}

uint64_t sub_245336B14(__n128 a1)
{
  uint64_t v1;
  uint64_t (*v2)(__n128 *);
  __n128 v4;
  char v5;

  v2 = *(uint64_t (**)(__n128 *))(v1 + 16);
  v4 = a1;
  v5 = 1;
  return v2(&v4);
}

uint64_t sub_245336B4C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_245336B78()
{
  _QWORD *v0;
  void (*v1)(_QWORD *);
  uint64_t v2;
  _QWORD v4[2];
  char v5;

  v1 = (void (*)(_QWORD *))v0[2];
  v2 = v0[5];
  v4[0] = v0[4];
  v4[1] = v2;
  v5 = 0;
  swift_bridgeObjectRetain();
  v1(v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_245336BC8()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_245336BFC()
{
  return sub_245336DD0(sub_245335858);
}

uint64_t sub_245336C08()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_245336C3C(_QWORD *a1, char a2)
{
  uint64_t v2;

  sub_2453346F8(a1, a2 & 1, *(void (**)(void))(v2 + 16), *(_QWORD **)(v2 + 24), *(_QWORD **)(v2 + 32));
}

uint64_t sub_245336C4C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_245336C80(uint64_t a1)
{
  uint64_t v1;

  sub_245335058(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void *, uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_245336C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PairingRelationship();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_245336CD0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PairingRelationship();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_245336D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PairingRelationship();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_245336D50(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_245336D60(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_245336D70(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

id sub_245336D7C(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

uint64_t sub_245336D88()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_245336DC4()
{
  return sub_245336DD0(sub_245334568);
}

uint64_t sub_245336DD0(uint64_t (*a1)(_QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[3], v1[4], v1[5]);
}

uint64_t sub_245336DFC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_245336E24(uint64_t a1)
{
  uint64_t *v1;

  return sub_245333C40(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_245336E34(uint64_t a1)
{
  uint64_t v1;

  return sub_24533411C(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32), "Paired watch did become active, will check for pairing change");
}

uint64_t sub_245336E5C(uint64_t a1)
{
  uint64_t v1;

  return sub_24533411C(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32), "Paired watch version changed, will check for pairing change");
}

uint64_t sub_245336E80()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_245336EB4()
{
  uint64_t v0;

  return sub_245333E9C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t SyncServiceConfiguration.init(networkServiceNames:idsServiceNames:deviceType:pairingRelationshipPublisher:temporaryFileURL:allowListStore:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, __int128 *a6@<X5>, uint64_t a7@<X8>)
{
  char v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;

  v11 = *a3;
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_BYTE *)(a7 + 16) = v11;
  v12 = (int *)type metadata accessor for SyncServiceConfiguration();
  *(_QWORD *)(a7 + v12[8]) = a4;
  v13 = a7 + v12[7];
  v14 = sub_2453875E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13, a5, v14);
  return sub_2452B7C5C(a6, a7 + v12[9]);
}

uint64_t type metadata accessor for SyncServiceConfiguration()
{
  uint64_t result;

  result = qword_25744F630;
  if (!qword_25744F630)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *static SyncServiceFactory.makeSyncService(configuration:)(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v15;
  unsigned __int8 v16[40];
  uint64_t v17[6];

  v2 = sub_245387D70();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_245387D4C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v6);
  v8 = sub_245387950();
  MEMORY[0x24BDAC7A8](v8);
  v15 = sub_24525C748();
  sub_245387944();
  v17[0] = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_257450050, v7, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450020);
  sub_24526381C((unint64_t *)&qword_257450030, (uint64_t *)&unk_257450020, MEMORY[0x24BEE12C8]);
  sub_245387E3C();
  (*(void (**)(unsigned __int8 *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5758], v2);
  v9 = (void *)sub_245387D94();
  v17[0] = MEMORY[0x24BEE4B00];
  v16[0] = 0;
  sub_2453372B0(v17, v16, a1, v9);
  v16[0] = 1;
  sub_2453372B0(v17, v16, a1, v9);
  v10 = v17[0];
  v11 = sub_245338950((unint64_t)a1, v9);
  v12 = type metadata accessor for SyncServiceConfiguration();
  sub_24525E4F0((uint64_t)&a1[*(int *)(v12 + 36)], (uint64_t)v17);
  sub_24525E4F0((uint64_t)v17, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FAB0);
  swift_allocObject();
  v13 = sub_245338A34(v10, v11, (uint64_t)v16);

  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v13;
}

void sub_2453372B0(uint64_t *a1, unsigned __int8 *a2, char *a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  uint64_t v35;

  v8 = sub_2453875E4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *((_QWORD *)a3 + 1);
  if (!*(_QWORD *)(v12 + 16))
  {
    __break(1u);
    goto LABEL_7;
  }
  v13 = *a2;
  v14 = sub_2452C2200(v13);
  if ((v15 & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v34 = v8;
  v16 = (uint64_t *)(*(_QWORD *)(v12 + 56) + 16 * v14);
  v17 = a4;
  v18 = *v16;
  v19 = v16[1];
  v20 = objc_allocWithZone((Class)type metadata accessor for ConcreteIDSDependency());
  swift_bridgeObjectRetain();
  sub_245319C04(v18, v19, v17);
  v22 = *(_QWORD *)a3;
  if (!*(_QWORD *)(*(_QWORD *)a3 + 16))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v23 = v21;
  v24 = sub_2452C2200(v13);
  if ((v25 & 1) != 0)
  {
    v26 = (uint64_t *)(*(_QWORD *)(v22 + 56) + 16 * v24);
    v27 = *v26;
    v28 = v26[1];
    v29 = type metadata accessor for SyncServiceConfiguration();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, &a3[*(int *)(v29 + 28)], v34);
    type metadata accessor for NetworkMessenger(0);
    v30 = swift_allocObject();
    swift_bridgeObjectRetain();
    v31 = v23;
    v32 = sub_245338324(v27, v28, (uint64_t)v11, (uint64_t)v31, v13, v30);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v35 = *a1;
    *a1 = 0x8000000000000000;
    sub_2453294FC(v32, v13, isUniquelyReferenced_nonNull_native);
    *a1 = v35;
    swift_release();

    swift_bridgeObjectRelease();
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_24533748C(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_2453374E8(a1);
    return swift_release();
  }
  return result;
}

void sub_2453374E8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_245387920();
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_245387950();
  v31 = *(_QWORD *)(v6 - 8);
  v32 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v30 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452CA0);
  v28 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v28 + 64);
  MEMORY[0x24BDAC7A8](v8);
  swift_beginAccess();
  v10 = v1[5];
  v12 = v1[9];
  v11 = v1[10];
  __swift_project_boxed_opaque_existential_1(v1 + 6, v12);
  v13 = *(int *)(type metadata accessor for Message() + 28);
  v29 = a1;
  v14 = (uint64_t *)(a1 + v13);
  v15 = *v14;
  v16 = v14[1];
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8);
  swift_bridgeObjectRetain();
  if ((v17(v15, v16, v12, v11) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_25744FD98 != -1)
      swift_once();
    v18 = sub_245387818();
    __swift_project_value_buffer(v18, (uint64_t)qword_257462FC8);
    v19 = sub_2453877F4();
    v20 = sub_245387D34();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_245256000, v19, v20, "Cannot receive messages from remote device ID not in allow list", v21, 2u);
      MEMORY[0x24953317C](v21, -1, -1);
    }

  }
  else
  {
    sub_2452BC89C(v29, (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_257452CA0);
    v22 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = v10;
    *(_QWORD *)(v23 + 24) = v2;
    sub_24533A298((uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22);
    aBlock[4] = sub_24533A2E0;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24525DD34;
    aBlock[3] = &block_descriptor_26_0;
    v24 = _Block_copy(aBlock);
    swift_retain();
    v25 = v30;
    sub_245387938();
    v36 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
    v26 = v33;
    v27 = v35;
    sub_245387E3C();
    MEMORY[0x2495320E4](0, v25, v26, v24);
    _Block_release(v24);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v27);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v32);
    swift_release();
  }
}

uint64_t sub_245337878(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_25744FD98 != -1)
      swift_once();
    v4 = sub_245387818();
    __swift_project_value_buffer(v4, (uint64_t)qword_257462FC8);
    swift_retain_n();
    v5 = sub_2453877F4();
    v6 = sub_245387D34();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v37 = v32;
      *(_DWORD *)v7 = 136446466;
      v8 = a2 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency;
      sub_24525E4F0(a2 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency, (uint64_t)v34);
      v9 = v35;
      v10 = v36;
      __swift_project_boxed_opaque_existential_1(v34, v35);
      v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
      if (v12)
        v13 = v11;
      else
        v13 = 0x6F2D64656E676973;
      if (v12)
        v14 = v12;
      else
        v14 = 0xEA00000000007475;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      v34[0] = sub_2453816D8(v13, v14, &v37);
      sub_245387E0C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      sub_24525E4F0(v8, (uint64_t)v34);
      v15 = v35;
      v16 = v36;
      __swift_project_boxed_opaque_existential_1(v34, v35);
      v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 32))(v15, v16);
      v18 = *(_QWORD *)(v17 + 16);
      if (v18)
      {
        v29 = v6;
        v30 = v7;
        v31 = v5;
        v33 = MEMORY[0x24BEE4AF8];
        sub_24532C668(0, v18, 0);
        v19 = v33;
        v20 = (uint64_t *)(v17 + 40);
        do
        {
          v21 = *(v20 - 1);
          v22 = *v20;
          v23 = *(_QWORD *)(v33 + 16);
          v24 = *(_QWORD *)(v33 + 24);
          swift_bridgeObjectRetain();
          if (v23 >= v24 >> 1)
            sub_24532C668(v24 > 1, v23 + 1, 1);
          v20 += 2;
          *(_QWORD *)(v33 + 16) = v23 + 1;
          v25 = v33 + 16 * v23;
          *(_QWORD *)(v25 + 32) = v21;
          *(_QWORD *)(v25 + 40) = v22;
          --v18;
        }
        while (v18);
        swift_bridgeObjectRelease();
        v5 = v31;
        v7 = v30;
        v6 = v29;
      }
      else
      {
        swift_bridgeObjectRelease();
        v19 = MEMORY[0x24BEE4AF8];
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      swift_release();
      v26 = MEMORY[0x249531F88](v19, MEMORY[0x24BEE0D00]);
      v28 = v27;
      swift_bridgeObjectRelease();
      v34[0] = sub_2453816D8(v26, v28, &v37);
      sub_245387E0C();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v5, v6, "[%{public}s] Account associated devices changed: %{public}s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v32, -1, -1);
      MEMORY[0x24953317C](v7, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    sub_245337C28(a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_245337C28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t result;
  void *v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[3];
  void *v31;
  uint64_t (*v32)();
  _QWORD *v33;

  v2 = v1;
  v4 = sub_245387920();
  v28 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_245387950();
  v7 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2453879D4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(v2 + 16);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEE5610], v10);
  v15 = v14;
  LOBYTE(v14) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0)
  {
    sub_24525E4F0(a1 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency, (uint64_t)aBlock);
    v17 = v31;
    v18 = v32;
    __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v31);
    v19 = (*((uint64_t (**)(void *, uint64_t (*)()))v18 + 4))(v17, v18);
    v20 = sub_24533CF98(v19);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    v21 = sub_245331384(v20);
    v22 = swift_bridgeObjectRelease();
    MEMORY[0x24BDAC7A8](v22);
    *(&v27 - 2) = v21;
    v23 = swift_bridgeObjectRetain();
    sub_2453387C0(v23, (void (*)(_BYTE *, uint64_t *))sub_245339B18);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v24 = *(_QWORD *)(v2 + 40);
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = v24;
    v25[3] = v2;
    v25[4] = v21;
    v32 = sub_245339B5C;
    v33 = v25;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24525DD34;
    v31 = &block_descriptor_12;
    v26 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_245387938();
    v29 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
    sub_245387E3C();
    MEMORY[0x2495320E4](0, v9, v6, v26);
    _Block_release(v26);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v27);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_245337F80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t (*v16)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_2453875E4();
  result = MEMORY[0x24BDAC7A8](v29);
  v25 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v28 = v10;
    swift_bridgeObjectRetain();
    v24 = a1;
    v13 = (uint64_t *)(a1 + 40);
    v26 = v8;
    v27 = a3;
    while (1)
    {
      v14 = *v13;
      ObjectType = swift_getObjectType();
      v16 = *(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v14 + 24);
      swift_unknownObjectRetain();
      if ((v16(a2, &off_251640FF8, a3, ObjectType, v14) & 1) != 0)
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452CA0);
        sub_2452BC89C(a3 + *(int *)(v17 + 28), (uint64_t)v8, &qword_25744F610);
        v18 = v28;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v8, 1, v29) != 1)
        {
          v19 = a2;
          v20 = v29;
          v21 = v25;
          (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v25, v26, v29);
          (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, char *, uint64_t, uint64_t))(v14 + 16))(v19, &off_251640FF8, v27, v21, ObjectType, v14);
          swift_unknownObjectRelease();
          v22 = v21;
          v23 = v20;
          a2 = v19;
          v8 = v26;
          a3 = v27;
          (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v23);
          goto LABEL_5;
        }
        sub_245263F80((uint64_t)v8, &qword_25744F610);
        (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v14 + 8))(a2, &off_251640FF8, a3, ObjectType, v14);
      }
      swift_unknownObjectRelease();
LABEL_5:
      v13 += 2;
      if (!--v12)
        return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_245338190(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *i;
  _QWORD *v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    for (i = (uint64_t *)(swift_bridgeObjectRetain() + 40); ; i += 2)
    {
      v8 = *i;
      v9 = *(_QWORD *)(a3 + 16);
      if (v9)
      {
        v13 = *i;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25744F670);
        v6 = (_QWORD *)swift_allocObject();
        v10 = _swift_stdlib_malloc_size(v6);
        v11 = v10 - 32;
        if (v10 < 32)
          v11 = v10 - 17;
        v6[2] = v9;
        v6[3] = 2 * (v11 >> 4);
        v14 = sub_2453308D4((uint64_t)&v15, v6 + 4, v9, a3);
        swift_bridgeObjectRetain_n();
        swift_unknownObjectRetain();
        result = sub_2452ECE70();
        if (v14 != v9)
        {
          __break(1u);
          return result;
        }
        swift_bridgeObjectRelease();
        v8 = v13;
      }
      else
      {
        swift_unknownObjectRetain();
        v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, _UNKNOWN **, _QWORD *, uint64_t, uint64_t))(v8 + 32))(a2, &off_251640FF8, v6, ObjectType, v8);
      swift_unknownObjectRelease();
      swift_release();
      if (!--v3)
        return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_245338324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  void *v28;
  _QWORD v30[5];
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  _QWORD aBlock[6];
  _QWORD v38[6];

  v32 = a3;
  v33 = a1;
  v34 = a2;
  v35 = a5 & 1;
  v36 = a5;
  v8 = sub_245387D70();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v31 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_245387D4C();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v11);
  v13 = sub_245387950();
  MEMORY[0x24BDAC7A8](v13);
  v38[3] = type metadata accessor for ConcreteIDSDependency();
  v38[4] = &off_251641590;
  v38[0] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FEB0);
  swift_allocObject();
  *(_QWORD *)(a6 + 16) = sub_245387884();
  v30[4] = sub_24525C748();
  sub_245387944();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  v30[2] = sub_24525C6C4((unint64_t *)&unk_257450050, v12, MEMORY[0x24BEE5698]);
  v30[1] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450020);
  v30[3] = sub_24526381C((unint64_t *)&qword_257450030, (uint64_t *)&unk_257450020, MEMORY[0x24BEE12C8]);
  sub_245387E3C();
  v14 = *MEMORY[0x24BEE5758];
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v16 = v31;
  v15(v31, v14, v8);
  *(_QWORD *)(a6 + 24) = sub_245387D94();
  sub_245387944();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_245387E3C();
  v15(v16, v14, v8);
  v17 = v32;
  *(_QWORD *)(a6 + 32) = sub_245387D94();
  *(_QWORD *)(a6 + 40) = 0;
  v18 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(a6 + 48) = 0;
  *(_QWORD *)(a6 + 56) = v18;
  *(_QWORD *)(a6 + 64) = v18;
  *(_QWORD *)(a6 + 72) = v18;
  type metadata accessor for BasicTimer();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440BFA0);
  v20 = swift_allocObject();
  *(_DWORD *)(v20 + 16) = 0;
  *(_QWORD *)(v19 + 24) = v20;
  *(_QWORD *)(a6 + 80) = v19;
  *(_DWORD *)(a6 + 88) = -1;
  *(_QWORD *)(a6 + 96) = 0;
  *(_QWORD *)(a6 + 104) = 0;
  v21 = OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_terminusRemoteDeviceIDLock;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2574500D0);
  v22 = swift_allocObject();
  *(_QWORD *)(a6 + v21) = v22;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_subscriptions) = MEMORY[0x24BEE4B08];
  *(_DWORD *)(v22 + 32) = 0;
  *(_QWORD *)(v22 + 16) = 0xD000000000000023;
  *(_QWORD *)(v22 + 24) = 0x8000000245394DD0;
  v23 = v34;
  *(_QWORD *)(a6 + 120) = v33;
  *(_QWORD *)(a6 + 128) = v23;
  v24 = a6 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_temporaryFileURL;
  v25 = sub_2453875E4();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v24, v17, v25);
  sub_24525E4F0((uint64_t)v38, a6 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency);
  *(_BYTE *)(a6 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_connectionType) = v35;
  type metadata accessor for ConnectionDurationMonitor();
  swift_allocObject();
  *(_QWORD *)(a6 + 112) = sub_2452E76A0();
  v27 = *(NSObject **)(a6 + 24);
  aBlock[4] = sub_24533A314;
  aBlock[5] = a6;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_245308370;
  aBlock[3] = &block_descriptor_29_0;
  v28 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  xpc_set_event_stream_handler("com.apple.rapport.matching", v27, v28);
  _Block_release(v28);
  if ((v36 & 1) != 0)
    sub_2452FB924(*(_QWORD *)(a6 + 24));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v17, v25);
  return a6;
}

uint64_t sub_2453387C0(uint64_t a1, void (*a2)(_BYTE *, uint64_t *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  _BYTE v17[8];
  uint64_t v18;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      return swift_release();
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v8)
        return swift_release();
      v15 = *(_QWORD *)(v4 + 8 * v10);
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v8)
          return swift_release();
        v15 = *(_QWORD *)(v4 + 8 * v10);
        if (!v15)
        {
          v10 = v14 + 3;
          if (v14 + 3 >= v8)
            return swift_release();
          v15 = *(_QWORD *)(v4 + 8 * v10);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v12 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_5:
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v12);
    v17[0] = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v12);
    v18 = v13;
    swift_retain();
    a2(v17, &v18);
    result = swift_release();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
    return swift_release();
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v10 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v15 = *(_QWORD *)(v4 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_245338950(unint64_t result, void *a2)
{
  unint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v3 = result;
  v4 = *(_QWORD *)result;
  if (*(_QWORD *)(*(_QWORD *)result + 16))
  {
    result = sub_2452C2200(0);
    if ((v5 & 1) != 0)
    {
      v6 = (uint64_t *)(*(_QWORD *)(v4 + 56) + 16 * result);
      v8 = *v6;
      v7 = v6[1];
      v9 = *(_BYTE *)(v3 + 16);
      type metadata accessor for NetworkBrowser();
      v10 = swift_allocObject();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440BFA0);
      v11 = swift_allocObject();
      *(_DWORD *)(v11 + 16) = 0;
      v12 = MEMORY[0x24BEE4B00];
      *(_QWORD *)(v10 + 56) = 0;
      *(_QWORD *)(v10 + 64) = v12;
      *(_QWORD *)(v10 + 72) = 0;
      *(_QWORD *)(v10 + 80) = v12;
      *(_QWORD *)(v10 + 32) = v8;
      *(_QWORD *)(v10 + 40) = v7;
      *(_QWORD *)(v10 + 16) = v11;
      *(_QWORD *)(v10 + 24) = a2;
      *(_BYTE *)(v10 + 48) = v9;
      swift_bridgeObjectRetain();
      v13 = a2;
      return v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_245338A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[5];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = v3;
  v23 = a2;
  v24 = a3;
  v22 = a1;
  v5 = sub_245387D70();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_245387D4C();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v10);
  v12 = sub_245387950();
  MEMORY[0x24BDAC7A8](v12);
  v21[4] = sub_24525C748();
  sub_245387944();
  v25 = MEMORY[0x24BEE4AF8];
  v21[3] = sub_24525C6C4((unint64_t *)&unk_257450050, v11, MEMORY[0x24BEE5698]);
  v21[2] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450020);
  v21[1] = sub_24526381C((unint64_t *)&qword_257450030, (uint64_t *)&unk_257450020, MEMORY[0x24BEE12C8]);
  sub_245387E3C();
  v13 = *MEMORY[0x24BEE5758];
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v14(v9, v13, v7);
  v4[2] = sub_245387D94();
  sub_245387944();
  v25 = MEMORY[0x24BEE4AF8];
  sub_245387E3C();
  v14(v9, v13, v7);
  v4[3] = sub_245387D94();
  v4[4] = 0;
  v15 = MEMORY[0x24BEE4AF8];
  v4[5] = MEMORY[0x24BEE4AF8];
  v4[12] = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440BFA0);
  v16 = swift_allocObject();
  *(_DWORD *)(v16 + 16) = 0;
  v4[13] = v16;
  v4[14] = 0;
  v17 = v22;
  v18 = v23;
  v4[11] = v22;
  v4[4] = v18;
  swift_bridgeObjectRetain();
  swift_retain();
  v19 = v24;
  sub_24525E4F0(v24, (uint64_t)(v4 + 6));
  sub_2453387C0(v17, (void (*)(_BYTE *, uint64_t *))sub_2453394B4);
  __swift_destroy_boxed_opaque_existential_1(v19);
  return v4;
}

uint64_t initializeBufferWithCopyOfBuffer for SyncServiceConfiguration(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = a3[7];
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_2453875E4();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[9];
    *(_QWORD *)(v7 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    v14 = v7 + v13;
    v15 = (uint64_t)a2 + v13;
    v16 = *(_OWORD *)(v15 + 24);
    *(_OWORD *)(v7 + v13 + 24) = v16;
    v17 = v16;
    v18 = **(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8);
    swift_retain();
    v18(v14, v15, v17);
  }
  return v7;
}

uint64_t destroy for SyncServiceConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_2453875E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 36));
}

uint64_t initializeWithCopy for SyncServiceConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2453875E4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_OWORD *)(v14 + 24);
  *(_OWORD *)(a1 + v12 + 24) = v15;
  v16 = v15;
  v17 = **(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8);
  swift_retain();
  v17(v13, v14, v16);
  return a1;
}

uint64_t assignWithCopy for SyncServiceConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2453875E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[9]), (uint64_t *)(a2 + a3[9]));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t initializeWithTake for SyncServiceConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2453875E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  return a1;
}

uint64_t assignWithTake for SyncServiceConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2453875E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_release();
  v10 = a3[9];
  v11 = a1 + v10;
  v12 = a2 + v10;
  __swift_destroy_boxed_opaque_existential_1(a1 + v10);
  v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncServiceConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_245339304(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2453875E4();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SyncServiceConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_24533938C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_2453875E4();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_245339400()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2453875E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncServiceFactory()
{
  return &type metadata for SyncServiceFactory;
}

_UNKNOWN **sub_2453394A8()
{
  return &off_251640FF8;
}

uint64_t sub_2453394B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_2453394C0(*a2, v2);
}

uint64_t sub_2453394C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48[3];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52[3];
  uint64_t v53;
  uint64_t v54;

  v35 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FDC0);
  v5 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  v44 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FE38);
  v8 = *(_QWORD *)(v7 - 8);
  v45 = v7;
  v46 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450060);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FDD8);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52[0] = *(id *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FEB0);
  sub_24526381C(&qword_25744FEA8, &qword_25744FEB0, MEMORY[0x24BDB9CB0]);
  v52[0] = (id)sub_24538789C();
  v48[0] = *(id *)(a2 + 16);
  v17 = v48[0];
  v34 = sub_245387D64();
  v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
  v40(v12, 1, 1, v34);
  v39 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FE50);
  v36 = sub_24525C748();
  sub_24526381C(&qword_25744FE48, &qword_25744FE50, MEMORY[0x24BDB9AF8]);
  v37 = sub_24525C6C4((unint64_t *)&unk_257450070, (uint64_t (*)(uint64_t))sub_24525C748, MEMORY[0x24BEE5670]);
  sub_2453878B4();
  sub_245263F80((uint64_t)v12, (uint64_t *)&unk_257450060);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_24526381C((unint64_t *)&unk_25744FDC8, &qword_25744FDD8, MEMORY[0x24BDB9A08]);
  sub_2453878C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  swift_beginAccess();
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FFD0);
  sub_24526381C(&qword_25744FFD8, &qword_25744FFD0, MEMORY[0x24BEE12E8]);
  sub_24538786C();
  swift_endAccess();
  swift_release();
  v18 = v35;
  v19 = v35 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency;
  sub_24525E4F0(v35 + OBJC_IVAR____TtC16ReplicatorEngine16NetworkMessenger_idsDependency, (uint64_t)v52);
  v20 = v53;
  v21 = v54;
  __swift_project_boxed_opaque_existential_1(v52, v53);
  v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
  sub_24525E4F0(v19, (uint64_t)v48);
  v22 = v49;
  v23 = v50;
  __swift_project_boxed_opaque_existential_1(v48, v49);
  v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FEA0);
  sub_24526381C(&qword_25744FE98, &qword_25744FEA0, MEMORY[0x24BDB9AF8]);
  v24 = v41;
  sub_2453878A8();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  v25 = v39;
  v52[0] = v39;
  v40(v12, 1, 1, v34);
  sub_24526381C((unint64_t *)&unk_25744FDB0, &qword_25744FDC0, MEMORY[0x24BDB99D8]);
  v26 = v25;
  v27 = v42;
  v28 = v43;
  sub_2453878B4();
  sub_245263F80((uint64_t)v12, (uint64_t *)&unk_257450060);

  (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v28);
  v29 = swift_allocObject();
  swift_weakInit();
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v29;
  *(_QWORD *)(v30 + 24) = v18;
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = sub_245339AEC;
  *(_QWORD *)(v31 + 24) = v30;
  sub_24526381C((unint64_t *)&unk_25744FE28, (uint64_t *)&unk_25744FE38, MEMORY[0x24BDB9A08]);
  swift_retain();
  v32 = v45;
  sub_2453878C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v27, v32);
  swift_beginAccess();
  sub_24538786C();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_245339AB4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_245339AD8(uint64_t a1)
{
  return sub_24533748C(a1);
}

uint64_t sub_245339AE0()
{
  return objectdestroy_4Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_245339AEC()
{
  uint64_t v0;

  return sub_245337878(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_245339AF4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_245339B18(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_245339B80(*a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_245339B28()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_245339B5C()
{
  uint64_t *v0;

  return sub_245338190(v0[2], v0[3], v0[4]);
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t sub_245339B80(uint64_t a1, uint64_t a2)
{
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char isEscapingClosureAtFileLocation;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t aBlock[7];

  v4 = *(NSObject **)(a1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257450000);
  sub_245387D7C();
  v5 = sub_245331384(aBlock[0]);
  swift_bridgeObjectRelease();
  if ((sub_245347C4C(v5, a2) & 1) != 0)
    return swift_bridgeObjectRelease();
  if (*(_QWORD *)(a2 + 16) <= *(_QWORD *)(v5 + 16) >> 3)
  {
    aBlock[0] = v5;
    sub_24534905C(a2);
    v6 = v5;
    if (*(_QWORD *)(v5 + 16))
      goto LABEL_4;
    return swift_bridgeObjectRelease();
  }
  v6 = sub_2453497AC(a2, v5);
  if (!*(_QWORD *)(v6 + 16))
    return swift_bridgeObjectRelease();
LABEL_4:
  if (qword_25744FD98 != -1)
LABEL_36:
    swift_once();
  v7 = sub_245387818();
  __swift_project_value_buffer(v7, (uint64_t)qword_257462FC8);
  swift_bridgeObjectRetain_n();
  v8 = sub_2453877F4();
  v9 = sub_245387D34();
  v30 = v6;
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    *(_DWORD *)v10 = 134349314;
    aBlock[0] = v11;
    sub_245387E0C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    swift_bridgeObjectRetain();
    v12 = sub_245387CD4();
    v14 = v13;
    swift_bridgeObjectRelease();
    sub_2453816D8(v12, v14, aBlock);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v8, v9, "Disconnecting %{public}ld connected deviceID(s) no longer associated with the signed-in account: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v11, -1, -1);
    MEMORY[0x24953317C](v10, -1, -1);

  }
  else
  {

    v15 = swift_bridgeObjectRelease_n();
  }
  v17 = 0;
  v29 = v6 + 56;
  v18 = 1 << *(_BYTE *)(v6 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & *(_QWORD *)(v6 + 56);
  v31 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      v20 &= v20 - 1;
      goto LABEL_26;
    }
    if (__OFADD__(v17++, 1))
      goto LABEL_34;
    if (v17 >= v31)
      return swift_release();
    v22 = *(_QWORD *)(v29 + 8 * v17);
    if (!v22)
      break;
LABEL_25:
    v20 = (v22 - 1) & v22;
LABEL_26:
    MEMORY[0x24BDAC7A8](v15);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257452C68);
    sub_245387D7C();
    v15 = swift_bridgeObjectRelease();
    v24 = aBlock[0];
    if (aBlock[0])
    {
      v25 = swift_allocObject();
      *(_QWORD *)(v25 + 16) = a1;
      *(_QWORD *)(v25 + 24) = v24;
      v26 = swift_allocObject();
      *(_QWORD *)(v26 + 16) = sub_24533A118;
      *(_QWORD *)(v26 + 24) = v25;
      aBlock[4] = (uint64_t)sub_245263BB8;
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_24525B888;
      aBlock[3] = (uint64_t)&block_descriptor_20_0;
      v27 = _Block_copy(aBlock);
      swift_retain();
      swift_unknownObjectRetain();
      swift_retain();
      swift_release();
      dispatch_sync(v4, v27);
      _Block_release(v27);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_unknownObjectRelease();
      swift_release();
      v6 = v30;
      v15 = swift_release();
      if ((isEscapingClosureAtFileLocation & 1) != 0)
      {
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
    }
  }
  v23 = v17 + 1;
  if (v17 + 1 >= v31)
    return swift_release();
  v22 = *(_QWORD *)(v29 + 8 * v23);
  if (v22)
    goto LABEL_24;
  v23 = v17 + 2;
  if (v17 + 2 >= v31)
    return swift_release();
  v22 = *(_QWORD *)(v29 + 8 * v23);
  if (v22)
  {
LABEL_24:
    v17 = v23;
    goto LABEL_25;
  }
  v23 = v17 + 3;
  if (v17 + 3 < v31)
  {
    v22 = *(_QWORD *)(v29 + 8 * v23);
    if (!v22)
    {
      while (1)
      {
        v17 = v23 + 1;
        if (__OFADD__(v23, 1))
          goto LABEL_35;
        if (v17 >= v31)
          return swift_release();
        v22 = *(_QWORD *)(v29 + 8 * v17);
        ++v23;
        if (v22)
          goto LABEL_25;
      }
    }
    goto LABEL_24;
  }
  return swift_release();
}

uint64_t sub_24533A0D4()
{
  return objectdestroy_4Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t objectdestroy_4Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject();
}

uint64_t sub_24533A118()
{
  uint64_t v0;

  return sub_2452FEC70(*(_QWORD *)(v0 + 16), *(NSObject **)(v0 + 24));
}

uint64_t sub_24533A120()
{
  return swift_deallocObject();
}

uint64_t sub_24533A130()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(unint64_t, uint64_t);
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452CA0);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_bridgeObjectRelease();
  swift_release();
  v3 = v0 + v2;
  v4 = sub_245387740();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
  v6(v0 + v2, v4);
  v7 = type metadata accessor for Message();
  v8 = v0 + v2 + *(int *)(v7 + 20);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
    v6(v8, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24525CB80(*(_QWORD *)(v3 + *(int *)(v7 + 36)), *(_QWORD *)(v3 + *(int *)(v7 + 36) + 8));
  v9 = v3 + *(int *)(v1 + 28);
  v10 = sub_2453875E4();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24533A298(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24533A2E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257452CA0) - 8) + 80);
  return sub_245337F80(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

void sub_24533A314(void *a1)
{
  _QWORD *v1;

  sub_245315D8C(a1, v1);
}

BOOL static NetworkBrowsingEvent.EventType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t NetworkBrowsingEvent.EventType.hash(into:)()
{
  return sub_245388448();
}

uint64_t NetworkBrowsingEvent.EventType.hashValue.getter()
{
  sub_24538843C();
  sub_245388448();
  return sub_245388478();
}

uint64_t sub_24533A3C4()
{
  sub_24538843C();
  NetworkBrowsingEvent.EventType.hash(into:)();
  return sub_245388478();
}

void sub_24533A3FC()
{
  JUMPOUT(0x2495330B0);
}

uint64_t sub_24533A40C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_24533A414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for NetworkDevice(319, *(_QWORD *)(a1 + 16), a3, a4);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24533A48C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void (*v19)(unint64_t, unint64_t, uint64_t);

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ~(v6 | 7);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 32) & ~v6) + *(_QWORD *)(v5 + 64) + (((v6 | 7) + 1) & ~(v6 | 7uLL)) > 0x18)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v6 + 16) & v7));
    swift_retain();
  }
  else
  {
    v11 = ~v6;
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v12 = (_QWORD *)((unint64_t)(a1 + 1) & v7);
    v13 = (_QWORD *)((unint64_t)(a2 + 1) & v7);
    *v12 = *v13;
    v12[1] = v13[1];
    v14 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    v15 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v14 = *v15;
    v14[1] = v15[1];
    v16 = v6 + 16;
    v17 = ((unint64_t)v14 + v16) & v11;
    v18 = ((unint64_t)v15 + v16) & v11;
    v19 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19(v17, v18, v4);
  }
  return v3;
}

uint64_t sub_24533A5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (a1 + (v4 | 7) + 1) & ~(v4 | 7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t, uint64_t))(v3 + 8))((v4 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v4, v2);
}

_BYTE *sub_24533A608(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 | 7) + 1;
  v8 = (_QWORD *)((unint64_t)&a1[v7] & ~(v6 | 7));
  v9 = (_QWORD *)((unint64_t)&a2[v7] & ~(v6 | 7));
  *v8 = *v9;
  v8[1] = v9[1];
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  v10[1] = v11[1];
  v12 = ((unint64_t)v10 + v6 + 16) & ~v6;
  v13 = ((unint64_t)v11 + v6 + 16) & ~v6;
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v12, v13, v4);
  return a1;
}

_BYTE *sub_24533A6C8(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 | 7) + 1;
  v8 = (_QWORD *)((unint64_t)&a1[v7] & ~(v6 | 7));
  v9 = (_QWORD *)((unint64_t)&a2[v7] & ~(v6 | 7));
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24))(((unint64_t)v10 + v6 + 16) & ~v6, ((unint64_t)v11 + v6 + 16) & ~v6, v4);
  return a1;
}

_BYTE *sub_24533A79C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  _OWORD *v10;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 | 7) + 1;
  v7 = (_OWORD *)((unint64_t)&a1[v6] & ~(v5 | 7));
  v8 = (_OWORD *)((unint64_t)&a2[v6] & ~(v5 | 7));
  *v7 = *v8;
  v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)v9 + v5 + 16) & ~v5, ((unint64_t)v10 + v5 + 16) & ~v5);
  return a1;
}

_BYTE *sub_24533A820(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 | 7) + 1;
  v8 = (_QWORD *)((unint64_t)&a1[v7] & ~(v6 | 7));
  v9 = (_QWORD *)((unint64_t)&a2[v7] & ~(v6 | 7));
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRelease();
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40))(((unint64_t)v10 + v6 + 16) & ~v6, ((unint64_t)v11 + v6 + 16) & ~v6, v4);
  return a1;
}

uint64_t sub_24533A8DC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v14;
  int v15;
  uint64_t v16;
  unint64_t v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = v7 | 7;
  v9 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v10 = ((v7 + 32) & ~v7) + *(_QWORD *)(v4 + 64) + ((v8 + 1) & ~v8);
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = *(_DWORD *)(a1 + v10);
      if (!v12)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      v12 = *(unsigned __int16 *)(a1 + v10);
      if (!*(_WORD *)(a1 + v10))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_22:
      v16 = a1 + v8 + 1;
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((v7
                                                                      + (((v16 & ~v8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                      + 16) & ~v7);
      v17 = *(_QWORD *)((v16 & ~v8) + 8);
      if (v17 >= 0xFFFFFFFF)
        LODWORD(v17) = -1;
      return (v17 + 1);
    }
  }
  v12 = *(unsigned __int8 *)(a1 + v10);
  if (!*(_BYTE *)(a1 + v10))
    goto LABEL_22;
LABEL_15:
  v15 = (v12 - 1) << v11;
  if (v10 > 3)
    v15 = 0;
  if (!(_DWORD)v10)
    return v6 + v15 + 1;
  if (v10 > 3)
    LODWORD(v10) = 4;
  return ((uint64_t (*)(void))((char *)&loc_24533A9C0 + 4 * byte_24538E210[(v10 - 1)]))();
}

void sub_24533AA48(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  size_t v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = ((v7 + 32) & ~v7) + *(_QWORD *)(v5 + 64) + (((v7 | 7) + 1) & ~(v7 | 7));
  if (a3 > v6)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v6 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v6 < a2)
  {
    v10 = ~v6 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, ((v7 + 32) & ~v7) + *(_QWORD *)(v5 + 64) + (((v7 | 7) + 1) & ~(v7 | 7)));
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X15 }
}

uint64_t type metadata accessor for NetworkBrowsingEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NetworkBrowsingEvent);
}

uint64_t type metadata accessor for NetworkDevice(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NetworkDevice);
}

uint64_t sub_24533AC80()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_24533AC88(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24533ACD4 + 4 * byte_24538E223[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24533AD08 + 4 * byte_24538E21E[v4]))();
}

uint64_t sub_24533AD08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24533AD10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24533AD18);
  return result;
}

uint64_t sub_24533AD24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24533AD2CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24533AD30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24533AD38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for NetworkBrowsingEvent.EventType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NetworkBrowsingEvent.EventType);
}

uint64_t sub_24533AD50()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_24533AD58()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24533ADD0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 32) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    v12 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v11 = *v12;
    v11[1] = v12[1];
    v13 = ((unint64_t)v11 + v6 + 16) & ~v6;
    v14 = ((unint64_t)v12 + v6 + 16) & ~v6;
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v13, v14, v4);
  }
  return a1;
}

uint64_t sub_24533AEBC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_24533AF10(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v5[1] = v6[1];
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v5 + v9 + 16) & ~v9;
  v11 = ((unint64_t)v6 + v9 + 16) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v10, v11, v7);
  return a1;
}

_QWORD *sub_24533AFA8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)v6 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)v7 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

_OWORD *sub_24533B058(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_QWORD *sub_24533B0C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 40))(((unint64_t)v7 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)v8 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_24533B150(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 32) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v7 + 16) & ~v7);
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_24533B224 + 4 * byte_24538E228[(v9 - 1)]))();
}

void sub_24533B29C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x249533038](a1, v6, a5);
}

uint64_t sub_24533B4C8()
{
  sub_245387EA8();
  swift_bridgeObjectRelease();
  sub_2453880F4();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  sub_2453880F4();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  return swift_bridgeObjectRelease();
}

ReplicatorEngine::Zone::ID __swiftcall Zone.ID.init(id:clientID:)(Swift::String id, Swift::String clientID)
{
  Swift::String *v2;
  ReplicatorEngine::Zone::ID result;

  *v2 = id;
  v2[1] = clientID;
  result.clientID = clientID;
  result.id = id;
  return result;
}

__n128 Zone.init(id:protocolVersion:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_QWORD *)(a3 + 16) = v3;
  *(_QWORD *)(a3 + 24) = v4;
  result = *a2;
  *(__n128 *)(a3 + 32) = *a2;
  return result;
}

uint64_t Zone.description.getter()
{
  sub_245387EA8();
  sub_245387B90();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_245387EA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  swift_bridgeObjectRetain();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_245387B90();
  sub_24533B4C8();
  return 0;
}

uint64_t Zone.ID.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Zone.ID.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Zone.ID.id.modify())()
{
  return nullsub_1;
}

uint64_t Zone.ID.clientID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Zone.ID.clientID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Zone.ID.clientID.modify())()
{
  return nullsub_1;
}

uint64_t Zone.ID.description.getter()
{
  sub_245387EA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  swift_bridgeObjectRetain();
  sub_245387B90();
  swift_bridgeObjectRelease();
  return 540697705;
}

uint64_t Zone.ID.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_245387B6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_245387B6C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24533B994()
{
  _BYTE *v0;

  if (*v0)
    return 0x4449746E65696C63;
  else
    return 25705;
}

uint64_t sub_24533B9C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24533CBA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24533B9E8()
{
  sub_24533C43C();
  return sub_2453884D8();
}

uint64_t sub_24533BA10()
{
  sub_24533C43C();
  return sub_2453884E4();
}

uint64_t Zone.ID.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450200);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v9[1] = *(_QWORD *)(v1 + 24);
  v9[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24533C43C();
  sub_24538849C();
  v12 = 0;
  sub_2453880A0();
  if (!v2)
  {
    v11 = 1;
    sub_2453880A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t Zone.ID.hashValue.getter()
{
  sub_24538843C();
  sub_245387B6C();
  sub_245387B6C();
  return sub_245388478();
}

uint64_t Zone.ID.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574501A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24533C43C();
  sub_245388490();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = 0;
  v9 = sub_24538801C();
  v11 = v10;
  v19 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_24538801C();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v16;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24533BD74()
{
  sub_24538843C();
  sub_245387B6C();
  sub_245387B6C();
  return sub_245388478();
}

uint64_t sub_24533BDD8()
{
  sub_245387B6C();
  return sub_245387B6C();
}

uint64_t sub_24533BE14()
{
  sub_24538843C();
  sub_245387B6C();
  sub_245387B6C();
  return sub_245388478();
}

uint64_t sub_24533BE74@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return Zone.ID.init(from:)(a1, a2);
}

uint64_t sub_24533BE88(_QWORD *a1)
{
  return Zone.ID.encode(to:)(a1);
}

uint64_t Zone.id.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 Zone.id.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v2;
  unint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v5;
  *v1 = v5;
  v1[1].n128_u64[0] = v2;
  v1[1].n128_u64[1] = v3;
  return result;
}

uint64_t (*Zone.id.modify())()
{
  return nullsub_1;
}

__n128 Zone.protocolVersion.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = v1[2];
  *a1 = result;
  return result;
}

__n128 Zone.protocolVersion.setter(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  result = *a1;
  v1[2] = *a1;
  return result;
}

uint64_t (*Zone.protocolVersion.modify())()
{
  return nullsub_1;
}

uint64_t sub_24533BF60()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C6F636F746F7270;
  else
    return 25705;
}

uint64_t sub_24533BF9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24533CC7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24533BFC0()
{
  sub_24533C538();
  return sub_2453884D8();
}

uint64_t sub_24533BFE8()
{
  sub_24533C538();
  return sub_2453884E4();
}

uint64_t Zone.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574501F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v1;
  v8 = *((_QWORD *)v1 + 2);
  v7 = *((_QWORD *)v1 + 3);
  v9 = *((_QWORD *)v1 + 4);
  v12 = *((_QWORD *)v1 + 5);
  v13 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24533C538();
  sub_24538849C();
  v16 = v14;
  v17 = v8;
  v18 = v7;
  v19 = 0;
  sub_2452CC018();
  v10 = v15;
  sub_2453880B8();
  if (!v10)
  {
    *(_QWORD *)&v16 = v13;
    *((_QWORD *)&v16 + 1) = v12;
    v19 = 1;
    sub_2452CBF4C();
    sub_2453880B8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Zone.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574501A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24533C538();
  sub_245388490();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = 0;
  sub_2452CC47C();
  sub_245388034();
  v9 = *((_QWORD *)&v15 + 1);
  v10 = v17;
  v13 = v16;
  v14 = v15;
  v18 = 1;
  sub_2452CC378();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_245388034();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v11 = v15;
  *(_QWORD *)a2 = v14;
  *(_QWORD *)(a2 + 8) = v9;
  *(_QWORD *)(a2 + 16) = v13;
  *(_QWORD *)(a2 + 24) = v10;
  *(_OWORD *)(a2 + 32) = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24533C34C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_24533C380@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Zone.init(from:)(a1, a2);
}

uint64_t sub_24533C394(_QWORD *a1)
{
  return Zone.encode(to:)(a1);
}

uint64_t _s16ReplicatorEngine4ZoneV2IDV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_245388274(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_245388274();
  }
  return result;
}

unint64_t sub_24533C43C()
{
  unint64_t result;

  result = qword_25744FCD0;
  if (!qword_25744FCD0)
  {
    result = MEMORY[0x2495330B0](&unk_24538E7F4, &type metadata for Zone.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744FCD0);
  }
  return result;
}

BOOL _s16ReplicatorEngine4ZoneV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BOOL8 result;
  char v12;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (v10 = sub_245388274(), result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v3 == v7)
      return v4 == v8 && v5 == v9;
    v12 = sub_245388274();
    result = 0;
    if ((v12 & 1) != 0)
      return v4 == v8 && v5 == v9;
  }
  return result;
}

unint64_t sub_24533C538()
{
  unint64_t result;

  result = qword_25744FCB8;
  if (!qword_25744FCB8)
  {
    result = MEMORY[0x2495330B0](&unk_24538E7A4, &type metadata for Zone.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744FCB8);
  }
  return result;
}

unint64_t sub_24533C580()
{
  unint64_t result;

  result = qword_25744FD00;
  if (!qword_25744FD00)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for Zone.ID, &type metadata for Zone.ID);
    atomic_store(result, (unint64_t *)&qword_25744FD00);
  }
  return result;
}

uint64_t initializeWithCopy for Zone(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Zone(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Zone(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for Zone(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Zone(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Zone()
{
  return &type metadata for Zone;
}

_QWORD *initializeWithCopy for Zone.ID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Zone.ID(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for Zone.ID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Zone.ID(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Zone.ID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Zone.ID()
{
  return &type metadata for Zone.ID;
}

ValueMetadata *type metadata accessor for Zone.CodingKeys()
{
  return &type metadata for Zone.CodingKeys;
}

uint64_t _s16ReplicatorEngine4ZoneV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24533C974 + 4 * byte_24538E415[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24533C9A8 + 4 * byte_24538E410[v4]))();
}

uint64_t sub_24533C9A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24533C9B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24533C9B8);
  return result;
}

uint64_t sub_24533C9C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24533C9CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24533C9D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24533C9D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Zone.ID.CodingKeys()
{
  return &type metadata for Zone.ID.CodingKeys;
}

unint64_t sub_24533C9F8()
{
  unint64_t result;

  result = qword_257453070;
  if (!qword_257453070)
  {
    result = MEMORY[0x2495330B0](&unk_24538E6C4, &type metadata for Zone.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257453070);
  }
  return result;
}

unint64_t sub_24533CA40()
{
  unint64_t result;

  result = qword_257453078;
  if (!qword_257453078)
  {
    result = MEMORY[0x2495330B0](&unk_24538E77C, &type metadata for Zone.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257453078);
  }
  return result;
}

unint64_t sub_24533CA88()
{
  unint64_t result;

  result = qword_25744FCC8;
  if (!qword_25744FCC8)
  {
    result = MEMORY[0x2495330B0](&unk_24538E6EC, &type metadata for Zone.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744FCC8);
  }
  return result;
}

unint64_t sub_24533CAD0()
{
  unint64_t result;

  result = qword_25744FCC0;
  if (!qword_25744FCC0)
  {
    result = MEMORY[0x2495330B0](&unk_24538E714, &type metadata for Zone.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744FCC0);
  }
  return result;
}

unint64_t sub_24533CB18()
{
  unint64_t result;

  result = qword_25744FCE0;
  if (!qword_25744FCE0)
  {
    result = MEMORY[0x2495330B0](&unk_24538E634, &type metadata for Zone.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744FCE0);
  }
  return result;
}

unint64_t sub_24533CB60()
{
  unint64_t result;

  result = qword_25744FCD8;
  if (!qword_25744FCD8)
  {
    result = MEMORY[0x2495330B0](&unk_24538E65C, &type metadata for Zone.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744FCD8);
  }
  return result;
}

uint64_t sub_24533CBA4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449746E65696C63 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_245388274();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_24533CC7C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F636F746F7270 && a2 == 0xEF6E6F6973726556)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_245388274();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_24533CD78()
{
  uint64_t v0;

  if (qword_25744FD90 != -1)
    swift_once();
  v0 = sub_245387818();
  return __swift_project_value_buffer(v0, (uint64_t)qword_257462FB0);
}

uint64_t sub_24533CDC0(uint64_t a1)
{
  return sub_24533CE6C(a1, qword_257462FB0);
}

uint64_t sub_24533CDE4(uint64_t a1)
{
  return sub_24533CE6C(a1, qword_257462FC8);
}

uint64_t sub_24533CE0C(uint64_t a1)
{
  return sub_24533CE6C(a1, qword_257462FE0);
}

uint64_t sub_24533CE24(uint64_t a1)
{
  return sub_24533CE6C(a1, qword_257463008);
}

uint64_t sub_24533CE48(uint64_t a1)
{
  return sub_24533CE6C(a1, qword_257463068);
}

uint64_t sub_24533CE6C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_245387818();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_245387800();
}

uint64_t sub_24533CEE4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_245387E00();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_24533CF98(uint64_t a1)
{
  return sub_24533CFAC(a1);
}

uint64_t sub_24533CFAC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_24532C668(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
        sub_24532C668(v7 > 1, v8 + 1, 1);
      v4 += 2;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_24533D080(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unint64_t v39;
  unint64_t v40;
  _OWORD *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  int64_t v65;

  v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v2 = MEMORY[0x24BDAC7A8](v53);
  v52 = (uint64_t *)((char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (uint64_t *)((char *)&v49 - v5);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (uint64_t *)((char *)&v49 - v7);
  v9 = *(_QWORD *)(a1 + 64);
  v50 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v51 = (unint64_t)(v10 + 63) >> 6;
  v54 = a1;
  result = swift_bridgeObjectRetain();
  v14 = 0;
  v15 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (!v12)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  v65 = v14;
  for (i = v16 | (v14 << 6); ; i = __clz(__rbit64(v19)) + (v20 << 6))
  {
    v22 = *(_QWORD *)(v54 + 56);
    v23 = (uint64_t *)(*(_QWORD *)(v54 + 48) + 16 * i);
    v24 = *v23;
    v25 = v23[1];
    v26 = type metadata accessor for PairingRelationship();
    v27 = v22 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * i;
    v28 = v53;
    sub_2452B792C(v27, (uint64_t)v8 + *(int *)(v53 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    *v8 = v24;
    v8[1] = v25;
    sub_2452BC850((uint64_t)v8, (uint64_t)v6, (uint64_t *)&unk_25744FF90);
    v29 = *(int *)(v28 + 48);
    v30 = v52;
    v31 = (uint64_t)v52 + v29;
    v32 = v6[1];
    *v52 = *v6;
    v30[1] = v32;
    sub_2452B792C((uint64_t)v6 + v29, v31, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v33 = (__int128 *)(v31 + *(int *)(v26 + 20));
    v34 = v33[7];
    v61 = v33[6];
    v62 = v34;
    v35 = v33[9];
    v63 = v33[8];
    v64 = v35;
    v36 = v33[3];
    v57 = v33[2];
    v58 = v36;
    v37 = v33[5];
    v59 = v33[4];
    v60 = v37;
    v38 = v33[1];
    v55 = *v33;
    v56 = v38;
    swift_bridgeObjectRetain();
    sub_24526432C((uint64_t)&v55);
    sub_2452B7B5C(v31, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    sub_245263F80((uint64_t)v6, (uint64_t *)&unk_25744FF90);
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_2453244C4(0, v15[2] + 1, 1, v15);
      v15 = (_QWORD *)result;
    }
    v40 = v15[2];
    v39 = v15[3];
    if (v40 >= v39 >> 1)
    {
      result = (uint64_t)sub_2453244C4((_QWORD *)(v39 > 1), v40 + 1, 1, v15);
      v15 = (_QWORD *)result;
    }
    v15[2] = v40 + 1;
    v41 = &v15[20 * v40];
    v42 = v56;
    v41[2] = v55;
    v41[3] = v42;
    v43 = v57;
    v44 = v58;
    v45 = v60;
    v41[6] = v59;
    v41[7] = v45;
    v41[4] = v43;
    v41[5] = v44;
    v46 = v61;
    v47 = v62;
    v48 = v64;
    v41[10] = v63;
    v41[11] = v48;
    v41[8] = v46;
    v41[9] = v47;
    v14 = v65;
    if (v12)
      goto LABEL_4;
LABEL_5:
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v51)
      goto LABEL_27;
    v19 = *(_QWORD *)(v50 + 8 * v18);
    v20 = v14 + 1;
    if (!v19)
    {
      v20 = v14 + 2;
      if (v14 + 2 >= v51)
        goto LABEL_27;
      v19 = *(_QWORD *)(v50 + 8 * v20);
      if (!v19)
      {
        v20 = v14 + 3;
        if (v14 + 3 >= v51)
          goto LABEL_27;
        v19 = *(_QWORD *)(v50 + 8 * v20);
        if (!v19)
        {
          v20 = v14 + 4;
          if (v14 + 4 >= v51)
            goto LABEL_27;
          v19 = *(_QWORD *)(v50 + 8 * v20);
          if (!v19)
            break;
        }
      }
    }
LABEL_20:
    v12 = (v19 - 1) & v19;
    v65 = v20;
  }
  v21 = v14 + 5;
  if (v14 + 5 >= v51)
  {
LABEL_27:
    swift_release();
    return (uint64_t)v15;
  }
  v19 = *(_QWORD *)(v50 + 8 * v21);
  if (v19)
  {
    v20 = v14 + 5;
    goto LABEL_20;
  }
  while (1)
  {
    v20 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v20 >= v51)
      goto LABEL_27;
    v19 = *(_QWORD *)(v50 + 8 * v20);
    ++v21;
    if (v19)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_24533D474@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD v15[2];

  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 88);
  v7 = sub_245387E00();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v15 - v9;
  v11 = *(uint64_t *)((char *)v2 + *(_QWORD *)(v5 + 152));
  LOBYTE(v15[0]) = *a1;
  v12 = sub_245347C08();
  MEMORY[0x249531DF0](v15, v11, &type metadata for NetworkMessagingConnectionType, v6, v12);
  v13 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v6) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2, v10, v6);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  sub_245387EA8();
  sub_245387B90();
  sub_245387B90();
  swift_bridgeObjectRelease();
  result = sub_245387F80();
  __break(1u);
  return result;
}

uint64_t sub_24533D61C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 168)) + 16);
  os_unfair_lock_lock(v1);
  sub_24534B1CC(&v4);
  v2 = v4;
  os_unfair_lock_unlock(v1);
  return v2;
}

uint64_t sub_24533D66C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;

  v4 = *a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450060);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FE08);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v4 + 176);
  *(uint64_t *)((char *)a1 + v12) = a2;
  swift_retain();
  result = swift_release();
  v14 = *(uint64_t *)((char *)a1 + v12);
  if (v14)
  {
    v22 = *(uint64_t *)((char *)a1 + v12);
    v23 = v14;
    v24 = (id)a1[2];
    v15 = v24;
    v16 = sub_245387D64();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
    swift_retain();
    v17 = v15;
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FE80);
    sub_24525C748();
    v21 = v9;
    sub_24526381C(&qword_25744FE78, &qword_25744FE80, MEMORY[0x24BDB9AF8]);
    sub_24525C6C4((unint64_t *)&unk_257450070, (uint64_t (*)(uint64_t))sub_24525C748, MEMORY[0x24BEE5670]);
    sub_2453878B4();
    sub_245263F80((uint64_t)v7, (uint64_t *)&unk_257450060);

    v18 = swift_allocObject();
    swift_weakInit();
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = *(_QWORD *)(v4 + 80);
    *(_OWORD *)(v19 + 24) = *(_OWORD *)(v4 + 88);
    *(_QWORD *)(v19 + 40) = *(_QWORD *)(v4 + 104);
    *(_QWORD *)(v19 + 48) = v18;
    sub_24526381C(&qword_25744FE00, &qword_25744FE08, MEMORY[0x24BDB9A08]);
    sub_2453878C0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v8);
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FFD0);
    sub_24526381C(&qword_25744FFD8, &qword_25744FFD0, MEMORY[0x24BEE12E8]);
    sub_24538786C();
    swift_endAccess();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_24533D96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  void (*v33)(_QWORD, _QWORD, uint64_t, uint64_t);
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD v39[10];

  v7 = a4;
  v8 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_25744FD98 != -1)
      swift_once();
    v12 = sub_245387818();
    __swift_project_value_buffer(v12, (uint64_t)qword_257462FC8);
    swift_bridgeObjectRetain_n();
    v13 = sub_2453877F4();
    v14 = sub_245387D34();
    v15 = os_log_type_enabled(v13, v14);
    v37 = a6;
    if (v15)
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v36 = v7;
      v18 = v17;
      *(_QWORD *)&v39[0] = v17;
      v35 = v8;
      *(_DWORD *)v16 = 136446210;
      v34[1] = v16 + 4;
      type metadata accessor for PairingRelationship();
      swift_bridgeObjectRetain();
      v19 = sub_245387A70();
      v21 = v20;
      swift_bridgeObjectRelease();
      v38 = sub_2453816D8(v19, v21, (uint64_t *)v39);
      v8 = v35;
      sub_245387E0C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v13, v14, "pairingRelationships updated:%{public}s", v16, 0xCu);
      swift_arrayDestroy();
      v22 = v18;
      v7 = v36;
      MEMORY[0x24953317C](v22, -1, -1);
      MEMORY[0x24953317C](v16, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v23 = swift_bridgeObjectRetain();
    v24 = sub_245348830(v23);
    swift_bridgeObjectRelease();
    v25 = sub_24533D080(v24);
    swift_release();
    if (*(_QWORD *)(v25 + 16))
    {
      v26 = *(_OWORD *)(v25 + 144);
      v39[6] = *(_OWORD *)(v25 + 128);
      v39[7] = v26;
      v27 = *(_OWORD *)(v25 + 176);
      v39[8] = *(_OWORD *)(v25 + 160);
      v39[9] = v27;
      v28 = *(_OWORD *)(v25 + 80);
      v39[2] = *(_OWORD *)(v25 + 64);
      v39[3] = v28;
      v29 = *(_OWORD *)(v25 + 112);
      v39[4] = *(_OWORD *)(v25 + 96);
      v39[5] = v29;
      v30 = *(_OWORD *)(v25 + 48);
      v39[0] = *(_OWORD *)(v25 + 32);
      v39[1] = v30;
      sub_24526432C((uint64_t)v39);
      swift_bridgeObjectRelease();
      v31 = v39[0];
      LOBYTE(v38) = 1;
      sub_24533D474(&v38, (uint64_t)v10);
      v32 = v37;
      v33 = *(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v37 + 48);
      swift_bridgeObjectRetain();
      v33(v31, *((_QWORD *)&v31 + 1), v7, v32);
      swift_release();
      sub_245269928((uint64_t)v39);
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_24533DCEC()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t (*v19)();
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD aBlock[3];
  void *v44;
  uint64_t (*v45)();
  _QWORD *v46;

  v1 = v0;
  v2 = (_QWORD *)*v0;
  v3 = sub_245387920();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v41 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_245387950();
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2453879D4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = (void *)v0[2];
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v13 = v12;
  v14 = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v14 & 1) != 0)
  {
    v37 = v4;
    v16 = v2[13];
    v17 = v2[11];
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v16 + 72))(aBlock, v17, v16);
    v18 = v44;
    v19 = v45;
    __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v44);
    v20 = (*((uint64_t (**)(void *, uint64_t (*)()))v19 + 4))(v18, v19);
    v21 = sub_24533CFAC(v20);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    v22 = sub_245331384(v21);
    v23 = swift_bridgeObjectRelease();
    v36 = (uint64_t)&v36;
    aBlock[0] = *(_QWORD *)((char *)v0 + *(_QWORD *)(*v0 + 152));
    v24 = MEMORY[0x24BDAC7A8](v23);
    v25 = v3;
    *(&v36 - 6) = v2[10];
    *(&v36 - 5) = v17;
    *(&v36 - 4) = v2[12];
    *(&v36 - 3) = v16;
    *(&v36 - 2) = v22;
    MEMORY[0x24BDAC7A8](v24);
    *(&v36 - 6) = v26;
    *(&v36 - 5) = v17;
    *(&v36 - 4) = v27;
    *(&v36 - 3) = v16;
    *(&v36 - 2) = (uint64_t)sub_24534C948;
    *(&v36 - 1) = v28;
    sub_245347C08();
    v29 = sub_245387A88();
    swift_bridgeObjectRetain();
    MEMORY[0x2495330B0](MEMORY[0x24BEE04D8], v29);
    sub_245387BE4();
    swift_bridgeObjectRelease();
    v30 = (_QWORD *)((char *)v0 + *(_QWORD *)(*v0 + 136));
    swift_beginAccess();
    v31 = *v30;
    v32 = (_QWORD *)swift_allocObject();
    v32[2] = v31;
    v32[3] = v1;
    v32[4] = v22;
    v45 = sub_24534C9A0;
    v46 = v32;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24525DD34;
    v44 = &block_descriptor_42_0;
    v33 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    v34 = v38;
    sub_245387938();
    v42 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
    v35 = v41;
    sub_245387E3C();
    MEMORY[0x2495320E4](0, v34, v35, v33);
    _Block_release(v33);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v25);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v40);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id *sub_24533E104()
{
  id *v0;
  char *v1;
  uint64_t v2;

  v1 = (char *)v0 + *((_QWORD *)*v0 + 16);
  v2 = sub_245387E00();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *((_QWORD *)*v0 + 18));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_24533E1C8()
{
  sub_24533E104();
  return swift_deallocClassInstance();
}

void type metadata accessor for NetworkSyncService()
{
  JUMPOUT(0x249533038);
}

uint64_t sub_24533E1F8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24533E238()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 88);
  v3 = sub_245387E00();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14[-1] - v4;
  v6 = *(uint64_t *)((char *)v0 + *(_QWORD *)(v1 + 152));
  LOBYTE(v14[0]) = 0;
  v7 = sub_245347C08();
  MEMORY[0x249531DF0](v14, v6, &type metadata for NetworkMessagingConnectionType, v2, v7);
  v8 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v2);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(v1 + 104) + 72))(v14, v2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v2);
    v10 = v15;
    v11 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    return v12;
  }
  return result;
}

uint64_t sub_24533E364()
{
  uint64_t v0;
  uint64_t v1;

  sub_245347C08();
  v0 = sub_245387A88();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257450000);
  MEMORY[0x2495330B0](MEMORY[0x24BEE04D8], v0);
  sub_24526381C((unint64_t *)&unk_257450010, &qword_257450000, MEMORY[0x24BEE12C8]);
  v1 = sub_245387BD8();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_24533E46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a6 + 72))(v11, a4, a6);
  v6 = v12;
  v7 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
  v9 = sub_24533CFAC(v8);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v9;
}

uint64_t sub_24533E4F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  uint64_t result;
  _QWORD v11[6];

  v3 = v2;
  v6 = *(NSObject **)(v3 + 16);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v3;
  v7[3] = a1;
  v7[4] = a2;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_24534D408;
  *(_QWORD *)(v8 + 24) = v7;
  v11[4] = sub_2452643B4;
  v11[5] = v8;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_24525B888;
  v11[3] = &block_descriptor_86;
  v9 = _Block_copy(v11);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v6 & 1) != 0)
    __break(1u);
  return result;
}

void sub_24533E63C()
{
  type metadata accessor for NetworkSyncService.WeakDelegate();
}

void sub_24533E678()
{
  sub_24534BC34();
}

uint64_t sub_24533E68C(uint64_t a1)
{
  uint64_t v1;
  _QWORD **v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;

  v3 = (_QWORD **)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136));
  swift_beginAccess();
  v4 = *v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v3 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v4 = sub_2453245E4(0, v4[2] + 1, 1, v4);
    *v3 = v4;
  }
  v7 = v4[2];
  v6 = v4[3];
  if (v7 >= v6 >> 1)
  {
    v4 = sub_2453245E4((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
    *v3 = v4;
  }
  v4[2] = v7 + 1;
  v8 = &v4[2 * v7];
  v8[4] = a1;
  v8[5] = &off_251640F58;
  return swift_endAccess();
}

uint64_t sub_24533E750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v13[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_245387920();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_245387950();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(_QWORD *)(v1 + 16);
  aBlock[4] = sub_24534D344;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525DD34;
  aBlock[3] = &block_descriptor_75;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_245387938();
  v13[1] = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_25744FF00, v3, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
  sub_245387E3C();
  MEMORY[0x2495320E4](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_24533E924()
{
  uint64_t v0;

  sub_245347C08();
  v0 = sub_245387A88();
  swift_bridgeObjectRetain();
  MEMORY[0x2495330B0](MEMORY[0x24BEE04D8], v0);
  sub_245387BE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24533E9E4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 88);
  v7 = sub_245387E00();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v17[-1] - v8;
  v10 = *(uint64_t *)((char *)v2 + *(_QWORD *)(v5 + 152));
  LOBYTE(v17[0]) = 0;
  v11 = sub_245347C08();
  MEMORY[0x249531DF0](v17, v10, &type metadata for NetworkMessagingConnectionType, v6, v11);
  v12 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v6);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(v5 + 104) + 72))(v17, v6);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v6);
    v14 = v18;
    v15 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 40))(a1, a2, v14, v15);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  return result;
}

uint64_t sub_24533EB18(uint64_t a1, uint64_t a2, __int128 *a3, unsigned __int8 *a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD);
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  unsigned __int8 *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;

  v49 = a7;
  v48 = a6;
  v47 = a4;
  v44 = a2;
  v43 = a1;
  v10 = *v7;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Message();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a3[7];
  v56 = a3[6];
  v57 = v19;
  v20 = a3[9];
  v58 = a3[8];
  v59 = v20;
  v21 = a3[3];
  v52 = a3[2];
  v53 = v21;
  v22 = a3[5];
  v54 = a3[4];
  v55 = v22;
  v23 = a3[1];
  v50 = *a3;
  v51 = v23;
  v45 = *v47;
  v24 = *a5;
  v46 = a5[1];
  v47 = (unsigned __int8 *)v7[2];
  sub_2452B792C(v43, (uint64_t)v18, v25);
  sub_245263F38(v44, (uint64_t)v14);
  v26 = (*(unsigned __int8 *)(v16 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v27 = (v17 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (*(unsigned __int8 *)(v12 + 80) + v27 + 8) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v29 = (v28 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v28 + v13 + 175) & 0xFFFFFFFFFFFFFFF8;
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = *(_QWORD *)(v10 + 80);
  *(_OWORD *)(v31 + 24) = *(_OWORD *)(v10 + 88);
  *(_QWORD *)(v31 + 40) = *(_QWORD *)(v10 + 104);
  sub_2452B7AB8((uint64_t)v18, v31 + v26, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  *(_QWORD *)(v31 + v27) = v42;
  sub_2452BC850((uint64_t)v14, v31 + v28, &qword_25744F610);
  v32 = v31 + v29;
  v33 = v57;
  *(_OWORD *)(v32 + 96) = v56;
  *(_OWORD *)(v32 + 112) = v33;
  v34 = v59;
  *(_OWORD *)(v32 + 128) = v58;
  *(_OWORD *)(v32 + 144) = v34;
  v35 = v53;
  *(_OWORD *)(v32 + 32) = v52;
  *(_OWORD *)(v32 + 48) = v35;
  v36 = v55;
  *(_OWORD *)(v32 + 64) = v54;
  *(_OWORD *)(v32 + 80) = v36;
  v37 = v51;
  *(_OWORD *)v32 = v50;
  *(_OWORD *)(v32 + 16) = v37;
  *(_BYTE *)(v32 + 160) = v45;
  v38 = (_QWORD *)(v31 + v30);
  *v38 = v24;
  v38[1] = v46;
  v39 = (_QWORD *)(v31 + ((v30 + 23) & 0xFFFFFFFFFFFFFFF8));
  v40 = v49;
  *v39 = v48;
  v39[1] = v40;
  swift_retain();
  sub_24526432C((uint64_t)&v50);
  swift_retain();
  sub_2452E06E8(0xD000000000000022, 0x8000000245394F80, (uint64_t)v47, (uint64_t)sub_24534B3D0, v31, 0.0);
  return swift_release();
}

uint64_t sub_24533EDFC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, unint64_t a5, __int128 *a6, int a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double v55[2];
  unsigned __int8 v56;
  __int128 v57[10];

  v51 = a7;
  v54 = a1;
  v53 = *a4;
  v18 = type metadata accessor for Message();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25744FD98 != -1)
    swift_once();
  v52 = a11;
  v50 = a10;
  v21 = sub_245387818();
  __swift_project_value_buffer(v21, (uint64_t)qword_257462FC8);
  sub_2452B792C(a3, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  v22 = sub_2453877F4();
  v23 = sub_245387D34();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc();
    v49 = a4;
    v25 = (uint8_t *)v24;
    v26 = swift_slowAlloc();
    v46 = a8;
    v27 = v26;
    *(_QWORD *)&v57[0] = v26;
    v47 = a2;
    *(_DWORD *)v25 = 136446210;
    v48 = a3;
    v28 = Message.description.getter();
    *(_QWORD *)&v55[0] = sub_2453816D8(v28, v29, (uint64_t *)v57);
    a3 = v48;
    a2 = v47;
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_2452B7B5C((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for Message);
    _os_log_impl(&dword_245256000, v22, v23, "Sending message with expected response: %{public}s", v25, 0xCu);
    swift_arrayDestroy();
    v30 = v27;
    a8 = v46;
    MEMORY[0x24953317C](v30, -1, -1);
    MEMORY[0x24953317C](v25, -1, -1);
  }
  else
  {
    sub_2452B7B5C((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  }

  v31 = a6[6];
  v32 = a6[8];
  v33 = a6[9];
  v57[7] = a6[7];
  v57[8] = v32;
  v57[9] = v33;
  v34 = a6[3];
  v57[2] = a6[2];
  v57[3] = v34;
  v35 = a6[5];
  v57[4] = a6[4];
  v57[5] = v35;
  v57[6] = v31;
  v36 = a6[1];
  v57[0] = *a6;
  v57[1] = v36;
  v56 = v51;
  v55[0] = a9;
  *(_QWORD *)&v55[1] = a8;
  v37 = swift_allocObject();
  v38 = v53;
  *(_QWORD *)(v37 + 16) = *(_QWORD *)(v53 + 80);
  *(_OWORD *)(v37 + 24) = *(_OWORD *)(v38 + 88);
  *(_QWORD *)(v37 + 40) = *(_QWORD *)(v38 + 104);
  v39 = a6[7];
  *(_OWORD *)(v37 + 144) = a6[6];
  *(_OWORD *)(v37 + 160) = v39;
  v40 = a6[9];
  *(_OWORD *)(v37 + 176) = a6[8];
  *(_OWORD *)(v37 + 192) = v40;
  v41 = a6[3];
  *(_OWORD *)(v37 + 80) = a6[2];
  *(_OWORD *)(v37 + 96) = v41;
  v42 = a6[5];
  *(_OWORD *)(v37 + 112) = a6[4];
  *(_OWORD *)(v37 + 128) = v42;
  v43 = a6[1];
  *(_OWORD *)(v37 + 48) = *a6;
  *(_OWORD *)(v37 + 64) = v43;
  v44 = v52;
  *(_QWORD *)(v37 + 208) = v50;
  *(_QWORD *)(v37 + 216) = v44;
  *(_QWORD *)(v37 + 224) = v54;
  *(_QWORD *)(v37 + 232) = a2;
  sub_24526432C((uint64_t)a6);
  swift_retain();
  swift_retain();
  sub_24533F5B8(a3, a5, v57, &v56, v55, (void (*)(uint64_t *))sub_24534B51C, (uint64_t *)v37);
  return swift_release();
}

uint64_t sub_24533F1A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v24 = a5;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452310);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a7;
  v26 = a8;
  v27 = a9;
  v28 = a10;
  v29 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for IncomingNetworkMessage(255, AssociatedTypeWitness, v18, v19);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25440C868);
  v20 = sub_245388484();
  type metadata accessor for IncomingSyncServiceMessage();
  sub_24533F464((void (*)(char *))sub_24534C9AC, v20, (uint64_t)v16);
  v21 = a3(v16);
  v24(v21);
  return sub_245263F80((uint64_t)v16, &qword_257452310);
}

uint64_t sub_24533F2F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _QWORD *v22;
  uint64_t v23;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Message();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2452B792C(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = type metadata accessor for IncomingNetworkMessage(0, AssociatedTypeWitness, v13, v14);
  sub_245263F38(a1 + *(int *)(v15 + 28), (uint64_t)v8);
  v17 = *a2;
  v16 = a2[1];
  v18 = type metadata accessor for IncomingSyncServiceMessage();
  v19 = a3 + *(int *)(v18 + 20);
  v20 = sub_2453875E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  sub_2452B7AB8((uint64_t)v11, a3, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  swift_bridgeObjectRetain();
  result = sub_2452DB304((uint64_t)v8, v19);
  v22 = (_QWORD *)(a3 + *(int *)(v18 + 24));
  *v22 = v17;
  v22[1] = v16;
  return result;
}

uint64_t sub_24533F464@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, char *, _QWORD))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 32))(a3, v12, *(_QWORD *)(a2 + 24));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v6);
    a1(v10);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  sub_245388484();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24533F5B8(uint64_t a1, unint64_t a2, __int128 *a3, unsigned __int8 *a4, double *a5, void (*a6)(uint64_t *), uint64_t *a7)
{
  char *v7;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t AssociatedTypeWitness;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  char *v54;
  double v55;
  uint64_t v56;
  void *v57;
  uint64_t (**v58)(uint64_t *, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t result;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  void (*v91)(uint64_t *);
  uint64_t v92;
  uint64_t *v93;
  void (*v94)(uint64_t *);
  char *v95;
  uint64_t v96;
  void (*v97)(char *, char *, uint64_t);
  char *v98;
  uint64_t *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  void (*v111)(uint64_t, uint64_t, uint64_t, uint64_t *);
  char *v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  unint64_t v117;
  uint64_t v118;
  uint8_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t *);
  uint64_t v124;
  char *v125;
  uint64_t *v126;
  unint64_t v127;
  double *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  NSObject *v133;
  os_log_type_t v134;
  _BOOL4 v135;
  uint8_t *v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  NSObject *v144;
  os_log_type_t v145;
  uint8_t *v146;
  uint64_t v147;
  uint8_t *v148;
  uint64_t v149;
  NSObject *v150;
  unint64_t v151;
  os_log_type_t v152;
  _BOOL4 v153;
  uint8_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t (*v161)(uint64_t *, uint64_t, uint64_t);
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t *v166;
  unint64_t v167;
  unint64_t v168;
  _QWORD *v169;
  _QWORD *v170;
  uint64_t v171;
  uint64_t (**v172)(uint64_t *, uint64_t, uint64_t);
  double *v173;
  uint64_t v174;
  void (*v175)(uint64_t *);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  _BYTE *v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t *v197;
  double *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t (**v202)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v203)(uint64_t *, uint64_t, uint64_t);
  void (*v204)(uint64_t, uint64_t, uint64_t (*)(void (*)(_QWORD, _QWORD), void *), char *, uint8_t *, uint64_t, double);
  uint64_t v205;
  char *v206;
  uint8_t *v207;
  void (*v208)(uint64_t *);
  uint64_t v209;
  void (*v210)(char *, uint64_t, uint64_t);
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  char *v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  char *v236;
  uint64_t *v237;
  unint64_t v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  uint64_t (**v242)(uint64_t *, uint64_t);
  uint64_t v243;
  uint64_t v244;
  unint64_t v245;
  int v246;
  uint64_t v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t *v253;
  void (*v254)(uint64_t *);
  uint64_t *v255;
  uint8_t *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  _QWORD *v260;
  unint64_t v261;
  uint64_t v262;
  uint64_t v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;

  v255 = a7;
  v254 = a6;
  v248 = a2;
  v249 = a1;
  v11 = *(_QWORD *)v7;
  v12 = *(uint8_t **)(*(_QWORD *)v7 + 80);
  v219 = sub_245387E00();
  v218 = *(_QWORD *)(v219 - 8);
  v13 = MEMORY[0x24BDAC7A8](v219);
  v220 = (char *)&v209 - v14;
  v256 = v12;
  v228 = *((_QWORD *)v12 - 1);
  MEMORY[0x24BDAC7A8](v13);
  v226 = (char *)&v209 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v230 = sub_2453876EC();
  v225 = *(_QWORD *)(v230 - 8);
  v16 = MEMORY[0x24BDAC7A8](v230);
  v224 = (char *)&v209 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v227 = (char *)&v209 - v18;
  v19 = *(uint64_t **)(v11 + 104);
  v234 = v11;
  v20 = *(_QWORD *)(v11 + 88);
  v250 = v19;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v222 = sub_245387E00();
  v221 = *(_QWORD *)(v222 - 8);
  v22 = MEMORY[0x24BDAC7A8](v222);
  v235 = (char *)&v209 - v23;
  v251 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v216 = (char *)&v209 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v245 = (unint64_t)&v209 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v223 = (char *)&v209 - v29;
  v229 = v30;
  MEMORY[0x24BDAC7A8](v28);
  v236 = (char *)&v209 - v31;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  v233 = *(_QWORD *)(v32 - 8);
  v33 = *(_QWORD *)(v233 + 64);
  MEMORY[0x24BDAC7A8](v32);
  v253 = (uint64_t *)((char *)&v209 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = type metadata accessor for Message();
  v232 = *(_QWORD *)(v34 - 8);
  v35 = *(_QWORD *)(v232 + 64);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v247 = (uint64_t)&v209 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v258 = v20;
  v252 = *(_QWORD *)(v20 - 8);
  v37 = MEMORY[0x24BDAC7A8](v36);
  v240 = (char *)&v209 - (((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v237 = v38;
  MEMORY[0x24BDAC7A8](v37);
  v257 = (uint64_t)&v209 - v39;
  v241 = AssociatedTypeWitness;
  type metadata accessor for IncomingNetworkMessage(255, AssociatedTypeWitness, v40, v41);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25440C868);
  v243 = sub_245388484();
  v242 = *(uint64_t (***)(uint64_t *, uint64_t))(v243 - 8);
  MEMORY[0x24BDAC7A8](v243);
  v43 = (uint64_t *)((char *)&v209 - v42);
  v44 = sub_2453879D4();
  v45 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v47 = (uint64_t *)((char *)&v209 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  v48 = a3[7];
  v270 = a3[6];
  v271 = v48;
  v49 = a3[9];
  v272 = a3[8];
  v273 = v49;
  v50 = a3[3];
  v266 = a3[2];
  v267 = v50;
  v51 = a3[5];
  v268 = a3[4];
  v269 = v51;
  v52 = *a3;
  v53 = a3[1];
  v54 = v7;
  v264 = v52;
  v265 = v53;
  v246 = *a4;
  v55 = *a5;
  v56 = *((_QWORD *)a5 + 1);
  v57 = (void *)*((_QWORD *)v7 + 2);
  *v47 = v57;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v45 + 104))(v47, *MEMORY[0x24BEE5610], v44);
  v58 = v57;
  LOBYTE(v57) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v45 + 8))(v47, v44);
  if ((v57 & 1) == 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  v239 = v56;
  v59 = &v54[*(_QWORD *)(*(_QWORD *)v54 + 144)];
  v60 = *((_QWORD *)v59 + 3);
  v61 = *((_QWORD *)v59 + 4);
  __swift_project_boxed_opaque_existential_1(v59, v60);
  v62 = v264;
  if (((*(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v61 + 8))(v264, *((_QWORD *)&v264 + 1), v60, v61) & 1) != 0)
  {
    v44 = v243;
    if (qword_25744FD98 == -1)
    {
LABEL_4:
      v63 = sub_245387818();
      __swift_project_value_buffer(v63, (uint64_t)qword_257462FC8);
      v64 = sub_2453877F4();
      v65 = sub_245387D34();
      if (os_log_type_enabled(v64, v65))
      {
        v66 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v66 = 0;
        _os_log_impl(&dword_245256000, v64, v65, "Cannot send messages to remote device ID not in allow list", v66, 2u);
        MEMORY[0x24953317C](v66, -1, -1);
      }

      sub_24534B550();
      v67 = swift_allocError();
      *v68 = 2;
      *v43 = v67;
      swift_storeEnumTagMultiPayload();
      v254(v43);
      return v242[1](v43, v44);
    }
LABEL_32:
    swift_once();
    goto LABEL_4;
  }
  v244 = v62;
  v70 = v267;
  LOBYTE(v260) = v267 == 4;
  swift_bridgeObjectRetain();
  v238 = *((_QWORD *)&v62 + 1);
  v71 = v257;
  sub_24533D474(&v260, v257);
  v72 = v258;
  if (v70 == 5)
    goto LABEL_9;
  ((void (*)(_QWORD **__return_ptr, uint64_t))v250[9])(&v260, v258);
  v73 = v262;
  v74 = v263;
  __swift_project_boxed_opaque_existential_1(&v260, v262);
  v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 32))(v73, v74);
  v76 = sub_24533CFAC(v75);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v260);
  v77 = sub_245331384(v76);
  swift_bridgeObjectRelease();
  LOBYTE(v76) = sub_24531D83C(v244, v238, v77);
  swift_bridgeObjectRelease();
  if ((v76 & 1) != 0)
  {
LABEL_9:
    v242 = v58;
    v231 = v54;
    v78 = v252;
    v79 = v35;
    v80 = v240;
    v210 = *(void (**)(char *, uint64_t, uint64_t))(v252 + 16);
    v210(v240, v71, v72);
    v81 = v247;
    sub_2452B792C(v249, v247, (uint64_t (*)(_QWORD))type metadata accessor for Message);
    v82 = v33;
    sub_245263F38(v248, (uint64_t)v253);
    v83 = *(unsigned __int8 *)(v78 + 80);
    v84 = (v83 + 72) & ~v83;
    v85 = *(unsigned __int8 *)(v232 + 80);
    v232 = ~v85;
    v86 = ((unint64_t)v237 + v85 + v84) & ~v85;
    v213 = v79;
    v215 = v79 + 7;
    v87 = (v79 + 7 + v86) & 0xFFFFFFFFFFFFFFF8;
    v88 = *(unsigned __int8 *)(v233 + 80);
    v89 = (v88 + v87 + 16) & ~v88;
    v233 = v85;
    v211 = v88;
    v212 = v83;
    v209 = v85 | v88 | v83;
    v214 = v82;
    v90 = (v82 + v89 + 7) & 0xFFFFFFFFFFFFFFF8;
    v91 = (void (*)(uint64_t *))swift_allocObject();
    v92 = v258;
    *((_QWORD *)v91 + 2) = v256;
    *((_QWORD *)v91 + 3) = v92;
    v243 = *(_QWORD *)(v234 + 96);
    v93 = v250;
    *((_QWORD *)v91 + 4) = v243;
    *((_QWORD *)v91 + 5) = v93;
    v94 = v254;
    *((_QWORD *)v91 + 6) = v231;
    *((_QWORD *)v91 + 7) = v94;
    *((_QWORD *)v91 + 8) = v255;
    v95 = (char *)v91 + v84;
    v96 = v257;
    v97 = *(void (**)(char *, char *, uint64_t))(v78 + 32);
    v98 = v80;
    v99 = v93;
    v97(v95, v98, v258);
    sub_2452B7AB8(v81, (uint64_t)v91 + v86, (uint64_t (*)(_QWORD))type metadata accessor for Message);
    v100 = (_QWORD *)((char *)v91 + v87);
    v101 = v244;
    v102 = v238;
    *v100 = v244;
    v100[1] = v102;
    v103 = (uint64_t)v91 + v89;
    v104 = v258;
    sub_2452BC850((uint64_t)v253, v103, &qword_25744F610);
    v254 = v91;
    v105 = (char *)v91 + v90;
    v106 = v271;
    *((_OWORD *)v105 + 6) = v270;
    *((_OWORD *)v105 + 7) = v106;
    v107 = v273;
    *((_OWORD *)v105 + 8) = v272;
    *((_OWORD *)v105 + 9) = v107;
    v108 = v267;
    *((_OWORD *)v105 + 2) = v266;
    *((_OWORD *)v105 + 3) = v108;
    v109 = v269;
    *((_OWORD *)v105 + 4) = v268;
    *((_OWORD *)v105 + 5) = v109;
    v110 = v265;
    *(_OWORD *)v105 = v264;
    *((_OWORD *)v105 + 1) = v110;
    v105[160] = v246;
    v111 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t *))v99[15];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_24526432C((uint64_t)&v264);
    v112 = v235;
    v113 = v102;
    v111(v101, v102, v104, v99);
    v114 = v251;
    v115 = v241;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v251 + 48))(v112, 1, v241) == 1)
    {
      (*(void (**)(char *, uint64_t))(v221 + 8))(v112, v222);
      v116 = (char *)v99[8];
      ((void (*)(_QWORD **__return_ptr, uint64_t, uint64_t *))v116)(&v260, v104, v99);
      v117 = v245;
      if (v260 == 1)
      {
        ((void (*)(uint64_t, unint64_t, uint64_t, uint64_t *))v99[13])(v244, v113, v104, v99);
        v118 = swift_bridgeObjectRelease();
        v255 = &v209;
        MEMORY[0x24BDAC7A8](v118);
        v253 = &v209 - 16;
        v119 = v256;
        *(&v209 - 14) = (uint64_t)v256;
        *(&v209 - 13) = v104;
        v120 = v243;
        *(&v209 - 12) = v243;
        *(&v209 - 11) = (uint64_t)v99;
        v121 = v249;
        *(&v209 - 10) = v96;
        *(&v209 - 9) = v121;
        *(&v209 - 8) = v248;
        *(&v209 - 7) = v117;
        *((_BYTE *)&v209 - 48) = v246;
        *((double *)&v209 - 5) = v55;
        v122 = v239;
        *(&v209 - 4) = v239;
        *(&v209 - 3) = (uint64_t)sub_24534B7B0;
        v123 = v254;
        v208 = v254;
        v124 = v251;
        v125 = v216;
        (*(void (**)(char *, unint64_t, uint64_t))(v251 + 16))(v216, v117, v115);
        v126 = v99;
        v127 = (*(unsigned __int8 *)(v124 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80);
        v128 = (double *)swift_allocObject();
        *((_QWORD *)v128 + 2) = v119;
        v129 = v258;
        *((_QWORD *)v128 + 3) = v258;
        *((_QWORD *)v128 + 4) = v120;
        *((_QWORD *)v128 + 5) = v126;
        *((_QWORD *)v128 + 6) = sub_24534B7B0;
        *((_QWORD *)v128 + 7) = v123;
        v128[8] = v55;
        *((_QWORD *)v128 + 9) = v122;
        (*(void (**)(char *, char *, uint64_t))(v124 + 32))((char *)v128 + v127, v125, v115);
        swift_retain();
        _s16ReplicatorEngine8WatchdogC7execute6within12failureQueue6action0F7HandlerySd_So17OS_dispatch_queueCyACXEyACctFZ_0((uint64_t)v242, (void (*)(uint64_t))sub_24534BC18);
        swift_release();
        swift_release();
        (*(void (**)(unint64_t, uint64_t))(v124 + 8))(v245, v115);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v252 + 8))(v257, v129);
      }
      else
      {
        v148 = v256;
        if (qword_25744FD98 != -1)
          swift_once();
        v149 = sub_245387818();
        __swift_project_value_buffer(v149, (uint64_t)qword_257462FC8);
        swift_bridgeObjectRetain_n();
        v150 = sub_2453877F4();
        v151 = v113;
        v152 = sub_245387D34();
        v153 = os_log_type_enabled(v150, v152);
        v236 = v116;
        if (v153)
        {
          v154 = (uint8_t *)swift_slowAlloc();
          v155 = swift_slowAlloc();
          v260 = (_QWORD *)v155;
          *(_DWORD *)v154 = 136446210;
          v255 = (uint64_t *)(v154 + 4);
          swift_bridgeObjectRetain();
          v259 = sub_2453816D8(v244, v151, (uint64_t *)&v260);
          sub_245387E0C();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_245256000, v150, v152, "Using browser to find %{public}s", v154, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24953317C](v155, -1, -1);
          MEMORY[0x24953317C](v154, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v180 = v228;
        v181 = v227;
        v182 = v220;
        v183 = v219;
        v184 = v218;
        v255 = (uint64_t *)v97;
        sub_2453876C8();
        (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v182, &v231[*(_QWORD *)(*(_QWORD *)v231 + 128)], v183);
        if ((*(unsigned int (**)(char *, uint64_t, uint8_t *))(v180 + 48))(v182, 1, v148) == 1)
        {
          (*(void (**)(char *, uint64_t))(v184 + 8))(v182, v183);
          v260 = 0;
          v261 = 0xE000000000000000;
          sub_245387EA8();
          swift_bridgeObjectRelease();
          v260 = (_QWORD *)0xD000000000000028;
          v261 = 0x8000000245394FB0;
          ((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t *))v236)(&v259, v104, v250);
          sub_245387B90();
          swift_bridgeObjectRelease();
          result = sub_245387F80();
          __break(1u);
        }
        else
        {
          v185 = v212;
          v245 = ~v212;
          v186 = v211;
          v251 = ~v211;
          (*(void (**)(char *, char *, uint8_t *))(v180 + 32))(v226, v182, v148);
          v187 = v225;
          (*(void (**)(char *, char *, uint64_t))(v225 + 16))(v224, v181, v230);
          v210(v240, v96, v104);
          sub_2452B792C(v249, v247, (uint64_t (*)(_QWORD))type metadata accessor for Message);
          sub_245263F38(v248, (uint64_t)v253);
          v188 = (*(unsigned __int8 *)(v187 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80);
          v189 = (v217 + v188 + 7) & 0xFFFFFFFFFFFFFFF8;
          v190 = (v189 + 23) & 0xFFFFFFFFFFFFFFF8;
          v191 = v185 + v190 + 16;
          v192 = v104;
          v193 = v191 & v245;
          v245 = ((unint64_t)v237 + (v191 & v245) + 7) & 0xFFFFFFFFFFFFFFF8;
          v248 = (v245 + 23) & 0xFFFFFFFFFFFFFFF8;
          v194 = (v233 + v248 + 8) & v232;
          v249 = (v213 + v186 + v194) & v251;
          v251 = v249 + v214;
          v195 = (char *)swift_allocObject();
          *((_QWORD *)v195 + 2) = v148;
          *((_QWORD *)v195 + 3) = v192;
          v196 = v243;
          v197 = v250;
          *((_QWORD *)v195 + 4) = v243;
          *((_QWORD *)v195 + 5) = v197;
          (*(void (**)(char *, char *, uint64_t))(v187 + 32))(&v195[v188], v224, v230);
          v198 = (double *)&v195[v189];
          *v198 = v55;
          *((_QWORD *)v198 + 1) = v239;
          v199 = &v195[v190];
          v200 = v244;
          v201 = v238;
          *(_QWORD *)v199 = v244;
          *((_QWORD *)v199 + 1) = v201;
          ((void (*)(char *, char *, uint64_t))v255)(&v195[v193], v240, v192);
          v202 = (uint64_t (**)(uint64_t *, uint64_t, uint64_t))&v195[v245];
          v203 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))v254;
          *v202 = sub_24534B7B0;
          v202[1] = v203;
          *(_QWORD *)&v195[v248] = v231;
          sub_2452B7AB8(v247, (uint64_t)&v195[v194], (uint64_t (*)(_QWORD))type metadata accessor for Message);
          sub_2452BC850((uint64_t)v253, (uint64_t)&v195[v249], &qword_25744F610);
          v195[v251] = v246;
          v204 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(void (*)(_QWORD, _QWORD), void *), char *, uint8_t *, uint64_t, double))(v196 + 16);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          v205 = v200;
          v206 = v226;
          v207 = v256;
          v204(v205, v201, sub_24534BADC, v195, v256, v196, v55);
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          (*(void (**)(char *, uint8_t *))(v228 + 8))(v206, v207);
          (*(void (**)(char *, uint64_t))(v225 + 8))(v227, v230);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v252 + 8))(v257, v192);
        }
      }
    }
    else
    {
      v130 = v236;
      v253 = *(uint64_t **)(v114 + 32);
      ((void (*)(char *, char *, uint64_t))v253)(v236, v112, v115);
      if (qword_25744FD98 != -1)
        swift_once();
      v131 = sub_245387818();
      __swift_project_value_buffer(v131, (uint64_t)qword_257462FC8);
      v132 = v223;
      v255 = *(uint64_t **)(v114 + 16);
      ((void (*)(char *, char *, uint64_t))v255)(v223, v130, v115);
      swift_bridgeObjectRetain_n();
      v133 = sub_2453877F4();
      v134 = sub_245387D34();
      v135 = os_log_type_enabled(v133, v134);
      v136 = v256;
      if (v135)
      {
        v137 = swift_slowAlloc();
        v237 = (uint64_t *)swift_slowAlloc();
        v260 = v237;
        *(_DWORD *)v137 = 136446466;
        swift_bridgeObjectRetain();
        v259 = sub_2453816D8(v244, v113, (uint64_t *)&v260);
        sub_245387E0C();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v137 + 12) = 2082;
        ((void (*)(unint64_t, char *, uint64_t))v255)(v245, v132, v115);
        v138 = sub_245387B48();
        v259 = sub_2453816D8(v138, v139, (uint64_t *)&v260);
        v104 = v258;
        v99 = v250;
        sub_245387E0C();
        v96 = v257;
        swift_bridgeObjectRelease();
        v240 = *(char **)(v251 + 8);
        ((void (*)(char *, uint64_t))v240)(v132, v115);
        _os_log_impl(&dword_245256000, v133, v134, "Connection for %{public}s already exists; sending message immediately: %{public}s",
          (uint8_t *)v137,
          0x16u);
        v140 = v237;
        swift_arrayDestroy();
        MEMORY[0x24953317C](v140, -1, -1);
        v141 = v137;
        v136 = v256;
        MEMORY[0x24953317C](v141, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        v240 = *(char **)(v251 + 8);
        ((void (*)(char *, uint64_t))v240)(v132, v115);
      }

      v156 = v232;
      v157 = v215;
      v250 = &v209;
      MEMORY[0x24BDAC7A8](v158);
      v237 = &v209 - 16;
      *(&v209 - 14) = (uint64_t)v136;
      *(&v209 - 13) = v104;
      *(&v209 - 12) = v243;
      *(&v209 - 11) = (uint64_t)v99;
      v159 = v249;
      *(&v209 - 10) = v96;
      *(&v209 - 9) = v159;
      *(&v209 - 8) = v248;
      *(&v209 - 7) = (uint64_t)v130;
      *((_BYTE *)&v209 - 48) = v246;
      *((double *)&v209 - 5) = v55;
      *(&v209 - 4) = v239;
      *(&v209 - 3) = (uint64_t)sub_24534B7B0;
      v160 = v130;
      v161 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))v254;
      v208 = v254;
      v162 = v247;
      sub_2452B792C(v159, v247, (uint64_t (*)(_QWORD))type metadata accessor for Message);
      ((void (*)(unint64_t, char *, uint64_t))v255)(v245, v160, v115);
      v163 = (v233 + 48) & v156;
      v164 = (v157 + v163) & 0xFFFFFFFFFFFFFFF8;
      v165 = (v164 + 23) & 0xFFFFFFFFFFFFFFF8;
      v166 = v99;
      v167 = (v165 + 23) & 0xFFFFFFFFFFFFFFF8;
      v168 = (v167 + *(unsigned __int8 *)(v251 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v251 + 80);
      v169 = (_QWORD *)swift_allocObject();
      v169[2] = v256;
      v169[3] = v104;
      v169[4] = v243;
      v169[5] = v166;
      sub_2452B7AB8(v162, (uint64_t)v169 + v163, (uint64_t (*)(_QWORD))type metadata accessor for Message);
      v170 = (_QWORD *)((char *)v169 + v164);
      v171 = v238;
      *v170 = v244;
      v170[1] = v171;
      v172 = (uint64_t (**)(uint64_t *, uint64_t, uint64_t))((char *)v169 + v165);
      *v172 = sub_24534B7B0;
      v172[1] = v161;
      v173 = (double *)((char *)v169 + v167);
      *v173 = v55;
      *((_QWORD *)v173 + 1) = v239;
      v174 = v241;
      ((void (*)(char *, unint64_t, uint64_t))v253)((char *)v169 + v168, v245, v241);
      swift_retain();
      _s16ReplicatorEngine8WatchdogC7execute6within12failureQueue6action0F7HandlerySd_So17OS_dispatch_queueCyACXEyACctFZ_0((uint64_t)v242, (void (*)(uint64_t))sub_24534BCA8);
      swift_release();
      swift_release();
      ((void (*)(char *, uint64_t))v240)(v236, v174);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v252 + 8))(v257, v104);
    }
  }
  else
  {
    v142 = v238;
    if (qword_25744FD98 != -1)
      swift_once();
    v143 = sub_245387818();
    __swift_project_value_buffer(v143, (uint64_t)qword_257462FC8);
    swift_bridgeObjectRetain();
    v144 = sub_2453877F4();
    v145 = sub_245387D1C();
    if (os_log_type_enabled(v144, v145))
    {
      v146 = (uint8_t *)swift_slowAlloc();
      v147 = swift_slowAlloc();
      v260 = (_QWORD *)v147;
      *(_DWORD *)v146 = 136446210;
      v256 = v146 + 4;
      swift_bridgeObjectRetain();
      v259 = sub_2453816D8(v244, v142, (uint64_t *)&v260);
      sub_245387E0C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_245256000, v144, v145, "Unable to send message to device: %{public}s; no longer associated with account",
        v146,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v147, -1, -1);
      MEMORY[0x24953317C](v146, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v175 = v254;
    v176 = v243;
    v177 = (uint64_t)v242;
    sub_24533DCEC();
    sub_24534B550();
    v178 = swift_allocError();
    *v179 = 1;
    *v43 = v178;
    swift_storeEnumTagMultiPayload();
    v175(v43);
    (*(void (**)(uint64_t *, uint64_t))(v177 + 8))(v43, v176);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v252 + 8))(v71, v72);
  }
  return result;
}

uint64_t sub_245340F38(uint64_t a1, uint64_t a2, __int128 *a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t (*v24)(_QWORD);
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;

  v7 = v6;
  v46 = a6;
  v45 = a5;
  v42 = a2;
  v41 = a1;
  v10 = *v6;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Message();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a3[7];
  v53 = a3[6];
  v54 = v19;
  v20 = a3[9];
  v55 = a3[8];
  v56 = v20;
  v21 = a3[3];
  v49 = a3[2];
  v50 = v21;
  v22 = a3[5];
  v51 = a3[4];
  v52 = v22;
  v23 = a3[1];
  v47 = *a3;
  v48 = v23;
  v43 = *a4;
  v44 = v7[2];
  sub_2452B792C(v41, (uint64_t)v18, v24);
  sub_245263F38(v42, (uint64_t)v14);
  v25 = (*(unsigned __int8 *)(v16 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v26 = (v17 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = (*(unsigned __int8 *)(v12 + 80) + v26 + 8) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v28 = (v27 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v27 + v13 + 175) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(v10 + 80);
  *(_OWORD *)(v30 + 24) = *(_OWORD *)(v10 + 88);
  *(_QWORD *)(v30 + 40) = *(_QWORD *)(v10 + 104);
  sub_2452B7AB8((uint64_t)v18, v30 + v25, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  *(_QWORD *)(v30 + v26) = v7;
  sub_2452BC850((uint64_t)v14, v30 + v27, &qword_25744F610);
  v31 = v30 + v28;
  v32 = v54;
  *(_OWORD *)(v31 + 96) = v53;
  *(_OWORD *)(v31 + 112) = v32;
  v33 = v56;
  *(_OWORD *)(v31 + 128) = v55;
  *(_OWORD *)(v31 + 144) = v33;
  v34 = v50;
  *(_OWORD *)(v31 + 32) = v49;
  *(_OWORD *)(v31 + 48) = v34;
  v35 = v52;
  *(_OWORD *)(v31 + 64) = v51;
  *(_OWORD *)(v31 + 80) = v35;
  v36 = v48;
  *(_OWORD *)v31 = v47;
  *(_OWORD *)(v31 + 16) = v36;
  *(_BYTE *)(v31 + 160) = v43;
  v37 = (uint64_t *)(v30 + v29);
  v38 = v45;
  v39 = v46;
  *v37 = v45;
  v37[1] = v39;
  swift_retain();
  sub_24526432C((uint64_t)&v47);
  sub_245317690(v38);
  sub_2452E06E8(0x20676E69646E6553, 0xEF6567617373656DLL, v44, (uint64_t)sub_24534CBA4, v30, 0.0);
  return swift_release();
}

uint64_t sub_2453411C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v37 = a7;
  v38 = a1;
  v15 = type metadata accessor for Message();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25744FD98 != -1)
    swift_once();
  v36 = a9;
  v18 = sub_245387818();
  __swift_project_value_buffer(v18, (uint64_t)qword_257462FC8);
  sub_2452B792C(a3, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  v19 = sub_2453877F4();
  v20 = sub_245387D34();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v35 = a4;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc();
    v33 = a8;
    v24 = v23;
    v40 = v23;
    v34 = a3;
    v32 = a6;
    *(_DWORD *)v22 = 136446210;
    v25 = Message.description.getter();
    v39 = sub_2453816D8(v25, v26, &v40);
    a6 = v32;
    a3 = v34;
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_2452B7B5C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for Message);
    _os_log_impl(&dword_245256000, v19, v20, "Sending message with URL: %{public}s", v22, 0xCu);
    swift_arrayDestroy();
    v27 = v24;
    a8 = v33;
    MEMORY[0x24953317C](v27, -1, -1);
    MEMORY[0x24953317C](v22, -1, -1);
  }
  else
  {
    sub_2452B7B5C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  }

  LOBYTE(v40) = v37;
  v28 = swift_allocObject();
  v29 = v36;
  *(_QWORD *)(v28 + 16) = a8;
  *(_QWORD *)(v28 + 24) = v29;
  *(_QWORD *)(v28 + 32) = v38;
  *(_QWORD *)(v28 + 40) = a2;
  sub_245317690(a8);
  swift_retain();
  sub_2453414D8(a3, a5, a6, (unsigned __int8 *)&v40, (void (*)(void *, uint64_t))sub_24534CC9C, (void (*)(void *, uint64_t))v28);
  return swift_release();
}

uint64_t sub_24534146C(uint64_t a1, char a2, void (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v8;

  if (a3)
  {
    v8 = a2 & 1;
    swift_retain();
    a3(a1, v8);
    sub_2453175F8((uint64_t)a3);
  }
  return a5();
}

void sub_2453414D8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, void (*a5)(void *, uint64_t), void (*a6)(void *, uint64_t))
{
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t AssociatedTypeWitness;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  void (*v41)(_QWORD, _QWORD);
  int v42;
  int v43;
  void *v44;
  id v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(void (*)(_QWORD, _QWORD), uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  _BOOL4 v53;
  void (*v54)(void *, uint64_t);
  uint8_t *v55;
  void *v56;
  _BYTE *v57;
  _QWORD *v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(_QWORD, _QWORD);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  void (*v77)(_QWORD, _QWORD);
  void (*v78)(void (*)(_QWORD, _QWORD), uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  char *v80;
  void (*v81)(_QWORD, _QWORD);
  void (*v82)(_QWORD, _QWORD);
  uint64_t v83;
  void (*v84)(char **__return_ptr, uint64_t, uint64_t);
  uint64_t v85;
  void (*v86)(char **__return_ptr, uint64_t, uint64_t);
  char *v87;
  char *v88;
  unint64_t v89;
  char *v90;
  char *v91;
  void (*v92)(uint64_t, uint64_t, char *, char **, uint64_t (*)(), char *, uint64_t, uint64_t);
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  unint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  unint64_t v106;
  void (*v107)(char **__return_ptr, uint64_t, uint64_t);
  char *v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char **__return_ptr, uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  NSObject *v116;
  os_log_type_t v117;
  uint8_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  NSObject *v124;
  os_log_type_t v125;
  _BOOL4 v126;
  _QWORD *v127;
  uint8_t *v128;
  uint64_t v129;
  unint64_t v130;
  char *v131;
  unint64_t v132;
  _QWORD *v133;
  char *v134;
  void (*v135)(uint64_t, uint64_t, char *, char **, uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  void (*v136)(void *, uint64_t);
  void *v137;
  _BYTE *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  void (*v156)(_QWORD, _QWORD);
  _QWORD *v157;
  void (**v158)(void *, uint64_t);
  uint64_t v159;
  void (*v160)(void *, uint64_t);
  char *v161;
  void (*v162)(void (*)(_QWORD, _QWORD), _QWORD *, void (*)(uint64_t, void *), _QWORD *, uint64_t, uint64_t, double);
  void (*v163)(_QWORD, _QWORD);
  char *v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(char *, uint64_t, uint64_t);
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  void (*v171)(char *, char *, uint64_t);
  uint64_t v172;
  char *v173;
  _QWORD *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  int v191;
  char *v192;
  _QWORD *v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  void (*v199)(char **__return_ptr, uint64_t, uint64_t);
  char *v200;
  uint64_t v201;
  uint64_t v202;
  void (*v203)(void *, uint64_t);
  uint64_t v204;
  void (*v205)(void *, uint64_t);
  void (*v206)(_QWORD, _QWORD);
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;

  v7 = v6;
  v203 = (void (*)(void *, uint64_t))a6;
  v205 = a5;
  v197 = a1;
  v198 = a2;
  v10 = (_QWORD *)*v7;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  v178 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v179 = v12;
  v187 = (uint64_t)&v166 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Message();
  v176 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v177 = v14;
  v186 = (uint64_t)&v166 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v10[10];
  v181 = sub_245387E00();
  v180 = *(_QWORD *)(v181 - 8);
  v16 = MEMORY[0x24BDAC7A8](v181);
  v182 = (char *)&v166 - v17;
  v202 = v15;
  v189 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v188 = (char *)&v166 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v10[13];
  v193 = v10;
  v20 = v10[11];
  v208 = v19;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v184 = sub_245387E00();
  v183 = *(_QWORD *)(v184 - 8);
  v22 = MEMORY[0x24BDAC7A8](v184);
  v192 = (char *)&v166 - v23;
  v196 = AssociatedTypeWitness;
  v199 = *(void (**)(char **__return_ptr, uint64_t, uint64_t))(AssociatedTypeWitness - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v175 = (char *)&v166 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v195 = (char *)&v166 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v185 = (char *)&v166 - v29;
  v190 = v30;
  v31 = MEMORY[0x24BDAC7A8](v28);
  v194 = (char *)&v166 - v32;
  v201 = v20;
  v204 = *(_QWORD *)(v20 - 8);
  v33 = *(_QWORD *)(v204 + 64);
  v34 = MEMORY[0x24BDAC7A8](v31);
  v200 = (char *)&v166 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v207 = (uint64_t)&v166 - v35;
  v36 = sub_2453879D4();
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v39 = (uint64_t *)((char *)&v166 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = *(void (**)(_QWORD, _QWORD))a3;
  v40 = *(_QWORD *)(a3 + 8);
  v42 = *(unsigned __int8 *)(a3 + 48);
  v43 = *a4;
  v44 = (void *)v7[2];
  *v39 = v44;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v37 + 104))(v39, *MEMORY[0x24BEE5610], v36);
  v45 = v44;
  LOBYTE(v44) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v37 + 8))(v39, v36);
  if ((v44 & 1) == 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  v191 = v43;
  v46 = (_QWORD *)((char *)v7 + *(_QWORD *)(*v7 + 144));
  v47 = v46[3];
  v48 = v46[4];
  __swift_project_boxed_opaque_existential_1(v46, v47);
  v49 = *(uint64_t (**)(void (*)(_QWORD, _QWORD), uint64_t, uint64_t, uint64_t))(v48 + 8);
  v206 = v41;
  if ((v49(v41, v40, v47, v48) & 1) != 0)
  {
    if (qword_25744FD98 == -1)
    {
LABEL_4:
      v50 = sub_245387818();
      __swift_project_value_buffer(v50, (uint64_t)qword_257462FC8);
      v51 = sub_2453877F4();
      v52 = sub_245387D34();
      v53 = os_log_type_enabled(v51, v52);
      v54 = v205;
      if (v53)
      {
        v55 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v55 = 0;
        _os_log_impl(&dword_245256000, v51, v52, "Cannot send messages to remote device ID not in allow list", v55, 2u);
        MEMORY[0x24953317C](v55, -1, -1);
      }

      if (v54)
      {
        sub_24534B550();
        v56 = (void *)swift_allocError();
        *v57 = 2;
        v54(v56, 1);

      }
      return;
    }
LABEL_36:
    swift_once();
    goto LABEL_4;
  }
  v58 = v7;
  LOBYTE(v210) = v42 == 4;
  swift_bridgeObjectRetain();
  v59 = v207;
  v174 = v58;
  sub_24533D474(&v210, v207);
  v60 = v42 == 5;
  v61 = v40;
  v62 = v201;
  v63 = v208;
  v64 = v206;
  if (v60)
    goto LABEL_10;
  (*(void (**)(char **__return_ptr, uint64_t, uint64_t))(v208 + 72))(&v210, v201, v208);
  v65 = v212;
  v66 = v213;
  __swift_project_boxed_opaque_existential_1(&v210, v212);
  v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 32))(v65, v66);
  v68 = sub_24533CFAC(v67);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v210);
  v69 = sub_245331384(v68);
  swift_bridgeObjectRelease();
  LOBYTE(v68) = sub_24531D83C((uint64_t)v64, v61, v69);
  swift_bridgeObjectRelease();
  if ((v68 & 1) != 0)
  {
LABEL_10:
    v70 = v204;
    v71 = v200;
    v167 = *(void (**)(char *, uint64_t, uint64_t))(v204 + 16);
    v167(v200, v59, v62);
    v72 = *(unsigned __int8 *)(v70 + 80);
    v73 = (v72 + 72) & ~v72;
    v169 = v72;
    v168 = v33 + 7;
    v170 = v72 | 7;
    v74 = (char *)swift_allocObject();
    *((_QWORD *)v74 + 2) = v202;
    *((_QWORD *)v74 + 3) = v62;
    v172 = v193[12];
    *((_QWORD *)v74 + 4) = v172;
    *((_QWORD *)v74 + 5) = v63;
    v75 = (uint64_t)v205;
    *((_QWORD *)v74 + 6) = v174;
    *((_QWORD *)v74 + 7) = v75;
    *((_QWORD *)v74 + 8) = v203;
    v171 = *(void (**)(char *, char *, uint64_t))(v70 + 32);
    v171(&v74[v73], v71, v62);
    v173 = v74;
    v76 = &v74[(v33 + 7 + v73) & 0xFFFFFFFFFFFFFFF8];
    v77 = v206;
    *(_QWORD *)v76 = v206;
    *((_QWORD *)v76 + 1) = v61;
    v78 = *(void (**)(void (*)(_QWORD, _QWORD), uint64_t, uint64_t, uint64_t))(v208 + 120);
    swift_bridgeObjectRetain();
    swift_retain();
    v79 = v208;
    sub_245317690(v75);
    v80 = v192;
    v81 = v77;
    v82 = v77;
    v193 = (_QWORD *)v61;
    v83 = v207;
    v78(v81, v61, v62, v79);
    v84 = v199;
    v85 = v196;
    if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v199 + 6))(v80, 1, v196) == 1)
    {
      (*(void (**)(char *, uint64_t))(v183 + 8))(v80, v184);
      v86 = *(void (**)(char **__return_ptr, uint64_t, uint64_t))(v79 + 64);
      v86(&v210, v62, v79);
      v87 = v195;
      if (v210 == 1)
      {
        (*(void (**)(void (*)(_QWORD, _QWORD), _QWORD *, uint64_t, uint64_t))(v79 + 104))(v82, v193, v62, v79);
        swift_bridgeObjectRelease();
        LOBYTE(v210) = v191;
        v88 = v175;
        (*((void (**)(char *, char *, uint64_t))v84 + 2))(v175, v87, v85);
        v89 = (*((unsigned __int8 *)v84 + 80) + 64) & ~(unint64_t)*((unsigned __int8 *)v84 + 80);
        v90 = (char *)swift_allocObject();
        *((_QWORD *)v90 + 2) = v202;
        *((_QWORD *)v90 + 3) = v62;
        *((_QWORD *)v90 + 4) = v172;
        *((_QWORD *)v90 + 5) = v79;
        v91 = v173;
        *((_QWORD *)v90 + 6) = sub_24534CD40;
        *((_QWORD *)v90 + 7) = v91;
        (*((void (**)(char *, char *, uint64_t))v84 + 4))(&v90[v89], v88, v85);
        v92 = *(void (**)(uint64_t, uint64_t, char *, char **, uint64_t (*)(), char *, uint64_t, uint64_t))(v79 + 128);
        swift_retain();
        v92(v197, v198, v87, &v210, sub_24534D074, v90, v62, v79);
        swift_release();
        swift_release();
        (*((void (**)(char *, uint64_t))v84 + 1))(v87, v85);
        (*(void (**)(uint64_t, uint64_t))(v204 + 8))(v83, v62);
      }
      else
      {
        v199 = v86;
        v121 = v83;
        v122 = v62;
        if (qword_25744FD98 != -1)
          swift_once();
        v123 = sub_245387818();
        __swift_project_value_buffer(v123, (uint64_t)qword_257462FC8);
        swift_bridgeObjectRetain_n();
        v124 = sub_2453877F4();
        v125 = sub_245387D34();
        v126 = os_log_type_enabled(v124, v125);
        v127 = v174;
        if (v126)
        {
          v128 = (uint8_t *)swift_slowAlloc();
          v129 = swift_slowAlloc();
          v210 = (char *)v129;
          *(_DWORD *)v128 = 136446210;
          v130 = (unint64_t)v193;
          v121 = v207;
          swift_bridgeObjectRetain();
          v209 = sub_2453816D8((uint64_t)v206, v130, (uint64_t *)&v210);
          sub_245387E0C();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_245256000, v124, v125, "Using browser to find %{public}s", v128, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24953317C](v129, -1, -1);
          MEMORY[0x24953317C](v128, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v139 = v202;
        v140 = v189;
        v141 = v182;
        v142 = v181;
        v143 = v180;
        (*(void (**)(char *, uint64_t, uint64_t))(v180 + 16))(v182, (uint64_t)v127 + *(_QWORD *)(*v127 + 128), v181);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48))(v141, 1, v139) == 1)
        {
          (*(void (**)(char *, uint64_t))(v143 + 8))(v141, v142);
          v210 = 0;
          v211 = 0xE000000000000000;
          sub_245387EA8();
          swift_bridgeObjectRelease();
          v210 = (char *)0xD000000000000028;
          v211 = 0x8000000245394FB0;
          v199((char **)&v209, v122, v208);
          sub_245387B90();
          swift_bridgeObjectRelease();
          sub_245387F80();
          __break(1u);
        }
        else
        {
          v144 = v169;
          (*(void (**)(char *, char *, uint64_t))(v140 + 32))(v188, v141, v139);
          v167(v200, v121, v122);
          sub_2452B792C(v197, v186, (uint64_t (*)(_QWORD))type metadata accessor for Message);
          sub_245263F38(v198, v187);
          v145 = (v144 + 64) & ~v144;
          v146 = (v168 + v145) & 0xFFFFFFFFFFFFFFF8;
          v147 = (v146 + *(unsigned __int8 *)(v176 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v176 + 80);
          v148 = (v177 + *(unsigned __int8 *)(v178 + 80) + v147) & ~(unint64_t)*(unsigned __int8 *)(v178 + 80);
          v149 = v148 + v179;
          v150 = (_QWORD *)swift_allocObject();
          v151 = (char *)v150 + (v149 & 0xFFFFFFFFFFFFFFF8);
          v150[2] = v139;
          v150[3] = v122;
          v152 = v122;
          v153 = v172;
          v154 = v208;
          v150[4] = v172;
          v150[5] = v154;
          v155 = (char *)v150 + v145;
          v156 = v206;
          v157 = v193;
          v150[6] = v206;
          v150[7] = v157;
          v171(v155, v200, v152);
          v158 = (void (**)(void *, uint64_t))((char *)v150 + v146);
          v159 = (uint64_t)v205;
          v160 = v203;
          *v158 = v205;
          v158[1] = v160;
          sub_2452B7AB8(v186, (uint64_t)v150 + v147, (uint64_t (*)(_QWORD))type metadata accessor for Message);
          sub_2452BC850(v187, (uint64_t)v150 + v148, &qword_25744F610);
          *((_BYTE *)v150 + v149) = v191;
          v161 = v173;
          *((_QWORD *)v151 + 1) = sub_24534CD40;
          *((_QWORD *)v151 + 2) = v161;
          v162 = *(void (**)(void (*)(_QWORD, _QWORD), _QWORD *, void (*)(uint64_t, void *), _QWORD *, uint64_t, uint64_t, double))(v153 + 16);
          swift_bridgeObjectRetain();
          sub_245317690(v159);
          swift_retain();
          v163 = v156;
          v164 = v188;
          v165 = v202;
          v162(v163, v157, sub_24534CF70, v150, v202, v153, 30.0);
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          (*(void (**)(char *, uint64_t))(v189 + 8))(v164, v165);
          (*(void (**)(uint64_t, uint64_t))(v204 + 8))(v207, v201);
        }
      }
    }
    else
    {
      v93 = v62;
      v94 = v80;
      v95 = v194;
      v203 = (void (*)(void *, uint64_t))*((_QWORD *)v84 + 4);
      ((void (*)(char *, char *, uint64_t))v203)(v194, v94, v85);
      if (qword_25744FD98 != -1)
        swift_once();
      v96 = sub_245387818();
      __swift_project_value_buffer(v96, (uint64_t)qword_257462FC8);
      v97 = v185;
      v205 = (void (*)(void *, uint64_t))*((_QWORD *)v84 + 2);
      ((void (*)(char *, char *, uint64_t))v205)(v185, v95, v85);
      v98 = v85;
      v99 = (unint64_t)v193;
      swift_bridgeObjectRetain();
      v100 = sub_2453877F4();
      v101 = sub_245387D34();
      if (os_log_type_enabled(v100, v101))
      {
        v102 = swift_slowAlloc();
        v200 = (char *)swift_slowAlloc();
        v210 = v200;
        *(_DWORD *)v102 = 136446466;
        swift_bridgeObjectRetain();
        v209 = sub_2453816D8((uint64_t)v206, v99, (uint64_t *)&v210);
        sub_245387E0C();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v102 + 12) = 2082;
        v103 = v97;
        v104 = v195;
        ((void (*)(char *, char *, uint64_t))v205)(v195, v103, v98);
        v105 = sub_245387B48();
        v209 = sub_2453816D8(v105, v106, (uint64_t *)&v210);
        sub_245387E0C();
        v79 = v208;
        v93 = v201;
        swift_bridgeObjectRelease();
        v107 = v199;
        v206 = (void (*)(_QWORD, _QWORD))*((_QWORD *)v199 + 1);
        v206(v103, v98);
        _os_log_impl(&dword_245256000, v100, v101, "Connection for %{public}s already exists; sending message immediately: %{public}s",
          (uint8_t *)v102,
          0x16u);
        v108 = v200;
        swift_arrayDestroy();
        v109 = v207;
        MEMORY[0x24953317C](v108, -1, -1);
        v110 = v102;
        v111 = v107;
        MEMORY[0x24953317C](v110, -1, -1);

        v112 = v198;
        v113 = v98;
      }
      else
      {
        swift_bridgeObjectRelease_n();
        v111 = v84;
        v206 = (void (*)(_QWORD, _QWORD))*((_QWORD *)v84 + 1);
        v206(v97, v98);

        v112 = v198;
        v109 = v207;
        v113 = v98;
        v104 = v195;
      }
      LOBYTE(v210) = v191;
      v131 = v194;
      ((void (*)(char *, char *, uint64_t))v205)(v104, v194, v113);
      v132 = (*((unsigned __int8 *)v111 + 80) + 64) & ~(unint64_t)*((unsigned __int8 *)v111 + 80);
      v133 = (_QWORD *)swift_allocObject();
      v133[2] = v202;
      v133[3] = v93;
      v133[4] = v172;
      v133[5] = v79;
      v134 = v173;
      v133[6] = sub_24534CD40;
      v133[7] = v134;
      ((void (*)(char *, char *, uint64_t))v203)((char *)v133 + v132, v104, v113);
      v135 = *(void (**)(uint64_t, uint64_t, char *, char **, uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v79 + 128);
      swift_retain();
      v135(v197, v112, v131, &v210, sub_24534D074, v133, v93, v79);
      swift_release();
      swift_release();
      v206(v131, v113);
      (*(void (**)(uint64_t, uint64_t))(v204 + 8))(v109, v93);
    }
  }
  else
  {
    if (qword_25744FD98 != -1)
      swift_once();
    v114 = sub_245387818();
    __swift_project_value_buffer(v114, (uint64_t)qword_257462FC8);
    v115 = v61;
    swift_bridgeObjectRetain();
    v116 = sub_2453877F4();
    v117 = sub_245387D1C();
    if (os_log_type_enabled(v116, v117))
    {
      v118 = (uint8_t *)swift_slowAlloc();
      v119 = swift_slowAlloc();
      v210 = (char *)v119;
      *(_DWORD *)v118 = 136446210;
      v120 = v207;
      swift_bridgeObjectRetain();
      v209 = sub_2453816D8((uint64_t)v206, v115, (uint64_t *)&v210);
      v59 = v120;
      sub_245387E0C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_245256000, v116, v117, "Unable to send message to device: %{public}s; no longer associated with account",
        v118,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v119, -1, -1);
      MEMORY[0x24953317C](v118, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v136 = v205;
    sub_24533DCEC();
    if (v136)
    {
      sub_24534B550();
      v137 = (void *)swift_allocError();
      *v138 = 1;
      v136(v137, 1);

    }
    (*(void (**)(uint64_t, uint64_t))(v204 + 8))(v59, v62);
  }
}

uint64_t sub_245342768()
{
  sub_24534B0FC();
  return swift_release();
}

uint64_t (*sub_24534278C(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_24533D61C();
  return sub_2453427C0;
}

uint64_t sub_2453427C0(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_24534B0FC();
    swift_release();
  }
  else
  {
    sub_24534B0FC();
  }
  return swift_release();
}

uint64_t sub_245342804(uint64_t a1, void *a2, int a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  dispatch_queue_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD aBlock[6];

  v33 = a7;
  v42 = a5;
  v43 = a6;
  v37 = a3;
  v41 = a2;
  v38 = a9;
  v39 = a8;
  v10 = (_QWORD *)*a4;
  v11 = *(_QWORD *)(*a4 + 104);
  v35 = a1;
  v36 = v11;
  v12 = v10[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v34 = AssociatedTypeWitness;
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v18 = (char *)&v32 - v17;
  v19 = *(_QWORD *)(v12 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = (dispatch_queue_t)a4[2];
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v33, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v18, v35, AssociatedTypeWitness);
  v22 = (*(unsigned __int8 *)(v19 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v23 = (v20 + *(unsigned __int8 *)(v14 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v10[10];
  *(_QWORD *)(v24 + 24) = v12;
  v25 = v36;
  *(_QWORD *)(v24 + 32) = v10[12];
  *(_QWORD *)(v24 + 40) = v25;
  *(_QWORD *)(v24 + 48) = v41;
  LOBYTE(v10) = v37 & 1;
  *(_BYTE *)(v24 + 56) = v37 & 1;
  v26 = v43;
  *(_QWORD *)(v24 + 64) = v42;
  *(_QWORD *)(v24 + 72) = v26;
  (*(void (**)(unint64_t, char *, uint64_t))(v19 + 32))(v24 + v22, v21, v12);
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v24 + v23, v18, v34);
  v27 = (_QWORD *)(v24 + ((v15 + v23 + 7) & 0xFFFFFFFFFFFFFFF8));
  v28 = v38;
  *v27 = v39;
  v27[1] = v28;
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = sub_24534D274;
  *(_QWORD *)(v29 + 24) = v24;
  aBlock[4] = sub_245263BB8;
  aBlock[5] = v29;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525B888;
  aBlock[3] = &block_descriptor_72_0;
  v30 = _Block_copy(aBlock);
  sub_245263EDC(v41, (char)v10);
  sub_245317690(v42);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v40, v30);
  _Block_release(v30);
  LOBYTE(v30) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v30 & 1) != 0)
    __break(1u);
  return result;
}

void sub_245342AB0(void *a1, char a2, void (*a3)(void *, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  id v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  const char *v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if ((a2 & 1) != 0)
  {
    v32 = (uint64_t)a1;
    v17 = a1;
    v18 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C868);
    if ((swift_dynamicCast() & 1) != 0)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a12 + 112))(a6, a10, a12);
      if (qword_25744FD98 != -1)
        swift_once();
      v19 = sub_245387818();
      __swift_project_value_buffer(v19, (uint64_t)qword_257462FC8);
      sub_245263EDC(a1, 1);
      swift_bridgeObjectRetain();
      sub_245263EDC(a1, 1);
      swift_bridgeObjectRetain();
      v20 = sub_2453877F4();
      v21 = sub_245387D1C();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = swift_slowAlloc();
        v23 = (_QWORD *)swift_slowAlloc();
        v29 = swift_slowAlloc();
        v32 = v29;
        *(_DWORD *)v22 = 136446466;
        swift_bridgeObjectRetain();
        sub_2453816D8(a7, a8, &v32);
        sub_245387E0C();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v22 + 12) = 2112;
        v24 = a1;
        v30 = _swift_stdlib_bridgeErrorToNSError();
        sub_245387E0C();
        *v23 = v30;
        sub_245263EE8(a1, 1);
        sub_245263EE8(a1, 1);
        v25 = "Could not send message to %{public}s with error %@; discarding connection and giving up";
        goto LABEL_13;
      }
    }
    else
    {
      if (qword_25744FD98 != -1)
        swift_once();
      v26 = sub_245387818();
      __swift_project_value_buffer(v26, (uint64_t)qword_257462FC8);
      sub_245263EDC(a1, 1);
      swift_bridgeObjectRetain();
      sub_245263EDC(a1, 1);
      swift_bridgeObjectRetain();
      v20 = sub_2453877F4();
      v21 = sub_245387D1C();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = swift_slowAlloc();
        v23 = (_QWORD *)swift_slowAlloc();
        v29 = swift_slowAlloc();
        v32 = v29;
        *(_DWORD *)v22 = 136446466;
        swift_bridgeObjectRetain();
        sub_2453816D8(a7, a8, &v32);
        sub_245387E0C();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v22 + 12) = 2112;
        v27 = a1;
        v31 = _swift_stdlib_bridgeErrorToNSError();
        sub_245387E0C();
        *v23 = v31;
        sub_245263EE8(a1, 1);
        sub_245263EE8(a1, 1);
        v25 = "Could not send message to %{public}s with error %@; abandoning send attempts";
LABEL_13:
        _os_log_impl(&dword_245256000, v20, v21, v25, (uint8_t *)v22, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v23, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v29, -1, -1);
        MEMORY[0x24953317C](v22, -1, -1);

        if (!a3)
          goto LABEL_17;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease_n();
    sub_245263EE8(a1, 1);
    sub_245263EE8(a1, 1);

    if (!a3)
    {
LABEL_17:
      sub_245263EE8(a1, 1);
      return;
    }
LABEL_16:
    v28 = a1;
    a3(a1, 1);
    sub_245263EE8(a1, 1);
    goto LABEL_17;
  }
  if (a3)
  {
    swift_retain();
    a3((void *)1, 0);
    sub_2453175F8((uint64_t)a3);
  }
}

void sub_245342F7C(uint64_t a1, void *a2, uint64_t a3, void (*a4)(char *, uint64_t), uint64_t a5, void (*a6)(void *, uint64_t), uint64_t a7, uint64_t a8, void (*a9)(void *, uint64_t), char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void **v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  void (*v59)(void *, uint64_t);
  void *v60;
  _BYTE *v61;
  void (*v62)(void *, uint64_t);
  id v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  int v69;
  _BOOL4 v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t (*v74)(_QWORD, _QWORD, _QWORD);
  uint64_t v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t, uint64_t);
  char *v81;
  void (*v82)(char *, uint64_t);
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  _BOOL4 v86;
  uint8_t *v87;
  unint64_t v88;
  uint64_t v89;
  uint8_t *v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(void *, uint64_t);
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  void *v99;
  _BYTE *v100;
  char *v101;
  uint64_t v102;
  void (*v103)(char *, char *, uint64_t);
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(uint64_t, void (*)(_QWORD, _QWORD), char *, uint64_t *, uint64_t (*)(), char *, uint64_t, uint64_t);
  _QWORD v113[2];
  uint64_t (*v114)(_QWORD, _QWORD, _QWORD);
  void (*v115)(char *, uint64_t);
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  void (*v125)(char *, uint64_t);
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  void (*v140)(void *, uint64_t);
  uint64_t v141;
  uint64_t v142[2];

  v122 = a8;
  v135 = a7;
  v139 = a2;
  v140 = a6;
  v138 = a5;
  v125 = a4;
  v132 = a3;
  v136 = a14;
  v137 = a16;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v134 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v18 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v119 = (char *)v113 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = v19;
  MEMORY[0x24BDAC7A8](v18);
  v128 = (char *)v113 - v20;
  v130 = v21;
  v131 = sub_245387E00();
  v133 = *(_QWORD *)(v131 - 8);
  v22 = MEMORY[0x24BDAC7A8](v131);
  v127 = (char *)v113 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v126 = (char *)v113 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v123 = (char *)v113 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v129 = (char *)v113 - v28;
  v121 = a15;
  v120 = a13;
  v29 = swift_getAssociatedTypeWitness();
  v124 = type metadata accessor for NetworkDevice(0, v29, v30, v31);
  v32 = *(_QWORD *)(v124 - 8);
  MEMORY[0x24BDAC7A8](v124);
  v34 = (char *)v113 - v33;
  v37 = type metadata accessor for NetworkBrowsingEvent(0, v29, v35, v36);
  v38 = *(_QWORD *)(v37 - 8);
  v39 = MEMORY[0x24BDAC7A8](v37);
  v41 = (char *)v113 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)v113 - v42;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25440C868);
  v44 = sub_245388484();
  MEMORY[0x24BDAC7A8](v44);
  v46 = (void **)((char *)v113 - v45);
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))((char *)v113 - v45, a1, v44);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v48 = *v46;
    if (qword_25744FD98 != -1)
      swift_once();
    v49 = sub_245387818();
    __swift_project_value_buffer(v49, (uint64_t)qword_257462FC8);
    v50 = v48;
    v51 = v48;
    v52 = sub_2453877F4();
    v53 = sub_245387D1C();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      v55 = swift_slowAlloc();
      v141 = (uint64_t)v48;
      v142[0] = v55;
      *(_DWORD *)v54 = 136446210;
      v56 = v48;
      v57 = sub_245387B48();
      v141 = sub_2453816D8(v57, v58, v142);
      sub_245387E0C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_245256000, v52, v53, "Failed to discover endpoint: %{public}s", v54, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v55, -1, -1);
      MEMORY[0x24953317C](v54, -1, -1);
    }
    else
    {

    }
    v62 = v140;
    if (v139)
      objc_msgSend(v139, sel_invalidate);
    if (v62)
    {
      sub_245317690((uint64_t)v62);
      v63 = v48;
      v62(v48, 1);

      sub_2453175F8((uint64_t)v62);
    }
    else
    {

    }
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v38 + 32))(v43, v46, v37);
    if ((*v43 & 1) != 0)
    {
      if (v139)
        objc_msgSend(v139, sel_invalidate);
      v59 = v140;
      if (v140)
      {
        sub_24534B550();
        v60 = (void *)swift_allocError();
        *v61 = 0;
        swift_retain();
        v59(v60, 1);
        sub_2453175F8((uint64_t)v59);

      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v43, v37);
    }
    else
    {
      if (qword_25744FD98 != -1)
        swift_once();
      v64 = sub_245387818();
      v65 = __swift_project_value_buffer(v64, (uint64_t)qword_257462FC8);
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v41, v43, v37);
      v66 = (unint64_t)v125;
      swift_bridgeObjectRetain_n();
      v113[1] = v65;
      v67 = sub_2453877F4();
      v68 = sub_245387D34();
      v69 = v68;
      v70 = os_log_type_enabled(v67, v68);
      v117 = v43;
      v116 = v37;
      if (v70)
      {
        v71 = swift_slowAlloc();
        v114 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))swift_slowAlloc();
        v142[0] = (uint64_t)v114;
        *(_DWORD *)v71 = 136446466;
        LODWORD(v113[0]) = v69;
        swift_bridgeObjectRetain();
        v141 = sub_2453816D8(v132, v66, v142);
        sub_245387E0C();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v71 + 12) = 2082;
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v34, &v41[*(int *)(v37 + 28)], v124);
        v72 = sub_245387B48();
        v141 = sub_2453816D8(v72, v73, v142);
        sub_245387E0C();
        swift_bridgeObjectRelease();
        v115 = *(void (**)(char *, uint64_t))(v38 + 8);
        v115(v41, v37);
        _os_log_impl(&dword_245256000, v67, v113[0], "Device for %{public}s discovered; sending message to %{public}s",
          (uint8_t *)v71,
          0x16u);
        v74 = v114;
        swift_arrayDestroy();
        MEMORY[0x24953317C](v74, -1, -1);
        MEMORY[0x24953317C](v71, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        v115 = *(void (**)(char *, uint64_t))(v38 + 8);
        v115(v41, v37);
      }

      v76 = v129;
      v75 = v130;
      v77 = v66;
      v78 = v132;
      v79 = v134;
      v80 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v134 + 56);
      v80(v129, 1, 1, v130);
      v81 = v123;
      v113[0] = *(_QWORD *)(v137 + 120);
      ((void (*)(uint64_t, unint64_t, uint64_t))v113[0])(v78, v77, v136);
      v114 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v79 + 48);
      LODWORD(v79) = v114(v81, 1, v75);
      v82 = *(void (**)(char *, uint64_t))(v133 + 8);
      v83 = v131;
      v82(v81, v131);
      swift_bridgeObjectRetain_n();
      v84 = sub_2453877F4();
      v85 = sub_245387D34();
      v86 = os_log_type_enabled(v84, v85);
      v125 = v82;
      if ((_DWORD)v79 == 1)
      {
        if (v86)
        {
          v87 = (uint8_t *)swift_slowAlloc();
          v88 = v77;
          v89 = swift_slowAlloc();
          v142[0] = v89;
          *(_DWORD *)v87 = 136446210;
          swift_bridgeObjectRetain();
          v141 = sub_2453816D8(v78, v88, v142);
          v75 = v130;
          v83 = v131;
          sub_245387E0C();
          v82 = v125;
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_245256000, v84, v85, "Connection for %{public}s does not exist; creating new connection...",
            v87,
            0xCu);
          swift_arrayDestroy();
          MEMORY[0x24953317C](v89, -1, -1);
          MEMORY[0x24953317C](v87, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v95 = v117;
        v96 = v126;
        (*(void (**)(char *, uint64_t))(v137 + 96))(&v117[*(int *)(v116 + 28) + (uint64_t)*(int *)(v124 + 32)], v136);
        v82(v76, v83);
        v80(v96, 0, 1, v75);
        v94 = v140;
      }
      else
      {
        if (v86)
        {
          v90 = (uint8_t *)swift_slowAlloc();
          v91 = v77;
          v92 = swift_slowAlloc();
          v142[0] = v92;
          *(_DWORD *)v90 = 136446210;
          swift_bridgeObjectRetain();
          v93 = v132;
          v141 = sub_2453816D8(v132, v91, v142);
          v75 = v130;
          v83 = v131;
          sub_245387E0C();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_245256000, v84, v85, "Connection for %{public}s already exists; using existing connection...",
            v90,
            0xCu);
          swift_arrayDestroy();
          MEMORY[0x24953317C](v92, -1, -1);
          MEMORY[0x24953317C](v90, -1, -1);

          v94 = v140;
          v95 = v117;
          v96 = v126;
        }
        else
        {

          swift_bridgeObjectRelease_n();
          v94 = v140;
          v95 = v117;
          v91 = v77;
          v96 = v126;
          v93 = v132;
        }
        ((void (*)(uint64_t, unint64_t, uint64_t, uint64_t))v113[0])(v93, v91, v136, v137);
        v82 = v125;
        v125(v76, v83);
      }
      v97 = v127;
      v98 = v133;
      (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v76, v96, v83);
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v97, v76, v83);
      if (v114(v97, 1, v75) == 1)
      {
        v82(v97, v83);
        if (v94)
        {
          sub_2453177A8();
          v99 = (void *)swift_allocError();
          *v100 = 0;
          v94(v99, 1);

        }
        v82(v76, v83);
        v101 = v95;
      }
      else
      {
        v140 = a9;
        v135 = a11;
        v102 = v134;
        v103 = *(void (**)(char *, char *, uint64_t))(v134 + 32);
        v103(v128, v97, v75);
        if (v139)
          objc_msgSend(v139, sel_invalidate);
        LOBYTE(v142[0]) = a10;
        v104 = v119;
        v105 = v128;
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v119, v128, v75);
        v106 = *(unsigned __int8 *)(v102 + 80);
        v107 = v75;
        v108 = (v106 + 64) & ~v106;
        v109 = (char *)swift_allocObject();
        v111 = v136;
        v110 = v137;
        *((_QWORD *)v109 + 2) = v120;
        *((_QWORD *)v109 + 3) = v111;
        *((_QWORD *)v109 + 4) = v121;
        *((_QWORD *)v109 + 5) = v110;
        *((_QWORD *)v109 + 6) = v135;
        *((_QWORD *)v109 + 7) = a12;
        v103(&v109[v108], v104, v107);
        v112 = *(void (**)(uint64_t, void (*)(_QWORD, _QWORD), char *, uint64_t *, uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v110 + 128);
        swift_retain();
        v112(v122, (void (*)(_QWORD, _QWORD))v140, v105, v142, sub_24534D074, v109, v111, v110);
        swift_release();
        (*(void (**)(char *, uint64_t))(v134 + 8))(v105, v107);
        v125(v129, v83);
        v101 = v117;
      }
      v115(v101, v116);
    }
  }
}

uint64_t sub_245343C5C(uint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, unint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, _OWORD *a12, unsigned __int8 a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t AssociatedTypeWitness;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _OWORD *v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  void *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _OWORD *v91;
  char *v92;
  int v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  _QWORD aBlock[6];

  v85 = a8;
  v84 = a7;
  v88 = a6;
  v87 = a5;
  v102 = a4;
  v79 = a3;
  v80 = a2;
  v86 = a1;
  v93 = a13;
  v90 = a10;
  v89 = a9;
  v91 = a12;
  v83 = a11;
  v78 = *a4;
  v13 = v78;
  v95 = sub_245387920();
  v98 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95);
  v94 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_245387950();
  v96 = *(_QWORD *)(v15 - 8);
  v97 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v92 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  v81 = *(_QWORD *)(v17 - 8);
  v82 = *(_QWORD *)(v81 + 64);
  MEMORY[0x24BDAC7A8](v17);
  v101 = (uint64_t)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Message();
  v75 = *(_QWORD *)(v19 - 8);
  v76 = *(_QWORD *)(v75 + 64);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = *(_QWORD *)(v13 + 88);
  v99 = *(_QWORD *)(v22 - 8);
  v100 = (uint64_t)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(v99 + 64);
  MEMORY[0x24BDAC7A8](v20);
  v73 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = *(_QWORD *)(v13 + 104);
  v68 = v22;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v25 = sub_245387E00();
  v26 = *(_QWORD *)(v25 - 8);
  v71 = v25;
  v27 = *(_QWORD *)(v26 + 64);
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v67 - v28;
  v72 = (char *)&v67 - v28;
  type metadata accessor for IncomingNetworkMessage(255, AssociatedTypeWitness, v30, v31);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25440C868);
  v32 = sub_245388484();
  v33 = *(_QWORD *)(v32 - 8);
  v69 = v32;
  v34 = *(_QWORD *)(v33 + 64);
  MEMORY[0x24BDAC7A8](v32);
  v70 = (char *)&v67 - v35;
  v36 = *v86;
  v74 = v86[1];
  v86 = (uint64_t *)v102[2];
  (*(void (**)(void))(v33 + 16))();
  v67 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v29, v80, v25);
  v37 = v99;
  (*(void (**)(char *, unint64_t, uint64_t))(v99 + 16))((char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), v84, v22);
  sub_2452B792C(v85, v100, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  sub_245263F38(v83, v101);
  v38 = (*(unsigned __int8 *)(v33 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v39 = (v34 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  v40 = (*(unsigned __int8 *)(v26 + 80) + v39 + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v41 = (v27 + *(unsigned __int8 *)(v37 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v83 = (v23 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
  v42 = (*(unsigned __int8 *)(v75 + 80) + v83 + 16) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
  v85 = (v76 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  v84 = (v85 + 23) & 0xFFFFFFFFFFFFFFF8;
  v43 = (*(unsigned __int8 *)(v81 + 80) + v84 + 8) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
  v44 = (v82 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  v45 = (char *)swift_allocObject();
  v46 = v78;
  v47 = v68;
  *((_QWORD *)v45 + 2) = *(_QWORD *)(v78 + 80);
  *((_QWORD *)v45 + 3) = v47;
  v48 = v77;
  *((_QWORD *)v45 + 4) = *(_QWORD *)(v46 + 96);
  *((_QWORD *)v45 + 5) = v48;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v45[v38], v70, v69);
  v49 = &v45[v39];
  v50 = v88;
  *(_QWORD *)v49 = v87;
  *((_QWORD *)v49 + 1) = v50;
  (*(void (**)(char *, char *, uint64_t))(v67 + 32))(&v45[v40], v72, v71);
  (*(void (**)(char *, char *, uint64_t))(v99 + 32))(&v45[v41], v73, v47);
  v51 = &v45[v83];
  *(_QWORD *)v51 = v36;
  *((_QWORD *)v51 + 1) = v74;
  sub_2452B7AB8(v100, (uint64_t)&v45[v42], (uint64_t (*)(_QWORD))type metadata accessor for Message);
  v52 = &v45[v85];
  v53 = v90;
  *(_QWORD *)v52 = v89;
  *((_QWORD *)v52 + 1) = v53;
  v54 = v101;
  *(_QWORD *)&v45[v84] = v102;
  sub_2452BC850(v54, (uint64_t)&v45[v43], &qword_25744F610);
  v55 = &v45[v44];
  v56 = v91;
  v57 = v91[7];
  *((_OWORD *)v55 + 6) = v91[6];
  *((_OWORD *)v55 + 7) = v57;
  v58 = v56[9];
  *((_OWORD *)v55 + 8) = v56[8];
  *((_OWORD *)v55 + 9) = v58;
  v59 = v56[3];
  *((_OWORD *)v55 + 2) = v56[2];
  *((_OWORD *)v55 + 3) = v59;
  v60 = v56[5];
  *((_OWORD *)v55 + 4) = v56[4];
  *((_OWORD *)v55 + 5) = v60;
  v61 = v56[1];
  *(_OWORD *)v55 = *v56;
  *((_OWORD *)v55 + 1) = v61;
  v55[160] = v93;
  aBlock[4] = sub_24534C77C;
  aBlock[5] = v45;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525DD34;
  aBlock[3] = &block_descriptor_13;
  v62 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24526432C((uint64_t)v56);
  v63 = v92;
  sub_245387938();
  v103 = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
  v64 = v94;
  v65 = v95;
  sub_245387E3C();
  MEMORY[0x2495320E4](0, v63, v64, v62);
  _Block_release(v62);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v64, v65);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v63, v97);
  return swift_release();
}

void sub_245344360(_QWORD *a1, void (*a2)(_QWORD *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7, uint64_t a8, double a9, unint64_t a10, _QWORD *a11, uint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t AssociatedTypeWitness;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void **v41;
  void *v42;
  id v43;
  uint64_t v44;
  int v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  id v66;
  id v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  unint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  id v82;
  NSObject *v83;
  os_log_type_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  id v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  id v95;
  NSObject *v96;
  os_log_type_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  unint64_t v101;
  id v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  id v108;
  void (*v109)(_QWORD *);
  _QWORD *v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  void (*v132)(_QWORD *);
  double v133;
  char *v134;
  _QWORD v135[2];

  v129 = a6;
  v130 = a7;
  v121 = a5;
  v125 = a4;
  v131 = a3;
  v132 = a2;
  v127 = a8;
  v128 = a11;
  v16 = *a11;
  v17 = type metadata accessor for Message();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v117 = (uint64_t)&v113 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v122 = (uint64_t)&v113 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v118 = (uint64_t)&v113 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v126 = (char *)&v113 - v24;
  v25 = *(_QWORD *)(v16 + 104);
  v119 = *(_QWORD *)(v16 + 88);
  v120 = v25;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v124 = sub_245387E00();
  v27 = *(_QWORD *)(v124 - 8);
  v28 = MEMORY[0x24BDAC7A8](v124);
  v30 = (char *)&v113 - v29;
  v31 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)&v113 - v32;
  type metadata accessor for IncomingNetworkMessage(255, AssociatedTypeWitness, v34, v35);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25440C868);
  v36 = sub_245388484();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v123 = (uint64_t *)((char *)&v113 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v38);
  v41 = (void **)((char *)&v113 - v40);
  (*(void (**)(char *, _QWORD *, uint64_t))(v37 + 16))((char *)&v113 - v40, a1, v36);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v113 = v37;
    v114 = v36;
    v116 = a14;
    v42 = *v41;
    v133 = *(double *)&v42;
    v43 = v42;
    if (swift_dynamicCast())
    {
      v44 = v124;
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v30, v125, v124);
      v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v30, 1, AssociatedTypeWitness);
      v115 = a12;
      if (v45 == 1)
      {
        (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v44);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v33, v30, AssociatedTypeWitness);
        (*(void (**)(char *, uint64_t))(v120 + 112))(v33, v119);
        (*(void (**)(char *, uint64_t))(v31 + 8))(v33, AssociatedTypeWitness);
      }
      v63 = (uint64_t)v126;
      v64 = (char *)(v129 - 1);
      if (v129 < 1)
      {
        if (qword_25744FD98 != -1)
          swift_once();
        v92 = sub_245387818();
        __swift_project_value_buffer(v92, (uint64_t)qword_257462FC8);
        v93 = v118;
        sub_2452B792C((uint64_t)v130, v118, (uint64_t (*)(_QWORD))type metadata accessor for Message);
        v94 = v42;
        swift_bridgeObjectRetain();
        v95 = v42;
        swift_bridgeObjectRetain();
        v96 = sub_2453877F4();
        v97 = sub_245387D1C();
        if (os_log_type_enabled(v96, v97))
        {
          v98 = swift_slowAlloc();
          v99 = (_QWORD *)swift_slowAlloc();
          v130 = (_QWORD *)swift_slowAlloc();
          v133 = *(double *)&v130;
          *(_DWORD *)v98 = 136446722;
          sub_245387740();
          sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v100 = sub_2453880F4();
          v135[0] = sub_2453816D8(v100, v101, (uint64_t *)&v133);
          sub_245387E0C();
          swift_bridgeObjectRelease();
          sub_2452B7B5C(v93, (uint64_t (*)(_QWORD))type metadata accessor for Message);
          *(_WORD *)(v98 + 12) = 2082;
          swift_bridgeObjectRetain();
          v135[0] = sub_2453816D8(v127, a10, (uint64_t *)&v133);
          sub_245387E0C();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v98 + 22) = 2112;
          v102 = v42;
          v103 = _swift_stdlib_bridgeErrorToNSError();
          v135[0] = v103;
          sub_245387E0C();
          *v99 = v103;

          _os_log_impl(&dword_245256000, v96, v97, "Could not send message %{public}s to %{public}s with error %@; discarding connection and giving up",
            (uint8_t *)v98,
            0x20u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
          swift_arrayDestroy();
          MEMORY[0x24953317C](v99, -1, -1);
          v104 = v130;
          swift_arrayDestroy();
          MEMORY[0x24953317C](v104, -1, -1);
          MEMORY[0x24953317C](v98, -1, -1);
        }
        else
        {
          sub_2452B7B5C(v93, (uint64_t (*)(_QWORD))type metadata accessor for Message);
          swift_bridgeObjectRelease_n();

        }
        v109 = v132;
        v110 = v123;
        *v123 = v42;
        v111 = v114;
        swift_storeEnumTagMultiPayload();
        v112 = v42;
        v109(v110);

        (*(void (**)(_QWORD *, uint64_t))(v113 + 8))(v110, v111);
      }
      else
      {
        v129 = a13;
        if (qword_25744FD98 != -1)
          swift_once();
        v65 = sub_245387818();
        __swift_project_value_buffer(v65, (uint64_t)qword_257462FC8);
        sub_2452B792C((uint64_t)v130, v63, (uint64_t (*)(_QWORD))type metadata accessor for Message);
        v66 = v42;
        swift_bridgeObjectRetain();
        v67 = v42;
        swift_bridgeObjectRetain();
        v68 = sub_2453877F4();
        v69 = sub_245387D1C();
        if (os_log_type_enabled(v68, v69))
        {
          v70 = swift_slowAlloc();
          v126 = v64;
          v71 = v70;
          v72 = (_QWORD *)swift_slowAlloc();
          v125 = swift_slowAlloc();
          v133 = *(double *)&v125;
          *(_DWORD *)v71 = 136446722;
          sub_245387740();
          sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v73 = sub_2453880F4();
          v135[0] = sub_2453816D8(v73, v74, (uint64_t *)&v133);
          sub_245387E0C();
          swift_bridgeObjectRelease();
          sub_2452B7B5C(v63, (uint64_t (*)(_QWORD))type metadata accessor for Message);
          *(_WORD *)(v71 + 12) = 2082;
          swift_bridgeObjectRetain();
          v135[0] = sub_2453816D8(v127, a10, (uint64_t *)&v133);
          sub_245387E0C();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v71 + 22) = 2112;
          v75 = v42;
          v76 = _swift_stdlib_bridgeErrorToNSError();
          v135[0] = v76;
          sub_245387E0C();
          *v72 = v76;

          _os_log_impl(&dword_245256000, v68, v69, "Could not send message %{public}s to %{public}s with error %@; discarding connection and retrying",
            (uint8_t *)v71,
            0x20u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
          swift_arrayDestroy();
          MEMORY[0x24953317C](v72, -1, -1);
          v77 = v125;
          swift_arrayDestroy();
          MEMORY[0x24953317C](v77, -1, -1);
          v78 = v71;
          v64 = v126;
          MEMORY[0x24953317C](v78, -1, -1);
        }
        else
        {
          sub_2452B7B5C(v63, (uint64_t (*)(_QWORD))type metadata accessor for Message);
          swift_bridgeObjectRelease_n();

        }
        LOBYTE(v135[0]) = v116;
        v133 = a9;
        v134 = v64;
        sub_24533F5B8(v130, v115, v129, v135, &v133, v132, v131);

      }
    }
    else
    {
      v46 = (char *)(v129 - 1);
      if (v129 < 1)
      {
        if (qword_25744FD98 != -1)
          swift_once();
        v79 = sub_245387818();
        __swift_project_value_buffer(v79, (uint64_t)qword_257462FC8);
        v80 = v117;
        sub_2452B792C((uint64_t)v130, v117, (uint64_t (*)(_QWORD))type metadata accessor for Message);
        v81 = v42;
        swift_bridgeObjectRetain();
        v82 = v42;
        swift_bridgeObjectRetain();
        v83 = sub_2453877F4();
        v84 = sub_245387D1C();
        if (os_log_type_enabled(v83, v84))
        {
          v85 = swift_slowAlloc();
          v130 = (_QWORD *)swift_slowAlloc();
          v86 = swift_slowAlloc();
          v133 = *(double *)&v86;
          *(_DWORD *)v85 = 136446722;
          sub_245387740();
          sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v87 = sub_2453880F4();
          v135[0] = sub_2453816D8(v87, v88, (uint64_t *)&v133);
          sub_245387E0C();
          swift_bridgeObjectRelease();
          sub_2452B7B5C(v80, (uint64_t (*)(_QWORD))type metadata accessor for Message);
          *(_WORD *)(v85 + 12) = 2082;
          swift_bridgeObjectRetain();
          v135[0] = sub_2453816D8(v127, a10, (uint64_t *)&v133);
          sub_245387E0C();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v85 + 22) = 2112;
          v89 = v42;
          v90 = _swift_stdlib_bridgeErrorToNSError();
          v135[0] = v90;
          sub_245387E0C();
          v91 = v130;
          *v130 = v90;

          _os_log_impl(&dword_245256000, v83, v84, "Could not send message %{public}s to %{public}s with error %@; abandoning send attempt",
            (uint8_t *)v85,
            0x20u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
          swift_arrayDestroy();
          MEMORY[0x24953317C](v91, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x24953317C](v86, -1, -1);
          MEMORY[0x24953317C](v85, -1, -1);
        }
        else
        {
          sub_2452B7B5C(v80, (uint64_t (*)(_QWORD))type metadata accessor for Message);
          swift_bridgeObjectRelease_n();

        }
        v105 = v114;
        v106 = v113;
        v107 = v123;
        *v123 = v42;
        swift_storeEnumTagMultiPayload();
        v108 = v42;
        v132(v107);

        (*(void (**)(_QWORD *, uint64_t))(v106 + 8))(v107, v105);
      }
      else
      {
        v115 = a12;
        v129 = a13;
        if (qword_25744FD98 != -1)
          swift_once();
        v47 = sub_245387818();
        __swift_project_value_buffer(v47, (uint64_t)qword_257462FC8);
        v48 = v122;
        sub_2452B792C((uint64_t)v130, v122, (uint64_t (*)(_QWORD))type metadata accessor for Message);
        v49 = v42;
        v50 = v42;
        swift_bridgeObjectRetain();
        v51 = v42;
        swift_bridgeObjectRetain();
        v52 = sub_2453877F4();
        v53 = sub_245387D1C();
        if (os_log_type_enabled(v52, v53))
        {
          v54 = swift_slowAlloc();
          v126 = v46;
          v55 = v54;
          v56 = (_QWORD *)swift_slowAlloc();
          v125 = swift_slowAlloc();
          v133 = *(double *)&v125;
          *(_DWORD *)v55 = 136446722;
          sub_245387740();
          sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v57 = sub_2453880F4();
          v135[0] = sub_2453816D8(v57, v58, (uint64_t *)&v133);
          sub_245387E0C();
          swift_bridgeObjectRelease();
          sub_2452B7B5C(v48, (uint64_t (*)(_QWORD))type metadata accessor for Message);
          *(_WORD *)(v55 + 12) = 2082;
          swift_bridgeObjectRetain();
          v135[0] = sub_2453816D8(v127, a10, (uint64_t *)&v133);
          sub_245387E0C();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v55 + 22) = 2112;
          v59 = v49;
          v60 = _swift_stdlib_bridgeErrorToNSError();
          v135[0] = v60;
          sub_245387E0C();
          *v56 = v60;

          _os_log_impl(&dword_245256000, v52, v53, "Could not send message %{public}s to %{public}s with error %@; retrying",
            (uint8_t *)v55,
            0x20u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
          swift_arrayDestroy();
          MEMORY[0x24953317C](v56, -1, -1);
          v61 = v125;
          swift_arrayDestroy();
          MEMORY[0x24953317C](v61, -1, -1);
          v62 = v55;
          v46 = v126;
          MEMORY[0x24953317C](v62, -1, -1);
        }
        else
        {
          sub_2452B7B5C(v48, (uint64_t (*)(_QWORD))type metadata accessor for Message);
          swift_bridgeObjectRelease_n();

        }
        LOBYTE(v135[0]) = v116;
        v133 = a9;
        v134 = v46;
        sub_24533F5B8(v130, v115, v129, v135, &v133, v132, v131);

      }
    }
  }
  else
  {
    v132(a1);
    (*(void (**)(void **, uint64_t))(v37 + 8))(v41, v36);
  }
}

uint64_t sub_2453452A8(double a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, void (*a6)(_QWORD, _QWORD, _QWORD), uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  _BYTE v40[4];
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(_QWORD, _QWORD, _QWORD);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[2];

  v50 = a9;
  v46 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for IncomingNetworkMessage(255, AssociatedTypeWitness, v16, v17);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25440C868);
  v51 = sub_245388484();
  v49 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v19 = (uint64_t *)&v40[-v18];
  v20 = sub_245387E00();
  v47 = *(_QWORD *)(v20 - 8);
  v48 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v22 = &v40[-v21];
  v23 = type metadata accessor for Message();
  MEMORY[0x24BDAC7A8](v23);
  v25 = &v40[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_25744FD98 != -1)
    swift_once();
  v26 = sub_245387818();
  __swift_project_value_buffer(v26, (uint64_t)qword_257462FC8);
  sub_2452B792C(a3, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  swift_bridgeObjectRetain_n();
  v27 = sub_2453877F4();
  v28 = sub_245387D1C();
  v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    v30 = swift_slowAlloc();
    v44 = a7;
    v31 = v30;
    v42 = swift_slowAlloc();
    v53[0] = v42;
    *(_DWORD *)v31 = 136446466;
    v43 = a8;
    sub_245387740();
    v45 = a6;
    sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v41 = v29;
    v32 = sub_2453880F4();
    v52 = sub_2453816D8(v32, v33, v53);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_2452B7B5C((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for Message);
    *(_WORD *)(v31 + 12) = 2082;
    swift_bridgeObjectRetain();
    v52 = sub_2453816D8(v46, a5, v53);
    a6 = v45;
    a8 = v43;
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_245256000, v27, (os_log_type_t)v41, "Timeout when sending message %{public}s to %{public}s", (uint8_t *)v31, 0x16u);
    v34 = v42;
    swift_arrayDestroy();
    MEMORY[0x24953317C](v34, -1, -1);
    MEMORY[0x24953317C](v31, -1, -1);

  }
  else
  {
    sub_2452B7B5C((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for Message);

    swift_bridgeObjectRelease_n();
  }
  *(double *)v53 = a1;
  v53[1] = a8;
  v35 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v35 + 16))(v22, v50, AssociatedTypeWitness);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v22, 0, 1, AssociatedTypeWitness);
  sub_2453177A8();
  v36 = swift_allocError();
  *v37 = 0;
  *v19 = v36;
  v38 = v51;
  swift_storeEnumTagMultiPayload();
  a6(v53, v22, v19);
  (*(void (**)(uint64_t *, uint64_t))(v49 + 8))(v19, v38);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v47 + 8))(v22, v48);
}

uint64_t sub_2453456CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t AssociatedTypeWitness;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t, _BYTE *, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[2];
  _BYTE v55[9];

  v38 = a7;
  v41 = a6;
  v43 = a3;
  v44 = a5;
  v52 = a2;
  v53 = a4;
  v50 = a8;
  v51 = a16;
  v48 = a1;
  v49 = a10;
  v45 = a15;
  v42 = a14;
  v46 = a13;
  v47 = a11;
  v40 = a12;
  v20 = type metadata accessor for Message();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  MEMORY[0x24BDAC7A8](v20);
  v39 = (uint64_t)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v24 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v25 = *(_QWORD *)(v24 + 64);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v27 = (char *)&v38 - v26;
  v55[0] = v41;
  *(double *)v54 = a9;
  v54[1] = a7;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))((char *)&v38 - v26, a5, AssociatedTypeWitness);
  sub_2452B792C(a3, (uint64_t)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for Message);
  v28 = (*(unsigned __int8 *)(v24 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v29 = (v25 + *(unsigned __int8 *)(v21 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v30 = swift_allocObject();
  v31 = v48;
  v32 = v40;
  *(_QWORD *)(v30 + 16) = v47;
  *(_QWORD *)(v30 + 24) = v32;
  v33 = v42;
  *(_QWORD *)(v30 + 32) = v46;
  *(_QWORD *)(v30 + 40) = v33;
  v35 = v49;
  v34 = v50;
  *(_QWORD *)(v30 + 48) = v31;
  *(_QWORD *)(v30 + 56) = v34;
  *(_QWORD *)(v30 + 64) = v35;
  *(double *)(v30 + 72) = a9;
  *(_QWORD *)(v30 + 80) = v38;
  (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v30 + v28, v27, AssociatedTypeWitness);
  sub_2452B7AB8(v39, v30 + v29, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t, _BYTE *, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 136);
  swift_retain();
  swift_retain();
  v36(v43, v53, v44, v55, v54, v51, v30, v32, v33);
  return swift_release();
}

void sub_2453458F0(char a1, void (*a2)(uint64_t *, char *, uint64_t), double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[3];

  v30 = a7;
  v31 = a8;
  v13 = type metadata accessor for Message();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = sub_245387E00();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v29 - v19;
  if ((a1 & 1) != 0)
  {
    *(double *)v32 = a3;
    v32[1] = a5;
    v21 = *(_QWORD *)(AssociatedTypeWitness - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v20, a6, AssociatedTypeWitness);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v20, 0, 1, AssociatedTypeWitness);
    a2(v32, v20, v30);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  else
  {
    if (qword_25744FD98 != -1)
      swift_once();
    v22 = sub_245387818();
    __swift_project_value_buffer(v22, (uint64_t)qword_257462FC8);
    sub_2452B792C(v31, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Message);
    v23 = sub_2453877F4();
    v24 = sub_245387D34();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v32[0] = v26;
      *(_DWORD *)v25 = 136446210;
      sub_245387740();
      sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v27 = sub_2453880F4();
      v32[2] = sub_2453816D8(v27, v28, v32);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_2452B7B5C((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Message);
      _os_log_impl(&dword_245256000, v23, v24, "Received response for %{public}s but watchdog has already fired; ignoring response",
        v25,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v26, -1, -1);
      MEMORY[0x24953317C](v25, -1, -1);
    }
    else
    {
      sub_2452B7B5C((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Message);
    }

  }
}

uint64_t sub_245345BEC(void (*a1)(_QWORD, _QWORD), void *a2, char *a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, void (*a8)(double *, uint64_t *, uint64_t *), double a9, uint64_t a10, uint64_t *a11, uint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void **v51;
  uint64_t v52;
  char *v53;
  double v54;
  double v55;
  void *v56;
  uint64_t v57;
  id v58;
  id v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  unint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t *v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  _BOOL4 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  void (*v94)(_QWORD, _QWORD);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, unint64_t, uint64_t);
  char *v99;
  uint64_t v100;
  uint64_t (*v101)(char *, uint64_t, uint64_t);
  int v102;
  uint64_t v103;
  NSObject *v104;
  os_log_type_t v105;
  _BOOL4 v106;
  uint8_t *v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint8_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  char *v116;
  _BYTE *v117;
  uint64_t v118;
  double v119;
  char *v120;
  void (*v121)(uint64_t *, uint64_t);
  uint64_t v122;
  _BYTE *v123;
  uint64_t *v124;
  uint64_t v125;
  NSObject *v126;
  os_log_type_t v127;
  uint8_t *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  void (*v138)(double *, uint64_t *, uint64_t *);
  uint64_t v139;
  uint64_t v140;
  char *v141;
  unint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v147;
  _BYTE *v148;
  uint64_t *v149;
  uint64_t v150;
  void (*v151)(char *, uint64_t);
  uint64_t v152;
  _BYTE *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(_QWORD, _QWORD);
  id v176;
  uint64_t v177;
  uint64_t *v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  void (*v183)(double *, uint64_t *, uint64_t *);
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t *v187;
  uint64_t v188;
  double v189;
  uint64_t v190;

  v183 = a8;
  v166 = a7;
  v167 = a6;
  v170 = a5;
  v176 = a2;
  v177 = a4;
  v180 = a3;
  v175 = a1;
  v182 = a10;
  v159 = a11;
  v15 = *a11;
  v16 = *(_QWORD *)(*a11 + 88);
  v169 = *(_QWORD *)(*a11 + 104);
  v168 = v16;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for IncomingNetworkMessage(255, AssociatedTypeWitness, v18, v19);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25440C868);
  v20 = sub_245388484();
  v173 = *(_QWORD *)(v20 - 8);
  v174 = v20;
  v21 = MEMORY[0x24BDAC7A8](v20);
  v172 = (uint64_t *)((char *)&v152 - v22);
  v185 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v158 = (char *)&v152 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = v24;
  MEMORY[0x24BDAC7A8](v23);
  v163 = (char *)&v152 - v25;
  v186 = AssociatedTypeWitness;
  v184 = sub_245387E00();
  v187 = *(uint64_t **)(v184 - 8);
  v26 = MEMORY[0x24BDAC7A8](v184);
  v161 = (char *)&v152 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v178 = (uint64_t *)((char *)&v152 - v29);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v164 = (char *)&v152 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v171 = (char *)&v152 - v32;
  v33 = *(_QWORD *)(v15 + 80);
  v156 = *(_QWORD *)(v15 + 96);
  v162 = v33;
  v34 = swift_getAssociatedTypeWitness();
  v165 = type metadata accessor for NetworkDevice(0, v34, v35, v36);
  v160 = *(_QWORD *)(v165 - 8);
  MEMORY[0x24BDAC7A8](v165);
  v38 = (char *)&v152 - v37;
  v41 = type metadata accessor for NetworkBrowsingEvent(0, v34, v39, v40);
  v42 = *(_QWORD *)(v41 - 8);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v45 = (char *)&v152 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43);
  v47 = (char *)&v152 - v46;
  v48 = sub_245388484();
  v49 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v51 = (void **)((char *)&v152 - v50);
  v181 = sub_2453876EC();
  v179 = *(_QWORD *)(v181 - 8);
  MEMORY[0x24BDAC7A8](v181);
  v53 = (char *)&v152 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2453876C8();
  v180 = v53;
  sub_245387668();
  v55 = v54;
  (*(void (**)(void **, void (*)(_QWORD, _QWORD), uint64_t))(v49 + 16))(v51, v175, v48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v56 = *v51;
    if (qword_25744FD98 != -1)
      swift_once();
    v57 = sub_245387818();
    __swift_project_value_buffer(v57, (uint64_t)qword_257462FC8);
    v58 = v56;
    v59 = v56;
    v60 = sub_2453877F4();
    v61 = sub_245387D1C();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)swift_slowAlloc();
      v63 = swift_slowAlloc();
      v188 = (uint64_t)v56;
      v189 = *(double *)&v63;
      *(_DWORD *)v62 = 136446210;
      v64 = v56;
      v65 = sub_245387B48();
      v188 = sub_2453816D8(v65, v66, (uint64_t *)&v189);
      sub_245387E0C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_245256000, v60, v61, "Failed to discover endpoint: %{public}s", v62, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v63, -1, -1);
      MEMORY[0x24953317C](v62, -1, -1);
    }
    else
    {

    }
    v79 = v184;
    v80 = v178;
    if (v176)
      objc_msgSend(v176, sel_invalidate);
    v189 = a9;
    v190 = v177;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v185 + 56))(v80, 1, 1, v186);
    v81 = v172;
    *v172 = (uint64_t)v56;
    v82 = v174;
    swift_storeEnumTagMultiPayload();
    v83 = v56;
    v183(&v189, v80, v81);

    (*(void (**)(uint64_t *, uint64_t))(v173 + 8))(v81, v82);
    ((void (*)(uint64_t *, uint64_t))v187[1])(v80, v79);
  }
  else
  {
    (*(void (**)(_BYTE *, void **, uint64_t))(v42 + 32))(v47, v51, v41);
    v67 = v47;
    v68 = v42;
    if ((*v47 & 1) != 0)
    {
      v69 = v184;
      v70 = v178;
      if (qword_25744FD98 != -1)
        swift_once();
      v71 = sub_245387818();
      __swift_project_value_buffer(v71, (uint64_t)qword_257462FC8);
      v72 = sub_2453877F4();
      v73 = sub_245387D1C();
      if (os_log_type_enabled(v72, v73))
      {
        v74 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v74 = 0;
        _os_log_impl(&dword_245256000, v72, v73, "Device was removed", v74, 2u);
        MEMORY[0x24953317C](v74, -1, -1);
      }

      if (v176)
        objc_msgSend(v176, sel_invalidate);
      v189 = a9;
      v190 = v177;
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v185 + 56))(v70, 1, 1, v186);
      sub_24534B550();
      v75 = swift_allocError();
      *v76 = 0;
      v77 = v172;
      *v172 = v75;
      v78 = v174;
      swift_storeEnumTagMultiPayload();
      v183(&v189, v70, v77);
      (*(void (**)(uint64_t *, uint64_t))(v173 + 8))(v77, v78);
      ((void (*)(uint64_t *, uint64_t))v187[1])(v70, v69);
      (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v67, v41);
    }
    else
    {
      if (qword_25744FD98 != -1)
        swift_once();
      v84 = sub_245387818();
      v85 = __swift_project_value_buffer(v84, (uint64_t)qword_257462FC8);
      (*(void (**)(char *, _BYTE *, uint64_t))(v42 + 16))(v45, v47, v41);
      v86 = v167;
      swift_bridgeObjectRetain_n();
      v154 = v85;
      v87 = sub_2453877F4();
      v88 = sub_245387D34();
      v89 = os_log_type_enabled(v87, v88);
      v155 = v41;
      v153 = v47;
      if (v89)
      {
        v90 = v41;
        v91 = swift_slowAlloc();
        v175 = (void (*)(_QWORD, _QWORD))swift_slowAlloc();
        v189 = *(double *)&v175;
        *(_DWORD *)v91 = 136446466;
        v152 = v68;
        swift_bridgeObjectRetain();
        v188 = sub_2453816D8(v170, v86, (uint64_t *)&v189);
        sub_245387E0C();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v91 + 12) = 2082;
        (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v38, &v45[*(int *)(v90 + 28)], v165);
        v92 = sub_245387B48();
        v188 = sub_2453816D8(v92, v93, (uint64_t *)&v189);
        sub_245387E0C();
        swift_bridgeObjectRelease();
        v160 = *(_QWORD *)(v152 + 8);
        ((void (*)(char *, uint64_t))v160)(v45, v90);
        _os_log_impl(&dword_245256000, v87, v88, "Device for %{public}s discovered; sending message to %{public}s",
          (uint8_t *)v91,
          0x16u);
        v94 = v175;
        swift_arrayDestroy();
        MEMORY[0x24953317C](v94, -1, -1);
        MEMORY[0x24953317C](v91, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        v160 = *(_QWORD *)(v68 + 8);
        ((void (*)(char *, uint64_t))v160)(v45, v41);
      }

      v95 = v170;
      v96 = v185;
      v97 = v186;
      v152 = *(_QWORD *)(v185 + 56);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v152)(v171, 1, 1, v186);
      v98 = *(void (**)(uint64_t, unint64_t, uint64_t))(v169 + 120);
      v99 = v164;
      v100 = v166;
      v98(v95, v86, v168);
      v101 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v96 + 48);
      v102 = v101(v99, 1, v97);
      v103 = v184;
      v175 = (void (*)(_QWORD, _QWORD))v187[1];
      v175(v99, v184);
      swift_bridgeObjectRetain_n();
      v104 = sub_2453877F4();
      v105 = sub_245387D34();
      v106 = os_log_type_enabled(v104, v105);
      if (v102 == 1)
      {
        if (v106)
        {
          v107 = (uint8_t *)swift_slowAlloc();
          v108 = swift_slowAlloc();
          v189 = *(double *)&v108;
          *(_DWORD *)v107 = 136446210;
          v109 = v167;
          swift_bridgeObjectRetain();
          v188 = sub_2453816D8(v170, v109, (uint64_t *)&v189);
          v103 = v184;
          sub_245387E0C();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_245256000, v104, v105, "Connection for %{public}s does not exist; creating new connection...",
            v107,
            0xCu);
          swift_arrayDestroy();
          v110 = v108;
          v97 = v186;
          MEMORY[0x24953317C](v110, -1, -1);
          MEMORY[0x24953317C](v107, -1, -1);

        }
        else
        {

          v109 = v167;
          swift_bridgeObjectRelease_n();
        }
        v115 = v178;
        v116 = v171;
        v117 = v153;
        (*(void (**)(_BYTE *, uint64_t))(v169 + 96))(&v153[*(int *)(v155 + 28) + (uint64_t)*(int *)(v165 + 32)], v168);
        v175(v116, v103);
        ((void (*)(uint64_t *, _QWORD, uint64_t, uint64_t))v152)(v115, 0, 1, v97);
      }
      else
      {
        if (v106)
        {
          v111 = (uint8_t *)swift_slowAlloc();
          v112 = swift_slowAlloc();
          v189 = *(double *)&v112;
          *(_DWORD *)v111 = 136446210;
          v109 = v167;
          swift_bridgeObjectRetain();
          v113 = v170;
          v188 = sub_2453816D8(v170, v109, (uint64_t *)&v189);
          v103 = v184;
          sub_245387E0C();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_245256000, v104, v105, "Connection for %{public}s already exists; using existing connection...",
            v111,
            0xCu);
          swift_arrayDestroy();
          v114 = v112;
          v97 = v186;
          MEMORY[0x24953317C](v114, -1, -1);
          MEMORY[0x24953317C](v111, -1, -1);

          v115 = v178;
          v116 = v171;
        }
        else
        {

          v109 = v167;
          swift_bridgeObjectRelease_n();
          v115 = v178;
          v116 = v171;
          v113 = v170;
        }
        v118 = v113;
        v100 = v166;
        ((void (*)(uint64_t, unint64_t, uint64_t, uint64_t))v98)(v118, v109, v168, v169);
        v175(v116, v103);
        v117 = v153;
      }
      v119 = a9 - v55;
      ((void (*)(char *, uint64_t *, uint64_t))v187[4])(v116, v115, v103);
      if (v176)
        objc_msgSend(v176, sel_invalidate);
      if (v119 <= 0.0)
      {
        swift_bridgeObjectRetain_n();
        v126 = sub_2453877F4();
        v127 = sub_245387D1C();
        if (os_log_type_enabled(v126, v127))
        {
          v128 = (uint8_t *)swift_slowAlloc();
          v129 = swift_slowAlloc();
          v189 = *(double *)&v129;
          *(_DWORD *)v128 = 136446210;
          swift_bridgeObjectRetain();
          v188 = sub_2453816D8(v170, v109, (uint64_t *)&v189);
          sub_245387E0C();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_245256000, v126, v127, "Found device %{public}s but have no time to send the message", v128, 0xCu);
          swift_arrayDestroy();
          v130 = v129;
          v116 = v171;
          MEMORY[0x24953317C](v130, -1, -1);
          MEMORY[0x24953317C](v128, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v189 = a9;
        v190 = v177;
        ((void (*)(uint64_t *, char *, uint64_t))v187[2])(v115, v116, v103);
        sub_2453177A8();
        v147 = swift_allocError();
        *v148 = 0;
        v149 = v172;
        *v172 = v147;
        v150 = v174;
        swift_storeEnumTagMultiPayload();
        v183(&v189, v115, v149);
        (*(void (**)(uint64_t *, uint64_t))(v173 + 8))(v149, v150);
        v151 = (void (*)(char *, uint64_t))v175;
        v175(v115, v103);
        v151(v116, v103);
      }
      else
      {
        v120 = v161;
        ((void (*)(char *, char *, uint64_t))v187[2])(v161, v116, v103);
        if (v101(v120, 1, v97) != 1)
        {
          LODWORD(v174) = a14;
          v176 = *(id *)(v185 + 32);
          v131 = v163;
          v132 = ((uint64_t (*)(char *, char *, uint64_t))v176)(v163, v120, v97);
          v187 = &v152;
          v184 = v159[2];
          MEMORY[0x24BDAC7A8](v132);
          v178 = &v152 - 18;
          v133 = v168;
          *(&v152 - 16) = v162;
          *(&v152 - 15) = v133;
          v134 = v156;
          v135 = v169;
          *(&v152 - 14) = v156;
          *(&v152 - 13) = v135;
          *(&v152 - 12) = v100;
          *(&v152 - 11) = a12;
          *(&v152 - 10) = a13;
          *(&v152 - 9) = (uint64_t)v131;
          v136 = v131;
          *((_BYTE *)&v152 - 64) = v174;
          *((double *)&v152 - 7) = v119;
          v137 = v177;
          v139 = v182;
          v138 = v183;
          *(&v152 - 6) = v177;
          *(&v152 - 5) = (uint64_t)v138;
          *(&v152 - 4) = v139;
          *((double *)&v152 - 3) = a9;
          *(&v152 - 2) = v137;
          v140 = v185;
          v141 = v158;
          (*(void (**)(char *, char *, uint64_t))(v185 + 16))(v158, v136, v97);
          v142 = (*(unsigned __int8 *)(v140 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80);
          v143 = swift_allocObject();
          *(_QWORD *)(v143 + 16) = v162;
          *(_QWORD *)(v143 + 24) = v133;
          *(_QWORD *)(v143 + 32) = v134;
          *(_QWORD *)(v143 + 40) = v135;
          *(_QWORD *)(v143 + 48) = v138;
          *(_QWORD *)(v143 + 56) = v139;
          *(double *)(v143 + 64) = a9;
          *(_QWORD *)(v143 + 72) = v137;
          v144 = v141;
          v145 = v186;
          ((void (*)(unint64_t, char *, uint64_t))v176)(v143 + v142, v144, v186);
          swift_retain();
          _s16ReplicatorEngine8WatchdogC7execute6within12failureQueue6action0F7HandlerySd_So17OS_dispatch_queueCyACXEyACctFZ_0(v184, (void (*)(uint64_t))sub_24534C058);
          swift_release();
          v175(v171, v103);
          ((void (*)(_BYTE *, uint64_t))v160)(v153, v155);
          (*(void (**)(char *, uint64_t))(v179 + 8))(v180, v181);
          return (*(uint64_t (**)(char *, uint64_t))(v185 + 8))(v163, v145);
        }
        v121 = (void (*)(uint64_t *, uint64_t))v175;
        v175(v120, v103);
        v189 = a9;
        v190 = v177;
        ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v152)(v115, 1, 1, v97);
        sub_2453177A8();
        v122 = swift_allocError();
        *v123 = 0;
        v124 = v172;
        *v172 = v122;
        v125 = v174;
        swift_storeEnumTagMultiPayload();
        v183(&v189, v115, v124);
        (*(void (**)(uint64_t *, uint64_t))(v173 + 8))(v124, v125);
        v121(v115, v103);
        v121((uint64_t *)v116, v103);
      }
      ((void (*)(_BYTE *, uint64_t))v160)(v117, v155);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v179 + 8))(v180, v181);
}

uint64_t sub_245346E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, double a9, double a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t AssociatedTypeWitness;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t, _BYTE *, _QWORD *, uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  _BYTE v51[9];

  v46 = a8;
  v47 = a2;
  v39 = a7;
  v40 = a5;
  v38 = a6;
  v48 = a4;
  v49 = a3;
  v45 = a12;
  v43 = a1;
  v44 = a11;
  v41 = a13;
  v42 = a15;
  v19 = type metadata accessor for Message();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v24 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v25 = *(_QWORD *)(v24 + 64);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v27 = (char *)&v36 - v26;
  v51[0] = v38;
  *(double *)v50 = a9;
  v50[1] = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))((char *)&v36 - v26, a5, AssociatedTypeWitness);
  sub_2452B792C(v49, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  v28 = (*(unsigned __int8 *)(v24 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v29 = (v25 + *(unsigned __int8 *)(v20 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v41;
  *(_QWORD *)(v30 + 24) = a14;
  v31 = v43;
  *(_QWORD *)(v30 + 32) = v42;
  *(_QWORD *)(v30 + 40) = a16;
  v32 = v46;
  *(_QWORD *)(v30 + 48) = v31;
  *(_QWORD *)(v30 + 56) = v32;
  v33 = v45;
  *(_QWORD *)(v30 + 64) = v44;
  *(double *)(v30 + 72) = a10;
  *(_QWORD *)(v30 + 80) = v33;
  (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v30 + v28, v27, AssociatedTypeWitness);
  sub_2452B7AB8((uint64_t)v22, v30 + v29, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t, _BYTE *, _QWORD *, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a16 + 136);
  swift_retain();
  swift_retain();
  v34(v49, v48, v40, v51, v50, sub_24534BF90, v30, v37, a16);
  return swift_release();
}

void sub_245347094(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *, char *, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  os_unfair_lock_s *v14;
  uint64_t v15;
  char v16;

  v14 = *(os_unfair_lock_s **)(a2 + 24);
  swift_retain();
  os_unfair_lock_lock(v14 + 4);
  v15 = *(_QWORD *)(a2 + 16);
  v16 = *(_BYTE *)(a2 + 32);
  sub_24534E4EC();
  os_unfair_lock_unlock(v14 + 4);
  swift_release();
  sub_2453458F0((v15 != 0) & ~v16, a3, a8, a4, a5, a6, a1, a7);
}

uint64_t sub_245347174(double a1, uint64_t a2, void (*a3)(_QWORD *, char *, uint64_t *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v24;
  void (*v25)(_QWORD *, char *, uint64_t *);
  _QWORD v26[2];

  v25 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for IncomingNetworkMessage(255, AssociatedTypeWitness, v10, v11);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25440C868);
  v12 = sub_245388484();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)&v24 - v14);
  v16 = sub_245387E00();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v24 - v18;
  *(double *)v26 = a1;
  v26[1] = a5;
  v20 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))((char *)&v24 - v18, a6, AssociatedTypeWitness);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v19, 0, 1, AssociatedTypeWitness);
  sub_2453177A8();
  v21 = swift_allocError();
  *v22 = 0;
  *v15 = v21;
  swift_storeEnumTagMultiPayload();
  v25(v26, v19, v15);
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
}

uint64_t sub_24534732C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, int64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  int64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t *v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = sub_245387E00();
  v47 = *(_QWORD *)(v12 - 8);
  v48 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v46 - v14;
  v53 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v13);
  v46 = (uint64_t *)((char *)&v46 - v16);
  v17 = (*(uint64_t (**)(int64_t, uint64_t))(a7 + 32))(a5, a7);
  v18 = sub_245331384(v17);
  swift_bridgeObjectRelease();
  if ((sub_245347C4C(v18, a3) & 1) != 0)
    return swift_bridgeObjectRelease();
  if (*(_QWORD *)(a3 + 16) <= *(_QWORD *)(v18 + 16) >> 3)
  {
    v55 = v18;
    sub_24534905C(a3);
    v19 = v55;
    if (*(_QWORD *)(v55 + 16))
      goto LABEL_4;
    return swift_bridgeObjectRelease();
  }
  v19 = sub_2453497AC(a3, v18);
  if (!*(_QWORD *)(v19 + 16))
    return swift_bridgeObjectRelease();
LABEL_4:
  if (qword_25744FD98 != -1)
LABEL_36:
    swift_once();
  v20 = sub_245387818();
  __swift_project_value_buffer(v20, (uint64_t)qword_257462FC8);
  swift_bridgeObjectRetain_n();
  v21 = sub_2453877F4();
  v22 = sub_245387D34();
  v23 = os_log_type_enabled(v21, v22);
  v51 = a2;
  v52 = a5;
  if (v23)
  {
    v24 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v49 = v25;
    *(_DWORD *)v24 = 134349314;
    v54 = *(_QWORD *)(v19 + 16);
    v55 = v25;
    a2 = &v55;
    sub_245387E0C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    v50 = v24 + 14;
    swift_bridgeObjectRetain();
    v26 = sub_245387CD4();
    v28 = v27;
    swift_bridgeObjectRelease();
    v54 = sub_2453816D8(v26, v28, &v55);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v21, v22, "Disconnecting %{public}ld connected deviceID(s) no longer associated with the signed-in account: %{public}s", (uint8_t *)v24, 0x16u);
    v29 = v49;
    swift_arrayDestroy();
    MEMORY[0x24953317C](v29, -1, -1);
    MEMORY[0x24953317C](v24, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  a5 = 0;
  v31 = *(_QWORD *)(v19 + 56);
  v49 = v19 + 56;
  v32 = 1 << *(_BYTE *)(v19 + 32);
  v33 = -1;
  if (v32 < 64)
    v33 = ~(-1 << v32);
  v34 = v33 & v31;
  v50 = (unint64_t)(v32 + 63) >> 6;
  while (1)
  {
    if (v34)
    {
      v35 = __clz(__rbit64(v34));
      v34 &= v34 - 1;
      v36 = v35 | (a5 << 6);
      goto LABEL_31;
    }
    v37 = a5 + 1;
    if (__OFADD__(a5, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v37 >= v50)
      return swift_release();
    v38 = *(_QWORD *)(v49 + 8 * v37);
    ++a5;
    if (!v38)
    {
      a5 = v37 + 1;
      if (v37 + 1 >= v50)
        return swift_release();
      v38 = *(_QWORD *)(v49 + 8 * a5);
      if (!v38)
      {
        a5 = v37 + 2;
        if (v37 + 2 >= v50)
          return swift_release();
        v38 = *(_QWORD *)(v49 + 8 * a5);
        if (!v38)
          break;
      }
    }
LABEL_30:
    v34 = (v38 - 1) & v38;
    v36 = __clz(__rbit64(v38)) + (a5 << 6);
LABEL_31:
    v40 = v19;
    v41 = (uint64_t *)(*(_QWORD *)(v19 + 48) + 16 * v36);
    v42 = *v41;
    v43 = v41[1];
    a2 = *(uint64_t **)(a7 + 120);
    swift_bridgeObjectRetain();
    v44 = v52;
    ((void (*)(uint64_t, uint64_t, int64_t, uint64_t))a2)(v42, v43, v52, a7);
    swift_bridgeObjectRelease();
    v45 = v53;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v15, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v47 + 8))(v15, v48);
    }
    else
    {
      a2 = v46;
      (*(void (**)(uint64_t *, char *, uint64_t))(v45 + 32))(v46, v15, AssociatedTypeWitness);
      (*(void (**)(uint64_t *, int64_t, uint64_t))(a7 + 112))(a2, v44, a7);
      (*(void (**)(uint64_t *, uint64_t))(v45 + 8))(a2, AssociatedTypeWitness);
    }
    v19 = v40;
  }
  v39 = v37 + 3;
  if (v39 < v50)
  {
    v38 = *(_QWORD *)(v49 + 8 * v39);
    if (!v38)
    {
      while (1)
      {
        a5 = v39 + 1;
        if (__OFADD__(v39, 1))
          goto LABEL_35;
        if (a5 >= v50)
          return swift_release();
        v38 = *(_QWORD *)(v49 + 8 * a5);
        ++v39;
        if (v38)
          goto LABEL_30;
      }
    }
    a5 = v39;
    goto LABEL_30;
  }
  return swift_release();
}

uint64_t sub_24534783C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *i;
  _QWORD *v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    for (i = (uint64_t *)(swift_bridgeObjectRetain() + 40); ; i += 2)
    {
      v8 = *i;
      v9 = *(_QWORD *)(a3 + 16);
      if (v9)
      {
        v13 = *i;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25744F670);
        v6 = (_QWORD *)swift_allocObject();
        v10 = _swift_stdlib_malloc_size(v6);
        v11 = v10 - 32;
        if (v10 < 32)
          v11 = v10 - 17;
        v6[2] = v9;
        v6[3] = 2 * (v11 >> 4);
        v14 = sub_2453308D4((uint64_t)&v15, v6 + 4, v9, a3);
        swift_bridgeObjectRetain_n();
        swift_unknownObjectRetain();
        result = sub_2452ECE70();
        if (v14 != v9)
        {
          __break(1u);
          return result;
        }
        swift_bridgeObjectRelease();
        v8 = v13;
      }
      else
      {
        swift_unknownObjectRetain();
        v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, _UNKNOWN **, _QWORD *, uint64_t, uint64_t))(v8 + 32))(a2, &off_251640FF8, v6, ObjectType, v8);
      swift_unknownObjectRelease();
      swift_release();
      if (!--v3)
        return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_2453479D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t ObjectType;

  result = MEMORY[0x24953323C](v3 + 16);
  if (result)
  {
    v8 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(a1, a2, a3, ObjectType, v8);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_245347A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v10;
  uint64_t ObjectType;

  result = MEMORY[0x24953323C](v4 + 16);
  if (result)
  {
    v10 = *(_QWORD *)(v4 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, a2, a3, a4, ObjectType, v10);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_245347AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t ObjectType;
  char v10;

  result = MEMORY[0x24953323C](v3 + 16);
  if (result)
  {
    v8 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 24))(a1, a2, a3, ObjectType, v8);
    swift_unknownObjectRelease();
    return v10 & 1;
  }
  return result;
}

uint64_t sub_245347B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t ObjectType;

  result = MEMORY[0x24953323C](v3 + 16);
  if (result)
  {
    v8 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 32))(a1, a2, a3, ObjectType, v8);
    return swift_unknownObjectRelease();
  }
  return result;
}

void type metadata accessor for NetworkSyncService.WeakDelegate()
{
  JUMPOUT(0x249533038);
}

unint64_t sub_245347C08()
{
  unint64_t result;

  result = qword_25744FCA8;
  if (!qword_25744FCA8)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for NetworkMessagingConnectionType, &type metadata for NetworkMessagingConnectionType);
    atomic_store(result, (unint64_t *)&qword_25744FCA8);
  }
  return result;
}

uint64_t sub_245347C4C(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t i;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v29 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v31 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v30)
        return 1;
      v11 = *(_QWORD *)(v29 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v30)
          return 1;
        v11 = *(_QWORD *)(v29 + 8 * v12);
        if (!v11)
        {
          v12 = v3 + 4;
          if (v3 + 4 >= v30)
            return 1;
          v11 = *(_QWORD *)(v29 + 8 * v12);
          if (!v11)
            break;
        }
      }
    }
LABEL_25:
    v6 = (v11 - 1) & v11;
    v31 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    v14 = result;
    v15 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    sub_24538843C();
    swift_bridgeObjectRetain();
    sub_245387B6C();
    v18 = sub_245388478();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_41;
    v21 = *(_QWORD *)(a2 + 48);
    v22 = (_QWORD *)(v21 + 16 * v20);
    v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_245388274() & 1) == 0)
    {
      v24 = ~v19;
      for (i = v20 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v21 + 16 * v26);
        v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_245388274() & 1) != 0)
          goto LABEL_7;
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    result = v14;
    v3 = v31;
  }
  v13 = v3 + 5;
  if (v3 + 5 >= v30)
    return 1;
  v11 = *(_QWORD *)(v29 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_25;
  }
LABEL_45:
  __break(1u);
  return result;
}

void *sub_245347EEC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452E20);
  v2 = *v0;
  v3 = sub_245387E84();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24534809C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_245387740();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452E48);
  v6 = *v0;
  v7 = sub_245387E84();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_2453482C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452EC0);
  v2 = *v0;
  v3 = sub_245387E84();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_245348450()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = type metadata accessor for Record.ID(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452EB0);
  v6 = *v0;
  v7 = sub_245387E84();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    sub_2452B792C(*(_QWORD *)(v6 + 48) + v20, (uint64_t)v5, type metadata accessor for Record.ID);
    result = (void *)sub_2452B7AB8((uint64_t)v5, *(_QWORD *)(v8 + 48) + v20, type metadata accessor for Record.ID);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_245348670()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450398);
  v2 = *v0;
  v3 = sub_245387E84();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_28;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_28;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = v17[2];
    v20 = v17[3];
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    v21[2] = v19;
    v21[3] = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 3;
  if (v24 >= v13)
    goto LABEL_28;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_245348830(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  size_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[2];

  v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x24BDAC8D0];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_245348980((_QWORD *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    if (v1)
      swift_willThrow();
    else
      return v6;
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v2 = sub_245348980((unint64_t *)v7, v4, v2);
    MEMORY[0x24953317C](v7, -1, -1);
  }
  return v2;
}

uint64_t sub_245348980(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34[2];
  unint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _OWORD v47[3];
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  int64_t v55;

  v34[0] = a2;
  v35 = a1;
  v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v4 = MEMORY[0x24BDAC7A8](v44);
  v40 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)v34 - v6;
  v43 = type metadata accessor for PairingRelationship();
  v42 = *(_QWORD *)(v43 - 8);
  result = MEMORY[0x24BDAC7A8](v43);
  v41 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = 0;
  v9 = 0;
  v45 = (_QWORD *)a3;
  v10 = *(_QWORD *)(a3 + 64);
  v37 = a3 + 64;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v38 = (unint64_t)(v11 + 63) >> 6;
  v14 = (uint64_t)v41;
  v15 = v39;
  v16 = v40;
  while (1)
  {
    if (v13)
    {
      v46 = (v13 - 1) & v13;
      v55 = v9;
      v17 = __clz(__rbit64(v13)) | (v9 << 6);
      goto LABEL_5;
    }
    v30 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v30 >= v38)
      return sub_24532AF4C(v35, v34[0], v36, v45);
    v31 = *(_QWORD *)(v37 + 8 * v30);
    v32 = v9 + 1;
    if (!v31)
    {
      v32 = v9 + 2;
      if (v9 + 2 >= v38)
        return sub_24532AF4C(v35, v34[0], v36, v45);
      v31 = *(_QWORD *)(v37 + 8 * v32);
      if (!v31)
      {
        v32 = v9 + 3;
        if (v9 + 3 >= v38)
          return sub_24532AF4C(v35, v34[0], v36, v45);
        v31 = *(_QWORD *)(v37 + 8 * v32);
        if (!v31)
          break;
      }
    }
LABEL_21:
    v46 = (v31 - 1) & v31;
    v55 = v32;
    v17 = __clz(__rbit64(v31)) + (v32 << 6);
LABEL_5:
    v18 = (uint64_t *)(v45[6] + 16 * v17);
    v19 = *v18;
    v20 = v18[1];
    sub_2452B792C(v45[7] + *(_QWORD *)(v42 + 72) * v17, v14, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v21 = v44;
    v22 = (uint64_t)v15 + *(int *)(v44 + 48);
    *v15 = v19;
    v15[1] = v20;
    sub_2452B792C(v14, v22, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v23 = (uint64_t)v16 + *(int *)(v21 + 48);
    *v16 = v19;
    v16[1] = v20;
    sub_2452B792C(v22, v23, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    swift_bridgeObjectRetain_n();
    sub_245263F80((uint64_t)v15, (uint64_t *)&unk_25744FF90);
    swift_bridgeObjectRelease();
    v24 = (_OWORD *)(v23 + *(int *)(v43 + 20));
    v25 = v24[7];
    v51 = v24[6];
    v52 = v25;
    v26 = v24[9];
    v53 = v24[8];
    v54 = v26;
    v27 = v24[3];
    v47[2] = v24[2];
    v48 = v27;
    v28 = v24[5];
    v49 = v24[4];
    v50 = v28;
    v29 = v24[1];
    v47[0] = *v24;
    v47[1] = v29;
    sub_24526432C((uint64_t)v47);
    sub_2452B7B5C(v23, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    LODWORD(v19) = v48;
    sub_245269928((uint64_t)v47);
    sub_2452B7B5C(v14, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    result = swift_bridgeObjectRelease();
    if ((_DWORD)v19 == 4)
    {
      *(unint64_t *)((char *)v35 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      if (__OFADD__(v36, 1))
        goto LABEL_27;
      ++v36;
    }
    v9 = v55;
    v13 = v46;
  }
  v33 = v9 + 4;
  if (v9 + 4 >= v38)
    return sub_24532AF4C(v35, v34[0], v36, v45);
  v31 = *(_QWORD *)(v37 + 8 * v33);
  if (v31)
  {
    v32 = v9 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v32 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v32 >= v38)
      return sub_24532AF4C(v35, v34[0], v36, v45);
    v31 = *(_QWORD *)(v37 + 8 * v32);
    ++v33;
    if (v31)
      goto LABEL_21;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_245348DA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  int64_t v25;

  v3 = sub_245387740();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v24 - v12;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v14 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(a1 + 56);
  v25 = (unint64_t)(v15 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  if (!v17)
    goto LABEL_6;
LABEL_5:
  v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v13, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v4 + 72) * i, v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1)
      return swift_release();
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v13, v3);
    sub_245349C14((uint64_t)v6, (uint64_t)v10);
    sub_245263F80((uint64_t)v10, &qword_25440C700);
    result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v17)
      goto LABEL_5;
LABEL_6:
    v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v21 >= v25)
      goto LABEL_25;
    v22 = *(_QWORD *)(v14 + 8 * v21);
    ++v18;
    if (!v22)
    {
      v18 = v21 + 1;
      if (v21 + 1 >= v25)
        goto LABEL_25;
      v22 = *(_QWORD *)(v14 + 8 * v18);
      if (!v22)
      {
        v18 = v21 + 2;
        if (v21 + 2 >= v25)
          goto LABEL_25;
        v22 = *(_QWORD *)(v14 + 8 * v18);
        if (!v22)
        {
          v18 = v21 + 3;
          if (v21 + 3 >= v25)
            goto LABEL_25;
          v22 = *(_QWORD *)(v14 + 8 * v18);
          if (!v22)
            break;
        }
      }
    }
LABEL_21:
    v17 = (v22 - 1) & v22;
  }
  v23 = v21 + 4;
  if (v23 >= v25)
  {
LABEL_25:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v13, 1, 1, v3);
    return swift_release();
  }
  v22 = *(_QWORD *)(v14 + 8 * v23);
  if (v22)
  {
    v18 = v23;
    goto LABEL_21;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v25)
      goto LABEL_25;
    v22 = *(_QWORD *)(v14 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_21;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_24534905C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v7)
        return swift_release();
      v15 = *(_QWORD *)(v3 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v7)
          return swift_release();
        v15 = *(_QWORD *)(v3 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v7)
            return swift_release();
          v15 = *(_QWORD *)(v3 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_245349E50(v12, v13);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v7)
    return swift_release();
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2453491F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t isStackAllocationSafe;
  char v43;
  unint64_t v44;
  size_t v45;
  uint64_t v46;
  void *v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  unint64_t v60;
  uint64_t v61;

  v61 = *MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_245387740();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v55 = (char *)&v49 - v12;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  v13 = -1 << *(_BYTE *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = ~v13;
  v16 = -v13;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v56 = a1;
  v57 = a1 + 56;
  v18 = a1;
  v19 = a1 + 56;
  v20 = v17 & v14;
  v21 = v15;
  v58 = v15;
  v59 = 0;
  v60 = v17 & v14;
  v54 = (char *)(a2 + 56);
  v22 = v18;
  swift_bridgeObjectRetain();
  v23 = 0;
  v50 = v6;
  v53 = a2;
  v51 = v20;
  v52 = 0;
  if (!v20)
    goto LABEL_8;
LABEL_6:
  v24 = (v20 - 1) & v20;
  v25 = __clz(__rbit64(v20)) | (v23 << 6);
  v26 = v23;
  v27 = v19;
LABEL_7:
  (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v8 + 72) * v25, v7);
  v28 = 0;
  while (1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v28, 1, v7);
    v56 = v22;
    v57 = v27;
    v58 = v21;
    v59 = v26;
    v60 = v24;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_2452ECE70();
      sub_245263F80((uint64_t)v6, &qword_25440C700);
      return v53;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v55, v6, v7);
    v32 = v53;
    sub_24525C6C4(&qword_25744F6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    v33 = sub_245387AAC();
    v34 = -1 << *(_BYTE *)(v32 + 32);
    v35 = v33 & ~v34;
    if (((*(_QWORD *)&v54[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) != 0)
      break;
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
LABEL_34:
    v41(v55, v7);
    v23 = v59;
    v20 = v60;
    v22 = v56;
    v19 = v57;
    v21 = v58;
    v6 = v50;
    v51 = v60;
    v52 = v59;
    if (v60)
      goto LABEL_6;
LABEL_8:
    v26 = v23 + 1;
    if (__OFADD__(v23, 1))
      __break(1u);
    v27 = v19;
    v29 = (unint64_t)(v21 + 64) >> 6;
    if (v26 >= v29)
      goto LABEL_26;
    v30 = *(_QWORD *)(v19 + 8 * v26);
    if (v30)
      goto LABEL_11;
    v23 += 2;
    if (v26 + 1 >= v29)
      goto LABEL_36;
    v30 = *(_QWORD *)(v19 + 8 * v23);
    if (v30)
      goto LABEL_14;
    if (v26 + 2 >= v29)
    {
LABEL_26:
      v24 = 0;
      v28 = 1;
      v26 = v23;
    }
    else
    {
      v30 = *(_QWORD *)(v19 + 8 * (v26 + 2));
      if (v30)
      {
        v26 += 2;
        goto LABEL_11;
      }
      v23 = v26 + 3;
      if (v26 + 3 >= v29)
      {
        v24 = 0;
        v28 = 1;
        v26 += 2;
      }
      else
      {
        v30 = *(_QWORD *)(v19 + 8 * v23);
        if (v30)
        {
LABEL_14:
          v26 = v23;
LABEL_11:
          v24 = (v30 - 1) & v30;
          v25 = __clz(__rbit64(v30)) + (v26 << 6);
          goto LABEL_7;
        }
        v26 += 4;
        if (v26 >= v29)
          goto LABEL_26;
        v30 = *(_QWORD *)(v19 + 8 * v26);
        if (v30)
          goto LABEL_11;
        v26 = v29 - 1;
        v31 = v52 + 6;
        while (v29 != v31)
        {
          v30 = *(_QWORD *)(v19 + 8 * v31++);
          if (v30)
          {
            v26 = v31 - 1;
            goto LABEL_11;
          }
        }
LABEL_36:
        v24 = 0;
        v28 = 1;
      }
    }
  }
  v36 = v32;
  v37 = ~v34;
  v38 = *(_QWORD *)(v8 + 72);
  v39 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  while (1)
  {
    v39(v11, *(_QWORD *)(v36 + 48) + v38 * v35, v7);
    sub_24525C6C4(&qword_257452430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    v40 = sub_245387AE8();
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
    v41(v11, v7);
    if ((v40 & 1) != 0)
      break;
    v35 = (v35 + 1) & v37;
    if (((*(_QWORD *)&v54[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) == 0)
      goto LABEL_34;
  }
  isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v41)(v55, v7);
  v43 = *(_BYTE *)(v36 + 32);
  v44 = (unint64_t)((1 << v43) + 63) >> 6;
  v45 = 8 * v44;
  if ((v43 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    memcpy((char *)&v49 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0), v54, v45);
    v46 = sub_245349FDC((unint64_t *)((char *)&v49 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0)), v44, v36, v35, &v56);
    swift_release();
    sub_2452ECE70();
  }
  else
  {
    v48 = (void *)swift_slowAlloc();
    memcpy(v48, v54, v45);
    v46 = sub_245349FDC((unint64_t *)v48, v44, v36, v35, &v56);
    swift_release();
    sub_2452ECE70();
    MEMORY[0x24953317C](v48, -1, -1);
  }
  return v46;
}

uint64_t sub_2453497AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  char v29;
  unint64_t v30;
  size_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = a2;
  v43 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v37 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v35 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v36 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36)
          goto LABEL_47;
        v13 = *(_QWORD *)(v37 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v36)
            goto LABEL_47;
          v13 = *(_QWORD *)(v37 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v36)
              goto LABEL_47;
            v13 = *(_QWORD *)(v37 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v36)
                goto LABEL_47;
              v13 = *(_QWORD *)(v37 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_2452ECE70();
                  return v2;
                }
                v13 = *(_QWORD *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v36)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v37 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_24538843C();
      swift_bridgeObjectRetain();
      sub_245387B6C();
      v19 = sub_245388478();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_245388274() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_245388274() & 1) == 0);
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v29 = *(_BYTE *)(v2 + 32);
    v30 = (unint64_t)((1 << v29) + 63) >> 6;
    v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x24BDAC7A8](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      v32 = sub_24534A434((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_2452ECE70();
    }
    else
    {
      v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      v32 = sub_24534A434((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_2452ECE70();
      MEMORY[0x24953317C](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_245349C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_245387740();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_24525C6C4(&qword_25744F6D0, v11, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_245387AAC();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_24525C6C4(&qword_257452430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v19 = sub_245387AE8();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_24534809C();
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_24534ACBC(v14);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

uint64_t sub_245349E50(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_24538843C();
  swift_bridgeObjectRetain();
  sub_245387B6C();
  v6 = sub_245388478();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_245388274() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_245388274() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_245347EEC();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_24534AF38(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_245349FDC(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  char v39;
  int64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t *v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;

  v49 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_245387740();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v14);
  v57 = (char *)&v48 - v18;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v21 = *(unint64_t *)((char *)a1 + v20) & ((-1 << a4) - 1);
  v51 = a1;
  v52 = v11;
  *(unint64_t *)((char *)a1 + v20) = v21;
  v22 = v19 - 1;
  v55 = a3 + 56;
  v56 = a3;
  v53 = a5;
  while (2)
  {
    v50 = v22;
    do
    {
      while (1)
      {
        v24 = *a5;
        v25 = a5[1];
        v27 = a5[2];
        v26 = a5[3];
        v28 = a5[4];
        v54 = v27;
        if (v28)
        {
          v29 = (v28 - 1) & v28;
          v30 = __clz(__rbit64(v28)) | (v26 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, *(_QWORD *)(v24 + 48) + *(_QWORD *)(v13 + 72) * v30, v12);
          v31 = 0;
          goto LABEL_8;
        }
        v40 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        v41 = (unint64_t)(v27 + 64) >> 6;
        if (v40 >= v41)
        {
          v29 = 0;
          v31 = 1;
          goto LABEL_8;
        }
        v42 = *(_QWORD *)(v25 + 8 * v40);
        if (v42)
          goto LABEL_17;
        v45 = v26 + 2;
        if (v26 + 2 >= v41)
          goto LABEL_35;
        v42 = *(_QWORD *)(v25 + 8 * v45);
        if (v42)
          goto LABEL_23;
        if (v26 + 3 >= v41)
          goto LABEL_36;
        v42 = *(_QWORD *)(v25 + 8 * (v26 + 3));
        if (v42)
        {
          v40 = v26 + 3;
          goto LABEL_17;
        }
        v45 = v26 + 4;
        if (v26 + 4 < v41)
        {
          v42 = *(_QWORD *)(v25 + 8 * v45);
          if (v42)
          {
LABEL_23:
            v40 = v45;
LABEL_17:
            v29 = (v42 - 1) & v42;
            v30 = __clz(__rbit64(v42)) + (v40 << 6);
            v26 = v40;
            goto LABEL_7;
          }
          v40 = v26 + 5;
          if (v26 + 5 < v41)
          {
            v42 = *(_QWORD *)(v25 + 8 * v40);
            if (v42)
              goto LABEL_17;
            v40 = v41 - 1;
            v46 = v26 + 6;
            while (v41 != v46)
            {
              v42 = *(_QWORD *)(v25 + 8 * v46++);
              if (v42)
              {
                v40 = v46 - 1;
                goto LABEL_17;
              }
            }
LABEL_35:
            v29 = 0;
            v31 = 1;
            v26 = v40;
            goto LABEL_8;
          }
LABEL_36:
          v29 = 0;
          v31 = 1;
          v26 = v45;
          goto LABEL_8;
        }
        v29 = 0;
        v31 = 1;
        v26 += 3;
LABEL_8:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v31, 1, v12);
        *a5 = v24;
        a5[1] = v25;
        a5[2] = v54;
        a5[3] = v26;
        a5[4] = v29;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        {
          sub_245263F80((uint64_t)v11, &qword_25440C700);
          v47 = v56;
          swift_retain();
          return sub_24534A728(v51, v49, v50, v47);
        }
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v57, v11, v12);
        v32 = v56;
        sub_24525C6C4(&qword_25744F6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v33 = sub_245387AAC();
        v34 = -1 << *(_BYTE *)(v32 + 32);
        v35 = v33 & ~v34;
        if (((*(_QWORD *)(v55 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) != 0)
          break;
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
LABEL_4:
        result = v23(v57, v12);
        v11 = v52;
        a5 = v53;
      }
      v36 = ~v34;
      v37 = *(_QWORD *)(v13 + 72);
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      while (1)
      {
        v38(v16, *(_QWORD *)(v56 + 48) + v37 * v35, v12);
        sub_24525C6C4(&qword_257452430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v39 = sub_245387AE8();
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
        v23(v16, v12);
        if ((v39 & 1) != 0)
          break;
        v35 = (v35 + 1) & v36;
        if (((*(_QWORD *)(v55 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
          goto LABEL_4;
      }
      result = v23(v57, v12);
      v43 = (v35 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v11 = v52;
      v44 = *(unint64_t *)((char *)v51 + v43);
      *(unint64_t *)((char *)v51 + v43) = v44 & ~(1 << v35);
      a5 = v53;
    }
    while ((v44 & (1 << v35)) == 0);
    v22 = v50 - 1;
    if (__OFSUB__(v50, 1))
    {
LABEL_44:
      __break(1u);
      return result;
    }
    if (v50 != 1)
      continue;
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_24534A434(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  int64_t v36;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;

  v7 = *(_QWORD *)(a3 + 16);
  v39 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v40 = a3 + 56;
  while (2)
  {
    v38 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        v14 = (unint64_t)(a5[2] + 64) >> 6;
        v15 = a5[3];
        if (v13 >= v14)
          goto LABEL_45;
        v16 = a5[1];
        v17 = *(_QWORD *)(v16 + 8 * v13);
        if (!v17)
        {
          v18 = v9 + 2;
          v15 = v9 + 1;
          if (v9 + 2 >= v14)
            goto LABEL_45;
          v17 = *(_QWORD *)(v16 + 8 * v18);
          if (!v17)
          {
            v15 = v9 + 2;
            if (v9 + 3 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              v13 = v9 + 3;
              goto LABEL_15;
            }
            v18 = v9 + 4;
            v15 = v9 + 3;
            if (v9 + 4 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * v18);
            if (!v17)
            {
              v13 = v9 + 5;
              v15 = v9 + 4;
              if (v9 + 5 >= v14)
                goto LABEL_45;
              v17 = *(_QWORD *)(v16 + 8 * v13);
              if (!v17)
              {
                v15 = v14 - 1;
                v36 = v9 + 6;
                while (v14 != v36)
                {
                  v17 = *(_QWORD *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_24534AA28(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          v13 = v18;
        }
LABEL_15:
        v11 = (v17 - 1) & v17;
        v12 = __clz(__rbit64(v17)) + (v13 << 6);
        v9 = v13;
LABEL_16:
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_24538843C();
        swift_bridgeObjectRetain();
        sub_245387B6C();
        v22 = sub_245388478();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v40 + 8 * (v24 >> 6))) == 0)
          goto LABEL_3;
        v27 = *(_QWORD *)(a3 + 48);
        v28 = (_QWORD *)(v27 + 16 * v24);
        v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_245388274() & 1) != 0)
          break;
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_245388274() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        result = swift_bridgeObjectRelease();
      }
      result = swift_bridgeObjectRelease();
LABEL_23:
      v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1)
      continue;
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_24534A728(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;

  v8 = sub_245387740();
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  v38 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452E48);
  result = sub_245387E9C();
  v12 = result;
  v36 = a1;
  v37 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *a1;
  v15 = 0;
  v16 = result + 56;
  v17 = v38;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v15 << 6);
    }
    else
    {
      v20 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_40;
      if (v20 >= v37)
      {
LABEL_37:
        swift_release();
        return v12;
      }
      v21 = v36[v20];
      ++v15;
      if (!v21)
      {
        v15 = v20 + 1;
        if (v20 + 1 >= v37)
          goto LABEL_37;
        v21 = v36[v15];
        if (!v21)
        {
          v15 = v20 + 2;
          if (v20 + 2 >= v37)
            goto LABEL_37;
          v21 = v36[v15];
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v37)
              goto LABEL_37;
            v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                v15 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v15 >= v37)
                  goto LABEL_37;
                v21 = v36[v15];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v15 = v22;
          }
        }
      }
LABEL_24:
      v14 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v15 << 6);
    }
    v23 = a4;
    v24 = *(_QWORD *)(a4 + 48);
    v25 = *(_QWORD *)(v17 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v11, v24 + v25 * v19, v8);
    sub_24525C6C4(&qword_25744F6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_245387AAC();
    v26 = -1 << *(_BYTE *)(v12 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
    {
      v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      v17 = v38;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      v17 = v38;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v16 + 8 * v28);
      }
      while (v33 == -1);
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(_QWORD *)(v16 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v12 + 48) + v29 * v25, v11, v8);
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v23;
    if (!a3)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_24534AA28(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452E20);
  result = sub_245387E9C();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_24538843C();
    swift_bridgeObjectRetain();
    sub_245387B6C();
    result = sub_245388478();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_24534ACBC(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v3 = sub_245387740();
  v28 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *v1 + 56;
  v9 = -1 << *(_BYTE *)(*v1 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    v25 = v1;
    v11 = ~v9;
    swift_retain();
    v12 = sub_245387E48();
    v27 = v8;
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v13 = (v12 + 1) & v11;
      v14 = *(_QWORD *)(v28 + 72);
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v28 + 16);
      do
      {
        v15 = v14 * v10;
        v26(v6, *(_QWORD *)(v7 + 48) + v14 * v10, v3);
        sub_24525C6C4(&qword_25744F6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v16 = sub_245387AAC();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v3);
        v17 = v16 & v11;
        if (a1 >= (uint64_t)v13)
        {
          if (v17 < v13 || a1 < (uint64_t)v17)
            goto LABEL_6;
        }
        else if (v17 < v13 && a1 < (uint64_t)v17)
        {
          goto LABEL_6;
        }
        v20 = v14 * a1;
        if (v14 * a1 < v15 || *(_QWORD *)(v7 + 48) + v14 * a1 >= (unint64_t)(*(_QWORD *)(v7 + 48) + v15 + v14))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v20 == v15)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        v10 = (v10 + 1) & v11;
      }
      while (((*(_QWORD *)(v27 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(_QWORD *)(v27 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release();
    v1 = v25;
  }
  else
  {
    *(_QWORD *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v21 = *v1;
  v22 = *(_QWORD *)(*v1 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v21 + 16) = v24;
    ++*(_DWORD *)(v21 + 36);
  }
  return result;
}

unint64_t sub_24534AF38(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_245387E48();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_24538843C();
        swift_bridgeObjectRetain();
        sub_245387B6C();
        v10 = sub_245388478();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_24534B0FC()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 168)) + 16);
  os_unfair_lock_lock(v1);
  sub_2452E6204(v2, sub_24534B15C);
  os_unfair_lock_unlock(v1);
}

uint64_t sub_24534B15C()
{
  uint64_t v0;

  return sub_24533D66C(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_24534B174()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24534B198()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24534B1BC(uint64_t a1)
{
  uint64_t *v1;

  return sub_24533D96C(a1, v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_24534B1CC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 176));
  return swift_retain();
}

uint64_t sub_24534B1E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = type metadata accessor for Message();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64) + 7;
  v8 = v0 + v3;
  v9 = sub_245387740();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v12 = v8 + *(int *)(v1 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9))
    v11(v12, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24525CB80(*(_QWORD *)(v8 + *(int *)(v1 + 36)), *(_QWORD *)(v8 + *(int *)(v1 + 36) + 8));
  swift_release();
  v13 = sub_2453875E4();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))(v0 + v6, 1, v13))
    (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v0 + v6, v13);
  v15 = v0 + (v7 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v15 + 120);
  if (v16 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v15 + 112), v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24534B3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v5 = *(_QWORD *)(type metadata accessor for Message() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8);
  v9 = (v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = v9 + *(_QWORD *)(v8 + 64);
  v11 = (v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v10 + 175) & 0xFFFFFFFFFFFFFFF8;
  return sub_24533EDFC(a1, a2, v2 + v6, *(_QWORD **)(v2 + v7), v2 + v9, (__int128 *)(v2 + v11), *(unsigned __int8 *)(v2 + v11 + 160), *(_QWORD *)(v2 + v12 + 8), *(double *)(v2 + v12), *(_QWORD *)(v2 + ((v12 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v12 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_24534B4A8()
{
  uint64_t v0;
  unint64_t v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 168);
  if (v1 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v0 + 160), v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24534B51C(uint64_t a1)
{
  uint64_t v1;

  return sub_24533F1A4(a1, v1 + 48, *(uint64_t (**)(char *))(v1 + 208), *(_QWORD *)(v1 + 216), *(void (**)(uint64_t))(v1 + 224), *(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

unint64_t sub_24534B550()
{
  unint64_t result;

  result = qword_257453080;
  if (!qword_257453080)
  {
    result = MEMORY[0x2495330B0](&unk_24538E9E0, &type metadata for NetworkSyncServiceError);
    atomic_store(result, (unint64_t *)&qword_257453080);
  }
  return result;
}

uint64_t sub_24534B594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for Message();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8);
  v10 = (v8 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64) + v10 + 7;
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v12 = v0 + v7;
  v13 = sub_245387740();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v15(v12, v13);
  v16 = v12 + *(int *)(v5 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v16, 1, v13))
    v15(v16, v13);
  v17 = v11 & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24525CB80(*(_QWORD *)(v12 + *(int *)(v5 + 36)), *(_QWORD *)(v12 + *(int *)(v5 + 36) + 8));
  swift_bridgeObjectRelease();
  v18 = sub_2453875E4();
  v19 = *(_QWORD *)(v18 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v0 + v10, 1, v18))
    (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v0 + v10, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v0 + v17 + 120);
  if (v20 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v0 + v17 + 112), v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24534B7B0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;

  v7 = *(_QWORD *)(*(_QWORD *)(v3 + 24) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(type metadata accessor for Message() - 8);
  v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = (*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8);
  v14 = (v12 + *(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = (*(_QWORD *)(v13 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_245343C5C(a1, a2, a3, *(_QWORD **)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64), v3 + v8, v3 + v11, *(_QWORD *)(v3 + v12), *(_QWORD *)(v3 + v12 + 8), v3 + v14, (_OWORD *)(v3 + v15), *(_BYTE *)(v3 + v15 + 160));
}

uint64_t sub_24534B8A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v1 = *(_QWORD *)(v0 + 24);
  v21 = v1;
  v20 = sub_2453876EC();
  v2 = *(_QWORD *)(v20 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v1 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80)
      + ((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v19 = (((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = type metadata accessor for Message();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + v19 + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8);
  v22 = (v9 + *(unsigned __int8 *)(v10 + 80) + v8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v20);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v21);
  swift_release();
  swift_release();
  v11 = v0 + v8;
  v12 = sub_245387740();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v14(v11, v12);
  v15 = v11 + *(int *)(v6 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v12))
    v14(v15, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24525CB80(*(_QWORD *)(v11 + *(int *)(v6 + 36)), *(_QWORD *)(v11 + *(int *)(v6 + 36) + 8));
  v16 = sub_2453875E4();
  v17 = *(_QWORD *)(v16 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v17 + 48))(v0 + v22, 1, v16))
    (*(void (**)(unint64_t, uint64_t))(v17 + 8))(v0 + v22, v16);
  return swift_deallocObject();
}

uint64_t sub_24534BADC(void (*a1)(_QWORD, _QWORD), void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(sub_2453876EC() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v4 - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + v8 + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)(type metadata accessor for Message() - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + v12 + 8) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 64);
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8);
  v17 = (v15 + *(unsigned __int8 *)(v16 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  return sub_245345BEC(a1, a2, (char *)(v2 + v6), *(_QWORD *)(v2 + v7 + 8), *(_QWORD *)(v2 + v8), *(_QWORD *)(v2 + v8 + 8), v2 + v10, *(void (**)(double *, uint64_t *, uint64_t *))(v2 + v11), *(double *)(v2 + v7), *(_QWORD *)(v2 + v11 + 8), *(uint64_t **)(v2 + v12), v2 + v14, v2 + v17, *(_BYTE *)(v2 + v17 + *(_QWORD *)(v16 + 64)));
}

uint64_t sub_24534BC18(uint64_t a1)
{
  return sub_24534BCBC(a1, (uint64_t)&unk_25164A5A8, (uint64_t)sub_24534BF90);
}

void sub_24534BC34()
{
  type metadata accessor for NetworkSyncService.WeakDelegate();
}

uint64_t sub_24534BC64()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v1 + 24) = v0;
  swift_unknownObjectWeakAssign();
  return v1;
}

uint64_t sub_24534BCA8(uint64_t a1)
{
  return sub_24534BCBC(a1, (uint64_t)&unk_25164A580, (uint64_t)sub_24534BF90);
}

uint64_t sub_24534BCBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_2453456CC(a1, *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72), *(unsigned __int8 *)(v3 + 80), *(_QWORD *)(v3 + 96), *(_QWORD *)(v3 + 104), *(double *)(v3 + 88), *(_QWORD *)(v3 + 112), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), a2, a3);
}

uint64_t sub_24534BD10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(unint64_t, uint64_t);
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for Message();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v11 = *(_QWORD *)(v2 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80);
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = AssociatedTypeWitness;
  v6 = sub_245387740();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(unint64_t, uint64_t))(v7 + 8);
  v8(v0 + v3, v6);
  v9 = v0 + v3 + *(int *)(v1 + 20);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
    v8(v9, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24525CB80(*(_QWORD *)(v0 + v3 + *(int *)(v1 + 36)), *(_QWORD *)(v0 + v3 + *(int *)(v1 + 36) + 8));
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v0+ ((v5 + ((((((v11 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v5), v13);
  return swift_deallocObject();
}

uint64_t sub_24534BEA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(type metadata accessor for Message() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  return sub_2453452A8(*(double *)(v1 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8)), a1, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(void (**)(_QWORD, _QWORD, _QWORD))(v1 + v6), *(_QWORD *)(v1 + v6 + 8), *(_QWORD *)(v1 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), v1 + ((v7 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v7));
}

void sub_24534BF98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Message() - 8) + 80);
  sub_245347094(a1, *(_QWORD *)(v1 + 48), *(void (**)(uint64_t *, char *, uint64_t))(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 80), v1 + v4, v1 + ((v4 + v5 + v6) & ~v6), *(double *)(v1 + 72));
}

uint64_t sub_24534C058(uint64_t a1)
{
  uint64_t v1;

  return sub_245346E7C(a1, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(unsigned __int8 *)(v1 + 80), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(double *)(v1 + 88), *(double *)(v1 + 120), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t objectdestroy_17Tm()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_24534C138(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  return sub_245347174(*(double *)(v1 + 64), a1, *(void (**)(_QWORD *, char *, uint64_t *))(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 72), v1 + ((v3 + 80) & ~v3));
}

uint64_t objectdestroy_23Tm()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  unint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for Message();
  v6 = (v3 + v4 + *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  v7 = sub_245387740();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
  v9(v0 + v6, v7);
  v10 = v0 + v6 + *(int *)(v5 + 20);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    v9(v10, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24525CB80(*(_QWORD *)(v0 + v6 + *(int *)(v5 + 36)), *(_QWORD *)(v0 + v6 + *(int *)(v5 + 36) + 8));
  return swift_deallocObject();
}

uint64_t sub_24534C32C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(id *, uint64_t);
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(unint64_t, uint64_t);
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;

  v1 = *(_QWORD *)(v0 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = type metadata accessor for IncomingNetworkMessage(255, AssociatedTypeWitness, v3, v4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25440C868);
  v40 = v5;
  v6 = *(_QWORD *)(sub_245388484() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(sub_245387E00() - 8);
  v10 = (v8 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v1 - 8);
  v42 = (v10 + *(_QWORD *)(v9 + 64) + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v12 = (*(_QWORD *)(v11 + 64) + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = type metadata accessor for Message();
  v14 = *(_QWORD *)(v13 - 8);
  v41 = (*(unsigned __int8 *)(v14 + 80) + v12 + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v15 = (((*(_QWORD *)(v14 + 64) + v41 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8);
  v43 = (*(unsigned __int8 *)(v16 + 80) + v15 + 8) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v17 = *(_QWORD *)(v16 + 64);
  v18 = (id *)(v0 + v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    v38 = v17;
    v39 = v1;
    v19 = sub_245387740();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(void (**)(id *, uint64_t))(v20 + 8);
    v21(v18, v19);
    v22 = (char *)v18 + *(int *)(v13 + 20);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v22, 1, v19))
      v21((id *)v22, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24525CB80(*(uint64_t *)((char *)v18 + *(int *)(v13 + 36)), *(unint64_t *)((char *)v18 + *(int *)(v13 + 36) + 8));
    v23 = (char *)v18 + *(int *)(v40 + 28);
    v24 = sub_2453875E4();
    v25 = *(_QWORD *)(v24 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))((char *)v18 + *(int *)(v40 + 32), AssociatedTypeWitness);
    v17 = v38;
    v1 = v39;
  }
  v26 = v17 + v43;
  swift_release();
  v27 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v27 + 48))(v0 + v10, 1, AssociatedTypeWitness))(*(void (**)(unint64_t, uint64_t))(v27 + 8))(v0 + v10, AssociatedTypeWitness);
  v28 = v26 + 7;
  (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v0 + v42, v1);
  v29 = sub_245387740();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(void (**)(unint64_t, uint64_t))(v30 + 8);
  v31(v0 + v41, v29);
  v32 = v0 + v41 + *(int *)(v13 + 20);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v30 + 48))(v32, 1, v29))
    v31(v32, v29);
  v33 = v28 & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24525CB80(*(_QWORD *)(v0 + v41 + *(int *)(v13 + 36)), *(_QWORD *)(v0 + v41 + *(int *)(v13 + 36) + 8));
  swift_bridgeObjectRelease();
  swift_release();
  v34 = sub_2453875E4();
  v35 = *(_QWORD *)(v34 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v35 + 48))(v0 + v43, 1, v34))
    (*(void (**)(unint64_t, uint64_t))(v35 + 8))(v0 + v43, v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v36 = *(_QWORD *)(v0 + v33 + 120);
  if (v36 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v0 + v33 + 112), v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_24534C77C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;

  v1 = *(_QWORD *)(v0 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for IncomingNetworkMessage(255, AssociatedTypeWitness, v3, v4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25440C868);
  v5 = *(_QWORD *)(sub_245388484() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(sub_245387E00() - 8);
  v9 = (v7 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v1 - 8);
  v11 = (v9 + *(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = (*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)(type metadata accessor for Message() - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + v12 + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = (*(_QWORD *)(v13 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v17 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8);
  v18 = (*(unsigned __int8 *)(v17 + 80) + v16 + 8) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v19 = (*(_QWORD *)(v17 + 64) + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_245344360((_QWORD *)(v0 + v6), *(void (**)(_QWORD *))(v0 + v7), *(_QWORD *)(v0 + v7 + 8), v0 + v9, v0 + v11, *(_QWORD *)(v0 + v12 + 8), (_QWORD *)(v0 + v14), *(_QWORD *)(v0 + v15), *(double *)(v0 + v12), *(_QWORD *)(v0 + v15 + 8), *(_QWORD **)(v0 + v16), v0 + v18, v0 + v19, *(_BYTE *)(v0 + v19 + 160));
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t sub_24534C948(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;

  return sub_24534732C(a1, a2, v2[6], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_24534C958(uint64_t a1)
{
  return sub_24534D37C(a1);
}

uint64_t sub_24534C96C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24534C9A0()
{
  uint64_t *v0;

  return sub_24534783C(v0[2], v0[3], v0[4]);
}

uint64_t sub_24534C9AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_24533F2F0(a1, *(uint64_t **)(v2 + 48), a2);
}

uint64_t sub_24534C9BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = type metadata accessor for Message();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  v8 = v0 + v3;
  v9 = sub_245387740();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v12 = v8 + *(int *)(v1 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9))
    v11(v12, v9);
  v13 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24525CB80(*(_QWORD *)(v8 + *(int *)(v1 + 36)), *(_QWORD *)(v8 + *(int *)(v1 + 36) + 8));
  swift_release();
  v14 = sub_2453875E4();
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v15 + 48))(v0 + v6, 1, v14))
    (*(void (**)(unint64_t, uint64_t))(v15 + 8))(v0 + v6, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v0 + v13 + 120);
  if (v16 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v0 + v13 + 112), v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + ((v7 + 175) & 0xFFFFFFFFFFFFFFF8)))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_24534CBA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v5 = *(_QWORD *)(type metadata accessor for Message() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8);
  v9 = (v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = v9 + *(_QWORD *)(v8 + 64);
  return sub_2453411C8(a1, a2, v2 + v6, *(_QWORD *)(v2 + v7), v2 + v9, v2 + ((v10 + 7) & 0xFFFFFFFFFFFFFFF8), *(unsigned __int8 *)(v2 + ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 160), *(_QWORD *)(v2 + ((v10 + 175) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v10 + 175) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_24534CC68()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24534CC9C(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_24534146C(a1, a2 & 1, *(void (**)(uint64_t, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(uint64_t (**)(void))(v2 + 32));
}

uint64_t sub_24534CCAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  swift_release();
  if (*(_QWORD *)(v0 + 56))
    swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 72) & ~v3), v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24534CD40(uint64_t a1, void *a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;

  v4 = *(_QWORD *)(*(_QWORD *)(v3 + 24) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (uint64_t *)(v3 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_245342804(a1, a2, a3 & 1, *(_QWORD **)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64), v3 + v5, *v6, v6[1]);
}

uint64_t sub_24534CD9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = type metadata accessor for Message();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8) + 80);
  v10 = v7 + v8 + v9;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (*(_QWORD *)(v0 + v4))
    swift_release();
  v11 = v10 & ~v9;
  v12 = v0 + v7;
  v13 = sub_245387740();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v15(v12, v13);
  v16 = v12 + *(int *)(v5 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v16, 1, v13))
    v15(v16, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24525CB80(*(_QWORD *)(v12 + *(int *)(v5 + 36)), *(_QWORD *)(v12 + *(int *)(v5 + 36) + 8));
  v17 = sub_2453875E4();
  v18 = *(_QWORD *)(v17 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v18 + 48))(v0 + v11, 1, v17))
    (*(void (**)(unint64_t, uint64_t))(v18 + 8))(v0 + v11, v17);
  swift_release();
  return swift_deallocObject();
}

void sub_24534CF70(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 32);
  v7 = *(_QWORD *)(v2 + 40);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)(type metadata accessor for Message() - 8);
  v12 = (v10 + *(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v14 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25744F610) - 8);
  v15 = (v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  sub_245342F7C(a1, a2, *(_QWORD *)(v2 + 48), *(void (**)(char *, uint64_t))(v2 + 56), v2 + v9, *(void (**)(void *, uint64_t))(v2 + v10), *(_QWORD *)(v2 + v10 + 8), v2 + v12, (void (*)(void *, uint64_t))(v2 + v15), *(_BYTE *)(v2 + v15 + *(_QWORD *)(v14 + 64)), *(_QWORD *)(((v15 + *(_QWORD *)(v14 + 64)) & 0xFFFFFFFFFFFFFFF8) + v2 + 8), *(_QWORD *)(((v15 + *(_QWORD *)(v14 + 64)) & 0xFFFFFFFFFFFFFFF8) + v2 + 16), v4, v5, v6, v7);
}

uint64_t objectdestroy_56Tm()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_24534D10C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = a2 & 1;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v2 + ((v5 + 64) & ~v5), a1, v4);
}

uint64_t sub_24534D17C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  sub_245263EE8(*(id *)(v0 + 48), *(_BYTE *)(v0 + 56));
  if (*(_QWORD *)(v0 + 64))
    swift_release();
  v8 = (v3 + 80) & ~v3;
  v9 = (v8 + v4 + v7) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v8, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v9, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_24534D274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = v0 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
  sub_245342AB0(*(void **)(v0 + 48), *(_BYTE *)(v0 + 56), *(void (**)(void *, uint64_t))(v0 + 64), *(_QWORD *)(v0 + 72), v0 + v6, v0 + v9, *(_QWORD *)v10, *(_QWORD *)(v10 + 8), v2, v1, v4, v3);
}

uint64_t sub_24534D334()
{
  return swift_deallocObject();
}

uint64_t sub_24534D344()
{
  return sub_24533E924();
}

uint64_t sub_24534D34C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 80))(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 40));
}

uint64_t sub_24534D37C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t TupleTypeMetadata2;

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_24534D3DC()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_24534D408()
{
  sub_24533E63C();
}

uint64_t sub_24534D414()
{
  return swift_deallocObject();
}

uint64_t sub_24534D424(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_24533E46C(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_24534D430@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t TupleTypeMetadata2;
  uint64_t result;

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  result = v5(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
  *a2 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for NetworkSyncServiceError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24534D4EC + 4 * byte_24538E855[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24534D520 + 4 * byte_24538E850[v4]))();
}

uint64_t sub_24534D520(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24534D528(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24534D530);
  return result;
}

uint64_t sub_24534D53C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24534D544);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24534D548(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24534D550(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NetworkSyncServiceError()
{
  return &type metadata for NetworkSyncServiceError;
}

unint64_t sub_24534D570()
{
  unint64_t result;

  result = qword_257453088;
  if (!qword_257453088)
  {
    result = MEMORY[0x2495330B0](&unk_24538E9B8, &type metadata for NetworkSyncServiceError);
    atomic_store(result, (unint64_t *)&qword_257453088);
  }
  return result;
}

BOOL static ReplicatorCodingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ReplicatorCodingError.hash(into:)()
{
  return sub_245388448();
}

uint64_t ReplicatorCodingError.hashValue.getter()
{
  sub_24538843C();
  sub_245388448();
  return sub_245388478();
}

unint64_t sub_24534D65C()
{
  unint64_t result;

  result = qword_257453090;
  if (!qword_257453090)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for ReplicatorCodingError, &type metadata for ReplicatorCodingError);
    atomic_store(result, (unint64_t *)&qword_257453090);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ReplicatorCodingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24534D6EC + 4 * byte_24538EA25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24534D720 + 4 * byte_24538EA20[v4]))();
}

uint64_t sub_24534D720(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24534D728(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24534D730);
  return result;
}

uint64_t sub_24534D73C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24534D744);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24534D748(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24534D750(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReplicatorCodingError()
{
  return &type metadata for ReplicatorCodingError;
}

uint64_t _s16ReplicatorEngine16VersionedEncoderP7versions6UInt64VSgvgTj_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AllowListStoring.blockedByAllowList(ID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

ReplicatorEngine::DeviceType_optional __swiftcall DeviceType.init(rawValue:)(Swift::Int64 rawValue)
{
  char *v1;
  char v2;

  v2 = 6;
  if ((unint64_t)rawValue < 6)
    v2 = rawValue;
  *v1 = v2;
  return (ReplicatorEngine::DeviceType_optional)rawValue;
}

uint64_t DeviceType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_24534D7C0()
{
  unint64_t result;

  result = qword_25744F750;
  if (!qword_25744F750)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for DeviceType, &type metadata for DeviceType);
    atomic_store(result, (unint64_t *)&qword_25744F750);
  }
  return result;
}

uint64_t sub_24534D804()
{
  sub_24538843C();
  sub_24538846C();
  return sub_245388478();
}

uint64_t sub_24534D848()
{
  return sub_24538846C();
}

uint64_t sub_24534D870()
{
  sub_24538843C();
  sub_24538846C();
  return sub_245388478();
}

ReplicatorEngine::DeviceType_optional sub_24534D8B0(Swift::Int64 *a1)
{
  return DeviceType.init(rawValue:)(*a1);
}

void sub_24534D8B8(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_24534D8C4()
{
  sub_24534DA38();
  return sub_245387C08();
}

uint64_t sub_24534D920()
{
  sub_24534DA38();
  return sub_245387BF0();
}

uint64_t storeEnumTagSinglePayload for DeviceType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_24534D9B8 + 4 * byte_24538EB65[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_24534D9EC + 4 * asc_24538EB60[v4]))();
}

uint64_t sub_24534D9EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24534D9F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24534D9FCLL);
  return result;
}

uint64_t sub_24534DA08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24534DA10);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_24534DA14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24534DA1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceType()
{
  return &type metadata for DeviceType;
}

unint64_t sub_24534DA38()
{
  unint64_t result;

  result = qword_25744F758;
  if (!qword_25744F758)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for DeviceType, &type metadata for DeviceType);
    atomic_store(result, (unint64_t *)&qword_25744F758);
  }
  return result;
}

uint64_t sub_24534DA80()
{
  sub_245387920();
  sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_2452E0BF0((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0);
  return sub_245387E3C();
}

uint64_t sub_24534DB2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BEE5418];
  v3 = sub_245387914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_24534DB70@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 0;
  v2 = *MEMORY[0x24BEE5400];
  v3 = sub_245387914();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_24534DBBC()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  unsigned __int8 v4;

  v1 = *(os_unfair_lock_s **)(v0 + 24);
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_2452F95BC((_QWORD *(*)(uint64_t *__return_ptr))sub_24534E76C, &v4);
  os_unfair_lock_unlock(v1 + 4);
  v2 = v4;
  swift_release();
  return v2;
}

uint64_t Watchdog.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440BFA0);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v0 + 24) = v1;
  *(_BYTE *)(v0 + 32) = 0;
  return v0;
}

uint64_t Watchdog.init()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440BFA0);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v0 + 24) = v1;
  *(_BYTE *)(v0 + 32) = 0;
  return v0;
}

uint64_t sub_24534DCC0(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  os_unfair_lock_s *v4;
  uint64_t v5;

  v4 = *(os_unfair_lock_s **)(v2 + 24);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  sub_2452E6204(v5, (uint64_t (*)(void))sub_24534E778);
  os_unfair_lock_unlock(v4 + 4);
  swift_release();
  return a2(v2);
}

uint64_t sub_24534DD50(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  int v5;

  v3 = *(os_unfair_lock_s **)(v1 + 24);
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(unsigned __int8 *)(v1 + 32);
  sub_24534E4EC();
  os_unfair_lock_unlock(v3 + 4);
  swift_release();
  return a1((v4 != 0) & ~v5);
}

uint64_t sub_24534DDD0()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = *(os_unfair_lock_s **)(v0 + 24);
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_2452E6204(v2, sub_24534E78C);
  os_unfair_lock_unlock(v1 + 4);
  return swift_release();
}

void sub_24534DE30(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  const os_unfair_lock *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint8_t *v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  void (*v36)(uint64_t *, _QWORD, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t ObjectType;
  char *v41;
  void (*v42)(uint64_t *, uint64_t);
  _QWORD *v43;
  uint64_t v44;
  void *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  char *v64;
  _QWORD aBlock[7];

  v5 = v4;
  v57 = a3;
  v55 = a2;
  v53 = a1;
  v7 = sub_245387920();
  v61 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v60 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_245387950();
  v58 = *(_QWORD *)(v9 - 8);
  v59 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v56 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2453879C8();
  v51 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v50 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v64 = (char *)&v48 - v14;
  v15 = sub_245387914();
  v54 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (uint64_t *)((char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = MEMORY[0x24BDAC7A8](v16);
  v52 = (char *)&v48 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v63 = (uint64_t *)((char *)&v48 - v21);
  v22 = sub_245387DA0();
  v49 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(const os_unfair_lock **)(v4 + 24);
  swift_retain();
  os_unfair_lock_assert_owner(v25 + 4);
  swift_release();
  if (qword_25744FD90 != -1)
    swift_once();
  v26 = sub_245387818();
  __swift_project_value_buffer(v26, (uint64_t)qword_257462FB0);
  v27 = sub_2453877F4();
  v28 = sub_245387D34();
  v29 = os_log_type_enabled(v27, v28);
  v62 = v11;
  if (v29)
  {
    v30 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v30 = 134349056;
    *(double *)aBlock = a4;
    sub_245387E0C();
    _os_log_impl(&dword_245256000, v27, v28, "Watchdog will fire in %{public}fs", v30, 0xCu);
    MEMORY[0x24953317C](v30, -1, -1);
  }

  v31 = a4 * 1000000.0;
  if ((~COERCE__INT64(a4 * 1000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v31 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v31 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    return;
  }
  v48 = v7;
  if ((uint64_t)v31 >= 0x7FFFFFFF)
    v32 = 0x7FFFFFFFLL;
  else
    v32 = (uint64_t)v31;
  sub_2452E6270();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&qword_2574503D8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE57C0], MEMORY[0x24BEE57D0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574503D0);
  sub_2452E0BF0((unint64_t *)&qword_257451BA8, &qword_2574503D0);
  sub_245387E3C();
  v33 = sub_245387DAC();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v24, v22);
  v34 = v63;
  *v63 = v32;
  v35 = v54;
  v36 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v54 + 104);
  v36(v34, *MEMORY[0x24BEE5408], v15);
  v37 = v50;
  sub_2453879BC();
  v38 = v64;
  MEMORY[0x249531D48](v37, v34);
  v39 = v62;
  v53 = *(void (**)(char *, uint64_t))(v51 + 8);
  v53(v37, v62);
  ObjectType = swift_getObjectType();
  v41 = v52;
  v36((uint64_t *)v52, *MEMORY[0x24BEE5418], v15);
  *v18 = 0;
  v36(v18, *MEMORY[0x24BEE5400], v15);
  MEMORY[0x249532144](v38, v41, v18, ObjectType);
  v42 = *(void (**)(uint64_t *, uint64_t))(v35 + 8);
  v42(v18, v15);
  v42((uint64_t *)v41, v15);
  v43 = (_QWORD *)swift_allocObject();
  v44 = v55;
  v43[2] = v5;
  v43[3] = v44;
  v43[4] = v57;
  aBlock[4] = sub_24534E840;
  aBlock[5] = v43;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525DD34;
  aBlock[3] = &block_descriptor_14;
  v45 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  v46 = v56;
  sub_245387938();
  v47 = v60;
  sub_24534DA80();
  sub_245387DC4();
  _Block_release(v45);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v47, v48);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v46, v59);
  swift_release();
  *(_QWORD *)(v5 + 16) = v33;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  if (*(_QWORD *)(v5 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_245387DDC();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
  v53(v64, v39);
  v42(v63, v15);
}

uint64_t sub_24534E46C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  os_unfair_lock_s *v4;
  uint64_t v5;

  v4 = *(os_unfair_lock_s **)(a1 + 24);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  sub_2452E6204(v5, sub_24534E864);
  os_unfair_lock_unlock(v4 + 4);
  swift_release();
  return a2(a1);
}

uint64_t sub_24534E4EC()
{
  uint64_t v0;
  uint64_t v1;
  const os_unfair_lock *v2;
  uint64_t result;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  v1 = v0;
  v2 = *(const os_unfair_lock **)(v0 + 24);
  swift_retain();
  os_unfair_lock_assert_owner(v2 + 4);
  result = swift_release();
  if (*(_QWORD *)(v1 + 16))
  {
    if (qword_25744FD90 != -1)
      swift_once();
    v4 = sub_245387818();
    __swift_project_value_buffer(v4, (uint64_t)qword_257462FB0);
    v5 = sub_2453877F4();
    v6 = sub_245387D34();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_245256000, v5, v6, "Cancelling watchdog", v7, 2u);
      MEMORY[0x24953317C](v7, -1, -1);
    }

    if (*(_QWORD *)(v1 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_245387DD0();
      swift_unknownObjectRelease();
    }
    *(_QWORD *)(v1 + 16) = 0;
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t Watchdog.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t Watchdog.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t _s16ReplicatorEngine8WatchdogC7execute6within12failureQueue6action0F7HandlerySd_So17OS_dispatch_queueCyACXEyACctFZ_0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  type metadata accessor for Watchdog();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440BFA0);
  v4 = swift_allocObject();
  *(_DWORD *)(v4 + 16) = 0;
  v5 = (os_unfair_lock_s *)(v4 + 16);
  *(_QWORD *)(v3 + 24) = v4;
  *(_BYTE *)(v3 + 32) = 0;
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_2452E6204(v6, (uint64_t (*)(void))sub_24534E778);
  os_unfair_lock_unlock(v5);
  swift_release();
  a2(v3);
  return swift_release();
}

void sub_24534E76C(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

void sub_24534E778()
{
  sub_24534E890();
}

uint64_t sub_24534E78C()
{
  return sub_24534E4EC();
}

uint64_t type metadata accessor for Watchdog()
{
  return objc_opt_self();
}

uint64_t method lookup function for Watchdog()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Watchdog.isExpired.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of Watchdog.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of Watchdog.execute(within:failureQueue:action:failureHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of Watchdog.complete(handler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of Watchdog.cancel()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t sub_24534E814()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24534E840()
{
  uint64_t v0;

  return sub_24534E46C(*(_QWORD *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t sub_24534E864()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 32) = 1;
  return sub_24534E4EC();
}

void sub_24534E890()
{
  uint64_t v0;

  sub_24534DE30(*(void (**)(char *, uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(double *)(v0 + 24));
}

void *static NetworkMessagingConnectionType.supportedConnectionTypes.getter()
{
  return &unk_251642340;
}

BOOL static NetworkMessagingCriticalError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t NetworkMessagingCriticalError.hash(into:)()
{
  return sub_245388448();
}

uint64_t NetworkMessagingConnectionType.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x73756E696D726574;
  else
    return 0x647261646E617473;
}

unint64_t sub_24534E954()
{
  unint64_t result;

  result = qword_257453098;
  if (!qword_257453098)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for NetworkMessagingCriticalError, &type metadata for NetworkMessagingCriticalError);
    atomic_store(result, (unint64_t *)&qword_257453098);
  }
  return result;
}

unint64_t sub_24534E99C()
{
  unint64_t result;

  result = qword_25744FCB0;
  if (!qword_25744FCB0)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for NetworkMessagingConnectionType, &type metadata for NetworkMessagingConnectionType);
    atomic_store(result, (unint64_t *)&qword_25744FCB0);
  }
  return result;
}

uint64_t sub_24534E9E0()
{
  _BYTE *v0;

  if (*v0)
    return 0x73756E696D726574;
  else
    return 0x647261646E617473;
}

void sub_24534EA14()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for Message();
  if (v0 <= 0x3F)
  {
    sub_2452DD4FC();
    if (v1 <= 0x3F)
    {
      swift_checkMetadataState();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_QWORD *sub_24534EAB8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  int v9;
  uint64_t v10;
  size_t v11;
  size_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  void (*v26)(_QWORD *, _QWORD *, uint64_t);
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  size_t v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  void *v41;
  const void *v42;
  size_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  size_t __n;
  uint64_t v51;

  v6 = sub_245387740();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_DWORD *)(v7 + 80);
  v10 = v9;
  v11 = v8 + v9;
  v12 = (v8 + v10) & ~v10;
  if (!*(_DWORD *)(v7 + 84))
    ++v8;
  __n = v8;
  v13 = (((((((v8 + v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v51 = sub_2453875E4();
  v14 = *(_QWORD *)(v51 - 8);
  v15 = *(_DWORD *)(v14 + 80);
  if (*(_DWORD *)(v14 + 84))
    v16 = *(_QWORD *)(v14 + 64);
  else
    v16 = *(_QWORD *)(v14 + 64) + 1;
  v17 = *(_QWORD *)(a3 + 16);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_DWORD *)(v18 + 80);
  v20 = v15 | v9 | v19;
  if (v20 > 7
    || ((*(_DWORD *)(v14 + 80) | v9 | *(_DWORD *)(v18 + 80)) & 0x100000) != 0
    || ((v16 + v19 + ((v13 + v15 + 16) & ~v15)) & ~v19) + *(_QWORD *)(v18 + 64) > 0x18)
  {
    v23 = *a2;
    *a1 = *a2;
    v24 = (_QWORD *)(v23 + ((v20 & 0xF8 ^ 0x1F8) & (v20 + 16)));
    swift_retain();
  }
  else
  {
    v46 = v13 + v15 + 16;
    v47 = v16 + v19;
    v48 = *(_QWORD *)(v17 - 8);
    v49 = v17;
    v25 = ~(unint64_t)v9;
    v44 = v16;
    v45 = ~v15;
    v26 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16);
    v26(a1, a2, v6);
    v27 = (_QWORD *)(((unint64_t)a1 + v11) & ~v10);
    v28 = (_QWORD *)(((unint64_t)a2 + v11) & v25);
    v29 = a2;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(v28, 1, v6))
    {
      v30 = __n;
      memcpy(v27, v28, __n);
    }
    else
    {
      v26(v27, v28, v6);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v27, 0, 1, v6);
      v30 = __n;
    }
    v31 = (_QWORD *)(((unint64_t)v27 + v30 + 7) & 0xFFFFFFFFFFFFFFF8);
    v32 = (_QWORD *)(((unint64_t)v28 + v30 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v31 = *v32;
    v31[1] = v32[1];
    v33 = (_QWORD *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
    v34 = (_QWORD *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v33 = *v34;
    v33[1] = v34[1];
    v35 = (_QWORD *)(((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFF8);
    v36 = ((unint64_t)v34 + 23) & 0xFFFFFFFFFFFFF8;
    v37 = *(_QWORD *)v36;
    v36 += 15;
    *v35 = v37;
    v38 = (_QWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
    v39 = *(_QWORD *)(v36 & 0xFFFFFFFFFFFFFFF8);
    v40 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFFF8) + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_245261C44(v39, v40);
    *v38 = v39;
    v38[1] = v40;
    v24 = a1;
    v41 = (void *)(((unint64_t)a1 + v46) & v45);
    v42 = (const void *)(((unint64_t)v29 + v46) & v45);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v42, 1, v51))
    {
      memcpy(v41, v42, v44);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v41, v42, v51);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v41, 0, 1, v51);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v48 + 16))(((unint64_t)v41 + v47) & ~v19, ((unint64_t)v42 + v47) & ~v19, v49);
  }
  return v24;
}

uint64_t sub_24534EDB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;

  v4 = sub_245387740();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = v7 + v8;
  v10 = ~v8;
  v11 = (v7 + v8 + a1) & ~v8;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4))
    v6(v11, v4);
  if (*(_DWORD *)(v5 + 84))
    v12 = v7;
  else
    v12 = v7 + 1;
  swift_bridgeObjectRelease();
  v13 = (((v11 + v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  sub_24525CB80(*(_QWORD *)((((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
  v14 = (((((((v12 + (v9 & v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = sub_2453875E4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (a1 + *(unsigned __int8 *)(v16 + 80) + v14 + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v16 + 48))(v17, 1, v15))
    (*(void (**)(unint64_t, uint64_t))(v16 + 8))(v17, v15);
  v18 = *(_QWORD *)(v16 + 64) + v17;
  if (!*(_DWORD *)(v16 + 84))
    ++v18;
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((v18 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_24534EF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  size_t v8;
  uint64_t v9;
  size_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int v14;
  size_t v15;
  size_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  const void *v32;
  int v33;
  uint64_t v34;
  size_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = sub_245387740();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = v8 + v9;
  v11 = ~v9;
  v12 = (void *)((v8 + v9 + a1) & ~v9);
  v13 = (const void *)((v8 + v9 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v13, 1, v5))
  {
    v14 = *(_DWORD *)(v6 + 84);
    if (v14)
      v15 = v8;
    else
      v15 = v8 + 1;
    memcpy(v12, v13, v15);
  }
  else
  {
    v7((uint64_t)v12, (uint64_t)v13, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v12, 0, 1, v5);
    v14 = *(_DWORD *)(v6 + 84);
  }
  if (v14)
    v16 = v8;
  else
    v16 = v8 + 1;
  v17 = (_QWORD *)(((unint64_t)v12 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v13 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v17[1] = v18[1];
  v19 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v19 = *v20;
  v19[1] = v20[1];
  v21 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFF8);
  v22 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  v22 += 15;
  *v21 = v23;
  v24 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  v25 = *(_QWORD *)(v22 & 0xFFFFFFFFFFFFFFF8);
  v26 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_245261C44(v25, v26);
  *v24 = v25;
  v24[1] = v26;
  v27 = sub_2453875E4();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(unsigned __int8 *)(v28 + 80);
  v30 = ((((((((v16 + (v10 & v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + v29
      + 16;
  v31 = (void *)((v30 + a1) & ~v29);
  v32 = (const void *)((v30 + a2) & ~v29);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v32, 1, v27))
  {
    v33 = *(_DWORD *)(v28 + 84);
    v34 = *(_QWORD *)(v28 + 64);
    if (v33)
      v35 = *(_QWORD *)(v28 + 64);
    else
      v35 = v34 + 1;
    memcpy(v31, v32, v35);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(v31, v32, v27);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v31, 0, 1, v27);
    v33 = *(_DWORD *)(v28 + 84);
    v34 = *(_QWORD *)(v28 + 64);
  }
  if (v33)
    v36 = v34;
  else
    v36 = v34 + 1;
  v37 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v37 + 16))(((unint64_t)v31 + v36 + *(unsigned __int8 *)(v37 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80), ((unint64_t)v32 + v36 + *(unsigned __int8 *)(v37 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
  return a1;
}

uint64_t sub_24534F1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  size_t v8;
  uint64_t v9;
  size_t v10;
  void *v11;
  void *v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  size_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  void *v34;
  uint64_t (*v35)(void *, uint64_t, uint64_t);
  int v36;
  int v37;
  size_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v44;

  v5 = sub_245387740();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = v8 + v9;
  v44 = a1;
  v42 = ~v9;
  v11 = (void *)((v8 + v9 + a1) & ~v9);
  v12 = (void *)((v8 + v9 + a2) & ~v9);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v14 = v13(v11, 1, v5);
  v15 = v13(v12, 1, v5);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v11, v12, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v15)
    {
      v7((uint64_t)v11, (uint64_t)v12, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v11, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v16 = v8;
  else
    v16 = v8 + 1;
  memcpy(v11, v12, v16);
LABEL_10:
  if (!*(_DWORD *)(v6 + 84))
    ++v8;
  v17 = (_QWORD *)(((unint64_t)v11 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v12 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFF8);
  v22 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  v22 += 15;
  *v21 = v23;
  v24 = (uint64_t *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  v25 = *(_QWORD *)(v22 & 0xFFFFFFFFFFFFFFF8);
  v26 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_245261C44(v25, v26);
  v27 = *v24;
  v28 = v24[1];
  *v24 = v25;
  v24[1] = v26;
  sub_24525CB80(v27, v28);
  v29 = sub_2453875E4();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = ((((((((v8 + (v10 & v42) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + v31
      + 16;
  v33 = (void *)((v32 + v44) & ~v31);
  v34 = (void *)((v32 + a2) & ~v31);
  v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
  v36 = v35(v33, 1, v29);
  v37 = v35(v34, 1, v29);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 16))(v33, v34, v29);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v33, 0, 1, v29);
      goto LABEL_21;
    }
  }
  else
  {
    if (!v37)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 24))(v33, v34, v29);
      goto LABEL_21;
    }
    (*(void (**)(void *, uint64_t))(v30 + 8))(v33, v29);
  }
  if (*(_DWORD *)(v30 + 84))
    v38 = *(_QWORD *)(v30 + 64);
  else
    v38 = *(_QWORD *)(v30 + 64) + 1;
  memcpy(v33, v34, v38);
LABEL_21:
  if (*(_DWORD *)(v30 + 84))
    v39 = *(_QWORD *)(v30 + 64);
  else
    v39 = *(_QWORD *)(v30 + 64) + 1;
  v40 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v40 + 24))(((unint64_t)v33 + v39 + *(unsigned __int8 *)(v40 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80), ((unint64_t)v34 + v39 + *(unsigned __int8 *)(v40 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
  return v44;
}

uint64_t sub_24534F4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  size_t v8;
  uint64_t v9;
  size_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int v14;
  size_t v15;
  size_t v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  _OWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  int v30;
  uint64_t v31;
  size_t v32;
  uint64_t v33;
  uint64_t v34;

  v5 = sub_245387740();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = v8 + v9;
  v11 = ~v9;
  v12 = (void *)((v8 + v9 + a1) & ~v9);
  v13 = (const void *)((v8 + v9 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v13, 1, v5))
  {
    v14 = *(_DWORD *)(v6 + 84);
    if (v14)
      v15 = v8;
    else
      v15 = v8 + 1;
    memcpy(v12, v13, v15);
  }
  else
  {
    v7((uint64_t)v12, (uint64_t)v13, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v12, 0, 1, v5);
    v14 = *(_DWORD *)(v6 + 84);
  }
  if (v14)
    v16 = v8;
  else
    v16 = v8 + 1;
  v17 = (_OWORD *)(((unint64_t)v12 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_OWORD *)(((unint64_t)v13 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = (_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v19 = *v20;
  v21 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFF8);
  v22 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v21 = *v22;
  *(_OWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFF8);
  v23 = (((((((v16 + (v10 & v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = sub_2453875E4();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = v23 + v26 + 16;
  v28 = (void *)((v27 + a1) & ~v26);
  v29 = (const void *)((v27 + a2) & ~v26);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v29, 1, v24))
  {
    v30 = *(_DWORD *)(v25 + 84);
    v31 = *(_QWORD *)(v25 + 64);
    if (v30)
      v32 = *(_QWORD *)(v25 + 64);
    else
      v32 = v31 + 1;
    memcpy(v28, v29, v32);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v28, v29, v24);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v28, 0, 1, v24);
    v30 = *(_DWORD *)(v25 + 84);
    v31 = *(_QWORD *)(v25 + 64);
  }
  if (v30)
    v33 = v31;
  else
    v33 = v31 + 1;
  v34 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v34 + 32))(((unint64_t)v28 + v33 + *(unsigned __int8 *)(v34 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80), ((unint64_t)v29 + v33 + *(unsigned __int8 *)(v34 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  return a1;
}

uint64_t sub_24534F71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  size_t v8;
  uint64_t v9;
  size_t v10;
  void *v11;
  void *v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  size_t v16;
  size_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  void *v32;
  uint64_t (*v33)(void *, uint64_t, uint64_t);
  int v34;
  int v35;
  size_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v42;

  v5 = sub_245387740();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = v8 + v9;
  v42 = a1;
  v40 = ~v9;
  v11 = (void *)((v8 + v9 + a1) & ~v9);
  v12 = (void *)((v8 + v9 + a2) & ~v9);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v14 = v13(v11, 1, v5);
  v15 = v13(v12, 1, v5);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v11, v12, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v15)
    {
      v7((uint64_t)v11, (uint64_t)v12, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v11, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v16 = v8;
  else
    v16 = v8 + 1;
  memcpy(v11, v12, v16);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v17 = v8;
  else
    v17 = v8 + 1;
  v18 = (_QWORD *)(((unint64_t)v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRelease();
  v20 = (_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRelease();
  v22 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFF8);
  *v22 = *v23;
  v24 = (uint64_t *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  v25 = *v24;
  v26 = v24[1];
  *(_OWORD *)v24 = *(_OWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFF8);
  sub_24525CB80(v25, v26);
  v27 = sub_2453875E4();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(unsigned __int8 *)(v28 + 80);
  v30 = ((((((((v17 + (v10 & v40) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + v29
      + 16;
  v31 = (void *)((v30 + v42) & ~v29);
  v32 = (void *)((v30 + a2) & ~v29);
  v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  v34 = v33(v31, 1, v27);
  v35 = v33(v32, 1, v27);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 32))(v31, v32, v27);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v31, 0, 1, v27);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 40))(v31, v32, v27);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v28 + 8))(v31, v27);
  }
  if (*(_DWORD *)(v28 + 84))
    v36 = *(_QWORD *)(v28 + 64);
  else
    v36 = *(_QWORD *)(v28 + 64) + 1;
  memcpy(v31, v32, v36);
LABEL_22:
  if (*(_DWORD *)(v28 + 84))
    v37 = *(_QWORD *)(v28 + 64);
  else
    v37 = *(_QWORD *)(v28 + 64) + 1;
  v38 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v38 + 40))(((unint64_t)v31 + v37 + *(unsigned __int8 *)(v38 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80), ((unint64_t)v32 + v37 + *(unsigned __int8 *)(v38 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
  return v42;
}

uint64_t sub_24534FA2C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  uint64_t (*v31)(unint64_t, uint64_t, uint64_t);
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v6 = sub_245387740();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  if ((_DWORD)v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v8 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = *(_DWORD *)(v7 + 84);
  v11 = *(_QWORD *)(sub_2453875E4() - 8);
  v12 = *(_DWORD *)(v11 + 84);
  if (v12)
    v13 = v12 - 1;
  else
    v13 = 0;
  if (v13 <= v10)
    v14 = v10;
  else
    v14 = v13;
  v15 = *(_QWORD *)(a3 + 16);
  v16 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v16 + 84) > v14)
    v14 = *(_DWORD *)(v16 + 84);
  if ((_DWORD)v8)
    v17 = 7;
  else
    v17 = 8;
  if (v12)
    v18 = *(_QWORD *)(v11 + 64);
  else
    v18 = *(_QWORD *)(v11 + 64) + 1;
  if (!a2)
    return 0;
  v19 = *(_QWORD *)(v7 + 64);
  v20 = *(unsigned __int8 *)(v7 + 80);
  v21 = *(unsigned __int8 *)(v11 + 80);
  v22 = ((((((((v17 + v19 + ((v19 + v20) & ~v20)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + v21
      + 16;
  v23 = *(unsigned __int8 *)(v16 + 80);
  v24 = v18 + v23;
  if (a2 <= v14)
    goto LABEL_40;
  v25 = ((v24 + (v22 & ~v21)) & ~v23) + *(_QWORD *)(v16 + 64);
  v26 = 8 * v25;
  if (v25 > 3)
    goto LABEL_24;
  v28 = ((a2 - v14 + ~(-1 << v26)) >> v26) + 1;
  if (HIWORD(v28))
  {
    v27 = *(_DWORD *)(a1 + v25);
    if (v27)
      goto LABEL_31;
  }
  else
  {
    if (v28 <= 0xFF)
    {
      if (v28 < 2)
        goto LABEL_40;
LABEL_24:
      v27 = *(unsigned __int8 *)(a1 + v25);
      if (!*(_BYTE *)(a1 + v25))
        goto LABEL_40;
LABEL_31:
      v29 = (v27 - 1) << v26;
      if (v25 > 3)
        v29 = 0;
      if ((_DWORD)v25)
      {
        if (v25 <= 3)
          v30 = ((v24 + (v22 & ~(_DWORD)v21)) & ~(_DWORD)v23) + *(_DWORD *)(v16 + 64);
        else
          v30 = 4;
        __asm { BR              X12 }
      }
      return v14 + v29 + 1;
    }
    v27 = *(unsigned __int16 *)(a1 + v25);
    if (*(_WORD *)(a1 + v25))
      goto LABEL_31;
  }
LABEL_40:
  if (v10 != v14)
  {
    v34 = (v22 + a1) & ~v21;
    if (v13 != v14)
    {
      v32 = (v24 + v34) & ~v23;
      v31 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v16 + 48);
      v33 = *(unsigned int *)(v16 + 84);
      return v31(v32, v33, v15);
    }
    if (v12 < 2)
      return 0;
    v35 = (*(uint64_t (**)(unint64_t))(v11 + 48))(v34);
    goto LABEL_58;
  }
  if (v8 >= 0x7FFFFFFF)
  {
    v31 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48);
    v32 = a1;
    v33 = v8;
    v15 = v6;
    return v31(v32, v33, v15);
  }
  v36 = (v19 + v20 + a1) & ~v20;
  if (v9 == v10)
  {
    if (v8 < 2)
      return 0;
    v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v7 + 48))(v36, v8, v6, v24, v22);
LABEL_58:
    if (v35 >= 2)
      return v35 - 1;
    else
      return 0;
  }
  if ((_DWORD)v8)
    v37 = *(_QWORD *)(v7 + 64);
  else
    v37 = v19 + 1;
  v38 = *(_QWORD *)(((v36 + v37 + 7) & 0xFFFFFFFFFFFFF8) + 8);
  if (v38 >= 0xFFFFFFFF)
    LODWORD(v38) = -1;
  return (v38 + 1);
}

void sub_24534FD08(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  size_t v21;
  unsigned int v22;
  unsigned int v23;
  int v24;

  v8 = *(_QWORD *)(sub_245387740() - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = *(_DWORD *)(v8 + 84);
  v11 = 0;
  v12 = *(_QWORD *)(sub_2453875E4() - 8);
  v13 = *(_DWORD *)(v12 + 84);
  if (v13)
    v14 = v13 - 1;
  else
    v14 = 0;
  if (v14 <= v10)
    v15 = v10;
  else
    v15 = v14;
  v16 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v16 + 84) <= v15)
    v17 = v15;
  else
    v17 = *(_DWORD *)(v16 + 84);
  v18 = *(_QWORD *)(v8 + 64);
  if (v9)
    v19 = *(_QWORD *)(v8 + 64);
  else
    v19 = v18 + 1;
  v20 = *(_QWORD *)(v12 + 64);
  if (!v13)
    ++v20;
  v21 = ((v20
        + *(unsigned __int8 *)(v16 + 80)
        + ((((((((((v19 + ((v18 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + *(unsigned __int8 *)(v12 + 80)
          + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))
      + *(_QWORD *)(v16 + 64);
  if (a3 > v17)
  {
    if (v21 > 3)
    {
      v11 = 1u;
      if (v17 >= a2)
LABEL_34:
        __asm { BR              X7 }
LABEL_27:
      v23 = ~v17 + a2;
      if (v21 < 4)
      {
        if ((_DWORD)v21)
        {
          v24 = v23 & ~(-1 << (8 * v21));
          bzero(a1, v21);
          if ((_DWORD)v21 == 3)
          {
            *(_WORD *)a1 = v24;
            a1[2] = BYTE2(v24);
          }
          else if ((_DWORD)v21 == 2)
          {
            *(_WORD *)a1 = v24;
          }
          else
          {
            *a1 = v24;
          }
        }
      }
      else
      {
        bzero(a1, v21);
        *(_DWORD *)a1 = v23;
      }
      __asm { BR              X10 }
    }
    v22 = ((a3 - v17 + ~(-1 << (8 * v21))) >> (8 * v21)) + 1;
    if (HIWORD(v22))
    {
      v11 = 4u;
      if (v17 >= a2)
        goto LABEL_34;
      goto LABEL_27;
    }
    if (v22 >= 0x100)
      v11 = 2;
    else
      v11 = v22 > 1;
  }
  if (v17 >= a2)
    goto LABEL_34;
  goto LABEL_27;
}

void sub_24534FFEC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
}

void sub_24534FFF4()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
}

uint64_t type metadata accessor for IncomingNetworkMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IncomingNetworkMessage);
}

ValueMetadata *type metadata accessor for NetworkMessagingCriticalError()
{
  return &type metadata for NetworkMessagingCriticalError;
}

uint64_t _s16ReplicatorEngine30NetworkMessagingConnectionTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2453500B4 + 4 * byte_24538ECE3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2453500E8 + 4 * byte_24538ECDE[v4]))();
}

uint64_t sub_2453500E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2453500F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2453500F8);
  return result;
}

uint64_t sub_245350104(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24535010CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_245350110(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_245350118(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NetworkMessagingConnectionType()
{
  return &type metadata for NetworkMessagingConnectionType;
}

uint64_t PropertyListTypeDecoder.__allocating_init(version:)(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_BYTE *)(result + 24) = a2 & 1;
  return result;
}

uint64_t PropertyListTypeDecoder.init(version:)(uint64_t a1, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return v2;
}

uint64_t sub_245350194(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[2];
  _QWORD v12[5];
  char v13;

  if (a1 == MEMORY[0x24BDCDDE8]
    && (sub_245263FBC(a2, (uint64_t)v11),
        sub_2452E06B0(0, (unint64_t *)&qword_25440C990),
        (swift_dynamicCast() & 1) != 0))
  {

    sub_245263FBC(a2, (uint64_t)v11);
    return swift_dynamicCast();
  }
  else
  {
    sub_245263FBC(a2, (uint64_t)v12);
    v5 = *(_QWORD *)(v2 + 16);
    v6 = *(_BYTE *)(v2 + 24);
    v7 = MEMORY[0x24BEE4AF8];
    v8 = sub_24531B410(MEMORY[0x24BEE4AF8]);
    v11[0] = v7;
    v11[1] = v8;
    v12[4] = v5;
    v13 = v6;
    sub_245263FF8();
    v10 = swift_allocObject();
    sub_245264070((uint64_t)v11, v10 + 16);
    sub_245387CB0();
    return sub_2452640AC((uint64_t)v11);
  }
}

uint64_t sub_245350304()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocObject();
}

uint64_t PropertyListTypeDecoder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PropertyListTypeDecoder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PropertyListTypeDecoder()
{
  return objc_opt_self();
}

uint64_t method lookup function for PropertyListTypeDecoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PropertyListTypeDecoder.__allocating_init(version:)(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 88))(a1, a2 & 1);
}

uint64_t dispatch thunk of PropertyListTypeDecoder.decode<A>(_:from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t destroy for PropertyListTypeDecoder.RootDecoder(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
}

uint64_t initializeWithCopy for PropertyListTypeDecoder.RootDecoder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 16;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(a1 + 16, v5, v6);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t assignWithCopy for PropertyListTypeDecoder.RootDecoder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  v4 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v4;
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PropertyListTypeDecoder.RootDecoder(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for PropertyListTypeDecoder.RootDecoder(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PropertyListTypeDecoder.RootDecoder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PropertyListTypeDecoder.RootDecoder()
{
  return &type metadata for PropertyListTypeDecoder.RootDecoder;
}

uint64_t sub_24535075C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  char v7[32];

  v1 = sub_2452E06B0(0, &qword_25440C858);
  sub_245263FBC(v0 + 16, (uint64_t)v7);
  if ((swift_dynamicCast() & 1) != 0)
    return v6;
  v3 = sub_245387EE4();
  swift_allocError();
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
  *v5 = v1;
  swift_bridgeObjectRetain();
  sub_245387ECC();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v5, *MEMORY[0x24BEE26D0], v3);
  return swift_willThrow();
}

uint64_t sub_245350864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = sub_24535075C();
  if (!v3)
  {
    v8 = type metadata accessor for PropertyListTypeDecoder.KeyedDecoder(0, a2, a3, v7);
    swift_bridgeObjectRetain();
    MEMORY[0x2495330B0](&unk_24538F0A8, v8);
    return sub_245388064();
  }
  return result;
}

uint64_t sub_24535090C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  char v13[32];

  v3 = sub_2452E06B0(0, &qword_25440C7B8);
  sub_245263FBC((uint64_t)(v1 + 2), (uint64_t)v13);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v4 = *v1;
    v5 = v1[6];
    v6 = *((_BYTE *)v1 + 56);
    a1[3] = (uint64_t)&type metadata for PropertyListTypeDecoder.UnkeyedDecoder;
    a1[4] = sub_245350F78();
    v7 = swift_allocObject();
    *a1 = v7;
    *(_QWORD *)(v7 + 16) = v4;
    *(_QWORD *)(v7 + 24) = 0;
    *(_QWORD *)(v7 + 32) = v12;
    *(_QWORD *)(v7 + 40) = v5;
    *(_BYTE *)(v7 + 48) = v6;
    return swift_bridgeObjectRetain();
  }
  else
  {
    v9 = sub_245387EE4();
    swift_allocError();
    v11 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v11 = v3;
    swift_bridgeObjectRetain();
    sub_245387ECC();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x24BEE26D0], v9);
    return swift_willThrow();
  }
}

uint64_t sub_245350A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t *v5;
  uint64_t *v6;
  void *v8;
  char v9[32];

  v1 = sub_2452E06B0(0, &qword_25440C860);
  sub_245263FBC(v0 + 16, (uint64_t)v9);
  v2 = swift_dynamicCast();
  if ((_DWORD)v2)
  {

  }
  else
  {
    v3 = sub_245387EE4();
    v4 = (void *)swift_allocError();
    v6 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v6 = v1;
    swift_bridgeObjectRetain();
    sub_245387ECC();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v6, *MEMORY[0x24BEE26D0], v3);
    swift_willThrow();

  }
  return v2;
}

uint64_t sub_245350B90(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  __int128 v10;
  _QWORD v11[5];
  char v12;
  _OWORD v13[2];

  sub_245263FBC((uint64_t)(v1 + 2), (uint64_t)v13);
  if (a1 == MEMORY[0x24BDCDDE8]
    && (sub_245263FBC((uint64_t)v13, (uint64_t)&v10),
        sub_2452E06B0(0, (unint64_t *)&qword_25440C990),
        (swift_dynamicCast() & 1) != 0))
  {

    sub_2452CC368(v13, &v10);
    return swift_dynamicCast();
  }
  else
  {
    v4 = *v1;
    sub_245263FBC((uint64_t)v13, (uint64_t)v11);
    v5 = v1[6];
    v6 = *((_BYTE *)v1 + 56);
    swift_bridgeObjectRetain();
    v7 = sub_24531B410(MEMORY[0x24BEE4AF8]);
    *(_QWORD *)&v10 = v4;
    *((_QWORD *)&v10 + 1) = v7;
    v11[4] = v5;
    v12 = v6;
    sub_245263FF8();
    v9 = swift_allocObject();
    sub_245264070((uint64_t)&v10, v9 + 16);
    sub_245387CB0();
    sub_2452640AC((uint64_t)&v10);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
}

uint64_t sub_245350D1C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_245350D24()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_245350D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245350864(a1, a2, a3);
}

uint64_t sub_245350D40@<X0>(uint64_t *a1@<X8>)
{
  return sub_24535090C(a1);
}

uint64_t sub_245350D54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  a2[3] = a1;
  a2[4] = sub_245350F34();
  v4 = swift_allocObject();
  *a2 = v4;
  return sub_245264070(v2, v4 + 16);
}

uint64_t sub_245350DAC()
{
  return sub_2453569EC() & 1;
}

uint64_t sub_245350DC4()
{
  return sub_245356AE8();
}

uint64_t sub_245350DD8()
{
  return sub_245356BDC();
}

uint64_t sub_245350DEC()
{
  return sub_245356CD0();
}

uint64_t sub_245350E00()
{
  return sub_245356DC4();
}

uint64_t sub_245350E14()
{
  return sub_245356EB8();
}

uint64_t sub_245350E28()
{
  return sub_245356FAC();
}

uint64_t sub_245350E3C()
{
  return sub_2453570A0();
}

uint64_t sub_245350E50()
{
  return sub_245357194();
}

uint64_t sub_245350E64()
{
  return sub_245388280();
}

uint64_t sub_245350E78()
{
  return sub_245357288();
}

uint64_t sub_245350E8C()
{
  return sub_24535737C();
}

uint64_t sub_245350EA0()
{
  return sub_245357470();
}

uint64_t sub_245350EB4()
{
  return sub_245357564();
}

uint64_t sub_245350EC8()
{
  return sub_245357658();
}

uint64_t sub_245350EDC()
{
  return sub_24538828C();
}

uint64_t sub_245350EF0(uint64_t a1)
{
  return sub_245350B90(a1);
}

uint64_t sub_245350F04()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

unint64_t sub_245350F10(uint64_t a1)
{
  unint64_t result;

  result = sub_245263FF8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_245350F34()
{
  unint64_t result;

  result = qword_25440C790;
  if (!qword_25440C790)
  {
    result = MEMORY[0x2495330B0](&unk_24538EF60, &type metadata for PropertyListTypeDecoder.RootDecoder);
    atomic_store(result, (unint64_t *)&qword_25440C790);
  }
  return result;
}

unint64_t sub_245350F78()
{
  unint64_t result;

  result = qword_25440C7B0;
  if (!qword_25440C7B0)
  {
    result = MEMORY[0x2495330B0](&unk_24538F228, &type metadata for PropertyListTypeDecoder.UnkeyedDecoder);
    atomic_store(result, (unint64_t *)&qword_25440C7B0);
  }
  return result;
}

uint64_t sub_245350FBC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t type metadata accessor for PropertyListTypeDecoder.KeyedDecoder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PropertyListTypeDecoder.KeyedDecoder);
}

uint64_t sub_245350FF4(int a1, int a2, int a3, id a4)
{
  id v4;
  uint64_t v5;

  v4 = objc_msgSend(a4, sel_allKeys);
  sub_245387C20();

  __swift_instantiateConcreteTypeFromMangledName(&qword_25440C848);
  sub_245357BB4();
  v5 = sub_245387BCC();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2453510D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  _BYTE v6[32];

  sub_245263FBC(a1, (uint64_t)v6);
  if (swift_dynamicCast())
  {
    sub_2453884B4();
  }
  else if (swift_dynamicCast())
  {
    sub_2453884CC();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, 1, 1, a2);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t sub_2453511B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  char v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD v44[2];
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  _OWORD v49[2];
  void *v50;

  v41 = a2;
  v50 = a4;
  v40 = a7;
  v39 = sub_245387E00();
  v38 = *(_QWORD *)(v39 - 8);
  v12 = MEMORY[0x24BDAC7A8](v39);
  v14 = (char *)&v37 - v13;
  v15 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2453884C0();
  v42 = a8;
  v43 = a3;
  if ((v19 & 1) != 0)
  {
    v45 = 0u;
    v46 = 0u;
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v20(v17, a1, a5);
    v21 = sub_2453884A8();
    v48 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v47 = v21;
    *((_QWORD *)&v47 + 1) = v22;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, a5);
    sub_245357B38((uint64_t)&v45);
  }
  else
  {
    *((_QWORD *)&v46 + 1) = MEMORY[0x24BEE1768];
    *(_QWORD *)&v45 = v18;
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v20(v17, a1, a5);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, a5);
    sub_2452CC368(&v45, &v47);
  }
  v23 = v50;
  __swift_project_boxed_opaque_existential_1(&v47, v48);
  v24 = objc_msgSend(v23, sel___swift_objectForKeyedSubscript_, sub_245388268());
  swift_unknownObjectRelease();
  if (v24)
  {
    sub_245387E24();
    swift_unknownObjectRelease();
    sub_2452CC368(v44, v49);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
    sub_245263FBC((uint64_t)v49, (uint64_t)v44);
    v25 = swift_dynamicCast();
    v26 = *(_QWORD *)(a6 - 8);
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
    if ((v25 & 1) != 0)
    {
      v27(v14, 0, 1, a6);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v40, v14, a6);
    }
    else
    {
      v27(v14, 1, 1, a6);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v39);
      v34 = sub_245387EE4();
      swift_allocError();
      v36 = v35;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
      *v36 = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_245387ECC();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v36, *MEMORY[0x24BEE26D0], v34);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
    v29 = sub_245387EE4();
    swift_allocError();
    v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2574530A0);
    v32 = v42;
    v31[3] = a5;
    v31[4] = v32;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v31);
    v20((char *)boxed_opaque_existential_1, a1, a5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_245387ECC();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v31, *MEMORY[0x24BEE26C8], v29);
    return swift_willThrow();
  }
}

BOOL sub_2453515AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6;
  id v7;
  _OWORD v9[2];

  *(_QWORD *)&v9[0] = sub_2453884A8();
  *((_QWORD *)&v9[0] + 1) = v6;
  swift_bridgeObjectRetain();
  v7 = objc_msgSend(a5, sel___swift_objectForKeyedSubscript_, sub_2453883C4(), v9[0]);
  swift_unknownObjectRelease();
  if (v7)
  {
    sub_245387E24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_245357B38((uint64_t)v9);
  swift_bridgeObjectRelease();
  return v7 != 0;
}

BOOL sub_245351674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;

  v13 = sub_245387EE4();
  v24 = *(_QWORD *)(v13 - 8);
  v25 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2452E06B0(0, &qword_25440C860);
  sub_2453511B4(a1, v16, a2, a5, a6, v16, (uint64_t)&v26, a7);
  if (!v7)
    goto LABEL_7;
  v26 = v7;
  v17 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440C868);
  v18 = v25;
  if (!swift_dynamicCast())
    goto LABEL_7;
  v19 = v24;
  if ((*(unsigned int (**)(char *, uint64_t))(v24 + 88))(v15, v18) != *MEMORY[0x24BEE26D0])
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v18);
LABEL_7:

    return v7 == 0;
  }

  (*(void (**)(char *, uint64_t))(v19 + 96))(v15, v18);
  v20 = &v15[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25440C870) + 48)];
  v21 = sub_245387ED8();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);

  return v7 == 0;
}

uint64_t sub_245351848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v8;
  char v10;

  sub_2453511B4(a1, MEMORY[0x24BEE1328], a2, a5, a6, MEMORY[0x24BEE1328], (uint64_t)&v10, a7);
  if (!v7)
    v8 = v10;
  return v8 & 1;
}

uint64_t sub_2453518A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  result = sub_2453511B4(a1, MEMORY[0x24BEE0D00], a2, a5, a6, MEMORY[0x24BEE0D00], (uint64_t)&v9, a7);
  if (!v7)
    return v9;
  return result;
}

double sub_2453518FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  double result;
  double v9;

  sub_2453511B4(a1, MEMORY[0x24BEE13C8], a2, a5, a6, MEMORY[0x24BEE13C8], (uint64_t)&v9, a7);
  if (!v7)
    return v9;
  return result;
}

float sub_245351954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  float result;
  float v9;

  sub_2453511B4(a1, MEMORY[0x24BEE14E8], a2, a5, a6, MEMORY[0x24BEE14E8], (uint64_t)&v9, a7);
  if (!v7)
    return v9;
  return result;
}

uint64_t sub_2453519AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t result;
  unsigned __int8 v10;

  result = sub_2453511B4(a1, a8, a2, a5, a6, a8, (uint64_t)&v10, a7);
  if (!v8)
    return v10;
  return result;
}

uint64_t sub_2453519FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t result;
  unsigned __int16 v10;

  result = sub_2453511B4(a1, a8, a2, a5, a6, a8, (uint64_t)&v10, a7);
  if (!v8)
    return v10;
  return result;
}

uint64_t sub_245351A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t result;
  unsigned int v10;

  result = sub_2453511B4(a1, a8, a2, a5, a6, a8, (uint64_t)&v10, a7);
  if (!v8)
    return v10;
  return result;
}

uint64_t sub_245351A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  result = sub_2453511B4(a1, a8, a2, a5, a6, a8, (uint64_t)&v10, a7);
  if (!v8)
    return v10;
  return result;
}

uint64_t sub_245351AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t result;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  __int128 v23;
  _QWORD v24[5];
  char v25;
  _OWORD v26[2];
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  result = sub_2453511B4(a2, MEMORY[0x24BEE4AD8] + 8, a3, a6, a7, MEMORY[0x24BEE4AD8] + 8, (uint64_t)v26, a9);
  if (!v9)
  {
    if (a1 == MEMORY[0x24BDCDDE8]
      && (sub_245263FBC((uint64_t)v26, (uint64_t)&v23),
          sub_2452E06B0(0, (unint64_t *)&qword_25440C990),
          (swift_dynamicCast() & 1) != 0))
    {

      sub_2452CC368(v26, &v23);
      return swift_dynamicCast();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_245389A60;
      *(_QWORD *)(inited + 56) = a7;
      *(_QWORD *)(inited + 64) = a9;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 16))(boxed_opaque_existential_1, a2, a7);
      *(_QWORD *)&v23 = a3;
      swift_bridgeObjectRetain();
      sub_245356878(inited);
      v19 = v23;
      sub_245263FBC((uint64_t)v26, (uint64_t)v24);
      v20 = sub_24531B410(MEMORY[0x24BEE4AF8]);
      *(_QWORD *)&v23 = v19;
      *((_QWORD *)&v23 + 1) = v20;
      v24[4] = a4;
      v25 = a5 & 1;
      sub_245263FF8();
      v22 = swift_allocObject();
      sub_245264070((uint64_t)&v23, v22 + 16);
      sub_245387CB0();
      sub_2452640AC((uint64_t)&v23);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    }
  }
  return result;
}

void sub_245351D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v18;
  char v19;
  void *v20;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_1;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  _QWORD v28[2];
  char v29;
  id v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v18 = sub_2452E06B0(0, &qword_25440C858);
  v19 = a5 & 1;
  sub_2453511B4(a2, v18, a3, a6, a7, v18, (uint64_t)v28, a9);
  if (!v10)
  {
    v27 = a8;
    v20 = (void *)v28[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_245389A60;
    *(_QWORD *)(inited + 56) = a7;
    *(_QWORD *)(inited + 64) = a9;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 16))(boxed_opaque_existential_1, a2, a7);
    v28[0] = a3;
    v23 = v20;
    swift_bridgeObjectRetain();
    sub_245356878(inited);
    v28[1] = a4;
    v29 = v19;
    v30 = v23;
    v25 = type metadata accessor for PropertyListTypeDecoder.KeyedDecoder(0, v27, a10, v24);
    swift_bridgeObjectRetain();
    v26 = v23;
    MEMORY[0x2495330B0](&unk_24538F0A8, v25);
    sub_245388064();
    swift_bridgeObjectRelease();

  }
}

void sub_245351F00(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v8;
  uint64_t v17;
  char v18;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_1;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD v25[11];

  v25[10] = *MEMORY[0x24BDAC8D0];
  v17 = sub_2452E06B0(0, &qword_25440C7B8);
  v18 = a4 & 1;
  sub_2453511B4(a1, v17, a2, a5, a6, v17, (uint64_t)v25, a7);
  if (!v8)
  {
    v24 = (void *)v25[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_245389A60;
    *(_QWORD *)(inited + 56) = a6;
    *(_QWORD *)(inited + 64) = a7;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(boxed_opaque_existential_1, a1, a6);
    v25[0] = a2;
    v21 = v24;
    swift_bridgeObjectRetain();
    sub_245356878(inited);
    v22 = v25[0];
    a8[3] = (uint64_t)&type metadata for PropertyListTypeDecoder.UnkeyedDecoder;
    a8[4] = sub_245350F78();
    v23 = swift_allocObject();
    *a8 = v23;

    *(_QWORD *)(v23 + 16) = v22;
    *(_QWORD *)(v23 + 24) = 0;
    *(_QWORD *)(v23 + 32) = v21;
    *(_QWORD *)(v23 + 40) = a3;
    *(_BYTE *)(v23 + 48) = v18;
  }
}

void sub_24535209C()
{
  sub_245387F80();
  __break(1u);
}

void sub_2453520FC()
{
  sub_245387F80();
  __break(1u);
}

uint64_t sub_24535215C()
{
  uint64_t v0;

  return sub_245350FF4(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(unsigned __int8 *)(v0 + 16), *(id *)(v0 + 24));
}

BOOL sub_24535217C(uint64_t a1)
{
  uint64_t v1;

  return sub_2453515AC(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_24535219C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2453521DC(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_245351674) & 1;
}

uint64_t sub_2453521BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2453521DC(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_245351848) & 1;
}

uint64_t sub_2453521DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v4;

  return a4(a1, *(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(unsigned __int8 *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24)) & 1;
}

uint64_t sub_245352214(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2453518A4(a1, *(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(unsigned __int8 *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

double sub_245352244(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2453518FC(a1, *(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(unsigned __int8 *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

float sub_245352274(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_245351954(a1, *(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(unsigned __int8 *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_2453522A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245352330(a1, a2, a3, MEMORY[0x24BEE1768]);
}

uint64_t sub_2453522C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2453523B0(a1, a2, a3, MEMORY[0x24BEE3E50]);
}

uint64_t sub_2453522DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245352400(a1, a2, a3, MEMORY[0x24BEE3F30]);
}

uint64_t sub_2453522F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245352450(a1, a2, a3, MEMORY[0x24BEE3F88]);
}

uint64_t sub_245352314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245352330(a1, a2, a3, MEMORY[0x24BEE4008]);
}

uint64_t sub_245352330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_245351A9C(a1, *(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(unsigned __int8 *)(v4 + 16), *(void **)(v4 + 24), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
}

uint64_t sub_245352364()
{
  return sub_245388310();
}

uint64_t sub_245352378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245352330(a1, a2, a3, MEMORY[0x24BEE1E88]);
}

uint64_t sub_245352394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2453523B0(a1, a2, a3, MEMORY[0x24BEE4260]);
}

uint64_t sub_2453523B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_2453519AC(a1, *(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(unsigned __int8 *)(v4 + 16), *(void **)(v4 + 24), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
}

uint64_t sub_2453523E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245352400(a1, a2, a3, MEMORY[0x24BEE4478]);
}

uint64_t sub_245352400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_2453519FC(a1, *(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(unsigned __int8 *)(v4 + 16), *(void **)(v4 + 24), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
}

uint64_t sub_245352434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245352450(a1, a2, a3, MEMORY[0x24BEE44F0]);
}

uint64_t sub_245352450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_245351A4C(a1, *(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(unsigned __int8 *)(v4 + 16), *(void **)(v4 + 24), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
}

uint64_t sub_245352484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245352330(a1, a2, a3, MEMORY[0x24BEE4568]);
}

uint64_t sub_2453524A0()
{
  return sub_24538831C();
}

uint64_t sub_2453524B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_24535277C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t))sub_245351AEC);
}

uint64_t sub_2453524D0()
{
  return sub_2453882BC();
}

uint64_t sub_2453524E4()
{
  return sub_2453882B0();
}

uint64_t sub_2453524F8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_2453882C8();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_245352518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2453526A8(a1, a2, a3, MEMORY[0x24BEE3C00]);
}

uint64_t sub_245352534()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_2453882D4();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_245352554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245352620(a1, a2, a3, MEMORY[0x24BEE3C20]);
}

uint64_t sub_245352570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245352664(a1, a2, a3, MEMORY[0x24BEE3C28]);
}

uint64_t sub_24535258C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2453526A8(a1, a2, a3, MEMORY[0x24BEE3C30]);
}

uint64_t sub_2453525A8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_2453882F8();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_2453525C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245352714(a1, a2, a3, MEMORY[0x24BEE3C48]);
}

uint64_t sub_2453525E4()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_2453882E0();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_245352604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245352620(a1, a2, a3, MEMORY[0x24BEE3C40]);
}

uint64_t sub_245352620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FF;
}

uint64_t sub_245352648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245352664(a1, a2, a3, MEMORY[0x24BEE3C50]);
}

uint64_t sub_245352664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FFFF;
}

uint64_t sub_24535268C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2453526A8(a1, a2, a3, MEMORY[0x24BEE3C58]);
}

uint64_t sub_2453526A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v4;

  v4 = a4();
  return v4 | ((HIDWORD(v4) & 1) << 32);
}

uint64_t sub_2453526D8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_245388304();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_2453526F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245352714(a1, a2, a3, MEMORY[0x24BEE3C68]);
}

uint64_t sub_245352714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  result = a4();
  if (v4)
    return v6;
  return result;
}

uint64_t sub_245352738()
{
  return sub_2453882EC();
}

uint64_t sub_245352760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_24535277C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t))sub_245351D38);
}

uint64_t sub_24535277C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t))
{
  uint64_t v7;

  return a7(a1, a2, *(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(unsigned __int8 *)(v7 + 16), *(_QWORD *)(v7 + 24), *(_QWORD *)(a5 + 16), a3, *(_QWORD *)(a5 + 24), a4);
}

uint64_t sub_2453527BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245352824(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_245351F00);
}

void sub_2453527D8()
{
  sub_24535209C();
}

uint64_t sub_245352808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245352824(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2453520FC);
}

uint64_t sub_245352824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v4;

  return a4(a1, *(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(unsigned __int8 *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_245352858()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_245352884@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  *(_QWORD *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 24) = 1;
  return result;
}

uint64_t sub_245352898()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_2453528A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_2453880F4();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = a1;
  *(_BYTE *)(a2 + 24) = 0;
  return result;
}

uint64_t sub_2453528FC()
{
  sub_245357AD0();
  return sub_2453884D8();
}

uint64_t sub_245352924()
{
  sub_245357AD0();
  return sub_2453884E4();
}

uint64_t sub_24535294C()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  _QWORD v30[4];
  _QWORD v31[15];

  v31[13] = *MEMORY[0x24BDAC8D0];
  v1 = v0[1];
  v2 = (void *)v0[2];
  if (v1 >= (uint64_t)objc_msgSend(v2, sel_count))
  {
    v8 = sub_245387EE4();
    swift_allocError();
    v10 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v10 = MEMORY[0x24BEE1328];
    v11 = *v0;
    v12 = v0[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_245389A60;
    v14 = sub_2453880F4();
    v16 = v15;
    *(_QWORD *)(inited + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
    *(_QWORD *)(inited + 64) = sub_245357AD0();
    v17 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v17;
    *(_QWORD *)(v17 + 16) = v14;
    *(_QWORD *)(v17 + 24) = v16;
    *(_QWORD *)(v17 + 32) = v12;
    *(_BYTE *)(v17 + 40) = 0;
    v31[0] = v11;
    swift_bridgeObjectRetain();
    sub_245356878(inited);
    sub_245387ECC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v10, *MEMORY[0x24BEE26E0], v8);
    swift_willThrow();
  }
  else
  {
    v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, v1);
    sub_245387E24();
    swift_unknownObjectRelease();
    sub_245263FBC((uint64_t)v31, (uint64_t)v30);
    v4 = MEMORY[0x24BEE1328];
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      v5 = v0[1];
      v6 = v5 + 1;
      if (__OFADD__(v5, 1))
        __break(1u);
      v7 = v29 & 1;
      v0[1] = v6;
    }
    else
    {
      v18 = sub_245387EE4();
      swift_allocError();
      v20 = v19;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
      *v20 = v4;
      v21 = *v0;
      v22 = v0[1];
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
      v23 = swift_initStackObject();
      *(_OWORD *)(v23 + 16) = xmmword_245389A60;
      v30[0] = v22;
      v24 = sub_2453880F4();
      v26 = v25;
      *(_QWORD *)(v23 + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
      *(_QWORD *)(v23 + 64) = sub_245357AD0();
      v27 = swift_allocObject();
      *(_QWORD *)(v23 + 32) = v27;
      *(_QWORD *)(v27 + 16) = v24;
      *(_QWORD *)(v27 + 24) = v26;
      *(_QWORD *)(v27 + 32) = v22;
      *(_BYTE *)(v27 + 40) = 0;
      v30[0] = v21;
      swift_bridgeObjectRetain();
      sub_245356878(v23);
      sub_245387ECC();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x24BEE26D0], v18);
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    }
  }
  return v7 & 1;
}

uint64_t sub_245352CBC()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[4];
  _QWORD v31[15];

  v31[13] = *MEMORY[0x24BDAC8D0];
  v1 = v0[1];
  v2 = (void *)v0[2];
  if (v1 >= (uint64_t)objc_msgSend(v2, sel_count))
  {
    v9 = sub_245387EE4();
    swift_allocError();
    v11 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v11 = MEMORY[0x24BEE0D00];
    v12 = *v0;
    v13 = v0[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_245389A60;
    v15 = sub_2453880F4();
    v17 = v16;
    *(_QWORD *)(inited + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
    *(_QWORD *)(inited + 64) = sub_245357AD0();
    v18 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v18 + 24) = v17;
    *(_QWORD *)(v18 + 32) = v13;
    *(_BYTE *)(v18 + 40) = 0;
    v31[0] = v12;
    swift_bridgeObjectRetain();
    sub_245356878(inited);
    sub_245387ECC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x24BEE26E0], v9);
    return swift_willThrow();
  }
  else
  {
    v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, v1);
    sub_245387E24();
    swift_unknownObjectRelease();
    sub_245263FBC((uint64_t)v31, (uint64_t)v30);
    v4 = MEMORY[0x24BEE0D00];
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      v5 = v0[1];
      v6 = __OFADD__(v5, 1);
      v7 = v5 + 1;
      if (v6)
        __break(1u);
      result = v29;
      v0[1] = v7;
    }
    else
    {
      v19 = sub_245387EE4();
      swift_allocError();
      v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
      *v21 = v4;
      v22 = *v0;
      v23 = v0[1];
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
      v24 = swift_initStackObject();
      *(_OWORD *)(v24 + 16) = xmmword_245389A60;
      v30[0] = v23;
      v25 = sub_2453880F4();
      v27 = v26;
      *(_QWORD *)(v24 + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
      *(_QWORD *)(v24 + 64) = sub_245357AD0();
      v28 = swift_allocObject();
      *(_QWORD *)(v24 + 32) = v28;
      *(_QWORD *)(v28 + 16) = v25;
      *(_QWORD *)(v28 + 24) = v27;
      *(_QWORD *)(v28 + 32) = v23;
      *(_BYTE *)(v28 + 40) = 0;
      v30[0] = v22;
      swift_bridgeObjectRetain();
      sub_245356878(v24);
      sub_245387ECC();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    }
  }
  return result;
}

uint64_t sub_245353024()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[4];
  _QWORD v30[15];

  v30[13] = *MEMORY[0x24BDAC8D0];
  v1 = v0[1];
  v2 = (void *)v0[2];
  if (v1 >= (uint64_t)objc_msgSend(v2, sel_count))
  {
    v9 = sub_245387EE4();
    swift_allocError();
    v11 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v11 = MEMORY[0x24BEE13C8];
    v12 = *v0;
    v13 = v0[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_245389A60;
    v15 = sub_2453880F4();
    v17 = v16;
    *(_QWORD *)(inited + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
    *(_QWORD *)(inited + 64) = sub_245357AD0();
    v18 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v18 + 24) = v17;
    *(_QWORD *)(v18 + 32) = v13;
    *(_BYTE *)(v18 + 40) = 0;
    v30[0] = v12;
    swift_bridgeObjectRetain();
    sub_245356878(inited);
    sub_245387ECC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x24BEE26E0], v9);
    return swift_willThrow();
  }
  else
  {
    v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, v1);
    sub_245387E24();
    swift_unknownObjectRelease();
    sub_245263FBC((uint64_t)v30, (uint64_t)v29);
    v4 = MEMORY[0x24BEE13C8];
    if ((swift_dynamicCast() & 1) != 0)
    {
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
      v6 = v0[1];
      v7 = __OFADD__(v6, 1);
      v8 = v6 + 1;
      if (v7)
        __break(1u);
      v0[1] = v8;
    }
    else
    {
      v19 = sub_245387EE4();
      swift_allocError();
      v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
      *v21 = v4;
      v22 = *v0;
      v23 = v0[1];
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
      v24 = swift_initStackObject();
      *(_OWORD *)(v24 + 16) = xmmword_245389A60;
      v29[0] = v23;
      v25 = sub_2453880F4();
      v27 = v26;
      *(_QWORD *)(v24 + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
      *(_QWORD *)(v24 + 64) = sub_245357AD0();
      v28 = swift_allocObject();
      *(_QWORD *)(v24 + 32) = v28;
      *(_QWORD *)(v28 + 16) = v25;
      *(_QWORD *)(v28 + 24) = v27;
      *(_QWORD *)(v28 + 32) = v23;
      *(_BYTE *)(v28 + 40) = 0;
      v29[0] = v22;
      swift_bridgeObjectRetain();
      sub_245356878(v24);
      sub_245387ECC();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    }
  }
  return result;
}

uint64_t sub_245353390()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[4];
  _QWORD v30[15];

  v30[13] = *MEMORY[0x24BDAC8D0];
  v1 = v0[1];
  v2 = (void *)v0[2];
  if (v1 >= (uint64_t)objc_msgSend(v2, sel_count))
  {
    v9 = sub_245387EE4();
    swift_allocError();
    v11 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v11 = MEMORY[0x24BEE14E8];
    v12 = *v0;
    v13 = v0[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_245389A60;
    v15 = sub_2453880F4();
    v17 = v16;
    *(_QWORD *)(inited + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
    *(_QWORD *)(inited + 64) = sub_245357AD0();
    v18 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v18 + 24) = v17;
    *(_QWORD *)(v18 + 32) = v13;
    *(_BYTE *)(v18 + 40) = 0;
    v30[0] = v12;
    swift_bridgeObjectRetain();
    sub_245356878(inited);
    sub_245387ECC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x24BEE26E0], v9);
    return swift_willThrow();
  }
  else
  {
    v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, v1);
    sub_245387E24();
    swift_unknownObjectRelease();
    sub_245263FBC((uint64_t)v30, (uint64_t)v29);
    v4 = MEMORY[0x24BEE14E8];
    if ((swift_dynamicCast() & 1) != 0)
    {
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
      v6 = v0[1];
      v7 = __OFADD__(v6, 1);
      v8 = v6 + 1;
      if (v7)
        __break(1u);
      v0[1] = v8;
    }
    else
    {
      v19 = sub_245387EE4();
      swift_allocError();
      v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
      *v21 = v4;
      v22 = *v0;
      v23 = v0[1];
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
      v24 = swift_initStackObject();
      *(_OWORD *)(v24 + 16) = xmmword_245389A60;
      v29[0] = v23;
      v25 = sub_2453880F4();
      v27 = v26;
      *(_QWORD *)(v24 + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
      *(_QWORD *)(v24 + 64) = sub_245357AD0();
      v28 = swift_allocObject();
      *(_QWORD *)(v24 + 32) = v28;
      *(_QWORD *)(v28 + 16) = v25;
      *(_QWORD *)(v28 + 24) = v27;
      *(_QWORD *)(v28 + 32) = v23;
      *(_BYTE *)(v28 + 40) = 0;
      v29[0] = v22;
      swift_bridgeObjectRetain();
      sub_245356878(v24);
      sub_245387ECC();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    }
  }
  return result;
}

uint64_t sub_2453536FC()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[4];
  _QWORD v31[15];

  v31[13] = *MEMORY[0x24BDAC8D0];
  v1 = v0[1];
  v2 = (void *)v0[2];
  if (v1 >= (uint64_t)objc_msgSend(v2, sel_count))
  {
    v9 = sub_245387EE4();
    swift_allocError();
    v11 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v11 = MEMORY[0x24BEE1768];
    v12 = *v0;
    v13 = v0[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_245389A60;
    v15 = sub_2453880F4();
    v17 = v16;
    *(_QWORD *)(inited + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
    *(_QWORD *)(inited + 64) = sub_245357AD0();
    v18 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v18 + 24) = v17;
    *(_QWORD *)(v18 + 32) = v13;
    *(_BYTE *)(v18 + 40) = 0;
    v31[0] = v12;
    swift_bridgeObjectRetain();
    sub_245356878(inited);
    sub_245387ECC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x24BEE26E0], v9);
    return swift_willThrow();
  }
  else
  {
    v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, v1);
    sub_245387E24();
    swift_unknownObjectRelease();
    sub_245263FBC((uint64_t)v31, (uint64_t)v30);
    v4 = MEMORY[0x24BEE1768];
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      v5 = v0[1];
      v6 = __OFADD__(v5, 1);
      v7 = v5 + 1;
      if (v6)
        __break(1u);
      result = v29;
      v0[1] = v7;
    }
    else
    {
      v19 = sub_245387EE4();
      swift_allocError();
      v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
      *v21 = v4;
      v22 = *v0;
      v23 = v0[1];
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
      v24 = swift_initStackObject();
      *(_OWORD *)(v24 + 16) = xmmword_245389A60;
      v30[0] = v23;
      v25 = sub_2453880F4();
      v27 = v26;
      *(_QWORD *)(v24 + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
      *(_QWORD *)(v24 + 64) = sub_245357AD0();
      v28 = swift_allocObject();
      *(_QWORD *)(v24 + 32) = v28;
      *(_QWORD *)(v28 + 16) = v25;
      *(_QWORD *)(v28 + 24) = v27;
      *(_QWORD *)(v28 + 32) = v23;
      *(_BYTE *)(v28 + 40) = 0;
      v30[0] = v22;
      swift_bridgeObjectRetain();
      sub_245356878(v24);
      sub_245387ECC();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    }
  }
  return result;
}

uint64_t sub_245353A60()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  _QWORD v30[4];
  _QWORD v31[15];

  v31[13] = *MEMORY[0x24BDAC8D0];
  v1 = v0[1];
  v2 = (void *)v0[2];
  if (v1 >= (uint64_t)objc_msgSend(v2, sel_count))
  {
    v9 = sub_245387EE4();
    swift_allocError();
    v11 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v11 = MEMORY[0x24BEE3E50];
    v12 = *v0;
    v13 = v0[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_245389A60;
    v15 = sub_2453880F4();
    v17 = v16;
    *(_QWORD *)(inited + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
    *(_QWORD *)(inited + 64) = sub_245357AD0();
    v18 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v18 + 24) = v17;
    *(_QWORD *)(v18 + 32) = v13;
    *(_BYTE *)(v18 + 40) = 0;
    v31[0] = v12;
    swift_bridgeObjectRetain();
    sub_245356878(inited);
    sub_245387ECC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x24BEE26E0], v9);
    return swift_willThrow();
  }
  else
  {
    v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, v1);
    sub_245387E24();
    swift_unknownObjectRelease();
    sub_245263FBC((uint64_t)v31, (uint64_t)v30);
    v4 = MEMORY[0x24BEE3E50];
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      v5 = v0[1];
      v6 = __OFADD__(v5, 1);
      v7 = v5 + 1;
      if (v6)
        __break(1u);
      result = v29;
      v0[1] = v7;
    }
    else
    {
      v19 = sub_245387EE4();
      swift_allocError();
      v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
      *v21 = v4;
      v22 = *v0;
      v23 = v0[1];
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
      v24 = swift_initStackObject();
      *(_OWORD *)(v24 + 16) = xmmword_245389A60;
      v30[0] = v23;
      v25 = sub_2453880F4();
      v27 = v26;
      *(_QWORD *)(v24 + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
      *(_QWORD *)(v24 + 64) = sub_245357AD0();
      v28 = swift_allocObject();
      *(_QWORD *)(v24 + 32) = v28;
      *(_QWORD *)(v28 + 16) = v25;
      *(_QWORD *)(v28 + 24) = v27;
      *(_QWORD *)(v28 + 32) = v23;
      *(_BYTE *)(v28 + 40) = 0;
      v30[0] = v22;
      swift_bridgeObjectRetain();
      sub_245356878(v24);
      sub_245387ECC();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    }
  }
  return result;
}

uint64_t sub_245353DCC()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 v29;
  _QWORD v30[4];
  _QWORD v31[15];

  v31[13] = *MEMORY[0x24BDAC8D0];
  v1 = v0[1];
  v2 = (void *)v0[2];
  if (v1 >= (uint64_t)objc_msgSend(v2, sel_count))
  {
    v9 = sub_245387EE4();
    swift_allocError();
    v11 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v11 = MEMORY[0x24BEE3F30];
    v12 = *v0;
    v13 = v0[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_245389A60;
    v15 = sub_2453880F4();
    v17 = v16;
    *(_QWORD *)(inited + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
    *(_QWORD *)(inited + 64) = sub_245357AD0();
    v18 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v18 + 24) = v17;
    *(_QWORD *)(v18 + 32) = v13;
    *(_BYTE *)(v18 + 40) = 0;
    v31[0] = v12;
    swift_bridgeObjectRetain();
    sub_245356878(inited);
    sub_245387ECC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x24BEE26E0], v9);
    return swift_willThrow();
  }
  else
  {
    v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, v1);
    sub_245387E24();
    swift_unknownObjectRelease();
    sub_245263FBC((uint64_t)v31, (uint64_t)v30);
    v4 = MEMORY[0x24BEE3F30];
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      v5 = v0[1];
      v6 = __OFADD__(v5, 1);
      v7 = v5 + 1;
      if (v6)
        __break(1u);
      result = v29;
      v0[1] = v7;
    }
    else
    {
      v19 = sub_245387EE4();
      swift_allocError();
      v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
      *v21 = v4;
      v22 = *v0;
      v23 = v0[1];
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
      v24 = swift_initStackObject();
      *(_OWORD *)(v24 + 16) = xmmword_245389A60;
      v30[0] = v23;
      v25 = sub_2453880F4();
      v27 = v26;
      *(_QWORD *)(v24 + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
      *(_QWORD *)(v24 + 64) = sub_245357AD0();
      v28 = swift_allocObject();
      *(_QWORD *)(v24 + 32) = v28;
      *(_QWORD *)(v28 + 16) = v25;
      *(_QWORD *)(v28 + 24) = v27;
      *(_QWORD *)(v28 + 32) = v23;
      *(_BYTE *)(v28 + 40) = 0;
      v30[0] = v22;
      swift_bridgeObjectRetain();
      sub_245356878(v24);
      sub_245387ECC();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    }
  }
  return result;
}

uint64_t sub_245354138()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  _QWORD v30[4];
  _QWORD v31[15];

  v31[13] = *MEMORY[0x24BDAC8D0];
  v1 = v0[1];
  v2 = (void *)v0[2];
  if (v1 >= (uint64_t)objc_msgSend(v2, sel_count))
  {
    v9 = sub_245387EE4();
    swift_allocError();
    v11 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v11 = MEMORY[0x24BEE3F88];
    v12 = *v0;
    v13 = v0[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_245389A60;
    v15 = sub_2453880F4();
    v17 = v16;
    *(_QWORD *)(inited + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
    *(_QWORD *)(inited + 64) = sub_245357AD0();
    v18 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v18 + 24) = v17;
    *(_QWORD *)(v18 + 32) = v13;
    *(_BYTE *)(v18 + 40) = 0;
    v31[0] = v12;
    swift_bridgeObjectRetain();
    sub_245356878(inited);
    sub_245387ECC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x24BEE26E0], v9);
    return swift_willThrow();
  }
  else
  {
    v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, v1);
    sub_245387E24();
    swift_unknownObjectRelease();
    sub_245263FBC((uint64_t)v31, (uint64_t)v30);
    v4 = MEMORY[0x24BEE3F88];
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      v5 = v0[1];
      v6 = __OFADD__(v5, 1);
      v7 = v5 + 1;
      if (v6)
        __break(1u);
      result = v29;
      v0[1] = v7;
    }
    else
    {
      v19 = sub_245387EE4();
      swift_allocError();
      v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
      *v21 = v4;
      v22 = *v0;
      v23 = v0[1];
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
      v24 = swift_initStackObject();
      *(_OWORD *)(v24 + 16) = xmmword_245389A60;
      v30[0] = v23;
      v25 = sub_2453880F4();
      v27 = v26;
      *(_QWORD *)(v24 + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
      *(_QWORD *)(v24 + 64) = sub_245357AD0();
      v28 = swift_allocObject();
      *(_QWORD *)(v24 + 32) = v28;
      *(_QWORD *)(v28 + 16) = v25;
      *(_QWORD *)(v28 + 24) = v27;
      *(_QWORD *)(v28 + 32) = v23;
      *(_BYTE *)(v28 + 40) = 0;
      v30[0] = v22;
      swift_bridgeObjectRetain();
      sub_245356878(v24);
      sub_245387ECC();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    }
  }
  return result;
}

uint64_t sub_2453544A4()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[4];
  _QWORD v31[15];

  v31[13] = *MEMORY[0x24BDAC8D0];
  v1 = v0[1];
  v2 = (void *)v0[2];
  if (v1 >= (uint64_t)objc_msgSend(v2, sel_count))
  {
    v9 = sub_245387EE4();
    swift_allocError();
    v11 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v11 = MEMORY[0x24BEE4008];
    v12 = *v0;
    v13 = v0[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_245389A60;
    v15 = sub_2453880F4();
    v17 = v16;
    *(_QWORD *)(inited + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
    *(_QWORD *)(inited + 64) = sub_245357AD0();
    v18 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v18 + 24) = v17;
    *(_QWORD *)(v18 + 32) = v13;
    *(_BYTE *)(v18 + 40) = 0;
    v31[0] = v12;
    swift_bridgeObjectRetain();
    sub_245356878(inited);
    sub_245387ECC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x24BEE26E0], v9);
    return swift_willThrow();
  }
  else
  {
    v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, v1);
    sub_245387E24();
    swift_unknownObjectRelease();
    sub_245263FBC((uint64_t)v31, (uint64_t)v30);
    v4 = MEMORY[0x24BEE4008];
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      v5 = v0[1];
      v6 = __OFADD__(v5, 1);
      v7 = v5 + 1;
      if (v6)
        __break(1u);
      result = v29;
      v0[1] = v7;
    }
    else
    {
      v19 = sub_245387EE4();
      swift_allocError();
      v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
      *v21 = v4;
      v22 = *v0;
      v23 = v0[1];
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
      v24 = swift_initStackObject();
      *(_OWORD *)(v24 + 16) = xmmword_245389A60;
      v30[0] = v23;
      v25 = sub_2453880F4();
      v27 = v26;
      *(_QWORD *)(v24 + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
      *(_QWORD *)(v24 + 64) = sub_245357AD0();
      v28 = swift_allocObject();
      *(_QWORD *)(v24 + 32) = v28;
      *(_QWORD *)(v28 + 16) = v25;
      *(_QWORD *)(v28 + 24) = v27;
      *(_QWORD *)(v28 + 32) = v23;
      *(_BYTE *)(v28 + 40) = 0;
      v30[0] = v22;
      swift_bridgeObjectRetain();
      sub_245356878(v24);
      sub_245387ECC();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    }
  }
  return result;
}

uint64_t sub_245354810()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[4];
  _QWORD v31[15];

  v31[13] = *MEMORY[0x24BDAC8D0];
  v1 = v0[1];
  v2 = (void *)v0[2];
  if (v1 >= (uint64_t)objc_msgSend(v2, sel_count))
  {
    v9 = sub_245387EE4();
    swift_allocError();
    v11 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v11 = MEMORY[0x24BEE1E88];
    v12 = *v0;
    v13 = v0[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_245389A60;
    v15 = sub_2453880F4();
    v17 = v16;
    *(_QWORD *)(inited + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
    *(_QWORD *)(inited + 64) = sub_245357AD0();
    v18 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v18 + 24) = v17;
    *(_QWORD *)(v18 + 32) = v13;
    *(_BYTE *)(v18 + 40) = 0;
    v31[0] = v12;
    swift_bridgeObjectRetain();
    sub_245356878(inited);
    sub_245387ECC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x24BEE26E0], v9);
    return swift_willThrow();
  }
  else
  {
    v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, v1);
    sub_245387E24();
    swift_unknownObjectRelease();
    sub_245263FBC((uint64_t)v31, (uint64_t)v30);
    v4 = MEMORY[0x24BEE1E88];
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      v5 = v0[1];
      v6 = __OFADD__(v5, 1);
      v7 = v5 + 1;
      if (v6)
        __break(1u);
      result = v29;
      v0[1] = v7;
    }
    else
    {
      v19 = sub_245387EE4();
      swift_allocError();
      v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
      *v21 = v4;
      v22 = *v0;
      v23 = v0[1];
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
      v24 = swift_initStackObject();
      *(_OWORD *)(v24 + 16) = xmmword_245389A60;
      v30[0] = v23;
      v25 = sub_2453880F4();
      v27 = v26;
      *(_QWORD *)(v24 + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
      *(_QWORD *)(v24 + 64) = sub_245357AD0();
      v28 = swift_allocObject();
      *(_QWORD *)(v24 + 32) = v28;
      *(_QWORD *)(v28 + 16) = v25;
      *(_QWORD *)(v28 + 24) = v27;
      *(_QWORD *)(v28 + 32) = v23;
      *(_BYTE *)(v28 + 40) = 0;
      v30[0] = v22;
      swift_bridgeObjectRetain();
      sub_245356878(v24);
      sub_245387ECC();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    }
  }
  return result;
}

uint64_t sub_245354B7C()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  _QWORD v30[4];
  _QWORD v31[15];

  v31[13] = *MEMORY[0x24BDAC8D0];
  v1 = v0[1];
  v2 = (void *)v0[2];
  if (v1 >= (uint64_t)objc_msgSend(v2, sel_count))
  {
    v9 = sub_245387EE4();
    swift_allocError();
    v11 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v11 = MEMORY[0x24BEE4260];
    v12 = *v0;
    v13 = v0[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_245389A60;
    v15 = sub_2453880F4();
    v17 = v16;
    *(_QWORD *)(inited + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
    *(_QWORD *)(inited + 64) = sub_245357AD0();
    v18 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v18 + 24) = v17;
    *(_QWORD *)(v18 + 32) = v13;
    *(_BYTE *)(v18 + 40) = 0;
    v31[0] = v12;
    swift_bridgeObjectRetain();
    sub_245356878(inited);
    sub_245387ECC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x24BEE26E0], v9);
    return swift_willThrow();
  }
  else
  {
    v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, v1);
    sub_245387E24();
    swift_unknownObjectRelease();
    sub_245263FBC((uint64_t)v31, (uint64_t)v30);
    v4 = MEMORY[0x24BEE4260];
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      v5 = v0[1];
      v6 = __OFADD__(v5, 1);
      v7 = v5 + 1;
      if (v6)
        __break(1u);
      result = v29;
      v0[1] = v7;
    }
    else
    {
      v19 = sub_245387EE4();
      swift_allocError();
      v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
      *v21 = v4;
      v22 = *v0;
      v23 = v0[1];
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
      v24 = swift_initStackObject();
      *(_OWORD *)(v24 + 16) = xmmword_245389A60;
      v30[0] = v23;
      v25 = sub_2453880F4();
      v27 = v26;
      *(_QWORD *)(v24 + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
      *(_QWORD *)(v24 + 64) = sub_245357AD0();
      v28 = swift_allocObject();
      *(_QWORD *)(v24 + 32) = v28;
      *(_QWORD *)(v28 + 16) = v25;
      *(_QWORD *)(v28 + 24) = v27;
      *(_QWORD *)(v28 + 32) = v23;
      *(_BYTE *)(v28 + 40) = 0;
      v30[0] = v22;
      swift_bridgeObjectRetain();
      sub_245356878(v24);
      sub_245387ECC();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    }
  }
  return result;
}

uint64_t sub_245354EE8()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 v29;
  _QWORD v30[4];
  _QWORD v31[15];

  v31[13] = *MEMORY[0x24BDAC8D0];
  v1 = v0[1];
  v2 = (void *)v0[2];
  if (v1 >= (uint64_t)objc_msgSend(v2, sel_count))
  {
    v9 = sub_245387EE4();
    swift_allocError();
    v11 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v11 = MEMORY[0x24BEE4478];
    v12 = *v0;
    v13 = v0[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_245389A60;
    v15 = sub_2453880F4();
    v17 = v16;
    *(_QWORD *)(inited + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
    *(_QWORD *)(inited + 64) = sub_245357AD0();
    v18 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v18 + 24) = v17;
    *(_QWORD *)(v18 + 32) = v13;
    *(_BYTE *)(v18 + 40) = 0;
    v31[0] = v12;
    swift_bridgeObjectRetain();
    sub_245356878(inited);
    sub_245387ECC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x24BEE26E0], v9);
    return swift_willThrow();
  }
  else
  {
    v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, v1);
    sub_245387E24();
    swift_unknownObjectRelease();
    sub_245263FBC((uint64_t)v31, (uint64_t)v30);
    v4 = MEMORY[0x24BEE4478];
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      v5 = v0[1];
      v6 = __OFADD__(v5, 1);
      v7 = v5 + 1;
      if (v6)
        __break(1u);
      result = v29;
      v0[1] = v7;
    }
    else
    {
      v19 = sub_245387EE4();
      swift_allocError();
      v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
      *v21 = v4;
      v22 = *v0;
      v23 = v0[1];
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
      v24 = swift_initStackObject();
      *(_OWORD *)(v24 + 16) = xmmword_245389A60;
      v30[0] = v23;
      v25 = sub_2453880F4();
      v27 = v26;
      *(_QWORD *)(v24 + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
      *(_QWORD *)(v24 + 64) = sub_245357AD0();
      v28 = swift_allocObject();
      *(_QWORD *)(v24 + 32) = v28;
      *(_QWORD *)(v28 + 16) = v25;
      *(_QWORD *)(v28 + 24) = v27;
      *(_QWORD *)(v28 + 32) = v23;
      *(_BYTE *)(v28 + 40) = 0;
      v30[0] = v22;
      swift_bridgeObjectRetain();
      sub_245356878(v24);
      sub_245387ECC();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    }
  }
  return result;
}

uint64_t sub_245355254()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  _QWORD v30[4];
  _QWORD v31[15];

  v31[13] = *MEMORY[0x24BDAC8D0];
  v1 = v0[1];
  v2 = (void *)v0[2];
  if (v1 >= (uint64_t)objc_msgSend(v2, sel_count))
  {
    v9 = sub_245387EE4();
    swift_allocError();
    v11 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v11 = MEMORY[0x24BEE44F0];
    v12 = *v0;
    v13 = v0[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_245389A60;
    v15 = sub_2453880F4();
    v17 = v16;
    *(_QWORD *)(inited + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
    *(_QWORD *)(inited + 64) = sub_245357AD0();
    v18 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v18 + 24) = v17;
    *(_QWORD *)(v18 + 32) = v13;
    *(_BYTE *)(v18 + 40) = 0;
    v31[0] = v12;
    swift_bridgeObjectRetain();
    sub_245356878(inited);
    sub_245387ECC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x24BEE26E0], v9);
    return swift_willThrow();
  }
  else
  {
    v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, v1);
    sub_245387E24();
    swift_unknownObjectRelease();
    sub_245263FBC((uint64_t)v31, (uint64_t)v30);
    v4 = MEMORY[0x24BEE44F0];
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      v5 = v0[1];
      v6 = __OFADD__(v5, 1);
      v7 = v5 + 1;
      if (v6)
        __break(1u);
      result = v29;
      v0[1] = v7;
    }
    else
    {
      v19 = sub_245387EE4();
      swift_allocError();
      v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
      *v21 = v4;
      v22 = *v0;
      v23 = v0[1];
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
      v24 = swift_initStackObject();
      *(_OWORD *)(v24 + 16) = xmmword_245389A60;
      v30[0] = v23;
      v25 = sub_2453880F4();
      v27 = v26;
      *(_QWORD *)(v24 + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
      *(_QWORD *)(v24 + 64) = sub_245357AD0();
      v28 = swift_allocObject();
      *(_QWORD *)(v24 + 32) = v28;
      *(_QWORD *)(v28 + 16) = v25;
      *(_QWORD *)(v28 + 24) = v27;
      *(_QWORD *)(v28 + 32) = v23;
      *(_BYTE *)(v28 + 40) = 0;
      v30[0] = v22;
      swift_bridgeObjectRetain();
      sub_245356878(v24);
      sub_245387ECC();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    }
  }
  return result;
}

uint64_t sub_2453555C0()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[4];
  _QWORD v31[15];

  v31[13] = *MEMORY[0x24BDAC8D0];
  v1 = v0[1];
  v2 = (void *)v0[2];
  if (v1 >= (uint64_t)objc_msgSend(v2, sel_count))
  {
    v9 = sub_245387EE4();
    swift_allocError();
    v11 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v11 = MEMORY[0x24BEE4568];
    v12 = *v0;
    v13 = v0[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_245389A60;
    v15 = sub_2453880F4();
    v17 = v16;
    *(_QWORD *)(inited + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
    *(_QWORD *)(inited + 64) = sub_245357AD0();
    v18 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v18 + 24) = v17;
    *(_QWORD *)(v18 + 32) = v13;
    *(_BYTE *)(v18 + 40) = 0;
    v31[0] = v12;
    swift_bridgeObjectRetain();
    sub_245356878(inited);
    sub_245387ECC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x24BEE26E0], v9);
    return swift_willThrow();
  }
  else
  {
    v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, v1);
    sub_245387E24();
    swift_unknownObjectRelease();
    sub_245263FBC((uint64_t)v31, (uint64_t)v30);
    v4 = MEMORY[0x24BEE4568];
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      v5 = v0[1];
      v6 = __OFADD__(v5, 1);
      v7 = v5 + 1;
      if (v6)
        __break(1u);
      result = v29;
      v0[1] = v7;
    }
    else
    {
      v19 = sub_245387EE4();
      swift_allocError();
      v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
      *v21 = v4;
      v22 = *v0;
      v23 = v0[1];
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
      v24 = swift_initStackObject();
      *(_OWORD *)(v24 + 16) = xmmword_245389A60;
      v30[0] = v23;
      v25 = sub_2453880F4();
      v27 = v26;
      *(_QWORD *)(v24 + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
      *(_QWORD *)(v24 + 64) = sub_245357AD0();
      v28 = swift_allocObject();
      *(_QWORD *)(v24 + 32) = v28;
      *(_QWORD *)(v28 + 16) = v25;
      *(_QWORD *)(v28 + 24) = v27;
      *(_QWORD *)(v28 + 32) = v23;
      *(_BYTE *)(v28 + 40) = 0;
      v30[0] = v22;
      swift_bridgeObjectRetain();
      sub_245356878(v24);
      sub_245387ECC();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    }
  }
  return result;
}

uint64_t sub_24535592C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(void **)(v0 + 16);
  if (v1 >= (uint64_t)objc_msgSend(v2, sel_count))
  {
    v5 = sub_245387EE4();
    swift_allocError();
    v7 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v7 = MEMORY[0x24BEE4AD8] + 8;
    v8 = *(_QWORD *)(v0 + 8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_245389A60;
    v10 = sub_2453880F4();
    v12 = v11;
    *(_QWORD *)(inited + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
    *(_QWORD *)(inited + 64) = sub_245357AD0();
    v13 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v13;
    *(_QWORD *)(v13 + 16) = v10;
    *(_QWORD *)(v13 + 24) = v12;
    *(_QWORD *)(v13 + 32) = v8;
    *(_BYTE *)(v13 + 40) = 0;
    swift_bridgeObjectRetain();
    sub_245356878(inited);
    sub_245387ECC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v7, *MEMORY[0x24BEE26E0], v5);
    return swift_willThrow();
  }
  else
  {
    v3 = objc_msgSend(v2, sel_objectAtIndexedSubscript_, v1);
    sub_245387E24();
    result = swift_unknownObjectRelease();
    *(_QWORD *)(v0 + 8) = v1 + 1;
  }
  return result;
}

uint64_t sub_245355B24(unint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[4];
  _QWORD v32[15];

  v32[13] = *MEMORY[0x24BDAC8D0];
  v2 = sub_2452E06B0(0, a1);
  v3 = v1[1];
  v4 = (void *)v1[2];
  if (v3 >= (uint64_t)objc_msgSend(v4, sel_count))
  {
    v10 = sub_245387EE4();
    swift_allocError();
    v12 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v12 = v2;
    v13 = *v1;
    v14 = v1[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_245389A60;
    v16 = sub_2453880F4();
    v18 = v17;
    *(_QWORD *)(inited + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
    *(_QWORD *)(inited + 64) = sub_245357AD0();
    v19 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v19;
    *(_QWORD *)(v19 + 16) = v16;
    *(_QWORD *)(v19 + 24) = v18;
    *(_QWORD *)(v19 + 32) = v14;
    *(_BYTE *)(v19 + 40) = 0;
    v32[0] = v13;
    swift_bridgeObjectRetain();
    sub_245356878(inited);
    sub_245387ECC();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v12, *MEMORY[0x24BEE26E0], v10);
    return swift_willThrow();
  }
  else
  {
    v5 = objc_msgSend(v4, sel_objectAtIndexedSubscript_, v3);
    sub_245387E24();
    swift_unknownObjectRelease();
    sub_245263FBC((uint64_t)v32, (uint64_t)v31);
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
      v6 = v1[1];
      v7 = __OFADD__(v6, 1);
      v8 = v6 + 1;
      if (v7)
        __break(1u);
      result = v30;
      v1[1] = v8;
    }
    else
    {
      v20 = sub_245387EE4();
      swift_allocError();
      v22 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
      *v22 = v2;
      v23 = *v1;
      v24 = v1[1];
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
      v25 = swift_initStackObject();
      *(_OWORD *)(v25 + 16) = xmmword_245389A60;
      v31[0] = v24;
      v26 = sub_2453880F4();
      v28 = v27;
      *(_QWORD *)(v25 + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
      *(_QWORD *)(v25 + 64) = sub_245357AD0();
      v29 = swift_allocObject();
      *(_QWORD *)(v25 + 32) = v29;
      *(_QWORD *)(v29 + 16) = v26;
      *(_QWORD *)(v29 + 24) = v28;
      *(_QWORD *)(v29 + 32) = v24;
      *(_BYTE *)(v29 + 40) = 0;
      v31[0] = v23;
      swift_bridgeObjectRetain();
      sub_245356878(v25);
      sub_245387ECC();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    }
  }
  return result;
}

BOOL sub_245355E90()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  id v11;

  v1 = sub_245387EE4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)sub_245355B24(&qword_25440C860);
  if (!v0)
  {

    return v0 == 0;
  }
  v11 = v0;
  v6 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440C868);
  if (!swift_dynamicCast())
  {
LABEL_7:

    return v0 == 0;
  }
  if ((*(unsigned int (**)(char *, uint64_t))(v2 + 88))(v4, v1) != *MEMORY[0x24BEE26D0])
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    goto LABEL_7;
  }

  (*(void (**)(char *, uint64_t))(v2 + 96))(v4, v1);
  v7 = &v4[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25440C870) + 48)];
  v8 = sub_245387ED8();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);

  return v0 == 0;
}

uint64_t sub_245355FF4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  __int128 v19;
  _QWORD v20[5];
  char v21;
  _OWORD v22[2];
  uint64_t v23;

  v3 = v1;
  v23 = *MEMORY[0x24BDAC8D0];
  result = sub_24535592C();
  if (!v2)
  {
    if (a1 == MEMORY[0x24BDCDDE8]
      && (sub_245263FBC((uint64_t)v22, (uint64_t)&v19),
          sub_2452E06B0(0, (unint64_t *)&qword_25440C990),
          (swift_dynamicCast() & 1) != 0))
    {

      sub_2452CC368(v22, &v19);
      return swift_dynamicCast();
    }
    else
    {
      v6 = *v1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_245389A60;
      *(_QWORD *)&v19 = v1[1];
      v8 = v19;
      v9 = sub_2453880F4();
      v11 = v10;
      *(_QWORD *)(inited + 56) = &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
      *(_QWORD *)(inited + 64) = sub_245357AD0();
      v12 = swift_allocObject();
      *(_QWORD *)(inited + 32) = v12;
      *(_QWORD *)(v12 + 16) = v9;
      *(_QWORD *)(v12 + 24) = v11;
      *(_QWORD *)(v12 + 32) = v8;
      *(_BYTE *)(v12 + 40) = 0;
      *(_QWORD *)&v19 = v6;
      swift_bridgeObjectRetain();
      sub_245356878(inited);
      v13 = v19;
      sub_245263FBC((uint64_t)v22, (uint64_t)v20);
      v14 = v3[3];
      v15 = *((_BYTE *)v3 + 32);
      v16 = sub_24531B410(MEMORY[0x24BEE4AF8]);
      *(_QWORD *)&v19 = v13;
      *((_QWORD *)&v19 + 1) = v16;
      v20[4] = v14;
      v21 = v15;
      sub_245263FF8();
      v18 = swift_allocObject();
      sub_245264070((uint64_t)&v19, v18 + 16);
      sub_245387CB0();
      sub_2452640AC((uint64_t)&v19);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    }
  }
  return result;
}

uint64_t sub_245356254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = sub_245355B24(&qword_25440C858);
  if (!v3)
  {
    v8 = type metadata accessor for PropertyListTypeDecoder.KeyedDecoder(0, a2, a3, v7);
    swift_bridgeObjectRetain();
    MEMORY[0x2495330B0](&unk_24538F0A8, v8);
    return sub_245388064();
  }
  return result;
}

id sub_24535630C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_count);
}

BOOL sub_245356330()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  return v1 >= (uint64_t)objc_msgSend(*(id *)(v0 + 16), sel_count);
}

uint64_t sub_245356360()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

BOOL sub_245356368()
{
  return sub_245355E90();
}

uint64_t sub_245356380()
{
  return sub_24535294C() & 1;
}

uint64_t sub_245356398()
{
  return sub_245352CBC();
}

uint64_t sub_2453563AC()
{
  return sub_245353024();
}

uint64_t sub_2453563C0()
{
  return sub_245353390();
}

uint64_t sub_2453563D4()
{
  return sub_2453536FC();
}

uint64_t sub_2453563E8()
{
  return sub_245353A60();
}

uint64_t sub_2453563FC()
{
  return sub_245353DCC();
}

uint64_t sub_245356410()
{
  return sub_245354138();
}

uint64_t sub_245356424()
{
  return sub_2453544A4();
}

uint64_t sub_245356438()
{
  return sub_245388160();
}

uint64_t sub_24535644C()
{
  return sub_245354810();
}

uint64_t sub_245356460()
{
  return sub_245354B7C();
}

uint64_t sub_245356474()
{
  return sub_245354EE8();
}

uint64_t sub_245356488()
{
  return sub_245355254();
}

uint64_t sub_24535649C()
{
  return sub_2453555C0();
}

uint64_t sub_2453564B0()
{
  return sub_24538816C();
}

uint64_t sub_2453564C4(uint64_t a1)
{
  return sub_245355FF4(a1);
}

uint64_t sub_2453564D8()
{
  return sub_24538810C();
}

uint64_t sub_2453564EC()
{
  return sub_245388100();
}

uint64_t sub_245356500()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_245388118();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_245356520(uint64_t a1, uint64_t a2)
{
  return sub_2453566B0(a1, a2, MEMORY[0x24BEE3690]);
}

uint64_t sub_24535653C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_245388124();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_24535655C(uint64_t a1, uint64_t a2)
{
  return sub_245356628(a1, a2, MEMORY[0x24BEE36B0]);
}

uint64_t sub_245356578(uint64_t a1, uint64_t a2)
{
  return sub_24535666C(a1, a2, MEMORY[0x24BEE36B8]);
}

uint64_t sub_245356594(uint64_t a1, uint64_t a2)
{
  return sub_2453566B0(a1, a2, MEMORY[0x24BEE36C0]);
}

uint64_t sub_2453565B0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_245388148();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_2453565D0(uint64_t a1, uint64_t a2)
{
  return sub_24535671C(a1, a2, MEMORY[0x24BEE36D8]);
}

uint64_t sub_2453565EC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_245388130();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_24535660C(uint64_t a1, uint64_t a2)
{
  return sub_245356628(a1, a2, MEMORY[0x24BEE36D0]);
}

uint64_t sub_245356628(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FF;
}

uint64_t sub_245356650(uint64_t a1, uint64_t a2)
{
  return sub_24535666C(a1, a2, MEMORY[0x24BEE36E0]);
}

uint64_t sub_24535666C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FFFF;
}

uint64_t sub_245356694(uint64_t a1, uint64_t a2)
{
  return sub_2453566B0(a1, a2, MEMORY[0x24BEE36E8]);
}

uint64_t sub_2453566B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v3;

  v3 = a3();
  return v3 | ((HIDWORD(v3) & 1) << 32);
}

uint64_t sub_2453566E0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_245388154();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_245356700(uint64_t a1, uint64_t a2)
{
  return sub_24535671C(a1, a2, MEMORY[0x24BEE36F8]);
}

uint64_t sub_24535671C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  result = a3();
  if (v3)
    return v5;
  return result;
}

uint64_t sub_245356740()
{
  return sub_24538813C();
}

uint64_t sub_245356768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_245356254(a1, a2, a3);
}

uint64_t sub_24535677C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  result = sub_245355B24(&qword_25440C7B8);
  if (!v4)
  {
    v9 = result;
    v10 = *v3;
    v11 = v3[3];
    v12 = *((_BYTE *)v3 + 32);
    a3[3] = a1;
    a3[4] = a2;
    v13 = swift_allocObject();
    *a3 = v13;
    *(_QWORD *)(v13 + 16) = v10;
    *(_QWORD *)(v13 + 24) = 0;
    *(_QWORD *)(v13 + 32) = v9;
    *(_QWORD *)(v13 + 40) = v11;
    *(_BYTE *)(v13 + 48) = v12;
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_245356818()
{
  sub_245387F80();
  __break(1u);
}

uint64_t sub_245356878(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_245324710(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9A8);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_245387FBC();
  __break(1u);
  return result;
}

uint64_t sub_2453569EC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  char v7;
  _BYTE v8[32];

  sub_245263FBC(v0 + 16, (uint64_t)v8);
  v1 = MEMORY[0x24BEE1328];
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = v7 & 1;
  }
  else
  {
    v3 = sub_245387EE4();
    swift_allocError();
    v5 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v5 = v1;
    swift_bridgeObjectRetain();
    sub_245387ECC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v5, *MEMORY[0x24BEE26D0], v3);
    swift_willThrow();
  }
  return v2 & 1;
}

uint64_t sub_245356AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v7[32];

  sub_245263FBC(v0 + 16, (uint64_t)v7);
  v1 = MEMORY[0x24BEE0D00];
  if ((swift_dynamicCast() & 1) != 0)
    return v6;
  v3 = sub_245387EE4();
  swift_allocError();
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
  *v5 = v1;
  swift_bridgeObjectRetain();
  sub_245387ECC();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v5, *MEMORY[0x24BEE26D0], v3);
  return swift_willThrow();
}

uint64_t sub_245356BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _BYTE v6[32];

  sub_245263FBC(v0 + 16, (uint64_t)v6);
  v1 = MEMORY[0x24BEE13C8];
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
    v3 = sub_245387EE4();
    swift_allocError();
    v5 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v5 = v1;
    swift_bridgeObjectRetain();
    sub_245387ECC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v5, *MEMORY[0x24BEE26D0], v3);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_245356CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _BYTE v6[32];

  sub_245263FBC(v0 + 16, (uint64_t)v6);
  v1 = MEMORY[0x24BEE14E8];
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
    v3 = sub_245387EE4();
    swift_allocError();
    v5 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v5 = v1;
    swift_bridgeObjectRetain();
    sub_245387ECC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v5, *MEMORY[0x24BEE26D0], v3);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_245356DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v7[32];

  sub_245263FBC(v0 + 16, (uint64_t)v7);
  v1 = MEMORY[0x24BEE1768];
  if ((swift_dynamicCast() & 1) != 0)
    return v6;
  v3 = sub_245387EE4();
  swift_allocError();
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
  *v5 = v1;
  swift_bridgeObjectRetain();
  sub_245387ECC();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v5, *MEMORY[0x24BEE26D0], v3);
  return swift_willThrow();
}

uint64_t sub_245356EB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  unsigned __int8 v6;
  _BYTE v7[32];

  sub_245263FBC(v0 + 16, (uint64_t)v7);
  v1 = MEMORY[0x24BEE3E50];
  if ((swift_dynamicCast() & 1) != 0)
    return v6;
  v3 = sub_245387EE4();
  swift_allocError();
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
  *v5 = v1;
  swift_bridgeObjectRetain();
  sub_245387ECC();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v5, *MEMORY[0x24BEE26D0], v3);
  return swift_willThrow();
}

uint64_t sub_245356FAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  unsigned __int16 v6;
  _BYTE v7[32];

  sub_245263FBC(v0 + 16, (uint64_t)v7);
  v1 = MEMORY[0x24BEE3F30];
  if ((swift_dynamicCast() & 1) != 0)
    return v6;
  v3 = sub_245387EE4();
  swift_allocError();
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
  *v5 = v1;
  swift_bridgeObjectRetain();
  sub_245387ECC();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v5, *MEMORY[0x24BEE26D0], v3);
  return swift_willThrow();
}

uint64_t sub_2453570A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  unsigned int v6;
  _BYTE v7[32];

  sub_245263FBC(v0 + 16, (uint64_t)v7);
  v1 = MEMORY[0x24BEE3F88];
  if ((swift_dynamicCast() & 1) != 0)
    return v6;
  v3 = sub_245387EE4();
  swift_allocError();
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
  *v5 = v1;
  swift_bridgeObjectRetain();
  sub_245387ECC();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v5, *MEMORY[0x24BEE26D0], v3);
  return swift_willThrow();
}

uint64_t sub_245357194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v7[32];

  sub_245263FBC(v0 + 16, (uint64_t)v7);
  v1 = MEMORY[0x24BEE4008];
  if ((swift_dynamicCast() & 1) != 0)
    return v6;
  v3 = sub_245387EE4();
  swift_allocError();
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
  *v5 = v1;
  swift_bridgeObjectRetain();
  sub_245387ECC();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v5, *MEMORY[0x24BEE26D0], v3);
  return swift_willThrow();
}

uint64_t sub_245357288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v7[32];

  sub_245263FBC(v0 + 16, (uint64_t)v7);
  v1 = MEMORY[0x24BEE1E88];
  if ((swift_dynamicCast() & 1) != 0)
    return v6;
  v3 = sub_245387EE4();
  swift_allocError();
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
  *v5 = v1;
  swift_bridgeObjectRetain();
  sub_245387ECC();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v5, *MEMORY[0x24BEE26D0], v3);
  return swift_willThrow();
}

uint64_t sub_24535737C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  unsigned __int8 v6;
  _BYTE v7[32];

  sub_245263FBC(v0 + 16, (uint64_t)v7);
  v1 = MEMORY[0x24BEE4260];
  if ((swift_dynamicCast() & 1) != 0)
    return v6;
  v3 = sub_245387EE4();
  swift_allocError();
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
  *v5 = v1;
  swift_bridgeObjectRetain();
  sub_245387ECC();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v5, *MEMORY[0x24BEE26D0], v3);
  return swift_willThrow();
}

uint64_t sub_245357470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  unsigned __int16 v6;
  _BYTE v7[32];

  sub_245263FBC(v0 + 16, (uint64_t)v7);
  v1 = MEMORY[0x24BEE4478];
  if ((swift_dynamicCast() & 1) != 0)
    return v6;
  v3 = sub_245387EE4();
  swift_allocError();
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
  *v5 = v1;
  swift_bridgeObjectRetain();
  sub_245387ECC();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v5, *MEMORY[0x24BEE26D0], v3);
  return swift_willThrow();
}

uint64_t sub_245357564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  unsigned int v6;
  _BYTE v7[32];

  sub_245263FBC(v0 + 16, (uint64_t)v7);
  v1 = MEMORY[0x24BEE44F0];
  if ((swift_dynamicCast() & 1) != 0)
    return v6;
  v3 = sub_245387EE4();
  swift_allocError();
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
  *v5 = v1;
  swift_bridgeObjectRetain();
  sub_245387ECC();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v5, *MEMORY[0x24BEE26D0], v3);
  return swift_willThrow();
}

uint64_t sub_245357658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v7[32];

  sub_245263FBC(v0 + 16, (uint64_t)v7);
  v1 = MEMORY[0x24BEE4568];
  if ((swift_dynamicCast() & 1) != 0)
    return v6;
  v3 = sub_245387EE4();
  swift_allocError();
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
  *v5 = v1;
  swift_bridgeObjectRetain();
  sub_245387ECC();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v5, *MEMORY[0x24BEE26D0], v3);
  return swift_willThrow();
}

uint64_t sub_24535774C()
{
  return swift_allocateGenericValueMetadata();
}

void sub_245357754(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

uint64_t sub_24535777C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

uint64_t sub_2453577BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 24);
  v6 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  v7 = v5;

  return a1;
}

uint64_t sub_245357824(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  return a1;
}

uint64_t sub_245357878(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_2453578C0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void destroy for PropertyListTypeDecoder.UnkeyedDecoder(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for PropertyListTypeDecoder.UnkeyedDecoder(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v5 = *(void **)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  v6 = v5;
  return a1;
}

uint64_t assignWithCopy for PropertyListTypeDecoder.UnkeyedDecoder(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v7;
  return a1;
}

uint64_t assignWithTake for PropertyListTypeDecoder.UnkeyedDecoder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for PropertyListTypeDecoder.UnkeyedDecoder(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PropertyListTypeDecoder.UnkeyedDecoder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PropertyListTypeDecoder.UnkeyedDecoder()
{
  return &type metadata for PropertyListTypeDecoder.UnkeyedDecoder;
}

uint64_t sub_245357AC8(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

unint64_t sub_245357AD0()
{
  unint64_t result;

  result = qword_25440C7A8;
  if (!qword_25440C7A8)
  {
    result = MEMORY[0x2495330B0](&unk_24538F3F0, &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey);
    atomic_store(result, (unint64_t *)&qword_25440C7A8);
  }
  return result;
}

uint64_t sub_245357B14()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_245357B38(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C9B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_245357B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2453510D8(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_245357BB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25440C850;
  if (!qword_25440C850)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25440C848);
    result = MEMORY[0x2495330B0](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_25440C850);
  }
  return result;
}

uint64_t initializeWithCopy for PropertyListTypeDecoder.UnkeyedDecoder.__AKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PropertyListTypeDecoder.UnkeyedDecoder.__AKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PropertyListTypeDecoder.UnkeyedDecoder.__AKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for PropertyListTypeDecoder.UnkeyedDecoder.__AKey(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PropertyListTypeDecoder.UnkeyedDecoder.__AKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PropertyListTypeDecoder.UnkeyedDecoder.__AKey()
{
  return &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey;
}

unint64_t sub_245357D90()
{
  unint64_t result;

  result = qword_25440C7A0;
  if (!qword_25440C7A0)
  {
    result = MEMORY[0x2495330B0](&unk_24538F3A0, &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey);
    atomic_store(result, (unint64_t *)&qword_25440C7A0);
  }
  return result;
}

unint64_t sub_245357DD8()
{
  unint64_t result;

  result = qword_25440C798;
  if (!qword_25440C798)
  {
    result = MEMORY[0x2495330B0](&unk_24538F3C8, &type metadata for PropertyListTypeDecoder.UnkeyedDecoder.__AKey);
    atomic_store(result, (unint64_t *)&qword_25440C798);
  }
  return result;
}

uint64_t dispatch thunk of ReplicationPolicy.allowSync<A>(replicator:recordID:pairingRelationship:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

void static ReplicationSchedule.immediate.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 0;
}

void ReplicationSchedule.retry.getter(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  int v3;
  BOOL v4;

  v2 = *v1;
  v3 = *((unsigned __int8 *)v1 + 8);
  if (*((_BYTE *)v1 + 8))
  {
    if (v3 != 1)
      goto LABEL_7;
    v4 = __OFADD__(v2++, 1);
    if (!v4)
      goto LABEL_7;
    __break(1u);
  }
  v4 = __OFADD__(v2++, 1);
  if (!v4)
  {
LABEL_7:
    *(_QWORD *)a1 = v2;
    *(_BYTE *)(a1 + 8) = v3;
    return;
  }
  __break(1u);
}

void static ReplicationSchedule.opportunistic.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t static ReplicationSchedule.< infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  BOOL v5;
  unsigned int v6;
  _BOOL4 v7;

  v2 = *a1;
  v3 = *a2;
  v4 = *((unsigned __int8 *)a2 + 8);
  if (*((_BYTE *)a2 + 8))
    v5 = 0;
  else
    v5 = v3 < v2;
  v6 = v5;
  v7 = v3 < v2;
  if (v4 != 1)
    v7 = 0;
  if (!*((_BYTE *)a2 + 8))
    v7 = 1;
  if (*((_BYTE *)a1 + 8) != 1)
    v7 = v4 < 2;
  if (*((_BYTE *)a1 + 8))
    return v7;
  else
    return v6;
}

uint64_t ReplicationSchedule.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  if (!*(_BYTE *)(v0 + 8))
  {
    v1 = 0x74616964656D6D69;
    goto LABEL_5;
  }
  if (*(_BYTE *)(v0 + 8) == 1)
  {
    sub_245387EA8();
    swift_bridgeObjectRelease();
    v1 = 0x6E7574726F70706FLL;
LABEL_5:
    v3 = v1;
    sub_2453880F4();
    sub_245387B90();
    swift_bridgeObjectRelease();
    sub_245387B90();
    return v3;
  }
  return 0x646579616C6564;
}

BOOL static ReplicationSchedule.== infix(_:_:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  int v3;

  v2 = *a2;
  v3 = *((unsigned __int8 *)a2 + 8);
  if (!*(_BYTE *)(a1 + 8))
  {
    if (*((_BYTE *)a2 + 8))
      return 0;
    return *(_QWORD *)a1 == v2;
  }
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    if (v3 != 1)
      return 0;
    return *(_QWORD *)a1 == v2;
  }
  return v3 == 2 && v2 == 0;
}

unint64_t sub_245358014()
{
  unint64_t result;

  result = qword_2574530A8;
  if (!qword_2574530A8)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for ReplicationSchedule, &type metadata for ReplicationSchedule);
    atomic_store(result, (unint64_t *)&qword_2574530A8);
  }
  return result;
}

uint64_t sub_245358058(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  BOOL v5;
  unsigned int v6;
  _BOOL4 v7;

  v2 = *a1;
  v3 = *a2;
  v4 = *((unsigned __int8 *)a2 + 8);
  if (*((_BYTE *)a2 + 8))
    v5 = 0;
  else
    v5 = v3 < v2;
  v6 = v5;
  v7 = v3 < v2;
  if (v4 != 1)
    v7 = 0;
  if (!*((_BYTE *)a2 + 8))
    v7 = 1;
  if (*((_BYTE *)a1 + 8) != 1)
    v7 = v4 < 2;
  if (*((_BYTE *)a1 + 8))
    return v7;
  else
    return v6;
}

BOOL sub_2453580AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  BOOL v5;
  int v6;
  _BOOL4 v7;
  _BOOL4 v8;

  v2 = *a1;
  v3 = *((unsigned __int8 *)a1 + 8);
  v4 = *a2;
  if (*((_BYTE *)a1 + 8))
    v5 = 0;
  else
    v5 = v2 < v4;
  v6 = v5;
  v7 = v2 < v4;
  if (v3 != 1)
    v7 = 0;
  if (!*((_BYTE *)a1 + 8))
    v7 = 1;
  v8 = v3 < 2;
  if (*((_BYTE *)a2 + 8) != 1)
    v7 = v8;
  if (!*((_BYTE *)a2 + 8))
    v7 = v6;
  return !v7;
}

BOOL sub_245358104(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  BOOL v5;
  int v6;
  _BOOL4 v7;

  v2 = *a1;
  v3 = *a2;
  v4 = *((unsigned __int8 *)a2 + 8);
  if (*((_BYTE *)a2 + 8))
    v5 = 0;
  else
    v5 = v3 < v2;
  v6 = v5;
  v7 = v3 < v2;
  if (v4 != 1)
    v7 = 0;
  if (!*((_BYTE *)a2 + 8))
    v7 = 1;
  if (*((_BYTE *)a1 + 8) != 1)
    v7 = v4 < 2;
  if (!*((_BYTE *)a1 + 8))
    v7 = v6;
  return !v7;
}

uint64_t sub_24535815C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  BOOL v5;
  unsigned int v6;
  _BOOL4 v7;
  _BOOL4 v8;

  v2 = *a1;
  v3 = *((unsigned __int8 *)a1 + 8);
  v4 = *a2;
  if (*((_BYTE *)a1 + 8))
    v5 = 0;
  else
    v5 = v2 < v4;
  v6 = v5;
  v7 = v2 < v4;
  if (v3 != 1)
    v7 = 0;
  if (!*((_BYTE *)a1 + 8))
    v7 = 1;
  v8 = v3 < 2;
  if (*((_BYTE *)a2 + 8) != 1)
    v7 = v8;
  if (*((_BYTE *)a2 + 8))
    return v7;
  else
    return v6;
}

uint64_t sub_2453581B4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  _BOOL4 v8;
  _BOOL4 v10;

  v2 = *a1;
  v3 = *a2;
  v4 = *((unsigned __int8 *)a2 + 8);
  if (*((_BYTE *)a2 + 8))
    v5 = 0;
  else
    v5 = v2 == v3;
  v6 = v5;
  v8 = v4 == 1 && v2 == v3;
  v10 = v4 == 2 && v3 == 0;
  if (*((_BYTE *)a1 + 8) != 1)
    v8 = v10;
  if (*((_BYTE *)a1 + 8))
    return v8;
  else
    return v6;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ReplicationSchedule(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ReplicationSchedule(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_24535829C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_2453582B4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ReplicationSchedule()
{
  return &type metadata for ReplicationSchedule;
}

uint64_t dispatch thunk of FirstLockStateProviding.hasUnlockedSinceBootPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FirstLockStateProviding.hasUnlockedSinceBoot.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t PrioritizedRecordValue.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2453582F8(v1, a1);
}

uint64_t sub_2453582F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Record.Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t PrioritizedRecordValue.priority.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PrioritizedRecordValue();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for PrioritizedRecordValue()
{
  uint64_t result;

  result = qword_2574530B8;
  if (!qword_2574530B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PrioritizedRecordValue.init(value:priority:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v4;
  uint64_t result;

  v4 = *a2;
  sub_2453583E0(a1, a3);
  result = type metadata accessor for PrioritizedRecordValue();
  *(_BYTE *)(a3 + *(int *)(result + 20)) = v4;
  return result;
}

uint64_t sub_2453583E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Record.Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL static RecordValidationResult.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t RecordValidationResult.hash(into:)()
{
  return sub_245388448();
}

uint64_t RecordValidationResult.hashValue.getter()
{
  sub_24538843C();
  sub_245388448();
  return sub_245388478();
}

unint64_t sub_2453584A8()
{
  unint64_t result;

  result = qword_2574530B0;
  if (!qword_2574530B0)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for RecordValidationResult, &type metadata for RecordValidationResult);
    atomic_store(result, (unint64_t *)&qword_2574530B0);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PrioritizedRecordValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_245261C44(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    v9 = type metadata accessor for Record.Value(0);
    v10 = *(int *)(v9 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2453875E4();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *(uint64_t *)((char *)a1 + *(int *)(v9 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 24));
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for PrioritizedRecordValue(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  sub_24525CB80(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  v2 = a1 + *(int *)(type metadata accessor for Record.Value(0) + 20);
  v3 = sub_2453875E4();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

uint64_t *initializeWithCopy for PrioritizedRecordValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a2;
  v7 = a2[1];
  sub_245261C44(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = type metadata accessor for Record.Value(0);
  v9 = *(int *)(v8 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_2453875E4();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(uint64_t *)((char *)a1 + *(int *)(v8 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 24));
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t *assignWithCopy for PrioritizedRecordValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;

  v6 = *a2;
  v7 = a2[1];
  sub_245261C44(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_24525CB80(v8, v9);
  v10 = type metadata accessor for Record.Value(0);
  v11 = *(int *)(v10 + 20);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_2453875E4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  *(uint64_t *)((char *)a1 + *(int *)(v10 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 24));
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

_OWORD *initializeWithTake for PrioritizedRecordValue(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = type metadata accessor for Record.Value(0);
  v7 = *(int *)(v6 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2453875E4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_QWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 24));
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t *assignWithTake for PrioritizedRecordValue(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_24525CB80(v6, v7);
  v8 = type metadata accessor for Record.Value(0);
  v9 = *(int *)(v8 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_2453875E4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(uint64_t *)((char *)a1 + *(int *)(v8 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v8 + 24));
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for PrioritizedRecordValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_245358B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for Record.Value(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 3)
    return v9 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PrioritizedRecordValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_245358BAC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Record.Value(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  return result;
}

uint64_t sub_245358C24()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Record.Value(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RecordValidationResult(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_245358CE0 + 4 * byte_24538F545[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_245358D14 + 4 * byte_24538F540[v4]))();
}

uint64_t sub_245358D14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_245358D1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x245358D24);
  return result;
}

uint64_t sub_245358D30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x245358D38);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_245358D3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_245358D44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RecordValidationResult()
{
  return &type metadata for RecordValidationResult;
}

uint64_t dispatch thunk of ReplicatorDataSource.publicationMethod.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ReplicatorDataSource.protocolVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ReplicatorDataSource.replicator<A>(_:valueFor:for:remoteZoneProtocolVersion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 24))();
}

uint64_t dispatch thunk of ReplicatorDataSource.replicator<A>(_:didFetch:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 32))();
}

uint64_t dispatch thunk of ReplicatorDataSource.replicator<A>(_:didDelete:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of ReplicatorDataSource.replicator<A>(_:validateRecordID:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 48))();
}

uint64_t dispatch thunk of ReplicatorDataSource.replicator<A>(_:sizeFor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 56))();
}

uint64_t sub_245358D98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452478);
    v2 = sub_245387FB0();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_245263FBC(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_2452CC368(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_2452CC368(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_2452CC368(v36, v37);
    sub_2452CC368(v37, &v33);
    result = sub_245387E60();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_2452CC368(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_2452ECE70();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_24535915C(uint64_t a1)
{
  unint64_t v2;
  char v3;
  NSObject *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  const char *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  NSObject *oslog;
  NSObject *v26;
  id v27;
  unint64_t v28;
  uint64_t v29[5];
  __int128 v30;
  __int128 v31;

  if (a1)
  {
    v26 = sub_245387B18();
    sub_245387E78();
    if (*(_QWORD *)(a1 + 16) && (v2 = sub_2452C20BC((uint64_t)v29), (v3 & 1) != 0))
    {
      sub_245263FBC(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)&v30);
    }
    else
    {
      v30 = 0u;
      v31 = 0u;
    }
    sub_2452CC334((uint64_t)v29);
    if (*((_QWORD *)&v31 + 1))
    {
      sub_245359FE0();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v4 = v26;
        if (-[NSObject BOOLValue](v26, sel_BOOLValue))
        {
          if (qword_257451C90 != -1)
            swift_once();
          v5 = sub_245387818();
          __swift_project_value_buffer(v5, (uint64_t)qword_257463068);
          v6 = sub_2453877F4();
          v7 = sub_245387D04();
          if (!os_log_type_enabled(v6, v7))
            goto LABEL_40;
          v8 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v8 = 0;
          v9 = "Captured bug report successfully";
        }
        else
        {
          v27 = (id)sub_245387B18();
          v28 = v16;
          sub_245387E78();
          if (*(_QWORD *)(a1 + 16) && (v17 = sub_2452C20BC((uint64_t)v29), (v18 & 1) != 0))
          {
            sub_245263FBC(*(_QWORD *)(a1 + 56) + 32 * v17, (uint64_t)&v30);
          }
          else
          {
            v30 = 0u;
            v31 = 0u;
          }
          sub_2452CC334((uint64_t)v29);
          if (*((_QWORD *)&v31 + 1))
          {
            if ((swift_dynamicCast() & 1) != 0)
            {
              if (qword_257451C90 != -1)
                swift_once();
              v19 = sub_245387818();
              __swift_project_value_buffer(v19, (uint64_t)qword_257463068);
              swift_bridgeObjectRetain();
              v6 = sub_2453877F4();
              v20 = sub_245387D04();
              if (!os_log_type_enabled(v6, v20))
              {

                swift_bridgeObjectRelease_n();
                goto LABEL_41;
              }
              v21 = (uint8_t *)swift_slowAlloc();
              v22 = swift_slowAlloc();
              v29[0] = v22;
              *(_DWORD *)v21 = 136315138;
              swift_bridgeObjectRetain();
              *(_QWORD *)&v30 = sub_2453816D8((uint64_t)v27, v28, v29);
              sub_245387E0C();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_245256000, v6, v20, "Failed to capture bug for reason: %s", v21, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x24953317C](v22, -1, -1);
              v23 = v21;
              goto LABEL_39;
            }
          }
          else
          {
            sub_245357B38((uint64_t)&v30);
          }
          if (qword_257451C90 != -1)
            swift_once();
          v24 = sub_245387818();
          __swift_project_value_buffer(v24, (uint64_t)qword_257463068);
          v6 = sub_2453877F4();
          v7 = sub_245387D04();
          if (!os_log_type_enabled(v6, v7))
            goto LABEL_40;
          v8 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v8 = 0;
          v9 = "Failed to capture bug for unknown reason";
        }
        _os_log_impl(&dword_245256000, v6, v7, v9, v8, 2u);
        v23 = v8;
LABEL_39:
        MEMORY[0x24953317C](v23, -1, -1);
LABEL_40:

LABEL_41:
        return;
      }
    }
    else
    {
      sub_245357B38((uint64_t)&v30);
    }
    if (qword_257451C90 != -1)
      swift_once();
    v13 = sub_245387818();
    __swift_project_value_buffer(v13, (uint64_t)qword_257463068);
    v4 = sub_2453877F4();
    v14 = sub_245387D1C();
    if (os_log_type_enabled(v4, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_245256000, v4, v14, "Received malformed response", v15, 2u);
      MEMORY[0x24953317C](v15, -1, -1);
    }
    goto LABEL_41;
  }
  if (qword_257451C90 != -1)
    swift_once();
  v10 = sub_245387818();
  __swift_project_value_buffer(v10, (uint64_t)qword_257463068);
  oslog = sub_2453877F4();
  v11 = sub_245387D1C();
  if (os_log_type_enabled(oslog, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_245256000, oslog, v11, "Failed to receive response", v12, 2u);
    MEMORY[0x24953317C](v12, -1, -1);
  }

}

uint64_t sub_2453596F0(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
    v3 = sub_245387A64();
  else
    v3 = 0;
  swift_retain();
  v2(v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_245359768()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BugCapture()
{
  return objc_opt_self();
}

uint64_t sub_245359798()
{
  id v0;
  id v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v1 = objc_msgSend(v0, sel_environment);

  v2 = sub_245387A64();
  if (*(_QWORD *)(v2 + 16) && (sub_2452C1D98(0xD000000000000010, 0x80000002453950F0), (v3 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    v4 = 1;
  }
  else
  {
    v4 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

void sub_24535987C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t inited;
  uint64_t v27;
  double v28;
  double v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t aBlock[6];

  v60 = a7;
  v15 = sub_2453876EC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_245359798() & 1) == 0)
  {
    v59 = a5;
    v58 = a6;
    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1760]), sel_init);
    v61 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB3478]), sel_init);
    v20 = a3;
    v21 = (void *)sub_245387AF4();
    v54 = a1;
    v56 = a2;
    v22 = (void *)sub_245387AF4();
    v53 = v20;
    v57 = a4;
    v23 = (void *)sub_245387AF4();
    v24 = objc_msgSend(v19, sel_processName);
    if (!v24)
    {
      sub_245387B18();
      v24 = (id)sub_245387AF4();
      swift_bridgeObjectRelease();
    }
    v25 = objc_msgSend(v61, sel_signatureWithDomain_type_subType_detectedProcess_triggerThresholdValues_, v21, v22, v23, v24, 0);

    v55 = v25;
    if (v25)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257450280);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_24538A090;
      *(_QWORD *)(inited + 32) = sub_245387B18();
      *(_QWORD *)(inited + 40) = v27;
      sub_2453876E0();
      sub_2453876B0();
      v29 = v28;
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v29);
      *(_QWORD *)(inited + 72) = sub_245359FE0();
      *(_QWORD *)(inited + 48) = v30;
      *(_QWORD *)(inited + 80) = sub_245387B18();
      *(_QWORD *)(inited + 88) = v31;
      v32 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(inited + 120) = MEMORY[0x24BEE0D00];
      v33 = v58;
      *(_QWORD *)(inited + 96) = v59;
      *(_QWORD *)(inited + 104) = v33;
      *(_QWORD *)(inited + 128) = sub_245387B18();
      *(_QWORD *)(inited + 136) = v34;
      *(_QWORD *)(inited + 168) = v32;
      v35 = v33;
      *(_QWORD *)(inited + 144) = v60;
      *(_QWORD *)(inited + 152) = a8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36 = sub_24531B91C(inited);
      if (qword_257451C90 != -1)
        swift_once();
      v37 = sub_245387818();
      __swift_project_value_buffer(v37, (uint64_t)qword_257463068);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v38 = v56;
      swift_bridgeObjectRetain_n();
      v39 = v57;
      swift_bridgeObjectRetain_n();
      v40 = sub_2453877F4();
      v41 = sub_245387D34();
      v42 = os_log_type_enabled(v40, v41);
      v43 = v54;
      v52 = v19;
      if (v42)
      {
        v44 = swift_slowAlloc();
        v51 = swift_slowAlloc();
        aBlock[0] = v51;
        *(_DWORD *)v44 = 136315906;
        swift_bridgeObjectRetain();
        v62 = sub_2453816D8(v43, v38, aBlock);
        sub_245387E0C();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v44 + 12) = 2080;
        swift_bridgeObjectRetain();
        v62 = sub_2453816D8(v53, v39, aBlock);
        sub_245387E0C();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v44 + 22) = 2080;
        swift_bridgeObjectRetain();
        v62 = sub_2453816D8(v59, v35, aBlock);
        sub_245387E0C();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v44 + 32) = 2080;
        swift_bridgeObjectRetain();
        v62 = sub_2453816D8(v60, a8, aBlock);
        sub_245387E0C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_245256000, v40, v41, "Capturing bug report with type %s; subtype: %s; name: %s; value: %s",
          (uint8_t *)v44,
          0x2Au);
        v45 = v51;
        swift_arrayDestroy();
        MEMORY[0x24953317C](v45, -1, -1);
        MEMORY[0x24953317C](v44, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      aBlock[0] = 0;
      v46 = v55;
      sub_245387A58();
      if (aBlock[0])
      {

        v47 = (void *)sub_245387A4C();
        swift_bridgeObjectRelease();
        sub_245358D98(v36);
        swift_bridgeObjectRelease();
        v48 = (void *)sub_245387A4C();
        swift_bridgeObjectRelease();
        aBlock[4] = (uint64_t)sub_24535915C;
        aBlock[5] = 0;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_2453596F0;
        aBlock[3] = (uint64_t)&block_descriptor_15;
        v49 = _Block_copy(aBlock);
        objc_msgSend(v61, sel_snapshotWithSignature_duration_event_payload_reply_, v47, v48, 0, v49, 120.0);

        _Block_release(v49);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {

    }
  }
}

unint64_t sub_245359FE0()
{
  unint64_t result;

  result = qword_2574530C8;
  if (!qword_2574530C8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2574530C8);
  }
  return result;
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t PairingRelationshipFilter.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

ReplicatorEngine::PairingRelationshipFilter __swiftcall PairingRelationshipFilter.init(rawValue:)(ReplicatorEngine::PairingRelationshipFilter rawValue)
{
  ReplicatorEngine::PairingRelationshipFilter *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static PairingRelationshipFilter.compatibleRelationships.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

uint64_t PairingRelationshipProviding.pairingRelationship(relationshipID:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_245387740();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2453876F8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_24535A1AC((uint64_t)v8);
    v13 = type metadata accessor for PairingRelationship();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 1, 1, v13);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    (*(void (**)(char *, uint64_t, uint64_t))(a2 + 32))(v12, a1, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_24535A1AC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24535A1F0()
{
  unint64_t result;

  result = qword_2574530D0;
  if (!qword_2574530D0)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for PairingRelationshipFilter, &type metadata for PairingRelationshipFilter);
    atomic_store(result, (unint64_t *)&qword_2574530D0);
  }
  return result;
}

unint64_t sub_24535A238()
{
  unint64_t result;

  result = qword_2574530D8;
  if (!qword_2574530D8)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for PairingRelationshipFilter, &type metadata for PairingRelationshipFilter);
    atomic_store(result, (unint64_t *)&qword_2574530D8);
  }
  return result;
}

unint64_t sub_24535A280()
{
  unint64_t result;

  result = qword_2574530E0;
  if (!qword_2574530E0)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for PairingRelationshipFilter, &type metadata for PairingRelationshipFilter);
    atomic_store(result, (unint64_t *)&qword_2574530E0);
  }
  return result;
}

unint64_t sub_24535A2C8()
{
  unint64_t result;

  result = qword_2574530E8;
  if (!qword_2574530E8)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for PairingRelationshipFilter, &type metadata for PairingRelationshipFilter);
    atomic_store(result, (unint64_t *)&qword_2574530E8);
  }
  return result;
}

uint64_t dispatch thunk of ReplicatorRetryTimer.start(queue:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of ReplicatorRetryTimer.cancel()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ReplicatorRetryTimer.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for PairingRelationshipFilter()
{
  return &type metadata for PairingRelationshipFilter;
}

uint64_t dispatch thunk of PairingRelationshipProviding.pairingRelationshipPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PairingRelationshipProviding.forgottenRelationshipPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PairingRelationshipProviding.pairingRelationships(filter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PairingRelationshipProviding.pairingRelationship(relationshipID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of PairingRelationshipProviding.pairingRelationship(remoteDeviceID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of PairingRelationshipProviding.resolveProtocolVersion(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of MessageTypeManaging.set(messageTypes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of AllowListManaging.allowList.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AllowListManaging.allowList.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of AllowListManaging.allowList.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of PairingRelationshipManaging.pair(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of PairingRelationshipManaging.unpair(remoteDeviceID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of PairingRelationshipManaging.removePairingRelationship(remoteDeviceID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of PairingRelationshipManaging.readvertiseIfNecessary()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of StuckPairedRelationshipRepairing.retryStuckRemotePairings()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Replicating.isEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Replicating.isEnabled.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of Replicating.isEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of Replicating.deviceType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of Replicating.localDeviceIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of Replicating.add(recordStubs:destination:schedule:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of Replicating.delete(recordIDs:schedule:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of Replicating.set(dataSource:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of Replicating.set(clientID:enabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t dispatch thunk of Replicating.sync()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of Replicating.metadata(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of Replicating.zoneIDs(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of Replicating.start()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of Replicating.validateRecords()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of Replicating.stateCaptureTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of Replicating.captureState(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 136))();
}

uint64_t sub_24535A48C(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574535D8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24536D198();
  sub_24538849C();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574535C8);
  sub_24536D278();
  sub_2453880B8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_24535A590(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v17;
  char v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  __int128 v30;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453418);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24536B880();
  sub_24538849C();
  LOBYTE(v19) = 0;
  sub_245387740();
  sub_24525C6C4(&qword_25744F6C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_2453880B8();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Request(0);
    v30 = *(_OWORD *)(v3 + v9[5]);
    v29 = 1;
    sub_24536B94C();
    sub_2453880B8();
    v10 = (__int128 *)(v3 + v9[6]);
    v11 = v10[7];
    v25 = v10[6];
    v26 = v11;
    v12 = v10[9];
    v27 = v10[8];
    v28 = v12;
    v13 = v10[3];
    v21 = v10[2];
    v22 = v13;
    v14 = v10[5];
    v23 = v10[4];
    v24 = v14;
    v15 = v10[1];
    v19 = *v10;
    v20 = v15;
    v18 = 2;
    sub_24536B990();
    sub_2453880B8();
    *(_QWORD *)&v19 = *(_QWORD *)(v3 + v9[7]);
    v18 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF58);
    sub_2452E4CF4();
    sub_2453880B8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24535A7D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v22 = a2;
  v23 = sub_245387740();
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v24 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574533F8);
  v5 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24536B880();
  v25 = v7;
  v11 = v40;
  sub_245388490();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v12 = (uint64_t)v10;
  LOBYTE(v30) = 0;
  sub_24525C6C4(&qword_25744F6D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v13 = v23;
  sub_245388034();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v12, v24, v13);
  LOBYTE(v28) = 1;
  sub_24536B8C4();
  sub_245388034();
  *(_OWORD *)(v12 + v8[5]) = v30;
  v29 = 2;
  sub_24536B908();
  sub_245388034();
  v14 = (_OWORD *)(v12 + v8[6]);
  v15 = v37;
  v16 = v38;
  v14[6] = v36;
  v14[7] = v15;
  v17 = v39;
  v14[8] = v16;
  v14[9] = v17;
  v18 = v33;
  v14[2] = v32;
  v14[3] = v18;
  v19 = v35;
  v14[4] = v34;
  v14[5] = v19;
  v20 = v31;
  *v14 = v30;
  v14[1] = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF58);
  v27 = 3;
  sub_2452E4C34();
  sub_245388034();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v25, v26);
  *(_QWORD *)(v12 + v8[7]) = v28;
  sub_2452B792C(v12, v22, type metadata accessor for ReplicatorMessage.Handshake.Request);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_2452B7B5C(v12, type metadata accessor for ReplicatorMessage.Handshake.Request);
}

uint64_t sub_24535AC44(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v17;
  char v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  __int128 v30;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453448);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24536B9D4();
  sub_24538849C();
  LOBYTE(v19) = 0;
  sub_245387740();
  sub_24525C6C4(&qword_25744F6C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_2453880B8();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Response(0);
    v30 = *(_OWORD *)(v3 + v9[5]);
    v29 = 1;
    sub_24536B94C();
    sub_2453880B8();
    v10 = (__int128 *)(v3 + v9[6]);
    v11 = v10[7];
    v25 = v10[6];
    v26 = v11;
    v12 = v10[9];
    v27 = v10[8];
    v28 = v12;
    v13 = v10[3];
    v21 = v10[2];
    v22 = v13;
    v14 = v10[5];
    v23 = v10[4];
    v24 = v14;
    v15 = v10[1];
    v19 = *v10;
    v20 = v15;
    v18 = 2;
    sub_24536B990();
    sub_2453880B8();
    *(_QWORD *)&v19 = *(_QWORD *)(v3 + v9[7]);
    v18 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF58);
    sub_2452E4CF4();
    sub_2453880B8();
    *(_QWORD *)&v19 = *(_QWORD *)(v3 + v9[8]);
    v18 = 4;
    sub_24536BA5C();
    sub_2453880B8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24535AED8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _QWORD *v42;

  v24 = a2;
  v25 = sub_245387740();
  v3 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v26 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453430);
  v5 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24536B9D4();
  v28 = v7;
  v11 = (uint64_t)v42;
  sub_245388490();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v23 = v5;
  v42 = a1;
  LOBYTE(v32) = 0;
  sub_24525C6C4(&qword_25744F6D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v12 = v26;
  v13 = v25;
  sub_245388034();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v12, v13);
  LOBYTE(v30) = 1;
  sub_24536B8C4();
  sub_245388034();
  *(_OWORD *)&v10[v8[5]] = v32;
  v31 = 2;
  sub_24536B908();
  sub_245388034();
  v14 = &v10[v8[6]];
  v15 = v39;
  v16 = v40;
  *((_OWORD *)v14 + 6) = v38;
  *((_OWORD *)v14 + 7) = v15;
  v17 = v41;
  *((_OWORD *)v14 + 8) = v16;
  *((_OWORD *)v14 + 9) = v17;
  v18 = v35;
  *((_OWORD *)v14 + 2) = v34;
  *((_OWORD *)v14 + 3) = v18;
  v19 = v37;
  *((_OWORD *)v14 + 4) = v36;
  *((_OWORD *)v14 + 5) = v19;
  v20 = v33;
  *(_OWORD *)v14 = v32;
  *((_OWORD *)v14 + 1) = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF58);
  v29 = 3;
  sub_2452E4C34();
  sub_245388034();
  *(_QWORD *)&v10[v8[7]] = v30;
  v29 = 4;
  sub_24536BA18();
  sub_245388034();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v27);
  *(_QWORD *)&v10[v8[8]] = v30;
  sub_2452B792C((uint64_t)v10, v24, type metadata accessor for ReplicatorMessage.Handshake.Response);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  return sub_2452B7B5C((uint64_t)v10, type metadata accessor for ReplicatorMessage.Handshake.Response);
}

uint64_t sub_24535B40C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v11;
  char v12;
  __int128 v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453470);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24536BAA0();
  sub_24538849C();
  LOBYTE(v13) = 0;
  sub_245387740();
  sub_24525C6C4(&qword_25744F6C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_2453880B8();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
    v13 = *(_OWORD *)(v3 + v9[5]);
    v12 = 1;
    sub_24536B94C();
    sub_2453880B8();
    *(_QWORD *)&v13 = *(_QWORD *)(v3 + v9[6]);
    v12 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257450000);
    sub_24536BAE4(&qword_257453478, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_2453880B8();
    *(_QWORD *)&v13 = *(_QWORD *)(v3 + v9[7]);
    v12 = 3;
    sub_24536BA5C();
    sub_2453880B8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24535B624@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  __int128 v24;
  char v25;

  v18 = a2;
  v19 = sub_245387740();
  v3 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v20 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453458);
  v5 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24536BAA0();
  v22 = v7;
  v11 = (uint64_t)v23;
  sub_245388490();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v12 = v5;
  v23 = a1;
  v13 = (uint64_t)v10;
  LOBYTE(v24) = 0;
  sub_24525C6C4(&qword_25744F6D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v14 = v19;
  v15 = v20;
  v16 = v21;
  sub_245388034();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v13, v15, v14);
  v25 = 1;
  sub_24536B8C4();
  sub_245388034();
  *(_OWORD *)(v13 + v8[5]) = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257450000);
  v25 = 2;
  sub_24536BAE4(&qword_257453468, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  sub_245388034();
  *(_QWORD *)(v13 + v8[6]) = v24;
  v25 = 3;
  sub_24536BA18();
  sub_245388034();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v22, v16);
  *(_QWORD *)(v13 + v8[7]) = v24;
  sub_2452B792C(v13, v18, type metadata accessor for ReplicatorMessage.Handshake.Complete);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return sub_2452B7B5C(v13, type metadata accessor for ReplicatorMessage.Handshake.Complete);
}

uint64_t sub_24535B9BC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int EnumCaseMultiPayload;
  uint64_t (*v21)(uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574533C0);
  v41 = *(_QWORD *)(v2 - 8);
  v42 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v40 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
  MEMORY[0x24BDAC7A8](v38);
  v39 = (uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574533C8);
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v35 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  MEMORY[0x24BDAC7A8](v34);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574533D0);
  v32 = *(_QWORD *)(v9 - 8);
  v33 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  MEMORY[0x24BDAC7A8](v31);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ReplicatorMessage.Handshake(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574533D8);
  v44 = *(_QWORD *)(v17 - 8);
  v45 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24536B72C();
  sub_24538849C();
  sub_2452B792C(v43, (uint64_t)v16, type metadata accessor for ReplicatorMessage.Handshake);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v21 = type metadata accessor for ReplicatorMessage.Handshake.Response;
      sub_2452B7AB8((uint64_t)v16, (uint64_t)v8, type metadata accessor for ReplicatorMessage.Handshake.Response);
      v47 = 1;
      sub_24536B7B4();
      v22 = v35;
      v23 = v45;
      sub_245388070();
      sub_24525C6C4(&qword_2574533E8, type metadata accessor for ReplicatorMessage.Handshake.Response, (uint64_t)&unk_24538FD34);
      v24 = v37;
      sub_2453880B8();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v22, v24);
      v25 = (uint64_t)v8;
    }
    else
    {
      v21 = type metadata accessor for ReplicatorMessage.Handshake.Complete;
      v27 = v39;
      sub_2452B7AB8((uint64_t)v16, v39, type metadata accessor for ReplicatorMessage.Handshake.Complete);
      v48 = 2;
      sub_24536B770();
      v28 = v40;
      v23 = v45;
      sub_245388070();
      sub_24525C6C4(&qword_2574533E0, type metadata accessor for ReplicatorMessage.Handshake.Complete, (uint64_t)&unk_24538FCE4);
      v29 = v42;
      sub_2453880B8();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v29);
      v25 = v27;
    }
  }
  else
  {
    v21 = type metadata accessor for ReplicatorMessage.Handshake.Request;
    sub_2452B7AB8((uint64_t)v16, (uint64_t)v13, type metadata accessor for ReplicatorMessage.Handshake.Request);
    v46 = 0;
    sub_24536B7F8();
    v23 = v45;
    sub_245388070();
    sub_24525C6C4(&qword_2574533F0, type metadata accessor for ReplicatorMessage.Handshake.Request, (uint64_t)&unk_24538FD84);
    v26 = v33;
    sub_2453880B8();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v26);
    v25 = (uint64_t)v13;
  }
  sub_2452B7B5C(v25, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v19, v23);
}

uint64_t sub_24535BE58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  char *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  _QWORD *v61;
  uint64_t v62;
  char v63;
  char v64;
  char v65;

  v54 = a2;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453358);
  v53 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v55 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453360);
  v51 = *(_QWORD *)(v4 - 8);
  v52 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v59 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453368);
  v48 = *(_QWORD *)(v6 - 8);
  v49 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v57 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453370);
  v56 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ReplicatorMessage.Handshake(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v43 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v43 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v43 - v20;
  v22 = a1[3];
  v61 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_24536B72C();
  v60 = v9;
  v23 = v62;
  sub_245388490();
  if (v23)
    goto LABEL_9;
  v44 = v16;
  v45 = v19;
  v46 = v13;
  v47 = v21;
  v24 = v57;
  v25 = v58;
  v27 = v59;
  v26 = v60;
  v62 = v10;
  v28 = sub_245388058();
  if (*(_QWORD *)(v28 + 16) != 1)
  {
    v29 = v25;
    v30 = sub_245387EE4();
    swift_allocError();
    v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v32 = v62;
    sub_245387FEC();
    sub_245387ECC();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, *MEMORY[0x24BEE26D0], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v26, v29);
LABEL_9:
    v37 = (uint64_t)v61;
    return __swift_destroy_boxed_opaque_existential_1(v37);
  }
  if (*(_BYTE *)(v28 + 32))
  {
    if (*(_BYTE *)(v28 + 32) == 1)
    {
      v64 = 1;
      sub_24536B7B4();
      sub_245387FE0();
      type metadata accessor for ReplicatorMessage.Handshake.Response(0);
      sub_24525C6C4(&qword_257453398, type metadata accessor for ReplicatorMessage.Handshake.Response, (uint64_t)&unk_24538FD5C);
      v35 = (uint64_t)v44;
      v36 = v52;
      sub_245388034();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v27, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v26, v25);
      v37 = (uint64_t)v61;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      v65 = 2;
      sub_24536B770();
      v33 = v55;
      sub_245387FE0();
      type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
      sub_24525C6C4(&qword_257453388, type metadata accessor for ReplicatorMessage.Handshake.Complete, (uint64_t)&unk_24538FD0C);
      v39 = (uint64_t)v46;
      v40 = v50;
      sub_245388034();
      v41 = v56;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v40);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v26, v25);
      swift_storeEnumTagMultiPayload();
      v35 = v39;
      v37 = (uint64_t)v61;
    }
  }
  else
  {
    v63 = 0;
    sub_24536B7F8();
    sub_245387FE0();
    type metadata accessor for ReplicatorMessage.Handshake.Request(0);
    sub_24525C6C4(&qword_2574533A8, type metadata accessor for ReplicatorMessage.Handshake.Request, (uint64_t)&unk_24538FDAC);
    v35 = (uint64_t)v45;
    v38 = v49;
    sub_245388034();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v24, v38);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v26, v25);
    v37 = (uint64_t)v61;
    swift_storeEnumTagMultiPayload();
  }
  v42 = (uint64_t)v47;
  sub_2452B7AB8(v35, (uint64_t)v47, type metadata accessor for ReplicatorMessage.Handshake);
  sub_2452B7AB8(v42, v54, type metadata accessor for ReplicatorMessage.Handshake);
  return __swift_destroy_boxed_opaque_existential_1(v37);
}

uint64_t sub_24535C4D8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453490);
  v25 = *(_QWORD *)(v2 - 8);
  v26 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453498);
  v28 = *(_QWORD *)(v5 - 8);
  v29 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for RecordMetadata();
  MEMORY[0x24BDAC7A8](v24);
  v27 = (uint64_t)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574534A0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24536B480();
  sub_24538849C();
  sub_2452B792C(v30, (uint64_t)v11, type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452350);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v11, 1, v16) == 1)
  {
    LOBYTE(v32) = 1;
    sub_24536B4C4();
    sub_245388070();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v26);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    v30 = v13;
    v18 = (uint64_t *)&v11[*(int *)(v16 + 48)];
    v20 = *v18;
    v19 = v18[1];
    v21 = v27;
    sub_2452B7AB8((uint64_t)v11, v27, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    LOBYTE(v32) = 0;
    sub_24536B508();
    sub_245388070();
    LOBYTE(v32) = 0;
    sub_24525C6C4(&qword_257452678, (uint64_t (*)(uint64_t))type metadata accessor for RecordMetadata, (uint64_t)&protocol conformance descriptor for RecordMetadata);
    v22 = v29;
    v23 = v31;
    sub_2453880B8();
    if (v23)
    {
      sub_24525CB80(v20, v19);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v22);
      sub_2452B7B5C(v21, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v15, v12);
    }
    else
    {
      v32 = v20;
      v33 = v19;
      v34 = 1;
      sub_2452CC1A4();
      sub_2453880B8();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v22);
      sub_2452B7B5C(v21, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v12);
      return sub_24525CB80(v20, v19);
    }
  }
}

uint64_t sub_24535C880@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;
  char v48;

  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574532B8);
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v42 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574532C0);
  v6 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  v39 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v41 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574532C8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v33 - v16;
  v18 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_24536B480();
  v19 = v44;
  sub_245388490();
  if (!v19)
  {
    v34 = v17;
    v35 = v12;
    v20 = v41;
    v21 = v42;
    v44 = v9;
    v22 = sub_245388058();
    if (*(_QWORD *)(v22 + 16) == 1)
    {
      if ((*(_BYTE *)(v22 + 32) & 1) != 0)
      {
        v48 = 1;
        sub_24536B4C4();
        sub_245387FE0();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v21, v37);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v8);
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452350);
        v24 = (uint64_t)v34;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v34, 1, 1, v23);
      }
      else
      {
        v47 = 0;
        sub_24536B508();
        v28 = v20;
        sub_245387FE0();
        type metadata accessor for RecordMetadata();
        v46 = 0;
        sub_24525C6C4(&qword_257452690, (uint64_t (*)(uint64_t))type metadata accessor for RecordMetadata, (uint64_t)&protocol conformance descriptor for RecordMetadata);
        v29 = v38;
        sub_245388034();
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452350);
        v42 = (char *)v8;
        v32 = v31;
        v45 = 1;
        sub_2452CC5D0();
        sub_245388034();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v29);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *))(v44 + 8))(v11, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v15, 0, 1, v32);
        v24 = (uint64_t)v34;
        sub_2452B7AB8((uint64_t)v15, (uint64_t)v34, type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value);
      }
      sub_2452B7AB8(v24, v40, type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value);
    }
    else
    {
      v25 = sub_245387EE4();
      swift_allocError();
      v27 = v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
      *v27 = v35;
      sub_245387FEC();
      sub_245387ECC();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x24BEE26D0], v25);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
}

uint64_t sub_24535CD6C()
{
  return 0x655664726F636572;
}

uint64_t sub_24535CD90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x655664726F636572 && a2 == 0xEE00736E6F697372)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_245388274();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24535CE48()
{
  sub_24536D198();
  return sub_2453884D8();
}

uint64_t sub_24535CE70()
{
  sub_24536D198();
  return sub_2453884E4();
}

_QWORD *sub_24535CE98@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_24536AFB4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_24535CEC0(_QWORD *a1)
{
  uint64_t *v1;

  return sub_24535A48C(a1, *v1);
}

uint64_t sub_24535CED8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24535CF0C + 4 * byte_24538F910[*v0]))(0x496E6F6973736573, 0xE900000000000044);
}

unint64_t sub_24535CF0C()
{
  return 0xD000000000000011;
}

uint64_t sub_24535CF28()
{
  return 0x656369766564;
}

uint64_t sub_24535CF3C()
{
  return 0x73726556656E6F7ALL;
}

uint64_t sub_24535CF5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24536CB74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24535CF80()
{
  sub_24536B880();
  return sub_2453884D8();
}

uint64_t sub_24535CFA8()
{
  sub_24536B880();
  return sub_2453884E4();
}

uint64_t sub_24535CFD0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24535A7D8(a1, a2);
}

uint64_t sub_24535CFE4(_QWORD *a1)
{
  return sub_24535A590(a1);
}

uint64_t sub_24535CFF8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24535D02C + 4 * byte_24538F914[*v0]))(0x496E6F6973736573, 0xE900000000000044);
}

unint64_t sub_24535D02C()
{
  return 0xD000000000000011;
}

uint64_t sub_24535D048()
{
  return 0x656369766564;
}

uint64_t sub_24535D05C()
{
  return 0x73726556656E6F7ALL;
}

uint64_t sub_24535D07C()
{
  return 0x614D64726F636572;
}

uint64_t sub_24535D0A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24536CF44(a1, a2);
  *a3 = result;
  return result;
}

void sub_24535D0C4(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_24535D0D0()
{
  sub_24536B9D4();
  return sub_2453884D8();
}

uint64_t sub_24535D0F8()
{
  sub_24536B9D4();
  return sub_2453884E4();
}

uint64_t sub_24535D120@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24535AED8(a1, a2);
}

uint64_t sub_24535D134(_QWORD *a1)
{
  return sub_24535AC44(a1);
}

uint64_t sub_24535D148()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24535D17C + 4 * byte_24538F919[*v0]))(0x496E6F6973736573, 0xE900000000000044);
}

unint64_t sub_24535D17C()
{
  return 0xD000000000000011;
}

uint64_t sub_24535D198()
{
  return 0x686374616D73696DLL;
}

uint64_t sub_24535D1BC()
{
  return 0x614D64726F636572;
}

uint64_t sub_24535D1E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24536CD40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24535D204()
{
  sub_24536BAA0();
  return sub_2453884D8();
}

uint64_t sub_24535D22C()
{
  sub_24536BAA0();
  return sub_2453884E4();
}

uint64_t sub_24535D254@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24535B624(a1, a2);
}

uint64_t sub_24535D268(_QWORD *a1)
{
  return sub_24535B40C(a1);
}

uint64_t sub_24535D27C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65736E6F70736572;
  if (*v0 != 1)
    v1 = 0x6574656C706D6F63;
  if (*v0)
    return v1;
  else
    return 0x74736575716572;
}

uint64_t sub_24535D2D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24536CA20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24535D2FC()
{
  sub_24536B72C();
  return sub_2453884D8();
}

uint64_t sub_24535D324()
{
  sub_24536B72C();
  return sub_2453884E4();
}

uint64_t sub_24535D350()
{
  sub_24536B770();
  return sub_2453884D8();
}

uint64_t sub_24535D378()
{
  sub_24536B770();
  return sub_2453884E4();
}

uint64_t sub_24535D3A0()
{
  sub_24536B7F8();
  return sub_2453884D8();
}

uint64_t sub_24535D3C8()
{
  sub_24536B7F8();
  return sub_2453884E4();
}

uint64_t sub_24535D3F0()
{
  sub_24536B7B4();
  return sub_2453884D8();
}

uint64_t sub_24535D418()
{
  sub_24536B7B4();
  return sub_2453884E4();
}

uint64_t sub_24535D440@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24535BE58(a1, a2);
}

uint64_t sub_24535D454(_QWORD *a1)
{
  return sub_24535B9BC(a1);
}

uint64_t sub_24535D468()
{
  _BYTE *v0;

  if (*v0)
    return 1701736302;
  else
    return 1635017060;
}

uint64_t sub_24535D48C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24536B220(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24535D4B0()
{
  sub_24536B480();
  return sub_2453884D8();
}

uint64_t sub_24535D4D8()
{
  sub_24536B480();
  return sub_2453884E4();
}

uint64_t sub_24535D500()
{
  _BYTE *v0;

  if (*v0)
    return 12639;
  else
    return 12383;
}

uint64_t sub_24535D51C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24536B2F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24535D540()
{
  sub_24536B508();
  return sub_2453884D8();
}

uint64_t sub_24535D568()
{
  sub_24536B508();
  return sub_2453884E4();
}

uint64_t sub_24535D590()
{
  sub_24536B4C4();
  return sub_2453884D8();
}

uint64_t sub_24535D5B8()
{
  sub_24536B4C4();
  return sub_2453884E4();
}

uint64_t sub_24535D5E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24535C880(a1, a2);
}

uint64_t sub_24535D5F4(_QWORD *a1)
{
  return sub_24535C4D8(a1);
}

uint64_t sub_24535D608(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453480);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24536B6E8();
  sub_24538849C();
  v8[15] = 0;
  sub_245387740();
  sub_24525C6C4(&qword_25744F6C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_2453880B8();
  if (!v1)
  {
    type metadata accessor for ReplicatorMessage.Sync(0);
    v8[14] = 1;
    type metadata accessor for ReplicatorMessage.Sync.SyncRecord(0);
    sub_24525C6C4(&qword_257453488, type metadata accessor for ReplicatorMessage.Sync.SyncRecord, (uint64_t)&unk_24538F950);
    sub_2453880B8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24535D78C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  char v29;

  v21 = a2;
  v22 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord(0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_245387740();
  v23 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v27 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453340);
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ReplicatorMessage.Sync(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24536B6E8();
  sub_245388490();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = v6;
  v20 = a1;
  v12 = (uint64_t)v11;
  v13 = v23;
  v14 = (uint64_t)v24;
  v29 = 0;
  sub_24525C6C4(&qword_25744F6D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v15 = v26;
  v16 = v25;
  sub_245388034();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v27, v15);
  v28 = 1;
  sub_24525C6C4(&qword_257453350, type metadata accessor for ReplicatorMessage.Sync.SyncRecord, (uint64_t)&unk_24538F978);
  sub_245388034();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v16);
  sub_2452B7AB8(v14, v12 + *(int *)(v9 + 20), type metadata accessor for ReplicatorMessage.Sync.SyncRecord);
  sub_2452B792C(v12, v21, type metadata accessor for ReplicatorMessage.Sync);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return sub_2452B7B5C(v12, type metadata accessor for ReplicatorMessage.Sync);
}

uint64_t sub_24535DA7C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;

  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453308);
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v32 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453310);
  v33 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for ReplicatorMessage.Sync(0);
  MEMORY[0x24BDAC7A8](v29);
  v30 = (uint64_t)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453318);
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for ReplicatorMessage.Handshake(0);
  MEMORY[0x24BDAC7A8](v26);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ReplicatorMessage(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453320);
  v38 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24535FB30();
  sub_24538849C();
  sub_2452B792C(v37, (uint64_t)v12, type metadata accessor for ReplicatorMessage);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      v41 = 2;
      sub_24535FB74();
      v23 = v32;
      sub_245388070();
      sub_24536B6A4();
      v24 = v36;
      sub_2453880B8();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v24);
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v15, v13);
    }
    v17 = v30;
    sub_2452B7AB8((uint64_t)v12, v30, type metadata accessor for ReplicatorMessage.Sync);
    v40 = 1;
    sub_24535FBFC();
    v18 = v31;
    sub_245388070();
    sub_24525C6C4(&qword_257453330, type metadata accessor for ReplicatorMessage.Sync, (uint64_t)&unk_24538FBDC);
    v19 = v35;
    sub_2453880B8();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v18, v19);
    v20 = v17;
    v21 = type metadata accessor for ReplicatorMessage.Sync;
  }
  else
  {
    sub_2452B7AB8((uint64_t)v12, (uint64_t)v9, type metadata accessor for ReplicatorMessage.Handshake);
    v39 = 0;
    sub_24535FC54();
    sub_245388070();
    sub_24525C6C4(&qword_257453338, type metadata accessor for ReplicatorMessage.Handshake, (uint64_t)&unk_24538FDD4);
    v22 = v28;
    sub_2453880B8();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v22);
    v20 = (uint64_t)v9;
    v21 = type metadata accessor for ReplicatorMessage.Handshake;
  }
  sub_2452B7B5C(v20, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v15, v13);
}

uint64_t sub_24535DEB4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  char *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  _QWORD *v59;
  uint64_t v60;
  char v61;
  char v62;
  char v63;

  v52 = a2;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453130);
  v51 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v53 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453138);
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v57 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453140);
  v46 = *(_QWORD *)(v6 - 8);
  v47 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v55 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453148);
  v54 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ReplicatorMessage(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v43 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v43 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v43 - v20;
  v22 = a1[3];
  v59 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_24535FB30();
  v58 = v9;
  v23 = v60;
  sub_245388490();
  if (v23)
    goto LABEL_9;
  v24 = v13;
  v43 = v16;
  v44 = v19;
  v26 = v57;
  v25 = v58;
  v45 = v21;
  v60 = v10;
  v28 = v55;
  v27 = v56;
  v29 = sub_245388058();
  if (*(_QWORD *)(v29 + 16) != 1)
  {
    v30 = v27;
    v31 = sub_245387EE4();
    swift_allocError();
    v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v33 = v60;
    sub_245387FEC();
    sub_245387ECC();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v33, *MEMORY[0x24BEE26D0], v31);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v25, v30);
LABEL_9:
    v39 = (uint64_t)v59;
    return __swift_destroy_boxed_opaque_existential_1(v39);
  }
  if (*(_BYTE *)(v29 + 32))
  {
    if (*(_BYTE *)(v29 + 32) == 1)
    {
      v62 = 1;
      sub_24535FBFC();
      sub_245387FE0();
      type metadata accessor for ReplicatorMessage.Sync(0);
      sub_24525C6C4(&qword_257453170, type metadata accessor for ReplicatorMessage.Sync, (uint64_t)&unk_24539017C);
      v37 = (uint64_t)v43;
      v38 = v50;
      sub_245388034();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v38);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v25, v27);
      v39 = (uint64_t)v59;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      v63 = 2;
      sub_24535FB74();
      v35 = v53;
      sub_245387FE0();
      sub_24535FBB8();
      v40 = v48;
      sub_245388034();
      v41 = v54;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v35, v40);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v25, v27);
      swift_storeEnumTagMultiPayload();
      v37 = (uint64_t)v24;
      v39 = (uint64_t)v59;
    }
  }
  else
  {
    v61 = 0;
    sub_24535FC54();
    sub_245387FE0();
    type metadata accessor for ReplicatorMessage.Handshake(0);
    sub_24525C6C4(&qword_257453180, type metadata accessor for ReplicatorMessage.Handshake, (uint64_t)&unk_245390104);
    v37 = (uint64_t)v44;
    v34 = v47;
    sub_245388034();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v28, v34);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v25, v27);
    v39 = (uint64_t)v59;
    swift_storeEnumTagMultiPayload();
  }
  v42 = (uint64_t)v45;
  sub_2452B7AB8(v37, (uint64_t)v45, type metadata accessor for ReplicatorMessage);
  sub_2452B7AB8(v42, v52, type metadata accessor for ReplicatorMessage);
  return __swift_destroy_boxed_opaque_existential_1(v39);
}

uint64_t sub_24535E4F8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453300);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24535FA94();
  sub_24538849C();
  v8[15] = 0;
  type metadata accessor for Record.ID(0);
  sub_24525C6C4(&qword_2574532F0, type metadata accessor for Record.ID, (uint64_t)&protocol conformance descriptor for Record.ID);
  sub_2453880B8();
  if (!v1)
  {
    type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Versions.V0(0);
    v8[14] = 1;
    type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value(0);
    sub_24525C6C4(&qword_2574532F8, type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value, (uint64_t)&unk_24538FAFC);
    sub_2453880B8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24535E67C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char v26;
  char v27;

  v20 = a2;
  v21 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value(0);
  MEMORY[0x24BDAC7A8](v21);
  v22 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Record.ID(0);
  MEMORY[0x24BDAC7A8](v23);
  v24 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574530F0);
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Versions.V0(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24535FA94();
  sub_245388490();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = a1;
  v12 = v6;
  v13 = (uint64_t)v11;
  v14 = (uint64_t)v22;
  v27 = 0;
  sub_24525C6C4(&qword_257453100, type metadata accessor for Record.ID, (uint64_t)&protocol conformance descriptor for Record.ID);
  v15 = (uint64_t)v24;
  v16 = v25;
  sub_245388034();
  sub_2452B7AB8(v15, v13, type metadata accessor for Record.ID);
  v26 = 1;
  sub_24525C6C4(&qword_257453108, type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value, (uint64_t)&unk_245390384);
  sub_245388034();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v16);
  sub_2452B7AB8(v14, v13 + *(int *)(v9 + 20), type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value);
  sub_2452B792C(v13, v20, type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Versions.V0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return sub_2452B7B5C(v13, type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Versions.V0);
}

uint64_t sub_24535E958()
{
  _BYTE *v0;

  if (*v0)
    return 0x64726F636572;
  else
    return 0x496E6F6973736573;
}

uint64_t sub_24535E994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24536C92C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24535E9B8()
{
  sub_24536B6E8();
  return sub_2453884D8();
}

uint64_t sub_24535E9E0()
{
  sub_24536B6E8();
  return sub_2453884E4();
}

uint64_t sub_24535EA08@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24535D78C(a1, a2);
}

uint64_t sub_24535EA1C(_QWORD *a1)
{
  return sub_24535D608(a1);
}

uint64_t sub_24535EA30()
{
  sub_24536B83C();
  return sub_2453884D8();
}

uint64_t sub_24535EA58()
{
  sub_24536B83C();
  return sub_2453884E4();
}

uint64_t sub_24535EA80(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_24535EAA4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574533B0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24536B83C();
  sub_24538849C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_24535EB68()
{
  sub_24535FB74();
  return sub_2453884D8();
}

uint64_t sub_24535EB90()
{
  sub_24535FB74();
  return sub_2453884E4();
}

uint64_t sub_24535EBB8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1668184435;
  if (*v0 != 1)
    v1 = 7037793;
  if (*v0)
    return v1;
  else
    return 0x6B616873646E6168;
}

uint64_t sub_24535EC08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24536B0E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24535EC2C()
{
  sub_24535FB30();
  return sub_2453884D8();
}

uint64_t sub_24535EC54()
{
  sub_24535FB30();
  return sub_2453884E4();
}

uint64_t sub_24535EC7C()
{
  sub_24535FC54();
  return sub_2453884D8();
}

uint64_t sub_24535ECA4()
{
  sub_24535FC54();
  return sub_2453884E4();
}

uint64_t sub_24535ECCC()
{
  sub_24535FBFC();
  return sub_2453884D8();
}

uint64_t sub_24535ECF4()
{
  sub_24535FBFC();
  return sub_2453884E4();
}

uint64_t sub_24535ED1C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24535DEB4(a1, a2);
}

uint64_t sub_24535ED30(_QWORD *a1)
{
  return sub_24535DA7C(a1);
}

uint64_t sub_24535ED44()
{
  _BYTE *v0;

  if (*v0)
    return 0x65756C6176;
  else
    return 25705;
}

uint64_t sub_24535ED70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24536B3B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24535ED94()
{
  sub_24535FA94();
  return sub_2453884D8();
}

uint64_t sub_24535EDBC()
{
  sub_24535FA94();
  return sub_2453884E4();
}

uint64_t sub_24535EDE4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24535E67C(a1, a2);
}

uint64_t sub_24535EDF8(_QWORD *a1)
{
  return sub_24535E4F8(a1);
}

uint64_t sub_24535EE0C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574532E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24535FAD8();
  sub_24538849C();
  v8[15] = 0;
  type metadata accessor for Record.ID(0);
  sub_24525C6C4(&qword_2574532F0, type metadata accessor for Record.ID, (uint64_t)&protocol conformance descriptor for Record.ID);
  sub_2453880B8();
  if (!v1)
  {
    type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Versions.V8(0);
    v8[14] = 1;
    type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value(0);
    sub_24525C6C4(&qword_2574532F8, type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value, (uint64_t)&unk_24538FAFC);
    sub_2453880B8();
    v8[13] = 2;
    sub_245388094();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24535EFC8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;

  v26 = a2;
  v27 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value(0);
  MEMORY[0x24BDAC7A8](v27);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for Record.ID(0);
  MEMORY[0x24BDAC7A8](v28);
  v29 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_257453110);
  v6 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Versions.V8(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v12[*(int *)(v10 + 24)];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  v14 = a1[3];
  v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_24535FAD8();
  v30 = v8;
  v15 = v33;
  sub_245388490();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  v25 = (uint64_t *)v13;
  v33 = v6;
  v36 = 0;
  sub_24525C6C4(&qword_257453100, type metadata accessor for Record.ID, (uint64_t)&protocol conformance descriptor for Record.ID);
  v16 = (uint64_t)v29;
  v17 = v30;
  sub_245388034();
  sub_2452B7AB8(v16, (uint64_t)v12, type metadata accessor for Record.ID);
  v35 = 1;
  sub_24525C6C4(&qword_257453108, type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value, (uint64_t)&unk_245390384);
  sub_245388034();
  sub_2452B7AB8((uint64_t)v4, (uint64_t)&v12[*(int *)(v9 + 20)], type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value);
  v34 = 2;
  v18 = sub_245388010();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v31);
  v22 = v25;
  v21 = v26;
  *v25 = v18;
  *((_BYTE *)v22 + 8) = v20 & 1;
  sub_2452B792C((uint64_t)v12, v21, type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Versions.V8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return sub_2452B7B5C((uint64_t)v12, type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Versions.V8);
}

uint64_t sub_24535F320()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65756C6176;
  if (*v0 != 1)
    v1 = 0x6C6F636F746F7270;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_24535F378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24536B54C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24535F39C()
{
  sub_24535FAD8();
  return sub_2453884D8();
}

uint64_t sub_24535F3C4()
{
  sub_24535FAD8();
  return sub_2453884E4();
}

uint64_t sub_24535F3EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24535EFC8(a1, a2);
}

uint64_t sub_24535F400(_QWORD *a1)
{
  return sub_24535EE0C(a1);
}

uint64_t sub_24535F414(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __int128 v23[2];
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[3];
  uint64_t v29;
  uint64_t v30;

  v2 = v1;
  sub_24525E4F0(a1, (uint64_t)v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452380);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452388);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v24 = 0;
    memset(v23, 0, sizeof(v23));
    sub_245263F80((uint64_t)v23, &qword_257452390);
LABEL_7:
    v10 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Versions.V8(0);
    v29 = v10;
    v30 = sub_24525C6C4(&qword_257453120, type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Versions.V8, (uint64_t)&unk_24539030C);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
    sub_2452B792C(v2, (uint64_t)boxed_opaque_existential_1, type metadata accessor for Record.ID);
    v12 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord(0);
    sub_2452B792C(v2 + *(int *)(v12 + 20), (uint64_t)boxed_opaque_existential_1 + *(int *)(v10 + 20), type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value);
    v13 = v2 + *(int *)(v12 + 24);
    v14 = *(_QWORD *)v13;
    LOBYTE(v13) = *(_BYTE *)(v13 + 8);
    v15 = (char *)boxed_opaque_existential_1 + *(int *)(v10 + 24);
    *(_QWORD *)v15 = v14;
    v15[8] = v13;
    goto LABEL_10;
  }
  sub_2452B7C5C(v23, (uint64_t)v25);
  v3 = v26;
  v4 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  if ((v6 & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    goto LABEL_7;
  }
  if (v5 > 7)
  {
    v16 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Versions.V8(0);
    v29 = v16;
    v30 = sub_24525C6C4(&qword_257453120, type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Versions.V8, (uint64_t)&unk_24539030C);
    v17 = __swift_allocate_boxed_opaque_existential_1(v28);
    sub_2452B792C(v2, (uint64_t)v17, type metadata accessor for Record.ID);
    v18 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord(0);
    sub_2452B792C(v2 + *(int *)(v18 + 20), (uint64_t)v17 + *(int *)(v16 + 20), type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value);
    v19 = v2 + *(int *)(v18 + 24);
    v20 = *(_QWORD *)v19;
    LOBYTE(v19) = *(_BYTE *)(v19 + 8);
    v21 = (char *)v17 + *(int *)(v16 + 24);
    *(_QWORD *)v21 = v20;
    v21[8] = v19;
  }
  else
  {
    v7 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Versions.V0(0);
    v29 = v7;
    v30 = sub_24525C6C4(&qword_257453128, type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Versions.V0, (uint64_t)&unk_2453902E4);
    v8 = __swift_allocate_boxed_opaque_existential_1(v28);
    sub_2452B792C(v2, (uint64_t)v8, type metadata accessor for Record.ID);
    v9 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord(0);
    sub_2452B792C(v2 + *(int *)(v9 + 20), (uint64_t)v8 + *(int *)(v7 + 20), type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
LABEL_10:
  __swift_project_boxed_opaque_existential_1(v28, v29);
  sub_245387AA0();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t sub_24535F6E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  char *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35[2];
  uint64_t v36;
  _QWORD v37[5];
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v4 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Versions.V8(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v31 - v8;
  v10 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Versions.V0(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord(0);
  v13 = a2 + *(int *)(v34 + 24);
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 1;
  sub_24525E4F0(a1, (uint64_t)v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574523C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574523C8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v32 = v4;
    v33 = a2;
    sub_2452B7C5C(v35, (uint64_t)v38);
    v14 = v39;
    v15 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
    if ((v17 & 1) == 0)
    {
      if (v16 > 7)
      {
        sub_24525E4F0(a1, (uint64_t)v37);
        v27 = v41;
        sub_24535EFC8(v37, (uint64_t)v9);
        __swift_destroy_boxed_opaque_existential_1(a1);
        v28 = v33;
        if (!v27)
        {
          sub_2452B792C((uint64_t)v9, v33, type metadata accessor for Record.ID);
          v29 = v32;
          sub_2452B792C((uint64_t)&v9[*(int *)(v32 + 20)], v28 + *(int *)(v34 + 20), type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value);
          v30 = &v9[*(int *)(v29 + 24)];
          v21 = *(_QWORD *)v30;
          v20 = v30[8];
          sub_2452B7B5C((uint64_t)v9, type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Versions.V8);
          goto LABEL_12;
        }
      }
      else
      {
        sub_24525E4F0(a1, (uint64_t)v37);
        v18 = v41;
        sub_24535E67C(v37, (uint64_t)v12);
        __swift_destroy_boxed_opaque_existential_1(a1);
        v19 = v33;
        if (!v18)
        {
          sub_2452B7AB8((uint64_t)v12, v33, type metadata accessor for Record.ID);
          sub_2452B7AB8((uint64_t)&v12[*(int *)(v10 + 20)], v19 + *(int *)(v34 + 20), type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value);
          v20 = 0;
          v21 = 1;
LABEL_12:
          *(_QWORD *)v13 = v21;
          *(_BYTE *)(v13 + 8) = v20;
        }
      }
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    v4 = v32;
    a2 = v33;
  }
  else
  {
    v36 = 0;
    memset(v35, 0, sizeof(v35));
    sub_245263F80((uint64_t)v35, &qword_2574523D0);
  }
  sub_24525E4F0(a1, (uint64_t)v38);
  v22 = v41;
  sub_24535EFC8(v38, (uint64_t)v7);
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  if (!v22)
  {
    sub_2452B792C((uint64_t)v7, a2, type metadata accessor for Record.ID);
    sub_2452B792C((uint64_t)&v7[*(int *)(v4 + 20)], a2 + *(int *)(v34 + 20), type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value);
    v24 = &v7[*(int *)(v4 + 24)];
    v25 = *(_QWORD *)v24;
    v26 = v24[8];
    result = sub_2452B7B5C((uint64_t)v7, type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Versions.V8);
    *(_QWORD *)v13 = v25;
    *(_BYTE *)(v13 + 8) = v26;
  }
  return result;
}

uint64_t sub_24535FA1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24535F6E0(a1, a2);
}

uint64_t sub_24535FA30(uint64_t a1)
{
  return sub_24535F414(a1);
}

uint64_t type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Versions.V8(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_257453208);
}

uint64_t type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Versions.V0(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_2574531F8);
}

uint64_t type metadata accessor for ReplicatorMessage.Sync.SyncRecord(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_257453218);
}

uint64_t type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_2574531E8);
}

unint64_t sub_24535FA94()
{
  unint64_t result;

  result = qword_2574530F8;
  if (!qword_2574530F8)
  {
    result = MEMORY[0x2495330B0](&unk_2453903AC, &type metadata for ReplicatorMessage.Sync.SyncRecord.Versions.V0.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574530F8);
  }
  return result;
}

unint64_t sub_24535FAD8()
{
  unint64_t result;

  result = qword_257453118;
  if (!qword_257453118)
  {
    result = MEMORY[0x2495330B0](&unk_245390334, &type metadata for ReplicatorMessage.Sync.SyncRecord.Versions.V8.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257453118);
  }
  return result;
}

uint64_t type metadata accessor for ReplicatorMessage(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_2574531C8);
}

unint64_t sub_24535FB30()
{
  unint64_t result;

  result = qword_257453150;
  if (!qword_257453150)
  {
    result = MEMORY[0x2495330B0](&unk_24539026C, &type metadata for ReplicatorMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257453150);
  }
  return result;
}

unint64_t sub_24535FB74()
{
  unint64_t result;

  result = qword_257453158;
  if (!qword_257453158)
  {
    result = MEMORY[0x2495330B0](&unk_24539021C, &type metadata for ReplicatorMessage.AckCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257453158);
  }
  return result;
}

unint64_t sub_24535FBB8()
{
  unint64_t result;

  result = qword_257453160;
  if (!qword_257453160)
  {
    result = MEMORY[0x2495330B0](&unk_2453901F4, &type metadata for ReplicatorMessage.Ack);
    atomic_store(result, (unint64_t *)&qword_257453160);
  }
  return result;
}

unint64_t sub_24535FBFC()
{
  unint64_t result;

  result = qword_257453168;
  if (!qword_257453168)
  {
    result = MEMORY[0x2495330B0](&unk_2453901A4, &type metadata for ReplicatorMessage.SyncCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257453168);
  }
  return result;
}

uint64_t type metadata accessor for ReplicatorMessage.Sync(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_2574531D8);
}

unint64_t sub_24535FC54()
{
  unint64_t result;

  result = qword_257453178;
  if (!qword_257453178)
  {
    result = MEMORY[0x2495330B0](&unk_24539012C, &type metadata for ReplicatorMessage.HandshakeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257453178);
  }
  return result;
}

uint64_t type metadata accessor for ReplicatorMessage.Handshake(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_257453188);
}

ValueMetadata *type metadata accessor for ReplicatorMessage.Ack()
{
  return &type metadata for ReplicatorMessage.Ack;
}

ValueMetadata *type metadata accessor for ReplicatorMessage.CodingKeys()
{
  return &type metadata for ReplicatorMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for ReplicatorMessage.HandshakeCodingKeys()
{
  return &type metadata for ReplicatorMessage.HandshakeCodingKeys;
}

ValueMetadata *type metadata accessor for ReplicatorMessage.SyncCodingKeys()
{
  return &type metadata for ReplicatorMessage.SyncCodingKeys;
}

ValueMetadata *type metadata accessor for ReplicatorMessage.AckCodingKeys()
{
  return &type metadata for ReplicatorMessage.AckCodingKeys;
}

_QWORD *sub_24535FD08(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v48;
  uint64_t v49;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v14 = sub_245387740();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v15 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
      v16 = v15[5];
      v17 = (_QWORD *)((char *)a1 + v16);
      v18 = (_QWORD *)((char *)a2 + v16);
      v19 = v18[1];
      if (v19 >= 3)
      {
        *v17 = *v18;
        v17[1] = v19;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v17 = *(_OWORD *)v18;
      }
      *(_QWORD *)((char *)a1 + v15[6]) = *(_QWORD *)((char *)a2 + v15[6]);
      *(_QWORD *)((char *)a1 + v15[7]) = *(_QWORD *)((char *)a2 + v15[7]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_245387740();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Response(0);
      v9 = v8[5];
      v10 = (_QWORD *)((char *)a1 + v9);
      v11 = (_QWORD *)((char *)a2 + v9);
      v12 = v11[1];
      if (v12 >= 3)
      {
        *v10 = *v11;
        v10[1] = v12;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v10 = *(_OWORD *)v11;
      }
      v26 = v8[6];
      v27 = (char *)a1 + v26;
      v28 = (_QWORD *)((char *)a2 + v26);
      v29 = *(_QWORD *)((char *)a2 + v26 + 8);
      *(_QWORD *)v27 = *(_QWORD *)((char *)a2 + v26);
      *((_QWORD *)v27 + 1) = v29;
      v30 = *(_QWORD *)((char *)a2 + v26 + 24);
      *((_QWORD *)v27 + 2) = *(_QWORD *)((char *)a2 + v26 + 16);
      *((_QWORD *)v27 + 3) = v30;
      *((_OWORD *)v27 + 2) = *(_OWORD *)((char *)a2 + v26 + 32);
      v27[48] = *((_BYTE *)a2 + v26 + 48);
      *(_OWORD *)(v27 + 56) = *(_OWORD *)((char *)a2 + v26 + 56);
      *(_OWORD *)(v27 + 72) = *(_OWORD *)((char *)a2 + v26 + 72);
      *((_WORD *)v27 + 44) = *(_WORD *)((char *)a2 + v26 + 88);
      v31 = *(_QWORD *)((char *)a2 + v26 + 104);
      *((_QWORD *)v27 + 12) = *(_QWORD *)((char *)a2 + v26 + 96);
      *((_QWORD *)v27 + 13) = v31;
      v48 = (_QWORD *)((char *)a2 + v26 + 112);
      v32 = *(_QWORD *)((char *)a2 + v26 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v32 >> 60 == 15)
      {
        *((_OWORD *)v27 + 7) = *(_OWORD *)v48;
      }
      else
      {
        v41 = *v48;
        sub_245261C44(*v48, v32);
        *((_QWORD *)v27 + 14) = v41;
        *((_QWORD *)v27 + 15) = v32;
      }
      v42 = v28[17];
      *((_QWORD *)v27 + 16) = v28[16];
      *((_QWORD *)v27 + 17) = v42;
      v43 = v28[19];
      *((_QWORD *)v27 + 18) = v28[18];
      *((_QWORD *)v27 + 19) = v43;
      *(_QWORD *)((char *)a1 + v8[7]) = *(_QWORD *)((char *)a2 + v8[7]);
      *(_QWORD *)((char *)a1 + v8[8]) = *(_QWORD *)((char *)a2 + v8[8]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v20 = sub_245387740();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
      v21 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
      v22 = *(int *)(v21 + 20);
      v23 = (_QWORD *)((char *)a1 + v22);
      v24 = (_QWORD *)((char *)a2 + v22);
      v25 = v24[1];
      if (v25 >= 3)
      {
        *v23 = *v24;
        v23[1] = v25;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v23 = *(_OWORD *)v24;
      }
      v49 = v21;
      v33 = *(int *)(v21 + 24);
      v34 = (char *)a1 + v33;
      v35 = (_QWORD *)((char *)a2 + v33);
      v36 = *(_QWORD *)((char *)a2 + v33 + 8);
      *(_QWORD *)v34 = *(_QWORD *)((char *)a2 + v33);
      *((_QWORD *)v34 + 1) = v36;
      v37 = *(_QWORD *)((char *)a2 + v33 + 24);
      *((_QWORD *)v34 + 2) = *(_QWORD *)((char *)a2 + v33 + 16);
      *((_QWORD *)v34 + 3) = v37;
      *((_OWORD *)v34 + 2) = *(_OWORD *)((char *)a2 + v33 + 32);
      v34[48] = *((_BYTE *)a2 + v33 + 48);
      *(_OWORD *)(v34 + 56) = *(_OWORD *)((char *)a2 + v33 + 56);
      *(_OWORD *)(v34 + 72) = *(_OWORD *)((char *)a2 + v33 + 72);
      *((_WORD *)v34 + 44) = *(_WORD *)((char *)a2 + v33 + 88);
      v38 = *(_QWORD *)((char *)a2 + v33 + 104);
      *((_QWORD *)v34 + 12) = *(_QWORD *)((char *)a2 + v33 + 96);
      *((_QWORD *)v34 + 13) = v38;
      v39 = (_QWORD *)((char *)a2 + v33 + 112);
      v40 = *(_QWORD *)((char *)a2 + v33 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v40 >> 60 == 15)
      {
        *((_OWORD *)v34 + 7) = *(_OWORD *)v39;
      }
      else
      {
        v44 = *v39;
        sub_245261C44(*v39, v40);
        *((_QWORD *)v34 + 14) = v44;
        *((_QWORD *)v34 + 15) = v40;
      }
      v45 = v35[17];
      *((_QWORD *)v34 + 16) = v35[16];
      *((_QWORD *)v34 + 17) = v45;
      v46 = v35[19];
      *((_QWORD *)v34 + 18) = v35[18];
      *((_QWORD *)v34 + 19) = v46;
      *(_QWORD *)((char *)a1 + *(int *)(v49 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v49 + 28));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for ReplicatorMessage.Handshake.Request(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_257453198);
}

uint64_t type metadata accessor for ReplicatorMessage.Handshake.Response(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_2574531A8);
}

uint64_t type metadata accessor for ReplicatorMessage.Handshake.Complete(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_2574531B8);
}

uint64_t sub_24536010C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result != 2)
  {
    if ((_DWORD)result == 1)
    {
      v8 = sub_245387740();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
      v9 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
      if (*(_QWORD *)(a1 + *(int *)(v9 + 20) + 8) >= 3uLL)
        swift_bridgeObjectRelease();
      v10 = a1 + *(int *)(v9 + 24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(v10 + 120);
      if (v11 >> 60 != 15)
        sub_24525CB80(*(_QWORD *)(v10 + 112), v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if ((_DWORD)result)
      return result;
    v3 = sub_245387740();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    v4 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
    if (*(_QWORD *)(a1 + *(int *)(v4 + 20) + 8) >= 3uLL)
      swift_bridgeObjectRelease();
    v5 = a1 + *(int *)(v4 + 24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = *(_QWORD *)(v5 + 120);
    if (v6 >> 60 != 15)
      sub_24525CB80(*(_QWORD *)(v5 + 112), v6);
    goto LABEL_10;
  }
  v7 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  if (*(_QWORD *)(a1 + *(int *)(type metadata accessor for ReplicatorMessage.Handshake.Complete(0) + 20) + 8) >= 3uLL)
LABEL_10:
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2453602E4(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v11 = sub_245387740();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
    v12 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
    v13 = v12[5];
    v14 = (_QWORD *)(a1 + v13);
    v15 = (_QWORD *)(a2 + v13);
    v16 = v15[1];
    if (v16 >= 3)
    {
      *v14 = *v15;
      v14[1] = v16;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v14 = *(_OWORD *)v15;
    }
    *(_QWORD *)(a1 + v12[6]) = *(_QWORD *)(a2 + v12[6]);
    *(_QWORD *)(a1 + v12[7]) = *(_QWORD *)(a2 + v12[7]);
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      v5 = sub_245387740();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      v6 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Response(0);
      v7 = v6[5];
      v8 = (_QWORD *)(a1 + v7);
      v9 = (_QWORD *)(a2 + v7);
      v10 = v9[1];
      if (v10 >= 3)
      {
        *v8 = *v9;
        v8[1] = v10;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v8 = *(_OWORD *)v9;
      }
      v23 = v6[6];
      v24 = a1 + v23;
      v25 = (_QWORD *)(a2 + v23);
      v26 = *(_QWORD *)(a2 + v23 + 8);
      *(_QWORD *)v24 = *(_QWORD *)(a2 + v23);
      *(_QWORD *)(v24 + 8) = v26;
      v27 = *(_QWORD *)(a2 + v23 + 24);
      *(_QWORD *)(v24 + 16) = *(_QWORD *)(a2 + v23 + 16);
      *(_QWORD *)(v24 + 24) = v27;
      *(_OWORD *)(v24 + 32) = *(_OWORD *)(a2 + v23 + 32);
      *(_BYTE *)(v24 + 48) = *(_BYTE *)(a2 + v23 + 48);
      *(_OWORD *)(v24 + 56) = *(_OWORD *)(a2 + v23 + 56);
      *(_OWORD *)(v24 + 72) = *(_OWORD *)(a2 + v23 + 72);
      *(_WORD *)(v24 + 88) = *(_WORD *)(a2 + v23 + 88);
      v28 = *(_QWORD *)(a2 + v23 + 104);
      *(_QWORD *)(v24 + 96) = *(_QWORD *)(a2 + v23 + 96);
      *(_QWORD *)(v24 + 104) = v28;
      v29 = (uint64_t *)(a2 + v23 + 112);
      v30 = *(_QWORD *)(a2 + v23 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v30 >> 60 == 15)
      {
        *(_OWORD *)(v24 + 112) = *(_OWORD *)v29;
      }
      else
      {
        v39 = *v29;
        sub_245261C44(*v29, v30);
        *(_QWORD *)(v24 + 112) = v39;
        *(_QWORD *)(v24 + 120) = v30;
      }
      v40 = v25[17];
      *(_QWORD *)(v24 + 128) = v25[16];
      *(_QWORD *)(v24 + 136) = v40;
      v41 = v25[19];
      *(_QWORD *)(v24 + 144) = v25[18];
      *(_QWORD *)(v24 + 152) = v41;
      *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)(a2 + v6[7]);
      *(_QWORD *)(a1 + v6[8]) = *(_QWORD *)(a2 + v6[8]);
      swift_bridgeObjectRetain();
    }
    else
    {
      v17 = sub_245387740();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
      v18 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Request(0);
      v19 = v18[5];
      v20 = (_QWORD *)(a1 + v19);
      v21 = (_QWORD *)(a2 + v19);
      v22 = v21[1];
      if (v22 >= 3)
      {
        *v20 = *v21;
        v20[1] = v22;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v20 = *(_OWORD *)v21;
      }
      v31 = v18[6];
      v32 = a1 + v31;
      v33 = (_QWORD *)(a2 + v31);
      v34 = *(_QWORD *)(a2 + v31 + 8);
      *(_QWORD *)v32 = *(_QWORD *)(a2 + v31);
      *(_QWORD *)(v32 + 8) = v34;
      v35 = *(_QWORD *)(a2 + v31 + 24);
      *(_QWORD *)(v32 + 16) = *(_QWORD *)(a2 + v31 + 16);
      *(_QWORD *)(v32 + 24) = v35;
      *(_OWORD *)(v32 + 32) = *(_OWORD *)(a2 + v31 + 32);
      *(_BYTE *)(v32 + 48) = *(_BYTE *)(a2 + v31 + 48);
      *(_OWORD *)(v32 + 56) = *(_OWORD *)(a2 + v31 + 56);
      *(_OWORD *)(v32 + 72) = *(_OWORD *)(a2 + v31 + 72);
      *(_WORD *)(v32 + 88) = *(_WORD *)(a2 + v31 + 88);
      v36 = *(_QWORD *)(a2 + v31 + 104);
      *(_QWORD *)(v32 + 96) = *(_QWORD *)(a2 + v31 + 96);
      *(_QWORD *)(v32 + 104) = v36;
      v37 = (uint64_t *)(a2 + v31 + 112);
      v38 = *(_QWORD *)(a2 + v31 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v38 >> 60 == 15)
      {
        *(_OWORD *)(v32 + 112) = *(_OWORD *)v37;
      }
      else
      {
        v42 = *v37;
        sub_245261C44(*v37, v38);
        *(_QWORD *)(v32 + 112) = v42;
        *(_QWORD *)(v32 + 120) = v38;
      }
      v43 = v33[17];
      *(_QWORD *)(v32 + 128) = v33[16];
      *(_QWORD *)(v32 + 136) = v43;
      v44 = v33[19];
      *(_QWORD *)(v32 + 144) = v33[18];
      *(_QWORD *)(v32 + 152) = v44;
      *(_QWORD *)(a1 + v18[7]) = *(_QWORD *)(a2 + v18[7]);
    }
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_245360644(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;

  if (a1 != a2)
  {
    sub_2452B7B5C(a1, type metadata accessor for ReplicatorMessage.Handshake);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v10 = sub_245387740();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
      v12 = v11[5];
      v13 = (_QWORD *)(a1 + v12);
      v14 = (_QWORD *)(a2 + v12);
      if (v14[1] >= 3uLL)
      {
        *v13 = *v14;
        v13[1] = v14[1];
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v13 = *(_OWORD *)v14;
      }
      *(_QWORD *)(a1 + v11[6]) = *(_QWORD *)(a2 + v11[6]);
      *(_QWORD *)(a1 + v11[7]) = *(_QWORD *)(a2 + v11[7]);
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        v5 = sub_245387740();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
        v6 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Response(0);
        v7 = v6[5];
        v8 = (_QWORD *)(a1 + v7);
        v9 = (_QWORD *)(a2 + v7);
        if (v9[1] >= 3uLL)
        {
          *v8 = *v9;
          v8[1] = v9[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v8 = *(_OWORD *)v9;
        }
        v20 = v6[6];
        v21 = a1 + v20;
        v22 = (_QWORD *)(a2 + v20);
        *(_QWORD *)v21 = *(_QWORD *)(a2 + v20);
        *(_QWORD *)(v21 + 8) = *(_QWORD *)(a2 + v20 + 8);
        *(_QWORD *)(v21 + 16) = *(_QWORD *)(a2 + v20 + 16);
        *(_QWORD *)(v21 + 24) = *(_QWORD *)(a2 + v20 + 24);
        *(_OWORD *)(v21 + 32) = *(_OWORD *)(a2 + v20 + 32);
        *(_BYTE *)(v21 + 48) = *(_BYTE *)(a2 + v20 + 48);
        v23 = *(_OWORD *)(a2 + v20 + 56);
        v24 = *(_OWORD *)(a2 + v20 + 72);
        *(_WORD *)(v21 + 88) = *(_WORD *)(a2 + v20 + 88);
        *(_OWORD *)(v21 + 72) = v24;
        *(_OWORD *)(v21 + 56) = v23;
        *(_QWORD *)(v21 + 96) = *(_QWORD *)(a2 + v20 + 96);
        *(_QWORD *)(v21 + 104) = *(_QWORD *)(a2 + v20 + 104);
        v25 = (uint64_t *)(a2 + v20 + 112);
        v26 = *(_QWORD *)(a2 + v20 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v26 >> 60 == 15)
        {
          *(_OWORD *)(v21 + 112) = *(_OWORD *)v25;
        }
        else
        {
          v34 = *v25;
          sub_245261C44(*v25, v26);
          *(_QWORD *)(v21 + 112) = v34;
          *(_QWORD *)(v21 + 120) = v26;
        }
        *(_QWORD *)(v21 + 128) = v22[16];
        *(_QWORD *)(v21 + 136) = v22[17];
        *(_QWORD *)(v21 + 144) = v22[18];
        *(_QWORD *)(v21 + 152) = v22[19];
        *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)(a2 + v6[7]);
        *(_QWORD *)(a1 + v6[8]) = *(_QWORD *)(a2 + v6[8]);
        swift_bridgeObjectRetain();
      }
      else
      {
        v15 = sub_245387740();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        v16 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Request(0);
        v17 = v16[5];
        v18 = (_QWORD *)(a1 + v17);
        v19 = (_QWORD *)(a2 + v17);
        if (v19[1] >= 3uLL)
        {
          *v18 = *v19;
          v18[1] = v19[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v18 = *(_OWORD *)v19;
        }
        v27 = v16[6];
        v28 = a1 + v27;
        v29 = (_QWORD *)(a2 + v27);
        *(_QWORD *)v28 = *(_QWORD *)(a2 + v27);
        *(_QWORD *)(v28 + 8) = *(_QWORD *)(a2 + v27 + 8);
        *(_QWORD *)(v28 + 16) = *(_QWORD *)(a2 + v27 + 16);
        *(_QWORD *)(v28 + 24) = *(_QWORD *)(a2 + v27 + 24);
        *(_OWORD *)(v28 + 32) = *(_OWORD *)(a2 + v27 + 32);
        *(_BYTE *)(v28 + 48) = *(_BYTE *)(a2 + v27 + 48);
        v30 = *(_OWORD *)(a2 + v27 + 56);
        v31 = *(_OWORD *)(a2 + v27 + 72);
        *(_WORD *)(v28 + 88) = *(_WORD *)(a2 + v27 + 88);
        *(_OWORD *)(v28 + 72) = v31;
        *(_OWORD *)(v28 + 56) = v30;
        *(_QWORD *)(v28 + 96) = *(_QWORD *)(a2 + v27 + 96);
        *(_QWORD *)(v28 + 104) = *(_QWORD *)(a2 + v27 + 104);
        v32 = (uint64_t *)(a2 + v27 + 112);
        v33 = *(_QWORD *)(a2 + v27 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v33 >> 60 == 15)
        {
          *(_OWORD *)(v28 + 112) = *(_OWORD *)v32;
        }
        else
        {
          v35 = *v32;
          sub_245261C44(*v32, v33);
          *(_QWORD *)(v28 + 112) = v35;
          *(_QWORD *)(v28 + 120) = v33;
        }
        *(_QWORD *)(v28 + 128) = v29[16];
        *(_QWORD *)(v28 + 136) = v29[17];
        *(_QWORD *)(v28 + 144) = v29[18];
        *(_QWORD *)(v28 + 152) = v29[19];
        *(_QWORD *)(a1 + v16[7]) = *(_QWORD *)(a2 + v16[7]);
      }
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_245360A24(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v16 = sub_245387740();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
    v17 = type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
    *(_OWORD *)(a1 + *(int *)(v17 + 20)) = *(_OWORD *)(a2 + *(int *)(v17 + 20));
    *(_QWORD *)(a1 + *(int *)(v17 + 24)) = *(_QWORD *)(a2 + *(int *)(v17 + 24));
LABEL_6:
    v15 = (int *)(v17 + 28);
    goto LABEL_7;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v18 = sub_245387740();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
    v17 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
    *(_OWORD *)(a1 + *(int *)(v17 + 20)) = *(_OWORD *)(a2 + *(int *)(v17 + 20));
    v19 = *(int *)(v17 + 24);
    v20 = (_OWORD *)(a1 + v19);
    v21 = (_OWORD *)(a2 + v19);
    v22 = v21[7];
    v20[6] = v21[6];
    v20[7] = v22;
    v23 = v21[9];
    v20[8] = v21[8];
    v20[9] = v23;
    v24 = v21[3];
    v20[2] = v21[2];
    v20[3] = v24;
    v25 = v21[5];
    v20[4] = v21[4];
    v20[5] = v25;
    v26 = v21[1];
    *v20 = *v21;
    v20[1] = v26;
    goto LABEL_6;
  }
  v5 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
  v6 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  *(_OWORD *)(a1 + v6[5]) = *(_OWORD *)(a2 + v6[5]);
  v7 = v6[6];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = v9[5];
  v8[4] = v9[4];
  v8[5] = v11;
  v12 = v9[3];
  v8[2] = v9[2];
  v8[3] = v12;
  v13 = v9[9];
  v8[8] = v9[8];
  v8[9] = v13;
  v14 = v9[7];
  v8[6] = v9[6];
  v8[7] = v14;
  *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)(a2 + v6[7]);
  v15 = v6 + 8;
LABEL_7:
  *(_QWORD *)(a1 + *v15) = *(_QWORD *)(a2 + *v15);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_245360BBC(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  if (a1 != a2)
  {
    sub_2452B7B5C(a1, type metadata accessor for ReplicatorMessage.Handshake);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v16 = sub_245387740();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
      v17 = type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
      *(_OWORD *)(a1 + *(int *)(v17 + 20)) = *(_OWORD *)(a2 + *(int *)(v17 + 20));
      *(_QWORD *)(a1 + *(int *)(v17 + 24)) = *(_QWORD *)(a2 + *(int *)(v17 + 24));
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        v5 = sub_245387740();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
        v6 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Response(0);
        *(_OWORD *)(a1 + v6[5]) = *(_OWORD *)(a2 + v6[5]);
        v7 = v6[6];
        v8 = (_OWORD *)(a1 + v7);
        v9 = (_OWORD *)(a2 + v7);
        v10 = v9[1];
        *v8 = *v9;
        v8[1] = v10;
        v11 = v9[5];
        v8[4] = v9[4];
        v8[5] = v11;
        v12 = v9[3];
        v8[2] = v9[2];
        v8[3] = v12;
        v13 = v9[9];
        v8[8] = v9[8];
        v8[9] = v13;
        v14 = v9[7];
        v8[6] = v9[6];
        v8[7] = v14;
        *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)(a2 + v6[7]);
        v15 = v6 + 8;
LABEL_8:
        *(_QWORD *)(a1 + *v15) = *(_QWORD *)(a2 + *v15);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v18 = sub_245387740();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
      v17 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
      *(_OWORD *)(a1 + *(int *)(v17 + 20)) = *(_OWORD *)(a2 + *(int *)(v17 + 20));
      v19 = *(int *)(v17 + 24);
      v20 = (_OWORD *)(a1 + v19);
      v21 = (_OWORD *)(a2 + v19);
      v22 = v21[7];
      v20[6] = v21[6];
      v20[7] = v22;
      v23 = v21[9];
      v20[8] = v21[8];
      v20[9] = v23;
      v24 = v21[3];
      v20[2] = v21[2];
      v20[3] = v24;
      v25 = v21[5];
      v20[4] = v21[4];
      v20[5] = v25;
      v26 = v21[1];
      *v20 = *v21;
      v20[1] = v26;
    }
    v15 = (int *)(v17 + 28);
    goto LABEL_8;
  }
  return a1;
}

uint64_t _s22ExtendedAttributeErrorOwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t _s22ExtendedAttributeErrorOwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_245360D88()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_245360D98()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for ReplicatorMessage.Handshake.Request(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ReplicatorMessage.Handshake.Response(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for ReplicatorMessage.Handshake.Complete(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

_QWORD *sub_245360E34(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_245387740();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = v10[1];
    if (v11 >= 3)
    {
      *v9 = *v10;
      v9[1] = v11;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
    }
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = (_QWORD *)((char *)a2 + v13);
    v16 = *(_QWORD *)((char *)a2 + v13 + 8);
    *(_QWORD *)v14 = *(_QWORD *)((char *)a2 + v13);
    *((_QWORD *)v14 + 1) = v16;
    v17 = *(_QWORD *)((char *)a2 + v13 + 24);
    *((_QWORD *)v14 + 2) = *(_QWORD *)((char *)a2 + v13 + 16);
    *((_QWORD *)v14 + 3) = v17;
    *((_OWORD *)v14 + 2) = *(_OWORD *)((char *)a2 + v13 + 32);
    v14[48] = *((_BYTE *)a2 + v13 + 48);
    *(_OWORD *)(v14 + 56) = *(_OWORD *)((char *)a2 + v13 + 56);
    *(_OWORD *)(v14 + 72) = *(_OWORD *)((char *)a2 + v13 + 72);
    *((_WORD *)v14 + 44) = *(_WORD *)((char *)a2 + v13 + 88);
    v18 = *(_QWORD *)((char *)a2 + v13 + 104);
    *((_QWORD *)v14 + 12) = *(_QWORD *)((char *)a2 + v13 + 96);
    *((_QWORD *)v14 + 13) = v18;
    v19 = (_QWORD *)((char *)a2 + v13 + 112);
    v20 = *(_QWORD *)((char *)a2 + v13 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20 >> 60 == 15)
    {
      *((_OWORD *)v14 + 7) = *(_OWORD *)v19;
    }
    else
    {
      v21 = *v19;
      sub_245261C44(*v19, v20);
      *((_QWORD *)v14 + 14) = v21;
      *((_QWORD *)v14 + 15) = v20;
    }
    v22 = v15[17];
    *((_QWORD *)v14 + 16) = v15[16];
    *((_QWORD *)v14 + 17) = v22;
    v23 = v15[19];
    *((_QWORD *)v14 + 18) = v15[18];
    *((_QWORD *)v14 + 19) = v23;
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_245360FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 120);
  if (v6 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v5 + 112), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24536107C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  if (v10 >= 3)
  {
    *v8 = *v9;
    v8[1] = v10;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = (_QWORD *)(a2 + v11);
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  v15 = *(_QWORD *)(a2 + v11 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(a2 + v11 + 32);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(a2 + v11 + 48);
  *(_OWORD *)(v12 + 56) = *(_OWORD *)(a2 + v11 + 56);
  *(_OWORD *)(v12 + 72) = *(_OWORD *)(a2 + v11 + 72);
  *(_WORD *)(v12 + 88) = *(_WORD *)(a2 + v11 + 88);
  v16 = *(_QWORD *)(a2 + v11 + 104);
  *(_QWORD *)(v12 + 96) = *(_QWORD *)(a2 + v11 + 96);
  *(_QWORD *)(v12 + 104) = v16;
  v17 = (uint64_t *)(a2 + v11 + 112);
  v18 = *(_QWORD *)(a2 + v11 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18 >> 60 == 15)
  {
    *(_OWORD *)(v12 + 112) = *(_OWORD *)v17;
  }
  else
  {
    v19 = *v17;
    sub_245261C44(*v17, v18);
    *(_QWORD *)(v12 + 112) = v19;
    *(_QWORD *)(v12 + 120) = v18;
  }
  v20 = v13[17];
  *(_QWORD *)(v12 + 128) = v13[16];
  *(_QWORD *)(v12 + 136) = v20;
  v21 = v13[19];
  *(_QWORD *)(v12 + 144) = v13[18];
  *(_QWORD *)(v12 + 152) = v21;
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2453611E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 8);
  v11 = *(_QWORD *)(a2 + v7 + 8);
  if (v10 < 3)
  {
    if (v11 >= 3)
    {
      *v8 = *v9;
      v8[1] = v9[1];
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v11 < 3)
  {
    sub_245263F80((uint64_t)v8, (uint64_t *)&unk_257452DB0);
LABEL_6:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(a2 + v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  v15 = *(_OWORD *)(v14 + 56);
  v16 = *(_OWORD *)(v14 + 72);
  *(_WORD *)(v13 + 88) = *(_WORD *)(v14 + 88);
  *(_OWORD *)(v13 + 72) = v16;
  *(_OWORD *)(v13 + 56) = v15;
  *(_QWORD *)(v13 + 96) = *(_QWORD *)(v14 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 104) = *(_QWORD *)(v14 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = (uint64_t *)(v14 + 112);
  v18 = *(_QWORD *)(v14 + 120);
  if (*(_QWORD *)(v13 + 120) >> 60 != 15)
  {
    if (v18 >> 60 != 15)
    {
      v20 = *v17;
      sub_245261C44(*v17, *(_QWORD *)(v14 + 120));
      v21 = *(_QWORD *)(v13 + 112);
      v22 = *(_QWORD *)(v13 + 120);
      *(_QWORD *)(v13 + 112) = v20;
      *(_QWORD *)(v13 + 120) = v18;
      sub_24525CB80(v21, v22);
      goto LABEL_15;
    }
    sub_2452CAE18(v13 + 112);
    goto LABEL_13;
  }
  if (v18 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(v13 + 112) = *(_OWORD *)v17;
    goto LABEL_15;
  }
  v19 = *v17;
  sub_245261C44(*v17, *(_QWORD *)(v14 + 120));
  *(_QWORD *)(v13 + 112) = v19;
  *(_QWORD *)(v13 + 120) = v18;
LABEL_15:
  *(_QWORD *)(v13 + 128) = *(_QWORD *)(v14 + 128);
  *(_QWORD *)(v13 + 136) = *(_QWORD *)(v14 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 144) = *(_QWORD *)(v14 + 144);
  *(_QWORD *)(v13 + 152) = *(_QWORD *)(v14 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_245361444(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = v9[5];
  v8[4] = v9[4];
  v8[5] = v11;
  v12 = v9[3];
  v8[2] = v9[2];
  v8[3] = v12;
  v13 = v9[9];
  v8[8] = v9[8];
  v8[9] = v13;
  v14 = v9[7];
  v8[6] = v9[6];
  v8[7] = v14;
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_2453614DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (*(_QWORD *)(a1 + v7 + 8) < 3uLL)
    goto LABEL_4;
  v10 = *(_QWORD *)(v9 + 8);
  if (v10 < 3)
  {
    sub_245263F80(v8, (uint64_t *)&unk_257452DB0);
LABEL_4:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_6;
  }
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
LABEL_6:
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_OWORD *)(v12 + 56) = *(_OWORD *)(v13 + 56);
  *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
  *(_WORD *)(v12 + 88) = *(_WORD *)(v13 + 88);
  *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  swift_bridgeObjectRelease();
  v16 = (_QWORD *)(v13 + 112);
  v17 = *(_QWORD *)(v12 + 120);
  if (v17 >> 60 != 15)
  {
    v18 = *(_QWORD *)(v13 + 120);
    if (v18 >> 60 != 15)
    {
      v19 = *(_QWORD *)(v12 + 112);
      *(_QWORD *)(v12 + 112) = *v16;
      *(_QWORD *)(v12 + 120) = v18;
      sub_24525CB80(v19, v17);
      goto LABEL_11;
    }
    sub_2452CAE18(v12 + 112);
  }
  *(_OWORD *)(v12 + 112) = *(_OWORD *)v16;
LABEL_11:
  v20 = *(_QWORD *)(v13 + 136);
  *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
  *(_QWORD *)(v12 + 136) = v20;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v13 + 152);
  *(_QWORD *)(v12 + 144) = *(_QWORD *)(v13 + 144);
  *(_QWORD *)(v12 + 152) = v21;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24536167C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24536168C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24536169C()
{
  return sub_245362634();
}

_QWORD *sub_2453616A8(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_245387740();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = v10[1];
    if (v11 >= 3)
    {
      *v9 = *v10;
      v9[1] = v11;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
    }
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = (_QWORD *)((char *)a2 + v13);
    v16 = *(_QWORD *)((char *)a2 + v13 + 8);
    *(_QWORD *)v14 = *(_QWORD *)((char *)a2 + v13);
    *((_QWORD *)v14 + 1) = v16;
    v17 = *(_QWORD *)((char *)a2 + v13 + 24);
    *((_QWORD *)v14 + 2) = *(_QWORD *)((char *)a2 + v13 + 16);
    *((_QWORD *)v14 + 3) = v17;
    *((_OWORD *)v14 + 2) = *(_OWORD *)((char *)a2 + v13 + 32);
    v14[48] = *((_BYTE *)a2 + v13 + 48);
    *(_OWORD *)(v14 + 56) = *(_OWORD *)((char *)a2 + v13 + 56);
    *(_OWORD *)(v14 + 72) = *(_OWORD *)((char *)a2 + v13 + 72);
    *((_WORD *)v14 + 44) = *(_WORD *)((char *)a2 + v13 + 88);
    v18 = *(_QWORD *)((char *)a2 + v13 + 104);
    *((_QWORD *)v14 + 12) = *(_QWORD *)((char *)a2 + v13 + 96);
    *((_QWORD *)v14 + 13) = v18;
    v19 = (_QWORD *)((char *)a2 + v13 + 112);
    v20 = *(_QWORD *)((char *)a2 + v13 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20 >> 60 == 15)
    {
      *((_OWORD *)v14 + 7) = *(_OWORD *)v19;
    }
    else
    {
      v21 = *v19;
      sub_245261C44(*v19, v20);
      *((_QWORD *)v14 + 14) = v21;
      *((_QWORD *)v14 + 15) = v20;
    }
    v22 = v15[17];
    *((_QWORD *)v14 + 16) = v15[16];
    *((_QWORD *)v14 + 17) = v22;
    v23 = v15[19];
    *((_QWORD *)v14 + 18) = v15[18];
    *((_QWORD *)v14 + 19) = v23;
    v24 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *(_QWORD *)((char *)a1 + v24) = *(_QWORD *)((char *)a2 + v24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24536184C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 120);
  if (v6 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v5 + 112), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24536190C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  if (v10 >= 3)
  {
    *v8 = *v9;
    v8[1] = v10;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = (_QWORD *)(a2 + v11);
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  v15 = *(_QWORD *)(a2 + v11 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(a2 + v11 + 32);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(a2 + v11 + 48);
  *(_OWORD *)(v12 + 56) = *(_OWORD *)(a2 + v11 + 56);
  *(_OWORD *)(v12 + 72) = *(_OWORD *)(a2 + v11 + 72);
  *(_WORD *)(v12 + 88) = *(_WORD *)(a2 + v11 + 88);
  v16 = *(_QWORD *)(a2 + v11 + 104);
  *(_QWORD *)(v12 + 96) = *(_QWORD *)(a2 + v11 + 96);
  *(_QWORD *)(v12 + 104) = v16;
  v17 = (uint64_t *)(a2 + v11 + 112);
  v18 = *(_QWORD *)(a2 + v11 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18 >> 60 == 15)
  {
    *(_OWORD *)(v12 + 112) = *(_OWORD *)v17;
  }
  else
  {
    v19 = *v17;
    sub_245261C44(*v17, v18);
    *(_QWORD *)(v12 + 112) = v19;
    *(_QWORD *)(v12 + 120) = v18;
  }
  v20 = v13[17];
  *(_QWORD *)(v12 + 128) = v13[16];
  *(_QWORD *)(v12 + 136) = v20;
  v21 = v13[19];
  *(_QWORD *)(v12 + 144) = v13[18];
  *(_QWORD *)(v12 + 152) = v21;
  v22 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_245361A84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 8);
  v11 = *(_QWORD *)(a2 + v7 + 8);
  if (v10 < 3)
  {
    if (v11 >= 3)
    {
      *v8 = *v9;
      v8[1] = v9[1];
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v11 < 3)
  {
    sub_245263F80((uint64_t)v8, (uint64_t *)&unk_257452DB0);
LABEL_6:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(a2 + v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  v15 = *(_OWORD *)(v14 + 56);
  v16 = *(_OWORD *)(v14 + 72);
  *(_WORD *)(v13 + 88) = *(_WORD *)(v14 + 88);
  *(_OWORD *)(v13 + 72) = v16;
  *(_OWORD *)(v13 + 56) = v15;
  *(_QWORD *)(v13 + 96) = *(_QWORD *)(v14 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 104) = *(_QWORD *)(v14 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = (uint64_t *)(v14 + 112);
  v18 = *(_QWORD *)(v14 + 120);
  if (*(_QWORD *)(v13 + 120) >> 60 != 15)
  {
    if (v18 >> 60 != 15)
    {
      v20 = *v17;
      sub_245261C44(*v17, *(_QWORD *)(v14 + 120));
      v21 = *(_QWORD *)(v13 + 112);
      v22 = *(_QWORD *)(v13 + 120);
      *(_QWORD *)(v13 + 112) = v20;
      *(_QWORD *)(v13 + 120) = v18;
      sub_24525CB80(v21, v22);
      goto LABEL_15;
    }
    sub_2452CAE18(v13 + 112);
    goto LABEL_13;
  }
  if (v18 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(v13 + 112) = *(_OWORD *)v17;
    goto LABEL_15;
  }
  v19 = *v17;
  sub_245261C44(*v17, *(_QWORD *)(v14 + 120));
  *(_QWORD *)(v13 + 112) = v19;
  *(_QWORD *)(v13 + 120) = v18;
LABEL_15:
  *(_QWORD *)(v13 + 128) = *(_QWORD *)(v14 + 128);
  *(_QWORD *)(v13 + 136) = *(_QWORD *)(v14 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 144) = *(_QWORD *)(v14 + 144);
  *(_QWORD *)(v13 + 152) = *(_QWORD *)(v14 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_245361D00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = v9[5];
  v8[4] = v9[4];
  v8[5] = v11;
  v12 = v9[3];
  v8[2] = v9[2];
  v8[3] = v12;
  v13 = v9[9];
  v8[8] = v9[8];
  v8[9] = v13;
  v14 = v9[7];
  v8[6] = v9[6];
  v8[7] = v14;
  v15 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  return a1;
}

uint64_t sub_245361DA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (*(_QWORD *)(a1 + v7 + 8) < 3uLL)
    goto LABEL_4;
  v10 = *(_QWORD *)(v9 + 8);
  if (v10 < 3)
  {
    sub_245263F80(v8, (uint64_t *)&unk_257452DB0);
LABEL_4:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_6;
  }
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
LABEL_6:
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_OWORD *)(v12 + 56) = *(_OWORD *)(v13 + 56);
  *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
  *(_WORD *)(v12 + 88) = *(_WORD *)(v13 + 88);
  *(_QWORD *)(v12 + 96) = *(_QWORD *)(v13 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v13 + 104);
  swift_bridgeObjectRelease();
  v16 = (_QWORD *)(v13 + 112);
  v17 = *(_QWORD *)(v12 + 120);
  if (v17 >> 60 != 15)
  {
    v18 = *(_QWORD *)(v13 + 120);
    if (v18 >> 60 != 15)
    {
      v19 = *(_QWORD *)(v12 + 112);
      *(_QWORD *)(v12 + 112) = *v16;
      *(_QWORD *)(v12 + 120) = v18;
      sub_24525CB80(v19, v17);
      goto LABEL_11;
    }
    sub_2452CAE18(v12 + 112);
  }
  *(_OWORD *)(v12 + 112) = *(_OWORD *)v16;
LABEL_11:
  v20 = *(_QWORD *)(v13 + 136);
  *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
  *(_QWORD *)(v12 + 136) = v20;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v13 + 152);
  *(_QWORD *)(v12 + 144) = *(_QWORD *)(v13 + 144);
  *(_QWORD *)(v12 + 152) = v21;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_245361F54()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_245387740();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_245361FE4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_245387740();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_245362070()
{
  uint64_t result;
  unint64_t v1;

  result = sub_245387740();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2453620FC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_245387740();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    if (v11 >= 3)
    {
      *v9 = *v10;
      v9[1] = v11;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
    }
    v13 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2453621C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_245362230(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  if (v10 >= 3)
  {
    *v8 = *v9;
    v8[1] = v10;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2453622D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 8);
  v11 = *(_QWORD *)(a2 + v7 + 8);
  if (v10 >= 3)
  {
    if (v11 >= 3)
    {
      *v8 = *v9;
      v8[1] = v9[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_245263F80((uint64_t)v8, (uint64_t *)&unk_257452DB0);
    goto LABEL_6;
  }
  if (v11 < 3)
  {
LABEL_6:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
LABEL_8:
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2453623DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_24536244C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  if (*(_QWORD *)(a1 + v7 + 8) >= 3uLL)
  {
    v10 = v9[1];
    if (v10 >= 3)
    {
      *v8 = *v9;
      v8[1] = v10;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_245263F80((uint64_t)v8, (uint64_t *)&unk_257452DB0);
  }
  *(_OWORD *)v8 = *(_OWORD *)v9;
LABEL_6:
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_245362518()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_245362524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_245387740();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2453625A0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2453625AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_245387740();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_245362624()
{
  return sub_245362634();
}

uint64_t sub_245362634()
{
  uint64_t result;
  unint64_t v1;

  result = sub_245387740();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Versions.V8.CodingKeys()
{
  return &type metadata for ReplicatorMessage.Sync.SyncRecord.Versions.V8.CodingKeys;
}

char *sub_2453626C8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  int *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(char *, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  char *v109;
  char *v110;
  int *__dst;
  char *__dsta;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v15 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v16 = sub_245387740();
      v17 = *(_QWORD *)(v16 - 8);
      v18 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
      v18(a1, a2, v16);
      v19 = *(int *)(type metadata accessor for ReplicatorMessage.Sync(0) + 20);
      v20 = &a1[v19];
      v21 = &a2[v19];
      v22 = *(_QWORD *)&a2[v19 + 8];
      *(_QWORD *)v20 = *(_QWORD *)&a2[v19];
      *((_QWORD *)v20 + 1) = v22;
      v23 = *(_QWORD *)&a2[v19 + 24];
      *((_QWORD *)v20 + 2) = *(_QWORD *)&a2[v19 + 16];
      *((_QWORD *)v20 + 3) = v23;
      v24 = *(_QWORD *)&a2[v19 + 40];
      *((_QWORD *)v20 + 4) = *(_QWORD *)&a2[v19 + 32];
      *((_QWORD *)v20 + 5) = v24;
      v110 = &a1[v19];
      __dst = (int *)type metadata accessor for Record.ID(0);
      v25 = __dst[6];
      v26 = &v20[v25];
      v109 = v21;
      v27 = &v21[v25];
      v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v28(v27, 1, v16))
      {
        v29 = type metadata accessor for Record.ID.Ownership(0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        v18(v26, v27, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v26, 0, 1, v16);
      }
      v30 = __dst[7];
      v31 = &v110[v30];
      v32 = &v109[v30];
      v33 = *((_QWORD *)v32 + 1);
      *(_QWORD *)v31 = *(_QWORD *)v32;
      *((_QWORD *)v31 + 1) = v33;
      v34 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord(0);
      v35 = *(int *)(v34 + 20);
      v36 = &v110[v35];
      v37 = &v109[v35];
      swift_bridgeObjectRetain();
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452350);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        v40 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value(0);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v105 = v39;
        v106 = v38;
        v107 = v34;
        v108 = v18;
        v41 = *((_QWORD *)v37 + 1);
        *(_QWORD *)v36 = *(_QWORD *)v37;
        *((_QWORD *)v36 + 1) = v41;
        v42 = *((_QWORD *)v37 + 3);
        *((_QWORD *)v36 + 2) = *((_QWORD *)v37 + 2);
        *((_QWORD *)v36 + 3) = v42;
        v43 = *((_QWORD *)v37 + 5);
        *((_QWORD *)v36 + 4) = *((_QWORD *)v37 + 4);
        *((_QWORD *)v36 + 5) = v43;
        v44 = __dst[6];
        v45 = &v36[v44];
        v46 = &v37[v44];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v28(v46, 1, v16))
        {
          v47 = type metadata accessor for Record.ID.Ownership(0);
          memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          v108(v45, v46, v16);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v45, 0, 1, v16);
        }
        v82 = __dst[7];
        v83 = &v36[v82];
        v84 = &v37[v82];
        v85 = *((_QWORD *)v84 + 1);
        *(_QWORD *)v83 = *(_QWORD *)v84;
        *((_QWORD *)v83 + 1) = v85;
        v86 = (int *)type metadata accessor for RecordMetadata();
        v87 = v86[5];
        v88 = &v36[v87];
        v89 = &v37[v87];
        swift_bridgeObjectRetain();
        v108(v88, v89, v16);
        *(_QWORD *)&v36[v86[6]] = *(_QWORD *)&v37[v86[6]];
        v90 = v86[7];
        __dsta = &v36[v90];
        v91 = &v37[v90];
        v92 = sub_2453876EC();
        v93 = *(_QWORD *)(v92 - 8);
        v94 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48);
        swift_bridgeObjectRetain();
        if (v94(v91, 1, v92))
        {
          v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
          memcpy(__dsta, v91, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v93 + 16))(__dsta, v91, v92);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(__dsta, 0, 1, v92);
        }
        v96 = *(int *)(v106 + 48);
        v97 = (uint64_t *)&v36[v96];
        v98 = (uint64_t *)&v37[v96];
        v99 = *v98;
        v100 = v98[1];
        sub_245261C44(*v98, v100);
        *v97 = v99;
        v97[1] = v100;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v36, 0, 1, v106);
        v34 = v107;
      }
      v101 = *(int *)(v34 + 24);
      v102 = &v110[v101];
      v103 = &v109[v101];
      *(_QWORD *)v102 = *(_QWORD *)v103;
      v102[8] = v103[8];
LABEL_41:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      type metadata accessor for ReplicatorMessage.Handshake(0);
      v8 = swift_getEnumCaseMultiPayload();
      if (v8 == 2)
      {
        v48 = sub_245387740();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(a1, a2, v48);
        v49 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
        v50 = v49[5];
        v51 = &a1[v50];
        v52 = &a2[v50];
        v53 = *((_QWORD *)v52 + 1);
        if (v53 >= 3)
        {
          *(_QWORD *)v51 = *(_QWORD *)v52;
          *((_QWORD *)v51 + 1) = v53;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v51 = *(_OWORD *)v52;
        }
        *(_QWORD *)&a1[v49[6]] = *(_QWORD *)&a2[v49[6]];
        *(_QWORD *)&a1[v49[7]] = *(_QWORD *)&a2[v49[7]];
      }
      else
      {
        if (v8 == 1)
        {
          v9 = sub_245387740();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
          v10 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Response(0);
          v11 = v10[5];
          v12 = &a1[v11];
          v13 = &a2[v11];
          v14 = *((_QWORD *)v13 + 1);
          if (v14 >= 3)
          {
            *(_QWORD *)v12 = *(_QWORD *)v13;
            *((_QWORD *)v12 + 1) = v14;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v12 = *(_OWORD *)v13;
          }
          v60 = v10[6];
          v61 = &a1[v60];
          v62 = &a2[v60];
          v63 = *(_QWORD *)&a2[v60 + 8];
          *(_QWORD *)v61 = *(_QWORD *)&a2[v60];
          *((_QWORD *)v61 + 1) = v63;
          v64 = *(_QWORD *)&a2[v60 + 24];
          *((_QWORD *)v61 + 2) = *(_QWORD *)&a2[v60 + 16];
          *((_QWORD *)v61 + 3) = v64;
          *((_OWORD *)v61 + 2) = *(_OWORD *)&a2[v60 + 32];
          v61[48] = a2[v60 + 48];
          *(_OWORD *)(v61 + 56) = *(_OWORD *)&a2[v60 + 56];
          *(_OWORD *)(v61 + 72) = *(_OWORD *)&a2[v60 + 72];
          *((_WORD *)v61 + 44) = *(_WORD *)&a2[v60 + 88];
          v65 = *(_QWORD *)&a2[v60 + 104];
          *((_QWORD *)v61 + 12) = *(_QWORD *)&a2[v60 + 96];
          *((_QWORD *)v61 + 13) = v65;
          v66 = (uint64_t *)&a2[v60 + 112];
          v67 = *(_QWORD *)&a2[v60 + 120];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v67 >> 60 == 15)
          {
            *((_OWORD *)v61 + 7) = *(_OWORD *)v66;
          }
          else
          {
            v76 = *v66;
            sub_245261C44(*v66, v67);
            *((_QWORD *)v61 + 14) = v76;
            *((_QWORD *)v61 + 15) = v67;
          }
          v77 = *((_QWORD *)v62 + 17);
          *((_QWORD *)v61 + 16) = *((_QWORD *)v62 + 16);
          *((_QWORD *)v61 + 17) = v77;
          v78 = *((_QWORD *)v62 + 19);
          *((_QWORD *)v61 + 18) = *((_QWORD *)v62 + 18);
          *((_QWORD *)v61 + 19) = v78;
          *(_QWORD *)&a1[v10[7]] = *(_QWORD *)&a2[v10[7]];
          *(_QWORD *)&a1[v10[8]] = *(_QWORD *)&a2[v10[8]];
          swift_bridgeObjectRetain();
        }
        else
        {
          v54 = sub_245387740();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(a1, a2, v54);
          v55 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Request(0);
          v56 = v55[5];
          v57 = &a1[v56];
          v58 = &a2[v56];
          v59 = *((_QWORD *)v58 + 1);
          if (v59 >= 3)
          {
            *(_QWORD *)v57 = *(_QWORD *)v58;
            *((_QWORD *)v57 + 1) = v59;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v57 = *(_OWORD *)v58;
          }
          v68 = v55[6];
          v69 = &a1[v68];
          v70 = &a2[v68];
          v71 = *(_QWORD *)&a2[v68 + 8];
          *(_QWORD *)v69 = *(_QWORD *)&a2[v68];
          *((_QWORD *)v69 + 1) = v71;
          v72 = *(_QWORD *)&a2[v68 + 24];
          *((_QWORD *)v69 + 2) = *(_QWORD *)&a2[v68 + 16];
          *((_QWORD *)v69 + 3) = v72;
          *((_OWORD *)v69 + 2) = *(_OWORD *)&a2[v68 + 32];
          v69[48] = a2[v68 + 48];
          *(_OWORD *)(v69 + 56) = *(_OWORD *)&a2[v68 + 56];
          *(_OWORD *)(v69 + 72) = *(_OWORD *)&a2[v68 + 72];
          *((_WORD *)v69 + 44) = *(_WORD *)&a2[v68 + 88];
          v73 = *(_QWORD *)&a2[v68 + 104];
          *((_QWORD *)v69 + 12) = *(_QWORD *)&a2[v68 + 96];
          *((_QWORD *)v69 + 13) = v73;
          v74 = (uint64_t *)&a2[v68 + 112];
          v75 = *(_QWORD *)&a2[v68 + 120];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v75 >> 60 == 15)
          {
            *((_OWORD *)v69 + 7) = *(_OWORD *)v74;
          }
          else
          {
            v79 = *v74;
            sub_245261C44(*v74, v75);
            *((_QWORD *)v69 + 14) = v79;
            *((_QWORD *)v69 + 15) = v75;
          }
          v80 = *((_QWORD *)v70 + 17);
          *((_QWORD *)v69 + 16) = *((_QWORD *)v70 + 16);
          *((_QWORD *)v69 + 17) = v80;
          v81 = *((_QWORD *)v70 + 19);
          *((_QWORD *)v69 + 18) = *((_QWORD *)v70 + 18);
          *((_QWORD *)v69 + 19) = v81;
          *(_QWORD *)&a1[v55[7]] = *(_QWORD *)&a2[v55[7]];
        }
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      goto LABEL_41;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_245362E1C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v7 = sub_245387740();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v9(a1, v7);
    v10 = a1 + *(int *)(type metadata accessor for ReplicatorMessage.Sync(0) + 20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 = type metadata accessor for Record.ID(0);
    v12 = v10 + *(int *)(v11 + 24);
    v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (!v13(v12, 1, v7))
      v9(v12, v7);
    swift_bridgeObjectRelease();
    v14 = v10 + *(int *)(type metadata accessor for ReplicatorMessage.Sync.SyncRecord(0) + 20);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452350);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15);
    if (!(_DWORD)result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = v14 + *(int *)(v11 + 24);
      if (!v13(v16, 1, v7))
        v9(v16, v7);
      swift_bridgeObjectRelease();
      v17 = type metadata accessor for RecordMetadata();
      v9(v14 + *(int *)(v17 + 20), v7);
      swift_bridgeObjectRelease();
      v18 = v14 + *(int *)(v17 + 28);
      v19 = sub_2453876EC();
      v20 = *(_QWORD *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      return sub_24525CB80(*(_QWORD *)(v14 + *(int *)(v15 + 48)), *(_QWORD *)(v14 + *(int *)(v15 + 48) + 8));
    }
  }
  else if (!(_DWORD)result)
  {
    type metadata accessor for ReplicatorMessage.Handshake(0);
    result = swift_getEnumCaseMultiPayload();
    switch((_DWORD)result)
    {
      case 2:
        v21 = sub_245387740();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(a1, v21);
        if (*(_QWORD *)(a1 + *(int *)(type metadata accessor for ReplicatorMessage.Handshake.Complete(0) + 20) + 8) < 3uLL)
        {
LABEL_22:
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
LABEL_21:
        swift_bridgeObjectRelease();
        goto LABEL_22;
      case 1:
        v22 = sub_245387740();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(a1, v22);
        v23 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
        if (*(_QWORD *)(a1 + *(int *)(v23 + 20) + 8) >= 3uLL)
          swift_bridgeObjectRelease();
        v24 = a1 + *(int *)(v23 + 24);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v25 = *(_QWORD *)(v24 + 120);
        if (v25 >> 60 != 15)
          sub_24525CB80(*(_QWORD *)(v24 + 112), v25);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      case 0:
        v3 = sub_245387740();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
        v4 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
        if (*(_QWORD *)(a1 + *(int *)(v4 + 20) + 8) >= 3uLL)
          swift_bridgeObjectRelease();
        v5 = a1 + *(int *)(v4 + 24);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v6 = *(_QWORD *)(v5 + 120);
        if (v6 >> 60 != 15)
          sub_24525CB80(*(_QWORD *)(v5 + 112), v6);
        goto LABEL_21;
    }
  }
  return result;
}

char *sub_2453631D0(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int (*v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(char *, char *, uint64_t);
  char *v106;
  char *v107;
  char *v108;
  int *__dst;
  char *__dsta;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v14 = sub_245387740();
    v15 = *(_QWORD *)(v14 - 8);
    v105 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
    v105(a1, a2, v14);
    v16 = *(int *)(type metadata accessor for ReplicatorMessage.Sync(0) + 20);
    v17 = &a1[v16];
    v18 = &a2[v16];
    v19 = *(_QWORD *)&a2[v16 + 8];
    *(_QWORD *)v17 = *(_QWORD *)&a2[v16];
    *((_QWORD *)v17 + 1) = v19;
    v20 = *(_QWORD *)&a2[v16 + 24];
    *((_QWORD *)v17 + 2) = *(_QWORD *)&a2[v16 + 16];
    *((_QWORD *)v17 + 3) = v20;
    v21 = *(_QWORD *)&a2[v16 + 40];
    *((_QWORD *)v17 + 4) = *(_QWORD *)&a2[v16 + 32];
    *((_QWORD *)v17 + 5) = v21;
    __dst = (int *)type metadata accessor for Record.ID(0);
    v22 = __dst[6];
    v23 = &v17[v22];
    v106 = v18;
    v24 = &v18[v22];
    v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v104 = v15;
    if (v25(v24, 1, v14))
    {
      v26 = type metadata accessor for Record.ID.Ownership(0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v105(v23, v24, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
    }
    v27 = __dst[7];
    v28 = &v17[v27];
    v29 = &v106[v27];
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    v31 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord(0);
    v32 = *(int *)(v31 + 20);
    v33 = &v17[v32];
    v34 = &v106[v32];
    swift_bridgeObjectRetain();
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452350);
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      v37 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value(0);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      v102 = v36;
      v103 = v31;
      v108 = a1;
      v38 = *((_QWORD *)v34 + 1);
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *((_QWORD *)v33 + 1) = v38;
      v39 = *((_QWORD *)v34 + 3);
      *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
      *((_QWORD *)v33 + 3) = v39;
      v40 = *((_QWORD *)v34 + 5);
      *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
      *((_QWORD *)v33 + 5) = v40;
      v41 = __dst[6];
      v42 = &v33[v41];
      v43 = &v34[v41];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v25(v43, 1, v14))
      {
        v44 = type metadata accessor for Record.ID.Ownership(0);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        v105(v42, v43, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v42, 0, 1, v14);
      }
      v79 = __dst[7];
      v80 = &v33[v79];
      v81 = &v34[v79];
      v82 = *((_QWORD *)v81 + 1);
      *(_QWORD *)v80 = *(_QWORD *)v81;
      *((_QWORD *)v80 + 1) = v82;
      v83 = (int *)type metadata accessor for RecordMetadata();
      v84 = v83[5];
      v85 = &v33[v84];
      v86 = &v34[v84];
      swift_bridgeObjectRetain();
      v105(v85, v86, v14);
      *(_QWORD *)&v33[v83[6]] = *(_QWORD *)&v34[v83[6]];
      v87 = v83[7];
      __dsta = &v33[v87];
      v88 = &v34[v87];
      v89 = sub_2453876EC();
      v90 = *(_QWORD *)(v89 - 8);
      v91 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48);
      swift_bridgeObjectRetain();
      if (v91(v88, 1, v89))
      {
        v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
        memcpy(__dsta, v88, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 16))(__dsta, v88, v89);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(__dsta, 0, 1, v89);
      }
      v93 = *(int *)(v35 + 48);
      v94 = (uint64_t *)&v33[v93];
      v95 = (uint64_t *)&v34[v93];
      v96 = *v95;
      v97 = v95[1];
      sub_245261C44(*v95, v97);
      *v94 = v96;
      v94[1] = v97;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v33, 0, 1, v35);
      a1 = v108;
      v31 = v103;
    }
    v98 = *(int *)(v31 + 24);
    v99 = &v17[v98];
    v100 = &v106[v98];
    *(_QWORD *)v99 = *(_QWORD *)v100;
    v99[8] = v100[8];
LABEL_39:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    type metadata accessor for ReplicatorMessage.Handshake(0);
    v7 = swift_getEnumCaseMultiPayload();
    if (v7 == 2)
    {
      v45 = sub_245387740();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(a1, a2, v45);
      v46 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
      v47 = v46[5];
      v48 = &a1[v47];
      v49 = &a2[v47];
      v50 = *((_QWORD *)v49 + 1);
      if (v50 >= 3)
      {
        *(_QWORD *)v48 = *(_QWORD *)v49;
        *((_QWORD *)v48 + 1) = v50;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v48 = *(_OWORD *)v49;
      }
      *(_QWORD *)&a1[v46[6]] = *(_QWORD *)&a2[v46[6]];
      *(_QWORD *)&a1[v46[7]] = *(_QWORD *)&a2[v46[7]];
    }
    else
    {
      v107 = a1;
      if (v7 == 1)
      {
        v8 = sub_245387740();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        v9 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Response(0);
        v10 = v9[5];
        v11 = &a1[v10];
        v12 = &a2[v10];
        v13 = *((_QWORD *)v12 + 1);
        if (v13 >= 3)
        {
          *(_QWORD *)v11 = *(_QWORD *)v12;
          *((_QWORD *)v11 + 1) = v13;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v11 = *(_OWORD *)v12;
        }
        v57 = v9[6];
        v58 = &a1[v57];
        v59 = &a2[v57];
        v60 = *(_QWORD *)&a2[v57 + 8];
        *(_QWORD *)v58 = *(_QWORD *)&a2[v57];
        *((_QWORD *)v58 + 1) = v60;
        v61 = *(_QWORD *)&a2[v57 + 24];
        *((_QWORD *)v58 + 2) = *(_QWORD *)&a2[v57 + 16];
        *((_QWORD *)v58 + 3) = v61;
        *((_OWORD *)v58 + 2) = *(_OWORD *)&a2[v57 + 32];
        v58[48] = a2[v57 + 48];
        *(_OWORD *)(v58 + 56) = *(_OWORD *)&a2[v57 + 56];
        *(_OWORD *)(v58 + 72) = *(_OWORD *)&a2[v57 + 72];
        *((_WORD *)v58 + 44) = *(_WORD *)&a2[v57 + 88];
        v62 = *(_QWORD *)&a2[v57 + 104];
        *((_QWORD *)v58 + 12) = *(_QWORD *)&a2[v57 + 96];
        *((_QWORD *)v58 + 13) = v62;
        v63 = (uint64_t *)&a2[v57 + 112];
        v64 = *(_QWORD *)&a2[v57 + 120];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v64 >> 60 == 15)
        {
          *((_OWORD *)v58 + 7) = *(_OWORD *)v63;
        }
        else
        {
          v73 = *v63;
          sub_245261C44(*v63, v64);
          *((_QWORD *)v58 + 14) = v73;
          *((_QWORD *)v58 + 15) = v64;
        }
        v74 = *((_QWORD *)v59 + 17);
        *((_QWORD *)v58 + 16) = *((_QWORD *)v59 + 16);
        *((_QWORD *)v58 + 17) = v74;
        v75 = *((_QWORD *)v59 + 19);
        *((_QWORD *)v58 + 18) = *((_QWORD *)v59 + 18);
        *((_QWORD *)v58 + 19) = v75;
        a1 = v107;
        *(_QWORD *)&v107[v9[7]] = *(_QWORD *)&a2[v9[7]];
        *(_QWORD *)&v107[v9[8]] = *(_QWORD *)&a2[v9[8]];
        swift_bridgeObjectRetain();
      }
      else
      {
        v51 = sub_245387740();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(a1, a2, v51);
        v52 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Request(0);
        v53 = v52[5];
        v54 = &a1[v53];
        v55 = &a2[v53];
        v56 = *((_QWORD *)v55 + 1);
        if (v56 >= 3)
        {
          *(_QWORD *)v54 = *(_QWORD *)v55;
          *((_QWORD *)v54 + 1) = v56;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v54 = *(_OWORD *)v55;
        }
        v65 = v52[6];
        v66 = &a1[v65];
        v67 = &a2[v65];
        v68 = *(_QWORD *)&a2[v65 + 8];
        *(_QWORD *)v66 = *(_QWORD *)&a2[v65];
        *((_QWORD *)v66 + 1) = v68;
        v69 = *(_QWORD *)&a2[v65 + 24];
        *((_QWORD *)v66 + 2) = *(_QWORD *)&a2[v65 + 16];
        *((_QWORD *)v66 + 3) = v69;
        *((_OWORD *)v66 + 2) = *(_OWORD *)&a2[v65 + 32];
        v66[48] = a2[v65 + 48];
        *(_OWORD *)(v66 + 56) = *(_OWORD *)&a2[v65 + 56];
        *(_OWORD *)(v66 + 72) = *(_OWORD *)&a2[v65 + 72];
        *((_WORD *)v66 + 44) = *(_WORD *)&a2[v65 + 88];
        v70 = *(_QWORD *)&a2[v65 + 104];
        *((_QWORD *)v66 + 12) = *(_QWORD *)&a2[v65 + 96];
        *((_QWORD *)v66 + 13) = v70;
        v71 = (uint64_t *)&a2[v65 + 112];
        v72 = *(_QWORD *)&a2[v65 + 120];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v72 >> 60 == 15)
        {
          *((_OWORD *)v66 + 7) = *(_OWORD *)v71;
        }
        else
        {
          v76 = *v71;
          sub_245261C44(*v71, v72);
          *((_QWORD *)v66 + 14) = v76;
          *((_QWORD *)v66 + 15) = v72;
        }
        v77 = *((_QWORD *)v67 + 17);
        *((_QWORD *)v66 + 16) = *((_QWORD *)v67 + 16);
        *((_QWORD *)v66 + 17) = v77;
        v78 = *((_QWORD *)v67 + 19);
        *((_QWORD *)v66 + 18) = *((_QWORD *)v67 + 18);
        *((_QWORD *)v66 + 19) = v78;
        a1 = v107;
        *(_QWORD *)&v107[v52[7]] = *(_QWORD *)&a2[v52[7]];
      }
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    goto LABEL_39;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_245363908(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 v51;
  __int128 v52;
  uint64_t *v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  __int128 v58;
  __int128 v59;
  uint64_t *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  int *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(char *, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  char *v91;
  char *v92;
  int *__dst;
  char *__dsta;

  if (a1 != a2)
  {
    sub_2452B7B5C((uint64_t)a1, type metadata accessor for ReplicatorMessage);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v13 = sub_245387740();
      v14 = *(_QWORD *)(v13 - 8);
      v15 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
      v15(a1, a2, v13);
      v16 = *(int *)(type metadata accessor for ReplicatorMessage.Sync(0) + 20);
      v17 = &a1[v16];
      v18 = &a2[v16];
      *(_QWORD *)v17 = *(_QWORD *)&a2[v16];
      *((_QWORD *)v17 + 1) = *(_QWORD *)&a2[v16 + 8];
      *((_QWORD *)v17 + 2) = *(_QWORD *)&a2[v16 + 16];
      *((_QWORD *)v17 + 3) = *(_QWORD *)&a2[v16 + 24];
      *((_QWORD *)v17 + 4) = *(_QWORD *)&a2[v16 + 32];
      *((_QWORD *)v17 + 5) = *(_QWORD *)&a2[v16 + 40];
      v92 = &a1[v16];
      __dst = (int *)type metadata accessor for Record.ID(0);
      v19 = __dst[6];
      v20 = &v17[v19];
      v91 = v18;
      v21 = &v18[v19];
      v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v22(v21, 1, v13))
      {
        v23 = type metadata accessor for Record.ID.Ownership(0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v15(v20, v21, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      }
      v24 = __dst[7];
      v25 = &v92[v24];
      v26 = &v91[v24];
      *(_QWORD *)v25 = *(_QWORD *)v26;
      *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
      v27 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord(0);
      v28 = *(int *)(v27 + 20);
      v29 = &v92[v28];
      v30 = &v91[v28];
      swift_bridgeObjectRetain();
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452350);
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        v33 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value(0);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        v88 = v27;
        v89 = v32;
        v87 = v31;
        v90 = v15;
        *(_QWORD *)v29 = *(_QWORD *)v30;
        *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
        *((_QWORD *)v29 + 2) = *((_QWORD *)v30 + 2);
        *((_QWORD *)v29 + 3) = *((_QWORD *)v30 + 3);
        *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
        *((_QWORD *)v29 + 5) = *((_QWORD *)v30 + 5);
        v34 = __dst[6];
        v35 = &v29[v34];
        v36 = &v30[v34];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v22(v36, 1, v13))
        {
          v37 = type metadata accessor for Record.ID.Ownership(0);
          memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          v90(v35, v36, v13);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v35, 0, 1, v13);
        }
        v64 = __dst[7];
        v65 = &v29[v64];
        v66 = &v30[v64];
        *(_QWORD *)v65 = *(_QWORD *)v66;
        *((_QWORD *)v65 + 1) = *((_QWORD *)v66 + 1);
        v67 = (int *)type metadata accessor for RecordMetadata();
        v68 = v67[5];
        v69 = &v29[v68];
        v70 = &v30[v68];
        swift_bridgeObjectRetain();
        v90(v69, v70, v13);
        *(_QWORD *)&v29[v67[6]] = *(_QWORD *)&v30[v67[6]];
        v71 = v67[7];
        __dsta = &v29[v71];
        v72 = &v30[v71];
        v73 = sub_2453876EC();
        v74 = *(_QWORD *)(v73 - 8);
        v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
        swift_bridgeObjectRetain();
        if (v75(v72, 1, v73))
        {
          v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
          memcpy(__dsta, v72, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v74 + 16))(__dsta, v72, v73);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(__dsta, 0, 1, v73);
        }
        v27 = v88;
        v77 = *(int *)(v31 + 48);
        v78 = (uint64_t *)&v29[v77];
        v79 = (uint64_t *)&v30[v77];
        v80 = *v79;
        v81 = v79[1];
        sub_245261C44(*v79, v81);
        *v78 = v80;
        v78[1] = v81;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v29, 0, 1, v87);
      }
      v82 = *(int *)(v27 + 24);
      v83 = &v92[v82];
      v84 = &v91[v82];
      v85 = *(_QWORD *)v84;
      v83[8] = v84[8];
      *(_QWORD *)v83 = v85;
LABEL_39:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      type metadata accessor for ReplicatorMessage.Handshake(0);
      v7 = swift_getEnumCaseMultiPayload();
      if (v7 == 2)
      {
        v38 = sub_245387740();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(a1, a2, v38);
        v39 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
        v40 = v39[5];
        v41 = &a1[v40];
        v42 = &a2[v40];
        if (*((_QWORD *)v42 + 1) >= 3uLL)
        {
          *(_QWORD *)v41 = *(_QWORD *)v42;
          *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v41 = *(_OWORD *)v42;
        }
        *(_QWORD *)&a1[v39[6]] = *(_QWORD *)&a2[v39[6]];
        *(_QWORD *)&a1[v39[7]] = *(_QWORD *)&a2[v39[7]];
      }
      else if (v7 == 1)
      {
        v8 = sub_245387740();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        v9 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Response(0);
        v10 = v9[5];
        v11 = &a1[v10];
        v12 = &a2[v10];
        if (*((_QWORD *)v12 + 1) >= 3uLL)
        {
          *(_QWORD *)v11 = *(_QWORD *)v12;
          *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v11 = *(_OWORD *)v12;
        }
        v48 = v9[6];
        v49 = &a1[v48];
        v50 = &a2[v48];
        *(_QWORD *)v49 = *(_QWORD *)&a2[v48];
        *((_QWORD *)v49 + 1) = *(_QWORD *)&a2[v48 + 8];
        *((_QWORD *)v49 + 2) = *(_QWORD *)&a2[v48 + 16];
        *((_QWORD *)v49 + 3) = *(_QWORD *)&a2[v48 + 24];
        *((_OWORD *)v49 + 2) = *(_OWORD *)&a2[v48 + 32];
        v49[48] = a2[v48 + 48];
        v51 = *(_OWORD *)&a2[v48 + 56];
        v52 = *(_OWORD *)&a2[v48 + 72];
        *((_WORD *)v49 + 44) = *(_WORD *)&a2[v48 + 88];
        *(_OWORD *)(v49 + 72) = v52;
        *(_OWORD *)(v49 + 56) = v51;
        *((_QWORD *)v49 + 12) = *(_QWORD *)&a2[v48 + 96];
        *((_QWORD *)v49 + 13) = *(_QWORD *)&a2[v48 + 104];
        v53 = (uint64_t *)&a2[v48 + 112];
        v54 = *(_QWORD *)&a2[v48 + 120];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v54 >> 60 == 15)
        {
          *((_OWORD *)v49 + 7) = *(_OWORD *)v53;
        }
        else
        {
          v62 = *v53;
          sub_245261C44(*v53, v54);
          *((_QWORD *)v49 + 14) = v62;
          *((_QWORD *)v49 + 15) = v54;
        }
        *((_QWORD *)v49 + 16) = *((_QWORD *)v50 + 16);
        *((_QWORD *)v49 + 17) = *((_QWORD *)v50 + 17);
        *((_QWORD *)v49 + 18) = *((_QWORD *)v50 + 18);
        *((_QWORD *)v49 + 19) = *((_QWORD *)v50 + 19);
        *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
        *(_QWORD *)&a1[v9[8]] = *(_QWORD *)&a2[v9[8]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v43 = sub_245387740();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(a1, a2, v43);
        v44 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Request(0);
        v45 = v44[5];
        v46 = &a1[v45];
        v47 = &a2[v45];
        if (*((_QWORD *)v47 + 1) >= 3uLL)
        {
          *(_QWORD *)v46 = *(_QWORD *)v47;
          *((_QWORD *)v46 + 1) = *((_QWORD *)v47 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v46 = *(_OWORD *)v47;
        }
        v55 = v44[6];
        v56 = &a1[v55];
        v57 = &a2[v55];
        *(_QWORD *)v56 = *(_QWORD *)&a2[v55];
        *((_QWORD *)v56 + 1) = *(_QWORD *)&a2[v55 + 8];
        *((_QWORD *)v56 + 2) = *(_QWORD *)&a2[v55 + 16];
        *((_QWORD *)v56 + 3) = *(_QWORD *)&a2[v55 + 24];
        *((_OWORD *)v56 + 2) = *(_OWORD *)&a2[v55 + 32];
        v56[48] = a2[v55 + 48];
        v58 = *(_OWORD *)&a2[v55 + 56];
        v59 = *(_OWORD *)&a2[v55 + 72];
        *((_WORD *)v56 + 44) = *(_WORD *)&a2[v55 + 88];
        *(_OWORD *)(v56 + 72) = v59;
        *(_OWORD *)(v56 + 56) = v58;
        *((_QWORD *)v56 + 12) = *(_QWORD *)&a2[v55 + 96];
        *((_QWORD *)v56 + 13) = *(_QWORD *)&a2[v55 + 104];
        v60 = (uint64_t *)&a2[v55 + 112];
        v61 = *(_QWORD *)&a2[v55 + 120];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v61 >> 60 == 15)
        {
          *((_OWORD *)v56 + 7) = *(_OWORD *)v60;
        }
        else
        {
          v63 = *v60;
          sub_245261C44(*v60, v61);
          *((_QWORD *)v56 + 14) = v63;
          *((_QWORD *)v56 + 15) = v61;
        }
        *((_QWORD *)v56 + 16) = *((_QWORD *)v57 + 16);
        *((_QWORD *)v56 + 17) = *((_QWORD *)v57 + 17);
        *((_QWORD *)v56 + 18) = *((_QWORD *)v57 + 18);
        *((_QWORD *)v56 + 19) = *((_QWORD *)v57 + 19);
        *(_QWORD *)&a1[v44[7]] = *(_QWORD *)&a2[v44[7]];
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      goto LABEL_39;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_24536410C(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  char *v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v19 = sub_245387740();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v21(a1, a2, v19);
    v22 = *(int *)(type metadata accessor for ReplicatorMessage.Sync(0) + 20);
    v23 = &a1[v22];
    v24 = &a2[v22];
    v25 = *(_OWORD *)&a2[v22 + 16];
    *(_OWORD *)v23 = *(_OWORD *)&a2[v22];
    *((_OWORD *)v23 + 1) = v25;
    *((_OWORD *)v23 + 2) = *(_OWORD *)&a2[v22 + 32];
    v26 = type metadata accessor for Record.ID(0);
    v27 = *(int *)(v26 + 24);
    v28 = &v23[v27];
    v29 = &v24[v27];
    v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    v70 = v21;
    v68 = v20;
    if (v69(&v24[v27], 1, v19))
    {
      v30 = type metadata accessor for Record.ID.Ownership(0);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v21(v28, v29, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v28, 0, 1, v19);
    }
    *(_OWORD *)&v23[*(int *)(v26 + 28)] = *(_OWORD *)&v24[*(int *)(v26 + 28)];
    v71 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord(0);
    v31 = *(int *)(v71 + 20);
    v32 = &v23[v31];
    v33 = &v24[v31];
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452350);
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      v36 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value(0);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      v67 = v35;
      v37 = *((_OWORD *)v33 + 1);
      *(_OWORD *)v32 = *(_OWORD *)v33;
      *((_OWORD *)v32 + 1) = v37;
      *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
      v38 = *(int *)(v26 + 24);
      v39 = &v32[v38];
      v40 = &v33[v38];
      if (v69(&v33[v38], 1, v19))
      {
        v41 = type metadata accessor for Record.ID.Ownership(0);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        v42 = v70;
      }
      else
      {
        v54 = v40;
        v42 = v70;
        v70(v39, v54, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v39, 0, 1, v19);
      }
      v55 = v34;
      *(_OWORD *)&v32[*(int *)(v26 + 28)] = *(_OWORD *)&v33[*(int *)(v26 + 28)];
      v56 = (int *)type metadata accessor for RecordMetadata();
      v42(&v32[v56[5]], &v33[v56[5]], v19);
      *(_QWORD *)&v32[v56[6]] = *(_QWORD *)&v33[v56[6]];
      v57 = v56[7];
      v58 = &v32[v57];
      v59 = &v33[v57];
      v60 = sub_2453876EC();
      v61 = *(_QWORD *)(v60 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
      {
        v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v58, v59, v60);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
      }
      *(_OWORD *)&v32[*(int *)(v55 + 48)] = *(_OWORD *)&v33[*(int *)(v55 + 48)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v32, 0, 1, v55);
    }
    v63 = *(int *)(v71 + 24);
    v64 = &v23[v63];
    v65 = &v24[v63];
    *(_QWORD *)v64 = *(_QWORD *)v65;
    v64[8] = v65[8];
    goto LABEL_24;
  }
  if (!EnumCaseMultiPayload)
  {
    type metadata accessor for ReplicatorMessage.Handshake(0);
    v7 = swift_getEnumCaseMultiPayload();
    if (v7 == 2)
    {
      v43 = sub_245387740();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(a1, a2, v43);
      v44 = type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
      *(_OWORD *)&a1[*(int *)(v44 + 20)] = *(_OWORD *)&a2[*(int *)(v44 + 20)];
      *(_QWORD *)&a1[*(int *)(v44 + 24)] = *(_QWORD *)&a2[*(int *)(v44 + 24)];
    }
    else
    {
      if (v7 == 1)
      {
        v8 = sub_245387740();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        v9 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Response(0);
        *(_OWORD *)&a1[v9[5]] = *(_OWORD *)&a2[v9[5]];
        v10 = v9[6];
        v11 = &a1[v10];
        v12 = &a2[v10];
        v13 = *((_OWORD *)v12 + 1);
        *(_OWORD *)v11 = *(_OWORD *)v12;
        *((_OWORD *)v11 + 1) = v13;
        v14 = *((_OWORD *)v12 + 5);
        *((_OWORD *)v11 + 4) = *((_OWORD *)v12 + 4);
        *((_OWORD *)v11 + 5) = v14;
        v15 = *((_OWORD *)v12 + 3);
        *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
        *((_OWORD *)v11 + 3) = v15;
        v16 = *((_OWORD *)v12 + 9);
        *((_OWORD *)v11 + 8) = *((_OWORD *)v12 + 8);
        *((_OWORD *)v11 + 9) = v16;
        v17 = *((_OWORD *)v12 + 7);
        *((_OWORD *)v11 + 6) = *((_OWORD *)v12 + 6);
        *((_OWORD *)v11 + 7) = v17;
        *(_QWORD *)&a1[v9[7]] = *(_QWORD *)&a2[v9[7]];
        v18 = v9 + 8;
LABEL_17:
        *(_QWORD *)&a1[*v18] = *(_QWORD *)&a2[*v18];
        swift_storeEnumTagMultiPayload();
LABEL_24:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v45 = sub_245387740();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(a1, a2, v45);
      v44 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
      *(_OWORD *)&a1[*(int *)(v44 + 20)] = *(_OWORD *)&a2[*(int *)(v44 + 20)];
      v46 = *(int *)(v44 + 24);
      v47 = &a1[v46];
      v48 = &a2[v46];
      v49 = *((_OWORD *)v48 + 7);
      *((_OWORD *)v47 + 6) = *((_OWORD *)v48 + 6);
      *((_OWORD *)v47 + 7) = v49;
      v50 = *((_OWORD *)v48 + 9);
      *((_OWORD *)v47 + 8) = *((_OWORD *)v48 + 8);
      *((_OWORD *)v47 + 9) = v50;
      v51 = *((_OWORD *)v48 + 3);
      *((_OWORD *)v47 + 2) = *((_OWORD *)v48 + 2);
      *((_OWORD *)v47 + 3) = v51;
      v52 = *((_OWORD *)v48 + 5);
      *((_OWORD *)v47 + 4) = *((_OWORD *)v48 + 4);
      *((_OWORD *)v47 + 5) = v52;
      v53 = *((_OWORD *)v48 + 1);
      *(_OWORD *)v47 = *(_OWORD *)v48;
      *((_OWORD *)v47 + 1) = v53;
    }
    v18 = (int *)(v44 + 28);
    goto LABEL_17;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

