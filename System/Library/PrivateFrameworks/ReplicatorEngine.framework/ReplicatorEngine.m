void sub_245259E60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
  _Block_object_dispose(&a53, 8);
  _Unwind_Resume(a1);
}

id STRPLogCoding()
{
  if (STRPLogCoding_onceToken[0] != -1)
    dispatch_once(STRPLogCoding_onceToken, &__block_literal_global);
  return (id)STRPLogCoding___logObj;
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

uint64_t TimedHandshakeTask.handshakeDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 40);
  return swift_bridgeObjectRetain();
}

void TimedHandshakeTask.schedule.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 64);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 56);
  *(_BYTE *)(a1 + 8) = v2;
}

_QWORD *TimedHandshakeTask.__allocating_init(handshakeDescriptor:schedule:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;

  swift_allocObject();
  v8 = sub_24525BE64(a1, a2, a3, a4);
  swift_release();
  return v8;
}

_QWORD *TimedHandshakeTask.init(handshakeDescriptor:schedule:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4 = sub_24525BE64(a1, a2, a3, a4);
  swift_release();
  return v4;
}

double sub_24525B660(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  double result;

  v3 = *v2;
  if (!*((_BYTE *)v2 + 8))
  {
    if (v3)
    {
      if (v3 != 1)
        goto LABEL_5;
      return 5.0;
    }
    return 0.15;
  }
  if (*((_BYTE *)v2 + 8) != 1)
    return 900.0;
  if (v3)
  {
    if (v3 != 1)
    {
LABEL_5:
      sub_24525B660(a1, a2);
      return result;
    }
    return 5.0;
  }
  return 1.0;
}

Swift::Void __swiftcall TimedHandshakeTask.cancel()()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[6];

  v1 = *(NSObject **)(v0 + 72);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_24525C554;
  *(_QWORD *)(v2 + 24) = v0;
  v4[4] = sub_24525C56C;
  v4[5] = v2;
  v4[0] = MEMORY[0x24BDAC760];
  v4[1] = 1107296256;
  v4[2] = sub_24525B888;
  v4[3] = &block_descriptor;
  v3 = _Block_copy(v4);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v1 & 1) != 0)
    __break(1u);
}

uint64_t sub_24525B7F4(uint64_t a1)
{
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(a1 + 80) + 24);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_2452E6204(v2, sub_24525C730);
  os_unfair_lock_unlock(v1 + 4);
  swift_release();
  return swift_release();
}

uint64_t sub_24525B868(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_24525B888(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t TimedHandshakeTask.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t TimedHandshakeTask.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_24525B908@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 24);
  v4 = *(_BYTE *)(*v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(*v1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v2 + 40);
  return swift_bridgeObjectRetain();
}

void sub_24525B928(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)a1 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t sub_24525B940@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  char v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t v12;
  char v13;

  v9 = *((_BYTE *)a2 + 8);
  v12 = *a2;
  v13 = v9;
  swift_allocObject();
  v10 = sub_24525BE64(a1, (uint64_t)&v12, a3, a4);
  result = swift_release();
  *a5 = v10;
  return result;
}

void sub_24525B9C8()
{
  TimedHandshakeTask.cancel()();
}

void sub_24525B9E8(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_24525B9F4(uint64_t a1, uint64_t a2)
{
  return sub_24525BCF0(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_24525BA0C(uint64_t a1, uint64_t a2)
{
  return sub_24525BCF0(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_24525BA20(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_245387B00();
  *a2 = 0;
  return result;
}

uint64_t sub_24525BA94(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_245387B0C();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_24525BB10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_245387B18();
  v2 = sub_245387AF4();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

_DWORD *sub_24525BB50@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

BOOL sub_24525BB60(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24525BB7C()
{
  sub_24525C6C4(&qword_257452080, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_2453894F4);
  sub_24525C6C4(&qword_257452088, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_245389494);
  return sub_245387FC8();
}

uint64_t sub_24525BC00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_245387AF4();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24525BC44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_245387B18();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24525BC6C()
{
  sub_24525C6C4(&qword_2574520C0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2453897BC);
  sub_24525C6C4(&qword_2574520C8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_245389664);
  return sub_245387FC8();
}

uint64_t sub_24525BCF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_245387B18();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24525BD2C()
{
  sub_245387B18();
  sub_245387B6C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24525BD6C()
{
  uint64_t v0;

  sub_245387B18();
  sub_24538843C();
  sub_245387B6C();
  v0 = sub_245388478();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24525BDDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_245387B18();
  v2 = v1;
  if (v0 == sub_245387B18() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_245388274();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

_QWORD *sub_24525BE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  os_log_type_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  os_unfair_lock_s *v62;
  uint64_t v63;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;

  v5 = v4;
  v79 = a4;
  v77 = a3;
  v65[1] = *v4;
  v8 = sub_2453876EC();
  v69 = *(_QWORD *)(v8 - 8);
  v70 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v72 = (char *)v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v71 = (char *)v65 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v78 = (char *)v65 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v65 - v15;
  v73 = sub_245387D70();
  v66 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v18 = (char *)v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_245387D4C();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_245387950();
  MEMORY[0x24BDAC7A8](v20);
  v21 = *(_QWORD *)a1;
  v75 = *(_QWORD *)(a1 + 8);
  v76 = v21;
  LODWORD(v74) = *(unsigned __int8 *)(a1 + 16);
  v22 = *(_QWORD *)(a1 + 24);
  v67 = *(_QWORD *)(a1 + 32);
  v68 = v22;
  v23 = *(_QWORD *)a2;
  v24 = *(unsigned __int8 *)(a2 + 8);
  v65[2] = sub_24525C748();
  sub_245387944();
  v81 = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_257450050, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450020);
  sub_24525C7C4();
  v25 = v16;
  sub_245387E3C();
  (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v18, *MEMORY[0x24BEE5758], v73);
  v26 = v69;
  v27 = v70;
  v4[9] = sub_245387D94();
  v28 = type metadata accessor for BasicTimer();
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = 0;
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440BFA0);
  v30 = swift_allocObject();
  *(_DWORD *)(v30 + 16) = 0;
  *(_QWORD *)(v29 + 24) = v30;
  v5[10] = v29;
  v31 = v75;
  v5[2] = v76;
  v5[3] = v31;
  *((_BYTE *)v5 + 32) = (_BYTE)v74;
  v32 = v67;
  v5[5] = v68;
  v5[6] = v32;
  v5[7] = v23;
  *((_BYTE *)v5 + 64) = v24;
  v33 = v78;
  v34 = sub_2453876C8();
  v76 = v23;
  v81 = v23;
  LODWORD(v75) = v24;
  v82 = v24;
  sub_24525B660(v34, v35);
  sub_245387674();
  v74 = *(void (**)(char *, uint64_t))(v26 + 8);
  v74(v33, v27);
  if (qword_25744FD90 != -1)
    swift_once();
  v36 = sub_245387818();
  __swift_project_value_buffer(v36, (uint64_t)qword_257462FB0);
  v37 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  v38 = v71;
  v37(v71, v25, v27);
  v39 = v72;
  v78 = v25;
  v37(v72, v25, v27);
  swift_retain_n();
  v40 = sub_2453877F4();
  v41 = sub_245387D34();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = swift_slowAlloc();
    v68 = swift_slowAlloc();
    v81 = v68;
    *(_DWORD *)v42 = 136315650;
    v80 = (uint64_t)v5;
    swift_retain();
    v69 = v28;
    v43 = sub_245387B48();
    v80 = sub_2453816D8(v43, v44, &v81);
    sub_245387E0C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2082;
    sub_24525C6C4((unint64_t *)&qword_2574525E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
    v45 = sub_2453880F4();
    v80 = sub_2453816D8(v45, v46, &v81);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    v47 = v38;
    v48 = v74;
    v74(v47, v27);
    *(_WORD *)(v42 + 22) = 2050;
    sub_2453876A4();
    v80 = v49;
    sub_245387E0C();
    v48(v39, v27);
    v50 = v41;
    v51 = v48;
    _os_log_impl(&dword_245256000, v40, v50, "%s scheduling timed handshake task at: %{public}s in %{public}fs", (uint8_t *)v42, 0x20u);
    v52 = v68;
    swift_arrayDestroy();
    MEMORY[0x24953317C](v52, -1, -1);
    MEMORY[0x24953317C](v42, -1, -1);
  }
  else
  {
    swift_release_n();
    v51 = v74;
    v74(v38, v27);
    v51(v39, v27);
  }

  v53 = swift_allocObject();
  *(_QWORD *)(v53 + 16) = 0;
  v54 = swift_allocObject();
  *(_DWORD *)(v54 + 16) = 0;
  *(_QWORD *)(v53 + 24) = v54;
  v5[10] = v53;
  swift_release();
  v55 = v5[10];
  v81 = v76;
  v82 = v75;
  v56 = swift_retain();
  v58 = sub_24525B660(v56, v57);
  v59 = v5[9];
  v60 = swift_allocObject();
  *(_QWORD *)(v60 + 16) = v77;
  v61 = v79;
  *(_QWORD *)(v60 + 24) = v79;
  v62 = *(os_unfair_lock_s **)(v55 + 24);
  MEMORY[0x24BDAC7A8](v61);
  v65[-6] = v55;
  *(double *)&v65[-5] = v58;
  v65[-4] = v59;
  v65[-3] = sub_24525C56C;
  v65[-2] = v60;
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v62 + 4);
  sub_2452E6204(v63, (uint64_t (*)(void))sub_24525C890);
  os_unfair_lock_unlock(v62 + 4);
  swift_release();
  swift_release();
  swift_release();
  v51(v78, v27);
  return v5;
}

uint64_t sub_24525C554()
{
  uint64_t v0;

  return sub_24525B7F4(v0);
}

uint64_t sub_24525C55C()
{
  return swift_deallocObject();
}

uint64_t sub_24525C56C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t type metadata accessor for TimedHandshakeTask()
{
  return objc_opt_self();
}

uint64_t method lookup function for TimedHandshakeTask()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TimedHandshakeTask.__allocating_init(handshakeDescriptor:schedule:handler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

void type metadata accessor for Name(uint64_t a1)
{
  sub_24525C8F0(a1, &qword_257450390);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ProtocolVersion(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ProtocolVersion(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_24525C8F0(a1, &qword_2574500A8);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_24525C8F0(a1, (unint64_t *)&unk_25440BF90);
}

uint64_t sub_24525C66C()
{
  return sub_24525C6C4(&qword_257451FA8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_245389458);
}

uint64_t sub_24525C698()
{
  return sub_24525C6C4(&qword_257451FB0, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_24538942C);
}

uint64_t sub_24525C6C4(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2495330B0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24525C704()
{
  return sub_24525C6C4(&qword_257451FB8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_2453894C8);
}

uint64_t sub_24525C730()
{
  return sub_2452E58A0();
}

unint64_t sub_24525C748()
{
  unint64_t result;

  result = qword_257450080;
  if (!qword_257450080)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257450080);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x249533098]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_24525C7C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257450030;
  if (!qword_257450030)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_257450020);
    result = MEMORY[0x2495330B0](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_257450030);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2495330A4](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_24525C86C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_24525C890()
{
  uint64_t v0;

  sub_2452E5824(*(double *)(v0 + 24), *(_QWORD *)(v0 + 16), *(void (**)(char *, uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

void type metadata accessor for nw_listener_state_t(uint64_t a1)
{
  sub_24525C8F0(a1, &qword_257452090);
}

void type metadata accessor for nw_connection_state_t(uint64_t a1)
{
  sub_24525C8F0(a1, &qword_257452098);
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_24525C8F0(a1, &qword_2574520A0);
}

void sub_24525C8F0(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_24525C934()
{
  return sub_24525C6C4(&qword_2574520A8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_245389628);
}

uint64_t sub_24525C960()
{
  return sub_24525C6C4(&qword_2574520B0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2453895FC);
}

uint64_t sub_24525C98C()
{
  return sub_24525C6C4(&qword_2574520B8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_245389698);
}

void sub_24525C9C8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_24525CA18()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  if (BYTE6(v1) == 16)
  {
    sub_24525CBC4();
    sub_245387470();
    sub_24538771C();
    sub_24525CB80(v2, v1);
    v3 = sub_245387740();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v0, 0, 1, v3);
  }
  else
  {
    sub_24525CB80(v2, v1);
    v5 = sub_245387740();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v0, 1, 1, v5);
  }
}

uint64_t sub_24525CB80(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

unint64_t sub_24525CBC4()
{
  unint64_t result;

  result = qword_25440C6F0;
  if (!qword_25440C6F0)
  {
    result = MEMORY[0x2495330B0](MEMORY[0x24BDCDDC0], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_25440C6F0);
  }
  return result;
}

uint64_t ProtocolVersion.current.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ProtocolVersion.current.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*ProtocolVersion.current.modify())()
{
  return nullsub_1;
}

uint64_t ProtocolVersion.minimum.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t ProtocolVersion.minimum.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*ProtocolVersion.minimum.modify())()
{
  return nullsub_1;
}

uint64_t ProtocolVersion.init(current:minimum:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

BOOL ProtocolVersion.isCompatible(with:)(_QWORD *a1)
{
  _QWORD *v1;

  return *v1 >= a1[1] && *a1 >= v1[1];
}

unint64_t ProtocolVersion.highestCompatibleProtocolVersion(with:)(unint64_t *a1)
{
  unint64_t *v1;
  unint64_t v2;
  _BOOL4 v4;

  v2 = *a1;
  v4 = *v1 < a1[1] || v2 < v1[1];
  if (*v1 < v2)
    v2 = *v1;
  if (v4)
    return 0;
  else
    return v2;
}

Swift::UInt64_optional __swiftcall ProtocolVersion.highestCompatibleProtocolVersion(with:)(Swift::UInt64 with)
{
  Swift::UInt64 *v1;
  _BOOL4 v3;
  Swift::UInt64_optional result;

  v3 = v1[1] > with || *v1 < with;
  if (v3)
    with = 0;
  result.value = with;
  result.is_nil = v3;
  return result;
}

uint64_t ProtocolVersion.description.getter()
{
  sub_245387EA8();
  swift_bridgeObjectRelease();
  sub_2453880F4();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  sub_2453880F4();
  sub_245387B90();
  swift_bridgeObjectRelease();
  return 0x3A746E6572727563;
}

uint64_t ProtocolVersion.hash(into:)()
{
  sub_24538846C();
  return sub_24538846C();
}

BOOL static ProtocolVersion.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

BOOL sub_24525CE08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t _s16ReplicatorEngine29NetworkMessagingCriticalErrorO9hashValueSivg_0()
{
  sub_24538843C();
  sub_245388448();
  return sub_245388478();
}

uint64_t sub_24525CE64()
{
  return sub_245388448();
}

uint64_t sub_24525CE8C()
{
  sub_24538843C();
  sub_245388448();
  return sub_245388478();
}

uint64_t sub_24525CECC()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D756D696E696DLL;
  else
    return 0x746E6572727563;
}

uint64_t sub_24525CF00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24525D6A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24525CF24()
{
  return 0;
}

void sub_24525CF30(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_24525CF3C()
{
  sub_24525D0D0();
  return sub_2453884D8();
}

uint64_t sub_24525CF64()
{
  sub_24525D0D0();
  return sub_2453884E4();
}

uint64_t ProtocolVersion.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];
  char v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574501D8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(_QWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24525D0D0();
  sub_24538849C();
  v11 = 0;
  sub_2453880D0();
  if (!v2)
  {
    v10 = 1;
    sub_2453880D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_24525D0D0()
{
  unint64_t result;

  result = qword_25744F850;
  if (!qword_25744F850)
  {
    result = MEMORY[0x2495330B0](&unk_2453899E4, &type metadata for ProtocolVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744F850);
  }
  return result;
}

uint64_t ProtocolVersion.hashValue.getter()
{
  sub_24538843C();
  sub_24538846C();
  sub_24538846C();
  return sub_245388478();
}

uint64_t ProtocolVersion.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257450180);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24525D0D0();
  sub_245388490();
  if (!v2)
  {
    v14 = 0;
    v9 = sub_24538804C();
    v13 = 1;
    v10 = sub_24538804C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24525D2B4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ProtocolVersion.init(from:)(a1, a2);
}

uint64_t sub_24525D2C8(_QWORD *a1)
{
  return ProtocolVersion.encode(to:)(a1);
}

uint64_t sub_24525D2DC()
{
  sub_24538843C();
  sub_24538846C();
  sub_24538846C();
  return sub_245388478();
}

uint64_t sub_24525D334()
{
  sub_24538846C();
  return sub_24538846C();
}

uint64_t sub_24525D36C()
{
  sub_24538843C();
  sub_24538846C();
  sub_24538846C();
  return sub_245388478();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

unint64_t sub_24525D3E4()
{
  unint64_t result;

  result = qword_257452190;
  if (!qword_257452190)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for ProtocolVersion, &type metadata for ProtocolVersion);
    atomic_store(result, (unint64_t *)&qword_257452190);
  }
  return result;
}

BOOL sub_24525D428(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

ValueMetadata *type metadata accessor for ProtocolVersion()
{
  return &type metadata for ProtocolVersion;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ProtocolVersion.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ProtocolVersion.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24525D53C + 4 * byte_245389815[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24525D570 + 4 * byte_245389810[v4]))();
}

uint64_t sub_24525D570(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24525D578(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24525D580);
  return result;
}

uint64_t sub_24525D58C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24525D594);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24525D598(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24525D5A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24525D5AC(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_24525D5B4(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ProtocolVersion.CodingKeys()
{
  return &type metadata for ProtocolVersion.CodingKeys;
}

unint64_t sub_24525D5D4()
{
  unint64_t result;

  result = qword_257452198;
  if (!qword_257452198)
  {
    result = MEMORY[0x2495330B0](&unk_2453899BC, &type metadata for ProtocolVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452198);
  }
  return result;
}

unint64_t sub_24525D61C()
{
  unint64_t result;

  result = qword_25744F860;
  if (!qword_25744F860)
  {
    result = MEMORY[0x2495330B0](&unk_24538992C, &type metadata for ProtocolVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744F860);
  }
  return result;
}

unint64_t sub_24525D664()
{
  unint64_t result;

  result = qword_25744F858;
  if (!qword_25744F858)
  {
    result = MEMORY[0x2495330B0](&unk_245389954, &type metadata for ProtocolVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25744F858);
  }
  return result;
}

uint64_t sub_24525D6A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E6572727563 && a2 == 0xE700000000000000;
  if (v2 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D756D696E696DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_245388274();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_24525D798()
{
  unsigned __int8 v1;

  sub_245387D7C();
  return v1;
}

void sub_24525D7E8(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 272);
}

uint64_t sub_24525D7F4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  _QWORD v16[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_245387920();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_245387950();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(_QWORD *)(v2 + 72);
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v2;
  aBlock[4] = sub_24525DA0C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525DD34;
  aBlock[3] = &block_descriptor_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  sub_245387938();
  v16[1] = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_25744FF00, v5, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
  sub_245387E3C();
  MEMORY[0x2495320E4](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_24525D9E8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_24525DA0C()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 16) == 1)
    sub_24525DA40();
  else
    sub_24525DBBC();
}

void sub_24525DA40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v1 = v0;
  v2 = sub_2453879D4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + 72);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_4;
  }
  if ((*(_BYTE *)(v1 + 272) & 1) != 0)
    return;
  if (qword_25744FDA8 != -1)
    goto LABEL_9;
LABEL_4:
  v8 = sub_245387818();
  __swift_project_value_buffer(v8, (uint64_t)qword_257463008);
  v9 = sub_2453877F4();
  v10 = sub_245387D34();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_245256000, v9, v10, "Enabling IDS zone advertiser", v11, 2u);
    MEMORY[0x24953317C](v11, -1, -1);
  }

  *(_BYTE *)(v1 + 272) = 1;
  sub_24525E5C4();
  sub_2452605E0();
}

uint64_t sub_24525DBBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;

  v1 = v0;
  v2 = sub_2453879D4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + 72);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_4;
  }
  if (*(_BYTE *)(v1 + 272) != 1)
    return result;
  if (qword_25744FDA8 != -1)
    goto LABEL_9;
LABEL_4:
  v9 = sub_245387818();
  __swift_project_value_buffer(v9, (uint64_t)qword_257463008);
  v10 = sub_2453877F4();
  v11 = sub_245387D34();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_245256000, v10, v11, "Disabling IDS zone advertiser", v12, 2u);
    MEMORY[0x24953317C](v12, -1, -1);
  }

  *(_BYTE *)(v1 + 272) = 0;
  return sub_245260E4C();
}

uint64_t sub_24525DD34(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t (*sub_24525DD78(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  sub_245387D7C();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a1 + 9);
  return sub_24525DDE0;
}

uint64_t sub_24525DDE0(uint64_t a1)
{
  return sub_24525D7F4(*(_BYTE *)(a1 + 8));
}

uint64_t sub_24525DE04()
{
  uint64_t v0;

  v0 = sub_245387914();
  __swift_allocate_value_buffer(v0, qword_25744F900);
  *(_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_25744F900) = 500;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t sub_24525DE64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 56))
  {
    v1 = *(_QWORD *)(v0 + 56);
  }
  else
  {
    v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FED0);
    sub_24526381C((unint64_t *)&qword_25744FEC8, &qword_25744FED0, MEMORY[0x24BDB9CB0]);
    v1 = sub_24538789C();
    *(_QWORD *)(v2 + 56) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_24525DF08(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return swift_release();
}

uint64_t (*sub_24525DF18(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_24525DE64();
  return sub_24525DF4C;
}

uint64_t sub_24525DF4C(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + 56) = *a1;
  return swift_release();
}

uint64_t IDSZoneAdvertiser.__allocating_init(idsServiceName:firstLockStateProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  IDSZoneAdvertiser.init(idsServiceName:firstLockStateProvider:)(a1, a2, a3);
  return v6;
}

uint64_t IDSZoneAdvertiser.init(idsServiceName:firstLockStateProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  _QWORD v36[20];

  v4 = v3;
  v27 = (_QWORD *)a3;
  v29 = a2;
  v28 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450060);
  MEMORY[0x24BDAC7A8](v5);
  v30 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FE18);
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v31 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_245387D70();
  v8 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_245387D4C();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v11);
  v13 = sub_245387950();
  MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v3 + 56) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FED0);
  swift_allocObject();
  *(_QWORD *)(v3 + 64) = sub_245387884();
  sub_24525C748();
  sub_245387944();
  v36[0] = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_257450050, v12, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450020);
  sub_24526381C((unint64_t *)&qword_257450030, (uint64_t *)&unk_257450020, MEMORY[0x24BEE12C8]);
  sub_245387E3C();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BEE5758], v26);
  *(_QWORD *)(v3 + 72) = sub_245387D94();
  sub_24525E488((uint64_t)v36);
  sub_24525E4A8((uint64_t)v36, v3 + 80);
  *(_WORD *)(v3 + 248) = 0;
  *(_QWORD *)(v3 + 256) = 0;
  *(_QWORD *)(v3 + 264) = 0;
  *(_BYTE *)(v3 + 272) = 0;
  sub_24525E4A8((uint64_t)v36, v3 + 280);
  *(_QWORD *)(v3 + 456) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_QWORD *)(v3 + 448) = 0;
  v14 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v3 + 488) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v3 + 496) = v14;
  v15 = v27;
  sub_24525E4F0((uint64_t)v27, v3 + 16);
  v16 = v29;
  *(_QWORD *)(v3 + 472) = v28;
  *(_QWORD *)(v3 + 480) = v16;
  v17 = v15[3];
  v18 = v15[4];
  __swift_project_boxed_opaque_existential_1(v15, v17);
  v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
  v19 = *(void **)(v3 + 72);
  v35 = v19;
  v20 = sub_245387D64();
  v21 = (uint64_t)v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v22 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FE90);
  sub_24526381C(&qword_25744FE88, &qword_25744FE90, MEMORY[0x24BDB9AF8]);
  sub_24525C6C4((unint64_t *)&unk_257450070, (uint64_t (*)(uint64_t))sub_24525C748, MEMORY[0x24BEE5670]);
  v23 = v31;
  sub_2453878B4();
  sub_245263F80(v21, (uint64_t *)&unk_257450060);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_24526381C(&qword_25744FE10, (uint64_t *)&unk_25744FE18, MEMORY[0x24BDB9A08]);
  v24 = v32;
  sub_2453878C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v24);
  swift_beginAccess();
  sub_245387860();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return v4;
}

double sub_24525E488(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 160) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_24525E4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FC98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24525E4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24525E534()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24525E558(unsigned __int8 *a1)
{
  int v1;
  uint64_t result;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (v1)
      sub_24525E5C4();
    return swift_release();
  }
  return result;
}

uint64_t sub_24525E5BC(unsigned __int8 *a1)
{
  return sub_24525E558(a1);
}

void sub_24525E5C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, uint64_t);
  id v9;
  void (*v10)(_QWORD *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  char v18;
  uint64_t v19;

  v1 = v0;
  v2 = sub_2453879D4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + 72);
  *v5 = v6;
  v7 = *MEMORY[0x24BEE5610];
  v8 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v3 + 104);
  v8(v5, v7, v2);
  v9 = v6;
  LOBYTE(v6) = sub_2453879F8();
  v10 = *(void (**)(_QWORD *, uint64_t))(v3 + 8);
  v10(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_5;
  }
  if (*(_BYTE *)(v1 + 272) != 1)
    return;
  v11 = *(_QWORD *)(v1 + 40);
  v12 = *(_QWORD *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), v11);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12) & 1) == 0)
    return;
  if (qword_25744FDA8 != -1)
    goto LABEL_14;
LABEL_5:
  v13 = sub_245387818();
  __swift_project_value_buffer(v13, (uint64_t)qword_257463008);
  v14 = sub_2453877F4();
  v15 = sub_245387D34();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_245256000, v14, v15, "Activating IDS zone advertiser", v16, 2u);
    MEMORY[0x24953317C](v16, -1, -1);
  }

  sub_24525E7E4(*(_QWORD *)(v1 + 472), *(_QWORD *)(v1 + 480));
  if (*(_BYTE *)(v1 + 248) == 1)
    sub_24526111C();
  if (*(_BYTE *)(v1 + 249) == 1)
  {
    *v5 = v9;
    v8(v5, v7, v2);
    v17 = v9;
    v18 = sub_2453879F8();
    v10(v5, v2);
    if ((v18 & 1) != 0)
    {
      *(_BYTE *)(v1 + 249) = 1;
      sub_2452605E0();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_24525E7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t *v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  id v39;
  char *v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[3];
  id v61;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574502F8);
  v51 = *(_QWORD *)(v6 - 8);
  v52 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v50 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257450318);
  v56 = *(_QWORD *)(v8 - 8);
  v57 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v55 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450060);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257450308);
  v58 = *(_QWORD *)(v13 - 8);
  v59 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2453879D4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (uint64_t *)((char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = *(void **)(v3 + 72);
  *v19 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x24BEE5610], v16);
  v21 = v20;
  LOBYTE(v20) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (qword_2574502D8 != -1)
LABEL_9:
    swift_once();
  v22 = (uint64_t *)(qword_2574502D0 + 16);
  v23 = (os_unfair_lock_s *)(qword_2574502D0 + 24);
  swift_retain();
  os_unfair_lock_lock(v23);
  sub_2452E8D68(v22, a1, a2, v60);
  os_unfair_lock_unlock(v23);
  v24 = v60[0];
  swift_release();
  v25 = *(void **)(v3 + 464);
  *(_QWORD *)(v3 + 464) = v24;

  v26 = *(void **)(v3 + 464);
  if (v26)
  {
    v27 = (uint64_t)v12;
    v28 = v26;
    v29 = sub_2452E8BC4();

    v60[0] = v29;
    v61 = v21;
    v30 = sub_245387D64();
    v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
    v53(v12, 1, 1, v30);
    v31 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257450338);
    v32 = sub_24525C748();
    sub_24526381C(&qword_257450330, &qword_257450338, MEMORY[0x24BDB9AF8]);
    sub_24525C6C4((unint64_t *)&unk_257450070, (uint64_t (*)(uint64_t))sub_24525C748, MEMORY[0x24BEE5670]);
    v54 = v32;
    sub_2453878B4();
    sub_245263F80(v27, (uint64_t *)&unk_257450060);

    swift_release();
    v33 = swift_allocObject();
    swift_weakInit();
    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = sub_2452637C0;
    *(_QWORD *)(v34 + 24) = v33;
    sub_24526381C(&qword_257450300, &qword_257450308, MEMORY[0x24BDB9A08]);
    v35 = v59;
    sub_2453878C0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v15, v35);
    swift_beginAccess();
    sub_245387860();
    swift_endAccess();
    swift_release();
    v36 = *(void **)(v3 + 464);
    if (v36)
    {
      v37 = v36;
      v38 = sub_2452E8BE8();

      v60[0] = v38;
      v61 = v31;
      v53((char *)v27, 1, 1, v30);
      v39 = v31;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450348);
      sub_24526381C(&qword_257450340, (uint64_t *)&unk_257450348, MEMORY[0x24BDB9AF8]);
      v40 = v55;
      sub_2453878B4();
      sub_245263F80(v27, (uint64_t *)&unk_257450060);

      swift_release();
      swift_allocObject();
      swift_weakInit();
      sub_24526381C(&qword_257450310, &qword_257450318, MEMORY[0x24BDB9A08]);
      v41 = v57;
      sub_2453878C0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v40, v41);
      swift_beginAccess();
      sub_245387860();
      swift_endAccess();
      swift_release();
      v42 = *(void **)(v3 + 464);
      if (v42)
      {
        v43 = v42;
        v44 = sub_2452E8CBC();

        v60[0] = v44;
        v61 = v39;
        v53((char *)v27, 1, 1, v30);
        v45 = v39;
        __swift_instantiateConcreteTypeFromMangledName(&qword_257450328);
        sub_24526381C(&qword_257450320, &qword_257450328, MEMORY[0x24BDB9AF8]);
        v46 = v27;
        v47 = v50;
        sub_2453878B4();
        sub_245263F80(v46, (uint64_t *)&unk_257450060);

        swift_release();
        swift_allocObject();
        swift_weakInit();
        sub_24526381C(&qword_2574502F0, &qword_2574502F8, MEMORY[0x24BDB9A08]);
        v48 = v52;
        sub_2453878C0();
        swift_release();
        (*(void (**)(char *, uint64_t))(v51 + 8))(v47, v48);
        swift_beginAccess();
        sub_245387860();
        swift_endAccess();
        swift_release();
      }
    }
  }
}

uint64_t sub_24525EED4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_24525EF44(a1, a2);
    return swift_release();
  }
  return result;
}

void sub_24525EF44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  void (*v20)(_QWORD *);
  void (*v21)(_QWORD *, uint64_t);
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  unint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(_QWORD *, uint64_t);
  void (*v55)(_QWORD *, _QWORD, uint64_t);
  uint64_t v56;
  id v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  _OWORD v76[10];
  uint64_t v77;
  _QWORD v78[21];
  _QWORD v79[5];
  _QWORD v80[2];
  _QWORD v81[5];
  char v82;
  _OWORD v83[2];
  _OWORD v84[10];
  uint64_t v85;

  v63 = a2;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  v4 = MEMORY[0x24BDAC7A8](v61);
  v60 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v51 - v6;
  v8 = type metadata accessor for Message();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v64 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v62 = (uint64_t)&v51 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v51 - v13;
  v15 = sub_2453879D4();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (uint64_t *)((char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v56 = v2;
  v19 = *(void **)(v2 + 72);
  *v18 = v19;
  v20 = *(void (**)(_QWORD *))(v16 + 104);
  v58 = *MEMORY[0x24BEE5610];
  v20(v18);
  v57 = v19;
  LOBYTE(v19) = sub_2453879F8();
  v21 = *(void (**)(_QWORD *, uint64_t))(v16 + 8);
  v59 = v15;
  v21(v18, v15);
  if ((v19 & 1) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  v22 = (_QWORD *)(a1 + *(int *)(v8 + 24));
  v15 = v8;
  if (*v22 == 0xD000000000000014 && v22[1] == 0x8000000245392F70 || (sub_245388274() & 1) != 0)
  {
    v55 = (void (*)(_QWORD *, _QWORD, uint64_t))v20;
    if (qword_25744FDA8 == -1)
    {
LABEL_6:
      v23 = sub_245387818();
      v24 = __swift_project_value_buffer(v23, (uint64_t)qword_257463008);
      v62 = a1;
      sub_245263EF4(a1, (uint64_t)v14);
      sub_245263F38(v63, (uint64_t)v7);
      v63 = v24;
      v25 = sub_2453877F4();
      v26 = sub_245387D34();
      v27 = os_log_type_enabled(v25, v26);
      v54 = v21;
      if (v27)
      {
        v28 = swift_slowAlloc();
        v52 = swift_slowAlloc();
        *(_QWORD *)&v84[0] = v52;
        *(_DWORD *)v28 = 136446466;
        v29 = Message.description.getter();
        v78[0] = sub_2453816D8(v29, v30, (uint64_t *)v84);
        v53 = v15;
        sub_245387E0C();
        swift_bridgeObjectRelease();
        sub_245263E80((uint64_t)v14);
        *(_WORD *)(v28 + 12) = 2082;
        sub_245263F38((uint64_t)v7, v60);
        v31 = sub_245387B48();
        v78[0] = sub_2453816D8(v31, v32, (uint64_t *)v84);
        v15 = v53;
        sub_245387E0C();
        swift_bridgeObjectRelease();
        sub_245263F80((uint64_t)v7, &qword_25744F610);
        _os_log_impl(&dword_245256000, v25, v26, "IDS zone advertiser got message %{public}s and url %{public}s", (uint8_t *)v28, 0x16u);
        v33 = v52;
        swift_arrayDestroy();
        MEMORY[0x24953317C](v33, -1, -1);
        MEMORY[0x24953317C](v28, -1, -1);
      }
      else
      {
        sub_245263E80((uint64_t)v14);
        sub_245263F80((uint64_t)v7, &qword_25744F610);
      }

      v34 = *(_QWORD *)(v62 + *(int *)(v15 + 32));
      type metadata accessor for OPACKCoder();
      sub_24537DFE8(v83);
      sub_245263FBC((uint64_t)v83, (uint64_t)v81);
      v35 = MEMORY[0x24BEE4AF8];
      v36 = sub_24531B410(MEMORY[0x24BEE4AF8]);
      v80[0] = v35;
      v80[1] = v36;
      v81[4] = v34;
      v82 = 0;
      v79[3] = &type metadata for PropertyListTypeDecoder.RootDecoder;
      v79[4] = sub_245263FF8();
      v79[0] = swift_allocObject();
      sub_245264070((uint64_t)v80, v79[0] + 16);
      ZoneVersionAdvertisement.init(from:)(v79, (uint64_t)v84);
      sub_2452640AC((uint64_t)v80);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
      v73 = v84[8];
      v74 = v84[9];
      v75 = v85;
      v69 = v84[4];
      v70 = v84[5];
      v71 = v84[6];
      v72 = v84[7];
      v65 = v84[0];
      v66 = v84[1];
      v67 = v84[2];
      v68 = v84[3];
      v46 = v57;
      *v18 = v57;
      v47 = v59;
      v55(v18, v58, v59);
      v48 = v46;
      v49 = sub_2453879F8();
      v54(v18, v47);
      if ((v49 & 1) != 0)
      {
        v76[8] = v73;
        v76[9] = v74;
        v77 = v75;
        v76[4] = v69;
        v76[5] = v70;
        v76[6] = v71;
        v76[7] = v72;
        v76[0] = v65;
        v76[1] = v66;
        v76[2] = v67;
        v76[3] = v68;
        nullsub_1(v76);
        v50 = v56;
        sub_24525E4A8(v56 + 280, (uint64_t)v78);
        sub_24525E4A8((uint64_t)v76, v50 + 280);
        sub_245261B98((uint64_t)&v65);
        sub_2452640E0(v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
        sub_2452605E0();
        sub_245263A7C((uint64_t)&v65);
      }
      else
      {
        __break(1u);
      }
      return;
    }
LABEL_19:
    swift_once();
    goto LABEL_6;
  }
  if (qword_25744FDA8 != -1)
    swift_once();
  v37 = sub_245387818();
  __swift_project_value_buffer(v37, (uint64_t)qword_257463008);
  v38 = v62;
  sub_245263EF4(a1, v62);
  v39 = sub_2453877F4();
  v40 = sub_245387D1C();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc();
    v42 = swift_slowAlloc();
    *(_DWORD *)v41 = 136446210;
    *(_QWORD *)&v84[0] = v42;
    v43 = (uint64_t *)(v38 + *(int *)(v15 + 24));
    v44 = *v43;
    v45 = v43[1];
    swift_bridgeObjectRetain();
    v78[0] = sub_2453816D8(v44, v45, (uint64_t *)v84);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_245263E80(v38);
    _os_log_impl(&dword_245256000, v39, v40, "IDS zone advertiser ignoring unexpected message of type \"%{public}s\"", v41, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v42, -1, -1);
    MEMORY[0x24953317C](v41, -1, -1);
  }
  else
  {
    sub_245263E80(v38);
  }

}

uint64_t sub_24525F858()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_245263C88();
    return swift_release();
  }
  return result;
}

uint64_t sub_24525F8AC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t result;
  _QWORD v7[4];
  char v8;

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = *((_BYTE *)a1 + 32);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7[0] = v1;
    v7[1] = v2;
    v7[2] = v3;
    v7[3] = v4;
    v8 = v5;
    sub_24525F934((uint64_t)v7);
    return swift_release();
  }
  return result;
}

void sub_24525F934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v2 = v1;
  v4 = sub_2453879D4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (_QWORD *)((char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  v13 = *(void **)(v2 + 72);
  *v7 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v14 = v13;
  LOBYTE(v13) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v13 & 1) != 0)
  {
    if (qword_25744FDA8 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v15 = sub_245387818();
  __swift_project_value_buffer(v15, (uint64_t)qword_257463008);
  sub_24526385C(v9, v8);
  sub_24526385C(v9, v8);
  v16 = sub_2453877F4();
  v17 = sub_245387D34();
  if (os_log_type_enabled(v16, v17))
  {
    v24 = v2;
    v18 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v30 = v23;
    *(_DWORD *)v18 = 136446210;
    v22[1] = v18 + 4;
    v25 = v9;
    v26 = v8;
    v27 = v11;
    v28 = v10;
    v29 = v12;
    sub_24526385C(v9, v8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2574521A0);
    v19 = sub_245387B48();
    v25 = sub_2453816D8(v19, v20, &v30);
    sub_245387E0C();
    v2 = v24;
    swift_bridgeObjectRelease();
    sub_24526388C(v9, v8);
    sub_24526388C(v9, v8);
    _os_log_impl(&dword_245256000, v16, v17, "IDS zone advertiser didUpdatePairedDevice to %{public}s; sending latest advertisment",
      v18,
      0xCu);
    v21 = v23;
    swift_arrayDestroy();
    MEMORY[0x24953317C](v21, -1, -1);
    MEMORY[0x24953317C](v18, -1, -1);
  }
  else
  {
    sub_24526388C(v9, v8);
    sub_24526388C(v9, v8);
  }

  *(_BYTE *)(v2 + 248) = 1;
  sub_24526111C();
}

void sub_24525FC28()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0;
  v2 = sub_2453879D4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (void *)v1[9];
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_7;
  }
  if (v1[57])
  {
LABEL_12:
    swift_bridgeObjectRetain();
    return;
  }
  v8 = IDSCopyLocalDeviceUniqueID();
  if (v8)
  {
    v9 = (void *)v8;
    v10 = sub_245387B18();
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0;
  }
  v1[56] = v10;
  v1[57] = v12;
  swift_bridgeObjectRelease();
  if (qword_25744FDA8 != -1)
    goto LABEL_14;
LABEL_7:
  v13 = sub_245387818();
  __swift_project_value_buffer(v13, (uint64_t)qword_257463008);
  swift_retain_n();
  v14 = sub_2453877F4();
  v15 = sub_245387D34();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v21 = v17;
    *(_DWORD *)v16 = 136446210;
    v18 = sub_24525FC28();
    v20 = sub_2453816D8(v18, v19, &v21);
    sub_245387E0C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v14, v15, "Found local device ID: %{public}s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v17, -1, -1);
    MEMORY[0x24953317C](v16, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  if (v1[57])
  {
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t IDSZoneAdvertiser.deinit()
{
  uint64_t v0;
  _QWORD v2[21];
  _QWORD v3[22];

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();

  sub_24525E4A8(v0 + 80, (uint64_t)v2);
  sub_2452640E0(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
  swift_release();
  swift_release();
  sub_24525E4A8(v0 + 280, (uint64_t)v3);
  sub_2452640E0(v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24525FF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24525FFF8(a15, a16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24525FFF8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_24525CB80(a1, a2);
  return a1;
}

uint64_t IDSZoneAdvertiser.__deallocating_deinit()
{
  IDSZoneAdvertiser.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_24526002C()
{
  return sub_24525DE64();
}

uint64_t sub_24526004C()
{
  unsigned __int8 v1;

  sub_245387D7C();
  return v1;
}

uint64_t sub_24526009C(char a1)
{
  return sub_24525D7F4(a1);
}

uint64_t (*sub_2452600BC(uint64_t a1))(uint64_t a1)
{
  _QWORD *v1;

  *(_QWORD *)a1 = *v1;
  sub_245387D7C();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a1 + 9);
  return sub_24525DDE0;
}

uint64_t sub_245260124(uint64_t a1)
{
  return IDSZoneAdvertiser.advertise(_:)(a1);
}

uint64_t IDSZoneAdvertiser.advertise(_:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  void *v26;
  _QWORD v28[2];
  _QWORD aBlock[6];
  _OWORD v30[10];
  uint64_t v31;

  v3 = *v1;
  v4 = sub_245387920();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_245387950();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_OWORD *)(a1 + 128);
  v13 = *(_OWORD *)(a1 + 144);
  v14 = *(_OWORD *)(a1 + 96);
  v30[7] = *(_OWORD *)(a1 + 112);
  v30[8] = v12;
  v30[9] = v13;
  v16 = *(_OWORD *)(a1 + 64);
  v15 = *(_OWORD *)(a1 + 80);
  v31 = *(_QWORD *)(a1 + 160);
  v30[5] = v15;
  v30[6] = v14;
  v17 = *(_OWORD *)(a1 + 16);
  v30[0] = *(_OWORD *)a1;
  v18 = *(_OWORD *)(a1 + 32);
  v30[3] = *(_OWORD *)(a1 + 48);
  v30[4] = v16;
  v30[1] = v17;
  v30[2] = v18;
  v28[0] = v1[9];
  v19 = swift_allocObject();
  v20 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v19 + 136) = *(_OWORD *)(a1 + 112);
  v21 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v19 + 152) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v19 + 168) = v21;
  v22 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v19 + 72) = *(_OWORD *)(a1 + 48);
  v23 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v19 + 88) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v19 + 104) = v23;
  *(_OWORD *)(v19 + 120) = v20;
  v24 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v19 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v19 + 40) = v24;
  *(_QWORD *)(v19 + 16) = v1;
  v25 = *(_QWORD *)(a1 + 160);
  *(_OWORD *)(v19 + 56) = v22;
  *(_QWORD *)(v19 + 184) = v25;
  *(_QWORD *)(v19 + 192) = v3;
  aBlock[4] = sub_245261B88;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525DD34;
  aBlock[3] = &block_descriptor_10;
  v26 = _Block_copy(aBlock);
  swift_retain();
  sub_245261B98((uint64_t)v30);
  sub_245387938();
  v28[1] = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
  sub_245387E3C();
  MEMORY[0x2495320E4](0, v11, v7, v26);
  _Block_release(v26);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

void sub_2452603EC()
{
  IDSZoneAdvertiser.subscribe()();
}

Swift::Void __swiftcall IDSZoneAdvertiser.subscribe()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v12[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_245387920();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_245387950();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = *(_QWORD *)(v1 + 72);
  aBlock[4] = sub_245261C88;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525DD34;
  aBlock[3] = &block_descriptor_13;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_245387938();
  v12[1] = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_25744FF00, v3, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
  sub_245387E3C();
  MEMORY[0x2495320E4](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
}

void sub_2452605E0()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint8_t *v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD v30[10];
  uint64_t v31;
  _OWORD v32[11];
  _OWORD v33[11];
  _DWORD v34[42];
  _BYTE v35[168];
  _QWORD v36[21];
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v2 = v0;
  v3 = sub_2453879D4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (uint8_t **)((char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(v2 + 72);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE5610], v3);
  v8 = v7;
  LOBYTE(v7) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  sub_24525E4A8(v2 + 280, (uint64_t)v36);
  sub_24525E4A8((uint64_t)v36, (uint64_t)&v37);
  if (sub_2452638BC((uint64_t)&v37) == 1)
    return;
  v1 = v30;
  if (*(_BYTE *)(v2 + 249) != 1 || *(_BYTE *)(v2 + 272) != 1)
  {
    sub_24525E4A8((uint64_t)v36, (uint64_t)v35);
    sub_245261B98((uint64_t)v35);
    if (qword_25744FDA8 == -1)
    {
LABEL_10:
      v15 = sub_245387818();
      __swift_project_value_buffer(v15, (uint64_t)qword_257463008);
      swift_retain();
      sub_2452640E0(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_245264144);
      swift_retain();
      sub_2452640E0(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_245264144);
      v16 = sub_2453877F4();
      v17 = sub_245387D34();
      if (!os_log_type_enabled(v16, v17))
      {
        sub_2452640E0(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
        swift_release_n();
        sub_2452640E0(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
        sub_2452640E0(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);

        return;
      }
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_QWORD *)&v30[0] = v19;
      *(_DWORD *)v18 = 67240706;
      v34[0] = *(unsigned __int8 *)(v2 + 249);
      sub_245387E0C();
      *(_WORD *)(v18 + 8) = 1026;
      v20 = *(unsigned __int8 *)(v2 + 272);
      swift_release();
      v34[0] = v20;
      sub_245387E0C();
      swift_release();
      *(_WORD *)(v18 + 14) = 2082;
      *(_QWORD *)&v33[0] = 0;
      *((_QWORD *)&v33[0] + 1) = 0xE000000000000000;
      sub_24525E4A8((uint64_t)v36, (uint64_t)v34);
      sub_245261B98((uint64_t)v34);
      sub_245387EA8();
      v32[0] = v33[0];
      sub_245387B90();
      v21 = v44;
      v1[28] = v43;
      v1[29] = v21;
      v22 = v46;
      v1[30] = v45;
      v1[31] = v22;
      v23 = v40;
      v1[24] = v39;
      v1[25] = v23;
      v24 = v42;
      v1[26] = v41;
      v1[27] = v24;
      v25 = v38;
      v1[22] = v37;
      v1[23] = v25;
      sub_245387F5C();
      sub_245387B90();
      type metadata accessor for ZoneVersion();
      swift_bridgeObjectRetain();
      sub_245387A70();
      sub_245387B90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2452640E0(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
      *(_QWORD *)&v33[0] = sub_2453816D8(*(uint64_t *)&v32[0], *((unint64_t *)&v32[0] + 1), (uint64_t *)v30);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_2452640E0(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
      sub_2452640E0(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
      _os_log_impl(&dword_245256000, v16, v17, "received advertisement, but _queue_subscribed:%{BOOL,public}d _queue_enabled:%{BOOL,public}d so ignoring:%{public}s", (uint8_t *)v18, 0x18u);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v19, -1, -1);
      MEMORY[0x24953317C](v18, -1, -1);

      goto LABEL_15;
    }
LABEL_18:
    swift_once();
    goto LABEL_10;
  }
  sub_24525E4A8((uint64_t)v36, (uint64_t)v34);
  sub_245261B98((uint64_t)v34);
  if (qword_25744FDA8 != -1)
    swift_once();
  v9 = sub_245387818();
  __swift_project_value_buffer(v9, (uint64_t)qword_257463008);
  sub_24525E4A8((uint64_t)v36, (uint64_t)v35);
  sub_2452640E0(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_245264144);
  sub_245261B98((uint64_t)v35);
  v10 = sub_2453877F4();
  v11 = sub_245387D34();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v29 = v28;
    v27 = v12;
    *(_DWORD *)v12 = 136446210;
    v26 = v12 + 4;
    *(_QWORD *)&v32[0] = 0;
    *((_QWORD *)&v32[0] + 1) = 0xE000000000000000;
    sub_24525E4A8((uint64_t)v36, (uint64_t)v33);
    sub_245261B98((uint64_t)v33);
    sub_245387EA8();
    v30[0] = v32[0];
    sub_245387B90();
    v32[6] = v43;
    v32[7] = v44;
    v32[8] = v45;
    v32[9] = v46;
    v32[2] = v39;
    v32[3] = v40;
    v32[4] = v41;
    v32[5] = v42;
    v32[0] = v37;
    v32[1] = v38;
    sub_245387F5C();
    sub_245387B90();
    type metadata accessor for ZoneVersion();
    swift_bridgeObjectRetain();
    sub_245387A70();
    sub_245387B90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2452640E0(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
    *(_QWORD *)&v32[0] = sub_2453816D8(*(uint64_t *)&v30[0], *((unint64_t *)&v30[0] + 1), &v29);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_2452640E0(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
    sub_2452640E0(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
    v13 = v27;
    _os_log_impl(&dword_245256000, v10, v11, "subscribed, enabled, and got advertisement:%{public}s", v27, 0xCu);
    v14 = v28;
    swift_arrayDestroy();
    MEMORY[0x24953317C](v14, -1, -1);
    MEMORY[0x24953317C](v13, -1, -1);
  }
  else
  {
    sub_2452640E0(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
    sub_2452640E0(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
  }

  sub_24525E488((uint64_t)v32);
  sub_24525E4A8(v2 + 280, (uint64_t)v33);
  sub_24525E4A8((uint64_t)v32, v2 + 280);
  sub_2452640E0(v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
  v30[8] = v45;
  v30[9] = v46;
  v31 = v47;
  v30[4] = v41;
  v30[5] = v42;
  v30[6] = v43;
  v30[7] = v44;
  v30[0] = v37;
  v30[1] = v38;
  v30[2] = v39;
  v30[3] = v40;
  sub_245387878();
LABEL_15:
  sub_2452640E0(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
}

uint64_t sub_245260E4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  unint64_t v14;
  __int128 v15[10];
  unint64_t v16;
  _OWORD v17[10];
  unint64_t v18;
  _QWORD v19[21];
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  v1 = v0;
  v2 = sub_2453879D4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + 72);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_4;
  }
  if ((*(_BYTE *)(v1 + 272) & 1) != 0)
    return result;
  if (qword_25744FDA8 != -1)
    goto LABEL_13;
LABEL_4:
  v9 = sub_245387818();
  __swift_project_value_buffer(v9, (uint64_t)qword_257463008);
  v10 = sub_2453877F4();
  v11 = sub_245387D34();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_245256000, v10, v11, "Deactivating IDS zone advertiser", v12, 2u);
    MEMORY[0x24953317C](v12, -1, -1);
  }

  v13 = *(void **)(v1 + 464);
  *(_QWORD *)(v1 + 464) = 0;

  swift_beginAccess();
  *(_QWORD *)(v1 + 496) = MEMORY[0x24BEE4B08];
  swift_bridgeObjectRelease();
  sub_24525E4A8(v1 + 80, (uint64_t)v19);
  sub_24525E4A8((uint64_t)v19, (uint64_t)&v20);
  if (sub_2452638BC((uint64_t)&v20) != 1)
  {
    sub_2452640E0(v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_245264144);
    sub_24526432C((uint64_t)&v20);
    v14 = sub_24531B270(MEMORY[0x24BEE4AF8]);
    v17[6] = v26;
    v17[7] = v27;
    v17[8] = v28;
    v17[9] = v29;
    v17[2] = v22;
    v17[3] = v23;
    v17[4] = v24;
    v17[5] = v25;
    v17[0] = v20;
    v17[1] = v21;
    v15[8] = v28;
    v15[9] = v29;
    v15[4] = v24;
    v15[5] = v25;
    v18 = v14;
    v16 = v14;
    v15[6] = v26;
    v15[7] = v27;
    v15[0] = v20;
    v15[1] = v21;
    v15[2] = v22;
    v15[3] = v23;
    sub_245261334(v15, 1);
    sub_2452640E0(v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
    sub_245263A7C((uint64_t)v17);
    *(_BYTE *)(v1 + 248) = 1;
  }
  if (*(_QWORD *)(v1 + 256))
  {
    swift_retain();
    sub_245387C80();
    swift_release();
  }
  *(_QWORD *)(v1 + 256) = 0;
  return swift_release();
}

void sub_24526111C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  __int128 v11[10];
  uint64_t v12;
  _BYTE v13[168];
  _QWORD v14[21];
  _OWORD v15[10];
  uint64_t v16;

  v1 = sub_2453879D4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (_QWORD *)((char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + 72);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  LOBYTE(v5) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_7;
  }
  if (*(_BYTE *)(v0 + 272) == 1)
  {
    if (*(_BYTE *)(v0 + 248) == 1)
    {
      sub_24525E4A8(v0 + 80, (uint64_t)v14);
      sub_24525E4A8((uint64_t)v14, (uint64_t)v15);
      if (sub_2452638BC((uint64_t)v15) != 1)
      {
        *(_BYTE *)(v0 + 248) = 0;
        v11[8] = v15[8];
        v11[9] = v15[9];
        v12 = v16;
        v11[4] = v15[4];
        v11[5] = v15[5];
        v11[6] = v15[6];
        v11[7] = v15[7];
        v11[0] = v15[0];
        v11[1] = v15[1];
        v11[2] = v15[2];
        v11[3] = v15[3];
        sub_24525E4A8((uint64_t)v14, (uint64_t)v13);
        sub_245261B98((uint64_t)v13);
        sub_245261334(v11, 0);
        sub_2452640E0(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
      }
    }
    return;
  }
  if (qword_25744FDA8 != -1)
    goto LABEL_12;
LABEL_7:
  v7 = sub_245387818();
  __swift_project_value_buffer(v7, (uint64_t)qword_257463008);
  v8 = sub_2453877F4();
  v9 = sub_245387D34();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_245256000, v8, v9, "advertiser will advertise when enabled", v10, 2u);
    MEMORY[0x24953317C](v10, -1, -1);
  }

}

uint64_t sub_245261334(__int128 *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  void *v17;
  id v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257450038);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2453879D4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (_QWORD *)((char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = a1[9];
  v36 = a1[8];
  v37 = v12;
  v38 = *((_QWORD *)a1 + 20);
  v13 = a1[5];
  v32 = a1[4];
  v33 = v13;
  v14 = a1[7];
  v34 = a1[6];
  v35 = v14;
  v15 = a1[1];
  v28 = *a1;
  v29 = v15;
  v16 = a1[3];
  v30 = a1[2];
  v31 = v16;
  v17 = *(void **)(v2 + 72);
  *v11 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v18 = v17;
  LOBYTE(v17) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v17 & 1) != 0)
  {
    if (*(_QWORD *)(v2 + 264))
    {
      swift_retain();
      sub_245387C80();
      swift_release();
    }
    v20 = sub_245387C74();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v7, 1, 1, v20);
    v21 = swift_allocObject();
    swift_weakInit();
    v22 = swift_allocObject();
    v23 = v34;
    *(_OWORD *)(v22 + 152) = v35;
    v24 = v37;
    *(_OWORD *)(v22 + 168) = v36;
    *(_OWORD *)(v22 + 184) = v24;
    v25 = v30;
    *(_OWORD *)(v22 + 88) = v31;
    v26 = v33;
    *(_OWORD *)(v22 + 104) = v32;
    *(_OWORD *)(v22 + 120) = v26;
    *(_OWORD *)(v22 + 136) = v23;
    v27 = v29;
    *(_OWORD *)(v22 + 40) = v28;
    *(_OWORD *)(v22 + 56) = v27;
    *(_QWORD *)(v22 + 16) = 0;
    *(_QWORD *)(v22 + 24) = 0;
    *(_QWORD *)(v22 + 32) = v21;
    *(_QWORD *)(v22 + 200) = v38;
    *(_OWORD *)(v22 + 72) = v25;
    *(_BYTE *)(v22 + 208) = a2 & 1;
    sub_245261B98((uint64_t)&v28);
    *(_QWORD *)(v2 + 264) = sub_2452635C4((uint64_t)v7, (uint64_t)&unk_2574521B0, v22);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_245261578(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;

  v2 = sub_2453879D4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((*(_BYTE *)(a1 + 249) & 1) == 0)
  {
    v6 = *(void **)(a1 + 72);
    *v5 = v6;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
    v7 = v6;
    LOBYTE(v6) = sub_2453879F8();
    (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
    if ((v6 & 1) != 0)
    {
      *(_BYTE *)(a1 + 249) = 1;
      sub_2452605E0();
    }
    else
    {
      __break(1u);
    }
  }
}

_QWORD *sub_245261640(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char v27;
  _QWORD *result;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  _OWORD v51[10];
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  _QWORD v85[21];
  _OWORD v86[10];
  uint64_t v87;
  _BYTE v88[176];

  v4 = *(_OWORD *)(a2 + 144);
  v82 = *(_OWORD *)(a2 + 128);
  v83 = v4;
  v84 = *(_QWORD *)(a2 + 160);
  v5 = *(_OWORD *)(a2 + 80);
  v78 = *(_OWORD *)(a2 + 64);
  v79 = v5;
  v6 = *(_OWORD *)(a2 + 112);
  v80 = *(_OWORD *)(a2 + 96);
  v81 = v6;
  v7 = *(_OWORD *)(a2 + 16);
  v74 = *(_OWORD *)a2;
  v75 = v7;
  v8 = *(_OWORD *)(a2 + 48);
  v76 = *(_OWORD *)(a2 + 32);
  v77 = v8;
  v9 = sub_245387920();
  v38 = *(_QWORD *)(v9 - 8);
  v39 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_245387950();
  v36 = *(_QWORD *)(v12 - 8);
  v37 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2453879B0();
  v35 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v34 - v19;
  sub_24525E4A8(a1 + 80, (uint64_t)v85);
  v86[8] = v82;
  v86[9] = v83;
  v87 = v84;
  v86[4] = v78;
  v86[5] = v79;
  v86[7] = v81;
  v86[6] = v80;
  v86[0] = v74;
  v86[1] = v75;
  v86[3] = v77;
  v86[2] = v76;
  nullsub_1(v86);
  sub_24525E4A8((uint64_t)v85, (uint64_t)v88);
  if (sub_2452638BC((uint64_t)v88) == 1)
  {
    sub_24525E4A8((uint64_t)v85, (uint64_t)&v62);
    sub_24525E4A8((uint64_t)v86, (uint64_t)&v73);
    sub_245261B98(a2);
    sub_2452641D0((uint64_t)&v62);
  }
  else
  {
    v34 = v15;
    sub_24525E4A8((uint64_t)v85, (uint64_t)&v62);
    v58 = v68;
    v59 = v69;
    v60 = v70;
    v61 = v71;
    v54 = v64;
    v55 = v65;
    v56 = v66;
    v57 = v67;
    v52 = v62;
    v53 = v63;
    v21 = *(_OWORD *)(a2 + 112);
    v51[6] = *(_OWORD *)(a2 + 96);
    v51[7] = v21;
    v22 = *(_OWORD *)(a2 + 144);
    v51[8] = *(_OWORD *)(a2 + 128);
    v51[9] = v22;
    v23 = *(_OWORD *)(a2 + 48);
    v51[2] = *(_OWORD *)(a2 + 32);
    v51[3] = v23;
    v24 = *(_OWORD *)(a2 + 80);
    v51[4] = *(_OWORD *)(a2 + 64);
    v51[5] = v24;
    v25 = *(_OWORD *)(a2 + 16);
    v51[0] = *(_OWORD *)a2;
    v51[1] = v25;
    v46 = v68;
    v47 = v69;
    v48 = v70;
    v49 = v71;
    v42 = v64;
    v43 = v65;
    v44 = v66;
    v45 = v67;
    v26 = v72;
    v40 = v62;
    v41 = v63;
    sub_2452640E0(v85, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_245264144);
    sub_2452640E0(v85, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_245264144);
    sub_245261B98(a2);
    if ((_s16ReplicatorEngine24ZoneVersionAdvertisementV16DeviceDescriptorV2eeoiySbAE_AEtFZ_0((uint64_t)&v40, (uint64_t)v51) & 1) != 0)
    {
      v27 = sub_2452E0CFC(v26, *(_QWORD *)(a2 + 160));
      sub_245263A7C(a2);
      v46 = v58;
      v47 = v59;
      v48 = v60;
      v49 = v61;
      v42 = v54;
      v43 = v55;
      v44 = v56;
      v45 = v57;
      v40 = v52;
      v41 = v53;
      v50 = v26;
      sub_245263A7C((uint64_t)&v40);
      result = sub_2452640E0(v85, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
      if ((v27 & 1) != 0)
        return result;
    }
    else
    {
      sub_245263A7C(a2);
      v46 = v58;
      v47 = v59;
      v48 = v60;
      v49 = v61;
      v42 = v54;
      v43 = v55;
      v44 = v56;
      v45 = v57;
      v40 = v52;
      v41 = v53;
      v50 = v26;
      sub_245263A7C((uint64_t)&v40);
      sub_2452640E0(v85, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
    }
    v15 = v34;
  }
  sub_24525E4A8(a1 + 80, (uint64_t)&v62);
  sub_24525E4A8((uint64_t)v86, a1 + 80);
  sub_245261B98(a2);
  result = sub_2452640E0(&v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
  if ((*(_BYTE *)(a1 + 248) & 1) == 0)
  {
    *(_BYTE *)(a1 + 248) = 1;
    v34 = *(_QWORD *)(a1 + 72);
    sub_245387998();
    if (qword_25744F920 != -1)
      swift_once();
    v29 = sub_245387914();
    v30 = __swift_project_value_buffer(v29, (uint64_t)qword_25744F900);
    MEMORY[0x249531D3C](v18, v30);
    v31 = *(void (**)(char *, uint64_t))(v35 + 8);
    v31(v18, v15);
    *(_QWORD *)&v42 = sub_2452642E8;
    *((_QWORD *)&v42 + 1) = a1;
    *(_QWORD *)&v40 = MEMORY[0x24BDAC760];
    *((_QWORD *)&v40 + 1) = 1107296256;
    *(_QWORD *)&v41 = sub_24525DD34;
    *((_QWORD *)&v41 + 1) = &block_descriptor_59;
    v32 = _Block_copy(&v40);
    swift_retain();
    sub_245387938();
    *(_QWORD *)&v52 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
    v33 = v39;
    sub_245387E3C();
    MEMORY[0x2495320B4](v20, v14, v11, v32);
    _Block_release(v32);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v33);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v37);
    v31(v20, v15);
    return (_QWORD *)swift_release();
  }
  return result;
}

uint64_t sub_245261B80()
{
  return objectdestroy_6Tm();
}

_QWORD *sub_245261B88()
{
  uint64_t v0;

  return sub_245261640(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t sub_245261B98(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 112);
  v3 = *(_QWORD *)(a1 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_245261C30(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_245261C30(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_245261C44(a1, a2);
  return a1;
}

uint64_t sub_245261C44(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

void sub_245261C88()
{
  uint64_t v0;

  sub_245261578(v0);
}

uint64_t sub_245261C90@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_245387D7C();
  *a1 = v3;
  return result;
}

uint64_t sub_245261CE8(char *a1)
{
  return sub_24525D7F4(*a1);
}

uint64_t sub_245261D0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_24525DE64();
  *a1 = result;
  return result;
}

uint64_t sub_245261D34(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 56) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t type metadata accessor for IDSZoneAdvertiser()
{
  return objc_opt_self();
}

uint64_t method lookup function for IDSZoneAdvertiser()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IDSZoneAdvertiser.isEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of IDSZoneAdvertiser.isEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of IDSZoneAdvertiser.isEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of IDSZoneAdvertiser.zoneVersionPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of IDSZoneAdvertiser.zoneVersionPublisher.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of IDSZoneAdvertiser.zoneVersionPublisher.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of IDSZoneAdvertiser.__allocating_init(idsServiceName:firstLockStateProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 520))();
}

uint64_t sub_245261DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  *(_BYTE *)(v6 + 392) = a6;
  *(_QWORD *)(v6 + 376) = a4;
  *(_QWORD *)(v6 + 384) = a5;
  return swift_task_switch();
}

uint64_t sub_245261DFC()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  _OWORD *v8;
  uint8_t *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t result;
  NSObject *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40[3];

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = Strong;
  if (qword_25744FDA8 != -1)
    swift_once();
  v3 = *(_QWORD *)(v0 + 384);
  v4 = sub_245387818();
  __swift_project_value_buffer(v4, (uint64_t)qword_257463008);
  sub_245261B98(v3);
  sub_245261B98(v3);
  v5 = sub_2453877F4();
  v6 = sub_245387D34();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_OWORD **)(v0 + 384);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v39 = swift_slowAlloc();
    v40[0] = v39;
    *(_DWORD *)v9 = 136446210;
    v10 = v8[1];
    *(_OWORD *)(v0 + 16) = *v8;
    *(_OWORD *)(v0 + 32) = v10;
    v11 = v8[5];
    v13 = v8[2];
    v12 = v8[3];
    *(_OWORD *)(v0 + 80) = v8[4];
    *(_OWORD *)(v0 + 96) = v11;
    *(_OWORD *)(v0 + 48) = v13;
    *(_OWORD *)(v0 + 64) = v12;
    v14 = v8[9];
    v16 = v8[6];
    v15 = v8[7];
    *(_OWORD *)(v0 + 144) = v8[8];
    *(_OWORD *)(v0 + 160) = v14;
    *(_OWORD *)(v0 + 112) = v16;
    *(_OWORD *)(v0 + 128) = v15;
    v40[1] = 0;
    v40[2] = 0xE000000000000000;
    sub_245261B98((uint64_t)v8);
    sub_245387EA8();
    *(_QWORD *)(v0 + 360) = 0;
    *(_QWORD *)(v0 + 368) = 0xE000000000000000;
    sub_245387B90();
    v17 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 272) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 288) = v17;
    v18 = *(_OWORD *)(v0 + 160);
    *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 144);
    *(_OWORD *)(v0 + 320) = v18;
    v19 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 224) = v19;
    v20 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 256) = v20;
    v21 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v0 + 192) = v21;
    sub_245387F5C();
    sub_245387B90();
    type metadata accessor for ZoneVersion();
    swift_bridgeObjectRetain();
    sub_245387A70();
    sub_245387B90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_245263A7C((uint64_t)v8);
    *(_QWORD *)(v0 + 176) = sub_2453816D8(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 368), v40);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_245263A7C((uint64_t)v8);
    sub_245263A7C((uint64_t)v8);
    _os_log_impl(&dword_245256000, v5, v6, "advertiser advertising %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v39, -1, -1);
    MEMORY[0x24953317C](v9, -1, -1);
  }
  else
  {
    sub_245263A7C(*(_QWORD *)(v0 + 384));
    sub_245263A7C((uint64_t)v8);
  }

  v22 = *(_QWORD *)(v0 + 384);
  v23 = *(NSObject **)(v2 + 72);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v2;
  v26 = *(_OWORD *)(v22 + 16);
  v25 = *(_OWORD *)(v22 + 32);
  *(_OWORD *)(v24 + 24) = *(_OWORD *)v22;
  *(_OWORD *)(v24 + 40) = v26;
  *(_OWORD *)(v24 + 56) = v25;
  v27 = *(_OWORD *)(v22 + 80);
  v28 = *(_OWORD *)(v22 + 96);
  v29 = *(_OWORD *)(v22 + 64);
  *(_OWORD *)(v24 + 72) = *(_OWORD *)(v22 + 48);
  *(_OWORD *)(v24 + 120) = v28;
  *(_OWORD *)(v24 + 104) = v27;
  *(_OWORD *)(v24 + 88) = v29;
  v31 = *(_OWORD *)(v22 + 128);
  v30 = *(_OWORD *)(v22 + 144);
  v32 = *(_QWORD *)(v22 + 160);
  *(_OWORD *)(v24 + 136) = *(_OWORD *)(v22 + 112);
  *(_QWORD *)(v24 + 184) = v32;
  *(_OWORD *)(v24 + 168) = v30;
  *(_OWORD *)(v24 + 152) = v31;
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = sub_245263B9C;
  *(_QWORD *)(v33 + 24) = v24;
  *(_QWORD *)(v0 + 208) = sub_245263BB8;
  *(_QWORD *)(v0 + 216) = v33;
  *(_QWORD *)(v0 + 176) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 184) = 1107296256;
  *(_QWORD *)(v0 + 192) = sub_24525B888;
  *(_QWORD *)(v0 + 200) = &block_descriptor_40;
  v34 = _Block_copy((const void *)(v0 + 176));
  sub_245261B98(v22);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v23, v34);
  _Block_release(v34);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v23 & 1) == 0)
  {
    if (*(_BYTE *)(v0 + 392) == 1)
    {
      v36 = *(NSObject **)(v2 + 72);
      v37 = swift_allocObject();
      *(_QWORD *)(v37 + 16) = sub_245263BC0;
      *(_QWORD *)(v37 + 24) = v2;
      *(_QWORD *)(v0 + 208) = sub_2452643B4;
      *(_QWORD *)(v0 + 216) = v37;
      *(_QWORD *)(v0 + 176) = MEMORY[0x24BDAC760];
      *(_QWORD *)(v0 + 184) = 1107296256;
      *(_QWORD *)(v0 + 192) = sub_24525B888;
      *(_QWORD *)(v0 + 200) = &block_descriptor_47;
      v38 = _Block_copy((const void *)(v0 + 176));
      swift_retain();
      swift_retain();
      swift_release();
      dispatch_sync(v36, v38);
      swift_release();
      _Block_release(v38);
      LOBYTE(v38) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      swift_release();
      if ((v38 & 1) == 0)
        return (*(uint64_t (**)(void))(v0 + 8))();
      __break(1u);
    }
    swift_release();
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  __break(1u);
  return result;
}

__n128 sub_245262364(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8[10];
  uint64_t v9;

  v2 = *(_OWORD *)(a2 + 144);
  v8[8] = *(_OWORD *)(a2 + 128);
  v8[9] = v2;
  v9 = *(_QWORD *)(a2 + 160);
  v3 = *(_OWORD *)(a2 + 80);
  v8[4] = *(_OWORD *)(a2 + 64);
  v8[5] = v3;
  v4 = *(_OWORD *)(a2 + 112);
  v8[6] = *(_OWORD *)(a2 + 96);
  v8[7] = v4;
  v5 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v5;
  v6 = *(_OWORD *)(a2 + 48);
  v8[2] = *(_OWORD *)(a2 + 32);
  v8[3] = v6;
  sub_2452625A0(v8);
  return result;
}

void sub_2452625A0(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t inited;
  char *v34;
  void *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  _BYTE *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  os_log_t v46;
  Class isa;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  os_unfair_lock_s *v62;
  uint64_t v63;
  uint64_t v64;
  os_unfair_lock_s *v65;
  uint64_t v66;
  _BYTE *v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  NSObject *v77;
  os_log_type_t v78;
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  _BYTE *v85;
  os_log_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  _BYTE *v96;
  uint64_t v97;
  unint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  id v107;
  id v108;
  uint64_t v109;
  unint64_t v110;
  os_log_t v111;
  uint64_t v112;
  void *v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  _BYTE *v117;
  uint64_t v118;
  unint64_t v119;
  _BYTE *v120;
  _BYTE v121[12];
  int v122;
  os_log_t v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  _BYTE *v133;
  os_log_t v134;
  uint64_t v135;
  _BYTE *v136;
  _BYTE *v137;
  _BYTE *v138;
  uint64_t v139;
  uint64_t v140;
  NSObject *v141;
  unint64_t v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  uint64_t v153;
  uint64_t v154;

  v3 = v1;
  v5 = sub_245387740();
  v134 = *(os_log_t *)(v5 - 8);
  v135 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v133 = &v121[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v7);
  v137 = &v121[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = (int *)type metadata accessor for Message();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = &v121[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v136 = &v121[-v13];
  v14 = sub_2453879D4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = &v121[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = a1[9];
  v151 = a1[8];
  v152 = v18;
  v153 = *((_QWORD *)a1 + 20);
  v19 = a1[5];
  v147 = a1[4];
  v148 = v19;
  v20 = a1[7];
  v149 = a1[6];
  v150 = v20;
  v21 = a1[1];
  v143 = *a1;
  v144 = v21;
  v22 = a1[3];
  v145 = a1[2];
  v146 = v22;
  v23 = *(void **)(v3 + 72);
  *v17 = v23;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BEE5610], v14);
  v24 = v23;
  LOBYTE(v23) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v23 & 1) == 0)
  {
    __break(1u);
LABEL_34:
    swift_once();
LABEL_6:
    v36 = sub_245387818();
    __swift_project_value_buffer(v36, (uint64_t)qword_257463008);
    swift_retain_n();
    v37 = sub_2453877F4();
    v38 = sub_245387D1C();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = (_BYTE *)swift_slowAlloc();
      v138 = v40;
      *(_DWORD *)v39 = 136446210;
      v132 = v15;
      sub_24525FC28();
      v154 = sub_2453816D8(v41, v42, (uint64_t *)&v138);
      sub_245387E0C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v37, v38, "(%{public}s) Cannot send advertisement as we have no IDS service wrapper", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v40, -1, -1);
      MEMORY[0x24953317C](v39, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return;
  }
  v25 = *(void **)(v3 + 464);
  v26 = v3;
  if (!v25)
  {
    v15 = v2;
    if (qword_25744FDA8 == -1)
      goto LABEL_6;
    goto LABEL_34;
  }
  v141 = &type metadata for ZoneVersionAdvertisement;
  v142 = sub_245263BD8();
  v27 = swift_allocObject();
  v138 = (_BYTE *)v27;
  v28 = v152;
  *(_OWORD *)(v27 + 144) = v151;
  *(_OWORD *)(v27 + 160) = v28;
  *(_QWORD *)(v27 + 176) = v153;
  v29 = v148;
  *(_OWORD *)(v27 + 80) = v147;
  *(_OWORD *)(v27 + 96) = v29;
  v30 = v150;
  *(_OWORD *)(v27 + 112) = v149;
  *(_OWORD *)(v27 + 128) = v30;
  v31 = v144;
  *(_OWORD *)(v27 + 16) = v143;
  *(_OWORD *)(v27 + 32) = v31;
  v32 = v146;
  *(_OWORD *)(v27 + 48) = v145;
  *(_OWORD *)(v27 + 64) = v32;
  type metadata accessor for PropertyListTypeEncoder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = 12;
  *(_BYTE *)(inited + 24) = 0;
  v34 = v25;
  sub_245261B98((uint64_t)&v143);
  v35 = (void *)sub_24537B31C(&v138);
  if (v2)
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v138);
    return;
  }
  v43 = sub_24537E224(v35);
  v130 = v43;
  v131 = v44;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v138);
  v132 = 0;
  v129 = v34;
  v46 = v134;
  v45 = v135;
  isa = v134[7].isa;
  ((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))isa)(v137, 1, 1, v135);
  v128 = v26;
  sub_24525FC28();
  v126 = v49;
  v127 = v48;
  v50 = v43;
  v51 = v131;
  sub_245261C44(v50, v131);
  v52 = v133;
  sub_245387734();
  v53 = (uint64_t)&v12[v9[5]];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))isa)(v53, 1, 1, v45);
  v54 = v129;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v46[4].isa)(v12, v52, v45);
  sub_245263DDC((uint64_t)v137, v53);
  v55 = &v12[v9[6]];
  *v55 = 0xD000000000000014;
  v55[1] = 0x8000000245392F70;
  v56 = (uint64_t *)&v12[v9[7]];
  v57 = v126;
  *v56 = v127;
  v56[1] = v57;
  *(_QWORD *)&v12[v9[8]] = 12;
  v58 = &v12[v9[9]];
  *v58 = v130;
  v58[1] = v51;
  v59 = (uint64_t)v12;
  v60 = v136;
  v61 = sub_245263E24(v59, (uint64_t)v136);
  v62 = *(os_unfair_lock_s **)&v54[OBJC_IVAR____TtC16ReplicatorEngine17IDSServiceWrapper_pairedDeviceLock];
  MEMORY[0x24BDAC7A8](v61);
  *(_QWORD *)&v121[-16] = v54;
  swift_retain();
  os_unfair_lock_lock(v62 + 4);
  v63 = v132;
  sub_2452E6204(v64, (uint64_t (*)(void))sub_245263E68);
  v132 = v63;
  v65 = v62 + 4;
  if (!v63)
  {
    os_unfair_lock_unlock(v65);
    swift_release();
    v66 = v139;
    if (v139)
    {
      v67 = v138;
      v134 = v141;
      v135 = v140;
      v68 = v142;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25744F670);
      v69 = swift_initStackObject();
      *(_OWORD *)(v69 + 16) = xmmword_245389A60;
      v137 = v67;
      *(_QWORD *)(v69 + 32) = v67;
      *(_QWORD *)(v69 + 40) = v66;
      swift_bridgeObjectRetain();
      v70 = sub_245331384(v69);
      swift_setDeallocating();
      v71 = swift_arrayDestroy();
      MEMORY[0x24BDAC7A8](v71);
      *(_QWORD *)&v121[-32] = v54;
      *(_QWORD *)&v121[-24] = v60;
      *(_QWORD *)&v121[-16] = v70;
      v121[-8] = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2574521C8);
      v72 = v132;
      sub_245387D7C();
      v132 = v72;
      swift_bridgeObjectRelease();
      v73 = v138;
      LODWORD(v126) = v139;
      if (qword_25744FDA8 != -1)
        swift_once();
      v74 = sub_245387818();
      v75 = __swift_project_value_buffer(v74, (uint64_t)qword_257463008);
      swift_retain();
      v76 = v137;
      sub_24526385C((uint64_t)v137, v66);
      swift_retain();
      sub_24526385C((uint64_t)v76, v66);
      v127 = v75;
      v77 = sub_2453877F4();
      v78 = sub_245387D34();
      v79 = v78;
      v80 = v68;
      if (os_log_type_enabled(v77, v78))
      {
        v81 = swift_slowAlloc();
        v125 = v73;
        v82 = v81;
        v124 = swift_slowAlloc();
        v154 = v124;
        *(_DWORD *)v82 = 136446466;
        LODWORD(v133) = v68;
        v123 = v77;
        sub_24525FC28();
        v138 = (_BYTE *)sub_2453816D8(v83, v84, &v154);
        sub_245387E0C();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v82 + 12) = 2080;
        v122 = v79;
        v85 = v137;
        v138 = v137;
        v139 = v66;
        v86 = v134;
        v87 = v135;
        v140 = v135;
        v141 = v134;
        LOBYTE(v142) = (_BYTE)v133;
        PairedDevice.description.getter();
        v138 = (_BYTE *)sub_2453816D8(v88, v89, &v154);
        v80 = (int)v133;
        sub_245387E0C();
        swift_bridgeObjectRelease();
        sub_24526388C((uint64_t)v85, v66);
        sub_24526388C((uint64_t)v85, v66);
        v77 = v123;
        _os_log_impl(&dword_245256000, v123, (os_log_type_t)v122, "(%{public}s) Sending advertisement to %s", (uint8_t *)v82, 0x16u);
        v90 = v124;
        swift_arrayDestroy();
        MEMORY[0x24953317C](v90, -1, -1);
        v91 = v82;
        v73 = v125;
        MEMORY[0x24953317C](v91, -1, -1);
      }
      else
      {
        swift_release_n();
        v85 = v137;
        v86 = v134;
        v87 = v135;
        sub_24526388C((uint64_t)v137, v66);
        sub_24526388C((uint64_t)v85, v66);
      }

      if ((_DWORD)v126)
      {
        sub_245263EDC(v73, 1);
        swift_retain();
        sub_245263EDC(v73, 1);
        swift_retain();
        sub_24526385C((uint64_t)v85, v66);
        sub_245263EDC(v73, 1);
        v99 = sub_2453877F4();
        v100 = sub_245387D1C();
        LODWORD(v137) = v100;
        if (os_log_type_enabled(v99, v100))
        {
          v101 = swift_slowAlloc();
          v125 = v73;
          v102 = v101;
          v135 = swift_slowAlloc();
          v154 = v135;
          *(_DWORD *)v102 = 136446722;
          LODWORD(v133) = v80;
          v134 = v99;
          sub_24525FC28();
          v138 = (_BYTE *)sub_2453816D8(v103, v104, &v154);
          sub_245387E0C();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v102 + 12) = 2080;
          v138 = v85;
          v139 = v66;
          v140 = v87;
          v141 = v86;
          LOBYTE(v142) = (_BYTE)v133;
          PairedDevice.description.getter();
          v138 = (_BYTE *)sub_2453816D8(v105, v106, &v154);
          sub_245387E0C();
          swift_bridgeObjectRelease();
          sub_24526388C((uint64_t)v85, v66);
          sub_24526388C((uint64_t)v85, v66);
          *(_WORD *)(v102 + 22) = 2082;
          v107 = v125;
          v138 = v125;
          v108 = v125;
          __swift_instantiateConcreteTypeFromMangledName(&qword_25440C868);
          v109 = sub_245387B48();
          v138 = (_BYTE *)sub_2453816D8(v109, v110, &v154);
          sub_245387E0C();
          swift_bridgeObjectRelease();
          sub_245263EE8(v107, 1);
          sub_245263EE8(v107, 1);
          v111 = v134;
          _os_log_impl(&dword_245256000, v134, (os_log_type_t)v137, "(%{public}s) Error sending advertisement to %s: %{public}s", (uint8_t *)v102, 0x20u);
          v112 = v135;
          swift_arrayDestroy();
          MEMORY[0x24953317C](v112, -1, -1);
          MEMORY[0x24953317C](v102, -1, -1);

          sub_245263EE8(v107, 1);
          v113 = v107;
        }
        else
        {

          sub_245263EE8(v73, 1);
          sub_245263EE8(v73, 1);

          sub_24526388C((uint64_t)v85, v66);
          sub_24526388C((uint64_t)v85, v66);
          swift_release_n();
          v113 = v73;
        }
        sub_245263EE8(v113, 1);
      }
      else
      {
        sub_24526388C((uint64_t)v85, v66);
        swift_retain_n();
        v114 = sub_2453877F4();
        v115 = sub_245387D34();
        if (os_log_type_enabled(v114, v115))
        {
          v116 = (uint8_t *)swift_slowAlloc();
          v117 = (_BYTE *)swift_slowAlloc();
          v138 = v117;
          *(_DWORD *)v116 = 136446210;
          sub_24525FC28();
          v154 = sub_2453816D8(v118, v119, (uint64_t *)&v138);
          sub_245387E0C();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_245256000, v114, v115, "(%{public}s) Sucessfully sent advertisement", v116, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24953317C](v117, -1, -1);
          MEMORY[0x24953317C](v116, -1, -1);
        }
        else
        {
          swift_release_n();
        }

      }
    }
    else
    {
      if (qword_25744FDA8 != -1)
        swift_once();
      v92 = sub_245387818();
      __swift_project_value_buffer(v92, (uint64_t)qword_257463008);
      swift_retain_n();
      v93 = sub_2453877F4();
      v94 = sub_245387D34();
      if (!os_log_type_enabled(v93, v94))
      {
        swift_release_n();

        sub_24525CB80(v130, v131);
        v120 = v60;
LABEL_32:
        sub_245263E80((uint64_t)v120);
        return;
      }
      v95 = (uint8_t *)swift_slowAlloc();
      v96 = (_BYTE *)swift_slowAlloc();
      v138 = v96;
      *(_DWORD *)v95 = 136446210;
      v137 = v95 + 4;
      sub_24525FC28();
      v154 = sub_2453816D8(v97, v98, (uint64_t *)&v138);
      sub_245387E0C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v93, v94, "(%{public}s) No current paired device, so couldn't send advertisement", v95, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v96, -1, -1);
      MEMORY[0x24953317C](v95, -1, -1);

    }
    sub_24525CB80(v130, v131);
    v120 = v136;
    goto LABEL_32;
  }
  os_unfair_lock_unlock(v65);
  __break(1u);
}

uint64_t sub_2452634AC(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  if (qword_25744FDA8 != -1)
    swift_once();
  v2 = sub_245387818();
  __swift_project_value_buffer(v2, (uint64_t)qword_257463008);
  v3 = sub_2453877F4();
  v4 = sub_245387D34();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_245256000, v3, v4, "advertisement task is shutting down", v5, 2u);
    MEMORY[0x24953317C](v5, -1, -1);
  }

  if (*(_QWORD *)(a1 + 264))
  {
    swift_retain();
    sub_245387C80();
    swift_release();
  }
  *(_QWORD *)(a1 + 264) = 0;
  return swift_release();
}

uint64_t sub_2452635C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_245387C74();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_245387C68();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_245263F80(a1, &qword_257450038);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_245387C50();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_245263710(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_245263774;
  return v6(a1);
}

uint64_t sub_245263774()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2452637C0(uint64_t a1, uint64_t a2)
{
  return sub_24525EED4(a1, a2);
}

uint64_t sub_2452637C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574521D0);
  return v3(a1, a1 + *(int *)(v4 + 48));
}

uint64_t sub_24526380C()
{
  return sub_24525F858();
}

uint64_t sub_245263814(uint64_t *a1)
{
  return sub_24525F8AC(a1);
}

uint64_t sub_24526381C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2495330B0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24526385C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24526388C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2452638BC(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_2452638D4()
{
  uint64_t v0;
  unint64_t v1;

  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 160);
  if (v1 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v0 + 152), v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_245263950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = v0 + 40;
  v4 = *(_BYTE *)(v0 + 208);
  v5 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_2452639C4;
  *(_BYTE *)(v5 + 392) = v4;
  *(_QWORD *)(v5 + 376) = v2;
  *(_QWORD *)(v5 + 384) = v3;
  return swift_task_switch();
}

uint64_t sub_2452639C4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_245263A0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2452639C4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2574521B8 + dword_2574521B8))(a1, v4);
}

uint64_t sub_245263A7C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 112);
  v3 = *(_QWORD *)(a1 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24525FFF8(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_245263B14()
{
  return objectdestroy_6Tm();
}

uint64_t objectdestroy_6Tm()
{
  uint64_t v0;
  unint64_t v1;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 144);
  if (v1 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v0 + 136), v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

double sub_245263B9C()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = sub_245262364(*(_QWORD *)(v0 + 16), v0 + 24).n128_u64[0];
  return result;
}

uint64_t sub_245263BA8()
{
  return swift_deallocObject();
}

uint64_t sub_245263BB8()
{
  uint64_t v0;

  return sub_24525B868(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_245263BC0()
{
  uint64_t v0;

  return sub_2452634AC(v0);
}

uint64_t sub_245263BC8()
{
  return swift_deallocObject();
}

unint64_t sub_245263BD8()
{
  unint64_t result;

  result = qword_25744FC80;
  if (!qword_25744FC80)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for ZoneVersionAdvertisement, &type metadata for ZoneVersionAdvertisement);
    atomic_store(result, (unint64_t *)&qword_25744FC80);
  }
  return result;
}

uint64_t sub_245263C1C()
{
  uint64_t v0;
  unint64_t v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 136);
  if (v1 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v0 + 128), v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_245263C88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;

  v1 = sub_2453879D4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (uint64_t *)((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + 72);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  LOBYTE(v5) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    if (qword_25744FDA8 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v7 = sub_245387818();
  __swift_project_value_buffer(v7, (uint64_t)qword_257463008);
  v8 = sub_2453877F4();
  v9 = sub_245387D34();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_245256000, v8, v9, "IDS zone advertiser devicesDidChange", v10, 2u);
    MEMORY[0x24953317C](v10, -1, -1);
  }

}

uint64_t sub_245263DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_245263E24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Message();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_245263E68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2452E8CE0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_245263E80(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Message();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_245263EBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2452E9758(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), a1);
}

id sub_245263EDC(id result, char a2)
{
  if ((a2 & 1) != 0)
    return result;
  return result;
}

void sub_245263EE8(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

uint64_t sub_245263EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Message();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_245263F38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_245263F80(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_245263FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_245263FF8()
{
  unint64_t result;

  result = qword_25440C7C0[0];
  if (!qword_25440C7C0[0])
  {
    result = MEMORY[0x2495330B0](&unk_24538F018, &type metadata for PropertyListTypeDecoder.RootDecoder);
    atomic_store(result, qword_25440C7C0);
  }
  return result;
}

uint64_t sub_24526403C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_245264070(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PropertyListTypeDecoder.RootDecoder(a2, a1);
  return a2;
}

uint64_t sub_2452640AC(uint64_t a1)
{
  destroy for PropertyListTypeDecoder.RootDecoder(a1);
  return a1;
}

_QWORD *sub_2452640E0(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20]);
  return a1;
}

uint64_t sub_245264144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_245261C30(a15, a16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2452641D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v2 = *(_QWORD *)(a1 + 168);
  v3 = *(_QWORD *)(a1 + 176);
  v4 = *(_QWORD *)(a1 + 184);
  v5 = *(_QWORD *)(a1 + 192);
  v6 = *(_QWORD *)(a1 + 200);
  v7 = *(_QWORD *)(a1 + 208);
  v8 = *(_QWORD *)(a1 + 216);
  v9 = *(_QWORD *)(a1 + 224);
  v13 = *(_OWORD *)(a1 + 248);
  v14 = *(_OWORD *)(a1 + 232);
  v12 = *(_OWORD *)(a1 + 264);
  v11 = *(_OWORD *)(a1 + 280);
  sub_24525FF6C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120));
  sub_24525FF6C(v2, v3, v4, v5, v6, v7, v8, v9, v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11, *((unint64_t *)&v11 + 1));
  return a1;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_24526432C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 112);
  v3 = *(_QWORD *)(a1 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_245261C30(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_2452643B8(_BYTE *a1@<X8>)
{
  sub_24525D7E8(a1);
}

BOOL static PublicationMethod.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PublicationMethod.hash(into:)()
{
  return sub_245388448();
}

uint64_t PublicationMethod.hashValue.getter()
{
  sub_24538843C();
  sub_245388448();
  return sub_245388478();
}

unint64_t sub_245264484()
{
  unint64_t result;

  result = qword_2574521D8;
  if (!qword_2574521D8)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for PublicationMethod, &type metadata for PublicationMethod);
    atomic_store(result, &qword_2574521D8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PublicationMethod(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_245264514 + 4 * byte_245389B35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_245264548 + 4 * byte_245389B30[v4]))();
}

uint64_t sub_245264548(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_245264550(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x245264558);
  return result;
}

uint64_t sub_245264564(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24526456CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_245264570(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_245264578(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PublicationMethod()
{
  return &type metadata for PublicationMethod;
}

uint64_t sub_245264594()
{
  unsigned __int8 v1;

  sub_245387D7C();
  return v1;
}

void sub_2452645EC(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_enabled);
}

uint64_t sub_245264600(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  _QWORD v16[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_245387920();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_245387950();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(_QWORD *)(v2 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v2;
  aBlock[4] = sub_245264820;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525DD34;
  aBlock[3] = &block_descriptor_1;
  v14 = _Block_copy(aBlock);
  swift_retain();
  sub_245387938();
  v16[1] = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_25744FF00, v5, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
  sub_245387E3C();
  MEMORY[0x2495320E4](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_2452647FC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_245264820()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 16) == 1)
    sub_24526486C();
  else
    sub_245264A2C();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

void sub_24526486C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  uint64_t v13;

  v1 = v0;
  v2 = sub_2453879D4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_4;
  }
  v3 = OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_enabled;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_enabled) & 1) != 0)
    return;
  if (qword_25744FD90 != -1)
    goto LABEL_9;
LABEL_4:
  v8 = sub_245387818();
  __swift_project_value_buffer(v8, (uint64_t)qword_257462FB0);
  v9 = sub_2453877F4();
  v10 = sub_245387D34();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_245256000, v9, v10, "Enabling zone advertiser", v11, 2u);
    MEMORY[0x24953317C](v11, -1, -1);
  }

  v12 = (_QWORD *)(v1
                 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_incomingAdvertisementsByRemoteDevice);
  swift_beginAccess();
  *v12 = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  *(_BYTE *)(v1 + v3) = 1;
  sub_245265568();
}

uint64_t sub_245264A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;

  v1 = v0;
  v2 = sub_2453879D4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_4;
  }
  v3 = OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_enabled;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_enabled) != 1)
    return result;
  if (qword_25744FD90 != -1)
    goto LABEL_9;
LABEL_4:
  v9 = sub_245387818();
  __swift_project_value_buffer(v9, (uint64_t)qword_257462FB0);
  v10 = sub_2453877F4();
  v11 = sub_245387D34();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_245256000, v10, v11, "Disabling zone advertiser", v12, 2u);
    MEMORY[0x24953317C](v12, -1, -1);
  }

  *(_BYTE *)(v1 + v3) = 0;
  return sub_245265E7C();
}

uint64_t (*sub_245264BB4(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  sub_245387D7C();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a1 + 9);
  return sub_245264C24;
}

uint64_t sub_245264C24(uint64_t a1)
{
  return sub_245264600(*(_BYTE *)(a1 + 8));
}

uint64_t sub_245264C48()
{
  uint64_t v0;

  v0 = sub_245387914();
  __swift_allocate_value_buffer(v0, qword_25744FBB8);
  *(_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_25744FBB8) = 500;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t sub_245264CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser____lazy_storage___zoneVersionPublisher;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser____lazy_storage___zoneVersionPublisher))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser____lazy_storage___zoneVersionPublisher);
  }
  else
  {
    v3 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FED0);
    sub_24526381C((unint64_t *)&qword_25744FEC8, &qword_25744FED0, MEMORY[0x24BDB9CB0]);
    v2 = sub_24538789C();
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_245264D5C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser____lazy_storage___zoneVersionPublisher) = a1;
  return swift_release();
}

uint64_t (*sub_245264D74(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_245264CA8();
  return sub_245264DA8;
}

uint64_t sub_245264DA8(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser____lazy_storage___zoneVersionPublisher) = *a1;
  return swift_release();
}

uint64_t StatusKitZoneAdvertiser.__allocating_init(key:firstLockStateProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  StatusKitZoneAdvertiser.init(key:firstLockStateProvider:)(a1, a2, a3);
  return v6;
}

uint64_t StatusKitZoneAdvertiser.init(key:firstLockStateProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  _QWORD v47[13];

  v4 = v3;
  v40 = (_QWORD *)a3;
  v39 = a2;
  v38 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450060);
  MEMORY[0x24BDAC7A8](v5);
  v41 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FE18);
  v44 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v42 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_2453877E8();
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v33 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F730);
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v32 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_245387D70();
  v30 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_245387D4C();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v12);
  v14 = sub_245387950();
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser____lazy_storage___zoneVersionPublisher) = 0;
  v15 = OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__zoneVersionPublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FED0);
  swift_allocObject();
  *(_QWORD *)(v3 + v15) = sub_245387884();
  v16 = OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue;
  sub_24525C748();
  sub_245387944();
  v47[0] = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_257450050, v13, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450020);
  sub_24526381C((unint64_t *)&qword_257450030, (uint64_t *)&unk_257450020, MEMORY[0x24BEE12C8]);
  sub_245387E3C();
  (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v11, *MEMORY[0x24BEE5758], v31);
  *(_QWORD *)(v3 + v16) = sub_245387D94();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_client) = 0;
  v17 = v3 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_latestAdvertisement;
  sub_24525E488((uint64_t)v47);
  sub_24525E4A8((uint64_t)v47, v17);
  *(_BYTE *)(v4 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementPending) = 0;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_subscribed) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_subscriptionTask) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementTask) = 0;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_enabled) = 0;
  *(_QWORD *)(v4
            + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_incomingAdvertisementsByRemoteDevice) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_subscriptions) = MEMORY[0x24BEE4B08];
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v33, *MEMORY[0x24BE60B68], v35);
  sub_245265494();
  sub_245263BD8();
  v18 = v32;
  sub_2453877D0();
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v4 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_key, v18, v37);
  v19 = v40;
  sub_24525E4F0((uint64_t)v40, v4 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_firstLockStateProvider);
  v20 = v19[3];
  v21 = v19[4];
  __swift_project_boxed_opaque_existential_1(v19, v20);
  v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
  v46 = *(id *)(v4 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  v22 = v46;
  v23 = sub_245387D64();
  v24 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v41, 1, 1, v23);
  v25 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FE90);
  sub_24526381C(&qword_25744FE88, &qword_25744FE90, MEMORY[0x24BDB9AF8]);
  sub_24525C6C4((unint64_t *)&unk_257450070, (uint64_t (*)(uint64_t))sub_24525C748, MEMORY[0x24BEE5670]);
  v26 = v42;
  sub_2453878B4();
  sub_245263F80(v24, (uint64_t *)&unk_257450060);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_24526381C(&qword_25744FE10, (uint64_t *)&unk_25744FE18, MEMORY[0x24BDB9A08]);
  v27 = v43;
  sub_2453878C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v26, v27);
  swift_beginAccess();
  sub_245387860();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return v4;
}

unint64_t sub_245265494()
{
  unint64_t result;

  result = qword_25744FC90;
  if (!qword_25744FC90)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for ZoneVersionAdvertisement, &type metadata for ZoneVersionAdvertisement);
    atomic_store(result, (unint64_t *)&qword_25744FC90);
  }
  return result;
}

uint64_t sub_2452654D8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2452654FC(unsigned __int8 *a1)
{
  int v1;
  uint64_t result;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (v1)
      sub_245265568();
    return swift_release();
  }
  return result;
}

uint64_t sub_245265560(unsigned __int8 *a1)
{
  return sub_2452654FC(a1);
}

void sub_245265568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;

  v1 = v0;
  v2 = sub_2453879D4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_5;
  }
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_enabled) != 1)
    return;
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_firstLockStateProvider + 24);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_firstLockStateProvider + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_firstLockStateProvider), v8);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9) & 1) == 0)
    return;
  if (qword_25744FD90 != -1)
    goto LABEL_13;
LABEL_5:
  v10 = sub_245387818();
  __swift_project_value_buffer(v10, (uint64_t)qword_257462FB0);
  v11 = sub_2453877F4();
  v12 = sub_245387D34();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_245256000, v11, v12, "Activating zone advertiser", v13, 2u);
    MEMORY[0x24953317C](v13, -1, -1);
  }

  sub_245387788();
  swift_allocObject();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_client) = sub_24538777C();
  swift_release();
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementPending) == 1)
    sub_245266174();
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_subscribed) == 1)
    sub_2452663CC();
}

uint64_t StatusKitZoneAdvertiser.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[21];

  v1 = v0 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_key;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F730);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_firstLockStateProvider);
  swift_release();
  swift_release();

  swift_release();
  sub_24525E4A8(v0 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_latestAdvertisement, (uint64_t)v4);
  sub_2452640E0(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t StatusKitZoneAdvertiser.__deallocating_deinit()
{
  StatusKitZoneAdvertiser.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2452658A8()
{
  return sub_245264CA8();
}

uint64_t sub_2452658C8()
{
  unsigned __int8 v1;

  sub_245387D7C();
  return v1;
}

uint64_t sub_245265920(char a1)
{
  return sub_245264600(a1);
}

uint64_t (*sub_245265940(uint64_t a1))(uint64_t a1)
{
  _QWORD *v1;

  *(_QWORD *)a1 = *v1;
  sub_245387D7C();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a1 + 9);
  return sub_245264C24;
}

uint64_t sub_2452659B0(uint64_t a1)
{
  return StatusKitZoneAdvertiser.advertise(_:)(a1);
}

uint64_t StatusKitZoneAdvertiser.advertise(_:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  void *v26;
  _QWORD v28[2];
  _QWORD aBlock[6];
  _OWORD v30[10];
  uint64_t v31;

  v3 = *v1;
  v4 = sub_245387920();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_245387950();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_OWORD *)(a1 + 128);
  v13 = *(_OWORD *)(a1 + 144);
  v14 = *(_OWORD *)(a1 + 96);
  v30[7] = *(_OWORD *)(a1 + 112);
  v30[8] = v12;
  v30[9] = v13;
  v16 = *(_OWORD *)(a1 + 64);
  v15 = *(_OWORD *)(a1 + 80);
  v31 = *(_QWORD *)(a1 + 160);
  v30[5] = v15;
  v30[6] = v14;
  v17 = *(_OWORD *)(a1 + 16);
  v30[0] = *(_OWORD *)a1;
  v18 = *(_OWORD *)(a1 + 32);
  v30[3] = *(_OWORD *)(a1 + 48);
  v30[4] = v16;
  v30[1] = v17;
  v30[2] = v18;
  v28[0] = *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  v19 = swift_allocObject();
  v20 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v19 + 136) = *(_OWORD *)(a1 + 112);
  v21 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v19 + 152) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v19 + 168) = v21;
  v22 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v19 + 72) = *(_OWORD *)(a1 + 48);
  v23 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v19 + 88) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v19 + 104) = v23;
  *(_OWORD *)(v19 + 120) = v20;
  v24 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v19 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v19 + 40) = v24;
  *(_QWORD *)(v19 + 16) = v1;
  v25 = *(_QWORD *)(a1 + 160);
  *(_OWORD *)(v19 + 56) = v22;
  *(_QWORD *)(v19 + 184) = v25;
  *(_QWORD *)(v19 + 192) = v3;
  aBlock[4] = sub_245268B3C;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525DD34;
  aBlock[3] = &block_descriptor_10_0;
  v26 = _Block_copy(aBlock);
  swift_retain();
  sub_245261B98((uint64_t)v30);
  sub_245387938();
  v28[1] = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
  sub_245387E3C();
  MEMORY[0x2495320E4](0, v11, v7, v26);
  _Block_release(v26);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

void sub_245265C80()
{
  StatusKitZoneAdvertiser.subscribe()();
}

Swift::Void __swiftcall StatusKitZoneAdvertiser.subscribe()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v12[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_245387920();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_245387950();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = *(_QWORD *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  aBlock[4] = sub_245268B4C;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525DD34;
  aBlock[3] = &block_descriptor_13_0;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_245387938();
  v12[1] = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_25744FF00, v3, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
  sub_245387E3C();
  MEMORY[0x2495320E4](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
}

uint64_t sub_245265E7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16[10];
  unint64_t v17;
  _OWORD v18[10];
  unint64_t v19;
  _QWORD v20[21];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  v1 = v0;
  v2 = sub_2453879D4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_4;
  }
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_enabled) & 1) != 0)
    return result;
  if (qword_25744FD90 != -1)
    goto LABEL_14;
LABEL_4:
  v9 = sub_245387818();
  __swift_project_value_buffer(v9, (uint64_t)qword_257462FB0);
  v10 = sub_2453877F4();
  v11 = sub_245387D34();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_245256000, v10, v11, "Deactivating zone advertiser", v12, 2u);
    MEMORY[0x24953317C](v12, -1, -1);
  }

  sub_24525E4A8(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_latestAdvertisement, (uint64_t)v20);
  sub_24525E4A8((uint64_t)v20, (uint64_t)&v21);
  if (sub_2452638BC((uint64_t)&v21) != 1)
  {
    v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_client);
    if (v13)
    {
      sub_2452640E0(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_245264144);
      swift_retain();
      sub_24526432C((uint64_t)&v21);
      v14 = sub_24531B270(MEMORY[0x24BEE4AF8]);
      v18[6] = v27;
      v18[7] = v28;
      v18[8] = v29;
      v18[9] = v30;
      v18[2] = v23;
      v18[3] = v24;
      v18[4] = v25;
      v18[5] = v26;
      v18[0] = v21;
      v18[1] = v22;
      v16[8] = v29;
      v16[9] = v30;
      v16[4] = v25;
      v16[5] = v26;
      v19 = v14;
      v17 = v14;
      v16[6] = v27;
      v16[7] = v28;
      v16[0] = v21;
      v16[1] = v22;
      v16[2] = v23;
      v16[3] = v24;
      sub_245266718(v16, v13, 1);
      swift_release();
      sub_2452640E0(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
      sub_245263A7C((uint64_t)v18);
      *(_BYTE *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementPending) = 1;
    }
  }
  v15 = OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_subscriptionTask;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_subscriptionTask))
  {
    swift_retain();
    sub_245387C80();
    swift_release();
  }
  *(_QWORD *)(v1 + v15) = 0;
  swift_release();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_client) = 0;
  return swift_release();
}

void sub_245266174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  __int128 v13[10];
  uint64_t v14;
  _QWORD v15[21];
  _OWORD v16[10];
  uint64_t v17;

  v1 = sub_2453879D4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (_QWORD *)((char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  LOBYTE(v5) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_8;
  }
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_enabled) == 1)
  {
    v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_client);
    if (v7)
    {
      v8 = OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementPending;
      if (*(_BYTE *)(v0 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementPending) == 1)
      {
        sub_24525E4A8(v0 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_latestAdvertisement, (uint64_t)v15);
        sub_24525E4A8((uint64_t)v15, (uint64_t)v16);
        if (sub_2452638BC((uint64_t)v16) != 1)
        {
          *(_BYTE *)(v0 + v8) = 0;
          v13[8] = v16[8];
          v13[9] = v16[9];
          v14 = v17;
          v13[4] = v16[4];
          v13[5] = v16[5];
          v13[6] = v16[6];
          v13[7] = v16[7];
          v13[0] = v16[0];
          v13[1] = v16[1];
          v13[2] = v16[2];
          v13[3] = v16[3];
          swift_retain();
          sub_2452640E0(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_245264144);
          sub_245266718(v13, v7, 0);
          swift_release();
          sub_2452640E0(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
        }
      }
    }
    return;
  }
  if (qword_25744FD90 != -1)
    goto LABEL_13;
LABEL_8:
  v9 = sub_245387818();
  __swift_project_value_buffer(v9, (uint64_t)qword_257462FB0);
  v10 = sub_2453877F4();
  v11 = sub_245387D34();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_245256000, v10, v11, "Zone advertiser will advertise when enabled", v12, 2u);
    MEMORY[0x24953317C](v12, -1, -1);
  }

}

uint64_t sub_2452663CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  _QWORD *v23;
  uint8_t *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257450038);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2453879D4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint8_t **)((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEE5610], v5);
  v10 = v9;
  LOBYTE(v9) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_4;
  }
  v8 = *(_QWORD **)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_client);
  if (!v8)
    return result;
  v12 = qword_25744FD90;
  swift_retain();
  if (v12 != -1)
    goto LABEL_10;
LABEL_4:
  v13 = sub_245387818();
  __swift_project_value_buffer(v13, (uint64_t)qword_257462FB0);
  swift_retain_n();
  v14 = sub_2453877F4();
  v15 = sub_245387D34();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v25 = v4;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    *(_DWORD *)v17 = 136446210;
    v27 = v18;
    v24 = v17 + 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744F730);
    sub_24526381C(&qword_25744F728, &qword_25744F730, MEMORY[0x24BE60B40]);
    v19 = sub_2453880F4();
    v26 = sub_2453816D8(v19, v20, &v27);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_245256000, v14, v15, "Zone advertiser subscribing to %{public}s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v18, -1, -1);
    v21 = v17;
    v4 = v25;
    MEMORY[0x24953317C](v21, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v22 = sub_245387C74();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v4, 1, 1, v22);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = 0;
  v23[3] = 0;
  v23[4] = v8;
  v23[5] = v1;
  swift_retain();
  swift_retain();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_subscriptionTask) = sub_2452635C4((uint64_t)v4, (uint64_t)&unk_2574521E8, (uint64_t)v23);
  swift_release();
  return swift_release();
}

uint64_t sub_245266718(__int128 *a1, uint64_t a2, int a3)
{
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  void *v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  void (*v30)(unint64_t, _QWORD, uint64_t);
  char v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  int v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  char v63[24];
  ValueMetadata *v64;
  unint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;

  v59 = a3;
  v60 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257450038);
  MEMORY[0x24BDAC7A8](v5);
  v58 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_2453877A0();
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_2453877B8();
  v56 = *(_QWORD *)(v57 - 8);
  v9 = MEMORY[0x24BDAC7A8](v57);
  v55 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v62 = (char *)&v52 - v11;
  v12 = sub_245387794();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2453879D4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (uint64_t *)((char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = a1[9];
  v74 = a1[8];
  v75 = v20;
  v76 = *((_QWORD *)a1 + 20);
  v21 = a1[5];
  v70 = a1[4];
  v71 = v21;
  v22 = a1[7];
  v72 = a1[6];
  v73 = v22;
  v23 = a1[1];
  v66 = *a1;
  v25 = a1[2];
  v24 = a1[3];
  v61 = v3;
  v26 = *(void **)(v3 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  v69 = v24;
  v67 = v23;
  v68 = v25;
  *v19 = v26;
  (*(void (**)(_QWORD *, _QWORD, int64_t))(v17 + 104))(v19, *MEMORY[0x24BEE5610], v16);
  v27 = v26;
  v28 = sub_2453879F8();
  (*(void (**)(_QWORD *, int64_t))(v17 + 8))(v19, v16);
  if ((v28 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    v28 = sub_245323F04(v29 > 1, v16, 1, v28);
    goto LABEL_4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450218);
  v19 = *(_QWORD **)(v13 + 72);
  v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_245389A60;
  v30 = *(void (**)(unint64_t, _QWORD, uint64_t))(v13 + 104);
  v30(v28 + v17, *MEMORY[0x24BE609D0], v12);
  v64 = &type metadata for FeatureFlags;
  v65 = sub_2452699B4();
  v31 = sub_24538774C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  if ((v31 & 1) == 0)
    goto LABEL_5;
  v30((unint64_t)v15, *MEMORY[0x24BE609C8], v12);
  v3 = *(_QWORD *)(v28 + 16);
  v29 = *(_QWORD *)(v28 + 24);
  v16 = v3 + 1;
  if (v3 >= v29 >> 1)
    goto LABEL_9;
LABEL_4:
  *(_QWORD *)(v28 + 16) = v16;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v28 + v17 + v3 * (_QWORD)v19, v15, v12);
LABEL_5:
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v8, *MEMORY[0x24BE609F8], v53);
  sub_2453877AC();
  v32 = v61;
  v53 = OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementTask;
  if (*(_QWORD *)(v61 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementTask))
  {
    swift_retain();
    sub_245387C80();
    swift_release();
  }
  v33 = sub_245387C74();
  v34 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v58, 1, 1, v33);
  v35 = swift_allocObject();
  swift_weakInit();
  v36 = v56;
  v37 = v55;
  v38 = v62;
  v39 = v57;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v55, v62, v57);
  v40 = (*(unsigned __int8 *)(v36 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v41 = v40 + v54;
  v42 = swift_allocObject();
  v43 = v72;
  *(_OWORD *)(v42 + 152) = v73;
  v44 = v75;
  *(_OWORD *)(v42 + 168) = v74;
  *(_OWORD *)(v42 + 184) = v44;
  v45 = v68;
  *(_OWORD *)(v42 + 88) = v69;
  v46 = v71;
  *(_OWORD *)(v42 + 104) = v70;
  *(_OWORD *)(v42 + 120) = v46;
  *(_OWORD *)(v42 + 136) = v43;
  v47 = v67;
  *(_OWORD *)(v42 + 40) = v66;
  *(_OWORD *)(v42 + 56) = v47;
  *(_QWORD *)(v42 + 16) = 0;
  *(_QWORD *)(v42 + 24) = 0;
  *(_QWORD *)(v42 + 32) = v35;
  v48 = v76;
  *(_OWORD *)(v42 + 72) = v45;
  v49 = v60;
  *(_QWORD *)(v42 + 200) = v48;
  *(_QWORD *)(v42 + 208) = v49;
  (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v42 + v40, v37, v39);
  *(_BYTE *)(v42 + v41) = v59 & 1;
  sub_245261B98((uint64_t)&v66);
  swift_retain();
  v50 = sub_2452635C4(v34, (uint64_t)&unk_2574521F8, v42);
  *(_QWORD *)(v32 + v53) = v50;
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v38, v39);
}

void sub_245266C6C(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_subscribed) & 1) == 0)
  {
    *(_BYTE *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_subscribed) = 1;
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_enabled) == 1)
    {
      sub_2452663CC();
    }
    else
    {
      if (qword_25744FD90 != -1)
        swift_once();
      v1 = sub_245387818();
      __swift_project_value_buffer(v1, (uint64_t)qword_257462FB0);
      swift_retain_n();
      v2 = sub_2453877F4();
      v3 = sub_245387D34();
      if (os_log_type_enabled(v2, v3))
      {
        v4 = (uint8_t *)swift_slowAlloc();
        v5 = swift_slowAlloc();
        *(_DWORD *)v4 = 136446210;
        v8 = v5;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25744F730);
        sub_24526381C(&qword_25744F728, &qword_25744F730, MEMORY[0x24BE60B40]);
        v6 = sub_2453880F4();
        sub_2453816D8(v6, v7, &v8);
        sub_245387E0C();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_245256000, v2, v3, "Zone advertiser will subscribe when enabled to %{public}s", v4, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v5, -1, -1);
        MEMORY[0x24953317C](v4, -1, -1);

      }
      else
      {

        swift_release_n();
      }
    }
  }
}

uint64_t sub_245266E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5[13] = a5;
  v6 = sub_245387920();
  v5[14] = v6;
  v5[15] = *(_QWORD *)(v6 - 8);
  v5[16] = swift_task_alloc();
  v7 = sub_245387950();
  v5[17] = v7;
  v5[18] = *(_QWORD *)(v7 - 8);
  v5[19] = swift_task_alloc();
  v8 = sub_245387914();
  v5[20] = v8;
  v5[21] = *(_QWORD *)(v8 - 8);
  v5[22] = swift_task_alloc();
  v9 = sub_2453879B0();
  v5[23] = v9;
  v5[24] = *(_QWORD *)(v9 - 8);
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F710);
  v5[27] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[28] = v11;
  v5[29] = *(_QWORD *)(v11 + 64);
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F618);
  v5[32] = v12;
  v5[33] = *(_QWORD *)(v12 - 8);
  v5[34] = swift_task_alloc();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F720);
  v5[35] = v13;
  v5[36] = *(_QWORD *)(v13 - 8);
  v5[37] = swift_task_alloc();
  v14 = (_QWORD *)swift_task_alloc();
  v5[38] = v14;
  sub_245265494();
  sub_245263BD8();
  *v14 = v5;
  v14[1] = sub_245267068;
  return sub_245387770();
}

uint64_t sub_245267068()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 312) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2452670CC()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_2453877C4();
  v0[40] = OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue;
  v0[41] = sub_24526381C(&qword_25744F718, &qword_25744F618, MEMORY[0x24BE60AE0]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[42] = v1;
  *v1 = v0;
  v1[1] = sub_245267170;
  return sub_245387C5C();
}

uint64_t sub_245267170()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(_QWORD *)(v2 + 360) = v0;
  }
  else
  {
    *(_DWORD *)(v2 + 376) = *MEMORY[0x24BEE5420];
    *(_QWORD *)(v2 + 344) = 0;
  }
  return swift_task_switch();
}

uint64_t sub_2452671E8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 352) = *(_QWORD *)(v0 + 72);
  return swift_task_switch();
}

uint64_t sub_245267204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_QWORD, _QWORD, _QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_QWORD, _QWORD, _QWORD);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[3];

  v1 = *(_QWORD *)(v0 + 352);
  if (!v1)
  {
    v31 = *(_QWORD *)(v0 + 288);
    v30 = *(_QWORD *)(v0 + 296);
    v32 = *(_QWORD *)(v0 + 280);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 8))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 256));
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (qword_25744FD90 != -1)
    swift_once();
  v2 = sub_245387818();
  __swift_project_value_buffer(v2, (uint64_t)qword_257462FB0);
  swift_bridgeObjectRetain_n();
  v3 = sub_2453877F4();
  v4 = sub_245387D34();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 216);
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v55[0] = v7;
    *(_DWORD *)v6 = 136446210;
    v8 = swift_bridgeObjectRetain();
    v9 = MEMORY[0x249531F88](v8, v5);
    v11 = v10;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v6 + 4) = sub_2453816D8(v9, v11, v55);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v3, v4, "Zone advertiser received new zone versions: %{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v7, -1, -1);
    MEMORY[0x24953317C](v6, -1, -1);

    v12 = *(_QWORD *)(v1 + 16);
    if (v12)
      goto LABEL_6;
LABEL_14:
    swift_bridgeObjectRelease();
    v34 = sub_2453877F4();
    v35 = sub_245387D34();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v36 = 0;
      _os_log_impl(&dword_245256000, v34, v35, "Zone advertiser payload is empty; ignoring", v36, 2u);
      MEMORY[0x24953317C](v36, -1, -1);
    }

    goto LABEL_17;
  }

  swift_bridgeObjectRelease_n();
  v12 = *(_QWORD *)(v1 + 16);
  if (!v12)
    goto LABEL_14;
LABEL_6:
  v13 = (_BYTE *)(v0 + 380);
  v14 = *(_QWORD *)(v0 + 224);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v1 + ((v15 + 32) & ~v15);
  v38 = (v15 + 24) & ~v15;
  v50 = *(_QWORD *)(v14 + 72);
  v17 = *(void (**)(_QWORD, _QWORD, _QWORD))(v14 + 16);
  v49 = v17;
  do
  {
    v54 = v12;
    v18 = *(_QWORD *)(v0 + 248);
    v19 = *(_QWORD *)(v0 + 104);
    v17(v18, v16, *(_QWORD *)(v0 + 216));
    v20 = swift_task_alloc();
    *(_QWORD *)(v20 + 16) = v19;
    *(_QWORD *)(v20 + 24) = v18;
    sub_245387D7C();
    swift_task_dealloc();
    if (*v13 == 1)
    {
      v21 = *(unsigned int *)(v0 + 376);
      v53 = *(_QWORD *)(v0 + 248);
      v41 = *(_QWORD *)(v0 + 240);
      v51 = *(_QWORD *)(v0 + 216);
      v52 = *(_QWORD *)(v0 + 224);
      v22 = *(_QWORD *)(v0 + 200);
      v23 = *(_QWORD **)(v0 + 176);
      v24 = *(_QWORD *)(v0 + 184);
      v25 = *(_QWORD *)(v0 + 160);
      v26 = *(_QWORD *)(v0 + 168);
      v42 = *(_QWORD *)(v0 + 152);
      v43 = *(_QWORD *)(v0 + 208);
      v47 = *(_QWORD *)(v0 + 144);
      v48 = *(_QWORD *)(v0 + 136);
      v46 = *(_QWORD *)(v0 + 120);
      v44 = *(_QWORD *)(v0 + 128);
      v45 = *(_QWORD *)(v0 + 112);
      v39 = *(_QWORD *)(v0 + 192);
      v40 = *(_QWORD *)(v0 + 104);
      sub_245387998();
      *v23 = 5;
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v26 + 104))(v23, v21, v25);
      MEMORY[0x249531D3C](v22, v23);
      (*(void (**)(_QWORD *, uint64_t))(v26 + 8))(v23, v25);
      v27 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      v27(v22, v24);
      v17(v41, v53, v51);
      v28 = swift_allocObject();
      *(_QWORD *)(v28 + 16) = v40;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v28 + v38, v41, v51);
      *(_QWORD *)(v0 + 48) = sub_2452698F4;
      *(_QWORD *)(v0 + 56) = v28;
      *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
      *(_QWORD *)(v0 + 24) = 1107296256;
      *(_QWORD *)(v0 + 32) = sub_24525DD34;
      *(_QWORD *)(v0 + 40) = &block_descriptor_30;
      v29 = _Block_copy((const void *)(v0 + 16));
      swift_retain();
      sub_245387938();
      *(_QWORD *)(v0 + 96) = MEMORY[0x24BEE4AF8];
      sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
      sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
      sub_245387E3C();
      MEMORY[0x2495320B4](v43, v42, v44, v29);
      _Block_release(v29);
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v42, v48);
      v27(v43, v24);
      v13 = (_BYTE *)(v0 + 380);
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v53, v51);
      swift_release();
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 216));
    }
    v17 = v49;
    v16 += v50;
    v12 = v54 - 1;
  }
  while (v54 != 1);
  swift_bridgeObjectRelease();
LABEL_17:
  v37 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 368) = v37;
  *v37 = v0;
  v37[1] = sub_245267B3C;
  return sub_245387C5C();
}

uint64_t sub_245267870()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v0 + 360);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440C868);
  swift_willThrowTypedImpl();
  return swift_task_switch();
}

uint64_t sub_2452678D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;

  v2 = *(_QWORD *)(v0 + 288);
  v1 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 280);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 8))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 256));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(void **)(v0 + 360);
  if (qword_25744FD90 != -1)
    swift_once();
  v5 = sub_245387818();
  __swift_project_value_buffer(v5, (uint64_t)qword_257462FB0);
  v6 = v4;
  v7 = v4;
  v8 = sub_2453877F4();
  v9 = sub_245387D1C();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v16 = v11;
    *(_DWORD *)v10 = 136446210;
    *(_QWORD *)(v0 + 88) = v4;
    v12 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C868);
    v13 = sub_245387B48();
    *(_QWORD *)(v0 + 64) = sub_2453816D8(v13, v14, &v16);
    sub_245387E0C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_245256000, v8, v9, "Zone advertiser failed to subscribe: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v11, -1, -1);
    MEMORY[0x24953317C](v10, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_245267B3C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 360) = v0;
  else
    *(_QWORD *)(v2 + 344) = 0;
  return swift_task_switch();
}

uint64_t sub_245267BA4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 312);
  if (qword_25744FD90 != -1)
    swift_once();
  v2 = sub_245387818();
  __swift_project_value_buffer(v2, (uint64_t)qword_257462FB0);
  v3 = v1;
  v4 = v1;
  v5 = sub_2453877F4();
  v6 = sub_245387D1C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 88) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C868);
    v10 = sub_245387B48();
    *(_QWORD *)(v0 + 64) = sub_2453816D8(v10, v11, &v13);
    sub_245387E0C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_245256000, v5, v6, "Zone advertiser failed to subscribe: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v8, -1, -1);
    MEMORY[0x24953317C](v7, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_245267DEC(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  __int128 v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  char v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  __int128 v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  _OWORD v113[10];
  uint64_t v114;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25744F710);
  sub_245387758();
  v113[7] = v98;
  v113[8] = v99;
  v113[9] = v100;
  v113[3] = v94;
  v113[4] = v95;
  v113[5] = v96;
  v113[6] = v97;
  v113[0] = v91;
  v113[1] = v92;
  v114 = v101;
  v113[2] = v93;
  sub_24526432C((uint64_t)v113);
  sub_245263A7C((uint64_t)v113);
  v4 = v113[0];
  swift_bridgeObjectRetain();
  sub_245269928((uint64_t)v113);
  v5 = (uint64_t *)(a1
                 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_incomingAdvertisementsByRemoteDevice);
  swift_beginAccess();
  v6 = *v5;
  if (!*(_QWORD *)(*v5 + 16))
    goto LABEL_12;
  swift_bridgeObjectRetain();
  v7 = sub_2452C1D98(v4, *((uint64_t *)&v4 + 1));
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    if (qword_25744FD90 != -1)
      swift_once();
    v23 = sub_245387818();
    __swift_project_value_buffer(v23, (uint64_t)qword_257462FB0);
    v24 = sub_2453877F4();
    v25 = sub_245387D34();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_245256000, v24, v25, "Zone advertiser payload is new; publishing", v26, 2u);
      MEMORY[0x24953317C](v26, -1, -1);
    }

    sub_245387758();
    v99 = v88;
    v100 = v89;
    v101 = v90;
    v95 = v84;
    v96 = v85;
    v97 = v86;
    v98 = v87;
    v91 = v80;
    v92 = v81;
    v93 = v82;
    v94 = v83;
    sub_24526432C((uint64_t)&v91);
    sub_245263A7C((uint64_t)&v91);
    v27 = v91;
    swift_bridgeObjectRetain();
    sub_245269928((uint64_t)&v91);
    sub_245387758();
    v111 = v78;
    v112 = v79;
    v106 = v73;
    v107 = v74;
    v109 = v76;
    v110 = v77;
    v108 = v75;
    v102 = v69;
    v103 = v70;
    v104 = v71;
    v105 = v72;
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v47 = *v5;
    *v5 = 0x8000000000000000;
    sub_245328110((uint64_t)&v102, v27, *((uint64_t *)&v27 + 1), isUniquelyReferenced_nonNull_native);
    *v5 = v47;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_23;
  }
  v9 = *(_QWORD *)(v6 + 56) + 168 * v7;
  v11 = *(_OWORD *)(v9 + 16);
  v10 = *(_OWORD *)(v9 + 32);
  v69 = *(_OWORD *)v9;
  v70 = v11;
  v71 = v10;
  v12 = *(_OWORD *)(v9 + 48);
  v13 = *(_OWORD *)(v9 + 64);
  v14 = *(_OWORD *)(v9 + 96);
  v74 = *(_OWORD *)(v9 + 80);
  v75 = v14;
  v72 = v12;
  v73 = v13;
  v15 = *(_OWORD *)(v9 + 112);
  v16 = *(_OWORD *)(v9 + 128);
  v17 = *(_OWORD *)(v9 + 144);
  v79 = *(_QWORD *)(v9 + 160);
  v77 = v16;
  v78 = v17;
  v76 = v15;
  sub_245261B98((uint64_t)&v69);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_245387758();
  v88 = v110;
  v89 = v111;
  v84 = v106;
  v85 = v107;
  v86 = v108;
  v87 = v109;
  v80 = v102;
  v81 = v103;
  v82 = v104;
  v83 = v105;
  v64 = v75;
  v65 = v76;
  v66 = v77;
  v67 = v78;
  v60 = v71;
  v61 = v72;
  v62 = v73;
  v63 = v74;
  v58 = v69;
  v59 = v70;
  v53 = v108;
  v54 = v109;
  v55 = v110;
  v56 = v111;
  v49 = v104;
  v50 = v105;
  v51 = v106;
  v52 = v107;
  v90 = v112;
  v47 = v102;
  v48 = v103;
  if ((_s16ReplicatorEngine24ZoneVersionAdvertisementV16DeviceDescriptorV2eeoiySbAE_AEtFZ_0((uint64_t)&v58, (uint64_t)&v47) & 1) == 0)
  {
    sub_245263A7C((uint64_t)&v80);
    goto LABEL_18;
  }
  v18 = sub_2452E0CFC(v79, v90);
  sub_245263A7C((uint64_t)&v80);
  if ((v18 & 1) == 0)
  {
LABEL_18:
    if (qword_25744FD90 != -1)
      swift_once();
    v29 = sub_245387818();
    __swift_project_value_buffer(v29, (uint64_t)qword_257462FB0);
    v30 = sub_2453877F4();
    v31 = sub_245387D34();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_245256000, v30, v31, "Zone advertiser payload has changed; publishing", v32, 2u);
      MEMORY[0x24953317C](v32, -1, -1);
    }

    sub_245387758();
    v66 = v55;
    v67 = v56;
    v68 = v57;
    v62 = v51;
    v63 = v52;
    v64 = v53;
    v65 = v54;
    v58 = v47;
    v59 = v48;
    v60 = v49;
    v61 = v50;
    sub_24526432C((uint64_t)&v58);
    sub_245263A7C((uint64_t)&v58);
    v33 = v58;
    swift_bridgeObjectRetain();
    sub_245269928((uint64_t)&v58);
    sub_245387758();
    v111 = v45;
    v112 = v46;
    v106 = v40;
    v107 = v41;
    v109 = v43;
    v110 = v44;
    v108 = v42;
    v102 = v36;
    v103 = v37;
    v104 = v38;
    v105 = v39;
    swift_beginAccess();
    v34 = swift_isUniquelyReferenced_nonNull_native();
    v35 = *v5;
    *v5 = 0x8000000000000000;
    sub_245328110((uint64_t)&v102, v33, *((uint64_t *)&v33 + 1), v34);
    *v5 = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_245263A7C((uint64_t)&v69);
LABEL_23:
    *a2 = 1;
    return;
  }
  if (qword_25744FD90 != -1)
    swift_once();
  v19 = sub_245387818();
  __swift_project_value_buffer(v19, (uint64_t)qword_257462FB0);
  v20 = sub_2453877F4();
  v21 = sub_245387D34();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_245256000, v20, v21, "Zone advertiser payload has not changed; ignoring", v22, 2u);
    MEMORY[0x24953317C](v22, -1, -1);
  }
  sub_245263A7C((uint64_t)&v69);

  *a2 = 0;
}

uint64_t sub_2452684A8()
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  _OWORD v12[10];
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25744F710);
  sub_245387758();
  v12[8] = v9;
  v12[9] = v10;
  v12[4] = v5;
  v12[5] = v6;
  v12[6] = v7;
  v12[7] = v8;
  v12[0] = v1;
  v12[1] = v2;
  v12[2] = v3;
  v12[3] = v4;
  v13 = v11;
  sub_245387878();
  return sub_245263A7C((uint64_t)v12);
}

_QWORD *sub_245268570(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  _QWORD *result;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  _OWORD v52[10];
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  _QWORD v86[21];
  _OWORD v87[10];
  uint64_t v88;
  _BYTE v89[176];

  v4 = *(_OWORD *)(a2 + 144);
  v83 = *(_OWORD *)(a2 + 128);
  v84 = v4;
  v85 = *(_QWORD *)(a2 + 160);
  v5 = *(_OWORD *)(a2 + 80);
  v79 = *(_OWORD *)(a2 + 64);
  v80 = v5;
  v6 = *(_OWORD *)(a2 + 112);
  v81 = *(_OWORD *)(a2 + 96);
  v82 = v6;
  v7 = *(_OWORD *)(a2 + 16);
  v75 = *(_OWORD *)a2;
  v76 = v7;
  v8 = *(_OWORD *)(a2 + 48);
  v77 = *(_OWORD *)(a2 + 32);
  v78 = v8;
  v9 = sub_245387920();
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_245387950();
  v37 = *(_QWORD *)(v12 - 8);
  v38 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2453879B0();
  v36 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v35 - v19;
  v21 = a1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_latestAdvertisement;
  sub_24525E4A8(a1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_latestAdvertisement, (uint64_t)v86);
  v87[8] = v83;
  v87[9] = v84;
  v88 = v85;
  v87[4] = v79;
  v87[5] = v80;
  v87[7] = v82;
  v87[6] = v81;
  v87[0] = v75;
  v87[1] = v76;
  v87[3] = v78;
  v87[2] = v77;
  nullsub_1(v87);
  sub_24525E4A8((uint64_t)v86, (uint64_t)v89);
  if (sub_2452638BC((uint64_t)v89) == 1)
  {
    sub_24525E4A8((uint64_t)v86, (uint64_t)&v63);
    sub_24525E4A8((uint64_t)v87, (uint64_t)&v74);
    sub_245261B98(a2);
    sub_2452641D0((uint64_t)&v63);
  }
  else
  {
    v35 = v15;
    sub_24525E4A8((uint64_t)v86, (uint64_t)&v63);
    v59 = v69;
    v60 = v70;
    v61 = v71;
    v62 = v72;
    v55 = v65;
    v56 = v66;
    v57 = v67;
    v58 = v68;
    v53 = v63;
    v54 = v64;
    v22 = *(_OWORD *)(a2 + 112);
    v52[6] = *(_OWORD *)(a2 + 96);
    v52[7] = v22;
    v23 = *(_OWORD *)(a2 + 144);
    v52[8] = *(_OWORD *)(a2 + 128);
    v52[9] = v23;
    v24 = *(_OWORD *)(a2 + 48);
    v52[2] = *(_OWORD *)(a2 + 32);
    v52[3] = v24;
    v25 = *(_OWORD *)(a2 + 80);
    v52[4] = *(_OWORD *)(a2 + 64);
    v52[5] = v25;
    v26 = *(_OWORD *)(a2 + 16);
    v52[0] = *(_OWORD *)a2;
    v52[1] = v26;
    v47 = v69;
    v48 = v70;
    v49 = v71;
    v50 = v72;
    v43 = v65;
    v44 = v66;
    v45 = v67;
    v46 = v68;
    v27 = v73;
    v41 = v63;
    v42 = v64;
    sub_2452640E0(v86, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_245264144);
    sub_2452640E0(v86, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_245264144);
    sub_245261B98(a2);
    if ((_s16ReplicatorEngine24ZoneVersionAdvertisementV16DeviceDescriptorV2eeoiySbAE_AEtFZ_0((uint64_t)&v41, (uint64_t)v52) & 1) != 0)
    {
      v28 = sub_2452E0CFC(v27, *(_QWORD *)(a2 + 160));
      sub_245263A7C(a2);
      v47 = v59;
      v48 = v60;
      v49 = v61;
      v50 = v62;
      v43 = v55;
      v44 = v56;
      v45 = v57;
      v46 = v58;
      v41 = v53;
      v42 = v54;
      v51 = v27;
      sub_245263A7C((uint64_t)&v41);
      result = sub_2452640E0(v86, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
      if ((v28 & 1) != 0)
        return result;
    }
    else
    {
      sub_245263A7C(a2);
      v47 = v59;
      v48 = v60;
      v49 = v61;
      v50 = v62;
      v43 = v55;
      v44 = v56;
      v45 = v57;
      v46 = v58;
      v41 = v53;
      v42 = v54;
      v51 = v27;
      sub_245263A7C((uint64_t)&v41);
      sub_2452640E0(v86, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
    }
    v15 = v35;
  }
  sub_24525E4A8(v21, (uint64_t)&v63);
  sub_24525E4A8((uint64_t)v87, v21);
  sub_245261B98(a2);
  result = sub_2452640E0(&v63, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24525FF6C);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementPending) & 1) == 0)
  {
    *(_BYTE *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementPending) = 1;
    v35 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
    sub_245387998();
    if (qword_25744FBD8 != -1)
      swift_once();
    v30 = sub_245387914();
    v31 = __swift_project_value_buffer(v30, (uint64_t)qword_25744FBB8);
    MEMORY[0x249531D3C](v18, v31);
    v32 = *(void (**)(char *, uint64_t))(v36 + 8);
    v32(v18, v15);
    *(_QWORD *)&v43 = sub_2452699B0;
    *((_QWORD *)&v43 + 1) = a1;
    *(_QWORD *)&v41 = MEMORY[0x24BDAC760];
    *((_QWORD *)&v41 + 1) = 1107296256;
    *(_QWORD *)&v42 = sub_24525DD34;
    *((_QWORD *)&v42 + 1) = &block_descriptor_33;
    v33 = _Block_copy(&v41);
    swift_retain();
    sub_245387938();
    *(_QWORD *)&v53 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
    v34 = v40;
    sub_245387E3C();
    MEMORY[0x2495320B4](v20, v14, v11, v33);
    _Block_release(v33);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v34);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v38);
    v32(v20, v15);
    return (_QWORD *)swift_release();
  }
  return result;
}

uint64_t sub_245268AC8()
{
  uint64_t v0;
  unint64_t v1;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 144);
  if (v1 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v0 + 136), v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_245268B3C()
{
  uint64_t v0;

  return sub_245268570(*(_QWORD *)(v0 + 16), v0 + 24);
}

void sub_245268B4C()
{
  uint64_t v0;

  sub_245266C6C(v0);
}

uint64_t sub_245268B54@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_245387D7C();
  *a1 = v3;
  return result;
}

uint64_t sub_245268BB4(char *a1)
{
  return sub_245264600(*a1);
}

uint64_t sub_245268BD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_245264CA8();
  *a1 = result;
  return result;
}

uint64_t sub_245268C00(_QWORD *a1, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser____lazy_storage___zoneVersionPublisher) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_245268C38()
{
  return type metadata accessor for StatusKitZoneAdvertiser();
}

uint64_t type metadata accessor for StatusKitZoneAdvertiser()
{
  uint64_t result;

  result = qword_25744FC30;
  if (!qword_25744FC30)
    return swift_getSingletonMetadata();
  return result;
}

void sub_245268C7C()
{
  unint64_t v0;

  sub_245268D9C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for StatusKitZoneAdvertiser()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StatusKitZoneAdvertiser.isEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of StatusKitZoneAdvertiser.isEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of StatusKitZoneAdvertiser.isEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of StatusKitZoneAdvertiser.zoneVersionPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of StatusKitZoneAdvertiser.zoneVersionPublisher.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of StatusKitZoneAdvertiser.zoneVersionPublisher.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of StatusKitZoneAdvertiser.__allocating_init(key:firstLockStateProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 456))();
}

void sub_245268D9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25744F738)
  {
    sub_245265494();
    sub_245263BD8();
    v0 = sub_2453877DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25744F738);
  }
}

uint64_t sub_245268E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v8 + 712) = a8;
  *(_QWORD *)(v8 + 640) = a7;
  *(_QWORD *)(v8 + 632) = a6;
  *(_QWORD *)(v8 + 624) = a5;
  *(_QWORD *)(v8 + 616) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744F708);
  *(_QWORD *)(v8 + 648) = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F700);
  *(_QWORD *)(v8 + 656) = v9;
  *(_QWORD *)(v8 + 664) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 672) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_245268E98()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  _OWORD *v7;
  uint8_t *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 680) = Strong;
  if (Strong)
  {
    if (qword_25744FD90 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 624);
    v3 = sub_245387818();
    *(_QWORD *)(v0 + 688) = __swift_project_value_buffer(v3, (uint64_t)qword_257462FB0);
    sub_245261B98(v2);
    sub_245261B98(v2);
    v4 = sub_2453877F4();
    v5 = sub_245387D34();
    v6 = os_log_type_enabled(v4, v5);
    v7 = *(_OWORD **)(v0 + 624);
    if (v6)
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v33 = v32;
      *(_DWORD *)v8 = 136446210;
      v9 = v7[1];
      *(_OWORD *)(v0 + 184) = *v7;
      *(_OWORD *)(v0 + 200) = v9;
      v10 = v7[5];
      v12 = v7[2];
      v11 = v7[3];
      *(_OWORD *)(v0 + 248) = v7[4];
      *(_OWORD *)(v0 + 264) = v10;
      *(_OWORD *)(v0 + 216) = v12;
      *(_OWORD *)(v0 + 232) = v11;
      v13 = v7[9];
      v15 = v7[6];
      v14 = v7[7];
      *(_OWORD *)(v0 + 312) = v7[8];
      *(_OWORD *)(v0 + 328) = v13;
      *(_OWORD *)(v0 + 280) = v15;
      *(_OWORD *)(v0 + 296) = v14;
      sub_245261B98((uint64_t)v7);
      sub_245387EA8();
      *(_QWORD *)(v0 + 576) = 0;
      *(_QWORD *)(v0 + 584) = 0xE000000000000000;
      sub_245387B90();
      v16 = *(_OWORD *)(v0 + 296);
      *(_OWORD *)(v0 + 440) = *(_OWORD *)(v0 + 280);
      *(_OWORD *)(v0 + 456) = v16;
      v17 = *(_OWORD *)(v0 + 328);
      *(_OWORD *)(v0 + 472) = *(_OWORD *)(v0 + 312);
      *(_OWORD *)(v0 + 488) = v17;
      v18 = *(_OWORD *)(v0 + 232);
      *(_OWORD *)(v0 + 376) = *(_OWORD *)(v0 + 216);
      *(_OWORD *)(v0 + 392) = v18;
      v19 = *(_OWORD *)(v0 + 264);
      *(_OWORD *)(v0 + 408) = *(_OWORD *)(v0 + 248);
      *(_OWORD *)(v0 + 424) = v19;
      v20 = *(_OWORD *)(v0 + 200);
      *(_OWORD *)(v0 + 344) = *(_OWORD *)(v0 + 184);
      *(_OWORD *)(v0 + 360) = v20;
      sub_245387F5C();
      sub_245387B90();
      type metadata accessor for ZoneVersion();
      swift_bridgeObjectRetain();
      sub_245387A70();
      sub_245387B90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_245263A7C((uint64_t)v7);
      *(_QWORD *)(v0 + 608) = sub_2453816D8(*(_QWORD *)(v0 + 576), *(_QWORD *)(v0 + 584), &v33);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_245263A7C((uint64_t)v7);
      sub_245263A7C((uint64_t)v7);
      _os_log_impl(&dword_245256000, v4, v5, "Zone advertiser advertising %{public}s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v32, -1, -1);
      MEMORY[0x24953317C](v8, -1, -1);
    }
    else
    {
      sub_245263A7C(*(_QWORD *)(v0 + 624));
      sub_245263A7C((uint64_t)v7);
    }

    v22 = *(_QWORD *)(v0 + 624);
    v24 = *(_OWORD *)(v22 + 16);
    v23 = *(_OWORD *)(v22 + 32);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)v22;
    *(_OWORD *)(v0 + 32) = v24;
    *(_OWORD *)(v0 + 48) = v23;
    v25 = *(_OWORD *)(v22 + 96);
    v27 = *(_OWORD *)(v22 + 48);
    v26 = *(_OWORD *)(v22 + 64);
    *(_OWORD *)(v0 + 96) = *(_OWORD *)(v22 + 80);
    *(_OWORD *)(v0 + 112) = v25;
    *(_OWORD *)(v0 + 64) = v27;
    *(_OWORD *)(v0 + 80) = v26;
    v29 = *(_OWORD *)(v22 + 128);
    v28 = *(_OWORD *)(v22 + 144);
    v30 = *(_OWORD *)(v22 + 112);
    *(_QWORD *)(v0 + 176) = *(_QWORD *)(v22 + 160);
    *(_OWORD *)(v0 + 144) = v29;
    *(_OWORD *)(v0 + 160) = v28;
    *(_OWORD *)(v0 + 128) = v30;
    v31 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 696) = v31;
    sub_245265494();
    sub_245263BD8();
    sub_245269B8C();
    *v31 = v0;
    v31[1] = sub_2452692C8;
    return sub_245387764();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2452692C8()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  (*v1)[88] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v3 = v2[84];
    v4 = v2[83];
    v5 = v2[82];
    sub_245263F80(v2[81], &qword_25744F708);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_245269360()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  void *v4;

  if (*(_BYTE *)(v0 + 712) != 1)
    goto LABEL_4;
  v1 = *(_QWORD *)(v0 + 680);
  v2 = *(NSObject **)(v1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser_queue);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_245269BD0;
  *(_QWORD *)(v3 + 24) = v1;
  *(_QWORD *)(v0 + 536) = sub_245263BB8;
  *(_QWORD *)(v0 + 544) = v3;
  *(_QWORD *)(v0 + 504) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 512) = 1107296256;
  *(_QWORD *)(v0 + 520) = sub_24525B888;
  *(_QWORD *)(v0 + 528) = &block_descriptor_45;
  v4 = _Block_copy((const void *)(v0 + 504));
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v2, v4);
  swift_release();
  _Block_release(v4);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v4 & 1) != 0)
  {
    __break(1u);
LABEL_4:
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2452694B8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v14;

  v1 = *(void **)(v0 + 704);
  v2 = v1;
  v3 = v1;
  v4 = sub_2453877F4();
  v5 = sub_245387D1C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 704);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v14 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 600) = v6;
    v9 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C868);
    v10 = sub_245387B48();
    *(_QWORD *)(v0 + 592) = sub_2453816D8(v10, v11, &v14);
    sub_245387E0C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_245256000, v4, v5, "Zone advertiser failed to advertise: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v8, -1, -1);
    MEMORY[0x24953317C](v7, -1, -1);

    swift_release();
  }
  else
  {
    v12 = *(void **)(v0 + 704);
    swift_release();

  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_245269698(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;

  if (qword_25744FD90 != -1)
    swift_once();
  v2 = sub_245387818();
  __swift_project_value_buffer(v2, (uint64_t)qword_257462FB0);
  v3 = sub_2453877F4();
  v4 = sub_245387D34();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_245256000, v3, v4, "Zone advertiser advertisement task is shutting down", v5, 2u);
    MEMORY[0x24953317C](v5, -1, -1);
  }

  v6 = OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementTask;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC16ReplicatorEngine23StatusKitZoneAdvertiser__queue_advertisementTask))
  {
    swift_retain();
    sub_245387C80();
    swift_release();
  }
  *(_QWORD *)(a1 + v6) = 0;
  return swift_release();
}

uint64_t sub_2452697B8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2452697EC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_2452639C4;
  return sub_245266E84(a1, v4, v5, v7, v6);
}

void sub_245269864(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_245267DEC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_24526987C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F710);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2452698F4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744F710);
  return sub_2452684A8();
}

uint64_t sub_245269928(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 112);
  v3 = *(_QWORD *)(a1 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24525FFF8(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_2452699B4()
{
  unint64_t result;

  result = qword_2574503C0;
  if (!qword_2574503C0)
  {
    result = MEMORY[0x2495330B0](&unk_24538D178, &type metadata for FeatureFlags);
    atomic_store(result, (unint64_t *)&qword_2574503C0);
  }
  return result;
}

uint64_t sub_2452699F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v1 = sub_2453877B8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v0 + 160);
  if (v4 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v0 + 152), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 216) & ~v3), v1);
  return swift_deallocObject();
}

uint64_t sub_245269AD0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(sub_2453877B8() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)(v1 + 5);
  v10 = v1[26];
  v11 = (uint64_t)v1 + v5;
  v12 = *((_BYTE *)v1 + v5 + *(_QWORD *)(v4 + 64));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_245269BFC;
  return sub_245268E00(a1, v6, v7, v8, v9, v10, v11, v12);
}

unint64_t sub_245269B8C()
{
  unint64_t result;

  result = qword_25744FC88;
  if (!qword_25744FC88)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for ZoneVersionAdvertisement, &type metadata for ZoneVersionAdvertisement);
    atomic_store(result, (unint64_t *)&qword_25744FC88);
  }
  return result;
}

uint64_t sub_245269BD0()
{
  uint64_t v0;

  return sub_245269698(v0);
}

uint64_t sub_245269BD8()
{
  return swift_deallocObject();
}

void sub_245269BE8(_BYTE *a1@<X8>)
{
  sub_2452645EC(a1);
}

uint64_t static RecordDestination.== infix(_:_:)(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *a2;
  if (*a1)
  {
    if (v2)
    {
      swift_bridgeObjectRetain();
      v3 = swift_bridgeObjectRetain();
      v4 = sub_245269CA8(v3, v2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v4 & 1;
    }
    return 0;
  }
  if (v2)
    return 0;
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t sub_245269CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  BOOL v20;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_245387740();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v22 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v17 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v22 = *(_QWORD *)(v8 + 72);
      v23 = v8;
      v13 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      v14 = v11 - 1;
      do
      {
        v15 = a1;
        v13(v10, a1 + v12, v4);
        v16 = a2;
        v13(v7, a2 + v12, v4);
        sub_24526B308(&qword_257452430, MEMORY[0x24BDCEA98]);
        v17 = sub_245387AE8();
        v18 = *(void (**)(char *, uint64_t))(v23 + 8);
        v18(v7, v4);
        v18(v10, v4);
        v20 = v14-- != 0;
        if ((v17 & 1) == 0)
          break;
        v12 += v22;
        a2 = v16;
        a1 = v15;
      }
      while (v20);
    }
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t RecordDestination.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  if (!*v1)
    return sub_245388448();
  sub_245388448();
  return sub_24526A948(a1, v3);
}

uint64_t sub_245269E80()
{
  return 0;
}

uint64_t sub_245269E8C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

void sub_245269EB8(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_245269EC4()
{
  sub_24526AB28();
  return sub_2453884D8();
}

uint64_t sub_245269EEC()
{
  sub_24526AB28();
  return sub_2453884E4();
}

uint64_t sub_245269F14()
{
  _BYTE *v0;

  if (*v0)
    return 7105633;
  else
    return 0x697463656C6C6F63;
}

uint64_t sub_245269F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24526B21C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_245269F70()
{
  sub_24526AAE4();
  return sub_2453884D8();
}

uint64_t sub_245269F98()
{
  sub_24526AAE4();
  return sub_2453884E4();
}

uint64_t sub_245269FC0()
{
  return 1;
}

uint64_t sub_245269FC8()
{
  sub_24538843C();
  sub_245388448();
  return sub_245388478();
}

uint64_t sub_24526A008()
{
  return sub_245388448();
}

uint64_t sub_24526A02C()
{
  sub_24538843C();
  sub_245388448();
  return sub_245388478();
}

uint64_t sub_24526A068()
{
  return 12383;
}

uint64_t sub_24526A074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_245388274();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24526A0F0()
{
  sub_24526AB6C();
  return sub_2453884D8();
}

uint64_t sub_24526A118()
{
  sub_24526AB6C();
  return sub_2453884E4();
}

uint64_t RecordDestination.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452200);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452208);
  v18 = *(_QWORD *)(v6 - 8);
  v19 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452210);
  v20 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24526AAE4();
  sub_24538849C();
  if (v12)
  {
    v22 = 0;
    sub_24526AB6C();
    sub_245388070();
    v21 = v12;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFB0);
    sub_24526ABB0((unint64_t *)&qword_25744FFC0, &qword_25744F6C8, MEMORY[0x24BDCEA70], MEMORY[0x24BEE12A0]);
    v13 = v19;
    sub_2453880B8();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v13);
  }
  else
  {
    v23 = 1;
    sub_24526AB28();
    sub_245388070();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v11, v9);
}

uint64_t RecordDestination.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_24538843C();
  sub_245388448();
  if (v1)
    sub_24526A948((uint64_t)v3, v1);
  return sub_245388478();
}

uint64_t RecordDestination.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;

  v28 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452230);
  v26 = *(_QWORD *)(v3 - 8);
  v27 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v29 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452238);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452240);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_24526AAE4();
  v14 = v31;
  sub_245388490();
  if (v14)
    goto LABEL_9;
  v15 = v29;
  v25 = v6;
  v16 = v5;
  v31 = v10;
  v17 = sub_245388058();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v20 = sub_245387EE4();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
    *v22 = &type metadata for RecordDestination;
    sub_245387FEC();
    sub_245387ECC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v18);
LABEL_9:
    v23 = (uint64_t)v30;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  if ((*(_BYTE *)(v17 + 32) & 1) != 0)
  {
    v34 = 1;
    sub_24526AB28();
    sub_245387FE0();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v15, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v9);
    v19 = 0;
  }
  else
  {
    v33 = 0;
    sub_24526AB6C();
    sub_245387FE0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFB0);
    sub_24526ABB0(&qword_257452248, &qword_25744F6D8, MEMORY[0x24BDCEAA8], MEMORY[0x24BEE12D0]);
    sub_245388034();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v16);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v9);
    v19 = v32;
  }
  v23 = (uint64_t)v30;
  *v28 = v19;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_24526A788@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return RecordDestination.init(from:)(a1, a2);
}

uint64_t sub_24526A79C(_QWORD *a1)
{
  return RecordDestination.encode(to:)(a1);
}

uint64_t sub_24526A7B0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *a2;
  if (*a1)
  {
    if (v2)
    {
      swift_bridgeObjectRetain();
      v3 = swift_bridgeObjectRetain();
      v4 = sub_245269CA8(v3, v2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v4 & 1;
    }
    return 0;
  }
  if (v2)
    return 0;
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t sub_24526A830()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_24538843C();
  sub_245388448();
  if (v1)
    sub_24526A948((uint64_t)v3, v1);
  return sub_245388478();
}

uint64_t sub_24526A890(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  if (!*v1)
    return sub_245388448();
  sub_245388448();
  return sub_24526A948(a1, v3);
}

uint64_t sub_24526A8EC()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_24538843C();
  sub_245388448();
  if (v1)
    sub_24526A948((uint64_t)v3, v1);
  return sub_245388478();
}

uint64_t sub_24526A948(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD v17[2];

  v4 = sub_245387740();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a2 + 16);
  v17[1] = a1;
  sub_245388448();
  if (v11)
  {
    v12 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v13 = *(_QWORD *)(v5 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    while (1)
    {
      v14(v10, v12, v4);
      v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v15(v10, 0, 1, v4);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
      if ((_DWORD)result == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
      sub_24526B308(&qword_25744F6D0, MEMORY[0x24BDCEA88]);
      sub_245387AB8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v12 += v13;
      if (!--v11)
        return v15(v10, 1, 1, v4);
    }
  }
  else
  {
    v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    return v15(v10, 1, 1, v4);
  }
  return result;
}

unint64_t sub_24526AAE4()
{
  unint64_t result;

  result = qword_257452218;
  if (!qword_257452218)
  {
    result = MEMORY[0x2495330B0](&unk_245389FF4, &type metadata for RecordDestination.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452218);
  }
  return result;
}

unint64_t sub_24526AB28()
{
  unint64_t result;

  result = qword_257452220;
  if (!qword_257452220)
  {
    result = MEMORY[0x2495330B0](&unk_245389FA4, &type metadata for RecordDestination.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452220);
  }
  return result;
}

unint64_t sub_24526AB6C()
{
  unint64_t result;

  result = qword_257452228;
  if (!qword_257452228)
  {
    result = MEMORY[0x2495330B0](&unk_245389F54, &type metadata for RecordDestination.CollectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452228);
  }
  return result;
}

uint64_t sub_24526ABB0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_25744FFB0);
    v10 = sub_24526B308(a2, a3);
    result = MEMORY[0x2495330B0](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24526AC30()
{
  unint64_t result;

  result = qword_257452250;
  if (!qword_257452250)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for RecordDestination, &type metadata for RecordDestination);
    atomic_store(result, (unint64_t *)&qword_257452250);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for RecordDestination(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for RecordDestination()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for RecordDestination(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for RecordDestination(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RecordDestination(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RecordDestination(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_24526ADC0(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_24526ADD8(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for RecordDestination()
{
  return &type metadata for RecordDestination;
}

uint64_t storeEnumTagSinglePayload for RecordDestination.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24526AE54 + 4 * byte_245389C75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24526AE88 + 4 * byte_245389C70[v4]))();
}

uint64_t sub_24526AE88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24526AE90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24526AE98);
  return result;
}

uint64_t sub_24526AEA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24526AEACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24526AEB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24526AEB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RecordDestination.CodingKeys()
{
  return &type metadata for RecordDestination.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RecordDestination.CollectionCodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for RecordDestination.CollectionCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_24526AF68 + 4 * byte_245389C7A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_24526AF88 + 4 * byte_245389C7F[v4]))();
}

_BYTE *sub_24526AF68(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_24526AF88(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24526AF90(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24526AF98(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24526AFA0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24526AFA8(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_24526AFB4()
{
  return 0;
}

ValueMetadata *type metadata accessor for RecordDestination.CollectionCodingKeys()
{
  return &type metadata for RecordDestination.CollectionCodingKeys;
}

ValueMetadata *type metadata accessor for RecordDestination.AllCodingKeys()
{
  return &type metadata for RecordDestination.AllCodingKeys;
}

unint64_t sub_24526AFE0()
{
  unint64_t result;

  result = qword_257452258;
  if (!qword_257452258)
  {
    result = MEMORY[0x2495330B0](&unk_245389E74, &type metadata for RecordDestination.CollectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452258);
  }
  return result;
}

unint64_t sub_24526B028()
{
  unint64_t result;

  result = qword_257452260;
  if (!qword_257452260)
  {
    result = MEMORY[0x2495330B0](&unk_245389F2C, &type metadata for RecordDestination.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452260);
  }
  return result;
}

unint64_t sub_24526B070()
{
  unint64_t result;

  result = qword_257452268;
  if (!qword_257452268)
  {
    result = MEMORY[0x2495330B0](&unk_245389DE4, &type metadata for RecordDestination.CollectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452268);
  }
  return result;
}

unint64_t sub_24526B0B8()
{
  unint64_t result;

  result = qword_257452270;
  if (!qword_257452270)
  {
    result = MEMORY[0x2495330B0](&unk_245389E0C, &type metadata for RecordDestination.CollectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452270);
  }
  return result;
}

unint64_t sub_24526B100()
{
  unint64_t result;

  result = qword_257452278;
  if (!qword_257452278)
  {
    result = MEMORY[0x2495330B0](&unk_245389D94, &type metadata for RecordDestination.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452278);
  }
  return result;
}

unint64_t sub_24526B148()
{
  unint64_t result;

  result = qword_257452280;
  if (!qword_257452280)
  {
    result = MEMORY[0x2495330B0](&unk_245389DBC, &type metadata for RecordDestination.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452280);
  }
  return result;
}

unint64_t sub_24526B190()
{
  unint64_t result;

  result = qword_257452288;
  if (!qword_257452288)
  {
    result = MEMORY[0x2495330B0](&unk_245389E9C, &type metadata for RecordDestination.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452288);
  }
  return result;
}

unint64_t sub_24526B1D8()
{
  unint64_t result;

  result = qword_257452290;
  if (!qword_257452290)
  {
    result = MEMORY[0x2495330B0](&unk_245389EC4, &type metadata for RecordDestination.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452290);
  }
  return result;
}

uint64_t sub_24526B21C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x697463656C6C6F63 && a2 == 0xEA00000000006E6FLL;
  if (v2 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7105633 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_245388274();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_24526B308(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_245387740();
    result = MEMORY[0x2495330B0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

double static DefaultSuspensionPolicy.defaultDiscardInterval.getter()
{
  return 1209600.0;
}

double static DefaultSuspensionPolicy.defaultUnpairInterval.getter()
{
  return 15552000.0;
}

ReplicatorEngine::DefaultSuspensionPolicy __swiftcall DefaultSuspensionPolicy.init(discardInterval:unpairInterval:)(Swift::Double discardInterval, Swift::Double unpairInterval)
{
  Swift::Double *v2;
  ReplicatorEngine::DefaultSuspensionPolicy result;

  *v2 = discardInterval;
  v2[1] = unpairInterval;
  result.unpairInterval = unpairInterval;
  result.discardInterval = discardInterval;
  return result;
}

uint64_t DefaultSuspensionPolicy.discardDate(for:hasRecordsFromRemoteDevice:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  v5 = a1 + *(int *)(type metadata accessor for PairingRelationship() + 32);
  v6 = *(_QWORD *)v5;
  v7 = *(_QWORD *)(v5 + 8);
  if (v7)
  {
    sub_24526B470(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
    sub_24526B484(v6, v7);
    sub_24526B484(0, 0);
LABEL_5:
    v8 = sub_2453876EC();
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
    v10 = a3;
    v11 = 1;
    return v9(v10, v11, 1, v8);
  }
  sub_24526B484(*(_QWORD *)v5, 0);
  sub_24526B484(0, 0);
  if ((a2 & 1) == 0)
    goto LABEL_5;
  sub_245387674();
  v8 = sub_2453876EC();
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v10 = a3;
  v11 = 0;
  return v9(v10, v11, 1, v8);
}

uint64_t sub_24526B470(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_24526B484(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t DefaultSuspensionPolicy.unpairDate(for:hasRecordsFromRemoteDevice:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v3 = a1 + *(int *)(type metadata accessor for PairingRelationship() + 32);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  if (v5 == 2)
  {
    sub_24526B484(*(_QWORD *)v3, 2uLL);
    sub_24526B484(0, 2uLL);
    sub_245387674();
    v6 = sub_2453876EC();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a2;
    v9 = 0;
  }
  else
  {
    sub_24526B470(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
    sub_24526B484(v4, v5);
    sub_24526B484(0, 2uLL);
    v6 = sub_2453876EC();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a2;
    v9 = 1;
  }
  return v7(v8, v9, 1, v6);
}

uint64_t sub_24526B584@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  v5 = a1 + *(int *)(type metadata accessor for PairingRelationship() + 32);
  v6 = *(_QWORD *)v5;
  v7 = *(_QWORD *)(v5 + 8);
  if (v7)
  {
    sub_24526B470(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
    sub_24526B484(v6, v7);
    sub_24526B484(0, 0);
LABEL_5:
    v8 = sub_2453876EC();
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
    v10 = a3;
    v11 = 1;
    return v9(v10, v11, 1, v8);
  }
  sub_24526B484(*(_QWORD *)v5, 0);
  sub_24526B484(0, 0);
  if ((a2 & 1) == 0)
    goto LABEL_5;
  sub_245387674();
  v8 = sub_2453876EC();
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v10 = a3;
  v11 = 0;
  return v9(v10, v11, 1, v8);
}

uint64_t sub_24526B680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v3 = a1 + *(int *)(type metadata accessor for PairingRelationship() + 32);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  if (v5 == 2)
  {
    sub_24526B484(*(_QWORD *)v3, 2uLL);
    sub_24526B484(0, 2uLL);
    sub_245387674();
    v6 = sub_2453876EC();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a2;
    v9 = 0;
  }
  else
  {
    sub_24526B470(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
    sub_24526B484(v4, v5);
    sub_24526B484(0, 2uLL);
    v6 = sub_2453876EC();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a2;
    v9 = 1;
  }
  return v7(v8, v9, 1, v6);
}

ValueMetadata *type metadata accessor for DefaultSuspensionPolicy()
{
  return &type metadata for DefaultSuspensionPolicy;
}

uint64_t sub_24526B77C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

double static Replicator.Constants.protocolVersion.getter@<D0>(_OWORD *a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 12;
  *a1 = xmmword_24538A080;
  return result;
}

uint64_t sub_24526B7E0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_245387740();
  __swift_allocate_value_buffer(v3, qword_257463020);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_257463020);
  sub_2453876F8();
  v5 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  __break(1u);
  return result;
}

unint64_t sub_24526B8C0()
{
  unint64_t result;

  result = sub_245331144((uint64_t)&unk_25163E828);
  qword_257463038 = result;
  return result;
}

uint64_t sub_24526B8F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];

  v15 = *a4;
  v14 = a4[1];
  if (MEMORY[0x24953323C](v7 + 16))
  {
    v20 = a6;
    v16 = *(_QWORD *)(v7 + 24);
    ObjectType = swift_getObjectType();
    v21[0] = v15;
    v21[1] = v14;
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 24))(a1, a2, a3, v21, a5, v20, ObjectType, v16);
    return swift_unknownObjectRelease();
  }
  else
  {
    v19 = type metadata accessor for PrioritizedRecordValue();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a7, 1, 1, v19);
  }
}

uint64_t sub_24526B9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v12;
  uint64_t ObjectType;

  result = MEMORY[0x24953323C](v5 + 16);
  if (result)
  {
    v12 = *(_QWORD *)(v5 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 32))(a1, a2, a3, a4, a5, ObjectType, v12);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_24526BA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v10;
  uint64_t ObjectType;

  result = MEMORY[0x24953323C](v4 + 16);
  if (result)
  {
    v10 = *(_QWORD *)(v4 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 40))(a1, a2, a3, a4, ObjectType, v10);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_24526BB18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _BYTE *a6@<X8>)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v14;
  uint64_t ObjectType;

  result = MEMORY[0x24953323C](v6 + 16);
  if (result)
  {
    v14 = *(_QWORD *)(v6 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 48))(a1, a2, a3, a4, a5, ObjectType, v14);
    return swift_unknownObjectRelease();
  }
  else
  {
    *a6 = 0;
  }
  return result;
}

uint64_t sub_24526BBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;

  if (!MEMORY[0x24953323C](v4 + 16))
    return sub_245387B78();
  v9 = *(_QWORD *)(v4 + 24);
  ObjectType = swift_getObjectType();
  v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a3, a4, ObjectType, v9);
  swift_unknownObjectRelease();
  return v11;
}

uint64_t sub_24526BC84()
{
  uint64_t v0;

  sub_2452B75EC(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_24526BCA8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t ObjectType;

  result = MEMORY[0x24953323C](v1 + 16);
  if (result)
  {
    v4 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  else
  {
    *a1 = 0;
  }
  return result;
}

uint64_t sub_24526BD10@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t ObjectType;

  result = MEMORY[0x24953323C](v1 + 16);
  if (result)
  {
    v4 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  else
  {
    *a1 = 0;
    a1[1] = 0;
  }
  return result;
}

void Replicator.deviceType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 96);
}

__n128 Replicator.screenDescriptor.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;
  __n128 result;
  __int128 v5;

  v2 = *(_BYTE *)(v1 + 136);
  v3 = *(_BYTE *)(v1 + 137);
  result = *(__n128 *)(v1 + 104);
  v5 = *(_OWORD *)(v1 + 120);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 32) = v2;
  *(_BYTE *)(a1 + 33) = v3;
  return result;
}

uint64_t sub_24526BDB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 152))
  {
    v1 = *(_QWORD *)(v0 + 152);
  }
  else
  {
    v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FEE0);
    sub_24526381C(&qword_25744FED8, &qword_25744FEE0, MEMORY[0x24BDB9CB0]);
    v1 = sub_24538789C();
    *(_QWORD *)(v2 + 152) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_24526BE5C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 152) = a1;
  return swift_release();
}

uint64_t (*sub_24526BE6C(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_24526BDB8();
  return sub_24526BEA0;
}

uint64_t sub_24526BEA0(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + 152) = *a1;
  return swift_release();
}

uint64_t sub_24526BEB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 168))
  {
    v1 = *(_QWORD *)(v0 + 168);
  }
  else
  {
    v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FEE8);
    sub_24526381C(&qword_257452298, &qword_25744FEE8, MEMORY[0x24BDB9CB0]);
    v1 = sub_24538789C();
    *(_QWORD *)(v2 + 168) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_24526BF54(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 168) = a1;
  return swift_release();
}

uint64_t (*sub_24526BF64(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_24526BEB0();
  return sub_24526BF98;
}

uint64_t sub_24526BF98(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + 168) = *a1;
  return swift_release();
}

uint64_t sub_24526BFA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  return sub_24525E4F0(v1 + 192, a1);
}

uint64_t sub_24526BFF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_245387740();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t (*sub_24526C028())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_24526C068()
{
  return sub_245274F0C();
}

void sub_24526C074(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 544);
}

uint64_t sub_24526C080(char a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t result;
  _QWORD v9[6];

  v2 = v1;
  v4 = *(NSObject **)(v2 + 232);
  v5 = swift_allocObject();
  *(_BYTE *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = v2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_24526C388;
  *(_QWORD *)(v6 + 24) = v5;
  v9[4] = sub_245263BB8;
  v9[5] = v6;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_24525B888;
  v9[3] = &block_descriptor_2;
  v7 = _Block_copy(v9);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v2 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_24526C1B0(char a1, uint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  if (qword_25744FD90 != -1)
    swift_once();
  v4 = sub_245387818();
  __swift_project_value_buffer(v4, (uint64_t)qword_257462FB0);
  v5 = sub_2453877F4();
  v6 = sub_245387D34();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 67240192;
    sub_245387E0C();
    _os_log_impl(&dword_245256000, v5, v6, "Replicator state changed to enabled: %{BOOL,public}d", v7, 8u);
    MEMORY[0x24953317C](v7, -1, -1);
  }

  *(_BYTE *)(a2 + 544) = a1 & 1;
  swift_beginAccess();
  v8 = *(_QWORD *)(a2 + 368);
  v9 = *(_QWORD *)(a2 + 376);
  __swift_mutable_project_boxed_opaque_existential_1(a2 + 344, v8);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v9 + 24))(a1 & 1, v8, v9);
  swift_endAccess();
  swift_beginAccess();
  v10 = *(_QWORD *)(a2 + 216);
  v11 = *(_QWORD *)(a2 + 224);
  __swift_mutable_project_boxed_opaque_existential_1(a2 + 192, v10);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v11 + 16) + 32))(a1 & 1, v10);
  result = swift_endAccess();
  if ((a1 & 1) == 0)
    return sub_24526C3BC();
  return result;
}

uint64_t sub_24526C364()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24526C388()
{
  uint64_t v0;

  return sub_24526C1B0(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_24526C394()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_24526C3BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  unint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;

  v58 = type metadata accessor for PairingRelationship();
  v55 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v57 = (char *)&v51 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FFA0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v51 - v6;
  v8 = sub_2453879D4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(v0 + 232);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v13 = v12;
  v14 = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v14 & 1) == 0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v60 = v5;
  v61 = v7;
  v62 = v0;
  swift_beginAccess();
  v59 = v0 + 192;
  sub_24525E4F0(v0 + 192, (uint64_t)v65);
  v17 = v66;
  v16 = v67;
  __swift_project_boxed_opaque_existential_1(v65, v66);
  v18 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v16 + 8) + 8) + 32))(v17);
  v19 = sub_2452B036C(v18, (uint64_t (*)(char *, unint64_t, uint64_t))sub_2452B0E94);
  swift_bridgeObjectRelease();
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
  v63 = 0;
  v20 = *(_QWORD *)(v19 + 64);
  v53 = v19 + 64;
  v56 = v19;
  v21 = 1 << *(_BYTE *)(v19 + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & v20;
  v54 = (unint64_t)(v21 + 63) >> 6;
  v52 = v54 - 1;
  v24 = (uint64_t *)&unk_25744FF90;
  v25 = (uint64_t)v57;
  if ((v22 & v20) == 0)
    goto LABEL_9;
LABEL_7:
  v35 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  v36 = v35 | (v63 << 6);
  v38 = v60;
  v37 = (uint64_t)v61;
  while (2)
  {
    v39 = *(_QWORD *)(v56 + 56);
    v40 = (_QWORD *)(*(_QWORD *)(v56 + 48) + 16 * v36);
    v41 = v40[1];
    *v38 = *v40;
    v38[1] = v41;
    v42 = v39 + *(_QWORD *)(v55 + 72) * v36;
    v43 = __swift_instantiateConcreteTypeFromMangledName(v24);
    sub_2452B792C(v42, (uint64_t)v38 + *(int *)(v43 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v38, 0, 1, v43);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2452BC850((uint64_t)v38, v37, &qword_25744FFA0);
      v48 = __swift_instantiateConcreteTypeFromMangledName(v24);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v37, 1, v48) == 1)
      {
        swift_release();
        sub_24525E4F0(v59, (uint64_t)v65);
        v50 = v66;
        v49 = v67;
        __swift_project_boxed_opaque_existential_1(v65, v66);
        v64 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v49 + 8) + 8) + 32))(v50);
        sub_245387878();
        swift_bridgeObjectRelease();
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
      }
      swift_bridgeObjectRelease();
      sub_2452B7AB8(v37 + *(int *)(v48 + 48), v25, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      sub_245277D6C(v25);
      sub_24525E4F0(v59, (uint64_t)v65);
      v26 = v24;
      v27 = v66;
      v28 = v67;
      __swift_project_boxed_opaque_existential_1(v65, v66);
      v29 = (uint64_t *)(v25 + *(int *)(v58 + 20));
      v30 = *v29;
      v31 = v29[1];
      v32 = *(_QWORD *)(v28 + 16);
      v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 96);
      swift_bridgeObjectRetain();
      v34 = v32;
      v24 = v26;
      v33(v30, v31, v27, v34);
      swift_bridgeObjectRelease();
      sub_2452B7B5C(v25, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
      if (v23)
        goto LABEL_7;
LABEL_9:
      v44 = v63 + 1;
      v38 = v60;
      v37 = (uint64_t)v61;
      if (__OFADD__(v63, 1))
      {
        __break(1u);
        goto LABEL_30;
      }
      if (v44 < v54)
      {
        v45 = *(_QWORD *)(v53 + 8 * v44);
        if (v45)
          goto LABEL_12;
        v46 = v63 + 2;
        ++v63;
        if (v44 + 1 < v54)
        {
          v45 = *(_QWORD *)(v53 + 8 * v46);
          if (v45)
            goto LABEL_15;
          v63 = v44 + 1;
          if (v44 + 2 < v54)
          {
            v45 = *(_QWORD *)(v53 + 8 * (v44 + 2));
            if (v45)
            {
              v44 += 2;
              goto LABEL_12;
            }
            v46 = v44 + 3;
            v63 = v44 + 2;
            if (v44 + 3 < v54)
              break;
          }
        }
      }
LABEL_26:
      v47 = __swift_instantiateConcreteTypeFromMangledName(v24);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v38, 1, 1, v47);
      v23 = 0;
    }
    v45 = *(_QWORD *)(v53 + 8 * v46);
    if (v45)
    {
LABEL_15:
      v44 = v46;
LABEL_12:
      v23 = (v45 - 1) & v45;
      v36 = __clz(__rbit64(v45)) + (v44 << 6);
      v63 = v44;
      continue;
    }
    break;
  }
  while (1)
  {
    v44 = v46 + 1;
    if (__OFADD__(v46, 1))
      break;
    if (v44 >= v54)
    {
      v63 = v52;
      goto LABEL_26;
    }
    v45 = *(_QWORD *)(v53 + 8 * v44);
    ++v46;
    if (v45)
      goto LABEL_12;
  }
LABEL_31:
  __break(1u);
  return result;
}

void (*sub_24526C8E0(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v2 = v1;
  v4 = malloc(0x48uLL);
  *a1 = v4;
  v5 = *(_QWORD *)(v1 + 232);
  v4[6] = v2;
  v4[7] = v5;
  sub_245387D7C();
  *((_BYTE *)v4 + 64) = *(_BYTE *)v4;
  return sub_24526C95C;
}

void sub_24526C95C(uint64_t a1, char a2)
{
  _QWORD *v2;
  char v3;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char v12;

  v2 = *(_QWORD **)a1;
  v3 = *(_BYTE *)(*(_QWORD *)a1 + 64);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  isEscapingClosureAtFileLocation = *(_QWORD *)(*(_QWORD *)a1 + 56);
  if ((a2 & 1) != 0)
  {
    v6 = swift_allocObject();
    *(_BYTE *)(v6 + 16) = v3;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = swift_allocObject();
    v3 = v7;
    *(_QWORD *)(v7 + 16) = sub_2452BC9C8;
    *(_QWORD *)(v7 + 24) = v6;
    v2[4] = sub_2452643B4;
    v2[5] = v7;
    *v2 = MEMORY[0x24BDAC760];
    v2[1] = 1107296256;
    v2[2] = sub_24525B888;
    v2[3] = &block_descriptor_15;
    v8 = _Block_copy(v2);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync((dispatch_queue_t)isEscapingClosureAtFileLocation, v8);
    _Block_release(v8);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
LABEL_5:
      free(v2);
      return;
    }
    __break(1u);
  }
  v9 = swift_allocObject();
  *(_BYTE *)(v9 + 16) = v3;
  *(_QWORD *)(v9 + 24) = v5;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_2452BC9C8;
  *(_QWORD *)(v10 + 24) = v9;
  v2[4] = sub_2452643B4;
  v2[5] = v10;
  *v2 = MEMORY[0x24BDAC760];
  v2[1] = 1107296256;
  v2[2] = sub_24525B888;
  v2[3] = &block_descriptor_26;
  v11 = _Block_copy(v2);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync((dispatch_queue_t)isEscapingClosureAtFileLocation, v11);
  _Block_release(v11);
  v12 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v12 & 1) == 0)
    goto LABEL_5;
  __break(1u);
}

uint64_t sub_24526CB88()
{
  return swift_deallocObject();
}

uint64_t sub_24526CB98()
{
  return swift_deallocObject();
}

uint64_t Replicator.__allocating_init(syncService:metadataStore:replicationPolicy:suspensionPolicy:deviceType:screenDescriptor:zoneVersionAdvertiser:handshakeScheduler:pinnedIdentityManager:permittedRemoteDeviceTypes:localDeviceIdentifier:activeWatchIDSIDProvider:)(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6, __int128 *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v21;

  swift_allocObject();
  v21 = sub_2452B3F24(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  swift_unknownObjectRelease();
  return v21;
}

uint64_t Replicator.init(syncService:metadataStore:replicationPolicy:suspensionPolicy:deviceType:screenDescriptor:zoneVersionAdvertiser:handshakeScheduler:pinnedIdentityManager:permittedRemoteDeviceTypes:localDeviceIdentifier:activeWatchIDSIDProvider:)(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6, __int128 *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;

  v14 = sub_2452B3F24(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  swift_unknownObjectRelease();
  return v14;
}

uint64_t sub_24526CCBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t active;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  _QWORD v21[2];
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  __int128 aBlock;
  uint64_t (*v27)(uint64_t);
  void *v28;
  uint64_t (*v29)();
  uint64_t v30;

  v1 = v0;
  v2 = sub_245387920();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v22 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_245387950();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(_QWORD *)(v1 + 232);
  v29 = sub_2452B4540;
  v30 = v1;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v27 = sub_24525DD34;
  v28 = &block_descriptor_29;
  v10 = _Block_copy(&aBlock);
  swift_retain();
  sub_245387938();
  v23[0] = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_25744FF00, v3, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
  sub_245387E3C();
  MEMORY[0x2495320E4](0, v9, v5, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release();
  v11 = *(_QWORD *)(v1 + 184);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v11 + 32))(ObjectType, v11);
  sub_24525E4F0(v1 + 16, (uint64_t)&aBlock);
  active = type metadata accessor for ActiveWatchPairingEnforcer();
  v14 = (_QWORD *)swift_allocObject();
  v15 = sub_2452B3E04(v1, &aBlock, v14);
  v28 = (void *)active;
  v29 = (uint64_t (*)())&off_251642258;
  *(_QWORD *)&aBlock = v15;
  swift_beginAccess();
  swift_retain();
  sub_2452BBA60((uint64_t)&aBlock, v1 + 56, &qword_2574502E8);
  swift_endAccess();
  sub_2452BC89C(v1 + 56, (uint64_t)&aBlock, &qword_2574502E8);
  if (!v28)
    return sub_245263F80((uint64_t)&aBlock, &qword_2574502E8);
  sub_24525E4F0((uint64_t)&aBlock, (uint64_t)v23);
  sub_245263F80((uint64_t)&aBlock, &qword_2574502E8);
  v16 = v24;
  v17 = v25;
  __swift_project_boxed_opaque_existential_1(v23, v24);
  v18 = swift_allocObject();
  swift_weakInit();
  v19 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v17 + 16);
  swift_retain();
  v19(sub_2452B456C, v18, v16, v17);
  swift_release_n();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
}

uint64_t sub_24526CFEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v2 = a1 + 192;
  swift_beginAccess();
  sub_24525E4F0(v2, (uint64_t)v16);
  v3 = v17;
  v4 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + 8) + 8) + 32))(v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  sub_24526D20C();
  sub_24526D68C();
  sub_24526D8E4();
  sub_24526E14C();
  sub_24526E7DC();
  sub_24526F738();
  sub_245271FB4();
  sub_245272320(2);
  sub_2452725FC();
  v6 = *(_QWORD *)(a1 + 184);
  ObjectType = swift_getObjectType();
  v16[0] = *(_QWORD *)(a1 + 144);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FEE0);
  sub_24526381C(&qword_25744FED8, &qword_25744FEE0, MEMORY[0x24BDB9CB0]);
  v8 = sub_24538789C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 64))(v8, ObjectType, v6);
  v9 = *(unsigned __int8 *)(a1 + 544);
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 368);
  v11 = *(_QWORD *)(a1 + 376);
  __swift_mutable_project_boxed_opaque_existential_1(a1 + 344, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24))(v9, v10, v11);
  swift_endAccess();
  if ((*(_BYTE *)(a1 + 544) & 1) != 0)
  {
    sub_24525E4F0(v2, (uint64_t)v16);
    v13 = v17;
    v12 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v12 + 8) + 8) + 32))(v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    v16[0] = v5;
    sub_245387878();
    LOBYTE(v12) = sub_2452E15C8(v5, v14);
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      v16[0] = v14;
      sub_245387878();
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return sub_24526C3BC();
  }
}

uint64_t sub_24526D20C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t *v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int64_t v60;
  __int128 v61;
  _QWORD v62[3];
  uint64_t v63;
  uint64_t v64;

  v1 = v0;
  v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v2 = MEMORY[0x24BDAC7A8](v57);
  v56 = (uint64_t *)((char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = MEMORY[0x24BDAC7A8](v2);
  v55 = (uint64_t *)((char *)&v50 - v5);
  MEMORY[0x24BDAC7A8](v4);
  v54 = (uint64_t *)((char *)&v50 - v6);
  v7 = sub_2453879D4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v1 + 232);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BEE5610], v7);
  v12 = v11;
  LOBYTE(v11) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) == 0)
    goto LABEL_25;
  swift_beginAccess();
  sub_24525E4F0(v1 + 192, (uint64_t)v62);
  v14 = v63;
  v15 = v64;
  __swift_project_boxed_opaque_existential_1(v62, v63);
  v61 = xmmword_24538A080;
  MutableMetadataStoring.removeIncompatiblePairingRelationships(protocolVersion:)((unint64_t *)&v61, v14, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  v53 = v1 + 192;
  sub_24525E4F0(v1 + 192, (uint64_t)v62);
  v17 = v63;
  v16 = v64;
  __swift_project_boxed_opaque_existential_1(v62, v63);
  v18 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v16 + 8) + 8) + 32))(v17);
  swift_retain();
  v19 = sub_2452BC390(v18, v1, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_2452B4594);
  swift_bridgeObjectRelease();
  swift_release();
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  v20 = 0;
  v21 = *(_QWORD *)(v19 + 64);
  v51 = v19 + 64;
  v58 = v19;
  v22 = 1 << *(_BYTE *)(v19 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v52 = (unint64_t)(v22 + 63) >> 6;
  while (1)
  {
    if (v24)
    {
      v59 = (v24 - 1) & v24;
      v60 = v20;
      v25 = __clz(__rbit64(v24)) | (v20 << 6);
      goto LABEL_6;
    }
    v46 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v46 >= v52)
      return swift_release();
    v47 = *(_QWORD *)(v51 + 8 * v46);
    v48 = v20 + 1;
    if (!v47)
    {
      v48 = v20 + 2;
      if (v20 + 2 >= v52)
        return swift_release();
      v47 = *(_QWORD *)(v51 + 8 * v48);
      if (!v47)
      {
        v48 = v20 + 3;
        if (v20 + 3 >= v52)
          return swift_release();
        v47 = *(_QWORD *)(v51 + 8 * v48);
        if (!v47)
          break;
      }
    }
LABEL_21:
    v59 = (v47 - 1) & v47;
    v60 = v48;
    v25 = __clz(__rbit64(v47)) + (v48 << 6);
LABEL_6:
    v26 = *(_QWORD *)(v58 + 56);
    v27 = (uint64_t *)(*(_QWORD *)(v58 + 48) + 16 * v25);
    v29 = *v27;
    v28 = v27[1];
    v30 = v54;
    *v54 = *v27;
    v30[1] = v28;
    v31 = type metadata accessor for PairingRelationship();
    v32 = v26 + *(_QWORD *)(*(_QWORD *)(v31 - 8) + 72) * v25;
    v33 = v57;
    v34 = (uint64_t)v30 + *(int *)(v57 + 48);
    sub_2452B792C(v32, v34, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v35 = *(int *)(v33 + 48);
    v36 = (uint64_t)v55;
    v37 = (uint64_t)v55 + v35;
    *v55 = v29;
    *(_QWORD *)(v36 + 8) = v28;
    sub_2452B7AB8(v34, v36 + v35, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    sub_24525E4F0(v53, (uint64_t)v62);
    v39 = v63;
    v38 = v64;
    __swift_project_boxed_opaque_existential_1(v62, v63);
    v40 = *(int *)(v33 + 48);
    v41 = v56;
    v42 = (uint64_t)v56 + v40;
    *v56 = v29;
    v41[1] = v28;
    sub_2452B792C(v37, (uint64_t)v41 + v40, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v43 = (uint64_t *)(v42 + *(int *)(v31 + 20));
    v44 = *v43;
    v45 = v43[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2452B7B5C(v42, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 + 16) + 96))(v44, v45, v39);
    swift_bridgeObjectRelease();
    sub_245263F80(v36, (uint64_t *)&unk_25744FF90);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
    v24 = v59;
    v20 = v60;
  }
  v49 = v20 + 4;
  if (v20 + 4 >= v52)
    return swift_release();
  v47 = *(_QWORD *)(v51 + 8 * v49);
  if (v47)
  {
    v48 = v20 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v48 = v49 + 1;
    if (__OFADD__(v49, 1))
      break;
    if (v48 >= v52)
      return swift_release();
    v47 = *(_QWORD *)(v51 + 8 * v48);
    ++v49;
    if (v47)
      goto LABEL_21;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24526D68C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  _QWORD v14[3];
  id v15;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450060);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FDE8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v0[51];
  v9 = v0[52];
  __swift_project_boxed_opaque_existential_1(v0 + 48, v8);
  v14[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  v10 = (void *)v0[29];
  v15 = v10;
  v11 = sub_245387D64();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v3, 1, 1, v11);
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FE60);
  sub_24525C748();
  sub_24526381C(&qword_25744FE58, &qword_25744FE60, MEMORY[0x24BDB9AF8]);
  sub_24525C6C4((unint64_t *)&unk_257450070, (uint64_t (*)(uint64_t))sub_24525C748, MEMORY[0x24BEE5670]);
  sub_2453878B4();
  sub_245263F80((uint64_t)v3, (uint64_t *)&unk_257450060);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_24526381C(&qword_25744FDE0, &qword_25744FDE8, MEMORY[0x24BDB9A08]);
  sub_2453878C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_beginAccess();
  sub_245387860();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_24526D8E4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  os_unfair_lock_s *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint8_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  os_unfair_lock_s *v70;
  uint64_t v71;
  uint64_t v73;
  id v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84[4];
  uint64_t v85[3];
  uint64_t v86;
  uint64_t v87;

  v1 = v0;
  v2 = sub_2453876EC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v80 = (char *)&v73 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v79 = (char *)&v73 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v73 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v73 - v14;
  v16 = sub_2453879D4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (uint64_t *)((char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = (void *)v1[29];
  *v19 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x24BEE5610], v16);
  v74 = v20;
  LOBYTE(v20) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) != 0)
  {
    v77 = v3;
    v21 = *(os_unfair_lock_s **)(v1[67] + 24);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v21 + 4);
    sub_2452E6204(v22, sub_24525C730);
    v75 = 0;
    os_unfair_lock_unlock(v21 + 4);
    swift_release();
    swift_release();
    if (qword_25744FD90 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v23 = sub_245387818();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_257462FB0);
  swift_retain();
  v76 = v24;
  v25 = sub_2453877F4();
  v26 = sub_245387D34();
  v27 = os_log_type_enabled(v25, v26);
  v81 = v13;
  v82 = v2;
  v78 = v15;
  if (v27)
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v85[0] = v29;
    *(_DWORD *)v28 = 136446210;
    v31 = v1[61];
    v30 = v1[62];
    swift_bridgeObjectRetain();
    v84[1] = sub_2453816D8(v31, v30, v85);
    v13 = v81;
    sub_245387E0C();
    swift_release();
    v2 = v82;
    v15 = v78;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v25, v26, "(%{public}s) Starting suspension timer", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v29, -1, -1);
    MEMORY[0x24953317C](v28, -1, -1);

  }
  else
  {

    swift_release();
  }
  v32 = v77;
  sub_2453876C8();
  swift_beginAccess();
  sub_24525E4F0((uint64_t)(v1 + 24), (uint64_t)v85);
  v33 = v86;
  v34 = v87;
  __swift_project_boxed_opaque_existential_1(v85, v86);
  v35 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v34 + 8) + 8) + 32))(v33);
  v36 = v79;
  v37 = sub_24538765C();
  MEMORY[0x24BDAC7A8](v37);
  *(&v73 - 2) = (uint64_t)v1;
  *(&v73 - 1) = (uint64_t)v15;
  v38 = (uint64_t)v36;
  v39 = v75;
  sub_24531F36C(v38, (void (*)(uint64_t, uint64_t))sub_2452B7EB4, v35, (uint64_t)v13);
  v79 = v39;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
  v40 = v80;
  sub_24538765C();
  LOBYTE(v35) = sub_24538768C();
  v41 = *(void (**)(char *, uint64_t))(v32 + 8);
  v41(v40, v2);
  if ((v35 & 1) != 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v6, v13, v2);
    swift_retain();
    v42 = sub_2453877F4();
    v43 = sub_245387D34();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      v80 = v6;
      v46 = v45;
      v84[0] = v45;
      *(_DWORD *)v44 = 136446466;
      v47 = v41;
      v48 = v1[61];
      v49 = v1[62];
      swift_bridgeObjectRetain();
      v83 = sub_2453816D8(v48, v49, v84);
      sub_245387E0C();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2080;
      sub_24525C6C4((unint64_t *)&qword_2574525E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
      v50 = v80;
      v51 = sub_2453880F4();
      v83 = sub_2453816D8(v51, v52, v84);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      v47(v50, v82);
      _os_log_impl(&dword_245256000, v42, v43, "(%{public}s) Suspension timer will fire at %s", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v46, -1, -1);
      v53 = v44;
      v2 = v82;
      MEMORY[0x24953317C](v53, -1, -1);

    }
    else
    {
      swift_release();
      v41(v6, v2);

      v47 = v41;
    }
    v64 = v1[67];
    swift_retain();
    v65 = v81;
    sub_2453876A4();
    v67 = v66;
    v68 = swift_allocObject();
    v69 = swift_weakInit();
    v70 = *(os_unfair_lock_s **)(v64 + 24);
    MEMORY[0x24BDAC7A8](v69);
    *(&v73 - 6) = v64;
    *(&v73 - 5) = v67;
    *(&v73 - 4) = (uint64_t)v74;
    *(&v73 - 3) = (uint64_t)sub_2452B7ECC;
    *(&v73 - 2) = v68;
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v70 + 4);
    sub_2452E6204(v71, (uint64_t (*)(void))sub_2452B7ED4);
    os_unfair_lock_unlock(v70 + 4);
    swift_release();
    swift_release();
    swift_release();
    v47(v65, v2);
    v47(v78, v2);
    return swift_release();
  }
  else
  {
    v54 = v15;
    swift_retain_n();
    v55 = sub_2453877F4();
    v56 = sub_245387D34();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc();
      v58 = swift_slowAlloc();
      v80 = (char *)v41;
      v59 = v58;
      v84[0] = v58;
      *(_DWORD *)v57 = 136446210;
      v60 = v1[61];
      v61 = v1[62];
      swift_bridgeObjectRetain();
      v83 = sub_2453816D8(v60, v61, v84);
      sub_245387E0C();
      swift_release_n();
      v2 = v82;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v55, v56, "(%{public}s) No suspension work to perform", v57, 0xCu);
      swift_arrayDestroy();
      v62 = v59;
      v41 = (void (*)(char *, uint64_t))v80;
      MEMORY[0x24953317C](v62, -1, -1);
      MEMORY[0x24953317C](v57, -1, -1);

      v63 = v81;
    }
    else
    {
      swift_release_n();

      v63 = v13;
    }
    v41(v63, v2);
    return ((uint64_t (*)(char *, uint64_t))v41)(v54, v2);
  }
}

uint64_t sub_24526E14C()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint8_t *v22;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  BOOL v41;
  unint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  char *v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59[4];
  __int16 v60;
  char v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;

  v55 = type metadata accessor for PairingRelationship();
  MEMORY[0x24BDAC7A8](v55);
  v2 = (char *)&v53 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v3);
  v56 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_245387740();
  v5 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2453879D4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = (void *)v0[29];
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v13 = v12;
  v14 = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v14 & 1) != 0)
  {
    v15 = v0;
    swift_beginAccess();
    sub_24525E4F0((uint64_t)(v0 + 24), (uint64_t)&v63);
    v16 = *((_QWORD *)&v64 + 1);
    v17 = v65;
    __swift_project_boxed_opaque_existential_1(&v63, *((uint64_t *)&v64 + 1));
    v14 = MetadataStoring.orphanedRecordIDs()(v16, *(_QWORD *)(v17 + 8));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
    if (*(_QWORD *)(v14 + 16))
    {
      v11 = v15;
      if (qword_25744FD90 == -1)
        goto LABEL_4;
      goto LABEL_41;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_40:
  __break(1u);
LABEL_41:
  swift_once();
LABEL_4:
  v18 = sub_245387818();
  __swift_project_value_buffer(v18, (uint64_t)qword_257462FB0);
  swift_bridgeObjectRetain();
  v19 = sub_2453877F4();
  v20 = sub_245387D34();
  v21 = os_log_type_enabled(v19, v20);
  v58 = v11;
  if (v21)
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v22 = 134349056;
    *(_QWORD *)&v63 = *(_QWORD *)(v14 + 16);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v19, v20, "Discarding %{public}ld orphaned records", v22, 0xCu);
    MEMORY[0x24953317C](v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  v73 = MEMORY[0x24BEE4B08];
  v24 = *(_QWORD *)(v14 + 16);
  if (v24)
  {
    v25 = *(_QWORD *)(type metadata accessor for Record.ID(0) - 8);
    v26 = (_QWORD *)(v14 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80)));
    v27 = *(_QWORD *)(v25 + 72);
    swift_bridgeObjectRetain();
    v11 = 0;
    do
    {
      sub_2452A9A94((uint64_t)&v73, v26, (uint64_t)v58);
      v26 = (_QWORD *)((char *)v26 + v27);
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease_n();
    v28 = v73;
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = 0;
    v28 = MEMORY[0x24BEE4B08];
  }
  v14 = (uint64_t)&v63;
  sub_245387734();
  v29 = sub_245387704();
  v31 = v30;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v57);
  v62 = xmmword_24538A080;
  v61 = 0;
  memset(v59, 0, sizeof(v59));
  v60 = 256;
  DeviceDescriptor.init(id:name:protocolVersion:deviceType:screenDescriptor:zones:messageTypes:idsIdentityBlob:marketingName:productType:)(v29, v31, 0x446E776F6E6B6E55, 0xED00006563697665, (uint64_t *)&v62, &v61, v59, MEMORY[0x24BEE4AF8], &v63, MEMORY[0x24BEE4AF8], 0, 0xF000000000000000, 0, 0);
  v32 = 0;
  v33 = *(_QWORD *)(v28 + 56);
  v53 = v28 + 56;
  v34 = 1 << *(_BYTE *)(v28 + 32);
  v35 = -1;
  if (v34 < 64)
    v35 = ~(-1 << v34);
  v36 = v35 & v33;
  v54 = (unint64_t)(v34 + 63) >> 6;
  v37 = v28;
  if ((v35 & v33) != 0)
  {
LABEL_16:
    v38 = __clz(__rbit64(v36));
    v36 &= v36 - 1;
    v39 = v38 | (v32 << 6);
    v40 = v56;
    goto LABEL_28;
  }
  while (1)
  {
    v41 = __OFADD__(v32++, 1);
    v40 = v56;
    if (v41)
    {
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v32 >= v54)
      goto LABEL_36;
    v42 = *(_QWORD *)(v53 + 8 * v32);
    if (!v42)
      break;
LABEL_27:
    v36 = (v42 - 1) & v42;
    v39 = __clz(__rbit64(v42)) + (v32 << 6);
LABEL_28:
    v44 = v37;
    v45 = v57;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v40, *(_QWORD *)(v37 + 48) + *(_QWORD *)(v5 + 72) * v39, v57);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v40, 0, 1, v45);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v40, 1, v45) == 1)
      goto LABEL_37;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v2, v40, v45);
    v7 = (char *)v55;
    sub_24526432C((uint64_t)&v63);
    sub_2453876C8();
    sub_2453876C8();
    sub_2453876C8();
    v46 = &v2[*((int *)v7 + 5)];
    v47 = v70;
    *((_OWORD *)v46 + 6) = v69;
    *((_OWORD *)v46 + 7) = v47;
    v48 = v72;
    *((_OWORD *)v46 + 8) = v71;
    *((_OWORD *)v46 + 9) = v48;
    v49 = v66;
    *((_OWORD *)v46 + 2) = v65;
    *((_OWORD *)v46 + 3) = v49;
    v50 = v68;
    *((_OWORD *)v46 + 4) = v67;
    *((_OWORD *)v46 + 5) = v50;
    v51 = v64;
    *(_OWORD *)v46 = v63;
    *((_OWORD *)v46 + 1) = v51;
    v52 = &v2[*((int *)v7 + 8)];
    *(_QWORD *)v52 = 0;
    *((_QWORD *)v52 + 1) = 0;
    sub_245277D6C((uint64_t)v2);
    sub_2452B7B5C((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v37 = v44;
    if (v36)
      goto LABEL_16;
  }
  v43 = v32 + 1;
  if (v32 + 1 >= v54)
    goto LABEL_36;
  v42 = *(_QWORD *)(v53 + 8 * v43);
  if (v42)
    goto LABEL_26;
  v43 = v32 + 2;
  if (v32 + 2 >= v54)
    goto LABEL_36;
  v42 = *(_QWORD *)(v53 + 8 * v43);
  if (v42)
  {
LABEL_26:
    v32 = v43;
    goto LABEL_27;
  }
  v43 = v32 + 3;
  if (v32 + 3 < v54)
  {
    v42 = *(_QWORD *)(v53 + 8 * v43);
    if (!v42)
    {
      while (1)
      {
        v32 = v43 + 1;
        if (__OFADD__(v43, 1))
          goto LABEL_39;
        if (v32 >= v54)
          goto LABEL_36;
        v42 = *(_QWORD *)(v53 + 8 * v32);
        ++v43;
        if (v42)
          goto LABEL_27;
      }
    }
    goto LABEL_26;
  }
LABEL_36:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v56, 1, 1, v57);
LABEL_37:
  swift_release();
  return sub_245269928((uint64_t)&v63);
}

uint64_t sub_24526E7DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  void (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint8_t *v37;
  uint64_t result;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  _QWORD *v66;
  char v67;
  void (*v68)(char *, uint64_t);
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int64_t v82;
  unint64_t v83;
  int64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  char v91;
  void (*v92)(char *, uint64_t);
  _QWORD *v93;
  char isUniquelyReferenced_nonNull_native;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t ObjectType;
  void (*v99)(_QWORD **, char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  void *v105;
  uint64_t v106;
  id v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(uint64_t (*)(uint64_t, unint64_t), _QWORD *, uint64_t, uint64_t);
  uint64_t (*v112)(_QWORD *, uint64_t);
  id v113;
  unsigned int v114;
  void (*v115)(_QWORD *, _QWORD, uint64_t);
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  void (*v136)(char *, unint64_t, uint64_t);
  char *v137;
  char *v138;
  unint64_t v139;
  char *v140;
  int64_t v141;
  unint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v1);
  v137 = (char *)&v112 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_245387740();
  v146 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v112 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v138 = (char *)&v112 - v10;
  v122 = type metadata accessor for PairingRelationship();
  v11 = *(_QWORD *)(v122 - 8);
  v12 = MEMORY[0x24BDAC7A8](v122);
  v14 = (unint64_t)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v143 = (uint64_t)&v112 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F848);
  MEMORY[0x24BDAC7A8](v16);
  v128 = (uint64_t)&v112 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for RecordMetadata();
  v126 = *(_QWORD *)(v127 - 8);
  MEMORY[0x24BDAC7A8](v127);
  v125 = (uint64_t)&v112 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Record.ID(0);
  v130 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v119 = (char *)&v112 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_2453879D4();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v112 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (void *)v0[29];
  *(_QWORD *)v24 = v25;
  v26 = *(void (**)(_QWORD))(v22 + 104);
  v114 = *MEMORY[0x24BEE5610];
  v115 = (void (*)(_QWORD *, _QWORD, uint64_t))v26;
  v26(v24);
  v113 = v25;
  LOBYTE(v25) = sub_2453879F8();
  v27 = *(_QWORD *)(v22 + 8);
  v116 = v24;
  v117 = v21;
  ((void (*)(char *, uint64_t))v27)(v24, v21);
  if ((v25 & 1) == 0)
  {
LABEL_75:
    __break(1u);
LABEL_76:
    swift_once();
LABEL_4:
    v33 = sub_245387818();
    __swift_project_value_buffer(v33, (uint64_t)qword_257462FB0);
    swift_bridgeObjectRetain();
    v34 = sub_2453877F4();
    v35 = sub_245387D34();
    v36 = os_log_type_enabled(v34, v35);
    v145 = v6;
    if (v36)
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v37 = 134217984;
      v148 = *(_QWORD **)(v27 + 16);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v34, v35, "Deleting %ld expired local records", v37, 0xCu);
      MEMORY[0x24953317C](v37, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
    v39 = v130;
    v6 = (uint64_t)v119;
    v40 = v124 + 30;
    v133 = v27 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
    swift_bridgeObjectRetain();
    v134 = v40;
    swift_beginAccess();
    v41 = 0;
    v140 = v24 + 64;
    v142 = v14 + 8;
    v147 = (_QWORD *)MEMORY[0x24BEE4B08];
    v144 = v24;
    v120 = v14;
    v131 = v27;
    while (1)
    {
      if (v41 >= *(_QWORD *)(v27 + 16))
      {
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
      sub_2452B792C(v133 + *(_QWORD *)(v39 + 72) * v41, v6, type metadata accessor for Record.ID);
      v42 = *v134;
      if (*(_QWORD *)(*v134 + 16))
      {
        v139 = v41;
        v43 = (_QWORD *)v6;
        v46 = v6 + 32;
        v45 = *(_QWORD *)(v6 + 32);
        v44 = *(_QWORD *)(v46 + 8);
        v47 = v43[2];
        v14 = v43[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v48 = sub_2452C1EB4(v47, v14, v45, v44);
        if ((v49 & 1) != 0)
        {
          v50 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v48);
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24525E4F0(v129, (uint64_t)&v148);
          v51 = v149;
          v52 = v150;
          __swift_project_boxed_opaque_existential_1(&v148, v149);
          v53 = *(_QWORD *)(v52 + 8);
          v54 = v128;
          MetadataStoring.metadata(for:)(v43, v51, v53, v128);
          v55 = v127;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 48))(v54, 1, v127) == 1)
          {
            v6 = (uint64_t)v43;
            sub_2452B7B5C((uint64_t)v43, type metadata accessor for Record.ID);
            swift_release();
            sub_245263F80(v54, &qword_25744F848);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v148);
            v39 = v130;
            v27 = v131;
            v41 = v139;
          }
          else
          {
            v123 = v50;
            v56 = v125;
            sub_2452B7AB8(v54, v125, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v148);
            v27 = *(_QWORD *)(v56 + *(int *)(v55 + 24));
            v58 = v145;
            v57 = v146;
            v59 = v122;
            v60 = v121;
            v14 = v120;
            if (!v27)
            {
              v75 = 1 << v24[32];
              if (v75 < 64)
                v76 = ~(-1 << v75);
              else
                v76 = -1;
              v77 = v76 & *((_QWORD *)v24 + 8);
              v141 = (unint64_t)(v75 + 63) >> 6;
              swift_bridgeObjectRetain();
              v6 = 0;
              if (v77)
              {
LABEL_34:
                v78 = __clz(__rbit64(v77));
                v77 &= v77 - 1;
                v79 = v78 | (v6 << 6);
                goto LABEL_35;
              }
              while (1)
              {
                v82 = v6 + 1;
                if (__OFADD__(v6, 1))
                {
                  __break(1u);
                  goto LABEL_73;
                }
                if (v82 >= v141)
                  goto LABEL_61;
                v83 = *(_QWORD *)&v140[8 * v82];
                ++v6;
                if (!v83)
                {
                  v6 = v82 + 1;
                  if (v82 + 1 >= v141)
                    goto LABEL_61;
                  v83 = *(_QWORD *)&v140[8 * v6];
                  if (!v83)
                  {
                    v6 = v82 + 2;
                    if (v82 + 2 >= v141)
                      goto LABEL_61;
                    v83 = *(_QWORD *)&v140[8 * v6];
                    if (!v83)
                    {
                      v6 = v82 + 3;
                      if (v82 + 3 >= v141)
                        goto LABEL_61;
                      v83 = *(_QWORD *)&v140[8 * v6];
                      if (!v83)
                      {
                        v84 = v82 + 4;
                        if (v84 >= v141)
                        {
LABEL_61:
                          swift_release();
                          v96 = v123;
                          v61 = v124;
                          goto LABEL_66;
                        }
                        v83 = *(_QWORD *)&v140[8 * v84];
                        if (!v83)
                        {
                          while (1)
                          {
                            v6 = v84 + 1;
                            if (__OFADD__(v84, 1))
                              break;
                            if (v6 >= v141)
                              goto LABEL_61;
                            v83 = *(_QWORD *)&v140[8 * v6];
                            ++v84;
                            if (v83)
                              goto LABEL_52;
                          }
LABEL_74:
                          __break(1u);
                          goto LABEL_75;
                        }
                        v6 = v84;
                      }
                    }
                  }
                }
LABEL_52:
                v77 = (v83 - 1) & v83;
                v79 = __clz(__rbit64(v83)) + (v6 << 6);
LABEL_35:
                v80 = *((_QWORD *)v24 + 7) + *(_QWORD *)(v60 + 72) * v79;
                v81 = v143;
                v27 = (uint64_t)type metadata accessor for PairingRelationship;
                sub_2452B792C(v80, v143, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
                sub_2452B7AB8(v81, v14, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
                if (*(_QWORD *)(v142 + *(int *)(v59 + 32)))
                {
                  v136 = *(void (**)(char *, unint64_t, uint64_t))(v57 + 16);
                  v136(v138, v14, v3);
                  v27 = v57;
                  v85 = v147;
                  sub_24525C6C4(&qword_25744F6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
                  swift_bridgeObjectRetain();
                  v86 = sub_245387AAC();
                  v87 = -1 << *((_BYTE *)v85 + 32);
                  v88 = v86 & ~v87;
                  v89 = v85 + 7;
                  if (((*(_QWORD *)((char *)v85 + ((v88 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v88) & 1) != 0)
                  {
                    v90 = ~v87;
                    v27 = *(_QWORD *)(v57 + 72);
                    while (1)
                    {
                      v136(v9, v147[6] + v27 * v88, v3);
                      sub_24525C6C4(&qword_257452430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
                      v91 = sub_245387AE8();
                      v92 = *(void (**)(char *, uint64_t))(v146 + 8);
                      v92(v9, v3);
                      if ((v91 & 1) != 0)
                        break;
                      v88 = (v88 + 1) & v90;
                      if (((*(_QWORD *)((char *)v89 + ((v88 >> 3) & 0xFFFFFFFFFFFFF8)) >> v88) & 1) == 0)
                        goto LABEL_57;
                    }
                    swift_bridgeObjectRelease();
                    v57 = v146;
                    v92(v138, v3);
                  }
                  else
                  {
LABEL_57:
                    v93 = v147;
                    swift_bridgeObjectRelease();
                    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    v95 = v138;
                    v136(v9, (unint64_t)v138, v3);
                    v148 = v93;
                    sub_245326228((uint64_t)v9, v88, isUniquelyReferenced_nonNull_native);
                    v147 = v148;
                    swift_bridgeObjectRelease();
                    v57 = v146;
                    (*(void (**)(char *, uint64_t))(v146 + 8))(v95, v3);
                  }
                  v14 = v120;
                  sub_2452B7B5C(v120, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
                  v59 = v122;
                  v60 = v121;
                  v24 = v144;
                  if (v77)
                    goto LABEL_34;
                }
                else
                {
                  sub_2452B7B5C(v14, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
                  v24 = v144;
                  if (v77)
                    goto LABEL_34;
                }
              }
            }
            v61 = v124;
            v141 = *(_QWORD *)(v27 + 16);
            if (v141)
            {
              v136 = (void (*)(char *, unint64_t, uint64_t))(v27
                                                                            + ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80)));
              v118 = v27;
              swift_bridgeObjectRetain();
              v62 = 0;
              v63 = *(_QWORD *)(v57 + 72);
              v64 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
              v65 = v137;
              v64(v137, (char *)v136, v3);
              while (1)
              {
                v132 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56);
                v132(v65, 0, 1, v3);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v65, 1, v3) == 1)
                {
                  swift_bridgeObjectRelease();
                  v61 = v124;
                  v24 = v144;
                  v96 = v123;
                  goto LABEL_66;
                }
                (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v58, v65, v3);
                v69 = v147;
                sub_24525C6C4(&qword_25744F6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
                swift_bridgeObjectRetain();
                v70 = sub_245387AAC();
                v71 = -1 << *((_BYTE *)v69 + 32);
                v14 = v70 & ~v71;
                v72 = v69 + 7;
                if (((*(_QWORD *)((char *)v69 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v14) & 1) != 0)
                {
                  v73 = ~v71;
                  while (1)
                  {
                    v64(v9, (char *)(v147[6] + v14 * v63), v3);
                    sub_24525C6C4(&qword_257452430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
                    v74 = sub_245387AE8();
                    v68 = *(void (**)(char *, uint64_t))(v146 + 8);
                    v68(v9, v3);
                    if ((v74 & 1) != 0)
                      break;
                    v14 = (v14 + 1) & v73;
                    if (((*(_QWORD *)((char *)v72 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
                      goto LABEL_20;
                  }
                  swift_bridgeObjectRelease();
                  v58 = v145;
                  v57 = v146;
                }
                else
                {
LABEL_20:
                  v66 = v147;
                  swift_bridgeObjectRelease();
                  v67 = swift_isUniquelyReferenced_nonNull_native();
                  v58 = v145;
                  v64(v9, (char *)v145, v3);
                  v148 = v66;
                  sub_245326228((uint64_t)v9, v14, v67);
                  v147 = v148;
                  swift_bridgeObjectRelease();
                  v57 = v146;
                  v68 = *(void (**)(char *, uint64_t))(v146 + 8);
                }
                ++v62;
                v68((char *)v58, v3);
                v65 = v137;
                if (v62 == v141)
                  break;
                v64(v137, (char *)v136 + v63 * v62, v3);
              }
              v61 = v124;
              v24 = v144;
              v96 = v123;
              v132(v137, 1, 1, v3);
            }
            else
            {
              swift_bridgeObjectRetain();
              v96 = v123;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56))(v137, 1, 1, v3);
            }
            swift_bridgeObjectRelease();
LABEL_66:
            v148 = v61;
            if (MEMORY[0x24953323C](v96 + 16))
            {
              v97 = *(_QWORD *)(v96 + 24);
              ObjectType = swift_getObjectType();
              v99 = *(void (**)(_QWORD **, char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v97 + 40);
              v100 = type metadata accessor for Replicator();
              v101 = (uint64_t)v119;
              v99(&v148, v119, v100, &protocol witness table for Replicator, ObjectType, v97);
              swift_release();
              swift_unknownObjectRelease();
              v39 = v130;
            }
            else
            {
              swift_release();
              v39 = v130;
              v101 = (uint64_t)v119;
            }
            v41 = v139;
            sub_2452B7B5C(v125, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
            sub_2452B7B5C(v101, type metadata accessor for Record.ID);
            v6 = v101;
            v27 = v131;
          }
          goto LABEL_11;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v6 = (uint64_t)v43;
        v27 = v131;
        v41 = v139;
      }
      sub_2452B7B5C(v6, type metadata accessor for Record.ID);
LABEL_11:
      if (++v41 == v135)
      {
        swift_bridgeObjectRelease();
        sub_24525E4F0(v129, (uint64_t)&v148);
        v102 = v149;
        v103 = v150;
        __swift_project_boxed_opaque_existential_1(&v148, v149);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v103 + 16) + 112))(v27, v102);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v148);
        swift_bridgeObjectRelease();
        v104 = v116;
        v105 = v113;
        *v116 = v113;
        v106 = v117;
        v115(v104, v114, v117);
        v107 = v105;
        LOBYTE(v105) = sub_2453879F8();
        result = v112(v104, v106);
        if ((v105 & 1) != 0)
        {
          v108 = v124;
          v109 = v124[58];
          v110 = v124[59];
          __swift_project_boxed_opaque_existential_1(v124 + 55, v109);
          v111 = *(void (**)(uint64_t (*)(uint64_t, unint64_t), _QWORD *, uint64_t, uint64_t))(v110 + 8);
          swift_retain();
          v111(sub_2452BBAAC, v108, v109, v110);
          swift_bridgeObjectRelease();
          return swift_release();
        }
        else
        {
          __break(1u);
        }
        return result;
      }
    }
  }
  v112 = (uint64_t (*)(_QWORD *, uint64_t))v27;
  v121 = v11;
  v124 = v0;
  v28 = (uint64_t)(v0 + 24);
  swift_beginAccess();
  sub_24525E4F0((uint64_t)(v0 + 24), (uint64_t)&v148);
  v29 = v149;
  v30 = v150;
  __swift_project_boxed_opaque_existential_1(&v148, v149);
  v24 = (char *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v30 + 8) + 8) + 32))(v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v148);
  v129 = v28;
  sub_24525E4F0(v28, (uint64_t)&v148);
  v31 = v149;
  v32 = v150;
  __swift_project_boxed_opaque_existential_1(&v148, v149);
  v27 = MetadataStoring.expiredRecordIDs()(v31, *(_QWORD *)(v32 + 8));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v148);
  v135 = *(_QWORD *)(v27 + 16);
  if (v135)
  {
    if (qword_25744FD90 == -1)
      goto LABEL_4;
    goto LABEL_76;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24526F738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  void *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  int64_t v84;
  __int128 v85;
  _QWORD *v86;
  unint64_t v87;
  BOOL v88;
  int64_t v89;
  unint64_t v90;
  int64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  unint64_t v104;
  int64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  int64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t ObjectType;
  void (*v143)(uint64_t *__return_ptr, uint64_t *, _QWORD *, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  NSObject *v147;
  os_log_type_t v148;
  uint8_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  NSObject *v160;
  os_log_type_t v161;
  uint8_t *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  NSObject *v167;
  os_log_type_t v168;
  uint8_t *v169;
  uint64_t v170;
  uint64_t v171;
  size_t v172;
  _QWORD v174[6];
  uint64_t v175;
  int64_t v176;
  char *v177;
  char *v178;
  char *v179;
  uint64_t v180;
  __int128 v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  int64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  char *v199;
  char *v200;
  char *v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  char *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  int64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  _QWORD *v228;
  uint64_t v229;
  uint64_t v230;
  unint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;

  v1 = v0;
  v204 = sub_245387740();
  v214 = *(_QWORD *)(v204 - 8);
  v2 = MEMORY[0x24BDAC7A8](v204);
  v197 = (char *)v174 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v196 = (uint64_t)v174 - v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v174[2] = (char *)v174 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v174[1] = (char *)v174 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v179 = (char *)v174 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v174[4] = (char *)v174 - v12;
  v13 = type metadata accessor for Record.ID.Ownership(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v178 = (char *)v174 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v174[3] = (char *)v174 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v177 = (char *)v174 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v174 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v183 = (char *)v174 - v23;
  v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD50);
  v24 = MEMORY[0x24BDAC7A8](v208);
  v26 = (char *)v174 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v24);
  v186 = (char *)v174 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v200 = (char *)v174 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v195 = (char *)v174 - v31;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F848);
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)v174 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = type metadata accessor for RecordMetadata();
  v227 = *(_QWORD *)(v206 - 8);
  v35 = MEMORY[0x24BDAC7A8](v206);
  v174[5] = (char *)v174 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  v205 = (uint64_t)v174 - v37;
  v221 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
  v38 = MEMORY[0x24BDAC7A8](v221);
  v220 = (uint64_t)v174 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v219 = (uint64_t)v174 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v218 = (uint64_t)v174 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v217 = (uint64_t)v174 - v44;
  v212 = type metadata accessor for Record.ID(0);
  v233 = *(_QWORD *)(v212 - 8);
  v45 = MEMORY[0x24BDAC7A8](v212);
  v47 = (uint64_t)v174 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = MEMORY[0x24BDAC7A8](v45);
  v201 = (char *)v174 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v202 = (char *)v174 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v210 = (char *)v174 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v215 = (char *)v174 - v55;
  v56 = MEMORY[0x24BDAC7A8](v54);
  v211 = (char *)v174 - v57;
  v58 = MEMORY[0x24BDAC7A8](v56);
  v213 = (char *)v174 - v59;
  v60 = MEMORY[0x24BDAC7A8](v58);
  v216 = (char *)v174 - v61;
  v62 = MEMORY[0x24BDAC7A8](v60);
  v199 = (char *)v174 - v63;
  v64 = MEMORY[0x24BDAC7A8](v62);
  v228 = (_QWORD *)((char *)v174 - v65);
  MEMORY[0x24BDAC7A8](v64);
  v232 = (uint64_t)v174 - v66;
  v67 = type metadata accessor for PairingRelationship();
  v185 = *(_QWORD *)(v67 - 8);
  v68 = MEMORY[0x24BDAC7A8](v67);
  v207 = (uint64_t)v174 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v68);
  v184 = (uint64_t)v174 - v70;
  v71 = sub_2453879D4();
  v72 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v74 = (_QWORD *)((char *)v174 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0));
  v75 = *(void **)(v1 + 232);
  *v74 = v75;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v72 + 104))(v74, *MEMORY[0x24BEE5610], v71);
  v76 = v75;
  LOBYTE(v75) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v72 + 8))(v74, v71);
  if ((v75 & 1) == 0)
  {
    __break(1u);
    goto LABEL_95;
  }
  v209 = v47;
  v203 = v34;
  v190 = v26;
  v188 = v22;
  v47 = v1 + 192;
  swift_beginAccess();
  sub_24525E4F0(v1 + 192, (uint64_t)&v236);
  v77 = v237;
  v78 = v238;
  __swift_project_boxed_opaque_existential_1(&v236, v237);
  v79 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v78 + 8) + 8) + 32))(v77);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v236);
  v244 = MEMORY[0x24BEE4AF8];
  v242 = MEMORY[0x24BEE4B08];
  v243 = MEMORY[0x24BEE4B08];
  v80 = *(_QWORD *)(v79 + 64);
  v175 = v79 + 64;
  v81 = 1 << *(_BYTE *)(v79 + 32);
  if (v81 < 64)
    v82 = ~(-1 << v81);
  else
    v82 = -1;
  v83 = v82 & v80;
  v226 = v1 + 240;
  v176 = (unint64_t)(v81 + 63) >> 6;
  v182 = &v235;
  v187 = v79;
  swift_bridgeObjectRetain();
  v84 = 0;
  v193 = 0;
  *(_QWORD *)&v85 = 136315138;
  v181 = v85;
  v180 = MEMORY[0x24BEE4AD8] + 8;
  v198 = v1;
  v194 = v1 + 192;
  v86 = v228;
LABEL_7:
  if (v83)
  {
    v191 = (v83 - 1) & v83;
    v192 = v84;
    v87 = __clz(__rbit64(v83)) | (v84 << 6);
    goto LABEL_22;
  }
  v88 = __OFADD__(v84, 1);
  v89 = v84 + 1;
  if (v88)
  {
    __break(1u);
    JUMPOUT(0x245271F34);
  }
  if (v89 >= v176)
  {
LABEL_70:
    swift_release();
    if (!*(_QWORD *)(v244 + 16))
      goto LABEL_81;
    if (qword_25744FD90 == -1)
      goto LABEL_72;
    goto LABEL_96;
  }
  v90 = *(_QWORD *)(v175 + 8 * v89);
  if (!v90)
  {
    v91 = v89 + 1;
    if (v89 + 1 >= v176)
      goto LABEL_70;
    v90 = *(_QWORD *)(v175 + 8 * v91);
    if (v90)
      goto LABEL_20;
    v91 = v89 + 2;
    if (v89 + 2 >= v176)
      goto LABEL_70;
    v90 = *(_QWORD *)(v175 + 8 * v91);
    if (v90)
      goto LABEL_20;
    v91 = v89 + 3;
    if (v89 + 3 >= v176)
      goto LABEL_70;
    v90 = *(_QWORD *)(v175 + 8 * v91);
    if (v90)
      goto LABEL_20;
    v91 = v89 + 4;
    if (v89 + 4 >= v176)
      goto LABEL_70;
    v90 = *(_QWORD *)(v175 + 8 * v91);
    if (v90)
    {
LABEL_20:
      v89 = v91;
      goto LABEL_21;
    }
    while (1)
    {
      v89 = v91 + 1;
      if (__OFADD__(v91, 1))
        break;
      if (v89 >= v176)
        goto LABEL_70;
      v90 = *(_QWORD *)(v175 + 8 * v89);
      ++v91;
      if (v90)
        goto LABEL_21;
    }
LABEL_95:
    __break(1u);
LABEL_96:
    swift_once();
LABEL_72:
    v158 = sub_245387818();
    __swift_project_value_buffer(v158, (uint64_t)qword_257462FB0);
    v159 = v244;
    swift_bridgeObjectRetain();
    v160 = sub_2453877F4();
    v161 = sub_245387D34();
    if (os_log_type_enabled(v160, v161))
    {
      v162 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v162 = 134217984;
      v236 = *(_QWORD *)(v159 + 16);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v160, v161, "Detected %ld invalid remote records", v162, 0xCu);
      MEMORY[0x24953317C](v162, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
    sub_24525E4F0(v47, (uint64_t)&v236);
    v163 = v237;
    v164 = v238;
    __swift_project_boxed_opaque_existential_1(&v236, v237);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v164 + 16) + 104))(v244, v163);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v236);
    goto LABEL_84;
  }
LABEL_21:
  v191 = (v90 - 1) & v90;
  v192 = v89;
  v87 = __clz(__rbit64(v90)) + (v89 << 6);
LABEL_22:
  v92 = v184;
  sub_2452B792C(*(_QWORD *)(v187 + 56) + *(_QWORD *)(v185 + 72) * v87, v184, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  v93 = v207;
  sub_2452B7AB8(v92, v207, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  sub_24525E4F0(v47, (uint64_t)&v239);
  v94 = v240;
  v95 = v241;
  __swift_project_boxed_opaque_existential_1(&v239, v240);
  v96 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v95 + 8) + 8) + 24))(v94);
  MEMORY[0x24BDAC7A8](v96);
  v174[-2] = v93;
  v97 = v193;
  v98 = sub_24532A018((uint64_t)sub_2452BC614, (uint64_t)&v174[-4], v96);
  v193 = v97;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v239);
  v99 = *(_QWORD *)(v98 + 16);
  if (!v99)
  {
    swift_release();
    v119 = MEMORY[0x24BEE4AF8];
    v127 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v127)
      goto LABEL_6;
LABEL_47:
    v231 = v119 + ((*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80));
    swift_beginAccess();
    v128 = 0;
    v224 = v127;
    v230 = v119;
    while (1)
    {
      if (v128 >= *(_QWORD *)(v119 + 16))
      {
        __break(1u);
        goto LABEL_75;
      }
      sub_2452B792C(v231 + *(_QWORD *)(v233 + 72) * v128, (uint64_t)v86, type metadata accessor for Record.ID);
      v129 = *(_QWORD *)v226;
      if (*(_QWORD *)(*(_QWORD *)v226 + 16))
      {
        v131 = v86[4];
        v130 = v86[5];
        v133 = v86[2];
        v132 = v86[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v134 = sub_2452C1EB4(v133, v132, v131, v130);
        if ((v135 & 1) != 0)
        {
          v136 = *(_QWORD *)(*(_QWORD *)(v129 + 56) + 8 * v134);
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24525E4F0(v47, (uint64_t)&v236);
          v137 = v237;
          v138 = v238;
          __swift_project_boxed_opaque_existential_1(&v236, v237);
          v139 = *(_QWORD *)(v138 + 8);
          v140 = (uint64_t)v203;
          MetadataStoring.metadata(for:)(v86, v137, v139, (uint64_t)v203);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v227 + 48))(v140, 1, v206) == 1)
          {
            sub_2452B7B5C((uint64_t)v86, type metadata accessor for Record.ID);
            swift_release();
            sub_245263F80(v140, &qword_25744F848);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v236);
            v119 = v230;
          }
          else
          {
            sub_2452B7AB8(v140, v205, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v236);
            v236 = v198;
            if (MEMORY[0x24953323C](v136 + 16))
            {
              v141 = *(_QWORD *)(v136 + 24);
              ObjectType = swift_getObjectType();
              v143 = *(void (**)(uint64_t *__return_ptr, uint64_t *, _QWORD *, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v141 + 48);
              v144 = type metadata accessor for Replicator();
              v143(&v234, &v236, v228, v207, v144, &protocol witness table for Replicator, ObjectType, v141);
              swift_unknownObjectRelease();
              __asm { BR              X9 }
            }
            v145 = (uint64_t)v199;
            if (qword_25744FD90 != -1)
              swift_once();
            v146 = sub_245387818();
            __swift_project_value_buffer(v146, (uint64_t)qword_257462FB0);
            sub_2452B792C((uint64_t)v228, v145, type metadata accessor for Record.ID);
            v147 = sub_2453877F4();
            v148 = sub_245387D28();
            if (os_log_type_enabled(v147, v148))
            {
              v149 = (uint8_t *)swift_slowAlloc();
              v150 = swift_slowAlloc();
              v223 = v136;
              v151 = v150;
              v236 = v150;
              *(_DWORD *)v149 = v181;
              v152 = Record.ID.description.getter();
              v234 = sub_2453816D8(v152, v153, &v236);
              v47 = v194;
              sub_245387E0C();
              swift_bridgeObjectRelease();
              sub_2452B7B5C(v145, type metadata accessor for Record.ID);
              _os_log_impl(&dword_245256000, v147, v148, "Unable to validate %s: dataSource failed to provide result", v149, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x24953317C](v151, -1, -1);
              MEMORY[0x24953317C](v149, -1, -1);
            }
            else
            {
              sub_2452B7B5C(v145, type metadata accessor for Record.ID);
            }

            v154 = v214;
            v155 = v197;
            v156 = v204;
            (*(void (**)(char *, uint64_t, uint64_t))(v214 + 16))(v197, v207, v204);
            v157 = v196;
            sub_2453249DC(v196, v155);
            swift_release();
            (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v157, v156);
            v86 = v228;
            sub_2452B7B5C((uint64_t)v228, type metadata accessor for Record.ID);
            sub_2452B7B5C(v205, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
            v119 = v230;
            v127 = v224;
          }
          goto LABEL_50;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v119 = v230;
      }
      sub_2452B7B5C((uint64_t)v86, type metadata accessor for Record.ID);
LABEL_50:
      if (++v128 == v127)
        goto LABEL_6;
    }
  }
  v236 = MEMORY[0x24BEE4AF8];
  sub_24532C528(0, v99, 0);
  v47 = sub_245330EE4(v98);
  v101 = 0;
  v102 = v98 + 64;
  v103 = *(_BYTE *)(v98 + 32);
  v222 = v100;
  v189 = v98 + 88;
  v225 = v98;
  v223 = v99;
  v224 = v98 + 64;
  while ((v47 & 0x8000000000000000) == 0 && v47 < 1 << v103)
  {
    v107 = (unint64_t)v47 >> 6;
    if ((*(_QWORD *)(v102 + 8 * ((unint64_t)v47 >> 6)) & (1 << v47)) == 0)
      goto LABEL_76;
    if (*(_DWORD *)(v98 + 36) != (_DWORD)v100)
      goto LABEL_77;
    v230 = v100;
    v229 = v101;
    v108 = v221;
    v109 = v217;
    v110 = v217 + *(int *)(v221 + 48);
    v111 = *(_QWORD *)(v98 + 48);
    v231 = *(_QWORD *)(v233 + 72);
    sub_2452B792C(v111 + v231 * v47, v217, type metadata accessor for Record.ID);
    sub_2452B792C(*(_QWORD *)(v98 + 56) + *(_QWORD *)(v227 + 72) * v47, v110, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v112 = v218;
    sub_2452B792C(v109, v218, type metadata accessor for Record.ID);
    sub_2452B792C(v110, v112 + *(int *)(v108 + 48), (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v113 = v112;
    v114 = v219;
    sub_2452BC850(v113, v219, &qword_25744FD30);
    sub_245263F80(v109, &qword_25744FD30);
    v115 = *(int *)(v108 + 48);
    v116 = v220;
    v117 = v220 + v115;
    v118 = v114 + v115;
    sub_2452B792C(v114, v220, type metadata accessor for Record.ID);
    sub_2452B792C(v118, v117, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    sub_2452B7AB8(v116, v232, type metadata accessor for Record.ID);
    sub_2452B7B5C(v117, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    sub_245263F80(v114, &qword_25744FD30);
    v119 = v236;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24532C528(0, *(_QWORD *)(v119 + 16) + 1, 1);
      v119 = v236;
    }
    v121 = *(_QWORD *)(v119 + 16);
    v120 = *(_QWORD *)(v119 + 24);
    v98 = v225;
    if (v121 >= v120 >> 1)
    {
      sub_24532C528(v120 > 1, v121 + 1, 1);
      v119 = v236;
    }
    *(_QWORD *)(v119 + 16) = v121 + 1;
    sub_2452B7AB8(v232, v119+ ((*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80))+ v121 * v231, type metadata accessor for Record.ID);
    v103 = *(_BYTE *)(v98 + 32);
    v104 = 1 << v103;
    if (v47 >= 1 << v103)
      goto LABEL_78;
    v102 = v224;
    v122 = *(_QWORD *)(v224 + 8 * v107);
    if ((v122 & (1 << v47)) == 0)
      goto LABEL_79;
    if (*(_DWORD *)(v98 + 36) != (_DWORD)v230)
      goto LABEL_80;
    v123 = v122 & (-2 << (v47 & 0x3F));
    if (v123)
    {
      v104 = __clz(__rbit64(v123)) | v47 & 0xFFFFFFFFFFFFFFC0;
      v105 = v223;
      v106 = v229;
    }
    else
    {
      v124 = v107 + 1;
      v125 = (v104 + 63) >> 6;
      v105 = v223;
      v106 = v229;
      if (v107 + 1 < v125)
      {
        v126 = *(_QWORD *)(v224 + 8 * v124);
        if (!v126)
        {
          v124 = v107 + 2;
          if (v107 + 2 >= v125)
            goto LABEL_25;
          v126 = *(_QWORD *)(v224 + 8 * v124);
          if (!v126)
          {
            while (v125 - 3 != v107)
            {
              v126 = *(_QWORD *)(v189 + 8 * v107++);
              if (v126)
              {
                v124 = v107 + 2;
                goto LABEL_40;
              }
            }
            goto LABEL_25;
          }
        }
LABEL_40:
        v104 = __clz(__rbit64(v126)) + (v124 << 6);
      }
    }
LABEL_25:
    v101 = v106 + 1;
    v100 = v222;
    v47 = v104;
    v86 = v228;
    if (v101 == v105)
    {
      swift_release();
      v47 = v194;
      v127 = *(_QWORD *)(v119 + 16);
      if (v127)
        goto LABEL_47;
LABEL_6:
      swift_bridgeObjectRelease();
      sub_2452B7B5C(v207, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v84 = v192;
      v83 = v191;
      goto LABEL_7;
    }
  }
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  swift_bridgeObjectRelease();
LABEL_84:
  if (*(_QWORD *)(v243 + 16))
  {
    if (qword_25744FD90 != -1)
      swift_once();
    v165 = sub_245387818();
    __swift_project_value_buffer(v165, (uint64_t)qword_257462FB0);
    v166 = v243;
    swift_bridgeObjectRetain();
    v167 = sub_2453877F4();
    v168 = sub_245387D34();
    if (os_log_type_enabled(v167, v168))
    {
      v169 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v169 = 134217984;
      v236 = *(_QWORD *)(v166 + 16);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v167, v168, "Detected %ld invalid local records", v169, 0xCu);
      MEMORY[0x24953317C](v169, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
    sub_24525E4F0(v47, (uint64_t)&v236);
    v170 = v237;
    v171 = v238;
    __swift_project_boxed_opaque_existential_1(&v236, v237);
    swift_beginAccess();
    v172 = sub_24532D62C(v243);
    swift_bridgeObjectRelease();
    (*(void (**)(size_t, uint64_t))(*(_QWORD *)(v171 + 16) + 112))(v172, v170);
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v236);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_245271FB4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  char v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v1 = v0;
  v28 = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450060);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FDF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2453879D4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = (void *)v1[29];
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE5610], v9);
  v14 = v13;
  v15 = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v15 & 1) != 0)
  {
    swift_beginAccess();
    sub_24525E4F0((uint64_t)(v1 + 43), (uint64_t)v31);
    v17 = v32;
    v18 = v33;
    __swift_project_boxed_opaque_existential_1(v31, v32);
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
    v29 = v14;
    v30 = v19;
    v20 = sub_245387D64();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v4, 1, 1, v20);
    v21 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FE70);
    sub_24525C748();
    sub_24526381C(&qword_25744FE68, &qword_25744FE70, MEMORY[0x24BDB9AF8]);
    v27 = v6;
    sub_24525C6C4((unint64_t *)&unk_257450070, (uint64_t (*)(uint64_t))sub_24525C748, MEMORY[0x24BEE5670]);
    sub_2453878B4();
    sub_245263F80((uint64_t)v4, (uint64_t *)&unk_257450060);

    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    v22 = swift_allocObject();
    swift_weakInit();
    v23 = swift_allocObject();
    v24 = v28;
    *(_QWORD *)(v23 + 16) = v22;
    *(_QWORD *)(v23 + 24) = v24;
    sub_24526381C(&qword_25744FDF0, &qword_25744FDF8, MEMORY[0x24BDB9A08]);
    sub_2453878C0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v5);
    swift_beginAccess();
    sub_245387860();
    swift_endAccess();
    swift_release();
    sub_24525E4F0((uint64_t)(v1 + 43), (uint64_t)v31);
    v25 = v32;
    v26 = v33;
    __swift_project_boxed_opaque_existential_1(v31, v32);
    (*(void (**)(uint64_t, uint64_t))(v26 + 48))(v25, v26);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_245272320(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint8_t *v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t (*v22)();
  _BYTE v24[32];

  v2 = v1;
  v4 = sub_2453879D4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *(void **)(v2 + 232);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v9 = v8;
  LOBYTE(v8) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    if (qword_25744FD90 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v10 = sub_245387818();
  __swift_project_value_buffer(v10, (uint64_t)qword_257462FB0);
  v11 = sub_2453877F4();
  v12 = sub_245387D34();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_245256000, v11, v12, "Reconciling devices", v13, 2u);
    MEMORY[0x24953317C](v13, -1, -1);
  }

  swift_beginAccess();
  if ((*(_BYTE *)(v2 + 560) & 1) != 0)
  {
    *(_QWORD *)(v2 + 552) = a1;
    *(_BYTE *)(v2 + 560) = 0;
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v2;
    *(_QWORD *)(v14 + 24) = a1;
    swift_retain();
    sub_245286094((uint64_t)sub_2452B7898, v14);
    swift_release();
  }
  else
  {
    v15 = a1 & ~*(_QWORD *)(v2 + 552);
    v16 = sub_2453877F4();
    v17 = sub_245387D34();
    v18 = os_log_type_enabled(v16, v17);
    if (v15)
    {
      if (v18)
      {
        v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_245256000, v16, v17, "Device reconciliation already in process with insufficient options; updating options and abandoning",
          v20,
          2u);
        MEMORY[0x24953317C](v20, -1, -1);
      }

      v22 = sub_24526C028();
      if ((*(_BYTE *)(v21 + 8) & 1) == 0 && (a1 & ~*(_QWORD *)v21) != 0)
        *(_QWORD *)v21 |= a1;
      ((void (*)(_BYTE *, _QWORD))v22)(v24, 0);
    }
    else
    {
      if (v18)
      {
        v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_245256000, v16, v17, "Device reconciliation already in process; abandoning", v19, 2u);
        MEMORY[0x24953317C](v19, -1, -1);
      }

    }
  }
}

uint64_t sub_2452725FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)();
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  id v28;
  char v29;
  os_unfair_lock_s *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t result;
  uint8_t *v51;
  uint64_t (*v52)(uint64_t);
  unint64_t v53;
  int64_t v54;
  unint64_t v55;
  int64_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t *v78;
  uint64_t (*v79)(uint64_t);
  char *v80;
  void (*v81)(char *, uint64_t);
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t (*v86)();
  char *v87;
  char v88;
  void (*v89)(char *, uint64_t);
  char *v90;
  uint64_t *v91;
  NSObject *v92;
  os_log_type_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  NSObject *v103;
  os_log_type_t v104;
  uint8_t *v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t (*v109)();
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  os_unfair_lock_s *v116;
  uint64_t v117;
  _QWORD v118[2];
  id v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t (*v123)();
  uint64_t *v124;
  char *v125;
  char *v126;
  char *v127;
  uint64_t v128;
  int64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint8_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140[3];
  uint64_t v141;
  uint64_t v142;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
  MEMORY[0x24BDAC7A8](v2);
  v132 = (uint64_t)v118 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
  v4 = MEMORY[0x24BDAC7A8](v131);
  v6 = (char *)v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v137 = (uint64_t)v118 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v130 = (uint64_t)v118 - v9;
  v10 = sub_2453876EC();
  v133 = *(_QWORD *)(v10 - 8);
  v134 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v120 = (char *)v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v122 = (char *)v118 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v126 = (char *)v118 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v125 = (char *)v118 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v127 = (char *)v118 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (uint64_t (*)())((char *)v118 - v21);
  v23 = sub_2453879D4();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (_QWORD *)((char *)v118 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = (void *)v0[29];
  *v26 = v27;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v24 + 104))(v26, *MEMORY[0x24BEE5610], v23);
  v28 = v27;
  v29 = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v24 + 8))(v26, v23);
  if ((v29 & 1) == 0)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v119 = v28;
  v30 = *(os_unfair_lock_s **)(v0[66] + 24);
  v1 = v0;
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v30 + 4);
  sub_2452E6204(v31, sub_24525C730);
  v118[1] = 0;
  os_unfair_lock_unlock(v30 + 4);
  swift_release();
  swift_release();
  if (qword_25744FD90 != -1)
LABEL_47:
    swift_once();
  v32 = sub_245387818();
  v33 = __swift_project_value_buffer(v32, (uint64_t)qword_257462FB0);
  swift_retain();
  v121 = v33;
  v34 = sub_2453877F4();
  v35 = sub_245387D34();
  v36 = os_log_type_enabled(v34, v35);
  v37 = v134;
  v123 = v22;
  v124 = v1;
  if (v36)
  {
    v38 = (uint8_t *)swift_slowAlloc();
    v39 = swift_slowAlloc();
    v140[0] = v39;
    *(_DWORD *)v38 = 136446210;
    v136 = v38 + 4;
    v40 = v124[61];
    v41 = v124[62];
    swift_bridgeObjectRetain();
    v42 = v124;
    v139 = sub_2453816D8(v40, v41, v140);
    sub_245387E0C();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v34, v35, "(%{public}s) Starting expiration timer", v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v39, -1, -1);
    MEMORY[0x24953317C](v38, -1, -1);

  }
  else
  {
    v42 = v1;

    swift_release();
  }
  swift_beginAccess();
  sub_24525E4F0((uint64_t)(v42 + 24), (uint64_t)v140);
  v44 = v141;
  v43 = v142;
  __swift_project_boxed_opaque_existential_1(v140, v141);
  v45 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v43 + 8) + 8) + 24))(v44);
  sub_24538765C();
  v46 = *(_QWORD *)(v45 + 64);
  v128 = v45 + 64;
  v47 = 1 << *(_BYTE *)(v45 + 32);
  v48 = -1;
  if (v47 < 64)
    v48 = ~(-1 << v47);
  v49 = v48 & v46;
  v129 = (unint64_t)(v47 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v51 = 0;
  v52 = type metadata accessor for Record.ID;
  v22 = type metadata accessor for RecordMetadata;
  v1 = &qword_25744FD30;
  while (1)
  {
    if (v49)
    {
      v135 = (v49 - 1) & v49;
      v136 = v51;
      v53 = __clz(__rbit64(v49)) | ((_QWORD)v51 << 6);
      goto LABEL_31;
    }
    v54 = (int64_t)(v51 + 1);
    if (__OFADD__(v51, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v54 >= v129)
    {
LABEL_36:
      swift_release();
      v85 = v133;
      v86 = v123;
      (*(void (**)(uint64_t (*)(), char *, uint64_t))(v133 + 32))(v123, v127, v37);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v140);
      v87 = v122;
      sub_24538765C();
      v88 = sub_24538768C();
      v89 = *(void (**)(char *, uint64_t))(v85 + 8);
      v89(v87, v37);
      if ((v88 & 1) != 0)
      {
        v90 = v120;
        (*(void (**)(char *, uint64_t (*)(), uint64_t))(v85 + 16))(v120, v86, v37);
        v91 = v124;
        swift_retain();
        v92 = sub_2453877F4();
        v93 = sub_245387D34();
        if (os_log_type_enabled(v92, v93))
        {
          v94 = swift_slowAlloc();
          v137 = swift_slowAlloc();
          v140[0] = v137;
          *(_DWORD *)v94 = 136446466;
          v95 = v37;
          v96 = v91[61];
          v97 = v91[62];
          swift_bridgeObjectRetain();
          v138 = sub_2453816D8(v96, v97, v140);
          sub_245387E0C();
          swift_release();
          v37 = v95;
          swift_bridgeObjectRelease();
          *(_WORD *)(v94 + 12) = 2080;
          sub_24525C6C4((unint64_t *)&qword_2574525E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
          v98 = v120;
          v99 = sub_2453880F4();
          v138 = sub_2453816D8(v99, v100, v140);
          v86 = v123;
          sub_245387E0C();
          swift_bridgeObjectRelease();
          v89(v98, v37);
          _os_log_impl(&dword_245256000, v92, v93, "(%{public}s) Expiration timer will fire at %s", (uint8_t *)v94, 0x16u);
          v101 = v137;
          swift_arrayDestroy();
          MEMORY[0x24953317C](v101, -1, -1);
          MEMORY[0x24953317C](v94, -1, -1);
        }
        else
        {
          swift_release();
          v89(v90, v37);
        }

        v111 = v91[66];
        swift_retain();
        sub_2453876A4();
        v113 = v112;
        v114 = swift_allocObject();
        v115 = swift_weakInit();
        v116 = *(os_unfair_lock_s **)(v111 + 24);
        MEMORY[0x24BDAC7A8](v115);
        v118[-6] = v111;
        v118[-5] = v113;
        v118[-4] = v119;
        v118[-3] = sub_2452BBAA4;
        v118[-2] = v114;
        swift_retain();
        swift_retain();
        os_unfair_lock_lock(v116 + 4);
        sub_2452E6204(v117, (uint64_t (*)(void))sub_2452B7ED4);
        os_unfair_lock_unlock(v116 + 4);
        swift_release();
        swift_release();
        swift_release();
        v89((char *)v86, v37);
        return swift_release();
      }
      else
      {
        v102 = v124;
        swift_retain_n();
        v103 = sub_2453877F4();
        v104 = sub_245387D34();
        if (os_log_type_enabled(v103, v104))
        {
          v105 = (uint8_t *)swift_slowAlloc();
          v106 = swift_slowAlloc();
          v140[0] = v106;
          *(_DWORD *)v105 = 136446210;
          v107 = v102[61];
          v108 = v102[62];
          swift_bridgeObjectRetain();
          v138 = sub_2453816D8(v107, v108, v140);
          sub_245387E0C();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_245256000, v103, v104, "(%{public}s) No records to expire", v105, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24953317C](v106, -1, -1);
          MEMORY[0x24953317C](v105, -1, -1);

          v109 = v123;
          v110 = v134;
        }
        else
        {
          swift_release_n();

          v109 = v86;
          v110 = v37;
        }
        return ((uint64_t (*)(uint64_t (*)(), uint64_t))v89)(v109, v110);
      }
    }
    v55 = *(_QWORD *)(v128 + 8 * v54);
    v56 = (int64_t)(v51 + 1);
    if (!v55)
    {
      v56 = (int64_t)(v51 + 2);
      if ((uint64_t)(v51 + 2) >= v129)
        goto LABEL_36;
      v55 = *(_QWORD *)(v128 + 8 * v56);
      if (!v55)
      {
        v56 = (int64_t)(v51 + 3);
        if ((uint64_t)(v51 + 3) >= v129)
          goto LABEL_36;
        v55 = *(_QWORD *)(v128 + 8 * v56);
        if (!v55)
        {
          v56 = (int64_t)(v51 + 4);
          if ((uint64_t)(v51 + 4) >= v129)
            goto LABEL_36;
          v55 = *(_QWORD *)(v128 + 8 * v56);
          if (!v55)
          {
            v56 = (int64_t)(v51 + 5);
            if ((uint64_t)(v51 + 5) >= v129)
              goto LABEL_36;
            v55 = *(_QWORD *)(v128 + 8 * v56);
            if (!v55)
              break;
          }
        }
      }
    }
LABEL_30:
    v135 = (v55 - 1) & v55;
    v136 = (uint8_t *)v56;
    v53 = __clz(__rbit64(v55)) + (v56 << 6);
LABEL_31:
    v58 = *(_QWORD *)(v45 + 48);
    v59 = type metadata accessor for Record.ID(0);
    v60 = v130;
    sub_2452B792C(v58 + *(_QWORD *)(*(_QWORD *)(v59 - 8) + 72) * v53, v130, v52);
    v61 = *(_QWORD *)(v45 + 56);
    v62 = type metadata accessor for RecordMetadata();
    v63 = v61 + *(_QWORD *)(*(_QWORD *)(v62 - 8) + 72) * v53;
    v64 = v131;
    sub_2452B792C(v63, v60 + *(int *)(v131 + 48), (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v65 = v137;
    sub_2452BC850(v60, v137, v1);
    v66 = *(int *)(v64 + 48);
    v67 = (uint64_t)&v6[v66];
    v68 = v65 + v66;
    sub_2452B792C(v65, (uint64_t)v6, v52);
    sub_2452B792C(v68, v67, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v69 = v67 + *(int *)(v62 + 28);
    v70 = v132;
    sub_2452BC89C(v69, v132, &qword_25744F6B0);
    sub_2452B7B5C(v67, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v71 = (uint64_t)v6;
    v72 = v133;
    v37 = v134;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v70, 1, v134) == 1)
    {
      sub_245263F80(v70, &qword_25744F6B0);
      sub_2452B7B5C(v71, v52);
    }
    else
    {
      v73 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 32);
      v74 = v125;
      v73(v125, v70, v37);
      sub_2452B7B5C(v71, v52);
      sub_24525C6C4((unint64_t *)&unk_2574525D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
      v75 = v37;
      v76 = v127;
      if ((sub_245387AD0() & 1) != 0)
        v77 = v76;
      else
        v77 = v74;
      v78 = v1;
      v79 = v52;
      v80 = v126;
      (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v126, v77, v75);
      v81 = *(void (**)(char *, uint64_t))(v72 + 8);
      v81(v76, v75);
      v82 = v74;
      v22 = type metadata accessor for RecordMetadata;
      v81(v82, v75);
      v83 = v76;
      v37 = v75;
      v84 = v80;
      v52 = v79;
      v1 = v78;
      v73(v83, (uint64_t)v84, v75);
    }
    v6 = (char *)v71;
    result = sub_245263F80(v137, v1);
    v49 = v135;
    v51 = v136;
  }
  v57 = v51 + 6;
  if ((uint64_t)(v51 + 6) >= v129)
    goto LABEL_36;
  v55 = *(_QWORD *)(v128 + 8 * (_QWORD)v57);
  if (v55)
  {
    v56 = (int64_t)(v51 + 6);
    goto LABEL_30;
  }
  while (1)
  {
    v56 = (int64_t)(v57 + 1);
    if (__OFADD__(v57, 1))
      break;
    if (v56 >= v129)
      goto LABEL_36;
    v55 = *(_QWORD *)(v128 + 8 * v56);
    ++v57;
    if (v55)
      goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_2452732DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;

  v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v0 = MEMORY[0x24BDAC7A8](v58);
  v57 = (char *)&v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v56 = (uint64_t)&v48 - v3;
  v4 = MEMORY[0x24BDAC7A8](v2);
  v55 = (uint64_t *)((char *)&v48 - v5);
  MEMORY[0x24BDAC7A8](v4);
  v54 = (char *)&v48 - v6;
  v7 = type metadata accessor for PairingRelationship();
  v62 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  v11 = MEMORY[0x24BEE4AF8];
  if (!Strong)
    return v11;
  v12 = Strong;
  v13 = Strong + 192;
  swift_beginAccess();
  sub_24525E4F0(v13, (uint64_t)v63);
  v15 = v64;
  v14 = v65;
  __swift_project_boxed_opaque_existential_1(v63, v64);
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v14 + 8) + 8) + 32))(v15);
  v17 = sub_2452B036C(v16, (uint64_t (*)(char *, unint64_t, uint64_t))sub_2452B0B74);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  v18 = *(_QWORD *)(v17 + 16);
  if (!v18)
  {
LABEL_24:
    swift_release();
    swift_release();
    return v11;
  }
  v48 = v12;
  v63[0] = v11;
  sub_24532C554(0, v18, 0);
  result = sub_245330EE4(v17);
  v21 = result;
  v22 = 0;
  v23 = v17 + 64;
  v24 = *(_BYTE *)(v17 + 32);
  v49 = v17 + 80;
  v53 = v17;
  v50 = v18;
  v51 = v20;
  v52 = v17 + 64;
  while ((v21 & 0x8000000000000000) == 0 && v21 < 1 << v24)
  {
    v27 = (unint64_t)v21 >> 6;
    if ((*(_QWORD *)(v23 + 8 * ((unint64_t)v21 >> 6)) & (1 << v21)) == 0)
      goto LABEL_27;
    if (*(_DWORD *)(v17 + 36) != (_DWORD)v20)
      goto LABEL_28;
    v59 = v22;
    v60 = 1 << v21;
    v28 = v58;
    v29 = (uint64_t)v9;
    v30 = v54;
    v31 = (uint64_t)&v54[*(int *)(v58 + 48)];
    v32 = *(_QWORD *)(v17 + 56);
    v33 = (uint64_t *)(*(_QWORD *)(v17 + 48) + 16 * v21);
    v34 = *v33;
    v35 = v33[1];
    v61 = *(_QWORD *)(v62 + 72);
    sub_2452B792C(v32 + v61 * v21, v31, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    *v30 = v34;
    v30[1] = v35;
    v36 = (uint64_t)v55;
    *v55 = v34;
    *(_QWORD *)(v36 + 8) = v35;
    sub_2452B792C(v31, v36 + *(int *)(v28 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v37 = v56;
    sub_2452BC850(v36, v56, (uint64_t *)&unk_25744FF90);
    swift_bridgeObjectRetain_n();
    v38 = (uint64_t)v30;
    v9 = (char *)v29;
    sub_245263F80(v38, (uint64_t *)&unk_25744FF90);
    v39 = *(int *)(v28 + 48);
    v40 = (uint64_t)&v57[v39];
    sub_2452B792C(v37 + v39, (uint64_t)&v57[v39], (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    sub_2452B7AB8(v40, v29, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    sub_245263F80(v37, (uint64_t *)&unk_25744FF90);
    v11 = v63[0];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24532C554(0, *(_QWORD *)(v11 + 16) + 1, 1);
      v11 = v63[0];
    }
    v42 = *(_QWORD *)(v11 + 16);
    v41 = *(_QWORD *)(v11 + 24);
    v17 = v53;
    if (v42 >= v41 >> 1)
    {
      sub_24532C554(v41 > 1, v42 + 1, 1);
      v11 = v63[0];
    }
    *(_QWORD *)(v11 + 16) = v42 + 1;
    result = sub_2452B7AB8(v29, v11+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ v42 * v61, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v24 = *(_BYTE *)(v17 + 32);
    v25 = 1 << v24;
    if (v21 >= 1 << v24)
      goto LABEL_29;
    v23 = v52;
    v43 = *(_QWORD *)(v52 + 8 * v27);
    if ((v43 & v60) == 0)
      goto LABEL_30;
    LODWORD(v20) = v51;
    if (*(_DWORD *)(v17 + 36) != (_DWORD)v51)
      goto LABEL_31;
    v44 = v43 & (-2 << (v21 & 0x3F));
    if (v44)
    {
      v25 = __clz(__rbit64(v44)) | v21 & 0xFFFFFFFFFFFFFFC0;
      v26 = v50;
    }
    else
    {
      v45 = v27 + 1;
      v46 = (v25 + 63) >> 6;
      v26 = v50;
      if (v27 + 1 < v46)
      {
        v47 = *(_QWORD *)(v52 + 8 * v45);
        if (v47)
        {
LABEL_23:
          v25 = __clz(__rbit64(v47)) + (v45 << 6);
        }
        else
        {
          while (v46 - 2 != v27)
          {
            v47 = *(_QWORD *)(v49 + 8 * v27++);
            if (v47)
            {
              v45 = v27 + 1;
              goto LABEL_23;
            }
          }
        }
      }
    }
    v22 = v59 + 1;
    v21 = v25;
    if (v59 + 1 == v26)
      goto LABEL_24;
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_2452737C4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v30 = MEMORY[0x24BEE4AF8];
  sub_24532C5AC(0, v1, 0);
  v2 = v30;
  result = sub_245330EE4(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v24 = a1 + 80;
  v25 = v1;
  v9 = a1;
  v26 = v5;
  v27 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v9 + 32))
  {
    v12 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v9 + 36) != v5)
      goto LABEL_24;
    v13 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 32 * v6);
    v14 = v13[1];
    v15 = v13[3];
    v28 = v13[2];
    v29 = *v13;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v17 = *(_QWORD *)(v30 + 16);
    v16 = *(_QWORD *)(v30 + 24);
    if (v17 >= v16 >> 1)
      result = sub_24532C5AC(v16 > 1, v17 + 1, 1);
    *(_QWORD *)(v30 + 16) = v17 + 1;
    v18 = (_QWORD *)(v30 + 32 * v17);
    v18[4] = v29;
    v18[5] = v14;
    v18[6] = v28;
    v18[7] = v15;
    v10 = 1 << *(_BYTE *)(v9 + 32);
    if (v6 >= v10)
      goto LABEL_25;
    v8 = v27;
    v19 = *(_QWORD *)(v27 + 8 * v12);
    if ((v19 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v26;
    if (*(_DWORD *)(v9 + 36) != v26)
      goto LABEL_27;
    v20 = v19 & (-2 << (v6 & 0x3F));
    if (v20)
    {
      v10 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v11 = v25;
    }
    else
    {
      v21 = v12 + 1;
      v22 = (unint64_t)(v10 + 63) >> 6;
      v11 = v25;
      if (v12 + 1 < v22)
      {
        v23 = *(_QWORD *)(v27 + 8 * v21);
        if (v23)
        {
LABEL_20:
          v10 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v12)
          {
            v23 = *(_QWORD *)(v24 + 8 * v12++);
            if (v23)
            {
              v21 = v12 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v10;
    if (v7 == v11)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2452739EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(BOOL, unint64_t, uint64_t), uint64_t (*a4)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t result;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x24BEE4AF8];
  if (!v4)
    return v5;
  v7 = a1;
  v38 = MEMORY[0x24BEE4AF8];
  a3(0, v4, 0);
  v5 = v38;
  result = a4(v7);
  v10 = result;
  v11 = 0;
  v12 = v7 + 64;
  v29 = v7 + 80;
  v30 = v4;
  v31 = v9;
  v32 = v7 + 64;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(_BYTE *)(v7 + 32))
  {
    v15 = (unint64_t)v10 >> 6;
    if ((*(_QWORD *)(v12 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v7 + 36) != v9)
      goto LABEL_24;
    v33 = v11;
    v16 = (uint64_t *)(*(_QWORD *)(v7 + 56) + 48 * v10);
    v17 = v16[1];
    v18 = v16[3];
    v36 = v16[2];
    v37 = *v16;
    v34 = v16[5];
    v35 = v16[4];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    v19 = v7;
    v21 = *(_QWORD *)(v38 + 16);
    v20 = *(_QWORD *)(v38 + 24);
    if (v21 >= v20 >> 1)
      result = a3(v20 > 1, v21 + 1, 1);
    *(_QWORD *)(v38 + 16) = v21 + 1;
    v22 = (_QWORD *)(v38 + 48 * v21);
    v22[4] = v37;
    v22[5] = v17;
    v22[6] = v36;
    v22[7] = v18;
    v22[8] = v35;
    v22[9] = v34;
    v13 = 1 << *(_BYTE *)(v19 + 32);
    if (v10 >= v13)
      goto LABEL_25;
    v12 = v32;
    v23 = *(_QWORD *)(v32 + 8 * v15);
    if ((v23 & (1 << v10)) == 0)
      goto LABEL_26;
    v7 = v19;
    v9 = v31;
    if (*(_DWORD *)(v19 + 36) != v31)
      goto LABEL_27;
    v24 = v23 & (-2 << (v10 & 0x3F));
    if (v24)
    {
      v13 = __clz(__rbit64(v24)) | v10 & 0xFFFFFFFFFFFFFFC0;
      v14 = v30;
    }
    else
    {
      v25 = v15 + 1;
      v26 = (unint64_t)(v13 + 63) >> 6;
      v14 = v30;
      if (v15 + 1 < v26)
      {
        v27 = *(_QWORD *)(v32 + 8 * v25);
        if (v27)
        {
LABEL_20:
          v13 = __clz(__rbit64(v27)) + (v25 << 6);
        }
        else
        {
          while (v26 - 2 != v15)
          {
            v27 = *(_QWORD *)(v29 + 8 * v15++);
            if (v27)
            {
              v25 = v15 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v11 = v33 + 1;
    v10 = v13;
    if (v33 + 1 == v14)
      return v5;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_245273C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  uint64_t v16;
  void (*v17)(_QWORD *, uint64_t, uint64_t);
  uint64_t (*v18)(_QWORD *, uint64_t);
  uint64_t result;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t (*v40)(_QWORD *, uint64_t);
  id v41;
  uint64_t v42;
  char v43;
  char v44;
  __int128 v45;
  id v46;
  uint64_t v47;
  int64_t v48;
  id v49;
  char v50;
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  int *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v80;
  id v81;
  unint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int64_t v88;
  unint64_t v89;
  int64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  char *v96;
  __int128 *v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t, uint64_t);
  __int128 *v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  char *v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  NSObject *v119;
  os_log_type_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  __int128 v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(char *, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  __int128 v134;
  int64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  __int128 v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  int64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159[3];
  uint64_t v160;
  uint64_t v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  uint64_t v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  id v193;

  v1 = v0;
  v152 = type metadata accessor for PairingRelationship();
  v155 = *(_QWORD *)(v152 - 8);
  v2 = MEMORY[0x24BDAC7A8](v152);
  v151 = (uint64_t)&v135 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v156 = (char *)&v135 - v5;
  MEMORY[0x24BDAC7A8](v4);
  v148 = (char *)&v135 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FFA0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v158 = (char *)&v135 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v157 = (uint64_t)&v135 - v10;
  v11 = sub_2453879D4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (int64_t *)((char *)&v135 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v0 + 232);
  *v14 = v15;
  v16 = *MEMORY[0x24BEE5610];
  v17 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v12 + 104);
  v17(v14, v16, v11);
  v193 = v15;
  LOBYTE(v15) = sub_2453879F8();
  v18 = *(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8);
  result = v18(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if ((*(_BYTE *)(v1 + 432) & 1) != 0)
    return result;
  v20 = *(_QWORD *)(v1 + 184);
  ObjectType = swift_getObjectType();
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(ObjectType, v20);
  if (!v23)
  {
    if (qword_25744FD90 == -1)
    {
LABEL_10:
      v29 = sub_245387818();
      __swift_project_value_buffer(v29, (uint64_t)qword_257462FB0);
      v30 = sub_2453877F4();
      v31 = sub_245387D34();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v32 = 0;
        _os_log_impl(&dword_245256000, v30, v31, "Delaying migration until we have a valid local device ID", v32, 2u);
        MEMORY[0x24953317C](v32, -1, -1);
      }

      sub_2452B7610();
      swift_allocError();
      return swift_willThrow();
    }
LABEL_57:
    swift_once();
    goto LABEL_10;
  }
  v154 = (int64_t)v18;
  v140 = v22;
  v141 = v23;
  *(_BYTE *)(v1 + 432) = 1;
  swift_beginAccess();
  sub_24525E4F0(v1 + 192, (uint64_t)&v183);
  v24 = *((_QWORD *)&v184 + 1);
  v25 = v185;
  __swift_project_boxed_opaque_existential_1(&v183, *((uint64_t *)&v184 + 1));
  v26 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v25 + 8) + 8) + 8))(v24);
  v146 = v27;
  if (!v27)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v183);
    swift_beginAccess();
    v33 = *(_QWORD *)(v1 + 216);
    v34 = *(_QWORD *)(v1 + 224);
    __swift_mutable_project_boxed_opaque_existential_1(v1 + 192, v33);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 + 16) + 16))(v140, v141, v33);
    return swift_endAccess();
  }
  v28 = v26;
  v150 = v1 + 192;
  v136 = v1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v183);
  v147 = v28;
  if (v28 == v140 && v146 == v141 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v35 = sub_2452C1C64();
  if (v36)
  {
    v145 = v36;
    v149 = (char *)v35;
  }
  else
  {
    v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1760]), sel_init);
    v38 = objc_msgSend(v37, sel_hostName);
    v149 = (char *)sub_245387B18();
    v145 = v39;

  }
  v40 = (uint64_t (*)(_QWORD *, uint64_t))v154;
  v41 = v193;
  v162 = xmmword_24538A080;
  v42 = v136;
  LOBYTE(v159[0]) = *(_BYTE *)(v136 + 96);
  v43 = *(_BYTE *)(v136 + 136);
  v44 = *(_BYTE *)(v136 + 137);
  v45 = *(_OWORD *)(v136 + 120);
  v173 = *(_OWORD *)(v136 + 104);
  v174 = v45;
  LOBYTE(v175) = v43;
  BYTE1(v175) = v44;
  *v14 = v193;
  v17(v14, v16, v11);
  v46 = v41;
  LOBYTE(v41) = sub_2453879F8();
  result = v40(v14, v11);
  if ((v41 & 1) == 0)
  {
    __break(1u);
    goto LABEL_59;
  }
  swift_beginAccess();
  swift_retain();
  v47 = swift_bridgeObjectRetain();
  v48 = v153;
  v193 = (id)sub_2452B48D8(v47, v42);
  v154 = v48;
  swift_bridgeObjectRelease();
  swift_release();
  *v14 = v46;
  v17(v14, v16, v11);
  v49 = v46;
  v50 = sub_2453879F8();
  result = v40(v14, v11);
  if ((v50 & 1) == 0)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  swift_beginAccess();
  swift_retain();
  v51 = swift_bridgeObjectRetain();
  v52 = v154;
  v53 = sub_2452BC390(v51, v42, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_2452B4D30);
  swift_bridgeObjectRelease();
  swift_release();
  v54 = sub_2452739EC(v53, (uint64_t)&v172, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_24532C580, sub_245330EE4);
  v153 = v52;
  swift_release();
  v55 = *(_QWORD *)(v42 + 568);
  v56 = *(_QWORD *)(v42 + 576);
  sub_245261C30(v55, v56);
  v57 = sub_2452C1C64();
  v59 = v58;
  *(_QWORD *)&v134 = sub_2452C1C64();
  *((_QWORD *)&v134 + 1) = v60;
  *(_QWORD *)&v133 = v57;
  *((_QWORD *)&v133 + 1) = v59;
  DeviceDescriptor.init(id:name:protocolVersion:deviceType:screenDescriptor:zones:messageTypes:idsIdentityBlob:marketingName:productType:)(v140, v141, (uint64_t)v149, v145, (uint64_t *)&v162, (char *)v159, (uint64_t *)&v173, (uint64_t)v193, &v183, v54, v55, v56, v133, v134);
  v179 = v189;
  v180 = v190;
  v181 = v191;
  v182 = v192;
  v175 = v185;
  v176 = v186;
  v177 = v187;
  v178 = v188;
  v173 = v183;
  v174 = v184;
  v61 = v150;
  sub_24525E4F0(v150, (uint64_t)&v162);
  v63 = *((_QWORD *)&v163 + 1);
  v62 = v164;
  __swift_project_boxed_opaque_existential_1(&v162, *((uint64_t *)&v163 + 1));
  v64 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v62 + 8) + 8) + 32))(v63);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v162);
  v154 = 0;
  v66 = *(_QWORD *)(v64 + 64);
  v137 = v64 + 64;
  v145 = v64;
  v67 = 1 << *(_BYTE *)(v64 + 32);
  v68 = -1;
  if (v67 < 64)
    v68 = ~(-1 << v67);
  v69 = v68 & v66;
  v70 = (uint64_t)v148;
  v149 = v148 + 8;
  v143 = (unint64_t)(v67 + 63) >> 6;
  v135 = v143 - 1;
  *(_QWORD *)&v65 = 136315650;
  v139 = v65;
  v138 = MEMORY[0x24BEE4AD8] + 8;
  v71 = (int *)v152;
  v72 = v158;
  if ((v68 & v66) == 0)
    goto LABEL_26;
LABEL_24:
  v80 = __clz(__rbit64(v69));
  v81 = (id)((v69 - 1) & v69);
  v82 = v80 | (v154 << 6);
  while (2)
  {
    v83 = *(_QWORD *)(v145 + 56);
    v84 = (_QWORD *)(*(_QWORD *)(v145 + 48) + 16 * v82);
    v85 = v84[1];
    *v72 = *v84;
    v72[1] = v85;
    v86 = v83 + *(_QWORD *)(v155 + 72) * v82;
    v87 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
    sub_2452B792C(v86, (uint64_t)v72 + *(int *)(v87 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v72, 0, 1, v87);
    swift_bridgeObjectRetain();
    while (1)
    {
      v92 = v157;
      sub_2452BC850((uint64_t)v72, v157, &qword_25744FFA0);
      v93 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 48))(v92, 1, v93) == 1)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_beginAccess();
        v131 = *(_QWORD *)(v136 + 216);
        v132 = *(_QWORD *)(v136 + 224);
        __swift_mutable_project_boxed_opaque_existential_1(v61, v131);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v132 + 16) + 16))(v140, v141, v131);
        swift_endAccess();
        return sub_245269928((uint64_t)&v173);
      }
      v193 = v81;
      swift_bridgeObjectRelease();
      sub_2452B7AB8(v92 + *(int *)(v93 + 48), v70, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      if (*(_QWORD *)&v149[v71[8]] == 2)
      {
        v94 = sub_245387740();
        v95 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v94 - 8) + 16);
        v96 = v156;
        v144 = v94;
        v95(v156, v70);
        v97 = (__int128 *)(v70 + v71[5]);
        v98 = v97[7];
        v168 = v97[6];
        v169 = v98;
        v99 = v97[9];
        v170 = v97[8];
        v171 = v99;
        v100 = v97[3];
        v164 = v97[2];
        v165 = v100;
        v101 = v97[5];
        v166 = v97[4];
        v167 = v101;
        v102 = v97[1];
        v162 = *v97;
        v163 = v102;
        v103 = v71[6];
        v104 = v70 + v103;
        v105 = &v96[v103];
        v106 = sub_2453876EC();
        v107 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 16);
        v107(v105, v104, v106);
        v107(&v96[v71[7]], v70 + v71[7], v106);
        v107(&v96[v71[9]], v70 + v71[9], v106);
        v108 = (__int128 *)&v96[v71[5]];
        v109 = v169;
        v108[6] = v168;
        v108[7] = v109;
        v110 = v171;
        v108[8] = v170;
        v108[9] = v110;
        v111 = v165;
        v108[2] = v164;
        v108[3] = v111;
        v112 = v167;
        v108[4] = v166;
        v108[5] = v112;
        v113 = v163;
        *v108 = v162;
        v108[1] = v113;
        v114 = &v96[v71[8]];
        v115 = v146;
        *(_QWORD *)v114 = v147;
        *((_QWORD *)v114 + 1) = v115;
        sub_24526432C((uint64_t)&v162);
        v116 = qword_25744FD90;
        swift_bridgeObjectRetain();
        if (v116 != -1)
          swift_once();
        v117 = sub_245387818();
        __swift_project_value_buffer(v117, (uint64_t)qword_257462FB0);
        v118 = v151;
        sub_2452B792C(v70, v151, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        swift_bridgeObjectRetain();
        sub_24526432C((uint64_t)&v173);
        swift_bridgeObjectRetain();
        sub_24526432C((uint64_t)&v173);
        v119 = sub_2453877F4();
        v120 = sub_245387D34();
        if (os_log_type_enabled(v119, v120))
        {
          v121 = swift_slowAlloc();
          v142 = swift_slowAlloc();
          v159[0] = v142;
          *(_DWORD *)v121 = v139;
          sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v122 = sub_2453880F4();
          *(_QWORD *)(v121 + 4) = sub_2453816D8(v122, v123, v159);
          swift_bridgeObjectRelease();
          v70 = (uint64_t)v148;
          sub_2452B7B5C(v118, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          *(_WORD *)(v121 + 12) = 2080;
          v124 = v173;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v121 + 14) = sub_2453816D8(v124, *((unint64_t *)&v124 + 1), v159);
          swift_bridgeObjectRelease();
          sub_245269928((uint64_t)&v173);
          sub_245269928((uint64_t)&v173);
          *(_WORD *)(v121 + 22) = 2080;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v121 + 24) = sub_2453816D8(v147, v115, v159);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_245256000, v119, v120, "Initiating migration for relationship %s. Current local ID: %s; stored local ID: %s",
            (uint8_t *)v121,
            0x20u);
          v125 = v142;
          swift_arrayDestroy();
          MEMORY[0x24953317C](v125, -1, -1);
          MEMORY[0x24953317C](v121, -1, -1);

        }
        else
        {
          sub_2452B7B5C(v118, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          sub_245269928((uint64_t)&v173);
          sub_245269928((uint64_t)&v173);

          swift_bridgeObjectRelease_n();
        }
        v72 = v158;
        v69 = (unint64_t)v193;
        v126 = v150;
        sub_24525E4F0(v150, (uint64_t)v159);
        v127 = v160;
        v128 = v161;
        __swift_project_boxed_opaque_existential_1(v159, v160);
        v129 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v128 + 16) + 88);
        v130 = (uint64_t)v156;
        v129(v156, v127);
        sub_2452B7B5C(v130, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        v61 = v126;
        sub_2452B7B5C(v70, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v159);
        v71 = (int *)v152;
        if (v69)
          goto LABEL_24;
      }
      else
      {
        sub_24525E4F0(v61, (uint64_t)&v162);
        v73 = *((_QWORD *)&v163 + 1);
        v74 = v164;
        __swift_project_boxed_opaque_existential_1(&v162, *((uint64_t *)&v163 + 1));
        v75 = (uint64_t *)(v70 + v71[5]);
        v76 = *v75;
        v77 = v75[1];
        v78 = *(_QWORD *)(v74 + 16);
        v79 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 96);
        swift_bridgeObjectRetain();
        v79(v76, v77, v73, v78);
        v61 = v150;
        swift_bridgeObjectRelease();
        sub_2452B7B5C(v70, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v162);
        v72 = v158;
        v69 = (unint64_t)v193;
        if (v193)
          goto LABEL_24;
      }
LABEL_26:
      v88 = v154 + 1;
      if (__OFADD__(v154, 1))
        goto LABEL_56;
      if (v88 < v143)
      {
        v89 = *(_QWORD *)(v137 + 8 * v88);
        if (v89)
          goto LABEL_29;
        v90 = v154 + 2;
        ++v154;
        if (v88 + 1 < v143)
        {
          v89 = *(_QWORD *)(v137 + 8 * v90);
          if (v89)
            goto LABEL_32;
          v154 = v88 + 1;
          if (v88 + 2 < v143)
          {
            v89 = *(_QWORD *)(v137 + 8 * (v88 + 2));
            if (v89)
            {
              v88 += 2;
              goto LABEL_29;
            }
            v90 = v88 + 3;
            v154 = v88 + 2;
            if (v88 + 3 < v143)
              break;
          }
        }
      }
LABEL_43:
      v91 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v72, 1, 1, v91);
      v81 = 0;
    }
    v89 = *(_QWORD *)(v137 + 8 * v90);
    if (v89)
    {
LABEL_32:
      v88 = v90;
LABEL_29:
      v81 = (id)((v89 - 1) & v89);
      v82 = __clz(__rbit64(v89)) + (v88 << 6);
      v154 = v88;
      continue;
    }
    break;
  }
  while (1)
  {
    v88 = v90 + 1;
    if (__OFADD__(v90, 1))
      break;
    if (v88 >= v143)
    {
      v154 = v135;
      goto LABEL_43;
    }
    v89 = *(_QWORD *)(v137 + 8 * v88);
    ++v90;
    if (v89)
      goto LABEL_29;
  }
LABEL_60:
  __break(1u);
  return result;
}

uint64_t Replicator.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_245263F80(v0 + 56, &qword_2574502E8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 192);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 264);
  __swift_destroy_boxed_opaque_existential_1(v0 + 304);
  __swift_destroy_boxed_opaque_existential_1(v0 + 344);
  __swift_destroy_boxed_opaque_existential_1(v0 + 384);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 440);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_24525FFF8(*(_QWORD *)(v0 + 568), *(_QWORD *)(v0 + 576));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t Replicator.__deallocating_deinit()
{
  Replicator.deinit();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall Replicator.set(messageTypes:)(Swift::OpaquePointer messageTypes)
{
  uint64_t *v1;
  uint64_t v3;
  Swift::OpaquePointer *v4;

  v3 = v1[29];
  v4 = (Swift::OpaquePointer *)swift_allocObject();
  v4[2]._rawValue = v1;
  v4[3]._rawValue = messageTypes._rawValue;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2452E06E8(0xD000000000000014, 0x8000000245393090, v3, (uint64_t)sub_2452B458C, (uint64_t)v4, 0.0);
  swift_release();
}

uint64_t sub_245274BE4(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t result;
  uint64_t (*v35)(uint64_t);
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;

  v7 = (_QWORD *)(a3 + 584);
  swift_beginAccess();
  *(_QWORD *)(a3 + 584) = MEMORY[0x24BEE4B00];
  v8 = swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a4 + 16);
  if (!v9)
    return a1(v8);
  v35 = a1;
  swift_bridgeObjectRetain();
  v10 = (uint64_t *)(a4 + 72);
  v36 = v7;
  while (1)
  {
    v13 = *(v10 - 5);
    v12 = *(v10 - 4);
    v15 = *(v10 - 3);
    v14 = *(v10 - 2);
    v16 = *v10;
    v37 = v9;
    v38 = *(v10 - 1);
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v7;
    v39 = (_QWORD *)*v7;
    *v7 = 0x8000000000000000;
    v20 = sub_2452C1DFC(v13, v12, v15, v14);
    v21 = *(_QWORD *)(v18 + 16);
    v22 = (v19 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
      break;
    v24 = v19;
    if (*(_QWORD *)(v18 + 24) >= v23)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v27 = v38;
        v28 = v39;
        if ((v19 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_2452C7D58();
        v27 = v38;
        v28 = v39;
        if ((v24 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_2452C33D8(v23, isUniquelyReferenced_nonNull_native);
      v25 = sub_2452C1DFC(v13, v12, v15, v14);
      if ((v24 & 1) != (v26 & 1))
        goto LABEL_20;
      v20 = v25;
      v27 = v38;
      v28 = v39;
      if ((v24 & 1) != 0)
      {
LABEL_3:
        v11 = (uint64_t *)(v28[7] + 48 * v20);
        *v11 = v13;
        v11[1] = v12;
        v11[2] = v15;
        v11[3] = v14;
        v11[4] = v27;
        v11[5] = v16;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
    }
    v28[(v20 >> 6) + 8] |= 1 << v20;
    v29 = (uint64_t *)(v28[6] + 32 * v20);
    *v29 = v13;
    v29[1] = v12;
    v29[2] = v15;
    v29[3] = v14;
    v30 = (uint64_t *)(v28[7] + 48 * v20);
    *v30 = v13;
    v30[1] = v12;
    v30[2] = v15;
    v30[3] = v14;
    v30[4] = v27;
    v30[5] = v16;
    v31 = v28[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_19;
    v28[2] = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_4:
    v10 += 6;
    v7 = v36;
    *v36 = v28;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    v9 = v37 - 1;
    if (v37 == 1)
    {
      v8 = swift_bridgeObjectRelease();
      a1 = v35;
      return a1(v8);
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_2453883DC();
  __break(1u);
  return result;
}

uint64_t sub_245274E74(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  v4 = *(_QWORD *)(v3 + 232);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2452E06E8(0xD000000000000014, 0x8000000245393090, v4, (uint64_t)sub_2452BCD5C, v5, 0.0);
  return swift_release();
}

uint64_t Replicator.isAllowListEnabled.getter()
{
  return sub_245274F0C();
}

uint64_t sub_245274F0C()
{
  unsigned __int8 v1;

  sub_245387D7C();
  return v1;
}

uint64_t Replicator.isAllowListEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t result;
  _QWORD v9[6];

  v2 = v1;
  v4 = *(NSObject **)(v2 + 232);
  v5 = swift_allocObject();
  *(_BYTE *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = v2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_2452B50B4;
  *(_QWORD *)(v6 + 24) = v5;
  v9[4] = sub_2452643B4;
  v9[5] = v6;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_24525B888;
  v9[3] = &block_descriptor_45_0;
  v7 = _Block_copy(v9);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v2 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_245275084@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v3 = a1 + 192;
  swift_beginAccess();
  sub_24525E4F0(v3, (uint64_t)v7);
  v5 = v8;
  v4 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  *a2 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + 8) + 8) + 40))(v5) & 1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

uint64_t sub_245275114(char a1, uint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  if (qword_25744FD90 != -1)
    swift_once();
  v4 = sub_245387818();
  __swift_project_value_buffer(v4, (uint64_t)qword_257462FB0);
  v5 = sub_2453877F4();
  v6 = sub_245387D34();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 67240192;
    LODWORD(v15[0]) = a1 & 1;
    sub_245387E0C();
    _os_log_impl(&dword_245256000, v5, v6, "Allow List state changed to enabled: %{BOOL,public}d", v7, 8u);
    MEMORY[0x24953317C](v7, -1, -1);
  }

  swift_beginAccess();
  v8 = *(_QWORD *)(a2 + 216);
  v9 = *(_QWORD *)(a2 + 224);
  __swift_mutable_project_boxed_opaque_existential_1(a2 + 192, v8);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v9 + 16) + 48))(a1 & 1, v8);
  v10 = *(_QWORD *)(a2 + 216);
  v11 = *(_QWORD *)(a2 + 224);
  __swift_mutable_project_boxed_opaque_existential_1(a2 + 192, v10);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v11 + 16) + 64))(MEMORY[0x24BEE4B08], v10);
  swift_endAccess();
  sub_24525E4F0(a2 + 192, (uint64_t)v15);
  v13 = v16;
  v12 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v12 + 8) + 8) + 32))(v13);
  sub_245387878();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

void (*Replicator.isAllowListEnabled.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v2 = v1;
  v4 = malloc(0x48uLL);
  *a1 = v4;
  v5 = *(_QWORD *)(v1 + 232);
  v4[6] = v2;
  v4[7] = v5;
  sub_245387D7C();
  *((_BYTE *)v4 + 64) = *(_BYTE *)v4;
  return sub_245275370;
}

void sub_245275370(uint64_t a1, char a2)
{
  _QWORD *v2;
  char v3;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char v12;

  v2 = *(_QWORD **)a1;
  v3 = *(_BYTE *)(*(_QWORD *)a1 + 64);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  isEscapingClosureAtFileLocation = *(_QWORD *)(*(_QWORD *)a1 + 56);
  if ((a2 & 1) != 0)
  {
    v6 = swift_allocObject();
    *(_BYTE *)(v6 + 16) = v3;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = swift_allocObject();
    v3 = v7;
    *(_QWORD *)(v7 + 16) = sub_2452BC9CC;
    *(_QWORD *)(v7 + 24) = v6;
    v2[4] = sub_2452643B4;
    v2[5] = v7;
    *v2 = MEMORY[0x24BDAC760];
    v2[1] = 1107296256;
    v2[2] = sub_24525B888;
    v2[3] = &block_descriptor_57;
    v8 = _Block_copy(v2);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync((dispatch_queue_t)isEscapingClosureAtFileLocation, v8);
    _Block_release(v8);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
LABEL_5:
      free(v2);
      return;
    }
    __break(1u);
  }
  v9 = swift_allocObject();
  *(_BYTE *)(v9 + 16) = v3;
  *(_QWORD *)(v9 + 24) = v5;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_2452BC9CC;
  *(_QWORD *)(v10 + 24) = v9;
  v2[4] = sub_2452643B4;
  v2[5] = v10;
  *v2 = MEMORY[0x24BDAC760];
  v2[1] = 1107296256;
  v2[2] = sub_24525B888;
  v2[3] = &block_descriptor_68;
  v11 = _Block_copy(v2);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync((dispatch_queue_t)isEscapingClosureAtFileLocation, v11);
  _Block_release(v11);
  v12 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v12 & 1) == 0)
    goto LABEL_5;
  __break(1u);
}

uint64_t Replicator.allowList.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2574522A0);
  sub_245387D7C();
  return v1;
}

uint64_t sub_2452755F8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2574522A0);
  result = sub_245387D7C();
  *a1 = v3;
  return result;
}

uint64_t Replicator.allowList.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t result;
  _QWORD v9[6];

  v2 = v1;
  v4 = *(NSObject **)(v2 + 232);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = v2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_2452B5120;
  *(_QWORD *)(v6 + 24) = v5;
  v9[4] = sub_2452643B4;
  v9[5] = v6;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_24525B888;
  v9[3] = &block_descriptor_78;
  v7 = _Block_copy(v9);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v2 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_245275788@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v3 = a1 + 192;
  swift_beginAccess();
  sub_24525E4F0(v3, (uint64_t)v7);
  v5 = v8;
  v4 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  *a2 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + 8) + 8) + 48))(v5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

uint64_t sub_245275814(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19[3];
  uint64_t v20;
  uint64_t v21;

  if (qword_25744FD90 != -1)
    swift_once();
  v3 = sub_245387818();
  __swift_project_value_buffer(v3, (uint64_t)qword_257462FB0);
  swift_bridgeObjectRetain_n();
  v4 = sub_2453877F4();
  v5 = sub_245387D34();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v19[0] = v7;
    *(_DWORD *)v6 = 136446210;
    sub_245387740();
    sub_24525C6C4(&qword_25744F6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    swift_bridgeObjectRetain();
    v8 = sub_245387CD4();
    v10 = v9;
    swift_bridgeObjectRelease();
    sub_2453816D8(v8, v10, v19);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v4, v5, "Allow List updated: %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v7, -1, -1);
    MEMORY[0x24953317C](v6, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  v11 = *(_QWORD *)(a2 + 216);
  v12 = *(_QWORD *)(a2 + 224);
  __swift_mutable_project_boxed_opaque_existential_1(a2 + 192, v11);
  v13 = *(_QWORD *)(v12 + 16);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 64);
  v15 = swift_bridgeObjectRetain();
  v14(v15, v11, v13);
  swift_endAccess();
  sub_24525E4F0(a2 + 192, (uint64_t)v19);
  v17 = v20;
  v16 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v16 + 8) + 8) + 32))(v17);
  sub_245387878();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

void (*Replicator.allowList.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v2 = v1;
  v4 = malloc(0x48uLL);
  *a1 = v4;
  v5 = *(_QWORD *)(v1 + 232);
  v4[7] = v2;
  v4[8] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574522A0);
  sub_245387D7C();
  return sub_245275B30;
}

void sub_245275B30(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char isEscapingClosureAtFileLocation;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char v13;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  v4 = *(NSObject **)(*(_QWORD *)a1 + 64);
  if ((a2 & 1) != 0)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v3;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = sub_2452BC9D0;
    *(_QWORD *)(v7 + 24) = v6;
    v2[4] = sub_2452643B4;
    v2[5] = v7;
    *v2 = MEMORY[0x24BDAC760];
    v2[1] = 1107296256;
    v2[2] = sub_24525B888;
    v2[3] = &block_descriptor_90;
    v8 = _Block_copy(v2);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    dispatch_sync(v4, v8);
    _Block_release(v8);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_5:
      free(v2);
      return;
    }
    __break(1u);
  }
  else
  {
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v3;
    *(_QWORD *)(v10 + 24) = v5;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = sub_2452BC9D0;
    *(_QWORD *)(v11 + 24) = v10;
    v2[4] = sub_2452643B4;
    v2[5] = v11;
    *v2 = MEMORY[0x24BDAC760];
    v2[1] = 1107296256;
    v2[2] = sub_24525B888;
    v2[3] = &block_descriptor_101;
    v12 = _Block_copy(v2);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v4, v12);
    _Block_release(v12);
    v13 = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v13 & 1) == 0)
      goto LABEL_5;
  }
  __break(1u);
}

uint64_t sub_245275D74()
{
  return sub_24527E924();
}

uint64_t sub_245275D80(char a1)
{
  return Replicator.isAllowListEnabled.setter(a1);
}

uint64_t (*sub_245275DA0(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Replicator.isAllowListEnabled.modify(v2);
  return sub_245275DE8;
}

uint64_t sub_245275DEC()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2574522A0);
  sub_245387D7C();
  return v1;
}

uint64_t sub_245275E48(uint64_t a1)
{
  return Replicator.allowList.setter(a1);
}

uint64_t (*sub_245275E68(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Replicator.allowList.modify(v2);
  return sub_245275DE8;
}

uint64_t Replicator.pairingRelationships(filter:)()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF70);
  sub_245387D7C();
  return v1;
}

uint64_t sub_245275F14@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v4 = a2 + 192;
  if ((a1 & 1) != 0)
  {
    swift_beginAccess();
    sub_24525E4F0(v4, (uint64_t)v12);
    v9 = v13;
    v8 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v8 + 8) + 8) + 32))(v9);
    v7 = sub_2452B036C(v10, (uint64_t (*)(char *, unint64_t, uint64_t))sub_2452B04C8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_beginAccess();
    sub_24525E4F0(v4, (uint64_t)v12);
    v6 = v13;
    v5 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 8) + 8) + 32))(v6);
  }
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  *a3 = v7;
  return result;
}

uint64_t Replicator.pairingRelationship(relationshipID:)(uint64_t a1)
{
  return sub_24527A588(a1, (uint64_t *)&unk_25744FAD0);
}

uint64_t Replicator.pairingRelationship(remoteDeviceID:)()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  return sub_245387D7C();
}

uint64_t sub_24527608C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v7 = a1 + 192;
  swift_beginAccess();
  sub_24525E4F0(v7, (uint64_t)v11);
  v8 = v12;
  v9 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  MetadataStoring.pairingRelationship(remoteDeviceID:)(a2, a3, v8, *(_QWORD *)(v9 + 8), a4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
}

uint64_t Replicator.resolveProtocolVersion(for:)()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2574522A8);
  sub_245387D7C();
  return v1;
}

unint64_t sub_245276190(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  unint64_t result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v3 = sub_2453879D4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(v1 + 232);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE5610], v3);
  v8 = v7;
  LOBYTE(v7) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) != 0)
  {
    v10 = a1 + *(int *)(type metadata accessor for PairingRelationship() + 20);
    result = *(_QWORD *)(v10 + 32);
    v11 = *(_QWORD *)(v10 + 40);
    if (v11 <= 4)
    {
      if (result <= 0xC)
      {
        if (result < 4)
          return 0;
      }
      else
      {
        return 12;
      }
    }
    else
    {
      if (result >= 0xC)
        result = 12;
      if (result < v11)
        return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2452762A0()
{
  return sub_24526BDB8();
}

uint64_t sub_2452762C0()
{
  return sub_24526BEB0();
}

uint64_t sub_2452762E0()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF70);
  sub_245387D7C();
  return v1;
}

uint64_t sub_245276344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24527EC50(a1, a2, a3, (uint64_t *)&unk_25744FAD0);
}

uint64_t sub_245276358()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  return sub_245387D7C();
}

uint64_t sub_2452763BC()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2574522A8);
  sub_245387D7C();
  return v1;
}

uint64_t Replicator.pair(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  uint64_t result;
  _QWORD v15[6];

  v5 = v4;
  v10 = *(NSObject **)(v5 + 232);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v5;
  v11[3] = a1;
  v11[4] = a2;
  v11[5] = a3;
  v11[6] = a4;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_2452B5224;
  *(_QWORD *)(v12 + 24) = v11;
  v15[4] = sub_2452643B4;
  v15[5] = v12;
  v15[0] = MEMORY[0x24BDAC760];
  v15[1] = 1107296256;
  v15[2] = sub_24525B888;
  v15[3] = &block_descriptor_111;
  v13 = _Block_copy(v15);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v10, v13);
  _Block_release(v13);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v10 & 1) != 0)
    __break(1u);
  return result;
}

void sub_245276578(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD, _QWORD), uint64_t a5)
{
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD, _QWORD);
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (qword_25744FD90 != -1)
    swift_once();
  v10 = sub_245387818();
  __swift_project_value_buffer(v10, (uint64_t)qword_257462FB0);
  swift_retain();
  v11 = sub_2453877F4();
  v12 = sub_245387D34();
  if (os_log_type_enabled(v11, v12))
  {
    v21 = a5;
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v22 = v14;
    *(_DWORD *)v13 = 136446210;
    v20 = a3;
    v15 = a2;
    v16 = a4;
    v17 = *(_QWORD *)(a1 + 488);
    v18 = *(_QWORD *)(a1 + 496);
    swift_bridgeObjectRetain();
    v19 = v17;
    a4 = v16;
    a2 = v15;
    sub_2453816D8(v19, v18, &v22);
    a5 = v21;
    sub_245387E0C();
    swift_release();
    a3 = v20;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v11, v12, "(%{public}s) [Replicator.pair()] performing immediate pairing", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v14, -1, -1);
    MEMORY[0x24953317C](v13, -1, -1);

  }
  else
  {

    swift_release();
  }
  sub_245276E10(a2, a3, a4, a5);
}

void sub_245276760(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint8_t *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char *v36;
  char *v37;
  NSObject *v38;
  _QWORD *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t aBlock[6];
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;

  v6 = sub_245387920();
  v54 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v53 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_245387950();
  v51 = *(_QWORD *)(v8 - 8);
  v52 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v50 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2453879D4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (void *)a3[29];
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEE5610], v10);
  v15 = v14;
  v16 = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v16 & 1) != 0)
  {
    if (qword_25744FD90 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v17 = sub_245387818();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_257462FB0);
  swift_bridgeObjectRetain_n();
  v49 = v18;
  v19 = sub_2453877F4();
  v20 = sub_245387D34();
  v21 = os_log_type_enabled(v19, v20);
  v55 = (uint64_t)v15;
  if (v21)
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = v6;
    v24 = a3;
    v25 = swift_slowAlloc();
    aBlock[0] = v25;
    *(_DWORD *)v22 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v58 = sub_2453816D8(a1, a2, aBlock);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_245256000, v19, v20, "Pairing with device: %{public}s", v22, 0xCu);
    swift_arrayDestroy();
    v26 = v25;
    a3 = v24;
    v6 = v23;
    MEMORY[0x24953317C](v26, -1, -1);
    MEMORY[0x24953317C](v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v60 = 0;
  v58 = 0u;
  v59 = 0u;
  sub_2452A55EC(a3, a1, a2, &v58, (uint64_t)nullsub_1, 0, (char *)aBlock);
  v27 = aBlock[0];
  v28 = *((_QWORD *)&v58 + 1);
  if (LOBYTE(aBlock[0]) != 8)
  {
    swift_bridgeObjectRelease();
    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = nullsub_1;
    *(_QWORD *)(v34 + 24) = 0;
    *(_BYTE *)(v34 + 32) = v27;
    aBlock[4] = (uint64_t)sub_2452BB00C;
    aBlock[5] = v34;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_24525DD34;
    aBlock[3] = (uint64_t)&block_descriptor_1351;
    v35 = _Block_copy(aBlock);
    v36 = v50;
    sub_245387938();
    v57 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
    v37 = v53;
    sub_245387E3C();
    MEMORY[0x2495320E4](0, v36, v37, v35);
    _Block_release(v35);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v37, v6);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v36, v52);
    goto LABEL_10;
  }
  if (*((_QWORD *)&v58 + 1))
  {
    v30 = *((_QWORD *)&v59 + 1);
    v29 = v60;
    v31 = v59;
    v32 = v58;
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = a3;
    *(_QWORD *)(v33 + 24) = v32;
    *(_QWORD *)(v33 + 32) = v28;
    *(_BYTE *)(v33 + 40) = v31;
    *(_DWORD *)(v33 + 41) = aBlock[0];
    *(_DWORD *)(v33 + 44) = *(_DWORD *)((char *)aBlock + 3);
    *(_QWORD *)(v33 + 48) = v30;
    *(_QWORD *)(v33 + 56) = v29;
    swift_retain();
    sub_2452E06E8(0xD000000000000013, 0x8000000245393690, v55, (uint64_t)sub_2452BAFE4, v33, 0.0);
LABEL_10:
    swift_release();
    return;
  }
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v38 = sub_2453877F4();
  v39 = a3;
  v40 = sub_245387D1C();
  if (os_log_type_enabled(v38, v40))
  {
    v55 = a1;
    v41 = swift_slowAlloc();
    v42 = swift_slowAlloc();
    aBlock[0] = v42;
    *(_DWORD *)v41 = 136315394;
    if (v39[32])
    {
      v43 = v39[31];
      v44 = v39[32];
    }
    else
    {
      v45 = v39[23];
      ObjectType = swift_getObjectType();
      v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 8))(ObjectType, v45);
      if (v48)
        v43 = v47;
      else
        v43 = 0xD000000000000016;
      if (v48)
        v44 = v48;
      else
        v44 = 0x80000002453930B0;
    }
    swift_bridgeObjectRetain();
    v57 = sub_2453816D8(v43, v44, aBlock);
    sub_245387E0C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2080;
    swift_bridgeObjectRetain();
    v57 = sub_2453816D8(v55, a2, aBlock);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_245256000, v38, v40, "%s Cannot pair with a device that has no handshakeDescriptor: %s, privacy: .public)", (uint8_t *)v41, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v42, -1, -1);
    MEMORY[0x24953317C](v41, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
}

void sub_245276E10(uint64_t a1, unint64_t a2, void (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  void (*v26)(_QWORD, _QWORD);
  uint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  char *v40;
  void (*v41)(_QWORD, _QWORD);
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t ObjectType;
  uint64_t v50;
  unint64_t v51;
  void *v52;
  _BYTE *v53;
  _QWORD *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void (*v61)(_QWORD, _QWORD);
  uint64_t v62;
  uint64_t aBlock[6];
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;

  v5 = v4;
  v10 = sub_245387920();
  v60 = *(_QWORD *)(v10 - 8);
  v61 = (void (*)(_QWORD, _QWORD))v10;
  MEMORY[0x24BDAC7A8](v10);
  v59 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_245387950();
  v57 = *(_QWORD *)(v12 - 8);
  v58 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v56 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2453879D4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (_QWORD **)((char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = (void *)v5[29];
  *v17 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BEE5610], v14);
  v19 = v18;
  LOBYTE(v18) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) != 0)
  {
    v62 = (uint64_t)v19;
    if (qword_25744FD90 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v20 = sub_245387818();
  __swift_project_value_buffer(v20, (uint64_t)qword_257462FB0);
  swift_bridgeObjectRetain_n();
  v21 = sub_2453877F4();
  v22 = sub_245387D34();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v55 = a4;
    v24 = (uint8_t *)v23;
    v25 = swift_slowAlloc();
    v54 = v5;
    v26 = a3;
    v27 = v25;
    aBlock[0] = v25;
    *(_DWORD *)v24 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v65 = sub_2453816D8(a1, a2, aBlock);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_245256000, v21, v22, "Pairing with device: %{public}s", v24, 0xCu);
    swift_arrayDestroy();
    v28 = v27;
    a3 = v26;
    v5 = v54;
    MEMORY[0x24953317C](v28, -1, -1);
    v29 = v24;
    a4 = v55;
    MEMORY[0x24953317C](v29, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v67 = 0;
  v65 = 0u;
  v66 = 0u;
  sub_2452A55EC(v5, a1, a2, &v65, (uint64_t)a3, a4, (char *)aBlock);
  v30 = aBlock[0];
  v31 = *((_QWORD *)&v65 + 1);
  if (LOBYTE(aBlock[0]) == 8)
  {
    if (*((_QWORD *)&v65 + 1))
    {
      v33 = *((_QWORD *)&v66 + 1);
      v32 = v67;
      v34 = v66;
      v35 = v65;
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = v5;
      *(_QWORD *)(v36 + 24) = v35;
      *(_QWORD *)(v36 + 32) = v31;
      *(_BYTE *)(v36 + 40) = v34;
      *(_DWORD *)(v36 + 41) = aBlock[0];
      *(_DWORD *)(v36 + 44) = *(_DWORD *)((char *)aBlock + 3);
      *(_QWORD *)(v36 + 48) = v33;
      *(_QWORD *)(v36 + 56) = v32;
      swift_retain();
      sub_2452E06E8(0xD000000000000013, 0x8000000245393690, v62, (uint64_t)sub_2452BAFE4, v36, 0.0);
      swift_release();
    }
    else
    {
      v62 = a1;
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      v42 = sub_2453877F4();
      v43 = sub_245387D1C();
      if (os_log_type_enabled(v42, v43))
      {
        v61 = a3;
        v55 = a4;
        v44 = swift_slowAlloc();
        v45 = swift_slowAlloc();
        aBlock[0] = v45;
        *(_DWORD *)v44 = 136315394;
        if (v5[32])
        {
          v46 = v5[31];
          v47 = v5[32];
        }
        else
        {
          v48 = v5[23];
          ObjectType = swift_getObjectType();
          v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(ObjectType, v48);
          if (v51)
            v46 = v50;
          else
            v46 = 0xD000000000000016;
          if (v51)
            v47 = v51;
          else
            v47 = 0x80000002453930B0;
        }
        swift_bridgeObjectRetain();
        v64 = sub_2453816D8(v46, v47, aBlock);
        sub_245387E0C();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v44 + 12) = 2080;
        swift_bridgeObjectRetain();
        v64 = sub_2453816D8(v62, a2, aBlock);
        sub_245387E0C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_245256000, v42, v43, "%s Cannot pair with a device that has no handshakeDescriptor: %s, privacy: .public)", (uint8_t *)v44, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v45, -1, -1);
        MEMORY[0x24953317C](v44, -1, -1);

        a3 = v61;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_release_n();
      }
      sub_2452B9768();
      v52 = (void *)swift_allocError();
      *v53 = 1;
      a3(v52, 1);

    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = a3;
    *(_QWORD *)(v37 + 24) = a4;
    *(_BYTE *)(v37 + 32) = v30;
    aBlock[4] = (uint64_t)sub_2452BCD60;
    aBlock[5] = v37;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_24525DD34;
    aBlock[3] = (uint64_t)&block_descriptor_1365;
    v38 = _Block_copy(aBlock);
    swift_retain();
    v39 = v56;
    sub_245387938();
    v64 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
    v40 = v59;
    v41 = v61;
    sub_245387E3C();
    MEMORY[0x2495320E4](0, v39, v40, v38);
    _Block_release(v38);
    (*(void (**)(char *, _QWORD))(v60 + 8))(v40, v41);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v39, v58);
    swift_release();
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Replicator.unpair(remoteDeviceID:)(Swift::String remoteDeviceID)
{
  sub_245387D7C();
}

uint64_t sub_245277560(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[3];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v36 = a2;
  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PairingRelationship();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v35 = (uint64_t)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v37 = (uint64_t)&v33 - v12;
  v13 = sub_2453879D4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (uint64_t *)((char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)(v3 + 232);
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BEE5610], v13);
  v34 = v17;
  v18 = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v18 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_5;
  }
  swift_beginAccess();
  sub_24525E4F0(v3 + 192, (uint64_t)v38);
  v19 = v39;
  v20 = v40;
  __swift_project_boxed_opaque_existential_1(v38, v39);
  v18 = v36;
  MetadataStoring.pairingRelationship(remoteDeviceID:)(a1, v36, v19, *(_QWORD *)(v20 + 8), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_245263F80((uint64_t)v7, (uint64_t *)&unk_25744FAD0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    sub_2452B9768();
    swift_allocError();
    *v21 = 1;
    return swift_willThrow();
  }
  v16 = (_QWORD *)v3;
  v3 = a1;
  sub_2452B7AB8((uint64_t)v7, v37, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  if (qword_25744FD90 != -1)
    goto LABEL_10;
LABEL_5:
  v23 = sub_245387818();
  __swift_project_value_buffer(v23, (uint64_t)qword_257462FB0);
  swift_bridgeObjectRetain_n();
  v24 = sub_2453877F4();
  v25 = sub_245387D34();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = v18;
    v28 = swift_slowAlloc();
    v38[0] = v28;
    *(_DWORD *)v26 = 136446210;
    swift_bridgeObjectRetain();
    v41 = sub_2453816D8(v3, v27, v38);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_245256000, v24, v25, "Unpairing device: %{public}s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v28, -1, -1);
    MEMORY[0x24953317C](v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v29 = v37;
  v30 = v35;
  sub_2452B792C(v37, v35, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  v31 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = v16;
  sub_2452B7AB8(v30, v32 + v31, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  swift_retain();
  sub_2452E06E8(0xD000000000000015, 0x80000002453937C0, (uint64_t)v34, (uint64_t)sub_2452BC7D4, v32, 0.0);
  swift_release();
  return sub_2452B7B5C(v29, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
}

Swift::Void __swiftcall Replicator.removePairingRelationship(remoteDeviceID:)(Swift::String remoteDeviceID)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  NSObject *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[6];

  v2 = v1;
  object = remoteDeviceID._object;
  countAndFlagsBits = remoteDeviceID._countAndFlagsBits;
  v5 = *(NSObject **)(v2 + 232);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v2;
  v6[3] = countAndFlagsBits;
  v6[4] = object;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_2452B526C;
  *(_QWORD *)(v7 + 24) = v6;
  v9[4] = sub_2452643B4;
  v9[5] = v7;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_24525B888;
  v9[3] = &block_descriptor_121;
  v8 = _Block_copy(v9);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v5, v8);
  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v5 & 1) != 0)
    __break(1u);
}

Swift::Void __swiftcall Replicator._queue_removePairingRelationship(remoteDeviceID:)(Swift::String remoteDeviceID)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  void *object;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v2 = v1;
  object = remoteDeviceID._object;
  countAndFlagsBits = remoteDeviceID._countAndFlagsBits;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PairingRelationship();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2453879D4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v2 + 232);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5610], v11);
  v16 = v15;
  LOBYTE(v15) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    swift_beginAccess();
    sub_24525E4F0(v2 + 192, (uint64_t)v28);
    v18 = v29;
    v17 = v30;
    __swift_project_boxed_opaque_existential_1(v28, v29);
    MetadataStoring.pairingRelationship(remoteDeviceID:)(countAndFlagsBits, (uint64_t)object, v18, *(_QWORD *)(v17 + 8), (uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_245263F80((uint64_t)v6, (uint64_t *)&unk_25744FAD0);
    }
    else
    {
      sub_2452B7AB8((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
      sub_245277D6C((uint64_t)v10);
      sub_24525E4F0(v2 + 192, (uint64_t)v28);
      v19 = v29;
      v20 = v30;
      __swift_project_boxed_opaque_existential_1(v28, v29);
      v21 = &v10[*(int *)(v7 + 20)];
      v22 = *(_QWORD *)v21;
      v23 = *((_QWORD *)v21 + 1);
      v24 = *(_QWORD *)(v20 + 16);
      v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 96);
      swift_bridgeObjectRetain();
      v25(v22, v23, v19, v24);
      swift_bridgeObjectRelease();
      sub_2452B7B5C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_245277D6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  _BOOL4 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  os_log_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  int64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  unsigned int (*v114)(uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  unsigned int (*v116)(uint64_t, uint64_t, uint64_t);
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  char v124;
  int v125;
  int v126;
  _QWORD *v127;
  int v128;
  char v129;
  unint64_t v130;
  uint64_t v131;
  _BOOL8 v132;
  uint64_t v133;
  char v134;
  _QWORD *v135;
  unint64_t v136;
  char v137;
  uint64_t v138;
  BOOL v139;
  uint64_t v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  NSObject *v168;
  uint64_t v169;
  void (*v170)(char *, unint64_t, uint64_t);
  uint64_t v171;
  char *v172;
  void (*v173)(char *, uint64_t);
  NSObject *v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  char v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  unint64_t v190;
  void (*v191)(unint64_t, uint64_t, uint64_t);
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  char v202;
  void (*v203)(char *, uint64_t);
  char v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  NSObject *v212;
  os_log_type_t v213;
  int v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  unint64_t v219;
  NSObject *v220;
  os_log_type_t v221;
  int v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  uint64_t v226;
  unint64_t v227;
  uint64_t v228;
  size_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  _QWORD *v240;
  uint64_t v241;
  uint64_t v242;
  char v243;
  uint64_t v244;
  uint64_t v245;
  unint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  unint64_t v253;
  unint64_t v254;
  unint64_t v255;
  unint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  unint64_t v261;
  _QWORD *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  _QWORD *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  unint64_t v272;
  char v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t ObjectType;
  void (*v277)(uint64_t *, char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v278;
  uint64_t result;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  unint64_t v283;
  uint64_t v284;
  _QWORD *v285;
  __int128 v286;
  uint64_t *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  char *v292;
  uint64_t v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  unint64_t v299;
  uint64_t v300;
  int64_t v301;
  char *v302;
  _QWORD *v303;
  uint64_t v304;
  int64_t v305;
  os_log_t v306;
  char *v307;
  unint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  _QWORD *v313;
  __int128 v314;
  unsigned int (*v315)(uint64_t, uint64_t, uint64_t);
  uint64_t v316;
  void (**v317)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v318;
  _QWORD *v319;
  char *v320;
  char *v321;
  char *v322;
  uint64_t v323;
  _QWORD *v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  _QWORD *v334;
  uint64_t v335;
  uint64_t v336;

  v298 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452360);
  v3 = MEMORY[0x24BDAC7A8](v2);
  isUniquelyReferenced_nonNull_native = (unint64_t)&v280 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v307 = (char *)&v280 - v6;
  v328 = sub_245387740();
  v330 = *(_QWORD *)(v328 - 8);
  v7 = MEMORY[0x24BDAC7A8](v328);
  v294 = (char *)&v280 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v320 = (char *)&v280 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v322 = (char *)&v280 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v292 = (char *)&v280 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v280 - v15;
  v17 = type metadata accessor for RecordMetadata();
  v326 = *(_QWORD *)(v17 - 8);
  v327 = v17;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v293 = (uint64_t)&v280 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v295 = (uint64_t)&v280 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v312 = (uint64_t)&v280 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F848);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v311 = (uint64_t)&v280 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v306 = (os_log_t)((char *)&v280 - v27);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v280 - v28;
  v300 = type metadata accessor for Record.ID(0);
  v331 = *(_QWORD *)(v300 - 8);
  v30 = MEMORY[0x24BDAC7A8](v300);
  v321 = (char *)&v280 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v288 = (uint64_t)&v280 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v285 = (uint64_t *)((char *)&v280 - v35);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v291 = (char *)&v280 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v319 = (uint64_t *)((char *)&v280 - v39);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v324 = (uint64_t *)((char *)&v280 - v41);
  MEMORY[0x24BDAC7A8](v40);
  v315 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v280 - v42);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452368);
  v44 = MEMORY[0x24BDAC7A8](v43);
  v318 = (char *)&v280 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = MEMORY[0x24BDAC7A8](v44);
  v316 = (uint64_t)&v280 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v317 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v280 - v49);
  MEMORY[0x24BDAC7A8](v48);
  v325 = (uint64_t)&v280 - v50;
  v329 = type metadata accessor for MetadataRecordPredicate();
  v51 = MEMORY[0x24BDAC7A8](v329);
  v297 = (uint64_t)&v280 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v51);
  v296 = (uint64_t)&v280 - v53;
  v323 = type metadata accessor for PairingRelationship();
  v54 = MEMORY[0x24BDAC7A8](v323);
  *(_QWORD *)&v314 = (char *)&v280 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v54);
  v57 = (uint64_t)&v280 - v56;
  v58 = sub_2453879D4();
  v59 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v61 = (uint64_t *)((char *)&v280 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0));
  v304 = v1;
  v62 = *(void **)(v1 + 232);
  *v61 = v62;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v59 + 104))(v61, *MEMORY[0x24BEE5610], v58);
  v63 = v62;
  LOBYTE(v62) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v59 + 8))(v61, v58);
  if ((v62 & 1) != 0)
  {
    v313 = v29;
    v302 = v16;
    if (qword_25744FD90 == -1)
      goto LABEL_3;
    goto LABEL_162;
  }
  while (2)
  {
    __break(1u);
LABEL_162:
    swift_once();
LABEL_3:
    v64 = sub_245387818();
    v65 = __swift_project_value_buffer(v64, (uint64_t)qword_257462FB0);
    sub_2452B792C(v298, v57, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v66 = v304;
    swift_retain();
    v290 = v65;
    v67 = sub_2453877F4();
    v68 = sub_245387D34();
    v69 = os_log_type_enabled(v67, v68);
    v308 = isUniquelyReferenced_nonNull_native;
    if (v69)
    {
      v70 = swift_slowAlloc();
      v71 = swift_slowAlloc();
      v334 = (_QWORD *)v71;
      *(_DWORD *)v70 = 136446466;
      v72 = *(_QWORD *)(v66 + 488);
      v73 = *(_QWORD *)(v66 + 496);
      swift_bridgeObjectRetain();
      v333 = sub_2453816D8(v72, v73, (uint64_t *)&v334);
      sub_245387E0C();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v70 + 12) = 2082;
      sub_2452B792C(v57, v314, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v74 = sub_245387B48();
      v333 = sub_2453816D8(v74, v75, (uint64_t *)&v334);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_2452B7B5C(v57, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      _os_log_impl(&dword_245256000, v67, v68, "(%{public}s) Discarding data for pairing relationship: %{public}s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v71, -1, -1);
      MEMORY[0x24953317C](v70, -1, -1);
    }
    else
    {
      swift_release();
      sub_2452B7B5C(v57, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    }

    v76 = (uint64_t)v317;
    v77 = v329;
    v78 = v296;
    v79 = v298;
    sub_2452B792C(v298, v296 + *(int *)(v329 + 32), (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    *(_WORD *)v78 = 256;
    *(_BYTE *)(v78 + 2) = 2;
    *(_QWORD *)(v78 + 8) = 0;
    v80 = v66 + 192;
    swift_beginAccess();
    sub_24525E4F0(v66 + 192, (uint64_t)&v334);
    v81 = v335;
    v82 = v336;
    __swift_project_boxed_opaque_existential_1(&v334, v335);
    v83 = MetadataStoring.recordVersions(matching:)(v78, v81, *(_QWORD *)(v82 + 8));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v334);
    v84 = v297;
    sub_2452B792C(v79, v297 + *(int *)(v77 + 32), (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    *(_WORD *)v84 = 1;
    *(_BYTE *)(v84 + 2) = 1;
    *(_QWORD *)(v84 + 8) = 0;
    v329 = v80;
    sub_24525E4F0(v80, (uint64_t)&v334);
    v85 = v335;
    v86 = v336;
    __swift_project_boxed_opaque_existential_1(&v334, v335);
    v310 = MetadataStoring.recordVersions(matching:)(v84, v85, *(_QWORD *)(v86 + 8));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v334);
    v323 = 0;
    v87 = *(_QWORD *)(v83 + 64);
    v303 = (_QWORD *)(v83 + 64);
    v309 = v83;
    v88 = 1 << *(_BYTE *)(v83 + 32);
    v89 = -1;
    if (v88 < 64)
      v89 = ~(-1 << v88);
    v57 = v89 & v87;
    v305 = (unint64_t)(v88 + 63) >> 6;
    v301 = v305 - 1;
    v90 = (_QWORD *)MEMORY[0x24BEE4B00];
    isUniquelyReferenced_nonNull_native = (unint64_t)type metadata accessor for Record.ID;
    v314 = xmmword_245389A60;
    v91 = v328;
    v92 = v330;
    while (2)
    {
      if (v57)
      {
        v101 = __clz(__rbit64(v57));
        v57 &= v57 - 1;
        v102 = v101 | (v323 << 6);
        v103 = v326;
        goto LABEL_14;
      }
      v107 = v323 + 1;
      v103 = v326;
      if (__OFADD__(v323, 1))
        goto LABEL_157;
      if (v107 >= v305)
        goto LABEL_32;
      v108 = v303[v107];
      if (v108)
        goto LABEL_18;
      v109 = v323 + 2;
      ++v323;
      if (v107 + 1 >= v305)
        goto LABEL_32;
      v108 = v303[v109];
      if (v108)
        goto LABEL_21;
      v323 = v107 + 1;
      if (v107 + 2 >= v305)
        goto LABEL_32;
      v108 = v303[v107 + 2];
      if (v108)
      {
        v107 += 2;
LABEL_18:
        v57 = (v108 - 1) & v108;
        v102 = __clz(__rbit64(v108)) + (v107 << 6);
        v323 = v107;
LABEL_14:
        v104 = v309;
        sub_2452B792C(*(_QWORD *)(v309 + 48) + *(_QWORD *)(v331 + 72) * v102, v76, type metadata accessor for Record.ID);
        v105 = *(_QWORD *)(v104 + 56) + *(_QWORD *)(v92 + 72) * v102;
        v106 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452D90);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v92 + 16))(v76 + *(int *)(v106 + 48), v105, v91);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56))(v76, 0, 1, v106);
        goto LABEL_33;
      }
      v109 = v107 + 3;
      v323 = v107 + 2;
      if (v107 + 3 >= v305)
        goto LABEL_32;
      v108 = v303[v109];
      if (v108)
      {
LABEL_21:
        v107 = v109;
        goto LABEL_18;
      }
      while (1)
      {
        v107 = v109 + 1;
        if (__OFADD__(v109, 1))
        {
          __break(1u);
          goto LABEL_164;
        }
        if (v107 >= v305)
          break;
        v108 = v303[v107];
        ++v109;
        if (v108)
          goto LABEL_18;
      }
      v323 = v301;
LABEL_32:
      v110 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452D90);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v76, 1, 1, v110);
      v57 = 0;
LABEL_33:
      v111 = v325;
      sub_2452BC850(v76, v325, &qword_257452368);
      v112 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452D90);
      v113 = *(char **)(v112 - 8);
      v114 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v113 + 6);
      if (v114(v111, 1, v112) == 1)
      {
        v315 = v114;
        v317 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v113;
        v313 = v90;
        swift_release();
        v142 = 0;
        v143 = 1 << *(_BYTE *)(v310 + 32);
        if (v143 < 64)
          v144 = ~(-1 << v143);
        else
          v144 = -1;
        v145 = v144 & *(_QWORD *)(v310 + 64);
        v146 = (unint64_t)(v143 + 63) >> 6;
        v287 = &v333;
        v282 = v146 - 1;
        v309 = v146;
        v283 = v146 - 5;
        v305 = v310 + 64;
        v289 = v310 + 104;
        *(_QWORD *)&v141 = 136446466;
        v286 = v141;
        v284 = MEMORY[0x24BEE4AD8] + 8;
        v147 = v308;
        v148 = (uint64_t)v321;
        v149 = v295;
        v57 = (uint64_t)v318;
        v312 = v112;
        if (v145)
        {
LABEL_54:
          v324 = (_QWORD *)((v145 - 1) & v145);
          v325 = v142;
          v150 = __clz(__rbit64(v145)) | (v142 << 6);
          goto LABEL_55;
        }
        while (1)
        {
          v164 = v142 + 1;
          if (__OFADD__(v142, 1))
            goto LABEL_158;
          if (v164 >= v309)
          {
            v324 = 0;
            v325 = v142;
            v153 = 1;
          }
          else
          {
            v165 = *(_QWORD *)(v305 + 8 * v164);
            if (v165)
              goto LABEL_65;
            if (v142 + 2 >= v309)
            {
              v324 = 0;
              v325 = v142 + 1;
              v153 = 1;
            }
            else
            {
              v165 = *(_QWORD *)(v305 + 8 * (v142 + 2));
              if (v165)
              {
                v164 = v142 + 2;
                goto LABEL_65;
              }
              if (v142 + 3 >= v309)
              {
                v324 = 0;
                v325 = v142 + 2;
                v153 = 1;
              }
              else
              {
                v165 = *(_QWORD *)(v305 + 8 * (v142 + 3));
                if (v165)
                {
                  v164 = v142 + 3;
LABEL_65:
                  v324 = (_QWORD *)((v165 - 1) & v165);
                  v325 = v164;
                  v150 = __clz(__rbit64(v165)) + (v164 << 6);
LABEL_55:
                  v151 = v310;
                  sub_2452B792C(*(_QWORD *)(v310 + 48) + *(_QWORD *)(v331 + 72) * v150, v57, type metadata accessor for Record.ID);
                  v152 = *(_QWORD *)(v151 + 56) + *(_QWORD *)(v92 + 72) * v150;
                  v112 = v312;
                  (*(void (**)(uint64_t, unint64_t, uint64_t))(v92 + 16))(v57 + *(int *)(v312 + 48), v152, v91);
                  v153 = 0;
                  goto LABEL_56;
                }
                v164 = v142 + 4;
                if (v142 + 4 >= v309)
                {
                  v324 = 0;
                  v325 = v142 + 3;
                  v153 = 1;
                }
                else
                {
                  v165 = *(_QWORD *)(v305 + 8 * v164);
                  if (v165)
                    goto LABEL_65;
                  while (v283 != v142)
                  {
                    v165 = *(_QWORD *)(v289 + 8 * v142++);
                    if (v165)
                    {
                      v164 = v142 + 4;
                      goto LABEL_65;
                    }
                  }
                  v324 = 0;
                  v153 = 1;
                  v325 = v282;
                }
              }
            }
          }
LABEL_56:
          v317[7](v57, v153, 1, v112);
          v154 = v316;
          sub_2452BC850(v57, v316, &qword_257452368);
          if (v315(v154, 1, v112) == 1)
            break;
          isUniquelyReferenced_nonNull_native = v147;
          v323 = v154 + *(int *)(v112 + 48);
          v155 = v319;
          sub_2452B7AB8(v154, (uint64_t)v319, type metadata accessor for Record.ID);
          sub_24525E4F0(v329, (uint64_t)&v334);
          v156 = v335;
          v157 = v336;
          __swift_project_boxed_opaque_existential_1(&v334, v335);
          v158 = *(_QWORD *)(v157 + 8);
          v159 = v311;
          MetadataStoring.metadata(for:)(v155, v156, v158, v311);
          v160 = v327;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v159, 1, v327) == 1)
          {
            sub_2452B7B5C((uint64_t)v155, type metadata accessor for Record.ID);
            sub_245263F80(v159, &qword_25744F848);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v334);
            v92 = v330;
            v57 = (uint64_t)v318;
            goto LABEL_61;
          }
          sub_2452B7AB8(v159, v149, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v334);
          v161 = *(int *)(v160 + 24);
          v162 = v149;
          v163 = *(_QWORD *)(v149 + v161);
          v92 = v330;
          if (!v163)
          {
            sub_2452B7B5C(v162, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
            sub_2452B7B5C((uint64_t)v319, type metadata accessor for Record.ID);
            v149 = v162;
            v57 = (uint64_t)v318;
LABEL_61:
            (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v323, v91);
            v145 = (unint64_t)v324;
            v142 = v325;
            if (v324)
              goto LABEL_54;
            continue;
          }
          v166 = sub_24525C6C4(&qword_25744F6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
          swift_bridgeObjectRetain();
          v301 = v166;
          v167 = sub_245387CE0();
          v57 = (uint64_t)v318;
          v300 = *(_QWORD *)(v163 + 16);
          v281 = v163;
          if (v300)
          {
            v168 = 0;
            v299 = v163 + ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80));
            v169 = *(_QWORD *)(v92 + 72);
            v170 = *(void (**)(char *, unint64_t, uint64_t))(v92 + 16);
            v91 = v328;
            while (1)
            {
              v175 = v167;
              v306 = v168;
              v176 = v302;
              v170(v302, v299 + v169 * (_QWORD)v168, v91);
              v303 = *(_QWORD **)(v92 + 56);
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v303)(v176, 0, 1, v91);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v176, 1, v91) == 1)
                break;
              (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v322, v176, v91);
              swift_bridgeObjectRetain();
              v177 = sub_245387AAC();
              v178 = v175;
              v179 = -1 << *(_BYTE *)(v175 + 32);
              v180 = v177 & ~v179;
              isUniquelyReferenced_nonNull_native = v175 + 56;
              if (((*(_QWORD *)(v175 + 56 + ((v180 >> 3) & 0xFFFFFFFFFFFFF8)) >> v180) & 1) != 0)
              {
                v181 = ~v179;
                while (1)
                {
                  v182 = v320;
                  v183 = v328;
                  v170(v320, *(_QWORD *)(v178 + 48) + v180 * v169, v328);
                  sub_24525C6C4(&qword_257452430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
                  v184 = sub_245387AE8();
                  v173 = *(void (**)(char *, uint64_t))(v92 + 8);
                  v173(v182, v183);
                  if ((v184 & 1) != 0)
                    break;
                  v180 = (v180 + 1) & v181;
                  v92 = v330;
                  v178 = v175;
                  if (((*(_QWORD *)(isUniquelyReferenced_nonNull_native + ((v180 >> 3) & 0xFFFFFFFFFFFFF8)) >> v180) & 1) == 0)
                    goto LABEL_73;
                }
                v167 = v175;
                swift_bridgeObjectRelease();
                v91 = v328;
                v172 = v322;
              }
              else
              {
LABEL_73:
                swift_bridgeObjectRelease();
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v171 = (uint64_t)v320;
                v172 = v322;
                v91 = v328;
                v170(v320, (unint64_t)v322, v328);
                v334 = (_QWORD *)v178;
                sub_245326228(v171, v180, isUniquelyReferenced_nonNull_native);
                v167 = (uint64_t)v334;
                swift_bridgeObjectRelease();
                v173 = *(void (**)(char *, uint64_t))(v92 + 8);
              }
              v174 = ((char *)&v306->isa + 1);
              v173(v172, v91);
              v168 = v174;
              v147 = v308;
              v148 = (uint64_t)v321;
              v92 = v330;
              v57 = (uint64_t)v318;
              if (v174 == v300)
                goto LABEL_87;
            }
            v167 = v175;
          }
          else
          {
            v303 = *(_QWORD **)(v92 + 56);
            v91 = v328;
LABEL_87:
            ((void (*)(char *, uint64_t, uint64_t, uint64_t))v303)(v302, 1, 1, v91);
          }
          swift_bridgeObjectRelease();
          v185 = v298;
          if ((sub_24531D6B8(v298, v167) & 1) != 0)
          {
            v300 = v167;
            __swift_instantiateConcreteTypeFromMangledName(&qword_257450210);
            v186 = v91;
            v187 = v330;
            v188 = (*(unsigned __int8 *)(v330 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v330 + 80);
            v306 = *(os_log_t *)(v330 + 72);
            v189 = swift_allocObject();
            *(_OWORD *)(v189 + 16) = v314;
            v190 = v189 + v188;
            v191 = *(void (**)(unint64_t, uint64_t, uint64_t))(v187 + 16);
            v191(v189 + v188, v185, v186);
            v192 = sub_245387CE0();
            v193 = v292;
            v299 = v190;
            v191((unint64_t)v292, v190, v186);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))v303)(v193, 0, 1, v186);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v187 + 48))(v193, 1, v186) == 1)
            {
              v194 = (uint64_t)v291;
              v195 = v300;
            }
            else
            {
              v281 = v189;
              v196 = v294;
              (*(void (**)(char *, char *, uint64_t))(v187 + 32))(v294, v193, v186);
              swift_bridgeObjectRetain();
              v197 = sub_245387AAC();
              v198 = -1 << *(_BYTE *)(v192 + 32);
              isUniquelyReferenced_nonNull_native = v197 & ~v198;
              if (((*(_QWORD *)(v192 + 56 + ((isUniquelyReferenced_nonNull_native >> 3) & 0xFFFFFFFFFFFFF8)) >> isUniquelyReferenced_nonNull_native) & 1) != 0)
              {
                v199 = ~v198;
                while (1)
                {
                  v200 = v320;
                  v201 = v328;
                  v191((unint64_t)v320, *(_QWORD *)(v192 + 48) + isUniquelyReferenced_nonNull_native * (_QWORD)v306, v328);
                  sub_24525C6C4(&qword_257452430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
                  v202 = sub_245387AE8();
                  v203 = *(void (**)(char *, uint64_t))(v187 + 8);
                  v203(v200, v201);
                  if ((v202 & 1) != 0)
                    break;
                  isUniquelyReferenced_nonNull_native = (isUniquelyReferenced_nonNull_native + 1) & v199;
                  v187 = v330;
                  v196 = v294;
                  if (((*(_QWORD *)(v192 + 56 + ((isUniquelyReferenced_nonNull_native >> 3) & 0xFFFFFFFFFFFFF8)) >> isUniquelyReferenced_nonNull_native) & 1) == 0)
                    goto LABEL_97;
                }
                swift_bridgeObjectRelease();
                v206 = v328;
                v207 = v294;
              }
              else
              {
LABEL_97:
                swift_bridgeObjectRelease();
                v204 = swift_isUniquelyReferenced_nonNull_native();
                v205 = (uint64_t)v320;
                v206 = v328;
                v191((unint64_t)v320, (uint64_t)v196, v328);
                v334 = (_QWORD *)v192;
                sub_245326228(v205, isUniquelyReferenced_nonNull_native, v204);
                v192 = (uint64_t)v334;
                swift_bridgeObjectRelease();
                v207 = v196;
                v203 = *(void (**)(char *, uint64_t))(v187 + 8);
              }
              v208 = v292;
              v203(v207, v206);
              ((void (*)(char *, uint64_t, uint64_t, uint64_t))v303)(v208, 1, 1, v206);
              v194 = (uint64_t)v291;
              v195 = v300;
            }
            swift_setDeallocating();
            swift_arrayDestroy();
            swift_deallocClassInstance();
            v112 = v312;
            if (*(_QWORD *)(v192 + 16) > *(_QWORD *)(v195 + 16) >> 3)
            {
              v209 = sub_2453491F0(v192, v195);
              swift_bridgeObjectRelease();
            }
            else
            {
              v334 = (_QWORD *)v195;
              sub_245348DA8(v192);
              swift_bridgeObjectRelease();
              v209 = (uint64_t)v334;
            }
            v57 = (uint64_t)v318;
            v210 = v304;
            if (*(_QWORD *)(v209 + 16))
            {
              v211 = v288;
              sub_2452B792C((uint64_t)v319, v288, type metadata accessor for Record.ID);
              swift_retain();
              v212 = sub_2453877F4();
              v213 = sub_245387D34();
              v214 = v213;
              if (os_log_type_enabled(v212, v213))
              {
                v215 = swift_slowAlloc();
                v216 = swift_slowAlloc();
                v334 = (_QWORD *)v216;
                *(_DWORD *)v215 = v286;
                v306 = v212;
                isUniquelyReferenced_nonNull_native = *(_QWORD *)(v210 + 488);
                v217 = *(_QWORD *)(v210 + 496);
                swift_bridgeObjectRetain();
                v332 = sub_2453816D8(isUniquelyReferenced_nonNull_native, v217, (uint64_t *)&v334);
                LODWORD(v303) = v214;
                sub_245387E0C();
                swift_release();
                swift_bridgeObjectRelease();
                *(_WORD *)(v215 + 12) = 2082;
                v218 = Record.ID.description.getter();
                v332 = sub_2453816D8(v218, v219, (uint64_t *)&v334);
                sub_245387E0C();
                swift_bridgeObjectRelease();
                sub_2452B7B5C(v211, type metadata accessor for Record.ID);
                v212 = v306;
                _os_log_impl(&dword_245256000, v306, (os_log_type_t)v303, "(%{public}s) Removing destination from record ID: %{public}s", (uint8_t *)v215, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x24953317C](v216, -1, -1);
                MEMORY[0x24953317C](v215, -1, -1);
              }
              else
              {
                swift_release();
                sub_2452B7B5C(v211, type metadata accessor for Record.ID);
              }

              v148 = (uint64_t)v321;
              v228 = v293;
              sub_2452B792C(v295, v293, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
              v229 = sub_24532D534(v209);
              swift_bridgeObjectRelease();
              v230 = *(int *)(v327 + 24);
              swift_bridgeObjectRelease();
              *(_QWORD *)(v228 + v230) = v229;
              sub_24525E4F0(v329, (uint64_t)&v334);
              v231 = v335;
              v232 = v336;
              __swift_project_boxed_opaque_existential_1(&v334, v335);
              __swift_instantiateConcreteTypeFromMangledName(&qword_257450230);
              v233 = v326;
              v234 = (*(unsigned __int8 *)(v326 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v326 + 80);
              v235 = swift_allocObject();
              *(_OWORD *)(v235 + 16) = v314;
              v236 = v235 + v234;
              v237 = v293;
              sub_2452B792C(v293, v236, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
              v238 = *(_QWORD *)(v232 + 16);
              v103 = v233;
              (*(void (**)(uint64_t, uint64_t))(v238 + 104))(v235, v231);
              v149 = v295;
              swift_bridgeObjectRelease();
              sub_2452B7B5C(v149, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
              sub_2452B7B5C((uint64_t)v319, type metadata accessor for Record.ID);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v334);
              sub_2452B7B5C(v237, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
              v91 = v328;
              v57 = (uint64_t)v318;
            }
            else
            {
              swift_bridgeObjectRelease();
              sub_2452B792C((uint64_t)v319, v194, type metadata accessor for Record.ID);
              swift_retain();
              v220 = sub_2453877F4();
              v221 = sub_245387D34();
              v222 = v221;
              if (os_log_type_enabled(v220, v221))
              {
                v223 = swift_slowAlloc();
                v224 = swift_slowAlloc();
                v334 = (_QWORD *)v224;
                *(_DWORD *)v223 = v286;
                v306 = v220;
                isUniquelyReferenced_nonNull_native = *(_QWORD *)(v210 + 488);
                v225 = *(_QWORD *)(v210 + 496);
                swift_bridgeObjectRetain();
                v332 = sub_2453816D8(isUniquelyReferenced_nonNull_native, v225, (uint64_t *)&v334);
                LODWORD(v303) = v222;
                sub_245387E0C();
                swift_release();
                swift_bridgeObjectRelease();
                *(_WORD *)(v223 + 12) = 2082;
                v226 = Record.ID.description.getter();
                v332 = sub_2453816D8(v226, v227, (uint64_t *)&v334);
                sub_245387E0C();
                swift_bridgeObjectRelease();
                sub_2452B7B5C(v194, type metadata accessor for Record.ID);
                v220 = v306;
                _os_log_impl(&dword_245256000, v306, (os_log_type_t)v303, "(%{public}s) Removing record ID: %{public}s", (uint8_t *)v223, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x24953317C](v224, -1, -1);
                MEMORY[0x24953317C](v223, -1, -1);
              }
              else
              {
                swift_release();
                sub_2452B7B5C(v194, type metadata accessor for Record.ID);
              }

              v148 = (uint64_t)v321;
              v239 = v295;
              v240 = v285;
              sub_2452B792C((uint64_t)v319, (uint64_t)v285, type metadata accessor for Record.ID);
              v241 = v293;
              sub_2452B792C(v239, v293, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
              v242 = (uint64_t)v313;
              v243 = swift_isUniquelyReferenced_nonNull_native();
              v334 = (_QWORD *)v242;
              sub_2453282A4(v241, v240, v243);
              v313 = v334;
              swift_bridgeObjectRelease();
              sub_2452B7B5C((uint64_t)v240, type metadata accessor for Record.ID);
              sub_24525E4F0(v329, (uint64_t)&v334);
              v244 = v335;
              v245 = v336;
              __swift_project_boxed_opaque_existential_1(&v334, v335);
              __swift_instantiateConcreteTypeFromMangledName(&qword_257450270);
              v246 = (*(unsigned __int8 *)(v331 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v331 + 80);
              v247 = swift_allocObject();
              *(_OWORD *)(v247 + 16) = v314;
              v248 = v247 + v246;
              v249 = (uint64_t)v319;
              sub_2452B792C((uint64_t)v319, v248, type metadata accessor for Record.ID);
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v245 + 16) + 112))(v247, v244);
              v149 = v295;
              swift_bridgeObjectRelease();
              sub_2452B7B5C(v149, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
              sub_2452B7B5C(v249, type metadata accessor for Record.ID);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v334);
              v103 = v326;
              v91 = v328;
            }
            v142 = v325;
            v147 = v308;
          }
          else
          {
            swift_bridgeObjectRelease();
            v149 = v295;
            sub_2452B7B5C(v295, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
            sub_2452B7B5C((uint64_t)v319, type metadata accessor for Record.ID);
            v142 = v325;
            v103 = v326;
            v112 = v312;
          }
          v92 = v330;
          (*(void (**)(uint64_t, uint64_t))(v330 + 8))(v323, v91);
          v145 = (unint64_t)v324;
          if (v324)
            goto LABEL_54;
        }
        swift_release();
        v250 = (uint64_t)(v313 + 8);
        v251 = 1 << *((_BYTE *)v313 + 32);
        v252 = -1;
        if (v251 < 64)
          v252 = ~(-1 << v251);
        v253 = v252 & v313[8];
        v330 = v304 + 240;
        swift_beginAccess();
        v57 = 0;
        v254 = (unint64_t)(v251 + 63) >> 6;
        v328 = v250;
        v329 = v254;
        v327 = v254 - 5;
        v324 = (_QWORD *)(v254 - 1);
        v325 = v250 + 40;
        isUniquelyReferenced_nonNull_native = (unint64_t)v307;
        while (2)
        {
          if (v253)
          {
            v255 = __clz(__rbit64(v253));
            v253 &= v253 - 1;
            v256 = v255 | (v57 << 6);
            goto LABEL_130;
          }
          v260 = v57 + 1;
          if (__OFADD__(v57, 1))
            goto LABEL_159;
          if (v260 >= v329)
          {
            v262 = (_QWORD *)v57;
          }
          else
          {
            v261 = *(_QWORD *)(v328 + 8 * v260);
            if (v261)
            {
LABEL_134:
              v253 = (v261 - 1) & v261;
              v256 = __clz(__rbit64(v261)) + (v260 << 6);
              v57 = v260;
LABEL_130:
              v257 = (uint64_t)v313;
              sub_2452B792C(v313[6] + *(_QWORD *)(v331 + 72) * v256, v147, type metadata accessor for Record.ID);
              v258 = *(_QWORD *)(v257 + 56) + *(_QWORD *)(v103 + 72) * v256;
              v259 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
              sub_2452B792C(v258, v147 + *(int *)(v259 + 48), (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v259 - 8) + 56))(v147, 0, 1, v259);
              v148 = (uint64_t)v321;
LABEL_137:
              sub_2452BC850(v147, isUniquelyReferenced_nonNull_native, &qword_257452360);
              v264 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
              if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v264 - 8) + 48))(isUniquelyReferenced_nonNull_native, 1, v264) == 1)
              {
                swift_release();
                sub_2452B7B5C(v297, (uint64_t (*)(_QWORD))type metadata accessor for MetadataRecordPredicate);
                return sub_2452B7B5C(v296, (uint64_t (*)(_QWORD))type metadata accessor for MetadataRecordPredicate);
              }
              v265 = *(int *)(v264 + 48);
              sub_2452B7AB8(isUniquelyReferenced_nonNull_native, v148, type metadata accessor for Record.ID);
              v266 = *(_QWORD *)v330;
              if (*(_QWORD *)(*(_QWORD *)v330 + 16))
              {
                v267 = (_QWORD *)v148;
                v268 = *(_QWORD *)(v148 + 40);
                v270 = v267[3];
                v269 = v267[4];
                v271 = v267[2];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v272 = sub_2452C1EB4(v271, v270, v269, v268);
                if ((v273 & 1) != 0)
                {
                  v274 = *(_QWORD *)(*(_QWORD *)(v266 + 56) + 8 * v272);
                  swift_retain();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v332 = v304;
                  if (MEMORY[0x24953323C](v274 + 16))
                  {
                    v275 = *(_QWORD *)(v274 + 24);
                    ObjectType = swift_getObjectType();
                    v277 = *(void (**)(uint64_t *, char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v275 + 40);
                    v278 = type metadata accessor for Replicator();
                    v277(&v332, v321, v278, &protocol witness table for Replicator, ObjectType, v275);
                    swift_release();
                    swift_unknownObjectRelease();
                  }
                  else
                  {
                    swift_release();
                  }
                }
                else
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v147 = v308;
                isUniquelyReferenced_nonNull_native = (unint64_t)v307;
                v103 = v326;
                v148 = (uint64_t)v321;
              }
              sub_2452B7B5C(v148, type metadata accessor for Record.ID);
              sub_2452B7B5C(isUniquelyReferenced_nonNull_native + v265, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
              continue;
            }
            v262 = (_QWORD *)(v57 + 1);
            if (v57 + 2 < v329)
            {
              v261 = *(_QWORD *)(v328 + 8 * (v57 + 2));
              if (v261)
              {
                v260 = v57 + 2;
                goto LABEL_134;
              }
              v262 = (_QWORD *)(v57 + 2);
              if (v57 + 3 < v329)
              {
                v261 = *(_QWORD *)(v328 + 8 * (v57 + 3));
                if (v261)
                {
                  v260 = v57 + 3;
                  goto LABEL_134;
                }
                v260 = v57 + 4;
                v262 = (_QWORD *)(v57 + 3);
                if (v57 + 4 < v329)
                {
                  v261 = *(_QWORD *)(v328 + 8 * v260);
                  if (v261)
                    goto LABEL_134;
                  while (v327 != v57)
                  {
                    v261 = *(_QWORD *)(v325 + 8 * v57++);
                    if (v261)
                    {
                      v260 = v57 + 4;
                      goto LABEL_134;
                    }
                  }
                  v262 = v324;
                }
              }
            }
          }
          break;
        }
        v263 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v263 - 8) + 56))(v147, 1, 1, v263);
        v253 = 0;
        v57 = (uint64_t)v262;
        goto LABEL_137;
      }
      v115 = v111;
      v116 = v315;
      sub_2452B7AB8(v115, (uint64_t)v315, type metadata accessor for Record.ID);
      v117 = v324;
      sub_2452B792C((uint64_t)v116, (uint64_t)v324, type metadata accessor for Record.ID);
      sub_24525E4F0(v329, (uint64_t)&v334);
      v118 = v335;
      v119 = v336;
      __swift_project_boxed_opaque_existential_1(&v334, v335);
      v120 = *(_QWORD *)(v119 + 8);
      v121 = (uint64_t)v313;
      MetadataStoring.metadata(for:)(v116, v118, v120, (uint64_t)v313);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v121, 1, v327) == 1)
      {
        sub_245263F80(v121, &qword_25744F848);
        swift_bridgeObjectRetain();
        v122 = sub_2452C2000(v117);
        v124 = v123;
        swift_bridgeObjectRelease();
        if ((v124 & 1) != 0)
        {
          v125 = swift_isUniquelyReferenced_nonNull_native();
          v332 = (uint64_t)v90;
          if (!v125)
          {
            sub_2452C816C();
            v90 = (_QWORD *)v332;
          }
          sub_2452B7B5C(v90[6] + *(_QWORD *)(v331 + 72) * v122, type metadata accessor for Record.ID);
          v94 = v306;
          sub_2452B7AB8(v90[7] + *(_QWORD *)(v103 + 72) * v122, (uint64_t)v306, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
          sub_245371948(v122, (uint64_t)v90);
          swift_bridgeObjectRelease();
          v93 = 0;
        }
        else
        {
          v93 = 1;
          v94 = v306;
        }
        v95 = v90;
        (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(v103 + 56))(v94, v93, 1, v327);
        sub_2452B7B5C((uint64_t)v117, type metadata accessor for Record.ID);
        sub_245263F80((uint64_t)v94, &qword_25744F848);
LABEL_11:
        v96 = v325 + *(int *)(v112 + 48);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v334);
        sub_24525E4F0(v329, (uint64_t)&v334);
        v97 = v335;
        v98 = v336;
        __swift_project_boxed_opaque_existential_1(&v334, v335);
        __swift_instantiateConcreteTypeFromMangledName(&qword_257450270);
        v99 = (*(unsigned __int8 *)(v331 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v331 + 80);
        v100 = swift_allocObject();
        *(_OWORD *)(v100 + 16) = v314;
        sub_2452B792C((uint64_t)v116, v100 + v99, type metadata accessor for Record.ID);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v98 + 16) + 112))(v100, v97);
        swift_bridgeObjectRelease();
        sub_2452B7B5C((uint64_t)v116, type metadata accessor for Record.ID);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v334);
        v92 = v330;
        v91 = v328;
        (*(void (**)(uint64_t, uint64_t))(v330 + 8))(v96, v328);
        v90 = v95;
        v76 = (uint64_t)v317;
        continue;
      }
      break;
    }
    sub_2452B7AB8(v121, v312, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v126 = swift_isUniquelyReferenced_nonNull_native();
    v127 = v117;
    v128 = v126;
    v332 = (uint64_t)v90;
    v130 = sub_2452C2000(v127);
    v131 = v90[2];
    v132 = (v129 & 1) == 0;
    v133 = v131 + v132;
    if (__OFADD__(v131, v132))
    {
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
      continue;
    }
    break;
  }
  v134 = v129;
  if (v90[3] >= v133)
  {
    if ((v128 & 1) == 0)
      sub_2452C816C();
    v135 = v324;
    v95 = (_QWORD *)v332;
    if ((v134 & 1) != 0)
      goto LABEL_48;
LABEL_43:
    v95[(v130 >> 6) + 8] |= 1 << v130;
    sub_2452B792C((uint64_t)v135, v95[6] + *(_QWORD *)(v331 + 72) * v130, type metadata accessor for Record.ID);
    sub_2452B7AB8(v312, v95[7] + *(_QWORD *)(v326 + 72) * v130, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v138 = v95[2];
    v139 = __OFADD__(v138, 1);
    v140 = v138 + 1;
    if (!v139)
    {
      v95[2] = v140;
      goto LABEL_49;
    }
    goto LABEL_160;
  }
  sub_2452C3C4C(v133, v128);
  v135 = v324;
  v136 = sub_2452C2000(v324);
  if ((v134 & 1) == (v137 & 1))
  {
    v130 = v136;
    v95 = (_QWORD *)v332;
    if ((v134 & 1) == 0)
      goto LABEL_43;
LABEL_48:
    sub_2452BC64C(v312, v95[7] + *(_QWORD *)(v326 + 72) * v130, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
LABEL_49:
    swift_bridgeObjectRelease();
    sub_2452B7B5C((uint64_t)v135, type metadata accessor for Record.ID);
    goto LABEL_11;
  }
LABEL_164:
  result = sub_2453883DC();
  __break(1u);
  return result;
}

Swift::Void __swiftcall Replicator.readvertiseIfNecessary()()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[6];

  v1 = *(NSObject **)(v0 + 232);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_2452B52A4;
  *(_QWORD *)(v2 + 24) = v0;
  v4[4] = sub_2452643B4;
  v4[5] = v2;
  v4[0] = MEMORY[0x24BDAC760];
  v4[1] = 1107296256;
  v4[2] = sub_24525B888;
  v4[3] = &block_descriptor_128;
  v3 = _Block_copy(v4);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v1 & 1) != 0)
    __break(1u);
}

uint64_t sub_24527A270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Replicator.pair(with:completion:)(a1, a2, a3, a4);
}

uint64_t sub_24527A290()
{
  return sub_245387D7C();
}

void sub_24527A2DC(uint64_t a1, uint64_t a2)
{
  Replicator.removePairingRelationship(remoteDeviceID:)(*(Swift::String *)&a1);
}

void sub_24527A2FC()
{
  Replicator.readvertiseIfNecessary()();
}

Swift::Void __swiftcall Replicator.validateRecords()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v12[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_245387920();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_245387950();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = *(_QWORD *)(v1 + 232);
  aBlock[4] = sub_2452B52BC;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525DD34;
  aBlock[3] = &block_descriptor_131;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_245387938();
  v12[1] = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_25744FF00, v3, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
  sub_245387E3C();
  MEMORY[0x2495320E4](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
}

unint64_t Replicator.localDeviceIdentifier.getter()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;

  if (v0[32])
  {
    v1 = v0[31];
  }
  else
  {
    v2 = v0[23];
    ObjectType = swift_getObjectType();
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
    if (v5)
      v1 = v4;
    else
      v1 = 0xD000000000000016;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Replicator.metadata(for:)(uint64_t a1)
{
  return sub_24527A588(a1, &qword_25744F848);
}

uint64_t sub_24527A588(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  return sub_245387D7C();
}

uint64_t sub_24527A5E4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v5 = a1 + 192;
  swift_beginAccess();
  sub_24525E4F0(v5, (uint64_t)v9);
  v6 = v10;
  v7 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  a3(a2, v6, *(_QWORD *)(v7 + 8));
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t Replicator.metadata(for:)()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF48);
  sub_245387D7C();
  return v1;
}

uint64_t sub_24527A6F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15[4];
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v11 = a1 + 192;
  swift_beginAccess();
  sub_24525E4F0(v11, (uint64_t)v16);
  v12 = v17;
  v13 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  v15[0] = a2;
  v15[1] = a3;
  v15[2] = a4;
  v15[3] = a5;
  *a6 = MetadataStoring.metadata(for:)(v15, v12, *(_QWORD *)(v13 + 8));
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

uint64_t Replicator.zoneIDs(for:)()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257450388);
  sub_245387D7C();
  return v1;
}

uint64_t sub_24527A808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v7 = a1 + 192;
  swift_beginAccess();
  sub_24525E4F0(v7, (uint64_t)v13);
  v8 = v14;
  v9 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  v10 = MetadataStoring.zones()(v8, *(_QWORD *)(v9 + 8));
  swift_bridgeObjectRetain();
  v11 = sub_2452B54B8(v10, a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  *a4 = v11;
  return result;
}

uint64_t Replicator.add(recordStubs:destination:schedule:)(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v5 = v3;
  v7 = *a2;
  v8 = *a3;
  v9 = *((_BYTE *)a3 + 8);
  v10 = *(_QWORD *)(v3 + 232);
  result = sub_245387D7C();
  if (!v4)
  {
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v5;
    *(_QWORD *)(v12 + 24) = a1;
    *(_QWORD *)(v12 + 32) = v7;
    *(_QWORD *)(v12 + 40) = v8;
    *(_BYTE *)(v12 + 48) = v9;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2452E06E8(0xD000000000000016, 0x80000002453930D0, v10, (uint64_t)sub_2452B5370, v12, 0.0);
    return swift_release();
  }
  return result;
}

uint64_t sub_24527A9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t isa;
  uint64_t v20;
  _QWORD v22[3];
  uint64_t v23;
  NSObject *v24;

  v6 = type metadata accessor for RecordStub();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Record.ID(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = MEMORY[0x24BEE4AF8];
  if (v14)
  {
    v22[0] = a3;
    v22[1] = a2;
    v24 = MEMORY[0x24BEE4AF8];
    sub_24532C528(0, v14, 0);
    v16 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v17 = *(_QWORD *)(v7 + 72);
    v15 = v24;
    v23 = v17;
    do
    {
      sub_2452B792C(v16, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RecordStub);
      sub_2452B792C((uint64_t)v9, (uint64_t)v13, type metadata accessor for Record.ID);
      sub_2452B7B5C((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RecordStub);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24532C528(0, (int64_t)v15[2].isa + 1, 1);
        v17 = v23;
        v15 = v24;
      }
      isa = (unint64_t)v15[2].isa;
      v18 = (unint64_t)v15[3].isa;
      if (isa >= v18 >> 1)
      {
        sub_24532C528(v18 > 1, isa + 1, 1);
        v17 = v23;
        v15 = v24;
      }
      v15[2].isa = (Class)(isa + 1);
      sub_2452B7AB8((uint64_t)v13, (uint64_t)v15+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * isa, type metadata accessor for Record.ID);
      v16 += v17;
      --v14;
    }
    while (v14);
    a3 = v22[0];
  }
  v20 = v22[2];
  sub_24527ABE4(v15);
  if (!v20)
  {
    v24 = a3;
    sub_24527B28C((uint64_t)v15, (uint64_t *)&v24);
  }
  return swift_bridgeObjectRelease();
}

os_log_t sub_24527ABE4(NSObject *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  os_log_t result;
  Class isa;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  os_log_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  os_log_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;

  v54 = a1;
  v55 = sub_245387740();
  v2 = *(_QWORD *)(v55 - 8);
  v3 = MEMORY[0x24BDAC7A8](v55);
  v50 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v51 = (char *)&v46 - v5;
  v6 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Record.ID(0);
  v52 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v49 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v48 = (uint64_t)&v46 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v46 - v14;
  v16 = sub_2453879D4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (uint64_t *)((char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v47 = v1;
  v20 = *(void **)(v1 + 232);
  *v19 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x24BEE5610], v16);
  v21 = v20;
  LOBYTE(v20) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_9;
  }
  result = v54;
  isa = v54[2].isa;
  if (!isa)
    return result;
  v24 = (char *)v54 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
  v25 = *(_QWORD *)(v52 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_2452B792C((uint64_t)v24, (uint64_t)v15, type metadata accessor for Record.ID);
    sub_2452B792C((uint64_t)&v15[*(int *)(v9 + 24)], (uint64_t)v8, type metadata accessor for Record.ID.Ownership);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v55) != 1)
      break;
    sub_2452B7B5C((uint64_t)v15, type metadata accessor for Record.ID);
    v24 += v25;
    isa = (Class)((char *)isa - 1);
    if (!isa)
      return (os_log_t)swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v9 = (uint64_t)v51;
  v17 = v55;
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v51, v8, v55);
  if (qword_25744FD90 != -1)
    goto LABEL_14;
LABEL_9:
  v26 = sub_245387818();
  __swift_project_value_buffer(v26, (uint64_t)qword_257462FB0);
  v27 = v48;
  sub_2452B792C((uint64_t)v15, v48, type metadata accessor for Record.ID);
  v28 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v50, v9, v17);
  v29 = v49;
  sub_2452B792C((uint64_t)v15, v49, type metadata accessor for Record.ID);
  v30 = v47;
  swift_retain();
  v31 = sub_2453877F4();
  v32 = sub_245387D28();
  v54 = v31;
  LODWORD(v53) = v32;
  if (os_log_type_enabled(v31, v32))
  {
    v33 = swift_slowAlloc();
    v52 = swift_slowAlloc();
    v58 = v52;
    *(_DWORD *)v33 = 136446978;
    v34 = *(_QWORD *)(v30 + 488);
    v35 = *(_QWORD *)(v30 + 496);
    swift_bridgeObjectRetain();
    v56 = sub_2453816D8(v34, v35, &v58);
    sub_245387E0C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2082;
    v46 = v33 + 14;
    v47 = v2;
    v56 = 0;
    v57 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_245387EA8();
    swift_bridgeObjectRelease();
    v56 = 540697705;
    v57 = 0xE400000000000000;
    swift_bridgeObjectRetain();
    sub_245387B90();
    swift_bridgeObjectRelease();
    sub_245387B90();
    swift_bridgeObjectRetain();
    sub_245387B90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v56 = sub_2453816D8(v56, v57, &v58);
    v17 = v55;
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_2452B7B5C(v27, type metadata accessor for Record.ID);
    *(_WORD *)(v33 + 22) = 2082;
    sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v36 = v50;
    v37 = sub_2453880F4();
    v56 = sub_2453816D8(v37, v38, &v58);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    v39 = *(void (**)(char *, uint64_t))(v47 + 8);
    v39(v36, v17);
    *(_WORD *)(v33 + 32) = 2082;
    v40 = v49;
    v41 = Record.ID.description.getter();
    v56 = sub_2453816D8(v41, v42, &v58);
    v9 = (uint64_t)v51;
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_2452B7B5C(v40, type metadata accessor for Record.ID);
    v43 = v54;
    _os_log_impl(&dword_245256000, v54, (os_log_type_t)v53, "(%{public}s) Ownership verification failed: record in zone %{public}s is owned by relationship %{public}s: %{public}s", (uint8_t *)v33, 0x2Au);
    v44 = v52;
    swift_arrayDestroy();
    MEMORY[0x24953317C](v44, -1, -1);
    MEMORY[0x24953317C](v33, -1, -1);

  }
  else
  {
    swift_release();
    sub_2452B7B5C(v27, type metadata accessor for Record.ID);
    v39 = *(void (**)(char *, uint64_t))(v2 + 8);
    v39(v28, v17);
    sub_2452B7B5C(v29, type metadata accessor for Record.ID);

  }
  sub_2452B9768();
  swift_allocError();
  *v45 = 0;
  swift_willThrow();
  v39((char *)v9, v17);
  return (os_log_t)sub_2452B7B5C((uint64_t)v15, type metadata accessor for Record.ID);
}

uint64_t sub_24527B28C(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  uint64_t v33;
  _QWORD *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  char *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;

  v5 = type metadata accessor for Record.ID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char **)((char *)&v50 - v10);
  v12 = sub_2453879D4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char **)((char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55 = *a2;
  v16 = (void *)v2[29];
  *v15 = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE5610], v12);
  v17 = v16;
  LOBYTE(v16) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) != 0)
  {
    v19 = *(_QWORD *)(a1 + 16);
    if (!v19)
      return result;
    v20 = a1;
    v50 = v9;
    v51 = v2;
    v21 = v2 + 30;
    v22 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v52 = v20;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v54 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      sub_2452B792C(v22, (uint64_t)v11, type metadata accessor for Record.ID);
      v23 = *v21;
      if (!*(_QWORD *)(*v21 + 16))
        break;
      v24 = v11[4];
      v25 = v11[5];
      v27 = v11[2];
      v26 = v11[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v28 = sub_2452C1EB4(v27, v26, v24, v25);
      if ((v29 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      }
      v30 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v28);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v55)
      {
        if (MEMORY[0x24953323C](v30 + 16))
        {
          v31 = *(_QWORD *)(v30 + 24);
          ObjectType = swift_getObjectType();
          (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v31 + 8))(&v56, ObjectType, v31);
          swift_unknownObjectRelease();
          if (v56 == 1)
          {
            swift_bridgeObjectRelease();
            if (qword_25744FD90 != -1)
              swift_once();
            v33 = sub_245387818();
            __swift_project_value_buffer(v33, (uint64_t)qword_257462FB0);
            v34 = v51;
            swift_retain();
            v35 = sub_2453877F4();
            v36 = sub_245387D28();
            if (os_log_type_enabled(v35, v36))
            {
              v37 = (uint8_t *)swift_slowAlloc();
              v38 = swift_slowAlloc();
              v57 = v38;
              *(_DWORD *)v37 = 136446210;
              v55 = (uint64_t)(v37 + 4);
              v39 = v34[61];
              v40 = v34[62];
              swift_bridgeObjectRetain();
              v59 = sub_2453816D8(v39, v40, &v57);
              sub_245387E0C();
              swift_release();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_245256000, v35, v36, "(%{public}s) Destination verification failed: a record sent to a collection cannot be advertised", v37, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x24953317C](v38, -1, -1);
              MEMORY[0x24953317C](v37, -1, -1);

            }
            else
            {

              swift_release();
            }
            sub_2452B9768();
            swift_allocError();
            *v49 = 0;
            swift_willThrow();
            swift_release();
            return sub_2452B7B5C((uint64_t)v11, type metadata accessor for Record.ID);
          }
        }
      }
      sub_2452B7B5C((uint64_t)v11, type metadata accessor for Record.ID);
      swift_release();
      v22 += v54;
      if (!--v19)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v9 = v50;
    v15 = v51;
    if (qword_25744FD90 != -1)
      goto LABEL_27;
  }
  else
  {
    __break(1u);
LABEL_27:
    swift_once();
  }
  v41 = sub_245387818();
  __swift_project_value_buffer(v41, (uint64_t)qword_257462FB0);
  sub_2452B792C((uint64_t)v11, (uint64_t)v9, type metadata accessor for Record.ID);
  swift_retain();
  v42 = sub_2453877F4();
  v43 = sub_245387D28();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = swift_slowAlloc();
    v55 = swift_slowAlloc();
    v59 = v55;
    *(_DWORD *)v44 = 136446466;
    v45 = v15[61];
    v46 = v15[62];
    swift_bridgeObjectRetain();
    v57 = sub_2453816D8(v45, v46, &v59);
    sub_245387E0C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2082;
    v53 = *((_QWORD *)v9 + 4);
    v54 = v44 + 14;
    v57 = 0;
    v58 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_245387EA8();
    swift_bridgeObjectRelease();
    v57 = 540697705;
    v58 = 0xE400000000000000;
    swift_bridgeObjectRetain();
    sub_245387B90();
    swift_bridgeObjectRelease();
    sub_245387B90();
    swift_bridgeObjectRetain();
    sub_245387B90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v57 = sub_2453816D8(v57, v58, &v59);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_2452B7B5C((uint64_t)v9, type metadata accessor for Record.ID);
    _os_log_impl(&dword_245256000, v42, v43, "(%{public}s) Destination verification failed: zone %{public}s does not exist", (uint8_t *)v44, 0x16u);
    v47 = v55;
    swift_arrayDestroy();
    MEMORY[0x24953317C](v47, -1, -1);
    MEMORY[0x24953317C](v44, -1, -1);
  }
  else
  {
    swift_release();
    sub_2452B7B5C((uint64_t)v9, type metadata accessor for Record.ID);
  }

  sub_2452B9768();
  swift_allocError();
  *v48 = 0;
  swift_willThrow();
  return sub_2452B7B5C((uint64_t)v11, type metadata accessor for Record.ID);
}

uint64_t sub_24527B988(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  void *v27;
  void (*v28)(_QWORD *);
  uint64_t (*v29)(_QWORD *, uint64_t);
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t ObjectType;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BOOL4 v69;
  char v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  size_t v74;
  void *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t (*)(uint64_t, unint64_t), _QWORD *, uint64_t, uint64_t);
  uint64_t v80;
  void (*v81)(_QWORD *);
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t (*v86)(_QWORD *, uint64_t);
  id v87;
  unsigned int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  int v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  size_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v92 = (uint64_t)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v106 = (uint64_t)&v80 - v11;
  v105 = sub_245387740();
  v104 = *(_QWORD *)(v105 - 8);
  MEMORY[0x24BDAC7A8](v105);
  v103 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Record.ID(0);
  MEMORY[0x24BDAC7A8](v13);
  v102 = (uint64_t)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for RecordMetadata();
  v100 = *(_QWORD *)(v101 - 8);
  v15 = MEMORY[0x24BDAC7A8](v101);
  v114 = (uint64_t)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v99 = (char *)&v80 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v113 = (uint64_t)&v80 - v19;
  v98 = type metadata accessor for RecordStub();
  v20 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v107 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_2453879D4();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (uint64_t *)((char *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = *a2;
  v90 = *(_QWORD *)a3;
  v89 = *(unsigned __int8 *)(a3 + 8);
  v27 = (void *)v4[29];
  *v25 = v27;
  v28 = *(void (**)(_QWORD *))(v23 + 104);
  v88 = *MEMORY[0x24BEE5610];
  v28(v25);
  v87 = v27;
  LOBYTE(v27) = sub_2453879F8();
  v29 = *(uint64_t (**)(_QWORD *, uint64_t))(v23 + 8);
  result = v29(v25, v22);
  if ((v27 & 1) == 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  v86 = v29;
  v116 = v26;
  v91 = sub_2452A8740(a1, &v116);
  v31 = *(_QWORD *)(a1 + 16);
  if (v31)
  {
    v97 = v26;
    v81 = v28;
    v83 = v25;
    v84 = v22;
    v85 = v4;
    v32 = a1 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v82 = a1;
    swift_bridgeObjectRetain();
    v96 = v4 + 30;
    swift_beginAccess();
    v94 = 0;
    v93 = 0;
    v95 = *(_QWORD *)(v20 + 72);
    v33 = MEMORY[0x24BEE4AF8];
    v34 = v107;
    while (1)
    {
      v111 = v32;
      v112 = v31;
      sub_2452B792C(v32, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for RecordStub);
      v35 = v33;
      v36 = v102;
      sub_2452B792C((uint64_t)v34, v102, type metadata accessor for Record.ID);
      v37 = v98;
      v38 = v104;
      v39 = v103;
      v40 = v105;
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v103, &v34[*(int *)(v98 + 20)], v105);
      v110 = &v34[*(int *)(v37 + 24)];
      v41 = v106;
      sub_2452BC89C((uint64_t)v110, v106, &qword_25744F6B0);
      v42 = v101;
      v43 = (uint64_t)v99;
      v44 = (uint64_t)&v99[*(int *)(v101 + 28)];
      v45 = sub_2453876EC();
      v108 = *(_QWORD *)(v45 - 8);
      v109 = v45;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 56))(v44, 1, 1);
      v46 = v36;
      v33 = v35;
      sub_2452B7AB8(v46, v43, type metadata accessor for Record.ID);
      (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v43 + *(int *)(v42 + 20), v39, v40);
      *(_QWORD *)(v43 + *(int *)(v42 + 24)) = v97;
      swift_bridgeObjectRetain();
      sub_2452BBA60(v41, v44, &qword_25744F6B0);
      v47 = v43;
      v48 = v113;
      sub_2452B7AB8(v47, v113, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      sub_2452B792C(v48, v114, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_245323F18(0, *(_QWORD *)(v35 + 16) + 1, 1, v35);
      v50 = *(_QWORD *)(v33 + 16);
      v49 = *(_QWORD *)(v33 + 24);
      v34 = v107;
      v51 = v111;
      if (v50 >= v49 >> 1)
        v33 = sub_245323F18(v49 > 1, v50 + 1, 1, v33);
      *(_QWORD *)(v33 + 16) = v50 + 1;
      sub_2452B7AB8(v114, v33+ ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80))+ *(_QWORD *)(v100 + 72) * v50, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      v52 = *v96;
      if (*(_QWORD *)(*v96 + 16))
      {
        v54 = *((_QWORD *)v34 + 4);
        v53 = *((_QWORD *)v34 + 5);
        v56 = *((_QWORD *)v34 + 2);
        v55 = *((_QWORD *)v34 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v57 = sub_2452C1EB4(v56, v55, v54, v53);
        if ((v58 & 1) != 0)
        {
          v59 = *(_QWORD *)(*(_QWORD *)(v52 + 56) + 8 * v57);
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v60 = MEMORY[0x24953323C](v59 + 16);
          v61 = v60;
          if (v60)
          {
            v62 = *(_QWORD *)(v59 + 24);
            ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v62 + 8))(&v116, ObjectType, v62);
            swift_release();
            swift_unknownObjectRelease();
            v61 = v116;
          }
          else
          {
            swift_release();
          }
          v64 = v93;
          v66 = v109;
          v65 = (uint64_t)v110;
          v67 = v108;
          sub_2452B7B5C(v113, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
          v93 = v61 | v64;
          v68 = v92;
          sub_2452BC89C(v65, v92, &qword_25744F6B0);
          sub_2452B7B5C((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for RecordStub);
          v69 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v68, 1, v66) != 1;
          v94 |= v69;
          sub_245263F80(v68, &qword_25744F6B0);
          goto LABEL_6;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_2452B7B5C(v113, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      sub_2452B7B5C((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for RecordStub);
LABEL_6:
      v32 = v51 + v95;
      v31 = v112 - 1;
      if (v112 == 1)
      {
        swift_bridgeObjectRelease();
        v4 = v85;
        v22 = v84;
        v25 = v83;
        v28 = v81;
        v70 = v94;
        v71 = v93;
        goto LABEL_19;
      }
    }
  }
  v70 = 0;
  v71 = 0;
  v33 = MEMORY[0x24BEE4AF8];
LABEL_19:
  swift_beginAccess();
  sub_24525E4F0((uint64_t)(v4 + 24), (uint64_t)&v116);
  v72 = v118;
  v73 = v119;
  __swift_project_boxed_opaque_existential_1(&v116, v118);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v73 + 16) + 104))(v33, v72);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v116);
  if (*(_QWORD *)(v91 + 16))
  {
    v74 = sub_24532D534(v91);
    swift_bridgeObjectRelease();
    v115 = v74;
    v116 = v90;
    v117 = v89;
    sub_24527E6F4((uint64_t *)&v115, &v116);
    result = swift_release();
    if ((v71 & 1) == 0)
      goto LABEL_21;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    if ((v71 & 1) == 0)
    {
LABEL_21:
      if ((v70 & 1) == 0)
        return result;
      return sub_2452725FC();
    }
  }
  v75 = v87;
  *v25 = v87;
  ((void (*)(_QWORD *, _QWORD, uint64_t))v28)(v25, v88, v22);
  v76 = v75;
  LOBYTE(v75) = sub_2453879F8();
  result = v86(v25, v22);
  if ((v75 & 1) == 0)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  v77 = v4[58];
  v78 = v4[59];
  __swift_project_boxed_opaque_existential_1(v4 + 55, v77);
  v79 = *(void (**)(uint64_t (*)(uint64_t, unint64_t), _QWORD *, uint64_t, uint64_t))(v78 + 8);
  swift_retain();
  v79(sub_2452BBAAC, v4, v77, v78);
  result = swift_release();
  if ((v70 & 1) != 0)
    return sub_2452725FC();
  return result;
}

uint64_t Replicator.delete(recordIDs:schedule:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = v2;
  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)(v2 + 232);
  result = sub_245387D7C();
  if (!v3)
  {
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v4;
    *(_QWORD *)(v10 + 24) = a1;
    *(_QWORD *)(v10 + 32) = v6;
    *(_BYTE *)(v10 + 40) = v7;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2452E06E8(0xD000000000000018, 0x80000002453930F0, v8, (uint64_t)sub_2452B540C, v10, 0.0);
    return swift_release();
  }
  return result;
}

uint64_t sub_24527C32C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  void (*v28)(_QWORD);
  uint64_t (*v29)(_QWORD *, uint64_t);
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  int v70;
  uint64_t v71;
  char *v72;
  _QWORD *v73;
  uint64_t (*v74)(uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t ObjectType;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  size_t v103;
  _QWORD *v104;
  void *v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  void (*v111)(uint64_t (*)(uint64_t, unint64_t), _QWORD *, uint64_t, uint64_t);
  uint64_t (*v112)(_QWORD *, uint64_t);
  id v113;
  unsigned int v114;
  void (*v115)(_QWORD *, _QWORD, uint64_t);
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  _QWORD *v128;
  int64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  _QWORD *v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  _QWORD *v142;
  size_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  uint64_t v148;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F848);
  MEMORY[0x24BDAC7A8](v6);
  v126 = (uint64_t)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RecordMetadata();
  v125 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Record.ID(0);
  v118 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t (**)(_QWORD *, uint64_t))((char *)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v137 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v14 = MEMORY[0x24BDAC7A8](v137);
  v136 = (uint64_t (**)(_QWORD *, uint64_t))((char *)&v112 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = MEMORY[0x24BDAC7A8](v14);
  v135 = (uint64_t (**)(_QWORD *, uint64_t))((char *)&v112 - v17);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v134 = (uint64_t (**)(_QWORD *, uint64_t))((char *)&v112 - v19);
  MEMORY[0x24BDAC7A8](v18);
  v133 = (char *)&v112 - v20;
  v21 = sub_245387740();
  v142 = *(_QWORD **)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v141 = (char *)&v112 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_2453879D4();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (uint64_t (**)(_QWORD *, uint64_t))((char *)&v112 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v120 = *(_QWORD *)a2;
  v119 = *(unsigned __int8 *)(a2 + 8);
  v27 = (void *)v3[29];
  *v26 = v27;
  v28 = *(void (**)(_QWORD))(v24 + 104);
  v114 = *MEMORY[0x24BEE5610];
  v115 = (void (*)(_QWORD *, _QWORD, uint64_t))v28;
  v28(v26);
  v113 = v27;
  LOBYTE(v27) = sub_2453879F8();
  v29 = *(uint64_t (**)(_QWORD *, uint64_t))(v24 + 8);
  v116 = v26;
  v117 = v23;
  result = v29(v26, v23);
  if ((v27 & 1) == 0)
    goto LABEL_64;
  v112 = v29;
  swift_beginAccess();
  v128 = v3 + 24;
  sub_24525E4F0((uint64_t)(v3 + 24), (uint64_t)&v145);
  v32 = v147;
  v31 = v148;
  __swift_project_boxed_opaque_existential_1(&v145, v147);
  v33 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v31 + 8) + 8) + 32))(v32);
  v34 = sub_2452B036C(v33, (uint64_t (*)(char *, unint64_t, uint64_t))sub_2452B0E94);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v145);
  v35 = *(_QWORD *)(v34 + 16);
  v124 = v8;
  v127 = v10;
  v138 = v13;
  v123 = v3;
  v122 = a1;
  if (v35)
  {
    v145 = MEMORY[0x24BEE4AF8];
    sub_24532C5C8(0, v35, 0);
    result = sub_245330EE4(v34);
    if (result < 0)
      goto LABEL_63;
    v37 = result;
    if (result >= 1 << *(_BYTE *)(v34 + 32))
      goto LABEL_63;
    v38 = 0;
    v39 = v34 + 64;
    v121 = v34 + 80;
    v132 = v34;
    v129 = v35;
    v130 = v36;
    v131 = v34 + 64;
    while (1)
    {
      v40 = v37 >> 6;
      if ((*(_QWORD *)(v39 + 8 * (v37 >> 6)) & (1 << v37)) == 0)
      {
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
      if (*(_DWORD *)(v34 + 36) != (_DWORD)v36)
        goto LABEL_59;
      v139 = v38;
      v140 = 1 << v37;
      v41 = v21;
      v42 = v137;
      v43 = v133;
      v44 = (uint64_t)&v133[*(int *)(v137 + 48)];
      v45 = *(_QWORD *)(v34 + 56);
      v46 = (uint64_t *)(*(_QWORD *)(v34 + 48) + 16 * v37);
      v47 = *v46;
      v48 = v46[1];
      v49 = type metadata accessor for PairingRelationship();
      sub_2452B792C(v45 + *(_QWORD *)(*(_QWORD *)(v49 - 8) + 72) * v37, v44, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      *v43 = v47;
      v43[1] = v48;
      v50 = (uint64_t)v134;
      *v134 = v47;
      *(_QWORD *)(v50 + 8) = v48;
      sub_2452B792C(v44, v50 + *(int *)(v42 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v51 = v135;
      sub_2452BC850(v50, (uint64_t)v135, (uint64_t *)&unk_25744FF90);
      swift_bridgeObjectRetain_n();
      sub_245263F80((uint64_t)v43, (uint64_t *)&unk_25744FF90);
      v52 = *(int *)(v42 + 48);
      v21 = v41;
      v53 = v136;
      v54 = (uint64_t)v136 + v52;
      v55 = v51[1];
      *v136 = *v51;
      v53[1] = v55;
      sub_2452B792C((uint64_t)v51 + v52, v54, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      ((void (*)(char *, uint64_t, uint64_t))v142[2])(v141, v54, v41);
      sub_2452B7B5C(v54, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      sub_245263F80((uint64_t)v51, (uint64_t *)&unk_25744FF90);
      v56 = v145;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24532C5C8(0, *(_QWORD *)(v56 + 16) + 1, 1);
        v56 = v145;
      }
      v58 = *(_QWORD *)(v56 + 16);
      v57 = *(_QWORD *)(v56 + 24);
      v34 = v132;
      if (v58 >= v57 >> 1)
      {
        sub_24532C5C8(v57 > 1, v58 + 1, 1);
        v56 = v145;
      }
      *(_QWORD *)(v56 + 16) = v58 + 1;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v142[4])(v56+ ((*((unsigned __int8 *)v142 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v142 + 80))+ v142[9] * v58, v141, v41);
      v145 = v56;
      v59 = 1 << *(_BYTE *)(v34 + 32);
      if ((uint64_t)v37 >= v59)
        goto LABEL_60;
      v39 = v131;
      v60 = *(_QWORD *)(v131 + 8 * v40);
      if ((v60 & v140) == 0)
        goto LABEL_61;
      LODWORD(v36) = v130;
      if (*(_DWORD *)(v34 + 36) != (_DWORD)v130)
        goto LABEL_62;
      v61 = v60 & (-2 << (v37 & 0x3F));
      if (v61)
      {
        v37 = __clz(__rbit64(v61)) | v37 & 0xFFFFFFFFFFFFFFC0;
        v62 = v129;
        goto LABEL_24;
      }
      v63 = v40 + 1;
      v64 = (unint64_t)(v59 + 63) >> 6;
      v62 = v129;
      if (v40 + 1 < v64)
      {
        v65 = *(_QWORD *)(v131 + 8 * v63);
        if (v65)
        {
LABEL_22:
          v37 = __clz(__rbit64(v65)) + (v63 << 6);
          goto LABEL_24;
        }
        while (v64 - 2 != v40)
        {
          v65 = *(_QWORD *)(v121 + 8 * v40++);
          if (v65)
          {
            v63 = v40 + 1;
            goto LABEL_22;
          }
        }
      }
      v37 = 1 << *(_BYTE *)(v34 + 32);
LABEL_24:
      v13 = v138;
      v38 = v139 + 1;
      if (v139 + 1 == v62)
      {
        swift_release();
        v3 = v123;
        a1 = v122;
        goto LABEL_30;
      }
      if ((v37 & 0x8000000000000000) != 0 || (uint64_t)v37 >= v59)
        goto LABEL_63;
    }
  }
  swift_release();
  v56 = MEMORY[0x24BEE4AF8];
LABEL_30:
  v66 = sub_245331418(v56);
  swift_bridgeObjectRelease();
  v144 = MEMORY[0x24BEE4B08];
  v67 = *(_QWORD *)(a1 + 16);
  if (!v67)
  {
    LOBYTE(v70) = 0;
    goto LABEL_51;
  }
  v140 = v66;
  v68 = v118;
  v69 = (*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80);
  swift_bridgeObjectRetain();
  v142 = v3 + 30;
  swift_beginAccess();
  v70 = 0;
  v71 = 0;
  v72 = *(char **)(v68 + 72);
  v137 = v67 - 1;
  v73 = (_QWORD *)(a1 + v69);
  v74 = type metadata accessor for Record.ID;
  v136 = (_QWORD *)(a1 + v69);
  v141 = v72;
  while (2)
  {
    LODWORD(v139) = v70;
    v75 = (uint64_t)v73 + (_QWORD)v72 * v71;
    v76 = v71;
    while (1)
    {
      sub_2452B792C(v75, (uint64_t)v13, v74);
      v77 = *v142;
      if (!*(_QWORD *)(*v142 + 16))
        goto LABEL_34;
      v78 = v74;
      v79 = v67;
      v81 = v13[4];
      v80 = v13[5];
      v82 = v13;
      v83 = v13[3];
      v84 = v82[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v85 = sub_2452C1EB4(v84, v83, v81, v80);
      if ((v86 & 1) != 0)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = v138;
      v67 = v79;
      v74 = v78;
      v72 = v141;
LABEL_34:
      sub_2452B7B5C((uint64_t)v13, v74);
LABEL_35:
      ++v76;
      v75 += (uint64_t)v72;
      if (v67 == v76)
      {
        LOBYTE(v70) = v139;
        goto LABEL_49;
      }
    }
    v87 = *(_QWORD *)(*(_QWORD *)(v77 + 56) + 8 * v85);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v88 = MEMORY[0x24953323C](v87 + 16);
    v89 = (uint64_t)v127;
    if (!v88
      || (v90 = *(_QWORD *)(v87 + 24),
          ObjectType = swift_getObjectType(),
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v90 + 8))(&v145, ObjectType, v90),
          swift_unknownObjectRelease(),
          v145 != 1))
    {
      sub_24525E4F0((uint64_t)v128, (uint64_t)&v145);
      v92 = v147;
      v93 = v148;
      __swift_project_boxed_opaque_existential_1(&v145, v147);
      v94 = *(_QWORD *)(v93 + 8);
      v95 = v126;
      v13 = v138;
      MetadataStoring.metadata(for:)(v138, v92, v94, v126);
      v96 = v95;
      v97 = v95;
      v98 = v124;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48))(v97, 1, v124) == 1)
      {
        v74 = v78;
        sub_2452B7B5C((uint64_t)v13, v78);
        swift_release();
        sub_245263F80(v96, &qword_25744F848);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v145);
      }
      else
      {
        sub_2452B7AB8(v96, v89, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v145);
        if (*(_QWORD *)(v89 + *(int *)(v98 + 24)))
        {
          v99 = swift_bridgeObjectRetain();
          v100 = sub_245331418(v99);
          swift_bridgeObjectRelease();
          sub_2452A9804(v100);
          swift_release();
          sub_2452B7B5C(v89, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
          v74 = v78;
          sub_2452B7B5C((uint64_t)v13, v78);
        }
        else
        {
          swift_release();
          sub_2452B7B5C(v89, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
          v74 = v78;
          sub_2452B7B5C((uint64_t)v13, v78);
          swift_bridgeObjectRelease();
          v144 = v140;
          swift_bridgeObjectRetain();
        }
      }
      v67 = v79;
      v72 = v141;
      goto LABEL_35;
    }
    v13 = v138;
    v74 = v78;
    sub_2452B7B5C((uint64_t)v138, v78);
    swift_release();
    v71 = v76 + 1;
    v70 = 1;
    v73 = v136;
    v67 = v79;
    v72 = v141;
    if (v137 != v76)
      continue;
    break;
  }
LABEL_49:
  swift_bridgeObjectRelease();
  a1 = v122;
  v3 = v123;
LABEL_51:
  swift_bridgeObjectRelease();
  sub_24525E4F0((uint64_t)v128, (uint64_t)&v145);
  v101 = v147;
  v102 = v148;
  __swift_project_boxed_opaque_existential_1(&v145, v147);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v102 + 16) + 112))(a1, v101);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v145);
  if (*(_QWORD *)(v144 + 16))
  {
    v103 = sub_24532D534(v144);
    swift_bridgeObjectRelease();
    v143 = v103;
    v145 = v120;
    v146 = v119;
    sub_24527E6F4((uint64_t *)&v143, &v145);
    result = swift_release();
    if ((v70 & 1) == 0)
      return result;
LABEL_55:
    v104 = v116;
    v105 = v113;
    *v116 = v113;
    v106 = v117;
    v115(v104, v114, v117);
    v107 = v105;
    LOBYTE(v105) = sub_2453879F8();
    result = v112(v104, v106);
    if ((v105 & 1) != 0)
    {
      v108 = v3[58];
      v109 = v3[59];
      __swift_project_boxed_opaque_existential_1(v3 + 55, v108);
      v110 = v3;
      v111 = *(void (**)(uint64_t (*)(uint64_t, unint64_t), _QWORD *, uint64_t, uint64_t))(v109 + 8);
      swift_retain();
      v111(sub_2452BBAAC, v110, v108, v109);
      return swift_release();
    }
LABEL_65:
    __break(1u);
    return result;
  }
  result = swift_bridgeObjectRelease();
  if ((v70 & 1) != 0)
    goto LABEL_55;
  return result;
}

uint64_t Replicator.set(dataSource:for:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v7 = *a3;
  v6 = a3[1];
  v9 = a3[2];
  v8 = a3[3];
  v10 = *(_QWORD *)(v3 + 232);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v3;
  v11[3] = a1;
  v11[4] = a2;
  v11[5] = v7;
  v11[6] = v6;
  v11[7] = v9;
  v11[8] = v8;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2452E06E8(0xD000000000000013, 0x8000000245393110, v10, (uint64_t)sub_2452B5468, (uint64_t)v11, 0.0);
  return swift_release();
}

uint64_t sub_24527CF98(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void (*v24)(_QWORD *, uint64_t, uint64_t);
  uint64_t (*v25)(_QWORD *, uint64_t);
  uint64_t result;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char isUniquelyReferenced_nonNull_native;
  void *v72;
  void (*v73)(_QWORD *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t (*)(uint64_t, unint64_t), _QWORD *, uint64_t, uint64_t);
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  unsigned int v87;
  uint64_t (*v88)(_QWORD *, uint64_t);
  void (*v89)(_QWORD *, uint64_t, uint64_t);
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109[4];
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;

  v4 = v3;
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
  v8 = MEMORY[0x24BDAC7A8](v103);
  v102 = (uint64_t)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v101 = (uint64_t)&v82 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v100 = (uint64_t)&v82 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v99 = (char *)&v82 - v14;
  v15 = type metadata accessor for Record.ID(0);
  v108 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v107 = (uint64_t)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2453879D4();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (uint64_t *)((char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v93 = *a3;
  v91 = a3[1];
  v21 = a3[3];
  v94 = a3[2];
  v22 = (void *)v4[29];
  *v20 = v22;
  v23 = *MEMORY[0x24BEE5610];
  v24 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v18 + 104);
  v24(v20, v23, v17);
  v90 = v22;
  LOBYTE(v22) = sub_2453879F8();
  v25 = *(uint64_t (**)(_QWORD *, uint64_t))(v18 + 8);
  result = v25(v20, v17);
  if ((v22 & 1) == 0)
    goto LABEL_44;
  v92 = v21;
  v88 = v25;
  v89 = v24;
  if (!a1)
    goto LABEL_7;
  v108 = a2;
  v27 = v4 + 30;
  swift_beginAccess();
  v28 = v4[30];
  v29 = *(_QWORD *)(v28 + 16);
  swift_unknownObjectRetain();
  v30 = v91;
  v31 = v92;
  if (!v29)
    goto LABEL_33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32 = sub_2452C1EB4(v93, v30, v94, v31);
  if ((v33 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  v34 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v32);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v35 = MEMORY[0x24953323C](v34 + 16);
  swift_release();
  if (!v35)
  {
LABEL_33:
    type metadata accessor for Replicator.WeakSource();
    v70 = swift_allocObject();
    *(_QWORD *)(v70 + 24) = 0;
    swift_unknownObjectWeakInit();
    *(_QWORD *)(v70 + 24) = v108;
    swift_unknownObjectWeakAssign();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v110 = *v27;
    *v27 = 0x8000000000000000;
    sub_245328428(v70, v93, v30, v94, v31, isUniquelyReferenced_nonNull_native);
    *v27 = v110;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_unknownObjectRelease();
    v72 = v90;
    v73 = v89;
    goto LABEL_36;
  }
  swift_unknownObjectRelease();
  sub_245387F80();
  __break(1u);
LABEL_7:
  v87 = v23;
  swift_beginAccess();
  v86 = v4 + 24;
  sub_24525E4F0((uint64_t)(v4 + 24), (uint64_t)&v111);
  v36 = v112;
  v37 = v113;
  __swift_project_boxed_opaque_existential_1(&v111, v112);
  v38 = v91;
  v109[0] = v93;
  v109[1] = v91;
  v109[2] = v94;
  v109[3] = v92;
  v39 = MetadataStoring.metadata(for:)(v109, v36, *(_QWORD *)(v37 + 8));
  v40 = *(_QWORD *)(v39 + 16);
  if (v40)
  {
    v83 = v20;
    v84 = v17;
    v85 = v4;
    v109[0] = MEMORY[0x24BEE4AF8];
    sub_24532C528(0, v40, 0);
    result = sub_245330EE4(v39);
    v42 = result;
    v43 = 0;
    v44 = v39 + 64;
    v45 = *(_BYTE *)(v39 + 32);
    v82 = v39 + 88;
    v98 = v39;
    v95 = v40;
    v96 = v41;
    v97 = v39 + 64;
    v46 = (uint64_t)v99;
    while (1)
    {
      if (v42 < 0 || v42 >= 1 << v45)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        return result;
      }
      v50 = (unint64_t)v42 >> 6;
      if ((*(_QWORD *)(v44 + 8 * ((unint64_t)v42 >> 6)) & (1 << v42)) == 0)
        goto LABEL_39;
      if (*(_DWORD *)(v39 + 36) != (_DWORD)v41)
        goto LABEL_40;
      v104 = v43;
      v105 = 1 << v42;
      v51 = v103;
      v52 = v46 + *(int *)(v103 + 48);
      v53 = *(_QWORD *)(v39 + 48);
      v106 = *(_QWORD *)(v108 + 72);
      sub_2452B792C(v53 + v106 * v42, v46, type metadata accessor for Record.ID);
      v54 = *(_QWORD *)(v39 + 56);
      v55 = type metadata accessor for RecordMetadata();
      sub_2452B792C(v54 + *(_QWORD *)(*(_QWORD *)(v55 - 8) + 72) * v42, v52, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      v56 = v100;
      sub_2452B792C(v46, v100, type metadata accessor for Record.ID);
      sub_2452B792C(v52, v56 + *(int *)(v51 + 48), (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      v57 = v101;
      sub_2452BC850(v56, v101, &qword_25744FD30);
      sub_245263F80(v46, &qword_25744FD30);
      v58 = *(int *)(v51 + 48);
      v59 = v102;
      v60 = v102 + v58;
      v61 = v57 + v58;
      sub_2452B792C(v57, v102, type metadata accessor for Record.ID);
      sub_2452B792C(v61, v60, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      sub_2452B7AB8(v59, v107, type metadata accessor for Record.ID);
      sub_2452B7B5C(v60, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      sub_245263F80(v57, &qword_25744FD30);
      v62 = v109[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24532C528(0, *(_QWORD *)(v62 + 16) + 1, 1);
        v62 = v109[0];
      }
      v64 = *(_QWORD *)(v62 + 16);
      v63 = *(_QWORD *)(v62 + 24);
      if (v64 >= v63 >> 1)
      {
        sub_24532C528(v63 > 1, v64 + 1, 1);
        v62 = v109[0];
      }
      *(_QWORD *)(v62 + 16) = v64 + 1;
      result = sub_2452B7AB8(v107, v62+ ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80))+ v64 * v106, type metadata accessor for Record.ID);
      v39 = v98;
      v45 = *(_BYTE *)(v98 + 32);
      v47 = 1 << v45;
      if (v42 >= 1 << v45)
        goto LABEL_41;
      v44 = v97;
      v65 = *(_QWORD *)(v97 + 8 * v50);
      if ((v65 & v105) == 0)
        goto LABEL_42;
      LODWORD(v41) = v96;
      if (*(_DWORD *)(v98 + 36) != (_DWORD)v96)
        goto LABEL_43;
      v66 = v65 & (-2 << (v42 & 0x3F));
      if (v66)
      {
        v47 = __clz(__rbit64(v66)) | v42 & 0xFFFFFFFFFFFFFFC0;
        v48 = v95;
        v49 = v104;
      }
      else
      {
        v67 = v50 + 1;
        v68 = (v47 + 63) >> 6;
        v48 = v95;
        v49 = v104;
        if (v50 + 1 < v68)
        {
          v69 = *(_QWORD *)(v97 + 8 * v67);
          if (!v69)
          {
            v67 = v50 + 2;
            if (v50 + 2 >= v68)
              goto LABEL_10;
            v69 = *(_QWORD *)(v97 + 8 * v67);
            if (!v69)
            {
              while (v68 - 3 != v50)
              {
                v69 = *(_QWORD *)(v82 + 8 * v50++);
                if (v69)
                {
                  v67 = v50 + 2;
                  goto LABEL_25;
                }
              }
              goto LABEL_10;
            }
          }
LABEL_25:
          v47 = __clz(__rbit64(v69)) + (v67 << 6);
        }
      }
LABEL_10:
      v43 = v49 + 1;
      v42 = v47;
      if (v43 == v48)
      {
        swift_bridgeObjectRelease();
        v4 = v85;
        v17 = v84;
        v20 = v83;
        v38 = v91;
        goto LABEL_35;
      }
    }
  }
  swift_bridgeObjectRelease();
  v62 = MEMORY[0x24BEE4AF8];
LABEL_35:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v111);
  sub_24525E4F0((uint64_t)v86, (uint64_t)&v111);
  v74 = v112;
  v75 = v113;
  __swift_project_boxed_opaque_existential_1(&v111, v112);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v75 + 16) + 112))(v62, v74);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v111);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v76 = v92;
  swift_bridgeObjectRetain();
  sub_245327838(v93, v38, v94, v76);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v73 = v89;
  v23 = v87;
  v72 = v90;
LABEL_36:
  *v20 = v72;
  v73(v20, v23, v17);
  v77 = v72;
  v78 = sub_2453879F8();
  result = v88(v20, v17);
  if ((v78 & 1) == 0)
    goto LABEL_45;
  v79 = v4[58];
  v80 = v4[59];
  __swift_project_boxed_opaque_existential_1(v4 + 55, v79);
  v81 = *(void (**)(uint64_t (*)(uint64_t, unint64_t), _QWORD *, uint64_t, uint64_t))(v80 + 8);
  swift_retain();
  v81(sub_2452BBAAC, v4, v79, v80);
  return swift_release();
}

Swift::Void __swiftcall Replicator.set(clientID:enabled:)(Swift::String clientID, Swift::Bool enabled)
{
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v6;
  uint64_t v7;

  object = clientID._object;
  countAndFlagsBits = clientID._countAndFlagsBits;
  v6 = *(_QWORD *)(v2 + 232);
  v7 = swift_allocObject();
  *(_BYTE *)(v7 + 16) = enabled;
  *(_QWORD *)(v7 + 24) = countAndFlagsBits;
  *(_QWORD *)(v7 + 32) = object;
  *(_QWORD *)(v7 + 40) = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2452E06E8(0xD000000000000020, 0x8000000245393130, v6, (uint64_t)sub_2452B5470, v7, 0.0);
  swift_release();
}

uint64_t sub_24527D9CC(uint64_t (*a1)(uint64_t), uint64_t a2, char a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  void *v78;
  _QWORD *v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t (*)(uint64_t, unint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t (*v90)(uint64_t);
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119[4];
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;

  v89 = a2;
  v90 = a1;
  v93 = sub_2453879D4();
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v91 = (uint64_t *)((char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
  v11 = MEMORY[0x24BDAC7A8](v108);
  v107 = (uint64_t)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v106 = (uint64_t)&v87 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v105 = (uint64_t)&v87 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v104 = (unint64_t)&v87 - v17;
  v18 = type metadata accessor for Record.ID(0);
  v118 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v117 = (uint64_t)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) == 0)
  {
    v88 = a6;
    if (qword_25744FD90 != -1)
      swift_once();
    v25 = sub_245387818();
    v26 = __swift_project_value_buffer(v25, (uint64_t)qword_257462FB0);
    swift_bridgeObjectRetain_n();
    v100 = v26;
    v27 = sub_2453877F4();
    v28 = sub_245387D34();
    v29 = os_log_type_enabled(v27, v28);
    v30 = MEMORY[0x24BEE4AD8];
    if (v29)
    {
      v31 = MEMORY[0x24BEE4AD8];
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v120 = v33;
      *(_DWORD *)v32 = 136446210;
      v30 = v31;
      swift_bridgeObjectRetain();
      v119[0] = sub_2453816D8(a4, a5, &v120);
      sub_245387E0C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_245256000, v27, v28, "Disabling client %{public}s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v33, -1, -1);
      MEMORY[0x24953317C](v32, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a6 = v88;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_245324830(v119, a4, a5);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v34 = swift_bridgeObjectRetain();
    v35 = a4;
    a4 = 0;
    v36 = sub_2452B57E8(v34, v35, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v37 = sub_2452737C4(v36);
    v103 = 0;
    swift_release();
    v98 = *(_QWORD *)(v37 + 16);
    if (!v98)
      goto LABEL_45;
    v99 = v37 + 32;
    v102 = a6 + 192;
    swift_beginAccess();
    a5 = 0;
    *(_QWORD *)&v38 = 136446210;
    v95 = v38;
    v94 = v30 + 8;
    v97 = v37;
    while (1)
    {
      if (a5 >= *(_QWORD *)(v37 + 16))
        goto LABEL_55;
      v101 = a5;
      v40 = (uint64_t *)(v99 + 32 * a5);
      v41 = *v40;
      v42 = v40[1];
      a5 = v40[2];
      v43 = v40[3];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v44 = sub_2453877F4();
      v45 = sub_245387D34();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = swift_slowAlloc();
        a6 = swift_slowAlloc();
        v119[0] = a6;
        *(_DWORD *)v46 = v95;
        v120 = 0;
        v121 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_245387EA8();
        swift_bridgeObjectRelease();
        v120 = 540697705;
        v121 = 0xE400000000000000;
        swift_bridgeObjectRetain();
        sub_245387B90();
        swift_bridgeObjectRelease();
        sub_245387B90();
        swift_bridgeObjectRetain();
        sub_245387B90();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        *(_QWORD *)(v46 + 4) = sub_2453816D8(v120, v121, v119);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_245256000, v44, v45, "Removing all remote records in zone %{public}s", (uint8_t *)v46, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24953317C](a6, -1, -1);
        MEMORY[0x24953317C](v46, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      sub_24525E4F0(v102, (uint64_t)&v120);
      v47 = v122;
      v48 = v123;
      __swift_project_boxed_opaque_existential_1(&v120, v122);
      v119[0] = v41;
      v119[1] = v42;
      v119[2] = a5;
      v119[3] = v43;
      v49 = MetadataStoring.metadata(for:)(v119, v47, *(_QWORD *)(v48 + 8));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v50 = v103;
      v51 = sub_2452B036C(v49, (uint64_t (*)(char *, unint64_t, uint64_t))sub_2452B1234);
      v103 = v50;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v120);
      a4 = *(_QWORD *)(v51 + 16);
      if (!a4)
      {
        swift_release();
        v70 = MEMORY[0x24BEE4AF8];
        goto LABEL_15;
      }
      v120 = MEMORY[0x24BEE4AF8];
      sub_24532C528(0, a4, 0);
      a6 = sub_245330EE4(v51);
      v53 = 0;
      v54 = v51 + 64;
      v55 = *(_BYTE *)(v51 + 32);
      v110 = v52;
      v96 = v51 + 88;
      v112 = v51;
      v109 = a4;
      v111 = v51 + 64;
      do
      {
        if (a6 < 0 || a6 >= 1 << v55)
        {
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
        v58 = (unint64_t)a6 >> 6;
        if ((*(_QWORD *)(v54 + 8 * ((unint64_t)a6 >> 6)) & (1 << a6)) == 0)
          goto LABEL_50;
        if (*(_DWORD *)(v51 + 36) != (_DWORD)v52)
          goto LABEL_51;
        v115 = 1 << a6;
        v114 = v52;
        v113 = v53;
        v59 = v108;
        a5 = v104;
        v60 = v104 + *(int *)(v108 + 48);
        v61 = *(_QWORD *)(v51 + 48);
        v116 = *(_QWORD *)(v118 + 72);
        sub_2452B792C(v61 + v116 * a6, v104, type metadata accessor for Record.ID);
        v62 = *(_QWORD *)(v51 + 56);
        v63 = type metadata accessor for RecordMetadata();
        sub_2452B792C(v62 + *(_QWORD *)(*(_QWORD *)(v63 - 8) + 72) * a6, v60, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
        v64 = v105;
        sub_2452B792C(a5, v105, type metadata accessor for Record.ID);
        sub_2452B792C(v60, v64 + *(int *)(v59 + 48), (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
        v65 = v106;
        sub_2452BC850(v64, v106, &qword_25744FD30);
        sub_245263F80(a5, &qword_25744FD30);
        v66 = *(int *)(v59 + 48);
        v67 = v107;
        v68 = v107 + v66;
        v69 = v65 + v66;
        sub_2452B792C(v65, v107, type metadata accessor for Record.ID);
        sub_2452B792C(v69, v68, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
        sub_2452B7AB8(v67, v117, type metadata accessor for Record.ID);
        sub_2452B7B5C(v68, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
        sub_245263F80(v65, &qword_25744FD30);
        v70 = v120;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24532C528(0, *(_QWORD *)(v70 + 16) + 1, 1);
          v70 = v120;
        }
        v72 = *(_QWORD *)(v70 + 16);
        v71 = *(_QWORD *)(v70 + 24);
        a4 = v72 + 1;
        v51 = v112;
        if (v72 >= v71 >> 1)
        {
          sub_24532C528(v71 > 1, v72 + 1, 1);
          v70 = v120;
        }
        *(_QWORD *)(v70 + 16) = a4;
        sub_2452B7AB8(v117, v70+ ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80))+ v72 * v116, type metadata accessor for Record.ID);
        v55 = *(_BYTE *)(v51 + 32);
        v56 = 1 << v55;
        if (a6 >= 1 << v55)
          goto LABEL_52;
        v54 = v111;
        v73 = *(_QWORD *)(v111 + 8 * v58);
        if ((v73 & v115) == 0)
          goto LABEL_53;
        if (*(_DWORD *)(v51 + 36) != (_DWORD)v114)
          goto LABEL_54;
        v74 = v73 & (-2 << (a6 & 0x3F));
        if (v74)
        {
          v56 = __clz(__rbit64(v74)) | a6 & 0xFFFFFFFFFFFFFFC0;
          a4 = v109;
          v57 = v113;
          goto LABEL_23;
        }
        v75 = v58 + 1;
        v76 = (v56 + 63) >> 6;
        a4 = v109;
        v57 = v113;
        if (v58 + 1 < v76)
        {
          v77 = *(_QWORD *)(v111 + 8 * v75);
          if (v77)
            goto LABEL_38;
          v75 = v58 + 2;
          if (v58 + 2 < v76)
          {
            v77 = *(_QWORD *)(v111 + 8 * v75);
            if (!v77)
            {
              do
              {
                if (v76 - 3 == v58)
                  goto LABEL_23;
                v77 = *(_QWORD *)(v96 + 8 * v58++);
              }
              while (!v77);
              v75 = v58 + 2;
            }
LABEL_38:
            v56 = __clz(__rbit64(v77)) + (v75 << 6);
          }
        }
LABEL_23:
        v53 = v57 + 1;
        v52 = v110;
        a6 = v56;
      }
      while (v53 != a4);
      swift_release();
LABEL_15:
      a5 = v101 + 1;
      sub_24525E4F0(v102, (uint64_t)&v120);
      a4 = v122;
      v39 = v123;
      __swift_project_boxed_opaque_existential_1(&v120, v122);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 + 16) + 112))(v70, a4);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v120);
      v37 = v97;
      if (a5 == v98)
      {
        swift_bridgeObjectRelease();
        a6 = v88;
        goto LABEL_46;
      }
    }
  }
  if (qword_25744FD90 != -1)
    goto LABEL_57;
  while (1)
  {
    v20 = sub_245387818();
    __swift_project_value_buffer(v20, (uint64_t)qword_257462FB0);
    swift_bridgeObjectRetain_n();
    v21 = sub_2453877F4();
    v22 = sub_245387D34();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v120 = v24;
      *(_DWORD *)v23 = 136446210;
      swift_bridgeObjectRetain();
      v119[0] = sub_2453816D8(a4, a5, &v120);
      sub_245387E0C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_245256000, v21, v22, "Enabling client %{public}s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v24, -1, -1);
      MEMORY[0x24953317C](v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    sub_245349E50(a4, a5);
    swift_endAccess();
LABEL_45:
    swift_bridgeObjectRelease();
LABEL_46:
    v78 = *(void **)(a6 + 232);
    v79 = v91;
    *v91 = v78;
    a4 = v92;
    v80 = v93;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v92 + 104))(v79, *MEMORY[0x24BEE5610], v93);
    v81 = v78;
    LOBYTE(v78) = sub_2453879F8();
    (*(void (**)(_QWORD *, uint64_t))(a4 + 8))(v79, v80);
    if ((v78 & 1) != 0)
      break;
LABEL_56:
    __break(1u);
LABEL_57:
    swift_once();
  }
  v82 = *(_QWORD *)(a6 + 464);
  v83 = *(_QWORD *)(a6 + 472);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a6 + 440), v82);
  v84 = *(void (**)(uint64_t (*)(uint64_t, unint64_t), uint64_t, uint64_t, uint64_t))(v83 + 8);
  swift_retain();
  v84(sub_2452BBAAC, a6, v82, v83);
  swift_release();
  v119[0] = 0;
  v120 = 0;
  LOBYTE(v121) = 0;
  v85 = sub_24527E6F4(v119, &v120);
  return v90(v85);
}

uint64_t sub_24527E6F4(uint64_t *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void (*v13)(_QWORD *, uint64_t, uint64_t);
  id v14;
  uint64_t (*v15)(_QWORD *, uint64_t);
  uint64_t result;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  uint64_t v24;
  int v25;

  v5 = sub_2453879D4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *a1;
  v10 = *a2;
  v25 = *((unsigned __int8 *)a2 + 8);
  v11 = (void *)v2[29];
  *v8 = v11;
  v12 = *MEMORY[0x24BEE5610];
  v13 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v6 + 104);
  v13(v8, v12, v5);
  v14 = v11;
  LOBYTE(v11) = sub_2453879F8();
  v15 = *(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8);
  result = v15(v8, v5);
  if ((v11 & 1) != 0)
  {
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v2;
    *(_QWORD *)(v17 + 24) = v9;
    *(_QWORD *)(v17 + 32) = v10;
    *(_BYTE *)(v17 + 40) = v25;
    *v8 = v14;
    v13(v8, v12, v5);
    swift_bridgeObjectRetain();
    v18 = v14;
    swift_retain();
    v19 = sub_2453879F8();
    result = v15(v8, v5);
    if ((v19 & 1) != 0)
    {
      v20 = v2[58];
      v21 = v2[59];
      __swift_project_boxed_opaque_existential_1(v2 + 55, v20);
      v22 = (_QWORD *)swift_allocObject();
      v22[2] = v2;
      v22[3] = sub_2452BC5A8;
      v22[4] = v17;
      v23 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v21 + 8);
      swift_retain();
      swift_retain();
      v23(sub_2452BCDA0, v22, v20, v21);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall Replicator.sync()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 232);
  swift_retain();
  sub_2452E06E8(0x676E69636E7953, 0xE700000000000000, v1, (uint64_t)sub_2452B5480, v0, 0.0);
  swift_release();
}

uint64_t sub_24527E918()
{
  return sub_24527E924();
}

uint64_t sub_24527E924()
{
  unsigned __int8 v1;

  sub_245387D7C();
  return v1;
}

uint64_t sub_24527E970(char a1)
{
  return sub_24526C080(a1);
}

uint64_t (*sub_24527E990(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_24526C8E0(v2);
  return sub_245275DE8;
}

void sub_24527E9D8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void sub_24527EA04(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(*(_QWORD *)v1 + 96);
}

unint64_t sub_24527EA14()
{
  return Replicator.localDeviceIdentifier.getter();
}

uint64_t sub_24527EA34(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  return Replicator.add(recordStubs:destination:schedule:)(a1, a2, a3);
}

uint64_t sub_24527EA54(uint64_t a1, uint64_t *a2)
{
  return Replicator.delete(recordIDs:schedule:)(a1, a2);
}

uint64_t sub_24527EA74(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v6 = *v3;
  v8 = *a3;
  v7 = a3[1];
  v10 = a3[2];
  v9 = a3[3];
  v11 = *(_QWORD *)(v6 + 232);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v6;
  v12[3] = a1;
  v12[4] = a2;
  v12[5] = v8;
  v12[6] = v7;
  v12[7] = v10;
  v12[8] = v9;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2452E06E8(0xD000000000000013, 0x8000000245393110, v11, (uint64_t)sub_2452B5468, (uint64_t)v12, 0.0);
  return swift_release();
}

uint64_t sub_24527EB40(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *v3;
  v8 = *(_QWORD *)(v7 + 232);
  v9 = swift_allocObject();
  *(_BYTE *)(v9 + 16) = a3;
  *(_QWORD *)(v9 + 24) = a1;
  *(_QWORD *)(v9 + 32) = a2;
  *(_QWORD *)(v9 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2452E06E8(0xD000000000000020, 0x8000000245393130, v8, (uint64_t)sub_2452BCC8C, v9, 0.0);
  return swift_release();
}

uint64_t sub_24527EBE4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 232);
  swift_retain();
  sub_2452E06E8(0x676E69636E7953, 0xE700000000000000, v2, (uint64_t)sub_2452B5480, v1, 0.0);
  return swift_release();
}

uint64_t sub_24527EC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24527EC50(a1, a2, a3, &qword_25744F848);
}

uint64_t sub_24527EC50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  __swift_instantiateConcreteTypeFromMangledName(a4);
  return sub_245387D7C();
}

uint64_t sub_24527ECAC()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF48);
  sub_245387D7C();
  return v1;
}

uint64_t sub_24527ED1C()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257450388);
  sub_245387D7C();
  return v1;
}

uint64_t sub_24527ED80()
{
  return sub_24526CCBC();
}

void sub_24527EDA0()
{
  Replicator.validateRecords()();
}

uint64_t sub_24527EDC0()
{
  return 0x746163696C706552;
}

uint64_t Replicator.stateCaptureTitle.getter()
{
  return 0x746163696C706552;
}

uint64_t sub_24527EDF8()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF78);
  sub_245387D7C();
  return v1;
}

uint64_t Replicator.captureState(identifier:)()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF78);
  sub_245387D7C();
  return v1;
}

Swift::Void __swiftcall Replicator.retryStuckRemotePairings()()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[6];

  v1 = *(NSObject **)(v0 + 232);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_2452B54A0;
  *(_QWORD *)(v2 + 24) = v0;
  v4[4] = sub_2452643B4;
  v4[5] = v2;
  v4[0] = MEMORY[0x24BDAC760];
  v4[1] = 1107296256;
  v4[2] = sub_24525B888;
  v4[3] = &block_descriptor_150;
  v3 = _Block_copy(v4);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v1 & 1) != 0)
    __break(1u);
}

uint64_t sub_24527EFC8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  char v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  int64_t v50;
  char *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t ObjectType;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  int64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  _QWORD *v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;

  v86 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v2 = MEMORY[0x24BDAC7A8](v86);
  v85 = (uint64_t *)((char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = MEMORY[0x24BDAC7A8](v2);
  v84 = (uint64_t *)((char *)&v75 - v5);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v83 = (uint64_t *)((char *)&v75 - v7);
  MEMORY[0x24BDAC7A8](v6);
  v82 = (char *)&v75 - v8;
  v77 = a1;
  swift_beginAccess();
  sub_24525E4F0((uint64_t)(a1 + 24), (uint64_t)&v89);
  v9 = *((_QWORD *)&v90 + 1);
  v10 = v91;
  __swift_project_boxed_opaque_existential_1(&v89, *((uint64_t *)&v90 + 1));
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v10 + 8) + 8) + 32))(v9);
  v12 = 0;
  v13 = sub_2452B036C(v11, (uint64_t (*)(char *, unint64_t, uint64_t))sub_2452B0804);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = MEMORY[0x24BEE4AF8];
  if (!v14)
  {
LABEL_27:
    v88 = v15;
    v12 = (unint64_t)v77;
    if (qword_25744FD90 != -1)
      goto LABEL_48;
    goto LABEL_28;
  }
  v99 = MEMORY[0x24BEE4AF8];
  sub_24532C5F4(0, v14, 0);
  v16 = sub_245330EE4(v13);
  if (v16 < 0)
    goto LABEL_47;
  v18 = v16;
  if (v16 >= 1 << *(_BYTE *)(v13 + 32))
    goto LABEL_47;
  v19 = 0;
  v20 = v13 + 64;
  v76 = v13 + 80;
  v81 = v13;
  v78 = v14;
  v79 = v17;
  v80 = v13 + 64;
  while (1)
  {
    v12 = v18 >> 6;
    if ((*(_QWORD *)(v20 + 8 * (v18 >> 6)) & (1 << v18)) == 0)
      break;
    if (*(_DWORD *)(v13 + 36) != (_DWORD)v17)
      goto LABEL_43;
    v88 = 1 << v18;
    v87 = v19;
    v21 = v86;
    v22 = v82;
    v23 = (uint64_t)&v82[*(int *)(v86 + 48)];
    v24 = *(_QWORD *)(v13 + 56);
    v25 = (uint64_t *)(*(_QWORD *)(v13 + 48) + 16 * v18);
    v27 = *v25;
    v26 = v25[1];
    v28 = type metadata accessor for PairingRelationship();
    sub_2452B792C(v24 + *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72) * v18, v23, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    *v22 = v27;
    v22[1] = v26;
    v29 = (uint64_t)v83;
    *v83 = v27;
    *(_QWORD *)(v29 + 8) = v26;
    sub_2452B792C(v23, v29 + *(int *)(v21 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v30 = v84;
    sub_2452BC850(v29, (uint64_t)v84, (uint64_t *)&unk_25744FF90);
    swift_bridgeObjectRetain_n();
    sub_245263F80((uint64_t)v22, (uint64_t *)&unk_25744FF90);
    v31 = *(int *)(v21 + 48);
    v32 = v85;
    v33 = (uint64_t)v85 + v31;
    v34 = v30[1];
    *v85 = *v30;
    v32[1] = v34;
    sub_2452B792C((uint64_t)v30 + v31, v33, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v35 = (__int128 *)(v33 + *(int *)(v28 + 20));
    v36 = v35[7];
    v95 = v35[6];
    v96 = v36;
    v37 = v35[9];
    v97 = v35[8];
    v98 = v37;
    v38 = v35[3];
    v91 = v35[2];
    v92 = v38;
    v39 = v35[5];
    v93 = v35[4];
    v94 = v39;
    v40 = *v35;
    v90 = v35[1];
    v89 = v40;
    sub_24526432C((uint64_t)&v89);
    sub_2452B7B5C(v33, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v41 = v89;
    v42 = v91;
    v43 = v92;
    swift_bridgeObjectRetain();
    sub_245269928((uint64_t)&v89);
    sub_245263F80((uint64_t)v30, (uint64_t *)&unk_25744FF90);
    v15 = v99;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24532C5F4(0, *(_QWORD *)(v15 + 16) + 1, 1);
      v15 = v99;
    }
    v45 = *(_QWORD *)(v15 + 16);
    v44 = *(_QWORD *)(v15 + 24);
    if (v45 >= v44 >> 1)
    {
      sub_24532C5F4(v44 > 1, v45 + 1, 1);
      v15 = v99;
    }
    *(_QWORD *)(v15 + 16) = v45 + 1;
    v46 = v15 + 40 * v45;
    *(_OWORD *)(v46 + 32) = v41;
    *(_BYTE *)(v46 + 48) = v43;
    *(_OWORD *)(v46 + 56) = v42;
    v13 = v81;
    v47 = 1 << *(_BYTE *)(v81 + 32);
    if ((uint64_t)v18 >= v47)
      goto LABEL_44;
    v20 = v80;
    v48 = *(_QWORD *)(v80 + 8 * v12);
    if ((v48 & v88) == 0)
      goto LABEL_45;
    LODWORD(v17) = v79;
    if (*(_DWORD *)(v81 + 36) != (_DWORD)v79)
      goto LABEL_46;
    v49 = v48 & (-2 << (v18 & 0x3F));
    if (v49)
    {
      v18 = __clz(__rbit64(v49)) | v18 & 0xFFFFFFFFFFFFFFC0;
      v50 = v78;
    }
    else
    {
      v51 = (char *)(v12 + 1);
      v52 = (unint64_t)(v47 + 63) >> 6;
      v50 = v78;
      if (v12 + 1 >= v52)
        goto LABEL_22;
      v53 = *(_QWORD *)(v80 + 8 * (_QWORD)v51);
      if (!v53)
      {
        while (v52 - 2 != v12)
        {
          v53 = *(_QWORD *)(v76 + 8 * v12++);
          if (v53)
          {
            v51 = (char *)(v12 + 1);
            goto LABEL_21;
          }
        }
LABEL_22:
        v18 = 1 << *(_BYTE *)(v81 + 32);
        goto LABEL_23;
      }
LABEL_21:
      v18 = __clz(__rbit64(v53)) + ((_QWORD)v51 << 6);
    }
LABEL_23:
    v19 = v87 + 1;
    if (v87 + 1 == v50)
      goto LABEL_27;
    if ((v18 & 0x8000000000000000) != 0 || (uint64_t)v18 >= v47)
      goto LABEL_47;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  swift_once();
LABEL_28:
  v54 = sub_245387818();
  __swift_project_value_buffer(v54, (uint64_t)qword_257462FB0);
  swift_retain_n();
  v55 = v88;
  swift_bridgeObjectRetain_n();
  v56 = sub_2453877F4();
  v57 = sub_245387D34();
  if (os_log_type_enabled(v56, v57))
  {
    v58 = swift_slowAlloc();
    v59 = swift_slowAlloc();
    *(_QWORD *)&v89 = v59;
    *(_DWORD *)v58 = 136380931;
    v60 = *(_QWORD *)(v12 + 256);
    v87 = v59;
    if (v60)
    {
      v61 = *(_QWORD *)(v12 + 248);
      v62 = v60;
    }
    else
    {
      v64 = *(_QWORD *)(v12 + 184);
      ObjectType = swift_getObjectType();
      v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 8))(ObjectType, v64);
      if (v67)
        v61 = v66;
      else
        v61 = 0xD000000000000016;
      if (v67)
        v62 = v67;
      else
        v62 = 0x80000002453930B0;
    }
    swift_bridgeObjectRetain();
    v99 = sub_2453816D8(v61, v62, (uint64_t *)&v89);
    sub_245387E0C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v58 + 12) = 2082;
    v63 = v88;
    v68 = swift_bridgeObjectRetain();
    v69 = MEMORY[0x249531F88](v68, &type metadata for HandshakeDescriptor);
    v71 = v70;
    swift_bridgeObjectRelease();
    v99 = sub_2453816D8(v69, v71, (uint64_t *)&v89);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v56, v57, "(%{private}s) Attempting to handshake with stuck pairings: %{public}s", (uint8_t *)v58, 0x16u);
    v72 = v87;
    swift_arrayDestroy();
    MEMORY[0x24953317C](v72, -1, -1);
    MEMORY[0x24953317C](v58, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    v63 = v55;
  }
  v73 = *(_QWORD *)(v13 + 16);
  swift_release();
  if (v73)
    sub_24527F774(v63);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24527F774(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  void (*v9)(_QWORD *, uint64_t, uint64_t);
  id v10;
  uint64_t (*v11)(_QWORD *, uint64_t);
  uint64_t result;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  uint64_t v20;

  v3 = sub_2453879D4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = (void *)v1[29];
  *v6 = v7;
  v8 = *MEMORY[0x24BEE5610];
  v9 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v4 + 104);
  v9(v6, v8, v3);
  v10 = v7;
  LOBYTE(v7) = sub_2453879F8();
  v11 = *(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8);
  result = v11(v6, v3);
  if ((v7 & 1) != 0)
  {
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v1;
    *(_QWORD *)(v13 + 24) = a1;
    *v6 = v10;
    v9(v6, v8, v3);
    v14 = v10;
    swift_retain();
    swift_bridgeObjectRetain();
    v15 = sub_2453879F8();
    result = v11(v6, v3);
    if ((v15 & 1) != 0)
    {
      v16 = v1[58];
      v17 = v1[59];
      __swift_project_boxed_opaque_existential_1(v1 + 55, v16);
      v18 = (_QWORD *)swift_allocObject();
      v18[2] = v1;
      v18[3] = sub_2452BC008;
      v18[4] = v13;
      v19 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v17 + 8);
      swift_retain();
      swift_retain();
      v19(sub_2452BCDA0, v18, v16, v17);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_24527F920()
{
  Replicator.retryStuckRemotePairings()();
}

uint64_t Replicator.syncService(_:didReceiveMessage:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2452B59A8(a3);
}

uint64_t sub_24527F948(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2453875E4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_24527F9EC(a2, (uint64_t)v5);
  return sub_245263F80((uint64_t)v5, &qword_25744F610);
}

void sub_24527F9EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  Class isa;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  int EnumCaseMultiPayload;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t (*v76)(_QWORD *, uint64_t);
  __int128 *v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  char v88;
  os_log_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  void (*v108)(char *, uint64_t);
  char *v109;
  uint64_t v110;
  os_log_t v111;
  uint64_t v112;
  uint64_t (*v113)(_QWORD *, uint64_t);
  __int128 *v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  char v125;
  uint64_t v126;
  uint64_t (*v127)(uint64_t);
  uint64_t v128;
  void (*v129)(char *, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  void (*v138)(unint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  NSObject *v148;
  os_log_type_t v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t *v159;
  uint64_t v160;
  unint64_t v161;
  os_log_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t ObjectType;
  uint64_t v166;
  uint64_t v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  void (*v178)(uint64_t, uint64_t, __int128 *, char *, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t (*v188)(_QWORD *, uint64_t);
  uint64_t (*v189)(_QWORD *, uint64_t);
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  os_log_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  unsigned int (**v210)(uint64_t, uint64_t, uint64_t);
  uint64_t v211;
  uint64_t v212;
  os_log_t v213;
  uint64_t v214;
  char v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  _OWORD v236[3];

  v195 = a2;
  v214 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  MEMORY[0x24BDAC7A8](v3);
  v184 = (char *)&v180 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452C90);
  MEMORY[0x24BDAC7A8](v5);
  v193 = (uint64_t)&v180 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v7);
  v209 = (char *)&v180 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = type metadata accessor for PairingRelationship();
  v210 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v208 - 8);
  MEMORY[0x24BDAC7A8](v208);
  v206 = (uint64_t)&v180 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Message();
  v192 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v183 = (uint64_t)&v180 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v182 = (uint64_t)&v180 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v185 = (uint64_t)&v180 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v196 = (uint64_t)&v180 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v191 = (char *)&v180 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v201 = (os_log_t)((char *)&v180 - v21);
  v203 = sub_245387740();
  v205 = *(_QWORD *)(v203 - 8);
  v22 = MEMORY[0x24BDAC7A8](v203);
  v197 = (char *)&v180 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v198 = (char *)&v180 - v24;
  v25 = type metadata accessor for ReplicatorMessage.Sync(0);
  MEMORY[0x24BDAC7A8](v25);
  v204 = (uint64_t)&v180 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
  MEMORY[0x24BDAC7A8](v27);
  v194 = (uint64_t)&v180 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  MEMORY[0x24BDAC7A8](v187);
  v189 = (uint64_t (*)(_QWORD *, uint64_t))((char *)&v180 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v186 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  MEMORY[0x24BDAC7A8](v186);
  v188 = (uint64_t (*)(_QWORD *, uint64_t))((char *)&v180 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v199 = type metadata accessor for ReplicatorMessage.Handshake(0);
  v31 = MEMORY[0x24BDAC7A8](v199);
  v200 = (uint64_t)&v180 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v207 = (uint64_t)&v180 - v33;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452300);
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v180 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = (os_log_t)type metadata accessor for ReplicatorMessage(0);
  isa = v213[-1].isa;
  v38 = MEMORY[0x24BDAC7A8](v213);
  v190 = (char *)&v180 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v202 = (uint64_t)&v180 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)&v180 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v211 = (uint64_t)&v180 - v45;
  v46 = sub_2453879D4();
  v47 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v49 = (uint64_t *)((char *)&v180 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  v212 = v2;
  v50 = *(void **)(v2 + 232);
  *v49 = v50;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v47 + 104))(v49, *MEMORY[0x24BEE5610], v46);
  v51 = v50;
  v52 = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v47 + 8))(v49, v46);
  if ((v52 & 1) == 0)
  {
    __break(1u);
    swift_once();
    v58 = sub_245387818();
    __swift_project_value_buffer(v58, (uint64_t)qword_257462FB0);
    v59 = v212;
    swift_retain();
    v60 = sub_2453877F4();
    v61 = sub_245387D1C();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)swift_slowAlloc();
      v63 = swift_slowAlloc();
      *(_QWORD *)(v52 + 160) = v63;
      *(_DWORD *)v62 = 136380675;
      v64 = *(_QWORD *)(v59 + 488);
      v65 = *(_QWORD *)(v59 + 496);
      swift_bridgeObjectRetain();
      *(_QWORD *)&v216 = sub_2453816D8(v64, v65, (uint64_t *)&v226);
      sub_245387E0C();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v60, v61, "(%{private}s) Sync message could not be decoded", v62, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v63, -1, -1);
      MEMORY[0x24953317C](v62, -1, -1);

    }
    else
    {

      swift_release();
    }
    return;
  }
  v53 = *(int *)(v10 + 32);
  v54 = *(_QWORD *)(v214 + v53);
  type metadata accessor for OPACKCoder();
  sub_24537DFE8(v236);
  v180 = v53;
  v181 = v10;
  v55 = v214;
  sub_245263FBC((uint64_t)v236, (uint64_t)&v227);
  v56 = MEMORY[0x24BEE4AF8];
  v57 = sub_24531B410(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)&v226 = v56;
  *((_QWORD *)&v226 + 1) = v57;
  *(_QWORD *)&v229 = v54;
  BYTE8(v229) = 0;
  *((_QWORD *)&v217 + 1) = &type metadata for PropertyListTypeDecoder.RootDecoder;
  *(_QWORD *)&v218 = sub_245263FF8();
  *(_QWORD *)&v216 = swift_allocObject();
  sub_245264070((uint64_t)&v226, v216 + 16);
  sub_24535DEB4(&v216, (uint64_t)v36);
  sub_2452640AC((uint64_t)&v226);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v236);
  (*((void (**)(char *, _QWORD, uint64_t, os_log_t))isa + 7))(v36, 0, 1, v213);
  v66 = v211;
  sub_2452B7AB8((uint64_t)v36, v211, type metadata accessor for ReplicatorMessage);
  sub_2452B792C(v66, (uint64_t)v44, type metadata accessor for ReplicatorMessage);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v72 = (uint64_t)v44;
    v73 = v207;
    sub_2452B7AB8(v72, v207, type metadata accessor for ReplicatorMessage.Handshake);
    v74 = v200;
    sub_2452B792C(v73, v200, type metadata accessor for ReplicatorMessage.Handshake);
    v75 = swift_getEnumCaseMultiPayload();
    v68 = v212;
    if (v75)
    {
      v71 = v208;
      v70 = (uint64_t)v209;
      if (v75 == 1)
      {
        v76 = v189;
        sub_2452B7AB8(v74, (uint64_t)v189, type metadata accessor for ReplicatorMessage.Handshake.Response);
        v77 = (__int128 *)((char *)v76 + *(int *)(v187 + 24));
        v78 = v77[7];
        v79 = v77[5];
        v232 = v77[6];
        v233 = v78;
        v80 = v77[7];
        v81 = v77[9];
        v234 = v77[8];
        v235 = v81;
        v82 = v77[3];
        v83 = v77[1];
        v228 = v77[2];
        v229 = v82;
        v84 = v77[3];
        v85 = v77[5];
        v230 = v77[4];
        v231 = v85;
        v86 = v77[1];
        v226 = *v77;
        v227 = v86;
        v222 = v232;
        v223 = v80;
        v87 = v77[9];
        v224 = v234;
        v225 = v87;
        v218 = v228;
        v219 = v84;
        v220 = v230;
        v221 = v79;
        v216 = v226;
        v217 = v83;
        sub_24526432C((uint64_t)&v226);
        v88 = sub_245281094((uint64_t)&v216);
        sub_245269928((uint64_t)&v226);
        if ((v88 & 1) != 0)
          sub_245281BB8(v76, *(_QWORD *)(v214 + v180));
        else
          sub_245281DEC(v76);
        v127 = type metadata accessor for ReplicatorMessage.Handshake.Response;
        v128 = (uint64_t)v76;
      }
      else
      {
        v126 = v194;
        sub_2452B7AB8(v74, v194, type metadata accessor for ReplicatorMessage.Handshake.Complete);
        if (*(_BYTE *)(v68 + 544) == 1)
        {
          sub_245282104(v126);
          v126 = v194;
        }
        v127 = type metadata accessor for ReplicatorMessage.Handshake.Complete;
        v128 = v126;
      }
      sub_2452B7B5C(v128, v127);
      sub_2452B7B5C(v207, type metadata accessor for ReplicatorMessage.Handshake);
    }
    else
    {
      v113 = v188;
      sub_2452B7AB8(v74, (uint64_t)v188, type metadata accessor for ReplicatorMessage.Handshake.Request);
      v114 = (__int128 *)((char *)v113 + *(int *)(v186 + 24));
      v115 = v114[7];
      v116 = v114[5];
      v232 = v114[6];
      v233 = v115;
      v117 = v114[7];
      v118 = v114[9];
      v234 = v114[8];
      v235 = v118;
      v119 = v114[3];
      v120 = v114[1];
      v228 = v114[2];
      v229 = v119;
      v121 = v114[3];
      v122 = v114[5];
      v230 = v114[4];
      v231 = v122;
      v123 = v114[1];
      v226 = *v114;
      v227 = v123;
      v222 = v232;
      v223 = v117;
      v124 = v114[9];
      v224 = v234;
      v225 = v124;
      v218 = v228;
      v219 = v121;
      v220 = v230;
      v221 = v116;
      v216 = v226;
      v217 = v120;
      sub_24526432C((uint64_t)&v226);
      v125 = sub_245281094((uint64_t)&v216);
      sub_245269928((uint64_t)&v226);
      v71 = v208;
      v70 = (uint64_t)v209;
      if ((v125 & 1) != 0)
        sub_2452811C4(v113, *(_QWORD *)(v214 + v180));
      else
        sub_2452813F8((uint64_t)v113);
      sub_2452B7B5C((uint64_t)v113, type metadata accessor for ReplicatorMessage.Handshake.Request);
      sub_2452B7B5C(v207, type metadata accessor for ReplicatorMessage.Handshake);
      v68 = v212;
    }
    goto LABEL_33;
  }
  v68 = v212;
  if (EnumCaseMultiPayload == 1)
  {
    v69 = v204;
    sub_2452B7AB8((uint64_t)v44, v204, type metadata accessor for ReplicatorMessage.Sync);
    v71 = v208;
    v70 = (uint64_t)v209;
    if (*(_BYTE *)(v68 + 544) == 1)
    {
      sub_245283438(v69, v195);
      v69 = v204;
    }
    sub_2452B7B5C(v69, type metadata accessor for ReplicatorMessage.Sync);
    goto LABEL_33;
  }
  v89 = v201;
  sub_2452BC89C(v55 + *(int *)(v181 + 20), (uint64_t)v201, &qword_25440C700);
  v90 = v205;
  v91 = v203;
  if ((*(unsigned int (**)(os_log_t, uint64_t, uint64_t))(v205 + 48))(v89, 1, v203) == 1)
  {
    sub_245263F80((uint64_t)v89, &qword_25440C700);
  }
  else
  {
    v92 = v198;
    (*(void (**)(char *, os_log_t, uint64_t))(v90 + 32))(v198, v89, v91);
    if (qword_25744FD90 != -1)
      swift_once();
    v93 = sub_245387818();
    __swift_project_value_buffer(v93, (uint64_t)qword_257462FB0);
    v94 = v196;
    sub_2452B792C(v214, v196, (uint64_t (*)(_QWORD))type metadata accessor for Message);
    (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v197, v92, v91);
    swift_retain_n();
    v95 = sub_2453877F4();
    v96 = sub_245387D34();
    v97 = v96;
    if (os_log_type_enabled(v95, v96))
    {
      v98 = swift_slowAlloc();
      v207 = swift_slowAlloc();
      *(_QWORD *)&v226 = v207;
      *(_DWORD *)v98 = 136381187;
      LODWORD(v204) = v97;
      v99 = *(_QWORD *)(v68 + 488);
      v100 = *(_QWORD *)(v68 + 496);
      swift_bridgeObjectRetain();
      *(_QWORD *)&v216 = sub_2453816D8(v99, v100, (uint64_t *)&v226);
      sub_245387E0C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v98 + 12) = 2080;
      sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v101 = sub_2453880F4();
      *(_QWORD *)&v216 = sub_2453816D8(v101, v102, (uint64_t *)&v226);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_2452B7B5C(v94, (uint64_t (*)(_QWORD))type metadata accessor for Message);
      *(_WORD *)(v98 + 22) = 2082;
      v103 = v91;
      v104 = v197;
      v201 = v95;
      v105 = v103;
      v68 = v212;
      v106 = sub_2453880F4();
      *(_QWORD *)&v216 = sub_2453816D8(v106, v107, (uint64_t *)&v226);
      v66 = v211;
      sub_245387E0C();
      swift_bridgeObjectRelease();
      v108 = *(void (**)(char *, uint64_t))(v205 + 8);
      v109 = v104;
      v110 = v105;
      v108(v109, v105);
      v111 = v201;
      _os_log_impl(&dword_245256000, v201, (os_log_type_t)v204, "(%{private}s) Received ack with ID %s for %{public}s)", (uint8_t *)v98, 0x20u);
      v112 = v207;
      swift_arrayDestroy();
      MEMORY[0x24953317C](v112, -1, -1);
      MEMORY[0x24953317C](v98, -1, -1);

      v108(v198, v110);
      v71 = v208;
      v70 = (uint64_t)v209;
      goto LABEL_33;
    }

    v129 = *(void (**)(char *, uint64_t))(v90 + 8);
    v129(v197, v91);
    sub_2452B7B5C(v94, (uint64_t (*)(_QWORD))type metadata accessor for Message);
    swift_release_n();
    v129(v198, v91);
  }
  v71 = v208;
  v70 = (uint64_t)v209;
  v66 = v211;
LABEL_33:
  swift_beginAccess();
  sub_24525E4F0(v68 + 192, (uint64_t)&v226);
  v130 = *((_QWORD *)&v227 + 1);
  v131 = v228;
  __swift_project_boxed_opaque_existential_1(&v226, *((uint64_t *)&v227 + 1));
  MetadataStoring.pairingRelationship(remoteDeviceID:)(*(_QWORD *)(v214 + *(int *)(v181 + 28)), *(_QWORD *)(v214 + *(int *)(v181 + 28) + 8), v130, *(_QWORD *)(v131 + 8), v70);
  if (v210[6](v70, 1, v71) == 1)
  {
    sub_2452B7B5C(v66, type metadata accessor for ReplicatorMessage);
    sub_245263F80(v70, (uint64_t *)&unk_25744FAD0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v226);
  }
  else
  {
    v132 = v206;
    sub_2452B7AB8(v70, v206, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v226);
    v133 = v132 + *(int *)(v71 + 20);
    if (*(_QWORD *)(v133 + 32) < 7uLL
      || (sub_2452B792C(v66, v202, type metadata accessor for ReplicatorMessage),
          swift_getEnumCaseMultiPayload() > 1))
    {
      v141 = v132;
    }
    else
    {
      v210 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v133;
      sub_2452B7B5C(v202, type metadata accessor for ReplicatorMessage);
      v134 = v190;
      swift_storeEnumTagMultiPayload();
      v135 = v205;
      v136 = (unint64_t)v191;
      v137 = v203;
      (*(void (**)(char *, uint64_t, uint64_t))(v205 + 16))(v191, v214, v203);
      v138 = *(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v135 + 56);
      v139 = (uint64_t)v134;
      v138(v136, 0, 1, v137);
      v140 = v193;
      sub_245285964(v139, v132, v136, v193);
      sub_245263F80(v136, &qword_25440C700);
      sub_2452B7B5C(v139, type metadata accessor for ReplicatorMessage);
      v142 = v181;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v192 + 56))(v140, 0, 1, v181);
      sub_2452B7AB8(v140, v185, (uint64_t (*)(_QWORD))type metadata accessor for Message);
      if (qword_25744FD90 != -1)
        swift_once();
      v143 = sub_245387818();
      __swift_project_value_buffer(v143, (uint64_t)qword_257462FB0);
      v144 = v214;
      v145 = v182;
      sub_2452B792C(v214, v182, (uint64_t (*)(_QWORD))type metadata accessor for Message);
      v146 = v144;
      v147 = v183;
      sub_2452B792C(v146, v183, (uint64_t (*)(_QWORD))type metadata accessor for Message);
      swift_retain();
      v148 = sub_2453877F4();
      v149 = sub_245387D34();
      v150 = v149;
      if (os_log_type_enabled(v148, v149))
      {
        v151 = v147;
        v152 = swift_slowAlloc();
        v153 = swift_slowAlloc();
        v213 = v148;
        v214 = v153;
        *(_QWORD *)&v226 = v153;
        *(_DWORD *)v152 = 136381187;
        LODWORD(v209) = v150;
        v154 = *(_QWORD *)(v68 + 488);
        v155 = *(_QWORD *)(v68 + 496);
        swift_bridgeObjectRetain();
        *(_QWORD *)&v216 = sub_2453816D8(v154, v155, (uint64_t *)&v226);
        sub_245387E0C();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v152 + 12) = 2080;
        sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v156 = sub_2453880F4();
        *(_QWORD *)&v216 = sub_2453816D8(v156, v157, (uint64_t *)&v226);
        sub_245387E0C();
        swift_bridgeObjectRelease();
        sub_2452B7B5C(v145, (uint64_t (*)(_QWORD))type metadata accessor for Message);
        *(_WORD *)(v152 + 22) = 2082;
        v158 = v151;
        v159 = (uint64_t *)(v151 + *(int *)(v142 + 28));
        v160 = *v159;
        v161 = v159[1];
        swift_bridgeObjectRetain();
        *(_QWORD *)&v216 = sub_2453816D8(v160, v161, (uint64_t *)&v226);
        v66 = v211;
        sub_245387E0C();
        v68 = v212;
        swift_bridgeObjectRelease();
        sub_2452B7B5C(v158, (uint64_t (*)(_QWORD))type metadata accessor for Message);
        v162 = v213;
        _os_log_impl(&dword_245256000, v213, (os_log_type_t)v209, "(%{private}s) Sending ack for ID %s to %{public}s)", (uint8_t *)v152, 0x20u);
        v163 = v214;
        swift_arrayDestroy();
        MEMORY[0x24953317C](v163, -1, -1);
        MEMORY[0x24953317C](v152, -1, -1);

      }
      else
      {
        swift_release();
        sub_2452B7B5C(v145, (uint64_t (*)(_QWORD))type metadata accessor for Message);
        sub_2452B7B5C(v147, (uint64_t (*)(_QWORD))type metadata accessor for Message);

      }
      v164 = *(_QWORD *)(v68 + 184);
      ObjectType = swift_getObjectType();
      v166 = sub_2453875E4();
      v167 = (uint64_t)v184;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v166 - 8) + 56))(v184, 1, 1, v166);
      v168 = *((_OWORD *)v210 + 7);
      v169 = *((_OWORD *)v210 + 5);
      v232 = *((_OWORD *)v210 + 6);
      v233 = v168;
      v170 = *((_OWORD *)v210 + 7);
      v171 = *((_OWORD *)v210 + 9);
      v234 = *((_OWORD *)v210 + 8);
      v235 = v171;
      v172 = *((_OWORD *)v210 + 3);
      v173 = *((_OWORD *)v210 + 1);
      v228 = *((_OWORD *)v210 + 2);
      v229 = v172;
      v174 = *((_OWORD *)v210 + 3);
      v175 = *((_OWORD *)v210 + 5);
      v230 = *((_OWORD *)v210 + 4);
      v231 = v175;
      v176 = *((_OWORD *)v210 + 1);
      v226 = *(_OWORD *)v210;
      v227 = v176;
      v222 = v232;
      v223 = v170;
      v177 = *((_OWORD *)v210 + 9);
      v224 = v234;
      v225 = v177;
      v218 = v228;
      v219 = v174;
      v220 = v230;
      v221 = v169;
      v216 = v226;
      v217 = v173;
      v215 = 0;
      v178 = *(void (**)(uint64_t, uint64_t, __int128 *, char *, _QWORD, _QWORD, uint64_t, uint64_t))(v164 + 40);
      sub_24526432C((uint64_t)&v226);
      v179 = v185;
      v178(v185, v167, &v216, &v215, 0, 0, ObjectType, v164);
      sub_245269928((uint64_t)&v226);
      sub_245263F80(v167, &qword_25744F610);
      sub_2452B7B5C(v179, (uint64_t (*)(_QWORD))type metadata accessor for Message);
      v141 = v206;
    }
    sub_2452B7B5C(v141, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    sub_2452B7B5C(v66, type metadata accessor for ReplicatorMessage);
  }
}

uint64_t Replicator.syncService(_:didReceiveMessage:url:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2452B60C0(a3, a4);
}

uint64_t sub_245280E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2453875E4();
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a3, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  sub_24527F9EC(a2, (uint64_t)v7);
  return sub_245263F80((uint64_t)v7, &qword_25744F610);
}

uint64_t Replicator.syncService(_:shouldAcceptIncomingMessage:)()
{
  unsigned __int8 v1;

  sub_245387D7C();
  return v1;
}

uint64_t sub_245280F58@<X0>(uint64_t result@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char *a4@<X8>)
{
  char v5;
  uint64_t *v6;

  if (*(_QWORD *)(a2 + 176) == result)
  {
    v6 = (uint64_t *)(a3 + *(int *)(type metadata accessor for Message() + 24));
    result = *v6;
    if (*v6 == 0x7065526574617453 && v6[1] == 0xEF726F746163696CLL)
    {
      v5 = 1;
    }
    else
    {
      result = sub_245388274();
      v5 = result & 1;
    }
  }
  else
  {
    v5 = 0;
  }
  *a4 = v5;
  return result;
}

uint64_t sub_245281020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2452B59A8(a3);
}

uint64_t sub_245281028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2452B60C0(a3, a4);
}

uint64_t sub_245281034()
{
  unsigned __int8 v1;

  sub_245387D7C();
  return v1;
}

uint64_t sub_245281094(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  void *v8;
  id v9;
  uint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v3 = sub_2453879D4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)(v1 + 232);
  *v6 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE5610], v3);
  v9 = v8;
  LOBYTE(v8) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v8 & 1) != 0)
  {
    if (*(_BYTE *)(v1 + 544) == 1)
    {
      if (v7 <= 7)
      {
        swift_beginAccess();
        v12 = *(_QWORD *)(v1 + 592);
        swift_bridgeObjectRetain();
        v11 = sub_24531D83C(0xD000000000000011, 0x8000000245393670, v12);
        swift_bridgeObjectRelease();
      }
      else
      {
        v11 = 0;
      }
    }
    else
    {
      v11 = 1;
    }
    return v11 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2452811C4(uint64_t (*a1)(_QWORD *, uint64_t), uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  void (*v12)(_QWORD *, uint64_t, uint64_t);
  id v13;
  char v14;
  uint64_t (*v15)(_QWORD *, uint64_t);
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void (*v25)(uint64_t (*)(uint64_t, unint64_t), _QWORD *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD *, uint64_t);
  uint64_t v29;

  v28 = a1;
  v29 = a2;
  v3 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  v27 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v27 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2453879D4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (void *)v2[29];
  *v9 = v10;
  v11 = *MEMORY[0x24BEE5610];
  v12 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v7 + 104);
  v12(v9, v11, v6);
  v13 = v10;
  v14 = sub_2453879F8();
  v15 = *(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8);
  result = v15(v9, v6);
  if ((v14 & 1) != 0)
  {
    sub_2452B792C((uint64_t)v28, (uint64_t)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReplicatorMessage.Handshake.Request);
    v17 = *(unsigned __int8 *)(v27 + 80);
    v28 = v15;
    v18 = (v17 + 24) & ~v17;
    v19 = (v4 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v2;
    sub_2452B7AB8((uint64_t)v5, v20 + v18, type metadata accessor for ReplicatorMessage.Handshake.Request);
    *(_QWORD *)(v20 + v19) = v29;
    *v9 = v13;
    v12(v9, v11, v6);
    v21 = v13;
    swift_retain();
    LOBYTE(v18) = sub_2453879F8();
    result = v28(v9, v6);
    if ((v18 & 1) != 0)
    {
      v22 = v2[58];
      v23 = v2[59];
      __swift_project_boxed_opaque_existential_1(v2 + 55, v22);
      v24 = (_QWORD *)swift_allocObject();
      v24[2] = v2;
      v24[3] = sub_2452B7B9C;
      v24[4] = v20;
      v25 = *(void (**)(uint64_t (*)(uint64_t, unint64_t), _QWORD *, uint64_t, uint64_t))(v23 + 8);
      swift_retain();
      swift_retain();
      v25(sub_2452B7BC4, v24, v22, v23);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2452813F8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t (*v54)(_QWORD *, uint64_t);
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  char v68;
  uint64_t *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t (*v83)(_QWORD *, uint64_t);
  uint64_t v84;
  char v85;
  uint64_t v86;
  unint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  _OWORD v98[2];
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;

  v2 = v1;
  v4 = type metadata accessor for PairingRelationship();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  v7 = MEMORY[0x24BDAC7A8](v82);
  v80 = (uint64_t)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v76 - v9;
  v11 = sub_2453879D4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = (void *)v2[29];
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5610], v11);
  v16 = v15;
  LOBYTE(v15) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    if (qword_25744FD90 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v17 = sub_245387818();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_257462FB0);
  sub_2452B792C(a1, (uint64_t)v10, type metadata accessor for ReplicatorMessage.Handshake.Request);
  swift_retain();
  v81 = (uint8_t *)v18;
  v19 = sub_2453877F4();
  v20 = sub_245387D34();
  v21 = os_log_type_enabled(v19, v20);
  v83 = (uint64_t (*)(_QWORD *, uint64_t))a1;
  v78 = v4;
  v79 = v6;
  if (v21)
  {
    v22 = swift_slowAlloc();
    v77 = swift_slowAlloc();
    *(_QWORD *)&v98[0] = v77;
    *(_DWORD *)v22 = 136446466;
    v23 = v2[61];
    v24 = v2[62];
    swift_bridgeObjectRetain();
    *(_QWORD *)&v88 = sub_2453816D8(v23, v24, (uint64_t *)v98);
    sub_245387E0C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    sub_2452B792C((uint64_t)v10, v80, type metadata accessor for ReplicatorMessage.Handshake.Request);
    v25 = (uint64_t)v10;
    v26 = v82;
    v27 = sub_245387B48();
    *(_QWORD *)&v88 = sub_2453816D8(v27, v28, (uint64_t *)v98);
    sub_245387E0C();
    a1 = (uint64_t)v83;
    swift_bridgeObjectRelease();
    sub_2452B7B5C(v25, type metadata accessor for ReplicatorMessage.Handshake.Request);
    _os_log_impl(&dword_245256000, v19, v20, "(%{public}s) Received handshake request: %s", (uint8_t *)v22, 0x16u);
    v29 = v77;
    swift_arrayDestroy();
    MEMORY[0x24953317C](v29, -1, -1);
    MEMORY[0x24953317C](v22, -1, -1);

  }
  else
  {
    swift_release();
    sub_2452B7B5C((uint64_t)v10, type metadata accessor for ReplicatorMessage.Handshake.Request);

    v26 = v82;
  }
  v30 = a1 + *(int *)(v26 + 24);
  v31 = *(_QWORD *)v30;
  v32 = *(_QWORD *)(v30 + 8);
  if (v2[32])
  {
    v33 = v2;
    v34 = v2[32];
    if (v31 != v2[31])
      goto LABEL_18;
  }
  else
  {
    v35 = v2[23];
    v33 = v2;
    ObjectType = swift_getObjectType();
    v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(ObjectType, v35);
    if (v38)
      v39 = v37;
    else
      v39 = 0xD000000000000016;
    if (v38)
      v34 = v38;
    else
      v34 = 0x80000002453930B0;
    if (v31 != v39)
      goto LABEL_18;
  }
  if (v34 == v32)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
LABEL_18:
  v40 = sub_245388274();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if ((v40 & 1) != 0)
  {
    swift_retain();
    v41 = sub_2453877F4();
    v42 = sub_245387D34();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      *(_QWORD *)&v98[0] = v44;
      *(_DWORD *)v43 = 136446210;
      v81 = v43 + 4;
      v45 = v33[61];
      v46 = v33[62];
      swift_bridgeObjectRetain();
      v47 = v45;
      v26 = v82;
      *(_QWORD *)&v88 = sub_2453816D8(v47, v46, (uint64_t *)v98);
      sub_245387E0C();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v41, v42, "(%{public}s) Sending new handshake request to lower-ordered device", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v44, -1, -1);
      MEMORY[0x24953317C](v43, -1, -1);

    }
    else
    {

      swift_release();
    }
    v56 = *(_OWORD *)(v30 + 80);
    v57 = *(_OWORD *)(v30 + 112);
    v103 = *(_OWORD *)(v30 + 96);
    v104 = v57;
    v58 = *(_OWORD *)(v30 + 144);
    v59 = *(_OWORD *)(v30 + 112);
    v105 = *(_OWORD *)(v30 + 128);
    v106 = v58;
    v60 = *(_OWORD *)(v30 + 16);
    v61 = *(_OWORD *)(v30 + 48);
    v99 = *(_OWORD *)(v30 + 32);
    v100 = v61;
    v62 = *(_OWORD *)(v30 + 80);
    v63 = *(_OWORD *)(v30 + 48);
    v101 = *(_OWORD *)(v30 + 64);
    v102 = v62;
    v64 = *(_OWORD *)(v30 + 16);
    v98[0] = *(_OWORD *)v30;
    v98[1] = v64;
    v92 = v101;
    v93 = v56;
    v90 = v99;
    v91 = v63;
    v65 = *(_OWORD *)(v30 + 144);
    v96 = v105;
    v97 = v65;
    v94 = v103;
    v95 = v59;
    v66 = v98[0];
    v82 = *((_QWORD *)&v99 + 1);
    v67 = v99;
    v68 = v61;
    v88 = v98[0];
    v89 = v60;
    v69 = (uint64_t *)((char *)v83 + *(int *)(v26 + 20));
    v71 = v69[1];
    v86 = *v69;
    v70 = v86;
    v87 = v71;
    sub_24526432C((uint64_t)v98);
    sub_24526B470(v70, v71);
    v72 = (uint64_t)v79;
    sub_24528B268(&v88, (uint64_t)&v86, 0, 1, (uint64_t)v79);
    sub_24526B484(v70, v71);
    sub_245269928((uint64_t)v98);
    v88 = v66;
    LOBYTE(v89) = v68;
    *((_QWORD *)&v89 + 1) = v67;
    *(_QWORD *)&v90 = v82;
    v73 = (uint64_t *)(v72 + *(int *)(v78 + 32));
    v75 = v73[1];
    v86 = *v73;
    v74 = v86;
    v87 = v75;
    v84 = 0;
    v85 = 0;
    swift_bridgeObjectRetain();
    sub_24526B470(v74, v75);
    sub_2452891D4(&v88, &v86, &v84);
    sub_24526B484(v74, v75);
    swift_bridgeObjectRelease();
    return sub_2452B7B5C(v72, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  }
LABEL_21:
  swift_retain();
  v48 = sub_2453877F4();
  v49 = sub_245387D34();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = (uint8_t *)swift_slowAlloc();
    v51 = swift_slowAlloc();
    *(_QWORD *)&v98[0] = v51;
    *(_DWORD *)v50 = 136446210;
    v52 = v33[61];
    v53 = v33[62];
    swift_bridgeObjectRetain();
    *(_QWORD *)&v88 = sub_2453816D8(v52, v53, (uint64_t *)v98);
    sub_245387E0C();
    swift_release();
    v54 = v83;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v48, v49, "(%{public}s) Sending handshake response to higher-ordered device", v50, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v51, -1, -1);
    MEMORY[0x24953317C](v50, -1, -1);

  }
  else
  {

    swift_release();
    v54 = v83;
  }
  return sub_24529402C(v54);
}

uint64_t sub_245281BB8(uint64_t (*a1)(_QWORD *, uint64_t), uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  void (*v12)(_QWORD *, uint64_t, uint64_t);
  id v13;
  char v14;
  uint64_t (*v15)(_QWORD *, uint64_t);
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void (*v25)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD *, uint64_t);
  uint64_t v29;

  v28 = a1;
  v29 = a2;
  v3 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  v27 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v27 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2453879D4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (void *)v2[29];
  *v9 = v10;
  v11 = *MEMORY[0x24BEE5610];
  v12 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v7 + 104);
  v12(v9, v11, v6);
  v13 = v10;
  v14 = sub_2453879F8();
  v15 = *(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8);
  result = v15(v9, v6);
  if ((v14 & 1) != 0)
  {
    sub_2452B792C((uint64_t)v28, (uint64_t)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReplicatorMessage.Handshake.Response);
    v17 = *(unsigned __int8 *)(v27 + 80);
    v28 = v15;
    v18 = (v17 + 24) & ~v17;
    v19 = (v4 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v2;
    sub_2452B7AB8((uint64_t)v5, v20 + v18, type metadata accessor for ReplicatorMessage.Handshake.Response);
    *(_QWORD *)(v20 + v19) = v29;
    *v9 = v13;
    v12(v9, v11, v6);
    v21 = v13;
    swift_retain();
    LOBYTE(v18) = sub_2453879F8();
    result = v28(v9, v6);
    if ((v18 & 1) != 0)
    {
      v22 = v2[58];
      v23 = v2[59];
      __swift_project_boxed_opaque_existential_1(v2 + 55, v22);
      v24 = (_QWORD *)swift_allocObject();
      v24[2] = v2;
      v24[3] = sub_2452BA808;
      v24[4] = v20;
      v25 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v23 + 8);
      swift_retain();
      swift_retain();
      v25(sub_2452BCDA0, v24, v22, v23);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_245281DEC(uint64_t (*a1)(_QWORD *, uint64_t))
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  char v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t (*v30)(_QWORD *, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v4 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v29 - v8;
  v10 = sub_2453879D4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (void *)v2[29];
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEE5610], v10);
  v15 = v14;
  v16 = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v16 & 1) != 0)
  {
    if (qword_25744FD90 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v17 = sub_245387818();
  __swift_project_value_buffer(v17, (uint64_t)qword_257462FB0);
  sub_2452B792C((uint64_t)a1, (uint64_t)v9, type metadata accessor for ReplicatorMessage.Handshake.Response);
  swift_retain();
  v18 = sub_2453877F4();
  v19 = sub_245387D34();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v30 = a1;
    v22 = v21;
    v32 = v21;
    *(_DWORD *)v20 = 136446466;
    v29 = v4;
    v23 = v2[61];
    v24 = v2[62];
    swift_bridgeObjectRetain();
    v31 = sub_2453816D8(v23, v24, &v32);
    sub_245387E0C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    sub_2452B792C((uint64_t)v9, (uint64_t)v7, type metadata accessor for ReplicatorMessage.Handshake.Response);
    v25 = sub_245387B48();
    v31 = sub_2453816D8(v25, v26, &v32);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_2452B7B5C((uint64_t)v9, type metadata accessor for ReplicatorMessage.Handshake.Response);
    _os_log_impl(&dword_245256000, v18, v19, "(%{public}s) Received handshake response: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    v27 = v22;
    a1 = v30;
    MEMORY[0x24953317C](v27, -1, -1);
    MEMORY[0x24953317C](v20, -1, -1);
  }
  else
  {
    swift_release();
    sub_2452B7B5C((uint64_t)v9, type metadata accessor for ReplicatorMessage.Handshake.Response);
  }

  return sub_245294264(a1);
}

void sub_245282104(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  char *v33;
  void (*v34)(_QWORD *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  unint64_t v62;
  void *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  __int128 *v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  NSObject *v117;
  os_log_type_t v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  NSObject *v130;
  os_log_type_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  void *v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  void (*v166)(_QWORD *, uint64_t);
  uint64_t v167;
  uint64_t v168;
  id v169;
  unsigned int v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD v185[3];
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;

  v2 = v1;
  v183 = a1;
  v165 = sub_245387920();
  v3 = *(_QWORD *)(v165 - 8);
  MEMORY[0x24BDAC7A8](v165);
  v164 = (char *)&v152 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_245387950();
  v163 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v162 = (char *)&v152 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v7);
  v167 = (uint64_t)&v152 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = type metadata accessor for PairingRelationship();
  v175 = *(_QWORD *)(v173 - 8);
  v9 = MEMORY[0x24BDAC7A8](v173);
  v156 = (uint64_t)&v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v176 = (uint64_t)&v152 - v12;
  v161 = v13;
  MEMORY[0x24BDAC7A8](v11);
  v168 = (uint64_t)&v152 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452E80);
  MEMORY[0x24BDAC7A8](v15);
  v181 = (char *)&v152 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = type metadata accessor for Replicator.Session(0);
  v180 = *(uint64_t **)(v182 - 8);
  MEMORY[0x24BDAC7A8](v182);
  v18 = (char *)&v152 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
  v159 = *(_QWORD *)(v178 - 8);
  v19 = MEMORY[0x24BDAC7A8](v178);
  v158 = (char *)&v152 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v157 = (uint64_t)&v152 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v177 = (uint64_t)&v152 - v24;
  v160 = v25;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v152 - v26;
  v28 = sub_2453879D4();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (uint64_t *)((char *)&v152 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = (void *)v1[29];
  *v31 = v32;
  v33 = *(char **)(v29 + 104);
  v170 = *MEMORY[0x24BEE5610];
  v171 = v33;
  ((void (*)(_QWORD *))v33)(v31);
  v169 = v32;
  LOBYTE(v32) = sub_2453879F8();
  v34 = *(void (**)(_QWORD *, uint64_t))(v29 + 8);
  v172 = v28;
  v34(v31, v28);
  if ((v32 & 1) != 0)
  {
    v166 = v34;
    v155 = v3;
    if (qword_25744FD90 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v35 = sub_245387818();
  v36 = __swift_project_value_buffer(v35, (uint64_t)qword_257462FB0);
  sub_2452B792C(v183, (uint64_t)v27, type metadata accessor for ReplicatorMessage.Handshake.Complete);
  swift_retain();
  v37 = sub_2453877F4();
  v38 = sub_245387D34();
  v39 = os_log_type_enabled(v37, v38);
  v40 = (uint64_t)v18;
  v154 = v5;
  if (v39)
  {
    v41 = swift_slowAlloc();
    v174 = v18;
    v42 = v41;
    v153 = swift_slowAlloc();
    *(_QWORD *)&v196 = v153;
    *(_DWORD *)v42 = 136446466;
    v179 = v36;
    v43 = v2[61];
    v44 = v2[62];
    swift_bridgeObjectRetain();
    *(_QWORD *)&v186 = sub_2453816D8(v43, v44, (uint64_t *)&v196);
    sub_245387E0C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2080;
    sub_2452B792C((uint64_t)v27, v177, type metadata accessor for ReplicatorMessage.Handshake.Complete);
    v45 = sub_245387B48();
    *(_QWORD *)&v186 = sub_2453816D8(v45, v46, (uint64_t *)&v196);
    v36 = v179;
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_2452B7B5C((uint64_t)v27, type metadata accessor for ReplicatorMessage.Handshake.Complete);
    _os_log_impl(&dword_245256000, v37, v38, "(%{public}s) Received handshake complete %s", (uint8_t *)v42, 0x16u);
    v47 = v153;
    swift_arrayDestroy();
    MEMORY[0x24953317C](v47, -1, -1);
    v48 = v42;
    v40 = (uint64_t)v174;
    MEMORY[0x24953317C](v48, -1, -1);
  }
  else
  {
    swift_release();
    sub_2452B7B5C((uint64_t)v27, type metadata accessor for ReplicatorMessage.Handshake.Complete);
  }

  v50 = v180;
  v49 = (uint64_t)v181;
  swift_beginAccess();
  v51 = v2[64];
  v52 = v182;
  if (!*(_QWORD *)(v51 + 16))
  {
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v50[7])(v49, 1, 1, v182);
LABEL_12:
    sub_245263F80(v49, &qword_257452E80);
    swift_retain();
    v56 = sub_2453877F4();
    v57 = sub_245387D1C();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      v59 = swift_slowAlloc();
      *(_QWORD *)&v196 = v59;
      *(_DWORD *)v58 = 136446210;
      v60 = v2;
      v61 = v2[61];
      v62 = v60[62];
      swift_bridgeObjectRetain();
      *(_QWORD *)&v186 = sub_2453816D8(v61, v62, (uint64_t *)&v196);
      sub_245387E0C();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v56, v57, "(%{public}s) No session established", v58, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v59, -1, -1);
      MEMORY[0x24953317C](v58, -1, -1);

      return;
    }

    goto LABEL_33;
  }
  swift_bridgeObjectRetain();
  v53 = sub_2452C2058(v183);
  if ((v54 & 1) != 0)
  {
    sub_2452B792C(*(_QWORD *)(v51 + 56) + v50[9] * v53, v49, type metadata accessor for Replicator.Session);
    v55 = 0;
  }
  else
  {
    v55 = 1;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v50[7])(v49, v55, 1, v52);
  swift_bridgeObjectRelease();
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v50[6])(v49, 1, v52) == 1)
    goto LABEL_12;
  sub_2452B7AB8(v49, v40, type metadata accessor for Replicator.Session);
  v63 = v169;
  *v31 = v169;
  v64 = v172;
  ((void (*)(_QWORD *, _QWORD, uint64_t))v171)(v31, v170, v172);
  v65 = v63;
  LOBYTE(v63) = sub_2453879F8();
  v166(v31, v64);
  if ((v63 & 1) != 0)
  {
    v179 = v36;
    swift_beginAccess();
    sub_24525E4F0((uint64_t)(v2 + 24), (uint64_t)&v196);
    v66 = *((_QWORD *)&v197 + 1);
    v67 = v198;
    __swift_project_boxed_opaque_existential_1(&v196, *((uint64_t *)&v197 + 1));
    v68 = *(_QWORD *)(v67 + 8);
    v69 = v167;
    MetadataStoring.pairingRelationship(remoteDeviceID:)(*(_QWORD *)(v40 + *(int *)(v52 + 20)), *(_QWORD *)(v40 + *(int *)(v52 + 20) + 8), v66, v68, v167);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v196);
    v70 = v173;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v175 + 48))(v69, 1, v173) != 1)
    {
      v181 = v65;
      v174 = (char *)v40;
      v78 = v168;
      sub_2452B7AB8(v69, v168, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v79 = (__int128 *)(v78 + *(int *)(v70 + 20));
      v80 = v79[5];
      v81 = v79[7];
      v202 = v79[6];
      v203 = v81;
      v82 = v79[9];
      v83 = v79[7];
      v204 = v79[8];
      v205 = v82;
      v84 = v79[1];
      v85 = v79[3];
      v198 = v79[2];
      v199 = v85;
      v86 = v79[5];
      v87 = v79[3];
      v200 = v79[4];
      v201 = v86;
      v88 = v79[1];
      v196 = *v79;
      v197 = v88;
      v190 = v200;
      v191 = v80;
      v188 = v198;
      v189 = v87;
      v180 = (uint64_t *)v79;
      v89 = v79[9];
      v194 = v204;
      v195 = v89;
      v192 = v202;
      v193 = v83;
      v186 = v196;
      v187 = v84;
      v90 = v178;
      v91 = v183;
      v92 = (_QWORD *)(v183 + *(int *)(v178 + 20));
      v94 = v92[1];
      v185[0] = *v92;
      v93 = v185[0];
      v185[1] = v94;
      sub_24526432C((uint64_t)&v196);
      sub_24526B470(v93, v94);
      v95 = v176;
      sub_24528B268(&v186, (uint64_t)v185, 0, 1, v176);
      sub_24526B484(v93, v94);
      sub_245269928((uint64_t)&v196);
      sub_2452B7B5C(v95, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v171 = (char *)*(int *)(v90 + 24);
      v96 = sub_2452B5DE0(*(_QWORD *)&v171[v91], v78);
      sub_24525E4F0((uint64_t)(v2 + 24), (uint64_t)&v186);
      v97 = *((_QWORD *)&v187 + 1);
      v98 = v188;
      __swift_project_boxed_opaque_existential_1(&v186, *((uint64_t *)&v187 + 1));
      v99 = *(_QWORD *)(v91 + *(int *)(v90 + 28));
      swift_beginAccess();
      v100 = swift_bridgeObjectRetain();
      v101 = sub_24532DA78(v100);
      v182 = (uint64_t)v2;
      v102 = v101;
      swift_bridgeObjectRelease();
      v172 = MetadataStoring.mismatchedRecordIDs(for:remoteRecordVersions:zoneIDs:disabledClientIDs:)(v78, v99, v96, v102, v97, *(_QWORD *)(v98 + 8));
      v103 = v182;
      swift_release();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v186);
      v104 = v156;
      sub_2452B792C(v78, v156, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      swift_retain();
      v105 = sub_2453877F4();
      v106 = sub_245387D34();
      if (os_log_type_enabled(v105, v106))
      {
        v107 = swift_slowAlloc();
        v108 = swift_slowAlloc();
        *(_QWORD *)&v186 = v108;
        *(_DWORD *)v107 = 136446466;
        v109 = *(_QWORD *)(v103 + 488);
        v110 = *(_QWORD *)(v182 + 496);
        swift_bridgeObjectRetain();
        v184 = sub_2453816D8(v109, v110, (uint64_t *)&v186);
        sub_245387E0C();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v107 + 12) = 2082;
        sub_2452B792C(v104, v176, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        v111 = sub_245387B48();
        v184 = sub_2453816D8(v111, v112, (uint64_t *)&v186);
        sub_245387E0C();
        swift_bridgeObjectRelease();
        v103 = v182;
        sub_2452B7B5C(v104, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        _os_log_impl(&dword_245256000, v105, v106, "(%{public}s) [Handle Complete] Found pairing relationship: %{public}s", (uint8_t *)v107, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v108, -1, -1);
        MEMORY[0x24953317C](v107, -1, -1);
      }
      else
      {
        swift_release();
        sub_2452B7B5C(v104, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      }

      v114 = v157;
      v113 = (uint64_t)v158;
      v115 = v176;
      if (*(_QWORD *)(*(_QWORD *)&v171[v183] + 16))
      {
        v116 = v183;
        sub_2452B792C(v183, v157, type metadata accessor for ReplicatorMessage.Handshake.Complete);
        sub_2452B792C(v116, v113, type metadata accessor for ReplicatorMessage.Handshake.Complete);
        swift_retain();
        v117 = sub_2453877F4();
        v118 = sub_245387D34();
        v119 = v118;
        if (os_log_type_enabled(v117, v118))
        {
          v120 = swift_slowAlloc();
          v173 = swift_slowAlloc();
          *(_QWORD *)&v186 = v173;
          *(_DWORD *)v120 = 136446722;
          LODWORD(v171) = v119;
          v121 = *(_QWORD *)(v103 + 488);
          v122 = *(_QWORD *)(v182 + 496);
          swift_bridgeObjectRetain();
          v184 = sub_2453816D8(v121, v122, (uint64_t *)&v186);
          sub_245387E0C();
          swift_release();
          swift_bridgeObjectRelease();
          *(_WORD *)(v120 + 12) = 2050;
          v123 = *(_QWORD *)(*(_QWORD *)(v114 + *(int *)(v178 + 24)) + 16);
          sub_2452B7B5C(v114, type metadata accessor for ReplicatorMessage.Handshake.Complete);
          v184 = v123;
          sub_245387E0C();
          *(_WORD *)(v120 + 22) = 2082;
          v124 = swift_bridgeObjectRetain();
          v125 = MEMORY[0x249531F88](v124, MEMORY[0x24BEE0D00]);
          v127 = v126;
          swift_bridgeObjectRelease();
          v184 = sub_2453816D8(v125, v127, (uint64_t *)&v186);
          v103 = v182;
          sub_245387E0C();
          v115 = v176;
          swift_bridgeObjectRelease();
          sub_2452B7B5C(v113, type metadata accessor for ReplicatorMessage.Handshake.Complete);
          _os_log_impl(&dword_245256000, v117, (os_log_type_t)v171, "(%{public}s) [Handle Complete] Found mismatched zones (%{public}ld): %{public}s", (uint8_t *)v120, 0x20u);
          v128 = v173;
          swift_arrayDestroy();
          MEMORY[0x24953317C](v128, -1, -1);
          MEMORY[0x24953317C](v120, -1, -1);
        }
        else
        {
          sub_2452B7B5C(v114, type metadata accessor for ReplicatorMessage.Handshake.Complete);
          swift_release();
          sub_2452B7B5C(v113, type metadata accessor for ReplicatorMessage.Handshake.Complete);
        }

      }
      v129 = v172;
      if (*(_QWORD *)(v172 + 16))
      {
        swift_bridgeObjectRetain_n();
        swift_retain();
        v130 = sub_2453877F4();
        v131 = sub_245387D34();
        if (os_log_type_enabled(v130, v131))
        {
          v132 = swift_slowAlloc();
          v133 = swift_slowAlloc();
          *(_QWORD *)&v186 = v133;
          *(_DWORD *)v132 = 136446722;
          v134 = *(_QWORD *)(v103 + 488);
          v135 = *(_QWORD *)(v182 + 496);
          swift_bridgeObjectRetain();
          v184 = sub_2453816D8(v134, v135, (uint64_t *)&v186);
          sub_245387E0C();
          swift_release();
          swift_bridgeObjectRelease();
          *(_WORD *)(v132 + 12) = 2050;
          v184 = *(_QWORD *)(v129 + 16);
          sub_245387E0C();
          *(_WORD *)(v132 + 22) = 2082;
          v136 = type metadata accessor for Record.ID(0);
          v137 = swift_bridgeObjectRetain();
          v138 = MEMORY[0x249531F88](v137, v136);
          v140 = v139;
          swift_bridgeObjectRelease();
          v141 = v138;
          v103 = v182;
          v184 = sub_2453816D8(v141, v140, (uint64_t *)&v186);
          v115 = v176;
          sub_245387E0C();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_245256000, v130, v131, "(%{public}s) [Handle Complete] Found mismatched records (%{public}ld): %{public}s", (uint8_t *)v132, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x24953317C](v133, -1, -1);
          MEMORY[0x24953317C](v132, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_release();
        }
      }
      v142 = v183;
      sub_245294618(v129, v183);
      swift_bridgeObjectRelease();
      sub_245297B78(*v180, v180[1]);
      sub_24526D8E4();
      v143 = v177;
      sub_2452B792C(v142, v177, type metadata accessor for ReplicatorMessage.Handshake.Complete);
      v144 = v168;
      sub_2452B792C(v168, v115, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v145 = (*(unsigned __int8 *)(v159 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80);
      v146 = (v160 + *(unsigned __int8 *)(v175 + 80) + v145) & ~(unint64_t)*(unsigned __int8 *)(v175 + 80);
      v147 = swift_allocObject();
      *(_QWORD *)(v147 + 16) = v103;
      sub_2452B7AB8(v143, v147 + v145, type metadata accessor for ReplicatorMessage.Handshake.Complete);
      sub_2452B7AB8(v115, v147 + v146, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      *(_QWORD *)&v188 = sub_2452BB9C8;
      *((_QWORD *)&v188 + 1) = v147;
      *(_QWORD *)&v186 = MEMORY[0x24BDAC760];
      *((_QWORD *)&v186 + 1) = 1107296256;
      *(_QWORD *)&v187 = sub_24525DD34;
      *((_QWORD *)&v187 + 1) = &block_descriptor_1397;
      v148 = _Block_copy(&v186);
      swift_retain();
      v149 = v162;
      sub_245387938();
      v184 = MEMORY[0x24BEE4AF8];
      sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
      sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
      v150 = v164;
      v151 = v165;
      sub_245387E3C();
      MEMORY[0x2495320E4](0, v149, v150, v148);
      _Block_release(v148);
      (*(void (**)(char *, uint64_t))(v155 + 8))(v150, v151);
      (*(void (**)(char *, uint64_t))(v163 + 8))(v149, v154);
      sub_2452B7B5C(v144, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      sub_2452B7B5C((uint64_t)v174, type metadata accessor for Replicator.Session);
LABEL_33:
      swift_release();
      return;
    }
    sub_245263F80(v69, (uint64_t *)&unk_25744FAD0);
    swift_retain_n();
    v71 = sub_2453877F4();
    v72 = sub_245387D1C();
    if (os_log_type_enabled(v71, v72))
    {
      v73 = (uint8_t *)swift_slowAlloc();
      v74 = swift_slowAlloc();
      *(_QWORD *)&v196 = v74;
      *(_DWORD *)v73 = 136446210;
      v174 = (char *)v40;
      v75 = v2;
      v76 = v2[61];
      v77 = v75[62];
      swift_bridgeObjectRetain();
      *(_QWORD *)&v186 = sub_2453816D8(v76, v77, (uint64_t *)&v196);
      sub_245387E0C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v71, v72, "(%{public}s) No pairing relationship established", v73, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v74, -1, -1);
      MEMORY[0x24953317C](v73, -1, -1);

      sub_2452B7B5C((uint64_t)v174, type metadata accessor for Replicator.Session);
    }
    else
    {
      swift_release_n();

      sub_2452B7B5C(v40, type metadata accessor for Replicator.Session);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_245283438(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  void *v64;
  void (*v65)(_QWORD);
  void (*v66)(_QWORD *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  _BOOL4 v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  void *v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  uint8_t *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  uint64_t v113;
  char v114;
  NSObject *v115;
  os_log_type_t v116;
  uint8_t *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  unint64_t v121;
  NSObject *v122;
  os_log_type_t v123;
  uint8_t *v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (**v131)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t *v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t ObjectType;
  void (*v155)(uint64_t *, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  NSObject *v166;
  os_log_type_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t *v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  NSObject *v178;
  uint64_t *v179;
  os_log_type_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t v186;
  unint64_t v187;
  uint64_t *v188;
  uint64_t v189;
  int *v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t *v203;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  void (*v215)(uint64_t *, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  id v222;
  void *v223;
  unsigned int v224;
  id v225;
  id v226;
  void *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  char *v232;
  char *v233;
  uint64_t v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t *v244;
  char *v245;
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t *v263;
  uint64_t v264;
  char *v265;
  void (*v266)(_QWORD *, uint64_t);
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  id v270;
  unsigned int v271;
  void (*v272)(_QWORD *, _QWORD, uint64_t);
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  void (**v277)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281[8];
  uint64_t v282;
  unint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;

  v3 = v2;
  v259 = a2;
  v280 = a1;
  v287 = *MEMORY[0x24BDAC8D0];
  v4 = sub_2453875E4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v254 = (char *)&v228 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v243 = type metadata accessor for Record.Value(0);
  MEMORY[0x24BDAC7A8](v243);
  v244 = (uint64_t *)((char *)&v228 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v253 = (uint64_t)&v228 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v242 = (uint64_t)&v228 - v11;
  v240 = type metadata accessor for Record(0);
  MEMORY[0x24BDAC7A8](v240);
  v245 = (char *)&v228 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
  MEMORY[0x24BDAC7A8](v13);
  v238 = (uint64_t)&v228 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v237 = type metadata accessor for RecordMetadata();
  v241 = *(_QWORD *)(v237 - 8);
  v15 = MEMORY[0x24BDAC7A8](v237);
  v239 = (char *)&v228 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v250 = (uint64_t)&v228 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v257 = (uint64_t)&v228 - v19;
  v20 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value(0);
  MEMORY[0x24BDAC7A8](v20);
  v258 = (char *)&v228 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v262 = sub_245387740();
  v261 = *(_QWORD *)(v262 - 8);
  v22 = MEMORY[0x24BDAC7A8](v262);
  v235 = (char *)&v228 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v251 = (uint64_t)&v228 - v24;
  v25 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v25);
  v264 = (uint64_t)&v228 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v260 = type metadata accessor for Record.ID(0);
  v252 = *(_QWORD *)(v260 - 8);
  v27 = MEMORY[0x24BDAC7A8](v260);
  v236 = (uint64_t)&v228 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v234 = (uint64_t)&v228 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v233 = (char *)&v228 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v248 = (char *)&v228 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v232 = (char *)&v228 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v247 = (char *)&v228 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v231 = (char *)&v228 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v230 = (char *)&v228 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v249 = (uint64_t)&v228 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v246 = (uint64_t)&v228 - v46;
  MEMORY[0x24BDAC7A8](v45);
  v263 = (uint64_t *)((char *)&v228 - v47);
  v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v48);
  v269 = (uint64_t)&v228 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v268 = type metadata accessor for PairingRelationship();
  v267 = *(_QWORD *)(v268 - 8);
  MEMORY[0x24BDAC7A8](v268);
  v51 = (char *)&v228 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452E80);
  MEMORY[0x24BDAC7A8](v52);
  v278 = (uint64_t *)((char *)&v228 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0));
  v279 = type metadata accessor for Replicator.Session(0);
  v277 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v279 - 8);
  MEMORY[0x24BDAC7A8](v279);
  v276 = (uint64_t)&v228 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v275 = type metadata accessor for ReplicatorMessage.Sync(0);
  v55 = MEMORY[0x24BDAC7A8](v275);
  v57 = (char *)&v228 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v55);
  v59 = (char *)&v228 - v58;
  v60 = sub_2453879D4();
  v61 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v63 = (uint64_t *)((char *)&v228 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  v64 = (void *)v3[29];
  *v63 = v64;
  v65 = *(void (**)(_QWORD))(v61 + 104);
  v271 = *MEMORY[0x24BEE5610];
  v272 = (void (*)(_QWORD *, _QWORD, uint64_t))v65;
  v65(v63);
  v270 = v64;
  LOBYTE(v64) = sub_2453879F8();
  v66 = *(void (**)(_QWORD *, uint64_t))(v61 + 8);
  v273 = v60;
  v66(v63, v60);
  if ((v64 & 1) != 0)
  {
    v266 = v66;
    v255 = v5;
    if (qword_25744FD90 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v67 = sub_245387818();
  v68 = __swift_project_value_buffer(v67, (uint64_t)qword_257462FB0);
  sub_2452B792C(v280, (uint64_t)v59, type metadata accessor for ReplicatorMessage.Sync);
  swift_retain();
  v69 = sub_2453877F4();
  v70 = sub_245387D34();
  v71 = os_log_type_enabled(v69, v70);
  v256 = v4;
  if (v71)
  {
    v72 = swift_slowAlloc();
    v229 = swift_slowAlloc();
    v282 = v229;
    *(_DWORD *)v72 = 136446466;
    v265 = v51;
    v274 = v68;
    v73 = v3;
    v74 = v3[61];
    v75 = v3[62];
    swift_bridgeObjectRetain();
    v286 = sub_2453816D8(v74, v75, &v282);
    sub_245387E0C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v72 + 12) = 2082;
    sub_2452B792C((uint64_t)v59, (uint64_t)v57, type metadata accessor for ReplicatorMessage.Sync);
    v76 = sub_245387B48();
    v286 = sub_2453816D8(v76, v77, &v282);
    v51 = v265;
    sub_245387E0C();
    swift_bridgeObjectRelease();
    v3 = v73;
    v68 = v274;
    sub_2452B7B5C((uint64_t)v59, type metadata accessor for ReplicatorMessage.Sync);
    _os_log_impl(&dword_245256000, v69, v70, "(%{public}s) Received sync message: %{public}s", (uint8_t *)v72, 0x16u);
    v78 = v229;
    swift_arrayDestroy();
    MEMORY[0x24953317C](v78, -1, -1);
    MEMORY[0x24953317C](v72, -1, -1);
  }
  else
  {
    swift_release();
    sub_2452B7B5C((uint64_t)v59, type metadata accessor for ReplicatorMessage.Sync);
  }

  v79 = (uint64_t)v278;
  swift_beginAccess();
  v80 = v3[64];
  v81 = v279;
  v82 = (uint64_t)v277;
  if (*(_QWORD *)(v80 + 16))
  {
    swift_bridgeObjectRetain();
    v83 = sub_2452C2058(v280);
    if ((v84 & 1) != 0)
    {
      sub_2452B792C(*(_QWORD *)(v80 + 56) + *(_QWORD *)(v82 + 72) * v83, v79, type metadata accessor for Replicator.Session);
      v85 = 0;
    }
    else
    {
      v85 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v82 + 56))(v79, v85, 1, v81);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v82 + 48))(v79, 1, v81) == 1)
      goto LABEL_12;
    v274 = v68;
    sub_2452B7AB8(v79, v276, type metadata accessor for Replicator.Session);
    v92 = v270;
    *v63 = v270;
    v93 = v273;
    v272(v63, v271, v273);
    v94 = v92;
    LOBYTE(v92) = sub_2453879F8();
    v266(v63, v93);
    if ((v92 & 1) == 0)
      __break(1u);
    swift_beginAccess();
    sub_24525E4F0((uint64_t)(v3 + 24), (uint64_t)&v282);
    v95 = v284;
    v96 = v285;
    __swift_project_boxed_opaque_existential_1(&v282, v284);
    v97 = *(_QWORD *)(v96 + 8);
    v98 = v269;
    MetadataStoring.pairingRelationship(remoteDeviceID:)(*(_QWORD *)(v276 + *(int *)(v81 + 20)), *(_QWORD *)(v276 + *(int *)(v81 + 20) + 8), v95, v97, v269);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v282);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v267 + 48))(v98, 1, v268) == 1)
    {
      sub_245263F80(v98, (uint64_t *)&unk_25744FAD0);
      swift_retain_n();
      v99 = sub_2453877F4();
      v100 = sub_245387D1C();
      if (os_log_type_enabled(v99, v100))
      {
        v101 = (uint8_t *)swift_slowAlloc();
        v102 = swift_slowAlloc();
        v282 = v102;
        *(_DWORD *)v101 = 136446210;
        v103 = v3[61];
        v104 = v3[62];
        swift_bridgeObjectRetain();
        v281[4] = sub_2453816D8(v103, v104, &v282);
        sub_245387E0C();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_245256000, v99, v100, "(%{public}s) No pairing relationship established", v101, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v102, -1, -1);
        MEMORY[0x24953317C](v101, -1, -1);
      }
      else
      {
        swift_release_n();
      }

      goto LABEL_61;
    }
    sub_2452B7AB8(v98, (uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v105 = (unint64_t *)(v280 + *(int *)(v275 + 20));
    v107 = v105[2];
    v106 = v105[3];
    v109 = v105[4];
    v108 = v105[5];
    swift_beginAccess();
    v110 = v3[30];
    if (*(_QWORD *)(v110 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v111 = sub_2452C1EB4(v107, v106, v109, v108);
      if ((v112 & 1) != 0)
      {
        v278 = v3 + 24;
        v280 = *(_QWORD *)(*(_QWORD *)(v110 + 56) + 8 * v111);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        v113 = v3[74];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v114 = sub_24531D83C(v109, v108, v113);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v114 & 1) == 0)
        {
          v129 = v105[1];
          v279 = *v105;
          v130 = v261;
          v131 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v261 + 16);
          v132 = v264;
          v265 = v51;
          v133 = v51;
          v134 = v262;
          v277 = v131;
          ((void (*)(uint64_t, char *, uint64_t))v131)(v264, v133, v262);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v130 + 56))(v132, 0, 1, v134);
          v135 = v263;
          v136 = v279;
          *v263 = v279;
          v135[1] = v129;
          v135[2] = v107;
          v135[3] = v106;
          v135[4] = v109;
          v135[5] = v108;
          v137 = (uint64_t)v135;
          v138 = v260;
          sub_2452B792C(v132, (uint64_t)v135 + *(int *)(v260 + 24), type metadata accessor for Record.ID.Ownership);
          swift_bridgeObjectRetain_n();
          v139 = v129;
          v140 = v136;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (sub_245387B78() < 51)
          {
            v142 = (uint64_t)v258;
            v143 = (uint64_t)v278;
          }
          else
          {
            v141 = v251;
            sub_245321734(v140, v139, v251);
            v142 = (uint64_t)v258;
            v143 = (uint64_t)v278;
            v140 = sub_245387704();
            v139 = v144;
            (*(void (**)(uint64_t, uint64_t))(v261 + 8))(v141, v262);
            swift_bridgeObjectRelease();
          }
          sub_2452B7B5C(v264, type metadata accessor for Record.ID.Ownership);
          v145 = (uint64_t *)(v137 + *(int *)(v138 + 28));
          *v145 = v140;
          v145[1] = v139;
          v146 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord(0);
          sub_2452B792C((uint64_t)v105 + *(int *)(v146 + 20), v142, type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value);
          v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452350);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v147 - 8) + 48))(v142, 1, v147) == 1)
          {
            sub_24525E4F0(v143, (uint64_t)&v282);
            v148 = v284;
            v149 = v285;
            __swift_project_boxed_opaque_existential_1(&v282, v284);
            __swift_instantiateConcreteTypeFromMangledName(&qword_257450270);
            v150 = (*(unsigned __int8 *)(v252 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v252 + 80);
            v151 = swift_allocObject();
            *(_OWORD *)(v151 + 16) = xmmword_245389A60;
            sub_2452B792C(v137, v151 + v150, type metadata accessor for Record.ID);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v149 + 16) + 112))(v151, v148);
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v282);
            v282 = (uint64_t)v3;
            v152 = v280;
            if (MEMORY[0x24953323C](v280 + 16))
            {
              v153 = *(_QWORD *)(v152 + 24);
              ObjectType = swift_getObjectType();
              v155 = *(void (**)(uint64_t *, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v153 + 40);
              v156 = type metadata accessor for Replicator();
              v155(&v282, v137, v156, &protocol witness table for Replicator, ObjectType, v153);
              swift_unknownObjectRelease();
            }
            v282 = (uint64_t)v3;
            v157 = MEMORY[0x24953323C](v152 + 16);
            v158 = (uint64_t)v265;
            if (v157)
            {
              v159 = *(_QWORD *)(v152 + 24);
              v160 = swift_getObjectType();
              v161 = *(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v159 + 48);
              v162 = type metadata accessor for Replicator();
              v161(v281, &v282, v137, v158, v162, &protocol witness table for Replicator, v160, v159);
              swift_unknownObjectRelease();
              __asm { BR              X10 }
            }
            v163 = v246;
            sub_2452B792C(v137, v246, type metadata accessor for Record.ID);
            v164 = v137;
            v165 = v249;
            sub_2452B792C(v164, v249, type metadata accessor for Record.ID);
            v166 = sub_2453877F4();
            v167 = sub_245387D28();
            if (os_log_type_enabled(v166, v167))
            {
              v168 = swift_slowAlloc();
              v279 = swift_slowAlloc();
              v281[0] = v279;
              *(_DWORD *)v168 = 136446466;
              v278 = (_QWORD *)(v168 + 4);
              v282 = 0;
              v283 = 0xE000000000000000;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_245387EA8();
              swift_bridgeObjectRelease();
              v282 = 540697705;
              v283 = 0xE400000000000000;
              swift_bridgeObjectRetain();
              sub_245387B90();
              swift_bridgeObjectRelease();
              sub_245387B90();
              swift_bridgeObjectRetain();
              sub_245387B90();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              v282 = sub_2453816D8(v282, v283, v281);
              sub_245387E0C();
              swift_bridgeObjectRelease();
              sub_2452B7B5C(v163, type metadata accessor for Record.ID);
              *(_WORD *)(v168 + 12) = 2082;
              v169 = v249;
              v170 = Record.ID.description.getter();
              v282 = sub_2453816D8(v170, v171, v281);
              v158 = (uint64_t)v265;
              sub_245387E0C();
              swift_bridgeObjectRelease();
              sub_2452B7B5C(v169, type metadata accessor for Record.ID);
              _os_log_impl(&dword_245256000, v166, v167, "Data source for zone %{public}s cannot be found for record ID %{public}s", (uint8_t *)v168, 0x16u);
              v217 = v279;
              swift_arrayDestroy();
              MEMORY[0x24953317C](v217, -1, -1);
              MEMORY[0x24953317C](v168, -1, -1);
            }
            else
            {
              sub_2452B7B5C(v163, type metadata accessor for Record.ID);
              sub_2452B7B5C(v165, type metadata accessor for Record.ID);
            }

          }
          else
          {
            v172 = (uint64_t *)(v142 + *(int *)(v147 + 48));
            v174 = *v172;
            v173 = v172[1];
            v175 = v257;
            sub_2452B7AB8(v142, v257, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
            v176 = (char *)v105 + *(int *)(v146 + 24);
            if ((v176[8] & 1) != 0)
            {
              v177 = v236;
              sub_2452B792C(v137, v236, type metadata accessor for Record.ID);
              swift_retain_n();
              v178 = sub_2453877F4();
              v179 = (uint64_t *)v137;
              v180 = sub_245387D1C();
              if (os_log_type_enabled(v178, v180))
              {
                v181 = swift_slowAlloc();
                v279 = v173;
                v182 = v181;
                v183 = swift_slowAlloc();
                v282 = v183;
                *(_DWORD *)v182 = 136446466;
                v184 = v3[61];
                v185 = v3[62];
                swift_bridgeObjectRetain();
                v281[0] = sub_2453816D8(v184, v185, &v282);
                sub_245387E0C();
                swift_release_n();
                swift_bridgeObjectRelease();
                *(_WORD *)(v182 + 12) = 2082;
                v186 = Record.ID.description.getter();
                v281[0] = sub_2453816D8(v186, v187, &v282);
                sub_245387E0C();
                swift_bridgeObjectRelease();
                sub_2452B7B5C(v177, type metadata accessor for Record.ID);
                _os_log_impl(&dword_245256000, v178, v180, "(%{public}s) Missing encoding version for recordID %{public}s", (uint8_t *)v182, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x24953317C](v183, -1, -1);
                MEMORY[0x24953317C](v182, -1, -1);

                swift_release();
                sub_24525CB80(v174, v279);
                sub_2452B7B5C(v257, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
                v188 = v263;
              }
              else
              {

                swift_release();
                sub_24525CB80(v174, v173);
                sub_2452B7B5C(v177, type metadata accessor for Record.ID);
                swift_release_n();
                sub_2452B7B5C(v257, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
                v188 = v179;
              }
              sub_2452B7B5C((uint64_t)v188, type metadata accessor for Record.ID);
              v128 = (uint64_t)v265;
              goto LABEL_60;
            }
            v275 = *(_QWORD *)v176;
            v189 = v234;
            sub_2452B792C(v137, v234, type metadata accessor for Record.ID);
            v190 = (int *)v237;
            v191 = v175 + *(int *)(v237 + 20);
            v279 = v173;
            v192 = v235;
            v193 = v262;
            ((void (*)(char *, uint64_t, uint64_t))v277)(v235, v191, v262);
            v194 = v175;
            v195 = *(_QWORD *)(v175 + v190[6]);
            v196 = v238;
            sub_2452BC89C(v194 + v190[7], v238, &qword_25744F6B0);
            v197 = (uint64_t)v239;
            v198 = (uint64_t)&v239[v190[7]];
            v199 = sub_2453876EC();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v199 - 8) + 56))(v198, 1, 1, v199);
            sub_2452B7AB8(v189, v197, type metadata accessor for Record.ID);
            (*(void (**)(uint64_t, char *, uint64_t))(v261 + 32))(v197 + v190[5], v192, v193);
            *(_QWORD *)(v197 + v190[6]) = v195;
            swift_bridgeObjectRetain();
            sub_2452BBA60(v196, v198, &qword_25744F6B0);
            v200 = v250;
            sub_2452B7AB8(v197, v250, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
            sub_2452B792C(v200, v197, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
            v201 = v242;
            sub_2452BC89C(v259, v242, &qword_25744F610);
            v202 = v243;
            v203 = v244;
            v204 = (uint64_t)v244 + *(int *)(v243 + 20);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v255 + 56))(v204, 1, 1, v256);
            *(uint64_t *)((char *)v203 + *(int *)(v202 + 24)) = v275;
            v205 = v279;
            *v203 = v174;
            v203[1] = v205;
            v277 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v174;
            sub_245261C44(v174, v205);
            sub_2452BBA60(v201, v204, &qword_25744F610);
            v206 = (uint64_t)v245;
            sub_2452B7AB8((uint64_t)v203, (uint64_t)&v245[*(int *)(v240 + 20)], type metadata accessor for Record.Value);
            sub_2452B7AB8(v197, v206, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
            sub_24525E4F0((uint64_t)v278, (uint64_t)&v282);
            v207 = v284;
            v208 = v285;
            __swift_project_boxed_opaque_existential_1(&v282, v284);
            __swift_instantiateConcreteTypeFromMangledName(&qword_257450230);
            v209 = (*(unsigned __int8 *)(v241 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v241 + 80);
            v210 = swift_allocObject();
            *(_OWORD *)(v210 + 16) = xmmword_245389A60;
            sub_2452B792C(v200, v210 + v209, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v208 + 16) + 104))(v210, v207);
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v282);
            v282 = (uint64_t)v3;
            v211 = v280;
            v212 = MEMORY[0x24953323C](v280 + 16);
            v158 = (uint64_t)v265;
            if (v212)
            {
              v213 = *(_QWORD *)(v211 + 24);
              v214 = swift_getObjectType();
              v215 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v213 + 32);
              v216 = type metadata accessor for Replicator();
              v215(&v282, v206, v158, v216, &protocol witness table for Replicator, v214, v213);
              swift_unknownObjectRelease();
            }
            sub_24525CB80((uint64_t)v277, v279);
            sub_2452B7B5C(v206, type metadata accessor for Record);
            sub_2452B7B5C(v250, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
            sub_2452B7B5C(v257, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
          }
          v218 = v256;
          v219 = v255;
          v220 = v254;
          v221 = v253;
          sub_2452BC89C(v259, v253, &qword_25744F610);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v219 + 48))(v221, 1, v218) == 1)
          {
            sub_245263F80(v221, &qword_25744F610);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v219 + 32))(v220, v221, v218);
            v222 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
            v223 = (void *)sub_24538759C();
            v282 = 0;
            v224 = objc_msgSend(v222, sel_removeItemAtURL_error_, v223, &v282);

            if (v224)
            {
              v225 = (id)v282;
            }
            else
            {
              v226 = (id)v282;
              v227 = (void *)sub_245387584();

              swift_willThrow();
            }
            (*(void (**)(char *, uint64_t))(v219 + 8))(v220, v218);
          }
          sub_2452725FC();
          swift_release();
          sub_2452B7B5C((uint64_t)v263, type metadata accessor for Record.ID);
          v128 = v158;
          goto LABEL_60;
        }
        swift_retain_n();
        v115 = sub_2453877F4();
        v116 = sub_245387D1C();
        if (os_log_type_enabled(v115, v116))
        {
          v117 = (uint8_t *)swift_slowAlloc();
          v118 = swift_slowAlloc();
          v282 = v118;
          *(_DWORD *)v117 = 136446210;
          v119 = v51;
          v120 = v3[61];
          v121 = v3[62];
          swift_bridgeObjectRetain();
          v281[0] = sub_2453816D8(v120, v121, &v282);
          sub_245387E0C();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_245256000, v115, v116, "(%{public}s) Client is disabled", v117, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24953317C](v118, -1, -1);
          MEMORY[0x24953317C](v117, -1, -1);

          swift_release();
LABEL_29:
          v128 = (uint64_t)v119;
LABEL_60:
          sub_2452B7B5C(v128, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
LABEL_61:
          sub_2452B7B5C(v276, type metadata accessor for Replicator.Session);
          return;
        }
        swift_release_n();

        swift_release();
        goto LABEL_31;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_retain_n();
    v122 = sub_2453877F4();
    v123 = sub_245387D1C();
    if (os_log_type_enabled(v122, v123))
    {
      v124 = (uint8_t *)swift_slowAlloc();
      v125 = swift_slowAlloc();
      v282 = v125;
      *(_DWORD *)v124 = 136446210;
      v119 = v51;
      v126 = v3[61];
      v127 = v3[62];
      swift_bridgeObjectRetain();
      v281[1] = sub_2453816D8(v126, v127, &v282);
      sub_245387E0C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v122, v123, "(%{public}s) No data source", v124, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v125, -1, -1);
      MEMORY[0x24953317C](v124, -1, -1);

      goto LABEL_29;
    }
    swift_release_n();

LABEL_31:
    v128 = (uint64_t)v51;
    goto LABEL_60;
  }
  v277[7](v79, 1, 1, v279);
LABEL_12:
  sub_245263F80(v79, &qword_257452E80);
  swift_retain();
  v86 = sub_2453877F4();
  v87 = sub_245387D1C();
  if (os_log_type_enabled(v86, v87))
  {
    v88 = (uint8_t *)swift_slowAlloc();
    v89 = swift_slowAlloc();
    v282 = v89;
    *(_DWORD *)v88 = 136446210;
    v90 = v3[61];
    v91 = v3[62];
    swift_bridgeObjectRetain();
    v281[7] = sub_2453816D8(v90, v91, &v282);
    sub_245387E0C();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v86, v87, "(%{public}s) No session established", v88, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v89, -1, -1);
    MEMORY[0x24953317C](v88, -1, -1);

  }
  else
  {

    swift_release();
  }
}

uint64_t sub_245285964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  char v13;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v9 = type metadata accessor for PairingRelationship();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_245276190(a2);
  if ((v13 & 1) == 0)
    return sub_2452A029C(a1, v12, a3, a4);
  if (qword_25744FD90 != -1)
    swift_once();
  v15 = sub_245387818();
  __swift_project_value_buffer(v15, (uint64_t)qword_257462FB0);
  sub_2452B792C(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  swift_retain();
  v16 = sub_2453877F4();
  v17 = sub_245387D1C();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v27 = v19;
    *(_DWORD *)v18 = 136446466;
    v20 = *(_QWORD *)(v4 + 488);
    v21 = *(_QWORD *)(v4 + 496);
    swift_bridgeObjectRetain();
    v26 = sub_2453816D8(v20, v21, &v27);
    sub_245387E0C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    sub_245387740();
    sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v22 = sub_2453880F4();
    v26 = sub_2453816D8(v22, v23, &v27);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_2452B7B5C((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    _os_log_impl(&dword_245256000, v16, v17, "(%{public}s) Can't resolve protocol version when trying to construct message for: %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v19, -1, -1);
    MEMORY[0x24953317C](v18, -1, -1);
  }
  else
  {
    swift_release();
    sub_2452B7B5C((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  }

  sub_2452B9768();
  swift_allocError();
  *v24 = 1;
  return swift_willThrow();
}

uint64_t sub_245285C50(char a1)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;

  if ((a1 & 1) != 0)
  {
    v2 = sub_245323DF8(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v5 = v2[2];
    v4 = v2[3];
    if (v5 >= v4 >> 1)
      v2 = sub_245323DF8((_QWORD *)(v4 > 1), v5 + 1, 1, v2);
    v2[2] = v5 + 1;
    v6 = &v2[2 * v5];
    v6[4] = 0xD00000000000001BLL;
    v6[5] = 0x80000002453935A0;
    if ((a1 & 2) == 0)
    {
LABEL_3:
      if ((a1 & 4) == 0)
        goto LABEL_4;
LABEL_14:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v2 = sub_245323DF8(0, v2[2] + 1, 1, v2);
      v11 = v2[2];
      v10 = v2[3];
      if (v11 >= v10 >> 1)
        v2 = sub_245323DF8((_QWORD *)(v10 > 1), v11 + 1, 1, v2);
      v2[2] = v11 + 1;
      v12 = &v2[2 * v11];
      v12[4] = 0xD000000000000016;
      v12[5] = 0x8000000245393560;
      goto LABEL_19;
    }
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((a1 & 2) == 0)
      goto LABEL_3;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_245323DF8(0, v2[2] + 1, 1, v2);
  v8 = v2[2];
  v7 = v2[3];
  if (v8 >= v7 >> 1)
    v2 = sub_245323DF8((_QWORD *)(v7 > 1), v8 + 1, 1, v2);
  v2[2] = v8 + 1;
  v9 = &v2[2 * v8];
  v9[4] = 0xD00000000000001DLL;
  v9[5] = 0x8000000245393580;
  if ((a1 & 4) != 0)
    goto LABEL_14;
LABEL_4:
  if (v2[2])
  {
LABEL_19:
    __swift_instantiateConcreteTypeFromMangledName(&qword_257450000);
    sub_24526381C(&qword_257450008, &qword_257450000, MEMORY[0x24BEE12B0]);
    v3 = sub_245387AC4();
    swift_bridgeObjectRelease();
    return v3;
  }
  swift_bridgeObjectRelease();
  return 1701736302;
}

_QWORD *sub_245285E88@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_245285E94()
{
  _QWORD *v0;

  return sub_245285C50(*v0);
}

void sub_245285E9C(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_245285EA4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_245285EB8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_245285ECC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_245285EE0(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_245285F10@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_245285F3C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_245285F60(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_245285F74(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_245285F88(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_245285F9C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_245285FB0(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_245285FC4(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_245285FD8(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_245285FEC()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_245285FFC()
{
  return sub_245387E30();
}

_QWORD *sub_245286014(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_245286028@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_245286038(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_245286044(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_245286058@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_2452B3EEC(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_245286094(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  _QWORD *v34;
  NSObject *v35;
  uint64_t v36;
  void (*isa)(_QWORD, _QWORD, _QWORD);
  _QWORD *v38;
  void (*v39)(_QWORD, _QWORD);
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t result;
  dispatch_group_t v45;
  _QWORD *v46;
  void *v47;
  NSObject *v48;
  char *v49;
  NSObject *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  _QWORD *v55;
  void *v56;
  NSObject *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  NSObject *v69;
  uint64_t v70;
  dispatch_group_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  _QWORD *v83;
  NSObject *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t aBlock;
  uint64_t v96;
  uint64_t (*v97)(uint64_t);
  void *v98;
  void *v99;
  _QWORD *v100;

  v80 = a2;
  v79 = a1;
  v3 = sub_245387920();
  v78 = *(void (**)(char *, uint64_t))(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_245387950();
  v77 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v81 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = (_QWORD *)sub_245387914();
  v84 = *(v88 - 1);
  MEMORY[0x24BDAC7A8](v88);
  v83 = (uint64_t *)((char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v92 = sub_2453879B0();
  v87 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2453879D4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v93 = v2;
  v15 = *(void **)(v2 + 232);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5610], v11);
  v16 = v15;
  v17 = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v17 & 1) != 0)
  {
    v91 = v16;
    v74 = v5;
    if (qword_25744FD90 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v75 = v3;
  v18 = sub_245387818();
  __swift_project_value_buffer(v18, (uint64_t)qword_257462FB0);
  v19 = v93;
  swift_retain();
  v20 = sub_2453877F4();
  v21 = sub_245387D34();
  v22 = os_log_type_enabled(v20, v21);
  v90 = v6;
  v76 = v10;
  if (v22)
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    aBlock = v24;
    *(_DWORD *)v23 = 136380675;
    v26 = *(_QWORD *)(v19 + 488);
    v25 = *(_QWORD *)(v19 + 496);
    swift_bridgeObjectRetain();
    v94 = sub_2453816D8(v26, v25, &aBlock);
    sub_245387E0C();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v20, v21, "(%{private}s) Gathering device list from sync service", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v24, -1, -1);
    MEMORY[0x24953317C](v23, -1, -1);

  }
  else
  {

    swift_release();
  }
  v27 = v87;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574500E8);
  v28 = swift_allocObject();
  *(_DWORD *)(v28 + 24) = 0;
  v89 = v28;
  *(_QWORD *)(v28 + 16) = MEMORY[0x24BEE4AF8];
  v71 = dispatch_group_create();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257450278);
  v29 = *(_QWORD *)(v27 + 72);
  v30 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v82 = 2 * v29;
  v31 = swift_allocObject();
  v86 = v31;
  *(_OWORD *)(v31 + 16) = xmmword_24538A090;
  v32 = v31 + v30;
  v33 = v76;
  sub_245387998();
  v34 = v83;
  v35 = v84;
  *v83 = 10;
  v36 = *MEMORY[0x24BEE5420];
  isa = (void (*)(_QWORD, _QWORD, _QWORD))v35[13].isa;
  v38 = v88;
  isa(v34, v36, v88);
  sub_2453879A4();
  v39 = (void (*)(_QWORD, _QWORD))v35[1].isa;
  v39(v34, v38);
  v40 = *(void (**)(char *, uint64_t))(v27 + 8);
  v41 = v92;
  v40(v33, v92);
  sub_245387998();
  *v34 = 20;
  isa(v34, v36, v38);
  v72 = v32 + v29;
  sub_2453879A4();
  v39(v34, v38);
  v40(v33, v41);
  v85 = v32;
  v42 = v32 + v82;
  v43 = v33;
  sub_245387998();
  *v34 = 30;
  isa(v34, v36, v38);
  v73 = v42;
  sub_2453879A4();
  v39(v34, v38);
  v88 = v40;
  result = ((uint64_t (*)(char *, uint64_t))v40)(v33, v41);
  if (*(_QWORD *)(v86 + 16) < 3uLL)
  {
    __break(1u);
  }
  else
  {
    v45 = v71;
    dispatch_group_enter(v71);
    v84 = *(NSObject **)(v87 + 16);
    ((void (*)(char *, unint64_t, uint64_t))v84)(v33, v85, v41);
    v46 = (_QWORD *)swift_allocObject();
    v46[2] = v93;
    v46[3] = 0;
    v46[4] = v89;
    v46[5] = v45;
    v99 = sub_2452B78A4;
    v100 = v46;
    aBlock = MEMORY[0x24BDAC760];
    v96 = 1107296256;
    v97 = sub_24525DD34;
    v98 = &block_descriptor_210;
    v47 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    v48 = v45;
    v49 = v81;
    sub_245387938();
    v94 = MEMORY[0x24BEE4AF8];
    v83 = (_QWORD *)sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    v82 = sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
    v51 = v74;
    v71 = v50;
    v52 = v75;
    sub_245387E3C();
    MEMORY[0x2495320B4](v33, v49, v51, v47);
    _Block_release(v47);
    v87 = *((_QWORD *)v78 + 1);
    ((void (*)(char *, uint64_t))v87)(v51, v52);
    v53 = *(void (**)(char *, uint64_t))(v77 + 8);
    v53(v49, v90);
    v78 = v53;
    v54 = v92;
    ((void (*)(char *, uint64_t))v88)(v33, v92);
    swift_release();
    dispatch_group_enter(v48);
    ((void (*)(char *, uint64_t, uint64_t))v84)(v33, v72, v54);
    v55 = (_QWORD *)swift_allocObject();
    v55[2] = v93;
    v55[3] = 1;
    v55[4] = v89;
    v55[5] = v48;
    v99 = sub_2452BC9DC;
    v100 = v55;
    aBlock = MEMORY[0x24BDAC760];
    v96 = 1107296256;
    v97 = sub_24525DD34;
    v98 = &block_descriptor_217;
    v56 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    v57 = v48;
    sub_245387938();
    v94 = MEMORY[0x24BEE4AF8];
    sub_245387E3C();
    MEMORY[0x2495320B4](v33, v49, v51, v56);
    _Block_release(v56);
    ((void (*)(char *, uint64_t))v87)(v51, v52);
    v58 = v90;
    v53(v49, v90);
    v59 = v92;
    ((void (*)(char *, uint64_t))v88)(v33, v92);
    swift_release();
    dispatch_group_enter(v57);
    ((void (*)(char *, unint64_t, uint64_t))v84)(v33, v73, v59);
    v60 = (_QWORD *)swift_allocObject();
    v60[2] = v93;
    v60[3] = 2;
    v61 = v89;
    v60[4] = v89;
    v60[5] = v57;
    v99 = sub_2452BC9DC;
    v100 = v60;
    aBlock = MEMORY[0x24BDAC760];
    v96 = 1107296256;
    v97 = sub_24525DD34;
    v98 = &block_descriptor_224;
    v62 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    v84 = v57;
    sub_245387938();
    v94 = MEMORY[0x24BEE4AF8];
    sub_245387E3C();
    MEMORY[0x2495320B4](v43, v49, v51, v62);
    _Block_release(v62);
    ((void (*)(char *, uint64_t))v87)(v51, v52);
    v63 = v58;
    v64 = v78;
    v78(v49, v63);
    ((void (*)(char *, uint64_t))v88)(v43, v92);
    swift_release();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v65 = (_QWORD *)swift_allocObject();
    v66 = v93;
    v65[2] = v61;
    v65[3] = v66;
    v67 = v80;
    v65[4] = v79;
    v65[5] = v67;
    v99 = sub_2452B7920;
    v100 = v65;
    aBlock = MEMORY[0x24BDAC760];
    v96 = 1107296256;
    v97 = sub_24525DD34;
    v98 = &block_descriptor_230;
    v68 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_245387938();
    v94 = MEMORY[0x24BEE4AF8];
    sub_245387E3C();
    v69 = v84;
    sub_245387D40();
    _Block_release(v68);
    swift_release();

    ((void (*)(char *, uint64_t))v87)(v51, v52);
    v64(v49, v90);
    return swift_release();
  }
  return result;
}

void sub_245286B20(_QWORD *a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;

  v7 = a1[23];
  ObjectType = swift_getObjectType();
  v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
  swift_bridgeObjectRetain();
  sub_2452B1950(&v25);
  swift_bridgeObjectRelease();
  v9 = v25;
  if (qword_25744FD90 != -1)
    swift_once();
  v10 = sub_245387818();
  __swift_project_value_buffer(v10, (uint64_t)qword_257462FB0);
  swift_retain_n();
  swift_retain_n();
  v11 = sub_2453877F4();
  v12 = sub_245387D34();
  if (os_log_type_enabled(v11, v12))
  {
    v23 = a3;
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v25 = v14;
    *(_DWORD *)v13 = 136381187;
    v24 = a4;
    v15 = a1[61];
    v16 = a1[62];
    swift_bridgeObjectRetain();
    sub_2453816D8(v15, v16, &v25);
    sub_245387E0C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2050;
    sub_245387E0C();
    *(_WORD *)(v13 + 22) = 2081;
    v17 = swift_retain();
    v18 = MEMORY[0x249531F88](v17, MEMORY[0x24BEE0D00]);
    v20 = v19;
    swift_release();
    v21 = v18;
    a4 = v24;
    sub_2453816D8(v21, v20, &v25);
    sub_245387E0C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v11, v12, "(%{private}s) Sync service returned device list %{public}ld: %{private}s", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v14, -1, -1);
    v22 = v13;
    a3 = v23;
    MEMORY[0x24953317C](v22, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a3 + 24));
  sub_245286E18((_QWORD **)(a3 + 16), v9);
  os_unfair_lock_unlock((os_unfair_lock_t)(a3 + 24));
  swift_release();
  dispatch_group_leave(a4);
}

uint64_t sub_245286E18(_QWORD **a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t result;
  unint64_t v6;
  unint64_t v7;

  v4 = *a1;
  swift_bridgeObjectRetain();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_245324390(0, v4[2] + 1, 1, v4);
    v4 = (_QWORD *)result;
  }
  v7 = v4[2];
  v6 = v4[3];
  if (v7 >= v6 >> 1)
  {
    result = (uint64_t)sub_245324390((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
    v4 = (_QWORD *)result;
  }
  v4[2] = v7 + 1;
  v4[v7 + 4] = a2;
  *a1 = v4;
  return result;
}

uint64_t sub_245286EC8(os_unfair_lock_s *a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v26)(_QWORD);
  uint64_t v27;

  v7 = (uint64_t)&a1[4];
  v8 = a1 + 6;
  os_unfair_lock_lock(a1 + 6);
  sub_245287240(v7, &v27);
  os_unfair_lock_unlock(v8);
  v9 = v27;
  if (v27)
  {
    if (qword_25744FD90 != -1)
      swift_once();
    v10 = sub_245387818();
    __swift_project_value_buffer(v10, (uint64_t)qword_257462FB0);
    swift_retain();
    v11 = sub_2453877F4();
    v12 = sub_245387D34();
    if (os_log_type_enabled(v11, v12))
    {
      v26 = a3;
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v27 = v14;
      *(_DWORD *)v13 = 136380675;
      v15 = *(_QWORD *)(a2 + 488);
      v16 = *(_QWORD *)(a2 + 496);
      swift_bridgeObjectRetain();
      v17 = v15;
      a3 = v26;
      sub_2453816D8(v17, v16, &v27);
      sub_245387E0C();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v11, v12, "(%{private}s) Sync service has given us a reasonable list of devices.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v14, -1, -1);
      MEMORY[0x24953317C](v13, -1, -1);

    }
    else
    {

      swift_release();
    }
    a3(v9);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_25744FD90 != -1)
      swift_once();
    v18 = sub_245387818();
    __swift_project_value_buffer(v18, (uint64_t)qword_257462FB0);
    swift_retain();
    v19 = sub_2453877F4();
    v20 = sub_245387D34();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v27 = v22;
      *(_DWORD *)v21 = 136380675;
      v23 = *(_QWORD *)(a2 + 488);
      v24 = *(_QWORD *)(a2 + 496);
      swift_bridgeObjectRetain();
      sub_2453816D8(v23, v24, &v27);
      sub_245387E0C();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v19, v20, "(%{private}s) Sync service has returned an inconsistent device list; spinning the wheel again",
        v21,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v22, -1, -1);
      MEMORY[0x24953317C](v21, -1, -1);

    }
    else
    {

      swift_release();
    }
    return sub_245286094(a3, a4);
  }
}

uint64_t sub_245287240@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v3 = *(_QWORD **)result;
  v4 = *(_QWORD *)(*(_QWORD *)result + 16);
  if (v4)
  {
    v5 = v4 - 1;
    if (v4 != 1)
    {
      v7 = (_QWORD *)v3[4];
      v8 = (_QWORD *)v3[5];
      v6 = v3 + 4;
      v9 = v7[2];
      if (v9 != v8[2])
      {
LABEL_29:
        *a2 = 0;
        return result;
      }
      v10 = 1;
      while (1)
      {
        if (v9 && v7 != v8)
        {
          result = v7[4];
          if (result != v8[4] || v7[5] != v8[5])
          {
            result = sub_245388274();
            if ((result & 1) == 0)
              goto LABEL_29;
          }
          if (v9 != 1)
          {
            result = v7[6];
            if (result != v8[6] || v7[7] != v8[7])
            {
              result = sub_245388274();
              if ((result & 1) == 0)
                goto LABEL_29;
            }
            v12 = v9 - 2;
            if (v12)
            {
              v14 = v7 + 9;
              v15 = v8 + 9;
              do
              {
                result = *(v14 - 1);
                if (result != *(v15 - 1) || *v14 != *v15)
                {
                  result = sub_245388274();
                  if ((result & 1) == 0)
                    goto LABEL_29;
                }
                v14 += 2;
                v15 += 2;
              }
              while (--v12);
            }
          }
        }
        if (v10 == v5)
          break;
        v13 = v3[2];
        if (v10 >= v13)
        {
          __break(1u);
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
        if (v10 + 1 >= v13)
          goto LABEL_33;
        v7 = (_QWORD *)v6[v10];
        v8 = (_QWORD *)v6[v10 + 1];
        v9 = v7[2];
        ++v10;
        if (v9 != v8[2])
          goto LABEL_29;
      }
      if (!v3[2])
        goto LABEL_35;
    }
    *a2 = v3[4];
    return swift_bridgeObjectRetain();
  }
  else
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
  }
  return result;
}

void sub_2452873C4(_QWORD *a1, uint64_t a2, int64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  os_log_t v43;
  _QWORD *v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t (*v50)();
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  unint64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t (*v65)();
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  os_log_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  NSObject *v101;
  os_log_type_t v102;
  _BOOL4 v103;
  uint8_t *v104;
  uint8_t *v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t *, _QWORD);
  BOOL *v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(uint64_t *, _QWORD);
  BOOL *v113;
  uint64_t v114;
  os_log_t v115;
  uint64_t v116;
  int64_t v117;
  int v118;
  uint64_t v119;
  __int128 v120;
  _QWORD *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  os_log_t v138;
  uint64_t v139;
  NSObject *v140;
  int64_t v141;
  uint64_t v142;
  char v143;
  uint64_t v144[2];
  uint64_t v145;
  uint64_t v146;

  v141 = a3;
  v5 = sub_245387740();
  v130 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v129 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = type metadata accessor for PairingRelationship();
  v136 = *(_QWORD *)(v139 - 8);
  v7 = MEMORY[0x24BDAC7A8](v139);
  v9 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = ((char *)&v114 - v10);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FFA0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13);
  v17 = (uint64_t *)((char *)&v114 - v16);
  swift_beginAccess();
  if (*(_BYTE *)(a2 + 560) == 1)
  {
    if (qword_25744FD90 != -1)
      goto LABEL_88;
    goto LABEL_3;
  }
  v123 = *(_QWORD *)(a2 + 552);
  *(_QWORD *)(a2 + 552) = 0;
  *(_BYTE *)(a2 + 560) = 1;
  swift_beginAccess();
  v124 = a2 + 192;
  sub_24525E4F0(a2 + 192, (uint64_t)v144);
  v22 = v145;
  v23 = v146;
  __swift_project_boxed_opaque_existential_1(v144, v145);
  v24 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v23 + 8) + 8) + 32))(v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v144);
  if (qword_25744FD90 != -1)
    swift_once();
  v25 = sub_245387818();
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_257462FB0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v126 = v26;
  v27 = v24;
  v28 = sub_2453877F4();
  v29 = sub_245387D34();
  v138 = v28;
  LODWORD(v135) = v29;
  v30 = os_log_type_enabled(v28, v29);
  v31 = MEMORY[0x24BEE4AD8];
  v127 = v5;
  v125 = v9;
  v140 = v11;
  v128 = a2;
  if (v30)
  {
    v32 = swift_slowAlloc();
    v134 = (_QWORD *)swift_slowAlloc();
    v144[0] = (uint64_t)v134;
    *(_DWORD *)v32 = 136446722;
    v33 = swift_bridgeObjectRetain();
    v34 = MEMORY[0x249531F88](v33, MEMORY[0x24BEE0D00]);
    v36 = v35;
    swift_bridgeObjectRelease();
    v142 = sub_2453816D8(v34, v36, v144);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2082;
    swift_bridgeObjectRetain();
    v37 = sub_245387A7C();
    v39 = v38;
    swift_bridgeObjectRelease();
    v40 = v37;
    v11 = v140;
    v142 = sub_2453816D8(v40, v39, v144);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 22) = 2082;
    v41 = sub_245285C50(v141);
    v142 = sub_2453816D8(v41, v42, v144);
    v31 = MEMORY[0x24BEE4AD8];
    sub_245387E0C();
    swift_bridgeObjectRelease();
    v43 = v138;
    _os_log_impl(&dword_245256000, v138, (os_log_type_t)v135, "Reconciling devices. SyncService: %{public}s, Replicator: %{public}s, options: %{public}s", (uint8_t *)v32, 0x20u);
    v44 = v134;
    swift_arrayDestroy();
    MEMORY[0x24953317C](v44, -1, -1);
    MEMORY[0x24953317C](v32, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v141 = 0;
  v135 = v27;
  v46 = *(_QWORD *)(v27 + 64);
  v132 = v27 + 64;
  v47 = 1 << *(_BYTE *)(v27 + 32);
  v48 = -1;
  if (v47 < 64)
    v48 = ~(-1 << v47);
  v49 = v48 & v46;
  v138 = v11 + 6;
  v122 = &v143;
  v133 = (unint64_t)(v47 + 63) >> 6;
  v117 = v133 - 1;
  v134 = a1;
  v121 = a1 + 9;
  v131 = MEMORY[0x24BEE4AF8];
  v50 = type metadata accessor for PairingRelationship;
  *(_QWORD *)&v45 = 136446466;
  v120 = v45;
  v119 = v31 + 8;
  v137 = v15;
  if ((v48 & v46) == 0)
    goto LABEL_16;
LABEL_14:
  v51 = __clz(__rbit64(v49));
  v49 &= v49 - 1;
  v52 = v51 | (v141 << 6);
LABEL_15:
  v53 = *(_QWORD *)(v135 + 56);
  v54 = (_QWORD *)(*(_QWORD *)(v135 + 48) + 16 * v52);
  v55 = v54[1];
  *v15 = *v54;
  v15[1] = v55;
  v56 = v53 + *(_QWORD *)(v136 + 72) * v52;
  v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  sub_2452B792C(v56, (uint64_t)v15 + *(int *)(v57 + 48), (uint64_t (*)(_QWORD))v50);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v15, 0, 1, v57);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_2452BC850((uint64_t)v15, (uint64_t)v17, &qword_25744FFA0);
    v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48))(v17, 1, v62) == 1)
    {
      swift_release();
      v87 = v131;
      if (!*(_QWORD *)(v131 + 16))
      {
        swift_bridgeObjectRelease();
        v88 = v128;
        v89 = v123;
        goto LABEL_76;
      }
      v88 = v128;
      v89 = v123;
      if ((v123 & 1) != 0)
      {
        sub_24525E4F0(v124, (uint64_t)v144);
        v94 = v145;
        v93 = v146;
        __swift_project_boxed_opaque_existential_1(v144, v145);
        v142 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v93 + 8) + 8) + 32))(v94);
        sub_245387878();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v144);
        if ((v89 & 2) != 0)
        {
LABEL_69:
          v144[0] = v87;
          swift_retain();
          sub_245387878();
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_76;
        }
      }
      else
      {
        v90 = sub_2453877F4();
        v91 = sub_245387D34();
        if (os_log_type_enabled(v90, v91))
        {
          v92 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v92 = 0;
          _os_log_impl(&dword_245256000, v90, v91, "Not publishing new pairing relationships after reconciliation as options missing 'publishPairingRelationships'", v92, 2u);
          MEMORY[0x24953317C](v92, -1, -1);
        }

        if ((v89 & 2) != 0)
          goto LABEL_69;
      }
      v95 = sub_2453877F4();
      v96 = sub_245387D34();
      if (os_log_type_enabled(v95, v96))
      {
        v97 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v97 = 0;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_245256000, v95, v96, "Not publishing forgotten relationships after reconciliation as options missing 'publishForgottenRelationships'", v97, 2u);
        MEMORY[0x24953317C](v97, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease();
      }

LABEL_76:
      if ((sub_2452883D0() & 1) == 0)
      {
        swift_beginAccess();
        sub_24525E4F0(v88 + 344, (uint64_t)v144);
        v98 = v145;
        v99 = v146;
        __swift_project_boxed_opaque_existential_1(v144, v145);
        v100 = (*(uint64_t (**)(uint64_t, uint64_t))(v99 + 16))(v98, v99);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v144);
        if ((v100 & 1) != 0)
        {
          v101 = sub_2453877F4();
          v102 = sub_245387D34();
          v103 = os_log_type_enabled(v101, v102);
          if ((v89 & 4) != 0)
          {
            if (v103)
            {
              v105 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v105 = 0;
              _os_log_impl(&dword_245256000, v101, v102, "Rebroadcasting for auto-pair because devices changed and we are not currently paired.", v105, 2u);
              MEMORY[0x24953317C](v105, -1, -1);
            }

            swift_beginAccess();
            v106 = *(_QWORD *)(v88 + 368);
            v107 = *(_QWORD *)(v88 + 376);
            __swift_mutable_project_boxed_opaque_existential_1(v88 + 344, v106);
            v108 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v107 + 32))(v144, v106, v107);
            *v109 = !*v109;
            v108(v144, 0);
            v110 = *(_QWORD *)(v88 + 368);
            v111 = *(_QWORD *)(v88 + 376);
            __swift_mutable_project_boxed_opaque_existential_1(v88 + 344, v110);
            v112 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v111 + 32))(v144, v110, v111);
            *v113 = !*v113;
            v112(v144, 0);
            swift_endAccess();
          }
          else
          {
            if (v103)
            {
              v104 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v104 = 0;
              _os_log_impl(&dword_245256000, v101, v102, "Not rebroadcasting for auto-pair after reconciliation as options missing 'readvertiseIfNecessary'", v104, 2u);
              MEMORY[0x24953317C](v104, -1, -1);
            }

          }
        }
      }
      return;
    }
    v64 = *v17;
    v63 = v17[1];
    v65 = v50;
    sub_2452B7AB8((uint64_t)v17 + *(int *)(v62 + 48), (uint64_t)v11, (uint64_t (*)(_QWORD))v50);
    if (*((_BYTE *)&v138->isa + *(int *)(v139 + 20)) == 5)
      goto LABEL_44;
    v66 = v134[2];
    if (v66)
    {
      if (v134[4] == v64 && v134[5] == v63 || (sub_245388274() & 1) != 0)
      {
LABEL_44:
        swift_bridgeObjectRelease();
        v11 = v140;
        goto LABEL_45;
      }
      if (v66 != 1)
      {
        if (v134[6] == v64 && v134[7] == v63 || (sub_245388274() & 1) != 0)
          goto LABEL_44;
        if (v66 != 2)
          break;
      }
    }
LABEL_56:
    v71 = (uint64_t)v125;
    sub_2452B792C((uint64_t)v140, (uint64_t)v125, (uint64_t (*)(_QWORD))v65);
    swift_bridgeObjectRetain_n();
    v72 = sub_2453877F4();
    v73 = sub_245387D34();
    v118 = v73;
    if (os_log_type_enabled(v72, v73))
    {
      v74 = swift_slowAlloc();
      v116 = swift_slowAlloc();
      v144[0] = v116;
      *(_DWORD *)v74 = v120;
      v115 = v72;
      swift_bridgeObjectRetain();
      v142 = sub_2453816D8(v64, v63, v144);
      sub_245387E0C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v74 + 12) = 2082;
      v114 = v74 + 14;
      sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v75 = (uint64_t)v125;
      v76 = v127;
      v77 = sub_2453880F4();
      v142 = sub_2453816D8(v77, v78, v144);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_2452B7B5C(v75, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v79 = v115;
      _os_log_impl(&dword_245256000, v115, (os_log_type_t)v118, "Forgetting device: %{public}s (relationship: %{public}s) - Device no longer associated with sync service", (uint8_t *)v74, 0x16u);
      v80 = v116;
      swift_arrayDestroy();
      MEMORY[0x24953317C](v80, -1, -1);
      MEMORY[0x24953317C](v74, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_2452B7B5C(v71, (uint64_t (*)(_QWORD))v65);

      v76 = v127;
    }
    sub_245277D6C((uint64_t)v140);
    sub_24525E4F0(v124, (uint64_t)v144);
    v82 = v145;
    v81 = v146;
    __swift_project_boxed_opaque_existential_1(v144, v145);
    v83 = v82;
    v11 = v140;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v81 + 16) + 96))(v64, v63, v83);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v144);
    (*(void (**)(char *, NSObject *, uint64_t))(v130 + 16))(v129, v11, v76);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v131 = sub_24532449C(0, *(_QWORD *)(v131 + 16) + 1, 1, v131);
    v85 = *(_QWORD *)(v131 + 16);
    v84 = *(_QWORD *)(v131 + 24);
    if (v85 >= v84 >> 1)
      v131 = sub_24532449C(v84 > 1, v85 + 1, 1, v131);
    v86 = v131;
    *(_QWORD *)(v131 + 16) = v85 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v130 + 32))(v86+ ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80))+ *(_QWORD *)(v130 + 72) * v85, v129, v127);
LABEL_45:
    v50 = v65;
    sub_2452B7B5C((uint64_t)v11, (uint64_t (*)(_QWORD))v65);
    v15 = v137;
    if (v49)
      goto LABEL_14;
LABEL_16:
    v58 = v141 + 1;
    if (__OFADD__(v141, 1))
    {
      __break(1u);
      goto LABEL_87;
    }
    if (v58 < v133)
    {
      v59 = *(_QWORD *)(v132 + 8 * v58);
      if (v59)
        goto LABEL_19;
      v60 = v141 + 2;
      ++v141;
      if (v58 + 1 < v133)
      {
        v59 = *(_QWORD *)(v132 + 8 * v60);
        if (v59)
          goto LABEL_22;
        v141 = v58 + 1;
        if (v58 + 2 < v133)
        {
          v59 = *(_QWORD *)(v132 + 8 * (v58 + 2));
          if (v59)
          {
            v58 += 2;
            goto LABEL_19;
          }
          v60 = v58 + 3;
          v141 = v58 + 2;
          if (v58 + 3 < v133)
          {
            v59 = *(_QWORD *)(v132 + 8 * v60);
            if (!v59)
            {
              while (1)
              {
                v58 = v60 + 1;
                if (__OFADD__(v60, 1))
                  break;
                if (v58 >= v133)
                {
                  v141 = v117;
                  goto LABEL_33;
                }
                v59 = *(_QWORD *)(v132 + 8 * v58);
                ++v60;
                if (v59)
                  goto LABEL_19;
              }
              __break(1u);
              return;
            }
LABEL_22:
            v58 = v60;
LABEL_19:
            v49 = (v59 - 1) & v59;
            v52 = __clz(__rbit64(v59)) + (v58 << 6);
            v141 = v58;
            goto LABEL_15;
          }
        }
      }
    }
LABEL_33:
    v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v15, 1, 1, v61);
    v49 = 0;
  }
  v67 = v121;
  v68 = 2;
  while (1)
  {
    v69 = v68 + 1;
    if (__OFADD__(v68, 1))
      break;
    v70 = *(v67 - 1) == v64 && *v67 == v63;
    if (v70 || (sub_245388274() & 1) != 0)
      goto LABEL_44;
    v67 += 2;
    ++v68;
    if (v69 == v66)
      goto LABEL_56;
  }
LABEL_87:
  __break(1u);
LABEL_88:
  swift_once();
LABEL_3:
  v18 = sub_245387818();
  __swift_project_value_buffer(v18, (uint64_t)qword_257462FB0);
  v19 = sub_2453877F4();
  v20 = sub_245387D1C();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_245256000, v19, v20, "No reconciliation options are set", v21, 2u);
    MEMORY[0x24953317C](v21, -1, -1);
  }

}

uint64_t sub_2452883D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  unint64_t i;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  uint64_t v50;
  uint64_t v51;

  v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v1 = MEMORY[0x24BDAC7A8](v47);
  v46 = (uint64_t *)((char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (uint64_t *)((char *)&v43 - v4);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (uint64_t *)((char *)&v43 - v6);
  v8 = sub_2453879D4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(v0 + 232);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v13 = v12;
  LOBYTE(v12) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
    goto LABEL_33;
  swift_beginAccess();
  sub_24525E4F0(v0 + 192, (uint64_t)v49);
  v16 = v50;
  v15 = v51;
  __swift_project_boxed_opaque_existential_1(v49, v50);
  v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v15 + 8) + 8) + 32))(v16);
  v18 = *(_QWORD *)(v17 + 64);
  v44 = v17 + 64;
  v19 = 1 << *(_BYTE *)(v17 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v18;
  v45 = (unint64_t)(v19 + 63) >> 6;
  v48 = v17;
  result = swift_bridgeObjectRetain();
  v22 = 0;
  if (v21)
    goto LABEL_7;
LABEL_8:
  v25 = v22 + 1;
  if (__OFADD__(v22, 1))
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v25 >= v45)
    goto LABEL_31;
  v26 = *(_QWORD *)(v44 + 8 * v25);
  ++v22;
  if (v26)
    goto LABEL_25;
  v22 = v25 + 1;
  if (v25 + 1 >= v45)
    goto LABEL_31;
  v26 = *(_QWORD *)(v44 + 8 * v22);
  if (v26)
    goto LABEL_25;
  v22 = v25 + 2;
  if (v25 + 2 >= v45)
    goto LABEL_31;
  v26 = *(_QWORD *)(v44 + 8 * v22);
  if (v26)
    goto LABEL_25;
  v22 = v25 + 3;
  if (v25 + 3 >= v45)
    goto LABEL_31;
  v26 = *(_QWORD *)(v44 + 8 * v22);
  if (v26)
    goto LABEL_25;
  v22 = v25 + 4;
  if (v25 + 4 >= v45)
    goto LABEL_31;
  v26 = *(_QWORD *)(v44 + 8 * v22);
  if (v26)
    goto LABEL_25;
  v27 = v25 + 5;
  if (v27 >= v45)
  {
LABEL_31:
    v42 = 0;
LABEL_30:
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
    return v42;
  }
  v26 = *(_QWORD *)(v44 + 8 * v27);
  if (v26)
  {
    v22 = v27;
LABEL_25:
    v21 = (v26 - 1) & v26;
    for (i = __clz(__rbit64(v26)) + (v22 << 6); ; i = v23 | (v22 << 6))
    {
      v28 = *(_QWORD *)(v48 + 56);
      v29 = (uint64_t *)(*(_QWORD *)(v48 + 48) + 16 * i);
      v30 = *v29;
      v31 = v29[1];
      v32 = type metadata accessor for PairingRelationship();
      v33 = v28 + *(_QWORD *)(*(_QWORD *)(v32 - 8) + 72) * i;
      v34 = v47;
      sub_2452B792C(v33, (uint64_t)v7 + *(int *)(v47 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      *v7 = v30;
      v7[1] = v31;
      sub_2452BC850((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_25744FF90);
      v35 = *(int *)(v34 + 48);
      v36 = v46;
      v37 = (uint64_t)v46 + v35;
      v38 = v5[1];
      *v46 = *v5;
      v36[1] = v38;
      sub_2452B792C((uint64_t)v5 + v35, v37, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v39 = (uint64_t *)(v37 + *(int *)(v32 + 32));
      v40 = *v39;
      v41 = v39[1];
      swift_bridgeObjectRetain();
      sub_24526B470(v40, v41);
      sub_2452B7B5C(v37, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      if (v41)
        break;
      result = sub_245263F80((uint64_t)v5, (uint64_t *)&unk_25744FF90);
      if (!v21)
        goto LABEL_8;
LABEL_7:
      v23 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
    }
    if (v41 - 1 >= 2)
      sub_24526B484(v40, v41);
    sub_245263F80((uint64_t)v5, (uint64_t *)&unk_25744FF90);
    v42 = 1;
    goto LABEL_30;
  }
  while (1)
  {
    v22 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v22 >= v45)
      goto LABEL_31;
    v26 = *(_QWORD *)(v44 + 8 * v22);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_2452887CC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t ObjectType;
  _QWORD *v12;
  void (*v13)(uint64_t (*)(uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t);

  v10 = *(_QWORD *)(a3 + 184);
  ObjectType = swift_getObjectType();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a1;
  v12[4] = a2;
  v12[5] = a4;
  v12[6] = a5;
  v13 = *(void (**)(uint64_t (*)(uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t))(v10 + 80);
  swift_retain();
  sub_245261C30(a1, a2);
  swift_retain();
  v13(sub_2452B7BD4, v12, ObjectType, v10);
  return swift_release();
}

uint64_t sub_24528888C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  NSObject *v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  uint64_t result;
  _QWORD v17[6];

  v12 = *(NSObject **)(a3 + 232);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a3;
  v13[3] = a4;
  v13[4] = a5;
  v13[5] = a6;
  v13[6] = a7;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_2452B7C2C;
  *(_QWORD *)(v14 + 24) = v13;
  v17[4] = sub_2452643B4;
  v17[5] = v14;
  v17[0] = MEMORY[0x24BDAC760];
  v17[1] = 1107296256;
  v17[2] = sub_24525B888;
  v17[3] = &block_descriptor_262;
  v15 = _Block_copy(v17);
  swift_retain();
  sub_245261C30(a4, a5);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v12, v15);
  _Block_release(v15);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v12 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_2452889F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(a1 + 568);
  v6 = *(_QWORD *)(a1 + 576);
  *(_QWORD *)(a1 + 568) = a2;
  *(_QWORD *)(a1 + 576) = a3;
  sub_245261C30(a2, a3);
  sub_24525FFF8(v5, v6);
  sub_245273C50();
  sub_245288C1C();
  return a4(0);
}

uint64_t sub_245288C1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _UNKNOWN **v18;

  v1 = v0;
  v2 = sub_2453879D4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + 232);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  v8 = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v8 & 1) != 0)
  {
    v10 = type metadata accessor for BasicTimer();
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440BFA0);
    v12 = swift_allocObject();
    *(_DWORD *)(v12 + 16) = 0;
    *(_QWORD *)(v11 + 24) = v12;
    v17 = v10;
    v18 = &protocol witness table for BasicTimer;
    *(_QWORD *)&v16 = v11;
    type metadata accessor for KeepAliveTimer();
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 56) = 0;
    sub_2452B7C5C(&v16, v13 + 16);
    v14 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    swift_retain();
    sub_2452EDF3C((uint64_t)v7, (uint64_t)sub_2452B7C74, v14, 30.0);
    swift_release_n();
    if (*(_QWORD *)(v1 + 600))
    {
      swift_retain();
      sub_2452EE158();
      swift_release();
    }
    *(_QWORD *)(v1 + 600) = v13;
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_245288DE0()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    *(_QWORD *)(result + 600) = 0;
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_245288E38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  _BYTE v29[4];
  int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  char v35;
  uint64_t v36[2];
  __int128 v37;
  char v38;
  uint64_t v39;
  uint64_t v40;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v29[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for PairingRelationship();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v33 = *(unsigned __int8 *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 32);
  v32 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(unsigned __int8 *)(a1 + 48);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v15 = Strong;
    v30 = v13;
    v31 = v12;
    v16 = Strong + 192;
    swift_beginAccess();
    sub_24525E4F0(v16, (uint64_t)&v37);
    v17 = v39;
    v18 = v40;
    __swift_project_boxed_opaque_existential_1(&v37, v39);
    MetadataStoring.pairingRelationship(remoteDeviceID:)(v10, v9, v17, *(_QWORD *)(v18 + 8), (uint64_t)v4);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_245263F80((uint64_t)v4, (uint64_t *)&unk_25744FAD0);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
      if (qword_25744FD90 != -1)
        swift_once();
      v19 = sub_245387818();
      __swift_project_value_buffer(v19, (uint64_t)qword_257462FB0);
      swift_retain();
      v20 = sub_2453877F4();
      v21 = sub_245387D34();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        v23 = swift_slowAlloc();
        *(_QWORD *)&v37 = v23;
        *(_DWORD *)v22 = 136446210;
        v24 = *(_QWORD *)(v15 + 488);
        v25 = *(_QWORD *)(v15 + 496);
        swift_bridgeObjectRetain();
        v36[0] = sub_2453816D8(v24, v25, (uint64_t *)&v37);
        sub_245387E0C();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_245256000, v20, v21, "(%{public}s) Could not handshake with unpaired destination", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v23, -1, -1);
        MEMORY[0x24953317C](v22, -1, -1);
        swift_release();

      }
      else
      {

        swift_release_n();
      }
    }
    else
    {
      sub_2452B7AB8((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
      *(_QWORD *)&v37 = v10;
      *((_QWORD *)&v37 + 1) = v9;
      v38 = v33;
      v39 = v32;
      v40 = v11;
      v26 = (uint64_t *)&v8[*(int *)(v5 + 32)];
      v28 = v26[1];
      v36[0] = *v26;
      v27 = v36[0];
      v36[1] = v28;
      v34 = v31;
      v35 = v30;
      swift_bridgeObjectRetain();
      sub_24526B470(v27, v28);
      sub_2452891D4(&v37, v36, &v34);
      swift_release();
      sub_24526B484(v27, v28);
      swift_bridgeObjectRelease();
      sub_2452B7B5C((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    }
  }
}

uint64_t sub_2452891D4(__int128 *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  void (*v16)(_QWORD *, uint64_t, uint64_t);
  id v17;
  uint64_t (*v18)(_QWORD *, uint64_t);
  uint64_t result;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v32 = *v3;
  v7 = sub_2453879D4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = a1[1];
  v33 = *a1;
  v34 = v11;
  v35 = *((_QWORD *)a1 + 4);
  v12 = *a2;
  v13 = a2[1];
  v31 = *a3;
  v30 = *((unsigned __int8 *)a3 + 8);
  v14 = (void *)v3[29];
  *v10 = v14;
  v15 = *MEMORY[0x24BEE5610];
  v16 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 104);
  v16(v10, v15, v7);
  v17 = v14;
  LOBYTE(v14) = sub_2453879F8();
  v18 = *(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8);
  result = v18(v10, v7);
  if ((v14 & 1) != 0)
  {
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v3;
    v21 = v34;
    *(_OWORD *)(v20 + 24) = v33;
    *(_OWORD *)(v20 + 40) = v21;
    v22 = v31;
    *(_QWORD *)(v20 + 56) = v35;
    *(_QWORD *)(v20 + 64) = v22;
    *(_BYTE *)(v20 + 72) = v30;
    *(_QWORD *)(v20 + 80) = v12;
    *(_QWORD *)(v20 + 88) = v13;
    *(_QWORD *)(v20 + 96) = v32;
    *v10 = v17;
    v16(v10, v15, v7);
    v23 = v17;
    swift_retain();
    sub_2452B7D58((uint64_t)&v33);
    sub_24526B470(v12, v13);
    v24 = sub_2453879F8();
    result = v18(v10, v7);
    if ((v24 & 1) != 0)
    {
      v25 = v3[58];
      v26 = v3[59];
      __swift_project_boxed_opaque_existential_1(v3 + 55, v25);
      v27 = (_QWORD *)swift_allocObject();
      v27[2] = v3;
      v27[3] = sub_2452B7D3C;
      v27[4] = v20;
      v28 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v26 + 8);
      swift_retain();
      swift_retain();
      v28(sub_2452BCDA0, v27, v25, v26);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_2452893F0(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (**v20)(char *, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  os_log_type_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  NSObject *v40;
  uint64_t v41;
  void (**v42)(char *, uint64_t);
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  void (*v55)(__int128 *, uint64_t *, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (**v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 *v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t);
  _QWORD v114[2];
  __int128 v115;
  _QWORD *v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  void (**v122)(char *, uint64_t);
  char *v123;
  void (*v124)(char *, uint64_t);
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  void (*v128)(char *, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  os_log_t v132;
  _QWORD *v133;
  uint64_t v134;
  char v135;
  unsigned __int128 v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  __int128 v140;
  _BYTE v141[32];
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;
  char v150;

  v119 = a3;
  v133 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FFA0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v128 = (void (*)(char *, uint64_t))((char *)v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v127 = (uint64_t)v114 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (_QWORD *)((char *)v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for PairingRelationship();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v114 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_245387740();
  v20 = *(void (***)(char *, uint64_t))(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v114 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v114 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v26 = (uint64_t)v133;
    v27 = a1;
    v28 = a1;
    if (qword_25744FD90 != -1)
      goto LABEL_52;
    goto LABEL_3;
  }
  v121 = v19;
  v123 = v25;
  v120 = v22;
  v122 = v20;
  v129 = (uint64_t)v18;
  v126 = v14;
  v131 = v15;
  v130 = v16;
  if (v119)
  {
    v40 = *(NSObject **)(v119 + 16);
    if (v40)
    {
      v117 = a4;
      v118 = a5;
      v41 = (uint64_t)(v133 + 24);
      v116 = v133 + 48;
      v42 = v122;
      v43 = v119 + ((*((unsigned __int8 *)v122 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v122 + 80));
      swift_bridgeObjectRetain();
      v127 = v41;
      swift_beginAccess();
      v125 = (uint64_t)v42[9];
      v128 = v42[2];
      *(_QWORD *)&v44 = 136446210;
      v115 = v44;
      v114[1] = MEMORY[0x24BEE4AD8] + 8;
      v45 = v129;
      v46 = (uint64_t)v120;
      v47 = v123;
      v48 = v121;
      v49 = v131;
      ((void (*)(char *, uint64_t, uint64_t))v128)(v123, v43, v121);
      while (1)
      {
        v124 = v42[7];
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v124)(v47, 0, 1, v48);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v42[6])(v47, 1, v48) == 1)
          break;
        v132 = v40;
        ((void (*)(uint64_t, char *, uint64_t))v42[4])(v46, v47, v48);
        sub_24525E4F0(v127, (uint64_t)&v140);
        v58 = *(_QWORD *)&v141[8];
        v59 = v42;
        v60 = *(_QWORD *)&v141[16];
        __swift_project_boxed_opaque_existential_1(&v140, *(uint64_t *)&v141[8]);
        v61 = *(_QWORD *)(v60 + 8);
        v62 = v126;
        MetadataStoring.pairingRelationship(relationshipID:)(v46, v58, v61, (uint64_t)v126);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v62, 1, v49) == 1)
        {
          sub_245263F80((uint64_t)v62, (uint64_t *)&unk_25744FAD0);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v140);
          if (qword_25744FD90 != -1)
            swift_once();
          v63 = sub_245387818();
          __swift_project_value_buffer(v63, (uint64_t)qword_257462FB0);
          v64 = v133;
          swift_retain_n();
          v65 = sub_2453877F4();
          v66 = sub_245387D34();
          if (os_log_type_enabled(v65, v66))
          {
            v67 = swift_slowAlloc();
            v68 = swift_slowAlloc();
            *(_QWORD *)&v140 = v68;
            *(_DWORD *)v67 = v115;
            v69 = v64[61];
            v70 = v133[62];
            swift_bridgeObjectRetain();
            *(_QWORD *)(v67 + 4) = sub_2453816D8(v69, v70, (uint64_t *)&v140);
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_245256000, v65, v66, "(%{public}s) Could not handshake with unpaired destination", (uint8_t *)v67, 0xCu);
            swift_arrayDestroy();
            v71 = v68;
            v16 = v130;
            MEMORY[0x24953317C](v71, -1, -1);
            v72 = v67;
            v47 = v123;
            MEMORY[0x24953317C](v72, -1, -1);
          }
          else
          {
            swift_release_n();
          }

          v42 = v122;
          v46 = (uint64_t)v120;
          v48 = v121;
          v122[1](v120, v121);
          v45 = v129;
        }
        else
        {
          sub_2452B7AB8((uint64_t)v62, v45, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v140);
          v50 = v133[51];
          v51 = v133[52];
          __swift_project_boxed_opaque_existential_1(v116, v50);
          v52 = v129 + *(int *)(v49 + 20);
          v53 = *(_QWORD *)(v52 + 8);
          v54 = *(_BYTE *)(v52 + 48);
          *(_QWORD *)&v140 = *(_QWORD *)v52;
          *((_QWORD *)&v140 + 1) = v53;
          v141[0] = v54;
          *(_OWORD *)&v141[8] = *(_OWORD *)(v52 + 32);
          v149 = v117;
          v150 = v118;
          v55 = *(void (**)(__int128 *, uint64_t *, uint64_t, uint64_t))(v51 + 16);
          swift_bridgeObjectRetain();
          v56 = v50;
          v45 = v129;
          v57 = v51;
          v16 = v130;
          v55(&v140, &v149, v56, v57);
          v47 = v123;
          swift_bridgeObjectRelease();
          sub_2452B7B5C(v45, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          v59[1]((char *)v46, v48);
          v42 = v59;
        }
        v43 += v125;
        v40 = (os_log_t)((char *)v132 - 1);
        if (v132 == (os_log_t)1)
        {
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v124)(v47, 1, 1, v48);
          break;
        }
        ((void (*)(char *, uint64_t, uint64_t))v128)(v47, v43, v48);
      }
    }
    else
    {
      v113 = v122[7];
      swift_bridgeObjectRetain();
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v113)(v123, 1, 1, v121);
    }
    swift_bridgeObjectRelease();
    return;
  }
  v73 = v133;
  v74 = (uint64_t)(v133 + 24);
  swift_beginAccess();
  sub_24525E4F0(v74, (uint64_t)&v140);
  v75 = *(_QWORD *)&v141[8];
  v76 = *(_QWORD *)&v141[16];
  __swift_project_boxed_opaque_existential_1(&v140, *(uint64_t *)&v141[8]);
  v77 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v76 + 8) + 8) + 32))(v75);
  v78 = *(_QWORD *)(v77 + 64);
  v123 = (char *)(v77 + 64);
  v125 = v77;
  v26 = 1 << *(_BYTE *)(v77 + 32);
  v79 = -1;
  if (v26 < 64)
    v79 = ~(-1 << v26);
  v80 = v79 & v78;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v140);
  v129 = 0;
  v126 = v73 + 48;
  v124 = (void (*)(char *, uint64_t))((unint64_t)(v26 + 63) >> 6);
  v122 = (void (**)(char *, uint64_t))((char *)v124 - 1);
  v28 = &unk_25744FF90;
  if (!v80)
    goto LABEL_27;
LABEL_25:
  v132 = (os_log_t)((v80 - 1) & v80);
  v98 = __clz(__rbit64(v80)) | (v129 << 6);
  v99 = v131;
  v100 = v128;
LABEL_26:
  v101 = *(_QWORD *)(v125 + 56);
  v102 = (_QWORD *)(*(_QWORD *)(v125 + 48) + 16 * v98);
  v103 = v102[1];
  *(_QWORD *)v100 = *v102;
  *((_QWORD *)v100 + 1) = v103;
  v104 = v101 + *(_QWORD *)(v16 + 72) * v98;
  v105 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  sub_2452B792C(v104, (uint64_t)v100 + *(int *)(v105 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  (*(void (**)(void (*)(char *, uint64_t), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 56))(v100, 0, 1, v105);
  swift_bridgeObjectRetain();
  v106 = v133;
  while (1)
  {
    v111 = v127;
    sub_2452BC850((uint64_t)v100, v127, &qword_25744FFA0);
    v112 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 48))(v111, 1, v112) == 1)
    {
      swift_release();
      return;
    }
    swift_bridgeObjectRelease();
    v81 = v111 + *(int *)(v112 + 48);
    v83 = v106[51];
    v82 = v106[52];
    __swift_project_boxed_opaque_existential_1(v126, v83);
    v84 = (__int128 *)(v81 + *(int *)(v99 + 20));
    v85 = v84[6];
    v86 = v84[8];
    v87 = v84[9];
    v146 = v84[7];
    v147 = v86;
    v148 = v87;
    v88 = v84[3];
    *(_OWORD *)&v141[16] = v84[2];
    v142 = v88;
    v89 = v84[5];
    v143 = v84[4];
    v144 = v89;
    v145 = v85;
    v90 = *v84;
    *(_OWORD *)v141 = v84[1];
    v140 = v90;
    sub_24526432C((uint64_t)&v140);
    sub_2452B7B5C(v81, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v26 = *((_QWORD *)&v140 + 1);
    v91 = v140;
    v92 = a5;
    v94 = *(_QWORD *)&v141[24];
    v93 = *(_QWORD *)&v141[16];
    v95 = a4;
    v96 = v142;
    swift_bridgeObjectRetain();
    sub_245269928((uint64_t)&v140);
    v136 = __PAIR128__(v26, v91);
    v137 = v96;
    a4 = v95;
    v138 = v93;
    a5 = v92;
    v16 = v130;
    v139 = v94;
    v134 = v95;
    v135 = a5;
    v97 = v83;
    v28 = &unk_25744FF90;
    (*(void (**)(unsigned __int128 *, uint64_t *, uint64_t, uint64_t))(v82 + 16))(&v136, &v134, v97, v82);
    swift_bridgeObjectRelease();
    v80 = (unint64_t)v132;
    if (v132)
      goto LABEL_25;
LABEL_27:
    v107 = v129 + 1;
    v99 = v131;
    v100 = v128;
    if (__OFADD__(v129, 1))
      break;
    v106 = v133;
    if (v107 < (uint64_t)v124)
    {
      v108 = *(_QWORD *)&v123[8 * v107];
      if (v108)
        goto LABEL_30;
      v109 = v129 + 2;
      ++v129;
      if (v107 + 1 < (uint64_t)v124)
      {
        v108 = *(_QWORD *)&v123[8 * v109];
        if (v108)
          goto LABEL_33;
        v129 = v107 + 1;
        if (v107 + 2 < (uint64_t)v124)
        {
          v108 = *(_QWORD *)&v123[8 * v107 + 16];
          if (v108)
          {
            v107 += 2;
            goto LABEL_30;
          }
          v109 = v107 + 3;
          v129 = v107 + 2;
          if (v107 + 3 < (uint64_t)v124)
          {
            v108 = *(_QWORD *)&v123[8 * v109];
            if (!v108)
            {
              while (1)
              {
                v107 = v109 + 1;
                if (__OFADD__(v109, 1))
                  break;
                if (v107 >= (uint64_t)v124)
                {
                  v129 = (uint64_t)v122;
                  goto LABEL_44;
                }
                v108 = *(_QWORD *)&v123[8 * v107];
                ++v109;
                if (v108)
                  goto LABEL_30;
              }
              __break(1u);
              return;
            }
LABEL_33:
            v107 = v109;
LABEL_30:
            v132 = (os_log_t)((v108 - 1) & v108);
            v98 = __clz(__rbit64(v108)) + (v107 << 6);
            v129 = v107;
            goto LABEL_26;
          }
        }
      }
    }
LABEL_44:
    v110 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
    (*(void (**)(void (*)(char *, uint64_t), uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8)
                                                                                            + 56))(v100, 1, 1, v110);
    v132 = 0;
  }
  __break(1u);
LABEL_52:
  swift_once();
LABEL_3:
  v29 = sub_245387818();
  __swift_project_value_buffer(v29, (uint64_t)qword_257462FB0);
  v30 = v28;
  v31 = v28;
  swift_retain();
  v132 = (os_log_t)sub_2453877F4();
  v32 = sub_245387D34();
  if (os_log_type_enabled(v132, v32))
  {
    v33 = swift_slowAlloc();
    v34 = (_QWORD *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    *(_QWORD *)&v140 = v35;
    *(_DWORD *)v33 = 136446466;
    v36 = *(_QWORD *)(v26 + 488);
    v37 = *(_QWORD *)(v26 + 496);
    swift_bridgeObjectRetain();
    *(_QWORD *)&v136 = sub_2453816D8(v36, v37, (uint64_t *)&v140);
    sub_245387E0C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2114;
    v38 = v28;
    v39 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)&v136 = v39;
    sub_245387E0C();
    *v34 = v39;

    _os_log_impl(&dword_245256000, v132, v32, "(%{public}s) Abandoning handshake request because prerequisites are not met: %{public}@", (uint8_t *)v33, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v34, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v35, -1, -1);
    MEMORY[0x24953317C](v33, -1, -1);

  }
  else
  {

    swift_release();
  }
}

void sub_24528A198(void *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  unint64_t v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t ObjectType;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  __int128 v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  os_log_type_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  _QWORD v97[2];
  __int128 v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  uint64_t *v102;
  unint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  unint64_t v119;
  __int128 v120;
  char v121;
  __int128 v122;
  uint64_t v123;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v6);
  v113 = (uint64_t)v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for PairingRelationship();
  v8 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110);
  if (a1)
  {
    v10 = a1;
    if (qword_25744FD90 != -1)
      swift_once();
    v11 = sub_245387818();
    __swift_project_value_buffer(v11, (uint64_t)qword_257462FB0);
    v12 = a1;
    v13 = a1;
    swift_retain();
    *(_QWORD *)&v115 = sub_2453877F4();
    v14 = sub_245387D34();
    if (os_log_type_enabled((os_log_t)v115, v14))
    {
      v15 = swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      *(_QWORD *)&v120 = v17;
      *(_DWORD *)v15 = 136446466;
      v18 = *(_QWORD *)(a2 + 488);
      v19 = *(_QWORD *)(a2 + 496);
      swift_bridgeObjectRetain();
      v123 = sub_2453816D8(v18, v19, (uint64_t *)&v120);
      sub_245387E0C();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2114;
      v20 = a1;
      v21 = _swift_stdlib_bridgeErrorToNSError();
      v123 = v21;
      sub_245387E0C();
      *v16 = v21;

      _os_log_impl(&dword_245256000, (os_log_t)v115, v14, "(%{public}s) Abandoning handshake request because prerequisites are not met: %{public}@", (uint8_t *)v15, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v16, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v17, -1, -1);
      MEMORY[0x24953317C](v15, -1, -1);

    }
    else
    {

      swift_release();
    }
    return;
  }
  if ((*(_BYTE *)(a2 + 544) & 1) != 0)
  {
    v106 = (uint64_t)v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (qword_25744FD90 != -1)
      swift_once();
    v22 = sub_245387818();
    v23 = __swift_project_value_buffer(v22, (uint64_t)qword_257462FB0);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v114 = v23;
    v24 = sub_2453877F4();
    v25 = a2;
    v26 = sub_245387D34();
    v27 = os_log_type_enabled(v24, v26);
    v107 = v8;
    if (v27)
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      *(_QWORD *)&v120 = v29;
      *(_DWORD *)v28 = 136446466;
      v30 = *(_QWORD *)(a2 + 488);
      v31 = *(_QWORD *)(a2 + 496);
      swift_bridgeObjectRetain();
      v123 = sub_2453816D8(v30, v31, (uint64_t *)&v120);
      sub_245387E0C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2082;
      v32 = swift_bridgeObjectRetain();
      v33 = MEMORY[0x249531F88](v32, &type metadata for HandshakeDescriptor);
      v35 = v34;
      swift_bridgeObjectRelease();
      v123 = sub_2453816D8(v33, v35, (uint64_t *)&v120);
      sub_245387E0C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v24, v26, "(%{public}s) Discovered devices: %{public}s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v29, -1, -1);
      MEMORY[0x24953317C](v28, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    v43 = v25;
    v44 = *(_QWORD *)(v25 + 184);
    ObjectType = swift_getObjectType();
    v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 16))(ObjectType, v44);
    v47 = sub_245331384(v46);
    swift_bridgeObjectRelease();
    v48 = *(_QWORD *)(a3 + 16);
    if (!v48)
    {
LABEL_51:
      swift_bridgeObjectRelease();
      return;
    }
    v104 = v47;
    swift_bridgeObjectRetain();
    v102 = (uint64_t *)(v43 + 592);
    swift_beginAccess();
    v105 = v43 + 192;
    swift_beginAccess();
    v103 = &v119;
    v97[0] = a3;
    v49 = (_OWORD *)(a3 + 56);
    v101 = 0x8000000245393670;
    *(_QWORD *)&v50 = 136446466;
    v100 = v50;
    v97[1] = MEMORY[0x24BEE4AD8] + 8;
    *(_QWORD *)&v50 = 136446210;
    v98 = v50;
    while (1)
    {
      v53 = *((_QWORD *)v49 - 3);
      v52 = *((_QWORD *)v49 - 2);
      LODWORD(v54) = *((unsigned __int8 *)v49 - 8);
      v115 = *v49;
      swift_bridgeObjectRetain();
      if ((_DWORD)v54 != 5)
      {
        swift_bridgeObjectRetain();
        v55 = sub_24531D83C(v53, v52, v104);
        swift_bridgeObjectRelease();
        if ((v55 & 1) == 0)
        {
          swift_bridgeObjectRetain();
          v58 = sub_2453877F4();
          v83 = sub_245387D34();
          if (!os_log_type_enabled(v58, v83))
          {

            swift_bridgeObjectRelease_n();
            goto LABEL_22;
          }
          v84 = swift_slowAlloc();
          v85 = v48;
          v86 = swift_slowAlloc();
          *(_QWORD *)&v120 = v86;
          *(_DWORD *)v84 = v98;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v84 + 4) = sub_2453816D8(v53, v52, (uint64_t *)&v120);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_245256000, v58, v83, "Cannot handshake with discovered device: %{public}s, sync service does not know about it yet", (uint8_t *)v84, 0xCu);
          swift_arrayDestroy();
          v87 = v86;
          v48 = v85;
          MEMORY[0x24953317C](v87, -1, -1);
          v67 = v84;
          goto LABEL_36;
        }
      }
      if ((_QWORD)v115 == 7)
      {
        v56 = *v102;
        swift_bridgeObjectRetain();
        v57 = sub_24531D83C(0xD000000000000011, v101, v56);
        swift_bridgeObjectRelease();
        if ((v57 & 1) != 0)
        {
          swift_retain_n();
          swift_bridgeObjectRetain();
          v58 = sub_2453877F4();
          v59 = sub_245387D34();
          if (!os_log_type_enabled(v58, v59))
          {

            swift_bridgeObjectRelease_n();
            swift_release_n();
            goto LABEL_22;
          }
          v60 = swift_slowAlloc();
          v61 = swift_slowAlloc();
          v112 = v48;
          v62 = v61;
          *(_QWORD *)&v120 = v61;
          *(_DWORD *)v60 = v100;
          v63 = v53;
          v64 = *(_QWORD *)(v43 + 488);
          v65 = *(_QWORD *)(v43 + 496);
          swift_bridgeObjectRetain();
          *(_QWORD *)(v60 + 4) = sub_2453816D8(v64, v65, (uint64_t *)&v120);
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v60 + 12) = 2082;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v60 + 14) = sub_2453816D8(v63, v52, (uint64_t *)&v120);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_245256000, v58, v59, "(%{public}s) Skipping handshake with old-chronod as chronod client is disabled: %{public}s", (uint8_t *)v60, 0x16u);
          swift_arrayDestroy();
          v66 = v62;
          v48 = v112;
          MEMORY[0x24953317C](v66, -1, -1);
          v67 = v60;
LABEL_36:
          MEMORY[0x24953317C](v67, -1, -1);

          goto LABEL_22;
        }
      }
      LODWORD(v111) = sub_2452883D0();
      sub_24525E4F0(v105, (uint64_t)&v120);
      v68 = v122;
      __swift_project_boxed_opaque_existential_1(&v120, v122);
      v69 = *(_QWORD *)(*((_QWORD *)&v68 + 1) + 8);
      swift_bridgeObjectRetain();
      v70 = v113;
      MetadataStoring.pairingRelationship(remoteDeviceID:)(v53, v52, v68, v69, v113);
      swift_bridgeObjectRelease();
      v71 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v70, 1, v110);
      v112 = v48;
      if (v71 == 1)
        break;
      sub_2452B7AB8(v113, v106, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v120);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      v78 = sub_2453877F4();
      v79 = sub_245387D34();
      if (os_log_type_enabled(v78, v79))
      {
        v80 = swift_slowAlloc();
        v99 = swift_slowAlloc();
        *(_QWORD *)&v120 = v99;
        *(_DWORD *)v80 = v100;
        v108 = v53;
        v109 = v54;
        v81 = *(_QWORD *)(v43 + 488);
        v54 = *(_QWORD *)(v43 + 496);
        swift_bridgeObjectRetain();
        v118 = sub_2453816D8(v81, v54, (uint64_t *)&v120);
        v53 = v108;
        sub_245387E0C();
        swift_release_n();
        LODWORD(v54) = v109;
        swift_bridgeObjectRelease();
        *(_WORD *)(v80 + 12) = 2082;
        swift_bridgeObjectRetain();
        v118 = sub_2453816D8(v53, v52, (uint64_t *)&v120);
        sub_245387E0C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_245256000, v78, v79, "(%{public}s) Handshaking with known device: %{public}s", (uint8_t *)v80, 0x16u);
        v82 = v99;
        swift_arrayDestroy();
        MEMORY[0x24953317C](v82, -1, -1);
        MEMORY[0x24953317C](v80, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_release_n();
      }
      v89 = v106;
      if ((v111 & 1) == 0)
      {
        sub_2452B7B5C(v106, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        v88 = 0;
LABEL_45:
        swift_retain();
        v91 = sub_2453877F4();
        v92 = sub_245387D34();
        if (os_log_type_enabled(v91, v92))
        {
          v93 = (uint8_t *)swift_slowAlloc();
          v111 = swift_slowAlloc();
          *(_QWORD *)&v120 = v111;
          v108 = v53;
          *(_DWORD *)v93 = v98;
          v99 = (uint64_t)(v93 + 4);
          v109 = v54;
          v54 = v43;
          v94 = *(_QWORD *)(v43 + 488);
          v95 = *(_QWORD *)(v43 + 496);
          swift_bridgeObjectRetain();
          v118 = sub_2453816D8(v94, v95, (uint64_t *)&v120);
          v53 = v108;
          sub_245387E0C();
          swift_release();
          v43 = v54;
          LOBYTE(v54) = v109;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_245256000, v91, v92, "(%{public}s) No existing paired relationship exists; attempting to pair",
            v93,
            0xCu);
          v96 = v111;
          swift_arrayDestroy();
          MEMORY[0x24953317C](v96, -1, -1);
          MEMORY[0x24953317C](v93, -1, -1);

        }
        else
        {

          swift_release();
        }
        v51 = 1;
        goto LABEL_21;
      }
      v90 = (uint64_t *)(v106 + *(int *)(v110 + 32));
      v88 = *v90;
      v51 = v90[1];
      sub_24526B470(*v90, v51);
      sub_2452B7B5C(v89, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      if (v51 == 1)
        goto LABEL_45;
LABEL_21:
      *(_QWORD *)&v120 = v53;
      *((_QWORD *)&v120 + 1) = v52;
      v121 = v54;
      v122 = v115;
      v118 = v88;
      v119 = v51;
      v116 = 0;
      v117 = 0;
      sub_2452891D4(&v120, &v118, &v116);
      sub_24526B484(v88, v51);
      swift_bridgeObjectRelease();
      v48 = v112;
LABEL_22:
      v49 = (_OWORD *)((char *)v49 + 40);
      if (!--v48)
      {
        swift_bridgeObjectRelease();
        goto LABEL_51;
      }
    }
    sub_245263F80(v113, (uint64_t *)&unk_25744FAD0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v120);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v72 = sub_2453877F4();
    v73 = sub_245387D34();
    if (os_log_type_enabled(v72, v73))
    {
      v74 = swift_slowAlloc();
      v108 = swift_slowAlloc();
      *(_QWORD *)&v120 = v108;
      *(_DWORD *)v74 = v100;
      v75 = v53;
      v109 = v54;
      v76 = *(_QWORD *)(v43 + 488);
      v54 = *(_QWORD *)(v43 + 496);
      swift_bridgeObjectRetain();
      v118 = sub_2453816D8(v76, v54, (uint64_t *)&v120);
      sub_245387E0C();
      swift_release_n();
      LODWORD(v54) = v109;
      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 12) = 2082;
      swift_bridgeObjectRetain();
      v118 = sub_2453816D8(v75, v52, (uint64_t *)&v120);
      v53 = v75;
      sub_245387E0C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_245256000, v72, v73, "(%{public}s) Handshaking with unknown device: %{public}s", (uint8_t *)v74, 0x16u);
      v77 = v108;
      swift_arrayDestroy();
      MEMORY[0x24953317C](v77, -1, -1);
      MEMORY[0x24953317C](v74, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    v88 = 0;
    v51 = 0;
    if ((v111 & 1) != 0)
      goto LABEL_21;
    goto LABEL_45;
  }
  if (qword_25744FD90 != -1)
    swift_once();
  v36 = sub_245387818();
  __swift_project_value_buffer(v36, (uint64_t)qword_257462FB0);
  swift_retain();
  v37 = sub_2453877F4();
  v38 = sub_245387D34();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc();
    v40 = swift_slowAlloc();
    *(_QWORD *)&v120 = v40;
    *(_DWORD *)v39 = 136446210;
    v41 = *(_QWORD *)(a2 + 488);
    v42 = *(_QWORD *)(a2 + 496);
    swift_bridgeObjectRetain();
    v123 = sub_2453816D8(v41, v42, (uint64_t *)&v120);
    sub_245387E0C();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v37, v38, "%{public}s skipping handshake request, replicator is disabled", v39, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v40, -1, -1);
    MEMORY[0x24953317C](v39, -1, -1);

  }
  else
  {

    swift_release();
  }
}

uint64_t sub_24528B268@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  NSObject *v121;
  os_log_t v122;
  Class isa;
  uint64_t v124;
  uint64_t v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  uint8_t *v131;
  void *v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  os_log_t v137;
  BOOL v138;
  uint64_t v139;
  os_log_t v140;
  uint64_t v141;
  uint8_t *v142;
  uint64_t v143;
  _OWORD *v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint8_t *v159;
  uint64_t v160;
  char *v161;
  int v162;
  uint64_t v163;
  _OWORD *v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  NSObject *v179;
  uint8_t *v180;
  uint64_t v181;
  os_log_type_t v182;
  const char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t *v186;
  NSObject *v187;
  uint8_t *v188;
  uint64_t v189;
  _OWORD *v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  char *v217;
  uint8_t *v218;
  uint64_t v219;
  uint64_t v220;
  os_log_t v221;
  unint64_t v222;
  NSObject *v223;
  char *v224;
  uint64_t v225;
  _OWORD *v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  NSObject *v241;
  uint8_t *v242;
  uint64_t v243;
  uint64_t v244;
  os_log_t *v245;
  NSObject *v246;
  NSObject *v247;
  char *v248;
  uint64_t v249;
  _OWORD *v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  uint64_t v256;
  uint64_t v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char *v275;
  uint64_t v276;
  char *v277;
  uint8_t *v278;
  uint64_t v279;
  uint64_t v280;
  os_log_t v281;
  unint64_t v282;
  NSObject *v283;
  char *v284;
  uint64_t v285;
  _OWORD *v286;
  __int128 v287;
  __int128 v288;
  __int128 v289;
  __int128 v290;
  __int128 v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  NSObject *v301;
  uint8_t *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t *v305;
  uint64_t v306;
  unint64_t v307;
  uint64_t v308;
  _OWORD *v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  uint64_t v315;
  unint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  char *v329;
  uint64_t v330;
  uint64_t v331;
  uint8_t *v332;
  NSObject *v333;
  uint64_t v334;
  os_log_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint8_t *v342;
  uint64_t v343;
  uint64_t v344;
  _OWORD *v345;
  __int128 v346;
  __int128 v347;
  __int128 v348;
  __int128 v349;
  __int128 v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint8_t *v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  NSObject *v370;
  uint8_t *v371;
  uint64_t v372;
  uint8_t *v373;
  unsigned int v374;
  _QWORD *v375;
  uint64_t v376;
  uint64_t v377;
  os_log_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  unint64_t v382;
  uint64_t v383;
  _OWORD *v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  __int128 v389;
  unint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  char *v396;
  uint64_t v397;
  uint64_t v398;
  NSObject *v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  char *v408;
  uint64_t v409;
  uint64_t v410;
  uint8_t *v411;
  uint8_t *v412;
  char *v413;
  uint64_t v414;
  char *v415;
  uint64_t v416;
  NSObject *v417;
  char *v418;
  char *v419;
  uint8_t *v420;
  NSObject *v421;
  uint64_t v422;
  uint8_t *v423;
  uint64_t v424;
  char *v425;
  os_log_t v426;
  NSObject *v427;
  uint8_t *v428;
  BOOL v429;
  unint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  _OWORD *v439;
  __int128 v440;
  __int128 v441;
  __int128 v442;
  __int128 v443;
  __int128 v444;
  uint64_t v445;
  unint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  unint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  NSObject *v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  char *v472;
  char *v473;
  uint64_t v474;
  uint8_t *v475;
  uint64_t v476;
  char *v477;
  os_log_t v478;
  uint8_t *v479;
  char *v480;
  uint64_t v481;
  _OWORD *v482;
  __int128 v483;
  __int128 v484;
  __int128 v485;
  __int128 v486;
  __int128 v487;
  uint64_t v488;
  uint64_t v489;
  unint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  char *v507;
  uint64_t v508;
  char *v509;
  uint8_t *v510;
  uint64_t v511;
  uint64_t v512;
  os_log_t v513;
  unint64_t v514;
  NSObject *v515;
  char *v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  os_log_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  unint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  void (*v529)(uint8_t *, unint64_t, uint64_t);
  uint8_t *v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  os_log_t v534;
  int *v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  _OWORD *v540;
  __int128 v541;
  __int128 v542;
  __int128 v543;
  __int128 v544;
  __int128 v545;
  unint64_t v546;
  uint64_t v547;
  unint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  unint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  unint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  NSObject *v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  char *v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  char *v584;
  char *v585;
  char *v586;
  uint64_t v587;
  _WORD *v588;
  uint64_t v589;
  os_log_t v590;
  NSObject *v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  void (*v595)(char *, uint64_t, uint64_t);
  _OWORD *v596;
  __int128 v597;
  __int128 v598;
  __int128 v599;
  __int128 v600;
  __int128 v601;
  uint64_t v602;
  uint64_t v603;
  unint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  char *v621;
  uint64_t v622;
  os_log_t v623;
  uint8_t *v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  unint64_t v628;
  NSObject *v629;
  char *v630;
  uint64_t v631;
  _OWORD *v632;
  __int128 v633;
  __int128 v634;
  __int128 v635;
  __int128 v636;
  __int128 v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint8_t *v647;
  uint64_t v648;
  uint64_t v649;
  _OWORD *v650;
  __int128 v651;
  __int128 v652;
  __int128 v653;
  __int128 v654;
  __int128 v655;
  uint64_t v656;
  uint64_t v657;
  unint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  char *v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  NSObject *v673;
  uint8_t *v674;
  uint64_t v675;
  uint64_t v676;
  char *v677;
  uint64_t v678;
  uint64_t v679;
  int v680;
  int v681;
  uint64_t v682;
  _OWORD *v683;
  __int128 v684;
  __int128 v685;
  __int128 v686;
  __int128 v687;
  __int128 v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  NSObject *v698;
  uint8_t *v699;
  uint64_t v700;
  int v701;
  char *v702;
  uint64_t v703;
  char *v704;
  uint64_t v705;
  uint64_t v706;
  os_log_t v707;
  uint64_t v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  void (*v712)(uint8_t *, uint64_t, uint64_t);
  uint8_t *v713;
  unint64_t v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  os_log_t v718;
  int *v719;
  uint64_t v720;
  uint64_t v721;
  int v722;
  _OWORD *v723;
  __int128 v724;
  __int128 v725;
  __int128 v726;
  __int128 v727;
  __int128 v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  NSObject *v738;
  uint8_t *v739;
  uint64_t v740;
  int v741;
  uint64_t *v742;
  char *v743;
  uint64_t v744;
  void (*v745)(uint8_t *, uint64_t, uint8_t *);
  char *v746;
  uint64_t v747;
  int *v748;
  char *v749;
  uint64_t v750;
  uint64_t v751;
  int v752;
  uint64_t v753;
  uint8_t *v754;
  uint8_t *v755;
  uint8_t *v756;
  uint64_t v757;
  uint64_t v758;
  void (*v759)(uint8_t *, uint8_t *);
  int *v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  unint64_t v765;
  uint64_t v766;
  uint64_t v767;
  char *v768;
  void (*v769)(uint64_t, unint64_t, os_log_t, uint64_t);
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  uint64_t v773;
  unint64_t v775;
  uint64_t v776;
  uint8_t *v777;
  uint64_t v778;
  uint64_t v779;
  NSObject *v780;
  uint64_t v781;
  uint64_t v782;
  NSObject *v783;
  uint64_t v784;
  NSObject *v785;
  char *v786;
  char *v787;
  char *v788;
  char *v789;
  char *v790;
  uint64_t v791;
  uint64_t v792;
  NSObject *v793;
  NSObject *v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  __int128 v798;
  uint64_t v799;
  uint64_t v800;
  uint64_t v801;
  uint64_t v802;
  char *v803;
  char *v804;
  char *v805;
  char *v806;
  char *v807;
  uint64_t v808;
  uint64_t v809;
  char *v810;
  NSObject *v811;
  NSObject *v812;
  uint64_t v813;
  uint64_t v814;
  uint64_t v815;
  uint64_t v816;
  NSObject *v817;
  uint8_t *v818;
  NSObject *v819;
  char *v820;
  char *v821;
  char *v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  uint64_t v826;
  NSObject *v827;
  uint8_t *v828;
  uint8_t *v829;
  NSObject *v830;
  uint8_t *v831;
  uint8_t *v832;
  os_log_t v833;
  char *v834;
  os_log_t v835;
  char *v836;
  uint8_t *v837;
  uint64_t v838;
  Class v839;
  uint8_t *v840;
  uint64_t v841;
  uint64_t v842;
  uint8_t *v843;
  int v844;
  NSObject *v845;
  uint8_t *v846;
  uint64_t v847;
  char *v848;
  char *v849;
  os_log_t v850;
  uint8_t *v851;
  uint64_t v852;
  uint64_t v853;
  uint64_t v854;
  NSObject *v855;
  int *v856;
  uint8_t *v857;
  __int128 v858;
  __int128 v859;
  __int128 v860;
  __int128 v861;
  __int128 v862;
  __int128 v863;
  __int128 v864;
  __int128 v865;
  __int128 v866;
  __int128 v867;
  __int128 v868;
  __int128 v869;
  __int128 v870;
  __int128 v871;
  __int128 v872;
  __int128 v873;
  __int128 v874;
  __int128 v875;
  __int128 v876;
  __int128 v877;
  _QWORD v878[3];
  _QWORD v879[3];
  uint64_t v880[4];

  v844 = a4;
  LODWORD(v833) = a3;
  v842 = a5;
  v7 = sub_2453876EC();
  v8 = *(_QWORD *)(v7 - 8);
  v837 = (uint8_t *)v7;
  v838 = v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v818 = (uint8_t *)&v776 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v817 = ((char *)&v776 - v12);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v828 = (uint8_t *)&v776 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v832 = (uint8_t *)&v776 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v836 = (char *)&v776 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v835 = (os_log_t)((char *)&v776 - v20);
  MEMORY[0x24BDAC7A8](v19);
  v840 = (uint8_t *)&v776 - v21;
  v22 = sub_245387740();
  v825 = *(_QWORD *)(v22 - 8);
  v826 = v22;
  v23 = MEMORY[0x24BDAC7A8](v22);
  v820 = (char *)&v776 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v834 = (char *)&v776 - v25;
  v856 = (int *)type metadata accessor for PairingRelationship();
  v850 = (os_log_t)*((_QWORD *)v856 - 1);
  v26 = MEMORY[0x24BDAC7A8](v856);
  v782 = (uint64_t)&v776 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v795 = (uint64_t)&v776 - v29;
  v781 = v30;
  MEMORY[0x24BDAC7A8](v28);
  v808 = (uint64_t)&v776 - v31;
  v852 = sub_245387818();
  v853 = *(_QWORD *)(v852 - 8);
  v32 = MEMORY[0x24BDAC7A8](v852);
  v789 = (char *)&v776 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v790 = (char *)&v776 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v788 = (char *)&v776 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v787 = (char *)&v776 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v811 = ((char *)&v776 - v41);
  v42 = MEMORY[0x24BDAC7A8](v40);
  v786 = (char *)&v776 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v810 = (char *)&v776 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v807 = (char *)&v776 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v812 = ((char *)&v776 - v49);
  v50 = MEMORY[0x24BDAC7A8](v48);
  v806 = (char *)&v776 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v804 = (char *)&v776 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v823 = (uint64_t)&v776 - v55;
  v56 = MEMORY[0x24BDAC7A8](v54);
  v822 = (char *)&v776 - v57;
  v58 = MEMORY[0x24BDAC7A8](v56);
  v821 = (char *)&v776 - v59;
  v60 = MEMORY[0x24BDAC7A8](v58);
  v803 = (char *)&v776 - v61;
  v62 = MEMORY[0x24BDAC7A8](v60);
  v805 = (char *)&v776 - v63;
  MEMORY[0x24BDAC7A8](v62);
  v849 = (char *)&v776 - v64;
  v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  v824 = *(_QWORD *)(v65 - 8);
  v66 = *(uint8_t **)(v824 + 64);
  v67 = MEMORY[0x24BDAC7A8](v65);
  v843 = (uint8_t *)&v776 - ((unint64_t)(v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = MEMORY[0x24BDAC7A8](v67);
  v845 = ((char *)&v776 - v69);
  v70 = MEMORY[0x24BDAC7A8](v68);
  v816 = (uint64_t)&v776 - v71;
  v72 = MEMORY[0x24BDAC7A8](v70);
  v819 = ((char *)&v776 - v73);
  v74 = MEMORY[0x24BDAC7A8](v72);
  v815 = (uint64_t)&v776 - v75;
  v76 = MEMORY[0x24BDAC7A8](v74);
  v831 = (uint8_t *)&v776 - v77;
  v78 = MEMORY[0x24BDAC7A8](v76);
  v830 = ((char *)&v776 - v79);
  v80 = MEMORY[0x24BDAC7A8](v78);
  v797 = (uint64_t)&v776 - v81;
  v82 = MEMORY[0x24BDAC7A8](v80);
  v796 = (uint64_t)&v776 - v83;
  v84 = MEMORY[0x24BDAC7A8](v82);
  v829 = (uint8_t *)&v776 - v85;
  v86 = MEMORY[0x24BDAC7A8](v84);
  v784 = (uint64_t)&v776 - v87;
  v88 = MEMORY[0x24BDAC7A8](v86);
  v785 = ((char *)&v776 - v89);
  v90 = MEMORY[0x24BDAC7A8](v88);
  v791 = (uint64_t)&v776 - v91;
  v92 = MEMORY[0x24BDAC7A8](v90);
  v809 = (uint64_t)&v776 - v93;
  v94 = MEMORY[0x24BDAC7A8](v92);
  v783 = ((char *)&v776 - v95);
  v96 = MEMORY[0x24BDAC7A8](v94);
  v780 = ((char *)&v776 - v97);
  v98 = MEMORY[0x24BDAC7A8](v96);
  v802 = (uint64_t)&v776 - v99;
  v100 = MEMORY[0x24BDAC7A8](v98);
  v794 = ((char *)&v776 - v101);
  v102 = MEMORY[0x24BDAC7A8](v100);
  v801 = (uint64_t)&v776 - v103;
  v104 = MEMORY[0x24BDAC7A8](v102);
  v793 = ((char *)&v776 - v105);
  v106 = MEMORY[0x24BDAC7A8](v104);
  v792 = (uint64_t)&v776 - v107;
  v108 = MEMORY[0x24BDAC7A8](v106);
  v799 = (uint64_t)&v776 - v109;
  v110 = MEMORY[0x24BDAC7A8](v108);
  v841 = (uint64_t)&v776 - v111;
  v112 = MEMORY[0x24BDAC7A8](v110);
  v800 = (uint64_t)&v776 - v113;
  v114 = MEMORY[0x24BDAC7A8](v112);
  v116 = (char *)&v776 - v115;
  v117 = MEMORY[0x24BDAC7A8](v114);
  v119 = (char *)&v776 - v118;
  MEMORY[0x24BDAC7A8](v117);
  v121 = ((char *)&v776 - v120);
  v122 = (os_log_t)sub_2453879D4();
  isa = v122[-1].isa;
  MEMORY[0x24BDAC7A8](v122);
  v125 = (uint64_t)&v776 - ((v124 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = a1[7];
  v874 = a1[6];
  v875 = v126;
  v127 = a1[9];
  v876 = a1[8];
  v877 = v127;
  v128 = a1[3];
  v870 = a1[2];
  v871 = v128;
  v129 = a1[5];
  v872 = a1[4];
  v873 = v129;
  v130 = a1[1];
  v868 = *a1;
  v869 = v130;
  v846 = *(uint8_t **)a2;
  v847 = *(_QWORD *)(a2 + 8);
  v131 = (uint8_t *)v854;
  v132 = *(void **)(v854 + 232);
  *(_QWORD *)v125 = v132;
  (*((void (**)(uint64_t, _QWORD, os_log_t))isa + 13))(v125, *MEMORY[0x24BEE5610], v122);
  v133 = v132;
  LOBYTE(v132) = sub_2453879F8();
  (*((void (**)(uint64_t, os_log_t))isa + 1))(v125, v122);
  if ((v132 & 1) == 0)
  {
    __break(1u);
    goto LABEL_136;
  }
  v122 = (os_log_t)v131;
  swift_beginAccess();
  v851 = v131 + 192;
  sub_24525E4F0((uint64_t)(v131 + 192), (uint64_t)&v858);
  v134 = *((_QWORD *)&v859 + 1);
  v135 = v860;
  __swift_project_boxed_opaque_existential_1(&v858, *((uint64_t *)&v859 + 1));
  v136 = *(_QWORD *)(v135 + 8);
  v798 = v868;
  MetadataStoring.pairingRelationship(remoteDeviceID:)(v868, *((uint64_t *)&v868 + 1), v134, v136, (uint64_t)v121);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v858);
  v137 = v850;
  v839 = v850[7].isa;
  ((void (*)(char *, uint64_t, uint64_t, int *))v839)(v119, 1, 1, v856);
  v858 = v870;
  *(_OWORD *)v880 = xmmword_24538A080;
  v138 = ProtocolVersion.isCompatible(with:)(v880);
  v855 = v121;
  v848 = v119;
  if (v138)
  {
    v139 = (uint64_t)v121;
    v140 = v137;
    v131 = 0;
    v141 = v852;
    v142 = (uint8_t *)v853;
  }
  else
  {
    v814 = (uint64_t)v116;
    v143 = sub_24533CD78();
    (*(void (**)(char *, uint64_t, uint64_t))(v853 + 16))(v849, v143, v852);
    v144 = (_OWORD *)swift_allocObject();
    v145 = v875;
    v144[7] = v874;
    v144[8] = v145;
    v146 = v877;
    v144[9] = v876;
    v144[10] = v146;
    v147 = v871;
    v144[3] = v870;
    v144[4] = v147;
    v148 = v873;
    v144[5] = v872;
    v144[6] = v148;
    v149 = v869;
    v144[1] = v868;
    v144[2] = v149;
    swift_retain();
    sub_24526432C((uint64_t)&v868);
    v827 = sub_2453877F4();
    LODWORD(v813) = sub_245387D34();
    v150 = swift_allocObject();
    *(_BYTE *)(v150 + 16) = 34;
    v151 = swift_allocObject();
    *(_BYTE *)(v151 + 16) = 8;
    v152 = swift_allocObject();
    *(_QWORD *)(v152 + 16) = sub_2452B97AC;
    *(_QWORD *)(v152 + 24) = v122;
    v122 = (os_log_t)swift_allocObject();
    v122[2].isa = (Class)sub_245263BB8;
    v122[3].isa = (Class)v152;
    v153 = swift_allocObject();
    *(_BYTE *)(v153 + 16) = 34;
    v154 = swift_allocObject();
    *(_BYTE *)(v154 + 16) = 8;
    v155 = swift_allocObject();
    *(_QWORD *)(v155 + 16) = sub_2452B97DC;
    *(_QWORD *)(v155 + 24) = v144;
    v156 = swift_allocObject();
    *(_QWORD *)(v156 + 16) = sub_2452643B4;
    *(_QWORD *)(v156 + 24) = v155;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2574502A8);
    v157 = swift_allocObject();
    *(_OWORD *)(v157 + 16) = xmmword_24538A0A0;
    *(_QWORD *)(v157 + 32) = sub_2452B9844;
    *(_QWORD *)(v157 + 40) = v150;
    *(_QWORD *)(v157 + 48) = sub_2452BC9E4;
    *(_QWORD *)(v157 + 56) = v151;
    *(_QWORD *)(v157 + 64) = sub_2452B985C;
    *(_QWORD *)(v157 + 72) = v122;
    *(_QWORD *)(v157 + 80) = sub_2452BC9E4;
    *(_QWORD *)(v157 + 88) = v153;
    *(_QWORD *)(v157 + 96) = sub_2452BC9E4;
    *(_QWORD *)(v157 + 104) = v154;
    *(_QWORD *)(v157 + 112) = sub_2452BC9E0;
    *(_QWORD *)(v157 + 120) = v156;
    v779 = v150;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v827, (os_log_type_t)v813))
    {
      v778 = v156;
      v158 = v151;
      v159 = (uint8_t *)sub_2452E8A6C();
      v160 = swift_slowAlloc();
      v879[0] = 0;
      v878[0] = v160;
      *(_WORD *)v159 = 514;
      v880[0] = (uint64_t)(v159 + 2);
      *(_QWORD *)&v858 = sub_2452B9844;
      *((_QWORD *)&v858 + 1) = v779;
      sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
      v777 = v159;
      swift_release();
      *(_QWORD *)&v858 = sub_2452BC9E4;
      *((_QWORD *)&v858 + 1) = v158;
      sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
      swift_release();
      *(_QWORD *)&v858 = sub_2452B985C;
      *((_QWORD *)&v858 + 1) = v122;
      sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
      swift_release();
      *(_QWORD *)&v858 = sub_2452BC9E4;
      *((_QWORD *)&v858 + 1) = v153;
      sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
      swift_release();
      *(_QWORD *)&v858 = sub_2452BC9E4;
      *((_QWORD *)&v858 + 1) = v154;
      sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
      swift_release();
      *(_QWORD *)&v858 = sub_2452BC9E0;
      *((_QWORD *)&v858 + 1) = v778;
      sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
      swift_release();
      _os_log_impl(&dword_245256000, v827, (os_log_type_t)v813, "(%{public}s) Remote device has an incompatible protocol: %{public}s", v777, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v160, -1, -1);
      sub_2452E8AD8();
    }

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v142 = (uint8_t *)v853;
    v141 = v852;
    (*(void (**)(char *, uint64_t))(v853 + 8))(v849, v852);
    v131 = 0;
    v139 = (uint64_t)v855;
    v116 = (char *)v814;
    v140 = v850;
  }
  v161 = (char *)v140[6].isa;
  v162 = ((uint64_t (*)(uint64_t, uint64_t, int *))v161)(v139, 1, v856);
  v125 = v847;
  v849 = v161;
  v827 = 0;
  if (v162 != 1)
  {
    LODWORD(v833) = v833;
    if (v847)
    {
      if (v847 != 1)
      {
        if (v847 != 2)
        {
          v374 = v833 - 1;
          swift_bridgeObjectRetain();
          if (v374 >= 2)
          {
            v428 = v846;
            v429 = sub_2452A708C(v798, *((uint64_t *)&v798 + 1), (uint64_t)v846, v125);
            v430 = 2;
            if (!v429)
              v430 = 0;
            v823 = v430;
            v431 = (uint64_t)v851;
            swift_beginAccess();
            sub_24525E4F0(v431, (uint64_t)&v858);
            v432 = *((_QWORD *)&v859 + 1);
            v433 = v860;
            __swift_project_boxed_opaque_existential_1(&v858, *((uint64_t *)&v859 + 1));
            v434 = *(_QWORD *)(v433 + 8);
            v435 = v809;
            MetadataStoring.pairingRelationship(remoteDeviceID:)((uint64_t)v428, v125, v432, v434, v809);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v858);
            v436 = v435;
            v437 = v791;
            sub_2452BC89C(v436, v791, (uint64_t *)&unk_25744FAD0);
            if (((unsigned int (*)(uint64_t, uint64_t, int *))v161)(v437, 1, v856) == 1)
            {
              sub_245263F80(v437, (uint64_t *)&unk_25744FAD0);
              v438 = sub_24533CD78();
              (*(void (**)(char *, uint64_t, uint64_t))(v853 + 16))(v789, v438, v852);
              v439 = (_OWORD *)swift_allocObject();
              v440 = v875;
              v439[7] = v874;
              v439[8] = v440;
              v441 = v877;
              v439[9] = v876;
              v439[10] = v441;
              v442 = v871;
              v439[3] = v870;
              v439[4] = v442;
              v443 = v873;
              v439[5] = v872;
              v439[6] = v443;
              v444 = v869;
              v439[1] = v868;
              v439[2] = v444;
              v445 = v841;
              sub_2452BC89C((uint64_t)v855, v841, (uint64_t *)&unk_25744FAD0);
              v446 = (*(unsigned __int8 *)(v824 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v824 + 80);
              v447 = swift_allocObject();
              sub_2452BC850(v445, v447 + v446, (uint64_t *)&unk_25744FAD0);
              v448 = swift_allocObject();
              *(_QWORD *)(v448 + 16) = sub_2452B9A98;
              *(_QWORD *)(v448 + 24) = v447;
              v449 = swift_allocObject();
              *(_QWORD *)(v449 + 16) = v428;
              *(_QWORD *)(v449 + 24) = v125;
              v450 = swift_allocObject();
              v808 = v450;
              v451 = v823;
              *(_QWORD *)(v450 + 16) = 0;
              *(_QWORD *)(v450 + 24) = v451;
              v452 = v854;
              swift_retain();
              sub_24526432C((uint64_t)&v868);
              sub_24526B470(0, v451);
              v811 = sub_2453877F4();
              LODWORD(v810) = sub_245387D34();
              v812 = swift_allocObject();
              LOBYTE(v812[2].isa) = 34;
              v814 = swift_allocObject();
              *(_BYTE *)(v814 + 16) = 8;
              v453 = swift_allocObject();
              *(_QWORD *)(v453 + 16) = sub_2452BCDA4;
              *(_QWORD *)(v453 + 24) = v452;
              v454 = swift_allocObject();
              v813 = v454;
              *(_QWORD *)(v454 + 16) = sub_2452643B4;
              *(_QWORD *)(v454 + 24) = v453;
              v821 = (char *)swift_allocObject();
              v821[16] = 34;
              v455 = swift_allocObject();
              *(_BYTE *)(v455 + 16) = 8;
              v456 = swift_allocObject();
              *(_QWORD *)(v456 + 16) = sub_2452BCD1C;
              *(_QWORD *)(v456 + 24) = v439;
              v457 = swift_allocObject();
              *(_QWORD *)(v457 + 16) = sub_2452643B4;
              *(_QWORD *)(v457 + 24) = v456;
              v458 = v457;
              v822 = (char *)v457;
              v807 = (char *)swift_allocObject();
              v807[16] = 34;
              v850 = (os_log_t)swift_allocObject();
              LOBYTE(v850[2].isa) = 8;
              v459 = swift_allocObject();
              *(_QWORD *)(v459 + 16) = sub_2452B9A9C;
              *(_QWORD *)(v459 + 24) = v448;
              v460 = swift_allocObject();
              v841 = v460;
              *(_QWORD *)(v460 + 16) = sub_2452643B4;
              *(_QWORD *)(v460 + 24) = v459;
              v847 = swift_allocObject();
              *(_BYTE *)(v847 + 16) = 34;
              v461 = swift_allocObject();
              *(_BYTE *)(v461 + 16) = 8;
              v462 = v461;
              v463 = swift_allocObject();
              *(_QWORD *)(v463 + 16) = sub_2452BCD1C;
              *(_QWORD *)(v463 + 24) = v449;
              v464 = swift_allocObject();
              *(_QWORD *)(v464 + 16) = sub_2452643B4;
              *(_QWORD *)(v464 + 24) = v463;
              v465 = v464;
              v466 = swift_allocObject();
              *(_BYTE *)(v466 + 16) = 34;
              v846 = (uint8_t *)swift_allocObject();
              v846[16] = 8;
              v467 = swift_allocObject();
              v468 = v808;
              *(_QWORD *)(v467 + 16) = sub_2452B9A0C;
              *(_QWORD *)(v467 + 24) = v468;
              v469 = swift_allocObject();
              v808 = v469;
              *(_QWORD *)(v469 + 16) = sub_2452643B4;
              *(_QWORD *)(v469 + 24) = v467;
              v824 = v455;
              __swift_instantiateConcreteTypeFromMangledName(&qword_2574502A8);
              v470 = swift_allocObject();
              *(_OWORD *)(v470 + 16) = xmmword_24538A0E0;
              *(_QWORD *)(v470 + 32) = sub_2452BC9E4;
              v471 = v813;
              *(_QWORD *)(v470 + 40) = v812;
              *(_QWORD *)(v470 + 48) = sub_2452BC9E4;
              *(_QWORD *)(v470 + 56) = v814;
              *(_QWORD *)(v470 + 64) = sub_2452BC9E0;
              *(_QWORD *)(v470 + 72) = v471;
              *(_QWORD *)(v470 + 80) = sub_2452BC9E4;
              *(_QWORD *)(v470 + 88) = v821;
              *(_QWORD *)(v470 + 96) = sub_2452BC9E4;
              *(_QWORD *)(v470 + 104) = v455;
              *(_QWORD *)(v470 + 112) = sub_2452BC9E0;
              *(_QWORD *)(v470 + 120) = v458;
              *(_QWORD *)(v470 + 128) = sub_2452BC9E4;
              v472 = v807;
              *(_QWORD *)(v470 + 136) = v807;
              *(_QWORD *)(v470 + 144) = sub_2452BC9E4;
              *(_QWORD *)(v470 + 152) = v850;
              *(_QWORD *)(v470 + 160) = sub_2452BC9E0;
              *(_QWORD *)(v470 + 168) = v841;
              *(_QWORD *)(v470 + 176) = sub_2452BC9E4;
              *(_QWORD *)(v470 + 184) = v847;
              *(_QWORD *)(v470 + 192) = sub_2452BC9E4;
              v122 = v462;
              *(_QWORD *)(v470 + 200) = v462;
              *(_QWORD *)(v470 + 208) = sub_2452BC9E0;
              *(_QWORD *)(v470 + 216) = v465;
              *(_QWORD *)(v470 + 224) = sub_2452BC9E4;
              *(_QWORD *)(v470 + 232) = v466;
              *(_QWORD *)(v470 + 240) = sub_2452BC9E4;
              *(_QWORD *)(v470 + 248) = v846;
              *(_QWORD *)(v470 + 256) = sub_2452BC9E0;
              *(_QWORD *)(v470 + 264) = v808;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              v473 = (char *)v465;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              v131 = (uint8_t *)v462;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              v142 = (uint8_t *)v811;
              swift_bridgeObjectRelease();
              if (os_log_type_enabled((os_log_t)v142, (os_log_type_t)v810))
              {
                v474 = v847;
                v805 = (char *)v466;
                v806 = v473;
                v803 = (char *)v462;
                v475 = (uint8_t *)sub_2452E8A6C();
                v476 = swift_slowAlloc();
                v879[0] = 0;
                v878[0] = v476;
                *(_WORD *)v475 = 1282;
                v880[0] = (uint64_t)(v475 + 2);
                *(_QWORD *)&v858 = sub_2452BC9E4;
                v122 = v812;
                *((_QWORD *)&v858 + 1) = v812;
                v131 = (uint8_t *)v827;
                sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                if (!v131)
                {
                  v804 = (char *)v476;
                  v827 = v475;
                  swift_release();
                  *(_QWORD *)&v858 = sub_2452BC9E4;
                  *((_QWORD *)&v858 + 1) = v814;
                  sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                  swift_release();
                  *(_QWORD *)&v858 = sub_2452BC9E0;
                  *((_QWORD *)&v858 + 1) = v813;
                  sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                  v477 = v821;
                  swift_release();
                  *(_QWORD *)&v858 = sub_2452BC9E4;
                  *((_QWORD *)&v858 + 1) = v477;
                  sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                  v478 = v850;
                  swift_release();
                  *(_QWORD *)&v858 = sub_2452BC9E4;
                  *((_QWORD *)&v858 + 1) = v824;
                  sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                  swift_release();
                  *(_QWORD *)&v858 = sub_2452BC9E0;
                  *((_QWORD *)&v858 + 1) = v822;
                  sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                  swift_release();
                  *(_QWORD *)&v858 = sub_2452BC9E4;
                  *((_QWORD *)&v858 + 1) = v472;
                  sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                  swift_release();
                  *(_QWORD *)&v858 = sub_2452BC9E4;
                  *((_QWORD *)&v858 + 1) = v478;
                  sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                  swift_release();
                  *(_QWORD *)&v858 = sub_2452BC9E0;
                  *((_QWORD *)&v858 + 1) = v841;
                  sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                  swift_release();
                  *(_QWORD *)&v858 = sub_2452BC9E4;
                  *((_QWORD *)&v858 + 1) = v474;
                  sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                  swift_release();
                  *(_QWORD *)&v858 = sub_2452BC9E4;
                  *((_QWORD *)&v858 + 1) = v803;
                  sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                  v479 = v846;
                  swift_release();
                  *(_QWORD *)&v858 = sub_2452BC9E0;
                  *((_QWORD *)&v858 + 1) = v806;
                  sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                  swift_release();
                  *(_QWORD *)&v858 = sub_2452BC9E4;
                  *((_QWORD *)&v858 + 1) = v805;
                  sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                  swift_release();
                  *(_QWORD *)&v858 = sub_2452BC9E4;
                  *((_QWORD *)&v858 + 1) = v479;
                  sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                  swift_release();
                  *(_QWORD *)&v858 = sub_2452BC9E0;
                  *((_QWORD *)&v858 + 1) = v808;
                  sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                  swift_release();
                  _os_log_impl(&dword_245256000, v811, (os_log_type_t)v810, "(%{public}s) Relationship %{public}s (%{public}s) is migrating from unknown relationship %{public}s;"
                    " state: %{public}s",
                    (uint8_t *)v827,
                    0x34u);
                  v480 = v804;
                  swift_arrayDestroy();
                  MEMORY[0x24953317C](v480, -1, -1);
                  sub_2452E8AD8();
                }
                goto LABEL_151;
              }
              goto LABEL_96;
            }
            v538 = v795;
            sub_2452B7AB8(v437, v795, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
            v539 = sub_24533CD78();
            (*(void (**)(char *, uint64_t, uint64_t))(v853 + 16))(v790, v539, v852);
            v540 = (_OWORD *)swift_allocObject();
            v541 = v875;
            v540[7] = v874;
            v540[8] = v541;
            v542 = v877;
            v540[9] = v876;
            v540[10] = v542;
            v543 = v871;
            v540[3] = v870;
            v540[4] = v543;
            v544 = v873;
            v540[5] = v872;
            v540[6] = v544;
            v545 = v869;
            v540[1] = v868;
            v540[2] = v545;
            v546 = v125;
            v547 = v841;
            sub_2452BC89C((uint64_t)v855, v841, (uint64_t *)&unk_25744FAD0);
            v548 = (*(unsigned __int8 *)(v824 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v824 + 80);
            v549 = swift_allocObject();
            sub_2452BC850(v547, v549 + v548, (uint64_t *)&unk_25744FAD0);
            v550 = swift_allocObject();
            *(_QWORD *)(v550 + 16) = sub_2452B9A98;
            *(_QWORD *)(v550 + 24) = v549;
            v551 = swift_allocObject();
            v814 = v551;
            *(_QWORD *)(v551 + 16) = v428;
            *(_QWORD *)(v551 + 24) = v546;
            v552 = v538;
            v553 = v782;
            sub_2452B792C(v552, v782, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
            v554 = (LOBYTE(v850[10].isa) + 16) & ~(unint64_t)LOBYTE(v850[10].isa);
            v555 = swift_allocObject();
            sub_2452B7AB8(v553, v555 + v554, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
            v556 = swift_allocObject();
            *(_QWORD *)(v556 + 16) = sub_2452B9CD0;
            *(_QWORD *)(v556 + 24) = v555;
            v557 = swift_allocObject();
            v813 = v557;
            v558 = v823;
            *(_QWORD *)(v557 + 16) = 0;
            *(_QWORD *)(v557 + 24) = v558;
            v559 = v854;
            swift_retain();
            sub_24526432C((uint64_t)&v868);
            sub_24526B470((uint64_t)v428, v546);
            sub_24526B470(0, v558);
            v811 = sub_2453877F4();
            LODWORD(v803) = sub_245387D34();
            v806 = (char *)swift_allocObject();
            v806[16] = 34;
            v805 = (char *)swift_allocObject();
            v805[16] = 8;
            v560 = swift_allocObject();
            *(_QWORD *)(v560 + 16) = sub_2452BCDA4;
            *(_QWORD *)(v560 + 24) = v559;
            v561 = swift_allocObject();
            v807 = (char *)v561;
            *(_QWORD *)(v561 + 16) = sub_2452643B4;
            *(_QWORD *)(v561 + 24) = v560;
            v808 = swift_allocObject();
            *(_BYTE *)(v808 + 16) = 34;
            v824 = swift_allocObject();
            *(_BYTE *)(v824 + 16) = 8;
            v562 = swift_allocObject();
            *(_QWORD *)(v562 + 16) = sub_2452BCD1C;
            *(_QWORD *)(v562 + 24) = v540;
            v563 = swift_allocObject();
            v822 = (char *)v563;
            *(_QWORD *)(v563 + 16) = sub_2452643B4;
            *(_QWORD *)(v563 + 24) = v562;
            v812 = swift_allocObject();
            LOBYTE(v812[2].isa) = 34;
            v564 = swift_allocObject();
            *(_BYTE *)(v564 + 16) = 8;
            v565 = swift_allocObject();
            *(_QWORD *)(v565 + 16) = sub_2452BC9D4;
            *(_QWORD *)(v565 + 24) = v550;
            v566 = swift_allocObject();
            v850 = v566;
            v566[2].isa = (Class)sub_2452643B4;
            v566[3].isa = (Class)v565;
            v804 = (char *)swift_allocObject();
            v804[16] = 34;
            v821 = (char *)swift_allocObject();
            v821[16] = 8;
            v567 = swift_allocObject();
            v568 = v814;
            *(_QWORD *)(v567 + 16) = sub_2452B9910;
            *(_QWORD *)(v567 + 24) = v568;
            v569 = swift_allocObject();
            *(_QWORD *)(v569 + 16) = sub_2452643B4;
            *(_QWORD *)(v569 + 24) = v567;
            v570 = v569;
            v571 = swift_allocObject();
            *(_BYTE *)(v571 + 16) = 34;
            v572 = v571;
            v800 = swift_allocObject();
            *(_BYTE *)(v800 + 16) = 8;
            v573 = swift_allocObject();
            *(_QWORD *)(v573 + 16) = sub_2452BC9D4;
            *(_QWORD *)(v573 + 24) = v556;
            v574 = swift_allocObject();
            *(_QWORD *)(v574 + 16) = sub_2452643B4;
            *(_QWORD *)(v574 + 24) = v573;
            v802 = swift_allocObject();
            *(_BYTE *)(v802 + 16) = 34;
            v814 = swift_allocObject();
            *(_BYTE *)(v814 + 16) = 8;
            v575 = swift_allocObject();
            v576 = v813;
            *(_QWORD *)(v575 + 16) = sub_2452B9A0C;
            *(_QWORD *)(v575 + 24) = v576;
            v577 = swift_allocObject();
            v813 = v577;
            *(_QWORD *)(v577 + 16) = sub_2452643B4;
            *(_QWORD *)(v577 + 24) = v575;
            v810 = (char *)v564;
            __swift_instantiateConcreteTypeFromMangledName(&qword_2574502A8);
            v578 = swift_allocObject();
            *(_OWORD *)(v578 + 16) = xmmword_24538A0D0;
            *(_QWORD *)(v578 + 32) = sub_2452BC9E4;
            v579 = v805;
            *(_QWORD *)(v578 + 40) = v806;
            *(_QWORD *)(v578 + 48) = sub_2452BC9E4;
            *(_QWORD *)(v578 + 56) = v579;
            *(_QWORD *)(v578 + 64) = sub_2452BC9E0;
            v580 = v808;
            *(_QWORD *)(v578 + 72) = v807;
            *(_QWORD *)(v578 + 80) = sub_2452BC9E4;
            *(_QWORD *)(v578 + 88) = v580;
            *(_QWORD *)(v578 + 96) = sub_2452BC9E4;
            *(_QWORD *)(v578 + 104) = v824;
            *(_QWORD *)(v578 + 112) = sub_2452BC9E0;
            *(_QWORD *)(v578 + 120) = v822;
            *(_QWORD *)(v578 + 128) = sub_2452BC9E4;
            *(_QWORD *)(v578 + 136) = v812;
            *(_QWORD *)(v578 + 144) = sub_2452BC9E4;
            *(_QWORD *)(v578 + 152) = v564;
            *(_QWORD *)(v578 + 160) = sub_2452BC9E0;
            *(_QWORD *)(v578 + 168) = v850;
            *(_QWORD *)(v578 + 176) = sub_2452BC9E4;
            *(_QWORD *)(v578 + 184) = v804;
            *(_QWORD *)(v578 + 192) = sub_2452BC9E4;
            *(_QWORD *)(v578 + 200) = v821;
            *(_QWORD *)(v578 + 208) = sub_2452BC9E0;
            v581 = v570;
            *(_QWORD *)(v578 + 216) = v570;
            *(_QWORD *)(v578 + 224) = sub_2452BC9E4;
            v582 = v572;
            *(_QWORD *)(v578 + 232) = v572;
            *(_QWORD *)(v578 + 240) = sub_2452BC9E4;
            v583 = v800;
            *(_QWORD *)(v578 + 248) = v800;
            *(_QWORD *)(v578 + 256) = sub_2452BC9E0;
            *(_QWORD *)(v578 + 264) = v574;
            *(_QWORD *)(v578 + 272) = sub_2452BC9E4;
            *(_QWORD *)(v578 + 280) = v802;
            *(_QWORD *)(v578 + 288) = sub_2452BC9E4;
            *(_QWORD *)(v578 + 296) = v814;
            *(_QWORD *)(v578 + 304) = sub_2452BC9E0;
            *(_QWORD *)(v578 + 312) = v813;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            v584 = v804;
            swift_retain();
            swift_retain();
            swift_retain();
            v801 = v581;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v811, (os_log_type_t)v803))
            {
              v585 = v805;
              v586 = v584;
              v799 = v574;
              v587 = v801;
              v122 = (os_log_t)v821;
              v588 = (_WORD *)sub_2452E8A6C();
              v589 = swift_slowAlloc();
              v879[0] = 0;
              *(_QWORD *)&v798 = v589;
              *((_QWORD *)&v798 + 1) = v588;
              v878[0] = v589;
              *v588 = 1538;
              v880[0] = (uint64_t)(v588 + 1);
              *(_QWORD *)&v858 = sub_2452BC9E4;
              *((_QWORD *)&v858 + 1) = v806;
              v131 = (uint8_t *)v827;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              if (!v131)
              {
                swift_release();
                *(_QWORD *)&v858 = sub_2452BC9E4;
                *((_QWORD *)&v858 + 1) = v585;
                sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                v590 = v122;
                swift_release();
                *(_QWORD *)&v858 = sub_2452BC9E0;
                *((_QWORD *)&v858 + 1) = v807;
                sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                v591 = v812;
                swift_release();
                *(_QWORD *)&v858 = sub_2452BC9E4;
                *((_QWORD *)&v858 + 1) = v808;
                sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                v592 = v824;
                swift_release();
                *(_QWORD *)&v858 = sub_2452BC9E4;
                *((_QWORD *)&v858 + 1) = v592;
                sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                swift_release();
                *(_QWORD *)&v858 = sub_2452BC9E0;
                *((_QWORD *)&v858 + 1) = v822;
                sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                swift_release();
                *(_QWORD *)&v858 = sub_2452BC9E4;
                *((_QWORD *)&v858 + 1) = v591;
                sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                swift_release();
                *(_QWORD *)&v858 = sub_2452BC9E4;
                *((_QWORD *)&v858 + 1) = v810;
                sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                swift_release();
                *(_QWORD *)&v858 = sub_2452BC9E0;
                *((_QWORD *)&v858 + 1) = v850;
                sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                swift_release();
                *(_QWORD *)&v858 = sub_2452BC9E4;
                *((_QWORD *)&v858 + 1) = v586;
                sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                swift_release();
                *(_QWORD *)&v858 = sub_2452BC9E4;
                *((_QWORD *)&v858 + 1) = v590;
                sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                swift_release();
                *(_QWORD *)&v858 = sub_2452BC9E0;
                *((_QWORD *)&v858 + 1) = v587;
                sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                swift_release();
                *(_QWORD *)&v858 = sub_2452BC9E4;
                *((_QWORD *)&v858 + 1) = v582;
                sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                swift_release();
                *(_QWORD *)&v858 = sub_2452BC9E4;
                *((_QWORD *)&v858 + 1) = v583;
                sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                swift_release();
                *(_QWORD *)&v858 = sub_2452BC9E0;
                *((_QWORD *)&v858 + 1) = v799;
                sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                swift_release();
                *(_QWORD *)&v858 = sub_2452BC9E4;
                *((_QWORD *)&v858 + 1) = v802;
                sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                swift_release();
                *(_QWORD *)&v858 = sub_2452BC9E4;
                *((_QWORD *)&v858 + 1) = v814;
                sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                swift_release();
                *(_QWORD *)&v858 = sub_2452BC9E0;
                *((_QWORD *)&v858 + 1) = v813;
                sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
                swift_release();
                _os_log_impl(&dword_245256000, v811, (os_log_type_t)v803, "(%{public}s) Relationship %{public}s (%{public}s) is migrating from relationship %{public}s (%{public}s); state: %{public}s",
                  *((uint8_t **)&v798 + 1),
                  0x3Eu);
                v593 = v798;
                swift_arrayDestroy();
                MEMORY[0x24953317C](v593, -1, -1);
                sub_2452E8AD8();
              }
              goto LABEL_151;
            }

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            (*(void (**)(char *, uint64_t))(v853 + 8))(v790, v852);
            v142 = v831;
            v122 = (os_log_t)v823;
            v709 = (uint64_t)v851;
            swift_beginAccess();
            sub_24525E4F0(v709, (uint64_t)&v858);
            v710 = *((_QWORD *)&v859 + 1);
            v711 = v860;
            __swift_project_boxed_opaque_existential_1(&v858, *((uint64_t *)&v859 + 1));
            v712 = *(void (**)(uint8_t *, uint64_t, uint64_t))(*(_QWORD *)(v711 + 16) + 96);
            v713 = v846;
            v714 = v847;
            v712(v846, v847, v710);
            sub_24526B484((uint64_t)v713, v714);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v858);
            v715 = (uint64_t)v834;
            v716 = v795;
            (*(void (**)(char *, uint64_t, uint64_t))(v825 + 16))(v834, v795, v826);
            v864 = v874;
            v865 = v875;
            v866 = v876;
            v867 = v877;
            v860 = v870;
            v861 = v871;
            v862 = v872;
            v863 = v873;
            v858 = v868;
            v859 = v869;
            sub_24526432C((uint64_t)&v868);
            v717 = (uint64_t)v840;
            sub_2453876C8();
            v718 = v835;
            sub_2453876C8();
            sub_245263F80(v809, (uint64_t *)&unk_25744FAD0);
            v880[0] = 0;
            v880[1] = (uint64_t)v122;
            v719 = v856;
            v720 = (uint64_t)v836;
            (*(void (**)(char *, uint64_t, uint8_t *))(v838 + 16))(v836, v716 + v856[9], v837);
            sub_24526B470(0, (unint64_t)v122);
            sub_2452B7B5C(v716, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
            v721 = v841;
            PairingRelationship.init(id:remoteDevice:lastIncomingConnectionDate:lastOutgoingConnectionDate:state:initialPairingDate:)(v715, &v858, v717, (uint64_t)v718, v880, v720, v841);
            ((void (*)(uint64_t, _QWORD, uint64_t, int *))v839)(v721, 0, 1, v719);
            v184 = (uint64_t)v848;
            sub_2452BBA60(v721, (uint64_t)v848, (uint64_t *)&unk_25744FAD0);
            v66 = 0;
            v188 = v832;
            v131 = v829;
            v187 = v830;
            v161 = v849;
            v125 = (uint64_t)v122;
          }
          else
          {
            v142 = v831;
            v188 = v832;
            v131 = v829;
            v187 = v830;
            v66 = v846;
            v184 = (uint64_t)v848;
          }
LABEL_110:
          sub_2452BC89C(v184, (uint64_t)v131, (uint64_t *)&unk_25744FAD0);
          if (((unsigned int (*)(uint8_t *, uint64_t, int *))v161)(v131, 1, v856) == 1)
          {
            sub_245263F80((uint64_t)v131, (uint64_t *)&unk_25744FAD0);
            v823 = v125;
            if ((_DWORD)v833)
            {
              v131 = v837;
              v122 = (os_log_t)v838;
              if ((_DWORD)v833 == 1)
              {
                v743 = v161;
                v744 = v797;
                sub_2452BC89C((uint64_t)v855, v797, (uint64_t *)&unk_25744FAD0);
                if (((unsigned int (*)(uint64_t, uint64_t, int *))v743)(v744, 1, v856) == 1)
                {
LABEL_144:
                  sub_24526B484((uint64_t)v66, v125);
                  __break(1u);
                  goto LABEL_145;
                }
                v745 = (void (*)(uint8_t *, uint64_t, uint8_t *))v122[2].isa;
                v745(v188, v744 + v856[6], v131);
                sub_2452B7B5C(v744, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
                sub_2453876C8();
                v161 = v849;
              }
              else
              {
                v125 = (uint64_t)v188;
                v122 = v855;
                sub_2452BC89C((uint64_t)v855, (uint64_t)v187, (uint64_t *)&unk_25744FAD0);
                if (((unsigned int (*)(NSObject *, uint64_t, int *))v161)(v187, 1, v856) == 1)
                {
LABEL_146:
                  sub_24526B484((uint64_t)v66, v823);
                  __break(1u);
                  goto LABEL_147;
                }
                v748 = v856;
                v749 = (char *)v187 + v856[6];
                v750 = (uint64_t)v187;
                v745 = *(void (**)(uint8_t *, uint64_t, uint8_t *))(v838 + 16);
                v745((uint8_t *)v125, (uint64_t)v749, v131);
                sub_2452B7B5C(v750, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
                sub_2452BC89C((uint64_t)v122, (uint64_t)v142, (uint64_t *)&unk_25744FAD0);
                if (((unsigned int (*)(uint8_t *, uint64_t, int *))v161)(v142, 1, v748) == 1)
                {
LABEL_147:
                  sub_24526B484((uint64_t)v66, v823);
                  __break(1u);
LABEL_148:
                  __break(1u);
                  goto LABEL_149;
                }
                v745(v828, (uint64_t)&v142[v856[7]], v131);
                sub_2452B7B5C((uint64_t)v142, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
                v188 = (uint8_t *)v125;
              }
            }
            else
            {
              sub_2453876C8();
              v746 = v161;
              v747 = v796;
              sub_2452BC89C((uint64_t)v855, v796, (uint64_t *)&unk_25744FAD0);
              if (((unsigned int (*)(uint64_t, uint64_t, int *))v746)(v747, 1, v856) == 1)
              {
LABEL_145:
                sub_24526B484((uint64_t)v66, v125);
                __break(1u);
                goto LABEL_146;
              }
              v745 = *(void (**)(uint8_t *, uint64_t, uint8_t *))(v838 + 16);
              v745(v828, v747 + v856[7], v837);
              sub_2452B7B5C(v747, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
              v161 = v849;
            }
            v846 = v66;
            v751 = (uint64_t)v855;
            v122 = v819;
            sub_2452BC89C((uint64_t)v855, (uint64_t)v819, (uint64_t *)&unk_25744FAD0);
            v752 = ((uint64_t (*)(os_log_t, uint64_t, int *))v161)(v122, 1, v856);
            v753 = (uint64_t)v820;
            if (v752 == 1)
              goto LABEL_139;
            v131 = (uint8_t *)v161;
            (*(void (**)(char *, os_log_t, uint64_t))(v825 + 16))(v820, v122, v826);
            sub_2452B7B5C((uint64_t)v122, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
            v864 = v874;
            v865 = v875;
            v866 = v876;
            v867 = v877;
            v860 = v870;
            v861 = v871;
            v862 = v872;
            v863 = v873;
            v858 = v868;
            v859 = v869;
            v122 = v817;
            v754 = v188;
            v755 = v188;
            v756 = v837;
            v745((uint8_t *)v817, (uint64_t)v754, v837);
            v125 = (uint64_t)v818;
            v66 = v828;
            v745(v818, (uint64_t)v828, v756);
            v880[0] = (uint64_t)v846;
            v880[1] = v823;
            v757 = v751;
            v758 = v816;
            sub_2452BC89C(v757, v816, (uint64_t *)&unk_25744FAD0);
            if (((unsigned int (*)(uint64_t, uint64_t, int *))v131)(v758, 1, v856) == 1)
            {
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            sub_24526432C((uint64_t)&v868);
            v759 = *(void (**)(uint8_t *, uint8_t *))(v838 + 8);
            v759(v66, v756);
            v759(v755, v756);
            v760 = v856;
            v761 = (uint64_t)v840;
            v745(v840, v758 + v856[9], v756);
            sub_2452B7B5C(v758, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
            v762 = v815;
            PairingRelationship.init(id:remoteDevice:lastIncomingConnectionDate:lastOutgoingConnectionDate:state:initialPairingDate:)(v753, &v858, (uint64_t)v122, v125, v880, v761, v815);
            ((void (*)(uint64_t, _QWORD, uint64_t, int *))v839)(v762, 0, 1, v760);
            v184 = (uint64_t)v848;
            sub_2452BBA60(v762, (uint64_t)v848, (uint64_t *)&unk_25744FAD0);
            v375 = (_QWORD *)v854;
            v161 = v849;
          }
          else
          {
            sub_24526B484((uint64_t)v66, v125);
            sub_245263F80((uint64_t)v131, (uint64_t *)&unk_25744FAD0);
            v375 = (_QWORD *)v854;
          }
          v122 = v845;
          goto LABEL_125;
        }
        v184 = v141;
        v125 = (uint64_t)v855;
        v185 = v801;
        sub_2452BC89C((uint64_t)v855, v801, (uint64_t *)&unk_25744FAD0);
        if (((unsigned int (*)(uint64_t, uint64_t, int *))v161)(v185, 1, v856) == 1)
        {
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        v186 = (uint64_t *)(v185 + v856[8]);
        v187 = *v186;
        v122 = (os_log_t)v186[1];
        sub_24526B470(*v186, (unint64_t)v122);
        sub_2452B7B5C(v185, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        v188 = (uint8_t *)v812;
        if (!v122)
        {
LABEL_21:
          sub_24526B484((uint64_t)v187, (unint64_t)v122);
          v189 = sub_24533CD78();
          (*((void (**)(char *, uint64_t, uint64_t))v142 + 2))(v807, v189, v184);
          v190 = (_OWORD *)swift_allocObject();
          v191 = v875;
          v190[7] = v874;
          v190[8] = v191;
          v192 = v877;
          v190[9] = v876;
          v190[10] = v192;
          v193 = v871;
          v190[3] = v870;
          v190[4] = v193;
          v194 = v873;
          v190[5] = v872;
          v190[6] = v194;
          v195 = v869;
          v190[1] = v868;
          v190[2] = v195;
          v196 = v125;
          v197 = v841;
          sub_2452BC89C(v196, v841, (uint64_t *)&unk_25744FAD0);
          v198 = (*(unsigned __int8 *)(v824 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v824 + 80);
          v199 = swift_allocObject();
          sub_2452BC850(v197, v199 + v198, (uint64_t *)&unk_25744FAD0);
          v200 = swift_allocObject();
          *(_QWORD *)(v200 + 16) = v846;
          *(_QWORD *)(v200 + 24) = 2;
          v201 = v854;
          swift_retain();
          sub_24526432C((uint64_t)&v868);
          v835 = (os_log_t)sub_2453877F4();
          LODWORD(v834) = sub_245387D34();
          v846 = (uint8_t *)swift_allocObject();
          v846[16] = 34;
          v847 = swift_allocObject();
          *(_BYTE *)(v847 + 16) = 8;
          v202 = swift_allocObject();
          *(_QWORD *)(v202 + 16) = sub_2452BCDA4;
          *(_QWORD *)(v202 + 24) = v201;
          v203 = swift_allocObject();
          v821 = (char *)v203;
          *(_QWORD *)(v203 + 16) = sub_2452643B4;
          *(_QWORD *)(v203 + 24) = v202;
          v850 = (os_log_t)swift_allocObject();
          LOBYTE(v850[2].isa) = 34;
          v823 = swift_allocObject();
          *(_BYTE *)(v823 + 16) = 8;
          v204 = swift_allocObject();
          *(_QWORD *)(v204 + 16) = sub_2452BCD1C;
          *(_QWORD *)(v204 + 24) = v190;
          v205 = swift_allocObject();
          *(_QWORD *)(v205 + 16) = sub_2452643B4;
          *(_QWORD *)(v205 + 24) = v204;
          v206 = v205;
          v841 = v205;
          v814 = swift_allocObject();
          *(_BYTE *)(v814 + 16) = 34;
          v836 = (char *)swift_allocObject();
          v836[16] = 8;
          v207 = swift_allocObject();
          *(_QWORD *)(v207 + 16) = sub_2452B9DF0;
          *(_QWORD *)(v207 + 24) = v199;
          v208 = swift_allocObject();
          *(_QWORD *)(v208 + 16) = sub_2452643B4;
          *(_QWORD *)(v208 + 24) = v207;
          v209 = v208;
          v822 = (char *)v208;
          v210 = swift_allocObject();
          *(_BYTE *)(v210 + 16) = 34;
          v211 = v210;
          v824 = swift_allocObject();
          *(_BYTE *)(v824 + 16) = 8;
          v212 = swift_allocObject();
          *(_QWORD *)(v212 + 16) = sub_2452B9A0C;
          *(_QWORD *)(v212 + 24) = v200;
          v213 = swift_allocObject();
          *(_QWORD *)(v213 + 16) = sub_2452643B4;
          *(_QWORD *)(v213 + 24) = v212;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2574502A8);
          v214 = swift_allocObject();
          *(_OWORD *)(v214 + 16) = xmmword_24538A0B0;
          *(_QWORD *)(v214 + 32) = sub_2452BC9E4;
          *(_QWORD *)(v214 + 40) = v846;
          *(_QWORD *)(v214 + 48) = sub_2452BC9E4;
          *(_QWORD *)(v214 + 56) = v847;
          *(_QWORD *)(v214 + 64) = sub_2452BC9E0;
          v215 = v821;
          *(_QWORD *)(v214 + 72) = v821;
          *(_QWORD *)(v214 + 80) = sub_2452BC9E4;
          *(_QWORD *)(v214 + 88) = v850;
          *(_QWORD *)(v214 + 96) = sub_2452BC9E4;
          *(_QWORD *)(v214 + 104) = v823;
          *(_QWORD *)(v214 + 112) = sub_2452BC9E0;
          *(_QWORD *)(v214 + 120) = v206;
          *(_QWORD *)(v214 + 128) = sub_2452BC9E4;
          v216 = v814;
          *(_QWORD *)(v214 + 136) = v814;
          *(_QWORD *)(v214 + 144) = sub_2452BC9E4;
          *(_QWORD *)(v214 + 152) = v836;
          *(_QWORD *)(v214 + 160) = sub_2452BC9E0;
          *(_QWORD *)(v214 + 168) = v209;
          *(_QWORD *)(v214 + 176) = sub_2452BC9E4;
          *(_QWORD *)(v214 + 184) = v211;
          *(_QWORD *)(v214 + 192) = sub_2452BC9E4;
          *(_QWORD *)(v214 + 200) = v824;
          *(_QWORD *)(v214 + 208) = sub_2452BC9E0;
          *(_QWORD *)(v214 + 216) = v213;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          v217 = v836;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          v122 = v835;
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v122, (os_log_type_t)v834))
          {
            v812 = v213;
            v813 = v211;
            v218 = (uint8_t *)sub_2452E8A6C();
            v219 = swift_slowAlloc();
            v879[0] = 0;
            v810 = (char *)v219;
            v811 = v218;
            v878[0] = v219;
            *(_WORD *)v218 = 1026;
            v880[0] = (uint64_t)(v218 + 2);
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v846;
            v131 = (uint8_t *)v827;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            if (!v131)
            {
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E4;
              *((_QWORD *)&v858 + 1) = v847;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              v220 = v216;
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E0;
              *((_QWORD *)&v858 + 1) = v215;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              v221 = v850;
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E4;
              *((_QWORD *)&v858 + 1) = v221;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              v222 = v823;
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E4;
              *((_QWORD *)&v858 + 1) = v222;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              v223 = v812;
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E0;
              *((_QWORD *)&v858 + 1) = v841;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E4;
              *((_QWORD *)&v858 + 1) = v220;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E4;
              *((_QWORD *)&v858 + 1) = v217;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E0;
              *((_QWORD *)&v858 + 1) = v822;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E4;
              *((_QWORD *)&v858 + 1) = v813;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E4;
              *((_QWORD *)&v858 + 1) = v824;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E0;
              *((_QWORD *)&v858 + 1) = v223;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              swift_release();
              _os_log_impl(&dword_245256000, v835, (os_log_type_t)v834, "(%{public}s) Relationship %{public}s cannot switch from %{public}s to %{public}s", (uint8_t *)v811, 0x2Au);
              v224 = v810;
              swift_arrayDestroy();
              MEMORY[0x24953317C](v224, -1, -1);
              sub_2452E8AD8();
            }
            goto LABEL_153;
          }

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          (*(void (**)(char *, uint64_t))(v853 + 8))(v807, v852);
          v184 = (uint64_t)v848;
          v161 = v849;
          v142 = v831;
          v188 = v832;
          v187 = v830;
          v122 = v794;
          sub_2452BC89C((uint64_t)v855, (uint64_t)v794, (uint64_t *)&unk_25744FAD0);
          v701 = ((uint64_t (*)(os_log_t, uint64_t, int *))v161)(v122, 1, v856);
          v131 = v829;
          if (v701 == 1)
          {
            __break(1u);
LABEL_96:

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            (*(void (**)(char *, uint64_t))(v853 + 8))(v789, v852);
            v702 = v849;
            v188 = v832;
            v125 = v823;
            v703 = v784;
            sub_2452BC89C((uint64_t)v855, v784, (uint64_t *)&unk_25744FAD0);
            v704 = v702;
            if (((unsigned int (*)(uint64_t, uint64_t, int *))v702)(v703, 1, v856) == 1)
            {
LABEL_149:
              sub_24526B484(0, v125);
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              v775 = v823;
              goto LABEL_152;
            }
            v705 = (uint64_t)v834;
            (*(void (**)(char *, uint64_t, uint64_t))(v825 + 16))(v834, v703, v826);
            sub_2452B7B5C(v703, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
            v864 = v874;
            v865 = v875;
            v866 = v876;
            v867 = v877;
            v860 = v870;
            v861 = v871;
            v862 = v872;
            v863 = v873;
            v858 = v868;
            v859 = v869;
            sub_24526432C((uint64_t)&v868);
            v706 = (uint64_t)v840;
            sub_2453876C8();
            v707 = v835;
            sub_2453876C8();
            v880[0] = 0;
            v880[1] = v125;
            sub_24526B470(0, v125);
            v708 = (uint64_t)v836;
            sub_2453876C8();
            sub_245263F80(v809, (uint64_t *)&unk_25744FAD0);
            v122 = v785;
            PairingRelationship.init(id:remoteDevice:lastIncomingConnectionDate:lastOutgoingConnectionDate:state:initialPairingDate:)(v705, &v858, v706, (uint64_t)v707, v880, v708, (uint64_t)v785);
            ((void (*)(os_log_t, _QWORD, uint64_t, int *))v839)(v122, 0, 1, v856);
            v184 = (uint64_t)v848;
            sub_2452BBA60((uint64_t)v122, (uint64_t)v848, (uint64_t *)&unk_25744FAD0);
            v131 = v829;
            v187 = v830;
            v161 = v704;
            v66 = 0;
            v142 = v831;
            goto LABEL_110;
          }
          goto LABEL_109;
        }
        if (v122 == (os_log_t)1)
          goto LABEL_89;
        if (v122 == (os_log_t)2)
          goto LABEL_21;
LABEL_88:
        sub_24526B484((uint64_t)v187, (unint64_t)v122);
LABEL_89:
        v682 = sub_24533CD78();
        (*((void (**)(uint8_t *, uint64_t, uint64_t))v142 + 2))(v188, v682, v184);
        v683 = (_OWORD *)swift_allocObject();
        v684 = v875;
        v683[7] = v874;
        v683[8] = v684;
        v685 = v877;
        v683[9] = v876;
        v683[10] = v685;
        v686 = v871;
        v683[3] = v870;
        v683[4] = v686;
        v687 = v873;
        v683[5] = v872;
        v683[6] = v687;
        v688 = v869;
        v683[1] = v868;
        v683[2] = v688;
        v689 = v854;
        swift_retain();
        sub_24526432C((uint64_t)&v868);
        v850 = (os_log_t)sub_2453877F4();
        LODWORD(v847) = sub_245387D34();
        v690 = swift_allocObject();
        *(_BYTE *)(v690 + 16) = 34;
        v691 = swift_allocObject();
        *(_BYTE *)(v691 + 16) = 8;
        v692 = swift_allocObject();
        *(_QWORD *)(v692 + 16) = sub_2452BCDA4;
        *(_QWORD *)(v692 + 24) = v689;
        v693 = swift_allocObject();
        *(_QWORD *)(v693 + 16) = sub_2452643B4;
        *(_QWORD *)(v693 + 24) = v692;
        v694 = swift_allocObject();
        *(_BYTE *)(v694 + 16) = 34;
        v122 = (os_log_t)swift_allocObject();
        LOBYTE(v122[2].isa) = 8;
        v695 = swift_allocObject();
        *(_QWORD *)(v695 + 16) = sub_2452BCD1C;
        *(_QWORD *)(v695 + 24) = v683;
        v696 = swift_allocObject();
        *(_QWORD *)(v696 + 16) = sub_2452643B4;
        *(_QWORD *)(v696 + 24) = v695;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2574502A8);
        v697 = swift_allocObject();
        *(_OWORD *)(v697 + 16) = xmmword_24538A0A0;
        *(_QWORD *)(v697 + 32) = sub_2452BC9E4;
        *(_QWORD *)(v697 + 40) = v690;
        *(_QWORD *)(v697 + 48) = sub_2452BC9E4;
        *(_QWORD *)(v697 + 56) = v691;
        *(_QWORD *)(v697 + 64) = sub_2452BC9E0;
        *(_QWORD *)(v697 + 72) = v693;
        *(_QWORD *)(v697 + 80) = sub_2452BC9E4;
        *(_QWORD *)(v697 + 88) = v694;
        *(_QWORD *)(v697 + 96) = sub_2452BC9E4;
        *(_QWORD *)(v697 + 104) = v122;
        *(_QWORD *)(v697 + 112) = sub_2452BC9E0;
        *(_QWORD *)(v697 + 120) = v696;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v698 = v850;
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v698, (os_log_type_t)v847))
        {
          v699 = (uint8_t *)sub_2452E8A6C();
          v700 = swift_slowAlloc();
          v879[0] = 0;
          v878[0] = v700;
          v846 = v699;
          *(_WORD *)v699 = 514;
          v880[0] = (uint64_t)(v699 + 2);
          *(_QWORD *)&v858 = sub_2452BC9E4;
          *((_QWORD *)&v858 + 1) = v690;
          v131 = (uint8_t *)v827;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          if (!v131)
          {
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v691;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E0;
            *((_QWORD *)&v858 + 1) = v693;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v694;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v122;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E0;
            *((_QWORD *)&v858 + 1) = v696;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            _os_log_impl(&dword_245256000, v850, (os_log_type_t)v847, "(%{public}s) Relationship %{public}s switched from pairing to paired", v846, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x24953317C](v700, -1, -1);
            sub_2452E8AD8();
          }
          goto LABEL_153;
        }

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(NSObject *, uint64_t))(v853 + 8))(v812, v852);
LABEL_93:
        v66 = 0;
        v125 = 2;
LABEL_104:
        v184 = (uint64_t)v848;
        v161 = v849;
        v142 = v831;
        v188 = v832;
        v131 = v829;
        v187 = v830;
        goto LABEL_110;
      }
      v125 = (uint64_t)v855;
      v244 = v802;
      sub_2452BC89C((uint64_t)v855, v802, (uint64_t *)&unk_25744FAD0);
      if (((unsigned int (*)(uint64_t, uint64_t, int *))v161)(v244, 1, v856) == 1)
      {
LABEL_142:
        __break(1u);
        goto LABEL_143;
      }
      v245 = (os_log_t *)(v244 + v856[8]);
      v246 = v245[1];
      v850 = *v245;
      sub_24526B470((uint64_t)v850, (unint64_t)v246);
      sub_2452B7B5C(v244, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v248 = v810;
      v247 = v811;
      if (!v246)
      {
        v631 = sub_24533CD78();
        (*((void (**)(NSObject *, uint64_t, uint64_t))v142 + 2))(v247, v631, v141);
        v632 = (_OWORD *)swift_allocObject();
        v633 = v875;
        v632[7] = v874;
        v632[8] = v633;
        v634 = v877;
        v632[9] = v876;
        v632[10] = v634;
        v635 = v871;
        v632[3] = v870;
        v632[4] = v635;
        v636 = v873;
        v632[5] = v872;
        v632[6] = v636;
        v637 = v869;
        v632[1] = v868;
        v632[2] = v637;
        v638 = v854;
        swift_retain();
        sub_24526432C((uint64_t)&v868);
        v850 = (os_log_t)sub_2453877F4();
        LODWORD(v847) = sub_245387D34();
        v639 = swift_allocObject();
        *(_BYTE *)(v639 + 16) = 34;
        v640 = swift_allocObject();
        *(_BYTE *)(v640 + 16) = 8;
        v641 = swift_allocObject();
        *(_QWORD *)(v641 + 16) = sub_2452BCDA4;
        *(_QWORD *)(v641 + 24) = v638;
        v642 = swift_allocObject();
        *(_QWORD *)(v642 + 16) = sub_2452643B4;
        *(_QWORD *)(v642 + 24) = v641;
        v643 = swift_allocObject();
        *(_BYTE *)(v643 + 16) = 34;
        v122 = (os_log_t)swift_allocObject();
        LOBYTE(v122[2].isa) = 8;
        v644 = swift_allocObject();
        *(_QWORD *)(v644 + 16) = sub_2452BCD1C;
        *(_QWORD *)(v644 + 24) = v632;
        v645 = swift_allocObject();
        *(_QWORD *)(v645 + 16) = sub_2452643B4;
        *(_QWORD *)(v645 + 24) = v644;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2574502A8);
        v646 = swift_allocObject();
        *(_OWORD *)(v646 + 16) = xmmword_24538A0A0;
        *(_QWORD *)(v646 + 32) = sub_2452BC9E4;
        *(_QWORD *)(v646 + 40) = v639;
        *(_QWORD *)(v646 + 48) = sub_2452BC9E4;
        *(_QWORD *)(v646 + 56) = v640;
        *(_QWORD *)(v646 + 64) = sub_2452BC9E0;
        *(_QWORD *)(v646 + 72) = v642;
        *(_QWORD *)(v646 + 80) = sub_2452BC9E4;
        *(_QWORD *)(v646 + 88) = v643;
        *(_QWORD *)(v646 + 96) = sub_2452BC9E4;
        *(_QWORD *)(v646 + 104) = v122;
        *(_QWORD *)(v646 + 112) = sub_2452BC9E0;
        *(_QWORD *)(v646 + 120) = v645;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v187 = v850;
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v187, (os_log_type_t)v847))
        {
          v647 = (uint8_t *)sub_2452E8A6C();
          v648 = swift_slowAlloc();
          v879[0] = 0;
          v878[0] = v648;
          v846 = v647;
          *(_WORD *)v647 = 514;
          v880[0] = (uint64_t)(v647 + 2);
          *(_QWORD *)&v858 = sub_2452BC9E4;
          *((_QWORD *)&v858 + 1) = v639;
          v131 = (uint8_t *)v827;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          if (!v131)
          {
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v640;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E0;
            *((_QWORD *)&v858 + 1) = v642;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v643;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v122;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E0;
            *((_QWORD *)&v858 + 1) = v645;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            _os_log_impl(&dword_245256000, v850, (os_log_type_t)v847, "(%{public}s) Relationship %{public}s switched from introduced to pairing", v846, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x24953317C](v648, -1, -1);
            sub_2452E8AD8();
          }
          goto LABEL_153;
        }
        goto LABEL_101;
      }
      if (v246 == 1)
      {
        v594 = sub_24533CD78();
        v595 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v142 + 2);
        if (!(_DWORD)v833)
        {
          v595(v248, v594, v141);
          v723 = (_OWORD *)swift_allocObject();
          v724 = v875;
          v723[7] = v874;
          v723[8] = v724;
          v725 = v877;
          v723[9] = v876;
          v723[10] = v725;
          v726 = v871;
          v723[3] = v870;
          v723[4] = v726;
          v727 = v873;
          v723[5] = v872;
          v723[6] = v727;
          v728 = v869;
          v723[1] = v868;
          v723[2] = v728;
          v729 = v854;
          swift_retain();
          sub_24526432C((uint64_t)&v868);
          v850 = (os_log_t)sub_2453877F4();
          LODWORD(v847) = sub_245387D34();
          v730 = swift_allocObject();
          *(_BYTE *)(v730 + 16) = 34;
          v731 = swift_allocObject();
          *(_BYTE *)(v731 + 16) = 8;
          v732 = swift_allocObject();
          *(_QWORD *)(v732 + 16) = sub_2452BCDA4;
          *(_QWORD *)(v732 + 24) = v729;
          v733 = swift_allocObject();
          *(_QWORD *)(v733 + 16) = sub_2452643B4;
          *(_QWORD *)(v733 + 24) = v732;
          v734 = swift_allocObject();
          *(_BYTE *)(v734 + 16) = 34;
          v122 = (os_log_t)swift_allocObject();
          LOBYTE(v122[2].isa) = 8;
          v735 = swift_allocObject();
          *(_QWORD *)(v735 + 16) = sub_2452BCD1C;
          *(_QWORD *)(v735 + 24) = v723;
          v736 = swift_allocObject();
          *(_QWORD *)(v736 + 16) = sub_2452643B4;
          *(_QWORD *)(v736 + 24) = v735;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2574502A8);
          v737 = swift_allocObject();
          *(_OWORD *)(v737 + 16) = xmmword_24538A0A0;
          *(_QWORD *)(v737 + 32) = sub_2452BC9E4;
          *(_QWORD *)(v737 + 40) = v730;
          *(_QWORD *)(v737 + 48) = sub_2452BC9E4;
          *(_QWORD *)(v737 + 56) = v731;
          *(_QWORD *)(v737 + 64) = sub_2452BC9E0;
          *(_QWORD *)(v737 + 72) = v733;
          *(_QWORD *)(v737 + 80) = sub_2452BC9E4;
          *(_QWORD *)(v737 + 88) = v734;
          *(_QWORD *)(v737 + 96) = sub_2452BC9E4;
          *(_QWORD *)(v737 + 104) = v122;
          *(_QWORD *)(v737 + 112) = sub_2452BC9E0;
          *(_QWORD *)(v737 + 120) = v736;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          v738 = v850;
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v738, (os_log_type_t)v847))
          {
            v739 = (uint8_t *)sub_2452E8A6C();
            v740 = swift_slowAlloc();
            v879[0] = 0;
            v878[0] = v740;
            v846 = v739;
            *(_WORD *)v739 = 514;
            v880[0] = (uint64_t)(v739 + 2);
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v730;
            v131 = (uint8_t *)v827;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            if (!v131)
            {
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E4;
              *((_QWORD *)&v858 + 1) = v731;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E0;
              *((_QWORD *)&v858 + 1) = v733;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E4;
              *((_QWORD *)&v858 + 1) = v734;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E4;
              *((_QWORD *)&v858 + 1) = v122;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E0;
              *((_QWORD *)&v858 + 1) = v736;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              swift_release();
              _os_log_impl(&dword_245256000, v850, (os_log_type_t)v847, "(%{public}s) Relationship %{public}s switched from pairing to paired via pairing", v846, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x24953317C](v740, -1, -1);
              sub_2452E8AD8();
            }
            goto LABEL_153;
          }

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          (*(void (**)(char *, uint64_t))(v853 + 8))(v810, v852);
          goto LABEL_93;
        }
        v595(v786, v594, v141);
        v596 = (_OWORD *)swift_allocObject();
        v597 = v875;
        v596[7] = v874;
        v596[8] = v597;
        v598 = v877;
        v596[9] = v876;
        v596[10] = v598;
        v599 = v871;
        v596[3] = v870;
        v596[4] = v599;
        v600 = v873;
        v596[5] = v872;
        v596[6] = v600;
        v601 = v869;
        v596[1] = v868;
        v596[2] = v601;
        v602 = v125;
        v603 = v841;
        sub_2452BC89C(v602, v841, (uint64_t *)&unk_25744FAD0);
        v604 = (*(unsigned __int8 *)(v824 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v824 + 80);
        v605 = swift_allocObject();
        sub_2452BC850(v603, v605 + v604, (uint64_t *)&unk_25744FAD0);
        v606 = swift_allocObject();
        *(_QWORD *)(v606 + 16) = v846;
        *(_QWORD *)(v606 + 24) = 1;
        v607 = v854;
        swift_retain();
        sub_24526432C((uint64_t)&v868);
        v835 = (os_log_t)sub_2453877F4();
        LODWORD(v834) = sub_245387D34();
        v841 = swift_allocObject();
        *(_BYTE *)(v841 + 16) = 34;
        v846 = (uint8_t *)swift_allocObject();
        v846[16] = 8;
        v608 = swift_allocObject();
        *(_QWORD *)(v608 + 16) = sub_2452BCDA4;
        *(_QWORD *)(v608 + 24) = v607;
        v609 = swift_allocObject();
        v821 = (char *)v609;
        *(_QWORD *)(v609 + 16) = sub_2452643B4;
        *(_QWORD *)(v609 + 24) = v608;
        v847 = swift_allocObject();
        *(_BYTE *)(v847 + 16) = 34;
        v823 = swift_allocObject();
        *(_BYTE *)(v823 + 16) = 8;
        v610 = swift_allocObject();
        *(_QWORD *)(v610 + 16) = sub_2452BCD1C;
        *(_QWORD *)(v610 + 24) = v596;
        v611 = swift_allocObject();
        *(_QWORD *)(v611 + 16) = sub_2452643B4;
        *(_QWORD *)(v611 + 24) = v610;
        v612 = v611;
        v836 = (char *)v611;
        v814 = swift_allocObject();
        *(_BYTE *)(v814 + 16) = 34;
        v850 = (os_log_t)swift_allocObject();
        LOBYTE(v850[2].isa) = 8;
        v613 = swift_allocObject();
        *(_QWORD *)(v613 + 16) = sub_2452B9DF0;
        *(_QWORD *)(v613 + 24) = v605;
        v614 = swift_allocObject();
        *(_QWORD *)(v614 + 16) = sub_2452643B4;
        *(_QWORD *)(v614 + 24) = v613;
        v615 = v614;
        v822 = (char *)v614;
        v616 = swift_allocObject();
        *(_BYTE *)(v616 + 16) = 34;
        v617 = v616;
        v824 = swift_allocObject();
        *(_BYTE *)(v824 + 16) = 8;
        v618 = swift_allocObject();
        *(_QWORD *)(v618 + 16) = sub_2452B9A0C;
        *(_QWORD *)(v618 + 24) = v606;
        v619 = swift_allocObject();
        *(_QWORD *)(v619 + 16) = sub_2452643B4;
        *(_QWORD *)(v619 + 24) = v618;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2574502A8);
        v620 = swift_allocObject();
        *(_OWORD *)(v620 + 16) = xmmword_24538A0B0;
        *(_QWORD *)(v620 + 32) = sub_2452BC9E4;
        *(_QWORD *)(v620 + 40) = v841;
        *(_QWORD *)(v620 + 48) = sub_2452BC9E4;
        *(_QWORD *)(v620 + 56) = v846;
        *(_QWORD *)(v620 + 64) = sub_2452BC9E0;
        v621 = v821;
        *(_QWORD *)(v620 + 72) = v821;
        *(_QWORD *)(v620 + 80) = sub_2452BC9E4;
        *(_QWORD *)(v620 + 88) = v847;
        *(_QWORD *)(v620 + 96) = sub_2452BC9E4;
        *(_QWORD *)(v620 + 104) = v823;
        *(_QWORD *)(v620 + 112) = sub_2452BC9E0;
        *(_QWORD *)(v620 + 120) = v612;
        *(_QWORD *)(v620 + 128) = sub_2452BC9E4;
        v622 = v814;
        *(_QWORD *)(v620 + 136) = v814;
        *(_QWORD *)(v620 + 144) = sub_2452BC9E4;
        *(_QWORD *)(v620 + 152) = v850;
        *(_QWORD *)(v620 + 160) = sub_2452BC9E0;
        *(_QWORD *)(v620 + 168) = v615;
        *(_QWORD *)(v620 + 176) = sub_2452BC9E4;
        *(_QWORD *)(v620 + 184) = v617;
        *(_QWORD *)(v620 + 192) = sub_2452BC9E4;
        *(_QWORD *)(v620 + 200) = v824;
        *(_QWORD *)(v620 + 208) = sub_2452BC9E0;
        *(_QWORD *)(v620 + 216) = v619;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v623 = v850;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v122 = v835;
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v122, (os_log_type_t)v834))
        {
          v812 = v619;
          v813 = v617;
          v624 = (uint8_t *)sub_2452E8A6C();
          v625 = swift_slowAlloc();
          v879[0] = 0;
          v810 = (char *)v625;
          v811 = v624;
          v878[0] = v625;
          *(_WORD *)v624 = 1026;
          v880[0] = (uint64_t)(v624 + 2);
          *(_QWORD *)&v858 = sub_2452BC9E4;
          *((_QWORD *)&v858 + 1) = v841;
          v131 = (uint8_t *)v827;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          if (!v131)
          {
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v846;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            v626 = v622;
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E0;
            *((_QWORD *)&v858 + 1) = v621;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            v627 = v847;
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v627;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            v628 = v823;
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v628;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            v629 = v812;
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E0;
            *((_QWORD *)&v858 + 1) = v836;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v626;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v623;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E0;
            *((_QWORD *)&v858 + 1) = v822;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v813;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v824;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E0;
            *((_QWORD *)&v858 + 1) = v629;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            _os_log_impl(&dword_245256000, v835, (os_log_type_t)v834, "(%{public}s) Relationship %{public}s cannot switch from %{public}s to %{public}s", (uint8_t *)v811, 0x2Au);
            v630 = v810;
            swift_arrayDestroy();
            MEMORY[0x24953317C](v630, -1, -1);
            sub_2452E8AD8();
          }
          goto LABEL_153;
        }

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v853 + 8))(v786, v852);
        v184 = (uint64_t)v848;
        v161 = v849;
        v142 = v831;
        v188 = v832;
        v187 = v830;
        v122 = v780;
        sub_2452BC89C((uint64_t)v855, (uint64_t)v780, (uint64_t *)&unk_25744FAD0);
        v741 = ((uint64_t (*)(os_log_t, uint64_t, int *))v161)(v122, 1, v856);
        v131 = v829;
        if (v741 == 1)
          goto LABEL_150;
      }
      else
      {
        if (v246 != 2)
        {
          v835 = v246;
          v649 = sub_24533CD78();
          (*((void (**)(char *, uint64_t, uint64_t))v142 + 2))(v787, v649, v141);
          v650 = (_OWORD *)swift_allocObject();
          v651 = v875;
          v650[7] = v874;
          v650[8] = v651;
          v652 = v877;
          v650[9] = v876;
          v650[10] = v652;
          v653 = v871;
          v650[3] = v870;
          v650[4] = v653;
          v654 = v873;
          v650[5] = v872;
          v650[6] = v654;
          v655 = v869;
          v650[1] = v868;
          v650[2] = v655;
          v656 = v125;
          v657 = v841;
          sub_2452BC89C(v656, v841, (uint64_t *)&unk_25744FAD0);
          v658 = (*(unsigned __int8 *)(v824 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v824 + 80);
          v659 = swift_allocObject();
          v660 = v854;
          v834 = (char *)v659;
          sub_2452BC850(v657, v659 + v658, (uint64_t *)&unk_25744FAD0);
          swift_retain();
          sub_24526432C((uint64_t)&v868);
          v836 = (char *)sub_2453877F4();
          LODWORD(v846) = sub_245387D34();
          v847 = swift_allocObject();
          *(_BYTE *)(v847 + 16) = 34;
          v824 = swift_allocObject();
          *(_BYTE *)(v824 + 16) = 8;
          v661 = swift_allocObject();
          *(_QWORD *)(v661 + 16) = sub_2452BCDA4;
          *(_QWORD *)(v661 + 24) = v660;
          v662 = swift_allocObject();
          *(_QWORD *)(v662 + 16) = sub_2452643B4;
          *(_QWORD *)(v662 + 24) = v661;
          v823 = swift_allocObject();
          *(_BYTE *)(v823 + 16) = 34;
          v663 = swift_allocObject();
          *(_BYTE *)(v663 + 16) = 8;
          v664 = swift_allocObject();
          *(_QWORD *)(v664 + 16) = sub_2452BCD1C;
          *(_QWORD *)(v664 + 24) = v650;
          v665 = swift_allocObject();
          *(_QWORD *)(v665 + 16) = sub_2452643B4;
          *(_QWORD *)(v665 + 24) = v664;
          v666 = swift_allocObject();
          *(_BYTE *)(v666 + 16) = 34;
          v667 = swift_allocObject();
          *(_BYTE *)(v667 + 16) = 8;
          v668 = swift_allocObject();
          v669 = v834;
          *(_QWORD *)(v668 + 16) = sub_2452B9DF0;
          *(_QWORD *)(v668 + 24) = v669;
          v670 = swift_allocObject();
          *(_QWORD *)(v670 + 16) = sub_2452643B4;
          *(_QWORD *)(v670 + 24) = v668;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2574502A8);
          v671 = swift_allocObject();
          *(_OWORD *)(v671 + 16) = xmmword_24538A0C0;
          *(_QWORD *)(v671 + 32) = sub_2452BC9E4;
          *(_QWORD *)(v671 + 40) = v847;
          *(_QWORD *)(v671 + 48) = sub_2452BC9E4;
          v122 = (os_log_t)v823;
          v672 = v824;
          *(_QWORD *)(v671 + 56) = v824;
          *(_QWORD *)(v671 + 64) = sub_2452BC9E0;
          *(_QWORD *)(v671 + 72) = v662;
          *(_QWORD *)(v671 + 80) = sub_2452BC9E4;
          *(_QWORD *)(v671 + 88) = v122;
          *(_QWORD *)(v671 + 96) = sub_2452BC9E4;
          *(_QWORD *)(v671 + 104) = v663;
          *(_QWORD *)(v671 + 112) = sub_2452BC9E0;
          *(_QWORD *)(v671 + 120) = v665;
          *(_QWORD *)(v671 + 128) = sub_2452BC9E4;
          *(_QWORD *)(v671 + 136) = v666;
          *(_QWORD *)(v671 + 144) = sub_2452BC9E4;
          *(_QWORD *)(v671 + 152) = v667;
          *(_QWORD *)(v671 + 160) = sub_2452BC9E0;
          *(_QWORD *)(v671 + 168) = v670;
          swift_retain();
          swift_retain();
          v841 = v662;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          v673 = v836;
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v673, (os_log_type_t)v846))
          {
            v814 = v665;
            v821 = (char *)v670;
            v822 = (char *)v667;
            v834 = (char *)v666;
            v674 = (uint8_t *)sub_2452E8A6C();
            v675 = swift_slowAlloc();
            v879[0] = 0;
            v813 = v675;
            v878[0] = v675;
            *(_WORD *)v674 = 770;
            v880[0] = (uint64_t)(v674 + 2);
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v847;
            v131 = (uint8_t *)v827;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            if (!v131)
            {
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E4;
              *((_QWORD *)&v858 + 1) = v672;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              v676 = v841;
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E0;
              *((_QWORD *)&v858 + 1) = v676;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E4;
              *((_QWORD *)&v858 + 1) = v122;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E4;
              *((_QWORD *)&v858 + 1) = v663;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              v677 = v822;
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E0;
              *((_QWORD *)&v858 + 1) = v814;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E4;
              *((_QWORD *)&v858 + 1) = v834;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E4;
              *((_QWORD *)&v858 + 1) = v677;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              swift_release();
              *(_QWORD *)&v858 = sub_2452BC9E0;
              *((_QWORD *)&v858 + 1) = v821;
              sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
              swift_release();
              _os_log_impl(&dword_245256000, v673, (os_log_type_t)v846, "(%{public}s) Relationship %{public}s switched from %{public}s to pairing", v674, 0x20u);
              v678 = v813;
              swift_arrayDestroy();
              MEMORY[0x24953317C](v678, -1, -1);
              sub_2452E8AD8();
            }
            goto LABEL_153;
          }

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          sub_24526B484((uint64_t)v850, (unint64_t)v835);
          (*(void (**)(char *, uint64_t))(v853 + 8))(v787, v852);
          goto LABEL_103;
        }
        v249 = sub_24533CD78();
        (*((void (**)(char *, uint64_t, uint64_t))v142 + 2))(v788, v249, v141);
        v250 = (_OWORD *)swift_allocObject();
        v251 = v875;
        v250[7] = v874;
        v250[8] = v251;
        v252 = v877;
        v250[9] = v876;
        v250[10] = v252;
        v253 = v871;
        v250[3] = v870;
        v250[4] = v253;
        v254 = v873;
        v250[5] = v872;
        v250[6] = v254;
        v255 = v869;
        v250[1] = v868;
        v250[2] = v255;
        v256 = v125;
        v257 = v841;
        sub_2452BC89C(v256, v841, (uint64_t *)&unk_25744FAD0);
        v258 = (*(unsigned __int8 *)(v824 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v824 + 80);
        v259 = swift_allocObject();
        sub_2452BC850(v257, v259 + v258, (uint64_t *)&unk_25744FAD0);
        v260 = swift_allocObject();
        *(_QWORD *)(v260 + 16) = v846;
        *(_QWORD *)(v260 + 24) = 1;
        v261 = v854;
        swift_retain();
        sub_24526432C((uint64_t)&v868);
        v835 = (os_log_t)sub_2453877F4();
        LODWORD(v834) = sub_245387D34();
        v846 = (uint8_t *)swift_allocObject();
        v846[16] = 34;
        v847 = swift_allocObject();
        *(_BYTE *)(v847 + 16) = 8;
        v262 = swift_allocObject();
        *(_QWORD *)(v262 + 16) = sub_2452BCDA4;
        *(_QWORD *)(v262 + 24) = v261;
        v263 = swift_allocObject();
        v821 = (char *)v263;
        *(_QWORD *)(v263 + 16) = sub_2452643B4;
        *(_QWORD *)(v263 + 24) = v262;
        v850 = (os_log_t)swift_allocObject();
        LOBYTE(v850[2].isa) = 34;
        v823 = swift_allocObject();
        *(_BYTE *)(v823 + 16) = 8;
        v264 = swift_allocObject();
        *(_QWORD *)(v264 + 16) = sub_2452BCD1C;
        *(_QWORD *)(v264 + 24) = v250;
        v265 = swift_allocObject();
        *(_QWORD *)(v265 + 16) = sub_2452643B4;
        *(_QWORD *)(v265 + 24) = v264;
        v266 = v265;
        v841 = v265;
        v814 = swift_allocObject();
        *(_BYTE *)(v814 + 16) = 34;
        v836 = (char *)swift_allocObject();
        v836[16] = 8;
        v267 = swift_allocObject();
        *(_QWORD *)(v267 + 16) = sub_2452B9DF0;
        *(_QWORD *)(v267 + 24) = v259;
        v268 = swift_allocObject();
        *(_QWORD *)(v268 + 16) = sub_2452643B4;
        *(_QWORD *)(v268 + 24) = v267;
        v269 = v268;
        v822 = (char *)v268;
        v270 = swift_allocObject();
        *(_BYTE *)(v270 + 16) = 34;
        v271 = v270;
        v824 = swift_allocObject();
        *(_BYTE *)(v824 + 16) = 8;
        v272 = swift_allocObject();
        *(_QWORD *)(v272 + 16) = sub_2452B9A0C;
        *(_QWORD *)(v272 + 24) = v260;
        v273 = swift_allocObject();
        *(_QWORD *)(v273 + 16) = sub_2452643B4;
        *(_QWORD *)(v273 + 24) = v272;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2574502A8);
        v274 = swift_allocObject();
        *(_OWORD *)(v274 + 16) = xmmword_24538A0B0;
        *(_QWORD *)(v274 + 32) = sub_2452BC9E4;
        *(_QWORD *)(v274 + 40) = v846;
        *(_QWORD *)(v274 + 48) = sub_2452BC9E4;
        *(_QWORD *)(v274 + 56) = v847;
        *(_QWORD *)(v274 + 64) = sub_2452BC9E0;
        v275 = v821;
        *(_QWORD *)(v274 + 72) = v821;
        *(_QWORD *)(v274 + 80) = sub_2452BC9E4;
        *(_QWORD *)(v274 + 88) = v850;
        *(_QWORD *)(v274 + 96) = sub_2452BC9E4;
        *(_QWORD *)(v274 + 104) = v823;
        *(_QWORD *)(v274 + 112) = sub_2452BC9E0;
        *(_QWORD *)(v274 + 120) = v266;
        *(_QWORD *)(v274 + 128) = sub_2452BC9E4;
        v276 = v814;
        *(_QWORD *)(v274 + 136) = v814;
        *(_QWORD *)(v274 + 144) = sub_2452BC9E4;
        *(_QWORD *)(v274 + 152) = v836;
        *(_QWORD *)(v274 + 160) = sub_2452BC9E0;
        *(_QWORD *)(v274 + 168) = v269;
        *(_QWORD *)(v274 + 176) = sub_2452BC9E4;
        *(_QWORD *)(v274 + 184) = v271;
        *(_QWORD *)(v274 + 192) = sub_2452BC9E4;
        *(_QWORD *)(v274 + 200) = v824;
        *(_QWORD *)(v274 + 208) = sub_2452BC9E0;
        *(_QWORD *)(v274 + 216) = v273;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v277 = v836;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v122 = v835;
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v122, (os_log_type_t)v834))
        {
          v812 = v273;
          v813 = v271;
          v278 = (uint8_t *)sub_2452E8A6C();
          v279 = swift_slowAlloc();
          v879[0] = 0;
          v810 = (char *)v279;
          v811 = v278;
          v878[0] = v279;
          *(_WORD *)v278 = 1026;
          v880[0] = (uint64_t)(v278 + 2);
          *(_QWORD *)&v858 = sub_2452BC9E4;
          *((_QWORD *)&v858 + 1) = v846;
          v131 = (uint8_t *)v827;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          if (!v131)
          {
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v847;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            v280 = v276;
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E0;
            *((_QWORD *)&v858 + 1) = v275;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            v281 = v850;
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v281;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            v282 = v823;
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v282;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            v283 = v812;
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E0;
            *((_QWORD *)&v858 + 1) = v841;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v280;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v277;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E0;
            *((_QWORD *)&v858 + 1) = v822;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v813;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v824;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E0;
            *((_QWORD *)&v858 + 1) = v283;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            _os_log_impl(&dword_245256000, v835, (os_log_type_t)v834, "(%{public}s) Relationship %{public}s cannot switch from %{public}s to %{public}s", (uint8_t *)v811, 0x2Au);
            v284 = v810;
            swift_arrayDestroy();
            MEMORY[0x24953317C](v284, -1, -1);
            sub_2452E8AD8();
          }
          goto LABEL_153;
        }

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v853 + 8))(v788, v852);
        v184 = (uint64_t)v848;
        v161 = v849;
        v142 = v831;
        v188 = v832;
        v187 = v830;
        v122 = v783;
        sub_2452BC89C((uint64_t)v855, (uint64_t)v783, (uint64_t *)&unk_25744FAD0);
        v722 = ((uint64_t (*)(os_log_t, uint64_t, int *))v161)(v122, 1, v856);
        v131 = v829;
        if (v722 == 1)
        {
          __break(1u);
LABEL_101:

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          (*(void (**)(NSObject *, uint64_t))(v853 + 8))(v811, v852);
LABEL_103:
          v66 = 0;
          v125 = 1;
          goto LABEL_104;
        }
      }
    }
    else
    {
      v303 = v141;
      v125 = (uint64_t)v855;
      v304 = v799;
      sub_2452BC89C((uint64_t)v855, v799, (uint64_t *)&unk_25744FAD0);
      if (((unsigned int (*)(uint64_t, uint64_t, int *))v161)(v304, 1, v856) == 1)
      {
LABEL_143:
        __break(1u);
        goto LABEL_144;
      }
      v305 = (uint64_t *)(v304 + v856[8]);
      v306 = *v305;
      v307 = v305[1];
      sub_24526B470(*v305, v307);
      sub_2452B7B5C(v304, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      if (v307 - 1 <= 1)
      {
        v308 = sub_24533CD78();
        (*((void (**)(char *, uint64_t, uint64_t))v142 + 2))(v804, v308, v303);
        v309 = (_OWORD *)swift_allocObject();
        v310 = v875;
        v309[7] = v874;
        v309[8] = v310;
        v311 = v877;
        v309[9] = v876;
        v309[10] = v311;
        v312 = v871;
        v309[3] = v870;
        v309[4] = v312;
        v313 = v873;
        v309[5] = v872;
        v309[6] = v313;
        v314 = v869;
        v309[1] = v868;
        v309[2] = v314;
        v315 = v841;
        sub_2452BC89C(v125, v841, (uint64_t *)&unk_25744FAD0);
        v316 = (*(unsigned __int8 *)(v824 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v824 + 80);
        v317 = swift_allocObject();
        sub_2452BC850(v315, v317 + v316, (uint64_t *)&unk_25744FAD0);
        v318 = v854;
        swift_retain();
        sub_24526432C((uint64_t)&v868);
        v850 = (os_log_t)sub_2453877F4();
        LODWORD(v847) = sub_245387D34();
        v319 = swift_allocObject();
        *(_BYTE *)(v319 + 16) = 34;
        v846 = (uint8_t *)swift_allocObject();
        v846[16] = 8;
        v320 = swift_allocObject();
        v321 = v318;
        v322 = v320;
        *(_QWORD *)(v320 + 16) = sub_2452BCDA4;
        *(_QWORD *)(v320 + 24) = v321;
        v323 = swift_allocObject();
        *(_QWORD *)(v323 + 16) = sub_2452643B4;
        *(_QWORD *)(v323 + 24) = v322;
        v122 = (os_log_t)swift_allocObject();
        LOBYTE(v122[2].isa) = 34;
        v324 = swift_allocObject();
        *(_BYTE *)(v324 + 16) = 8;
        v325 = swift_allocObject();
        *(_QWORD *)(v325 + 16) = sub_2452BCD1C;
        *(_QWORD *)(v325 + 24) = v309;
        v326 = swift_allocObject();
        *(_QWORD *)(v326 + 16) = sub_2452643B4;
        *(_QWORD *)(v326 + 24) = v325;
        v327 = swift_allocObject();
        *(_BYTE *)(v327 + 16) = 34;
        v328 = swift_allocObject();
        *(_BYTE *)(v328 + 16) = 8;
        v329 = (char *)v328;
        v330 = swift_allocObject();
        *(_QWORD *)(v330 + 16) = sub_2452B9DF0;
        *(_QWORD *)(v330 + 24) = v317;
        v125 = swift_allocObject();
        *(_QWORD *)(v125 + 16) = sub_2452643B4;
        *(_QWORD *)(v125 + 24) = v330;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2574502A8);
        v331 = swift_allocObject();
        *(_OWORD *)(v331 + 16) = xmmword_24538A0C0;
        *(_QWORD *)(v331 + 32) = sub_2452BC9E4;
        *(_QWORD *)(v331 + 40) = v319;
        v332 = v846;
        *(_QWORD *)(v331 + 48) = sub_2452BC9E4;
        *(_QWORD *)(v331 + 56) = v332;
        *(_QWORD *)(v331 + 64) = sub_2452BC9E0;
        *(_QWORD *)(v331 + 72) = v323;
        *(_QWORD *)(v331 + 80) = sub_2452BC9E4;
        *(_QWORD *)(v331 + 88) = v122;
        *(_QWORD *)(v331 + 96) = sub_2452BC9E4;
        *(_QWORD *)(v331 + 104) = v324;
        *(_QWORD *)(v331 + 112) = sub_2452BC9E0;
        *(_QWORD *)(v331 + 120) = v326;
        *(_QWORD *)(v331 + 128) = sub_2452BC9E4;
        *(_QWORD *)(v331 + 136) = v327;
        *(_QWORD *)(v331 + 144) = sub_2452BC9E4;
        *(_QWORD *)(v331 + 152) = v329;
        *(_QWORD *)(v331 + 160) = sub_2452BC9E0;
        *(_QWORD *)(v331 + 168) = v125;
        v841 = v319;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v333 = v850;
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v333, (os_log_type_t)v847))
        {
          v834 = (char *)v122;
          v835 = (os_log_t)v324;
          v836 = v329;
          v122 = (os_log_t)sub_2452E8A6C();
          v334 = swift_slowAlloc();
          v879[0] = 0;
          v824 = v334;
          v878[0] = v334;
          LOWORD(v122->isa) = 770;
          v880[0] = (uint64_t)&v122->isa + 2;
          *(_QWORD *)&v858 = sub_2452BC9E4;
          *((_QWORD *)&v858 + 1) = v841;
          v131 = (uint8_t *)v827;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          if (!v131)
          {
            v827 = v122;
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v846;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E0;
            *((_QWORD *)&v858 + 1) = v323;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v834;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            v335 = v835;
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v335;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E0;
            *((_QWORD *)&v858 + 1) = v326;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v327;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E4;
            *((_QWORD *)&v858 + 1) = v836;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            *(_QWORD *)&v858 = sub_2452BC9E0;
            *((_QWORD *)&v858 + 1) = v125;
            sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
            swift_release();
            _os_log_impl(&dword_245256000, v850, (os_log_type_t)v847, "(%{public}s) Relationship %{public}s switched from %{public}s to introduced", (uint8_t *)v827, 0x20u);
            v336 = v824;
            swift_arrayDestroy();
            MEMORY[0x24953317C](v336, -1, -1);
            sub_2452E8AD8();
          }
          goto LABEL_153;
        }

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v853 + 8))(v804, v852);
        v184 = (uint64_t)v848;
        v161 = v849;
        v142 = v831;
        v188 = v832;
        v679 = v792;
        sub_2452BC89C((uint64_t)v855, v792, (uint64_t *)&unk_25744FAD0);
        v680 = ((uint64_t (*)(uint64_t, uint64_t, int *))v161)(v679, 1, v856);
        v131 = v829;
        if (v680 == 1)
          goto LABEL_148;
        sub_245277D6C(v679);
        sub_2452B7B5C(v679, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        v66 = 0;
        v125 = 0;
        v187 = v830;
        goto LABEL_110;
      }
      sub_24526B484(v306, v307);
      v481 = sub_24533CD78();
      (*((void (**)(char *, uint64_t, uint64_t))v142 + 2))(v806, v481, v303);
      v482 = (_OWORD *)swift_allocObject();
      v483 = v875;
      v482[7] = v874;
      v482[8] = v483;
      v484 = v877;
      v482[9] = v876;
      v482[10] = v484;
      v485 = v871;
      v482[3] = v870;
      v482[4] = v485;
      v486 = v873;
      v482[5] = v872;
      v482[6] = v486;
      v487 = v869;
      v482[1] = v868;
      v482[2] = v487;
      v488 = v125;
      v489 = v841;
      sub_2452BC89C(v488, v841, (uint64_t *)&unk_25744FAD0);
      v490 = (*(unsigned __int8 *)(v824 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v824 + 80);
      v491 = swift_allocObject();
      sub_2452BC850(v489, v491 + v490, (uint64_t *)&unk_25744FAD0);
      v492 = swift_allocObject();
      *(_QWORD *)(v492 + 16) = v846;
      *(_QWORD *)(v492 + 24) = 0;
      v493 = v854;
      swift_retain();
      sub_24526432C((uint64_t)&v868);
      v835 = (os_log_t)sub_2453877F4();
      LODWORD(v834) = sub_245387D34();
      v846 = (uint8_t *)swift_allocObject();
      v846[16] = 34;
      v847 = swift_allocObject();
      *(_BYTE *)(v847 + 16) = 8;
      v494 = swift_allocObject();
      *(_QWORD *)(v494 + 16) = sub_2452BCDA4;
      *(_QWORD *)(v494 + 24) = v493;
      v495 = swift_allocObject();
      v821 = (char *)v495;
      *(_QWORD *)(v495 + 16) = sub_2452643B4;
      *(_QWORD *)(v495 + 24) = v494;
      v850 = (os_log_t)swift_allocObject();
      LOBYTE(v850[2].isa) = 34;
      v823 = swift_allocObject();
      *(_BYTE *)(v823 + 16) = 8;
      v496 = swift_allocObject();
      *(_QWORD *)(v496 + 16) = sub_2452BCD1C;
      *(_QWORD *)(v496 + 24) = v482;
      v497 = swift_allocObject();
      *(_QWORD *)(v497 + 16) = sub_2452643B4;
      *(_QWORD *)(v497 + 24) = v496;
      v498 = v497;
      v841 = v497;
      v814 = swift_allocObject();
      *(_BYTE *)(v814 + 16) = 34;
      v836 = (char *)swift_allocObject();
      v836[16] = 8;
      v499 = swift_allocObject();
      *(_QWORD *)(v499 + 16) = sub_2452B9DF0;
      *(_QWORD *)(v499 + 24) = v491;
      v500 = swift_allocObject();
      *(_QWORD *)(v500 + 16) = sub_2452643B4;
      *(_QWORD *)(v500 + 24) = v499;
      v501 = v500;
      v822 = (char *)v500;
      v502 = swift_allocObject();
      *(_BYTE *)(v502 + 16) = 34;
      v503 = v502;
      v824 = swift_allocObject();
      *(_BYTE *)(v824 + 16) = 8;
      v504 = swift_allocObject();
      *(_QWORD *)(v504 + 16) = sub_2452B9A0C;
      *(_QWORD *)(v504 + 24) = v492;
      v505 = swift_allocObject();
      *(_QWORD *)(v505 + 16) = sub_2452643B4;
      *(_QWORD *)(v505 + 24) = v504;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2574502A8);
      v506 = swift_allocObject();
      *(_OWORD *)(v506 + 16) = xmmword_24538A0B0;
      *(_QWORD *)(v506 + 32) = sub_2452BC9E4;
      *(_QWORD *)(v506 + 40) = v846;
      *(_QWORD *)(v506 + 48) = sub_2452BC9E4;
      *(_QWORD *)(v506 + 56) = v847;
      *(_QWORD *)(v506 + 64) = sub_2452BC9E0;
      v507 = v821;
      *(_QWORD *)(v506 + 72) = v821;
      *(_QWORD *)(v506 + 80) = sub_2452BC9E4;
      *(_QWORD *)(v506 + 88) = v850;
      *(_QWORD *)(v506 + 96) = sub_2452BC9E4;
      *(_QWORD *)(v506 + 104) = v823;
      *(_QWORD *)(v506 + 112) = sub_2452BC9E0;
      *(_QWORD *)(v506 + 120) = v498;
      *(_QWORD *)(v506 + 128) = sub_2452BC9E4;
      v508 = v814;
      *(_QWORD *)(v506 + 136) = v814;
      *(_QWORD *)(v506 + 144) = sub_2452BC9E4;
      *(_QWORD *)(v506 + 152) = v836;
      *(_QWORD *)(v506 + 160) = sub_2452BC9E0;
      *(_QWORD *)(v506 + 168) = v501;
      *(_QWORD *)(v506 + 176) = sub_2452BC9E4;
      *(_QWORD *)(v506 + 184) = v503;
      *(_QWORD *)(v506 + 192) = sub_2452BC9E4;
      *(_QWORD *)(v506 + 200) = v824;
      *(_QWORD *)(v506 + 208) = sub_2452BC9E0;
      *(_QWORD *)(v506 + 216) = v505;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v509 = v836;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v122 = v835;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v122, (os_log_type_t)v834))
      {
        v812 = v505;
        v813 = v503;
        v510 = (uint8_t *)sub_2452E8A6C();
        v511 = swift_slowAlloc();
        v879[0] = 0;
        v810 = (char *)v511;
        v811 = v510;
        v878[0] = v511;
        *(_WORD *)v510 = 1026;
        v880[0] = (uint64_t)(v510 + 2);
        *(_QWORD *)&v858 = sub_2452BC9E4;
        *((_QWORD *)&v858 + 1) = v846;
        v131 = (uint8_t *)v827;
        sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
        if (!v131)
        {
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E4;
          *((_QWORD *)&v858 + 1) = v847;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          v512 = v508;
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E0;
          *((_QWORD *)&v858 + 1) = v507;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          v513 = v850;
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E4;
          *((_QWORD *)&v858 + 1) = v513;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          v514 = v823;
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E4;
          *((_QWORD *)&v858 + 1) = v514;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          v515 = v812;
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E0;
          *((_QWORD *)&v858 + 1) = v841;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E4;
          *((_QWORD *)&v858 + 1) = v512;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E4;
          *((_QWORD *)&v858 + 1) = v509;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E0;
          *((_QWORD *)&v858 + 1) = v822;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E4;
          *((_QWORD *)&v858 + 1) = v813;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E4;
          *((_QWORD *)&v858 + 1) = v824;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E0;
          *((_QWORD *)&v858 + 1) = v515;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          _os_log_impl(&dword_245256000, v835, (os_log_type_t)v834, "(%{public}s) Relationship %{public}s cannot switch from %{public}s to %{public}s", (uint8_t *)v811, 0x2Au);
          v516 = v810;
          swift_arrayDestroy();
          MEMORY[0x24953317C](v516, -1, -1);
          sub_2452E8AD8();
        }
        goto LABEL_153;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v853 + 8))(v806, v852);
      v184 = (uint64_t)v848;
      v161 = v849;
      v142 = v831;
      v188 = v832;
      v187 = v830;
      v122 = v793;
      sub_2452BC89C((uint64_t)v855, (uint64_t)v793, (uint64_t *)&unk_25744FAD0);
      v681 = ((uint64_t (*)(os_log_t, uint64_t, int *))v161)(v122, 1, v856);
      v131 = v829;
      if (v681 == 1)
      {
        __break(1u);
        goto LABEL_88;
      }
    }
LABEL_109:
    v742 = (uint64_t *)((char *)v122 + v856[8]);
    v66 = (uint8_t *)*v742;
    v125 = v742[1];
    sub_24526B470(*v742, v125);
    sub_2452B7B5C((uint64_t)v122, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    goto LABEL_110;
  }
  switch(v847)
  {
    case 0:
      v285 = sub_24533CD78();
      (*((void (**)(uint64_t, uint64_t, uint64_t))v142 + 2))(v823, v285, v141);
      v286 = (_OWORD *)swift_allocObject();
      v287 = v875;
      v286[7] = v874;
      v286[8] = v287;
      v288 = v877;
      v286[9] = v876;
      v286[10] = v288;
      v289 = v871;
      v286[3] = v870;
      v286[4] = v289;
      v290 = v873;
      v286[5] = v872;
      v286[6] = v290;
      v291 = v869;
      v286[1] = v868;
      v286[2] = v291;
      v292 = v854;
      swift_retain();
      sub_24526432C((uint64_t)&v868);
      v850 = (os_log_t)sub_2453877F4();
      LODWORD(v847) = sub_245387D34();
      v293 = swift_allocObject();
      *(_BYTE *)(v293 + 16) = 34;
      v294 = swift_allocObject();
      *(_BYTE *)(v294 + 16) = 8;
      v295 = swift_allocObject();
      *(_QWORD *)(v295 + 16) = sub_2452BCDA4;
      *(_QWORD *)(v295 + 24) = v292;
      v296 = swift_allocObject();
      *(_QWORD *)(v296 + 16) = sub_2452643B4;
      *(_QWORD *)(v296 + 24) = v295;
      v297 = swift_allocObject();
      *(_BYTE *)(v297 + 16) = 34;
      v122 = (os_log_t)swift_allocObject();
      LOBYTE(v122[2].isa) = 8;
      v298 = swift_allocObject();
      *(_QWORD *)(v298 + 16) = sub_2452BCD1C;
      *(_QWORD *)(v298 + 24) = v286;
      v299 = swift_allocObject();
      *(_QWORD *)(v299 + 16) = sub_2452643B4;
      *(_QWORD *)(v299 + 24) = v298;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2574502A8);
      v300 = swift_allocObject();
      *(_OWORD *)(v300 + 16) = xmmword_24538A0A0;
      *(_QWORD *)(v300 + 32) = sub_2452BC9E4;
      *(_QWORD *)(v300 + 40) = v293;
      *(_QWORD *)(v300 + 48) = sub_2452BC9E4;
      *(_QWORD *)(v300 + 56) = v294;
      *(_QWORD *)(v300 + 64) = sub_2452BC9E0;
      *(_QWORD *)(v300 + 72) = v296;
      *(_QWORD *)(v300 + 80) = sub_2452BC9E4;
      *(_QWORD *)(v300 + 88) = v297;
      *(_QWORD *)(v300 + 96) = sub_2452BC9E4;
      *(_QWORD *)(v300 + 104) = v122;
      *(_QWORD *)(v300 + 112) = sub_2452BC9E0;
      *(_QWORD *)(v300 + 120) = v299;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v301 = v850;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v301, (os_log_type_t)v847))
      {
        v302 = (uint8_t *)sub_2452E8A6C();
        v181 = swift_slowAlloc();
        v879[0] = 0;
        v878[0] = v181;
        v846 = v302;
        *(_WORD *)v302 = 514;
        v880[0] = (uint64_t)(v302 + 2);
        *(_QWORD *)&v858 = sub_2452BC9E4;
        *((_QWORD *)&v858 + 1) = v293;
        v131 = (uint8_t *)v827;
        sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
        if (!v131)
        {
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E4;
          *((_QWORD *)&v858 + 1) = v294;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E0;
          *((_QWORD *)&v858 + 1) = v296;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E4;
          *((_QWORD *)&v858 + 1) = v297;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E4;
          *((_QWORD *)&v858 + 1) = v122;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E0;
          *((_QWORD *)&v858 + 1) = v299;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          v182 = v847;
          v183 = "(%{public}s) Remote device %{public}s is being introduced";
LABEL_37:
          _os_log_impl(&dword_245256000, v850, v182, v183, v846, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24953317C](v181, -1, -1);
          sub_2452E8AD8();
        }
        while (1)
        {
LABEL_153:

          __break(1u);
          v775 = (unint64_t)v122;
LABEL_152:
          sub_24526B484(0, v775);
        }
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v853 + 8))(v823, v852);
      goto LABEL_52;
    case 1:
      v225 = sub_24533CD78();
      (*((void (**)(char *, uint64_t, uint64_t))v142 + 2))(v822, v225, v141);
      v226 = (_OWORD *)swift_allocObject();
      v227 = v875;
      v226[7] = v874;
      v226[8] = v227;
      v228 = v877;
      v226[9] = v876;
      v226[10] = v228;
      v229 = v871;
      v226[3] = v870;
      v226[4] = v229;
      v230 = v873;
      v226[5] = v872;
      v226[6] = v230;
      v231 = v869;
      v226[1] = v868;
      v226[2] = v231;
      v232 = v854;
      swift_retain();
      sub_24526432C((uint64_t)&v868);
      v850 = (os_log_t)sub_2453877F4();
      LODWORD(v847) = sub_245387D34();
      v233 = swift_allocObject();
      *(_BYTE *)(v233 + 16) = 34;
      v234 = swift_allocObject();
      *(_BYTE *)(v234 + 16) = 8;
      v235 = swift_allocObject();
      *(_QWORD *)(v235 + 16) = sub_2452BCDA4;
      *(_QWORD *)(v235 + 24) = v232;
      v236 = swift_allocObject();
      *(_QWORD *)(v236 + 16) = sub_2452643B4;
      *(_QWORD *)(v236 + 24) = v235;
      v237 = swift_allocObject();
      *(_BYTE *)(v237 + 16) = 34;
      v122 = (os_log_t)swift_allocObject();
      LOBYTE(v122[2].isa) = 8;
      v238 = swift_allocObject();
      *(_QWORD *)(v238 + 16) = sub_2452BCD1C;
      *(_QWORD *)(v238 + 24) = v226;
      v239 = swift_allocObject();
      *(_QWORD *)(v239 + 16) = sub_2452643B4;
      *(_QWORD *)(v239 + 24) = v238;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2574502A8);
      v240 = swift_allocObject();
      *(_OWORD *)(v240 + 16) = xmmword_24538A0A0;
      *(_QWORD *)(v240 + 32) = sub_2452BC9E4;
      *(_QWORD *)(v240 + 40) = v233;
      *(_QWORD *)(v240 + 48) = sub_2452BC9E4;
      *(_QWORD *)(v240 + 56) = v234;
      *(_QWORD *)(v240 + 64) = sub_2452BC9E0;
      *(_QWORD *)(v240 + 72) = v236;
      *(_QWORD *)(v240 + 80) = sub_2452BC9E4;
      *(_QWORD *)(v240 + 88) = v237;
      *(_QWORD *)(v240 + 96) = sub_2452BC9E4;
      *(_QWORD *)(v240 + 104) = v122;
      *(_QWORD *)(v240 + 112) = sub_2452BC9E0;
      *(_QWORD *)(v240 + 120) = v239;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v241 = v850;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v241, (os_log_type_t)v847))
      {
        v242 = (uint8_t *)sub_2452E8A6C();
        v243 = swift_slowAlloc();
        v879[0] = 0;
        v878[0] = v243;
        v846 = v242;
        *(_WORD *)v242 = 514;
        v880[0] = (uint64_t)(v242 + 2);
        *(_QWORD *)&v858 = sub_2452BC9E4;
        *((_QWORD *)&v858 + 1) = v233;
        v131 = (uint8_t *)v827;
        sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
        if (!v131)
        {
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E4;
          *((_QWORD *)&v858 + 1) = v234;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E0;
          *((_QWORD *)&v858 + 1) = v236;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E4;
          *((_QWORD *)&v858 + 1) = v237;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E4;
          *((_QWORD *)&v858 + 1) = v122;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E0;
          *((_QWORD *)&v858 + 1) = v239;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          _os_log_impl(&dword_245256000, v850, (os_log_type_t)v847, "(%{public}s) Remote device %{public}s is pairing", v846, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24953317C](v243, -1, -1);
          sub_2452E8AD8();
        }
        goto LABEL_153;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v853 + 8))(v822, v852);
      v375 = (_QWORD *)v854;
      v184 = (uint64_t)v848;
      v161 = v849;
      v376 = (uint64_t)v834;
      sub_245387734();
      v864 = v874;
      v865 = v875;
      v866 = v876;
      v867 = v877;
      v860 = v870;
      v861 = v871;
      v862 = v872;
      v863 = v873;
      v858 = v868;
      v859 = v869;
      sub_24526432C((uint64_t)&v868);
      v377 = (uint64_t)v840;
      sub_2453876C8();
      v378 = v835;
      sub_2453876C8();
      *(_OWORD *)v880 = xmmword_24538A0F0;
      goto LABEL_53;
    case 2:
      v163 = sub_24533CD78();
      (*((void (**)(char *, uint64_t, uint64_t))v142 + 2))(v821, v163, v141);
      v164 = (_OWORD *)swift_allocObject();
      v165 = v875;
      v164[7] = v874;
      v164[8] = v165;
      v166 = v877;
      v164[9] = v876;
      v164[10] = v166;
      v167 = v871;
      v164[3] = v870;
      v164[4] = v167;
      v168 = v873;
      v164[5] = v872;
      v164[6] = v168;
      v169 = v869;
      v164[1] = v868;
      v164[2] = v169;
      v170 = v854;
      swift_retain();
      sub_24526432C((uint64_t)&v868);
      v850 = (os_log_t)sub_2453877F4();
      LODWORD(v847) = sub_245387D34();
      v171 = swift_allocObject();
      *(_BYTE *)(v171 + 16) = 34;
      v172 = swift_allocObject();
      *(_BYTE *)(v172 + 16) = 8;
      v173 = swift_allocObject();
      *(_QWORD *)(v173 + 16) = sub_2452BCDA4;
      *(_QWORD *)(v173 + 24) = v170;
      v174 = swift_allocObject();
      *(_QWORD *)(v174 + 16) = sub_2452643B4;
      *(_QWORD *)(v174 + 24) = v173;
      v175 = swift_allocObject();
      *(_BYTE *)(v175 + 16) = 34;
      v122 = (os_log_t)swift_allocObject();
      LOBYTE(v122[2].isa) = 8;
      v176 = swift_allocObject();
      *(_QWORD *)(v176 + 16) = sub_2452B9910;
      *(_QWORD *)(v176 + 24) = v164;
      v177 = swift_allocObject();
      *(_QWORD *)(v177 + 16) = sub_2452643B4;
      *(_QWORD *)(v177 + 24) = v176;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2574502A8);
      v178 = swift_allocObject();
      *(_OWORD *)(v178 + 16) = xmmword_24538A0A0;
      *(_QWORD *)(v178 + 32) = sub_2452BC9E4;
      *(_QWORD *)(v178 + 40) = v171;
      *(_QWORD *)(v178 + 48) = sub_2452BC9E4;
      *(_QWORD *)(v178 + 56) = v172;
      *(_QWORD *)(v178 + 64) = sub_2452BC9E0;
      *(_QWORD *)(v178 + 72) = v174;
      *(_QWORD *)(v178 + 80) = sub_2452BC9E4;
      *(_QWORD *)(v178 + 88) = v175;
      *(_QWORD *)(v178 + 96) = sub_2452BC9E4;
      *(_QWORD *)(v178 + 104) = v122;
      *(_QWORD *)(v178 + 112) = sub_2452BC9E0;
      *(_QWORD *)(v178 + 120) = v177;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v179 = v850;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v179, (os_log_type_t)v847))
      {
        v180 = (uint8_t *)sub_2452E8A6C();
        v181 = swift_slowAlloc();
        v879[0] = 0;
        v878[0] = v181;
        v846 = v180;
        *(_WORD *)v180 = 514;
        v880[0] = (uint64_t)(v180 + 2);
        *(_QWORD *)&v858 = sub_2452BC9E4;
        *((_QWORD *)&v858 + 1) = v171;
        v131 = (uint8_t *)v827;
        sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
        if (!v131)
        {
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E4;
          *((_QWORD *)&v858 + 1) = v172;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E0;
          *((_QWORD *)&v858 + 1) = v174;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E4;
          *((_QWORD *)&v858 + 1) = v175;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E4;
          *((_QWORD *)&v858 + 1) = v122;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          *(_QWORD *)&v858 = sub_2452BC9E0;
          *((_QWORD *)&v858 + 1) = v177;
          sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
          swift_release();
          v182 = v847;
          v183 = "(%{public}s) Remote device %{public}s can't become paired without first pairing";
          goto LABEL_37;
        }
        goto LABEL_153;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v853 + 8))(v821, v852);
LABEL_52:
      v375 = (_QWORD *)v854;
      v184 = (uint64_t)v848;
      v161 = v849;
      v376 = (uint64_t)v834;
      sub_245387734();
      v864 = v874;
      v865 = v875;
      v866 = v876;
      v867 = v877;
      v860 = v870;
      v861 = v871;
      v862 = v872;
      v863 = v873;
      v858 = v868;
      v859 = v869;
      sub_24526432C((uint64_t)&v868);
      v377 = (uint64_t)v840;
      sub_2453876C8();
      v378 = v835;
      sub_2453876C8();
      *(_OWORD *)v880 = 0uLL;
LABEL_53:
      v379 = (uint64_t)v836;
      sub_2453876C8();
      v380 = v841;
      PairingRelationship.init(id:remoteDevice:lastIncomingConnectionDate:lastOutgoingConnectionDate:state:initialPairingDate:)(v376, &v858, v377, (uint64_t)v378, v880, v379, v841);
      ((void (*)(uint64_t, _QWORD, uint64_t, int *))v839)(v380, 0, 1, v856);
      sub_2452BBA60(v380, v184, (uint64_t *)&unk_25744FAD0);
      v125 = (uint64_t)v855;
      v122 = v845;
      goto LABEL_126;
  }
  v337 = v141;
  v338 = (uint64_t)v851;
  swift_beginAccess();
  sub_24525E4F0(v338, (uint64_t)&v858);
  v339 = *((_QWORD *)&v859 + 1);
  v340 = v860;
  __swift_project_boxed_opaque_existential_1(&v858, *((uint64_t *)&v859 + 1));
  v341 = *(_QWORD *)(v340 + 8);
  swift_bridgeObjectRetain();
  v342 = v846;
  MetadataStoring.pairingRelationship(remoteDeviceID:)((uint64_t)v846, v125, v339, v341, (uint64_t)v116);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v858);
  v814 = (uint64_t)v116;
  v343 = v800;
  sub_2452BC89C((uint64_t)v116, v800, (uint64_t *)&unk_25744FAD0);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v161)(v343, 1, v856) != 1)
  {
    sub_2452B7AB8(v343, v808, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v381 = v854;
    if (sub_2452A708C(v798, *((uint64_t *)&v798 + 1), (uint64_t)v342, v125))
      v382 = 2;
    else
      v382 = 0;
    v383 = sub_24533CD78();
    (*(void (**)(char *, uint64_t, uint64_t))(v853 + 16))(v805, v383, v337);
    v384 = (_OWORD *)swift_allocObject();
    v385 = v875;
    v384[7] = v874;
    v384[8] = v385;
    v386 = v877;
    v384[9] = v876;
    v384[10] = v386;
    v387 = v871;
    v384[3] = v870;
    v384[4] = v387;
    v388 = v873;
    v384[5] = v872;
    v384[6] = v388;
    v389 = v869;
    v384[1] = v868;
    v384[2] = v389;
    v390 = v125;
    v391 = v381;
    v392 = swift_allocObject();
    *(_QWORD *)(v392 + 16) = v342;
    *(_QWORD *)(v392 + 24) = v390;
    v393 = swift_allocObject();
    v822 = (char *)v393;
    *(_QWORD *)(v393 + 16) = 0;
    *(_QWORD *)(v393 + 24) = v382;
    swift_retain();
    sub_24526432C((uint64_t)&v868);
    sub_24526B470((uint64_t)v342, v390);
    v823 = v382;
    sub_24526B470(0, v382);
    v833 = (os_log_t)sub_2453877F4();
    LODWORD(v829) = sub_245387D34();
    v832 = (uint8_t *)swift_allocObject();
    v832[16] = 34;
    v831 = (uint8_t *)swift_allocObject();
    v831[16] = 8;
    v394 = swift_allocObject();
    *(_QWORD *)(v394 + 16) = sub_2452BCDA4;
    *(_QWORD *)(v394 + 24) = v391;
    v395 = swift_allocObject();
    *(_QWORD *)(v395 + 16) = sub_2452643B4;
    *(_QWORD *)(v395 + 24) = v394;
    v396 = (char *)v395;
    v824 = swift_allocObject();
    *(_BYTE *)(v824 + 16) = 34;
    v397 = swift_allocObject();
    *(_BYTE *)(v397 + 16) = 8;
    v398 = swift_allocObject();
    *(_QWORD *)(v398 + 16) = sub_2452BCD1C;
    *(_QWORD *)(v398 + 24) = v384;
    v399 = swift_allocObject();
    v850 = v399;
    v399[2].isa = (Class)sub_2452643B4;
    v399[3].isa = (Class)v398;
    v400 = swift_allocObject();
    *(_BYTE *)(v400 + 16) = 34;
    v828 = (uint8_t *)v400;
    v830 = swift_allocObject();
    LOBYTE(v830[2].isa) = 8;
    v401 = swift_allocObject();
    *(_QWORD *)(v401 + 16) = sub_2452BCD1C;
    *(_QWORD *)(v401 + 24) = v392;
    v402 = swift_allocObject();
    *(_QWORD *)(v402 + 16) = sub_2452643B4;
    *(_QWORD *)(v402 + 24) = v401;
    v403 = v402;
    v404 = swift_allocObject();
    *(_BYTE *)(v404 + 16) = 34;
    v405 = v404;
    v406 = swift_allocObject();
    *(_BYTE *)(v406 + 16) = 8;
    v407 = swift_allocObject();
    v408 = v822;
    *(_QWORD *)(v407 + 16) = sub_2452B9A0C;
    *(_QWORD *)(v407 + 24) = v408;
    v409 = swift_allocObject();
    *(_QWORD *)(v409 + 16) = sub_2452643B4;
    *(_QWORD *)(v409 + 24) = v407;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2574502A8);
    v410 = swift_allocObject();
    *(_OWORD *)(v410 + 16) = xmmword_24538A0B0;
    *(_QWORD *)(v410 + 32) = sub_2452BC9E4;
    v411 = v831;
    *(_QWORD *)(v410 + 40) = v832;
    *(_QWORD *)(v410 + 48) = sub_2452BC9E4;
    *(_QWORD *)(v410 + 56) = v411;
    *(_QWORD *)(v410 + 64) = sub_2452BC9E0;
    *(_QWORD *)(v410 + 72) = v396;
    *(_QWORD *)(v410 + 80) = sub_2452BC9E4;
    *(_QWORD *)(v410 + 88) = v824;
    *(_QWORD *)(v410 + 96) = sub_2452BC9E4;
    *(_QWORD *)(v410 + 104) = v397;
    *(_QWORD *)(v410 + 112) = sub_2452BC9E0;
    *(_QWORD *)(v410 + 120) = v850;
    *(_QWORD *)(v410 + 128) = sub_2452BC9E4;
    *(_QWORD *)(v410 + 136) = v400;
    *(_QWORD *)(v410 + 144) = sub_2452BC9E4;
    *(_QWORD *)(v410 + 152) = v830;
    *(_QWORD *)(v410 + 160) = sub_2452BC9E0;
    v412 = (uint8_t *)v403;
    *(_QWORD *)(v410 + 168) = v403;
    *(_QWORD *)(v410 + 176) = sub_2452BC9E4;
    v413 = (char *)v405;
    *(_QWORD *)(v410 + 184) = v405;
    *(_QWORD *)(v410 + 192) = sub_2452BC9E4;
    v414 = v406;
    *(_QWORD *)(v410 + 200) = v406;
    *(_QWORD *)(v410 + 208) = sub_2452BC9E0;
    *(_QWORD *)(v410 + 216) = v409;
    swift_retain();
    swift_retain();
    v822 = v396;
    swift_retain();
    swift_retain();
    v415 = v413;
    v821 = (char *)v397;
    swift_retain();
    v416 = v409;
    swift_retain();
    swift_retain();
    v417 = v830;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v833, (os_log_type_t)v829))
    {
      v818 = v412;
      v819 = v416;
      v418 = v821;
      v419 = v822;
      v420 = v831;
      v421 = v417;
      v820 = v415;
      v422 = v414;
      v423 = (uint8_t *)sub_2452E8A6C();
      v424 = swift_slowAlloc();
      v879[0] = 0;
      v817 = v424;
      v878[0] = v424;
      *(_WORD *)v423 = 1026;
      v880[0] = (uint64_t)(v423 + 2);
      *(_QWORD *)&v858 = sub_2452BC9E4;
      v122 = (os_log_t)v832;
      *((_QWORD *)&v858 + 1) = v832;
      v131 = (uint8_t *)v827;
      sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
      if (!v131)
      {
        swift_release();
        *(_QWORD *)&v858 = sub_2452BC9E4;
        *((_QWORD *)&v858 + 1) = v420;
        sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
        v425 = v418;
        swift_release();
        *(_QWORD *)&v858 = sub_2452BC9E0;
        *((_QWORD *)&v858 + 1) = v419;
        sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
        v426 = v850;
        swift_release();
        *(_QWORD *)&v858 = sub_2452BC9E4;
        *((_QWORD *)&v858 + 1) = v824;
        sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
        swift_release();
        *(_QWORD *)&v858 = sub_2452BC9E4;
        *((_QWORD *)&v858 + 1) = v425;
        sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
        swift_release();
        *(_QWORD *)&v858 = sub_2452BC9E0;
        *((_QWORD *)&v858 + 1) = v426;
        sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
        swift_release();
        *(_QWORD *)&v858 = sub_2452BC9E4;
        *((_QWORD *)&v858 + 1) = v828;
        sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
        swift_release();
        *(_QWORD *)&v858 = sub_2452BC9E4;
        *((_QWORD *)&v858 + 1) = v421;
        sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
        swift_release();
        *(_QWORD *)&v858 = sub_2452BC9E0;
        *((_QWORD *)&v858 + 1) = v818;
        sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
        swift_release();
        *(_QWORD *)&v858 = sub_2452BC9E4;
        *((_QWORD *)&v858 + 1) = v820;
        sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
        swift_release();
        *(_QWORD *)&v858 = sub_2452BC9E4;
        *((_QWORD *)&v858 + 1) = v422;
        sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
        swift_release();
        *(_QWORD *)&v858 = sub_2452BC9E0;
        *((_QWORD *)&v858 + 1) = v819;
        sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
        swift_release();
        _os_log_impl(&dword_245256000, v833, (os_log_type_t)v829, "(%{public}s) Remote device %{public}s is adopting relationship from device %{public}s; new state is %{public}s",
          v423,
          0x2Au);
        v427 = v817;
        swift_arrayDestroy();
        MEMORY[0x24953317C](v427, -1, -1);
        sub_2452E8AD8();
      }
      goto LABEL_151;
    }

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v853 + 8))(v805, v852);
    v523 = (uint64_t)v848;
    v524 = v847;
    v525 = v814;
    v526 = (uint64_t)v851;
    swift_beginAccess();
    sub_24525E4F0(v526, (uint64_t)&v858);
    v527 = *((_QWORD *)&v859 + 1);
    v528 = v860;
    __swift_project_boxed_opaque_existential_1(&v858, *((uint64_t *)&v859 + 1));
    v529 = *(void (**)(uint8_t *, unint64_t, uint64_t))(*(_QWORD *)(v528 + 16) + 96);
    v530 = v846;
    v529(v846, v524, v527);
    sub_24526B484((uint64_t)v530, v524);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v858);
    v531 = (uint64_t)v834;
    v532 = v808;
    (*(void (**)(char *, uint64_t, uint64_t))(v825 + 16))(v834, v808, v826);
    v864 = v874;
    v865 = v875;
    v866 = v876;
    v867 = v877;
    v860 = v870;
    v861 = v871;
    v862 = v872;
    v863 = v873;
    v858 = v868;
    v859 = v869;
    sub_24526432C((uint64_t)&v868);
    v533 = (uint64_t)v840;
    sub_2453876C8();
    v534 = v835;
    sub_2453876C8();
    sub_245263F80(v525, (uint64_t *)&unk_25744FAD0);
    v880[0] = 0;
    v880[1] = v823;
    v535 = v856;
    v536 = (uint64_t)v836;
    (*(void (**)(char *, uint64_t, uint8_t *))(v838 + 16))(v836, v532 + v856[9], v837);
    sub_2452B7B5C(v532, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v537 = v841;
    PairingRelationship.init(id:remoteDevice:lastIncomingConnectionDate:lastOutgoingConnectionDate:state:initialPairingDate:)(v531, &v858, v533, (uint64_t)v534, v880, v536, v841);
    ((void (*)(uint64_t, _QWORD, uint64_t, int *))v839)(v537, 0, 1, v535);
    sub_2452BBA60(v537, v523, (uint64_t *)&unk_25744FAD0);
    v122 = v845;
    v184 = v523;
    v375 = (_QWORD *)v854;
    v161 = v849;
LABEL_125:
    v125 = (uint64_t)v855;
    goto LABEL_126;
  }
  sub_245263F80(v343, (uint64_t *)&unk_25744FAD0);
  v344 = sub_24533CD78();
  (*(void (**)(char *, uint64_t, uint64_t))(v853 + 16))(v803, v344, v337);
  v345 = (_OWORD *)swift_allocObject();
  v346 = v875;
  v345[7] = v874;
  v345[8] = v346;
  v347 = v877;
  v345[9] = v876;
  v345[10] = v347;
  v348 = v871;
  v345[3] = v870;
  v345[4] = v348;
  v349 = v873;
  v345[5] = v872;
  v345[6] = v349;
  v350 = v869;
  v345[1] = v868;
  v345[2] = v350;
  v351 = swift_allocObject();
  v352 = v125;
  v353 = v351;
  *(_QWORD *)(v351 + 16) = v342;
  *(_QWORD *)(v351 + 24) = v352;
  v354 = v854;
  swift_retain();
  sub_24526432C((uint64_t)&v868);
  v850 = (os_log_t)sub_2453877F4();
  LODWORD(v847) = sub_245387D34();
  v355 = (uint8_t *)swift_allocObject();
  v355[16] = 34;
  v838 = swift_allocObject();
  *(_BYTE *)(v838 + 16) = 8;
  v356 = swift_allocObject();
  v357 = v354;
  v358 = v356;
  *(_QWORD *)(v356 + 16) = sub_2452BCDA4;
  *(_QWORD *)(v356 + 24) = v357;
  v359 = swift_allocObject();
  *(_QWORD *)(v359 + 16) = sub_2452643B4;
  *(_QWORD *)(v359 + 24) = v358;
  v360 = swift_allocObject();
  *(_BYTE *)(v360 + 16) = 34;
  v122 = (os_log_t)swift_allocObject();
  LOBYTE(v122[2].isa) = 8;
  v361 = swift_allocObject();
  *(_QWORD *)(v361 + 16) = sub_2452BCD1C;
  *(_QWORD *)(v361 + 24) = v345;
  v362 = swift_allocObject();
  *(_QWORD *)(v362 + 16) = sub_2452643B4;
  *(_QWORD *)(v362 + 24) = v361;
  v363 = swift_allocObject();
  *(_BYTE *)(v363 + 16) = 34;
  v364 = swift_allocObject();
  *(_BYTE *)(v364 + 16) = 8;
  v365 = swift_allocObject();
  *(_QWORD *)(v365 + 16) = sub_2452BCD1C;
  *(_QWORD *)(v365 + 24) = v353;
  v366 = swift_allocObject();
  *(_QWORD *)(v366 + 16) = sub_2452643B4;
  *(_QWORD *)(v366 + 24) = v365;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574502A8);
  v367 = swift_allocObject();
  *(_OWORD *)(v367 + 16) = xmmword_24538A0C0;
  *(_QWORD *)(v367 + 32) = sub_2452BC9E4;
  *(_QWORD *)(v367 + 40) = v355;
  v368 = v838;
  *(_QWORD *)(v367 + 48) = sub_2452BC9E4;
  *(_QWORD *)(v367 + 56) = v368;
  *(_QWORD *)(v367 + 64) = sub_2452BC9E0;
  *(_QWORD *)(v367 + 72) = v359;
  *(_QWORD *)(v367 + 80) = sub_2452BC9E4;
  *(_QWORD *)(v367 + 88) = v360;
  *(_QWORD *)(v367 + 96) = sub_2452BC9E4;
  *(_QWORD *)(v367 + 104) = v122;
  *(_QWORD *)(v367 + 112) = sub_2452BC9E0;
  *(_QWORD *)(v367 + 120) = v362;
  *(_QWORD *)(v367 + 128) = sub_2452BC9E4;
  *(_QWORD *)(v367 + 136) = v363;
  *(_QWORD *)(v367 + 144) = sub_2452BC9E4;
  *(_QWORD *)(v367 + 152) = v364;
  *(_QWORD *)(v367 + 160) = sub_2452BC9E0;
  *(_QWORD *)(v367 + 168) = v366;
  v846 = v355;
  v369 = v368;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v370 = v850;
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v370, (os_log_type_t)v847))
  {
    v833 = (os_log_t)v360;
    v830 = v363;
    v837 = (uint8_t *)v364;
    v371 = (uint8_t *)sub_2452E8A6C();
    v372 = swift_slowAlloc();
    v879[0] = 0;
    v831 = (uint8_t *)v372;
    v832 = v371;
    v878[0] = v372;
    *(_WORD *)v371 = 770;
    v880[0] = (uint64_t)(v371 + 2);
    *(_QWORD *)&v858 = sub_2452BC9E4;
    *((_QWORD *)&v858 + 1) = v846;
    v131 = (uint8_t *)v827;
    sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
    if (!v131)
    {
      swift_release();
      *(_QWORD *)&v858 = sub_2452BC9E4;
      *((_QWORD *)&v858 + 1) = v369;
      sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
      swift_release();
      *(_QWORD *)&v858 = sub_2452BC9E0;
      *((_QWORD *)&v858 + 1) = v359;
      sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
      swift_release();
      *(_QWORD *)&v858 = sub_2452BC9E4;
      *((_QWORD *)&v858 + 1) = v833;
      sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
      swift_release();
      *(_QWORD *)&v858 = sub_2452BC9E4;
      *((_QWORD *)&v858 + 1) = v122;
      sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
      swift_release();
      *(_QWORD *)&v858 = sub_2452BC9E0;
      *((_QWORD *)&v858 + 1) = v362;
      sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
      swift_release();
      *(_QWORD *)&v858 = sub_2452BC9E4;
      *((_QWORD *)&v858 + 1) = v830;
      sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
      swift_release();
      *(_QWORD *)&v858 = sub_2452BC9E4;
      *((_QWORD *)&v858 + 1) = v837;
      sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
      swift_release();
      *(_QWORD *)&v858 = sub_2452BC9E0;
      *((_QWORD *)&v858 + 1) = v366;
      sub_245381634((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v858, (uint64_t)v880, (uint64_t)v879, (uint64_t)v878);
      swift_release();
      _os_log_impl(&dword_245256000, v850, (os_log_type_t)v847, "(%{public}s) Remote device %{public}s can't adopt relationship from unknown device %{public}s; pairing instead",
        v832,
        0x20u);
      v373 = v831;
      swift_arrayDestroy();
      MEMORY[0x24953317C](v373, -1, -1);
      sub_2452E8AD8();
    }
    goto LABEL_153;
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v853 + 8))(v803, v852);
  v375 = (_QWORD *)v854;
  v184 = (uint64_t)v848;
  v517 = v814;
  v518 = (uint64_t)v834;
  sub_245387734();
  v864 = v874;
  v865 = v875;
  v866 = v876;
  v867 = v877;
  v860 = v870;
  v861 = v871;
  v862 = v872;
  v863 = v873;
  v858 = v868;
  v859 = v869;
  sub_24526432C((uint64_t)&v868);
  v519 = (uint64_t)v840;
  sub_2453876C8();
  v520 = v835;
  sub_2453876C8();
  *(_OWORD *)v880 = 0uLL;
  v521 = (uint64_t)v836;
  sub_2453876C8();
  sub_245263F80(v517, (uint64_t *)&unk_25744FAD0);
  v522 = v841;
  PairingRelationship.init(id:remoteDevice:lastIncomingConnectionDate:lastOutgoingConnectionDate:state:initialPairingDate:)(v518, &v858, v519, (uint64_t)v520, v880, v521, v841);
  ((void (*)(uint64_t, _QWORD, uint64_t, int *))v839)(v522, 0, 1, v856);
  sub_2452BBA60(v522, v184, (uint64_t *)&unk_25744FAD0);
  v125 = (uint64_t)v855;
  v161 = v849;
  v122 = v845;
LABEL_126:
  v763 = (uint64_t)v851;
  swift_beginAccess();
  sub_24525E4F0(v763, (uint64_t)&v858);
  v131 = (uint8_t *)*((_QWORD *)&v859 + 1);
  v66 = (uint8_t *)v860;
  __swift_project_boxed_opaque_existential_1(&v858, *((uint64_t *)&v859 + 1));
  sub_2452BC89C(v184, (uint64_t)v122, (uint64_t *)&unk_25744FAD0);
  if (((unsigned int (*)(os_log_t, uint64_t, int *))v161)(v122, 1, v856) == 1)
  {
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    sub_24526B484((uint64_t)v846, v823);
    __break(1u);
    goto LABEL_140;
  }
  (*(void (**)(os_log_t, uint8_t *))(*((_QWORD *)v66 + 2) + 88))(v122, v131);
  sub_2452B7B5C((uint64_t)v122, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v858);
  if ((v844 & 1) != 0)
    sub_2452A7688();
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v161)(v184, 1, v856) == 1)
    goto LABEL_137;
  v764 = v184 + v856[5];
  v765 = *(_QWORD *)(v764 + 120);
  if (v765 >> 60 != 15)
  {
    v766 = *(_QWORD *)(v764 + 112);
    v122 = (os_log_t)v375[58];
    v767 = v375[59];
    __swift_project_boxed_opaque_existential_1(v375 + 55, (uint64_t)v122);
    v768 = v161;
    v769 = *(void (**)(uint64_t, unint64_t, os_log_t, uint64_t))(v767 + 16);
    sub_245261C44(v766, v765);
    v770 = v767;
    v125 = (uint64_t)v855;
    v769(v766, v765, v122, v770);
    v161 = v768;
    sub_24525FFF8(v766, v765);
  }
  v771 = (uint64_t)v851;
  swift_beginAccess();
  sub_24525E4F0(v771, (uint64_t)&v858);
  v772 = *((_QWORD *)&v859 + 1);
  v773 = v860;
  __swift_project_boxed_opaque_existential_1(&v858, *((uint64_t *)&v859 + 1));
  v66 = (uint8_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v773 + 8) + 8) + 32))(v772);
  v857 = v66;
  sub_245387878();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v858);
  v131 = v843;
  sub_2452BC89C(v184, (uint64_t)v843, (uint64_t *)&unk_25744FAD0);
  if (((unsigned int (*)(uint8_t *, uint64_t, int *))v161)(v131, 1, v856) == 1)
    goto LABEL_138;
  sub_245263F80(v125, (uint64_t *)&unk_25744FAD0);
  sub_2452B7AB8((uint64_t)v131, v842, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  return sub_245263F80(v184, (uint64_t *)&unk_25744FAD0);
}

uint64_t sub_24529402C(uint64_t (*a1)(_QWORD *, uint64_t))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  void (*v12)(_QWORD *, uint64_t, uint64_t);
  id v13;
  char v14;
  uint64_t (*v15)(_QWORD *, uint64_t);
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void (*v26)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD *, uint64_t);
  uint64_t v30;

  v2 = *v1;
  v29 = a1;
  v30 = v2;
  v3 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  v28 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v28 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2453879D4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (void *)v1[29];
  *v9 = v10;
  v11 = *MEMORY[0x24BEE5610];
  v12 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v7 + 104);
  v12(v9, v11, v6);
  v13 = v10;
  v14 = sub_2453879F8();
  v15 = *(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8);
  result = v15(v9, v6);
  if ((v14 & 1) != 0)
  {
    sub_2452B792C((uint64_t)v29, (uint64_t)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReplicatorMessage.Handshake.Request);
    v17 = *(unsigned __int8 *)(v28 + 80);
    v29 = v15;
    v18 = (v17 + 24) & ~v17;
    v19 = (v4 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v1;
    sub_2452B7AB8((uint64_t)v5, v20 + v18, type metadata accessor for ReplicatorMessage.Handshake.Request);
    *(_QWORD *)(v20 + v19) = v30;
    *v9 = v13;
    v12(v9, v11, v6);
    v21 = v13;
    swift_retain();
    v22 = sub_2453879F8();
    result = v29(v9, v6);
    if ((v22 & 1) != 0)
    {
      v23 = v1[58];
      v24 = v1[59];
      __swift_project_boxed_opaque_existential_1(v1 + 55, v23);
      v25 = (_QWORD *)swift_allocObject();
      v25[2] = v1;
      v25[3] = sub_2452BA51C;
      v25[4] = v20;
      v26 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v24 + 8);
      swift_retain();
      swift_retain();
      v26(sub_2452BCDA0, v25, v23, v24);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_245294264(uint64_t (*a1)(_QWORD *, uint64_t))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  void (*v12)(_QWORD *, uint64_t, uint64_t);
  id v13;
  char v14;
  uint64_t (*v15)(_QWORD *, uint64_t);
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void (*v26)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD *, uint64_t);
  uint64_t v30;

  v2 = *v1;
  v29 = a1;
  v30 = v2;
  v3 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  v28 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v28 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2453879D4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (void *)v1[29];
  *v9 = v10;
  v11 = *MEMORY[0x24BEE5610];
  v12 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v7 + 104);
  v12(v9, v11, v6);
  v13 = v10;
  v14 = sub_2453879F8();
  v15 = *(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8);
  result = v15(v9, v6);
  if ((v14 & 1) != 0)
  {
    sub_2452B792C((uint64_t)v29, (uint64_t)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReplicatorMessage.Handshake.Response);
    v17 = *(unsigned __int8 *)(v28 + 80);
    v29 = v15;
    v18 = (v17 + 24) & ~v17;
    v19 = (v4 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v1;
    sub_2452B7AB8((uint64_t)v5, v20 + v18, type metadata accessor for ReplicatorMessage.Handshake.Response);
    *(_QWORD *)(v20 + v19) = v30;
    *v9 = v13;
    v12(v9, v11, v6);
    v21 = v13;
    swift_retain();
    v22 = sub_2453879F8();
    result = v29(v9, v6);
    if ((v22 & 1) != 0)
    {
      v23 = v1[58];
      v24 = v1[59];
      __swift_project_boxed_opaque_existential_1(v1 + 55, v23);
      v25 = (_QWORD *)swift_allocObject();
      v25[2] = v1;
      v25[3] = sub_2452BAC64;
      v25[4] = v20;
      v26 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v24 + 8);
      swift_retain();
      swift_retain();
      v26(sub_2452BCDA0, v25, v23, v24);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_24529449C(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  void (*v21)(uint64_t *__return_ptr, _QWORD *);

  v21 = a1;
  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (!v5)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v7 = (uint64_t *)(a3 + 56);
  v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v10 = *(v7 - 1);
    v11 = *v7;
    v12 = *(v7 - 2);
    v20[0] = *(v7 - 3);
    v20[1] = v12;
    v20[2] = v10;
    v20[3] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(&v18, v20);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = v19;
    if (v19)
    {
      v14 = v18;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_245323DF8(0, v8[2] + 1, 1, v8);
      v16 = v8[2];
      v15 = v8[3];
      if (v16 >= v15 >> 1)
        v8 = sub_245323DF8((_QWORD *)(v15 > 1), v16 + 1, 1, v8);
      v8[2] = v16 + 1;
      v9 = &v8[2 * v16];
      v9[4] = v14;
      v9[5] = v13;
    }
    v7 += 4;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_245294618(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  unint64_t v30;
  void (*v31)(_QWORD *, uint64_t);
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  void (*v39)(_QWORD *, unint64_t, uint64_t);
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t);
  __int128 v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t (*v53)(uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t *v64;
  unint64_t v65;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t *v81;
  NSObject *v82;
  os_log_type_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  __int128 *v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  NSObject *v104;
  os_log_type_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  unint64_t v110;
  _QWORD *v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t *v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  __int128 v126;
  id v127;
  void (*v128)(_QWORD *, unint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  _OWORD v136[10];
  uint64_t v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;

  v3 = v2;
  v133 = a2;
  v119 = a1;
  v4 = type metadata accessor for Replicator.SyncItem(0);
  v122 = *(_QWORD *)(v4 - 8);
  v123 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v132 = (uint64_t)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v131 = (uint64_t)&v116 - v7;
  v8 = type metadata accessor for Record.ID(0);
  v117 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v134 = (uint64_t)&v116 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v124 = (char *)&v116 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)&v126 = (char *)&v116 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for PairingRelationship();
  v125 = *(_QWORD *)(v129 - 8);
  v14 = MEMORY[0x24BDAC7A8](v129);
  v120 = (unint64_t *)((char *)&v116 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = MEMORY[0x24BDAC7A8](v14);
  v118 = (uint64_t)&v116 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v121 = (uint64_t *)((char *)&v116 - v18);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452E80);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v116 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Replicator.Session(0);
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v130 = (uint64_t)&v116 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_2453879D4();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (uint64_t *)((char *)&v116 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = (void *)v2[29];
  *v28 = v29;
  v30 = *MEMORY[0x24BEE5610];
  v128 = *(void (**)(_QWORD *, unint64_t, uint64_t))(v26 + 104);
  v128(v28, v30, v25);
  v127 = v29;
  LOBYTE(v29) = sub_2453879F8();
  v31 = *(void (**)(_QWORD *, uint64_t))(v26 + 8);
  v31(v28, v25);
  if ((v29 & 1) == 0)
  {
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  swift_beginAccess();
  v135 = v3;
  v32 = v3[64];
  if (!*(_QWORD *)(v32 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
LABEL_8:
    v36 = &qword_257452E80;
    v37 = (uint64_t)v21;
    return sub_245263F80(v37, v36);
  }
  swift_bridgeObjectRetain();
  v33 = sub_2452C2058(v133);
  if ((v34 & 1) != 0)
  {
    sub_2452B792C(*(_QWORD *)(v32 + 56) + *(_QWORD *)(v23 + 72) * v33, (uint64_t)v21, type metadata accessor for Replicator.Session);
    v35 = 0;
  }
  else
  {
    v35 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, v35, 1, v22);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
    goto LABEL_8;
  v23 = v130;
  sub_2452B7AB8((uint64_t)v21, v130, type metadata accessor for Replicator.Session);
  v40 = v127;
  v39 = v128;
  *v28 = v127;
  v39(v28, v30, v25);
  v41 = v40;
  LOBYTE(v40) = sub_2453879F8();
  v31(v28, v25);
  if ((v40 & 1) == 0)
    goto LABEL_46;
  v30 = (unint64_t)v135;
  swift_beginAccess();
  sub_24525E4F0(v30 + 192, (uint64_t)&v138);
  v42 = *((_QWORD *)&v139 + 1);
  v43 = v140;
  __swift_project_boxed_opaque_existential_1(&v138, *((uint64_t *)&v139 + 1));
  v44 = v126;
  MetadataStoring.pairingRelationship(remoteDeviceID:)(*(_QWORD *)(v23 + *(int *)(v22 + 20)), *(_QWORD *)(v23 + *(int *)(v22 + 20) + 8), v42, *(_QWORD *)(v43 + 8), v126);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v138);
  v22 = v129;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48))(v44, 1, v129) == 1)
  {
    sub_2452B7B5C(v23, type metadata accessor for Replicator.Session);
    v36 = (uint64_t *)&unk_25744FAD0;
    v37 = v44;
    return sub_245263F80(v37, v36);
  }
  v28 = v121;
  sub_2452B7AB8(v44, (uint64_t)v121, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  v45 = (_QWORD *)((char *)v28 + *(int *)(v22 + 20));
  if (v45[4] < 4uLL || v45[5] > 0xCuLL)
  {
    if (qword_25744FD90 == -1)
    {
LABEL_33:
      v80 = sub_245387818();
      __swift_project_value_buffer(v80, (uint64_t)qword_257462FB0);
      v81 = v120;
      sub_2452B792C((uint64_t)v28, (uint64_t)v120, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      swift_retain_n();
      v82 = sub_2453877F4();
      v83 = sub_245387D34();
      if (!os_log_type_enabled(v82, v83))
      {

        sub_2452B7B5C((uint64_t)v81, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        swift_release_n();
        v115 = (uint64_t)v28;
        goto LABEL_42;
      }
      v84 = swift_slowAlloc();
      v134 = swift_slowAlloc();
      v137 = v134;
      *(_DWORD *)v84 = 136446466;
      v86 = *(_QWORD *)(v30 + 488);
      v85 = *(_QWORD *)(v30 + 496);
      swift_bridgeObjectRetain();
      *(_QWORD *)&v138 = sub_2453816D8(v86, v85, &v137);
      sub_245387E0C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v84 + 12) = 2082;
      v87 = (__int128 *)((char *)v81 + *(int *)(v22 + 20));
      v88 = v87[7];
      v89 = v87[5];
      v144 = v87[6];
      v145 = v88;
      v90 = v87[7];
      v91 = v87[9];
      v146 = v87[8];
      v147 = v91;
      v92 = v87[3];
      v93 = v87[1];
      v140 = v87[2];
      v141 = v92;
      v94 = v87[3];
      v95 = v87[5];
      v142 = v87[4];
      v143 = v95;
      v96 = v87[1];
      v138 = *v87;
      v139 = v96;
      v136[6] = v144;
      v136[7] = v90;
      v97 = v87[9];
      v136[8] = v146;
      v136[9] = v97;
      v136[2] = v140;
      v136[3] = v94;
      v136[4] = v142;
      v136[5] = v89;
      v136[0] = v138;
      v136[1] = v93;
      sub_24526432C((uint64_t)&v138);
      v98 = sub_245387B48();
      *(_QWORD *)&v136[0] = sub_2453816D8(v98, v99, &v137);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_2452B7B5C((uint64_t)v81, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      _os_log_impl(&dword_245256000, v82, v83, "(%{public}s) Not enqueuing records for incompatible remote device %{public}s", (uint8_t *)v84, 0x16u);
      v100 = v134;
      swift_arrayDestroy();
      MEMORY[0x24953317C](v100, -1, -1);
      MEMORY[0x24953317C](v84, -1, -1);

      v101 = (uint64_t)v121;
      goto LABEL_44;
    }
LABEL_47:
    swift_once();
    goto LABEL_33;
  }
  v46 = (_QWORD *)((char *)v28 + *(int *)(v22 + 32));
  if (v46[1] != 2)
  {
    if (qword_25744FD90 != -1)
      swift_once();
    v102 = sub_245387818();
    __swift_project_value_buffer(v102, (uint64_t)qword_257462FB0);
    v103 = v118;
    sub_2452B792C((uint64_t)v28, v118, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    swift_retain_n();
    v104 = sub_2453877F4();
    v105 = sub_245387D34();
    if (os_log_type_enabled(v104, v105))
    {
      v106 = swift_slowAlloc();
      v107 = swift_slowAlloc();
      *(_QWORD *)&v136[0] = v107;
      *(_DWORD *)v106 = 136446466;
      v108 = (_QWORD *)v30;
      v109 = *(_QWORD *)(v30 + 488);
      v110 = v108[62];
      swift_bridgeObjectRetain();
      *(_QWORD *)&v138 = sub_2453816D8(v109, v110, (uint64_t *)v136);
      sub_245387E0C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v106 + 12) = 2082;
      v111 = (_QWORD *)(v103 + *(int *)(v129 + 32));
      v112 = v111[1];
      *(_QWORD *)&v138 = *v111;
      *((_QWORD *)&v138 + 1) = v112;
      sub_24526B470(v138, v112);
      v113 = sub_245387B48();
      *(_QWORD *)&v138 = sub_2453816D8(v113, v114, (uint64_t *)v136);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_2452B7B5C(v103, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      _os_log_impl(&dword_245256000, v104, v105, "(%{public}s) Not enqueuing records for relationship state %{public}s", (uint8_t *)v106, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v107, -1, -1);
      MEMORY[0x24953317C](v106, -1, -1);

      v101 = (uint64_t)v121;
    }
    else
    {

      sub_2452B7B5C(v103, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      swift_release_n();
      v101 = (uint64_t)v28;
    }
LABEL_44:
    sub_2452B7B5C(v101, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    return sub_2452B7B5C(v130, type metadata accessor for Replicator.Session);
  }
  v47 = *(_QWORD *)(v119 + 16);
  if (!v47)
    goto LABEL_41;
  v118 = *v46;
  v120 = (unint64_t *)(v30 + 504);
  v48 = v119 + ((*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80));
  v128 = *(void (**)(_QWORD *, unint64_t, uint64_t))(v117 + 72);
  swift_bridgeObjectRetain();
  v49 = type metadata accessor for Record.ID;
  *(_QWORD *)&v50 = 136446466;
  v126 = v50;
  v125 = MEMORY[0x24BEE4AD8] + 8;
  v51 = v134;
  v52 = v124;
  v127 = v45;
  do
  {
    sub_2452B792C(v48, (uint64_t)v52, v49);
    if (*(_QWORD *)(v45[12] + 16))
    {
      v129 = v47;
      v53 = v49;
      v55 = v52[4];
      v54 = v52[5];
      v56 = (uint64_t)v52;
      v59 = v52 + 2;
      v58 = v52[2];
      v57 = v59[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2452C1EB4(v58, v57, v55, v54);
      if ((v60 & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v61 = v131;
        v49 = v53;
        sub_2452B792C(v56, v131, v53);
        v62 = v61 + *(int *)(v123 + 20);
        v63 = sub_245387740();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v62, v133, v63);
        sub_2452B792C(v61, v132, type metadata accessor for Replicator.SyncItem);
        v64 = v120;
        swift_beginAccess();
        v65 = *v64;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v64 = v65;
        v52 = (_QWORD *)v56;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v65 = sub_24532437C(0, *(_QWORD *)(v65 + 16) + 1, 1, v65);
          *v120 = v65;
        }
        v51 = v134;
        v30 = (unint64_t)v135;
        v47 = v129;
        v68 = *(_QWORD *)(v65 + 16);
        v67 = *(_QWORD *)(v65 + 24);
        if (v68 >= v67 >> 1)
        {
          v65 = sub_24532437C(v67 > 1, v68 + 1, 1, v65);
          *v120 = v65;
        }
        *(_QWORD *)(v65 + 16) = v68 + 1;
        sub_2452B7AB8(v132, v65+ ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80))+ *(_QWORD *)(v122 + 72) * v68, type metadata accessor for Replicator.SyncItem);
        swift_endAccess();
        sub_2452B7B5C(v131, type metadata accessor for Replicator.SyncItem);
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v52 = (_QWORD *)v56;
      v51 = v134;
      v30 = (unint64_t)v135;
      v49 = v53;
      v47 = v129;
    }
    if (qword_25744FD90 != -1)
      swift_once();
    v69 = sub_245387818();
    __swift_project_value_buffer(v69, (uint64_t)qword_257462FB0);
    sub_2452B792C((uint64_t)v52, v51, v49);
    swift_retain_n();
    v70 = sub_2453877F4();
    v71 = sub_245387D34();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = swift_slowAlloc();
      v73 = swift_slowAlloc();
      *(_QWORD *)&v138 = v73;
      *(_DWORD *)v72 = v126;
      v74 = *(_QWORD *)(v30 + 488);
      v75 = v135[62];
      swift_bridgeObjectRetain();
      *(_QWORD *)(v72 + 4) = sub_2453816D8(v74, v75, (uint64_t *)&v138);
      swift_release_n();
      v30 = (unint64_t)v135;
      swift_bridgeObjectRelease();
      *(_WORD *)(v72 + 12) = 2082;
      v76 = Record.ID.description.getter();
      *(_QWORD *)(v72 + 14) = sub_2453816D8(v76, v77, (uint64_t *)&v138);
      swift_bridgeObjectRelease();
      sub_2452B7B5C(v134, v49);
      _os_log_impl(&dword_245256000, v70, v71, "(%{public}s) Not enqueuing record as remote device has no receiving zone: %{public}s", (uint8_t *)v72, 0x16u);
      swift_arrayDestroy();
      v78 = v73;
      v52 = v124;
      MEMORY[0x24953317C](v78, -1, -1);
      v79 = v72;
      v51 = v134;
      MEMORY[0x24953317C](v79, -1, -1);

    }
    else
    {

      sub_2452B7B5C(v51, v49);
      swift_release_n();
    }
LABEL_19:
    sub_2452B7B5C((uint64_t)v52, v49);
    v45 = v127;
    v48 += (uint64_t)v128;
    --v47;
  }
  while (v47);
  sub_24526B484(v118, 2uLL);
  swift_bridgeObjectRelease();
  v28 = v121;
  v23 = v130;
LABEL_41:
  v115 = (uint64_t)v28;
LABEL_42:
  sub_2452B7B5C(v115, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  return sub_2452B7B5C(v23, type metadata accessor for Replicator.Session);
}

void sub_2452953E8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _OWORD v28[10];
  uint64_t v29[2];
  _OWORD v30[2];
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  v6 = sub_2453879D4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (_QWORD *)((char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (void *)a1[29];
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v11 = v10;
  LOBYTE(v10) = sub_2453879F8();
  v12 = (void *)(*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    v13 = (void *)MEMORY[0x249532900](v12);
    sub_2452A1E60(a1);
    objc_autoreleasePoolPop(v13);
    v14 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ReplicatorMessage.Handshake.Complete(0) + 20));
    v16 = v14[1];
    v29[0] = *v14;
    v15 = v29[0];
    v29[1] = v16;
    v17 = (_OWORD *)(a3 + *(int *)(type metadata accessor for PairingRelationship() + 20));
    v18 = v17[7];
    v19 = v17[5];
    v35 = v17[6];
    v36 = v18;
    v20 = v17[7];
    v21 = v17[9];
    v37 = v17[8];
    v38 = v21;
    v22 = v17[3];
    v23 = v17[1];
    v31 = v17[2];
    v32 = v22;
    v24 = v17[3];
    v25 = v17[5];
    v33 = v17[4];
    v34 = v25;
    v26 = v17[1];
    v30[0] = *v17;
    v30[1] = v26;
    v28[6] = v35;
    v28[7] = v20;
    v27 = v17[9];
    v28[8] = v37;
    v28[9] = v27;
    v28[2] = v31;
    v28[3] = v24;
    v28[4] = v33;
    v28[5] = v19;
    v28[0] = v30[0];
    v28[1] = v23;
    sub_24526B470(v15, v16);
    sub_24526432C((uint64_t)v30);
    sub_245295594(v29, (uint64_t)v28);
    sub_245269928((uint64_t)v30);
    sub_24526B484(v15, v16);
  }
  else
  {
    __break(1u);
    objc_autoreleasePoolPop(v12);
    __break(1u);
  }
}

void sub_245295594(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  void *v14;
  id v15;
  uint64_t v16;

  v5 = sub_2453879D4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *a1;
  v10 = a1[1];
  v11 = *(_QWORD *)a2;
  v12 = *(_QWORD *)(a2 + 8);
  v13 = *(unsigned __int8 *)(a2 + 48);
  v14 = *(void **)(v2 + 232);
  *v8 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEE5610], v5);
  v15 = v14;
  LOBYTE(v14) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v14 & 1) != 0)
  {
    if (*(_BYTE *)(v2 + 96) == 4 || v13 == 4)
    {
      if (v10)
      {
        sub_24526B470(v9, v10);
        sub_24526B484(v9, v10);
        sub_24526B484(0, 0);
      }
      else
      {
        sub_24526B484(v9, 0);
        sub_24526B484(0, 0);
        sub_245276760(v11, v12, (_QWORD *)v2);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_2452956D0(NSObject *a1, uint64_t a2, uint64_t isUniquelyReferenced_nonNull_native, uint64_t a4, int a5, uint64_t a6, unint64_t a7)
{
  unint64_t v7;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  os_log_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  _BOOL4 v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  int v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  os_log_t v85;
  uint64_t v86;
  NSObject *v87;
  NSObject *v88;
  NSObject *v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  NSObject *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  NSObject *v104;
  uint64_t *v105;
  os_log_type_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  os_log_type_t v113;
  uint64_t v114;
  unint64_t v115;
  _OWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  _BYTE *v122;
  _BYTE *v123;
  uint64_t v124;
  unsigned int v125;
  _BYTE *v126;
  _BYTE *v127;
  uint64_t v128;
  unint64_t v129;
  __int128 *v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _BYTE *v140;
  uint64_t v141;
  _BYTE *v142;
  __int128 *v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  _BYTE *v154;
  _BYTE *v155;
  Class v156;
  os_log_t v157;
  NSObject *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  _BYTE *v164;
  uint64_t v165;
  unint64_t v166;
  os_log_t v167;
  uint64_t v168;
  uint64_t v169;
  NSObject *v170;
  os_log_type_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  unint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _BYTE *v180;
  uint64_t v181;
  _BYTE *v182;
  _BYTE *v183;
  uint64_t v184;
  __int128 *v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  uint64_t v198;
  _BYTE *v199;
  uint64_t v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  uint64_t v209;
  uint64_t *v210;
  uint64_t v211;
  _QWORD *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  NSObject *v218;
  char v219;
  uint64_t v220;
  uint64_t *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  _QWORD *v226;
  uint64_t v227;
  Class v228;
  _BOOL8 v229;
  uint64_t v230;
  unint64_t v231;
  char v232;
  _QWORD *v233;
  Class v234;
  BOOL v235;
  objc_class *v236;
  _BYTE *v237;
  unint64_t v238;
  uint64_t v239;
  unint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  _QWORD *v250;
  uint64_t v251;
  Class *v252;
  uint64_t v253;
  uint64_t v254;
  Class v255;
  Class v256;
  Class v257;
  Class v258;
  uint64_t v259;
  Class v260;
  Class v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  Class v265;
  _BOOL8 v266;
  uint64_t v267;
  unint64_t v268;
  char v269;
  _QWORD *v270;
  Class v271;
  objc_class *v272;
  os_log_t v273;
  void (*v274)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v275;
  _BYTE *v276;
  uint64_t v277;
  uint64_t v278;
  _QWORD *v279;
  unint64_t v280;
  __int128 *v281;
  __int128 v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  __int128 v286;
  _BYTE *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t *v290;
  uint64_t v291;
  uint64_t v292;
  _BYTE *v293;
  uint64_t v294;
  uint64_t v295;
  _BYTE *v296;
  unint64_t v297;
  _BYTE *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  _BYTE *v303;
  uint64_t ObjectType;
  _OWORD *v305;
  __int128 v306;
  __int128 v307;
  __int128 v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  __int128 v315;
  uint64_t v316;
  _OWORD *v317;
  __int128 v318;
  uint64_t v319;
  _BYTE v320[12];
  int v321;
  _OWORD *v322;
  uint64_t v323;
  _BYTE *v324;
  _BYTE *v325;
  NSObject *v326;
  _BYTE *v327;
  uint64_t v328;
  _BYTE *v329;
  _BYTE *v330;
  _BYTE *v331;
  Class isa;
  os_log_t v333;
  uint64_t v334;
  _BYTE *v335;
  uint64_t v336;
  _BYTE *v337;
  _BYTE *v338;
  _BYTE *v339;
  _BYTE *v340;
  _BYTE *v341;
  _BYTE *v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  _BYTE *v346;
  _BYTE *v347;
  _BYTE *v348;
  _BYTE *v349;
  uint64_t v350;
  uint64_t v351;
  unint64_t v352;
  _BYTE *v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  _BYTE *v358;
  uint64_t *v359;
  _QWORD *v360;
  _BYTE *v361;
  uint64_t v362;
  _BYTE *v363;
  _BYTE *v364;
  Class *v365;
  const char *v366;
  _BYTE *v367;
  _QWORD *v368;
  _BYTE *v369;
  uint64_t v370;
  _BYTE *v371;
  unint64_t v372;
  uint64_t v373;
  NSObject *v374;
  NSObject *v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t *v378;
  uint64_t v379;
  os_log_t v380;
  uint64_t v381[2];
  char v382;
  __int128 v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  __int128 v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  _OWORD v393[2];
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  _OWORD v402[12];
  __int128 v403;
  __int128 v404;
  __int128 v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  __int128 v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __int128 v413;
  __int128 v414;
  __int128 v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  __int128 v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;

  v352 = a7;
  v354 = a6;
  LODWORD(v7) = a5;
  v356 = a4;
  v380 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (unint64_t)&v320[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v320[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452C90);
  MEMORY[0x24BDAC7A8](v16);
  v337 = &v320[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = type metadata accessor for Message();
  v334 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v338 = &v320[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v345 = type metadata accessor for ReplicatorMessage(0);
  MEMORY[0x24BDAC7A8](v345);
  v361 = &v320[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v344 = type metadata accessor for ReplicatorMessage.Handshake(0);
  MEMORY[0x24BDAC7A8](v344);
  v349 = &v320[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v343 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  MEMORY[0x24BDAC7A8](v343);
  v348 = &v320[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v328 = type metadata accessor for ZoneVersion();
  v376 = *(_QWORD *)(v328 - 8);
  v23 = MEMORY[0x24BDAC7A8](v328);
  v375 = &v320[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v23);
  v371 = &v320[-v25];
  v377 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744F640);
  v26 = MEMORY[0x24BDAC7A8](v377);
  v366 = &v320[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v28 = MEMORY[0x24BDAC7A8](v26);
  v365 = (Class *)&v320[-v29];
  v30 = MEMORY[0x24BDAC7A8](v28);
  v374 = &v320[-v31];
  v32 = MEMORY[0x24BDAC7A8](v30);
  v364 = &v320[-v33];
  v34 = MEMORY[0x24BDAC7A8](v32);
  v360 = &v320[-v35];
  v36 = MEMORY[0x24BDAC7A8](v34);
  v359 = (uint64_t *)&v320[-v37];
  v38 = MEMORY[0x24BDAC7A8](v36);
  v368 = &v320[-v39];
  v40 = MEMORY[0x24BDAC7A8](v38);
  v378 = (uint64_t *)&v320[-v41];
  MEMORY[0x24BDAC7A8](v40);
  v367 = &v320[-v42];
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452E80);
  v44 = MEMORY[0x24BDAC7A8](v43);
  v342 = &v320[-((v45 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v44);
  v346 = &v320[-v46];
  v47 = type metadata accessor for Replicator.Session(0);
  v350 = *(_QWORD *)(v47 - 8);
  v351 = v47;
  v48 = MEMORY[0x24BDAC7A8](v47);
  v341 = &v320[-((v49 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v48);
  v327 = &v320[-v50];
  v355 = sub_245387740();
  v362 = *(_QWORD *)(v355 - 8);
  v51 = MEMORY[0x24BDAC7A8](v355);
  v339 = &v320[-((v52 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v51);
  v353 = &v320[-v53];
  v54 = (os_log_t)sub_245387818();
  isa = v54[-1].isa;
  MEMORY[0x24BDAC7A8](v54);
  v331 = &v320[-((v55 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v357 = type metadata accessor for PairingRelationship();
  v379 = *(_QWORD *)(v357 - 8);
  MEMORY[0x24BDAC7A8](v357);
  v330 = &v320[-((v56 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  v58 = MEMORY[0x24BDAC7A8](v57);
  v340 = &v320[-((v59 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v60 = MEMORY[0x24BDAC7A8](v58);
  v369 = &v320[-v61];
  v62 = MEMORY[0x24BDAC7A8](v60);
  v325 = &v320[-v63];
  v64 = MEMORY[0x24BDAC7A8](v62);
  v329 = &v320[-v65];
  v66 = MEMORY[0x24BDAC7A8](v64);
  v363 = &v320[-v67];
  v68 = MEMORY[0x24BDAC7A8](v66);
  v347 = &v320[-v69];
  MEMORY[0x24BDAC7A8](v68);
  v358 = &v320[-v70];
  if (qword_25744FD90 != -1)
    goto LABEL_120;
LABEL_2:
  v333 = v54;
  v71 = __swift_project_value_buffer((uint64_t)v54, (uint64_t)qword_257462FB0);
  swift_retain();
  sub_2452B7D58(isUniquelyReferenced_nonNull_native);
  swift_retain();
  sub_2452B7D58(isUniquelyReferenced_nonNull_native);
  v372 = v71;
  v72 = sub_2453877F4();
  v73 = sub_245387D34();
  v74 = os_log_type_enabled(v72, v73);
  v370 = a2;
  v335 = v15;
  v336 = v18;
  v326 = v12;
  if (v74)
  {
    v75 = swift_slowAlloc();
    v373 = swift_slowAlloc();
    *(_QWORD *)&v403 = v373;
    *(_DWORD *)v75 = 136446722;
    v76 = *(_QWORD *)(v370 + 488);
    v77 = *(_QWORD *)(v370 + 496);
    swift_bridgeObjectRetain();
    *(_QWORD *)&v413 = sub_2453816D8(v76, v77, (uint64_t *)&v403);
    sub_245387E0C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v75 + 12) = 2082;
    v78 = v7;
    v79 = *(_QWORD *)isUniquelyReferenced_nonNull_native;
    v7 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8);
    swift_bridgeObjectRetain();
    v80 = v7;
    LODWORD(v7) = v78;
    *(_QWORD *)&v413 = sub_2453816D8(v79, v80, (uint64_t *)&v403);
    sub_245387E0C();
    sub_2452B7D94(isUniquelyReferenced_nonNull_native);
    sub_2452B7D94(isUniquelyReferenced_nonNull_native);
    sub_2452B7D94(isUniquelyReferenced_nonNull_native);
    *(_WORD *)(v75 + 22) = 2082;
    *(_QWORD *)&v413 = v356;
    BYTE8(v413) = v78;
    v81 = ReplicationSchedule.description.getter();
    *(_QWORD *)&v413 = sub_2453816D8(v81, v82, (uint64_t *)&v403);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v72, v73, "(%{public}s) Sending handshake request to %{public}s; schedule: %{public}s",
      (uint8_t *)v75,
      0x20u);
    v83 = v373;
    swift_arrayDestroy();
    MEMORY[0x24953317C](v83, -1, -1);
    v84 = v75;
    a2 = v370;
    MEMORY[0x24953317C](v84, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_2452B7D94(isUniquelyReferenced_nonNull_native);
    sub_2452B7D94(isUniquelyReferenced_nonNull_native);
  }

  v86 = v379;
  v85 = v380;
  if (v380)
  {
    v87 = v380;
    swift_retain();
    v88 = v85;
    swift_retain();
    v89 = v85;
    v90 = sub_2453877F4();
    v91 = sub_245387D34();
    if (os_log_type_enabled(v90, v91))
    {
      v92 = swift_slowAlloc();
      v93 = (_QWORD *)swift_slowAlloc();
      v94 = isUniquelyReferenced_nonNull_native;
      v95 = swift_slowAlloc();
      *(_QWORD *)&v413 = v95;
      *(_DWORD *)v92 = 136446466;
      v96 = *(_QWORD *)(v370 + 488);
      v97 = *(_QWORD *)(v370 + 496);
      swift_bridgeObjectRetain();
      *(_QWORD *)&v403 = sub_2453816D8(v96, v97, (uint64_t *)&v413);
      sub_245387E0C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v92 + 12) = 2114;
      v98 = v380;
      v99 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)&v403 = v99;
      v85 = v380;
      sub_245387E0C();
      *v93 = v99;

      _os_log_impl(&dword_245256000, v90, v91, "(%{public}s) Abandoning handshake request because prerequisites are not met: %{public}@", (uint8_t *)v92, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v93, -1, -1);
      swift_arrayDestroy();
      v100 = v95;
      isUniquelyReferenced_nonNull_native = v94;
      MEMORY[0x24953317C](v100, -1, -1);
      MEMORY[0x24953317C](v92, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    sub_245297B78(*(_QWORD *)isUniquelyReferenced_nonNull_native, *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8));

    return;
  }
  if ((*(_BYTE *)(a2 + 544) & 1) == 0)
  {
    v105 = (uint64_t *)isUniquelyReferenced_nonNull_native;
    swift_retain();
    v104 = sub_2453877F4();
    v113 = sub_245387D34();
    if (!os_log_type_enabled(v104, v113))
    {

      swift_release();
      goto LABEL_23;
    }
    v107 = swift_slowAlloc();
    v108 = swift_slowAlloc();
    *(_QWORD *)&v413 = v108;
    *(_DWORD *)v107 = 136446210;
    v114 = *(_QWORD *)(v370 + 488);
    v115 = *(_QWORD *)(v370 + 496);
    swift_bridgeObjectRetain();
    *(_QWORD *)&v403 = sub_2453816D8(v114, v115, (uint64_t *)&v413);
    sub_245387E0C();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v104, v113, "(%{public}s) Abandoning handshake request because replicator is disabled", (uint8_t *)v107, 0xCu);
    goto LABEL_17;
  }
  if (*(_QWORD *)(isUniquelyReferenced_nonNull_native + 24) == 7)
  {
    v101 = v370;
    swift_beginAccess();
    v102 = *(_QWORD *)(v101 + 592);
    swift_bridgeObjectRetain();
    v103 = sub_24531D83C(0xD000000000000011, 0x8000000245393670, v102);
    swift_bridgeObjectRelease();
    if ((v103 & 1) != 0)
    {
      swift_retain();
      sub_2452B7D58(isUniquelyReferenced_nonNull_native);
      swift_retain();
      sub_2452B7D58(isUniquelyReferenced_nonNull_native);
      v104 = sub_2453877F4();
      v105 = (uint64_t *)isUniquelyReferenced_nonNull_native;
      v106 = sub_245387D34();
      if (!os_log_type_enabled(v104, v106))
      {
        swift_release_n();
        sub_2452B7D94((uint64_t)v105);
        sub_2452B7D94((uint64_t)v105);
        goto LABEL_18;
      }
      v107 = swift_slowAlloc();
      v108 = swift_slowAlloc();
      *(_QWORD *)&v413 = v108;
      *(_DWORD *)v107 = 136446466;
      v109 = *(_QWORD *)(v370 + 488);
      v110 = *(_QWORD *)(v370 + 496);
      swift_bridgeObjectRetain();
      *(_QWORD *)&v403 = sub_2453816D8(v109, v110, (uint64_t *)&v413);
      sub_245387E0C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v107 + 12) = 2082;
      v111 = *v105;
      v112 = v105[1];
      swift_bridgeObjectRetain();
      *(_QWORD *)&v403 = sub_2453816D8(v111, v112, (uint64_t *)&v413);
      sub_245387E0C();
      sub_2452B7D94((uint64_t)v105);
      sub_2452B7D94((uint64_t)v105);
      sub_2452B7D94((uint64_t)v105);
      _os_log_impl(&dword_245256000, v104, v106, "(%{public}s) Abandoning handshake with old-chronod as chronod client is disabled: %{public}s", (uint8_t *)v107, 0x16u);
LABEL_17:
      swift_arrayDestroy();
      MEMORY[0x24953317C](v108, -1, -1);
      MEMORY[0x24953317C](v107, -1, -1);
LABEL_18:

LABEL_23:
      sub_245297B78(*v105, v105[1]);
      return;
    }
  }
  v321 = v7;
  v12 = v370;
  v116 = (_OWORD *)isUniquelyReferenced_nonNull_native;
  swift_beginAccess();
  v380 = (os_log_t)(v12 + 192);
  sub_24525E4F0(v12 + 192, (uint64_t)&v413);
  v117 = *((_QWORD *)&v414 + 1);
  v118 = v415;
  __swift_project_boxed_opaque_existential_1(&v413, *((uint64_t *)&v414 + 1));
  v18 = *(_QWORD *)isUniquelyReferenced_nonNull_native;
  v119 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8);
  v120 = *(_QWORD *)(v118 + 8);
  v121 = v358;
  MetadataStoring.pairingRelationship(remoteDeviceID:)(v18, v119, v117, v120, (uint64_t)v358);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v413);
  v122 = v347;
  sub_2452BC89C((uint64_t)v121, (uint64_t)v347, (uint64_t *)&unk_25744FAD0);
  v123 = *(_BYTE **)(v86 + 48);
  v124 = v357;
  v125 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v123)(v122, 1, v357);
  v373 = v18;
  v322 = v116;
  v323 = v119;
  v324 = v123;
  if (v125 == 1)
  {
    sub_245263F80((uint64_t)v122, (uint64_t *)&unk_25744FAD0);
    v402[0] = xmmword_24538A080;
    LOBYTE(v393[0]) = *((_BYTE *)v116 + 16);
    v413 = 0u;
    v414 = 0u;
    LOWORD(v415) = 256;
    sub_2452B7D58((uint64_t)v116);
    DeviceDescriptor.init(id:name:protocolVersion:deviceType:screenDescriptor:zones:messageTypes:idsIdentityBlob:marketingName:productType:)(v18, v119, 0, 0xE000000000000000, (uint64_t *)v402, (char *)v393, (uint64_t *)&v413, MEMORY[0x24BEE4AF8], &v403, MEMORY[0x24BEE4AF8], 0, 0xF000000000000000, 0, 0);
    v419 = v409;
    v420 = v410;
    v421 = v411;
    v422 = v412;
    v415 = v405;
    v416 = v406;
    v417 = v407;
    v418 = v408;
    v413 = v403;
    v414 = v404;
    v126 = v363;
    sub_245387734();
    v127 = v121;
    sub_24526432C((uint64_t)&v413);
    sub_2453876C8();
    sub_2453876C8();
    v128 = v354;
    v129 = v352;
    sub_24526B470(v354, v352);
    sub_2453876C8();
    v130 = (__int128 *)&v126[*(int *)(v124 + 20)];
    v131 = v418;
    v130[4] = v417;
    v130[5] = v131;
    v132 = v416;
    v130[2] = v415;
    v130[3] = v132;
    v133 = v422;
    v130[8] = v421;
    v130[9] = v133;
    v134 = v420;
    v130[6] = v419;
    v130[7] = v134;
    v135 = v414;
    *v130 = v413;
    v130[1] = v135;
    v136 = (uint64_t *)&v126[*(int *)(v124 + 32)];
    *v136 = v128;
    v136[1] = v129;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v379 + 56))(v126, 0, 1, v124);
    sub_2452BBA60((uint64_t)v126, (uint64_t)v121, (uint64_t *)&unk_25744FAD0);
    sub_24525E4F0((uint64_t)v380, (uint64_t)&v403);
    v137 = *((_QWORD *)&v404 + 1);
    v138 = v405;
    __swift_project_boxed_opaque_existential_1(&v403, *((uint64_t *)&v404 + 1));
    v139 = (uint64_t)v127;
    v140 = v329;
    sub_2452BC89C(v139, (uint64_t)v329, (uint64_t *)&unk_25744FAD0);
    if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v123)(v140, 1, v124) == 1)
      goto LABEL_126;
    v15 = v123;
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v138 + 16) + 88))(v140, v137);
    sub_245269928((uint64_t)&v413);
    sub_2452B7B5C((uint64_t)v140, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v403);
  }
  else
  {
    v141 = (uint64_t)v122;
    v142 = v330;
    sub_2452B7AB8(v141, (uint64_t)v330, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    sub_245297F54((uint64_t)v142);
    v143 = (__int128 *)&v142[*(int *)(v124 + 20)];
    v144 = v143[7];
    v145 = v143[5];
    v419 = v143[6];
    v420 = v144;
    v146 = v143[7];
    v147 = v143[9];
    v421 = v143[8];
    v422 = v147;
    v148 = v143[3];
    v149 = v143[1];
    v415 = v143[2];
    v416 = v148;
    v150 = v143[3];
    v151 = v143[5];
    v417 = v143[4];
    v418 = v151;
    v152 = v143[1];
    v413 = *v143;
    v414 = v152;
    v409 = v419;
    v410 = v146;
    v153 = v143[9];
    v411 = v421;
    v412 = v153;
    v405 = v415;
    v406 = v150;
    v407 = v417;
    v408 = v145;
    v403 = v413;
    v404 = v149;
    *(_QWORD *)&v402[0] = v354;
    *((_QWORD *)&v402[0] + 1) = v352;
    sub_24526432C((uint64_t)&v413);
    v154 = v363;
    sub_24528B268(&v403, (uint64_t)v402, 1, 1, (uint64_t)v363);
    sub_245269928((uint64_t)&v413);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v379 + 56))(v154, 0, 1, v124);
    sub_2452BBA60((uint64_t)v154, (uint64_t)v121, (uint64_t *)&unk_25744FAD0);
    v155 = v331;
    v156 = isa;
    v157 = v333;
    (*((void (**)(_BYTE *, unint64_t, os_log_t))isa + 2))(v331, v372, v333);
    swift_retain_n();
    v158 = sub_2453877F4();
    LODWORD(v379) = sub_245387D34();
    v380 = v158;
    if (!os_log_type_enabled(v158, (os_log_type_t)v379))
    {
      swift_release_n();

      (*((void (**)(_BYTE *, os_log_t))v156 + 1))(v155, v157);
      sub_2452B7B5C((uint64_t)v142, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v15 = v324;
      goto LABEL_29;
    }
    v159 = (uint64_t)v121;
    v160 = swift_slowAlloc();
    v161 = swift_slowAlloc();
    *(_QWORD *)&v403 = v161;
    *(_DWORD *)v160 = 136446466;
    v162 = *(_QWORD *)(v12 + 488);
    v163 = *(_QWORD *)(v12 + 496);
    swift_bridgeObjectRetain();
    *(_QWORD *)&v402[0] = sub_2453816D8(v162, v163, (uint64_t *)&v403);
    sub_245387E0C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v160 + 12) = 2082;
    swift_beginAccess();
    v164 = v325;
    sub_2452BC89C(v159, (uint64_t)v325, (uint64_t *)&unk_25744FAD0);
    v15 = v324;
    if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v324)(v164, 1, v124) == 1)
      goto LABEL_128;
    v165 = sub_245387B48();
    *(_QWORD *)&v402[0] = sub_2453816D8(v165, v166, (uint64_t *)&v403);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    v167 = v380;
    _os_log_impl(&dword_245256000, v380, (os_log_type_t)v379, "(%{public}s) Using existing relationship: %{public}s", (uint8_t *)v160, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v161, -1, -1);
    MEMORY[0x24953317C](v160, -1, -1);

    (*((void (**)(_BYTE *, os_log_t))isa + 1))(v331, v333);
    sub_2452B7B5C((uint64_t)v330, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  }
  v12 = v370;
  v121 = v358;
  v18 = v373;
LABEL_29:
  v168 = (uint64_t)v369;
  sub_245298100(&v413);
  swift_beginAccess();
  sub_2452BC89C((uint64_t)v121, v168, (uint64_t *)&unk_25744FAD0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v15)(v168, 1, v357) == 1)
    goto LABEL_123;
  v169 = sub_245298420(v168);
  sub_2452B7B5C(v168, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v170 = sub_2453877F4();
  v171 = sub_245387D34();
  if (os_log_type_enabled(v170, v171))
  {
    v172 = swift_slowAlloc();
    v15 = (_BYTE *)swift_slowAlloc();
    *(_QWORD *)&v403 = v15;
    *(_DWORD *)v172 = 136446466;
    v173 = *(_QWORD *)(v370 + 488);
    v174 = *(_QWORD *)(v370 + 496);
    swift_bridgeObjectRetain();
    *(_QWORD *)&v402[0] = sub_2453816D8(v173, v174, (uint64_t *)&v403);
    sub_245387E0C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v172 + 12) = 2082;
    sub_2452B7DEC();
    swift_bridgeObjectRetain();
    v175 = sub_245387A70();
    v177 = v176;
    swift_bridgeObjectRelease();
    v178 = v175;
    v18 = v373;
    *(_QWORD *)&v402[0] = sub_2453816D8(v178, v177, (uint64_t *)&v403);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v170, v171, "(%{public}s) Local zone versions: %{public}s", (uint8_t *)v172, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v15, -1, -1);
    v12 = v370;
    MEMORY[0x24953317C](v172, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v179 = v355;
  v180 = v346;
  v7 = v169;
  sub_245298A50(v18, v323, (uint64_t)v346);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v350 + 48))(v180, 1, v351) == 1)
  {
    sub_245263F80((uint64_t)v180, &qword_257452E80);
    sub_245387734();
  }
  else
  {
    v181 = (uint64_t)v180;
    v182 = v327;
    sub_2452B7AB8(v181, (uint64_t)v327, type metadata accessor for Replicator.Session);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v362 + 16))(v353, v182, v179);
    sub_2452B7B5C((uint64_t)v182, type metadata accessor for Replicator.Session);
  }
  v184 = v357;
  v183 = v358;
  if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v324)(v358, 1, v357) == 1)
  {
LABEL_124:
    __break(1u);
    goto LABEL_125;
  }
  v185 = (__int128 *)&v183[*(int *)(v184 + 20)];
  v186 = v185[5];
  v407 = v185[4];
  v408 = v186;
  v187 = v185[3];
  v405 = v185[2];
  v406 = v187;
  v188 = v185[9];
  v411 = v185[8];
  v412 = v188;
  v189 = v185[7];
  v409 = v185[6];
  v410 = v189;
  v190 = v185[1];
  v403 = *v185;
  v404 = v190;
  v191 = v405;
  v192 = *(_QWORD *)(v169 + 64);
  v363 = (_BYTE *)(v169 + 64);
  a2 = 1 << *(_BYTE *)(v169 + 32);
  v193 = -1;
  if (a2 < 64)
    v193 = ~(-1 << a2);
  isUniquelyReferenced_nonNull_native = v193 & v192;
  swift_bridgeObjectRetain();
  sub_24526432C((uint64_t)&v403);
  v369 = (_BYTE *)((unint64_t)(a2 + 63) >> 6);
  v372 = v169;
  if (v191 <= 7)
  {
    v12 = 0;
    v54 = (os_log_t)MEMORY[0x24BEE4B00];
    v366 = "Swift/UnsafePointer.swift";
    v374 = 0x8000000245393670;
    while (1)
    {
      v380 = v54;
      if (isUniquelyReferenced_nonNull_native)
      {
        v379 = (isUniquelyReferenced_nonNull_native - 1) & isUniquelyReferenced_nonNull_native;
        v375 = v12;
        v194 = __clz(__rbit64(isUniquelyReferenced_nonNull_native)) | (v12 << 6);
      }
      else
      {
        v195 = v12 + 1;
        if (__OFADD__(v12, 1))
          goto LABEL_117;
        if (v195 >= (uint64_t)v369)
          goto LABEL_108;
        v196 = v362;
        v197 = *(_QWORD *)&v363[8 * v195];
        v198 = v12 + 1;
        v199 = v361;
        if (!v197)
        {
          v198 = v195 + 1;
          if (v195 + 1 >= (uint64_t)v369)
            goto LABEL_109;
          v197 = *(_QWORD *)&v363[8 * v198];
          if (!v197)
          {
            v198 = v195 + 2;
            if (v195 + 2 >= (uint64_t)v369)
              goto LABEL_109;
            v197 = *(_QWORD *)&v363[8 * v198];
            if (!v197)
            {
              v198 = v195 + 3;
              if (v195 + 3 >= (uint64_t)v369)
                goto LABEL_109;
              v197 = *(_QWORD *)&v363[8 * v198];
              if (!v197)
              {
                v200 = v195 + 4;
                if (v200 >= (uint64_t)v369)
                  goto LABEL_109;
                v197 = *(_QWORD *)&v363[8 * v200];
                if (!v197)
                {
                  while (1)
                  {
                    v198 = v200 + 1;
                    if (__OFADD__(v200, 1))
                      break;
                    if (v198 >= (uint64_t)v369)
                      goto LABEL_109;
                    v197 = *(_QWORD *)&v363[8 * v198];
                    ++v200;
                    if (v197)
                      goto LABEL_61;
                  }
                  __break(1u);
LABEL_122:
                  __break(1u);
LABEL_123:
                  __break(1u);
                  goto LABEL_124;
                }
                v198 = v200;
              }
            }
          }
        }
LABEL_61:
        v379 = (v197 - 1) & v197;
        v375 = v198;
        v194 = __clz(__rbit64(v197)) + (v198 << 6);
      }
      v201 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 32 * v194);
      v202 = *v201;
      v203 = v201[1];
      v204 = v201[2];
      v205 = v201[3];
      v206 = v377;
      a2 = *(_QWORD *)(v376 + 72);
      v207 = *(_QWORD *)(v7 + 56) + a2 * v194;
      v208 = v367;
      v15 = type metadata accessor for ZoneVersion;
      sub_2452B792C(v207, (uint64_t)&v367[*(int *)(v377 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      *v208 = v202;
      v208[1] = v203;
      v208[2] = v204;
      v208[3] = v205;
      v209 = (uint64_t)v208;
      v210 = v378;
      sub_2452BC850(v209, (uint64_t)v378, (uint64_t *)&unk_25744F640);
      v211 = *(int *)(v206 + 48);
      v212 = v368;
      v213 = (uint64_t)v368 + v211;
      v214 = (uint64_t)v210 + v211;
      v215 = *v210;
      v216 = v210[1];
      v217 = v210[2];
      v218 = v210[3];
      *v368 = v215;
      v212[1] = v216;
      v212[2] = v217;
      v212[3] = v218;
      sub_2452B792C(v214, v213, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      if (v217 == 0xD000000000000011 && v218 == v374)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_2452B7B5C(v213, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      }
      else
      {
        v219 = sub_245388274();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_2452B7B5C(v213, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
        if ((v219 & 1) == 0)
        {
          v54 = v380;
          goto LABEL_43;
        }
      }
      v220 = v377;
      v221 = v359;
      v222 = (uint64_t)v359 + *(int *)(v377 + 48);
      v15 = (_BYTE *)*v378;
      v18 = v378[1];
      v223 = v378[2];
      v224 = v378[3];
      *v359 = *v378;
      v221[1] = v18;
      v221[2] = v223;
      v221[3] = v224;
      sub_2452B792C(v214, v222, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      v225 = *(int *)(v220 + 48);
      v226 = v360;
      isUniquelyReferenced_nonNull_native = (uint64_t)v360 + v225;
      *v360 = v15;
      v226[1] = v18;
      v226[2] = v223;
      v226[3] = v224;
      sub_2452B792C(v214, (uint64_t)v226 + v225, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      sub_2452B7AB8(isUniquelyReferenced_nonNull_native, (uint64_t)v371, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      swift_bridgeObjectRetain();
      v54 = v380;
      LODWORD(v7) = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v402[0] = v54;
      v12 = sub_2452C1D98((uint64_t)v15, v18);
      v228 = v54[2].isa;
      v229 = (v227 & 1) == 0;
      v230 = (uint64_t)v228 + v229;
      if (__OFADD__(v228, v229))
        goto LABEL_115;
      isUniquelyReferenced_nonNull_native = v227;
      if ((uint64_t)v54[3].isa >= v230)
      {
        if ((v7 & 1) == 0)
          sub_2452C88BC();
      }
      else
      {
        sub_2452C4B30(v230, v7);
        v231 = sub_2452C1D98((uint64_t)v15, v18);
        if ((isUniquelyReferenced_nonNull_native & 1) != (v232 & 1))
          goto LABEL_129;
        v12 = v231;
      }
      v54 = *(os_log_t *)&v402[0];
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        sub_2452BC64C((uint64_t)v371, *(_QWORD *)(*(_QWORD *)&v402[0] + 56) + v12 * a2, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      }
      else
      {
        *(_QWORD *)(*(_QWORD *)&v402[0] + 8 * (v12 >> 6) + 64) |= 1 << v12;
        v233 = (_QWORD *)((char *)v54[6].isa + 16 * v12);
        *v233 = v15;
        v233[1] = v18;
        sub_2452B7AB8((uint64_t)v371, (uint64_t)v54[7].isa + v12 * a2, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
        v234 = v54[2].isa;
        v235 = __OFADD__(v234, 1);
        v236 = (Class)((char *)v234 + 1);
        if (v235)
          goto LABEL_119;
        v54[2].isa = v236;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2452B7B5C(v222, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
LABEL_43:
      v12 = (unint64_t)v375;
      sub_245263F80((uint64_t)v378, (uint64_t *)&unk_25744F640);
      v7 = v372;
      v18 = v373;
      isUniquelyReferenced_nonNull_native = v379;
    }
  }
  v237 = 0;
  v54 = (os_log_t)MEMORY[0x24BEE4B00];
  while (1)
  {
    v380 = v54;
    if (isUniquelyReferenced_nonNull_native)
    {
      v379 = (isUniquelyReferenced_nonNull_native - 1) & isUniquelyReferenced_nonNull_native;
      v371 = v237;
      v238 = __clz(__rbit64(isUniquelyReferenced_nonNull_native)) | ((_QWORD)v237 << 6);
      goto LABEL_97;
    }
    v239 = (uint64_t)(v237 + 1);
    if (__OFADD__(v237, 1))
      goto LABEL_118;
    if (v239 >= (uint64_t)v369)
    {
LABEL_108:
      v273 = v54;
      v199 = v361;
      v196 = v362;
      goto LABEL_110;
    }
    v196 = v362;
    v240 = *(_QWORD *)&v363[8 * v239];
    v241 = (uint64_t)(v237 + 1);
    v199 = v361;
    if (!v240)
    {
      v241 = v239 + 1;
      if (v239 + 1 >= (uint64_t)v369)
        goto LABEL_109;
      v240 = *(_QWORD *)&v363[8 * v241];
      if (!v240)
      {
        v241 = v239 + 2;
        if (v239 + 2 >= (uint64_t)v369)
          goto LABEL_109;
        v240 = *(_QWORD *)&v363[8 * v241];
        if (!v240)
        {
          v241 = v239 + 3;
          if (v239 + 3 >= (uint64_t)v369)
            goto LABEL_109;
          v240 = *(_QWORD *)&v363[8 * v241];
          if (!v240)
            break;
        }
      }
    }
LABEL_96:
    v379 = (v240 - 1) & v240;
    v371 = (_BYTE *)v241;
    v238 = __clz(__rbit64(v240)) + (v241 << 6);
LABEL_97:
    v243 = *(_QWORD *)(v7 + 56);
    v244 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 32 * v238);
    v246 = *v244;
    v245 = v244[1];
    v248 = v244[2];
    v247 = v244[3];
    v249 = v377;
    v378 = *(uint64_t **)(v376 + 72);
    v250 = v364;
    sub_2452B792C(v243 + (_QWORD)v378 * v238, (uint64_t)&v364[*(int *)(v377 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    *v250 = v246;
    v250[1] = v245;
    v250[2] = v248;
    v250[3] = v247;
    v12 = (unint64_t)v374;
    sub_2452BC850((uint64_t)v250, (uint64_t)v374, (uint64_t *)&unk_25744F640);
    v251 = *(int *)(v249 + 48);
    v252 = v365;
    v253 = (uint64_t)v365 + v251;
    v254 = v12 + v251;
    v256 = *(Class *)v12;
    v255 = *(Class *)(v12 + 8);
    v257 = *(Class *)(v12 + 16);
    v258 = *(Class *)(v12 + 24);
    *v365 = *(Class *)v12;
    v252[1] = v255;
    v252[2] = v257;
    v252[3] = v258;
    sub_2452B792C(v254, v253, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    *(_QWORD *)&v402[0] = v256;
    *((_QWORD *)&v402[0] + 1) = v255;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2452B7B5C(v253, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    sub_245387B90();
    v259 = (uint64_t)v252 + *(int *)(v249 + 48);
    v260 = *(Class *)(v12 + 8);
    v18 = *(_QWORD *)(v12 + 16);
    v261 = *(Class *)(v12 + 24);
    *v252 = *(Class *)v12;
    v252[1] = v260;
    v252[2] = (Class)v18;
    v252[3] = v261;
    a2 = (uint64_t)type metadata accessor for ZoneVersion;
    sub_2452B792C(v254, v259, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    swift_bridgeObjectRetain();
    sub_245387B90();
    swift_bridgeObjectRelease();
    sub_2452B7B5C(v259, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    v262 = *((_QWORD *)&v402[0] + 1);
    v15 = *(_BYTE **)&v402[0];
    v263 = (uint64_t)&v366[*(int *)(v249 + 48)];
    sub_2452B792C(v254, v263, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    sub_2452B7AB8(v263, (uint64_t)v375, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    v54 = v380;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v402[0] = v54;
    v7 = sub_2452C1D98((uint64_t)v15, v262);
    v265 = v54[2].isa;
    v266 = (v264 & 1) == 0;
    v267 = (uint64_t)v265 + v266;
    if (__OFADD__(v265, v266))
    {
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      swift_once();
      goto LABEL_2;
    }
    v18 = v264;
    if ((uint64_t)v54[3].isa >= v267)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v54 = *(os_log_t *)&v402[0];
        if ((v264 & 1) != 0)
          goto LABEL_77;
      }
      else
      {
        sub_2452C88BC();
        v54 = *(os_log_t *)&v402[0];
        if ((v18 & 1) != 0)
          goto LABEL_77;
      }
    }
    else
    {
      sub_2452C4B30(v267, isUniquelyReferenced_nonNull_native);
      v268 = sub_2452C1D98((uint64_t)v15, v262);
      if ((v18 & 1) != (v269 & 1))
        goto LABEL_129;
      v7 = v268;
      v54 = *(os_log_t *)&v402[0];
      if ((v18 & 1) != 0)
      {
LABEL_77:
        sub_2452BC64C((uint64_t)v375, (uint64_t)v54[7].isa + v7 * (_QWORD)v378, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
        goto LABEL_78;
      }
    }
    v54[(v7 >> 6) + 8].isa = (Class)((uint64_t)v54[(v7 >> 6) + 8].isa | (1 << v7));
    v270 = (_QWORD *)((char *)v54[6].isa + 16 * v7);
    *v270 = v15;
    v270[1] = v262;
    sub_2452B7AB8((uint64_t)v375, (uint64_t)v54[7].isa + v7 * (_QWORD)v378, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    v271 = v54[2].isa;
    v235 = __OFADD__(v271, 1);
    v272 = (Class)((char *)v271 + 1);
    if (v235)
      goto LABEL_116;
    v54[2].isa = v272;
    swift_bridgeObjectRetain();
LABEL_78:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_245263F80((uint64_t)v374, (uint64_t *)&unk_25744F640);
    v7 = v372;
    v18 = v373;
    isUniquelyReferenced_nonNull_native = v379;
    v237 = v371;
  }
  v242 = v239 + 4;
  if (v242 >= (uint64_t)v369)
    goto LABEL_109;
  v240 = *(_QWORD *)&v363[8 * v242];
  if (v240)
  {
    v241 = v242;
    goto LABEL_96;
  }
  while (1)
  {
    v241 = v242 + 1;
    if (__OFADD__(v242, 1))
      goto LABEL_122;
    if (v241 >= (uint64_t)v369)
      break;
    v240 = *(_QWORD *)&v363[8 * v241];
    ++v242;
    if (v240)
      goto LABEL_96;
  }
LABEL_109:
  v273 = v54;
LABEL_110:
  swift_release();
  swift_bridgeObjectRelease();
  sub_245269928((uint64_t)&v403);
  v274 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v196 + 16);
  v275 = v348;
  v276 = v353;
  v277 = v355;
  v274(v348, v353, v355);
  v278 = v343;
  v279 = &v275[*(int *)(v343 + 20)];
  v280 = v352;
  *v279 = v354;
  v279[1] = v280;
  v281 = (__int128 *)&v275[*(int *)(v278 + 24)];
  v282 = v420;
  v281[6] = v419;
  v281[7] = v282;
  v283 = v422;
  v281[8] = v421;
  v281[9] = v283;
  v284 = v416;
  v281[2] = v415;
  v281[3] = v284;
  v285 = v418;
  v281[4] = v417;
  v281[5] = v285;
  v286 = v414;
  *v281 = v413;
  v281[1] = v286;
  *(_QWORD *)&v275[*(int *)(v278 + 28)] = v273;
  v287 = v349;
  sub_2452B792C((uint64_t)v275, (uint64_t)v349, type metadata accessor for ReplicatorMessage.Handshake.Request);
  swift_storeEnumTagMultiPayload();
  sub_2452B792C((uint64_t)v287, (uint64_t)v199, type metadata accessor for ReplicatorMessage.Handshake);
  swift_storeEnumTagMultiPayload();
  v288 = (uint64_t)v341;
  v274(v341, v276, v277);
  v289 = v351;
  v290 = (uint64_t *)(v288 + *(int *)(v351 + 20));
  v291 = v323;
  *v290 = v18;
  v290[1] = v291;
  v292 = (uint64_t)v339;
  v274(v339, v276, v277);
  v293 = v342;
  sub_2452B792C(v288, (uint64_t)v342, type metadata accessor for Replicator.Session);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v350 + 56))(v293, 0, 1, v289);
  v294 = v370;
  swift_beginAccess();
  sub_2452B7D58((uint64_t)v322);
  sub_24526B470(v354, v280);
  sub_24526432C((uint64_t)&v413);
  sub_24531C0B4((uint64_t)v293, v292);
  swift_endAccess();
  v295 = v294;
  sub_2452B7B5C(v288, type metadata accessor for Replicator.Session);
  sub_24526D8E4();
  v296 = v340;
  sub_2452BC89C((uint64_t)v358, (uint64_t)v340, (uint64_t *)&unk_25744FAD0);
  if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v324)(v296, 1, v357) == 1)
  {
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
    goto LABEL_127;
  }
  v297 = (unint64_t)v335;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v196 + 56))(v335, 1, 1, v355);
  v298 = v337;
  sub_245285964((uint64_t)v199, (uint64_t)v296, v297, (uint64_t)v337);
  v299 = (uint64_t)v338;
  sub_245263F80(v297, &qword_25440C700);
  sub_2452B7B5C((uint64_t)v296, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v334 + 56))(v298, 0, 1, v336);
  sub_2452B7AB8((uint64_t)v298, v299, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  v380 = *(os_log_t *)(v295 + 184);
  v300 = sub_2453875E4();
  v301 = (uint64_t)v326;
  (*(void (**)(NSObject *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v300 - 8) + 56))(v326, 1, 1, v300);
  v302 = v357;
  v303 = v358;
  if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v324)(v358, 1, v357) != 1)
  {
    ObjectType = swift_getObjectType();
    v305 = &v303[*(int *)(v302 + 20)];
    v306 = v305[7];
    v307 = v305[5];
    v398 = v305[6];
    v399 = v306;
    v308 = v305[7];
    v309 = v305[9];
    v400 = v305[8];
    v401 = v309;
    v310 = v305[3];
    v311 = v305[1];
    v394 = v305[2];
    v395 = v310;
    v312 = v305[3];
    v313 = v305[5];
    v396 = v305[4];
    v397 = v313;
    v314 = v305[1];
    v393[0] = *v305;
    v393[1] = v314;
    v389 = v398;
    v390 = v308;
    v315 = v305[9];
    v391 = v400;
    v392 = v315;
    v385 = v394;
    v386 = v312;
    v387 = v396;
    v388 = v307;
    v383 = v393[0];
    v384 = v311;
    v382 = 0;
    v381[0] = 0x403E000000000000;
    v381[1] = 0;
    v316 = swift_allocObject();
    *(_QWORD *)(v316 + 16) = v295;
    v317 = v322;
    v318 = v322[1];
    *(_OWORD *)(v316 + 24) = *v322;
    *(_OWORD *)(v316 + 40) = v318;
    v319 = v356;
    *(_QWORD *)(v316 + 56) = *((_QWORD *)v317 + 4);
    *(_QWORD *)(v316 + 64) = v319;
    *(_BYTE *)(v316 + 72) = v321;
    swift_retain();
    sub_2452B7D58((uint64_t)v317);
    sub_24526432C((uint64_t)v393);
    sub_245299680(v299, v301, &v383, &v382, v381, (uint64_t)sub_2452B7DD4, v316, ObjectType, (uint64_t)v380);
    swift_release();
    sub_245269928((uint64_t)&v413);
    v402[6] = v389;
    v402[7] = v390;
    v402[8] = v391;
    v402[9] = v392;
    v402[2] = v385;
    v402[3] = v386;
    v402[4] = v387;
    v402[5] = v388;
    v402[0] = v383;
    v402[1] = v384;
    sub_245269928((uint64_t)v402);
    sub_245263F80(v301, &qword_25744F610);
    sub_2452B7B5C(v299, (uint64_t (*)(_QWORD))type metadata accessor for Message);
    sub_2452B7B5C((uint64_t)v361, type metadata accessor for ReplicatorMessage);
    sub_2452B7B5C((uint64_t)v349, type metadata accessor for ReplicatorMessage.Handshake);
    sub_2452B7B5C((uint64_t)v348, type metadata accessor for ReplicatorMessage.Handshake.Request);
    (*(void (**)(_BYTE *, uint64_t))(v362 + 8))(v353, v355);
    sub_245263F80((uint64_t)v303, (uint64_t *)&unk_25744FAD0);
    return;
  }
LABEL_127:
  __break(1u);
LABEL_128:
  sub_245263F80((uint64_t)v358, (uint64_t *)&unk_25744FAD0);
  __break(1u);
LABEL_129:
  sub_2453883DC();
  __break(1u);
}

uint64_t sub_245297B78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _BYTE *v26;
  void (*v27)(uint64_t *);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;

  v3 = v2;
  v40 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PairingRelationship();
  v38 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v39 = (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2453879D4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(v3 + 232);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEE5610], v10);
  v15 = v14;
  v16 = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v16 & 1) != 0)
  {
    result = swift_beginAccess();
    v18 = *(_QWORD *)(v3 + 520);
    if (*(_QWORD *)(v18 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19 = sub_2452C1D98(v40, a2);
      if ((v20 & 1) != 0)
      {
        v34 = v3 + 520;
        v21 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
        swift_bridgeObjectRetain();
        v37 = a2;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v35 = v21;
        v22 = *(_QWORD *)(v21 + 16);
        if (v22)
        {
          v23 = v3 + 192;
          swift_beginAccess();
          v36 = v39 + 8;
          v24 = v35 + 40;
          do
          {
            v27 = *(void (**)(uint64_t *))(v24 - 8);
            sub_24525E4F0(v23, (uint64_t)&v41);
            v28 = v43;
            v29 = v44;
            __swift_project_boxed_opaque_existential_1(&v41, v43);
            v30 = *(_QWORD *)(v29 + 8);
            swift_retain();
            MetadataStoring.pairingRelationship(remoteDeviceID:)(v40, v37, v28, v30, (uint64_t)v7);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v7, 1, v8) == 1)
            {
              sub_245263F80((uint64_t)v7, (uint64_t *)&unk_25744FAD0);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
              sub_2452B9768();
              v25 = (void *)swift_allocError();
              *v26 = 2;
              v41 = (uint64_t)v25;
              v42 = 1;
              v27(&v41);

              swift_release();
            }
            else
            {
              sub_2452B7AB8((uint64_t)v7, v39, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
              if (*(_QWORD *)(v36 + *(int *)(v8 + 32)) == 2)
              {
                v41 = 1;
                v42 = 0;
                v27(&v41);
              }
              else
              {
                sub_2452B9768();
                v31 = (void *)swift_allocError();
                *v32 = 2;
                v41 = (uint64_t)v31;
                v42 = 1;
                v27(&v41);

              }
              swift_release();
              sub_2452B7B5C(v39, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
            }
            v24 += 16;
            --v22;
          }
          while (v22);
        }
        swift_bridgeObjectRelease();
        swift_beginAccess();
        v33 = v37;
        swift_bridgeObjectRetain();
        sub_24532776C(v40, v33);
        swift_endAccess();
      }
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_245297F54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452E80);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Replicator.Session(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2453879D4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(v1 + 232);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEE5610], v10);
  v15 = v14;
  LOBYTE(v14) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0)
  {
    v17 = type metadata accessor for PairingRelationship();
    sub_245298A50(*(_QWORD *)(a1 + *(int *)(v17 + 20)), *(_QWORD *)(a1 + *(int *)(v17 + 20) + 8), (uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      return sub_245263F80((uint64_t)v5, &qword_257452E80);
    }
    else
    {
      sub_2452B7AB8((uint64_t)v5, (uint64_t)v9, type metadata accessor for Replicator.Session);
      sub_2452A1A00((uint64_t)v9);
      return sub_2452B7B5C((uint64_t)v9, type metadata accessor for Replicator.Session);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_245298100@<X0>(_OWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  char v20;
  char v21;
  __int128 v22;
  void *v23;
  uint64_t v24;
  void (*v25)(_QWORD *, uint64_t, uint64_t);
  id v26;
  char v27;
  uint64_t (*v28)(_QWORD *, uint64_t);
  uint64_t result;
  uint64_t v30;
  id v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  _BYTE v50[8];
  _OWORD v51[2];
  char v52;
  char v53;
  char v54;
  __int128 v55;

  v2 = (uint64_t)v1;
  v49 = a1;
  v3 = sub_2453879D4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (v1[32])
  {
    v7 = v1[31];
    v47 = v1[32];
    v48 = v7;
  }
  else
  {
    v8 = v1[23];
    ObjectType = swift_getObjectType();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
    v12 = 0x80000002453930B0;
    v13 = 0xD000000000000016;
    if (v11)
    {
      v13 = v10;
      v12 = v11;
    }
    v47 = v12;
    v48 = v13;
  }
  swift_bridgeObjectRetain();
  v14 = sub_2452C1C64();
  if (v15)
  {
    v16 = v15;
    v46 = v14;
  }
  else
  {
    v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1760]), sel_init);
    v18 = objc_msgSend(v17, sel_hostName);
    v46 = sub_245387B18();
    v16 = v19;

  }
  v55 = xmmword_24538A080;
  v54 = *(_BYTE *)(v2 + 96);
  v20 = *(_BYTE *)(v2 + 136);
  v21 = *(_BYTE *)(v2 + 137);
  v22 = *(_OWORD *)(v2 + 120);
  v51[0] = *(_OWORD *)(v2 + 104);
  v51[1] = v22;
  v52 = v20;
  v53 = v21;
  v23 = *(void **)(v2 + 232);
  *v6 = v23;
  v24 = *MEMORY[0x24BEE5610];
  v25 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v4 + 104);
  v25(v6, v24, v3);
  v26 = v23;
  v27 = sub_2453879F8();
  v28 = *(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8);
  result = v28(v6, v3);
  if ((v27 & 1) != 0)
  {
    swift_beginAccess();
    swift_retain();
    v30 = swift_bridgeObjectRetain();
    v45 = sub_2452B48D8(v30, v2);
    swift_bridgeObjectRelease();
    swift_release();
    *v6 = v26;
    v25(v6, v24, v3);
    v31 = v26;
    v32 = sub_2453879F8();
    result = v28(v6, v3);
    if ((v32 & 1) != 0)
    {
      swift_beginAccess();
      swift_retain();
      v33 = swift_bridgeObjectRetain();
      v34 = sub_2452BC390(v33, v2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_2452B4D30);
      swift_bridgeObjectRelease();
      swift_release();
      v35 = sub_2452739EC(v34, (uint64_t)v50, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_24532C580, sub_245330EE4);
      swift_release();
      v36 = *(_QWORD *)(v2 + 568);
      v37 = *(_QWORD *)(v2 + 576);
      sub_245261C30(v36, v37);
      v38 = sub_2452C1C64();
      v40 = v39;
      *(_QWORD *)&v43 = sub_2452C1C64();
      *((_QWORD *)&v43 + 1) = v41;
      *(_QWORD *)&v42 = v38;
      *((_QWORD *)&v42 + 1) = v40;
      return DeviceDescriptor.init(id:name:protocolVersion:deviceType:screenDescriptor:zones:messageTypes:idsIdentityBlob:marketingName:productType:)(v48, v47, v46, v16, (uint64_t *)&v55, &v54, (uint64_t *)v51, v45, v49, v35, v36, v37, v42, v43);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_245298420(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int isUniquelyReferenced_nonNull_native;
  char v53;
  unint64_t v54;
  uint64_t v55;
  _BOOL8 v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  char v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t result;
  int64_t v68;
  uint64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t *v72;
  int64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  _QWORD v77[3];
  uint64_t v78;
  uint64_t v79;

  v2 = v1;
  v4 = type metadata accessor for ZoneVersion();
  v74 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452328);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (int64_t *)((char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v72 = (int64_t *)((char *)&v68 - v11);
  v12 = sub_2453879D4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (int64_t *)((char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(void **)(v2 + 232);
  *v15 = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE5610], v12);
  v17 = v16;
  LOBYTE(v16) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) == 0)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  swift_beginAccess();
  v18 = *(_QWORD *)(v2 + 240);
  swift_retain();
  swift_bridgeObjectRetain();
  v76 = sub_2452B85CC(MEMORY[0x24BEE4B00], v18, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_beginAccess();
  sub_24525E4F0(v2 + 192, (uint64_t)v77);
  v19 = v78;
  v20 = v79;
  __swift_project_boxed_opaque_existential_1(v77, v78);
  v21 = MetadataStoring.zoneVersions(for:)(a1, v19, *(_QWORD *)(v20 + 8));
  swift_retain();
  v22 = sub_2452BC390(v21, v2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_2452B944C);
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
  v73 = 0;
  v23 = *(_QWORD *)(v22 + 64);
  v69 = v22 + 64;
  v24 = 1 << *(_BYTE *)(v22 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v23;
  v70 = (unint64_t)(v24 + 63) >> 6;
  v71 = v22;
  v68 = v70 - 1;
  v27 = v72;
  while (1)
  {
    if (v26)
    {
      v29 = __clz(__rbit64(v26));
      v30 = (v26 - 1) & v26;
      v31 = v29 | (v73 << 6);
LABEL_9:
      v32 = *(_QWORD *)(v71 + 56);
      v33 = (_QWORD *)(*(_QWORD *)(v71 + 48) + 32 * v31);
      v34 = v33[1];
      v35 = v33[2];
      v36 = v33[3];
      *v10 = *v33;
      v10[1] = v34;
      v10[2] = v35;
      v10[3] = v36;
      v37 = v32 + *(_QWORD *)(v74 + 72) * v31;
      v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744F640);
      sub_2452B792C(v37, (uint64_t)v10 + *(int *)(v38 + 48), (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v10, 0, 1, v38);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
    v39 = v73 + 1;
    if (__OFADD__(v73, 1))
      goto LABEL_41;
    if (v39 < v70)
    {
      v40 = *(_QWORD *)(v69 + 8 * v39);
      if (v40)
        goto LABEL_13;
      v41 = v73 + 2;
      ++v73;
      if (v39 + 1 < v70)
      {
        v40 = *(_QWORD *)(v69 + 8 * v41);
        if (v40)
          goto LABEL_16;
        v73 = v39 + 1;
        if (v39 + 2 < v70)
        {
          v40 = *(_QWORD *)(v69 + 8 * (v39 + 2));
          if (v40)
          {
            v39 += 2;
            goto LABEL_13;
          }
          v41 = v39 + 3;
          v73 = v39 + 2;
          if (v39 + 3 < v70)
            break;
        }
      }
    }
LABEL_27:
    v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744F640);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v10, 1, 1, v42);
    v30 = 0;
LABEL_28:
    sub_2452BC850((uint64_t)v10, (uint64_t)v27, &qword_257452328);
    v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744F640);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v27, 1, v43) == 1)
    {
      swift_release();
      return v76;
    }
    v75 = v30;
    v44 = v10;
    v45 = *v27;
    v46 = v27[1];
    v47 = v27[2];
    v48 = v27[3];
    v49 = (uint64_t)v27 + *(int *)(v43 + 48);
    v50 = (uint64_t)v6;
    sub_2452B7AB8(v49, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    v51 = v76;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v77[0] = v51;
    v54 = sub_2452C1EB4(v45, v46, v47, v48);
    v55 = *(_QWORD *)(v51 + 16);
    v56 = (v53 & 1) == 0;
    v57 = v55 + v56;
    if (__OFADD__(v55, v56))
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    v58 = v53;
    if (*(_QWORD *)(v51 + 24) >= v57)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_2452C8B00();
    }
    else
    {
      sub_2452C4EB8(v57, isUniquelyReferenced_nonNull_native);
      v59 = sub_2452C1EB4(v45, v46, v47, v48);
      if ((v58 & 1) != (v60 & 1))
        goto LABEL_44;
      v54 = v59;
    }
    v61 = (_QWORD *)v77[0];
    v76 = v77[0];
    if ((v58 & 1) != 0)
    {
      v28 = *(_QWORD *)(v77[0] + 56) + *(_QWORD *)(v74 + 72) * v54;
      v6 = (char *)v50;
      sub_2452BC64C(v50, v28, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    }
    else
    {
      *(_QWORD *)(v77[0] + 8 * (v54 >> 6) + 64) |= 1 << v54;
      v62 = (uint64_t *)(v61[6] + 32 * v54);
      *v62 = v45;
      v62[1] = v46;
      v62[2] = v47;
      v62[3] = v48;
      v63 = v61[7] + *(_QWORD *)(v74 + 72) * v54;
      v6 = (char *)v50;
      sub_2452B7AB8(v50, v63, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      v64 = v61[2];
      v65 = __OFADD__(v64, 1);
      v66 = v64 + 1;
      if (v65)
        goto LABEL_40;
      v61[2] = v66;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v44;
    v27 = v72;
    v26 = v75;
  }
  v40 = *(_QWORD *)(v69 + 8 * v41);
  if (v40)
  {
LABEL_16:
    v39 = v41;
LABEL_13:
    v30 = (v40 - 1) & v40;
    v31 = __clz(__rbit64(v40)) + (v39 << 6);
    v73 = v39;
    goto LABEL_9;
  }
  while (1)
  {
    v39 = v41 + 1;
    if (__OFADD__(v41, 1))
      break;
    if (v39 >= v70)
    {
      v73 = v68;
      goto LABEL_27;
    }
    v40 = *(_QWORD *)(v69 + 8 * v39);
    ++v41;
    if (v40)
      goto LABEL_13;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  result = sub_2453883DC();
  __break(1u);
  return result;
}

uint64_t sub_245298A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v48 = a2;
  v44 = a3;
  v49 = type metadata accessor for Replicator.Session(0);
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452318);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v43 - v11;
  v13 = sub_2453879D4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (int64_t *)((char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)(v3 + 232);
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BEE5610], v13);
  v18 = v17;
  LOBYTE(v17) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) == 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  swift_beginAccess();
  v20 = *(_QWORD *)(v3 + 512);
  v21 = *(_QWORD *)(v20 + 64);
  v45 = v20 + 64;
  v22 = 1 << *(_BYTE *)(v20 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v46 = (unint64_t)(v22 + 63) >> 6;
  v43 = v46 - 1;
  result = swift_bridgeObjectRetain();
  v25 = 0;
  v26 = v48;
  if (!v24)
    goto LABEL_7;
LABEL_5:
  v27 = __clz(__rbit64(v24));
  v24 &= v24 - 1;
  v28 = v27 | (v25 << 6);
  while (2)
  {
    v29 = *(_QWORD *)(v20 + 48);
    v30 = sub_245387740();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v10, v29 + *(_QWORD *)(*(_QWORD *)(v30 - 8) + 72) * v28, v30);
    v31 = *(_QWORD *)(v20 + 56) + *(_QWORD *)(v47 + 72) * v28;
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452320);
    sub_2452B792C(v31, (uint64_t)&v10[*(int *)(v32 + 48)], type metadata accessor for Replicator.Session);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v10, 0, 1, v32);
    v26 = v48;
    while (1)
    {
      sub_2452BC850((uint64_t)v10, (uint64_t)v12, &qword_257452318);
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452320);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v12, 1, v37) == 1)
      {
        swift_release();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v44, 1, 1, v49);
      }
      sub_2452B7AB8((uint64_t)&v12[*(int *)(v37 + 48)], (uint64_t)v6, type metadata accessor for Replicator.Session);
      v38 = &v6[*(int *)(v49 + 20)];
      v39 = *(_QWORD *)v38 == a1 && *((_QWORD *)v38 + 1) == v26;
      if (v39 || (sub_245388274() & 1) != 0)
      {
        swift_release();
        v41 = v44;
        sub_2452B7AB8((uint64_t)v6, v44, type metadata accessor for Replicator.Session);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v41, 0, 1, v49);
        v42 = sub_245387740();
        return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v12, v42);
      }
      sub_2452B7B5C((uint64_t)v6, type metadata accessor for Replicator.Session);
      v40 = sub_245387740();
      result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v12, v40);
      if (v24)
        goto LABEL_5;
LABEL_7:
      v33 = v25 + 1;
      if (__OFADD__(v25, 1))
      {
        __break(1u);
        goto LABEL_36;
      }
      if (v33 < v46)
      {
        v34 = *(_QWORD *)(v45 + 8 * v33);
        if (v34)
          goto LABEL_10;
        v35 = v25 + 2;
        ++v25;
        if (v33 + 1 < v46)
        {
          v34 = *(_QWORD *)(v45 + 8 * v35);
          if (v34)
            goto LABEL_13;
          v25 = v33 + 1;
          if (v33 + 2 < v46)
          {
            v34 = *(_QWORD *)(v45 + 8 * (v33 + 2));
            if (v34)
            {
              v33 += 2;
              goto LABEL_10;
            }
            v35 = v33 + 3;
            v25 = v33 + 2;
            if (v33 + 3 < v46)
              break;
          }
        }
      }
LABEL_24:
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452320);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v10, 1, 1, v36);
      v24 = 0;
    }
    v34 = *(_QWORD *)(v45 + 8 * v35);
    if (v34)
    {
LABEL_13:
      v33 = v35;
LABEL_10:
      v24 = (v34 - 1) & v34;
      v28 = __clz(__rbit64(v34)) + (v33 << 6);
      v25 = v33;
      continue;
    }
    break;
  }
  while (1)
  {
    v33 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v33 >= v46)
    {
      v25 = v43;
      goto LABEL_24;
    }
    v34 = *(_QWORD *)(v45 + 8 * v33);
    ++v35;
    if (v34)
      goto LABEL_10;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_245298F04(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __int128 v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v12 = sub_245387920();
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_245387950();
  v15 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(a3 + 232);
  v18 = swift_allocObject();
  v19 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v18 + 40) = *(_OWORD *)a4;
  *(_QWORD *)(v18 + 16) = a1;
  a2 &= 1u;
  *(_BYTE *)(v18 + 24) = a2;
  *(_QWORD *)(v18 + 32) = a3;
  *(_OWORD *)(v18 + 56) = v19;
  *(_QWORD *)(v18 + 72) = *(_QWORD *)(a4 + 32);
  *(_QWORD *)(v18 + 80) = a5;
  *(_BYTE *)(v18 + 88) = a6;
  aBlock[4] = sub_2452B7E98;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525DD34;
  aBlock[3] = &block_descriptor_298;
  v20 = _Block_copy(aBlock);
  sub_245263EDC(a1, a2);
  swift_retain();
  sub_2452B7D58(a4);
  sub_245387938();
  v25 = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
  sub_245387E3C();
  MEMORY[0x2495320E4](0, v17, v14, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v12);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v23);
  return swift_release();
}

void sub_245299140(void *a1, char a2, _QWORD *a3, uint64_t a4, uint64_t a5, char a6)
{
  id v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  BOOL v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  id v42[2];
  __int128 v43;
  uint64_t v44;
  char v45;

  if ((a2 & 1) == 0)
    return;
  v42[0] = a1;
  v11 = a1;
  v12 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440C868);
  if (!swift_dynamicCast() || v45 != 2)
  {

    if (qword_25744FD90 != -1)
      swift_once();
    v22 = sub_245387818();
    __swift_project_value_buffer(v22, (uint64_t)qword_257462FB0);
    sub_245263EDC(a1, 1);
    sub_245263EDC(a1, 1);
    swift_retain();
    v23 = sub_2453877F4();
    v24 = sub_245387D1C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v26 = (void *)swift_slowAlloc();
      v42[0] = v26;
      *(_DWORD *)v25 = 136446466;
      v39 = a4;
      v37 = a6;
      v27 = a3[61];
      v28 = a3[62];
      swift_bridgeObjectRetain();
      sub_2453816D8(v27, v28, (uint64_t *)v42);
      sub_245387E0C();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2082;
      v29 = a1;
      v30 = sub_245387B48();
      v40 = sub_2453816D8(v30, v31, (uint64_t *)v42);
      a4 = v39;
      sub_245387E0C();
      a6 = v37;
      swift_bridgeObjectRelease();
      sub_245263EE8(a1, 1);
      sub_245263EE8(a1, 1);
      _os_log_impl(&dword_245256000, v23, v24, "(%{public}s) Error sending handshake request: %{public}s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v26, -1, -1);
      MEMORY[0x24953317C](v25, -1, -1);
    }
    else
    {
      swift_release();
      sub_245263EE8(a1, 1);
      sub_245263EE8(a1, 1);
    }

    v32 = a3 + 48;
    v34 = a3[51];
    v33 = a3[52];
    __swift_project_boxed_opaque_existential_1(v32, v34);
    v35 = *(_OWORD *)(a4 + 16);
    *(_OWORD *)v42 = *(_OWORD *)a4;
    v43 = v35;
    v44 = *(_QWORD *)(a4 + 32);
    if (a6)
    {
      if (a6 != 1)
        goto LABEL_19;
      v36 = __OFADD__(a5++, 1);
      if (!v36)
        goto LABEL_19;
      __break(1u);
    }
    v36 = __OFADD__(a5++, 1);
    if (v36)
    {
      __break(1u);
      return;
    }
LABEL_19:
    v40 = a5;
    v41 = a6;
    (*(void (**)(id *, uint64_t *, uint64_t, uint64_t))(v33 + 16))(v42, &v40, v34, v33);
    sub_245263EE8(a1, 1);
    return;
  }
  if (qword_25744FD90 != -1)
    swift_once();
  v13 = sub_245387818();
  __swift_project_value_buffer(v13, (uint64_t)qword_257462FB0);
  sub_245263EDC(a1, 1);
  sub_245263EDC(a1, 1);
  swift_retain();
  v14 = sub_2453877F4();
  v15 = sub_245387D34();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    v40 = v38;
    *(_DWORD *)v16 = 136446466;
    v18 = a3[61];
    v17 = a3[62];
    swift_bridgeObjectRetain();
    sub_2453816D8(v18, v17, &v40);
    sub_245387E0C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    v19 = a1;
    v20 = sub_245387B48();
    sub_2453816D8(v20, v21, &v40);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    sub_245263EE8(a1, 1);
    sub_245263EE8(a1, 1);
    _os_log_impl(&dword_245256000, v14, v15, "(%{public}s) Handshake request blocked by allow list: %{public}s.", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v38, -1, -1);
    MEMORY[0x24953317C](v16, -1, -1);
  }
  else
  {
    swift_release();
    sub_245263EE8(a1, 1);
    sub_245263EE8(a1, 1);
  }

  sub_245297B78(*(_QWORD *)a4, *(_QWORD *)(a4 + 8));
  sub_245263EE8(a1, 1);

}

uint64_t sub_245299680(uint64_t a1, uint64_t a2, __int128 *a3, char *a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  unint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, char *, __int128 *, _QWORD *, void (*)(void *, char), uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, __int128 *, char *, _QWORD *, void (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  char v40;
  __int128 v41;
  __int128 v42;
  unint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;

  v38 = a8;
  v35 = a2;
  v36 = a6;
  v37 = a1;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a3[1];
  v59 = *a3;
  v60 = v16;
  v18 = *((_QWORD *)a3 + 4);
  v17 = *((_QWORD *)a3 + 5);
  v19 = a3[8];
  v56 = a3[7];
  v57 = v19;
  v58 = a3[9];
  v20 = a3[4];
  v52 = a3[3];
  v53 = v20;
  v21 = a3[6];
  v54 = a3[5];
  v55 = v21;
  v22 = *a4;
  if (v18 >= 7)
  {
    v27 = a5[1];
    v28 = *a5;
    v29 = a3[1];
    v41 = *a3;
    v42 = v29;
    v43 = v18;
    v44 = v17;
    v30 = a3[8];
    v49 = a3[7];
    v50 = v30;
    v51 = a3[9];
    v31 = a3[4];
    v45 = a3[3];
    v46 = v31;
    v32 = a3[6];
    v47 = a3[5];
    v48 = v32;
    v40 = v22;
    v39[0] = v28;
    v39[1] = v27;
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = v36;
    *(_QWORD *)(v33 + 24) = a7;
    v34 = *(void (**)(uint64_t, uint64_t, __int128 *, char *, _QWORD *, void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(a9 + 48);
    swift_retain();
    v34(v37, v35, &v41, &v40, v39, sub_2452B7E4C, v33, v38, a9);
    return swift_release();
  }
  else
  {
    v23 = sub_2453875E4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v15, 1, 1, v23);
    v41 = v59;
    v42 = v60;
    v43 = v18;
    v44 = v17;
    v49 = v56;
    v50 = v57;
    v51 = v58;
    v45 = v52;
    v46 = v53;
    v47 = v54;
    v48 = v55;
    LOBYTE(v39[0]) = v22;
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = v36;
    *(_QWORD *)(v24 + 24) = a7;
    v25 = *(void (**)(uint64_t, char *, __int128 *, _QWORD *, void (*)(void *, char), uint64_t, uint64_t, uint64_t))(a9 + 40);
    swift_retain();
    v25(v37, v15, &v41, v39, sub_2452B7E54, v24, v38, a9);
    swift_release();
    return sub_245263F80((uint64_t)v15, &qword_25744F610);
  }
}

void sub_2452998C4(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  _BOOL4 v72;
  uint8_t *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t (*v77)();
  uint64_t (*v78)();
  uint64_t (*v79)();
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)();
  unint64_t v87;
  uint64_t (*v88)();
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _OWORD *v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  void (*v103)(unint64_t, uint64_t, uint64_t);
  _QWORD *v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t, uint64_t);
  uint64_t v110;
  int64_t v111;
  void (**v112)(unint64_t, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  int64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t *v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  unint64_t *v150;
  uint64_t v151;
  uint64_t (*v152)();
  char v153;
  uint64_t v154;
  _BOOL8 v155;
  uint64_t v156;
  char v157;
  unint64_t v158;
  char v159;
  _QWORD *v160;
  unint64_t *v161;
  uint64_t v162;
  BOOL v163;
  uint64_t v164;
  NSObject *v165;
  uint64_t v166;
  os_log_type_t v167;
  uint8_t *v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  uint64_t v173;
  unint64_t v174;
  int64_t v175;
  unint64_t v176;
  int64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _QWORD *v186;
  uint64_t v187;
  unint64_t *v188;
  uint64_t v189;
  uint64_t (*v190)();
  unint64_t *v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  unint64_t v195;
  unint64_t v196;
  uint64_t v197;
  unint64_t v198;
  unint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t (*v202)();
  int v203;
  unint64_t v204;
  uint64_t v205;
  _BOOL8 v206;
  uint64_t v207;
  unint64_t v208;
  char v209;
  _QWORD *v210;
  uint64_t *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  int64_t v220;
  unint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  _QWORD *v228;
  uint64_t v229;
  uint64_t v230;
  _QWORD *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t (**v234)();
  uint64_t v235;
  uint64_t (*v236)();
  uint64_t (*v237)();
  uint64_t v238;
  int v239;
  uint64_t v240;
  uint64_t v241;
  _BOOL8 v242;
  uint64_t v243;
  unint64_t v244;
  char v245;
  uint64_t (**v246)();
  unint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t (*v255)();
  unint64_t v256;
  int64_t v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t *v262;
  uint64_t v263;
  uint64_t v264;
  _QWORD *v265;
  uint64_t v266;
  _QWORD *v267;
  _QWORD *v268;
  uint64_t v269;
  uint64_t (*v270)();
  uint64_t v271;
  uint64_t v272;
  uint64_t (*v273)();
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v282;
  char v283;
  uint64_t v284;
  _BOOL8 v285;
  uint64_t v286;
  char v287;
  unint64_t v288;
  char v289;
  _QWORD *v290;
  _QWORD *v291;
  uint64_t v292;
  uint64_t v293;
  unint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  unint64_t v303;
  uint64_t v304;
  NSObject *v305;
  os_log_type_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  unint64_t v310;
  uint64_t v311;
  unint64_t v312;
  NSObject *v313;
  os_log_type_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  unint64_t v318;
  uint64_t v319;
  unint64_t v320;
  unint64_t v321;
  uint64_t v322;
  uint64_t v323;
  NSObject *v324;
  os_log_type_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  unint64_t v329;
  uint64_t v330;
  unint64_t v331;
  unint64_t v332;
  NSObject *v333;
  os_log_type_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  unint64_t v338;
  uint64_t v339;
  uint64_t v340;
  unint64_t v341;
  unint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t *v348;
  uint64_t v349;
  unint64_t v350;
  int *v351;
  uint64_t *v352;
  _OWORD *v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  unint64_t v359;
  uint64_t v360;
  unint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  __int128 v365;
  __int128 v366;
  __int128 v367;
  __int128 v368;
  __int128 v369;
  __int128 v370;
  __int128 v371;
  __int128 v372;
  __int128 v373;
  __int128 v374;
  uint64_t v375;
  unint64_t v376;
  uint64_t v377;
  _OWORD *v378;
  __int128 *v379;
  void (*v380)(unint64_t, uint64_t, uint64_t);
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  unint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  char *v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  unint64_t v396;
  uint64_t (*v397)(_QWORD);
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  unint64_t v401;
  uint64_t v402;
  uint64_t v403;
  int *v404;
  uint64_t v405;
  char *v406;
  char *v407;
  unint64_t *v408;
  unint64_t *v409;
  char *v410;
  uint64_t v411;
  char *v412;
  char *v413;
  _QWORD *v414;
  uint64_t (**v415)();
  char *v416;
  unint64_t *v417;
  uint64_t (*v418)();
  char *v419;
  _QWORD *v420;
  char *v421;
  int64_t v422;
  unint64_t v423;
  int64_t v424;
  uint64_t v425;
  uint64_t v426;
  unint64_t *v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t (*v432)();
  unint64_t v433;
  uint64_t ObjectType;
  uint64_t v435[2];
  char v436;
  __int128 v437;
  __int128 v438;
  __int128 v439;
  __int128 v440;
  __int128 v441;
  __int128 v442;
  __int128 v443;
  __int128 v444;
  __int128 v445;
  __int128 v446;
  __int128 v447;
  __int128 v448;
  __int128 v449;
  __int128 v450;
  __int128 v451;
  __int128 v452;
  __int128 v453;
  __int128 v454;
  __int128 v455;
  __int128 v456;
  __int128 v457;
  __int128 v458;
  __int128 v459;
  __int128 v460;
  __int128 v461;
  __int128 v462;
  __int128 v463;
  __int128 v464;
  __int128 v465;
  __int128 v466;
  _OWORD v467[2];
  __int128 v468;
  __int128 v469;
  __int128 v470;
  __int128 v471;
  __int128 v472;
  __int128 v473;
  __int128 v474;
  __int128 v475;
  _OWORD v476[10];
  _OWORD v477[2];
  __int128 v478;
  __int128 v479;
  __int128 v480;
  __int128 v481;
  __int128 v482;
  __int128 v483;
  __int128 v484;
  __int128 v485;

  v429 = a3;
  v404 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  v381 = *((_QWORD *)v404 - 1);
  MEMORY[0x24BDAC7A8](v404);
  v382 = v5;
  v383 = (uint64_t)&v378 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (unint64_t)&v378 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v9);
  v392 = (char *)&v378 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452C90);
  MEMORY[0x24BDAC7A8](v11);
  v393 = (uint64_t)&v378 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Message();
  v394 = *(_QWORD *)(v13 - 8);
  v395 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v384 = (uint64_t)&v378 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v391 = type metadata accessor for ReplicatorMessage(0);
  MEMORY[0x24BDAC7A8](v391);
  v16 = (uint64_t (*)(_QWORD))((char *)&v378 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v390 = type metadata accessor for ReplicatorMessage.Handshake(0);
  MEMORY[0x24BDAC7A8](v390);
  v18 = (uint64_t)&v378 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v389 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  MEMORY[0x24BDAC7A8](v389);
  v20 = (unint64_t)&v378 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v430 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF80);
  v21 = MEMORY[0x24BDAC7A8](v430);
  v406 = (char *)&v378 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v407 = (char *)&v378 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v412 = (char *)&v378 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v415 = (uint64_t (**)())((char *)&v378 - v28);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v414 = (_OWORD **)((char *)&v378 - v30);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v425 = (uint64_t)&v378 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v413 = (char *)&v378 - v33;
  v387 = type metadata accessor for ZoneVersion();
  ObjectType = *(_QWORD *)(v387 - 8);
  v34 = MEMORY[0x24BDAC7A8](v387);
  v411 = (uint64_t)&v378 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v426 = (uint64_t)&v378 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v428 = (uint64_t)&v378 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v423 = (unint64_t)&v378 - v40;
  v431 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744F640);
  v41 = MEMORY[0x24BDAC7A8](v431);
  v418 = (uint64_t (*)())((char *)&v378 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = MEMORY[0x24BDAC7A8](v41);
  v417 = (unint64_t *)((char *)&v378 - v44);
  v45 = MEMORY[0x24BDAC7A8](v43);
  v427 = (unint64_t *)((char *)&v378 - v46);
  v47 = MEMORY[0x24BDAC7A8](v45);
  v416 = (char *)&v378 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v409 = (unint64_t *)((char *)&v378 - v50);
  v51 = MEMORY[0x24BDAC7A8](v49);
  v408 = (unint64_t *)((char *)&v378 - v52);
  v53 = MEMORY[0x24BDAC7A8](v51);
  v420 = (_OWORD **)((char *)&v378 - v54);
  v55 = MEMORY[0x24BDAC7A8](v53);
  v410 = (char *)&v378 - v56;
  MEMORY[0x24BDAC7A8](v55);
  v419 = (char *)&v378 - v57;
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452E80);
  MEMORY[0x24BDAC7A8](v58);
  v433 = (unint64_t)&v378 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_245387740();
  v399 = *(_QWORD *)(v60 - 8);
  v400 = v60;
  MEMORY[0x24BDAC7A8](v60);
  v432 = (uint64_t (*)())((char *)&v378 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
  v424 = type metadata accessor for Replicator.Session(0);
  v422 = *(_QWORD *)(v424 - 8);
  MEMORY[0x24BDAC7A8](v424);
  v421 = (char *)&v378 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v402 = type metadata accessor for PairingRelationship();
  v63 = MEMORY[0x24BDAC7A8](v402);
  v386 = (uint64_t)&v378 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = MEMORY[0x24BDAC7A8](v63);
  v388 = (uint64_t)&v378 - v66;
  MEMORY[0x24BDAC7A8](v65);
  v403 = (uint64_t)&v378 - v67;
  if (qword_25744FD90 != -1)
    goto LABEL_182;
  while (1)
  {
    v68 = sub_245387818();
    v69 = __swift_project_value_buffer(v68, (uint64_t)qword_257462FB0);
    swift_retain();
    v405 = v69;
    v70 = sub_2453877F4();
    v71 = sub_245387D34();
    v72 = os_log_type_enabled(v70, v71);
    v385 = v8;
    v397 = v16;
    v398 = v18;
    v396 = v20;
    if (v72)
    {
      v73 = (uint8_t *)swift_slowAlloc();
      v74 = swift_slowAlloc();
      *(_QWORD *)&v477[0] = v74;
      *(_DWORD *)v73 = 136446210;
      v380 = (void (*)(unint64_t, uint64_t, uint64_t))(v73 + 4);
      v76 = *(_QWORD *)(a2 + 488);
      v75 = *(_QWORD *)(a2 + 496);
      swift_bridgeObjectRetain();
      *(_QWORD *)&v476[0] = sub_2453816D8(v76, v75, (uint64_t *)v477);
      sub_245387E0C();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v70, v71, "(%{public}s) Sending handshake response", v73, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v74, -1, -1);
      MEMORY[0x24953317C](v73, -1, -1);

      if (a1)
        goto LABEL_4;
    }
    else
    {

      swift_release();
      if (a1)
      {
LABEL_4:
        v77 = a1;
        swift_retain();
        v78 = a1;
        swift_retain();
        v79 = a1;
        v80 = sub_2453877F4();
        v81 = sub_245387D34();
        if (os_log_type_enabled(v80, v81))
        {
          v82 = swift_slowAlloc();
          v83 = (_QWORD *)swift_slowAlloc();
          v84 = a2;
          ObjectType = swift_slowAlloc();
          *(_QWORD *)&v477[0] = ObjectType;
          *(_DWORD *)v82 = 136446466;
          v85 = *(_QWORD *)(a2 + 488);
          v86 = a1;
          v87 = *(_QWORD *)(v84 + 496);
          swift_bridgeObjectRetain();
          *(_QWORD *)&v476[0] = sub_2453816D8(v85, v87, (uint64_t *)v477);
          sub_245387E0C();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v82 + 12) = 2114;
          v88 = v86;
          v89 = _swift_stdlib_bridgeErrorToNSError();
          *(_QWORD *)&v476[0] = v89;
          sub_245387E0C();
          *v83 = v89;
          a1 = v86;

          _os_log_impl(&dword_245256000, v80, v81, "(%{public}s) Abandoning handshake response because prerequisites are not met: %{public}@", (uint8_t *)v82, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
          swift_arrayDestroy();
          MEMORY[0x24953317C](v83, -1, -1);
          v90 = ObjectType;
          swift_arrayDestroy();
          MEMORY[0x24953317C](v90, -1, -1);
          MEMORY[0x24953317C](v82, -1, -1);
        }
        else
        {
          swift_release_n();

        }
        sub_245297B78(*(_QWORD *)(v429 + v404[6]), *(_QWORD *)(v429 + v404[6] + 8));

        return;
      }
    }
    if ((*(_BYTE *)(a2 + 544) & 1) == 0)
    {
      swift_retain();
      v165 = sub_2453877F4();
      v166 = a2;
      v167 = sub_245387D34();
      if (os_log_type_enabled(v165, v167))
      {
        v168 = (uint8_t *)swift_slowAlloc();
        v169 = swift_slowAlloc();
        *(_QWORD *)&v477[0] = v169;
        *(_DWORD *)v168 = 136446210;
        v170 = *(_QWORD *)(v166 + 488);
        v171 = *(_QWORD *)(v166 + 496);
        swift_bridgeObjectRetain();
        *(_QWORD *)&v476[0] = sub_2453816D8(v170, v171, (uint64_t *)v477);
        sub_245387E0C();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_245256000, v165, v167, "(%{public}s) Abandoning handshake response because replicator is disabled", v168, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v169, -1, -1);
        MEMORY[0x24953317C](v168, -1, -1);

      }
      else
      {

        swift_release();
      }
      sub_245297B78(*(_QWORD *)(v429 + v404[6]), *(_QWORD *)(v429 + v404[6] + 8));
      return;
    }
    v91 = v429;
    v92 = (_OWORD *)(v429 + v404[6]);
    v93 = v92[5];
    v94 = v92[7];
    v472 = v92[6];
    v473 = v94;
    v95 = v92[9];
    v96 = v92[7];
    v474 = v92[8];
    v475 = v95;
    v97 = v92[1];
    v98 = v92[3];
    v468 = v92[2];
    v469 = v98;
    v99 = v92[5];
    v100 = v92[3];
    v470 = v92[4];
    v471 = v99;
    v101 = v92[1];
    v467[0] = *v92;
    v467[1] = v101;
    v461 = v470;
    v462 = v93;
    v459 = v468;
    v460 = v100;
    v378 = v92;
    v102 = v92[9];
    v465 = v474;
    v466 = v102;
    v463 = v472;
    v464 = v96;
    v103 = (void (*)(unint64_t, uint64_t, uint64_t))*((_QWORD *)&v467[0] + 1);
    v379 = (__int128 *)*((_QWORD *)&v467[0] + 1);
    v380 = *(void (**)(unint64_t, uint64_t, uint64_t))&v467[0];
    v457 = v467[0];
    v458 = v97;
    v104 = (_QWORD *)(v429 + v404[5]);
    v106 = v104[1];
    *(_QWORD *)&v447 = *v104;
    v105 = v447;
    *((_QWORD *)&v447 + 1) = v106;
    sub_24526432C((uint64_t)v467);
    sub_24526B470(v105, v106);
    v20 = a2;
    v107 = v403;
    sub_24528B268(&v457, (uint64_t)&v447, 0, 1, v403);
    sub_24526B484(v105, v106);
    sub_245269928((uint64_t)v467);
    v18 = v107 + *(int *)(v402 + 20);
    sub_245297B78(*(_QWORD *)v18, *(_QWORD *)(v18 + 8));
    sub_245297F54(v107);
    v108 = v400;
    v109 = *(void (**)(char *, uint64_t, uint64_t))(v399 + 16);
    v110 = (uint64_t)v421;
    v109(v421, v91, v400);
    v111 = v424;
    v112 = (void (**)(unint64_t, uint64_t, uint64_t))(v110 + *(int *)(v424 + 20));
    *v112 = v380;
    v112[1] = v103;
    a1 = v432;
    v380 = (void (*)(unint64_t, uint64_t, uint64_t))v109;
    v109((char *)v432, v91, v108);
    v16 = type metadata accessor for Replicator.Session;
    v113 = v433;
    sub_2452B792C(v110, v433, type metadata accessor for Replicator.Session);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int64_t))(v422 + 56))(v113, 0, 1, v111);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_24531C0B4(v113, (uint64_t)a1);
    swift_endAccess();
    sub_2452B7B5C(v110, type metadata accessor for Replicator.Session);
    sub_24526D8E4();
    sub_245298100(v476);
    v401 = v20;
    v114 = sub_245298420(v403);
    v115 = *(_OWORD *)(v18 + 80);
    v480 = *(_OWORD *)(v18 + 64);
    v481 = v115;
    v116 = *(_OWORD *)(v18 + 48);
    v478 = *(_OWORD *)(v18 + 32);
    v479 = v116;
    v117 = *(_OWORD *)(v18 + 144);
    v484 = *(_OWORD *)(v18 + 128);
    v485 = v117;
    v118 = *(_OWORD *)(v18 + 112);
    v482 = *(_OWORD *)(v18 + 96);
    v483 = v118;
    v119 = *(_OWORD *)v18;
    v120 = *(_OWORD *)(v18 + 16);
    v379 = (__int128 *)v18;
    v477[0] = v119;
    v477[1] = v120;
    v121 = v478;
    v122 = *(_QWORD *)(v114 + 64);
    v421 = (char *)(v114 + 64);
    a2 = 1 << *(_BYTE *)(v114 + 32);
    v123 = -1;
    if (a2 < 64)
      v123 = ~(-1 << a2);
    v8 = v123 & v122;
    sub_24526432C((uint64_t)v477);
    v422 = (unint64_t)(a2 + 63) >> 6;
    v424 = v114;
    if (v121 <= 7)
      break;
    swift_bridgeObjectRetain();
    v172 = 0;
    v432 = (uint64_t (*)())MEMORY[0x24BEE4B00];
    a1 = type metadata accessor for ZoneVersion;
    v173 = v429;
    while (1)
    {
      if (v8)
      {
        v433 = (v8 - 1) & v8;
        v423 = v172;
        v174 = __clz(__rbit64(v8)) | (v172 << 6);
      }
      else
      {
        v175 = v172 + 1;
        if (__OFADD__(v172, 1))
          goto LABEL_177;
        if (v175 >= v422)
          goto LABEL_117;
        v176 = *(_QWORD *)&v421[8 * v175];
        v177 = v172 + 1;
        if (!v176)
        {
          v177 = v172 + 2;
          if ((uint64_t)(v172 + 2) >= v422)
            goto LABEL_117;
          v176 = *(_QWORD *)&v421[8 * v177];
          if (!v176)
          {
            v177 = v172 + 3;
            if ((uint64_t)(v172 + 3) >= v422)
              goto LABEL_117;
            v176 = *(_QWORD *)&v421[8 * v177];
            if (!v176)
            {
              v177 = v172 + 4;
              if ((uint64_t)(v172 + 4) >= v422)
                goto LABEL_117;
              v176 = *(_QWORD *)&v421[8 * v177];
              if (!v176)
              {
                v178 = v172 + 5;
                if ((uint64_t)(v172 + 5) >= v422)
                  goto LABEL_117;
                v176 = *(_QWORD *)&v421[8 * v178];
                if (!v176)
                {
                  while (1)
                  {
                    v177 = v178 + 1;
                    if (__OFADD__(v178, 1))
                      goto LABEL_184;
                    if (v177 >= v422)
                      break;
                    v176 = *(_QWORD *)&v421[8 * v177];
                    ++v178;
                    if (v176)
                      goto LABEL_71;
                  }
LABEL_117:
                  swift_release();
                  swift_bridgeObjectRelease();
                  sub_245269928((uint64_t)v477);
                  v250 = *(_QWORD *)(v173 + v404[7]);
                  v251 = *(_QWORD *)(v250 + 64);
                  v423 = v250 + 64;
                  v252 = 1 << *(_BYTE *)(v250 + 32);
                  v253 = -1;
                  if (v252 < 64)
                    v253 = ~(-1 << v252);
                  v8 = v253 & v251;
                  sub_24526432C((uint64_t)v477);
                  v424 = (unint64_t)(v252 + 63) >> 6;
                  v431 = v250;
                  swift_bridgeObjectRetain();
                  v254 = 0;
                  v433 = MEMORY[0x24BEE4B00];
                  v255 = type metadata accessor for ZoneVersion;
                  a2 = 14906;
                  a1 = (uint64_t (*)())0xE200000000000000;
                  v18 = MEMORY[0x24BEE0D00];
                  v20 = (unint64_t)v407;
                  while (1)
                  {
                    if (v8)
                    {
                      v427 = (unint64_t *)((v8 - 1) & v8);
                      v428 = v254;
                      v256 = __clz(__rbit64(v8)) | (v254 << 6);
                    }
                    else
                    {
                      v257 = v254 + 1;
                      if (__OFADD__(v254, 1))
                        goto LABEL_180;
                      if (v257 >= v424)
                        goto LABEL_153;
                      v258 = *(_QWORD *)(v423 + 8 * v257);
                      v259 = v254 + 1;
                      if (!v258)
                      {
                        v259 = v254 + 2;
                        if (v254 + 2 >= v424)
                          goto LABEL_153;
                        v258 = *(_QWORD *)(v423 + 8 * v259);
                        if (!v258)
                        {
                          v259 = v254 + 3;
                          if (v254 + 3 >= v424)
                            goto LABEL_153;
                          v258 = *(_QWORD *)(v423 + 8 * v259);
                          if (!v258)
                          {
                            v259 = v254 + 4;
                            if (v254 + 4 >= v424)
                              goto LABEL_153;
                            v258 = *(_QWORD *)(v423 + 8 * v259);
                            if (!v258)
                            {
                              v260 = v254 + 5;
                              if (v254 + 5 >= v424)
                                goto LABEL_153;
                              v258 = *(_QWORD *)(v423 + 8 * v260);
                              if (!v258)
                              {
                                while (1)
                                {
                                  v259 = v260 + 1;
                                  if (__OFADD__(v260, 1))
                                    goto LABEL_186;
                                  if (v259 >= v424)
                                    break;
                                  v258 = *(_QWORD *)(v423 + 8 * v259);
                                  ++v260;
                                  if (v258)
                                    goto LABEL_139;
                                }
LABEL_153:
                                a2 = v433;
LABEL_154:
                                swift_release();
                                sub_245269928((uint64_t)v477);
                                v294 = v401;
                                swift_beginAccess();
                                sub_24525E4F0(v294 + 192, (uint64_t)&v457);
                                v295 = *((_QWORD *)&v458 + 1);
                                v296 = v459;
                                __swift_project_boxed_opaque_existential_1(&v457, *((uint64_t *)&v458 + 1));
                                v297 = v403;
                                v298 = MetadataStoring.mismatchedZoneVersions(for:remoteZoneVersions:)(v403, a2, v295, *(_QWORD *)(v296 + 8));
                                swift_bridgeObjectRelease();
                                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v457);
                                sub_24525E4F0(v294 + 192, (uint64_t)&v457);
                                v299 = *((_QWORD *)&v458 + 1);
                                v300 = v459;
                                __swift_project_boxed_opaque_existential_1(&v457, *((uint64_t *)&v458 + 1));
                                v301 = swift_bridgeObjectRetain();
                                v433 = v298;
                                v302 = sub_24531BA50(v301);
                                ObjectType = MetadataStoring.recordVersions(for:zoneIDs:)(v297, v302, v299, *(_QWORD *)(v300 + 8));
                                v303 = v294;
                                swift_bridgeObjectRelease();
                                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v457);
                                v304 = v388;
                                sub_2452B792C(v297, v388, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
                                swift_retain_n();
                                swift_bridgeObjectRetain();
                                v305 = sub_2453877F4();
                                v306 = sub_245387D34();
                                if (os_log_type_enabled(v305, v306))
                                {
                                  v307 = swift_slowAlloc();
                                  v308 = swift_slowAlloc();
                                  *(_QWORD *)&v457 = v308;
                                  *(_DWORD *)v307 = 136446466;
                                  v309 = *(_QWORD *)(v401 + 488);
                                  v310 = *(_QWORD *)(v401 + 496);
                                  swift_bridgeObjectRetain();
                                  *(_QWORD *)&v447 = sub_2453816D8(v309, v310, (uint64_t *)&v457);
                                  sub_245387E0C();
                                  swift_release_n();
                                  swift_bridgeObjectRelease();
                                  *(_WORD *)(v307 + 12) = 2082;
                                  sub_2452B792C(v304, v386, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
                                  v311 = sub_245387B48();
                                  *(_QWORD *)&v447 = sub_2453816D8(v311, v312, (uint64_t *)&v457);
                                  sub_245387E0C();
                                  swift_bridgeObjectRelease();
                                  sub_2452B7B5C(v304, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
                                  _os_log_impl(&dword_245256000, v305, v306, "(%{public}s) [Send Response] Found pairing relationship: %{public}s", (uint8_t *)v307, 0x16u);
                                  swift_arrayDestroy();
                                  MEMORY[0x24953317C](v308, -1, -1);
                                  v303 = v401;
                                  MEMORY[0x24953317C](v307, -1, -1);
                                }
                                else
                                {
                                  swift_release_n();
                                  sub_2452B7B5C(v304, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
                                }

                                swift_retain_n();
                                swift_bridgeObjectRetain_n();
                                v313 = sub_2453877F4();
                                v314 = sub_245387D34();
                                if (os_log_type_enabled(v313, v314))
                                {
                                  v315 = swift_slowAlloc();
                                  v316 = swift_slowAlloc();
                                  *(_QWORD *)&v457 = v316;
                                  *(_DWORD *)v315 = 136446466;
                                  v317 = *(_QWORD *)(v401 + 488);
                                  v318 = *(_QWORD *)(v401 + 496);
                                  swift_bridgeObjectRetain();
                                  *(_QWORD *)&v447 = sub_2453816D8(v317, v318, (uint64_t *)&v457);
                                  sub_245387E0C();
                                  swift_release_n();
                                  swift_bridgeObjectRelease();
                                  *(_WORD *)(v315 + 12) = 2082;
                                  swift_bridgeObjectRetain();
                                  v319 = sub_245387A70();
                                  v321 = v320;
                                  swift_bridgeObjectRelease();
                                  *(_QWORD *)&v447 = sub_2453816D8(v319, v321, (uint64_t *)&v457);
                                  sub_245387E0C();
                                  swift_bridgeObjectRelease_n();
                                  swift_bridgeObjectRelease();
                                  _os_log_impl(&dword_245256000, v313, v314, "(%{public}s) [Send Response] Local zone versions: %{public}s", (uint8_t *)v315, 0x16u);
                                  swift_arrayDestroy();
                                  MEMORY[0x24953317C](v316, -1, -1);
                                  v303 = v401;
                                  MEMORY[0x24953317C](v315, -1, -1);

                                }
                                else
                                {

                                  swift_bridgeObjectRelease_n();
                                  swift_release_n();
                                }
                                v322 = v433;
                                v323 = ObjectType;
                                if (*(_QWORD *)(v433 + 16))
                                {
                                  swift_bridgeObjectRetain_n();
                                  swift_retain();
                                  v324 = sub_2453877F4();
                                  v325 = sub_245387D34();
                                  if (os_log_type_enabled(v324, v325))
                                  {
                                    v326 = swift_slowAlloc();
                                    v327 = swift_slowAlloc();
                                    *(_QWORD *)&v457 = v327;
                                    *(_DWORD *)v326 = 136446722;
                                    v328 = *(_QWORD *)(v401 + 488);
                                    v329 = *(_QWORD *)(v401 + 496);
                                    swift_bridgeObjectRetain();
                                    *(_QWORD *)&v447 = sub_2453816D8(v328, v329, (uint64_t *)&v457);
                                    sub_245387E0C();
                                    swift_release();
                                    swift_bridgeObjectRelease();
                                    *(_WORD *)(v326 + 12) = 2050;
                                    *(_QWORD *)&v447 = *(_QWORD *)(v322 + 16);
                                    sub_245387E0C();
                                    swift_bridgeObjectRelease();
                                    *(_WORD *)(v326 + 22) = 2082;
                                    sub_2452B7DEC();
                                    swift_bridgeObjectRetain();
                                    v330 = sub_245387A70();
                                    v332 = v331;
                                    swift_bridgeObjectRelease();
                                    *(_QWORD *)&v447 = sub_2453816D8(v330, v332, (uint64_t *)&v457);
                                    v323 = ObjectType;
                                    sub_245387E0C();
                                    swift_bridgeObjectRelease_n();
                                    swift_bridgeObjectRelease();
                                    _os_log_impl(&dword_245256000, v324, v325, "(%{public}s) [Send Response] Found mismatched zones (%{public}ld): %{public}s", (uint8_t *)v326, 0x20u);
                                    swift_arrayDestroy();
                                    MEMORY[0x24953317C](v327, -1, -1);
                                    v303 = v401;
                                    MEMORY[0x24953317C](v326, -1, -1);

                                  }
                                  else
                                  {

                                    swift_bridgeObjectRelease_n();
                                    swift_release();
                                  }
                                }
                                else
                                {
                                  swift_bridgeObjectRelease();
                                }
                                swift_retain_n();
                                swift_bridgeObjectRetain();
                                v333 = sub_2453877F4();
                                v334 = sub_245387D34();
                                if (os_log_type_enabled(v333, v334))
                                {
                                  v335 = swift_slowAlloc();
                                  v336 = swift_slowAlloc();
                                  *(_QWORD *)&v457 = v336;
                                  *(_DWORD *)v335 = 136446466;
                                  v337 = *(_QWORD *)(v303 + 488);
                                  v338 = *(_QWORD *)(v303 + 496);
                                  swift_bridgeObjectRetain();
                                  *(_QWORD *)&v447 = sub_2453816D8(v337, v338, (uint64_t *)&v457);
                                  sub_245387E0C();
                                  swift_release_n();
                                  swift_bridgeObjectRelease();
                                  *(_WORD *)(v335 + 12) = 2082;
                                  type metadata accessor for Record.ID(0);
                                  sub_24525C6C4((unint64_t *)&qword_257452340, type metadata accessor for Record.ID, (uint64_t)&protocol conformance descriptor for Record.ID);
                                  swift_bridgeObjectRetain();
                                  v339 = v400;
                                  v340 = sub_245387A70();
                                  v342 = v341;
                                  swift_bridgeObjectRelease();
                                  *(_QWORD *)&v447 = sub_2453816D8(v340, v342, (uint64_t *)&v457);
                                  sub_245387E0C();
                                  swift_bridgeObjectRelease_n();
                                  v323 = ObjectType;
                                  swift_bridgeObjectRelease();
                                  _os_log_impl(&dword_245256000, v333, v334, "(%{public}s) [Send Response] Sending record versions: %{public}s", (uint8_t *)v335, 0x16u);
                                  swift_arrayDestroy();
                                  MEMORY[0x24953317C](v336, -1, -1);
                                  MEMORY[0x24953317C](v335, -1, -1);

                                  v343 = v429;
                                  v344 = (uint64_t)v397;
                                  v345 = v398;
                                  v346 = v403;
                                }
                                else
                                {

                                  swift_bridgeObjectRelease_n();
                                  swift_release_n();
                                  v343 = v429;
                                  v344 = (uint64_t)v397;
                                  v345 = v398;
                                  v346 = v403;
                                  v339 = v400;
                                }
                                v347 = v396;
                                v380(v396, v343, v339);
                                v348 = (uint64_t *)(v346 + *(int *)(v402 + 32));
                                v349 = *v348;
                                v350 = v348[1];
                                v351 = (int *)v389;
                                v352 = (uint64_t *)(v347 + *(int *)(v389 + 20));
                                *v352 = v349;
                                v352[1] = v350;
                                v353 = (_OWORD *)(v347 + v351[6]);
                                v354 = v476[1];
                                *v353 = v476[0];
                                v353[1] = v354;
                                v355 = v476[5];
                                v353[4] = v476[4];
                                v353[5] = v355;
                                v356 = v476[3];
                                v353[2] = v476[2];
                                v353[3] = v356;
                                v357 = v476[9];
                                v353[8] = v476[8];
                                v353[9] = v357;
                                v358 = v476[7];
                                v353[6] = v476[6];
                                v353[7] = v358;
                                *(_QWORD *)(v347 + v351[7]) = v432;
                                *(_QWORD *)(v347 + v351[8]) = v323;
                                sub_2452B792C(v347, v345, type metadata accessor for ReplicatorMessage.Handshake.Response);
                                swift_storeEnumTagMultiPayload();
                                sub_2452B792C(v345, v344, type metadata accessor for ReplicatorMessage.Handshake);
                                swift_storeEnumTagMultiPayload();
                                v359 = (unint64_t)v392;
                                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v399 + 56))(v392, 1, 1, v339);
                                sub_24526B470(v349, v350);
                                sub_24526432C((uint64_t)v476);
                                v360 = v393;
                                v361 = v401;
                                sub_245285964(v344, v346, v359, v393);
                                sub_245263F80(v359, &qword_25440C700);
                                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v394 + 56))(v360, 0, 1, v395);
                                v362 = v384;
                                sub_2452B7AB8(v360, v384, (uint64_t (*)(_QWORD))type metadata accessor for Message);
                                v433 = *(_QWORD *)(v361 + 184);
                                ObjectType = swift_getObjectType();
                                v363 = sub_2453875E4();
                                v364 = v385;
                                (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v363 - 8) + 56))(v385, 1, 1, v363);
                                v365 = v379[6];
                                v366 = v379[8];
                                v454 = v379[7];
                                v455 = v366;
                                v367 = v379[8];
                                v456 = v379[9];
                                v368 = v379[2];
                                v369 = v379[4];
                                v450 = v379[3];
                                v451 = v369;
                                v370 = v379[4];
                                v371 = v379[6];
                                v452 = v379[5];
                                v453 = v371;
                                v372 = *v379;
                                v373 = v379[2];
                                v448 = v379[1];
                                v449 = v373;
                                v442 = v452;
                                v443 = v365;
                                v374 = *v379;
                                v444 = v454;
                                v445 = v367;
                                v446 = v379[9];
                                v447 = v374;
                                v439 = v368;
                                v440 = v450;
                                v441 = v370;
                                v437 = v372;
                                v438 = v448;
                                v436 = 0;
                                v435[0] = 0x403E000000000000;
                                v435[1] = 0;
                                v375 = v383;
                                sub_2452B792C(v429, v383, type metadata accessor for ReplicatorMessage.Handshake.Request);
                                v376 = (*(unsigned __int8 *)(v381 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v381 + 80);
                                v377 = swift_allocObject();
                                *(_QWORD *)(v377 + 16) = v361;
                                sub_2452B7AB8(v375, v377 + v376, type metadata accessor for ReplicatorMessage.Handshake.Request);
                                swift_retain();
                                sub_24526432C((uint64_t)&v447);
                                sub_245299680(v362, v364, &v437, &v436, v435, (uint64_t)sub_2452BA68C, v377, ObjectType, v433);
                                swift_release();
                                sub_245269928((uint64_t)v476);
                                v463 = v443;
                                v464 = v444;
                                v465 = v445;
                                v466 = v446;
                                v459 = v439;
                                v460 = v440;
                                v461 = v441;
                                v462 = v442;
                                v457 = v437;
                                v458 = v438;
                                sub_245269928((uint64_t)&v457);
                                sub_245263F80(v364, &qword_25744F610);
                                sub_2452B7B5C(v362, (uint64_t (*)(_QWORD))type metadata accessor for Message);
                                sub_2452B7B5C((uint64_t)v397, type metadata accessor for ReplicatorMessage);
                                sub_2452B7B5C(v398, type metadata accessor for ReplicatorMessage.Handshake);
                                sub_2452B7B5C(v396, type metadata accessor for ReplicatorMessage.Handshake.Response);
                                sub_2452B7B5C(v403, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
                                return;
                              }
                              v259 = v254 + 5;
                            }
                          }
                        }
                      }
LABEL_139:
                      v427 = (unint64_t *)((v258 - 1) & v258);
                      v428 = v259;
                      v256 = __clz(__rbit64(v258)) + (v259 << 6);
                    }
                    v261 = *(_QWORD *)(v431 + 56);
                    v262 = (uint64_t *)(*(_QWORD *)(v431 + 48) + 16 * v256);
                    v264 = *v262;
                    v263 = v262[1];
                    v426 = *(_QWORD *)(ObjectType + 72);
                    v265 = v412;
                    sub_2452B792C(v261 + v426 * v256, (uint64_t)&v412[*(int *)(v430 + 48)], (uint64_t (*)(_QWORD))v255);
                    *v265 = v264;
                    v265[1] = v263;
                    sub_2452BC850((uint64_t)v265, v20, &qword_25744FF80);
                    v266 = *(_QWORD *)(v20 + 8);
                    *(_QWORD *)&v457 = *(_QWORD *)v20;
                    *((_QWORD *)&v457 + 1) = v266;
                    *(_QWORD *)&v447 = 14906;
                    *((_QWORD *)&v447 + 1) = 0xE200000000000000;
                    sub_2452BA544();
                    swift_bridgeObjectRetain();
                    v267 = (_QWORD *)sub_245387CEC();
                    v268 = v267;
                    if (v267[2] == 2)
                    {
                      v269 = v267[4];
                      v8 = v267[5];
                      v16 = (uint64_t (*)(_QWORD))v267[6];
                      v18 = v267[7];
                      swift_bridgeObjectRetain();
                      a2 = MEMORY[0x249531EBC](v269, v8, v16, v18);
                      a1 = v270;
                      swift_bridgeObjectRelease();
                      if (v268[2] < 2uLL)
                        goto LABEL_174;
                      v271 = v268[8];
                      v272 = v268[9];
                      v273 = v255;
                      v274 = v268[10];
                      v275 = v268[11];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      v276 = MEMORY[0x249531EBC](v271, v272, v274, v275);
                      v18 = v277;
                      swift_bridgeObjectRelease();
                      v278 = *(int *)(v430 + 48);
                      v279 = (uint64_t)&v406[v278];
                      sub_2452B792C(v20 + v278, (uint64_t)&v406[v278], (uint64_t (*)(_QWORD))v273);
                      v20 = (unint64_t)v273;
                      sub_2452B7AB8(v279, v411, (uint64_t (*)(_QWORD))v273);
                      v280 = v433;
                      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                      *(_QWORD *)&v457 = v280;
                      v425 = a2;
                      v282 = a2;
                      v16 = (uint64_t (*)(_QWORD))a1;
                      a2 = v276;
                      v8 = sub_2452C1EB4(v282, (uint64_t)a1, v276, v18);
                      v284 = *(_QWORD *)(v280 + 16);
                      v285 = (v283 & 1) == 0;
                      v286 = v284 + v285;
                      if (__OFADD__(v284, v285))
                        goto LABEL_175;
                      v287 = v283;
                      if (*(_QWORD *)(v280 + 24) >= v286)
                      {
                        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                          sub_2452C8B00();
                      }
                      else
                      {
                        sub_2452C4EB8(v286, isUniquelyReferenced_nonNull_native);
                        v288 = sub_2452C1EB4(v425, (uint64_t)a1, a2, v18);
                        if ((v287 & 1) != (v289 & 1))
                          goto LABEL_188;
                        v8 = v288;
                      }
                      v255 = (uint64_t (*)())v20;
                      v290 = (_QWORD *)v457;
                      a1 = (uint64_t (*)())0xE200000000000000;
                      v433 = v457;
                      if ((v287 & 1) != 0)
                      {
                        sub_2452BC64C(v411, *(_QWORD *)(v457 + 56) + v8 * v426, (uint64_t (*)(_QWORD))v20);
                      }
                      else
                      {
                        *(_QWORD *)(v457 + 8 * (v8 >> 6) + 64) |= 1 << v8;
                        v291 = (_QWORD *)(v290[6] + 32 * v8);
                        *v291 = v425;
                        v291[1] = v16;
                        v291[2] = a2;
                        v291[3] = v18;
                        sub_2452B7AB8(v411, v290[7] + v8 * v426, (uint64_t (*)(_QWORD))v20);
                        v292 = v290[2];
                        v163 = __OFADD__(v292, 1);
                        v293 = v292 + 1;
                        if (v163)
                          goto LABEL_181;
                        v290[2] = v293;
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                      }
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      v20 = (unint64_t)v407;
                      v18 = MEMORY[0x24BEE0D00];
                      v8 = (unint64_t)v427;
                      a2 = 14906;
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                      v8 = (unint64_t)v427;
                    }
                    sub_245263F80(v20, &qword_25744FF80);
                    v254 = v428;
                  }
                }
                v177 = v172 + 5;
              }
            }
          }
        }
LABEL_71:
        v433 = (v176 - 1) & v176;
        v423 = v177;
        v174 = __clz(__rbit64(v176)) + (v177 << 6);
      }
      v179 = *(_QWORD *)(v114 + 56);
      v180 = (uint64_t *)(*(_QWORD *)(v114 + 48) + 32 * v174);
      v182 = *v180;
      v181 = v180[1];
      v184 = v180[2];
      v183 = v180[3];
      v425 = *(_QWORD *)(ObjectType + 72);
      v185 = v431;
      v186 = v416;
      sub_2452B792C(v179 + v425 * v174, (uint64_t)&v416[*(int *)(v431 + 48)], (uint64_t (*)(_QWORD))a1);
      *v186 = v182;
      v186[1] = v181;
      v186[2] = v184;
      v186[3] = v183;
      v187 = (uint64_t)v186;
      v188 = v427;
      sub_2452BC850(v187, (uint64_t)v427, (uint64_t *)&unk_25744F640);
      v189 = *(int *)(v185 + 48);
      v190 = a1;
      v191 = v417;
      v192 = (uint64_t)v417 + v189;
      v193 = (uint64_t)v188 + v189;
      v426 = (uint64_t)v188 + v189;
      v20 = *v188;
      v194 = v188[1];
      v195 = v188[2];
      v196 = v188[3];
      *v417 = *v188;
      v191[1] = v194;
      v191[2] = v195;
      v191[3] = v196;
      sub_2452B792C(v193, v192, (uint64_t (*)(_QWORD))v190);
      *(_QWORD *)&v457 = v20;
      *((_QWORD *)&v457 + 1) = v194;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2452B7B5C(v192, (uint64_t (*)(_QWORD))v190);
      sub_245387B90();
      v197 = (uint64_t)v191 + *(int *)(v185 + 48);
      v198 = v188[1];
      v199 = v188[2];
      v200 = v188[3];
      *v191 = *v188;
      v191[1] = v198;
      v191[2] = v199;
      v191[3] = v200;
      a1 = v190;
      a2 = v426;
      sub_2452B792C(v426, v197, (uint64_t (*)(_QWORD))v190);
      swift_bridgeObjectRetain();
      sub_245387B90();
      swift_bridgeObjectRelease();
      sub_2452B7B5C(v197, (uint64_t (*)(_QWORD))v190);
      v16 = (uint64_t (*)(_QWORD))*((_QWORD *)&v457 + 1);
      v18 = v457;
      v201 = (uint64_t)v418 + *(int *)(v185 + 48);
      sub_2452B792C(a2, v201, (uint64_t (*)(_QWORD))v190);
      sub_2452B7AB8(v201, v428, (uint64_t (*)(_QWORD))v190);
      v202 = v432;
      v203 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v457 = v202;
      v8 = sub_2452C1D98(v18, (uint64_t)v16);
      v205 = *((_QWORD *)v202 + 2);
      v206 = (v204 & 1) == 0;
      v207 = v205 + v206;
      if (__OFADD__(v205, v206))
        break;
      v20 = v204;
      if (*((_QWORD *)v202 + 3) >= v207)
      {
        if ((v203 & 1) == 0)
          sub_2452C88BC();
      }
      else
      {
        sub_2452C4B30(v207, v203);
        v208 = sub_2452C1D98(v18, (uint64_t)v16);
        if ((v20 & 1) != (v209 & 1))
          goto LABEL_187;
        v8 = v208;
      }
      v210 = (_QWORD *)v457;
      v432 = (uint64_t (*)())v457;
      if ((v20 & 1) != 0)
      {
        sub_2452BC64C(v428, *(_QWORD *)(v457 + 56) + v8 * v425, (uint64_t (*)(_QWORD))a1);
      }
      else
      {
        *(_QWORD *)(v457 + 8 * (v8 >> 6) + 64) |= 1 << v8;
        v211 = (uint64_t *)(v210[6] + 16 * v8);
        *v211 = v18;
        v211[1] = (uint64_t)v16;
        sub_2452B7AB8(v428, v210[7] + v8 * v425, (uint64_t (*)(_QWORD))a1);
        v212 = v210[2];
        v163 = __OFADD__(v212, 1);
        v213 = v212 + 1;
        if (v163)
          goto LABEL_172;
        v210[2] = v213;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_245263F80((uint64_t)v427, (uint64_t *)&unk_25744F640);
      v173 = v429;
      v172 = v423;
      v114 = v424;
      v8 = v433;
    }
    __break(1u);
LABEL_170:
    __break(1u);
LABEL_171:
    __break(1u);
LABEL_172:
    __break(1u);
LABEL_173:
    __break(1u);
LABEL_174:
    __break(1u);
LABEL_175:
    __break(1u);
LABEL_176:
    __break(1u);
LABEL_177:
    __break(1u);
LABEL_178:
    __break(1u);
LABEL_179:
    __break(1u);
LABEL_180:
    __break(1u);
LABEL_181:
    __break(1u);
LABEL_182:
    swift_once();
  }
  swift_bridgeObjectRetain();
  v124 = 0;
  v432 = (uint64_t (*)())MEMORY[0x24BEE4B00];
  v428 = (uint64_t)"Swift/UnsafePointer.swift";
  v418 = (uint64_t (*)())0x8000000245393670;
  v125 = v429;
  v20 = (unint64_t)v410;
  while (1)
  {
    if (v8)
    {
      v433 = (v8 - 1) & v8;
      v427 = (unint64_t *)v124;
      v126 = __clz(__rbit64(v8)) | (v124 << 6);
      goto LABEL_33;
    }
    v127 = v124 + 1;
    if (__OFADD__(v124, 1))
      goto LABEL_176;
    if (v127 >= v422)
      break;
    v128 = *(_QWORD *)&v421[8 * v127];
    v129 = v124 + 1;
    if (!v128)
    {
      v129 = v124 + 2;
      if (v124 + 2 >= v422)
        break;
      v128 = *(_QWORD *)&v421[8 * v129];
      if (!v128)
      {
        v129 = v124 + 3;
        if (v124 + 3 >= v422)
          break;
        v128 = *(_QWORD *)&v421[8 * v129];
        if (!v128)
        {
          v129 = v124 + 4;
          if (v124 + 4 >= v422)
            break;
          v128 = *(_QWORD *)&v421[8 * v129];
          if (!v128)
          {
            v130 = v124 + 5;
            if (v124 + 5 >= v422)
              break;
            v128 = *(_QWORD *)&v421[8 * v130];
            if (!v128)
            {
              while (1)
              {
                v129 = v130 + 1;
                if (__OFADD__(v130, 1))
                  break;
                if (v129 >= v422)
                  goto LABEL_83;
                v128 = *(_QWORD *)&v421[8 * v129];
                ++v130;
                if (v128)
                  goto LABEL_32;
              }
              __break(1u);
LABEL_184:
              __break(1u);
              goto LABEL_185;
            }
            v129 = v124 + 5;
          }
        }
      }
    }
LABEL_32:
    v433 = (v128 - 1) & v128;
    v427 = (unint64_t *)v129;
    v126 = __clz(__rbit64(v128)) + (v129 << 6);
LABEL_33:
    v131 = (uint64_t *)(*(_QWORD *)(v114 + 48) + 32 * v126);
    v132 = *v131;
    v16 = (uint64_t (*)(_QWORD))v131[1];
    v134 = v131[2];
    v133 = v131[3];
    a2 = *(_QWORD *)(ObjectType + 72);
    v135 = *(_QWORD *)(v114 + 56) + a2 * v126;
    v136 = v431;
    v137 = v419;
    sub_2452B792C(v135, (uint64_t)&v419[*(int *)(v431 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    *v137 = v132;
    v137[1] = v16;
    v137[2] = v134;
    v137[3] = v133;
    sub_2452BC850((uint64_t)v137, v20, (uint64_t *)&unk_25744F640);
    v138 = *(int *)(v136 + 48);
    v139 = v420;
    v140 = (uint64_t)v420 + v138;
    v141 = v20 + v138;
    v142 = *(_QWORD *)(v20 + 8);
    v143 = *(_QWORD *)(v20 + 16);
    a1 = *(uint64_t (**)())(v20 + 24);
    *v420 = *(_QWORD *)v20;
    v139[1] = v142;
    v139[2] = v143;
    v139[3] = a1;
    sub_2452B792C(v20 + v138, v140, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    if (v143 == 0xD000000000000011 && a1 == v418)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2452B7B5C(v140, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    }
    else
    {
      v18 = sub_245388274();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2452B7B5C(v140, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      if ((v18 & 1) == 0)
      {
        v125 = v429;
        goto LABEL_14;
      }
    }
    v144 = v431;
    v145 = *(int *)(v431 + 48);
    v146 = v408;
    a1 = (uint64_t (*)())((char *)v408 + v145);
    v8 = *(_QWORD *)v20;
    v16 = *(uint64_t (**)(_QWORD))(v20 + 8);
    v147 = *(_QWORD *)(v20 + 16);
    v148 = *(_QWORD *)(v20 + 24);
    *v408 = v8;
    v146[1] = (unint64_t)v16;
    v146[2] = v147;
    v146[3] = v148;
    sub_2452B792C(v141, (uint64_t)v146 + v145, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    v149 = *(int *)(v144 + 48);
    v150 = v409;
    v151 = (uint64_t)v409 + v149;
    *v409 = v8;
    v150[1] = (unint64_t)v16;
    v150[2] = v147;
    v150[3] = v148;
    sub_2452B792C(v141, (uint64_t)v150 + v149, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    sub_2452B7AB8(v151, v423, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    swift_bridgeObjectRetain();
    v152 = v432;
    v18 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v457 = v152;
    v20 = sub_2452C1D98(v8, (uint64_t)v16);
    v154 = *((_QWORD *)v152 + 2);
    v155 = (v153 & 1) == 0;
    v156 = v154 + v155;
    if (__OFADD__(v154, v155))
      goto LABEL_171;
    v157 = v153;
    if (*((_QWORD *)v152 + 3) >= v156)
    {
      if ((v18 & 1) == 0)
        sub_2452C88BC();
    }
    else
    {
      sub_2452C4B30(v156, v18);
      v158 = sub_2452C1D98(v8, (uint64_t)v16);
      if ((v157 & 1) != (v159 & 1))
        goto LABEL_187;
      v20 = v158;
    }
    v160 = (_QWORD *)v457;
    v432 = (uint64_t (*)())v457;
    if ((v157 & 1) != 0)
    {
      sub_2452BC64C(v423, *(_QWORD *)(v457 + 56) + v20 * a2, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    }
    else
    {
      *(_QWORD *)(v457 + 8 * (v20 >> 6) + 64) |= 1 << v20;
      v161 = (unint64_t *)(v160[6] + 16 * v20);
      *v161 = v8;
      v161[1] = (unint64_t)v16;
      sub_2452B7AB8(v423, v160[7] + v20 * a2, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      v162 = v160[2];
      v163 = __OFADD__(v162, 1);
      v164 = v162 + 1;
      if (v163)
        goto LABEL_178;
      v160[2] = v164;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2452B7B5C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    v125 = v429;
    v20 = (unint64_t)v410;
LABEL_14:
    v8 = v433;
    sub_245263F80(v20, (uint64_t *)&unk_25744F640);
    v114 = v424;
    v124 = (uint64_t)v427;
  }
LABEL_83:
  swift_release();
  swift_bridgeObjectRelease();
  sub_245269928((uint64_t)v477);
  v214 = *(_QWORD *)(v125 + v404[7]);
  v215 = *(_QWORD *)(v214 + 64);
  v421 = (char *)(v214 + 64);
  v216 = 1 << *(_BYTE *)(v214 + 32);
  v217 = -1;
  if (v216 < 64)
    v217 = ~(-1 << v216);
  v8 = v217 & v215;
  sub_24526432C((uint64_t)v477);
  v422 = (unint64_t)(v216 + 63) >> 6;
  v431 = v214;
  swift_bridgeObjectRetain();
  v218 = 0;
  a2 = MEMORY[0x24BEE4B00];
  v16 = (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion;
  v423 = v428 | 0x8000000000000000;
  a1 = (uint64_t (*)())&qword_25744FF80;
  while (2)
  {
    v433 = a2;
    if (v8)
    {
      v424 = (v8 - 1) & v8;
      v427 = (unint64_t *)v218;
      v219 = __clz(__rbit64(v8)) | (v218 << 6);
      goto LABEL_106;
    }
    v220 = v218 + 1;
    if (__OFADD__(v218, 1))
      goto LABEL_179;
    if (v220 >= v422)
      goto LABEL_154;
    v221 = *(_QWORD *)&v421[8 * v220];
    v222 = v218 + 1;
    if (v221)
      goto LABEL_105;
    v222 = v218 + 2;
    if (v218 + 2 >= v422)
      goto LABEL_154;
    v221 = *(_QWORD *)&v421[8 * v222];
    if (v221)
      goto LABEL_105;
    v222 = v218 + 3;
    if (v218 + 3 >= v422)
      goto LABEL_154;
    v221 = *(_QWORD *)&v421[8 * v222];
    if (v221)
      goto LABEL_105;
    v222 = v218 + 4;
    if (v218 + 4 >= v422)
      goto LABEL_154;
    v221 = *(_QWORD *)&v421[8 * v222];
    if (v221)
    {
LABEL_105:
      v424 = (v221 - 1) & v221;
      v427 = (unint64_t *)v222;
      v219 = __clz(__rbit64(v221)) + (v222 << 6);
LABEL_106:
      v18 = v430;
      v224 = (uint64_t *)(*(_QWORD *)(v431 + 48) + 16 * v219);
      v226 = *v224;
      v225 = v224[1];
      v227 = *(_QWORD *)(ObjectType + 72);
      v228 = v413;
      sub_2452B792C(*(_QWORD *)(v431 + 56) + v227 * v219, (uint64_t)&v413[*(int *)(v430 + 48)], v16);
      *v228 = v226;
      v228[1] = v225;
      a2 = (uint64_t)v16;
      v229 = v425;
      sub_2452BC850((uint64_t)v228, v425, &qword_25744FF80);
      v230 = *(int *)(v18 + 48);
      v231 = v414;
      v232 = (uint64_t)v414 + v230;
      v233 = v229 + v230;
      a1 = *(uint64_t (**)())v229;
      v20 = *(_QWORD *)(v229 + 8);
      *v414 = *(_QWORD *)v229;
      v231[1] = v20;
      sub_2452B792C(v229 + v230, (uint64_t)v231 + v230, (uint64_t (*)(_QWORD))a2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2452B7B5C(v232, (uint64_t (*)(_QWORD))a2);
      v234 = v415;
      v235 = (uint64_t)v415 + *(int *)(v18 + 48);
      v236 = *(uint64_t (**)())v229;
      v237 = *(uint64_t (**)())(v229 + 8);
      v16 = (uint64_t (*)(_QWORD))a2;
      *v415 = v236;
      v234[1] = v237;
      sub_2452B792C(v233, v235, (uint64_t (*)(_QWORD))a2);
      sub_2452B7AB8(v235, v426, (uint64_t (*)(_QWORD))a2);
      v238 = v433;
      v239 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v457 = v238;
      v8 = sub_2452C1EB4((uint64_t)a1, v20, 0xD000000000000011, v423);
      v241 = *(_QWORD *)(v238 + 16);
      v242 = (v240 & 1) == 0;
      v243 = v241 + v242;
      if (__OFADD__(v241, v242))
        goto LABEL_170;
      v18 = v240;
      if (*(_QWORD *)(v238 + 24) < v243)
      {
        sub_2452C4EB8(v243, v239);
        v244 = sub_2452C1EB4((uint64_t)a1, v20, 0xD000000000000011, v428 | 0x8000000000000000);
        if ((v18 & 1) != (v245 & 1))
          goto LABEL_188;
        v8 = v244;
        a2 = v457;
        if ((v18 & 1) == 0)
          goto LABEL_113;
LABEL_86:
        sub_2452BC64C(v426, *(_QWORD *)(a2 + 56) + v8 * v227, v16);
LABEL_87:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = (uint64_t (*)())&qword_25744FF80;
        sub_245263F80(v425, &qword_25744FF80);
        v218 = (uint64_t)v427;
        v8 = v424;
        continue;
      }
      if ((v239 & 1) != 0)
      {
        a2 = v457;
        if ((v240 & 1) != 0)
          goto LABEL_86;
      }
      else
      {
        sub_2452C8B00();
        a2 = v457;
        if ((v18 & 1) != 0)
          goto LABEL_86;
      }
LABEL_113:
      *(_QWORD *)(a2 + 8 * (v8 >> 6) + 64) |= 1 << v8;
      v246 = (uint64_t (**)())(*(_QWORD *)(a2 + 48) + 32 * v8);
      *v246 = a1;
      v246[1] = (uint64_t (*)())v20;
      v247 = v428 | 0x8000000000000000;
      v246[2] = (uint64_t (*)())0xD000000000000011;
      v246[3] = (uint64_t (*)())v247;
      sub_2452B7AB8(v426, *(_QWORD *)(a2 + 56) + v8 * v227, v16);
      v248 = *(_QWORD *)(a2 + 16);
      v163 = __OFADD__(v248, 1);
      v249 = v248 + 1;
      if (v163)
        goto LABEL_173;
      *(_QWORD *)(a2 + 16) = v249;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_87;
    }
    break;
  }
  v223 = v218 + 5;
  if (v218 + 5 >= v422)
    goto LABEL_154;
  v221 = *(_QWORD *)&v421[8 * v223];
  if (v221)
  {
    v222 = v218 + 5;
    goto LABEL_105;
  }
  while (1)
  {
    v222 = v223 + 1;
    if (__OFADD__(v223, 1))
      break;
    if (v222 >= v422)
      goto LABEL_154;
    v221 = *(_QWORD *)&v421[8 * v222];
    ++v223;
    if (v221)
      goto LABEL_105;
  }
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  sub_2453883DC();
  __break(1u);
LABEL_188:
  sub_2453883DC();
  __break(1u);
}

uint64_t sub_24529C338(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t result;
  _QWORD aBlock[6];

  v8 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = *(NSObject **)(a3 + 232);
  sub_2452B792C(a4, (uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReplicatorMessage.Handshake.Request);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_BYTE *)(v13 + 24) = a2 & 1;
  *(_QWORD *)(v13 + 32) = a3;
  sub_2452B7AB8((uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, type metadata accessor for ReplicatorMessage.Handshake.Request);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_2452BA7BC;
  *(_QWORD *)(v14 + 24) = v13;
  aBlock[4] = sub_2452643B4;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525B888;
  aBlock[3] = &block_descriptor_1303;
  v15 = _Block_copy(aBlock);
  sub_245263EDC(a1, a2 & 1);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v11, v15);
  _Block_release(v15);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((a3 & 1) != 0)
    __break(1u);
  return result;
}

void sub_24529C4FC(void *a1, char a2, _QWORD *a3, uint64_t a4)
{
  id v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char v35;
  void (*v36)(id *, uint64_t *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  id v43[2];
  char v44;
  __int128 v45;
  char v46;

  if ((a2 & 1) != 0)
  {
    v43[0] = a1;
    v7 = a1;
    v8 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C868);
    if (swift_dynamicCast() && v46 == 2)
    {
      if (qword_25744FD90 != -1)
        swift_once();
      v9 = sub_245387818();
      __swift_project_value_buffer(v9, (uint64_t)qword_257462FB0);
      sub_245263EDC(a1, 1);
      sub_245263EDC(a1, 1);
      swift_retain();
      v10 = sub_2453877F4();
      v11 = sub_245387D34();
      if (os_log_type_enabled(v10, v11))
      {
        v39 = a4;
        v12 = swift_slowAlloc();
        v38 = swift_slowAlloc();
        v41 = v38;
        *(_DWORD *)v12 = 136446466;
        v14 = a3[61];
        v13 = a3[62];
        swift_bridgeObjectRetain();
        sub_2453816D8(v14, v13, &v41);
        sub_245387E0C();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v12 + 12) = 2082;
        v15 = a1;
        v16 = sub_245387B48();
        sub_2453816D8(v16, v17, &v41);
        sub_245387E0C();
        swift_bridgeObjectRelease();
        sub_245263EE8(a1, 1);
        sub_245263EE8(a1, 1);
        _os_log_impl(&dword_245256000, v10, v11, "(%{public}s) Handshake request blocked by allow list: %{public}s.", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v38, -1, -1);
        v18 = v12;
        a4 = v39;
        MEMORY[0x24953317C](v18, -1, -1);
      }
      else
      {
        swift_release();
        sub_245263EE8(a1, 1);
        sub_245263EE8(a1, 1);
      }

      v37 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
      sub_245297B78(*(_QWORD *)(a4 + *(int *)(v37 + 24)), *(_QWORD *)(a4 + *(int *)(v37 + 24) + 8));
      sub_245263EE8(a1, 1);

    }
    else
    {

      if (qword_25744FD90 != -1)
        swift_once();
      v19 = sub_245387818();
      __swift_project_value_buffer(v19, (uint64_t)qword_257462FB0);
      sub_245263EDC(a1, 1);
      sub_245263EDC(a1, 1);
      swift_retain();
      v20 = sub_2453877F4();
      v21 = sub_245387D1C();
      if (os_log_type_enabled(v20, v21))
      {
        v40 = a4;
        v22 = swift_slowAlloc();
        v23 = (void *)swift_slowAlloc();
        v43[0] = v23;
        *(_DWORD *)v22 = 136446466;
        v25 = a3[61];
        v24 = a3[62];
        swift_bridgeObjectRetain();
        sub_2453816D8(v25, v24, (uint64_t *)v43);
        sub_245387E0C();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 12) = 2082;
        v26 = a1;
        v27 = sub_245387B48();
        v41 = sub_2453816D8(v27, v28, (uint64_t *)v43);
        sub_245387E0C();
        swift_bridgeObjectRelease();
        sub_245263EE8(a1, 1);
        sub_245263EE8(a1, 1);
        _os_log_impl(&dword_245256000, v20, v21, "(%{public}s) Error sending handshake response: %{public}s", (uint8_t *)v22, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v23, -1, -1);
        v29 = v22;
        a4 = v40;
        MEMORY[0x24953317C](v29, -1, -1);
      }
      else
      {
        swift_release();
        sub_245263EE8(a1, 1);
        sub_245263EE8(a1, 1);
      }

      v30 = a3 + 48;
      v31 = a3[51];
      v32 = a3[52];
      __swift_project_boxed_opaque_existential_1(v30, v31);
      v33 = a4 + *(int *)(type metadata accessor for ReplicatorMessage.Handshake.Request(0) + 24);
      v34 = *(void **)(v33 + 8);
      v35 = *(_BYTE *)(v33 + 48);
      v43[0] = *(id *)v33;
      v43[1] = v34;
      v44 = v35;
      v45 = *(_OWORD *)(v33 + 32);
      v41 = 0;
      v42 = 2;
      v36 = *(void (**)(id *, uint64_t *, uint64_t, uint64_t))(v32 + 16);
      swift_bridgeObjectRetain();
      v36(v43, &v41, v31, v32);
      sub_245263EE8(a1, 1);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_24529CA3C(void *a1, uint64_t (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  _BOOL4 v54;
  uint8_t *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint8_t *v59;
  id v60;
  id v61;
  id v62;
  id v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(_QWORD);
  uint64_t v82;
  void (*v83)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v84;
  int v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  const char *v92;
  uint8_t *v93;
  int *v94;
  _OWORD *v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t *v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char *v124;
  _QWORD *v125;
  unint64_t v126;
  int64_t v127;
  unint64_t v128;
  int64_t v129;
  char *v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(char *, uint64_t);
  char v145;
  unint64_t v146;
  uint64_t v147;
  _BOOL8 v148;
  uint64_t v149;
  char v150;
  unint64_t v151;
  unint64_t v152;
  char v153;
  uint64_t *v154;
  uint64_t v155;
  BOOL v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  unint64_t v163;
  unint64_t v164;
  int64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(char *, uint64_t);
  uint64_t v170;
  uint64_t *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t *v183;
  uint64_t v184;
  uint64_t v185;
  _QWORD *v186;
  uint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  const char *v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  uint64_t *v199;
  int isUniquelyReferenced_nonNull_native;
  char v201;
  unint64_t v202;
  uint64_t v203;
  _BOOL8 v204;
  uint64_t v205;
  char v206;
  unint64_t v207;
  char v208;
  uint64_t *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t (*v212)(_QWORD);
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  int64_t v225;
  uint64_t v226;
  _QWORD *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  NSObject *v231;
  os_log_type_t v232;
  _BOOL4 v233;
  uint64_t v234;
  uint64_t v235;
  unint64_t v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  uint64_t (*v240)(_QWORD);
  uint64_t v241;
  NSObject *v242;
  os_log_type_t v243;
  int v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  uint64_t v248;
  unint64_t v249;
  unint64_t v250;
  uint64_t v251;
  NSObject *v252;
  os_log_type_t v253;
  uint64_t v254;
  uint64_t v255;
  unint64_t v256;
  uint64_t v257;
  unint64_t v258;
  unint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  uint64_t *v264;
  uint64_t v265;
  NSObject *v266;
  os_log_type_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  unint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  unint64_t v276;
  unint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t *v281;
  void *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  uint64_t v287;
  uint64_t v288;
  _QWORD *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t *v293;
  uint64_t v294;
  unint64_t v295;
  uint64_t v296;
  uint64_t *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  void (*v301)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v302;
  uint64_t (*v303)(_QWORD);
  unint64_t v304;
  uint64_t v305;
  uint64_t *v306;
  uint64_t v307;
  __int128 v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  unint64_t v321;
  uint64_t v322;
  unint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  unint64_t v327;
  unint64_t v328;
  uint64_t v329;
  void *v330;
  char *v331;
  char *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t *v335;
  uint64_t (*v336)(_QWORD);
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  char *v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t (*v359)(_QWORD);
  char *v360;
  uint64_t v361;
  char *v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  unint64_t v368;
  _QWORD *v369;
  char *v370;
  int64_t v371;
  int *v372;
  uint64_t v373;
  char *v374;
  uint64_t *v375;
  uint64_t *v376;
  uint64_t v377;
  char *v378;
  void (*v379)(char *, uint64_t);
  char *v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  id ObjectType;
  uint64_t v385;
  uint64_t v386[2];
  char v387;
  __int128 v388;
  __int128 v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  __int128 v404;
  __int128 v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  __int128 v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __int128 v413;
  __int128 v414;
  __int128 v415;
  __int128 v416;
  __int128 v417;
  _OWORD v418[2];
  __int128 v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;
  __int128 v423;
  __int128 v424;
  __int128 v425;
  __int128 v426;
  _OWORD v427[2];
  __int128 v428;
  __int128 v429;
  __int128 v430;
  __int128 v431;
  __int128 v432;
  __int128 v433;
  __int128 v434;
  __int128 v435;

  ObjectType = a1;
  v372 = (int *)type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  v341 = *((_QWORD *)v372 - 1);
  MEMORY[0x24BDAC7A8](v372);
  v342 = v5;
  v344 = (uint64_t)&v335 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  MEMORY[0x24BDAC7A8](v6);
  v346 = (uint64_t)&v335 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v8);
  v356 = (char *)&v335 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452C90);
  MEMORY[0x24BDAC7A8](v10);
  v357 = (uint64_t)&v335 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Message();
  v354 = *(_QWORD *)(v12 - 8);
  v355 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v358 = (uint64_t)&v335 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v353 = type metadata accessor for ReplicatorMessage(0);
  MEMORY[0x24BDAC7A8](v353);
  v361 = (uint64_t)&v335 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v352 = type metadata accessor for ReplicatorMessage.Handshake(0);
  MEMORY[0x24BDAC7A8](v352);
  v16 = (uint64_t)&v335 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v351 = type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
  v339 = *(_QWORD *)(v351 - 8);
  v17 = MEMORY[0x24BDAC7A8](v351);
  v343 = (uint64_t)&v335 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v340 = v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (uint64_t)&v335 - v19;
  v21 = sub_245387920();
  v350 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v335 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (uint64_t (*)(_QWORD))sub_245387950();
  v349 = *((_QWORD *)v24 - 1);
  MEMORY[0x24BDAC7A8](v24);
  v362 = (char *)&v335 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v337 = type metadata accessor for ZoneVersion();
  v381 = *(_QWORD *)(v337 - 8);
  v26 = MEMORY[0x24BDAC7A8](v337);
  v378 = (char *)&v335 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v383 = (uint64_t)&v335 - v28;
  v385 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF80);
  v29 = MEMORY[0x24BDAC7A8](v385);
  v368 = (unint64_t)&v335 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v369 = (uint64_t **)((char *)&v335 - v32);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v379 = (void (*)(char *, uint64_t))((char *)&v335 - v34);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v376 = (uint64_t *)((char *)&v335 - v36);
  v37 = MEMORY[0x24BDAC7A8](v35);
  v375 = (uint64_t *)((char *)&v335 - v38);
  v39 = MEMORY[0x24BDAC7A8](v37);
  v382 = (uint64_t)&v335 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v374 = (char *)&v335 - v41;
  v366 = type metadata accessor for PairingRelationship();
  v338 = *(_QWORD *)(v366 - 8);
  v42 = MEMORY[0x24BDAC7A8](v366);
  v347 = (uint64_t)&v335 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x24BDAC7A8](v42);
  v348 = (uint64_t)&v335 - v45;
  v345 = v46;
  MEMORY[0x24BDAC7A8](v44);
  v367 = (uint64_t)&v335 - v47;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452E80);
  MEMORY[0x24BDAC7A8](v48);
  v380 = (char *)&v335 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25744FD90 != -1)
LABEL_108:
    swift_once();
  v50 = sub_245387818();
  v51 = __swift_project_value_buffer(v50, (uint64_t)qword_257462FB0);
  swift_retain();
  v373 = v51;
  v52 = sub_2453877F4();
  v53 = sub_245387D34();
  v54 = os_log_type_enabled(v52, v53);
  v377 = a3;
  v364 = v16;
  v365 = v20;
  v363 = v21;
  v359 = v24;
  v360 = v23;
  if (v54)
  {
    v55 = (uint8_t *)swift_slowAlloc();
    v56 = swift_slowAlloc();
    *(_QWORD *)&v427[0] = v56;
    *(_DWORD *)v55 = 136446210;
    v58 = *((_QWORD *)a2 + 61);
    v57 = *((_QWORD *)a2 + 62);
    swift_bridgeObjectRetain();
    *(_QWORD *)&v418[0] = sub_2453816D8(v58, v57, (uint64_t *)v427);
    sub_245387E0C();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v52, v53, "(%{public}s) Sending handshake complete", v55, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v56, -1, -1);
    v59 = v55;
    a3 = v377;
    MEMORY[0x24953317C](v59, -1, -1);

    v60 = ObjectType;
    if (ObjectType)
    {
LABEL_4:
      v61 = v60;
      swift_retain();
      v62 = v60;
      swift_retain();
      v63 = v60;
      v64 = sub_2453877F4();
      v65 = sub_245387D34();
      if (os_log_type_enabled(v64, v65))
      {
        v66 = swift_slowAlloc();
        v67 = (_QWORD *)swift_slowAlloc();
        v68 = swift_slowAlloc();
        *(_QWORD *)&v427[0] = v68;
        *(_DWORD *)v66 = 136446466;
        v69 = *((_QWORD *)a2 + 61);
        v70 = *((_QWORD *)a2 + 62);
        swift_bridgeObjectRetain();
        *(_QWORD *)&v418[0] = sub_2453816D8(v69, v70, (uint64_t *)v427);
        sub_245387E0C();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v66 + 12) = 2114;
        v71 = ObjectType;
        v72 = _swift_stdlib_bridgeErrorToNSError();
        *(_QWORD *)&v418[0] = v72;
        v60 = ObjectType;
        sub_245387E0C();
        *v67 = v72;

        _os_log_impl(&dword_245256000, v64, v65, "(%{public}s) Abandoning handshake complete because prerequisites are not met: %{public}@", (uint8_t *)v66, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v67, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v68, -1, -1);
        v73 = v66;
        a3 = v377;
        MEMORY[0x24953317C](v73, -1, -1);
      }
      else
      {
        swift_release_n();

      }
      sub_245297B78(*(_QWORD *)(a3 + v372[6]), *(_QWORD *)(a3 + v372[6] + 8));

      return;
    }
  }
  else
  {

    swift_release();
    v60 = ObjectType;
    if (ObjectType)
      goto LABEL_4;
  }
  swift_beginAccess();
  v74 = *((_QWORD *)a2 + 64);
  if (!*(_QWORD *)(v74 + 16))
  {
    v84 = type metadata accessor for Replicator.Session(0);
    v76 = (uint64_t)v380;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v380, 1, 1, v84);
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  v75 = sub_2452C2058(a3);
  v76 = (uint64_t)v380;
  if ((v77 & 1) != 0)
  {
    v78 = v75;
    v79 = *(_QWORD *)(v74 + 56);
    v80 = type metadata accessor for Replicator.Session(0);
    v81 = a2;
    v82 = *(_QWORD *)(v80 - 8);
    sub_2452B792C(v79 + *(_QWORD *)(v82 + 72) * v78, v76, type metadata accessor for Replicator.Session);
    v83 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v82 + 56);
    a2 = v81;
    v83(v76, 0, 1, v80);
  }
  else
  {
    v80 = type metadata accessor for Replicator.Session(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v76, 1, 1, v80);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Replicator.Session(0);
  v85 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 48))(v76, 1, v80);
  a3 = v377;
  if (v85 == 1)
  {
LABEL_15:
    sub_245263F80(v76, &qword_257452E80);
    swift_retain();
    v86 = sub_2453877F4();
    v87 = sub_245387D1C();
    if (os_log_type_enabled(v86, v87))
    {
      v88 = (uint8_t *)swift_slowAlloc();
      v89 = swift_slowAlloc();
      *(_QWORD *)&v427[0] = v89;
      *(_DWORD *)v88 = 136446210;
      v90 = *((_QWORD *)a2 + 61);
      v91 = *((_QWORD *)a2 + 62);
      swift_bridgeObjectRetain();
      *(_QWORD *)&v418[0] = sub_2453816D8(v90, v91, (uint64_t *)v427);
      sub_245387E0C();
      swift_release();
      swift_bridgeObjectRelease();
      v92 = "(%{public}s) No session established";
LABEL_17:
      _os_log_impl(&dword_245256000, v86, v87, v92, v88, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v89, -1, -1);
      v93 = v88;
      a3 = v377;
      MEMORY[0x24953317C](v93, -1, -1);

LABEL_56:
      sub_245297B78(*(_QWORD *)(a3 + v372[6]), *(_QWORD *)(a3 + v372[6] + 8));
      return;
    }
    goto LABEL_55;
  }
  sub_245263F80(v76, &qword_257452E80);
  if (*((_BYTE *)a2 + 544) != 1)
  {
    swift_retain();
    v86 = sub_2453877F4();
    v87 = sub_245387D34();
    if (os_log_type_enabled(v86, v87))
    {
      v88 = (uint8_t *)swift_slowAlloc();
      v89 = swift_slowAlloc();
      *(_QWORD *)&v427[0] = v89;
      *(_DWORD *)v88 = 136446210;
      v158 = *((_QWORD *)a2 + 61);
      v159 = *((_QWORD *)a2 + 62);
      swift_bridgeObjectRetain();
      *(_QWORD *)&v418[0] = sub_2453816D8(v158, v159, (uint64_t *)v427);
      sub_245387E0C();
      swift_release();
      swift_bridgeObjectRelease();
      v92 = "(%{public}s) Abandoning handshake request because replicator is disabled";
      goto LABEL_17;
    }
LABEL_55:

    swift_release();
    goto LABEL_56;
  }
  v94 = v372;
  v95 = (_OWORD *)(a3 + v372[6]);
  v96 = v95[5];
  v97 = v95[7];
  v423 = v95[6];
  v424 = v97;
  v98 = v95[9];
  v99 = v95[7];
  v425 = v95[8];
  v426 = v98;
  v100 = v95[1];
  v101 = v95[3];
  v419 = v95[2];
  v420 = v101;
  v102 = v95[5];
  v103 = v95[3];
  v421 = v95[4];
  v422 = v102;
  v104 = v95[1];
  v418[0] = *v95;
  v418[1] = v104;
  v412 = v421;
  v413 = v96;
  v410 = v419;
  v411 = v103;
  v105 = v95[9];
  v416 = v425;
  v417 = v105;
  v414 = v423;
  v415 = v99;
  v408 = v418[0];
  v409 = v100;
  v106 = (_QWORD *)(a3 + v372[5]);
  v107 = a3;
  v109 = v106[1];
  *(_QWORD *)&v398 = *v106;
  v108 = v398;
  *((_QWORD *)&v398 + 1) = v109;
  sub_24526432C((uint64_t)v418);
  sub_24526B470(v108, v109);
  v110 = v367;
  v336 = a2;
  sub_24528B268(&v408, (uint64_t)&v398, 0, 1, v367);
  sub_24526B484(v108, v109);
  sub_245269928((uint64_t)v418);
  v111 = *(char **)(v107 + v94[7]);
  v112 = (uint64_t *)(v110 + *(int *)(v366 + 20));
  v113 = *((_OWORD *)v112 + 5);
  v430 = *((_OWORD *)v112 + 4);
  v431 = v113;
  v114 = *((_OWORD *)v112 + 3);
  v428 = *((_OWORD *)v112 + 2);
  v429 = v114;
  v115 = *((_OWORD *)v112 + 9);
  v434 = *((_OWORD *)v112 + 8);
  v435 = v115;
  v116 = *((_OWORD *)v112 + 7);
  v432 = *((_OWORD *)v112 + 6);
  v433 = v116;
  v117 = *(_OWORD *)v112;
  v118 = *((_OWORD *)v112 + 1);
  v335 = v112;
  v427[0] = v117;
  v427[1] = v118;
  v119 = v428;
  v120 = *((_QWORD *)v111 + 8);
  v370 = v111 + 64;
  v121 = 1 << v111[32];
  v122 = -1;
  if (v121 < 64)
    v122 = ~(-1 << v121);
  v123 = v122 & v120;
  sub_24526432C((uint64_t)v427);
  v371 = (unint64_t)(v121 + 63) >> 6;
  v380 = v111;
  swift_bridgeObjectRetain();
  if (v119 > 7)
  {
    v160 = 0;
    v125 = (_QWORD *)MEMORY[0x24BEE4B00];
    v161 = v381;
    v162 = v369;
    while (1)
    {
      if (v123)
      {
        v163 = __clz(__rbit64(v123));
        v123 &= v123 - 1;
        v383 = v160;
        v164 = v163 | (v160 << 6);
      }
      else
      {
        v165 = v160 + 1;
        if (__OFADD__(v160, 1))
          goto LABEL_112;
        if (v165 >= v371)
        {
LABEL_91:
          swift_release();
          sub_245269928((uint64_t)v427);
          v212 = v336;
          swift_beginAccess();
          sub_24525E4F0((uint64_t)v212 + 192, (uint64_t)&v408);
          v213 = *((_QWORD *)&v409 + 1);
          v214 = v410;
          __swift_project_boxed_opaque_existential_1(&v408, *((uint64_t *)&v409 + 1));
          v215 = v367;
          v216 = MetadataStoring.mismatchedZoneVersions(for:remoteZoneVersions:)(v367, (uint64_t)v125, v213, *(_QWORD *)(v214 + 8));
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v408);
          v217 = swift_bridgeObjectRetain();
          v218 = sub_24532DB5C(v217);
          swift_bridgeObjectRelease();
          sub_24525E4F0((uint64_t)v212 + 192, (uint64_t)&v408);
          v219 = *((_QWORD *)&v409 + 1);
          v220 = v410;
          __swift_project_boxed_opaque_existential_1(&v408, *((uint64_t *)&v409 + 1));
          v221 = swift_bridgeObjectRetain();
          v382 = v216;
          v222 = sub_24531BA50(v221);
          v385 = MetadataStoring.recordVersions(for:zoneIDs:)(v215, v222, v219, *(_QWORD *)(v220 + 8));
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v408);
          sub_24525E4F0((uint64_t)v212 + 192, (uint64_t)&v408);
          v223 = *((_QWORD *)&v409 + 1);
          v224 = v410;
          __swift_project_boxed_opaque_existential_1(&v408, *((uint64_t *)&v409 + 1));
          v225 = *(_QWORD *)(v377 + v372[8]);
          swift_beginAccess();
          v226 = swift_bridgeObjectRetain();
          v227 = sub_24532DA78(v226);
          swift_bridgeObjectRelease();
          v228 = *(_QWORD *)(v224 + 8);
          ObjectType = v218;
          v229 = MetadataStoring.mismatchedRecordIDs(for:remoteRecordVersions:zoneIDs:disabledClientIDs:)(v215, v225, (uint64_t)v218, v227, v223, v228);
          swift_release();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v408);
          v230 = v348;
          sub_2452B792C(v215, v348, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          swift_retain();
          v231 = sub_2453877F4();
          v232 = sub_245387D34();
          v233 = os_log_type_enabled(v231, v232);
          v383 = v229;
          if (v233)
          {
            v234 = swift_slowAlloc();
            v235 = swift_slowAlloc();
            *(_QWORD *)&v408 = v235;
            *(_DWORD *)v234 = 136446466;
            v237 = *((_QWORD *)v212 + 61);
            v236 = *((_QWORD *)v212 + 62);
            swift_bridgeObjectRetain();
            *(_QWORD *)&v398 = sub_2453816D8(v237, v236, (uint64_t *)&v408);
            sub_245387E0C();
            swift_release();
            swift_bridgeObjectRelease();
            *(_WORD *)(v234 + 12) = 2082;
            sub_2452B792C(v230, v347, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
            v238 = sub_245387B48();
            *(_QWORD *)&v398 = sub_2453816D8(v238, v239, (uint64_t *)&v408);
            sub_245387E0C();
            swift_bridgeObjectRelease();
            sub_2452B7B5C(v230, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
            _os_log_impl(&dword_245256000, v231, v232, "(%{public}s) [Send Complete] Found pairing relationship: %{public}s", (uint8_t *)v234, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x24953317C](v235, -1, -1);
            MEMORY[0x24953317C](v234, -1, -1);
          }
          else
          {
            swift_release();
            sub_2452B7B5C(v230, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          }

          v240 = v212;
          v241 = v382;
          if (*(_QWORD *)(v382 + 16))
          {
            swift_bridgeObjectRetain_n();
            swift_retain();
            v242 = sub_2453877F4();
            v243 = sub_245387D34();
            v244 = v243;
            if (os_log_type_enabled(v242, v243))
            {
              v245 = swift_slowAlloc();
              v381 = swift_slowAlloc();
              *(_QWORD *)&v408 = v381;
              *(_DWORD *)v245 = 136446722;
              LODWORD(v380) = v244;
              v246 = *((_QWORD *)v212 + 61);
              v247 = *((_QWORD *)v212 + 62);
              swift_bridgeObjectRetain();
              *(_QWORD *)&v398 = sub_2453816D8(v246, v247, (uint64_t *)&v408);
              sub_245387E0C();
              swift_release();
              swift_bridgeObjectRelease();
              *(_WORD *)(v245 + 12) = 2050;
              *(_QWORD *)&v398 = *(_QWORD *)(v241 + 16);
              sub_245387E0C();
              swift_bridgeObjectRelease();
              *(_WORD *)(v245 + 22) = 2082;
              sub_2452B7DEC();
              swift_bridgeObjectRetain();
              v248 = sub_245387A70();
              v250 = v249;
              swift_bridgeObjectRelease();
              *(_QWORD *)&v398 = sub_2453816D8(v248, v250, (uint64_t *)&v408);
              sub_245387E0C();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_245256000, v242, (os_log_type_t)v380, "(%{public}s) [Send Complete] Found mismatched zones (%{public}ld: %{public}s", (uint8_t *)v245, 0x20u);
              v251 = v381;
              swift_arrayDestroy();
              MEMORY[0x24953317C](v251, -1, -1);
              MEMORY[0x24953317C](v245, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_release();
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          swift_retain_n();
          swift_bridgeObjectRetain_n();
          v252 = sub_2453877F4();
          v253 = sub_245387D34();
          if (os_log_type_enabled(v252, v253))
          {
            v254 = swift_slowAlloc();
            v382 = swift_slowAlloc();
            *(_QWORD *)&v408 = v382;
            *(_DWORD *)v254 = 136446466;
            v255 = *((_QWORD *)v336 + 61);
            v256 = *((_QWORD *)v336 + 62);
            swift_bridgeObjectRetain();
            *(_QWORD *)&v398 = sub_2453816D8(v255, v256, (uint64_t *)&v408);
            sub_245387E0C();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v254 + 12) = 2082;
            type metadata accessor for Record.ID(0);
            sub_245387740();
            sub_24525C6C4((unint64_t *)&qword_257452340, type metadata accessor for Record.ID, (uint64_t)&protocol conformance descriptor for Record.ID);
            swift_bridgeObjectRetain();
            v257 = sub_245387A70();
            v259 = v258;
            swift_bridgeObjectRelease();
            *(_QWORD *)&v398 = sub_2453816D8(v257, v259, (uint64_t *)&v408);
            sub_245387E0C();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_245256000, v252, v253, "(%{public}s) [Send Complete] Sending record versions: %{public}s", (uint8_t *)v254, 0x16u);
            v260 = v382;
            swift_arrayDestroy();
            v240 = v336;
            MEMORY[0x24953317C](v260, -1, -1);
            MEMORY[0x24953317C](v254, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_release_n();
          }
          v261 = v377;
          v263 = v362;
          v262 = v363;
          v264 = v335;
          v265 = v383;
          if (*(_QWORD *)(v383 + 16))
          {
            swift_bridgeObjectRetain_n();
            swift_retain();
            v266 = sub_2453877F4();
            v267 = sub_245387D34();
            if (os_log_type_enabled(v266, v267))
            {
              v268 = swift_slowAlloc();
              v269 = swift_slowAlloc();
              *(_QWORD *)&v408 = v269;
              *(_DWORD *)v268 = 136446722;
              v270 = v265;
              v271 = *((_QWORD *)v336 + 61);
              v272 = *((_QWORD *)v336 + 62);
              swift_bridgeObjectRetain();
              *(_QWORD *)&v398 = sub_2453816D8(v271, v272, (uint64_t *)&v408);
              sub_245387E0C();
              swift_release();
              swift_bridgeObjectRelease();
              *(_WORD *)(v268 + 12) = 2050;
              *(_QWORD *)&v398 = *(_QWORD *)(v270 + 16);
              sub_245387E0C();
              *(_WORD *)(v268 + 22) = 2082;
              v273 = type metadata accessor for Record.ID(0);
              v274 = swift_bridgeObjectRetain();
              v275 = MEMORY[0x249531F88](v274, v273);
              v277 = v276;
              swift_bridgeObjectRelease();
              v278 = v275;
              v265 = v270;
              *(_QWORD *)&v398 = sub_2453816D8(v278, v277, (uint64_t *)&v408);
              v264 = v335;
              v261 = v377;
              sub_245387E0C();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_245256000, v266, v267, "(%{public}s) [Send Complete] Found mismatched records (%{public}ld): %{public}s", (uint8_t *)v268, 0x20u);
              swift_arrayDestroy();
              v240 = v336;
              MEMORY[0x24953317C](v269, -1, -1);
              v279 = v268;
              v263 = v362;
              v262 = v363;
              MEMORY[0x24953317C](v279, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_release();
            }
          }
          sub_245294618(v265, v261);
          swift_bridgeObjectRelease();
          sub_245297B78(*v264, v264[1]);
          sub_24526D8E4();
          v280 = *((_QWORD *)v240 + 29);
          *(_QWORD *)&v410 = sub_2452BACF0;
          *((_QWORD *)&v410 + 1) = v240;
          *(_QWORD *)&v408 = MEMORY[0x24BDAC760];
          *((_QWORD *)&v408 + 1) = 1107296256;
          *(_QWORD *)&v409 = sub_24525DD34;
          *((_QWORD *)&v409 + 1) = &block_descriptor_1333;
          v281 = v264;
          v282 = _Block_copy(&v408);
          swift_retain();
          sub_245387938();
          *(_QWORD *)&v398 = MEMORY[0x24BEE4AF8];
          v283 = sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
          v284 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
          v285 = sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
          v286 = v360;
          v380 = (char *)v285;
          v381 = v284;
          v382 = v283;
          sub_245387E3C();
          v383 = v280;
          MEMORY[0x2495320E4](0, v263, v286, v282);
          _Block_release(v282);
          v379 = *(void (**)(char *, uint64_t))(v350 + 8);
          v379(v286, v262);
          v378 = *(char **)(v349 + 8);
          ((void (*)(char *, uint64_t (*)(_QWORD)))v378)(v263, v359);
          v287 = swift_release();
          MEMORY[0x24BDAC7A8](v287);
          v288 = v367;
          v334 = v367;
          v289 = sub_24529449C((void (*)(uint64_t *__return_ptr, _QWORD *))sub_2452BAD08, (uint64_t)(&v335 - 4), (uint64_t)ObjectType);
          swift_release();
          v290 = sub_245387740();
          v291 = *(_QWORD *)(v290 - 8);
          v292 = v365;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v291 + 16))(v365, v377, v290);
          v293 = (uint64_t *)(v288 + *(int *)(v366 + 32));
          v294 = *v293;
          v295 = v293[1];
          v296 = v351;
          v297 = (uint64_t *)(v292 + *(int *)(v351 + 20));
          *v297 = v294;
          v297[1] = v295;
          *(_QWORD *)(v292 + *(int *)(v296 + 24)) = v289;
          *(_QWORD *)(v292 + *(int *)(v296 + 28)) = v385;
          v298 = v364;
          sub_2452B792C(v292, v364, type metadata accessor for ReplicatorMessage.Handshake.Complete);
          swift_storeEnumTagMultiPayload();
          v299 = v298;
          v300 = v361;
          sub_2452B792C(v299, v361, type metadata accessor for ReplicatorMessage.Handshake);
          swift_storeEnumTagMultiPayload();
          v301 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v291 + 56);
          v302 = v300;
          v303 = v336;
          v304 = (unint64_t)v356;
          v301(v356, 1, 1, v290);
          sub_24526B470(v294, v295);
          v305 = v357;
          sub_245285964(v302, v288, v304, v357);
          sub_245263F80(v304, &qword_25440C700);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v354 + 56))(v305, 0, 1, v355);
          sub_2452B7AB8(v305, v358, (uint64_t (*)(_QWORD))type metadata accessor for Message);
          v306 = (uint64_t *)*((_QWORD *)v303 + 23);
          v385 = *((_QWORD *)v303 + 22);
          v376 = v306;
          ObjectType = (id)swift_getObjectType();
          v307 = sub_2453875E4();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v307 - 8) + 56))(v346, 1, 1, v307);
          v308 = *((_OWORD *)v281 + 6);
          v309 = *((_OWORD *)v281 + 8);
          v405 = *((_OWORD *)v281 + 7);
          v406 = v309;
          v310 = *((_OWORD *)v281 + 8);
          v407 = *((_OWORD *)v281 + 9);
          v311 = *((_OWORD *)v281 + 2);
          v312 = *((_OWORD *)v281 + 4);
          v401 = *((_OWORD *)v281 + 3);
          v402 = v312;
          v313 = *((_OWORD *)v281 + 4);
          v314 = *((_OWORD *)v281 + 6);
          v403 = *((_OWORD *)v281 + 5);
          v404 = v314;
          v315 = *(_OWORD *)v281;
          v316 = *((_OWORD *)v281 + 2);
          v399 = *((_OWORD *)v281 + 1);
          v400 = v316;
          v393 = v403;
          v394 = v308;
          v317 = *(_OWORD *)v281;
          v395 = v405;
          v396 = v310;
          v397 = *((_OWORD *)v281 + 9);
          v398 = v317;
          v390 = v311;
          v391 = v401;
          v392 = v313;
          v388 = v315;
          v389 = v399;
          v387 = 0;
          v386[0] = 0x403E000000000000;
          v386[1] = 0;
          v318 = v344;
          sub_2452B792C(v377, v344, type metadata accessor for ReplicatorMessage.Handshake.Response);
          v319 = v288;
          v320 = v347;
          sub_2452B792C(v319, v347, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          v321 = (*(unsigned __int8 *)(v341 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v341 + 80);
          v322 = *(unsigned __int8 *)(v338 + 80);
          v323 = (v342 + v322 + v321) & ~v322;
          v324 = swift_allocObject();
          *(_QWORD *)(v324 + 16) = v303;
          sub_2452B7AB8(v318, v324 + v321, type metadata accessor for ReplicatorMessage.Handshake.Response);
          sub_2452B7AB8(v320, v324 + v323, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          swift_retain();
          sub_24526432C((uint64_t)&v398);
          v325 = v346;
          sub_245299680(v358, v346, &v388, &v387, v386, (uint64_t)sub_2452BAF30, v324, (uint64_t)ObjectType, (uint64_t)v376);
          swift_release();
          v414 = v394;
          v415 = v395;
          v416 = v396;
          v417 = v397;
          v410 = v390;
          v411 = v391;
          v412 = v392;
          v413 = v393;
          v408 = v388;
          v409 = v389;
          sub_245269928((uint64_t)&v408);
          sub_245263F80(v325, &qword_25744F610);
          v326 = v343;
          sub_2452B792C(v365, v343, type metadata accessor for ReplicatorMessage.Handshake.Complete);
          sub_2452B792C(v367, v320, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          v327 = (*(unsigned __int8 *)(v339 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v339 + 80);
          v328 = (v340 + v322 + v327) & ~v322;
          v329 = swift_allocObject();
          *(_QWORD *)(v329 + 16) = v303;
          sub_2452B7AB8(v326, v329 + v327, type metadata accessor for ReplicatorMessage.Handshake.Complete);
          sub_2452B7AB8(v320, v329 + v328, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          *(_QWORD *)&v390 = sub_2452BAFB0;
          *((_QWORD *)&v390 + 1) = v329;
          *(_QWORD *)&v388 = MEMORY[0x24BDAC760];
          *((_QWORD *)&v388 + 1) = 1107296256;
          *(_QWORD *)&v389 = sub_24525DD34;
          *((_QWORD *)&v389 + 1) = &block_descriptor_1342;
          v330 = _Block_copy(&v388);
          swift_retain();
          v331 = v362;
          sub_245387938();
          v386[0] = MEMORY[0x24BEE4AF8];
          v332 = v360;
          v333 = v363;
          sub_245387E3C();
          MEMORY[0x2495320E4](0, v331, v332, v330);
          _Block_release(v330);
          v379(v332, v333);
          ((void (*)(char *, uint64_t (*)(_QWORD)))v378)(v331, v359);
          sub_2452B7B5C(v358, (uint64_t (*)(_QWORD))type metadata accessor for Message);
          sub_2452B7B5C(v361, type metadata accessor for ReplicatorMessage);
          sub_2452B7B5C(v364, type metadata accessor for ReplicatorMessage.Handshake);
          sub_2452B7B5C(v365, type metadata accessor for ReplicatorMessage.Handshake.Complete);
          sub_2452B7B5C(v367, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          swift_release();
          return;
        }
        v166 = *(_QWORD *)&v370[8 * v165];
        v167 = v160 + 1;
        if (!v166)
        {
          v167 = v160 + 2;
          if (v160 + 2 >= v371)
            goto LABEL_91;
          v166 = *(_QWORD *)&v370[8 * v167];
          if (!v166)
          {
            v167 = v160 + 3;
            if (v160 + 3 >= v371)
              goto LABEL_91;
            v166 = *(_QWORD *)&v370[8 * v167];
            if (!v166)
            {
              v167 = v160 + 4;
              if (v160 + 4 >= v371)
                goto LABEL_91;
              v166 = *(_QWORD *)&v370[8 * v167];
              if (!v166)
              {
                v168 = v160 + 5;
                if (v160 + 5 >= v371)
                  goto LABEL_91;
                v166 = *(_QWORD *)&v370[8 * v168];
                if (!v166)
                {
                  while (1)
                  {
                    v167 = v168 + 1;
                    if (__OFADD__(v168, 1))
                      goto LABEL_115;
                    if (v167 >= v371)
                      goto LABEL_91;
                    v166 = *(_QWORD *)&v370[8 * v167];
                    ++v168;
                    if (v166)
                      goto LABEL_77;
                  }
                }
                v167 = v160 + 5;
              }
            }
          }
        }
LABEL_77:
        v123 = (v166 - 1) & v166;
        v383 = v167;
        v164 = __clz(__rbit64(v166)) + (v167 << 6);
      }
      v169 = v379;
      v170 = *((_QWORD *)v380 + 7);
      v171 = (uint64_t *)(*((_QWORD *)v380 + 6) + 16 * v164);
      v173 = *v171;
      v172 = v171[1];
      v382 = *(_QWORD *)(v161 + 72);
      sub_2452B792C(v170 + v382 * v164, (uint64_t)v379 + *(int *)(v385 + 48), (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      *(_QWORD *)v169 = v173;
      *((_QWORD *)v169 + 1) = v172;
      sub_2452BC850((uint64_t)v169, (uint64_t)v162, &qword_25744FF80);
      v174 = v162[1];
      *(_QWORD *)&v408 = *v162;
      *((_QWORD *)&v408 + 1) = v174;
      *(_QWORD *)&v398 = 14906;
      *((_QWORD *)&v398 + 1) = 0xE200000000000000;
      sub_2452BA544();
      swift_bridgeObjectRetain();
      v175 = (_QWORD *)sub_245387CEC();
      v176 = v175;
      if (v175[2] == 2)
      {
        v177 = v175[4];
        v178 = v175[5];
        v179 = v175[6];
        v180 = v175[7];
        swift_bridgeObjectRetain();
        v181 = MEMORY[0x249531EBC](v177, v178, v179, v180);
        v183 = v182;
        swift_bridgeObjectRelease();
        if (v176[2] < 2uLL)
        {
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
          goto LABEL_116;
        }
        ObjectType = (id)v123;
        v184 = v176[8];
        v185 = v176[9];
        v376 = v183;
        v186 = v125;
        v187 = v181;
        v188 = v162;
        v189 = v176[10];
        v190 = v176[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v191 = MEMORY[0x249531EBC](v184, v185, v189, v190);
        v193 = v192;
        swift_bridgeObjectRelease();
        v194 = *(int *)(v385 + 48);
        v195 = (const char *)(v368 + v194);
        sub_2452B792C((uint64_t)v188 + v194, v368 + v194, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
        v196 = (uint64_t)v195;
        v197 = v187;
        v198 = v186;
        v199 = v376;
        sub_2452B7AB8(v196, (uint64_t)v378, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v408 = v198;
        v202 = sub_2452C1EB4(v187, (uint64_t)v199, v191, v193);
        v203 = v198[2];
        v204 = (v201 & 1) == 0;
        v205 = v203 + v204;
        if (__OFADD__(v203, v204))
          goto LABEL_110;
        v206 = v201;
        if (v198[3] >= v205)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_2452C8B00();
        }
        else
        {
          sub_2452C4EB8(v205, isUniquelyReferenced_nonNull_native);
          v207 = sub_2452C1EB4(v187, (uint64_t)v199, v191, v193);
          if ((v206 & 1) != (v208 & 1))
            goto LABEL_117;
          v202 = v207;
        }
        v123 = (unint64_t)ObjectType;
        v125 = (_QWORD *)v408;
        if ((v206 & 1) != 0)
        {
          sub_2452BC64C((uint64_t)v378, *(_QWORD *)(v408 + 56) + v202 * v382, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
        }
        else
        {
          *(_QWORD *)(v408 + 8 * (v202 >> 6) + 64) |= 1 << v202;
          v209 = (uint64_t *)(v125[6] + 32 * v202);
          *v209 = v197;
          v209[1] = (uint64_t)v199;
          v209[2] = v191;
          v209[3] = v193;
          sub_2452B7AB8((uint64_t)v378, v125[7] + v202 * v382, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
          v210 = v125[2];
          v156 = __OFADD__(v210, 1);
          v211 = v210 + 1;
          if (v156)
            goto LABEL_114;
          v125[2] = v211;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v161 = v381;
        v162 = v369;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_245263F80((uint64_t)v162, &qword_25744FF80);
      v160 = v383;
    }
  }
  v124 = 0;
  v125 = (_QWORD *)MEMORY[0x24BEE4B00];
  v24 = (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion;
  v368 = (unint64_t)"Swift/UnsafePointer.swift";
  v369 = (_QWORD *)0x8000000245393670;
  while (1)
  {
    v379 = (void (*)(char *, uint64_t))v125;
    if (v123)
    {
      ObjectType = (id)((v123 - 1) & v123);
      v378 = v124;
      v126 = __clz(__rbit64(v123)) | ((_QWORD)v124 << 6);
      goto LABEL_43;
    }
    v127 = (int64_t)(v124 + 1);
    if (__OFADD__(v124, 1))
      goto LABEL_113;
    if (v127 >= v371)
      goto LABEL_91;
    v128 = *(_QWORD *)&v370[8 * v127];
    v129 = (int64_t)(v124 + 1);
    if (!v128)
    {
      v129 = (int64_t)(v124 + 2);
      if ((uint64_t)(v124 + 2) >= v371)
        goto LABEL_91;
      v128 = *(_QWORD *)&v370[8 * v129];
      if (!v128)
      {
        v129 = (int64_t)(v124 + 3);
        if ((uint64_t)(v124 + 3) >= v371)
          goto LABEL_91;
        v128 = *(_QWORD *)&v370[8 * v129];
        if (!v128)
        {
          v129 = (int64_t)(v124 + 4);
          if ((uint64_t)(v124 + 4) >= v371)
            goto LABEL_91;
          v128 = *(_QWORD *)&v370[8 * v129];
          if (!v128)
            break;
        }
      }
    }
LABEL_42:
    ObjectType = (id)((v128 - 1) & v128);
    v378 = (char *)v129;
    v126 = __clz(__rbit64(v128)) + (v129 << 6);
LABEL_43:
    v131 = (uint64_t *)(*((_QWORD *)v380 + 6) + 16 * v126);
    v133 = *v131;
    v132 = v131[1];
    v20 = *(_QWORD *)(v381 + 72);
    v23 = (char *)v385;
    v134 = v374;
    sub_2452B792C(*((_QWORD *)v380 + 7) + v20 * v126, (uint64_t)&v374[*(int *)(v385 + 48)], v24);
    *v134 = v133;
    v134[1] = v132;
    a2 = v24;
    v135 = (uint64_t *)v382;
    sub_2452BC850((uint64_t)v134, v382, &qword_25744FF80);
    v136 = *((int *)v23 + 12);
    v137 = v375;
    v138 = (uint64_t)v375 + v136;
    v139 = (uint64_t)v135 + v136;
    a3 = *v135;
    v21 = v135[1];
    *v375 = *v135;
    v137[1] = v21;
    sub_2452B792C((uint64_t)v135 + v136, (uint64_t)v137 + v136, a2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2452B7B5C(v138, a2);
    v140 = v376;
    v141 = (uint64_t)v376 + *((int *)v23 + 12);
    v142 = *v135;
    v143 = v135[1];
    v24 = a2;
    *v376 = v142;
    v140[1] = v143;
    sub_2452B792C(v139, v141, a2);
    sub_2452B7AB8(v141, v383, a2);
    v144 = v379;
    v16 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v408 = v144;
    v146 = sub_2452C1EB4(a3, v21, 0xD000000000000011, (uint64_t)v369);
    v147 = *((_QWORD *)v144 + 2);
    v148 = (v145 & 1) == 0;
    v149 = v147 + v148;
    if (__OFADD__(v147, v148))
    {
      __break(1u);
      goto LABEL_108;
    }
    v150 = v145;
    if (*((_QWORD *)v144 + 3) >= v149)
    {
      if ((v16 & 1) == 0)
        sub_2452C8B00();
      v151 = v368;
      v125 = (_QWORD *)v408;
      if ((v150 & 1) != 0)
        goto LABEL_23;
    }
    else
    {
      sub_2452C4EB8(v149, v16);
      v151 = v368;
      v152 = sub_2452C1EB4(a3, v21, 0xD000000000000011, v368 | 0x8000000000000000);
      if ((v150 & 1) != (v153 & 1))
        goto LABEL_117;
      v146 = v152;
      v125 = (_QWORD *)v408;
      if ((v150 & 1) != 0)
      {
LABEL_23:
        sub_2452BC64C(v383, v125[7] + v146 * v20, v24);
        goto LABEL_24;
      }
    }
    v125[(v146 >> 6) + 8] |= 1 << v146;
    v154 = (uint64_t *)(v125[6] + 32 * v146);
    *v154 = a3;
    v154[1] = v21;
    v154[2] = 0xD000000000000011;
    v154[3] = v151 | 0x8000000000000000;
    sub_2452B7AB8(v383, v125[7] + v146 * v20, v24);
    v155 = v125[2];
    v156 = __OFADD__(v155, 1);
    v157 = v155 + 1;
    if (v156)
      goto LABEL_111;
    v125[2] = v157;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_24:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_245263F80(v382, &qword_25744FF80);
    v123 = (unint64_t)ObjectType;
    v124 = v378;
  }
  v130 = v124 + 5;
  if ((uint64_t)(v124 + 5) >= v371)
    goto LABEL_91;
  v128 = *(_QWORD *)&v370[8 * (_QWORD)v130];
  if (v128)
  {
    v129 = (int64_t)(v124 + 5);
    goto LABEL_42;
  }
  while (1)
  {
    v129 = (int64_t)(v130 + 1);
    if (__OFADD__(v130, 1))
      break;
    if (v129 >= v371)
      goto LABEL_91;
    v128 = *(_QWORD *)&v370[8 * v129];
    ++v130;
    if (v128)
      goto LABEL_42;
  }
LABEL_116:
  __break(1u);
LABEL_117:
  sub_2453883DC();
  __break(1u);
}

uint64_t sub_24529EF88@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *a1;
  v4 = a1[1];
  v7 = a1[2];
  v6 = a1[3];
  if (*(_QWORD *)(a2 + *(int *)(type metadata accessor for PairingRelationship() + 20) + 32) > 7uLL)
  {
    swift_bridgeObjectRetain();
    sub_245387B90();
    swift_bridgeObjectRetain();
    sub_245387B90();
    result = swift_bridgeObjectRelease();
    *a3 = v5;
    a3[1] = v4;
  }
  else if (v7 == 0xD000000000000011 && v6 == 0x8000000245393670 || (result = sub_245388274(), (result & 1) != 0))
  {
    *a3 = v5;
    a3[1] = v4;
    return swift_bridgeObjectRetain();
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
  }
  return result;
}

uint64_t sub_24529F09C(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(_QWORD);
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  char v20;
  uint64_t v21;
  void *v22;
  uint64_t result;
  uint64_t v24;
  void *v25;
  int v26;
  dispatch_queue_t v27;
  _QWORD aBlock[6];

  v26 = a2;
  v25 = a1;
  v8 = type metadata accessor for PairingRelationship();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(dispatch_queue_t *)(a3 + 232);
  sub_2452B792C(a4, (uint64_t)v14, v15);
  sub_2452B792C(a5, (uint64_t)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  v16 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v17 = (v13 + *(unsigned __int8 *)(v9 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v18 = swift_allocObject();
  v19 = v25;
  *(_QWORD *)(v18 + 16) = v25;
  v20 = v26 & 1;
  *(_BYTE *)(v18 + 24) = v26 & 1;
  *(_QWORD *)(v18 + 32) = a3;
  sub_2452B7AB8((uint64_t)v14, v18 + v16, type metadata accessor for ReplicatorMessage.Handshake.Response);
  sub_2452B7AB8((uint64_t)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_2452BB2F0;
  *(_QWORD *)(v21 + 24) = v18;
  aBlock[4] = sub_2452643B4;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525B888;
  aBlock[3] = &block_descriptor_1375;
  v22 = _Block_copy(aBlock);
  sub_245263EDC(v19, v20);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v27, v22);
  _Block_release(v22);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((a3 & 1) != 0)
    __break(1u);
  return result;
}

void sub_24529F2E4(void *a1, char a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  id v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  void *v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char v35;
  void (*v36)(id *, uint64_t *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  id v41[2];
  char v42;
  __int128 v43;
  char v44;

  if ((a2 & 1) != 0)
  {
    v41[0] = a1;
    v9 = a1;
    v10 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C868);
    if (swift_dynamicCast() && v44 == 2)
    {
      if (qword_25744FD90 != -1)
        swift_once();
      v11 = sub_245387818();
      __swift_project_value_buffer(v11, (uint64_t)qword_257462FB0);
      sub_245263EDC(a1, 1);
      sub_245263EDC(a1, 1);
      swift_retain();
      v12 = sub_2453877F4();
      v13 = sub_245387D34();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = swift_slowAlloc();
        v38 = swift_slowAlloc();
        v39 = v38;
        *(_DWORD *)v14 = 136446466;
        v16 = a3[61];
        v15 = a3[62];
        swift_bridgeObjectRetain();
        sub_2453816D8(v16, v15, &v39);
        sub_245387E0C();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2082;
        v17 = a1;
        v18 = sub_245387B48();
        sub_2453816D8(v18, v19, &v39);
        sub_245387E0C();
        swift_bridgeObjectRelease();
        sub_245263EE8(a1, 1);
        sub_245263EE8(a1, 1);
        _os_log_impl(&dword_245256000, v12, v13, "(%{public}s) Handshake request blocked by allow list: %{public}s.", (uint8_t *)v14, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v38, -1, -1);
        MEMORY[0x24953317C](v14, -1, -1);
      }
      else
      {
        swift_release();
        sub_245263EE8(a1, 1);
        sub_245263EE8(a1, 1);
      }

      v37 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
      sub_245297B78(*(_QWORD *)(a4 + *(int *)(v37 + 24)), *(_QWORD *)(a4 + *(int *)(v37 + 24) + 8));
      sub_245263EE8(a1, 1);

    }
    else
    {

      if (qword_25744FD90 != -1)
        swift_once();
      v20 = sub_245387818();
      __swift_project_value_buffer(v20, (uint64_t)qword_257462FB0);
      sub_245263EDC(a1, 1);
      sub_245263EDC(a1, 1);
      swift_retain();
      v21 = sub_2453877F4();
      v22 = sub_245387D1C();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc();
        v24 = (void *)swift_slowAlloc();
        v41[0] = v24;
        *(_DWORD *)v23 = 136446466;
        v26 = a3[61];
        v25 = a3[62];
        swift_bridgeObjectRetain();
        sub_2453816D8(v26, v25, (uint64_t *)v41);
        sub_245387E0C();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2082;
        v27 = a1;
        v28 = sub_245387B48();
        v39 = sub_2453816D8(v28, v29, (uint64_t *)v41);
        sub_245387E0C();
        swift_bridgeObjectRelease();
        sub_245263EE8(a1, 1);
        sub_245263EE8(a1, 1);
        _os_log_impl(&dword_245256000, v21, v22, "(%{public}s) Error sending handshake complete: %{public}s", (uint8_t *)v23, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v24, -1, -1);
        MEMORY[0x24953317C](v23, -1, -1);
      }
      else
      {
        swift_release();
        sub_245263EE8(a1, 1);
        sub_245263EE8(a1, 1);
      }

      v30 = a3 + 48;
      v32 = a3[51];
      v31 = a3[52];
      __swift_project_boxed_opaque_existential_1(v30, v32);
      v33 = a5 + *(int *)(type metadata accessor for PairingRelationship() + 20);
      v34 = *(void **)(v33 + 8);
      v35 = *(_BYTE *)(v33 + 48);
      v41[0] = *(id *)v33;
      v41[1] = v34;
      v42 = v35;
      v43 = *(_OWORD *)(v33 + 32);
      v39 = 0;
      v40 = 2;
      v36 = *(void (**)(id *, uint64_t *, uint64_t, uint64_t))(v31 + 16);
      swift_bridgeObjectRetain();
      v36(v41, &v39, v32, v31);
      sub_245263EE8(a1, 1);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_24529F824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _OWORD v19[10];
  uint64_t v20[2];
  _OWORD v21[2];
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ReplicatorMessage.Handshake.Complete(0) + 20));
  v6 = v4[1];
  v20[0] = *v4;
  v5 = v20[0];
  v20[1] = v6;
  v7 = (_OWORD *)(a3 + *(int *)(type metadata accessor for PairingRelationship() + 20));
  v8 = v7[7];
  v9 = v7[5];
  v26 = v7[6];
  v27 = v8;
  v10 = v7[7];
  v11 = v7[9];
  v28 = v7[8];
  v29 = v11;
  v12 = v7[3];
  v13 = v7[1];
  v22 = v7[2];
  v23 = v12;
  v14 = v7[3];
  v15 = v7[5];
  v24 = v7[4];
  v25 = v15;
  v16 = v7[1];
  v21[0] = *v7;
  v21[1] = v16;
  v19[6] = v26;
  v19[7] = v10;
  v17 = v7[9];
  v19[8] = v28;
  v19[9] = v17;
  v19[2] = v22;
  v19[3] = v14;
  v19[4] = v24;
  v19[5] = v9;
  v19[0] = v21[0];
  v19[1] = v13;
  sub_24526B470(v20[0], v6);
  sub_24526432C((uint64_t)v21);
  sub_245295594(v20, (uint64_t)v19);
  sub_245269928((uint64_t)v21);
  return sub_24526B484(v5, v6);
}

void sub_24529F910(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  id v36;
  id v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  int *v55;
  _QWORD *v56;
  _OWORD *v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t ObjectType;
  uint64_t v67;
  uint64_t v68;
  _OWORD *v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t, __int128 *, char *, uint64_t (*)(uint64_t, char), uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  _OWORD v118[2];
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  _OWORD v127[11];
  _OWORD v128[11];

  v102 = a4;
  v7 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  v8 = *(_QWORD *)(v7 - 8);
  v88 = v7;
  v89 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v90 = (uint64_t)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  MEMORY[0x24BDAC7A8](v10);
  v92 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v12);
  v101 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452C90);
  MEMORY[0x24BDAC7A8](v14);
  v103 = (uint64_t)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Message();
  v96 = *(_QWORD *)(v16 - 8);
  v97 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v93 = (uint64_t)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for ReplicatorMessage(0);
  MEMORY[0x24BDAC7A8](v100);
  v19 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for ReplicatorMessage.Handshake(0);
  MEMORY[0x24BDAC7A8](v99);
  v21 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  MEMORY[0x24BDAC7A8](v98);
  v105 = (uint64_t)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25744FD90 != -1)
    swift_once();
  v23 = sub_245387818();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_257462FB0);
  swift_retain();
  v106 = v24;
  v25 = sub_2453877F4();
  v26 = sub_245387D34();
  if (os_log_type_enabled(v25, v26))
  {
    v87 = a1;
    v27 = swift_slowAlloc();
    v94 = v21;
    v28 = (uint8_t *)v27;
    v29 = swift_slowAlloc();
    v95 = v19;
    v30 = v29;
    *(_QWORD *)&v128[0] = v29;
    *(_DWORD *)v28 = 136446210;
    v104 = a3;
    v31 = a2[61];
    v32 = a2[62];
    swift_bridgeObjectRetain();
    v33 = v31;
    a1 = v87;
    *(_QWORD *)&v127[0] = sub_2453816D8(v33, v32, (uint64_t *)v128);
    sub_245387E0C();
    swift_release();
    a3 = v104;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v25, v26, "(%{public}s) Sending disabled handshake response", v28, 0xCu);
    swift_arrayDestroy();
    v34 = v30;
    v19 = v95;
    MEMORY[0x24953317C](v34, -1, -1);
    v35 = v28;
    v21 = v94;
    MEMORY[0x24953317C](v35, -1, -1);

    if (a1)
      goto LABEL_5;
LABEL_8:
    sub_245298100(v128);
    v49 = MEMORY[0x24BEE4AF8];
    v50 = sub_24531B764(MEMORY[0x24BEE4AF8]);
    v51 = sub_245387740();
    v52 = *(_QWORD *)(v51 - 8);
    v53 = v105;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v105, a3, v51);
    sub_24526432C((uint64_t)v128);
    v54 = sub_24531B270(v49);
    v55 = (int *)v98;
    v56 = (_QWORD *)(v53 + *(int *)(v98 + 20));
    *v56 = 0;
    v56[1] = 0;
    v57 = (_OWORD *)(v53 + v55[6]);
    v104 = a3;
    v58 = v128[7];
    v57[6] = v128[6];
    v57[7] = v58;
    v59 = v128[9];
    v57[8] = v128[8];
    v57[9] = v59;
    v60 = v128[3];
    v57[2] = v128[2];
    v57[3] = v60;
    v61 = v128[5];
    v57[4] = v128[4];
    v57[5] = v61;
    v62 = v128[1];
    *v57 = v128[0];
    v57[1] = v62;
    *(_QWORD *)(v53 + v55[7]) = v54;
    *(_QWORD *)(v53 + v55[8]) = v50;
    sub_2452B792C(v53, (uint64_t)v21, type metadata accessor for ReplicatorMessage.Handshake.Response);
    swift_storeEnumTagMultiPayload();
    sub_2452B792C((uint64_t)v21, (uint64_t)v19, type metadata accessor for ReplicatorMessage.Handshake);
    swift_storeEnumTagMultiPayload();
    v63 = (unint64_t)v101;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v101, 1, 1, v51);
    v64 = v103;
    sub_2452A029C((uint64_t)v19, v102, v63, v103);
    sub_245263F80(v63, &qword_25440C700);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v96 + 56))(v64, 0, 1, v97);
    sub_2452B7AB8(v64, v93, (uint64_t (*)(_QWORD))type metadata accessor for Message);
    v65 = a2[23];
    ObjectType = swift_getObjectType();
    v95 = v19;
    v106 = ObjectType;
    v67 = sub_2453875E4();
    v68 = (uint64_t)v92;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v92, 1, 1, v67);
    v69 = (_OWORD *)(v104 + *(int *)(v88 + 24));
    v70 = v69[7];
    v71 = v69[5];
    v123 = v69[6];
    v124 = v70;
    v72 = v69[7];
    v73 = v69[9];
    v125 = v69[8];
    v126 = v73;
    v74 = v69[3];
    v75 = v69[1];
    v119 = v69[2];
    v120 = v74;
    v76 = v69[3];
    v77 = v69[5];
    v121 = v69[4];
    v122 = v77;
    v78 = v69[1];
    v118[0] = *v69;
    v118[1] = v78;
    v114 = v123;
    v115 = v72;
    v79 = v69[9];
    v116 = v125;
    v117 = v79;
    v110 = v119;
    v111 = v76;
    v112 = v121;
    v113 = v71;
    v108 = v118[0];
    v109 = v75;
    v107 = 0;
    v80 = v90;
    sub_2452B792C(v104, v90, type metadata accessor for ReplicatorMessage.Handshake.Request);
    v81 = *(unsigned __int8 *)(v89 + 80);
    v94 = v21;
    v82 = (v81 + 24) & ~v81;
    v83 = swift_allocObject();
    *(_QWORD *)(v83 + 16) = a2;
    sub_2452B7AB8(v80, v83 + v82, type metadata accessor for ReplicatorMessage.Handshake.Request);
    v84 = *(void (**)(uint64_t, uint64_t, __int128 *, char *, uint64_t (*)(uint64_t, char), uint64_t, uint64_t, uint64_t))(v65 + 40);
    swift_retain();
    sub_24526432C((uint64_t)v118);
    v85 = v93;
    v84(v93, v68, &v108, &v107, sub_2452B7C80, v83, v106, v65);
    swift_release();
    sub_245269928((uint64_t)v128);
    v127[6] = v114;
    v127[7] = v115;
    v127[8] = v116;
    v127[9] = v117;
    v127[2] = v110;
    v127[3] = v111;
    v127[4] = v112;
    v127[5] = v113;
    v127[0] = v108;
    v127[1] = v109;
    sub_245269928((uint64_t)v127);
    sub_245263F80(v68, &qword_25744F610);
    sub_2452B7B5C(v85, (uint64_t (*)(_QWORD))type metadata accessor for Message);
    sub_2452B7B5C((uint64_t)v95, type metadata accessor for ReplicatorMessage);
    sub_2452B7B5C((uint64_t)v94, type metadata accessor for ReplicatorMessage.Handshake);
    sub_2452B7B5C(v105, type metadata accessor for ReplicatorMessage.Handshake.Response);
    return;
  }

  swift_release();
  if (!a1)
    goto LABEL_8;
LABEL_5:
  v36 = a1;
  swift_retain();
  v37 = a1;
  swift_retain();
  v38 = a1;
  v39 = sub_2453877F4();
  v40 = sub_245387D34();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = swift_slowAlloc();
    v42 = (_QWORD *)swift_slowAlloc();
    v106 = swift_slowAlloc();
    *(_QWORD *)&v128[0] = v106;
    *(_DWORD *)v41 = 136446466;
    v43 = a1;
    v44 = a2[61];
    v45 = a2[62];
    swift_bridgeObjectRetain();
    *(_QWORD *)&v127[0] = sub_2453816D8(v44, v45, (uint64_t *)v128);
    sub_245387E0C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2114;
    v46 = a1;
    v47 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)&v127[0] = v47;
    sub_245387E0C();
    *v42 = v47;

    _os_log_impl(&dword_245256000, v39, v40, "(%{public}s) Abandoning disabled handshake response because prerequisites are not met: %{public}@", (uint8_t *)v41, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v42, -1, -1);
    v48 = v106;
    swift_arrayDestroy();
    MEMORY[0x24953317C](v48, -1, -1);
    MEMORY[0x24953317C](v41, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_2452A029C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (**v9)(uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  int *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t ObjectType;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void (**v54)(uint64_t, uint64_t, uint64_t, _QWORD);
  _QWORD *v55;
  unint64_t *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  void (**v70)(uint64_t, uint64_t, uint64_t, _QWORD);
  unint64_t v71;
  uint64_t v72[6];
  uint64_t v73;

  v69 = a3;
  v67 = a4;
  v68 = type metadata accessor for Message();
  MEMORY[0x24BDAC7A8](v68);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_245387740();
  v9 = *(void (***)(uint64_t, uint64_t, uint64_t, _QWORD))(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72[3] = type metadata accessor for ReplicatorMessage(0);
  v72[4] = sub_24525C6C4(&qword_257452308, type metadata accessor for ReplicatorMessage, (uint64_t)&unk_2453902BC);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v72);
  sub_2452B792C(a1, (uint64_t)boxed_opaque_existential_1, type metadata accessor for ReplicatorMessage);
  type metadata accessor for PropertyListTypeEncoder();
  inited = swift_initStackObject();
  v17 = a2;
  *(_QWORD *)(inited + 16) = a2;
  *(_BYTE *)(inited + 24) = 0;
  v18 = v70;
  v19 = (void *)sub_24537B31C(v72);
  v20 = v18;
  if (v18)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
    v24 = v71;
    if (qword_25744FD90 != -1)
      swift_once();
    v25 = sub_245387818();
    __swift_project_value_buffer(v25, (uint64_t)qword_257462FB0);
    swift_retain();
    v26 = v18;
    swift_retain();
    v27 = v18;
    v28 = sub_2453877F4();
    v29 = sub_245387D1C();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v72[0] = v31;
      *(_DWORD *)v30 = 136446466;
      v32 = *(_QWORD *)(v24 + 488);
      v33 = *(_QWORD *)(v24 + 496);
      swift_bridgeObjectRetain();
      v73 = sub_2453816D8(v32, v33, v72);
      sub_245387E0C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2082;
      v73 = (uint64_t)v20;
      v34 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C868);
      v35 = sub_245387B48();
      v73 = sub_2453816D8(v35, v36, v72);
      sub_245387E0C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_245256000, v28, v29, "(%{public}s) Failed to encode message: %{public}s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v31, -1, -1);
      MEMORY[0x24953317C](v30, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    return swift_willThrow();
  }
  else
  {
    v65 = v8;
    v66 = v7;
    v64 = v11;
    v70 = v9;
    v21 = (int *)v68;
    v22 = v69;
    v23 = v17;
    v38 = sub_24537E224(v19);
    v40 = v39;
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
    sub_2452BC89C(v22, (uint64_t)v14, &qword_25440C700);
    v41 = *(_QWORD *)(v71 + 256);
    v62 = v23;
    v63 = v40;
    if (v41)
    {
      v71 = *(_QWORD *)(v71 + 248);
      sub_245261C44(v38, v40);
      v69 = v41;
      v42 = v21;
      v43 = v64;
      v44 = v65;
      v45 = (uint64_t)v66;
      v46 = v38;
    }
    else
    {
      v47 = *(_QWORD *)(v71 + 184);
      ObjectType = swift_getObjectType();
      v49 = v38;
      v50 = ObjectType;
      v71 = *(_QWORD *)(v47 + 8);
      v61 = v49;
      sub_245261C44(v49, v40);
      v51 = ((uint64_t (*)(uint64_t, uint64_t))v71)(v50, v47);
      v42 = v21;
      v44 = v65;
      v45 = (uint64_t)v66;
      if (v52)
      {
        v43 = v64;
        v46 = v61;
        v71 = v51;
        v69 = v52;
      }
      else
      {
        v69 = 0x80000002453930B0;
        v71 = 0xD000000000000016;
        v43 = v64;
        v46 = v61;
      }
    }
    swift_bridgeObjectRetain();
    sub_245387734();
    v53 = v45 + v42[5];
    v54 = v70;
    v70[7](v53, 1, 1, v44);
    ((void (*)(uint64_t, char *, uint64_t))v54[4])(v45, v43, v44);
    sub_2452BBA60((uint64_t)v14, v53, &qword_25440C700);
    v55 = (_QWORD *)(v45 + v42[6]);
    *v55 = 0x7065526574617453;
    v55[1] = 0xEF726F746163696CLL;
    v56 = (unint64_t *)(v45 + v42[7]);
    v57 = v69;
    *v56 = v71;
    v56[1] = v57;
    v58 = v63;
    *(_QWORD *)(v45 + v42[8]) = v62;
    v59 = (uint64_t *)(v45 + v42[9]);
    *v59 = v46;
    v59[1] = v58;
    sub_2452B7AB8(v45, v67, (uint64_t (*)(_QWORD))type metadata accessor for Message);
    return sub_24525CB80(v46, v58);
  }
}

uint64_t sub_2452A0810(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t result;
  _QWORD aBlock[6];

  v8 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = *(NSObject **)(a3 + 232);
  sub_2452B792C(a4, (uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReplicatorMessage.Handshake.Request);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_BYTE *)(v13 + 24) = a2 & 1;
  *(_QWORD *)(v13 + 32) = a3;
  sub_2452B7AB8((uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, type metadata accessor for ReplicatorMessage.Handshake.Request);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_2452B7CA0;
  *(_QWORD *)(v14 + 24) = v13;
  aBlock[4] = sub_2452643B4;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525B888;
  aBlock[3] = &block_descriptor_276;
  v15 = _Block_copy(aBlock);
  sub_245263EDC(a1, a2 & 1);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v11, v15);
  _Block_release(v15);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((a3 & 1) != 0)
    __break(1u);
  return result;
}

void sub_2452A09D4(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  _QWORD *v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  void (*v53)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t ObjectType;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t, __int128 *, char *, uint64_t (*)(uint64_t, char), uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  _OWORD v109[2];
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  _OWORD v118[12];

  v93 = a4;
  v79 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  v81 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v82 = (uint64_t)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  MEMORY[0x24BDAC7A8](v8);
  v84 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v10);
  v92 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452C90);
  MEMORY[0x24BDAC7A8](v12);
  v94 = (uint64_t)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Message();
  v87 = *(_QWORD *)(v14 - 8);
  v88 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v80 = (uint64_t)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for ReplicatorMessage(0);
  MEMORY[0x24BDAC7A8](v91);
  v17 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for ReplicatorMessage.Handshake(0);
  MEMORY[0x24BDAC7A8](v90);
  v19 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
  MEMORY[0x24BDAC7A8](v89);
  v97 = (uint64_t)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25744FD90 != -1)
    swift_once();
  v21 = sub_245387818();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_257462FB0);
  swift_retain();
  v96 = v22;
  v23 = sub_2453877F4();
  v24 = sub_245387D34();
  v25 = os_log_type_enabled(v23, v24);
  v95 = a3;
  if (v25)
  {
    v26 = swift_slowAlloc();
    v86 = v17;
    v27 = (uint8_t *)v26;
    v28 = swift_slowAlloc();
    *(_QWORD *)&v118[0] = v28;
    v78 = a1;
    *(_DWORD *)v27 = 136446210;
    v85 = v19;
    v29 = a2[61];
    v30 = a2[62];
    swift_bridgeObjectRetain();
    *(_QWORD *)&v109[0] = sub_2453816D8(v29, v30, (uint64_t *)v118);
    a1 = v78;
    sub_245387E0C();
    swift_release();
    v19 = v85;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v23, v24, "(%{public}s) Sending disabled handshake complete", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v28, -1, -1);
    v31 = v27;
    v17 = v86;
    MEMORY[0x24953317C](v31, -1, -1);

    v32 = v97;
    if (a1)
      goto LABEL_5;
LABEL_8:
    v46 = MEMORY[0x24BEE4AF8];
    v47 = sub_24531B764(MEMORY[0x24BEE4AF8]);
    v48 = sub_245387740();
    v49 = *(_QWORD *)(v48 - 8);
    v50 = v95;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v32, v95, v48);
    v51 = v89;
    v52 = (_QWORD *)(v32 + *(int *)(v89 + 20));
    *v52 = 0;
    v52[1] = 0;
    *(_QWORD *)(v32 + *(int *)(v51 + 24)) = v46;
    *(_QWORD *)(v32 + *(int *)(v51 + 28)) = v47;
    sub_2452B792C(v32, (uint64_t)v19, type metadata accessor for ReplicatorMessage.Handshake.Complete);
    swift_storeEnumTagMultiPayload();
    sub_2452B792C((uint64_t)v19, (uint64_t)v17, type metadata accessor for ReplicatorMessage.Handshake);
    swift_storeEnumTagMultiPayload();
    v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56);
    v54 = (unint64_t)v92;
    v53(v92, 1, 1, v48);
    v55 = v94;
    sub_2452A029C((uint64_t)v17, v93, v54, v94);
    sub_245263F80(v54, &qword_25440C700);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v87 + 56))(v55, 0, 1, v88);
    v56 = v80;
    sub_2452B7AB8(v55, v80, (uint64_t (*)(_QWORD))type metadata accessor for Message);
    v94 = a2[23];
    ObjectType = swift_getObjectType();
    v86 = v17;
    v96 = ObjectType;
    v58 = sub_2453875E4();
    v59 = (uint64_t)v84;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v84, 1, 1, v58);
    v60 = (_OWORD *)(v50 + *(int *)(v79 + 24));
    v61 = v60[7];
    v62 = v60[5];
    v114 = v60[6];
    v115 = v61;
    v63 = v60[7];
    v64 = v60[9];
    v116 = v60[8];
    v117 = v64;
    v65 = v60[3];
    v66 = v60[1];
    v110 = v60[2];
    v111 = v65;
    v67 = v60[3];
    v68 = v60[5];
    v112 = v60[4];
    v113 = v68;
    v69 = v60[1];
    v109[0] = *v60;
    v109[1] = v69;
    v105 = v114;
    v106 = v63;
    v70 = v60[9];
    v107 = v116;
    v108 = v70;
    v101 = v110;
    v102 = v67;
    v103 = v112;
    v104 = v62;
    v99 = v109[0];
    v100 = v66;
    v98 = 0;
    v71 = v82;
    sub_2452B792C(v50, v82, type metadata accessor for ReplicatorMessage.Handshake.Response);
    v72 = (*(unsigned __int8 *)(v81 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
    v73 = swift_allocObject();
    v85 = v19;
    v74 = v73;
    *(_QWORD *)(v73 + 16) = a2;
    sub_2452B7AB8(v71, v73 + v72, type metadata accessor for ReplicatorMessage.Handshake.Response);
    v75 = v94;
    v76 = *(void (**)(uint64_t, uint64_t, __int128 *, char *, uint64_t (*)(uint64_t, char), uint64_t, uint64_t, uint64_t))(v94 + 40);
    swift_retain();
    sub_24526432C((uint64_t)v109);
    v76(v56, v59, &v99, &v98, sub_2452BA93C, v74, v96, v75);
    swift_release();
    v118[6] = v105;
    v118[7] = v106;
    v118[8] = v107;
    v118[9] = v108;
    v118[2] = v101;
    v118[3] = v102;
    v118[4] = v103;
    v118[5] = v104;
    v118[0] = v99;
    v118[1] = v100;
    sub_245269928((uint64_t)v118);
    sub_245263F80(v59, &qword_25744F610);
    sub_2452B7B5C(v56, (uint64_t (*)(_QWORD))type metadata accessor for Message);
    sub_2452B7B5C((uint64_t)v86, type metadata accessor for ReplicatorMessage);
    sub_2452B7B5C((uint64_t)v85, type metadata accessor for ReplicatorMessage.Handshake);
    sub_2452B7B5C(v97, type metadata accessor for ReplicatorMessage.Handshake.Complete);
    return;
  }

  swift_release();
  v32 = v97;
  if (!a1)
    goto LABEL_8;
LABEL_5:
  v33 = a1;
  swift_retain();
  v34 = a1;
  swift_retain();
  v35 = a1;
  v36 = sub_2453877F4();
  v37 = sub_245387D34();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = swift_slowAlloc();
    v39 = (_QWORD *)swift_slowAlloc();
    v97 = swift_slowAlloc();
    *(_QWORD *)&v118[0] = v97;
    *(_DWORD *)v38 = 136446466;
    v40 = a1;
    v41 = a2[61];
    v42 = a2[62];
    swift_bridgeObjectRetain();
    *(_QWORD *)&v109[0] = sub_2453816D8(v41, v42, (uint64_t *)v118);
    sub_245387E0C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2114;
    v43 = v40;
    v44 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)&v109[0] = v44;
    sub_245387E0C();
    *v39 = v44;

    _os_log_impl(&dword_245256000, v36, v37, "(%{public}s) Abandoning disabled handshake complete because prerequisites are not met: %{public}@", (uint8_t *)v38, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452970);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v39, -1, -1);
    v45 = v97;
    swift_arrayDestroy();
    MEMORY[0x24953317C](v45, -1, -1);
    MEMORY[0x24953317C](v38, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_2452A1304(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t result;
  _QWORD aBlock[6];

  v8 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = *(NSObject **)(a3 + 232);
  sub_2452B792C(a4, (uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReplicatorMessage.Handshake.Response);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_BYTE *)(v13 + 24) = a2 & 1;
  *(_QWORD *)(v13 + 32) = a3;
  sub_2452B7AB8((uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, type metadata accessor for ReplicatorMessage.Handshake.Response);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_2452BAAC8;
  *(_QWORD *)(v14 + 24) = v13;
  aBlock[4] = sub_2452643B4;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525B888;
  aBlock[3] = &block_descriptor_1323;
  v15 = _Block_copy(aBlock);
  sub_245263EDC(a1, a2 & 1);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v11, v15);
  _Block_release(v15);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((a3 & 1) != 0)
    __break(1u);
  return result;
}

void sub_2452A14C8(void *a1, char a2, _QWORD *a3, uint64_t a4, const char *a5, uint64_t (*a6)(_QWORD))
{
  id v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char v38;
  void (*v39)(id *, uint64_t *, uint64_t, uint64_t);
  uint64_t (*v40)(_QWORD);
  uint64_t v41;
  uint64_t v42;
  char v43;
  id v44[2];
  char v45;
  __int128 v46;
  char v47;

  if ((a2 & 1) != 0)
  {
    v44[0] = a1;
    v11 = a1;
    v12 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25440C868);
    if (swift_dynamicCast() && v47 == 2)
    {
      if (qword_25744FD90 != -1)
        swift_once();
      v13 = sub_245387818();
      __swift_project_value_buffer(v13, (uint64_t)qword_257462FB0);
      sub_245263EDC(a1, 1);
      sub_245263EDC(a1, 1);
      swift_retain();
      v14 = sub_2453877F4();
      v15 = sub_245387D34();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = swift_slowAlloc();
        v17 = swift_slowAlloc();
        v42 = v17;
        *(_DWORD *)v16 = 136446466;
        v18 = a3[61];
        v19 = a3[62];
        swift_bridgeObjectRetain();
        sub_2453816D8(v18, v19, &v42);
        sub_245387E0C();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v16 + 12) = 2082;
        v20 = a1;
        v21 = sub_245387B48();
        sub_2453816D8(v21, v22, &v42);
        sub_245387E0C();
        swift_bridgeObjectRelease();
        sub_245263EE8(a1, 1);
        sub_245263EE8(a1, 1);
        _os_log_impl(&dword_245256000, v14, v15, "(%{public}s) Handshake request blocked by allow list: %{public}s.", (uint8_t *)v16, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v17, -1, -1);
        MEMORY[0x24953317C](v16, -1, -1);

        sub_245263EE8(a1, 1);
      }
      else
      {
        sub_245263EE8(a1, 1);
        swift_release();
        sub_245263EE8(a1, 1);
        sub_245263EE8(a1, 1);

      }
    }
    else
    {

      if (qword_25744FD90 != -1)
        swift_once();
      v23 = sub_245387818();
      __swift_project_value_buffer(v23, (uint64_t)qword_257462FB0);
      sub_245263EDC(a1, 1);
      sub_245263EDC(a1, 1);
      swift_retain();
      v24 = sub_2453877F4();
      v25 = sub_245387D1C();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = swift_slowAlloc();
        v27 = (void *)swift_slowAlloc();
        v44[0] = v27;
        *(_DWORD *)v26 = 136446466;
        v40 = a6;
        v41 = a4;
        v28 = a3[61];
        v29 = a3[62];
        swift_bridgeObjectRetain();
        sub_2453816D8(v28, v29, (uint64_t *)v44);
        sub_245387E0C();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 12) = 2082;
        v30 = a1;
        v31 = sub_245387B48();
        v42 = sub_2453816D8(v31, v32, (uint64_t *)v44);
        a6 = v40;
        sub_245387E0C();
        a4 = v41;
        swift_bridgeObjectRelease();
        sub_245263EE8(a1, 1);
        sub_245263EE8(a1, 1);
        _os_log_impl(&dword_245256000, v24, v25, a5, (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v27, -1, -1);
        MEMORY[0x24953317C](v26, -1, -1);
      }
      else
      {
        swift_release();
        sub_245263EE8(a1, 1);
        sub_245263EE8(a1, 1);
      }

      v33 = a3 + 48;
      v35 = a3[51];
      v34 = a3[52];
      __swift_project_boxed_opaque_existential_1(v33, v35);
      v36 = a4 + *(int *)(a6(0) + 24);
      v37 = *(void **)(v36 + 8);
      v38 = *(_BYTE *)(v36 + 48);
      v44[0] = *(id *)v36;
      v44[1] = v37;
      v45 = v38;
      v46 = *(_OWORD *)(v36 + 32);
      v42 = 0;
      v43 = 2;
      v39 = *(void (**)(id *, uint64_t *, uint64_t, uint64_t))(v34 + 16);
      swift_bridgeObjectRetain();
      v39(v44, &v42, v35, v34);
      sub_245263EE8(a1, 1);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_2452A1A00(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t result;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  v2 = v1;
  v4 = sub_245387740();
  v38 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452E80);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v36 - v11;
  v13 = sub_2453879D4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (_QWORD **)((char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = (void *)v2[29];
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BEE5610], v13);
  v18 = v17;
  LOBYTE(v17) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) != 0)
  {
    swift_beginAccess();
    v20 = v2[64];
    if (!*(_QWORD *)(v20 + 16))
    {
      v32 = type metadata accessor for Replicator.Session(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v12, 1, 1, v32);
      return sub_245263F80((uint64_t)v12, &qword_257452E80);
    }
    swift_bridgeObjectRetain();
    v21 = sub_2452C2058(a1);
    if ((v22 & 1) != 0)
    {
      v23 = v21;
      v37 = v4;
      v24 = *(_QWORD *)(v20 + 56);
      v25 = type metadata accessor for Replicator.Session(0);
      v36 = v2 + 64;
      v26 = v10;
      v27 = v6;
      v28 = a1;
      v29 = *(_QWORD *)(v25 - 8);
      v30 = v24 + *(_QWORD *)(v29 + 72) * v23;
      v4 = v37;
      sub_2452B792C(v30, (uint64_t)v12, type metadata accessor for Replicator.Session);
      v31 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56);
      a1 = v28;
      v6 = v27;
      v10 = v26;
      v31(v12, 0, 1, v25);
    }
    else
    {
      v25 = type metadata accessor for Replicator.Session(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v12, 1, 1, v25);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for Replicator.Session(0);
    v33 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v12, 1, v25) == 1)
      return sub_245263F80((uint64_t)v12, &qword_257452E80);
    sub_245263F80((uint64_t)v12, &qword_257452E80);
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v6, a1, v4);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v10, 1, 1, v25);
    swift_beginAccess();
    sub_24531C0B4((uint64_t)v10, (uint64_t)v6);
    swift_endAccess();
    v34 = swift_beginAccess();
    v35 = v2[63];
    MEMORY[0x24BDAC7A8](v34);
    *(&v36 - 2) = (_QWORD *)a1;
    swift_bridgeObjectRetain();
    v2[63] = sub_24531D168((uint64_t (*)(char *))sub_2452B7E30, (uint64_t)(&v36 - 4), v35);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_2452A1D70(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v10;

  v2 = sub_245387740();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Replicator.SyncItem(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1 + *(int *)(v7 + 20), v2);
  sub_24525C6C4(&qword_257452430, v3, MEMORY[0x24BDCEA98]);
  v8 = sub_245387AE8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  return (v8 & 1) == 0;
}

void sub_2452A1E60(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  _BOOL4 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  NSObject *v115;
  os_log_type_t v116;
  uint8_t *v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  char *v129;
  uint64_t v130;
  unint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  NSObject *v138;
  os_log_type_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  unint64_t v145;
  const char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  NSObject *v150;
  os_log_type_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  NSObject *v163;
  os_log_type_t v164;
  int v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  unint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t (*v178)(__int128 *, char *, uint64_t);
  char v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  NSObject *v201;
  os_log_type_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  int v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v227;
  char v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  NSObject *v239;
  os_log_type_t v240;
  int v241;
  uint64_t v242;
  uint64_t v243;
  unint64_t v244;
  uint64_t v245;
  unint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  unint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  unint64_t v255;
  uint64_t v256;
  uint64_t v257;
  void *v258;
  char *v259;
  uint64_t v260;
  NSObject *v261;
  os_log_type_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  unint64_t v266;
  uint64_t v267;
  unint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  __int128 v272;
  __int128 v273;
  __int128 v274;
  __int128 v275;
  __int128 v276;
  __int128 v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  uint64_t v282;
  uint64_t v283;
  unint64_t v284;
  unint64_t v285;
  unint64_t v286;
  uint64_t (*v287)();
  uint64_t v288;
  uint64_t (**v289)();
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  _QWORD *v298;
  uint64_t *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  _QWORD *v304;
  uint64_t v305;
  char *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t *v317;
  uint64_t v318;
  char *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  char *v340;
  uint64_t v341;
  uint64_t v342;
  char *v343;
  uint64_t v344;
  uint64_t v345;
  _QWORD *v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t ObjectType;
  char *v351;
  uint64_t v352;
  char *v353;
  uint64_t v354;
  _QWORD *v355;
  uint64_t v356[2];
  char v357;
  __int128 v358;
  __int128 v359;
  __int128 v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  __int128 v364;
  __int128 v365;
  __int128 v366;
  __int128 v367;
  __int128 v368;
  __int128 v369;
  __int128 v370;
  __int128 v371;
  __int128 v372;
  __int128 v373;
  __int128 v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  __int128 v378;
  __int128 v379;
  __int128 v380;
  __int128 v381;
  __int128 v382;
  __int128 v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  void *v388;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v2);
  v333 = (char *)&v303 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452C90);
  MEMORY[0x24BDAC7A8](v4);
  v334 = (uint64_t)&v303 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Message();
  v329 = *(_QWORD *)(v6 - 8);
  v330 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v326 = (uint64_t)&v303 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v332 = type metadata accessor for ReplicatorMessage(0);
  MEMORY[0x24BDAC7A8](v332);
  v9 = (char *)&v303 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v328 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord(0);
  v10 = MEMORY[0x24BDAC7A8](v328);
  v311 = (uint64_t)&v303 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v324 = (uint64_t)&v303 - v12;
  v13 = type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value(0);
  MEMORY[0x24BDAC7A8](v13);
  v323 = (uint64_t)&v303 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F848);
  MEMORY[0x24BDAC7A8](v15);
  v308 = (uint64_t)&v303 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for RecordMetadata();
  v18 = *(_QWORD *)(v17 - 8);
  v309 = v17;
  v310 = v18;
  MEMORY[0x24BDAC7A8](v17);
  v307 = (uint64_t)&v303 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Record.ID(0);
  v312 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v320 = (uint64_t)&v303 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452348);
  MEMORY[0x24BDAC7A8](v22);
  v319 = (char *)&v303 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v321 = type metadata accessor for PrioritizedRecordValue();
  v318 = *(_QWORD *)(v321 - 8);
  MEMORY[0x24BDAC7A8](v321);
  v317 = (uint64_t *)((char *)&v303 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v325 = (uint64_t)&v303 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v336 = (uint64_t)&v303 - v28;
  v327 = type metadata accessor for ReplicatorMessage.Sync(0);
  MEMORY[0x24BDAC7A8](v327);
  v337 = (uint64_t)&v303 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_2453879D4();
  v347 = *(_QWORD *)(v30 - 8);
  v348 = v30;
  MEMORY[0x24BDAC7A8](v30);
  v346 = (uint64_t *)((char *)&v303 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v32);
  v344 = (uint64_t)&v303 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for PairingRelationship();
  v349 = *(_QWORD *)(v34 - 8);
  ObjectType = v34;
  v35 = MEMORY[0x24BDAC7A8](v34);
  v315 = v36;
  v316 = (uint64_t)&v303 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v303 - v37;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452E80);
  MEMORY[0x24BDAC7A8](v39);
  v353 = (char *)&v303 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for Replicator.Session(0);
  v354 = *(_QWORD *)(v41 - 8);
  v355 = (_QWORD *)v41;
  v42 = MEMORY[0x24BDAC7A8](v41);
  v313 = v43;
  v314 = (uint64_t)&v303 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v42);
  v45 = (char *)&v303 - v44;
  v352 = type metadata accessor for Replicator.SyncItem(0);
  v46 = *(_QWORD *)(v352 - 8);
  v47 = MEMORY[0x24BDAC7A8](v352);
  v338 = (uint64_t)&v303 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = MEMORY[0x24BDAC7A8](v47);
  v335 = (uint64_t)&v303 - v50;
  v51 = MEMORY[0x24BDAC7A8](v49);
  v331 = (uint64_t)&v303 - v52;
  v53 = MEMORY[0x24BDAC7A8](v51);
  v322 = (uint64_t)&v303 - v54;
  v55 = MEMORY[0x24BDAC7A8](v53);
  v339 = (uint64_t)&v303 - v56;
  v57 = MEMORY[0x24BDAC7A8](v55);
  v341 = (uint64_t)&v303 - v58;
  v59 = MEMORY[0x24BDAC7A8](v57);
  v345 = (uint64_t)&v303 - v60;
  v61 = MEMORY[0x24BDAC7A8](v59);
  v63 = (char *)&v303 - v62;
  MEMORY[0x24BDAC7A8](v61);
  v65 = (char *)&v303 - v64;
  v66 = a1 + 63;
  swift_beginAccess();
  if (*(_QWORD *)(a1[63] + 16))
  {
    swift_beginAccess();
    v67 = *v66;
    if (*(_QWORD *)(*v66 + 16))
    {
      v306 = v9;
      sub_2452B792C(v67 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80)), (uint64_t)v65, type metadata accessor for Replicator.SyncItem);
      sub_2452B8424(0, 1);
      swift_endAccess();
      if (qword_25744FD90 == -1)
        goto LABEL_4;
    }
    else
    {
      __break(1u);
    }
    swift_once();
LABEL_4:
    v68 = sub_245387818();
    v69 = __swift_project_value_buffer(v68, (uint64_t)qword_257462FB0);
    sub_2452B792C((uint64_t)v65, (uint64_t)v63, type metadata accessor for Replicator.SyncItem);
    swift_retain();
    v342 = v69;
    v70 = sub_2453877F4();
    v71 = sub_245387D34();
    v72 = os_log_type_enabled(v70, v71);
    v343 = v65;
    v351 = v38;
    if (v72)
    {
      v73 = swift_slowAlloc();
      v340 = v45;
      v74 = v73;
      v305 = swift_slowAlloc();
      *(_QWORD *)&v378 = v305;
      *(_DWORD *)v74 = 136446466;
      v75 = a1[61];
      v76 = a1[62];
      swift_bridgeObjectRetain();
      *(_QWORD *)&v368 = sub_2453816D8(v75, v76, (uint64_t *)&v378);
      sub_245387E0C();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 12) = 2082;
      v77 = Record.ID.description.getter();
      *(_QWORD *)&v368 = sub_2453816D8(v77, v78, (uint64_t *)&v378);
      v65 = v343;
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_2452B7B5C((uint64_t)v63, type metadata accessor for Replicator.SyncItem);
      _os_log_impl(&dword_245256000, v70, v71, "(%{public}s) Syncing record %{public}s", (uint8_t *)v74, 0x16u);
      v79 = v305;
      swift_arrayDestroy();
      MEMORY[0x24953317C](v79, -1, -1);
      v80 = v74;
      v45 = v340;
      MEMORY[0x24953317C](v80, -1, -1);
    }
    else
    {
      swift_release();
      sub_2452B7B5C((uint64_t)v63, type metadata accessor for Replicator.SyncItem);
    }

    v88 = (uint64_t)v355;
    v89 = (uint64_t)&v65[*(int *)(v352 + 20)];
    swift_beginAccess();
    v90 = a1[64];
    v91 = *(_QWORD *)(v90 + 16);
    v93 = (uint64_t)v353;
    v92 = v354;
    v352 = v89;
    if (v91)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v94 = sub_2452C2058(v89);
      if ((v95 & 1) != 0)
      {
        sub_2452B792C(*(_QWORD *)(v90 + 56) + *(_QWORD *)(v92 + 72) * v94, v93, type metadata accessor for Replicator.Session);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v92 + 56))(v93, 0, 1, v88);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56))(v93, 1, 1, v88);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v354 + 56))(v353, 1, 1, v88);
      swift_retain();
    }
    v96 = (uint64_t)v351;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v93, 1, v88) == 1)
    {
      sub_245263F80(v93, &qword_257452E80);
      v97 = v345;
      sub_2452B792C((uint64_t)v65, v345, type metadata accessor for Replicator.SyncItem);
      swift_retain();
      v98 = sub_2453877F4();
      v99 = sub_245387D1C();
      if (os_log_type_enabled(v98, v99))
      {
        v100 = swift_slowAlloc();
        v355 = (_QWORD *)swift_slowAlloc();
        *(_QWORD *)&v378 = v355;
        *(_DWORD *)v100 = 136446466;
        v101 = a1[61];
        v102 = a1[62];
        swift_bridgeObjectRetain();
        *(_QWORD *)&v368 = sub_2453816D8(v101, v102, (uint64_t *)&v378);
        sub_245387E0C();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v100 + 12) = 2082;
        v103 = Record.ID.description.getter();
        *(_QWORD *)&v368 = sub_2453816D8(v103, v104, (uint64_t *)&v378);
        v65 = v343;
        sub_245387E0C();
        swift_bridgeObjectRelease();
        sub_2452B7B5C(v97, type metadata accessor for Replicator.SyncItem);
        _os_log_impl(&dword_245256000, v98, v99, "(%{public}s) Cannot sync enqueued record with no session: %{public}s", (uint8_t *)v100, 0x16u);
        v105 = (uint64_t)v355;
        swift_arrayDestroy();
        MEMORY[0x24953317C](v105, -1, -1);
        MEMORY[0x24953317C](v100, -1, -1);
      }
      else
      {
        swift_release();
        sub_2452B7B5C(v97, type metadata accessor for Replicator.SyncItem);
      }

      sub_2452A4708((uint64_t)a1);
      swift_release();
      goto LABEL_44;
    }
    sub_2452B7AB8(v93, (uint64_t)v45, type metadata accessor for Replicator.Session);
    v106 = (void *)a1[29];
    v108 = v346;
    v107 = v347;
    *v346 = v106;
    v109 = v348;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v107 + 104))(v108, *MEMORY[0x24BEE5610], v348);
    v110 = v106;
    LOBYTE(v106) = sub_2453879F8();
    (*(void (**)(_QWORD *, uint64_t))(v107 + 8))(v108, v109);
    if ((v106 & 1) == 0)
    {
      __break(1u);
      goto LABEL_76;
    }
    swift_beginAccess();
    sub_24525E4F0((uint64_t)(a1 + 24), (uint64_t)&v378);
    v111 = *((_QWORD *)&v379 + 1);
    v112 = v380;
    __swift_project_boxed_opaque_existential_1(&v378, *((uint64_t *)&v379 + 1));
    v113 = *(_QWORD *)(v112 + 8);
    v114 = v344;
    MetadataStoring.pairingRelationship(remoteDeviceID:)(*(_QWORD *)&v45[*((int *)v355 + 5)], *(_QWORD *)&v45[*((int *)v355 + 5) + 8], v111, v113, v344);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v378);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v349 + 48))(v114, 1, ObjectType) == 1)
    {
      sub_245263F80(v114, (uint64_t *)&unk_25744FAD0);
      swift_retain();
      v115 = sub_2453877F4();
      v116 = sub_245387D1C();
      if (os_log_type_enabled(v115, v116))
      {
        v117 = (uint8_t *)swift_slowAlloc();
        v118 = swift_slowAlloc();
        *(_QWORD *)&v378 = v118;
        v340 = v45;
        *(_DWORD *)v117 = 136446210;
        v119 = a1;
        v120 = a1[61];
        v121 = a1[62];
        swift_bridgeObjectRetain();
        *(_QWORD *)&v368 = sub_2453816D8(v120, v121, (uint64_t *)&v378);
        v45 = v340;
        sub_245387E0C();
        swift_release();
        a1 = v119;
        v65 = v343;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_245256000, v115, v116, "(%{public}s) No pairing relationship established", v117, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v118, -1, -1);
        MEMORY[0x24953317C](v117, -1, -1);

      }
      else
      {

        swift_release();
      }
      sub_2452A4708((uint64_t)a1);
      swift_release();
      v148 = (uint64_t)v45;
LABEL_43:
      sub_2452B7B5C(v148, type metadata accessor for Replicator.Session);
LABEL_44:
      v160 = (uint64_t)v65;
LABEL_45:
      sub_2452B7B5C(v160, type metadata accessor for Replicator.SyncItem);
      return;
    }
    v355 = a1 + 24;
    v340 = v45;
    sub_2452B7AB8(v114, v96, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v122 = *((_QWORD *)v65 + 2);
    v123 = *((_QWORD *)v65 + 3);
    v124 = *((_QWORD *)v65 + 4);
    v125 = *((_QWORD *)v65 + 5);
    swift_beginAccess();
    v126 = a1[30];
    if (*(_QWORD *)(v126 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v127 = sub_2452C1EB4(v122, v123, v124, v125);
      if ((v128 & 1) != 0)
      {
        v129 = *(char **)(*(_QWORD *)(v126 + 56) + 8 * v127);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v65 = &v351[*(int *)(ObjectType + 20)];
        v130 = *((_QWORD *)v65 + 12);
        if (*(_QWORD *)(v130 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v131 = sub_2452C1EB4(v122, v123, v124, v125);
          if ((v132 & 1) != 0)
          {
            v304 = a1;
            v133 = *(_QWORD *)(v130 + 56) + 48 * v131;
            v134 = *(_QWORD *)(v133 + 32);
            v348 = *(_QWORD *)(v133 + 40);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*((_QWORD *)v65 + 4) < 4uLL || *((_QWORD *)v65 + 5) > 0xCuLL)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v135 = v343;
              v136 = v338;
              sub_2452B792C((uint64_t)v343, v338, type metadata accessor for Replicator.SyncItem);
              v137 = (uint64_t)v304;
              swift_retain();
              v138 = sub_2453877F4();
              v139 = sub_245387D1C();
              if (os_log_type_enabled(v138, v139))
              {
                v140 = swift_slowAlloc();
                v141 = swift_slowAlloc();
                *(_QWORD *)&v378 = v141;
                *(_DWORD *)v140 = 136446466;
                v353 = v129;
                v142 = *(_QWORD *)(v137 + 488);
                v143 = *(_QWORD *)(v137 + 496);
                swift_bridgeObjectRetain();
                *(_QWORD *)&v368 = sub_2453816D8(v142, v143, (uint64_t *)&v378);
                sub_245387E0C();
                swift_release();
                swift_bridgeObjectRelease();
                *(_WORD *)(v140 + 12) = 2082;
                v144 = Record.ID.description.getter();
                *(_QWORD *)&v368 = sub_2453816D8(v144, v145, (uint64_t *)&v378);
                v137 = (uint64_t)v304;
                sub_245387E0C();
                swift_bridgeObjectRelease();
                sub_2452B7B5C(v136, type metadata accessor for Replicator.SyncItem);
                v146 = "(%{public}s) Cannot sync enqueued record with incompatible device: %{public}s";
LABEL_35:
                _os_log_impl(&dword_245256000, v138, v139, v146, (uint8_t *)v140, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x24953317C](v141, -1, -1);
                v147 = v140;
                v135 = v343;
                MEMORY[0x24953317C](v147, -1, -1);
LABEL_60:

                v197 = (uint64_t)v340;
                v198 = (uint64_t)v351;
                sub_2452A4708(v137);
                swift_release();
                swift_release();
                sub_2452B7B5C(v198, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
                sub_2452B7B5C(v197, type metadata accessor for Replicator.Session);
                v160 = (uint64_t)v135;
                goto LABEL_45;
              }
              goto LABEL_59;
            }
            v347 = v134;
            v172 = (uint64_t)v351;
            v173 = &v351[*(int *)(ObjectType + 32)];
            v174 = *(_QWORD *)v173;
            v175 = *((_QWORD *)v173 + 1);
            if (v175 != 2)
            {
              sub_24526B470(*(_QWORD *)v173, *((_QWORD *)v173 + 1));
              sub_24526B484(v174, v175);
              sub_24526B484(0, 2uLL);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v135 = v343;
              v136 = v335;
              sub_2452B792C((uint64_t)v343, v335, type metadata accessor for Replicator.SyncItem);
              v137 = (uint64_t)v304;
              swift_retain();
              v138 = sub_2453877F4();
              v139 = sub_245387D1C();
              if (os_log_type_enabled(v138, v139))
              {
                v140 = swift_slowAlloc();
                v141 = swift_slowAlloc();
                *(_QWORD *)&v378 = v141;
                *(_DWORD *)v140 = 136446466;
                v353 = v129;
                v193 = *(_QWORD *)(v137 + 488);
                v194 = *(_QWORD *)(v137 + 496);
                swift_bridgeObjectRetain();
                *(_QWORD *)&v368 = sub_2453816D8(v193, v194, (uint64_t *)&v378);
                sub_245387E0C();
                swift_release();
                swift_bridgeObjectRelease();
                *(_WORD *)(v140 + 12) = 2082;
                v195 = Record.ID.description.getter();
                *(_QWORD *)&v368 = sub_2453816D8(v195, v196, (uint64_t *)&v378);
                v137 = (uint64_t)v304;
                sub_245387E0C();
                swift_bridgeObjectRelease();
                sub_2452B7B5C(v136, type metadata accessor for Replicator.SyncItem);
                v146 = "(%{public}s) Cannot sync enqueued record with non-paired relationship: %{public}s";
                goto LABEL_35;
              }
LABEL_59:
              swift_release();
              sub_2452B7B5C(v136, type metadata accessor for Replicator.SyncItem);
              goto LABEL_60;
            }
            v353 = v129;
            sub_24526B484(v174, 2uLL);
            sub_24526B484(0, 2uLL);
            v176 = v304;
            sub_24525E4F0((uint64_t)(v304 + 33), (uint64_t)&v378);
            v177 = v380;
            __swift_project_boxed_opaque_existential_1(&v378, *((uint64_t *)&v379 + 1));
            *(_QWORD *)&v368 = v176;
            v178 = *(uint64_t (**)(__int128 *, char *, uint64_t))(v177 + 8);
            ObjectType = type metadata accessor for Replicator();
            v179 = v178(&v368, v343, v172);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v378);
            if ((v179 & 1) != 0)
            {
              a1 = v304;
              swift_beginAccess();
              v180 = a1[74];
              v181 = *((_QWORD *)v343 + 4);
              v182 = *((_QWORD *)v343 + 5);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v183 = sub_24531D83C(v181, v182, v180);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v183 & 1) != 0)
              {
                v184 = v328;
                v185 = v337;
                v186 = v337 + *(int *)(v327 + 20);
                v187 = v186 + *(int *)(v328 + 20);
                v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452350);
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v188 - 8) + 56))(v187, 1, 1, v188);
                sub_2452B792C((uint64_t)v343, v186, type metadata accessor for Record.ID);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v189 = v186 + *(int *)(v184 + 24);
                *(_QWORD *)v189 = v347;
                *(_BYTE *)(v189 + 8) = 0;
                v190 = sub_245387740();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v185, v352, v190);
                v191 = sub_2453875E4();
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v191 - 8) + 56))(v336, 1, 1, v191);
                LODWORD(v355) = 0;
LABEL_56:
                v192 = (uint64_t)v340;
LABEL_84:
                v254 = (uint64_t)v306;
                sub_2452B792C(v185, (uint64_t)v306, type metadata accessor for ReplicatorMessage.Sync);
                swift_storeEnumTagMultiPayload();
                sub_245387740();
                v255 = (unint64_t)v333;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v190 - 8) + 56))(v333, 1, 1, v190);
                v256 = v334;
                v257 = (uint64_t)v351;
                v258 = v388;
                sub_245285964(v254, (uint64_t)v351, v255, v334);
                if (v258)
                {

                  sub_245263F80(v255, &qword_25440C700);
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v329 + 56))(v256, 1, 1, v330);
                  sub_245263F80(v256, (uint64_t *)&unk_257452C90);
                  v259 = v343;
                  v260 = v322;
                  sub_2452B792C((uint64_t)v343, v322, type metadata accessor for Replicator.SyncItem);
                  swift_retain();
                  v261 = sub_2453877F4();
                  v262 = sub_245387D1C();
                  if (os_log_type_enabled(v261, v262))
                  {
                    v263 = swift_slowAlloc();
                    v264 = swift_slowAlloc();
                    *(_QWORD *)&v378 = v264;
                    *(_DWORD *)v263 = 136446466;
                    v265 = a1[61];
                    v266 = a1[62];
                    swift_bridgeObjectRetain();
                    *(_QWORD *)&v368 = sub_2453816D8(v265, v266, (uint64_t *)&v378);
                    sub_245387E0C();
                    swift_release();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v263 + 12) = 2082;
                    v267 = Record.ID.description.getter();
                    *(_QWORD *)&v368 = sub_2453816D8(v267, v268, (uint64_t *)&v378);
                    a1 = v304;
                    v259 = v343;
                    sub_245387E0C();
                    swift_bridgeObjectRelease();
                    sub_2452B7B5C(v260, type metadata accessor for Replicator.SyncItem);
                    _os_log_impl(&dword_245256000, v261, v262, "(%{public}s) Could not create message for record ID: %{public}s", (uint8_t *)v263, 0x16u);
                    swift_arrayDestroy();
                    v269 = v264;
                    v192 = (uint64_t)v340;
                    MEMORY[0x24953317C](v269, -1, -1);
                    v270 = v263;
                    v257 = (uint64_t)v351;
                    MEMORY[0x24953317C](v270, -1, -1);
                  }
                  else
                  {
                    swift_release();
                    sub_2452B7B5C(v260, type metadata accessor for Replicator.SyncItem);
                  }

                  v292 = v337;
                  sub_2452A4708((uint64_t)a1);
                  swift_release();
                  swift_release();
                  sub_2452B7B5C((uint64_t)v306, type metadata accessor for ReplicatorMessage);
                  sub_245263F80(v336, &qword_25744F610);
                  sub_2452B7B5C(v292, type metadata accessor for ReplicatorMessage.Sync);
                  sub_2452B7B5C(v257, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
                  sub_2452B7B5C(v192, type metadata accessor for Replicator.Session);
                  sub_2452B7B5C((uint64_t)v259, type metadata accessor for Replicator.SyncItem);
                }
                else
                {
                  v388 = 0;
                  sub_245263F80(v255, &qword_25440C700);
                  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v329 + 56))(v256, 0, 1, v330);
                  sub_2452B7AB8(v256, v326, (uint64_t (*)(_QWORD))type metadata accessor for Message);
                  v271 = a1[23];
                  v352 = a1[22];
                  v348 = v271;
                  ObjectType = swift_getObjectType();
                  sub_2452BC89C(v336, v325, &qword_25744F610);
                  v272 = *((_OWORD *)v65 + 6);
                  v273 = *((_OWORD *)v65 + 8);
                  v375 = *((_OWORD *)v65 + 7);
                  v376 = v273;
                  v274 = *((_OWORD *)v65 + 8);
                  v377 = *((_OWORD *)v65 + 9);
                  v275 = *((_OWORD *)v65 + 2);
                  v276 = *((_OWORD *)v65 + 4);
                  v371 = *((_OWORD *)v65 + 3);
                  v372 = v276;
                  v277 = *((_OWORD *)v65 + 4);
                  v278 = *((_OWORD *)v65 + 6);
                  v373 = *((_OWORD *)v65 + 5);
                  v374 = v278;
                  v279 = *(_OWORD *)v65;
                  v280 = *((_OWORD *)v65 + 2);
                  v369 = *((_OWORD *)v65 + 1);
                  v370 = v280;
                  v363 = v373;
                  v364 = v272;
                  v281 = *(_OWORD *)v65;
                  v365 = v375;
                  v366 = v274;
                  v367 = *((_OWORD *)v65 + 9);
                  v368 = v281;
                  v360 = v275;
                  v361 = v371;
                  v362 = v277;
                  v358 = v279;
                  v359 = v369;
                  v357 = (char)v355;
                  v356[0] = 0x403E000000000000;
                  v356[1] = 0;
                  v282 = v314;
                  sub_2452B792C(v192, v314, type metadata accessor for Replicator.Session);
                  v283 = v316;
                  sub_2452B792C(v257, v316, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
                  v284 = (*(unsigned __int8 *)(v354 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v354 + 80);
                  v285 = (v313 + *(unsigned __int8 *)(v349 + 80) + v284) & ~(unint64_t)*(unsigned __int8 *)(v349 + 80);
                  v286 = (v315 + v285 + 7) & 0xFFFFFFFFFFFFFFF8;
                  v287 = (uint64_t (*)())a1;
                  v288 = swift_allocObject();
                  *(_QWORD *)(v288 + 16) = v287;
                  sub_2452B7AB8(v282, v288 + v284, type metadata accessor for Replicator.Session);
                  sub_2452B7AB8(v283, v288 + v285, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
                  v289 = (uint64_t (**)())(v288 + v286);
                  *v289 = sub_2452BB36C;
                  v289[1] = v287;
                  swift_retain();
                  sub_24526432C((uint64_t)&v368);
                  swift_retain();
                  v291 = v325;
                  v290 = v326;
                  sub_245299680(v326, v325, &v358, &v357, v356, (uint64_t)sub_2452BB51C, v288, ObjectType, v348);
                  swift_release();
                  swift_release();
                  swift_release();
                  v384 = v364;
                  v385 = v365;
                  v386 = v366;
                  v387 = v367;
                  v380 = v360;
                  v381 = v361;
                  v382 = v362;
                  v383 = v363;
                  v378 = v358;
                  v379 = v359;
                  sub_245269928((uint64_t)&v378);
                  sub_245263F80(v291, &qword_25744F610);
                  sub_2452B7B5C(v290, (uint64_t (*)(_QWORD))type metadata accessor for Message);
                  sub_2452B7B5C((uint64_t)v306, type metadata accessor for ReplicatorMessage);
                  sub_245263F80(v336, &qword_25744F610);
                  sub_2452B7B5C(v337, type metadata accessor for ReplicatorMessage.Sync);
                  sub_2452B7B5C((uint64_t)v351, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
                  sub_2452B7B5C((uint64_t)v340, type metadata accessor for Replicator.Session);
                  sub_2452B7B5C((uint64_t)v343, type metadata accessor for Replicator.SyncItem);
                }
                return;
              }
              v210 = v320;
              sub_2452B792C((uint64_t)v343, v320, type metadata accessor for Record.ID);
              *(_QWORD *)&v368 = a1;
              v211 = v353;
              v212 = MEMORY[0x24953323C](v353 + 16);
              v213 = v347;
              if (v212)
              {
                v214 = *((_QWORD *)v211 + 3);
                v215 = swift_getObjectType();
                *(_QWORD *)&v378 = v213;
                *((_QWORD *)&v378 + 1) = v348;
                v216 = (uint64_t)v319;
                (*(void (**)(__int128 *, uint64_t, char *, __int128 *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v214 + 24))(&v368, v210, v351, &v378, ObjectType, &protocol witness table for Replicator, v215, v214);
                swift_unknownObjectRelease();
                v217 = v321;
                v218 = v318;
              }
              else
              {
                v218 = v318;
                v216 = (uint64_t)v319;
                v217 = v321;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v318 + 56))(v319, 1, 1, v321);
              }
              sub_2452B7B5C(v210, type metadata accessor for Record.ID);
              v221 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v218 + 48))(v216, 1, v217);
              a1 = v304;
              v222 = v337;
              if (v221 == 1)
              {
                sub_245263F80(v216, &qword_257452348);
                goto LABEL_80;
              }
              sub_2452B7AB8(v216, (uint64_t)v317, (uint64_t (*)(_QWORD))type metadata accessor for PrioritizedRecordValue);
              sub_24525E4F0((uint64_t)v355, (uint64_t)&v378);
              v223 = *((_QWORD *)&v379 + 1);
              v224 = v380;
              __swift_project_boxed_opaque_existential_1(&v378, *((uint64_t *)&v379 + 1));
              v225 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v224 + 8) + 8) + 24))(v223);
              if (*(_QWORD *)(v225 + 16))
              {
                v226 = sub_2452C2000(v343);
                v227 = v308;
                if ((v228 & 1) != 0)
                {
                  sub_2452B792C(*(_QWORD *)(v225 + 56) + *(_QWORD *)(v310 + 72) * v226, v308, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
                  v229 = 0;
                }
                else
                {
                  v229 = 1;
                }
                goto LABEL_78;
              }
LABEL_76:
              v229 = 1;
              v227 = v308;
LABEL_78:
              v230 = v309;
              v231 = v310;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v310 + 56))(v227, v229, 1, v309);
              swift_bridgeObjectRelease();
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v231 + 48))(v227, 1, v230) != 1)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v293 = v307;
                sub_2452B7AB8(v227, v307, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v378);
                v294 = v328;
                v295 = v337 + *(int *)(v327 + 20);
                v296 = v295 + *(int *)(v328 + 20);
                v297 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452350);
                v298 = (_QWORD *)(v296 + *(int *)(v297 + 48));
                sub_2452B7AB8(v293, v296, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
                v299 = v317;
                v300 = v317[1];
                v348 = *v317;
                ObjectType = v300;
                *v298 = v348;
                v298[1] = v300;
                v185 = v337;
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v297 - 8) + 56))(v296, 0, 1, v297);
                sub_2452B792C((uint64_t)v343, v295, type metadata accessor for Record.ID);
                v301 = type metadata accessor for Record.Value(0);
                v302 = v295 + *(int *)(v294 + 24);
                *(_QWORD *)v302 = *(uint64_t *)((char *)v299 + *(int *)(v301 + 24));
                *(_BYTE *)(v302 + 8) = 0;
                v190 = sub_245387740();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v185, v352, v190);
                sub_2452BC89C((uint64_t)v299 + *(int *)(v301 + 20), v336, &qword_25744F610);
                LODWORD(v355) = *((unsigned __int8 *)v299 + *(int *)(v321 + 20));
                sub_245261C44(v348, ObjectType);
                sub_2452B7B5C((uint64_t)v299, (uint64_t (*)(_QWORD))type metadata accessor for PrioritizedRecordValue);
                goto LABEL_56;
              }
              sub_2452B7B5C((uint64_t)v317, (uint64_t (*)(_QWORD))type metadata accessor for PrioritizedRecordValue);
              sub_245263F80(v227, &qword_25744F848);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v378);
              v222 = v337;
LABEL_80:
              v232 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452350);
              v233 = v323;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v232 - 8) + 56))(v323, 1, 1, v232);
              v234 = v324;
              sub_2452B792C((uint64_t)v343, v324, type metadata accessor for Record.ID);
              v235 = v328;
              sub_2452B792C(v233, v234 + *(int *)(v328 + 20), type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v236 = v234 + *(int *)(v235 + 24);
              *(_QWORD *)v236 = v347;
              *(_BYTE *)(v236 + 8) = 0;
              v190 = sub_245387740();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v222, v352, v190);
              sub_2452B792C(v234, v222 + *(int *)(v327 + 20), type metadata accessor for ReplicatorMessage.Sync.SyncRecord);
              v237 = sub_2453875E4();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v237 - 8) + 56))(v336, 1, 1, v237);
              v238 = v311;
              sub_2452B792C(v234, v311, type metadata accessor for ReplicatorMessage.Sync.SyncRecord);
              swift_retain();
              v239 = sub_2453877F4();
              v240 = sub_245387D1C();
              v241 = v240;
              if (os_log_type_enabled(v239, v240))
              {
                v242 = swift_slowAlloc();
                v352 = swift_slowAlloc();
                *(_QWORD *)&v378 = v352;
                *(_DWORD *)v242 = 136446466;
                LODWORD(ObjectType) = v241;
                v243 = a1[61];
                v244 = v304[62];
                swift_bridgeObjectRetain();
                *(_QWORD *)&v368 = sub_2453816D8(v243, v244, (uint64_t *)&v378);
                sub_245387E0C();
                swift_release();
                swift_bridgeObjectRelease();
                *(_WORD *)(v242 + 12) = 2082;
                v245 = Record.ID.description.getter();
                *(_QWORD *)&v368 = sub_2453816D8(v245, v246, (uint64_t *)&v378);
                a1 = v304;
                sub_245387E0C();
                swift_bridgeObjectRelease();
                sub_2452B7B5C(v238, type metadata accessor for ReplicatorMessage.Sync.SyncRecord);
                _os_log_impl(&dword_245256000, v239, (os_log_type_t)ObjectType, "(%{public}s) Removing metadata for missing record ID: %{public}s", (uint8_t *)v242, 0x16u);
                v247 = v352;
                swift_arrayDestroy();
                MEMORY[0x24953317C](v247, -1, -1);
                MEMORY[0x24953317C](v242, -1, -1);
              }
              else
              {
                swift_release();
                sub_2452B7B5C(v238, type metadata accessor for ReplicatorMessage.Sync.SyncRecord);
              }

              sub_24525E4F0((uint64_t)v355, (uint64_t)&v378);
              v248 = *((_QWORD *)&v379 + 1);
              v249 = v380;
              __swift_project_boxed_opaque_existential_1(&v378, *((uint64_t *)&v379 + 1));
              __swift_instantiateConcreteTypeFromMangledName(&qword_257450270);
              v250 = (*(unsigned __int8 *)(v312 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v312 + 80);
              v251 = swift_allocObject();
              *(_OWORD *)(v251 + 16) = xmmword_245389A60;
              v252 = v251 + v250;
              v253 = v324;
              sub_2452B792C(v324, v252, type metadata accessor for Record.ID);
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v249 + 16) + 112))(v251, v248);
              swift_bridgeObjectRelease();
              sub_2452B7B5C(v253, type metadata accessor for ReplicatorMessage.Sync.SyncRecord);
              sub_2452B7B5C(v323, type metadata accessor for ReplicatorMessage.Sync.SyncRecord.Value);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v378);
              LODWORD(v355) = 0;
              v192 = (uint64_t)v340;
              v185 = v337;
              goto LABEL_84;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v161 = v343;
            v199 = v331;
            sub_2452B792C((uint64_t)v343, v331, type metadata accessor for Replicator.SyncItem);
            v200 = (uint64_t)v304;
            swift_retain();
            v201 = sub_2453877F4();
            v202 = sub_245387D1C();
            if (os_log_type_enabled(v201, v202))
            {
              v203 = swift_slowAlloc();
              v204 = swift_slowAlloc();
              *(_QWORD *)&v378 = v204;
              *(_DWORD *)v203 = 136446466;
              v205 = *(_QWORD *)(v200 + 488);
              v206 = *(_QWORD *)(v200 + 496);
              swift_bridgeObjectRetain();
              *(_QWORD *)&v368 = sub_2453816D8(v205, v206, (uint64_t *)&v378);
              sub_245387E0C();
              swift_release();
              swift_bridgeObjectRelease();
              *(_WORD *)(v203 + 12) = 2082;
              v207 = Record.ID.description.getter();
              *(_QWORD *)&v368 = sub_2453816D8(v207, v208, (uint64_t *)&v378);
              v200 = (uint64_t)v304;
              sub_245387E0C();
              swift_bridgeObjectRelease();
              sub_2452B7B5C(v199, type metadata accessor for Replicator.SyncItem);
              _os_log_impl(&dword_245256000, v201, v202, "(%{public}s) Replication policy prevents record from syncing: %{public}s", (uint8_t *)v203, 0x16u);
              swift_arrayDestroy();
              v209 = v204;
              v161 = v343;
              MEMORY[0x24953317C](v209, -1, -1);
              MEMORY[0x24953317C](v203, -1, -1);
            }
            else
            {
              swift_release();
              sub_2452B7B5C(v199, type metadata accessor for Replicator.SyncItem);
            }

            v219 = (uint64_t)v340;
            v220 = (uint64_t)v351;
            sub_2452A4708(v200);
            swift_release();
            swift_release();
            sub_2452B7B5C(v220, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
            v171 = v219;
LABEL_51:
            sub_2452B7B5C(v171, type metadata accessor for Replicator.Session);
            v160 = (uint64_t)v161;
            goto LABEL_45;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v161 = v343;
        v162 = v339;
        sub_2452B792C((uint64_t)v343, v339, type metadata accessor for Replicator.SyncItem);
        swift_retain();
        v163 = sub_2453877F4();
        v164 = sub_245387D1C();
        v165 = v164;
        if (os_log_type_enabled(v163, v164))
        {
          v166 = swift_slowAlloc();
          v355 = (_QWORD *)swift_slowAlloc();
          *(_QWORD *)&v368 = v355;
          *(_DWORD *)v166 = 136446466;
          LODWORD(v354) = v165;
          v353 = v129;
          v167 = a1[61];
          v168 = a1[62];
          swift_bridgeObjectRetain();
          *(_QWORD *)&v378 = sub_2453816D8(v167, v168, (uint64_t *)&v368);
          sub_245387E0C();
          swift_release();
          swift_bridgeObjectRelease();
          *(_WORD *)(v166 + 12) = 2082;
          v352 = v166 + 14;
          v304 = a1;
          *(_QWORD *)&v378 = 0;
          *((_QWORD *)&v378 + 1) = 0xE000000000000000;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_245387EA8();
          swift_bridgeObjectRelease();
          *(_QWORD *)&v378 = 540697705;
          *((_QWORD *)&v378 + 1) = 0xE400000000000000;
          swift_bridgeObjectRetain();
          sub_245387B90();
          swift_bridgeObjectRelease();
          sub_245387B90();
          swift_bridgeObjectRetain();
          sub_245387B90();
          v161 = v343;
          swift_bridgeObjectRelease();
          a1 = v304;
          swift_bridgeObjectRelease_n();
          *(_QWORD *)&v378 = sub_2453816D8(v378, *((unint64_t *)&v378 + 1), (uint64_t *)&v368);
          sub_245387E0C();
          swift_bridgeObjectRelease();
          sub_2452B7B5C(v162, type metadata accessor for Replicator.SyncItem);
          _os_log_impl(&dword_245256000, v163, (os_log_type_t)v354, "(%{public}s) Cannot find remote zone descriptor for zone: %{public}s", (uint8_t *)v166, 0x16u);
          v169 = (uint64_t)v355;
          swift_arrayDestroy();
          MEMORY[0x24953317C](v169, -1, -1);
          MEMORY[0x24953317C](v166, -1, -1);
        }
        else
        {
          swift_release();
          sub_2452B7B5C(v162, type metadata accessor for Replicator.SyncItem);
        }

        v170 = (uint64_t)v351;
        sub_2452A4708((uint64_t)a1);
        swift_release();
        swift_release();
        sub_2452B7B5C(v170, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        v171 = (uint64_t)v340;
        goto LABEL_51;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v149 = v341;
    sub_2452B792C((uint64_t)v65, v341, type metadata accessor for Replicator.SyncItem);
    swift_retain();
    v150 = sub_2453877F4();
    v151 = sub_245387D1C();
    if (os_log_type_enabled(v150, v151))
    {
      v152 = swift_slowAlloc();
      v355 = (_QWORD *)swift_slowAlloc();
      *(_QWORD *)&v378 = v355;
      *(_DWORD *)v152 = 136446466;
      v153 = a1[61];
      v154 = a1[62];
      swift_bridgeObjectRetain();
      *(_QWORD *)&v368 = sub_2453816D8(v153, v154, (uint64_t *)&v378);
      sub_245387E0C();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v152 + 12) = 2082;
      v155 = Record.ID.description.getter();
      *(_QWORD *)&v368 = sub_2453816D8(v155, v156, (uint64_t *)&v378);
      v65 = v343;
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_2452B7B5C(v149, type metadata accessor for Replicator.SyncItem);
      _os_log_impl(&dword_245256000, v150, v151, "(%{public}s) Cannot sync enqueued record with no data source: %{public}s", (uint8_t *)v152, 0x16u);
      v157 = (uint64_t)v355;
      swift_arrayDestroy();
      MEMORY[0x24953317C](v157, -1, -1);
      MEMORY[0x24953317C](v152, -1, -1);
    }
    else
    {
      swift_release();
      sub_2452B7B5C(v149, type metadata accessor for Replicator.SyncItem);
    }

    v158 = (uint64_t)v340;
    v159 = (uint64_t)v351;
    sub_2452A4708((uint64_t)a1);
    swift_release();
    sub_2452B7B5C(v159, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v148 = v158;
    goto LABEL_43;
  }
  if (qword_25744FD90 != -1)
    swift_once();
  v81 = sub_245387818();
  __swift_project_value_buffer(v81, (uint64_t)qword_257462FB0);
  swift_retain();
  v82 = sub_2453877F4();
  v83 = sub_245387D34();
  if (os_log_type_enabled(v82, v83))
  {
    v84 = (uint8_t *)swift_slowAlloc();
    v85 = swift_slowAlloc();
    *(_QWORD *)&v378 = v85;
    *(_DWORD *)v84 = 136446210;
    v86 = a1[61];
    v87 = a1[62];
    swift_bridgeObjectRetain();
    *(_QWORD *)&v368 = sub_2453816D8(v86, v87, (uint64_t *)&v378);
    sub_245387E0C();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v82, v83, "(%{public}s) Sync queue is empty", v84, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v85, -1, -1);
    MEMORY[0x24953317C](v84, -1, -1);

  }
  else
  {

    swift_release();
  }
}

uint64_t sub_2452A4708(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v13[2];
  _QWORD aBlock[6];

  v2 = sub_245387920();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_245387950();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(_QWORD *)(a1 + 232);
  aBlock[4] = sub_2452BACF0;
  aBlock[5] = a1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525DD34;
  aBlock[3] = &block_descriptor_1391;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_245387938();
  v13[1] = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_25744FF00, v3, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
  sub_24526381C((unint64_t *)&qword_25744FFF0, (uint64_t *)&unk_25744FFE0, MEMORY[0x24BEE12C8]);
  sub_245387E3C();
  MEMORY[0x2495320E4](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

void sub_2452A48DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v2 = sub_2453879D4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (void *)a1[29];
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_2453879F8();
  v8 = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    v9 = (void *)MEMORY[0x249532900](v8);
    sub_2452A1E60(a1);
    objc_autoreleasePoolPop(v9);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2452A49B0(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD);
  uint64_t (*v20)(_QWORD);
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t result;
  uint64_t v31;
  void *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  dispatch_queue_t v36;
  _QWORD aBlock[6];

  v34 = a6;
  v35 = a7;
  v33 = a2;
  v32 = a1;
  v10 = type metadata accessor for PairingRelationship();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Replicator.Session(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *(dispatch_queue_t *)(a3 + 232);
  v18 = a4;
  v20 = v19;
  sub_2452B792C(v18, (uint64_t)v17, v19);
  sub_2452B792C(a5, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  v21 = (*(unsigned __int8 *)(v15 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v22 = (v16 + *(unsigned __int8 *)(v11 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v23 = (v12 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject();
  v25 = v32;
  *(_QWORD *)(v24 + 16) = v32;
  LOBYTE(v12) = v33 & 1;
  *(_BYTE *)(v24 + 24) = v33 & 1;
  *(_QWORD *)(v24 + 32) = a3;
  sub_2452B7AB8((uint64_t)v17, v24 + v21, v20);
  sub_2452B7AB8((uint64_t)v13, v24 + v22, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  v26 = (_QWORD *)(v24 + v23);
  v27 = v35;
  *v26 = v34;
  v26[1] = v27;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = sub_2452BB764;
  *(_QWORD *)(v28 + 24) = v24;
  aBlock[4] = sub_2452643B4;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525B888;
  aBlock[3] = &block_descriptor_1388;
  v29 = _Block_copy(aBlock);
  sub_245263EDC(v25, v12);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v36, v29);
  _Block_release(v29);
  LOBYTE(v29) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v29 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_2452A4C1C(void *a1, char a2, _QWORD *a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void), void *a7)
{
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  void *v31;
  uint64_t (*v32)(void);
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void (*v43)(id *, uint64_t *, uint64_t, uint64_t);
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  int v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char v61;
  void (*v62)(id *, uint64_t *, uint64_t, uint64_t);
  _QWORD v64[5];
  os_log_t v65;
  uint64_t v66;
  void *v67;
  uint64_t (*v68)(void);
  uint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  id v73;
  uint64_t v74;
  char v75;
  __int128 v76;
  char v77;
  id v78;

  if ((a2 & 1) != 0)
  {
    v73 = a1;
    v13 = a1;
    v14 = a1;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C868);
    if (swift_dynamicCast() && v78 == 2)
    {
      if (qword_25744FD90 != -1)
        swift_once();
      v16 = sub_245387818();
      __swift_project_value_buffer(v16, (uint64_t)qword_257462FB0);
      sub_245263EDC(a1, 1);
      sub_245263EDC(a1, 1);
      swift_retain();
      v17 = sub_2453877F4();
      v18 = sub_245387D34();
      if (os_log_type_enabled(v17, v18))
      {
        v68 = a6;
        v19 = swift_slowAlloc();
        v67 = (void *)swift_slowAlloc();
        v71 = (uint64_t)v67;
        *(_DWORD *)v19 = 136446466;
        v21 = a3[61];
        v20 = a3[62];
        swift_bridgeObjectRetain();
        sub_2453816D8(v21, v20, &v71);
        sub_245387E0C();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v19 + 12) = 2082;
        v22 = a1;
        v23 = sub_245387B48();
        v69 = sub_2453816D8(v23, v24, &v71);
        sub_245387E0C();
        swift_bridgeObjectRelease();
        sub_245263EE8(a1, 1);
        sub_245263EE8(a1, 1);
        _os_log_impl(&dword_245256000, v17, v18, "(%{public}s) Allow list prevents sending sync item: %{public}s.", (uint8_t *)v19, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v67, -1, -1);
        v25 = v19;
        a6 = v68;
        MEMORY[0x24953317C](v25, -1, -1);

        sub_245263EE8(a1, 1);
      }
      else
      {
        sub_245263EE8(a1, 1);
        swift_release();
        sub_245263EE8(a1, 1);
        sub_245263EE8(a1, 1);

      }
      v54 = v73;
LABEL_24:

      return a6();
    }

    v78 = a1;
    v26 = a1;
    if (swift_dynamicCast() && (v77 & 1) == 0)
    {
      if (qword_25744FD90 != -1)
        swift_once();
      v68 = a5;
      v44 = sub_245387818();
      __swift_project_value_buffer(v44, (uint64_t)qword_257462FB0);
      sub_245263EDC(a1, 1);
      sub_245263EDC(a1, 1);
      swift_retain();
      v45 = sub_2453877F4();
      v46 = sub_245387D1C();
      v47 = v46;
      if (os_log_type_enabled(v45, v46))
      {
        v48 = swift_slowAlloc();
        v67 = (void *)swift_slowAlloc();
        v73 = v67;
        *(_DWORD *)v48 = 136446466;
        LODWORD(v66) = v47;
        v65 = v45;
        v50 = a3[61];
        v49 = a3[62];
        swift_bridgeObjectRetain();
        sub_2453816D8(v50, v49, (uint64_t *)&v73);
        sub_245387E0C();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v48 + 12) = 2082;
        v51 = a1;
        v52 = sub_245387B48();
        v71 = sub_2453816D8(v52, v53, (uint64_t *)&v73);
        sub_245387E0C();
        swift_bridgeObjectRelease();
        sub_245263EE8(a1, 1);
        sub_245263EE8(a1, 1);
        _os_log_impl(&dword_245256000, v65, (os_log_type_t)v66, "(%{public}s) Network failure encountered when sending sync item: %{public}s", (uint8_t *)v48, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v67, -1, -1);
        MEMORY[0x24953317C](v48, -1, -1);

      }
      else
      {
        swift_release();
        sub_245263EE8(a1, 1);
        sub_245263EE8(a1, 1);

      }
      v55 = swift_beginAccess();
      v56 = a3[63];
      MEMORY[0x24BDAC7A8](v55);
      v64[2] = a4;
      swift_bridgeObjectRetain();
      a3[63] = sub_24531D168((uint64_t (*)(char *))sub_2452BB7F8, (uint64_t)v64, v56);
      swift_bridgeObjectRelease();
      v57 = a3[51];
      v58 = a3[52];
      __swift_project_boxed_opaque_existential_1(a3 + 48, v57);
      v59 = (char *)v68 + *(int *)(type metadata accessor for PairingRelationship() + 20);
      v60 = *((_QWORD *)v59 + 1);
      v61 = v59[48];
      v73 = *(id *)v59;
      v74 = v60;
      v75 = v61;
      v76 = *((_OWORD *)v59 + 2);
      v69 = 0;
      v70 = 2;
      v62 = *(void (**)(id *, uint64_t *, uint64_t, uint64_t))(v58 + 16);
      swift_bridgeObjectRetain();
      v62(&v73, &v69, v57, v58);
      sub_245263EE8(a1, 1);
      swift_bridgeObjectRelease();
      v54 = v78;
      goto LABEL_24;
    }

    if (qword_25744FD90 != -1)
      swift_once();
    v27 = sub_245387818();
    __swift_project_value_buffer(v27, (uint64_t)qword_257462FB0);
    sub_245263EDC(a1, 1);
    sub_245263EDC(a1, 1);
    swift_retain();
    v28 = sub_2453877F4();
    v29 = sub_245387D1C();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v67 = a7;
      v31 = (void *)swift_slowAlloc();
      v73 = v31;
      *(_DWORD *)v30 = 136446466;
      v66 = v15;
      v68 = a5;
      v32 = a6;
      v33 = a3[61];
      v34 = a3[62];
      swift_bridgeObjectRetain();
      sub_2453816D8(v33, v34, (uint64_t *)&v73);
      sub_245387E0C();
      swift_release();
      a6 = v32;
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2082;
      v35 = a1;
      v36 = sub_245387B48();
      v71 = sub_2453816D8(v36, v37, (uint64_t *)&v73);
      a5 = v68;
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_245263EE8(a1, 1);
      sub_245263EE8(a1, 1);
      _os_log_impl(&dword_245256000, v28, v29, "(%{public}s) Error sending sync item: %{public}s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v31, -1, -1);
      MEMORY[0x24953317C](v30, -1, -1);
    }
    else
    {
      swift_release();
      sub_245263EE8(a1, 1);
      sub_245263EE8(a1, 1);
    }

    v38 = a3[51];
    v39 = a3[52];
    __swift_project_boxed_opaque_existential_1(a3 + 48, v38);
    v40 = (uint64_t)a5 + *(int *)(type metadata accessor for PairingRelationship() + 20);
    v41 = *(_QWORD *)(v40 + 8);
    v42 = *(_BYTE *)(v40 + 48);
    v73 = *(id *)v40;
    v74 = v41;
    v75 = v42;
    v76 = *(_OWORD *)(v40 + 32);
    v71 = 0;
    v72 = 2;
    v43 = *(void (**)(id *, uint64_t *, uint64_t, uint64_t))(v39 + 16);
    swift_bridgeObjectRetain();
    v43(&v73, &v71, v38, v39);
    sub_245263EE8(a1, 1);
    swift_bridgeObjectRelease();
  }
  return a6();
}

BOOL sub_2452A54C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v4 = sub_245387740();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v16 - v10;
  v12 = a1 + *(int *)(type metadata accessor for Replicator.SyncItem(0) + 20);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v13(v11, v12, v4);
  v13(v9, a2, v4);
  sub_24525C6C4(&qword_257452430, v5, MEMORY[0x24BDCEA98]);
  LOBYTE(a2) = sub_245387AE8();
  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v4);
  v14(v11, v4);
  return (a2 & 1) == 0;
}

void sub_2452A55EC(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  _QWORD *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[3];
  uint64_t v74;
  uint64_t v75;

  v66 = a5;
  v67 = a6;
  v70 = a7;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PairingRelationship();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v65 = (uint64_t)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v68 = (uint64_t)&v65 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v65 - v20;
  swift_beginAccess();
  sub_24525E4F0((uint64_t)(a1 + 24), (uint64_t)v73);
  v22 = v74;
  v23 = v75;
  __swift_project_boxed_opaque_existential_1(v73, v74);
  v24 = *(_QWORD *)(v23 + 8);
  v69 = a2;
  v25 = a2;
  v26 = a3;
  MetadataStoring.pairingRelationship(remoteDeviceID:)(v25, a3, v22, v24, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_245263F80((uint64_t)v13, (uint64_t *)&unk_25744FAD0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
    if (qword_25744FD90 != -1)
      swift_once();
    v27 = sub_245387818();
    __swift_project_value_buffer(v27, (uint64_t)qword_257462FB0);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v28 = sub_2453877F4();
    v29 = sub_245387D1C();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v73[0] = v31;
      *(_DWORD *)v30 = 136446466;
      v32 = a1[61];
      v33 = a1[62];
      swift_bridgeObjectRetain();
      v72 = sub_2453816D8(v32, v33, v73);
      sub_245387E0C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      swift_bridgeObjectRetain();
      v72 = sub_2453816D8(v69, v26, v73);
      sub_245387E0C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_245256000, v28, v29, "%{public}s Cannot pair with a device we have not already discovered: %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v31, -1, -1);
      MEMORY[0x24953317C](v30, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    v47 = 1;
  }
  else
  {
    sub_2452B7AB8((uint64_t)v13, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
    v34 = &v21[*(int *)(v14 + 20)];
    v35 = *((_QWORD *)v34 + 4);
    v36 = *((_QWORD *)v34 + 5);
    v37 = v35 < 4 || v36 > 0xC;
    v38 = (uint64_t)v21;
    if (v37)
    {
      if (qword_25744FD90 != -1)
        swift_once();
      v39 = sub_245387818();
      __swift_project_value_buffer(v39, (uint64_t)qword_257462FB0);
      v40 = v68;
      sub_2452B792C((uint64_t)v21, v68, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      swift_retain_n();
      v41 = sub_2453877F4();
      v42 = sub_245387D1C();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = swift_slowAlloc();
        v73[0] = swift_slowAlloc();
        v69 = v38;
        v44 = v73[0];
        *(_DWORD *)v43 = 136446466;
        v46 = a1[61];
        v45 = a1[62];
        swift_bridgeObjectRetain();
        v72 = sub_2453816D8(v46, v45, v73);
        sub_245387E0C();
        v47 = 2;
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v43 + 12) = 2082;
        sub_2452B792C(v40, v65, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        v48 = sub_245387B48();
        v72 = sub_2453816D8(v48, v49, v73);
        sub_245387E0C();
        swift_bridgeObjectRelease();
        sub_2452B7B5C(v40, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        _os_log_impl(&dword_245256000, v41, v42, "%{public}s Cannot pair with a device that has an incompatible protocol version: %{public}s", (uint8_t *)v43, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v44, -1, -1);
        MEMORY[0x24953317C](v43, -1, -1);

        v50 = v69;
      }
      else
      {

        sub_2452B7B5C(v40, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        v47 = 2;
        swift_release_n();
        v50 = v38;
      }
      sub_2452B7B5C(v50, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    }
    else
    {
      v52 = *(_QWORD *)v34;
      v51 = *((_QWORD *)v34 + 1);
      v53 = v34[48];
      *a4 = v52;
      a4[1] = v51;
      a4[2] = v53;
      a4[3] = v35;
      a4[4] = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v54 = a1 + 65;
      swift_beginAccess();
      v55 = a1[65];
      if (*(_QWORD *)(v55 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v56 = v69;
        v57 = sub_2452C1D98(v69, a3);
        if ((v58 & 1) != 0)
        {
          v59 = *(_QWORD **)(*(_QWORD *)(v55 + 56) + 8 * v57);
          swift_bridgeObjectRetain();
        }
        else
        {
          v59 = (_QWORD *)MEMORY[0x24BEE4AF8];
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v59 = (_QWORD *)MEMORY[0x24BEE4AF8];
        v56 = v69;
      }
      v60 = swift_allocObject();
      *(_QWORD *)(v60 + 16) = v66;
      *(_QWORD *)(v60 + 24) = v67;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v59 = sub_24532425C(0, v59[2] + 1, 1, v59);
      v62 = v59[2];
      v61 = v59[3];
      if (v62 >= v61 >> 1)
        v59 = sub_24532425C((_QWORD *)(v61 > 1), v62 + 1, 1, v59);
      v59[2] = v62 + 1;
      v63 = &v59[2 * v62];
      v63[4] = sub_2452BB018;
      v63[5] = v60;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v71 = *v54;
      *v54 = 0x8000000000000000;
      sub_245328414((uint64_t)v59, v56, v26, isUniquelyReferenced_nonNull_native);
      *v54 = v71;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_2452B7B5C(v38, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v47 = 8;
    }
  }
  *v70 = v47;
}

void sub_2452A5D7C(void (*a1)(void *, uint64_t), uint64_t a2, char a3)
{
  void *v5;
  _BYTE *v6;

  sub_2452B9768();
  v5 = (void *)swift_allocError();
  *v6 = a3;
  a1(v5, 1);

}

uint64_t sub_2452A5DD8(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12[2];
  __int128 v13;
  char v14;
  __int128 v15;

  v5 = a4 + *(int *)(type metadata accessor for PairingRelationship() + 20);
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(_BYTE *)(v5 + 48);
  *(_QWORD *)&v13 = *(_QWORD *)v5;
  *((_QWORD *)&v13 + 1) = v6;
  v14 = v7;
  v15 = *(_OWORD *)(v5 + 32);
  v12[0] = 0;
  v12[1] = 0;
  v10 = 0;
  v11 = 0;
  swift_bridgeObjectRetain();
  sub_2452891D4(&v13, v12, &v10);
  v8 = swift_bridgeObjectRelease();
  return a1(v8);
}

uint64_t sub_2452A5E6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v0 = sub_2453879D4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = *(void **)(result + 232);
    *v3 = v5;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5610], v0);
    v6 = v5;
    LOBYTE(v5) = sub_2453879F8();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v1 + 8))(v3, v0);
    if ((v5 & 1) != 0)
    {
      v7 = sub_24526E7DC();
      sub_2452725FC(v7);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2452A5F60(char *a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];
  char *v38;
  uint64_t v39;

  v32 = a1;
  v33 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2453876EC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v31 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v30 = (char *)&v29 - v13;
  sub_24525E4F0(a3 + 304, (uint64_t)v37);
  v14 = v38;
  v15 = v39;
  __swift_project_boxed_opaque_existential_1(v37, (uint64_t)v38);
  v16 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90) + 48);
  swift_beginAccess();
  sub_24525E4F0(a3 + 192, (uint64_t)v34);
  v17 = v35;
  v18 = v36;
  __swift_project_boxed_opaque_existential_1(v34, v35);
  v19 = MetadataStoring.hasRecords(from:)(v16, v17, *(_QWORD *)(v18 + 8));
  sub_24537E460(v16, v33, v19 & 1, v14, v15, (uint64_t)v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_245263F80((uint64_t)v8, &qword_25744F6B0);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  }
  else
  {
    v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v22 = v30;
    v21(v30, v8, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    sub_24525C6C4((unint64_t *)&unk_2574525D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    v23 = v32;
    v24 = v22;
    if ((sub_245387AD0() & 1) != 0)
    {
      v25 = v31;
      v26 = v31;
      v27 = v23;
    }
    else
    {
      v25 = v31;
      v26 = v31;
      v27 = v24;
    }
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v26, v27, v9);
    v28 = *(void (**)(char *, uint64_t))(v10 + 8);
    v28(v23, v9);
    v28(v24, v9);
    return ((uint64_t (*)(char *, char *, uint64_t))v21)(v23, v25, v9);
  }
}

uint64_t sub_2452A61DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t result;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  _BOOL4 v38;
  uint64_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  int64_t v55;
  uint64_t (*v56)(char *, uint64_t);
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  os_log_type_t v95;
  int v96;
  _BOOL4 v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int128 *v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int64_t v128;
  unint64_t v129;
  int64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD v135[3];
  int v136;
  uint64_t v137;
  uint64_t (*v138)();
  __int128 v139;
  char *v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  int64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  int64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  _QWORD *v158;
  char *v159;
  uint64_t v160;
  void (*v161)(char *, uint64_t);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD v166[2];
  __int128 v167[10];
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v156 = (uint64_t)v135 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v165 = (uint64_t)v135 - v3;
  v4 = (_QWORD *)type metadata accessor for PairingRelationship();
  v150 = *(v4 - 1);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t (*)())((char *)v135 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = MEMORY[0x24BDAC7A8](v5);
  v143 = (uint64_t)v135 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v148 = (uint64_t)v135 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v147 = (uint64_t)v135 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FFA0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v159 = (char *)v135 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (_QWORD *)((char *)v135 - v16);
  v18 = sub_2453876EC();
  v162 = *(_QWORD *)(v18 - 8);
  v163 = v18;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v144 = (char *)v135 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v157 = (char *)v135 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v149 = (char *)v135 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v152 = (char *)v135 - v25;
  v26 = sub_2453879D4();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (_QWORD *)((char *)v135 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v153 = result;
  v31 = *(void **)(result + 232);
  *v29 = v31;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v27 + 104))(v29, *MEMORY[0x24BEE5610], v26);
  v32 = v31;
  LOBYTE(v31) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v27 + 8))(v29, v26);
  if ((v31 & 1) != 0)
  {
    if (qword_25744FD90 == -1)
      goto LABEL_4;
    goto LABEL_54;
  }
  while (1)
  {
    __break(1u);
LABEL_54:
    swift_once();
LABEL_4:
    v33 = sub_245387818();
    v34 = __swift_project_value_buffer(v33, (uint64_t)qword_257462FB0);
    v35 = v153;
    swift_retain();
    v145 = v34;
    v36 = sub_2453877F4();
    v37 = sub_245387D34();
    v38 = os_log_type_enabled(v36, v37);
    v39 = MEMORY[0x24BEE4AD8];
    v138 = v7;
    v40 = v147;
    v142 = v4;
    v158 = v17;
    if (v38)
    {
      v41 = (uint8_t *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      *(_QWORD *)&v168 = v42;
      *(_DWORD *)v41 = 136446210;
      v164 = (uint64_t)(v41 + 4);
      v44 = *(_QWORD *)(v35 + 488);
      v43 = *(_QWORD *)(v35 + 496);
      swift_bridgeObjectRetain();
      *(_QWORD *)&v167[0] = sub_2453816D8(v44, v43, (uint64_t *)&v168);
      sub_245387E0C();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v36, v37, "(%{public}s) Suspension timer fired", v41, 0xCu);
      v39 = MEMORY[0x24BEE4AD8];
      swift_arrayDestroy();
      MEMORY[0x24953317C](v42, -1, -1);
      MEMORY[0x24953317C](v41, -1, -1);

    }
    else
    {

      swift_release();
    }
    v45 = v39;
    v46 = v149;
    sub_2453876C8();
    sub_245387674();
    v47 = *(void (**)(char *, uint64_t))(v162 + 8);
    v47(v46, v163);
    swift_beginAccess();
    v155 = v35 + 192;
    sub_24525E4F0(v35 + 192, (uint64_t)&v168);
    v49 = *((_QWORD *)&v169 + 1);
    v48 = v170;
    __swift_project_boxed_opaque_existential_1(&v168, *((uint64_t *)&v169 + 1));
    v50 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v48 + 8) + 8) + 32))(v49);
    v51 = *(_QWORD *)(v50 + 64);
    v141 = v50 + 64;
    v151 = v50;
    v52 = 1 << *(_BYTE *)(v50 + 32);
    v53 = -1;
    if (v52 < 64)
      v53 = ~(-1 << v52);
    v54 = v53 & v51;
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v168);
    v55 = 0;
    v160 = v35 + 304;
    v56 = (uint64_t (*)(char *, uint64_t))v47;
    v140 = (char *)v167 + 8;
    v146 = (unint64_t)(v52 + 63) >> 6;
    v135[0] = v146 - 1;
    v4 = &unk_25744FF90;
    v7 = type metadata accessor for PairingRelationship;
    *(_QWORD *)&v57 = 136446466;
    v139 = v57;
    v135[1] = v45 + 8;
    v17 = v159;
    v161 = v47;
    if (v54)
    {
      while (1)
      {
        v164 = (v54 - 1) & v54;
        v121 = __clz(__rbit64(v54)) | (v55 << 6);
LABEL_30:
        v122 = *(_QWORD *)(v151 + 56);
        v123 = (_QWORD *)(*(_QWORD *)(v151 + 48) + 16 * v121);
        v124 = v123[1];
        *v17 = *v123;
        v17[1] = v124;
        v125 = v122 + *(_QWORD *)(v150 + 72) * v121;
        v126 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
        sub_2452B792C(v125, (uint64_t)v17 + *(int *)(v126 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 56))(v17, 0, 1, v126);
        swift_bridgeObjectRetain();
        v127 = v160;
LABEL_49:
        v132 = (uint64_t)v158;
        sub_2452BC850((uint64_t)v17, (uint64_t)v158, &qword_25744FFA0);
        v133 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v133 - 8) + 48))(v132, 1, v133) == 1)
        {
          v134 = swift_release();
          sub_24526D8E4(v134);
          swift_release();
          return v56(v152, v163);
        }
        swift_bridgeObjectRelease();
        sub_2452B7AB8(v132 + *(int *)(v133 + 48), v40, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        sub_24525E4F0(v155, (uint64_t)&v168);
        v58 = *((_QWORD *)&v169 + 1);
        v59 = v170;
        __swift_project_boxed_opaque_existential_1(&v168, *((uint64_t *)&v169 + 1));
        LOBYTE(v58) = MetadataStoring.hasRecords(from:)(v40, v58, *(_QWORD *)(v59 + 8));
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v168);
        sub_24525E4F0(v127, (uint64_t)&v168);
        v60 = v127;
        v61 = *((_QWORD *)&v169 + 1);
        v62 = v170;
        __swift_project_boxed_opaque_existential_1(&v168, *((uint64_t *)&v169 + 1));
        v63 = v58 & 1;
        v64 = v165;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8))(v40, v63, v61, v62);
        v65 = v40;
        v66 = v162;
        v67 = v163;
        v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v162 + 48);
        if (v68(v64, 1, v163) != 1)
          break;
        v154 = v55;
        sub_245263F80(v165, &qword_25744F6B0);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v168);
        sub_24525E4F0(v60, (uint64_t)&v168);
        v69 = *((_QWORD *)&v169 + 1);
        v70 = v170;
        __swift_project_boxed_opaque_existential_1(&v168, *((uint64_t *)&v169 + 1));
        v71 = v156;
        v72 = v69;
        v73 = v163;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 16))(v65, v63, v72, v70);
        if (v68(v71, 1, v73) == 1)
        {
          v7 = type metadata accessor for PairingRelationship;
          sub_2452B7B5C(v65, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          sub_245263F80(v156, &qword_25744F6B0);
          result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v168);
          v40 = v65;
          v17 = v159;
          v56 = (uint64_t (*)(char *, uint64_t))v161;
LABEL_19:
          v4 = &unk_25744FF90;
          v55 = v154;
          v54 = v164;
          if (!v164)
            goto LABEL_31;
        }
        else
        {
          v88 = v144;
          (*(void (**)(char *, uint64_t, uint64_t))(v162 + 32))(v144, v156, v73);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v168);
          v89 = v149;
          sub_245387674();
          sub_24525C6C4((unint64_t *)&unk_2574525D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
          v90 = sub_245387AD0();
          v56 = (uint64_t (*)(char *, uint64_t))v161;
          v161(v89, v73);
          v7 = type metadata accessor for PairingRelationship;
          if ((v90 & 1) != 0)
          {
            v56(v88, v73);
            v40 = v147;
            result = sub_2452B7B5C(v147, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
            v17 = v159;
            goto LABEL_19;
          }
          v92 = (uint64_t)v138;
          sub_2452B792C(v147, (uint64_t)v138, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          v93 = v153;
          swift_retain();
          v94 = sub_2453877F4();
          v95 = sub_245387D34();
          v96 = v95;
          v97 = os_log_type_enabled(v94, v95);
          v55 = v154;
          if (v97)
          {
            v98 = swift_slowAlloc();
            v137 = swift_slowAlloc();
            *(_QWORD *)&v168 = v137;
            *(_DWORD *)v98 = v139;
            v136 = v96;
            v99 = *(_QWORD *)(v93 + 488);
            v100 = *(_QWORD *)(v93 + 496);
            swift_bridgeObjectRetain();
            *(_QWORD *)&v167[0] = sub_2453816D8(v99, v100, (uint64_t *)&v168);
            sub_245387E0C();
            swift_release();
            v56 = (uint64_t (*)(char *, uint64_t))v161;
            swift_bridgeObjectRelease();
            *(_WORD *)(v98 + 12) = 2080;
            v135[2] = v98 + 14;
            v101 = v143;
            sub_2452B792C(v92, v143, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
            v102 = v142;
            v103 = sub_245387B48();
            *(_QWORD *)&v167[0] = sub_2453816D8(v103, v104, (uint64_t *)&v168);
            v7 = type metadata accessor for PairingRelationship;
            sub_245387E0C();
            v88 = v144;
            swift_bridgeObjectRelease();
            sub_2452B7B5C(v92, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
            _os_log_impl(&dword_245256000, v94, (os_log_type_t)v136, "(%{public}s) Unpairing inactive relationship: %s", (uint8_t *)v98, 0x16u);
            v105 = v137;
            swift_arrayDestroy();
            MEMORY[0x24953317C](v105, -1, -1);
            v106 = v98;
            v73 = v163;
            MEMORY[0x24953317C](v106, -1, -1);

          }
          else
          {
            swift_release();
            sub_2452B7B5C(v92, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);

            v102 = v142;
            v101 = v143;
          }
          v107 = *((int *)v102 + 5);
          v108 = v147;
          v109 = (__int128 *)(v147 + v107);
          v110 = v109[7];
          v111 = v109[5];
          v174 = v109[6];
          v175 = v110;
          v112 = v109[7];
          v113 = v109[9];
          v176 = v109[8];
          v177 = v113;
          v114 = v109[3];
          v115 = v109[1];
          v170 = v109[2];
          v171 = v114;
          v116 = v109[3];
          v117 = v109[5];
          v172 = v109[4];
          v173 = v117;
          v118 = v109[1];
          v168 = *v109;
          v169 = v118;
          v167[6] = v174;
          v167[7] = v112;
          v119 = v109[9];
          v167[8] = v176;
          v167[9] = v119;
          v167[2] = v170;
          v167[3] = v116;
          v167[4] = v172;
          v167[5] = v111;
          v167[0] = v168;
          v167[1] = v115;
          v166[0] = 0;
          v166[1] = 0;
          sub_24526432C((uint64_t)&v168);
          sub_24528B268(v167, (uint64_t)v166, 2, 1, v101);
          sub_245269928((uint64_t)&v168);
          v120 = v101;
          v40 = v108;
          sub_2452B7B5C(v120, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          v56(v88, v73);
          v91 = v108;
LABEL_28:
          result = sub_2452B7B5C(v91, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          v17 = v159;
          v4 = &unk_25744FF90;
          v54 = v164;
          if (!v164)
            goto LABEL_31;
        }
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v66 + 32))(v157, v165, v67);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v168);
      v74 = v149;
      sub_245387674();
      sub_24525C6C4((unint64_t *)&unk_2574525D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
      v75 = sub_245387AD0();
      v56 = (uint64_t (*)(char *, uint64_t))v161;
      v161(v74, v67);
      v76 = v148;
      v40 = v65;
      v7 = type metadata accessor for PairingRelationship;
      if ((v75 & 1) == 0)
      {
        sub_2452B792C(v65, v148, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        v77 = v153;
        swift_retain();
        v78 = sub_2453877F4();
        v79 = sub_245387D34();
        if (os_log_type_enabled(v78, v79))
        {
          v80 = swift_slowAlloc();
          v81 = swift_slowAlloc();
          *(_QWORD *)&v168 = v81;
          *(_DWORD *)v80 = v139;
          v82 = *(_QWORD *)(v77 + 488);
          v83 = *(_QWORD *)(v153 + 496);
          swift_bridgeObjectRetain();
          v84 = v82;
          v56 = (uint64_t (*)(char *, uint64_t))v161;
          *(_QWORD *)&v167[0] = sub_2453816D8(v84, v83, (uint64_t *)&v168);
          sub_245387E0C();
          swift_release();
          swift_bridgeObjectRelease();
          *(_WORD *)(v80 + 12) = 2080;
          sub_2452B792C(v148, v143, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          v85 = sub_245387B48();
          *(_QWORD *)&v167[0] = sub_2453816D8(v85, v86, (uint64_t *)&v168);
          v7 = type metadata accessor for PairingRelationship;
          v40 = v147;
          sub_245387E0C();
          swift_bridgeObjectRelease();
          sub_2452B7B5C(v148, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          _os_log_impl(&dword_245256000, v78, v79, "(%{public}s) Discarding data for inactive relationship: %s", (uint8_t *)v80, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24953317C](v81, -1, -1);
          v87 = v80;
          v67 = v163;
          MEMORY[0x24953317C](v87, -1, -1);
        }
        else
        {
          swift_release();
          sub_2452B7B5C(v76, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        }

        sub_245277D6C(v40);
      }
      v56(v157, v67);
      v91 = v40;
      goto LABEL_28;
    }
LABEL_31:
    v128 = v55 + 1;
    if (!__OFADD__(v55, 1))
      break;
    __break(1u);
  }
  v127 = v160;
  if (v128 >= v146)
    goto LABEL_48;
  v129 = *(_QWORD *)(v141 + 8 * v128);
  if (v129)
  {
LABEL_34:
    v164 = (v129 - 1) & v129;
    v121 = __clz(__rbit64(v129)) + (v128 << 6);
    v55 = v128;
    goto LABEL_30;
  }
  v130 = v55 + 2;
  ++v55;
  if (v128 + 1 >= v146)
    goto LABEL_48;
  v129 = *(_QWORD *)(v141 + 8 * v130);
  if (v129)
  {
LABEL_37:
    v128 = v130;
    goto LABEL_34;
  }
  v55 = v128 + 1;
  if (v128 + 2 >= v146)
    goto LABEL_48;
  v129 = *(_QWORD *)(v141 + 8 * (v128 + 2));
  if (v129)
  {
    v128 += 2;
    goto LABEL_34;
  }
  v130 = v128 + 3;
  v55 = v128 + 2;
  if (v128 + 3 >= v146)
  {
LABEL_48:
    v131 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 56))(v17, 1, 1, v131);
    v164 = 0;
    goto LABEL_49;
  }
  v129 = *(_QWORD *)(v141 + 8 * v130);
  if (v129)
    goto LABEL_37;
  while (1)
  {
    v128 = v130 + 1;
    if (__OFADD__(v130, 1))
      break;
    if (v128 >= v146)
    {
      v55 = v135[0];
      goto LABEL_48;
    }
    v129 = *(_QWORD *)(v141 + 8 * v128);
    ++v130;
    if (v129)
      goto LABEL_34;
  }
  __break(1u);
  return result;
}

BOOL sub_2452A708C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  swift_beginAccess();
  sub_24525E4F0(v4 + 192, (uint64_t)v13);
  v10 = v14;
  v9 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v9 + 8) + 8) + 32))(v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(a3) = sub_2452B5B40(v11, a1, a2, a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return (a3 & 1) == 0;
}

BOOL sub_2452A7174(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  unint64_t v51;
  _BOOL8 v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;

  v55 = a4;
  v56 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v57 = (uint64_t *)((char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v9);
  v60 = (uint64_t *)((char *)&v54 - v12);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (uint64_t *)((char *)&v54 - v14);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (uint64_t *)((char *)&v54 - v17);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (uint64_t *)((char *)&v54 - v20);
  v59 = v19;
  v22 = *(int *)(v19 + 48);
  v23 = (char *)&v54 + v22 - v20;
  v24 = a1[1];
  *v21 = *a1;
  v21[1] = v24;
  v61 = (uint64_t)a1 + v22;
  sub_2452B792C((uint64_t)a1 + v22, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  v58 = type metadata accessor for PairingRelationship();
  v25 = &v23[*(int *)(v58 + 20)];
  v27 = *(_QWORD *)v25;
  v26 = *((_QWORD *)v25 + 1);
  swift_bridgeObjectRetain();
  sub_2452B7B5C((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  if (v27 == a2 && v26 == a3)
    v29 = 1;
  else
    v29 = sub_245388274();
  swift_bridgeObjectRelease();
  v30 = v59;
  v31 = (uint64_t)v18 + *(int *)(v59 + 48);
  v33 = *a1;
  v32 = a1[1];
  *v18 = *a1;
  v18[1] = v32;
  sub_2452B792C(v61, v31, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  if ((v29 & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    v34 = (uint64_t)v15 + *(int *)(v30 + 48);
    *v15 = v33;
    v15[1] = v32;
    sub_2452B792C(v31, v34, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v35 = (uint64_t *)(v34 + *(int *)(v58 + 20));
    v36 = *v35;
    v37 = v35[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2452B7B5C(v34, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    if (v36 != v55 || v37 != v56)
    {
      v39 = sub_245388274();
      swift_bridgeObjectRelease();
      v40 = v39 ^ 1;
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
  }
  v40 = 0;
LABEL_16:
  sub_245263F80((uint64_t)v18, (uint64_t *)&unk_25744FF90);
  v41 = *(int *)(v30 + 48);
  v42 = (uint64_t)v60;
  v43 = (uint64_t)v60 + v41;
  v44 = *a1;
  v45 = a1[1];
  *v60 = v44;
  *(_QWORD *)(v42 + 8) = v45;
  sub_2452B792C(v61, v42 + v41, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  if ((v40 & 1) != 0)
  {
    v46 = *(int *)(v30 + 48);
    v47 = v57;
    v48 = (uint64_t)v57 + v46;
    *v57 = v44;
    v47[1] = v45;
    sub_2452B792C(v43, (uint64_t)v47 + v46, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v49 = (uint64_t *)(v48 + *(int *)(v58 + 32));
    v50 = *v49;
    v51 = v49[1];
    swift_bridgeObjectRetain();
    sub_24526B470(v50, v51);
    sub_2452B7B5C(v48, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v52 = v51 == 2;
    if (v51 != 2)
      sub_24526B470(v50, v51);
    sub_24526B484(v50, v51);
    sub_24526B484(0, 2uLL);
    sub_24526B484(v50, v51);
  }
  else
  {
    swift_bridgeObjectRetain();
    v52 = 0;
  }
  sub_245263F80(v42, (uint64_t *)&unk_25744FF90);
  return v52;
}

uint64_t sub_2452A74D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2452BC89C(a1, (uint64_t)v4, (uint64_t *)&unk_25744FAD0);
  v5 = type metadata accessor for PairingRelationship();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v7 = (uint64_t *)&v4[*(int *)(v5 + 32)];
    v8 = *v7;
    v9 = v7[1];
    sub_24526B470(*v7, v9);
    sub_2452B7B5C((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v10[0] = v8;
    v10[1] = v9;
    return sub_245387B48();
  }
  return result;
}

uint64_t sub_2452A75B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2452BC89C(a1, (uint64_t)v6, (uint64_t *)&unk_25744FAD0);
  v7 = type metadata accessor for PairingRelationship();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v9 = sub_245387740();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a2, v6, v9);
    return sub_2452B7B5C((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  }
  return result;
}

void sub_2452A7688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  size_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 *v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  _QWORD v88[2];
  __int128 v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  unint64_t v99;
  uint64_t v100;
  _QWORD v101[2];
  _OWORD v102[10];
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;

  v99 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v2 = *(_QWORD *)(v99 - 8);
  v3 = MEMORY[0x24BDAC7A8](v99);
  v98 = (char *)v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v88 - v5;
  v93 = type metadata accessor for PairingRelationship();
  v100 = *(_QWORD *)(v93 - 8);
  v7 = MEMORY[0x24BDAC7A8](v93);
  v94 = (uint64_t)v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v92 = (uint64_t)v88 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v95 = (uint64_t)v88 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v88 - v13;
  v15 = sub_2453879D4();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (_QWORD *)((char *)v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = *(void **)(v0 + 232);
  *v18 = v19;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x24BEE5610], v15);
  v20 = v19;
  LOBYTE(v19) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) == 0)
  {
    __break(1u);
LABEL_34:
    swift_once();
    goto LABEL_12;
  }
  sub_2452A8104(0, 0);
  v96 = v0;
  swift_beginAccess();
  sub_24525E4F0(v0 + 192, (uint64_t)&v103);
  v22 = *((_QWORD *)&v104 + 1);
  v21 = v105;
  __swift_project_boxed_opaque_existential_1(&v103, *((uint64_t *)&v104 + 1));
  v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v21 + 8) + 8) + 32))(v22);
  sub_2452B036C(v23, (uint64_t (*)(char *, unint64_t, uint64_t))sub_2452B0E94);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v103);
  v24 = swift_bridgeObjectRetain();
  v25 = sub_24532D828(v24);
  swift_release();
  *(_QWORD *)&v103 = v25;
  sub_2452B18CC((_QWORD **)&v103);
  swift_release();
  v26 = v103;
  v27 = *(_QWORD *)(v103 + 16);
  if (v27)
  {
    *(_QWORD *)&v103 = MEMORY[0x24BEE4AF8];
    sub_24532C554(0, v27, 0);
    v28 = *(unsigned __int8 *)(v2 + 80);
    v91 = v26;
    v29 = v26 + ((v28 + 32) & ~v28);
    v97 = *(_QWORD *)(v2 + 72);
    v18 = (_QWORD *)v103;
    v30 = (uint64_t)v14;
    do
    {
      sub_2452BC89C(v29, (uint64_t)v6, (uint64_t *)&unk_25744FF90);
      v31 = *(int *)(v99 + 48);
      v32 = (uint64_t)&v98[v31];
      sub_2452B792C((uint64_t)&v6[v31], (uint64_t)&v98[v31], (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      sub_2452B7AB8(v32, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      sub_245263F80((uint64_t)v6, (uint64_t *)&unk_25744FF90);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24532C554(0, v18[2] + 1, 1);
        v18 = (_QWORD *)v103;
      }
      v34 = v18[2];
      v33 = v18[3];
      if (v34 >= v33 >> 1)
      {
        sub_24532C554(v33 > 1, v34 + 1, 1);
        v18 = (_QWORD *)v103;
      }
      v18[2] = v34 + 1;
      v14 = (char *)v30;
      sub_2452B7AB8(v30, (uint64_t)v18+ ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80))+ *(_QWORD *)(v100 + 72) * v34, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v29 += v97;
      --v27;
    }
    while (v27);
    swift_release();
  }
  else
  {
    swift_release();
    v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v1 = v96;
  if (qword_257451C78 != -1)
    goto LABEL_34;
LABEL_12:
  v35 = qword_257463038;
  if (!*(_QWORD *)(qword_257463038 + 16) || (v36 = sub_2452C1F9C(*(_BYTE *)(v1 + 96)), (v37 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    if (qword_25744FD90 != -1)
      swift_once();
    v57 = sub_245387818();
    __swift_project_value_buffer(v57, (uint64_t)qword_257462FB0);
    swift_retain();
    v58 = sub_2453877F4();
    v59 = sub_245387D1C();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      v61 = swift_slowAlloc();
      *(_QWORD *)&v103 = v61;
      *(_DWORD *)v60 = 136446210;
      v62 = *(_QWORD *)(v1 + 488);
      v63 = *(_QWORD *)(v1 + 496);
      swift_bridgeObjectRetain();
      *(_QWORD *)&v102[0] = sub_2453816D8(v62, v63, (uint64_t *)&v103);
      sub_245387E0C();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v58, v59, "(%{public}s) Cannot enforce maximum device limit for unknown device type", v60, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v61, -1, -1);
      MEMORY[0x24953317C](v60, -1, -1);

    }
    else
    {

      swift_release();
    }
    return;
  }
  v38 = *(_QWORD *)(*(_QWORD *)(v35 + 56) + 8 * v36);
  v39 = v18[2];
  v40 = v39 - v38;
  if (__OFSUB__(v39, v38))
  {
    __break(1u);
  }
  else
  {
    v99 = v40 - 1;
    if (v40 < 1)
    {
LABEL_32:
      swift_bridgeObjectRelease();
      return;
    }
    if (qword_25744FD90 == -1)
      goto LABEL_17;
  }
  swift_once();
LABEL_17:
  v41 = sub_245387818();
  v42 = __swift_project_value_buffer(v41, (uint64_t)qword_257462FB0);
  swift_retain();
  swift_bridgeObjectRetain();
  v98 = (char *)v42;
  v43 = sub_2453877F4();
  v44 = sub_245387D34();
  v45 = os_log_type_enabled(v43, v44);
  v46 = MEMORY[0x24BEE4AD8];
  if (v45)
  {
    v47 = swift_slowAlloc();
    v97 = swift_slowAlloc();
    *(_QWORD *)&v103 = v97;
    *(_DWORD *)v47 = 136446722;
    v48 = *(_QWORD *)(v96 + 488);
    v49 = *(_QWORD *)(v96 + 496);
    swift_bridgeObjectRetain();
    *(_QWORD *)&v102[0] = sub_2453816D8(v48, v49, (uint64_t *)&v103);
    sub_245387E0C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2050;
    *(_QWORD *)&v102[0] = v39;
    sub_245387E0C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 22) = 2050;
    *(_QWORD *)&v102[0] = v40;
    sub_245387E0C();
    _os_log_impl(&dword_245256000, v43, v44, "(%{public}s) Too many paired devices (%{public}ld; unpairing %{public}ld",
      (uint8_t *)v47,
      0x20u);
    v50 = MEMORY[0x24BEE4AD8];
    v51 = v97;
    swift_arrayDestroy();
    MEMORY[0x24953317C](v51, -1, -1);
    MEMORY[0x24953317C](v47, -1, -1);

    v53 = v93;
    v54 = v94;
    v55 = v92;
    v56 = v50;
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_release();
    v53 = v93;
    v54 = v94;
    v55 = v92;
    v56 = v46;
  }
  if (v99 < v18[2])
  {
    v64 = (uint64_t)v18 + ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80));
    v65 = *(_QWORD *)(v100 + 72);
    v90 = (char *)v102 + 8;
    v91 = v65;
    *(_QWORD *)&v52 = 136446466;
    v89 = v52;
    v88[1] = v56 + 8;
    while (1)
    {
      v66 = v95;
      sub_2452B792C(v64, v95, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      sub_2452B792C(v66, v55, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      swift_retain();
      v67 = sub_2453877F4();
      v68 = sub_245387D34();
      if (os_log_type_enabled(v67, v68))
      {
        v69 = swift_slowAlloc();
        v97 = swift_slowAlloc();
        *(_QWORD *)&v103 = v97;
        *(_DWORD *)v69 = v89;
        v70 = *(_QWORD *)(v96 + 488);
        v100 = v64;
        v71 = *(_QWORD *)(v96 + 496);
        swift_bridgeObjectRetain();
        *(_QWORD *)&v102[0] = sub_2453816D8(v70, v71, (uint64_t *)&v103);
        sub_245387E0C();
        swift_release();
        v64 = v100;
        swift_bridgeObjectRelease();
        *(_WORD *)(v69 + 12) = 2082;
        sub_2452B792C(v92, v94, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        v72 = sub_245387B48();
        *(_QWORD *)&v102[0] = sub_2453816D8(v72, v73, (uint64_t *)&v103);
        v54 = v94;
        sub_245387E0C();
        v55 = v92;
        swift_bridgeObjectRelease();
        sub_2452B7B5C(v55, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        _os_log_impl(&dword_245256000, v67, v68, "(%{public}s) Unpairing relationship (%{public}s", (uint8_t *)v69, 0x16u);
        v74 = v97;
        swift_arrayDestroy();
        MEMORY[0x24953317C](v74, -1, -1);
        v75 = v69;
        v53 = v93;
        MEMORY[0x24953317C](v75, -1, -1);
      }
      else
      {
        swift_release();
        sub_2452B7B5C(v55, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      }

      v76 = v95;
      v77 = (__int128 *)(v95 + *(int *)(v53 + 20));
      v78 = v77[7];
      v79 = v77[5];
      v109 = v77[6];
      v110 = v78;
      v80 = v77[7];
      v81 = v77[9];
      v111 = v77[8];
      v112 = v81;
      v82 = v77[3];
      v83 = v77[1];
      v105 = v77[2];
      v106 = v82;
      v84 = v77[3];
      v85 = v77[5];
      v107 = v77[4];
      v108 = v85;
      v86 = v77[1];
      v103 = *v77;
      v104 = v86;
      v102[6] = v109;
      v102[7] = v80;
      v87 = v77[9];
      v102[8] = v111;
      v102[9] = v87;
      v102[2] = v105;
      v102[3] = v84;
      v102[4] = v107;
      v102[5] = v79;
      v102[0] = v103;
      v102[1] = v83;
      v101[0] = 0;
      v101[1] = 0;
      sub_24526432C((uint64_t)&v103);
      sub_24528B268(v102, v101, 2, 0);
      sub_245269928((uint64_t)&v103);
      sub_2452B7B5C(v54, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      sub_2452B7B5C(v76, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      if (!v99)
        break;
      --v99;
      v64 += v91;
    }
    goto LABEL_32;
  }
  __break(1u);
  swift_release();
  __break(1u);
}

uint64_t sub_2452A8104(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  int64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  _QWORD *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[3];
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[3];
  uint64_t v81;
  uint64_t v82;

  v3 = v2;
  v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v6 = MEMORY[0x24BDAC7A8](v72);
  v71 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v70 = (uint64_t)&v59 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v69 = (uint64_t *)((char *)&v59 - v11);
  MEMORY[0x24BDAC7A8](v10);
  v68 = (char *)&v59 - v12;
  v13 = type metadata accessor for PairingRelationship();
  v76 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2453879D4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (uint64_t *)((char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = *(void **)(v3 + 232);
  *v19 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x24BEE5610], v16);
  v21 = v20;
  LOBYTE(v20) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) == 0)
  {
LABEL_35:
    __break(1u);
    return result;
  }
  swift_beginAccess();
  sub_24525E4F0(v3 + 192, (uint64_t)v80);
  v23 = v81;
  v24 = v82;
  __swift_project_boxed_opaque_existential_1(v80, v81);
  v25 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v24 + 8) + 8) + 32))(v23);
  v26 = sub_2452B036C(v25, (uint64_t (*)(char *, unint64_t, uint64_t))sub_2452B0B74);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
  v27 = *(_QWORD *)(v26 + 16);
  if (v27)
  {
    v60 = v3;
    v61 = a1;
    v62 = a2;
    v80[0] = MEMORY[0x24BEE4AF8];
    sub_24532C554(0, v27, 0);
    result = sub_245330EE4(v26);
    v29 = result;
    v30 = 0;
    v31 = v26 + 64;
    v32 = *(_BYTE *)(v26 + 32);
    v63 = v26 + 80;
    v67 = v26;
    v64 = v27;
    v65 = v28;
    v66 = v26 + 64;
    while ((v29 & 0x8000000000000000) == 0 && v29 < 1 << v32)
    {
      v35 = (unint64_t)v29 >> 6;
      if ((*(_QWORD *)(v31 + 8 * ((unint64_t)v29 >> 6)) & (1 << v29)) == 0)
        goto LABEL_30;
      if (*(_DWORD *)(v26 + 36) != (_DWORD)v28)
        goto LABEL_31;
      v73 = v30;
      v74 = 1 << v29;
      v36 = v72;
      v37 = (uint64_t)v15;
      v38 = v68;
      v39 = (uint64_t)&v68[*(int *)(v72 + 48)];
      v40 = *(_QWORD *)(v26 + 56);
      v41 = (uint64_t *)(*(_QWORD *)(v26 + 48) + 16 * v29);
      v43 = *v41;
      v42 = v41[1];
      v75 = *(_QWORD *)(v76 + 72);
      sub_2452B792C(v40 + v75 * v29, v39, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      *v38 = v43;
      v38[1] = v42;
      v44 = (uint64_t)v69;
      *v69 = v43;
      *(_QWORD *)(v44 + 8) = v42;
      sub_2452B792C(v39, v44 + *(int *)(v36 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v45 = v70;
      sub_2452BC850(v44, v70, (uint64_t *)&unk_25744FF90);
      swift_bridgeObjectRetain_n();
      v46 = (uint64_t)v38;
      v15 = (char *)v37;
      sub_245263F80(v46, (uint64_t *)&unk_25744FF90);
      v47 = *(int *)(v36 + 48);
      v48 = (uint64_t)&v71[v47];
      sub_2452B792C(v45 + v47, (uint64_t)&v71[v47], (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      sub_2452B7AB8(v48, v37, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      sub_245263F80(v45, (uint64_t *)&unk_25744FF90);
      v49 = v80[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24532C554(0, *(_QWORD *)(v49 + 16) + 1, 1);
        v49 = v80[0];
      }
      v51 = *(_QWORD *)(v49 + 16);
      v50 = *(_QWORD *)(v49 + 24);
      v26 = v67;
      if (v51 >= v50 >> 1)
      {
        sub_24532C554(v50 > 1, v51 + 1, 1);
        v49 = v80[0];
      }
      *(_QWORD *)(v49 + 16) = v51 + 1;
      result = sub_2452B7AB8(v37, v49+ ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))+ v51 * v75, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v32 = *(_BYTE *)(v26 + 32);
      v33 = 1 << v32;
      if (v29 >= 1 << v32)
        goto LABEL_32;
      v31 = v66;
      v52 = *(_QWORD *)(v66 + 8 * v35);
      if ((v52 & v74) == 0)
        goto LABEL_33;
      LODWORD(v28) = v65;
      if (*(_DWORD *)(v26 + 36) != (_DWORD)v65)
        goto LABEL_34;
      v53 = v52 & (-2 << (v29 & 0x3F));
      if (v53)
      {
        v33 = __clz(__rbit64(v53)) | v29 & 0xFFFFFFFFFFFFFFC0;
        v34 = v64;
      }
      else
      {
        v54 = v35 + 1;
        v55 = (v33 + 63) >> 6;
        v34 = v64;
        if (v35 + 1 < v55)
        {
          v56 = *(_QWORD *)(v66 + 8 * v54);
          if (v56)
          {
LABEL_23:
            v33 = __clz(__rbit64(v56)) + (v54 << 6);
          }
          else
          {
            while (v55 - 2 != v35)
            {
              v56 = *(_QWORD *)(v63 + 8 * v35++);
              if (v56)
              {
                v54 = v35 + 1;
                goto LABEL_23;
              }
            }
          }
        }
      }
      v30 = v73 + 1;
      v29 = v33;
      if (v73 + 1 == v34)
      {
        swift_release();
        a2 = v62;
        a1 = v61;
        v3 = v60;
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  swift_release();
  v49 = MEMORY[0x24BEE4AF8];
LABEL_26:
  swift_beginAccess();
  sub_2452BC89C(v3 + 56, (uint64_t)v80, &qword_2574502E8);
  if (v81)
  {
    sub_24525E4F0((uint64_t)v80, (uint64_t)v77);
    sub_245263F80((uint64_t)v80, &qword_2574502E8);
    v57 = v78;
    v58 = v79;
    __swift_project_boxed_opaque_existential_1(v77, v78);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 32))(v49, a1, a2, v57, v58);
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
  }
  else
  {
    swift_bridgeObjectRelease();
    return sub_245263F80((uint64_t)v80, &qword_2574502E8);
  }
}

uint64_t sub_2452A8740(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  id v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t ObjectType;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  int v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  void (*v113)(char *, uint64_t);
  char *v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  NSObject *v118;
  os_log_type_t v119;
  uint8_t *v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  int64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  __int128 v159;
  uint64_t *v160;
  _QWORD *v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;

  v3 = v2;
  v142 = a1;
  v5 = sub_2453876EC();
  v145 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v137 = (char *)&v135 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v135 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6C0);
  MEMORY[0x24BDAC7A8](v144);
  v11 = (char *)&v135 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F848);
  MEMORY[0x24BDAC7A8](v12);
  v152 = (uint64_t)&v135 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = type metadata accessor for RecordMetadata();
  v150 = *(_QWORD *)(v151 - 8);
  MEMORY[0x24BDAC7A8](v151);
  v149 = (uint64_t)&v135 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = type metadata accessor for RecordStub();
  v139 = *(_QWORD *)(v148 - 8);
  v15 = MEMORY[0x24BDAC7A8](v148);
  v17 = (char *)&v135 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v154 = (uint64_t *)((char *)&v135 - v18);
  v163 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v19 = MEMORY[0x24BDAC7A8](v163);
  v162 = (uint64_t *)((char *)&v135 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = MEMORY[0x24BDAC7A8](v19);
  v161 = (uint64_t *)((char *)&v135 - v22);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v160 = (uint64_t *)((char *)&v135 - v24);
  MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)&v159 = (char *)&v135 - v25;
  v167 = sub_245387740();
  v26 = *(_QWORD *)(v167 - 8);
  MEMORY[0x24BDAC7A8](v167);
  v166 = (char *)&v135 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_2453879D4();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (uint64_t *)((char *)&v135 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v153 = *a2;
  v32 = *(void **)(v3 + 232);
  *v31 = v32;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v29 + 104))(v31, *MEMORY[0x24BEE5610], v28);
  v33 = v32;
  LOBYTE(v32) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v29 + 8))(v31, v28);
  if ((v32 & 1) == 0)
    goto LABEL_93;
  swift_beginAccess();
  v147 = v3 + 192;
  sub_24525E4F0(v3 + 192, (uint64_t)&v172);
  v35 = v173;
  v36 = v174;
  __swift_project_boxed_opaque_existential_1(&v172, v173);
  v37 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v36 + 8) + 8) + 32))(v35);
  v38 = sub_2452B036C(v37, (uint64_t (*)(char *, unint64_t, uint64_t))sub_2452B0E94);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v172);
  v39 = *(_QWORD *)(v38 + 16);
  v143 = v5;
  v141 = v9;
  v146 = v11;
  v136 = v17;
  v138 = v3;
  if (!v39)
  {
    swift_release();
    v61 = MEMORY[0x24BEE4AF8];
LABEL_30:
    v70 = sub_245331418(v61);
    swift_bridgeObjectRelease();
    v171 = MEMORY[0x24BEE4B08];
    v71 = *(_QWORD *)(v142 + 16);
    v72 = v154;
    if (!v71)
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x24BEE4B08];
    }
    v73 = v138 + 240;
    v74 = v139;
    v75 = v142 + ((*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80));
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v166 = *(char **)(v74 + 72);
    v160 = &v169;
    *(_QWORD *)&v76 = 136446210;
    v159 = v76;
    v158 = MEMORY[0x24BEE4AD8] + 8;
    v161 = (_QWORD *)v70;
    v165 = v73;
    while (1)
    {
      sub_2452B792C(v75, (uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for RecordStub);
      v77 = *(_QWORD *)v73;
      if (*(_QWORD *)(*(_QWORD *)v73 + 16))
      {
        v79 = v72[4];
        v78 = v72[5];
        v81 = v72[2];
        v80 = v72[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v82 = sub_2452C1EB4(v81, v80, v79, v78);
        if ((v83 & 1) != 0)
        {
          v84 = *(_QWORD *)(*(_QWORD *)(v77 + 56) + 8 * v82);
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (MEMORY[0x24953323C](v84 + 16))
          {
            v85 = *(_QWORD *)(v84 + 24);
            ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v85 + 8))(&v172, ObjectType, v85);
            swift_unknownObjectRelease();
            if ((v172 & 1) != 0)
            {
              v72 = v154;
              sub_2452B7B5C((uint64_t)v154, (uint64_t (*)(_QWORD))type metadata accessor for RecordStub);
              swift_release();
LABEL_80:
              v73 = v165;
              goto LABEL_34;
            }
          }
          v169 = MEMORY[0x24BEE4B08];
          v170 = MEMORY[0x24BEE4B08];
          sub_24525E4F0(v147, (uint64_t)&v172);
          v87 = v173;
          v88 = v174;
          __swift_project_boxed_opaque_existential_1(&v172, v173);
          v89 = v87;
          v90 = v152;
          MetadataStoring.metadata(for:)(v154, v89, *(_QWORD *)(v88 + 8), v152);
          v91 = v151;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v150 + 48))(v90, 1, v151) == 1)
          {
            sub_245263F80(v90, &qword_25744F848);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v172);
            v92 = 1;
            if (!v153)
              goto LABEL_42;
LABEL_69:
            v127 = swift_bridgeObjectRetain();
            v128 = sub_245331418(v127);
            swift_bridgeObjectRelease();
            sub_2452A9804(v128);
            v93 = v169;
LABEL_70:
            v129 = v170;
            if (*(_QWORD *)(v93 + 16) <= *(_QWORD *)(v170 + 16) >> 3)
            {
              v172 = v170;
              swift_bridgeObjectRetain();
              v132 = swift_bridgeObjectRetain();
              sub_245348DA8(v132);
              swift_bridgeObjectRelease();
              v131 = v172;
            }
            else
            {
              swift_bridgeObjectRetain();
              v130 = swift_bridgeObjectRetain();
              v131 = sub_2453491F0(v130, v129);
              swift_bridgeObjectRelease();
            }
            if (*(_QWORD *)(v129 + 16) <= *(_QWORD *)(v93 + 16) >> 3)
            {
              v172 = v93;
              swift_bridgeObjectRetain();
              sub_245348DA8(v129);
              swift_bridgeObjectRelease();
              v133 = v172;
            }
            else
            {
              swift_bridgeObjectRetain();
              v133 = sub_2453491F0(v129, v93);
              swift_bridgeObjectRelease();
            }
            sub_2452A9804(v131);
            swift_bridgeObjectRelease();
            if ((v92 & 1) != 0)
              v134 = v93;
            else
              v134 = v133;
            sub_2452A9804(v134);
            swift_release();
            v72 = v154;
            sub_2452B7B5C((uint64_t)v154, (uint64_t (*)(_QWORD))type metadata accessor for RecordStub);
            goto LABEL_80;
          }
          v94 = v149;
          sub_2452B7AB8(v90, v149, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v172);
          sub_24525C6C4(&qword_257452430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
          v95 = v94;
          v96 = sub_245387AE8();
          v163 = *(int *)(v91 + 24);
          v97 = *(_QWORD *)(v94 + v163);
          if (v97)
          {
            v98 = v153;
            if (v153)
            {
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              v99 = sub_245269CA8(v97, v98);
              swift_bridgeObjectRelease();
              goto LABEL_49;
            }
LABEL_47:
            v99 = 0;
          }
          else
          {
            if (v153)
              goto LABEL_47;
            v99 = 1;
LABEL_49:
            swift_bridgeObjectRelease_n();
          }
          LODWORD(v162) = v96;
          LODWORD(v164) = v96 ^ 1;
          v100 = v95 + *(int *)(v91 + 28);
          v101 = (char *)v154 + *(int *)(v148 + 24);
          v102 = (uint64_t)v146;
          v103 = (uint64_t)&v146[*(int *)(v144 + 48)];
          sub_2452BC89C(v100, (uint64_t)v146, &qword_25744F6B0);
          sub_2452BC89C((uint64_t)v101, v103, &qword_25744F6B0);
          v104 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v145 + 48);
          v105 = v143;
          if (v104(v102, 1, v143) == 1)
          {
            v106 = v104(v103, 1, v105);
            v107 = v153;
            if (v106 == 1)
            {
              sub_245263F80((uint64_t)v146, &qword_25744F6B0);
              if ((v99 & 1) != 0)
              {
                v108 = 1;
                goto LABEL_59;
              }
LABEL_65:
              v124 = v149;
              if (*(_QWORD *)(v149 + v163))
              {
                v125 = swift_bridgeObjectRetain();
                v126 = sub_245331418(v125);
                swift_bridgeObjectRelease();
                sub_2452A9804(v126);
                v110 = v124;
                goto LABEL_67;
              }
              sub_2452B7B5C(v149, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
              swift_bridgeObjectRelease();
              v170 = v70;
              swift_bridgeObjectRetain();
              v92 = v164;
              if (v107)
                goto LABEL_69;
LABEL_42:
              swift_bridgeObjectRelease();
              v169 = v70;
              swift_bridgeObjectRetain();
              v93 = v70;
              goto LABEL_70;
            }
LABEL_56:
            sub_245263F80((uint64_t)v146, &qword_25744F6C0);
            if ((v99 & 1) == 0)
              goto LABEL_65;
            v110 = v149;
LABEL_67:
            sub_2452B7B5C(v110, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
            v92 = v164;
          }
          else
          {
            v109 = (uint64_t)v141;
            sub_2452BC89C(v102, (uint64_t)v141, &qword_25744F6B0);
            if (v104(v103, 1, v105) == 1)
            {
              (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v109, v105);
              v107 = v153;
              goto LABEL_56;
            }
            v111 = v145;
            v112 = v137;
            (*(void (**)(char *, uint64_t, uint64_t))(v145 + 32))(v137, v103, v105);
            sub_24525C6C4(&qword_257452358, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
            v108 = sub_245387AE8();
            v113 = *(void (**)(char *, uint64_t))(v111 + 8);
            v114 = v112;
            v70 = (uint64_t)v161;
            v113(v114, v105);
            v113((char *)v109, v105);
            sub_245263F80(v102, &qword_25744F6B0);
            v107 = v153;
            if ((v99 & 1) == 0)
              goto LABEL_65;
LABEL_59:
            sub_2452B7B5C(v149, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
            v92 = v164;
            if ((v162 & v99 & 1) != 0 && (v108 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (qword_25744FD90 != -1)
                swift_once();
              v115 = sub_245387818();
              __swift_project_value_buffer(v115, (uint64_t)qword_257462FB0);
              v116 = v154;
              v117 = (uint64_t)v136;
              sub_2452B792C((uint64_t)v154, (uint64_t)v136, (uint64_t (*)(_QWORD))type metadata accessor for RecordStub);
              v118 = sub_2453877F4();
              v119 = sub_245387D34();
              if (os_log_type_enabled(v118, v119))
              {
                v120 = (uint8_t *)swift_slowAlloc();
                v164 = swift_slowAlloc();
                v172 = v164;
                *(_DWORD *)v120 = v159;
                v163 = (uint64_t)(v120 + 4);
                v121 = Record.ID.description.getter();
                v168 = sub_2453816D8(v121, v122, &v172);
                sub_245387E0C();
                swift_bridgeObjectRelease();
                sub_2452B7B5C(v117, (uint64_t (*)(_QWORD))type metadata accessor for RecordStub);
                _os_log_impl(&dword_245256000, v118, v119, "Ignoring request to replicate %{public}s; version, destination and expiration are unchanged.",
                  v120,
                  0xCu);
                v123 = v164;
                swift_arrayDestroy();
                MEMORY[0x24953317C](v123, -1, -1);
                MEMORY[0x24953317C](v120, -1, -1);

                swift_release();
                v72 = v154;
                sub_2452B7B5C((uint64_t)v154, (uint64_t (*)(_QWORD))type metadata accessor for RecordStub);
              }
              else
              {

                swift_release();
                sub_2452B7B5C(v117, (uint64_t (*)(_QWORD))type metadata accessor for RecordStub);
                sub_2452B7B5C((uint64_t)v116, (uint64_t (*)(_QWORD))type metadata accessor for RecordStub);
                v72 = v116;
              }
              v70 = (uint64_t)v161;
              goto LABEL_80;
            }
          }
          if (v107)
            goto LABEL_69;
          goto LABEL_42;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_2452B7B5C((uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for RecordStub);
LABEL_34:
      v75 += (uint64_t)v166;
      if (!--v71)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v171;
      }
    }
  }
  v172 = MEMORY[0x24BEE4AF8];
  sub_24532C5C8(0, v39, 0);
  result = sub_245330EE4(v38);
  v41 = result;
  if (result < 0)
    goto LABEL_89;
  result = v38;
  if (v41 >= 1 << *(_BYTE *)(v38 + 32))
    goto LABEL_89;
  v42 = 0;
  v43 = v38 + 64;
  v140 = v38 + 80;
  v158 = v38;
  v155 = v39;
  v156 = v40;
  v157 = v38 + 64;
  v44 = (uint64_t *)v159;
  while (1)
  {
    v45 = (unint64_t)v41 >> 6;
    if ((*(_QWORD *)(v43 + 8 * ((unint64_t)v41 >> 6)) & (1 << v41)) == 0)
      break;
    if (*(_DWORD *)(result + 36) != (_DWORD)v40)
      goto LABEL_88;
    v164 = v42;
    v165 = 1 << v41;
    v46 = v26;
    v47 = v163;
    v48 = (uint64_t)v44 + *(int *)(v163 + 48);
    v49 = *(_QWORD *)(result + 56);
    v50 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v41);
    v52 = *v50;
    v51 = v50[1];
    v53 = type metadata accessor for PairingRelationship();
    sub_2452B792C(v49 + *(_QWORD *)(*(_QWORD *)(v53 - 8) + 72) * v41, v48, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    *v44 = v52;
    v44[1] = v51;
    v54 = v160;
    *v160 = v52;
    v54[1] = v51;
    sub_2452B792C(v48, (uint64_t)v54 + *(int *)(v47 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v55 = (uint64_t)v54;
    v56 = v161;
    sub_2452BC850(v55, (uint64_t)v161, (uint64_t *)&unk_25744FF90);
    swift_bridgeObjectRetain_n();
    sub_245263F80((uint64_t)v44, (uint64_t *)&unk_25744FF90);
    v57 = *(int *)(v47 + 48);
    v26 = v46;
    v58 = v162;
    v59 = (uint64_t)v162 + v57;
    v60 = v56[1];
    *v162 = *v56;
    v58[1] = v60;
    sub_2452B792C((uint64_t)v56 + v57, v59, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v166, v59, v167);
    sub_2452B7B5C(v59, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    sub_245263F80((uint64_t)v56, (uint64_t *)&unk_25744FF90);
    v61 = v172;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24532C5C8(0, *(_QWORD *)(v61 + 16) + 1, 1);
      v61 = v172;
    }
    v63 = *(_QWORD *)(v61 + 16);
    v62 = *(_QWORD *)(v61 + 24);
    if (v63 >= v62 >> 1)
    {
      sub_24532C5C8(v62 > 1, v63 + 1, 1);
      v61 = v172;
    }
    *(_QWORD *)(v61 + 16) = v63 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v46 + 32))(v61+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(_QWORD *)(v46 + 72) * v63, v166, v167);
    v172 = v61;
    result = v158;
    v64 = 1 << *(_BYTE *)(v158 + 32);
    if (v41 >= v64)
      goto LABEL_90;
    v43 = v157;
    v65 = *(_QWORD *)(v157 + 8 * v45);
    if ((v65 & v165) == 0)
      goto LABEL_91;
    LODWORD(v40) = v156;
    if (*(_DWORD *)(v158 + 36) != (_DWORD)v156)
      goto LABEL_92;
    v66 = v65 & (-2 << (v41 & 0x3F));
    if (v66)
    {
      v41 = __clz(__rbit64(v66)) | v41 & 0xFFFFFFFFFFFFFFC0;
      goto LABEL_24;
    }
    v67 = v45 + 1;
    v68 = (unint64_t)(v64 + 63) >> 6;
    if (v45 + 1 < v68)
    {
      v69 = *(_QWORD *)(v157 + 8 * v67);
      if (v69)
      {
LABEL_22:
        v41 = __clz(__rbit64(v69)) + (v67 << 6);
        goto LABEL_24;
      }
      while (v68 - 2 != v45)
      {
        v69 = *(_QWORD *)(v140 + 8 * v45++);
        if (v69)
        {
          v67 = v45 + 1;
          goto LABEL_22;
        }
      }
    }
    v41 = 1 << *(_BYTE *)(v158 + 32);
LABEL_24:
    v42 = v164 + 1;
    if (v164 + 1 == v155)
    {
      swift_release();
      goto LABEL_30;
    }
    if (v41 < 0 || v41 >= v64)
      goto LABEL_89;
  }
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
  return result;
}

uint64_t sub_2452A9804(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;

  v2 = sub_245387740();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v23 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  result = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(a1 + 56);
  v24 = (unint64_t)(v15 + 63) >> 6;
  if (!v17)
    goto LABEL_5;
LABEL_4:
  v18 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v18 | (v13 << 6); ; i = __clz(__rbit64(v21)) + (v13 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v12, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * i, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2) == 1)
      return swift_release();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v12, v2);
    sub_2453249DC((uint64_t)v8, v6);
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    if (v17)
      goto LABEL_4;
LABEL_5:
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v24)
      goto LABEL_24;
    v21 = *(_QWORD *)(v14 + 8 * v20);
    ++v13;
    if (!v21)
    {
      v13 = v20 + 1;
      if (v20 + 1 >= v24)
        goto LABEL_24;
      v21 = *(_QWORD *)(v14 + 8 * v13);
      if (!v21)
      {
        v13 = v20 + 2;
        if (v20 + 2 >= v24)
          goto LABEL_24;
        v21 = *(_QWORD *)(v14 + 8 * v13);
        if (!v21)
        {
          v13 = v20 + 3;
          if (v20 + 3 >= v24)
            goto LABEL_24;
          v21 = *(_QWORD *)(v14 + 8 * v13);
          if (!v21)
            break;
        }
      }
    }
LABEL_20:
    v17 = (v21 - 1) & v21;
  }
  v22 = v20 + 4;
  if (v22 >= v24)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v12, 1, 1, v2);
    return swift_release();
  }
  v21 = *(_QWORD *)(v14 + 8 * v22);
  if (v21)
  {
    v13 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    v13 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v13 >= v24)
      goto LABEL_24;
    v21 = *(_QWORD *)(v14 + 8 * v13);
    ++v22;
    if (v21)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2452A9A94(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  _QWORD v46[2];
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  _QWORD v52[3];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v55 = a1;
  v5 = sub_245387740();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v47 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v51 = (char *)v46 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v50 = (char *)v46 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25440C700);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v15);
  v49 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F848);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for RecordMetadata();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v48 = (uint64_t)v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_24525E4F0(a3 + 192, (uint64_t)v52);
  v24 = v53;
  v23 = v54;
  __swift_project_boxed_opaque_existential_1(v52, v53);
  v25 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v23 + 8) + 8) + 24))(v24);
  if (*(_QWORD *)(v25 + 16) && (v26 = sub_2452C2000(a2), (v27 & 1) != 0))
  {
    sub_2452B792C(*(_QWORD *)(v25 + 56) + *(_QWORD *)(v21 + 72) * v26, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v28 = 0;
  }
  else
  {
    v28 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, v28, 1, v20);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_245263F80((uint64_t)v19, &qword_25744F848);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  }
  v30 = (uint64_t)v19;
  v31 = v48;
  sub_2452B7AB8(v30, v48, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  v32 = type metadata accessor for Record.ID(0);
  v33 = v49;
  sub_2452B792C((uint64_t)a2 + *(int *)(v32 + 24), (uint64_t)v49, type metadata accessor for Record.ID.Ownership);
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v34(v33, 1, v5) == 1)
  {
    v35 = *(_QWORD *)(v31 + *(int *)(v20 + 24));
    if (v35)
    {
      v36 = *(_QWORD *)(v35 + 16);
      v46[1] = v35;
      if (v36)
      {
        v37 = v35 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
        v47 = *(char **)(v6 + 72);
        v49 = *(char **)(v6 + 16);
        swift_bridgeObjectRetain();
        v38 = (uint64_t)v50;
        while (1)
        {
          ((void (*)(char *, uint64_t, uint64_t))v49)(v14, v37, v5);
          v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
          v39(v14, 0, 1, v5);
          if (v34(v14, 1, v5) == 1)
            break;
          v40 = v51;
          (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v51, v14, v5);
          sub_2453249DC(v38, v40);
          (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v38, v5);
          v37 += (uint64_t)v47;
          if (!--v36)
            goto LABEL_17;
        }
      }
      else
      {
        v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
        swift_bridgeObjectRetain();
LABEL_17:
        v39(v14, 1, 1, v5);
      }
      swift_bridgeObjectRelease();
      v45 = v48;
      return sub_2452B7B5C(v45, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    }
  }
  else
  {
    v41 = v50;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v50, v33, v5);
    v42 = v47;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v47, v41, v5);
    v43 = (uint64_t)v51;
    sub_2453249DC((uint64_t)v51, v42);
    v44 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v44(v43, v5);
    v44((uint64_t)v41, v5);
  }
  v45 = v31;
  return sub_2452B7B5C(v45, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
}

uint64_t sub_2452A9EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char *v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a3;
  v35 = sub_245387740();
  v5 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v33 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v34 = (uint64_t)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v32 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v32 - v17;
  v19 = (char *)&v32 + *(int *)(v16 + 48) - v17;
  sub_2452B792C(a1, (uint64_t)&v32 - v17, type metadata accessor for Record.ID);
  sub_2452B792C(a2, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
  v20 = (uint64_t)&v15[*(int *)(v10 + 48)];
  sub_2452B792C((uint64_t)v18, (uint64_t)v15, type metadata accessor for Record.ID);
  v37 = v20;
  v21 = v5;
  v22 = v35;
  sub_2452B792C((uint64_t)v19, v20, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
  v23 = type metadata accessor for Record.ID(0);
  sub_2452B792C((uint64_t)&v15[*(int *)(v23 + 24)], (uint64_t)v9, type metadata accessor for Record.ID.Ownership);
  sub_2452B7B5C((uint64_t)v15, type metadata accessor for Record.ID);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v9, 1, v22) == 1)
  {
    v24 = v36;
    v25 = v34;
    v26 = v34 + *(int *)(v10 + 48);
    sub_2452B792C((uint64_t)v18, v34, type metadata accessor for Record.ID);
    sub_2452B792C((uint64_t)v19, v26, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v27 = *(_QWORD *)(v26 + *(int *)(type metadata accessor for RecordMetadata() + 24));
    swift_bridgeObjectRetain();
    v28 = sub_2452B7B5C(v26, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    if (v27)
    {
      MEMORY[0x24BDAC7A8](v28);
      *(&v32 - 2) = v24;
      v29 = sub_24531DE44((uint64_t (*)(char *))sub_2452BC630, (_BOOL8)(&v32 - 4), v27);
      sub_245263F80((uint64_t)v18, &qword_25744FD30);
      swift_bridgeObjectRelease();
      sub_2452B7B5C(v25, type metadata accessor for Record.ID);
    }
    else
    {
      sub_245263F80((uint64_t)v18, &qword_25744FD30);
      sub_2452B7B5C(v25, type metadata accessor for Record.ID);
      v29 = 1;
    }
  }
  else
  {
    v30 = v33;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v33, v9, v22);
    v29 = sub_245387710();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v30, v22);
    sub_245263F80((uint64_t)v18, &qword_25744FD30);
  }
  sub_2452B7B5C(v37, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
  return v29 & 1;
}

uint64_t sub_2452AA248(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t ObjectType;
  _QWORD *v8;
  void (*v9)(void (*)(uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a3 + 184);
  ObjectType = swift_getObjectType();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a3;
  v8[3] = a1;
  v8[4] = a2;
  v9 = *(void (**)(void (*)(uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t))(v6 + 80);
  swift_retain();
  sub_245261C30(a1, a2);
  v9(sub_2452BBAB8, v8, ObjectType, v6);
  return swift_release();
}

void sub_2452AA2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  NSObject *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  NSObject *oslog;
  _QWORD aBlock[6];

  if (a2)
  {
    v8 = *(NSObject **)(a3 + 232);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = a3;
    v9[3] = a4;
    v9[4] = a5;
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = sub_2452BBB04;
    *(_QWORD *)(v10 + 24) = v9;
    aBlock[4] = sub_2452643B4;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24525B888;
    aBlock[3] = &block_descriptor_1415;
    v11 = _Block_copy(aBlock);
    swift_retain();
    sub_245261C30(a4, a5);
    swift_retain();
    swift_release();
    dispatch_sync(v8, v11);
    _Block_release(v11);
    LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v8 & 1) == 0)
      return;
    __break(1u);
    goto LABEL_9;
  }
  if (qword_25744FD90 != -1)
LABEL_9:
    swift_once();
  v12 = sub_245387818();
  __swift_project_value_buffer(v12, (uint64_t)qword_257462FB0);
  oslog = sub_2453877F4();
  v13 = sub_245387D1C();
  if (os_log_type_enabled(oslog, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_245256000, oslog, v13, "Could not fetch IDS ID; not sending advertisement", v14, 2u);
    MEMORY[0x24953317C](v14, -1, -1);
  }

}

uint64_t sub_2452AA500(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD v9[10];
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  _OWORD v14[10];
  uint64_t v15;

  v4 = *(_QWORD *)(a1 + 568);
  v5 = *(_QWORD *)(a1 + 576);
  *(_QWORD *)(a1 + 568) = a2;
  *(_QWORD *)(a1 + 576) = a3;
  sub_245261C30(a2, a3);
  sub_24525FFF8(v4, v5);
  swift_beginAccess();
  sub_24525E4F0(a1 + 344, (uint64_t)v11);
  v6 = v12;
  v7 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  sub_2452AA5F8((uint64_t *)v14);
  v9[8] = v14[8];
  v9[9] = v14[9];
  v10 = v15;
  v9[4] = v14[4];
  v9[5] = v14[5];
  v9[6] = v14[6];
  v9[7] = v14[7];
  v9[0] = v14[0];
  v9[1] = v14[1];
  v9[2] = v14[2];
  v9[3] = v14[3];
  (*(void (**)(_OWORD *, uint64_t, uint64_t))(v7 + 40))(v9, v6, v7);
  sub_245263A7C((uint64_t)v14);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
}

uint64_t sub_2452AA5F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  void (*v23)(_QWORD *, uint64_t, uint64_t);
  id v24;
  void (*v25)(_QWORD *, uint64_t);
  uint64_t v26;
  id v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  int64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _OWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int isUniquelyReferenced_nonNull_native;
  char v84;
  unint64_t v85;
  uint64_t v86;
  _BOOL8 v87;
  uint64_t v88;
  char v89;
  unint64_t v90;
  char v91;
  uint64_t *v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t result;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  char *v110;
  const char *v111;
  uint64_t v112;
  int64_t v113;
  unint64_t v114;
  char *v115;
  uint64_t *v116;
  _OWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  __int128 v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unsigned __int8 v132;
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  unsigned __int8 v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;

  v109 = a1;
  v2 = type metadata accessor for ZoneVersion();
  v118 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v123 = (uint64_t)&v109 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744F640);
  v4 = MEMORY[0x24BDAC7A8](v124);
  v117 = (_OWORD *)((char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x24BDAC7A8](v4);
  v116 = (uint64_t *)((char *)&v109 - v7);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v110 = (char *)&v109 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (uint64_t *)((char *)&v109 - v11);
  MEMORY[0x24BDAC7A8](v10);
  v115 = (char *)&v109 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2453879D4();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (uint64_t **)((char *)&v109 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = (void *)v1[29];
  *v20 = v21;
  v22 = *MEMORY[0x24BEE5610];
  v23 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v18 + 104);
  v23(v20, v22, v17);
  v24 = v21;
  LOBYTE(v21) = sub_2453879F8();
  v25 = *(void (**)(_QWORD *, uint64_t))(v18 + 8);
  v25(v20, v17);
  if ((v21 & 1) == 0)
    goto LABEL_46;
  v26 = type metadata accessor for PairingRelationship();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v16, 1, 1, v26);
  *v20 = v24;
  v23(v20, v22, v17);
  v27 = v24;
  v28 = sub_2453879F8();
  v25(v20, v17);
  if ((v28 & 1) != 0)
  {
    v29 = swift_beginAccess();
    MEMORY[0x24BDAC7A8](v29);
    *((_BYTE *)&v109 - 16) = 1;
    *(&v109 - 1) = v1;
    v30 = swift_bridgeObjectRetain();
    v31 = sub_2452BBD4C(v30, (uint64_t (*)(_QWORD *, uint64_t))sub_2452BBB20, (uint64_t)(&v109 - 4));
    swift_bridgeObjectRelease();
    v32 = sub_2452737C4(v31);
    swift_release();
    v33 = sub_2452AB9E8(v32, (uint64_t)v16);
    swift_bridgeObjectRelease();
    sub_245263F80((uint64_t)v16, (uint64_t *)&unk_25744FAD0);
    sub_245298100(&v127);
    v34 = *(_QWORD *)(v33 + 64);
    v112 = v33 + 64;
    v35 = 1 << *(_BYTE *)(v33 + 32);
    v36 = -1;
    if (v35 < 64)
      v36 = ~(-1 << v35);
    v37 = v36 & v34;
    v113 = (unint64_t)(v35 + 63) >> 6;
    v119 = v33;
    swift_bridgeObjectRetain();
    v38 = 0;
    v39 = (_QWORD *)MEMORY[0x24BEE4B00];
    v111 = "Swift/UnsafePointer.swift";
    v114 = 0x8000000245393670;
    v40 = v124;
    v41 = (uint64_t *)v110;
    while (1)
    {
      if (v37)
      {
        v120 = (v37 - 1) & v37;
        *(_QWORD *)&v121 = v38;
        v42 = __clz(__rbit64(v37)) | (v38 << 6);
      }
      else
      {
        v43 = v38 + 1;
        if (__OFADD__(v38, 1))
          goto LABEL_44;
        if (v43 >= v113)
        {
LABEL_41:
          swift_release();
          swift_bridgeObjectRelease();
          v96 = *((_QWORD *)&v127 + 1);
          v124 = v127;
          v98 = v128;
          v97 = v129;
          v99 = v130;
          v123 = v131;
          LODWORD(v122) = v132;
          v121 = v133;
          v120 = v134;
          v119 = v135;
          LODWORD(v118) = v136;
          v100 = v137;
          v101 = v138;
          v102 = v139;
          v103 = v140;
          v104 = v141;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_245261C30(v103, v104);
          result = sub_245269928((uint64_t)&v127);
          LOBYTE(v125) = v100;
          v106 = v109;
          *v109 = v124;
          v106[1] = v96;
          v106[2] = v98;
          v106[3] = v97;
          v107 = v123;
          v106[4] = v99;
          v106[5] = v107;
          *((_BYTE *)v106 + 48) = v122;
          *(_OWORD *)(v106 + 7) = v121;
          v108 = v119;
          v106[9] = v120;
          v106[10] = v108;
          *((_BYTE *)v106 + 88) = v118;
          *((_BYTE *)v106 + 89) = v100;
          v106[12] = v101;
          v106[13] = v102;
          v106[14] = v103;
          v106[15] = v104;
          *((_OWORD *)v106 + 8) = 0u;
          *((_OWORD *)v106 + 9) = 0u;
          v106[20] = (uint64_t)v39;
          return result;
        }
        v44 = *(_QWORD *)(v112 + 8 * v43);
        v45 = v38 + 1;
        if (!v44)
        {
          v45 = v38 + 2;
          if (v38 + 2 >= v113)
            goto LABEL_41;
          v44 = *(_QWORD *)(v112 + 8 * v45);
          if (!v44)
          {
            v45 = v38 + 3;
            if (v38 + 3 >= v113)
              goto LABEL_41;
            v44 = *(_QWORD *)(v112 + 8 * v45);
            if (!v44)
            {
              v45 = v38 + 4;
              if (v38 + 4 >= v113)
                goto LABEL_41;
              v44 = *(_QWORD *)(v112 + 8 * v45);
              if (!v44)
              {
                v46 = v38 + 5;
                if (v38 + 5 >= v113)
                  goto LABEL_41;
                v44 = *(_QWORD *)(v112 + 8 * v46);
                if (!v44)
                {
                  while (1)
                  {
                    v45 = v46 + 1;
                    if (__OFADD__(v46, 1))
                      goto LABEL_45;
                    if (v45 >= v113)
                      goto LABEL_41;
                    v44 = *(_QWORD *)(v112 + 8 * v45);
                    ++v46;
                    if (v44)
                      goto LABEL_25;
                  }
                }
                v45 = v38 + 5;
              }
            }
          }
        }
LABEL_25:
        v120 = (v44 - 1) & v44;
        *(_QWORD *)&v121 = v45;
        v42 = __clz(__rbit64(v44)) + (v45 << 6);
      }
      v47 = *(_QWORD *)(v119 + 56);
      v48 = (uint64_t *)(*(_QWORD *)(v119 + 48) + 32 * v42);
      v49 = *v48;
      v50 = v48[1];
      v52 = v48[2];
      v51 = v48[3];
      v122 = *(_QWORD *)(v118 + 72);
      v53 = v115;
      sub_2452B792C(v47 + v122 * v42, (uint64_t)&v115[*(int *)(v40 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      *v53 = v49;
      v53[1] = v50;
      v53[2] = v52;
      v53[3] = v51;
      sub_2452BC850((uint64_t)v53, (uint64_t)v12, (uint64_t *)&unk_25744F640);
      v54 = *(int *)(v40 + 48);
      v55 = (uint64_t)v41 + v54;
      v56 = (uint64_t)v12 + v54;
      v57 = v12[1];
      v58 = v12[2];
      v59 = v12[3];
      *v41 = *v12;
      v41[1] = v57;
      v41[2] = v58;
      v41[3] = v59;
      sub_2452B792C((uint64_t)v12 + v54, (uint64_t)v41 + v54, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      if (v58 == 0xD000000000000011 && v59 == v114)
        break;
      v60 = sub_245388274();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2452B7B5C(v55, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      if ((v60 & 1) != 0)
        goto LABEL_30;
      v68 = v124;
      v69 = v116;
      v70 = (uint64_t)v116 + *(int *)(v124 + 48);
      v72 = (_QWORD *)*v12;
      v71 = v12[1];
      v73 = v12[2];
      v74 = v12[3];
      *v116 = *v12;
      v69[1] = v71;
      v69[2] = v73;
      v69[3] = v74;
      sub_2452B792C(v56, v70, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      v125 = v72;
      v126 = v71;
      swift_bridgeObjectRetain();
      sub_2452B7B5C(v70, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      sub_245387B90();
      v75 = (uint64_t)v69 + *(int *)(v68 + 48);
      v76 = v12[1];
      v77 = v12[2];
      v78 = v12[3];
      *v69 = *v12;
      v69[1] = v76;
      v69[2] = v77;
      v69[3] = v78;
      v41 = (uint64_t *)v110;
      sub_2452B792C(v56, v75, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      swift_bridgeObjectRetain();
      sub_245387B90();
      v61 = v68;
      swift_bridgeObjectRelease();
      sub_2452B7B5C(v75, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      v64 = (uint64_t)v125;
      v65 = v126;
LABEL_32:
      v79 = v117;
      v80 = (uint64_t)v117 + *(int *)(v61 + 48);
      v81 = v12[2];
      v82 = v12[3];
      *v117 = *(_OWORD *)v12;
      *((_QWORD *)v79 + 2) = v81;
      *((_QWORD *)v79 + 3) = v82;
      sub_2452B792C(v56, v80, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      sub_2452B7AB8(v80, v123, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v125 = v39;
      v85 = sub_2452C1D98(v64, v65);
      v86 = v39[2];
      v87 = (v84 & 1) == 0;
      v88 = v86 + v87;
      if (__OFADD__(v86, v87))
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      v89 = v84;
      if (v39[3] >= v88)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_2452C88BC();
      }
      else
      {
        sub_2452C4B30(v88, isUniquelyReferenced_nonNull_native);
        v90 = sub_2452C1D98(v64, v65);
        if ((v89 & 1) != (v91 & 1))
          goto LABEL_48;
        v85 = v90;
      }
      v40 = v124;
      v39 = v125;
      if ((v89 & 1) != 0)
      {
        sub_2452BC64C(v123, v125[7] + v85 * v122, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      }
      else
      {
        v125[(v85 >> 6) + 8] |= 1 << v85;
        v92 = (uint64_t *)(v39[6] + 16 * v85);
        *v92 = v64;
        v92[1] = v65;
        sub_2452B7AB8(v123, v39[7] + v85 * v122, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
        v93 = v39[2];
        v94 = __OFADD__(v93, 1);
        v95 = v93 + 1;
        if (v94)
          goto LABEL_43;
        v39[2] = v95;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_245263F80((uint64_t)v12, (uint64_t *)&unk_25744F640);
      v38 = v121;
      v37 = v120;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2452B7B5C(v55, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
LABEL_30:
    v61 = v124;
    v62 = v116;
    v63 = (uint64_t)v116 + *(int *)(v124 + 48);
    v64 = *v12;
    v65 = v12[1];
    v66 = v12[2];
    v67 = v12[3];
    *v116 = *v12;
    v62[1] = v65;
    v62[2] = v66;
    v62[3] = v67;
    sub_2452B792C(v56, v63, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    swift_bridgeObjectRetain();
    sub_2452B7B5C(v63, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    goto LABEL_32;
  }
LABEL_47:
  __break(1u);
LABEL_48:
  result = sub_2453883DC();
  __break(1u);
  return result;
}

void sub_2452AB034(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85[3];
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  _BYTE v119[48];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PairingRelationship();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v62 - v10;
  v12 = *(_OWORD *)(a1 + 144);
  v106 = *(_OWORD *)(a1 + 128);
  v107 = v12;
  v108 = *(_QWORD *)(a1 + 160);
  v13 = *(_OWORD *)(a1 + 80);
  v102 = *(_OWORD *)(a1 + 64);
  v103 = v13;
  v14 = *(_OWORD *)(a1 + 112);
  v104 = *(_OWORD *)(a1 + 96);
  v105 = v14;
  v15 = *(_OWORD *)(a1 + 16);
  v98 = *(_OWORD *)a1;
  v99 = v15;
  v16 = *(_OWORD *)(a1 + 48);
  v100 = *(_OWORD *)(a1 + 32);
  v101 = v16;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return;
  v18 = Strong;
  v115 = v104;
  v116 = v105;
  v117 = v106;
  v118 = v107;
  v111 = v100;
  v112 = v101;
  v113 = v102;
  v114 = v103;
  v109 = v98;
  v110 = v99;
  v19 = v100;
  if ((unint64_t)v100 < 4 || (v20 = *((_QWORD *)&v111 + 1), *((_QWORD *)&v111 + 1) > 0xCuLL))
  {
    if (qword_25744FD90 != -1)
      swift_once();
    v34 = sub_245387818();
    __swift_project_value_buffer(v34, (uint64_t)qword_257462FB0);
    sub_245261B98((uint64_t)&v98);
    sub_245261B98((uint64_t)&v98);
    swift_retain();
    v35 = sub_2453877F4();
    v36 = sub_245387D34();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      *(_QWORD *)&v88 = v38;
      *(_DWORD *)v37 = 136446466;
      v39 = v18;
      v40 = *(_QWORD *)(v18 + 488);
      v41 = *(_QWORD *)(v39 + 496);
      swift_bridgeObjectRetain();
      *(_QWORD *)&v75 = sub_2453816D8(v40, v41, (uint64_t *)&v88);
      sub_245387E0C();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2082;
      sub_245261B98((uint64_t)&v98);
      v42 = sub_2452B82FC();
      v44 = v43;
      sub_245263A7C((uint64_t)&v98);
      *(_QWORD *)&v75 = sub_2453816D8(v42, v44, (uint64_t *)&v88);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_245263A7C((uint64_t)&v98);
      sub_245263A7C((uint64_t)&v98);
      _os_log_impl(&dword_245256000, v35, v36, "(%{public}s) Received zone version advertisement from incompatible device: %{public}s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v38, -1, -1);
      MEMORY[0x24953317C](v37, -1, -1);
      swift_release();
LABEL_16:

      return;
    }
LABEL_15:
    swift_release_n();
    sub_245263A7C((uint64_t)&v98);
    sub_245263A7C((uint64_t)&v98);
    goto LABEL_16;
  }
  v21 = v112;
  if (!sub_24531DAB0(v112, *(_QWORD *)(Strong + 480)))
  {
    if (qword_25744FD90 != -1)
      swift_once();
    v45 = sub_245387818();
    __swift_project_value_buffer(v45, (uint64_t)qword_257462FB0);
    sub_245261B98((uint64_t)&v98);
    sub_245261B98((uint64_t)&v98);
    swift_retain();
    v35 = sub_2453877F4();
    v46 = sub_245387D1C();
    if (os_log_type_enabled(v35, v46))
    {
      v47 = swift_slowAlloc();
      v48 = swift_slowAlloc();
      *(_QWORD *)&v75 = v48;
      *(_DWORD *)v47 = 136446466;
      v49 = v18;
      v50 = *(_QWORD *)(v18 + 488);
      v51 = *(_QWORD *)(v49 + 496);
      swift_bridgeObjectRetain();
      *(_QWORD *)&v88 = sub_2453816D8(v50, v51, (uint64_t *)&v75);
      sub_245387E0C();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2082;
      v94 = v115;
      v95 = v116;
      v96 = v117;
      v97 = v118;
      v90 = v111;
      v91 = v112;
      v92 = v113;
      v93 = v114;
      v88 = v109;
      v89 = v110;
      sub_24526432C((uint64_t)&v109);
      v52 = sub_245387B48();
      *(_QWORD *)&v88 = sub_2453816D8(v52, v53, (uint64_t *)&v75);
      sub_245387E0C();
      swift_bridgeObjectRelease();
      sub_245263A7C((uint64_t)&v98);
      sub_245263A7C((uint64_t)&v98);
      _os_log_impl(&dword_245256000, v35, v46, "%{public}s Cannot pair with a device that has an incompatible device type: %{public}s", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v48, -1, -1);
      MEMORY[0x24953317C](v47, -1, -1);
      swift_release();
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  v62 = v11;
  v70 = v9;
  v71 = v109;
  v22 = *((_QWORD *)&v110 + 1);
  v66 = v110;
  v68 = v20;
  v69 = v19;
  v85[0] = v19;
  v85[1] = v20;
  v67 = v21;
  LOBYTE(v73) = v21;
  sub_2452BC850((uint64_t)&v112 + 8, (uint64_t)v119, &qword_25744F8F0);
  sub_2452BC850((uint64_t)v119, (uint64_t)&v75, &qword_25744F8F0);
  v72 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = swift_bridgeObjectRetain();
  v65 = sub_2452739EC(v23, (uint64_t)&v87, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_24532C63C, sub_245330EE4);
  swift_bridgeObjectRelease();
  v24 = swift_bridgeObjectRetain();
  v64 = sub_2452739EC(v24, (uint64_t)&v86, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_24532C580, sub_245330EE4);
  swift_bridgeObjectRelease();
  v25 = v116;
  v26 = *((_QWORD *)&v117 + 1);
  v63 = v117;
  v27 = v118;
  sub_245261C30(v116, *((unint64_t *)&v116 + 1));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *((_QWORD *)&v61 + 1) = v26;
  *(_QWORD *)&v61 = v63;
  v28 = v72;
  v29 = v71;
  DeviceDescriptor.init(id:name:protocolVersion:deviceType:screenDescriptor:zones:messageTypes:idsIdentityBlob:marketingName:productType:)(v71, *((uint64_t *)&v71 + 1), v66, v22, v85, (char *)&v73, (uint64_t *)&v75, v65, &v88, v64, v25, *((unint64_t *)&v25 + 1), v61, v27);
  swift_beginAccess();
  sub_24525E4F0(v28 + 192, (uint64_t)&v75);
  v30 = *((_QWORD *)&v76 + 1);
  v31 = v77;
  __swift_project_boxed_opaque_existential_1(&v75, *((uint64_t *)&v76 + 1));
  MetadataStoring.pairingRelationship(remoteDeviceID:)(v29, *((uint64_t *)&v29 + 1), v30, *(_QWORD *)(v31 + 8), (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_245263F80((uint64_t)v4, (uint64_t *)&unk_25744FAD0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v75);
    v81 = v94;
    v82 = v95;
    v83 = v96;
    v84 = v97;
    v77 = v90;
    v78 = v91;
    v79 = v92;
    v80 = v93;
    v75 = v88;
    v76 = v89;
    v73 = 0;
    v74 = 0;
    v32 = (uint64_t)v70;
    sub_24528B268(&v75, (uint64_t)&v73, 0, 1, (uint64_t)v70);
    v33 = v32;
  }
  else
  {
    v54 = (uint64_t)v62;
    sub_2452B7AB8((uint64_t)v4, (uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v75);
    v79 = v92;
    v80 = v93;
    v77 = v90;
    v78 = v91;
    v83 = v96;
    v84 = v97;
    v81 = v94;
    v82 = v95;
    v75 = v88;
    v76 = v89;
    v55 = (uint64_t *)(v54 + *(int *)(v5 + 32));
    v57 = v55[1];
    v73 = *v55;
    v56 = v73;
    v74 = v57;
    sub_24526B470(v73, v57);
    v58 = (uint64_t)v70;
    sub_24528B268(&v75, (uint64_t)&v73, 2, 1, (uint64_t)v70);
    sub_24526B484(v56, v57);
    sub_2452B7B5C(v58, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v33 = v54;
  }
  sub_2452B7B5C(v33, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452370);
  v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = xmmword_245389A60;
  *(_OWORD *)(v59 + 32) = v71;
  *(_BYTE *)(v59 + 48) = v67;
  v60 = v68;
  *(_QWORD *)(v59 + 56) = v69;
  *(_QWORD *)(v59 + 64) = v60;
  swift_bridgeObjectRetain();
  sub_24527F774(v59);
  swift_bridgeObjectRelease();
  sub_245269928((uint64_t)&v88);
  swift_release();
}

uint64_t sub_2452AB904(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  char v12;
  char v13;
  _QWORD v15[3];

  v8 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  if (!MEMORY[0x24953323C](a2 + 16))
  {
    if ((a3 & 1) == 0)
      goto LABEL_3;
LABEL_5:
    v13 = 0;
    return v13 & 1;
  }
  v9 = *(_QWORD *)(a2 + 24);
  ObjectType = swift_getObjectType();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v9 + 8))(v15, ObjectType, v9);
  swift_unknownObjectRelease();
  if (((a3 & 1) == 0) == LOBYTE(v15[0]))
    goto LABEL_5;
LABEL_3:
  swift_beginAccess();
  v11 = *(_QWORD *)(a4 + 592);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = sub_24531D83C(v8, v7, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = v12 ^ 1;
  return v13 & 1;
}

uint64_t sub_2452AB9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  _QWORD v61[2];
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[3];
  uint64_t v76;
  uint64_t v77;

  v65 = a2;
  v4 = type metadata accessor for ZoneVersion();
  v68 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v70 = (uint64_t)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v64 = (uint64_t)v61 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v69 = (uint64_t)v61 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v63 = (char *)v61 - v11;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    return MEMORY[0x24BEE4B00];
  swift_bridgeObjectRetain();
  v67 = (uint64_t *)(v2 + 592);
  swift_beginAccess();
  v62 = v2 + 192;
  swift_beginAccess();
  v61[1] = a1;
  v13 = (uint64_t *)(a1 + 56);
  v14 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    v16 = *(v13 - 3);
    v15 = *(v13 - 2);
    v18 = *(v13 - 1);
    v17 = *v13;
    v19 = *v67;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v20 = sub_24531D83C(v18, v17, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v71 = v16;
    if ((v20 & 1) != 0)
    {
      v21 = sub_245387740();
      v22 = (uint64_t)v63;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v63, 1, 1, v21);
      sub_2452B7AB8(v22, v69, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v75[0] = v14;
      v24 = v18;
      v25 = v15;
      v26 = v15;
      v27 = v24;
      v29 = sub_2452C1EB4(v16, v26, v24, v17);
      v30 = v14[2];
      v31 = (v28 & 1) == 0;
      v32 = v30 + v31;
      if (__OFADD__(v30, v31))
        goto LABEL_34;
      v33 = v28;
      if (v14[3] < v32)
      {
        sub_2452C4EB8(v32, isUniquelyReferenced_nonNull_native);
        v34 = sub_2452C1EB4(v71, v25, v27, v17);
        if ((v33 & 1) != (v35 & 1))
          goto LABEL_37;
        v29 = v34;
        v14 = (_QWORD *)v75[0];
        if ((v33 & 1) == 0)
          goto LABEL_25;
LABEL_19:
        sub_2452BC64C(v69, v14[7] + *(_QWORD *)(v68 + 72) * v29, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
LABEL_27:
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v14 = (_QWORD *)v75[0];
        if ((v28 & 1) != 0)
          goto LABEL_19;
      }
      else
      {
        sub_2452C8B00();
        v14 = (_QWORD *)v75[0];
        if ((v33 & 1) != 0)
          goto LABEL_19;
      }
LABEL_25:
      v14[(v29 >> 6) + 8] |= 1 << v29;
      v57 = (_QWORD *)(v14[6] + 32 * v29);
      *v57 = v71;
      v57[1] = v25;
      v57[2] = v27;
      v57[3] = v17;
      sub_2452B7AB8(v69, v14[7] + *(_QWORD *)(v68 + 72) * v29, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      v58 = v14[2];
      v55 = __OFADD__(v58, 1);
      v59 = v58 + 1;
      if (v55)
        goto LABEL_36;
      v14[2] = v59;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    v66 = v12;
    sub_24525E4F0(v62, (uint64_t)v75);
    v36 = v76;
    v37 = v77;
    __swift_project_boxed_opaque_existential_1(v75, v76);
    *(_QWORD *)&v72 = v16;
    *((_QWORD *)&v72 + 1) = v15;
    v73 = v18;
    v74 = v17;
    v38 = *(_QWORD *)(v37 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v39 = v15;
    v40 = v18;
    v41 = v16;
    v42 = v64;
    MetadataStoring.zoneVersion(for:pairingRelationship:)(&v72, v65, v36, v38, v64);
    sub_2452B7AB8(v42, v70, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    v43 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v72 = v14;
    v45 = sub_2452C1EB4(v41, v39, v40, v17);
    v46 = v14[2];
    v47 = (v44 & 1) == 0;
    v48 = v46 + v47;
    if (__OFADD__(v46, v47))
      break;
    v49 = v44;
    if (v14[3] >= v48)
    {
      if ((v43 & 1) != 0)
      {
        v14 = (_QWORD *)v72;
        if ((v44 & 1) == 0)
          goto LABEL_22;
      }
      else
      {
        sub_2452C8B00();
        v14 = (_QWORD *)v72;
        if ((v49 & 1) == 0)
          goto LABEL_22;
      }
    }
    else
    {
      sub_2452C4EB8(v48, v43);
      v50 = sub_2452C1EB4(v71, v39, v40, v17);
      if ((v49 & 1) != (v51 & 1))
        goto LABEL_37;
      v45 = v50;
      v14 = (_QWORD *)v72;
      if ((v49 & 1) == 0)
      {
LABEL_22:
        v14[(v45 >> 6) + 8] |= 1 << v45;
        v52 = (_QWORD *)(v14[6] + 32 * v45);
        v53 = v70;
        *v52 = v71;
        v52[1] = v39;
        v52[2] = v40;
        v52[3] = v17;
        sub_2452B7AB8(v53, v14[7] + *(_QWORD *)(v68 + 72) * v45, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
        v54 = v14[2];
        v55 = __OFADD__(v54, 1);
        v56 = v54 + 1;
        if (v55)
          goto LABEL_35;
        v14[2] = v56;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_4;
      }
    }
    sub_2452BC64C(v70, v14[7] + *(_QWORD *)(v68 + 72) * v45, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = v66;
LABEL_5:
    v13 += 4;
    if (!--v12)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v14;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  result = sub_2453883DC();
  __break(1u);
  return result;
}

uint64_t Replicator.description.getter()
{
  uint64_t v1;

  sub_245387D7C();
  return v1;
}

uint64_t sub_2452ABFE8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  unint64_t v5;
  _QWORD v6[5];
  uint64_t v7;
  unint64_t v8;

  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_245387EA8();
  v7 = 0;
  v8 = 0xE000000000000000;
  sub_245387B90();
  swift_beginAccess();
  sub_24525E4F0(a1 + 192, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574522F8);
  sub_245387F5C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  result = sub_245387B90();
  v5 = v8;
  *a2 = v7;
  a2[1] = v5;
  return result;
}

uint64_t sub_2452AC0D4()
{
  uint64_t v1;

  sub_245387D7C();
  return v1;
}

unint64_t sub_2452AC124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  void (*v15)(_QWORD *, uint64_t, uint64_t);
  id v16;
  uint64_t (*v17)(_QWORD *, uint64_t);
  unint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  char v60;
  uint64_t (*v61)(_QWORD *, uint64_t);
  uint64_t v62;
  id v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t inited;
  uint64_t v68;
  unint64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int v91;
  void (*v92)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  uint64_t (*v97)(_QWORD *, uint64_t);
  int64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  _QWORD v118[3];
  uint64_t v119;
  uint64_t v120;

  v1 = v0;
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
  v2 = MEMORY[0x24BDAC7A8](v106);
  v105 = (uint64_t *)((char *)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = MEMORY[0x24BDAC7A8](v2);
  v104 = (uint64_t)&v90 - v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v103 = (uint64_t)&v90 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v102 = (char *)&v90 - v8;
  v9 = sub_2453879D4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)((char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(v0 + 232);
  *v12 = v13;
  v14 = *MEMORY[0x24BEE5610];
  v15 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v10 + 104);
  v15(v12, v14, v9);
  v16 = v13;
  LOBYTE(v13) = sub_2453879F8();
  v17 = *(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8);
  result = v17(v12, v9);
  if ((v13 & 1) == 0)
    goto LABEL_51;
  v96 = v16;
  v97 = v17;
  swift_beginAccess();
  sub_24525E4F0(v1 + 192, (uint64_t)v118);
  v20 = v119;
  v19 = v120;
  __swift_project_boxed_opaque_existential_1(v118, v119);
  v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v19 + 8) + 8) + 24))(v20);
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v91 = v14;
    v92 = v15;
    v93 = v12;
    v94 = v9;
    v95 = v1;
    v115 = MEMORY[0x24BEE4AF8];
    sub_24532C5AC(0, v22, 0);
    result = sub_245330EE4(v21);
    v24 = result;
    v25 = 0;
    v26 = v21 + 64;
    v27 = *(_BYTE *)(v21 + 32);
    v90 = v21 + 88;
    v28 = v21;
    v100 = v21 + 64;
    v101 = v21;
    v98 = v22;
    v99 = v23;
    while (1)
    {
      if (v24 < 0 || v24 >= 1 << v27)
      {
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
      if ((*(_QWORD *)(v26 + 8 * ((unint64_t)v24 >> 6)) & (1 << v24)) == 0)
        goto LABEL_46;
      if (*(_DWORD *)(v28 + 36) != (_DWORD)v23)
        goto LABEL_47;
      v108 = (unint64_t)v24 >> 6;
      v109 = 1 << v24;
      v107 = v25;
      v31 = v106;
      v32 = (uint64_t)v102;
      v33 = (uint64_t)&v102[*(int *)(v106 + 48)];
      v34 = *(_QWORD *)(v28 + 48);
      v35 = type metadata accessor for Record.ID(0);
      sub_2452B792C(v34 + *(_QWORD *)(*(_QWORD *)(v35 - 8) + 72) * v24, v32, type metadata accessor for Record.ID);
      v36 = *(_QWORD *)(v28 + 56);
      v37 = type metadata accessor for RecordMetadata();
      sub_2452B792C(v36 + *(_QWORD *)(*(_QWORD *)(v37 - 8) + 72) * v24, v33, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      v38 = v103;
      sub_2452B792C(v32, v103, type metadata accessor for Record.ID);
      sub_2452B792C(v33, v38 + *(int *)(v31 + 48), (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      v39 = v104;
      sub_2452BC850(v38, v104, &qword_25744FD30);
      sub_245263F80(v32, &qword_25744FD30);
      v40 = *(int *)(v31 + 48);
      v41 = v105;
      v42 = (uint64_t)v105 + v40;
      v43 = v39 + v40;
      sub_2452B792C(v39, (uint64_t)v105, type metadata accessor for Record.ID);
      sub_2452B792C(v43, v42, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      v44 = v41[2];
      v45 = v41[3];
      v46 = v41[5];
      v110 = v41[4];
      v111 = v44;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2452B7B5C((uint64_t)v41, type metadata accessor for Record.ID);
      sub_2452B7B5C(v42, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      sub_245263F80(v39, &qword_25744FD30);
      v47 = v115;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_24532C5AC(0, *(_QWORD *)(v47 + 16) + 1, 1);
        v47 = v115;
      }
      v49 = *(_QWORD *)(v47 + 16);
      v48 = *(_QWORD *)(v47 + 24);
      if (v49 >= v48 >> 1)
      {
        result = sub_24532C5AC(v48 > 1, v49 + 1, 1);
        v47 = v115;
      }
      *(_QWORD *)(v47 + 16) = v49 + 1;
      v50 = (_QWORD *)(v47 + 32 * v49);
      v50[4] = v111;
      v50[5] = v45;
      v50[6] = v110;
      v50[7] = v46;
      v28 = v101;
      v27 = *(_BYTE *)(v101 + 32);
      v29 = 1 << v27;
      if (v24 >= 1 << v27)
        goto LABEL_48;
      v26 = v100;
      v51 = v108;
      v52 = *(_QWORD *)(v100 + 8 * v108);
      if ((v52 & v109) == 0)
        goto LABEL_49;
      LODWORD(v23) = v99;
      if (*(_DWORD *)(v101 + 36) != (_DWORD)v99)
        goto LABEL_50;
      v53 = v52 & (-2 << (v24 & 0x3F));
      if (v53)
      {
        v29 = __clz(__rbit64(v53)) | v24 & 0xFFFFFFFFFFFFFFC0;
        v30 = v98;
      }
      else
      {
        v54 = v108 + 1;
        v55 = (v29 + 63) >> 6;
        v30 = v98;
        if (v108 + 1 < v55)
        {
          v56 = *(_QWORD *)(v100 + 8 * v54);
          if (!v56)
          {
            v54 = v108 + 2;
            if (v108 + 2 >= v55)
              goto LABEL_5;
            v56 = *(_QWORD *)(v100 + 8 * v54);
            if (!v56)
            {
              while (v55 - 3 != v51)
              {
                v56 = *(_QWORD *)(v90 + 8 * v51++);
                if (v56)
                {
                  v54 = v51 + 2;
                  goto LABEL_20;
                }
              }
              goto LABEL_5;
            }
          }
LABEL_20:
          v29 = __clz(__rbit64(v56)) + (v54 << 6);
        }
      }
LABEL_5:
      v25 = v107 + 1;
      v24 = v29;
      if (v107 + 1 == v30)
      {
        swift_bridgeObjectRelease();
        v9 = v94;
        v1 = v95;
        v15 = v92;
        v12 = v93;
        v14 = v91;
        goto LABEL_28;
      }
    }
  }
  swift_bridgeObjectRelease();
  v47 = MEMORY[0x24BEE4AF8];
LABEL_28:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v118);
  v57 = sub_245331658(v47);
  swift_bridgeObjectRelease();
  swift_retain();
  v111 = sub_2452B926C(MEMORY[0x24BEE4B00], v57, v1);
  swift_bridgeObjectRelease();
  swift_release();
  v58 = v96;
  *v12 = v96;
  v15(v12, v14, v9);
  v59 = v58;
  v60 = sub_2453879F8();
  v61 = v97;
  result = v97(v12, v9);
  if ((v60 & 1) == 0)
    goto LABEL_52;
  swift_beginAccess();
  swift_retain();
  v62 = swift_bridgeObjectRetain();
  v108 = sub_2452B48D8(v62, v1);
  swift_bridgeObjectRelease();
  swift_release();
  *v12 = v59;
  v15(v12, v14, v9);
  v63 = v59;
  v64 = sub_2453879F8();
  result = v61(v12, v9);
  if ((v64 & 1) != 0)
  {
    swift_retain();
    v65 = swift_bridgeObjectRetain();
    v66 = sub_2452B7EE8(v65, v1);
    swift_bridgeObjectRelease();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257450280);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24538A090;
    *(_QWORD *)(inited + 32) = 0x617461646174654DLL;
    *(_QWORD *)(inited + 40) = 0xE800000000000000;
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF50);
    *(_QWORD *)(inited + 48) = v111;
    *(_QWORD *)(inited + 72) = v68;
    strcpy((char *)(inited + 80), "EnabledZones");
    *(_BYTE *)(inited + 93) = 0;
    *(_WORD *)(inited + 94) = -5120;
    v69 = v108;
    v70 = *(_QWORD *)(v108 + 16);
    v106 = inited;
    v107 = v66;
    if (v70)
    {
      v117 = MEMORY[0x24BEE4AF8];
      sub_24532C668(0, v70, 0);
      v71 = v117;
      v72 = (uint64_t *)(v69 + 72);
      v109 = 0x80000002453936B0;
      do
      {
        v73 = *v72;
        v110 = *(v72 - 1);
        v111 = v73;
        v115 = 0;
        v116 = 0xE000000000000000;
        sub_245387EA8();
        sub_245387B90();
        v113 = 0;
        v114 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_245387EA8();
        swift_bridgeObjectRelease();
        v113 = 540697705;
        v114 = 0xE400000000000000;
        swift_bridgeObjectRetain();
        sub_245387B90();
        swift_bridgeObjectRelease();
        sub_245387B90();
        swift_bridgeObjectRetain();
        sub_245387B90();
        swift_bridgeObjectRelease();
        sub_245387B90();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_245387B90();
        v113 = 0;
        v114 = 0xE000000000000000;
        sub_245387EA8();
        swift_bridgeObjectRelease();
        v113 = 0x3A746E6572727563;
        v114 = 0xE900000000000020;
        v112 = v110;
        sub_2453880F4();
        sub_245387B90();
        swift_bridgeObjectRelease();
        sub_245387B90();
        v112 = v111;
        sub_2453880F4();
        sub_245387B90();
        swift_bridgeObjectRelease();
        sub_245387B90();
        swift_bridgeObjectRelease();
        v74 = v115;
        v75 = v116;
        v117 = v71;
        v77 = *(_QWORD *)(v71 + 16);
        v76 = *(_QWORD *)(v71 + 24);
        if (v77 >= v76 >> 1)
        {
          sub_24532C668(v76 > 1, v77 + 1, 1);
          v71 = v117;
        }
        v72 += 6;
        *(_QWORD *)(v71 + 16) = v77 + 1;
        v78 = v71 + 16 * v77;
        *(_QWORD *)(v78 + 32) = v74;
        *(_QWORD *)(v78 + 40) = v75;
        --v70;
      }
      while (v70);
      swift_bridgeObjectRelease();
      inited = v106;
      v66 = v107;
    }
    else
    {
      swift_bridgeObjectRelease();
      v71 = MEMORY[0x24BEE4AF8];
    }
    v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_257450000);
    v80 = v79;
    *(_QWORD *)(inited + 96) = v71;
    *(_QWORD *)(inited + 120) = v79;
    strcpy((char *)(inited + 128), "DisabledZones");
    *(_WORD *)(inited + 142) = -4864;
    v81 = *(_QWORD *)(v66 + 16);
    if (v81)
    {
      v108 = v79;
      v117 = MEMORY[0x24BEE4AF8];
      sub_24532C668(0, v81, 0);
      v82 = v117;
      v83 = (uint64_t *)(v66 + 72);
      v109 = 0x80000002453936B0;
      do
      {
        v84 = *v83;
        v110 = *(v83 - 1);
        v111 = v84;
        v115 = 0;
        v116 = 0xE000000000000000;
        sub_245387EA8();
        sub_245387B90();
        v113 = 0;
        v114 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_245387EA8();
        swift_bridgeObjectRelease();
        v113 = 540697705;
        v114 = 0xE400000000000000;
        swift_bridgeObjectRetain();
        sub_245387B90();
        swift_bridgeObjectRelease();
        sub_245387B90();
        swift_bridgeObjectRetain();
        sub_245387B90();
        swift_bridgeObjectRelease();
        sub_245387B90();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_245387B90();
        v113 = 0;
        v114 = 0xE000000000000000;
        sub_245387EA8();
        swift_bridgeObjectRelease();
        v113 = 0x3A746E6572727563;
        v114 = 0xE900000000000020;
        v112 = v110;
        sub_2453880F4();
        sub_245387B90();
        swift_bridgeObjectRelease();
        sub_245387B90();
        v112 = v111;
        sub_2453880F4();
        sub_245387B90();
        swift_bridgeObjectRelease();
        sub_245387B90();
        swift_bridgeObjectRelease();
        v85 = v115;
        v86 = v116;
        v117 = v82;
        v88 = *(_QWORD *)(v82 + 16);
        v87 = *(_QWORD *)(v82 + 24);
        if (v88 >= v87 >> 1)
        {
          sub_24532C668(v87 > 1, v88 + 1, 1);
          v82 = v117;
        }
        v83 += 6;
        *(_QWORD *)(v82 + 16) = v88 + 1;
        v89 = v82 + 16 * v88;
        *(_QWORD *)(v89 + 32) = v85;
        *(_QWORD *)(v89 + 40) = v86;
        --v81;
      }
      while (v81);
      swift_bridgeObjectRelease();
      inited = v106;
      v80 = v108;
    }
    else
    {
      swift_bridgeObjectRelease();
      v82 = MEMORY[0x24BEE4AF8];
    }
    *(_QWORD *)(inited + 168) = v80;
    *(_QWORD *)(inited + 144) = v82;
    return sub_24531B91C(inited);
  }
  else
  {
LABEL_53:
    __break(1u);
  }
  return result;
}

uint64_t sub_2452ACDC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t ObjectType;
  uint64_t (*v68)(uint64_t *, unint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  int64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
  v7 = MEMORY[0x24BDAC7A8](v95);
  v94 = (uint64_t)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v93 = (uint64_t)&v81 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v92 = (uint64_t)&v81 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v91 = (uint64_t)&v81 - v13;
  v14 = type metadata accessor for Record.ID(0);
  v102 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v101 = (uint64_t)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a2;
  v16 = a2[1];
  v19 = a2[2];
  v18 = a2[3];
  result = swift_beginAccess();
  v96 = a3;
  v21 = *(_QWORD *)(a3 + 240);
  if (*(_QWORD *)(v21 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = sub_2452C1EB4(v17, v16, v19, v18);
    if ((v23 & 1) != 0)
    {
      v86 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v22);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v103 = v19;
      v104 = v18;
      swift_bridgeObjectRetain();
      sub_245387B90();
      swift_bridgeObjectRetain();
      sub_245387B90();
      swift_bridgeObjectRelease();
      v24 = v104;
      v82 = v103;
      v25 = v96 + 192;
      swift_beginAccess();
      sub_24525E4F0(v25, (uint64_t)&v103);
      v27 = v105;
      v26 = v106;
      __swift_project_boxed_opaque_existential_1(&v103, v105);
      v28 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v26 + 8) + 8) + 24))(v27);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29 = sub_2452B9034(v28, v17, v16, v19, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v103);
      v30 = *(_QWORD *)(v29 + 16);
      v85 = v3;
      v84 = a1;
      v83 = v24;
      if (v30)
      {
        v103 = MEMORY[0x24BEE4AF8];
        sub_24532C528(0, v30, 0);
        result = sub_245330EE4(v29);
        v32 = result;
        v33 = 0;
        v34 = v29 + 64;
        v35 = *(_BYTE *)(v29 + 32);
        v81 = v29 + 88;
        v90 = v29;
        v87 = v30;
        v88 = v31;
        v89 = v29 + 64;
        while (1)
        {
          if (v32 < 0 || v32 >= 1 << v35)
          {
            __break(1u);
LABEL_44:
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
            goto LABEL_50;
          }
          if ((*(_QWORD *)(v34 + 8 * ((unint64_t)v32 >> 6)) & (1 << v32)) == 0)
            goto LABEL_44;
          if (*(_DWORD *)(v29 + 36) != (_DWORD)v31)
            goto LABEL_45;
          v98 = 1 << v32;
          v99 = (unint64_t)v32 >> 6;
          v97 = v33;
          v38 = v95;
          v39 = v91;
          v40 = v91 + *(int *)(v95 + 48);
          v41 = *(_QWORD *)(v29 + 48);
          v100 = *(_QWORD *)(v102 + 72);
          sub_2452B792C(v41 + v100 * v32, v91, type metadata accessor for Record.ID);
          v42 = *(_QWORD *)(v29 + 56);
          v43 = type metadata accessor for RecordMetadata();
          sub_2452B792C(v42 + *(_QWORD *)(*(_QWORD *)(v43 - 8) + 72) * v32, v40, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
          v44 = v92;
          sub_2452B792C(v39, v92, type metadata accessor for Record.ID);
          sub_2452B792C(v40, v44 + *(int *)(v38 + 48), (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
          v45 = v93;
          sub_2452BC850(v44, v93, &qword_25744FD30);
          sub_245263F80(v39, &qword_25744FD30);
          v46 = *(int *)(v38 + 48);
          v47 = v94;
          v48 = v94 + v46;
          v49 = v45 + v46;
          sub_2452B792C(v45, v94, type metadata accessor for Record.ID);
          sub_2452B792C(v49, v48, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
          sub_2452B7AB8(v47, v101, type metadata accessor for Record.ID);
          sub_2452B7B5C(v48, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
          sub_245263F80(v45, &qword_25744FD30);
          v50 = v103;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24532C528(0, *(_QWORD *)(v50 + 16) + 1, 1);
            v50 = v103;
          }
          v29 = v90;
          v51 = v100;
          v53 = *(_QWORD *)(v50 + 16);
          v52 = *(_QWORD *)(v50 + 24);
          if (v53 >= v52 >> 1)
          {
            sub_24532C528(v52 > 1, v53 + 1, 1);
            v50 = v103;
          }
          *(_QWORD *)(v50 + 16) = v53 + 1;
          result = sub_2452B7AB8(v101, v50+ ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80))+ v53 * v51, type metadata accessor for Record.ID);
          v35 = *(_BYTE *)(v29 + 32);
          v36 = 1 << v35;
          if (v32 >= 1 << v35)
            goto LABEL_46;
          v34 = v89;
          v54 = v99;
          v55 = *(_QWORD *)(v89 + 8 * v99);
          if ((v55 & v98) == 0)
            goto LABEL_47;
          LODWORD(v31) = v88;
          if (*(_DWORD *)(v29 + 36) != (_DWORD)v88)
            goto LABEL_48;
          v56 = v55 & (-2 << (v32 & 0x3F));
          if (v56)
          {
            v36 = __clz(__rbit64(v56)) | v32 & 0xFFFFFFFFFFFFFFC0;
            v37 = v87;
          }
          else
          {
            v57 = v99 + 1;
            v58 = (v36 + 63) >> 6;
            v37 = v87;
            if (v99 + 1 < v58)
            {
              v59 = *(_QWORD *)(v89 + 8 * v57);
              if (!v59)
              {
                v57 = v99 + 2;
                if (v99 + 2 >= v58)
                  goto LABEL_6;
                v59 = *(_QWORD *)(v89 + 8 * v57);
                if (!v59)
                {
                  while (v58 - 3 != v54)
                  {
                    v59 = *(_QWORD *)(v81 + 8 * v54++);
                    if (v59)
                    {
                      v57 = v54 + 2;
                      goto LABEL_21;
                    }
                  }
                  goto LABEL_6;
                }
              }
LABEL_21:
              v36 = __clz(__rbit64(v59)) + (v57 << 6);
            }
          }
LABEL_6:
          v33 = v97 + 1;
          v32 = v36;
          if (v97 + 1 == v37)
          {
            swift_release();
            v60 = *(_QWORD *)(v50 + 16);
            if (!v60)
              goto LABEL_40;
            goto LABEL_29;
          }
        }
      }
      swift_release();
      v50 = MEMORY[0x24BEE4AF8];
      v60 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      if (v60)
      {
LABEL_29:
        v61 = v50 + ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80));
        v62 = *(_QWORD *)(v102 + 72);
        v101 = v86 + 16;
        v102 = v62;
        v100 = v50;
        swift_bridgeObjectRetain();
        v63 = 0;
        v64 = 0;
        v65 = 0;
        while (1)
        {
          v103 = v96;
          if (MEMORY[0x24953323C](v101))
          {
            v66 = *(_QWORD *)(v86 + 24);
            ObjectType = swift_getObjectType();
            v68 = *(uint64_t (**)(uint64_t *, unint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v66 + 56);
            v69 = type metadata accessor for Replicator();
            v70 = v68(&v103, v61, v69, &protocol witness table for Replicator, ObjectType, v66);
            v72 = v71;
            v74 = v73;
            result = swift_unknownObjectRelease();
            v75 = __OFADD__(v65, v70);
            v65 += v70;
            if (v75)
              goto LABEL_49;
          }
          else
          {
            result = sub_245387B78();
            v72 = 0;
            v74 = 0;
            v75 = __OFADD__(v65, result);
            v65 += result;
            if (v75)
              goto LABEL_49;
          }
          v75 = __OFADD__(v64, v72);
          v64 += v72;
          if (v75)
            break;
          v75 = __OFADD__(v63, v74);
          v63 += v74;
          if (v75)
            goto LABEL_51;
          v61 += v102;
          if (!--v60)
          {
            v50 = v100;
            swift_bridgeObjectRelease();
            goto LABEL_41;
          }
        }
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
      }
      else
      {
LABEL_40:
        v63 = 0;
        v64 = 0;
        v65 = 0;
LABEL_41:
        v103 = 0;
        v104 = 0xE000000000000000;
        sub_245387EA8();
        sub_245387B90();
        v76 = *(_QWORD *)(v50 + 16);
        swift_bridgeObjectRelease();
        v107 = v76;
        sub_2453880F4();
        sub_245387B90();
        swift_bridgeObjectRelease();
        sub_245387B90();
        v107 = v65;
        sub_2453880F4();
        sub_245387B90();
        swift_bridgeObjectRelease();
        sub_245387B90();
        v107 = v64;
        sub_2453880F4();
        sub_245387B90();
        swift_bridgeObjectRelease();
        sub_245387B90();
        v107 = v63;
        sub_2453880F4();
        sub_245387B90();
        swift_bridgeObjectRelease();
        v77 = v103;
        v78 = v104;
        v79 = v84;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v103 = *v79;
        *v79 = 0x8000000000000000;
        sub_2453288B0(v77, v78, v82, v83, isUniquelyReferenced_nonNull_native);
        *v79 = v103;
        swift_release();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

unint64_t sub_2452AD708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  int64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t i;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t *v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t *v79;
  uint64_t *v80;
  uint64_t inited;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  int64_t v86;
  uint64_t *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  int64_t v99;
  uint64_t *v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t *v106;
  unint64_t result;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  int64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  _QWORD *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;

  v1 = v0;
  v121 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v2 = MEMORY[0x24BDAC7A8](v121);
  v120 = (char *)&v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v119 = (uint64_t)&v108 - v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v118 = (uint64_t *)((char *)&v108 - v7);
  MEMORY[0x24BDAC7A8](v6);
  v117 = (char *)&v108 - v8;
  v129 = type metadata accessor for PairingRelationship();
  v130 = *(_QWORD *)(v129 - 8);
  v9 = MEMORY[0x24BDAC7A8](v129);
  v122 = (uint64_t)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v111 = (char *)&v108 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v123 = (uint64_t)&v108 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v108 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v116 = (uint64_t)&v108 - v18;
  v19 = sub_2453879D4();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (uint64_t *)((char *)&v108 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = *(void **)(v1 + 232);
  *v22 = v23;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v20 + 104))(v22, *MEMORY[0x24BEE5610], v19);
  v24 = v23;
  LOBYTE(v23) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v20 + 8))(v22, v19);
  if ((v23 & 1) != 0)
  {
    swift_beginAccess();
    sub_24525E4F0(v1 + 192, (uint64_t)&v132);
    v25 = v133;
    v26 = v134;
    __swift_project_boxed_opaque_existential_1(&v132, v133);
    v27 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v26 + 8) + 8) + 32))(v25);
    v28 = *(_QWORD *)(v27 + 16);
    v29 = (uint64_t *)MEMORY[0x24BEE4AF8];
    v110 = v1;
    v124 = v17;
    if (v28)
    {
      v131 = MEMORY[0x24BEE4AF8];
      sub_24532C554(0, v28, 0);
      v30 = sub_245330EE4(v27);
      if ((v30 & 0x8000000000000000) == 0)
      {
        v32 = v30;
        if (v30 < 1 << *(_BYTE *)(v27 + 32))
        {
          v33 = 0;
          v34 = v27 + 64;
          v112 = v31;
          v109 = v27 + 80;
          v115 = v27;
          v113 = v28;
          v114 = v27 + 64;
          while (1)
          {
            v35 = v32 >> 6;
            if ((*(_QWORD *)(v34 + 8 * (v32 >> 6)) & (1 << v32)) == 0)
              goto LABEL_80;
            if (*(_DWORD *)(v27 + 36) != (_DWORD)v31)
              goto LABEL_81;
            v127 = 1 << v32;
            v126 = v31;
            v125 = v33;
            v36 = v121;
            v37 = v117;
            v38 = (uint64_t)&v117[*(int *)(v121 + 48)];
            v39 = *(_QWORD *)(v27 + 56);
            v40 = (uint64_t *)(*(_QWORD *)(v27 + 48) + 16 * v32);
            v41 = *v40;
            v42 = v40[1];
            v128 = *(uint64_t **)(v130 + 72);
            sub_2452B792C(v39 + (_QWORD)v128 * v32, v38, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
            *v37 = v41;
            v37[1] = v42;
            v43 = (uint64_t)v118;
            *v118 = v41;
            *(_QWORD *)(v43 + 8) = v42;
            sub_2452B792C(v38, v43 + *(int *)(v36 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
            v44 = v119;
            sub_2452BC850(v43, v119, (uint64_t *)&unk_25744FF90);
            swift_bridgeObjectRetain_n();
            sub_245263F80((uint64_t)v37, (uint64_t *)&unk_25744FF90);
            v45 = *(int *)(v36 + 48);
            v46 = (uint64_t)&v120[v45];
            sub_2452B792C(v44 + v45, (uint64_t)&v120[v45], (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
            v47 = v116;
            sub_2452B7AB8(v46, v116, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
            sub_245263F80(v44, (uint64_t *)&unk_25744FF90);
            v48 = v131;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_24532C554(0, *(_QWORD *)(v48 + 16) + 1, 1);
              v48 = v131;
            }
            v50 = *(_QWORD *)(v48 + 16);
            v49 = *(_QWORD *)(v48 + 24);
            if (v50 >= v49 >> 1)
            {
              sub_24532C554(v49 > 1, v50 + 1, 1);
              v48 = v131;
            }
            *(_QWORD *)(v48 + 16) = v50 + 1;
            sub_2452B7AB8(v47, v48+ ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80))+ v50 * (_QWORD)v128, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
            v27 = v115;
            v51 = 1 << *(_BYTE *)(v115 + 32);
            if ((uint64_t)v32 >= v51)
              goto LABEL_82;
            v34 = v114;
            v52 = *(_QWORD *)(v114 + 8 * v35);
            if ((v52 & v127) == 0)
              goto LABEL_83;
            if (*(_DWORD *)(v115 + 36) != (_DWORD)v126)
              goto LABEL_84;
            v53 = v52 & (-2 << (v32 & 0x3F));
            if (v53)
            {
              v32 = __clz(__rbit64(v53)) | v32 & 0xFFFFFFFFFFFFFFC0;
              v17 = v124;
              v54 = v113;
              v55 = v125;
              goto LABEL_24;
            }
            v56 = v35 + 1;
            v57 = (unint64_t)(v51 + 63) >> 6;
            v17 = v124;
            v54 = v113;
            v55 = v125;
            if (v35 + 1 < v57)
            {
              v58 = *(_QWORD *)(v114 + 8 * v56);
              if (v58)
              {
LABEL_22:
                v32 = __clz(__rbit64(v58)) + (v56 << 6);
                goto LABEL_24;
              }
              while (v57 - 2 != v35)
              {
                v58 = *(_QWORD *)(v109 + 8 * v35++);
                if (v58)
                {
                  v56 = v35 + 1;
                  goto LABEL_22;
                }
              }
            }
            v32 = 1 << *(_BYTE *)(v115 + 32);
LABEL_24:
            v33 = v55 + 1;
            if (v33 == v54)
            {
              swift_bridgeObjectRelease();
              v1 = v110;
              v29 = (uint64_t *)MEMORY[0x24BEE4AF8];
              goto LABEL_30;
            }
            if ((v32 & 0x8000000000000000) == 0)
            {
              v31 = v112;
              if ((uint64_t)v32 < v51)
                continue;
            }
            goto LABEL_79;
          }
        }
      }
      goto LABEL_79;
    }
    swift_bridgeObjectRelease();
    v48 = MEMORY[0x24BEE4AF8];
LABEL_30:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v132);
    v132 = v29;
    v59 = *(_QWORD *)(v48 + 16);
    swift_bridgeObjectRetain();
    if (v59)
    {
      for (i = 0; i != v59; ++i)
      {
        if (i >= *(_QWORD *)(v48 + 16))
        {
          __break(1u);
          goto LABEL_78;
        }
        v61 = (*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
        v62 = *(_QWORD *)(v130 + 72);
        sub_2452B792C(v48 + v61 + v62 * i, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        v63 = &v17[*(int *)(v129 + 32)];
        v64 = *(_QWORD *)v63;
        v65 = *((_QWORD *)v63 + 1);
        if (v65 == 2)
        {
          sub_24526B484(*(_QWORD *)v63, 2uLL);
          sub_24526B484(0, 2uLL);
          sub_2452B7AB8((uint64_t)v17, v123, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          v66 = v132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24532C554(0, v66[2] + 1, 1);
            v66 = v132;
          }
          v68 = v66[2];
          v67 = v66[3];
          if (v68 >= v67 >> 1)
          {
            sub_24532C554(v67 > 1, v68 + 1, 1);
            v66 = v132;
          }
          v66[2] = v68 + 1;
          sub_2452B7AB8(v123, (uint64_t)v66 + v61 + v68 * v62, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          v17 = v124;
        }
        else
        {
          sub_24526B470(*(_QWORD *)v63, *((_QWORD *)v63 + 1));
          sub_24526B484(v64, v65);
          sub_24526B484(0, 2uLL);
          sub_2452B7B5C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        }
      }
      swift_bridgeObjectRelease();
      v69 = v29;
      v70 = 0;
      v128 = v132;
      v132 = v69;
      v71 = v48 + v61;
      v72 = (uint64_t)v111;
      while (v70 < *(_QWORD *)(v48 + 16))
      {
        sub_2452B792C(v71, v72, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        v73 = v72 + *(int *)(v129 + 32);
        v74 = *(_QWORD *)v73;
        v75 = *(_QWORD *)(v73 + 8);
        if (v75 == 2)
        {
          sub_24526B484(*(_QWORD *)v73, 2uLL);
          sub_24526B484(0, 2uLL);
          sub_2452B7B5C(v72, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        }
        else
        {
          sub_24526B470(*(_QWORD *)v73, *(_QWORD *)(v73 + 8));
          sub_24526B484(v74, v75);
          sub_24526B484(0, 2uLL);
          sub_2452B7AB8(v72, v122, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          v76 = v132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24532C554(0, v76[2] + 1, 1);
            v76 = v132;
          }
          v78 = v76[2];
          v77 = v76[3];
          if (v78 >= v77 >> 1)
          {
            sub_24532C554(v77 > 1, v78 + 1, 1);
            v76 = v132;
          }
          v76[2] = v78 + 1;
          sub_2452B7AB8(v122, (uint64_t)v76 + v61 + v78 * v62, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          v72 = (uint64_t)v111;
        }
        ++v70;
        v71 += v62;
        if (v59 == v70)
        {
          v1 = v110;
          v29 = (uint64_t *)MEMORY[0x24BEE4AF8];
          v79 = v128;
          goto LABEL_53;
        }
      }
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
      goto LABEL_85;
    }
    swift_bridgeObjectRelease();
    v79 = v132;
    v132 = v29;
LABEL_53:
    swift_bridgeObjectRelease();
    v80 = v132;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257450280);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24538A100;
    *(_QWORD *)(inited + 32) = 0x646572696150;
    *(_QWORD *)(inited + 40) = 0xE600000000000000;
    v132 = v29;
    v82 = v79[2];
    if (v82)
    {
      v83 = (uint64_t)v79
          + ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80));
      v84 = *(_QWORD *)(v130 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_2452AE370(&v132, v83, v1);
        v83 += v84;
        --v82;
      }
      while (v82);
      swift_release_n();
      v85 = v132;
    }
    else
    {
      swift_release();
      v85 = (uint64_t *)MEMORY[0x24BEE4AF8];
    }
    v86 = v85[2];
    v129 = inited;
    if (v86)
    {
      v128 = v80;
      v132 = v29;
      sub_24532C668(0, v86, 0);
      v87 = v132;
      v88 = v85 + 5;
      do
      {
        v90 = *(v88 - 1);
        v89 = *v88;
        v132 = v87;
        v92 = v87[2];
        v91 = v87[3];
        swift_bridgeObjectRetain();
        if (v92 >= v91 >> 1)
        {
          sub_24532C668(v91 > 1, v92 + 1, 1);
          v87 = v132;
        }
        v88 += 2;
        v87[2] = v92 + 1;
        v93 = &v87[2 * v92];
        v93[4] = v90;
        v93[5] = v89;
        --v86;
      }
      while (v86);
      swift_bridgeObjectRelease();
      v1 = v110;
      v29 = (uint64_t *)MEMORY[0x24BEE4AF8];
      inited = v129;
      v80 = v128;
    }
    else
    {
      swift_bridgeObjectRelease();
      v87 = (uint64_t *)MEMORY[0x24BEE4AF8];
    }
    v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_257450000);
    *(_QWORD *)(inited + 48) = v87;
    *(_QWORD *)(inited + 72) = v94;
    *(_QWORD *)(inited + 80) = 0x6465726961706E55;
    *(_QWORD *)(inited + 88) = 0xE800000000000000;
    v132 = v29;
    v95 = v80[2];
    if (v95)
    {
      v96 = (uint64_t)v80
          + ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80));
      v97 = *(_QWORD *)(v130 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_2452AE370(&v132, v96, v1);
        v96 += v97;
        --v95;
      }
      while (v95);
      swift_release_n();
      v98 = v132;
      v99 = v132[2];
      if (v99)
      {
LABEL_69:
        v132 = v29;
        sub_24532C668(0, v99, 0);
        v100 = v132;
        v101 = v98 + 5;
        do
        {
          v103 = *(v101 - 1);
          v102 = *v101;
          v132 = v100;
          v105 = v100[2];
          v104 = v100[3];
          swift_bridgeObjectRetain();
          if (v105 >= v104 >> 1)
          {
            sub_24532C668(v104 > 1, v105 + 1, 1);
            v100 = v132;
          }
          v101 += 2;
          v100[2] = v105 + 1;
          v106 = &v100[2 * v105];
          v106[4] = v103;
          v106[5] = v102;
          --v99;
        }
        while (v99);
        swift_bridgeObjectRelease();
        inited = v129;
        goto LABEL_76;
      }
    }
    else
    {
      swift_release();
      v98 = (uint64_t *)MEMORY[0x24BEE4AF8];
      v99 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      if (v99)
        goto LABEL_69;
    }
    swift_bridgeObjectRelease();
    v100 = (uint64_t *)MEMORY[0x24BEE4AF8];
LABEL_76:
    *(_QWORD *)(inited + 120) = v94;
    *(_QWORD *)(inited + 96) = v100;
    return sub_24531B91C(inited);
  }
LABEL_85:
  __break(1u);
  swift_release();
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_2452AE370(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t **v58;
  unint64_t v59;
  int64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  uint64_t *v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;

  v58 = a1;
  v66 = sub_245387740();
  v65 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v61 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ZoneVersion();
  v62 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = &qword_257452328;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452328);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v15 = (uint64_t **)((char *)&v55 - v14);
  swift_beginAccess();
  sub_24525E4F0(a3 + 192, (uint64_t)&v70);
  v16 = *((_QWORD *)&v71 + 1);
  v17 = v72;
  __swift_project_boxed_opaque_existential_1(&v70, *((uint64_t *)&v71 + 1));
  v18 = *(_QWORD *)(v17 + 8);
  v57 = a2;
  v19 = MetadataStoring.zoneVersions(for:)(a2, v16, v18);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
  v67 = 0;
  v21 = *(_QWORD *)(v19 + 64);
  v59 = v19 + 64;
  v81 = 0;
  v82 = 0xE000000000000000;
  v63 = v19;
  v22 = 1 << *(_BYTE *)(v19 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v60 = (unint64_t)(v22 + 63) >> 6;
  v56 = v60 - 1;
  while (1)
  {
    if (v24)
    {
      v83 = (v24 - 1) & v24;
      v27 = __clz(__rbit64(v24)) | (v67 << 6);
LABEL_8:
      v28 = *(_QWORD *)(v63 + 56);
      v29 = (_QWORD *)(*(_QWORD *)(v63 + 48) + 32 * v27);
      v30 = v29[1];
      v31 = v29[2];
      v32 = v29[3];
      *v13 = *v29;
      v13[1] = v30;
      v13[2] = v31;
      v13[3] = v32;
      v33 = v28 + *(_QWORD *)(v62 + 72) * v27;
      v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744F640);
      sub_2452B792C(v33, (uint64_t)v13 + *(int *)(v34 + 48), (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v13, 0, 1, v34);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35 = v66;
      goto LABEL_27;
    }
    v36 = v67 + 1;
    if (__OFADD__(v67, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    v35 = v66;
    if (v36 < v60)
    {
      v37 = *(_QWORD *)(v59 + 8 * v36);
      if (v37)
        goto LABEL_12;
      v38 = v67 + 2;
      ++v67;
      if (v36 + 1 < v60)
      {
        v37 = *(_QWORD *)(v59 + 8 * v38);
        if (v37)
          goto LABEL_15;
        v67 = v36 + 1;
        if (v36 + 2 < v60)
        {
          v37 = *(_QWORD *)(v59 + 8 * (v36 + 2));
          if (v37)
          {
            v36 += 2;
            goto LABEL_12;
          }
          v38 = v36 + 3;
          v67 = v36 + 2;
          if (v36 + 3 < v60)
            break;
        }
      }
    }
LABEL_26:
    v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744F640);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v13, 1, 1, v39);
    v83 = 0;
LABEL_27:
    sub_2452BC850((uint64_t)v13, (uint64_t)v15, &qword_257452328);
    v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744F640);
    if ((*(unsigned int (**)(uint64_t **, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v15, 1, v40) == 1)
    {
      swift_release();
      *(_QWORD *)&v70 = 0;
      *((_QWORD *)&v70 + 1) = 0xE000000000000000;
      sub_245387EA8();
      v80 = v70;
      sub_245387B90();
      sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v43 = v57;
      sub_2453880F4();
      sub_245387B90();
      swift_bridgeObjectRelease();
      sub_245387B90();
      v44 = type metadata accessor for PairingRelationship();
      v70 = *(_OWORD *)(v43 + *(int *)(v44 + 32));
      sub_245387F5C();
      sub_245387B90();
      v45 = (__int128 *)(v43 + *(int *)(v44 + 20));
      v46 = v45[7];
      v76 = v45[6];
      v77 = v46;
      v47 = v45[9];
      v78 = v45[8];
      v79 = v47;
      v48 = v45[3];
      v72 = v45[2];
      v49 = v45[4];
      v50 = v45[5];
      v73 = v48;
      v74 = v49;
      v75 = v50;
      v51 = v45[1];
      v70 = *v45;
      v71 = v51;
      sub_245387F5C();
      sub_245387B90();
      sub_2453876EC();
      sub_24525C6C4((unint64_t *)&qword_2574525E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
      sub_2453880F4();
      sub_245387B90();
      swift_bridgeObjectRelease();
      sub_245387B90();
      sub_2453880F4();
      sub_245387B90();
      swift_bridgeObjectRelease();
      sub_245387B90();
      sub_245387B90();
      swift_bridgeObjectRelease();
      a2 = *((_QWORD *)&v80 + 1);
      v17 = v80;
      v15 = v58;
      v9 = *v58;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) != 0)
      {
LABEL_31:
        v53 = v9[2];
        v52 = v9[3];
        if (v53 >= v52 >> 1)
        {
          result = (uint64_t)sub_245323DF8((_QWORD *)(v52 > 1), v53 + 1, 1, v9);
          v9 = (uint64_t *)result;
        }
        v9[2] = v53 + 1;
        v54 = &v9[2 * v53];
        v54[4] = v17;
        v54[5] = a2;
        *v15 = v9;
        return result;
      }
LABEL_35:
      result = (uint64_t)sub_245323DF8(0, v9[2] + 1, 1, v9);
      v9 = (uint64_t *)result;
      goto LABEL_31;
    }
    a2 = (uint64_t)v15[1];
    v68 = *v15;
    v41 = v15[2];
    sub_2452B7AB8((uint64_t)v15 + *(int *)(v40 + 48), (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    v42 = v65;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v8, 1, v35) == 1)
    {
      v69 = 0x7974706D65;
    }
    else
    {
      v25 = v61;
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v61, v8, v35);
      v64 = v41;
      v69 = sub_245387704();
      v26 = v25;
      v9 = &qword_257452328;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v26, v35);
    }
    *(_QWORD *)&v70 = 0;
    *((_QWORD *)&v70 + 1) = 0xE000000000000000;
    sub_245387EA8();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v70 = 540697705;
    *((_QWORD *)&v70 + 1) = 0xE400000000000000;
    swift_bridgeObjectRetain();
    sub_245387B90();
    swift_bridgeObjectRelease();
    sub_245387B90();
    swift_bridgeObjectRetain();
    sub_245387B90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_245387B90();
    sub_245387B90();
    swift_bridgeObjectRelease();
    sub_245387B90();
    v17 = *((_QWORD *)&v70 + 1);
    sub_245387B90();
    result = swift_bridgeObjectRelease();
    v24 = v83;
  }
  v37 = *(_QWORD *)(v59 + 8 * v38);
  if (v37)
  {
LABEL_15:
    v36 = v38;
LABEL_12:
    v83 = (v37 - 1) & v37;
    v27 = __clz(__rbit64(v37)) + (v36 << 6);
    v67 = v36;
    goto LABEL_8;
  }
  while (1)
  {
    v36 = v38 + 1;
    if (__OFADD__(v38, 1))
      break;
    if (v36 >= v60)
    {
      v67 = v56;
      goto LABEL_26;
    }
    v37 = *(_QWORD *)(v59 + 8 * v36);
    ++v38;
    if (v37)
      goto LABEL_12;
  }
  __break(1u);
  return result;
}

unint64_t sub_2452AECEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  int64_t v21;
  int v22;
  int v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t inited;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  char *v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  int64_t v55;
  int v56;
  int v57;
  char v58;
  int v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;

  v1 = v0;
  v2 = sub_245387740();
  v74 = *(_QWORD *)(v2 - 8);
  v75 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v73 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v72 = (char *)&v69 - v5;
  v6 = sub_2453879D4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v1 + 232);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v11 = v10;
  LOBYTE(v10) = sub_2453879F8();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
LABEL_44:
    __break(1u);
    return result;
  }
  if ((*(_BYTE *)(v1 + 137) & 1) != 0)
  {
    v82 = 1701736270;
    v83 = 0xE400000000000000;
  }
  else
  {
    v13 = *(_BYTE *)(v1 + 136);
    v78 = sub_245387C98();
    v79 = v14;
    sub_245387B90();
    sub_245387C98();
    sub_245387B90();
    swift_bridgeObjectRelease();
    sub_245387B90();
    sub_245387C98();
    sub_245387B90();
    swift_bridgeObjectRelease();
    v82 = v78;
    v83 = v79;
    if ((v13 & 1) == 0)
    {
      v78 = 114;
      v79 = 0xE100000000000000;
      sub_245387C98();
      sub_245387B90();
      swift_bridgeObjectRelease();
      sub_245387B90();
      swift_bridgeObjectRelease();
    }
  }
  swift_beginAccess();
  sub_24525E4F0(v1 + 192, (uint64_t)&v78);
  v16 = v80;
  v15 = v81;
  __swift_project_boxed_opaque_existential_1(&v78, v80);
  LOBYTE(v15) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v15 + 8) + 8) + 40))(v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v78);
  v69 = v1;
  if ((v15 & 1) != 0)
  {
    sub_24525E4F0(v1 + 192, (uint64_t)&v78);
    v18 = v80;
    v17 = v81;
    __swift_project_boxed_opaque_existential_1(&v78, v80);
    v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v17 + 8) + 8) + 48))(v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v78);
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v77 = MEMORY[0x24BEE4AF8];
      sub_24532C668(0, v20, 0);
      result = sub_2452B3C80(v19);
      v21 = result;
      v23 = v22;
      v25 = v24 & 1;
      v70 = v19;
      v71 = v19 + 56;
      while ((v21 & 0x8000000000000000) == 0 && v21 < 1 << *(_BYTE *)(v19 + 32))
      {
        if (((*(_QWORD *)(v71 + (((unint64_t)v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_42;
        if (*(_DWORD *)(v19 + 36) != v23)
          goto LABEL_43;
        v26 = *(_QWORD *)(v19 + 48);
        v28 = v74;
        v27 = v75;
        v29 = v72;
        (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v72, v26 + *(_QWORD *)(v74 + 72) * v21, v75);
        v30 = v73;
        (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v73, v29, v27);
        v76 = sub_245387704();
        v32 = v31;
        (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
        v33 = v77;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24532C668(0, *(_QWORD *)(v33 + 16) + 1, 1);
          v33 = v77;
        }
        v35 = *(_QWORD *)(v33 + 16);
        v34 = *(_QWORD *)(v33 + 24);
        if (v35 >= v34 >> 1)
        {
          sub_24532C668(v34 > 1, v35 + 1, 1);
          v33 = v77;
        }
        *(_QWORD *)(v33 + 16) = v35 + 1;
        v36 = v33 + 16 * v35;
        *(_QWORD *)(v36 + 32) = v76;
        *(_QWORD *)(v36 + 40) = v32;
        v19 = v70;
        result = sub_2452B3D20(v21, v23, v25 & 1, v70);
        v21 = result;
        v23 = v37;
        v25 = v38 & 1;
        if (!--v20)
        {
          sub_2452BC024(result, v37, v38 & 1);
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
      }
      goto LABEL_41;
    }
    swift_bridgeObjectRelease();
    v33 = MEMORY[0x24BEE4AF8];
LABEL_21:
    v78 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257450000);
    sub_24526381C(&qword_257450008, &qword_257450000, MEMORY[0x24BEE12B0]);
    v75 = sub_245387AC4();
    v76 = v39;
    swift_bridgeObjectRelease();
  }
  else
  {
    v75 = 0x64656C6261736944;
    v76 = 0xE800000000000000;
  }
  sub_2452C1C64();
  sub_2452C1C64();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257450280);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24538A110;
  *(_QWORD *)(inited + 32) = 0x656369766544;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v73 = (char *)inited;
  v78 = 0;
  v79 = 0xE000000000000000;
  sub_245387EA8();
  sub_2452C1C64();
  if (!v41)
  {
    v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1760]), sel_init);
    v43 = objc_msgSend(v42, sel_hostName);
    sub_245387B18();

  }
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  v44 = v69;
  if (!*(_QWORD *)(v69 + 256))
  {
    v45 = *(_QWORD *)(v69 + 184);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(ObjectType, v45);
  }
  swift_bridgeObjectRetain();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  v77 = 12;
  sub_2453880F4();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  v77 = 4;
  sub_2453880F4();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  v47 = (char *)v83;
  swift_bridgeObjectRetain();
  sub_245387B90();
  swift_bridgeObjectRelease();
  v48 = v79;
  v49 = MEMORY[0x24BEE0D00];
  v50 = v73;
  *((_QWORD *)v73 + 6) = v78;
  *((_QWORD *)v50 + 7) = v48;
  *((_QWORD *)v50 + 9) = v49;
  *((_QWORD *)v50 + 10) = 0x73694C776F6C6C41;
  *((_QWORD *)v50 + 11) = 0xE900000000000074;
  *((_QWORD *)v50 + 12) = v75;
  *((_QWORD *)v50 + 13) = v76;
  *((_QWORD *)v50 + 15) = v49;
  *((_QWORD *)v50 + 16) = 0x64656C62616E45;
  *((_QWORD *)v50 + 17) = 0xE700000000000000;
  v51 = MEMORY[0x24BEE1328];
  v50[144] = *(_BYTE *)(v44 + 544);
  *((_QWORD *)v50 + 21) = v51;
  *((_QWORD *)v50 + 22) = 0xD000000000000011;
  *((_QWORD *)v50 + 23) = 0x80000002453936D0;
  swift_beginAccess();
  v52 = *(_QWORD *)(v44 + 592);
  v53 = *(_QWORD *)(v52 + 16);
  if (v53)
  {
    v72 = v47;
    v77 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_24532C668(0, v53, 0);
    v54 = v77;
    result = sub_2452B3C80(v52);
    v55 = result;
    v57 = v56;
    v59 = v58 & 1;
    v74 = v52 + 56;
    while ((v55 & 0x8000000000000000) == 0 && v55 < 1 << *(_BYTE *)(v52 + 32))
    {
      if (((*(_QWORD *)(v74 + (((unint64_t)v55 >> 3) & 0xFFFFFFFFFFFFF8)) >> v55) & 1) == 0)
        goto LABEL_39;
      if (*(_DWORD *)(v52 + 36) != v57)
        goto LABEL_40;
      LODWORD(v76) = v59;
      v60 = (uint64_t *)(*(_QWORD *)(v52 + 48) + 16 * v55);
      v61 = v60[1];
      v75 = *v60;
      v77 = v54;
      v62 = *(_QWORD *)(v54 + 16);
      v63 = *(_QWORD *)(v54 + 24);
      swift_bridgeObjectRetain();
      if (v62 >= v63 >> 1)
      {
        sub_24532C668(v63 > 1, v62 + 1, 1);
        v54 = v77;
      }
      *(_QWORD *)(v54 + 16) = v62 + 1;
      v64 = v54 + 16 * v62;
      *(_QWORD *)(v64 + 32) = v75;
      *(_QWORD *)(v64 + 40) = v61;
      result = sub_2452B3D20(v55, v57, v76 & 1, v52);
      v55 = result;
      v57 = v65;
      v59 = v66 & 1;
      if (!--v53)
      {
        sub_2452BC024(result, v65, v59);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_37;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  swift_bridgeObjectRelease();
  v54 = MEMORY[0x24BEE4AF8];
LABEL_37:
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_257450000);
  v68 = (uint64_t)v73;
  *((_QWORD *)v73 + 27) = v67;
  *(_QWORD *)(v68 + 192) = v54;
  return sub_24531B91C(v68);
}

unint64_t sub_2452AF674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  void (*v7)(_QWORD *, uint64_t, uint64_t);
  id v8;
  char v9;
  uint64_t (*v10)(_QWORD *, uint64_t);
  unint64_t result;
  id v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _BYTE v56[8];
  _BYTE v57[16];

  v1 = sub_2453879D4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (uint64_t *)((char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + 232);
  *v4 = v5;
  v6 = *MEMORY[0x24BEE5610];
  v7 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v2 + 104);
  v7(v4, v6, v1);
  v8 = v5;
  v9 = sub_2453879F8();
  v10 = *(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8);
  result = v10(v4, v1);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  *v4 = v8;
  v7(v4, v6, v1);
  v12 = v8;
  v13 = sub_2453879F8();
  result = v10(v4, v1);
  if ((v13 & 1) == 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  swift_beginAccess();
  swift_retain();
  v14 = swift_bridgeObjectRetain();
  v15 = sub_2452BC390(v14, v0, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_2452B4D30);
  swift_bridgeObjectRelease();
  swift_release();
  v16 = sub_2452739EC(v15, (uint64_t)v57, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_24532C580, sub_245330EE4);
  swift_release();
  *v4 = v12;
  v7(v4, v6, v1);
  v17 = v12;
  v18 = sub_2453879F8();
  result = v10(v4, v1);
  if ((v18 & 1) == 0)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  swift_retain();
  v19 = swift_bridgeObjectRetain();
  v20 = sub_2452BC390(v19, v0, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_2452BC030);
  swift_bridgeObjectRelease();
  swift_release();
  v21 = sub_2452739EC(v20, (uint64_t)v56, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_24532C580, sub_245330EE4);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257450280);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24538A100;
  *(_QWORD *)(inited + 32) = 0xD000000000000013;
  *(_QWORD *)(inited + 40) = 0x80000002453936F0;
  v23 = *(_QWORD *)(v16 + 16);
  v24 = MEMORY[0x24BEE4AF8];
  v47 = v21;
  v46 = (_QWORD *)inited;
  if (v23)
  {
    v55 = MEMORY[0x24BEE4AF8];
    sub_24532C668(0, v23, 0);
    v25 = v55;
    v45 = v16;
    v26 = (uint64_t *)(v16 + 72);
    v48 = 0x80000002453936B0;
    do
    {
      v27 = *(v26 - 1);
      v49 = *v26;
      v53 = 0;
      v54 = 0xE000000000000000;
      sub_245387EA8();
      sub_245387B90();
      v51 = 0;
      v52 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_245387EA8();
      swift_bridgeObjectRelease();
      v51 = 540697705;
      v52 = 0xE400000000000000;
      swift_bridgeObjectRetain();
      sub_245387B90();
      swift_bridgeObjectRelease();
      sub_245387B90();
      swift_bridgeObjectRetain();
      sub_245387B90();
      swift_bridgeObjectRelease();
      sub_245387B90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_245387B90();
      v51 = 0;
      v52 = 0xE000000000000000;
      sub_245387EA8();
      swift_bridgeObjectRelease();
      v51 = 0x3A746E6572727563;
      v52 = 0xE900000000000020;
      v50 = v27;
      sub_2453880F4();
      sub_245387B90();
      swift_bridgeObjectRelease();
      sub_245387B90();
      v50 = v49;
      sub_2453880F4();
      sub_245387B90();
      swift_bridgeObjectRelease();
      sub_245387B90();
      swift_bridgeObjectRelease();
      v28 = v53;
      v29 = v54;
      v55 = v25;
      v31 = *(_QWORD *)(v25 + 16);
      v30 = *(_QWORD *)(v25 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_24532C668(v30 > 1, v31 + 1, 1);
        v25 = v55;
      }
      v26 += 6;
      *(_QWORD *)(v25 + 16) = v31 + 1;
      v32 = v25 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v28;
      *(_QWORD *)(v32 + 40) = v29;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
    v21 = v47;
    v33 = v46;
    v24 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v33 = (_QWORD *)inited;
    swift_bridgeObjectRelease();
    v25 = MEMORY[0x24BEE4AF8];
  }
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_257450000);
  v35 = v34;
  v33[6] = v25;
  v33[9] = v34;
  v33[10] = 0xD000000000000014;
  v33[11] = 0x8000000245393710;
  v36 = *(_QWORD *)(v21 + 16);
  if (v36)
  {
    v45 = v34;
    v55 = v24;
    sub_24532C668(0, v36, 0);
    v37 = v55;
    v38 = (uint64_t *)(v21 + 72);
    v48 = 0x80000002453936B0;
    do
    {
      v39 = *(v38 - 1);
      v49 = *v38;
      v53 = 0;
      v54 = 0xE000000000000000;
      sub_245387EA8();
      sub_245387B90();
      v51 = 0;
      v52 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_245387EA8();
      swift_bridgeObjectRelease();
      v51 = 540697705;
      v52 = 0xE400000000000000;
      swift_bridgeObjectRetain();
      sub_245387B90();
      swift_bridgeObjectRelease();
      sub_245387B90();
      swift_bridgeObjectRetain();
      sub_245387B90();
      swift_bridgeObjectRelease();
      sub_245387B90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_245387B90();
      v51 = 0;
      v52 = 0xE000000000000000;
      sub_245387EA8();
      swift_bridgeObjectRelease();
      v51 = 0x3A746E6572727563;
      v52 = 0xE900000000000020;
      v50 = v39;
      sub_2453880F4();
      sub_245387B90();
      swift_bridgeObjectRelease();
      sub_245387B90();
      v50 = v49;
      sub_2453880F4();
      sub_245387B90();
      swift_bridgeObjectRelease();
      sub_245387B90();
      swift_bridgeObjectRelease();
      v40 = v53;
      v41 = v54;
      v55 = v37;
      v43 = *(_QWORD *)(v37 + 16);
      v42 = *(_QWORD *)(v37 + 24);
      if (v43 >= v42 >> 1)
      {
        sub_24532C668(v42 > 1, v43 + 1, 1);
        v37 = v55;
      }
      v38 += 6;
      *(_QWORD *)(v37 + 16) = v43 + 1;
      v44 = v37 + 16 * v43;
      *(_QWORD *)(v44 + 32) = v40;
      *(_QWORD *)(v44 + 40) = v41;
      --v36;
    }
    while (v36);
    swift_bridgeObjectRelease();
    v33 = v46;
    v35 = v45;
  }
  else
  {
    swift_bridgeObjectRelease();
    v37 = MEMORY[0x24BEE4AF8];
  }
  v33[15] = v35;
  v33[12] = v37;
  return sub_24531B91C((uint64_t)v33);
}

unint64_t sub_2452AFFBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  BOOL v4;
  unint64_t result;

  v4 = a1 == 0x73656E6F7ALL && a2 == 0xE500000000000000;
  if (v4 || (sub_245388274() & 1) != 0)
  {
    result = sub_2452AC124();
  }
  else if (a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873 || (sub_245388274() & 1) != 0)
  {
    result = sub_2452AD708();
  }
  else if (a1 == 0x746163696C706572 && a2 == 0xEA0000000000726FLL || (sub_245388274() & 1) != 0)
  {
    result = sub_2452AECEC();
  }
  else if (a1 == 0x546567617373656DLL && a2 == 0xEC00000073657079 || (sub_245388274() & 1) != 0)
  {
    result = sub_2452AF674();
  }
  else
  {
    result = sub_24531B91C(MEMORY[0x24BEE4AF8]);
  }
  *a3 = result;
  return result;
}

Swift::String __swiftcall Replicator.captureState()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  Swift::String result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF78);
  sub_245387D7C();
  v0 = sub_245387A70();
  v2 = v1;
  swift_bridgeObjectRelease();
  v3 = v0;
  v4 = v2;
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

void sub_2452B0224(uint64_t a1, void (*a2)(void *, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  void **v6;
  void *v7;
  id v8;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452310);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (void **)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2452BC89C(a1, (uint64_t)v6, &qword_257452310);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = *v6;
    v8 = v7;
    a2(v7, 1);

  }
  else
  {
    a2(0, 0);
    sub_245263F80((uint64_t)v6, &qword_257452310);
  }
}

void sub_2452B0308(void *a1, char a2, void (*a3)(void *, uint64_t))
{
  id v5;

  if ((a2 & 1) != 0)
  {
    v5 = a1;
    a3(a1, 1);
    sub_245263EE8(a1, 1);
  }
  else
  {
    a3(0, 0);
  }
}

uint64_t sub_2452B036C(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[2];

  v4 = v2;
  v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x24BDAC8D0];
  v6 = *(_BYTE *)(isStackAllocationSafe + 32);
  v7 = (unint64_t)((1 << v6) + 63) >> 6;
  v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = a2((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v5);
    if (v2)
      swift_willThrow();
    else
      return v9;
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    v4 = a2((char *)v10, v7, v5);
    MEMORY[0x24953317C](v10, -1, -1);
  }
  return v4;
}

uint64_t sub_2452B04C8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t (*v16)();
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  BOOL v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)();
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  int64_t v48;

  v37 = a2;
  v38 = a1;
  v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v4 = MEMORY[0x24BDAC7A8](v46);
  v45 = (uint64_t *)((char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)&v37 - v6;
  v7 = type metadata accessor for PairingRelationship();
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  result = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v47 = (_QWORD *)a3;
  v12 = *(_QWORD *)(a3 + 64);
  v39 = 0;
  v40 = a3 + 64;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v41 = (unint64_t)(v13 + 63) >> 6;
  v16 = type metadata accessor for PairingRelationship;
  v17 = v42;
  while (v15)
  {
    v18 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v48 = v11;
    v19 = v18 | (v11 << 6);
LABEL_18:
    v24 = (uint64_t *)(v47[6] + 16 * v19);
    v26 = *v24;
    v25 = v24[1];
    sub_2452B792C(v47[7] + *(_QWORD *)(v43 + 72) * v19, (uint64_t)v10, (uint64_t (*)(_QWORD))v16);
    v27 = v16;
    v28 = v46;
    v29 = (uint64_t)v17 + *(int *)(v46 + 48);
    *v17 = v26;
    v17[1] = v25;
    sub_2452B792C((uint64_t)v10, v29, (uint64_t (*)(_QWORD))v27);
    v30 = *(int *)(v28 + 48);
    v31 = v45;
    v32 = (char *)v45 + v30;
    *v45 = v26;
    v31[1] = v25;
    sub_2452B792C(v29, (uint64_t)v31 + v30, (uint64_t (*)(_QWORD))v27);
    v33 = &v32[*(int *)(v44 + 20)];
    v35 = *((_QWORD *)v33 + 4);
    v34 = *((_QWORD *)v33 + 5);
    swift_bridgeObjectRetain_n();
    v36 = (uint64_t)v32;
    v16 = v27;
    sub_2452B7B5C(v36, (uint64_t (*)(_QWORD))v27);
    sub_245263F80((uint64_t)v17, (uint64_t *)&unk_25744FF90);
    if (v35 < 4)
    {
      sub_2452B7B5C((uint64_t)v10, (uint64_t (*)(_QWORD))v27);
      result = swift_bridgeObjectRelease();
      v11 = v48;
    }
    else
    {
      sub_2452B7B5C((uint64_t)v10, (uint64_t (*)(_QWORD))v27);
      result = swift_bridgeObjectRelease();
      v11 = v48;
      if (v34 <= 0xC)
      {
        *(unint64_t *)((char *)v38 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
        v20 = __OFADD__(v39++, 1);
        if (v20)
          goto LABEL_30;
      }
    }
  }
  v20 = __OFADD__(v11, 1);
  v21 = v11 + 1;
  if (v20)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v21 >= v41)
    return sub_24532AF4C(v38, v37, v39, v47);
  v22 = *(_QWORD *)(v40 + 8 * v21);
  if (v22)
  {
LABEL_17:
    v15 = (v22 - 1) & v22;
    v48 = v21;
    v19 = __clz(__rbit64(v22)) + (v21 << 6);
    goto LABEL_18;
  }
  v23 = v21 + 1;
  if (v21 + 1 >= v41)
    return sub_24532AF4C(v38, v37, v39, v47);
  v22 = *(_QWORD *)(v40 + 8 * v23);
  if (v22)
    goto LABEL_16;
  v23 = v21 + 2;
  if (v21 + 2 >= v41)
    return sub_24532AF4C(v38, v37, v39, v47);
  v22 = *(_QWORD *)(v40 + 8 * v23);
  if (v22)
    goto LABEL_16;
  v23 = v21 + 3;
  if (v21 + 3 >= v41)
    return sub_24532AF4C(v38, v37, v39, v47);
  v22 = *(_QWORD *)(v40 + 8 * v23);
  if (v22)
  {
LABEL_16:
    v21 = v23;
    goto LABEL_17;
  }
  while (1)
  {
    v21 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v21 >= v41)
      return sub_24532AF4C(v38, v37, v39, v47);
    v22 = *(_QWORD *)(v40 + 8 * v21);
    ++v23;
    if (v22)
      goto LABEL_17;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2452B0804(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t (*v17)();
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)();
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  int64_t v49;

  v39 = a2;
  v40 = a1;
  v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v4 = MEMORY[0x24BDAC7A8](v47);
  v46 = (uint64_t *)((char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v38 - v6);
  v8 = type metadata accessor for PairingRelationship();
  v44 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  result = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v48 = (_QWORD *)a3;
  v13 = *(_QWORD *)(a3 + 64);
  v41 = 0;
  v42 = a3 + 64;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v43 = (unint64_t)(v14 + 63) >> 6;
  v17 = type metadata accessor for PairingRelationship;
  while (v16)
  {
    v18 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v49 = v12;
    v19 = v18 | (v12 << 6);
LABEL_5:
    v20 = (uint64_t *)(v48[6] + 16 * v19);
    v22 = *v20;
    v21 = v20[1];
    sub_2452B792C(v48[7] + *(_QWORD *)(v44 + 72) * v19, (uint64_t)v11, (uint64_t (*)(_QWORD))v17);
    v23 = v17;
    v24 = v47;
    v25 = (uint64_t)v7 + *(int *)(v47 + 48);
    *v7 = v22;
    v7[1] = v21;
    sub_2452B792C((uint64_t)v11, v25, (uint64_t (*)(_QWORD))v23);
    v26 = *(int *)(v24 + 48);
    v27 = v46;
    v28 = (char *)v46 + v26;
    *v46 = v22;
    v27[1] = v21;
    sub_2452B792C(v25, (uint64_t)v27 + v26, (uint64_t (*)(_QWORD))v23);
    v29 = (uint64_t *)&v28[*(int *)(v45 + 32)];
    v31 = *v29;
    v30 = v29[1];
    swift_bridgeObjectRetain_n();
    sub_24526B470(v31, v30);
    v32 = (uint64_t)v28;
    v17 = v23;
    sub_2452B7B5C(v32, (uint64_t (*)(_QWORD))v23);
    sub_24526B484(0, 1uLL);
    if (v30 == 1)
    {
      sub_24526B484(v31, 1uLL);
      sub_245263F80((uint64_t)v7, (uint64_t *)&unk_25744FF90);
      sub_2452B7B5C((uint64_t)v11, (uint64_t (*)(_QWORD))v23);
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v40 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v37 = __OFADD__(v41++, 1);
      v12 = v49;
      if (v37)
      {
        __break(1u);
        return sub_24532AF4C(v40, v39, v41, v48);
      }
    }
    else
    {
      sub_24526B484(v31, v30);
      sub_245263F80((uint64_t)v7, (uint64_t *)&unk_25744FF90);
      sub_2452B7B5C((uint64_t)v11, (uint64_t (*)(_QWORD))v23);
      result = swift_bridgeObjectRelease();
      v12 = v49;
    }
  }
  v33 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v33 >= v43)
    return sub_24532AF4C(v40, v39, v41, v48);
  v34 = *(_QWORD *)(v42 + 8 * v33);
  v35 = v12 + 1;
  if (v34)
    goto LABEL_21;
  v35 = v12 + 2;
  if (v12 + 2 >= v43)
    return sub_24532AF4C(v40, v39, v41, v48);
  v34 = *(_QWORD *)(v42 + 8 * v35);
  if (v34)
    goto LABEL_21;
  v35 = v12 + 3;
  if (v12 + 3 >= v43)
    return sub_24532AF4C(v40, v39, v41, v48);
  v34 = *(_QWORD *)(v42 + 8 * v35);
  if (v34)
  {
LABEL_21:
    v16 = (v34 - 1) & v34;
    v49 = v35;
    v19 = __clz(__rbit64(v34)) + (v35 << 6);
    goto LABEL_5;
  }
  v36 = v12 + 4;
  if (v12 + 4 >= v43)
    return sub_24532AF4C(v40, v39, v41, v48);
  v34 = *(_QWORD *)(v42 + 8 * v36);
  if (v34)
  {
    v35 = v12 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v35 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v35 >= v43)
      return sub_24532AF4C(v40, v39, v41, v48);
    v34 = *(_QWORD *)(v42 + 8 * v35);
    ++v36;
    if (v34)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2452B0B74(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  int64_t v45;

  v33 = a2;
  v34 = a1;
  v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v4 = MEMORY[0x24BDAC7A8](v43);
  v42 = (uint64_t *)((char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v38 = (char *)&v32 - v6;
  v7 = type metadata accessor for PairingRelationship();
  v40 = *(_QWORD *)(v7 - 8);
  v41 = v7;
  result = MEMORY[0x24BDAC7A8](v7);
  v39 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v44 = (_QWORD *)a3;
  v11 = *(_QWORD *)(a3 + 64);
  v35 = 0;
  v36 = a3 + 64;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v37 = (unint64_t)(v12 + 63) >> 6;
  v16 = v38;
  v15 = (uint64_t)v39;
  while (1)
  {
    if (v14)
    {
      v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v45 = v10;
      v18 = v17 | (v10 << 6);
      goto LABEL_5;
    }
    v27 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v27 >= v37)
      return sub_24532AF4C(v34, v33, v35, v44);
    v28 = *(_QWORD *)(v36 + 8 * v27);
    v29 = v10 + 1;
    if (!v28)
    {
      v29 = v10 + 2;
      if (v10 + 2 >= v37)
        return sub_24532AF4C(v34, v33, v35, v44);
      v28 = *(_QWORD *)(v36 + 8 * v29);
      if (!v28)
      {
        v29 = v10 + 3;
        if (v10 + 3 >= v37)
          return sub_24532AF4C(v34, v33, v35, v44);
        v28 = *(_QWORD *)(v36 + 8 * v29);
        if (!v28)
          break;
      }
    }
LABEL_20:
    v14 = (v28 - 1) & v28;
    v45 = v29;
    v18 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_5:
    v19 = (uint64_t *)(v44[6] + 16 * v18);
    v20 = *v19;
    v21 = v19[1];
    sub_2452B792C(v44[7] + *(_QWORD *)(v40 + 72) * v18, v15, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v22 = v43;
    v23 = (uint64_t)v16 + *(int *)(v43 + 48);
    *v16 = v20;
    v16[1] = v21;
    sub_2452B792C(v15, v23, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v24 = *(int *)(v22 + 48);
    v25 = v42;
    v26 = (uint64_t)v42 + v24;
    *v42 = v20;
    v25[1] = v21;
    sub_2452B792C(v23, (uint64_t)v25 + v24, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    LODWORD(v20) = *(unsigned __int8 *)(v26 + *(int *)(v41 + 20) + 48);
    swift_bridgeObjectRetain_n();
    sub_2452B7B5C(v26, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    sub_245263F80((uint64_t)v16, (uint64_t *)&unk_25744FF90);
    sub_2452B7B5C(v15, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    result = swift_bridgeObjectRelease();
    v10 = v45;
    if ((_DWORD)v20 == 4)
    {
      *(unint64_t *)((char *)v34 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      if (__OFADD__(v35++, 1))
      {
        __break(1u);
        return sub_24532AF4C(v34, v33, v35, v44);
      }
    }
  }
  v30 = v10 + 4;
  if (v10 + 4 >= v37)
    return sub_24532AF4C(v34, v33, v35, v44);
  v28 = *(_QWORD *)(v36 + 8 * v30);
  if (v28)
  {
    v29 = v10 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v37)
      return sub_24532AF4C(v34, v33, v35, v44);
    v28 = *(_QWORD *)(v36 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2452B0E94(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t (*v17)();
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)();
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  int64_t v49;

  v39 = a2;
  v40 = a1;
  v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v4 = MEMORY[0x24BDAC7A8](v47);
  v46 = (uint64_t *)((char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v38 - v6);
  v8 = type metadata accessor for PairingRelationship();
  v44 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  result = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v48 = (_QWORD *)a3;
  v13 = *(_QWORD *)(a3 + 64);
  v41 = 0;
  v42 = a3 + 64;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v43 = (unint64_t)(v14 + 63) >> 6;
  v17 = type metadata accessor for PairingRelationship;
  while (v16)
  {
    v18 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v49 = v12;
    v19 = v18 | (v12 << 6);
LABEL_5:
    v20 = (uint64_t *)(v48[6] + 16 * v19);
    v22 = *v20;
    v21 = v20[1];
    sub_2452B792C(v48[7] + *(_QWORD *)(v44 + 72) * v19, (uint64_t)v11, (uint64_t (*)(_QWORD))v17);
    v23 = v17;
    v24 = v47;
    v25 = (uint64_t)v7 + *(int *)(v47 + 48);
    *v7 = v22;
    v7[1] = v21;
    sub_2452B792C((uint64_t)v11, v25, (uint64_t (*)(_QWORD))v23);
    v26 = *(int *)(v24 + 48);
    v27 = v46;
    v28 = (char *)v46 + v26;
    *v46 = v22;
    v27[1] = v21;
    sub_2452B792C(v25, (uint64_t)v27 + v26, (uint64_t (*)(_QWORD))v23);
    v29 = (uint64_t *)&v28[*(int *)(v45 + 32)];
    v31 = *v29;
    v30 = v29[1];
    swift_bridgeObjectRetain_n();
    sub_24526B470(v31, v30);
    v32 = (uint64_t)v28;
    v17 = v23;
    sub_2452B7B5C(v32, (uint64_t (*)(_QWORD))v23);
    if (v30 == 2)
    {
      sub_24526B484(v31, 2uLL);
      sub_24526B484(0, 2uLL);
      sub_24526B484(v31, 2uLL);
      sub_245263F80((uint64_t)v7, (uint64_t *)&unk_25744FF90);
      sub_2452B7B5C((uint64_t)v11, (uint64_t (*)(_QWORD))v23);
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v40 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v37 = __OFADD__(v41++, 1);
      v12 = v49;
      if (v37)
      {
        __break(1u);
        return sub_24532AF4C(v40, v39, v41, v48);
      }
    }
    else
    {
      sub_24526B470(v31, v30);
      sub_24526B484(v31, v30);
      sub_24526B484(0, 2uLL);
      sub_24526B484(v31, v30);
      sub_245263F80((uint64_t)v7, (uint64_t *)&unk_25744FF90);
      sub_2452B7B5C((uint64_t)v11, (uint64_t (*)(_QWORD))v23);
      result = swift_bridgeObjectRelease();
      v12 = v49;
    }
  }
  v33 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v33 >= v43)
    return sub_24532AF4C(v40, v39, v41, v48);
  v34 = *(_QWORD *)(v42 + 8 * v33);
  v35 = v12 + 1;
  if (v34)
    goto LABEL_21;
  v35 = v12 + 2;
  if (v12 + 2 >= v43)
    return sub_24532AF4C(v40, v39, v41, v48);
  v34 = *(_QWORD *)(v42 + 8 * v35);
  if (v34)
    goto LABEL_21;
  v35 = v12 + 3;
  if (v12 + 3 >= v43)
    return sub_24532AF4C(v40, v39, v41, v48);
  v34 = *(_QWORD *)(v42 + 8 * v35);
  if (v34)
  {
LABEL_21:
    v16 = (v34 - 1) & v34;
    v49 = v35;
    v19 = __clz(__rbit64(v34)) + (v35 << 6);
    goto LABEL_5;
  }
  v36 = v12 + 4;
  if (v12 + 4 >= v43)
    return sub_24532AF4C(v40, v39, v41, v48);
  v34 = *(_QWORD *)(v42 + 8 * v36);
  if (v34)
  {
    v35 = v12 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v35 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v35 >= v43)
      return sub_24532AF4C(v40, v39, v41, v48);
    v34 = *(_QWORD *)(v42 + 8 * v35);
    ++v36;
    if (v34)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2452B1234(unint64_t *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  unint64_t v59;
  uint64_t v61[2];
  unint64_t *v62;
  uint64_t v63;
  char *v64;
  _QWORD *v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v61[0] = a2;
  v62 = a1;
  v4 = sub_245387740();
  v76 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v64 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD50);
  MEMORY[0x24BDAC7A8](v70);
  v7 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Record.ID.Ownership(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v73 = (uint64_t)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v80 = (uint64_t)v61 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v79 = (uint64_t)v61 - v13;
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
  v14 = MEMORY[0x24BDAC7A8](v72);
  v71 = (uint64_t)v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v83 = (uint64_t)v61 - v16;
  v17 = type metadata accessor for RecordMetadata();
  v69 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v82 = (uint64_t)v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Record.ID(0);
  v67 = *(_QWORD *)(v19 - 8);
  v68 = v19;
  result = MEMORY[0x24BDAC7A8](v19);
  v81 = (uint64_t)v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = 0;
  v22 = 0;
  v74 = a3;
  v25 = a3[8];
  v24 = a3 + 8;
  v23 = v25;
  v26 = 1 << *((_BYTE *)v24 - 32);
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v28 = v27 & v23;
  v65 = v24;
  v66 = (unint64_t)(v26 + 63) >> 6;
  while (1)
  {
    if (v28)
    {
      v29 = v4;
      v77 = (v28 - 1) & v28;
      v78 = v22;
      v30 = __clz(__rbit64(v28)) | (v22 << 6);
      goto LABEL_22;
    }
    v31 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v31 >= v66)
      return sub_24532AF60(v62, v61[0], v63, v74);
    v32 = v65[v31];
    v33 = v22 + 1;
    if (!v32)
    {
      v33 = v22 + 2;
      if (v22 + 2 >= v66)
        return sub_24532AF60(v62, v61[0], v63, v74);
      v32 = v65[v33];
      if (!v32)
      {
        v33 = v22 + 3;
        if (v22 + 3 >= v66)
          return sub_24532AF60(v62, v61[0], v63, v74);
        v32 = v65[v33];
        if (!v32)
          break;
      }
    }
LABEL_21:
    v29 = v4;
    v77 = (v32 - 1) & v32;
    v78 = v33;
    v30 = __clz(__rbit64(v32)) + (v33 << 6);
LABEL_22:
    v35 = v74;
    v36 = v81;
    sub_2452B792C(v74[6] + *(_QWORD *)(v67 + 72) * v30, v81, type metadata accessor for Record.ID);
    v37 = v35[7];
    v38 = *(_QWORD *)(v69 + 72);
    v75 = v30;
    v39 = v82;
    sub_2452B792C(v37 + v38 * v30, v82, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v40 = v72;
    v41 = v83;
    v42 = v83 + *(int *)(v72 + 48);
    sub_2452B792C(v36, v83, type metadata accessor for Record.ID);
    sub_2452B792C(v39, v42, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v43 = *(int *)(v40 + 48);
    v44 = v71;
    v45 = v41;
    v46 = v71 + v43;
    sub_2452B792C(v45, v71, type metadata accessor for Record.ID);
    sub_2452B792C(v42, v46, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v47 = v79;
    sub_2452B792C(v44 + *(int *)(v68 + 24), v79, type metadata accessor for Record.ID.Ownership);
    sub_2452B7B5C(v44, type metadata accessor for Record.ID);
    v48 = v76;
    v49 = v80;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(v80, 1, 1, v29);
    v50 = (uint64_t)&v7[*(int *)(v70 + 48)];
    sub_2452B792C(v47, (uint64_t)v7, type metadata accessor for Record.ID.Ownership);
    sub_2452B792C(v49, v50, type metadata accessor for Record.ID.Ownership);
    v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
    if (v51((uint64_t)v7, 1, v29) == 1)
    {
      v4 = v29;
      if (v51(v50, 1, v29) != 1)
        goto LABEL_27;
      goto LABEL_5;
    }
    sub_2452B792C((uint64_t)v7, v73, type metadata accessor for Record.ID.Ownership);
    if (v51(v50, 1, v29) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v73, v29);
      v4 = v29;
LABEL_27:
      sub_245263F80((uint64_t)v7, &qword_25744FD50);
      goto LABEL_28;
    }
    v52 = v76;
    v53 = v73;
    v54 = v46;
    v55 = v64;
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 32))(v64, v50, v29);
    v56 = sub_245387710();
    v57 = *(void (**)(char *, uint64_t))(v52 + 8);
    v58 = v55;
    v46 = v54;
    v57(v58, v29);
    v57((char *)v53, v29);
    v4 = v29;
    if ((v56 & 1) != 0)
    {
LABEL_5:
      sub_2452B7B5C((uint64_t)v7, type metadata accessor for Record.ID.Ownership);
      sub_2452B7B5C(v80, type metadata accessor for Record.ID.Ownership);
      sub_2452B7B5C(v79, type metadata accessor for Record.ID.Ownership);
      sub_245263F80(v83, &qword_25744FD30);
      sub_2452B7B5C(v46, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      sub_2452B7B5C(v82, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      result = sub_2452B7B5C(v81, type metadata accessor for Record.ID);
      v28 = v77;
      v22 = v78;
    }
    else
    {
      sub_2452B7B5C((uint64_t)v7, type metadata accessor for Record.ID.Ownership);
LABEL_28:
      v28 = v77;
      v22 = v78;
      v59 = v75;
      sub_2452B7B5C(v80, type metadata accessor for Record.ID.Ownership);
      sub_2452B7B5C(v79, type metadata accessor for Record.ID.Ownership);
      sub_245263F80(v83, &qword_25744FD30);
      sub_2452B7B5C(v46, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      sub_2452B7B5C(v82, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      result = sub_2452B7B5C(v81, type metadata accessor for Record.ID);
      *(unint64_t *)((char *)v62 + ((v59 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v59;
      if (__OFADD__(v63++, 1))
      {
        __break(1u);
        return sub_24532AF60(v62, v61[0], v63, v74);
      }
    }
  }
  v34 = v22 + 4;
  if (v22 + 4 >= v66)
    return sub_24532AF60(v62, v61[0], v63, v74);
  v32 = v65[v34];
  if (v32)
  {
    v33 = v22 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v33 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v33 >= v66)
      return sub_24532AF60(v62, v61[0], v63, v74);
    v32 = v65[v33];
    ++v34;
    if (v32)
      goto LABEL_21;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_2452B18CC(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[2];

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_245330F70(v3);
  v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_2452B19B8(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_2452B1950(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_245330F84(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_2452B2724(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_2452B19B8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  void (*v98)(char *, uint64_t, uint64_t);
  char *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  void (*v107)(char *, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v112;
  unint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  BOOL v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  BOOL v138;
  uint64_t v139;
  char v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  BOOL v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  unint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void (*v184)(char *, uint64_t);
  void (*v185)(char *, uint64_t, uint64_t);
  _QWORD *v186;
  _QWORD *v187;
  _QWORD *v188;
  char *v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  _QWORD *v200;

  v190 = sub_2453876EC();
  v199 = *(_QWORD *)(v190 - 8);
  v2 = MEMORY[0x24BDAC7A8](v190);
  v189 = (char *)&v171 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v191 = (char *)&v171 - v4;
  v193 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v5 = *(_QWORD *)(v193 - 8);
  v6 = MEMORY[0x24BDAC7A8](v193);
  v178 = (uint64_t)&v171 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v194 = (uint64_t)&v171 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v188 = (uint64_t *)((char *)&v171 - v11);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v187 = (uint64_t *)((char *)&v171 - v13);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v186 = (uint64_t *)((char *)&v171 - v15);
  MEMORY[0x24BDAC7A8](v14);
  v200 = (uint64_t *)((char *)&v171 - v16);
  v17 = a1[1];
  result = sub_2453880E8();
  if (result >= v17)
  {
    if (v17 < 0)
      goto LABEL_140;
    if (v17)
      return sub_2452B2E0C(0, v17, 1, a1);
    return result;
  }
  if (v17 >= 0)
    v19 = v17;
  else
    v19 = v17 + 1;
  if (v17 < -1)
    goto LABEL_148;
  v174 = result;
  v181 = v5;
  if (v17 < 2)
  {
    v23 = (char *)MEMORY[0x24BEE4AF8];
    v180 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v173 = MEMORY[0x24BEE4AF8];
    if (v17 != 1)
    {
      v25 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_104:
      if (v25 >= 2)
      {
        v164 = *a1;
        do
        {
          v165 = v25 - 2;
          if (v25 < 2)
            goto LABEL_135;
          if (!v164)
            goto LABEL_147;
          v166 = *(_QWORD *)&v23[16 * v165 + 32];
          v167 = *(_QWORD *)&v23[16 * v25 + 24];
          v168 = v182;
          sub_2452B3298(v164 + *(_QWORD *)(v181 + 72) * v166, v164 + *(_QWORD *)(v181 + 72) * *(_QWORD *)&v23[16 * v25 + 16], v164 + *(_QWORD *)(v181 + 72) * v167, v180);
          if (v168)
            goto LABEL_116;
          if (v167 < v166)
            goto LABEL_136;
          v182 = 0;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v23 = sub_24532F690((uint64_t)v23);
          if (v165 >= *((_QWORD *)v23 + 2))
            goto LABEL_137;
          v169 = &v23[16 * v165 + 32];
          *(_QWORD *)v169 = v166;
          *((_QWORD *)v169 + 1) = v167;
          v170 = *((_QWORD *)v23 + 2);
          if (v25 > v170)
            goto LABEL_138;
          memmove(&v23[16 * v25 + 16], &v23[16 * v25 + 32], 16 * (v170 - v25));
          *((_QWORD *)v23 + 2) = v170 - 1;
          v25 = v170 - 1;
        }
        while (v170 > 2);
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)(v173 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v20 = v19 >> 1;
    v21 = sub_245387C38();
    *(_QWORD *)(v21 + 16) = v20;
    v22 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v173 = v21;
    v180 = v21 + v22;
  }
  v24 = 0;
  v23 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v26 = v24;
    v27 = v24 + 1;
    v179 = v24;
    if (v24 + 1 >= v17)
    {
      v72 = v182;
    }
    else
    {
      v175 = v23;
      v176 = *a1;
      v28 = v176;
      v29 = *(_QWORD *)(v181 + 72);
      v198 = v29;
      v192 = v24 + 1;
      v30 = v176 + v29 * v27;
      v31 = v200;
      sub_2452BC89C(v30, (uint64_t)v200, (uint64_t *)&unk_25744FF90);
      v197 = v17;
      v32 = v186;
      sub_2452BC89C(v28 + v29 * v26, (uint64_t)v186, (uint64_t *)&unk_25744FF90);
      v33 = v193;
      v34 = *(int *)(v193 + 48);
      v35 = v187;
      v36 = (uint64_t)v187 + v34;
      v37 = v31[1];
      *v187 = *v31;
      v35[1] = v37;
      sub_2452B792C((uint64_t)v31 + v34, v36, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v38 = type metadata accessor for PairingRelationship();
      v39 = *(void (**)(char *, uint64_t, uint64_t))(v199 + 16);
      v40 = v190;
      v39(v191, v36 + *(int *)(v38 + 24), v190);
      sub_2452B7B5C(v36, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v41 = *(int *)(v33 + 48);
      v42 = v188;
      v43 = (uint64_t)v188 + v41;
      v44 = v32[1];
      *v188 = *v32;
      v42[1] = v44;
      sub_2452B792C((uint64_t)v32 + v41, v43, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v195 = v38;
      v45 = v43 + *(int *)(v38 + 24);
      v46 = v189;
      v185 = v39;
      v39(v189, v45, v40);
      v47 = v43;
      v26 = v179;
      sub_2452B7B5C(v47, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v48 = v191;
      LODWORD(v196) = sub_24538768C();
      v49 = *(void (**)(char *, uint64_t))(v199 + 8);
      v50 = v46;
      v51 = v176;
      v49(v50, v40);
      v184 = v49;
      v49(v48, v40);
      v52 = (uint64_t)v32;
      v17 = v197;
      sub_245263F80(v52, (uint64_t *)&unk_25744FF90);
      sub_245263F80((uint64_t)v200, (uint64_t *)&unk_25744FF90);
      v53 = v198;
      v27 = v26 + 2;
      if (v26 + 2 >= v17)
      {
        v72 = v182;
      }
      else
      {
        v172 = a1;
        v183 = v198 * v192;
        v177 = v198 * v27;
        while (1)
        {
          v192 = v27;
          v54 = v200;
          sub_2452BC89C(v51 + v177, (uint64_t)v200, (uint64_t *)&unk_25744FF90);
          v55 = v186;
          sub_2452BC89C(v51 + v183, (uint64_t)v186, (uint64_t *)&unk_25744FF90);
          v56 = v193;
          v57 = *(int *)(v193 + 48);
          v58 = v187;
          v59 = (uint64_t)v187 + v57;
          v60 = v54[1];
          *v187 = *v54;
          v58[1] = v60;
          sub_2452B792C((uint64_t)v54 + v57, v59, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          v61 = v195;
          v62 = v190;
          v63 = v191;
          v64 = v185;
          v185(v191, v59 + *(int *)(v195 + 24), v190);
          sub_2452B7B5C(v59, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          v65 = *(int *)(v56 + 48);
          v66 = v188;
          v67 = (uint64_t)v188 + v65;
          v68 = v55[1];
          *v188 = *v55;
          v66[1] = v68;
          sub_2452B792C((uint64_t)v55 + v65, v67, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          v69 = v189;
          v64(v189, v67 + *(int *)(v61 + 24), v62);
          sub_2452B7B5C(v67, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          LODWORD(v67) = sub_24538768C();
          v70 = v69;
          v71 = v184;
          v184(v70, v62);
          v71(v63, v62);
          sub_245263F80((uint64_t)v55, (uint64_t *)&unk_25744FF90);
          sub_245263F80((uint64_t)v54, (uint64_t *)&unk_25744FF90);
          if (((v196 ^ v67) & 1) != 0)
            break;
          v27 = v192 + 1;
          v17 = v197;
          v53 = v198;
          v51 += v198;
          if (v197 == v192 + 1)
          {
            v27 = v197;
            v72 = v182;
            a1 = v172;
            v26 = v179;
            goto LABEL_24;
          }
        }
        v72 = v182;
        a1 = v172;
        v27 = v192;
        v26 = v179;
        v17 = v197;
        v53 = v198;
      }
LABEL_24:
      v23 = v175;
      if ((v196 & 1) != 0)
      {
        if (v27 < v26)
          goto LABEL_141;
        if (v26 < v27)
        {
          v73 = 0;
          v74 = v53 * (v27 - 1);
          v75 = v27 * v53;
          v76 = v26;
          v77 = v26 * v53;
          do
          {
            if (v76 != v27 + v73 - 1)
            {
              v182 = v72;
              v79 = v176;
              if (!v176)
                goto LABEL_146;
              v80 = v176 + v77;
              v196 = v176 + v74;
              sub_2452BC850(v176 + v77, v178, (uint64_t *)&unk_25744FF90);
              if (v77 < v74 || v80 >= v79 + v75)
              {
                v78 = v196;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                v78 = v196;
                if (v77 != v74)
                  swift_arrayInitWithTakeBackToFront();
              }
              sub_2452BC850(v178, v78, (uint64_t *)&unk_25744FF90);
              v72 = v182;
              v26 = v179;
              v53 = v198;
            }
            ++v76;
            --v73;
            v74 -= v53;
            v75 -= v53;
            v77 += v53;
          }
          while (v76 < v27 + v73);
          v23 = v175;
          v17 = v197;
        }
      }
    }
    if (v27 < v17)
    {
      if (__OFSUB__(v27, v26))
        goto LABEL_139;
      if (v27 - v26 < v174)
        break;
    }
LABEL_56:
    if (v27 < v26)
      goto LABEL_134;
    v182 = v72;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v192 = v27;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v23 = sub_24532F2D4(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
    v113 = *((_QWORD *)v23 + 2);
    v112 = *((_QWORD *)v23 + 3);
    v25 = v113 + 1;
    if (v113 >= v112 >> 1)
      v23 = sub_24532F2D4((char *)(v112 > 1), v113 + 1, 1, v23);
    *((_QWORD *)v23 + 2) = v25;
    v114 = v23 + 32;
    v115 = &v23[16 * v113 + 32];
    v116 = v192;
    *(_QWORD *)v115 = v26;
    *((_QWORD *)v115 + 1) = v116;
    if (v113)
    {
      while (1)
      {
        v117 = v25 - 1;
        if (v25 >= 4)
        {
          v122 = &v114[16 * v25];
          v123 = *((_QWORD *)v122 - 8);
          v124 = *((_QWORD *)v122 - 7);
          v128 = __OFSUB__(v124, v123);
          v125 = v124 - v123;
          if (v128)
            goto LABEL_123;
          v127 = *((_QWORD *)v122 - 6);
          v126 = *((_QWORD *)v122 - 5);
          v128 = __OFSUB__(v126, v127);
          v120 = v126 - v127;
          v121 = v128;
          if (v128)
            goto LABEL_124;
          v129 = v25 - 2;
          v130 = &v114[16 * v25 - 32];
          v132 = *(_QWORD *)v130;
          v131 = *((_QWORD *)v130 + 1);
          v128 = __OFSUB__(v131, v132);
          v133 = v131 - v132;
          if (v128)
            goto LABEL_126;
          v128 = __OFADD__(v120, v133);
          v134 = v120 + v133;
          if (v128)
            goto LABEL_129;
          if (v134 >= v125)
          {
            v152 = &v114[16 * v117];
            v154 = *(_QWORD *)v152;
            v153 = *((_QWORD *)v152 + 1);
            v128 = __OFSUB__(v153, v154);
            v155 = v153 - v154;
            if (v128)
              goto LABEL_133;
            v145 = v120 < v155;
            goto LABEL_93;
          }
        }
        else
        {
          if (v25 != 3)
          {
            v146 = *((_QWORD *)v23 + 4);
            v147 = *((_QWORD *)v23 + 5);
            v128 = __OFSUB__(v147, v146);
            v139 = v147 - v146;
            v140 = v128;
            goto LABEL_87;
          }
          v119 = *((_QWORD *)v23 + 4);
          v118 = *((_QWORD *)v23 + 5);
          v128 = __OFSUB__(v118, v119);
          v120 = v118 - v119;
          v121 = v128;
        }
        if ((v121 & 1) != 0)
          goto LABEL_125;
        v129 = v25 - 2;
        v135 = &v114[16 * v25 - 32];
        v137 = *(_QWORD *)v135;
        v136 = *((_QWORD *)v135 + 1);
        v138 = __OFSUB__(v136, v137);
        v139 = v136 - v137;
        v140 = v138;
        if (v138)
          goto LABEL_128;
        v141 = &v114[16 * v117];
        v143 = *(_QWORD *)v141;
        v142 = *((_QWORD *)v141 + 1);
        v128 = __OFSUB__(v142, v143);
        v144 = v142 - v143;
        if (v128)
          goto LABEL_131;
        if (__OFADD__(v139, v144))
          goto LABEL_132;
        if (v139 + v144 >= v120)
        {
          v145 = v120 < v144;
LABEL_93:
          if (v145)
            v117 = v129;
          goto LABEL_95;
        }
LABEL_87:
        if ((v140 & 1) != 0)
          goto LABEL_127;
        v148 = &v114[16 * v117];
        v150 = *(_QWORD *)v148;
        v149 = *((_QWORD *)v148 + 1);
        v128 = __OFSUB__(v149, v150);
        v151 = v149 - v150;
        if (v128)
          goto LABEL_130;
        if (v151 < v139)
          goto LABEL_14;
LABEL_95:
        v156 = v117 - 1;
        if (v117 - 1 >= v25)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!*a1)
          goto LABEL_145;
        v157 = &v114[16 * v156];
        v158 = *(_QWORD *)v157;
        v159 = v114;
        v160 = &v114[16 * v117];
        v161 = *((_QWORD *)v160 + 1);
        v162 = v182;
        sub_2452B3298(*a1 + *(_QWORD *)(v181 + 72) * *(_QWORD *)v157, *a1 + *(_QWORD *)(v181 + 72) * *(_QWORD *)v160, *a1 + *(_QWORD *)(v181 + 72) * v161, v180);
        if (v162)
        {
LABEL_116:
          swift_bridgeObjectRelease();
          *(_QWORD *)(v173 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
        if (v161 < v158)
          goto LABEL_120;
        if (v117 > *((_QWORD *)v23 + 2))
          goto LABEL_121;
        *(_QWORD *)v157 = v158;
        *(_QWORD *)&v159[16 * v156 + 8] = v161;
        v163 = *((_QWORD *)v23 + 2);
        if (v117 >= v163)
          goto LABEL_122;
        v182 = 0;
        v25 = v163 - 1;
        memmove(v160, v160 + 16, 16 * (v163 - 1 - v117));
        v114 = v159;
        *((_QWORD *)v23 + 2) = v163 - 1;
        if (v163 <= 2)
          goto LABEL_14;
      }
    }
    v25 = 1;
LABEL_14:
    v17 = a1[1];
    v24 = v192;
    if (v192 >= v17)
      goto LABEL_104;
  }
  if (__OFADD__(v26, v174))
    goto LABEL_142;
  if (v26 + v174 >= v17)
    v81 = v17;
  else
    v81 = v26 + v174;
  if (v81 >= v26)
  {
    if (v27 != v81)
    {
      v175 = v23;
      v182 = v72;
      v82 = *(_QWORD *)(v181 + 72);
      v83 = v82 * (v27 - 1);
      v183 = v82;
      v84 = v27 * v82;
      v177 = v81;
      do
      {
        v86 = 0;
        v192 = v27;
        v184 = (void (*)(char *, uint64_t))v84;
        v185 = (void (*)(char *, uint64_t, uint64_t))v83;
        while (1)
        {
          v87 = *a1;
          v196 = v84 + v86;
          v197 = v26;
          v88 = v84 + v86 + v87;
          v89 = v200;
          sub_2452BC89C(v88, (uint64_t)v200, (uint64_t *)&unk_25744FF90);
          v198 = v86;
          v195 = v83 + v86;
          v90 = v186;
          sub_2452BC89C(v83 + v86 + v87, (uint64_t)v186, (uint64_t *)&unk_25744FF90);
          v91 = v193;
          v92 = *(int *)(v193 + 48);
          v93 = v187;
          v94 = (uint64_t)v187 + v92;
          v95 = v89[1];
          *v187 = *v89;
          v93[1] = v95;
          sub_2452B792C((uint64_t)v89 + v92, v94, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          v96 = type metadata accessor for PairingRelationship();
          v97 = a1;
          v98 = *(void (**)(char *, uint64_t, uint64_t))(v199 + 16);
          v100 = v190;
          v99 = v191;
          v98(v191, v94 + *(int *)(v96 + 24), v190);
          sub_2452B7B5C(v94, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          v101 = *(int *)(v91 + 48);
          v102 = v188;
          v103 = (uint64_t)v188 + v101;
          v104 = v90[1];
          *v188 = *v90;
          v102[1] = v104;
          sub_2452B792C((uint64_t)v90 + v101, v103, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          v105 = v103 + *(int *)(v96 + 24);
          v106 = v189;
          v98(v189, v105, v100);
          sub_2452B7B5C(v103, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          LOBYTE(v103) = sub_24538768C();
          v107 = *(void (**)(char *, uint64_t))(v199 + 8);
          v107(v106, v100);
          v107(v99, v100);
          sub_245263F80((uint64_t)v90, (uint64_t *)&unk_25744FF90);
          sub_245263F80((uint64_t)v200, (uint64_t *)&unk_25744FF90);
          if ((v103 & 1) == 0)
            break;
          v108 = *v97;
          if (!*v97)
            goto LABEL_144;
          a1 = v97;
          v84 = (uint64_t)v184;
          v83 = (uint64_t)v185;
          v109 = v198;
          v110 = (uint64_t)v185 + v108 + v198;
          sub_2452BC850((uint64_t)v184 + v108 + v198, v194, (uint64_t *)&unk_25744FF90);
          swift_arrayInitWithTakeFrontToBack();
          sub_2452BC850(v194, v110, (uint64_t *)&unk_25744FF90);
          v86 = v109 - v183;
          v26 = v197 + 1;
          v85 = v192;
          if (v192 == v197 + 1)
            goto LABEL_49;
        }
        a1 = v97;
        v85 = v192;
        v84 = (uint64_t)v184;
        v83 = (uint64_t)v185;
LABEL_49:
        v27 = v85 + 1;
        v83 += v183;
        v84 += v183;
        v26 = v179;
      }
      while (v27 != v177);
      v27 = v177;
      v72 = v182;
      v23 = v175;
    }
    goto LABEL_56;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  result = sub_245387F74();
  __break(1u);
  return result;
}

uint64_t sub_2452B2724(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_2453880E8();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_2452B31CC(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_2452B39E8((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_24532F690((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_245387C38();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_245388274();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_245388274()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_24532F2D4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_24532F2D4((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_2452B39E8((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_245388274() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_245387F74();
  __break(1u);
  return result;
}

uint64_t sub_2452B2E0C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;

  v51 = a1;
  v58 = sub_2453876EC();
  v69 = *(_QWORD *)(v58 - 8);
  v7 = MEMORY[0x24BDAC7A8](v58);
  v57 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v56 = (char *)&v49 - v9;
  v63 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v10 = MEMORY[0x24BDAC7A8](v63);
  v64 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v55 = (uint64_t *)((char *)&v49 - v13);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v54 = (uint64_t *)((char *)&v49 - v15);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v53 = (uint64_t *)((char *)&v49 - v17);
  result = MEMORY[0x24BDAC7A8](v16);
  v68 = (uint64_t *)((char *)&v49 - v20);
  v62 = a3;
  v50 = a2;
  if (a3 != a2)
  {
    v21 = *(_QWORD *)(v19 + 72);
    v22 = v21 * (v62 - 1);
    v59 = v21;
    v23 = v21 * v62;
    v52 = a4;
    v24 = v56;
LABEL_5:
    v25 = 0;
    v67 = v51;
    v60 = v23;
    v61 = v22;
    while (1)
    {
      v26 = *a4;
      v66 = v23 + v25;
      v27 = v68;
      sub_2452BC89C(v23 + v25 + v26, (uint64_t)v68, (uint64_t *)&unk_25744FF90);
      v65 = v22 + v25;
      v28 = v22 + v25 + v26;
      v29 = v53;
      sub_2452BC89C(v28, (uint64_t)v53, (uint64_t *)&unk_25744FF90);
      v30 = v63;
      v31 = *(int *)(v63 + 48);
      v32 = v54;
      v33 = (uint64_t)v54 + v31;
      v34 = v27[1];
      *v54 = *v27;
      v32[1] = v34;
      sub_2452B792C((uint64_t)v27 + v31, v33, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v35 = type metadata accessor for PairingRelationship();
      v36 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 16);
      v37 = v58;
      v36(v24, v33 + *(int *)(v35 + 24), v58);
      sub_2452B7B5C(v33, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v38 = *(int *)(v30 + 48);
      v39 = v55;
      v40 = (uint64_t)v55 + v38;
      v41 = v29[1];
      *v55 = *v29;
      v39[1] = v41;
      sub_2452B792C((uint64_t)v29 + v38, v40, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      v42 = v40 + *(int *)(v35 + 24);
      v43 = v57;
      v36(v57, v42, v37);
      sub_2452B7B5C(v40, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
      LOBYTE(v40) = sub_24538768C();
      v44 = *(void (**)(char *, uint64_t))(v69 + 8);
      v44(v43, v37);
      v45 = v37;
      v23 = v60;
      v44(v24, v45);
      a4 = v52;
      v46 = (uint64_t)v29;
      v22 = v61;
      sub_245263F80(v46, (uint64_t *)&unk_25744FF90);
      result = sub_245263F80((uint64_t)v68, (uint64_t *)&unk_25744FF90);
      if ((v40 & 1) == 0)
      {
LABEL_4:
        v22 += v59;
        v23 += v59;
        if (++v62 == v50)
          return result;
        goto LABEL_5;
      }
      v47 = *a4;
      if (!*a4)
        break;
      v48 = v47 + v22 + v25;
      sub_2452BC850(v47 + v23 + v25, v64, (uint64_t *)&unk_25744FF90);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_2452BC850(v64, v48, (uint64_t *)&unk_25744FF90);
      v25 -= v59;
      if (v62 == ++v67)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2452B31CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_245388274(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2452B3298(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  char *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void (*v70)(char *, uint64_t);
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t result;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  _QWORD *v84;
  _QWORD *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;

  v88 = sub_2453876EC();
  v90 = *(_QWORD *)(v88 - 8);
  v8 = MEMORY[0x24BDAC7A8](v88);
  v87 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v86 = (char *)&v76 - v10;
  v91 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v11 = MEMORY[0x24BDAC7A8](v91);
  v84 = (uint64_t *)((char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x24BDAC7A8](v11);
  v85 = (uint64_t *)((char *)&v76 - v14);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v82 = (uint64_t *)((char *)&v76 - v16);
  MEMORY[0x24BDAC7A8](v15);
  v83 = (uint64_t *)((char *)&v76 - v17);
  v19 = *(_QWORD *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v19 == -1)
    goto LABEL_61;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1)
    goto LABEL_62;
  v21 = (uint64_t)(a2 - a1) / v19;
  v95 = a1;
  v94 = a4;
  v22 = v20 / v19;
  if (v21 >= v20 / v19)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v19;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v49 = a4 + v24;
      v93 = a4 + v24;
      v95 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        v51 = -v19;
        v78 = a1;
        v79 = a4;
        v77 = -v19;
        v52 = v82;
        v53 = v91;
        v54 = v88;
        do
        {
          v92 = a2;
          v89 = a3;
          v81 = a3 + v51;
          v55 = v83;
          sub_2452BC89C(v49 + v51, (uint64_t)v83, (uint64_t *)&unk_25744FF90);
          v80 = a2 + v51;
          sub_2452BC89C(a2 + v51, (uint64_t)v52, (uint64_t *)&unk_25744FF90);
          v56 = *(int *)(v53 + 48);
          v57 = v85;
          v58 = (uint64_t)v85 + v56;
          v59 = v55[1];
          *v85 = *v55;
          v57[1] = v59;
          sub_2452B792C((uint64_t)v55 + v56, v58, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          v60 = type metadata accessor for PairingRelationship();
          v61 = v90;
          v62 = *(void (**)(char *, uint64_t, uint64_t))(v90 + 16);
          v63 = v86;
          v62(v86, v58 + *(int *)(v60 + 24), v54);
          sub_2452B7B5C(v58, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          v64 = *(int *)(v53 + 48);
          v65 = v84;
          v66 = (uint64_t)v84 + v64;
          v67 = v52[1];
          *v84 = *v52;
          v65[1] = v67;
          sub_2452B792C((uint64_t)v52 + v64, v66, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          v68 = v66 + *(int *)(v60 + 24);
          v69 = v87;
          v62(v87, v68, v54);
          sub_2452B7B5C(v66, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
          LOBYTE(v66) = sub_24538768C();
          v70 = *(void (**)(char *, uint64_t))(v61 + 8);
          v70(v69, v54);
          v70(v63, v54);
          sub_245263F80((uint64_t)v52, (uint64_t *)&unk_25744FF90);
          sub_245263F80((uint64_t)v55, (uint64_t *)&unk_25744FF90);
          if ((v66 & 1) != 0)
          {
            v51 = v77;
            a3 = v81;
            if (v89 < v92 || v81 >= v92)
            {
              v73 = v80;
              swift_arrayInitWithTakeFrontToBack();
              v72 = v78;
              v71 = v79;
            }
            else
            {
              v72 = v78;
              v71 = v79;
              v73 = v80;
              if (v89 != v92)
                swift_arrayInitWithTakeBackToFront();
            }
            v95 += v51;
          }
          else
          {
            v73 = v92;
            v74 = v93;
            v93 += v77;
            v51 = v77;
            a3 = v81;
            if (v89 < v74 || v81 >= v74)
            {
              swift_arrayInitWithTakeFrontToBack();
              v72 = v78;
              v71 = v79;
            }
            else
            {
              v72 = v78;
              v71 = v79;
              if (v89 != v74)
                swift_arrayInitWithTakeBackToFront();
            }
          }
          v49 = v93;
          if (v93 <= v71)
            break;
          a2 = v73;
        }
        while (v73 > v72);
      }
      goto LABEL_59;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v19;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v81 = a4 + v23;
    v93 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      v89 = a3;
      v80 = v19;
      v26 = v86;
      v27 = v88;
      do
      {
        v92 = a2;
        v28 = v83;
        sub_2452BC89C(a2, (uint64_t)v83, (uint64_t *)&unk_25744FF90);
        v29 = v82;
        sub_2452BC89C(a4, (uint64_t)v82, (uint64_t *)&unk_25744FF90);
        v30 = v91;
        v31 = *(int *)(v91 + 48);
        v32 = v85;
        v33 = (uint64_t)v85 + v31;
        v34 = v28[1];
        *v85 = *v28;
        v32[1] = v34;
        sub_2452B792C((uint64_t)v28 + v31, v33, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        v35 = type metadata accessor for PairingRelationship();
        v36 = *(void (**)(char *, uint64_t, uint64_t))(v90 + 16);
        v36(v26, v33 + *(int *)(v35 + 24), v27);
        sub_2452B7B5C(v33, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        v37 = *(int *)(v30 + 48);
        v38 = v84;
        v39 = (uint64_t)v84 + v37;
        v40 = v29[1];
        *v84 = *v29;
        v38[1] = v40;
        sub_2452B792C((uint64_t)v29 + v37, v39, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        v41 = v87;
        v36(v87, v39 + *(int *)(v35 + 24), v27);
        sub_2452B7B5C(v39, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
        LOBYTE(v35) = sub_24538768C();
        v42 = *(void (**)(char *, uint64_t))(v90 + 8);
        v42(v41, v27);
        v42(v26, v27);
        sub_245263F80((uint64_t)v29, (uint64_t *)&unk_25744FF90);
        sub_245263F80((uint64_t)v28, (uint64_t *)&unk_25744FF90);
        v43 = v95;
        if ((v35 & 1) != 0)
        {
          v44 = v80;
          v45 = v92 + v80;
          if (v95 < v92 || v95 >= v45)
          {
            swift_arrayInitWithTakeFrontToBack();
            v46 = v89;
          }
          else
          {
            v46 = v89;
            if (v95 == v92)
              v43 = v92;
            else
              swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v47 = v92;
          v44 = v80;
          v48 = v94 + v80;
          if (v95 < v94 || v95 >= v48)
          {
            swift_arrayInitWithTakeFrontToBack();
            v46 = v89;
          }
          else
          {
            v46 = v89;
            if (v95 != v94)
              swift_arrayInitWithTakeBackToFront();
          }
          v94 = v48;
          v45 = v47;
        }
        v95 = v43 + v44;
        a4 = v94;
        if (v94 >= v81)
          break;
        a2 = v45;
      }
      while (v45 < v46);
    }
LABEL_59:
    sub_24532F3CC(&v95, &v94, (uint64_t *)&v93);
    return 1;
  }
LABEL_63:
  result = sub_245387FBC();
  __break(1u);
  return result;
}

uint64_t sub_2452B39E8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_245388274() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_245388274() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_24532F4DC((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_245387FBC();
  __break(1u);
  return result;
}

uint64_t sub_2452B3C80(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_2452B3D20(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

_QWORD *sub_2452B3E04(uint64_t a1, __int128 *a2, _QWORD *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  __int128 v16;
  uint64_t v17;
  _UNKNOWN **v18;

  v17 = type metadata accessor for Replicator();
  v18 = &protocol witness table for Replicator;
  *(_QWORD *)&v16 = a1;
  a3[12] = 0;
  a3[13] = -1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574503B8);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24538A110;
  v7 = (void *)*MEMORY[0x24BE6B440];
  v8 = (void *)*MEMORY[0x24BE6B450];
  *(_QWORD *)(v6 + 32) = *MEMORY[0x24BE6B440];
  *(_QWORD *)(v6 + 40) = v8;
  v9 = (void *)*MEMORY[0x24BE6B420];
  v10 = (void *)*MEMORY[0x24BE6B428];
  *(_QWORD *)(v6 + 48) = *MEMORY[0x24BE6B420];
  *(_QWORD *)(v6 + 56) = v10;
  a3[14] = v6;
  sub_2452B7C5C(&v16, (uint64_t)(a3 + 2));
  sub_2452B7C5C(a2, (uint64_t)(a3 + 7));
  v11 = v7;
  v12 = v8;
  v13 = v9;
  v14 = v10;
  return a3;
}

uint64_t sub_2452B3EEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_2452B3F24(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6, __int128 *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t active;
  uint64_t v50;
  uint64_t ObjectType;
  uint64_t v52;
  void (*v53)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  int v67;
  int v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  _UNKNOWN **v83;

  v15 = v14;
  v77 = a8;
  v78 = a5;
  v69 = a3;
  v70 = a4;
  v71 = a1;
  v72 = a2;
  v60 = a10;
  v59 = a9;
  v75 = a11;
  v76 = a14;
  v73 = a12;
  v74 = a13;
  v62 = sub_245387740();
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_245387D70();
  v57 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_245387D4C();
  v23 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v22);
  v24 = sub_245387950();
  MEMORY[0x24BDAC7A8](v24);
  v67 = *a6;
  v66 = *a7;
  v65 = *((_QWORD *)a7 + 2);
  v64 = *((_QWORD *)a7 + 3);
  v63 = *((unsigned __int8 *)a7 + 32);
  v68 = *((unsigned __int8 *)a7 + 33);
  *(_OWORD *)(v15 + 56) = 0u;
  *(_OWORD *)(v15 + 72) = 0u;
  *(_QWORD *)(v15 + 88) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FEE0);
  swift_allocObject();
  *(_QWORD *)(v15 + 144) = sub_245387884();
  *(_QWORD *)(v15 + 152) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FEE8);
  swift_allocObject();
  *(_QWORD *)(v15 + 160) = sub_245387884();
  *(_QWORD *)(v15 + 168) = 0;
  sub_24525C748();
  sub_245387944();
  *(_QWORD *)&v81 = MEMORY[0x24BEE4AF8];
  sub_24525C6C4((unint64_t *)&unk_257450050, v23, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450020);
  sub_24526381C((unint64_t *)&qword_257450030, (uint64_t *)&unk_257450020, MEMORY[0x24BEE12C8]);
  v25 = v59;
  v26 = v60;
  sub_245387E3C();
  (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v21, *MEMORY[0x24BEE5758], v58);
  v27 = sub_245387D94();
  v28 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v15 + 232) = v27;
  *(_QWORD *)(v15 + 240) = v28;
  *(_QWORD *)(v15 + 248) = 0;
  *(_QWORD *)(v15 + 256) = 0;
  v29 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v15 + 424) = MEMORY[0x24BEE4B08];
  *(_BYTE *)(v15 + 432) = 0;
  sub_245387734();
  v30 = sub_245387704();
  v32 = v31;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v19, v62);
  *(_QWORD *)(v15 + 488) = v30;
  *(_QWORD *)(v15 + 496) = v32;
  *(_QWORD *)(v15 + 504) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v15 + 512) = v28;
  *(_QWORD *)(v15 + 520) = v28;
  type metadata accessor for BasicTimer();
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25440BFA0);
  v34 = swift_allocObject();
  *(_DWORD *)(v34 + 16) = 0;
  *(_QWORD *)(v33 + 24) = v34;
  *(_QWORD *)(v15 + 528) = v33;
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = 0;
  v36 = swift_allocObject();
  *(_DWORD *)(v36 + 16) = 0;
  *(_QWORD *)(v35 + 24) = v36;
  *(_QWORD *)(v15 + 536) = v35;
  *(_BYTE *)(v15 + 544) = 1;
  *(_QWORD *)(v15 + 552) = 0;
  *(_BYTE *)(v15 + 560) = 1;
  *(_QWORD *)(v15 + 568) = 0;
  *(_QWORD *)(v15 + 576) = 0xF000000000000000;
  *(_QWORD *)(v15 + 584) = v28;
  *(_QWORD *)(v15 + 592) = v29;
  v37 = v69;
  v38 = v70;
  *(_QWORD *)(v15 + 600) = 0;
  v39 = v72;
  *(_QWORD *)(v15 + 176) = v71;
  *(_QWORD *)(v15 + 184) = v39;
  v40 = v39;
  sub_24525E4F0((uint64_t)v37, v15 + 192);
  sub_24525E4F0(v38, v15 + 264);
  sub_24525E4F0(v78, v15 + 304);
  *(_BYTE *)(v15 + 96) = v67;
  *(_OWORD *)(v15 + 104) = v66;
  v41 = v64;
  *(_QWORD *)(v15 + 120) = v65;
  *(_QWORD *)(v15 + 128) = v41;
  *(_BYTE *)(v15 + 136) = v63;
  *(_BYTE *)(v15 + 137) = v68;
  sub_24525E4F0(v77, v15 + 344);
  v42 = v25;
  sub_24525E4F0(v25, v15 + 384);
  v43 = v26;
  sub_24525E4F0(v26, v15 + 440);
  v44 = v74;
  *(_QWORD *)(v15 + 248) = v73;
  *(_QWORD *)(v15 + 256) = v44;
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  v46 = v37[3];
  v45 = v37[4];
  __swift_project_boxed_opaque_existential_1(v37, v46);
  *(_BYTE *)(v15 + 544) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v45 + 8) + 8) + 16))(v46) & 1;
  v47 = sub_2453315E8(v75);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 480) = v47;
  v48 = v76;
  sub_2452BC89C(v76, (uint64_t)&v79, &qword_2574502E0);
  if (v80)
  {
    sub_2452B7C5C(&v79, (uint64_t)&v81);
  }
  else
  {
    active = type metadata accessor for ActiveWatchIDSIDProvider();
    v50 = swift_allocObject();
    *(_QWORD *)(v50 + 16) = 0;
    v82 = active;
    v83 = &off_251641D28;
    *(_QWORD *)&v81 = v50;
    sub_245263F80((uint64_t)&v79, &qword_2574502E0);
  }
  sub_2452B7C5C(&v81, v15 + 16);
  ObjectType = swift_getObjectType();
  v52 = v40;
  v53 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v40 + 24);
  v54 = swift_retain();
  v53(v54, &protocol witness table for Replicator, ObjectType, v52);
  swift_release();
  sub_245263F80(v48, &qword_2574502E0);
  __swift_destroy_boxed_opaque_existential_1(v43);
  __swift_destroy_boxed_opaque_existential_1(v42);
  __swift_destroy_boxed_opaque_existential_1(v77);
  __swift_destroy_boxed_opaque_existential_1(v78);
  __swift_destroy_boxed_opaque_existential_1(v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return v15;
}

uint64_t sub_2452B4540()
{
  uint64_t v0;

  return sub_24526CFEC(v0);
}

uint64_t sub_2452B4548()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2452B456C()
{
  return sub_2452732DC();
}

uint64_t sub_2452B4574()
{
  return objectdestroy_34Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_2452B458C(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  return sub_245274BE4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_2452B4594(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  unint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  int64_t v48;

  v34 = a2;
  v45 = a4;
  v35 = a1;
  v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v5 = MEMORY[0x24BDAC7A8](v44);
  v43 = (uint64_t *)((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v39 = (char *)&v33 - v7;
  v8 = type metadata accessor for PairingRelationship();
  v41 = *(_QWORD *)(v8 - 8);
  v42 = v8;
  result = MEMORY[0x24BDAC7A8](v8);
  v40 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v46 = (_QWORD *)a3;
  v12 = *(_QWORD *)(a3 + 64);
  v36 = 0;
  v37 = a3 + 64;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v38 = (unint64_t)(v13 + 63) >> 6;
  v16 = v39;
  v17 = (uint64_t)v40;
  while (1)
  {
    if (v15)
    {
      v47 = (v15 - 1) & v15;
      v48 = v11;
      v18 = __clz(__rbit64(v15)) | (v11 << 6);
      goto LABEL_5;
    }
    v28 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v28 >= v38)
      return sub_24532AF4C(v35, v34, v36, v46);
    v29 = *(_QWORD *)(v37 + 8 * v28);
    v30 = v11 + 1;
    if (!v29)
    {
      v30 = v11 + 2;
      if (v11 + 2 >= v38)
        return sub_24532AF4C(v35, v34, v36, v46);
      v29 = *(_QWORD *)(v37 + 8 * v30);
      if (!v29)
      {
        v30 = v11 + 3;
        if (v11 + 3 >= v38)
          return sub_24532AF4C(v35, v34, v36, v46);
        v29 = *(_QWORD *)(v37 + 8 * v30);
        if (!v29)
          break;
      }
    }
LABEL_20:
    v47 = (v29 - 1) & v29;
    v48 = v30;
    v18 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_5:
    v19 = (uint64_t *)(v46[6] + 16 * v18);
    v21 = *v19;
    v20 = v19[1];
    sub_2452B792C(v46[7] + *(_QWORD *)(v41 + 72) * v18, v17, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v22 = v44;
    v23 = (uint64_t)v16 + *(int *)(v44 + 48);
    *v16 = v21;
    v16[1] = v20;
    sub_2452B792C(v17, v23, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    v24 = *(_QWORD *)(v45 + 480);
    v25 = *(int *)(v22 + 48);
    v26 = v43;
    v27 = (uint64_t)v43 + v25;
    *v43 = v21;
    v26[1] = v20;
    sub_2452B792C(v23, (uint64_t)v26 + v25, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    LOBYTE(v23) = *(_BYTE *)(v27 + *(int *)(v42 + 20) + 48);
    swift_bridgeObjectRetain_n();
    sub_2452B7B5C(v27, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    LOBYTE(v24) = sub_24531DAB0(v23, v24);
    sub_245263F80((uint64_t)v16, (uint64_t *)&unk_25744FF90);
    sub_2452B7B5C(v17, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    result = swift_bridgeObjectRelease();
    v11 = v48;
    v15 = v47;
    if ((v24 & 1) == 0)
    {
      *(unint64_t *)((char *)v35 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      if (__OFADD__(v36++, 1))
      {
        __break(1u);
        return sub_24532AF4C(v35, v34, v36, v46);
      }
    }
  }
  v31 = v11 + 4;
  if (v11 + 4 >= v38)
    return sub_24532AF4C(v35, v34, v36, v46);
  v29 = *(_QWORD *)(v37 + 8 * v31);
  if (v29)
  {
    v30 = v11 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v30 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v30 >= v38)
      return sub_24532AF4C(v35, v34, v36, v46);
    v29 = *(_QWORD *)(v37 + 8 * v30);
    ++v31;
    if (v29)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2452B48D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t result;
  int64_t v7;
  unint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  uint64_t v30;
  uint64_t ObjectType;
  __int128 v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v40;
  unint64_t v41;
  __int128 v42;
  __int128 v43[5];
  int64_t v44;

  v37 = a1 + 64;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  if (v2 < 64)
    v3 = ~(-1 << v2);
  else
    v3 = -1;
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v5 = (uint64_t *)(a2 + 592);
  swift_bridgeObjectRetain();
  result = swift_beginAccess();
  v7 = 0;
  v38 = (unint64_t)(v2 + 63) >> 6;
  v36 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v4)
    goto LABEL_7;
LABEL_8:
  v10 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v10 < v38)
    {
      v11 = *(_QWORD *)(v37 + 8 * v10);
      ++v7;
      if (v11)
        goto LABEL_22;
      v7 = v10 + 1;
      if (v10 + 1 >= v38)
        goto LABEL_51;
      v11 = *(_QWORD *)(v37 + 8 * v7);
      if (v11)
        goto LABEL_22;
      v7 = v10 + 2;
      if (v10 + 2 >= v38)
        goto LABEL_51;
      v11 = *(_QWORD *)(v37 + 8 * v7);
      if (v11)
        goto LABEL_22;
      v7 = v10 + 3;
      if (v10 + 3 >= v38)
        goto LABEL_51;
      v11 = *(_QWORD *)(v37 + 8 * v7);
      if (v11)
      {
LABEL_22:
        v4 = (v11 - 1) & v11;
        for (i = __clz(__rbit64(v11)) + (v7 << 6); ; i = v8 | (v7 << 6))
        {
          v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 32 * i);
          v15 = *v13;
          v14 = v13[1];
          v17 = v13[2];
          v16 = v13[3];
          v18 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
          v19 = *v5;
          if (*(_QWORD *)(*v5 + 16))
          {
            v40 = *v13;
            v41 = v4;
            sub_24538843C();
            v20 = v14;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain_n();
            swift_retain();
            swift_bridgeObjectRetain();
            sub_245387B6C();
            v21 = sub_245388478();
            v22 = -1 << *(_BYTE *)(v19 + 32);
            v23 = v21 & ~v22;
            if (((*(_QWORD *)(v19 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
            {
              v44 = v7;
              v24 = *(_QWORD *)(v19 + 48);
              v25 = (_QWORD *)(v24 + 16 * v23);
              v26 = *v25 == v17 && v25[1] == v16;
              if (v26 || (sub_245388274() & 1) != 0)
              {
LABEL_6:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v7 = v44;
                v4 = v41;
                swift_release();
                swift_bridgeObjectRelease();
                result = swift_bridgeObjectRelease();
                if (!v41)
                  goto LABEL_8;
                goto LABEL_7;
              }
              v27 = ~v22;
              while (1)
              {
                v23 = (v23 + 1) & v27;
                if (((*(_QWORD *)(v19 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
                  break;
                v28 = (_QWORD *)(v24 + 16 * v23);
                v29 = *v28 == v17 && v28[1] == v16;
                if (v29 || (sub_245388274() & 1) != 0)
                  goto LABEL_6;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v7 = v44;
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v14 = v20;
            v15 = v40;
            v4 = v41;
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (MEMORY[0x24953323C](v18 + 16))
          {
            v30 = *(_QWORD *)(v18 + 24);
            ObjectType = swift_getObjectType();
            (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v30 + 16))(v43, ObjectType, v30);
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            v32 = v43[0];
          }
          else
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v32 = 0uLL;
          }
          v42 = v32;
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_245324138(0, v36[2] + 1, 1, v36);
            v36 = (_QWORD *)result;
          }
          v34 = v36[2];
          v33 = v36[3];
          if (v34 >= v33 >> 1)
          {
            result = (uint64_t)sub_245324138((_QWORD *)(v33 > 1), v34 + 1, 1, v36);
            v36 = (_QWORD *)result;
          }
          v36[2] = v34 + 1;
          v35 = &v36[6 * v34];
          v35[4] = v15;
          v35[5] = v14;
          v35[6] = v17;
          v35[7] = v16;
          *((_OWORD *)v35 + 4) = v42;
          if (!v4)
            goto LABEL_8;
LABEL_7:
          v8 = __clz(__rbit64(v4));
          v4 &= v4 - 1;
        }
      }
      v12 = v10 + 4;
      if (v12 < v38)
      {
        v11 = *(_QWORD *)(v37 + 8 * v12);
        v7 = v12;
        if (!v11)
        {
          while (1)
          {
            v7 = v12 + 1;
            if (__OFADD__(v12, 1))
              goto LABEL_53;
            if (v7 >= v38)
              goto LABEL_51;
            v11 = *(_QWORD *)(v37 + 8 * v7);
            ++v12;
            if (v11)
              goto LABEL_22;
          }
        }
        goto LABEL_22;
      }
    }
LABEL_51:
    swift_release();
    return (uint64_t)v36;
  }
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_2452B4D30(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  BOOL v26;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t *v34;
  unint64_t v35;
  unint64_t v36;

  v31 = a3 + 64;
  v4 = 1 << *(_BYTE *)(a3 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a3 + 64);
  v34 = (uint64_t *)(a4 + 592);
  result = swift_beginAccess();
  v30 = 0;
  v8 = 0;
  v32 = (unint64_t)(v4 + 63) >> 6;
  while (v6)
  {
    v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v10 = v9 | (v8 << 6);
LABEL_22:
    v14 = *v34;
    if (*(_QWORD *)(*v34 + 16))
    {
      v36 = v6;
      v35 = v10;
      v15 = *(_QWORD *)(a3 + 56) + 48 * v10;
      v16 = *(_QWORD *)(v15 + 16);
      v17 = *(_QWORD *)(v15 + 24);
      sub_24538843C();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_245387B6C();
      v18 = sub_245388478();
      v19 = -1 << *(_BYTE *)(v14 + 32);
      v20 = v18 & ~v19;
      if (((*(_QWORD *)(v14 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
        goto LABEL_37;
      v21 = *(_QWORD *)(v14 + 48);
      v22 = (_QWORD *)(v21 + 16 * v20);
      v23 = *v22 == v16 && v22[1] == v17;
      if (!v23 && (sub_245388274() & 1) == 0)
      {
        v24 = ~v19;
        while (1)
        {
          v20 = (v20 + 1) & v24;
          if (((*(_QWORD *)(v14 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
            break;
          v25 = (_QWORD *)(v21 + 16 * v20);
          v26 = *v25 == v16 && v25[1] == v17;
          if (v26 || (sub_245388274() & 1) != 0)
            goto LABEL_5;
        }
LABEL_37:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        result = swift_bridgeObjectRelease();
        v6 = v36;
        v10 = v35;
        goto LABEL_38;
      }
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = v36;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    else
    {
LABEL_38:
      *(unint64_t *)((char *)a1 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      if (__OFADD__(v30++, 1))
      {
        __break(1u);
        return sub_24532B55C(a1, a2, v30, a3);
      }
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_43;
  }
  if (v11 >= v32)
    return sub_24532B55C(a1, a2, v30, a3);
  v12 = *(_QWORD *)(v31 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_21;
  v8 = v11 + 1;
  if (v11 + 1 >= v32)
    return sub_24532B55C(a1, a2, v30, a3);
  v12 = *(_QWORD *)(v31 + 8 * v8);
  if (v12)
    goto LABEL_21;
  v8 = v11 + 2;
  if (v11 + 2 >= v32)
    return sub_24532B55C(a1, a2, v30, a3);
  v12 = *(_QWORD *)(v31 + 8 * v8);
  if (v12)
  {
LABEL_21:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_22;
  }
  v13 = v11 + 3;
  if (v13 >= v32)
    return sub_24532B55C(a1, a2, v30, a3);
  v12 = *(_QWORD *)(v31 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v32)
      return sub_24532B55C(a1, a2, v30, a3);
    v12 = *(_QWORD *)(v31 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_2452B509C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_245275084(v1, a1);
}

uint64_t sub_2452B50B4()
{
  uint64_t v0;

  return sub_245275114(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2452B50C0()
{
  return swift_deallocObject();
}

uint64_t sub_2452B50D0()
{
  return swift_deallocObject();
}

uint64_t sub_2452B50E0()
{
  return swift_deallocObject();
}

uint64_t sub_2452B50F0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_245275788(v1, a1);
}

uint64_t sub_2452B5108()
{
  return objectdestroy_34Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_2452B5120()
{
  uint64_t v0;

  return sub_245275814(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2452B5128()
{
  return swift_deallocObject();
}

uint64_t sub_2452B5138()
{
  return objectdestroy_34Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_2452B5150()
{
  return swift_deallocObject();
}

uint64_t sub_2452B5160()
{
  return objectdestroy_34Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_2452B5178()
{
  return swift_deallocObject();
}

uint64_t sub_2452B5188@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_245275F14(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_2452B51A0()
{
  uint64_t v0;

  return sub_24527A5E4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(uint64_t, uint64_t, _QWORD))MetadataStoring.pairingRelationship(relationshipID:));
}

uint64_t sub_2452B51C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_24527608C(v1[2], v1[3], v1[4], a1);
}

unint64_t sub_2452B51DC@<X0>(uint64_t a1@<X8>)
{
  return sub_2452B77E0(a1);
}

uint64_t sub_2452B51F0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2452B5224()
{
  return sub_2452B7C38((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_245276578);
}

uint64_t sub_2452B5230()
{
  return swift_deallocObject();
}

uint64_t sub_2452B5240()
{
  return sub_2452B77B8();
}

uint64_t sub_2452B5254()
{
  return objectdestroy_113Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

void sub_2452B526C()
{
  uint64_t v0;

  Replicator._queue_removePairingRelationship(remoteDeviceID:)(*(Swift::String *)(v0 + 24));
}

uint64_t sub_2452B5294()
{
  return swift_deallocObject();
}

void sub_2452B52A4()
{
  sub_245272320(4);
}

uint64_t sub_2452B52AC()
{
  return swift_deallocObject();
}

uint64_t sub_2452B52BC()
{
  sub_24526F738();
  return sub_24526E14C();
}

uint64_t sub_2452B52D0()
{
  uint64_t v0;

  return sub_24527A5E4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(uint64_t, uint64_t, _QWORD))MetadataStoring.metadata(for:));
}

uint64_t sub_2452B52F0@<X0>(uint64_t *a1@<X8>)
{
  return sub_2452B767C(a1);
}

uint64_t sub_2452B5304@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_24527A808(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_2452B5320()
{
  uint64_t *v0;

  return sub_24527A9CC(v0[2], v0[3], v0[4]);
}

uint64_t sub_2452B533C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2452B5370(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_BYTE *)(v1 + 48);
  v10 = *(_QWORD *)(v1 + 32);
  v8 = v4;
  v9 = v5;
  v6 = sub_24527B988(v3, &v10, (uint64_t)&v8);
  return a1(v6);
}

os_log_t sub_2452B53D0()
{
  uint64_t v0;

  return sub_24527ABE4(*(NSObject **)(v0 + 24));
}

uint64_t sub_2452B53F4()
{
  return objectdestroy_34Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_2452B540C(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_BYTE *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 32);
  v8 = v4;
  v5 = sub_24527C32C(v3, (uint64_t)&v7);
  return a1(v5);
}

uint64_t sub_2452B5470(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  return sub_24527D9CC(a1, a2, *(_BYTE *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

unint64_t sub_2452B5484@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2452AFFBC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_2452B54A0()
{
  _QWORD *v0;

  return sub_24527EFC8(v0);
}

uint64_t sub_2452B54A8()
{
  return swift_deallocObject();
}

uint64_t sub_2452B54B8(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v4 = 0;
  v5 = *(_QWORD *)(result + 16);
  v6 = result + 56;
  v20 = v5;
  v21 = MEMORY[0x24BEE4AF8];
  v19 = result + 56;
LABEL_2:
  if (v4 > v5)
    v5 = v4;
  v7 = -(uint64_t)v5;
  v8 = v4 + 1;
  v9 = (uint64_t *)(v6 + 32 * v4);
  while (1)
  {
    if (v23 + v8 == 1)
      return v21;
    v4 = v8++;
    if (v7 + v8 == 2)
      break;
    v11 = *(v9 - 3);
    v10 = *(v9 - 2);
    v12 = *(v9 - 1);
    v13 = *v9;
    if (v12 == a2 && v13 == a3)
    {
      v12 = a2;
      v13 = a3;
LABEL_14:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15 = v21;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_24532C5AC(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v15 = v21;
      }
      v17 = *(_QWORD *)(v15 + 16);
      v16 = *(_QWORD *)(v15 + 24);
      if (v17 >= v16 >> 1)
      {
        result = sub_24532C5AC(v16 > 1, v17 + 1, 1);
        v15 = v21;
      }
      *(_QWORD *)(v15 + 16) = v17 + 1;
      v21 = v15;
      v18 = (_QWORD *)(v15 + 32 * v17);
      v18[4] = v11;
      v18[5] = v10;
      v18[6] = v12;
      v18[7] = v13;
      v6 = v19;
      v5 = v20;
      goto LABEL_2;
    }
    v9 += 4;
    result = sub_245388274();
    if ((result & 1) != 0)
      goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_2452B5634(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t *v24;

  v24 = (unint64_t *)result;
  v8 = 0;
  v9 = 0;
  v10 = a3 + 64;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (v13)
  {
    v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v17 = v16 | (v9 << 6);
LABEL_21:
    v21 = *(_QWORD *)(a3 + 48) + 32 * v17;
    result = *(_QWORD *)(v21 + 16);
    if (result != a4 || *(_QWORD *)(v21 + 24) != a5)
    {
      result = sub_245388274();
      if ((result & 1) == 0)
        continue;
    }
    *(unint64_t *)((char *)v24 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    if (__OFADD__(v8++, 1))
      goto LABEL_30;
  }
  v18 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v18 >= v14)
    return sub_24532B8A4(v24, a2, v8, a3);
  v19 = *(_QWORD *)(v10 + 8 * v18);
  ++v9;
  if (v19)
    goto LABEL_20;
  v9 = v18 + 1;
  if (v18 + 1 >= v14)
    return sub_24532B8A4(v24, a2, v8, a3);
  v19 = *(_QWORD *)(v10 + 8 * v9);
  if (v19)
    goto LABEL_20;
  v9 = v18 + 2;
  if (v18 + 2 >= v14)
    return sub_24532B8A4(v24, a2, v8, a3);
  v19 = *(_QWORD *)(v10 + 8 * v9);
  if (v19)
  {
LABEL_20:
    v13 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v9 << 6);
    goto LABEL_21;
  }
  v20 = v18 + 3;
  if (v20 >= v14)
    return sub_24532B8A4(v24, a2, v8, a3);
  v19 = *(_QWORD *)(v10 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v14)
      return sub_24532B8A4(v24, a2, v8, a3);
    v19 = *(_QWORD *)(v10 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2452B57E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v7;
  unsigned int v8;
  unint64_t v9;
  size_t v10;
  uint64_t isStackAllocationSafe;
  uint64_t v12;
  void *v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(a1 + 32);
  v8 = v7 & 0x3F;
  v9 = (unint64_t)((1 << v7) + 63) >> 6;
  v10 = 8 * v9;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    v12 = sub_2452B5634((uint64_t)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v9, a1, a2, a3);
    swift_bridgeObjectRelease();
    if (v3)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    swift_bridgeObjectRetain();
    v12 = sub_2452B5634((uint64_t)v13, v9, a1, a2, a3);
    swift_bridgeObjectRelease();
    MEMORY[0x24953317C](v13, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

uint64_t sub_2452B59A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD aBlock[6];

  v3 = type metadata accessor for Message();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = *(NSObject **)(v1 + 232);
  sub_2452B792C(a1, (uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for Message);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v1;
  sub_2452B7AB8((uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_2452BBFB0;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_2452643B4;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525B888;
  aBlock[3] = &block_descriptor_1425;
  v10 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v10);
  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_2452B5B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a4;
  v36 = a5;
  v33 = a2;
  v34 = a3;
  v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FF90);
  v7 = MEMORY[0x24BDAC7A8](v32);
  v9 = (uint64_t *)((char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v11 = (uint64_t)&v29 - v10;
  v12 = *(_QWORD *)(a1 + 64);
  v30 = a1 + 64;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v31 = (unint64_t)(v13 + 63) >> 6;
  v37 = a1;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  while (v15)
  {
    v18 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v19 = v18 | (v17 << 6);
LABEL_19:
    v23 = *(_QWORD *)(v37 + 56);
    v24 = (uint64_t *)(*(_QWORD *)(v37 + 48) + 16 * v19);
    v25 = *v24;
    v26 = v24[1];
    v27 = type metadata accessor for PairingRelationship();
    sub_2452B792C(v23 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * v19, v11 + *(int *)(v32 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship);
    *(_QWORD *)v11 = v25;
    *(_QWORD *)(v11 + 8) = v26;
    sub_2452BC850(v11, (uint64_t)v9, (uint64_t *)&unk_25744FF90);
    swift_bridgeObjectRetain();
    v28 = sub_2452A7174(v9, v33, v34, v35, v36);
    result = sub_245263F80((uint64_t)v9, (uint64_t *)&unk_25744FF90);
    if (v5)
      goto LABEL_28;
    if (v28)
    {
      LOBYTE(v11) = 1;
LABEL_28:
      swift_release();
      return v11 & 1;
    }
  }
  if (__OFADD__(v17++, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v17 >= v31)
    goto LABEL_27;
  v21 = *(_QWORD *)(v30 + 8 * v17);
  if (v21)
  {
LABEL_18:
    v15 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v17 << 6);
    goto LABEL_19;
  }
  v22 = v17 + 1;
  if (v17 + 1 >= v31)
    goto LABEL_27;
  v21 = *(_QWORD *)(v30 + 8 * v22);
  if (v21)
    goto LABEL_17;
  v22 = v17 + 2;
  if (v17 + 2 >= v31)
    goto LABEL_27;
  v21 = *(_QWORD *)(v30 + 8 * v22);
  if (v21)
    goto LABEL_17;
  v22 = v17 + 3;
  if (v17 + 3 >= v31)
    goto LABEL_27;
  v21 = *(_QWORD *)(v30 + 8 * v22);
  if (v21)
    goto LABEL_17;
  v22 = v17 + 4;
  if (v17 + 4 >= v31)
  {
LABEL_27:
    LOBYTE(v11) = 0;
    goto LABEL_28;
  }
  v21 = *(_QWORD *)(v30 + 8 * v22);
  if (v21)
  {
LABEL_17:
    v17 = v22;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v17 >= v31)
      goto LABEL_27;
    v21 = *(_QWORD *)(v30 + 8 * v17);
    ++v22;
    if (v21)
      goto LABEL_18;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2452B5DE0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  int64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;

  v3 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for PairingRelationship() + 20) + 32);
  v4 = *(_QWORD *)(a1 + 16);
  if (v3 <= 7)
  {
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (v4)
    {
      v34 = (_QWORD *)MEMORY[0x24BEE4AF8];
      sub_24532C5AC(0, v4, 0);
      v5 = v34;
      v6 = (uint64_t *)(a1 + 40);
      do
      {
        v8 = *(v6 - 1);
        v7 = *v6;
        v10 = v34[2];
        v9 = v34[3];
        swift_bridgeObjectRetain();
        if (v10 >= v9 >> 1)
          sub_24532C5AC(v9 > 1, v10 + 1, 1);
        v6 += 2;
        v34[2] = v10 + 1;
        v11 = &v34[4 * v10];
        v11[4] = v8;
        v11[5] = v7;
        v11[6] = 0xD000000000000011;
        v11[7] = 0x8000000245393670;
        --v4;
      }
      while (v4);
    }
    return (uint64_t)v5;
  }
  if (!v4)
    return MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  sub_2452BA544();
  v12 = a1 + 40;
  v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    swift_bridgeObjectRetain();
    v13 = (_QWORD *)sub_245387CEC();
    v14 = v13;
    if (v13[2] == 2)
      break;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_11:
    v12 += 16;
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v5;
    }
  }
  v15 = v13[4];
  v16 = v13[5];
  v18 = v13[6];
  v17 = v13[7];
  swift_bridgeObjectRetain();
  v19 = MEMORY[0x249531EBC](v15, v16, v18, v17);
  v21 = v20;
  result = swift_bridgeObjectRelease();
  if (v14[2] >= 2uLL)
  {
    v33 = v19;
    v23 = v14[8];
    v24 = v14[9];
    v25 = v14[10];
    v26 = v14[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v27 = MEMORY[0x249531EBC](v23, v24, v25, v26);
    v29 = v28;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v5 = sub_245324270(0, v5[2] + 1, 1, v5);
    v31 = v5[2];
    v30 = v5[3];
    if (v31 >= v30 >> 1)
      v5 = sub_245324270((_QWORD *)(v30 > 1), v31 + 1, 1, v5);
    v5[2] = v31 + 1;
    v32 = &v5[4 * v31];
    v32[4] = v33;
    v32[5] = v21;
    v32[6] = v27;
    v32[7] = v29;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_2452B60C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t result;
  uint64_t v18;
  dispatch_queue_t v19;
  _QWORD aBlock[6];

  v5 = sub_2453875E4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = type metadata accessor for Message();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v19 = *(dispatch_queue_t *)(v2 + 232);
  sub_2452B792C(a1, (uint64_t)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v5);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = (v10 + *(unsigned __int8 *)(v6 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v2;
  sub_2452B7AB8((uint64_t)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v12, (uint64_t (*)(_QWORD))type metadata accessor for Message);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v14 + v13, (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_2452B7AFC;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = sub_2452643B4;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24525B888;
  aBlock[3] = &block_descriptor_240;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v19, v16);
  _Block_release(v16);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v6 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_2452B62DC@<X0>(char *a1@<X8>)
{
  uint64_t *v1;

  return sub_245280F58(v1[2], v1[4], v1[5], a1);
}

uint64_t _s16ReplicatorEngine0A0C11syncService_25availableDevicesDidChangeyAA13SyncServicing_p_SaySSGtF_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  uint64_t result;
  _QWORD v11[6];

  v3 = v2;
  v6 = *(NSObject **)(v3 + 232);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v3;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_2452B7854;
  *(_QWORD *)(v8 + 24) = v7;
  v11[4] = sub_2452643B4;
  v11[5] = v8;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_24525B888;
  v11[3] = &block_descriptor_201;
  v9 = _Block_copy(v11);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v6 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_2452B643C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_2452ABFE8(v1, a1);
}

uint64_t sub_2452B6454@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_24526BDB8();
  *a1 = result;
  return result;
}

uint64_t sub_2452B647C(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 152) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_2452B64AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_24526BEB0();
  *a1 = result;
  return result;
}

uint64_t sub_2452B64D4(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 168) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_2452B6504@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_154Tm(a1);
}

uint64_t sub_2452B6510(char *a1)
{
  return sub_24526C080(*a1);
}

uint64_t sub_2452B6534@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_154Tm(a1);
}

uint64_t keypath_get_154Tm@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_245387D7C();
  *a1 = v3;
  return result;
}

uint64_t sub_2452B6594(char *a1)
{
  return Replicator.isAllowListEnabled.setter(*a1);
}

uint64_t sub_2452B65BC()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return Replicator.allowList.setter(v0);
}

uint64_t type metadata accessor for Replicator()
{
  return objc_opt_self();
}

uint64_t method lookup function for Replicator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Replicator.pairingRelationshipPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of Replicator.pairingRelationshipPublisher.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of Replicator.pairingRelationshipPublisher.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of Replicator.forgottenRelationshipPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of Replicator.forgottenRelationshipPublisher.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of Replicator.forgottenRelationshipPublisher.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of Replicator.isEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 896))();
}

uint64_t dispatch thunk of Replicator.isEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 904))();
}

uint64_t dispatch thunk of Replicator.isEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 912))();
}

uint64_t dispatch thunk of Replicator.__allocating_init(syncService:metadataStore:replicationPolicy:suspensionPolicy:deviceType:screenDescriptor:zoneVersionAdvertiser:handshakeScheduler:pinnedIdentityManager:permittedRemoteDeviceTypes:localDeviceIdentifier:activeWatchIDSIDProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 920))();
}

uint64_t dispatch thunk of Replicator.start()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 928))();
}

ValueMetadata *type metadata accessor for Replicator.Constants()
{
  return &type metadata for Replicator.Constants;
}

uint64_t type metadata accessor for Replicator.WeakSource()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for Replicator.RelationshipReconciliationOptions()
{
  return &type metadata for Replicator.RelationshipReconciliationOptions;
}

uint64_t *sub_2452B66F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_245387740();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2452B6784(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2452B67CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2452B6834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2452B68B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2452B690C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2452B6978()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452B6984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_245387740();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2452B6A04()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452B6A10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_245387740();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for Replicator.Session(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_2574522B0);
}

uint64_t sub_2452B6AA0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_245387740();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2452B6B10(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  char *__dst;
  uint64_t v28;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    v10 = type metadata accessor for Record.ID(0);
    v11 = *(int *)(v10 + 24);
    __dst = (char *)v4 + v11;
    v28 = v10;
    v12 = (char *)a2 + v11;
    v13 = sub_245387740();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      v16 = type metadata accessor for Record.ID.Ownership(0);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    v18 = *(int *)(v28 + 28);
    v19 = (uint64_t *)((char *)v4 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = *(int *)(a3 + 20);
    v23 = (char *)v4 + v22;
    v24 = (char *)a2 + v22;
    v25 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    swift_bridgeObjectRetain();
    v25(v23, v24, v13);
  }
  return v4;
}

uint64_t sub_2452B6C88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for Record.ID(0) + 24);
  v5 = sub_245387740();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1 + *(int *)(a2 + 20), v5);
}

_QWORD *sub_2452B6D3C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  char *__dst;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = type metadata accessor for Record.ID(0);
  v9 = *(int *)(v8 + 24);
  __dst = (char *)a1 + v9;
  v10 = (char *)a2 + v9;
  v11 = sub_245387740();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  v15 = *(int *)(v8 + 28);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = *(int *)(a3 + 20);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  swift_bridgeObjectRetain();
  v22(v20, v21, v11);
  return a1;
}

char *sub_2452B6E8C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
  *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for Record.ID(0);
  v7 = *(int *)(v6 + 24);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_245387740();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = *(int *)(v6 + 28);
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v10);
  return a1;
}

char *sub_2452B7048(char *a1, char *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);

  v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  v7 = type metadata accessor for Record.ID(0);
  v8 = *(int *)(v7 + 24);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_245387740();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    v14 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  }
  else
  {
    v14 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v14(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_OWORD *)&a1[*(int *)(v7 + 28)] = *(_OWORD *)&a2[*(int *)(v7 + 28)];
  v14(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v11);
  return a1;
}

char *sub_2452B7150(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = *((_QWORD *)a2 + 3);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  v8 = *((_QWORD *)a2 + 5);
  *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
  *((_QWORD *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  v9 = type metadata accessor for Record.ID(0);
  v10 = *(int *)(v9 + 24);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_245387740();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  v19 = *(int *)(v9 + 28);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v23 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v13);
  return a1;
}

uint64_t sub_2452B72CC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452B72D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Record.ID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_245387740();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_2452B734C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452B7358(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Record.ID(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_245387740();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for Replicator.SyncItem(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_2574522C0);
}

uint64_t sub_2452B73E8(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2452B741C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Record.ID(319);
  if (v1 <= 0x3F)
  {
    result = sub_245387740();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_2452B74A0()
{
  return sub_24525C6C4(&qword_25744F6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

unint64_t sub_2452B74D0()
{
  unint64_t result;

  result = qword_2574522D0;
  if (!qword_2574522D0)
  {
    result = MEMORY[0x2495330B0](&unk_24538A43C, &type metadata for Replicator.RelationshipReconciliationOptions);
    atomic_store(result, (unint64_t *)&qword_2574522D0);
  }
  return result;
}

unint64_t sub_2452B7518()
{
  unint64_t result;

  result = qword_2574522D8;
  if (!qword_2574522D8)
  {
    result = MEMORY[0x2495330B0](&unk_24538A40C, &type metadata for Replicator.RelationshipReconciliationOptions);
    atomic_store(result, (unint64_t *)&qword_2574522D8);
  }
  return result;
}

unint64_t sub_2452B7560()
{
  unint64_t result;

  result = qword_2574522E0;
  if (!qword_2574522E0)
  {
    result = MEMORY[0x2495330B0](&unk_24538A464, &type metadata for Replicator.RelationshipReconciliationOptions);
    atomic_store(result, (unint64_t *)&qword_2574522E0);
  }
  return result;
}

unint64_t sub_2452B75A8()
{
  unint64_t result;

  result = qword_2574522E8;
  if (!qword_2574522E8)
  {
    result = MEMORY[0x2495330B0](&unk_24538A49C, &type metadata for Replicator.RelationshipReconciliationOptions);
    atomic_store(result, (unint64_t *)&qword_2574522E8);
  }
  return result;
}

uint64_t sub_2452B75EC(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

unint64_t sub_2452B7610()
{
  unint64_t result;

  result = qword_2574522F0;
  if (!qword_2574522F0)
  {
    result = MEMORY[0x2495330B0](&unk_24538A664, &type metadata for Replicator.HandshakePrerequisiteError);
    atomic_store(result, (unint64_t *)&qword_2574522F0);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_2452B767C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_24527A6F0(v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

uint64_t sub_2452B769C(uint64_t (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v6 = 0;
  v4 = 0;
  v5 = 0;
  v2 = sub_24527E6F4(&v6, &v4);
  return a1(v2);
}

uint64_t objectdestroy_142Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_139Tm()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2452B775C(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  v9 = *(_OWORD *)(v1 + 40);
  v10 = v5;
  v11 = v6;
  v7 = sub_24527CF98(v3, v4, (uint64_t *)&v9);
  return a1(v7);
}

uint64_t sub_2452B77B8()
{
  uint64_t v0;

  return sub_245277560(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

unint64_t sub_2452B77E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t result;
  char v4;

  result = sub_245276190(*(_QWORD *)(v1 + 24));
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v4 & 1;
  return result;
}

uint64_t sub_2452B7824()
{
  return objectdestroy_34Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_2452B783C()
{
  return objectdestroy_113Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_2452B7854()
{
  uint64_t v0;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 32) + 176) == *(_QWORD *)(v0 + 16))
    sub_245272320(7);
}

uint64_t sub_2452B7888()
{
  return swift_deallocObject();
}

void sub_2452B7898(_QWORD *a1)
{
  uint64_t v1;

  sub_2452873C4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_2452B78A4()
{
  uint64_t v0;

  sub_245286B20(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(NSObject **)(v0 + 40));
}

uint64_t objectdestroy_206Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2452B78EC()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2452B7920()
{
  uint64_t v0;

  return sub_245286EC8(*(os_unfair_lock_s **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(_QWORD))(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_2452B792C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2452B7970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for Message();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v12 = *(_QWORD *)(v2 + 64);
  v13 = sub_2453875E4();
  v4 = *(_QWORD *)(v13 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  swift_release();
  v6 = v0 + ((v3 + 24) & ~v3);
  v7 = sub_245387740();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v10 = v6 + *(int *)(v1 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    v9(v10, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24525CB80(*(_QWORD *)(v6 + *(int *)(v1 + 36)), *(_QWORD *)(v6 + *(int *)(v1 + 36) + 8));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + ((((v3 + 24) & ~v3) + v12 + v5) & ~v5), v13);
  return swift_deallocObject();
}

uint64_t sub_2452B7AB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2452B7AFC()
{
  return sub_2452BB9E4((uint64_t (*)(_QWORD))type metadata accessor for Message, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0], (uint64_t (*)(_QWORD, unint64_t, unint64_t))sub_245280E28);
}

uint64_t sub_2452B7B18()
{
  return swift_deallocObject();
}

uint64_t sub_2452B7B28()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_2452B7B5C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2452B7B9C(uint64_t a1)
{
  return sub_2452BAC78(a1, type metadata accessor for ReplicatorMessage.Handshake.Request, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))sub_24529F910);
}

uint64_t sub_2452B7BB0()
{
  return objectdestroy_113Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_2452B7BC4(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;

  return sub_2452887CC(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_2452B7BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_24528888C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t objectdestroy_251Tm()
{
  uint64_t v0;
  unint64_t v1;

  swift_release();
  v1 = *(_QWORD *)(v0 + 32);
  if (v1 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v0 + 24), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2452B7C2C()
{
  return sub_2452B7C38((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2452889F0);
}

uint64_t sub_2452B7C38(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_2452B7C4C()
{
  return swift_deallocObject();
}

uint64_t sub_2452B7C5C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_2452B7C74()
{
  return sub_245288DE0();
}

uint64_t sub_2452B7C80(uint64_t a1, char a2)
{
  return sub_2452BA950(a1, a2, type metadata accessor for ReplicatorMessage.Handshake.Request, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_2452A0810);
}

uint64_t sub_2452B7C94()
{
  return objectdestroy_268Tm((void (*)(_QWORD, _QWORD))sub_245263EE8);
}

void sub_2452B7CA0()
{
  sub_2452BAADC(type metadata accessor for ReplicatorMessage.Handshake.Request, "(%{public}s) Error sending handshake response: %{public}s");
}

uint64_t sub_2452B7CB4()
{
  return swift_deallocObject();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_2452B7D00()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 88) >= 3uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2452B7D3C(NSObject *a1)
{
  uint64_t v1;

  sub_2452956D0(a1, *(_QWORD *)(v1 + 16), v1 + 24, *(_QWORD *)(v1 + 64), *(unsigned __int8 *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_2452B7D58(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2452B7D80()
{
  return objectdestroy_113Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_2452B7D94(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2452B7DBC()
{
  return objectdestroy_113Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_2452B7DD4(void *a1, char a2)
{
  uint64_t v2;

  return sub_245298F04(a1, a2 & 1, *(_QWORD *)(v2 + 16), v2 + 24, *(_QWORD *)(v2 + 64), *(_BYTE *)(v2 + 72));
}

unint64_t sub_2452B7DEC()
{
  unint64_t result;

  result = qword_25744FCF8;
  if (!qword_25744FCF8)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for Zone.ID, &type metadata for Zone.ID);
    atomic_store(result, (unint64_t *)&qword_25744FCF8);
  }
  return result;
}

BOOL sub_2452B7E30(uint64_t a1)
{
  return sub_2452A1D70(a1);
}

void sub_2452B7E4C(uint64_t a1)
{
  uint64_t v1;

  sub_2452B0224(a1, *(void (**)(void *, uint64_t))(v1 + 16));
}

void sub_2452B7E54(void *a1, char a2)
{
  uint64_t v2;

  sub_2452B0308(a1, a2 & 1, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_2452B7E60()
{
  uint64_t v0;

  sub_245263EE8(*(id *)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2452B7E98()
{
  uint64_t v0;

  sub_245299140(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD **)(v0 + 32), v0 + 40, *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
}

uint64_t sub_2452B7EB4(char *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2452A5F60(a1, a2, *(_QWORD *)(v2 + 16), *(char **)(v2 + 24));
}

uint64_t sub_2452B7ECC()
{
  return sub_2452A61DC();
}

void sub_2452B7ED4()
{
  sub_24525C890();
}

uint64_t sub_2452B7EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t result;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  __int128 v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v39;
  int64_t v40;
  __int128 v41;
  __int128 v42[5];
  uint64_t v43;

  v36 = a1 + 64;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  if (v2 < 64)
    v3 = ~(-1 << v2);
  else
    v3 = -1;
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v5 = (uint64_t *)(a2 + 592);
  swift_bridgeObjectRetain();
  result = swift_beginAccess();
  v7 = 0;
  v37 = (unint64_t)(v2 + 63) >> 6;
  v35 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (v4)
  {
    v8 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v9 = v8 | (v7 << 6);
LABEL_23:
    v13 = *v5;
    if (*(_QWORD *)(*v5 + 16))
    {
      v40 = v7;
      v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 32 * v9);
      v15 = v14[1];
      v39 = *v14;
      v17 = v14[2];
      v16 = v14[3];
      v18 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v9);
      sub_24538843C();
      v43 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_245387B6C();
      v19 = sub_245388478();
      v20 = -1 << *(_BYTE *)(v13 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v13 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
        goto LABEL_5;
      v22 = *(_QWORD *)(v13 + 48);
      v23 = (_QWORD *)(v22 + 16 * v21);
      v24 = *v23 == v17 && v23[1] == v16;
      if (v24 || (sub_245388274() & 1) != 0)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v7 = v40;
        v28 = v43;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (MEMORY[0x24953323C](v18 + 16))
        {
          v29 = *(_QWORD *)(v18 + 24);
          ObjectType = swift_getObjectType();
          (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v29 + 16))(v42, ObjectType, v29);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          v31 = v42[0];
        }
        else
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v31 = 0uLL;
        }
        v41 = v31;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_245324138(0, v35[2] + 1, 1, v35);
          v35 = (_QWORD *)result;
        }
        v33 = v35[2];
        v32 = v35[3];
        if (v33 >= v32 >> 1)
        {
          result = (uint64_t)sub_245324138((_QWORD *)(v32 > 1), v33 + 1, 1, v35);
          v35 = (_QWORD *)result;
        }
        v35[2] = v33 + 1;
        v34 = &v35[6 * v33];
        v34[4] = v39;
        v34[5] = v28;
        v34[6] = v17;
        v34[7] = v16;
        *((_OWORD *)v34 + 4) = v41;
      }
      else
      {
        v25 = ~v20;
        while (1)
        {
          v21 = (v21 + 1) & v25;
          if (((*(_QWORD *)(v13 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
            break;
          v26 = (_QWORD *)(v22 + 16 * v21);
          v27 = *v26 == v17 && v26[1] == v16;
          if (v27 || (sub_245388274() & 1) != 0)
            goto LABEL_37;
        }
LABEL_5:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        result = swift_bridgeObjectRelease();
        v7 = v40;
      }
    }
  }
  v10 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_47;
  }
  if (v10 >= v37)
    goto LABEL_45;
  v11 = *(_QWORD *)(v36 + 8 * v10);
  ++v7;
  if (v11)
    goto LABEL_22;
  v7 = v10 + 1;
  if (v10 + 1 >= v37)
    goto LABEL_45;
  v11 = *(_QWORD *)(v36 + 8 * v7);
  if (v11)
    goto LABEL_22;
  v7 = v10 + 2;
  if (v10 + 2 >= v37)
    goto LABEL_45;
  v11 = *(_QWORD *)(v36 + 8 * v7);
  if (v11)
    goto LABEL_22;
  v7 = v10 + 3;
  if (v10 + 3 >= v37)
    goto LABEL_45;
  v11 = *(_QWORD *)(v36 + 8 * v7);
  if (v11)
    goto LABEL_22;
  v12 = v10 + 4;
  if (v12 >= v37)
  {
LABEL_45:
    swift_release();
    return (uint64_t)v35;
  }
  v11 = *(_QWORD *)(v36 + 8 * v12);
  v7 = v12;
  if (v11)
  {
LABEL_22:
    v4 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v7 << 6);
    goto LABEL_23;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v37)
      goto LABEL_45;
    v11 = *(_QWORD *)(v36 + 8 * v7);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_2452B82FC()
{
  sub_245387EA8();
  sub_245387B90();
  sub_245387F5C();
  sub_245387B90();
  type metadata accessor for ZoneVersion();
  swift_bridgeObjectRetain();
  sub_245387A70();
  sub_245387B90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2452B8424(uint64_t a1, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_24532437C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = *(_QWORD *)(type metadata accessor for Replicator.SyncItem(0) - 8);
  v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v14 * a1;
  v16 = v13 + v14 * a1;
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_25;
  v18 = *(_QWORD *)(v4 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_31;
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v21 = *(_QWORD *)(v4 + 16);
    v22 = __OFADD__(v21, v8);
    v23 = v21 - v7;
    if (!v22)
    {
      *(_QWORD *)(v4 + 16) = v23;
LABEL_25:
      *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  result = sub_245387FBC();
  __break(1u);
  return result;
}

uint64_t sub_2452B85CC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  BOOL v34;
  uint64_t v35;
  _QWORD *v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v42;
  int v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  uint64_t v47;
  _BOOL8 v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t result;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  int64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;

  v64 = a1;
  v5 = type metadata accessor for ZoneVersion();
  v61 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v63 = (uint64_t)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v62 = (char *)&v60 - v8;
  v9 = *(_QWORD *)(a2 + 64);
  v65 = a2 + 64;
  v10 = 1 << *(_BYTE *)(a2 + 32);
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & v9;
  v68 = a2;
  swift_bridgeObjectRetain();
  v67 = (uint64_t *)(a3 + 592);
  swift_beginAccess();
  v13 = 0;
  v66 = (unint64_t)(v10 + 63) >> 6;
  if (v12)
    goto LABEL_7;
LABEL_8:
  v16 = v13 + 1;
  if (!__OFADD__(v13, 1))
  {
    if (v16 < v66)
    {
      v17 = *(_QWORD *)(v65 + 8 * v16);
      ++v13;
      if (v17)
        goto LABEL_22;
      v13 = v16 + 1;
      if (v16 + 1 >= v66)
        goto LABEL_54;
      v17 = *(_QWORD *)(v65 + 8 * v13);
      if (v17)
        goto LABEL_22;
      v13 = v16 + 2;
      if (v16 + 2 >= v66)
        goto LABEL_54;
      v17 = *(_QWORD *)(v65 + 8 * v13);
      if (v17)
        goto LABEL_22;
      v13 = v16 + 3;
      if (v16 + 3 >= v66)
        goto LABEL_54;
      v17 = *(_QWORD *)(v65 + 8 * v13);
      if (v17)
      {
LABEL_22:
        v12 = (v17 - 1) & v17;
        for (i = __clz(__rbit64(v17)) + (v13 << 6); ; i = v14 | (v13 << 6))
        {
          v19 = *(_QWORD *)(v68 + 56);
          v20 = (uint64_t *)(*(_QWORD *)(v68 + 48) + 32 * i);
          v21 = v20[1];
          v69 = *v20;
          v23 = v20[2];
          v22 = v20[3];
          v24 = *(_QWORD *)(v19 + 8 * i);
          v25 = *v67;
          v26 = *(_QWORD *)(*v67 + 16);
          v72 = v24;
          if (v26)
          {
            v27 = v12;
            v28 = v13;
            sub_24538843C();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain_n();
            swift_retain();
            swift_bridgeObjectRetain();
            sub_245387B6C();
            v29 = sub_245388478();
            v30 = -1 << *(_BYTE *)(v25 + 32);
            v31 = v29 & ~v30;
            if (((*(_QWORD *)(v25 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) != 0)
            {
              v70 = v21;
              v32 = *(_QWORD *)(v25 + 48);
              v33 = (_QWORD *)(v32 + 16 * v31);
              v34 = *v33 == v23 && v33[1] == v22;
              if (v34 || (sub_245388274() & 1) != 0)
              {
LABEL_6:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v13 = v28;
                v12 = v27;
                if (!v27)
                  goto LABEL_8;
                goto LABEL_7;
              }
              v35 = ~v30;
              while (1)
              {
                v31 = (v31 + 1) & v35;
                if (((*(_QWORD *)(v25 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
                  break;
                v36 = (_QWORD *)(v32 + 16 * v31);
                v37 = *v36 == v23 && v36[1] == v22;
                if (v37 || (sub_245388274() & 1) != 0)
                  goto LABEL_6;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v13 = v28;
              v12 = v27;
              v21 = v70;
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v13 = v28;
              v12 = v27;
            }
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v38 = sub_245387740();
          v39 = (uint64_t)v62;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v62, 1, 1, v38);
          sub_2452B7AB8(v39, v63, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
          v40 = v64;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v42 = v21;
          v43 = isUniquelyReferenced_nonNull_native;
          v71 = v40;
          v44 = v42;
          v46 = sub_2452C1EB4(v69, v42, v23, v22);
          v47 = v40[2];
          v48 = (v45 & 1) == 0;
          v49 = v47 + v48;
          if (__OFADD__(v47, v48))
            goto LABEL_56;
          v50 = v45;
          if (v40[3] >= v49)
          {
            if ((v43 & 1) == 0)
              sub_2452C8B00();
            v51 = v44;
          }
          else
          {
            sub_2452C4EB8(v49, v43);
            v51 = v44;
            v52 = sub_2452C1EB4(v69, v44, v23, v22);
            if ((v50 & 1) != (v53 & 1))
              goto LABEL_59;
            v46 = v52;
          }
          v64 = v71;
          if ((v50 & 1) != 0)
          {
            sub_2452BC64C(v63, v71[7] + *(_QWORD *)(v61 + 72) * v46, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
          }
          else
          {
            v71[(v46 >> 6) + 8] |= 1 << v46;
            v54 = v63;
            v55 = (_QWORD *)(v64[6] + 32 * v46);
            *v55 = v69;
            v55[1] = v51;
            v55[2] = v23;
            v55[3] = v22;
            sub_2452B7AB8(v54, v64[7] + *(_QWORD *)(v61 + 72) * v46, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
            v56 = v64[2];
            v57 = __OFADD__(v56, 1);
            v58 = v56 + 1;
            if (v57)
              goto LABEL_57;
            v64[2] = v58;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          if (!v12)
            goto LABEL_8;
LABEL_7:
          v14 = __clz(__rbit64(v12));
          v12 &= v12 - 1;
        }
      }
      v18 = v16 + 4;
      if (v18 < v66)
      {
        v17 = *(_QWORD *)(v65 + 8 * v18);
        v13 = v18;
        if (!v17)
        {
          while (1)
          {
            v13 = v18 + 1;
            if (__OFADD__(v18, 1))
              goto LABEL_58;
            if (v13 >= v66)
              goto LABEL_54;
            v17 = *(_QWORD *)(v65 + 8 * v13);
            ++v18;
            if (v17)
              goto LABEL_22;
          }
        }
        goto LABEL_22;
      }
    }
LABEL_54:
    swift_release();
    return (uint64_t)v64;
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  result = sub_2453883DC();
  __break(1u);
  return result;
}

uint64_t sub_2452B8B88(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  char *v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  unint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;

  v40 = a2;
  v45 = a7;
  v53 = a5;
  v54 = a6;
  v55 = a4;
  v41 = a1;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD30);
  v8 = MEMORY[0x24BDAC7A8](v51);
  v10 = (uint64_t *)((char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v40 - v11;
  v13 = type metadata accessor for RecordMetadata();
  v50 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Record.ID(0);
  v48 = *(_QWORD *)(v16 - 8);
  result = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = 0;
  v52 = (_QWORD *)a3;
  v21 = *(_QWORD *)(a3 + 64);
  v42 = 0;
  v43 = a3 + 64;
  v22 = 1 << *(_BYTE *)(a3 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v44 = (unint64_t)(v22 + 63) >> 6;
  v49 = v15;
  v46 = v12;
  v47 = v19;
  while (1)
  {
    if (v24)
    {
      v56 = (v24 - 1) & v24;
      v57 = v20;
      v26 = __clz(__rbit64(v24)) | (v20 << 6);
      goto LABEL_22;
    }
    v27 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v27 >= v44)
      return sub_24532AF60(v41, v40, v42, v52);
    v28 = *(_QWORD *)(v43 + 8 * v27);
    v29 = v20 + 1;
    if (!v28)
    {
      v29 = v20 + 2;
      if (v20 + 2 >= v44)
        return sub_24532AF60(v41, v40, v42, v52);
      v28 = *(_QWORD *)(v43 + 8 * v29);
      if (!v28)
      {
        v29 = v20 + 3;
        if (v20 + 3 >= v44)
          return sub_24532AF60(v41, v40, v42, v52);
        v28 = *(_QWORD *)(v43 + 8 * v29);
        if (!v28)
          break;
      }
    }
LABEL_21:
    v56 = (v28 - 1) & v28;
    v57 = v29;
    v26 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_22:
    v31 = v52;
    sub_2452B792C(v52[6] + *(_QWORD *)(v48 + 72) * v26, (uint64_t)v19, type metadata accessor for Record.ID);
    sub_2452B792C(v31[7] + *(_QWORD *)(v50 + 72) * v26, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v32 = v51;
    v33 = (uint64_t)&v12[*(int *)(v51 + 48)];
    sub_2452B792C((uint64_t)v19, (uint64_t)v12, type metadata accessor for Record.ID);
    sub_2452B792C((uint64_t)v15, v33, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v34 = (uint64_t)v10 + *(int *)(v32 + 48);
    sub_2452B792C((uint64_t)v12, (uint64_t)v10, type metadata accessor for Record.ID);
    sub_2452B792C(v33, v34, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    v36 = v10[2];
    v35 = v10[3];
    v38 = v10[4];
    v37 = v10[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2452B7B5C((uint64_t)v10, type metadata accessor for Record.ID);
    if ((v36 != v55 || v35 != v53) && (sub_245388274() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    if (v38 == v54 && v37 == v45)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    v25 = sub_245388274();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
    {
LABEL_28:
      v12 = v46;
      sub_245263F80((uint64_t)v46, &qword_25744FD30);
      sub_2452B7B5C(v34, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      v15 = v49;
      sub_2452B7B5C((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      v19 = v47;
      result = sub_2452B7B5C((uint64_t)v47, type metadata accessor for Record.ID);
      *(unint64_t *)((char *)v41 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      v39 = __OFADD__(v42++, 1);
      v20 = v57;
      v24 = v56;
      if (v39)
        goto LABEL_35;
    }
    else
    {
LABEL_5:
      v12 = v46;
      sub_245263F80((uint64_t)v46, &qword_25744FD30);
      sub_2452B7B5C(v34, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      v15 = v49;
      sub_2452B7B5C((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
      v19 = v47;
      result = sub_2452B7B5C((uint64_t)v47, type metadata accessor for Record.ID);
      v20 = v57;
      v24 = v56;
    }
  }
  v30 = v20 + 4;
  if (v20 + 4 >= v44)
    return sub_24532AF60(v41, v40, v42, v52);
  v28 = *(_QWORD *)(v43 + 8 * v30);
  if (v28)
  {
    v29 = v20 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v44)
      return sub_24532AF60(v41, v40, v42, v52);
    v28 = *(_QWORD *)(v43 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_21;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_2452B9034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  char v11;
  unsigned int v12;
  unint64_t v13;
  size_t v14;
  uint64_t isStackAllocationSafe;
  uint64_t v16;
  void *v17;
  _QWORD v19[2];

  v19[1] = *MEMORY[0x24BDAC8D0];
  v11 = *(_BYTE *)(a1 + 32);
  v12 = v11 & 0x3F;
  v13 = (unint64_t)((1 << v11) + 63) >> 6;
  v14 = 8 * v13;
  swift_bridgeObjectRetain_n();
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v12 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    v19[0] = v19;
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v19 - ((v14 + 15) & 0x3FFFFFFFFFFFFFF0), v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_2452B8B88((_QWORD *)((char *)v19 - ((v14 + 15) & 0x3FFFFFFFFFFFFFF0)), v13, a1, a2, a3, a4, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v5)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v17 = (void *)swift_slowAlloc();
    bzero(v17, v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_2452B8B88((unint64_t *)v17, v13, a1, a2, a3, a4, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    MEMORY[0x24953317C](v17, -1, -1);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  return v16;
}

uint64_t sub_2452B926C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[4];
  uint64_t v23;

  v23 = a1;
  v6 = a2 + 56;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 32 * i);
    v19 = v18[1];
    v20 = v18[2];
    v21 = v18[3];
    v22[0] = *v18;
    v22[1] = v19;
    v22[2] = v20;
    v22[3] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2452ACDC0(&v23, v22, a3);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v10)
      goto LABEL_26;
    v16 = *(_QWORD *)(v6 + 8 * v12);
    if (!v16)
      break;
LABEL_17:
    v9 = (v16 - 1) & v16;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v10)
    goto LABEL_26;
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 2;
  if (v12 + 2 >= v10)
    goto LABEL_26;
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 3;
  if (v12 + 3 >= v10)
    goto LABEL_26;
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 4;
  if (v12 + 4 >= v10)
  {
LABEL_26:
    swift_release();
    return v23;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_16:
    v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v10)
      goto LABEL_26;
    v16 = *(_QWORD *)(v6 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2452B944C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  BOOL v26;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t *v34;
  unint64_t v35;

  v31 = a3 + 64;
  v4 = 1 << *(_BYTE *)(a3 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a3 + 64);
  v34 = (uint64_t *)(a4 + 592);
  result = swift_beginAccess();
  v30 = 0;
  v8 = 0;
  v32 = (unint64_t)(v4 + 63) >> 6;
  while (v6)
  {
    v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v10 = v9 | (v8 << 6);
LABEL_22:
    v14 = *v34;
    if (*(_QWORD *)(*v34 + 16))
    {
      v35 = v10;
      v15 = *(_QWORD *)(a3 + 48) + 32 * v10;
      v16 = *(_QWORD *)(v15 + 16);
      v17 = *(_QWORD *)(v15 + 24);
      sub_24538843C();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_245387B6C();
      v18 = sub_245388478();
      v19 = -1 << *(_BYTE *)(v14 + 32);
      v20 = v18 & ~v19;
      if (((*(_QWORD *)(v14 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
        goto LABEL_37;
      v21 = *(_QWORD *)(v14 + 48);
      v22 = (_QWORD *)(v21 + 16 * v20);
      v23 = *v22 == v16 && v22[1] == v17;
      if (!v23 && (sub_245388274() & 1) == 0)
      {
        v24 = ~v19;
        while (1)
        {
          v20 = (v20 + 1) & v24;
          if (((*(_QWORD *)(v14 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
            break;
          v25 = (_QWORD *)(v21 + 16 * v20);
          v26 = *v25 == v16 && v25[1] == v17;
          if (v26 || (sub_245388274() & 1) != 0)
            goto LABEL_5;
        }
LABEL_37:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        result = swift_bridgeObjectRelease();
        v10 = v35;
        goto LABEL_38;
      }
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    else
    {
LABEL_38:
      *(unint64_t *)((char *)a1 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      if (__OFADD__(v30++, 1))
      {
        __break(1u);
        return sub_24532BB80(a1, a2, v30, (_QWORD *)a3);
      }
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_43;
  }
  if (v11 >= v32)
    return sub_24532BB80(a1, a2, v30, (_QWORD *)a3);
  v12 = *(_QWORD *)(v31 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_21;
  v8 = v11 + 1;
  if (v11 + 1 >= v32)
    return sub_24532BB80(a1, a2, v30, (_QWORD *)a3);
  v12 = *(_QWORD *)(v31 + 8 * v8);
  if (v12)
    goto LABEL_21;
  v8 = v11 + 2;
  if (v11 + 2 >= v32)
    return sub_24532BB80(a1, a2, v30, (_QWORD *)a3);
  v12 = *(_QWORD *)(v31 + 8 * v8);
  if (v12)
  {
LABEL_21:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_22;
  }
  v13 = v11 + 3;
  if (v13 >= v32)
    return sub_24532BB80(a1, a2, v30, (_QWORD *)a3);
  v12 = *(_QWORD *)(v31 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v32)
      return sub_24532BB80(a1, a2, v30, (_QWORD *)a3);
    v12 = *(_QWORD *)(v31 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_43:
  __break(1u);
  return result;
}

unint64_t sub_2452B9768()
{
  unint64_t result;

  result = qword_257452330;
  if (!qword_257452330)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for ReplicatorError, &type metadata for ReplicatorError);
    atomic_store(result, (unint64_t *)&qword_257452330);
  }
  return result;
}

uint64_t sub_2452B97AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 488);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2452B97DC()
{
  uint64_t v0;

  sub_24526432C(v0 + 16);
  return sub_245387B48();
}

uint64_t sub_2452B9834()
{
  return swift_deallocObject();
}

_BYTE **sub_2452B9844(_BYTE **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_245381D18(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

uint64_t sub_2452B984C()
{
  return swift_deallocObject();
}

uint64_t sub_2452B985C(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_245381668(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_2452B9864()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9874()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9888()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9898()
{
  return swift_deallocObject();
}

uint64_t sub_2452B98A8()
{
  return swift_deallocObject();
}

uint64_t sub_2452B98B8()
{
  return swift_deallocObject();
}

uint64_t sub_2452B98CC()
{
  return swift_deallocObject();
}

uint64_t sub_2452B98DC()
{
  return swift_deallocObject();
}

uint64_t sub_2452B98EC()
{
  return swift_deallocObject();
}

uint64_t sub_2452B98FC()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9910()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2452B993C()
{
  return swift_deallocObject();
}

uint64_t sub_2452B994C()
{
  return swift_deallocObject();
}

uint64_t sub_2452B995C()
{
  return swift_deallocObject();
}

uint64_t sub_2452B996C()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9980()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2452B99A4()
{
  return swift_deallocObject();
}

uint64_t sub_2452B99B4()
{
  return swift_deallocObject();
}

uint64_t sub_2452B99C4()
{
  return swift_deallocObject();
}

uint64_t sub_2452B99D4()
{
  return swift_deallocObject();
}

uint64_t sub_2452B99E4()
{
  return swift_deallocObject();
}

uint64_t sub_2452B99F4()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9A10()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9A20()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9A30()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9A40()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9A50()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9A60()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9A70()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9A80()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9A9C()
{
  uint64_t v0;

  return sub_2452D470C(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_2452B9AA8()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9AB8()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9AC8()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9AD8()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9AE8()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9AF8()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9B08()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9B18()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9B28()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9B38()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9B50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0) - 8)
                          + 80);
  return sub_2452A75B4(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_2452B9B94()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v1 = (int *)type metadata accessor for PairingRelationship();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + v1[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 120);
  if (v6 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v5 + 112), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = v3 + v1[6];
  v8 = sub_2453876EC();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v3 + v1[7], v8);
  if (*(_QWORD *)(v3 + v1[8] + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  v9(v3 + v1[9], v8);
  return swift_deallocObject();
}

uint64_t sub_2452B9CD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PairingRelationship() - 8) + 80);
  v4 = v1 + ((v3 + 16) & ~v3);
  v5 = sub_245387740();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t sub_2452B9D28()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9D38()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9D48()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9D58()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9D68()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9D78()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9D88()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9D98()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9DA8()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9DB8()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9DC8()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9DD8()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9DF8()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9E08()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9E18()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9E28()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9E38()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9E48()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9E58()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9E68()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9E80()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0) - 8)
                          + 80);
  return sub_2452A74D0(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_2452B9EB4()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9EC4()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9ED4()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9EE4()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9EF4()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9F04()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9F18()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9F28()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9F38()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9F48()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9F64()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9F74()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9F84()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9F94()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9FA4()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9FB4()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9FC4()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9FD4()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9FE8()
{
  return swift_deallocObject();
}

uint64_t sub_2452B9FF8()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA008()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA018()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA034()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA044()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA054()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA064()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA074()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA084()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA094()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA0A4()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA0B8()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA0C8()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA0D8()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA0E8()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_499Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24) >= 3uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2452BA130()
{
  uint64_t v0;

  sub_24526B470(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return sub_245387B48();
}

uint64_t sub_2452BA164()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA174()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA184()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA194()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA1A4()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA1B4()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA1C4()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA1D4()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_302Tm()
{
  uint64_t v0;
  unint64_t v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 136);
  if (v1 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v0 + 128), v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroy_569Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FAD0) - 8)
                          + 80);
  v2 = (v1 + 16) & ~v1;
  v3 = v0 + v2;
  v4 = (int *)type metadata accessor for PairingRelationship();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48))(v0 + v2, 1, v4))
  {
    v5 = sub_245387740();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v2, v5);
    v6 = v3 + v4[5];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = *(_QWORD *)(v6 + 120);
    if (v7 >> 60 != 15)
      sub_24525CB80(*(_QWORD *)(v6 + 112), v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v3 + v4[6];
    v9 = sub_2453876EC();
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
    v10(v8, v9);
    v10(v3 + v4[7], v9);
    if (*(_QWORD *)(v3 + v4[8] + 8) >= 3uLL)
      swift_bridgeObjectRelease();
    v10(v3 + v4[9], v9);
  }
  return swift_deallocObject();
}

uint64_t sub_2452BA3AC()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA3BC()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA3CC()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA3DC()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA3EC()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA3FC()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_245Tm()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = sub_245387740();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  if (*(_QWORD *)(v0 + v2 + *(int *)(v1 + 20) + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  v4 = v0 + v2 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 + 120);
  if (v5 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v4 + 112), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2452BA51C(uint64_t a1)
{
  return sub_2452BAC78(a1, type metadata accessor for ReplicatorMessage.Handshake.Request, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))sub_2452998C4);
}

uint64_t sub_2452BA530()
{
  return objectdestroy_113Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

unint64_t sub_2452BA544()
{
  unint64_t result;

  result = qword_257452338;
  if (!qword_257452338)
  {
    result = MEMORY[0x2495330B0](MEMORY[0x24BEE0D40], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_257452338);
  }
  return result;
}

uint64_t objectdestroy_265Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 24) & ~v2);
  v4 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  if (*(_QWORD *)(v3 + *(int *)(v1 + 20) + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  v5 = v3 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 120);
  if (v6 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v5 + 112), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2452BA68C(uint64_t a1, char a2)
{
  return sub_2452BA950(a1, a2, type metadata accessor for ReplicatorMessage.Handshake.Request, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_24529C338);
}

uint64_t sub_2452BA6A0()
{
  return objectdestroy_268Tm((void (*)(_QWORD, _QWORD))sub_2452BC9C4);
}

uint64_t objectdestroy_268Tm(void (*a1)(_QWORD, _QWORD))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v3 = type metadata accessor for ReplicatorMessage.Handshake.Request(0);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  a1(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
  swift_release();
  v5 = v1 + ((v4 + 40) & ~v4);
  v6 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (*(_QWORD *)(v5 + *(int *)(v3 + 20) + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  v7 = v5 + *(int *)(v3 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v7 + 120);
  if (v8 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v7 + 112), v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2452BA7BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ReplicatorMessage.Handshake.Request(0) - 8) + 80);
  sub_24529C4FC(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD **)(v0 + 32), v0 + ((v1 + 40) & ~v1));
}

uint64_t sub_2452BA7F4()
{
  return swift_deallocObject();
}

uint64_t sub_2452BA808(uint64_t a1)
{
  return sub_2452BAC78(a1, type metadata accessor for ReplicatorMessage.Handshake.Response, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))sub_2452A09D4);
}

uint64_t sub_2452BA81C()
{
  return objectdestroy_113Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_2452BA830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 24) & ~v2);
  v4 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  if (*(_QWORD *)(v3 + *(int *)(v1 + 20) + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  v5 = v3 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 120);
  if (v6 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v5 + 112), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2452BA93C(uint64_t a1, char a2)
{
  return sub_2452BA950(a1, a2, type metadata accessor for ReplicatorMessage.Handshake.Response, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_2452A1304);
}

uint64_t sub_2452BA950(uint64_t a1, char a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t, uint64_t, _QWORD, uint64_t))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = a2 & 1;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(a3(0) - 8) + 80);
  return a4(a1, v6, *(_QWORD *)(v4 + 16), v4 + ((v7 + 24) & ~v7));
}

uint64_t sub_2452BA9B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  sub_245263EE8(*(id *)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_release();
  v3 = v0 + ((v2 + 40) & ~v2);
  v4 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  if (*(_QWORD *)(v3 + *(int *)(v1 + 20) + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  v5 = v3 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 120);
  if (v6 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v5 + 112), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2452BAAC8()
{
  sub_2452BAADC(type metadata accessor for ReplicatorMessage.Handshake.Response, "(%{public}s) Error sending handshake complete: %{public}s");
}

void sub_2452BAADC(uint64_t (*a1)(_QWORD), const char *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  sub_2452A14C8(*(void **)(v2 + 16), *(_BYTE *)(v2 + 24), *(_QWORD **)(v2 + 32), v2 + ((v5 + 40) & ~v5), a2, a1);
}

uint64_t sub_2452BAB38()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_1305Tm()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = sub_245387740();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  if (*(_QWORD *)(v0 + v2 + *(int *)(v1 + 20) + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  v4 = v0 + v2 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 + 120);
  if (v5 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v4 + 112), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2452BAC64(uint64_t a1)
{
  return sub_2452BAC78(a1, type metadata accessor for ReplicatorMessage.Handshake.Response, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))sub_24529CA3C);
}

uint64_t sub_2452BAC78(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, _QWORD, unint64_t, _QWORD))
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(a2(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return a3(a1, *(_QWORD *)(v3 + 16), v3 + v6, *(_QWORD *)(v3 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_2452BACDC()
{
  return objectdestroy_113Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_2452BACF0()
{
  _QWORD *v0;

  sub_2452A48DC(v0);
}

uint64_t sub_2452BAD08@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_24529EF88(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_2452BAD20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);

  v1 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = (int *)type metadata accessor for PairingRelationship();
  v6 = *(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80);
  v7 = v3 + v4 + v6;
  swift_release();
  v8 = v0 + v3;
  v9 = sub_245387740();
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  if (*(_QWORD *)(v8 + *(int *)(v1 + 20) + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  v11 = v7 & ~v6;
  v12 = v8 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v12 + 120);
  if (v13 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v12 + 112), v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = v0 + v11;
  v10(v0 + v11, v9);
  v15 = v0 + v11 + v5[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v15 + 120);
  if (v16 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v15 + 112), v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = v14 + v5[6];
  v18 = sub_2453876EC();
  v19 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8);
  v19(v17, v18);
  v19(v14 + v5[7], v18);
  if (*(_QWORD *)(v14 + v5[8] + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  v19(v14 + v5[9], v18);
  return swift_deallocObject();
}

uint64_t sub_2452BAF30(void *a1, char a2)
{
  uint64_t v2;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(type metadata accessor for ReplicatorMessage.Handshake.Response(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PairingRelationship() - 8) + 80);
  return sub_24529F09C(a1, v4, *(_QWORD *)(v2 + 16), v2 + v6, v2 + ((v6 + v7 + v8) & ~v8));
}

uint64_t sub_2452BAFB0()
{
  return sub_2452BB9E4(type metadata accessor for ReplicatorMessage.Handshake.Complete, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship, (uint64_t (*)(_QWORD, unint64_t, unint64_t))sub_24529F824);
}

uint64_t sub_2452BAFCC()
{
  return objectdestroy_113Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_2452BAFE8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_2452BB00C()
{
  uint64_t v0;

  sub_2452A5D7C(*(void (**)(void *, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_2452BB018(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_2452BB044()
{
  return objectdestroy_113Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_2452BB05C(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  uint64_t v6;
  char v7;
  __int128 v8;
  __int128 v9[2];
  uint64_t v10;

  v3 = *(_OWORD *)(v1 + 40);
  v9[0] = *(_OWORD *)(v1 + 24);
  v9[1] = v3;
  v10 = *(_QWORD *)(v1 + 56);
  v8 = xmmword_24538A0F0;
  v6 = 0;
  v7 = 0;
  v4 = sub_2452891D4(v9, (uint64_t *)&v8, &v6);
  return a1(v4);
}

uint64_t sub_2452BB0D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);

  v1 = type metadata accessor for ReplicatorMessage.Handshake.Response(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = (int *)type metadata accessor for PairingRelationship();
  v6 = *(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80);
  v7 = v3 + v4 + v6;
  sub_245263EE8(*(id *)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_release();
  v8 = v0 + v3;
  v9 = sub_245387740();
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  if (*(_QWORD *)(v8 + *(int *)(v1 + 20) + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  v11 = v7 & ~v6;
  v12 = v8 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v12 + 120);
  if (v13 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v12 + 112), v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = v0 + v11;
  v10(v0 + v11, v9);
  v15 = v0 + v11 + v5[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v15 + 120);
  if (v16 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v15 + 112), v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = v14 + v5[6];
  v18 = sub_2453876EC();
  v19 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8);
  v19(v17, v18);
  v19(v14 + v5[7], v18);
  if (*(_QWORD *)(v14 + v5[8] + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  v19(v14 + v5[9], v18);
  return swift_deallocObject();
}

void sub_2452BB2F0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for ReplicatorMessage.Handshake.Response(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PairingRelationship() - 8) + 80);
  sub_24529F2E4(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD **)(v0 + 32), v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t sub_2452BB35C()
{
  return swift_deallocObject();
}

uint64_t sub_2452BB36C()
{
  uint64_t v0;

  return sub_2452A4708(v0);
}

uint64_t sub_2452BB374()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  int *v4;
  unint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, uint64_t);
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(type metadata accessor for Replicator.Session(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = (int *)type metadata accessor for PairingRelationship();
  v5 = (v2 + v3 + *(unsigned __int8 *)(*((_QWORD *)v4 - 1) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v4 - 1) + 80);
  swift_release();
  v6 = sub_245387740();
  v7 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v0 + v2, v6);
  swift_bridgeObjectRelease();
  v8 = v0 + v5;
  v7(v0 + v5, v6);
  v9 = v0 + v5 + v4[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v9 + 120);
  if (v10 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v9 + 112), v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = v8 + v4[6];
  v12 = sub_2453876EC();
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  v13(v8 + v4[7], v12);
  if (*(_QWORD *)(v8 + v4[8] + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  v13(v8 + v4[9], v12);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2452BB51C(void *a1, char a2)
{
  uint64_t v2;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(type metadata accessor for Replicator.Session(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(type metadata accessor for PairingRelationship() - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (uint64_t *)(v2 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_2452A49B0(a1, v4, *(_QWORD *)(v2 + 16), v2 + v6, v2 + v9, *v10, v10[1]);
}

uint64_t sub_2452BB5B0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  int *v4;
  unint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, uint64_t);
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(type metadata accessor for Replicator.Session(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = (int *)type metadata accessor for PairingRelationship();
  v5 = (v2 + v3 + *(unsigned __int8 *)(*((_QWORD *)v4 - 1) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v4 - 1) + 80);
  sub_245263EE8(*(id *)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_release();
  v6 = sub_245387740();
  v7 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v0 + v2, v6);
  swift_bridgeObjectRelease();
  v8 = v0 + v5;
  v7(v0 + v5, v6);
  v9 = v0 + v5 + v4[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v9 + 120);
  if (v10 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v9 + 112), v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = v8 + v4[6];
  v12 = sub_2453876EC();
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  v13(v8 + v4[7], v12);
  if (*(_QWORD *)(v8 + v4[8] + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  v13(v8 + v4[9], v12);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2452BB764()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for Replicator.Session(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(type metadata accessor for PairingRelationship() - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v0 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_2452A4C1C(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD **)(v0 + 32), v0 + v2, (uint64_t (*)(void))(v0 + v5), *(uint64_t (**)(void))v6, *(void **)(v6 + 8));
}

uint64_t sub_2452BB7E8()
{
  return swift_deallocObject();
}

BOOL sub_2452BB7F8(uint64_t a1)
{
  uint64_t v1;

  return sub_2452A54C8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t objectdestroy_1338Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);

  v1 = type metadata accessor for ReplicatorMessage.Handshake.Complete(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = (int *)type metadata accessor for PairingRelationship();
  v6 = *(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80);
  v7 = (v3 + v4 + v6) & ~v6;
  swift_release();
  v8 = v0 + v3;
  v9 = sub_245387740();
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  if (*(_QWORD *)(v8 + *(int *)(v1 + 20) + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = v0 + v7;
  v10(v0 + v7, v9);
  v12 = v0 + v7 + v5[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v12 + 120);
  if (v13 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v12 + 112), v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = v11 + v5[6];
  v15 = sub_2453876EC();
  v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
  v16(v14, v15);
  v16(v11 + v5[7], v15);
  if (*(_QWORD *)(v11 + v5[8] + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  v16(v11 + v5[9], v15);
  return swift_deallocObject();
}

uint64_t sub_2452BB9C8()
{
  return sub_2452BB9E4(type metadata accessor for ReplicatorMessage.Handshake.Complete, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship, (uint64_t (*)(_QWORD, unint64_t, unint64_t))sub_2452953E8);
}

uint64_t sub_2452BB9E4(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD), uint64_t (*a3)(_QWORD, unint64_t, unint64_t))
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a1(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return a3(*(_QWORD *)(v3 + 16), v3 + v6, v3 + ((v6 + v7 + v8) & ~v8));
}

uint64_t sub_2452BBA60(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_2452BBAA4()
{
  return sub_2452A5E6C();
}

uint64_t sub_2452BBAAC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_2452AA248(a1, a2, v2);
}

void sub_2452BBAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_2452AA2EC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t objectdestroy_1404Tm()
{
  uint64_t v0;
  unint64_t v1;

  swift_release();
  v1 = *(_QWORD *)(v0 + 32);
  if (v1 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v0 + 24), v1);
  return swift_deallocObject();
}

uint64_t sub_2452BBB04()
{
  uint64_t v0;

  return sub_2452AA500(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_2452BBB10()
{
  return swift_deallocObject();
}

uint64_t sub_2452BBB20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2452AB904(a1, a2, *(_BYTE *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_2452BBB2C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, uint64_t))
{
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  _QWORD v27[4];
  uint64_t (*v28)(_QWORD *, uint64_t);

  v28 = a4;
  v23 = (unint64_t *)result;
  v24 = 0;
  v5 = 0;
  v25 = a3 + 64;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 64);
  v26 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v5 << 6);
      goto LABEL_5;
    }
    v18 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v26)
      return sub_24532B8A4(v23, a2, v24, a3);
    v19 = *(_QWORD *)(v25 + 8 * v18);
    ++v5;
    if (!v19)
    {
      v5 = v18 + 1;
      if (v18 + 1 >= v26)
        return sub_24532B8A4(v23, a2, v24, a3);
      v19 = *(_QWORD *)(v25 + 8 * v5);
      if (!v19)
      {
        v5 = v18 + 2;
        if (v18 + 2 >= v26)
          return sub_24532B8A4(v23, a2, v24, a3);
        v19 = *(_QWORD *)(v25 + 8 * v5);
        if (!v19)
          break;
      }
    }
LABEL_20:
    v8 = (v19 - 1) & v19;
    v10 = __clz(__rbit64(v19)) + (v5 << 6);
LABEL_5:
    v11 = *(_QWORD *)(a3 + 56);
    v12 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 32 * v10);
    v13 = v12[1];
    v14 = v12[2];
    v15 = v12[3];
    v27[0] = *v12;
    v27[1] = v13;
    v27[2] = v14;
    v27[3] = v15;
    v16 = *(_QWORD *)(v11 + 8 * v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v17 = v28(v27, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_release();
    if ((v17 & 1) != 0)
    {
      *(unint64_t *)((char *)v23 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
        return sub_24532B8A4(v23, a2, v24, a3);
      }
    }
  }
  v20 = v18 + 3;
  if (v20 >= v26)
    return sub_24532B8A4(v23, a2, v24, a3);
  v19 = *(_QWORD *)(v25 + 8 * v20);
  if (v19)
  {
    v5 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v5 >= v26)
      return sub_24532B8A4(v23, a2, v24, a3);
    v19 = *(_QWORD *)(v25 + 8 * v5);
    ++v20;
    if (v19)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2452BBD4C(uint64_t isStackAllocationSafe, uint64_t (*a2)(_QWORD *, uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(isStackAllocationSafe + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_2452BBB2C((uint64_t)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v6, a2);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_2452BBB2C((uint64_t)v11, v8, v6, a2);
    MEMORY[0x24953317C](v11, -1, -1);
  }
  return a3;
}

uint64_t sub_2452BBEBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;

  v1 = type metadata accessor for Message();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 24) & ~v2);
  v4 = sub_245387740();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v3, v4);
  v7 = v3 + *(int *)(v1 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4))
    v6(v7, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24525CB80(*(_QWORD *)(v3 + *(int *)(v1 + 36)), *(_QWORD *)(v3 + *(int *)(v1 + 36) + 8));
  return swift_deallocObject();
}

uint64_t sub_2452BBFB0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Message() - 8) + 80);
  return sub_24527F948(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_2452BBFE0()
{
  return swift_deallocObject();
}

uint64_t sub_2452BBFF0()
{
  return objectdestroy_34Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

void sub_2452BC008(void *a1)
{
  uint64_t v1;

  sub_24528A198(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_2452BC010()
{
  return objectdestroy_113Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_2452BC024(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_2452BC030(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  BOOL v26;
  uint64_t v30;
  uint64_t v32;
  int64_t v33;
  uint64_t *v34;

  v32 = a3 + 64;
  v4 = 1 << *(_BYTE *)(a3 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a3 + 64);
  v34 = (uint64_t *)(a4 + 592);
  result = swift_beginAccess();
  v30 = 0;
  v8 = 0;
  v33 = (unint64_t)(v4 + 63) >> 6;
  while (v6)
  {
    v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v10 = v9 | (v8 << 6);
LABEL_22:
    v14 = *v34;
    if (*(_QWORD *)(*v34 + 16))
    {
      v15 = *(_QWORD *)(a3 + 56) + 48 * v10;
      v16 = *(_QWORD *)(v15 + 16);
      v17 = *(_QWORD *)(v15 + 24);
      sub_24538843C();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_245387B6C();
      v18 = sub_245388478();
      v19 = -1 << *(_BYTE *)(v14 + 32);
      v20 = v18 & ~v19;
      if (((*(_QWORD *)(v14 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
        goto LABEL_5;
      v21 = *(_QWORD *)(v14 + 48);
      v22 = (_QWORD *)(v21 + 16 * v20);
      v23 = *v22 == v16 && v22[1] == v17;
      if (v23 || (sub_245388274() & 1) != 0)
      {
LABEL_36:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        *(unint64_t *)((char *)a1 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        if (__OFADD__(v30++, 1))
        {
          __break(1u);
          return sub_24532B55C(a1, a2, v30, a3);
        }
      }
      else
      {
        v24 = ~v19;
        while (1)
        {
          v20 = (v20 + 1) & v24;
          if (((*(_QWORD *)(v14 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
            break;
          v25 = (_QWORD *)(v21 + 16 * v20);
          v26 = *v25 == v16 && v25[1] == v17;
          if (v26 || (sub_245388274() & 1) != 0)
            goto LABEL_36;
        }
LABEL_5:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        result = swift_bridgeObjectRelease();
      }
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_41;
  }
  if (v11 >= v33)
    return sub_24532B55C(a1, a2, v30, a3);
  v12 = *(_QWORD *)(v32 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_21;
  v8 = v11 + 1;
  if (v11 + 1 >= v33)
    return sub_24532B55C(a1, a2, v30, a3);
  v12 = *(_QWORD *)(v32 + 8 * v8);
  if (v12)
    goto LABEL_21;
  v8 = v11 + 2;
  if (v11 + 2 >= v33)
    return sub_24532B55C(a1, a2, v30, a3);
  v12 = *(_QWORD *)(v32 + 8 * v8);
  if (v12)
  {
LABEL_21:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_22;
  }
  v13 = v11 + 3;
  if (v13 >= v33)
    return sub_24532B55C(a1, a2, v30, a3);
  v12 = *(_QWORD *)(v32 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v33)
      return sub_24532B55C(a1, a2, v30, a3);
    v12 = *(_QWORD *)(v32 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2452BC390(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  char v8;
  unsigned int v9;
  unint64_t v10;
  size_t v11;
  uint64_t isStackAllocationSafe;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];

  v5 = v3;
  v17[1] = *MEMORY[0x24BDAC8D0];
  v8 = *(_BYTE *)(a1 + 32);
  v9 = v8 & 0x3F;
  v10 = (unint64_t)((1 << v8) + 63) >> 6;
  v11 = 8 * v10;
  isStackAllocationSafe = swift_retain_n();
  if (v9 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v17 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0), v11);
    swift_retain();
    v13 = v5;
    v14 = a3((char *)v17 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0), v10, a1, a2);
    swift_release();
    if (v13)
      swift_willThrow();
    swift_release_n();
  }
  else
  {
    v15 = (void *)swift_slowAlloc();
    bzero(v15, v11);
    swift_retain();
    v14 = a3((char *)v15, v10, a1, a2);
    swift_release();
    MEMORY[0x24953317C](v15, -1, -1);
    swift_release_n();
  }
  return v14;
}

uint64_t sub_2452BC548()
{
  return objectdestroy_34Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t objectdestroy_34Tm(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 24));
  return swift_deallocObject();
}

void sub_2452BC5A8(void *a1)
{
  uint64_t v1;

  sub_2452893F0(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t sub_2452BC5B8()
{
  return objectdestroy_113Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_113Tm(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 32));
  return swift_deallocObject();
}

uint64_t sub_2452BC614(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2452A9EFC(a1, a2, *(_QWORD *)(v2 + 16)) & 1;
}

uint64_t sub_2452BC630()
{
  return sub_245377600() & 1;
}

uint64_t sub_2452BC64C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_2452BC690()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v1 = (int *)type metadata accessor for PairingRelationship();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  v3 = v0 + ((v2 + 24) & ~v2);
  v4 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + v1[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 120);
  if (v6 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v5 + 112), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = v3 + v1[6];
  v8 = sub_2453876EC();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v3 + v1[7], v8);
  if (*(_QWORD *)(v3 + v1[8] + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  v9(v3 + v1[9], v8);
  return swift_deallocObject();
}

uint64_t sub_2452BC7D4(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PairingRelationship() - 8) + 80);
  return sub_2452A5DD8(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_2452BC824()
{
  swift_release();
  return swift_deallocObject();
}

void sub_2452BC848(uint64_t a1)
{
  sub_2452AB034(a1);
}

uint64_t sub_2452BC850(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_2452BC894(uint64_t a1)
{
  sub_245288E38(a1);
}

uint64_t sub_2452BC89C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t storeEnumTagSinglePayload for Replicator.HandshakePrerequisiteError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2452BC920 + 4 * byte_24538A170[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2452BC940 + 4 * byte_24538A175[v4]))();
}

_BYTE *sub_2452BC920(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2452BC940(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2452BC948(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2452BC950(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2452BC958(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2452BC960(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Replicator.HandshakePrerequisiteError()
{
  return &type metadata for Replicator.HandshakePrerequisiteError;
}

unint64_t sub_2452BC980()
{
  unint64_t result;

  result = qword_257452378;
  if (!qword_257452378)
  {
    result = MEMORY[0x2495330B0](&unk_24538A63C, &type metadata for Replicator.HandshakePrerequisiteError);
    atomic_store(result, (unint64_t *)&qword_257452378);
  }
  return result;
}

void sub_2452BC9E8(_BYTE *a1@<X8>)
{
  sub_24526C074(a1);
}

uint64_t sub_2452BCC78@<X0>(char *a1@<X8>)
{
  return sub_2452B62DC(a1);
}

uint64_t sub_2452BCD20()
{
  return sub_2452B52D0();
}

uint64_t sub_2452BCD34()
{
  return sub_2452B51A0();
}

uint64_t sub_2452BCD48@<X0>(uint64_t *a1@<X8>)
{
  return sub_2452B5188(a1);
}

unint64_t sub_2452BCD64@<X0>(unint64_t *a1@<X8>)
{
  return sub_2452B5484(a1);
}

uint64_t sub_2452BCD78@<X0>(uint64_t *a1@<X8>)
{
  return sub_2452B5304(a1);
}

uint64_t sub_2452BCD8C@<X0>(uint64_t a1@<X8>)
{
  return sub_2452B51C0(a1);
}

uint64_t static DeviceDescriptor.localDeviceName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;

  v0 = sub_2452C1C64();
  if (v1)
    return v0;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1760]), sel_init);
  v4 = objc_msgSend(v3, sel_hostName);
  v2 = sub_245387B18();

  return v2;
}

uint64_t static DeviceDescriptor.localMarketingName.getter()
{
  return sub_2452C1C64();
}

uint64_t static DeviceDescriptor.localProductType.getter()
{
  return sub_2452C1C64();
}

uint64_t DeviceDescriptor.init(id:name:protocolVersion:deviceType:screenDescriptor:zones:messageTypes:idsIdentityBlob:marketingName:productType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, char *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, uint64_t a10, uint64_t a11, unint64_t a12, __int128 a13, __int128 a14)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  unint64_t v51;
  uint64_t v52;
  _BOOL8 v53;
  uint64_t v54;
  char v55;
  unint64_t v56;
  char v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t result;
  _QWORD *v69;
  char v70;
  uint64_t v72;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  _QWORD v98[6];
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  char v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  unint64_t v109;
  __int128 v110;
  __int128 v111;
  char v112;

  v15 = a4;
  v16 = a11;
  v72 = *a5;
  v82 = a5[1];
  v81 = *a6;
  v79 = a7[1];
  v80 = *a7;
  v77 = a7[3];
  v78 = a7[2];
  v76 = *((_BYTE *)a7 + 32);
  v70 = *((_BYTE *)a7 + 33);
  v112 = v70;
  v17 = *(_QWORD *)(a8 + 16);
  if (v17)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_245261C30(a11, a12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = (uint64_t *)(a8 + 72);
    v19 = (_QWORD *)MEMORY[0x24BEE4B00];
    while (1)
    {
      v84 = v17;
      v22 = *(v18 - 5);
      v21 = *(v18 - 4);
      v24 = *(v18 - 3);
      v23 = *(v18 - 2);
      v25 = *(v18 - 1);
      v86 = *v18;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v98[0] = v19;
      v28 = sub_2452C1EB4(v22, v21, v24, v23);
      v29 = v19[2];
      v30 = (v27 & 1) == 0;
      v31 = v29 + v30;
      if (__OFADD__(v29, v30))
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        sub_2453883DC();
        __break(1u);
LABEL_39:
        result = sub_2453883DC();
        __break(1u);
        return result;
      }
      v32 = v27;
      if (v19[3] >= v31)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v19 = (_QWORD *)v98[0];
          if ((v27 & 1) == 0)
            goto LABEL_12;
        }
        else
        {
          sub_2452C7D64((uint64_t *)&unk_257450118);
          v19 = (_QWORD *)v98[0];
          if ((v32 & 1) == 0)
            goto LABEL_12;
        }
      }
      else
      {
        sub_2452C3068(v31, isUniquelyReferenced_nonNull_native);
        v33 = sub_2452C1EB4(v22, v21, v24, v23);
        if ((v32 & 1) != (v34 & 1))
          goto LABEL_38;
        v28 = v33;
        v19 = (_QWORD *)v98[0];
        if ((v32 & 1) == 0)
        {
LABEL_12:
          v19[(v28 >> 6) + 8] |= 1 << v28;
          v35 = (uint64_t *)(v19[6] + 32 * v28);
          *v35 = v22;
          v35[1] = v21;
          v35[2] = v24;
          v35[3] = v23;
          v36 = (uint64_t *)(v19[7] + 48 * v28);
          *v36 = v22;
          v36[1] = v21;
          v36[2] = v24;
          v36[3] = v23;
          v36[4] = v25;
          v36[5] = v86;
          v37 = v19[2];
          v38 = __OFADD__(v37, 1);
          v39 = v37 + 1;
          if (v38)
            goto LABEL_36;
          v19[2] = v39;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_4;
        }
      }
      v20 = (uint64_t *)(v19[7] + 48 * v28);
      *v20 = v22;
      v20[1] = v21;
      v20[2] = v24;
      v20[3] = v23;
      v20[4] = v25;
      v20[5] = v86;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_4:
      v18 += 6;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = v84 - 1;
      if (v84 == 1)
      {
        swift_bridgeObjectRelease();
        v15 = a4;
        v16 = a11;
        goto LABEL_18;
      }
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_245261C30(a11, a12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_18:
  swift_bridgeObjectRelease();
  v40 = *(_QWORD *)(a10 + 16);
  if (v40)
  {
    v69 = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41 = (uint64_t *)(a10 + 72);
    v42 = (_QWORD *)MEMORY[0x24BEE4B00];
    while (1)
    {
      v44 = *(v41 - 5);
      v45 = *(v41 - 4);
      v47 = *(v41 - 3);
      v46 = *(v41 - 2);
      v85 = v40;
      v87 = *(v41 - 1);
      v48 = *v41;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v49 = swift_isUniquelyReferenced_nonNull_native();
      v98[0] = v42;
      v51 = sub_2452C1DFC(v44, v45, v47, v46);
      v52 = v42[2];
      v53 = (v50 & 1) == 0;
      v54 = v52 + v53;
      if (__OFADD__(v52, v53))
        goto LABEL_35;
      v55 = v50;
      if (v42[3] >= v54)
      {
        if ((v49 & 1) == 0)
          sub_2452C7D64(&qword_2574500F0);
      }
      else
      {
        sub_2452C33D8(v54, v49);
        v56 = sub_2452C1DFC(v44, v45, v47, v46);
        if ((v55 & 1) != (v57 & 1))
          goto LABEL_39;
        v51 = v56;
      }
      v42 = (_QWORD *)v98[0];
      if ((v55 & 1) != 0)
      {
        v43 = (uint64_t *)(*(_QWORD *)(v98[0] + 56) + 48 * v51);
        *v43 = v44;
        v43[1] = v45;
        v43[2] = v47;
        v43[3] = v46;
        v43[4] = v87;
        v43[5] = v48;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        *(_QWORD *)(v98[0] + 8 * (v51 >> 6) + 64) |= 1 << v51;
        v58 = (uint64_t *)(v42[6] + 32 * v51);
        *v58 = v44;
        v58[1] = v45;
        v58[2] = v47;
        v58[3] = v46;
        v59 = (uint64_t *)(v42[7] + 48 * v51);
        *v59 = v44;
        v59[1] = v45;
        v59[2] = v47;
        v59[3] = v46;
        v59[4] = v87;
        v59[5] = v48;
        v60 = v42[2];
        v38 = __OFADD__(v60, 1);
        v61 = v60 + 1;
        if (v38)
          goto LABEL_37;
        v42[2] = v61;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v41 += 6;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 = v85 - 1;
      if (v85 == 1)
      {
        swift_bridgeObjectRelease();
        v15 = a4;
        v16 = a11;
        v62 = v69;
        goto LABEL_33;
      }
    }
  }
  swift_bridgeObjectRetain();
  v62 = v19;
  v42 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_33:
  swift_bridgeObjectRelease();
  *(_QWORD *)&v88 = a1;
  *((_QWORD *)&v88 + 1) = a2;
  *(_QWORD *)&v89 = a3;
  *((_QWORD *)&v89 + 1) = v15;
  *(_QWORD *)&v90 = v72;
  *((_QWORD *)&v90 + 1) = v82;
  LOBYTE(v91) = v81;
  *((_QWORD *)&v91 + 1) = v80;
  *(_QWORD *)&v92 = v79;
  *((_QWORD *)&v92 + 1) = v78;
  *(_QWORD *)&v93 = v77;
  BYTE8(v93) = v76;
  BYTE9(v93) = v70;
  *(_QWORD *)&v94 = v62;
  *((_QWORD *)&v94 + 1) = v42;
  *(_QWORD *)&v95 = v16;
  *((_QWORD *)&v95 + 1) = a12;
  v96 = a13;
  v97 = a14;
  swift_bridgeObjectRetain();
  sub_24526432C((uint64_t)&v88);
  sub_24525FFF8(v16, a12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v63 = v95;
  a9[6] = v94;
  a9[7] = v63;
  v64 = v97;
  a9[8] = v96;
  a9[9] = v64;
  v65 = v91;
  a9[2] = v90;
  a9[3] = v65;
  v66 = v93;
  a9[4] = v92;
  a9[5] = v66;
  v67 = v89;
  *a9 = v88;
  a9[1] = v67;
  v98[0] = a1;
  v98[1] = a2;
  v98[2] = a3;
  v98[3] = v15;
  v98[4] = v72;
  v98[5] = v82;
  v99 = v81;
  v100 = v80;
  v101 = v79;
  v102 = v78;
  v103 = v77;
  v104 = v76;
  v105 = v112;
  v106 = v62;
  v107 = v42;
  v108 = v16;
  v109 = a12;
  v110 = a13;
  v111 = a14;
  return sub_245269928((uint64_t)v98);
}

uint64_t DeviceDescriptor.handshakeDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t DeviceDescriptor.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceDescriptor.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DeviceDescriptor.id.modify())()
{
  return nullsub_1;
}

uint64_t DeviceDescriptor.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceDescriptor.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*DeviceDescriptor.name.modify())()
{
  return nullsub_1;
}

__n128 DeviceDescriptor.protocolVersion.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = v1[2];
  *a1 = result;
  return result;
}

__n128 DeviceDescriptor.protocolVersion.setter(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  result = *a1;
  v1[2] = *a1;
  return result;
}

uint64_t (*DeviceDescriptor.protocolVersion.modify())()
{
  return nullsub_1;
}

void DeviceDescriptor.deviceType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 48);
}

_BYTE *DeviceDescriptor.deviceType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = *result;
  return result;
}

uint64_t (*DeviceDescriptor.deviceType.modify())()
{
  return nullsub_1;
}

__n128 DeviceDescriptor.screenDescriptor.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;
  __n128 result;
  __int128 v5;

  v2 = *(_BYTE *)(v1 + 88);
  v3 = *(_BYTE *)(v1 + 89);
  result = *(__n128 *)(v1 + 56);
  v5 = *(_OWORD *)(v1 + 72);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 32) = v2;
  *(_BYTE *)(a1 + 33) = v3;
  return result;
}

__n128 DeviceDescriptor.screenDescriptor.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  char v3;
  __n128 result;
  __int128 v5;

  v2 = *(_BYTE *)(a1 + 32);
  v3 = *(_BYTE *)(a1 + 33);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 56) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 72) = v5;
  *(_BYTE *)(v1 + 88) = v2;
  *(_BYTE *)(v1 + 89) = v3;
  return result;
}

uint64_t (*DeviceDescriptor.screenDescriptor.modify())()
{
  return nullsub_1;
}

uint64_t DeviceDescriptor.zones.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DeviceDescriptor.zones.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 96) = a1;
  return result;
}

uint64_t (*DeviceDescriptor.zones.modify())()
{
  return nullsub_1;
}

uint64_t DeviceDescriptor.messageTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DeviceDescriptor.messageTypes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 104) = a1;
  return result;
}

uint64_t (*DeviceDescriptor.messageTypes.modify())()
{
  return nullsub_1;
}

uint64_t DeviceDescriptor.idsIdentityBlob.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  sub_245261C30(v1, *(_QWORD *)(v0 + 120));
  return v1;
}

uint64_t DeviceDescriptor.idsIdentityBlob.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_24525FFF8(*(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120));
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return result;
}

uint64_t (*DeviceDescriptor.idsIdentityBlob.modify())()
{
  return nullsub_1;
}

uint64_t DeviceDescriptor.marketingName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceDescriptor.marketingName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = a2;
  return result;
}

uint64_t (*DeviceDescriptor.marketingName.modify())()
{
  return nullsub_1;
}

uint64_t DeviceDescriptor.productType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceDescriptor.productType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 144) = a1;
  *(_QWORD *)(v2 + 152) = a2;
  return result;
}

uint64_t (*DeviceDescriptor.productType.modify())()
{
  return nullsub_1;
}

void DeviceDescriptor.connectionType.getter(BOOL *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 48) == 4;
}

uint64_t DeviceDescriptor.isPlaceholder.getter()
{
  uint64_t v0;
  BOOL v1;

  if (*(_QWORD *)(v0 + 16))
    v1 = 0;
  else
    v1 = *(_QWORD *)(v0 + 24) == 0xE000000000000000;
  if (v1)
    return 1;
  else
    return sub_245388274();
}

uint64_t DeviceDescriptor.shortDescription.getter()
{
  sub_245387EA8();
  sub_245387B90();
  swift_bridgeObjectRetain();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  swift_bridgeObjectRetain();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  sub_245387F5C();
  sub_245387B90();
  sub_24533B4C8();
  sub_245387B90();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  return 0;
}

uint64_t sub_2452BDA40(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char v22;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452418);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v16 = *(_QWORD *)(v1 + 24);
  v17 = v7;
  v8 = *(_QWORD *)(v1 + 32);
  v14 = *(_QWORD *)(v1 + 40);
  v15 = v8;
  v21 = *(unsigned __int8 *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452CC2B4();
  sub_24538849C();
  LOBYTE(v19) = 0;
  v9 = v18;
  sub_2453880A0();
  if (!v9)
  {
    v11 = v14;
    v10 = v15;
    LOBYTE(v19) = 1;
    sub_2453880A0();
    v19 = v10;
    v20 = v11;
    v22 = 2;
    sub_2452CBF4C();
    sub_2453880B8();
    LOBYTE(v19) = 3;
    sub_2453880AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2452BDBEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2574524B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452CC2B4();
  sub_245388490();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v25) = 0;
  v9 = sub_24538801C();
  v11 = v10;
  v24 = v9;
  LOBYTE(v25) = 1;
  swift_bridgeObjectRetain();
  v12 = sub_24538801C();
  v14 = v13;
  v22 = v12;
  v27 = 2;
  sub_2452CC378();
  swift_bridgeObjectRetain();
  v23 = v14;
  sub_245388034();
  v20 = v26;
  v21 = v25;
  LOBYTE(v25) = 3;
  LOBYTE(v14) = sub_245388028();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v16 = v14 & 1;
  v17 = v23;
  *(_QWORD *)a2 = v24;
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v22;
  *(_QWORD *)(a2 + 24) = v17;
  v18 = v20;
  *(_QWORD *)(a2 + 32) = v21;
  *(_QWORD *)(a2 + 40) = v18;
  *(_BYTE *)(a2 + 48) = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2452BDE60(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452408);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v20 = *(_QWORD *)(v1 + 24);
  v21 = v7;
  v8 = *(_QWORD *)(v1 + 32);
  v18 = *(_QWORD *)(v1 + 40);
  v19 = v8;
  v25 = *(unsigned __int8 *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 56);
  v16 = *(_QWORD *)(v1 + 64);
  v17 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452CC270();
  sub_24538849C();
  LOBYTE(v23) = 0;
  v10 = v22;
  sub_2453880A0();
  if (!v10)
  {
    v12 = v18;
    v11 = v19;
    v13 = v25;
    LOBYTE(v23) = 1;
    sub_2453880A0();
    v23 = v11;
    v24 = v12;
    v26 = 2;
    sub_2452CBF4C();
    sub_2453880B8();
    LOBYTE(v23) = v13;
    v26 = 3;
    sub_2452CBF90();
    sub_2453880B8();
    v23 = v17;
    v26 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF30);
    sub_2452CC400(&qword_25744FF38, (uint64_t (*)(void))sub_2452CC018, (uint64_t (*)(void))sub_2452CC05C, MEMORY[0x24BEE04C0]);
    sub_2453880B8();
    v23 = v16;
    v26 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF10);
    sub_2452CC0A0((unint64_t *)&unk_25744FF18, (uint64_t (*)(void))sub_2452CC11C, (uint64_t (*)(void))sub_2452CC160, MEMORY[0x24BEE04C0]);
    sub_2453880B8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2452BE108@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char v31;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2574524C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452CC270();
  sub_245388490();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v28) = 0;
  v9 = sub_24538801C();
  v11 = v10;
  v27 = v9;
  LOBYTE(v28) = 1;
  swift_bridgeObjectRetain();
  v12 = sub_24538801C();
  v14 = v13;
  v26 = v12;
  v31 = 2;
  sub_2452CC378();
  swift_bridgeObjectRetain();
  sub_245388034();
  v24 = v28;
  v25 = v14;
  v15 = v29;
  v31 = 3;
  sub_2452CC3BC();
  sub_245388034();
  v23 = v15;
  v30 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF30);
  v31 = 4;
  sub_2452CC400(&qword_25744FF40, (uint64_t (*)(void))sub_2452CC47C, (uint64_t (*)(void))sub_2452CC4C0, MEMORY[0x24BEE04E0]);
  sub_245388034();
  v17 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF10);
  v31 = 5;
  sub_2452CC0A0(&qword_25744FF28, (uint64_t (*)(void))sub_2452CC504, (uint64_t (*)(void))sub_2452CC548, MEMORY[0x24BEE04E0]);
  v22 = v17;
  swift_bridgeObjectRetain();
  sub_245388034();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v18 = v28;
  swift_bridgeObjectRetain();
  v19 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v27;
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v26;
  *(_QWORD *)(a2 + 24) = v19;
  v21 = v22;
  v20 = v23;
  *(_QWORD *)(a2 + 32) = v24;
  *(_QWORD *)(a2 + 40) = v20;
  *(_BYTE *)(a2 + 48) = v30;
  *(_QWORD *)(a2 + 56) = v21;
  *(_QWORD *)(a2 + 64) = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2452BE528@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

BOOL sub_2452BE538(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2452BE554()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2452BE578 + 4 * byte_24538A6B0[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_2452BE578()
{
  return 1701667182;
}

uint64_t sub_2452BE588()
{
  return 0x6C6F636F746F7270;
}

uint64_t sub_2452BE5AC()
{
  return 0x656372756F537369;
}

uint64_t sub_2452BE5C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2452CD198(a1, a2);
  *a3 = result;
  return result;
}

void sub_2452BE5E8(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_2452BE5F4()
{
  sub_2452CC2B4();
  return sub_2453884D8();
}

uint64_t sub_2452BE61C()
{
  sub_2452CC2B4();
  return sub_2453884E4();
}

uint64_t sub_2452BE644@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2452BDBEC(a1, a2);
}

uint64_t sub_2452BE658(_QWORD *a1)
{
  return sub_2452BDA40(a1);
}

uint64_t sub_2452BE66C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2452BE690 + 4 * byte_24538A6B4[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_2452BE690()
{
  return 1701667182;
}

uint64_t sub_2452BE6A0()
{
  return 0x6C6F636F746F7270;
}

uint64_t sub_2452BE6C4()
{
  return 0x7954656369766564;
}

uint64_t sub_2452BE6E0()
{
  return 0x73656E6F7ALL;
}

uint64_t sub_2452BE6F4()
{
  return 0x546567617373656DLL;
}

uint64_t sub_2452BE714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2452CD34C(a1, a2);
  *a3 = result;
  return result;
}

void sub_2452BE738(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_2452BE744()
{
  sub_2452CC270();
  return sub_2453884D8();
}

uint64_t sub_2452BE76C()
{
  sub_2452CC270();
  return sub_2453884E4();
}

uint64_t sub_2452BE794@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2452BE108(a1, a2);
}

uint64_t sub_2452BE7A8(_QWORD *a1)
{
  return sub_2452BDE60(a1);
}

uint64_t sub_2452BE7BC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2452BE7E4 + 4 * byte_24538A6BA[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_2452BE7E4()
{
  return 1701667182;
}

uint64_t sub_2452BE7F4()
{
  return 0x6C6F636F746F7270;
}

uint64_t sub_2452BE818()
{
  return 0x7954656369766564;
}

unint64_t sub_2452BE834()
{
  return 0xD000000000000010;
}

uint64_t sub_2452BE850()
{
  return 0x73656E6F7ALL;
}

uint64_t sub_2452BE864()
{
  return 0x546567617373656DLL;
}

uint64_t sub_2452BE884(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  int v37;
  char v38;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574523F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = *(_QWORD *)(v1 + 16);
  v28 = *(_QWORD *)(v1 + 24);
  v29 = v6;
  v7 = *(_QWORD *)(v1 + 32);
  v26 = *(_QWORD *)(v1 + 40);
  v27 = v7;
  v37 = *(unsigned __int8 *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 64);
  v20 = *(_QWORD *)(v1 + 56);
  v21 = v8;
  v22 = *(_QWORD *)(v1 + 72);
  v25 = *(_QWORD *)(v1 + 80);
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 88);
  v23 = *(unsigned __int8 *)(v1 + 89);
  v24 = v7;
  v9 = *(_QWORD *)(v1 + 104);
  v19 = *(_QWORD *)(v1 + 96);
  v10 = a1[3];
  v11 = a1;
  v12 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_2452CC22C();
  v13 = v3;
  sub_24538849C();
  LOBYTE(v31) = 0;
  v14 = v30;
  sub_2453880A0();
  if (!v14)
  {
    v15 = v26;
    v16 = v27;
    v17 = v37;
    LOBYTE(v31) = 1;
    sub_2453880A0();
    v31 = v16;
    v32 = v15;
    v38 = 2;
    sub_2452CBF4C();
    sub_2453880B8();
    LOBYTE(v31) = v17;
    v38 = 3;
    sub_2452CBF90();
    sub_2453880B8();
    v31 = v20;
    v32 = v21;
    v33 = v22;
    v34 = v25;
    v35 = v24;
    v36 = v23;
    v38 = 4;
    sub_2452CBFD4();
    sub_245388088();
    v31 = v19;
    v38 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF30);
    sub_2452CC400(&qword_25744FF38, (uint64_t (*)(void))sub_2452CC018, (uint64_t (*)(void))sub_2452CC05C, MEMORY[0x24BEE04C0]);
    sub_2453880B8();
    v31 = v9;
    v38 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF10);
    sub_2452CC0A0((unint64_t *)&unk_25744FF18, (uint64_t (*)(void))sub_2452CC11C, (uint64_t (*)(void))sub_2452CC160, MEMORY[0x24BEE04C0]);
    sub_2453880B8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v12, v13);
}

uint64_t sub_2452BEBB0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  int v43;
  char v44;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2574524D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452CC22C();
  sub_245388490();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v37) = 0;
  v9 = sub_24538801C();
  v11 = v10;
  v36 = v9;
  LOBYTE(v37) = 1;
  swift_bridgeObjectRetain();
  v12 = sub_24538801C();
  v14 = v13;
  v34 = v12;
  v35 = v11;
  v44 = 2;
  sub_2452CC378();
  swift_bridgeObjectRetain();
  sub_245388034();
  v33 = v14;
  v16 = v37;
  v17 = v38;
  v44 = 3;
  sub_2452CC3BC();
  sub_245388034();
  v31 = v16;
  v32 = v17;
  LODWORD(v16) = v37;
  v44 = 4;
  sub_2452CC58C();
  sub_245388004();
  v43 = v16;
  v29 = v37;
  v30 = v38;
  v27 = v40;
  v28 = v39;
  LODWORD(v17) = v41;
  LODWORD(v16) = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF30);
  v44 = 5;
  sub_2452CC400(&qword_25744FF40, (uint64_t (*)(void))sub_2452CC47C, (uint64_t (*)(void))sub_2452CC4C0, MEMORY[0x24BEE04E0]);
  sub_245388034();
  v25 = v16;
  v26 = v17;
  v18 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF10);
  v44 = 6;
  sub_2452CC0A0(&qword_25744FF28, (uint64_t (*)(void))sub_2452CC504, (uint64_t (*)(void))sub_2452CC548, MEMORY[0x24BEE04E0]);
  swift_bridgeObjectRetain();
  sub_245388034();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v19 = v37;
  v20 = v35;
  swift_bridgeObjectRetain();
  v21 = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v36;
  *(_QWORD *)(a2 + 8) = v20;
  *(_QWORD *)(a2 + 16) = v34;
  *(_QWORD *)(a2 + 24) = v21;
  v22 = v32;
  *(_QWORD *)(a2 + 32) = v31;
  *(_QWORD *)(a2 + 40) = v22;
  *(_BYTE *)(a2 + 48) = v43;
  v23 = v30;
  *(_QWORD *)(a2 + 56) = v29;
  *(_QWORD *)(a2 + 64) = v23;
  v24 = v27;
  *(_QWORD *)(a2 + 72) = v28;
  *(_QWORD *)(a2 + 80) = v24;
  *(_BYTE *)(a2 + 88) = v26;
  *(_BYTE *)(a2 + 89) = v25;
  *(_QWORD *)(a2 + 96) = v18;
  *(_QWORD *)(a2 + 104) = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2452BF084()
{
  unsigned __int8 *v0;

  return sub_2452BE7BC(*v0);
}

uint64_t sub_2452BF08C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2452CD5E4(a1, a2);
  *a3 = result;
  return result;
}

void sub_2452BF0B0(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_2452BF0BC()
{
  sub_2452CC22C();
  return sub_2453884D8();
}

uint64_t sub_2452BF0E4()
{
  sub_2452CC22C();
  return sub_2453884E4();
}

uint64_t sub_2452BF10C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2452BEBB0(a1, a2);
}

uint64_t sub_2452BF120(_QWORD *a1)
{
  return sub_2452BE884(a1);
}

uint64_t sub_2452BF134(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2452BF15C + 4 * byte_24538A6C1[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_2452BF15C()
{
  return 1701667182;
}

uint64_t sub_2452BF16C()
{
  return 0x6C6F636F746F7270;
}

uint64_t sub_2452BF190()
{
  return 0x7954656369766564;
}

unint64_t sub_2452BF1AC()
{
  return 0xD000000000000010;
}

uint64_t sub_2452BF1C8()
{
  return 0x73656E6F7ALL;
}

uint64_t sub_2452BF1DC()
{
  return 0x546567617373656DLL;
}

uint64_t sub_2452BF1FC()
{
  return 0x746E656449736469;
}

uint64_t sub_2452BF220(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  int v40;
  char v41;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574523E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = *(_QWORD *)(v1 + 16);
  v31 = *(_QWORD *)(v1 + 24);
  v32 = v6;
  v7 = *(_QWORD *)(v1 + 32);
  v29 = *(_QWORD *)(v1 + 40);
  v30 = v7;
  v40 = *(unsigned __int8 *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 64);
  v22 = *(_QWORD *)(v1 + 56);
  v23 = v8;
  v9 = *(_QWORD *)(v1 + 72);
  v26 = *(_QWORD *)(v1 + 80);
  v27 = v9;
  LODWORD(v9) = *(unsigned __int8 *)(v1 + 88);
  v24 = *(unsigned __int8 *)(v1 + 89);
  v25 = v9;
  v10 = *(_QWORD *)(v1 + 96);
  v20 = *(_QWORD *)(v1 + 104);
  v21 = v10;
  v11 = *(_QWORD *)(v1 + 120);
  v28 = *(_QWORD *)(v1 + 112);
  v12 = a1[3];
  v13 = a1;
  v14 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v13, v12);
  sub_2452CC1E8();
  sub_24538849C();
  LOBYTE(v34) = 0;
  v15 = v33;
  sub_2453880A0();
  if (!v15)
  {
    v17 = v29;
    v16 = v30;
    v33 = v11;
    v18 = v28;
    LOBYTE(v34) = 1;
    sub_2453880A0();
    v34 = v16;
    v35 = v17;
    v41 = 2;
    sub_2452CBF4C();
    sub_2453880B8();
    LOBYTE(v34) = v40;
    v41 = 3;
    sub_2452CBF90();
    sub_2453880B8();
    v34 = v22;
    v35 = v23;
    v36 = v27;
    v37 = v26;
    v38 = v25;
    v39 = v24;
    v41 = 4;
    sub_2452CBFD4();
    sub_245388088();
    v34 = v21;
    v41 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF30);
    sub_2452CC400(&qword_25744FF38, (uint64_t (*)(void))sub_2452CC018, (uint64_t (*)(void))sub_2452CC05C, MEMORY[0x24BEE04C0]);
    sub_2453880B8();
    v34 = v20;
    v41 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF10);
    sub_2452CC0A0((unint64_t *)&unk_25744FF18, (uint64_t (*)(void))sub_2452CC11C, (uint64_t (*)(void))sub_2452CC160, MEMORY[0x24BEE04C0]);
    sub_2453880B8();
    v34 = v18;
    v35 = v33;
    v41 = 7;
    sub_2452CC1A4();
    sub_245388088();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v14, v3);
}

uint64_t sub_2452BF5A0@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  _BYTE v59[7];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  int v66;
  __int16 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  unint64_t v74;
  int v75;
  __int16 v76;
  char v77;
  _DWORD v78[3];
  uint64_t v79;

  v79 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2574524E0);
  v5 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452CC1E8();
  sub_245388490();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_24525FFF8(0, 0xF000000000000000);
  }
  else
  {
    v8 = v5;
    v43 = a2;
    LOBYTE(v52) = 0;
    v9 = sub_24538801C();
    v11 = v10;
    v42 = v9;
    LOBYTE(v52) = 1;
    swift_bridgeObjectRetain();
    v13 = (uint64_t)a1;
    v12 = sub_24538801C();
    v15 = v14;
    v41 = v12;
    LOBYTE(v44) = 2;
    sub_2452CC378();
    swift_bridgeObjectRetain();
    sub_245388034();
    v39 = v52;
    v40 = v15;
    v16 = v53;
    LOBYTE(v44) = 3;
    sub_2452CC3BC();
    sub_245388034();
    v38 = v16;
    v37 = v52;
    LOBYTE(v44) = 4;
    sub_2452CC58C();
    sub_245388004();
    v35 = v53;
    v36 = v52;
    v33 = v55;
    v34 = v54;
    v32 = v56;
    LODWORD(v16) = BYTE1(v56);
    v77 = BYTE1(v56);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF30);
    LOBYTE(v44) = 5;
    sub_2452CC400(&qword_25744FF40, (uint64_t (*)(void))sub_2452CC47C, (uint64_t (*)(void))sub_2452CC4C0, MEMORY[0x24BEE04E0]);
    sub_245388034();
    v31 = v16;
    v17 = v52;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF10);
    LOBYTE(v44) = 6;
    sub_2452CC0A0(&qword_25744FF28, (uint64_t (*)(void))sub_2452CC504, (uint64_t (*)(void))sub_2452CC548, MEMORY[0x24BEE04E0]);
    swift_bridgeObjectRetain();
    sub_245388034();
    v30 = v17;
    v18 = v52;
    v72 = 7;
    sub_2452CC5D0();
    swift_bridgeObjectRetain();
    sub_245388004();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v79);
    v20 = v73;
    v19 = v74;
    sub_245261C30(v73, v74);
    sub_24525FFF8(0, 0xF000000000000000);
    *(_QWORD *)&v44 = v42;
    *((_QWORD *)&v44 + 1) = v11;
    v21 = v40;
    *(_QWORD *)&v45 = v41;
    *((_QWORD *)&v45 + 1) = v40;
    *(_QWORD *)&v46 = v39;
    *((_QWORD *)&v46 + 1) = v38;
    LOBYTE(v47) = v37;
    *((_QWORD *)&v47 + 1) = v36;
    *(_QWORD *)&v48 = v35;
    *((_QWORD *)&v48 + 1) = v34;
    *(_QWORD *)&v49 = v33;
    BYTE8(v49) = v32;
    BYTE9(v49) = v31;
    v22 = v30;
    *(_QWORD *)&v50 = v30;
    *((_QWORD *)&v50 + 1) = v18;
    *(_QWORD *)&v51 = v20;
    *((_QWORD *)&v51 + 1) = v19;
    sub_2452CC614((uint64_t)&v44);
    sub_24525FFF8(v20, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = v49;
    v24 = v43;
    v43[4] = v48;
    v24[5] = v23;
    v25 = v51;
    v24[6] = v50;
    v24[7] = v25;
    v26 = v45;
    *v24 = v44;
    v24[1] = v26;
    v27 = v47;
    v24[2] = v46;
    v24[3] = v27;
    __swift_destroy_boxed_opaque_existential_1(v13);
    v52 = v42;
    v53 = v11;
    v54 = v41;
    v55 = v21;
    v56 = v39;
    v57 = v38;
    v58 = v37;
    *(_DWORD *)v59 = v78[0];
    *(_DWORD *)&v59[3] = *(_DWORD *)((char *)v78 + 3);
    v60 = v36;
    v61 = v35;
    v62 = v34;
    v63 = v33;
    v64 = v32;
    v65 = v77;
    v67 = v76;
    v66 = v75;
    v68 = v22;
    v69 = v18;
    v70 = v20;
    v71 = v19;
    return sub_2452CAD98((uint64_t)&v52);
  }
}

uint64_t sub_2452BFC30()
{
  unsigned __int8 *v0;

  return sub_2452BF134(*v0);
}

uint64_t sub_2452BFC38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2452CD8D8(a1, a2);
  *a3 = result;
  return result;
}

void sub_2452BFC5C(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_2452BFC68()
{
  sub_2452CC1E8();
  return sub_2453884D8();
}

uint64_t sub_2452BFC90()
{
  sub_2452CC1E8();
  return sub_2453884E4();
}

uint64_t sub_2452BFCB8@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_2452BF5A0(a1, a2);
}

uint64_t sub_2452BFCCC(_QWORD *a1)
{
  return sub_2452BF220(a1);
}

uint64_t sub_2452BFCE0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2452BFD08 + 4 * byte_24538A6C9[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_2452BFD08()
{
  return 1701667182;
}

uint64_t sub_2452BFD18()
{
  return 0x6C6F636F746F7270;
}

uint64_t sub_2452BFD3C()
{
  return 0x7954656369766564;
}

unint64_t sub_2452BFD58()
{
  return 0xD000000000000010;
}

uint64_t sub_2452BFD74()
{
  return 0x73656E6F7ALL;
}

uint64_t sub_2452BFD88()
{
  return 0x546567617373656DLL;
}

uint64_t sub_2452BFDA8()
{
  return 0x746E656449736469;
}

uint64_t sub_2452BFDCC()
{
  return 0x6E6974656B72616DLL;
}

uint64_t sub_2452BFDF0()
{
  return 0x54746375646F7270;
}

uint64_t sub_2452BFE10(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  int v46;
  char v47;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574523D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v37 = *(_QWORD *)(v1 + 24);
  v38 = v7;
  v8 = *(_QWORD *)(v1 + 32);
  v35 = *(_QWORD *)(v1 + 40);
  v36 = v8;
  v46 = *(unsigned __int8 *)(v1 + 48);
  v34 = *(_QWORD *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 72);
  v28 = *(_QWORD *)(v1 + 64);
  v29 = v9;
  v30 = *(_QWORD *)(v1 + 80);
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 88);
  v31 = *(unsigned __int8 *)(v1 + 89);
  v32 = v8;
  v10 = *(_QWORD *)(v1 + 96);
  v26 = *(_QWORD *)(v1 + 104);
  v27 = v10;
  v11 = *(_QWORD *)(v1 + 120);
  v24 = *(_QWORD *)(v1 + 112);
  v25 = v11;
  v23[1] = *(_QWORD *)(v1 + 128);
  v23[2] = *(_QWORD *)(v1 + 136);
  v12 = *(_QWORD *)(v1 + 152);
  v33 = *(_QWORD *)(v1 + 144);
  v13 = a1[3];
  v14 = a1;
  v16 = v15;
  __swift_project_boxed_opaque_existential_1(v14, v13);
  sub_2452CBF08();
  sub_24538849C();
  LOBYTE(v40) = 0;
  v17 = v39;
  sub_2453880A0();
  if (!v17)
  {
    v19 = v35;
    v18 = v36;
    v20 = v46;
    v39 = v12;
    v21 = v34;
    LOBYTE(v40) = 1;
    sub_2453880A0();
    v40 = v18;
    v41 = v19;
    v47 = 2;
    sub_2452CBF4C();
    sub_2453880B8();
    LOBYTE(v40) = v20;
    v47 = 3;
    sub_2452CBF90();
    sub_2453880B8();
    v40 = v21;
    v41 = v28;
    v42 = v29;
    v43 = v30;
    v44 = v32;
    v45 = v31;
    v47 = 4;
    sub_2452CBFD4();
    sub_245388088();
    v40 = v27;
    v47 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF30);
    sub_2452CC400(&qword_25744FF38, (uint64_t (*)(void))sub_2452CC018, (uint64_t (*)(void))sub_2452CC05C, MEMORY[0x24BEE04C0]);
    sub_2453880B8();
    v40 = v26;
    v47 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF10);
    sub_2452CC0A0((unint64_t *)&unk_25744FF18, (uint64_t (*)(void))sub_2452CC11C, (uint64_t (*)(void))sub_2452CC160, MEMORY[0x24BEE04C0]);
    sub_2453880B8();
    v40 = v24;
    v41 = v25;
    v47 = 7;
    sub_2452CC1A4();
    sub_245388088();
    LOBYTE(v40) = 8;
    sub_24538807C();
    LOBYTE(v40) = 9;
    sub_24538807C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v16);
}

uint64_t sub_2452C01E8@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  _BYTE v76[7];
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char v82;
  int v83;
  __int16 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  int v94;
  __int16 v95;
  char v96;
  _DWORD v97[3];
  _QWORD *v98;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2574524F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = 1;
  v9 = a1[3];
  v98 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_2452CBF08();
  sub_245388490();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
    sub_24525FFF8(0, 0xF000000000000000);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v58 = v6;
    LOBYTE(v69) = 0;
    v10 = sub_24538801C();
    v12 = v11;
    v57 = v10;
    LOBYTE(v69) = 1;
    swift_bridgeObjectRetain();
    v13 = sub_24538801C();
    v15 = v14;
    LOBYTE(v59) = 2;
    sub_2452CC378();
    swift_bridgeObjectRetain();
    sub_245388034();
    v55 = v69;
    v56 = v15;
    v16 = v70;
    LOBYTE(v59) = 3;
    sub_2452CC3BC();
    sub_245388034();
    v54 = v16;
    LODWORD(v16) = v69;
    LOBYTE(v59) = 4;
    sub_2452CC58C();
    sub_245388004();
    v53 = v16;
    v51 = v70;
    v52 = v69;
    v49 = v72;
    v50 = v71;
    v48 = v73;
    LODWORD(v16) = BYTE1(v73);
    v96 = BYTE1(v73);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF30);
    LOBYTE(v59) = 5;
    sub_2452CC400(&qword_25744FF40, (uint64_t (*)(void))sub_2452CC47C, (uint64_t (*)(void))sub_2452CC4C0, MEMORY[0x24BEE04E0]);
    sub_245388034();
    v46 = v16;
    v17 = v69;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25744FF10);
    LOBYTE(v59) = 6;
    sub_2452CC0A0(&qword_25744FF28, (uint64_t (*)(void))sub_2452CC504, (uint64_t (*)(void))sub_2452CC548, MEMORY[0x24BEE04E0]);
    swift_bridgeObjectRetain();
    sub_245388034();
    v45 = v17;
    v18 = v69;
    LOBYTE(v59) = 7;
    sub_2452CC5D0();
    swift_bridgeObjectRetain();
    v44 = 0;
    sub_245388004();
    v47 = v18;
    v41 = a2;
    v42 = v13;
    v43 = v12;
    v19 = v69;
    v20 = v70;
    LOBYTE(v69) = 8;
    sub_245261C30(v19, v70);
    v21 = sub_245387FF8();
    v23 = v22;
    v40 = v21;
    v93 = 9;
    swift_bridgeObjectRetain();
    v24 = sub_245387FF8();
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v58 + 8))(v8, v5);
    v39 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v27 = v43;
    *(_QWORD *)&v59 = v57;
    *((_QWORD *)&v59 + 1) = v43;
    *(_QWORD *)&v60 = v42;
    *((_QWORD *)&v60 + 1) = v56;
    *(_QWORD *)&v61 = v55;
    *((_QWORD *)&v61 + 1) = v54;
    LOBYTE(v62) = v53;
    *((_QWORD *)&v62 + 1) = v52;
    *(_QWORD *)&v63 = v51;
    *((_QWORD *)&v63 + 1) = v50;
    *(_QWORD *)&v64 = v49;
    BYTE8(v64) = v48;
    BYTE9(v64) = v46;
    *(_QWORD *)&v65 = v45;
    *((_QWORD *)&v65 + 1) = v47;
    *(_QWORD *)&v66 = v19;
    *((_QWORD *)&v66 + 1) = v20;
    *(_QWORD *)&v67 = v40;
    *((_QWORD *)&v67 + 1) = v23;
    *(_QWORD *)&v68 = v24;
    *((_QWORD *)&v68 + 1) = v26;
    sub_24526432C((uint64_t)&v59);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24525FFF8(v19, v20);
    v28 = v27;
    swift_bridgeObjectRelease();
    v29 = v56;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = v47;
    swift_bridgeObjectRelease();
    v31 = v66;
    v32 = v41;
    v41[6] = v65;
    v32[7] = v31;
    v33 = v68;
    v32[8] = v67;
    v32[9] = v33;
    v34 = v62;
    v32[2] = v61;
    v32[3] = v34;
    v35 = v64;
    v32[4] = v63;
    v32[5] = v35;
    v36 = v60;
    *v32 = v59;
    v32[1] = v36;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
    v69 = v57;
    v70 = v28;
    v71 = v42;
    v72 = v29;
    v73 = v55;
    v74 = v54;
    v75 = v53;
    *(_DWORD *)v76 = v97[0];
    *(_DWORD *)&v76[3] = *(_DWORD *)((char *)v97 + 3);
    v77 = v52;
    v78 = v51;
    v79 = v50;
    v80 = v49;
    v81 = v48;
    v82 = v96;
    v84 = v95;
    v83 = v94;
    v85 = v45;
    v86 = v30;
    v87 = v19;
    v88 = v20;
    v89 = v40;
    v90 = v23;
    v91 = v24;
    v92 = v39;
    return sub_245269928((uint64_t)&v69);
  }
}

uint64_t sub_2452C0A20()
{
  unsigned __int8 *v0;

  return sub_2452BFCE0(*v0);
}

uint64_t sub_2452C0A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2452CDC54(a1, a2);
  *a3 = result;
  return result;
}

void sub_2452C0A4C(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_2452C0A58()
{
  sub_2452CBF08();
  return sub_2453884D8();
}

uint64_t sub_2452C0A80()
{
  sub_2452CBF08();
  return sub_2453884E4();
}

uint64_t sub_2452C0AA8@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_2452C01E8(a1, a2);
}

uint64_t sub_2452C0ABC(_QWORD *a1)
{
  return sub_2452BFE10(a1);
}

uint64_t DeviceDescriptor.encode(to:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  ValueMetadata *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35[2];
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  ValueMetadata *v41;
  unint64_t v42;

  v2 = v1[1];
  v30 = *v1;
  v3 = v1[3];
  v32 = v1[2];
  v33 = v1[4];
  v34 = v1[5];
  v31 = *((unsigned __int8 *)v1 + 48);
  v22 = v1[7];
  v23 = v1[8];
  v24 = v1[9];
  v25 = v1[10];
  v26 = *((_BYTE *)v1 + 88);
  v27 = *((_BYTE *)v1 + 89);
  v4 = v1[14];
  v28 = v1[12];
  v29 = v1[13];
  v5 = v1[15];
  v6 = v1[17];
  v20 = v1[16];
  v21 = v1[18];
  v7 = v1[19];
  sub_24525E4F0(a1, (uint64_t)v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452380);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452388);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_2452B7C5C(v35, (uint64_t)v37);
    v8 = v38;
    v9 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
    if ((v11 & 1) == 0)
    {
      if (v10 <= 7)
      {
        v12 = &type metadata for DeviceDescriptor.Versions.V0;
        v41 = &type metadata for DeviceDescriptor.Versions.V0;
        v42 = sub_2452CAD28();
        v13 = swift_allocObject();
        v40[0] = v13;
        *(_QWORD *)(v13 + 16) = v30;
        *(_QWORD *)(v13 + 24) = v2;
        *(_QWORD *)(v13 + 32) = v32;
        *(_QWORD *)(v13 + 40) = v3;
        *(_QWORD *)(v13 + 48) = v33;
        *(_QWORD *)(v13 + 56) = v34;
        *(_BYTE *)(v13 + 64) = v31 == 2;
LABEL_16:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
        goto LABEL_17;
      }
      if (v10 == 9)
      {
        v12 = &type metadata for DeviceDescriptor.Versions.V9;
        v41 = &type metadata for DeviceDescriptor.Versions.V9;
        v42 = sub_2452CAC28();
        v16 = swift_allocObject();
        v40[0] = v16;
        *(_QWORD *)(v16 + 16) = v30;
        *(_QWORD *)(v16 + 24) = v2;
        *(_QWORD *)(v16 + 32) = v32;
        *(_QWORD *)(v16 + 40) = v3;
        *(_QWORD *)(v16 + 48) = v33;
        *(_QWORD *)(v16 + 56) = v34;
        *(_BYTE *)(v16 + 64) = v31;
        *(_QWORD *)(v16 + 72) = v22;
        *(_QWORD *)(v16 + 80) = v23;
        *(_QWORD *)(v16 + 88) = v24;
        *(_QWORD *)(v16 + 96) = v25;
        *(_BYTE *)(v16 + 104) = v26;
        *(_BYTE *)(v16 + 105) = v27;
        *(_QWORD *)(v16 + 112) = v28;
        *(_QWORD *)(v16 + 120) = v29;
      }
      else
      {
        if (v10 != 8)
        {
          if (v10 - 12 >= 0xFFFFFFFFFFFFFFFELL)
          {
            v12 = &type metadata for DeviceDescriptor.Versions.V10;
            v41 = &type metadata for DeviceDescriptor.Versions.V10;
            v42 = sub_2452CAB90();
            v19 = swift_allocObject();
            v40[0] = v19;
            *(_QWORD *)(v19 + 16) = v30;
            *(_QWORD *)(v19 + 24) = v2;
            *(_QWORD *)(v19 + 32) = v32;
            *(_QWORD *)(v19 + 40) = v3;
            *(_QWORD *)(v19 + 48) = v33;
            *(_QWORD *)(v19 + 56) = v34;
            *(_BYTE *)(v19 + 64) = v31;
            *(_QWORD *)(v19 + 72) = v22;
            *(_QWORD *)(v19 + 80) = v23;
            *(_QWORD *)(v19 + 88) = v24;
            *(_QWORD *)(v19 + 96) = v25;
            *(_BYTE *)(v19 + 104) = v26;
            *(_BYTE *)(v19 + 105) = v27;
            *(_QWORD *)(v19 + 112) = v28;
            *(_QWORD *)(v19 + 120) = v29;
            *(_QWORD *)(v19 + 128) = v4;
            *(_QWORD *)(v19 + 136) = v5;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_245261C30(v4, v5);
            goto LABEL_16;
          }
          v12 = &type metadata for DeviceDescriptor.Versions.V12;
          v41 = &type metadata for DeviceDescriptor.Versions.V12;
          v42 = sub_2452CAAE8();
          v17 = swift_allocObject();
          v40[0] = v17;
          *(_QWORD *)(v17 + 16) = v30;
          *(_QWORD *)(v17 + 24) = v2;
          *(_QWORD *)(v17 + 32) = v32;
          *(_QWORD *)(v17 + 40) = v3;
          *(_QWORD *)(v17 + 48) = v33;
          *(_QWORD *)(v17 + 56) = v34;
          *(_BYTE *)(v17 + 64) = v31;
          *(_QWORD *)(v17 + 72) = v22;
          *(_QWORD *)(v17 + 80) = v23;
          *(_QWORD *)(v17 + 88) = v24;
          *(_QWORD *)(v17 + 96) = v25;
          *(_BYTE *)(v17 + 104) = v26;
          *(_BYTE *)(v17 + 105) = v27;
          *(_QWORD *)(v17 + 112) = v28;
          *(_QWORD *)(v17 + 120) = v29;
          *(_QWORD *)(v17 + 128) = v4;
          *(_QWORD *)(v17 + 136) = v5;
          *(_QWORD *)(v17 + 144) = v20;
          *(_QWORD *)(v17 + 152) = v6;
          *(_QWORD *)(v17 + 160) = v21;
          *(_QWORD *)(v17 + 168) = v7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_245261C30(v4, v5);
          swift_bridgeObjectRetain();
          goto LABEL_15;
        }
        v12 = &type metadata for DeviceDescriptor.Versions.V8;
        v41 = &type metadata for DeviceDescriptor.Versions.V8;
        v42 = sub_2452CACA8();
        v15 = swift_allocObject();
        v40[0] = v15;
        *(_QWORD *)(v15 + 16) = v30;
        *(_QWORD *)(v15 + 24) = v2;
        *(_QWORD *)(v15 + 32) = v32;
        *(_QWORD *)(v15 + 40) = v3;
        *(_QWORD *)(v15 + 48) = v33;
        *(_QWORD *)(v15 + 56) = v34;
        *(_BYTE *)(v15 + 64) = v31;
        *(_QWORD *)(v15 + 72) = v28;
        *(_QWORD *)(v15 + 80) = v29;
      }
      swift_bridgeObjectRetain();
LABEL_15:
      swift_bridgeObjectRetain();
      goto LABEL_16;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  }
  else
  {
    v36 = 0;
    memset(v35, 0, sizeof(v35));
    sub_245263F80((uint64_t)v35, &qword_257452390);
  }
  v12 = &type metadata for DeviceDescriptor.Versions.V12;
  v41 = &type metadata for DeviceDescriptor.Versions.V12;
  v42 = sub_2452CAAE8();
  v14 = swift_allocObject();
  v40[0] = v14;
  *(_QWORD *)(v14 + 16) = v30;
  *(_QWORD *)(v14 + 24) = v2;
  *(_QWORD *)(v14 + 32) = v32;
  *(_QWORD *)(v14 + 40) = v3;
  *(_QWORD *)(v14 + 48) = v33;
  *(_QWORD *)(v14 + 56) = v34;
  *(_BYTE *)(v14 + 64) = v31;
  *(_QWORD *)(v14 + 72) = v22;
  *(_QWORD *)(v14 + 80) = v23;
  *(_QWORD *)(v14 + 88) = v24;
  *(_QWORD *)(v14 + 96) = v25;
  *(_BYTE *)(v14 + 104) = v26;
  *(_BYTE *)(v14 + 105) = v27;
  *(_QWORD *)(v14 + 112) = v28;
  *(_QWORD *)(v14 + 120) = v29;
  *(_QWORD *)(v14 + 128) = v4;
  *(_QWORD *)(v14 + 136) = v5;
  *(_QWORD *)(v14 + 144) = v20;
  *(_QWORD *)(v14 + 152) = v6;
  *(_QWORD *)(v14 + 160) = v21;
  *(_QWORD *)(v14 + 168) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_245261C30(v4, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_17:
  __swift_project_boxed_opaque_existential_1(v40, (uint64_t)v12);
  sub_245387AA0();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
}

uint64_t DeviceDescriptor.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t result;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __int128 v21;
  __int128 v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  int64x2_t *v36;
  uint64_t v37;
  uint64_t v38;
  char isUniquelyReferenced_nonNull_native;
  char v40;
  unint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  uint64_t *v48;
  int64x2_t *v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  unint64_t v59;
  uint64_t v60;
  _BOOL8 v61;
  uint64_t v62;
  char v63;
  unint64_t v64;
  char v65;
  uint64_t *v66;
  int64x2_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  unint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  char v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  char v103;
  int64x2_t v104;
  _QWORD v105[2];
  __int128 v106;
  __int128 v107;
  __int128 v108;
  _BYTE v109[48];
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  _BYTE v117[48];
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  _QWORD v122[3];
  uint64_t v123;
  uint64_t v124;
  int v125;
  __int16 v126;
  char v127;
  _DWORD v128[5];
  uint64_t v129;

  v127 = 1;
  sub_24525E4F0(a1, (uint64_t)&v114);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574523C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574523C8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    *(_QWORD *)&v108 = 0;
    v106 = 0u;
    v107 = 0u;
    sub_245263F80((uint64_t)&v106, &qword_2574523D0);
LABEL_8:
    sub_24525E4F0(a1, (uint64_t)v122);
    sub_2452C01E8(v122, &v114);
    if (v2)
    {
      v9 = (_QWORD *)a1;
      goto LABEL_10;
    }
    v129 = 0;
    __swift_destroy_boxed_opaque_existential_1(a1);
    v110 = v118;
    v111 = v119;
    v112 = v120;
    v113 = v121;
    v108 = v116;
    *(_OWORD *)v109 = *(_OWORD *)v117;
    *(_OWORD *)&v109[16] = *(_OWORD *)&v117[16];
    *(_OWORD *)&v109[32] = *(_OWORD *)&v117[32];
    v106 = v114;
    v107 = v115;
    v98 = *((_QWORD *)&v114 + 1);
    v100 = v114;
    v94 = *((_QWORD *)&v115 + 1);
    v96 = v115;
    v90 = *((_QWORD *)&v116 + 1);
    v92 = v116;
    v88 = v117[0];
    v83 = *(_OWORD *)&v109[24];
    v85 = *(_OWORD *)&v109[8];
    v102 = v117[40];
    v127 = v117[41];
    v12 = (_QWORD *)*((_QWORD *)&v118 + 1);
    v11 = (_QWORD *)v118;
    v14 = *((_QWORD *)&v119 + 1);
    v13 = v119;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_245261C30(v13, v14);
    sub_24525FFF8(0, 0xF000000000000000);
    v15 = *((_QWORD *)&v112 + 1);
    v16 = v112;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v18 = *((_QWORD *)&v113 + 1);
    v17 = v113;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    result = sub_245269928((uint64_t)&v106);
    v19 = v17;
    v20 = v14;
    v21 = v83;
    v22 = v85;
    v23 = v102;
    v24 = v88;
    v26 = v90;
    v25 = v92;
    v28 = v94;
    v27 = v96;
    v30 = v98;
    v29 = v100;
    goto LABEL_57;
  }
  sub_2452B7C5C(&v106, (uint64_t)v122);
  v5 = v123;
  v6 = v124;
  __swift_project_boxed_opaque_existential_1(v122, v123);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  if ((v8 & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v122);
    goto LABEL_8;
  }
  if (v7 > 7)
  {
    if (v7 == 10)
    {
      sub_24525E4F0(a1, (uint64_t)v105);
      sub_2452BF5A0(v105, &v114);
      if (v2)
        goto LABEL_5;
      v129 = 0;
      __swift_destroy_boxed_opaque_existential_1(a1);
      v106 = v114;
      v107 = v115;
      v108 = v116;
      *(_OWORD *)v109 = *(_OWORD *)v117;
      *(_OWORD *)&v109[16] = *(_OWORD *)&v117[16];
      *(_OWORD *)&v109[32] = *(_OWORD *)&v117[32];
      v110 = v118;
      v111 = v119;
      v101 = v114;
      v70 = *((_QWORD *)&v115 + 1);
      v97 = v115;
      v99 = *((_QWORD *)&v114 + 1);
      v91 = *((_QWORD *)&v116 + 1);
      v93 = v116;
      v89 = v117[0];
      v84 = *(_OWORD *)&v109[24];
      v86 = *(_OWORD *)&v109[8];
      v103 = v117[40];
      v127 = v117[41];
      v12 = (_QWORD *)*((_QWORD *)&v118 + 1);
      v71 = (_QWORD *)v118;
      v72 = *((_QWORD *)&v119 + 1);
      v73 = v119;
      swift_bridgeObjectRetain();
      v95 = v70;
      swift_bridgeObjectRetain();
      v82 = v71;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32 = v73;
      v31 = v72;
      sub_245261C30(v73, v72);
      sub_24525FFF8(0, 0xF000000000000000);
      sub_2452CAD98((uint64_t)&v106);
      swift_bridgeObjectRelease_n();
      v15 = 0;
      v81 = 0;
    }
    else
    {
      if (v7 != 9)
      {
        if (v7 == 8)
        {
          sub_24525E4F0(a1, (uint64_t)&v106);
          sub_2452BE108(&v106, (uint64_t)&v114);
          if (v2)
            goto LABEL_5;
          v129 = 0;
          __swift_destroy_boxed_opaque_existential_1(a1);
          v99 = *((_QWORD *)&v114 + 1);
          v101 = v114;
          v95 = *((_QWORD *)&v115 + 1);
          v97 = v115;
          v91 = *((_QWORD *)&v116 + 1);
          v93 = v116;
          v89 = v117[0];
          v12 = *(_QWORD **)&v117[16];
          v82 = *(_QWORD **)&v117[8];
          v127 = 1;
          v31 = 0xF000000000000000;
          sub_24525FFF8(0, 0xF000000000000000);
          swift_bridgeObjectRelease_n();
          v15 = 0;
          v80 = 0;
          v81 = 0;
          v32 = 0;
          v103 = 0;
          v18 = 0;
          v84 = 0u;
          v86 = 0u;
        }
        else
        {
          sub_24525E4F0(a1, (uint64_t)v105);
          sub_2452C01E8(v105, &v114);
          if (v2)
            goto LABEL_5;
          v129 = 0;
          __swift_destroy_boxed_opaque_existential_1(a1);
          v110 = v118;
          v111 = v119;
          v112 = v120;
          v113 = v121;
          v108 = v116;
          *(_OWORD *)v109 = *(_OWORD *)v117;
          *(_OWORD *)&v109[16] = *(_OWORD *)&v117[16];
          *(_OWORD *)&v109[32] = *(_OWORD *)&v117[32];
          v106 = v114;
          v107 = v115;
          v101 = v114;
          v74 = *((_QWORD *)&v115 + 1);
          v97 = v115;
          v99 = *((_QWORD *)&v114 + 1);
          v91 = *((_QWORD *)&v116 + 1);
          v93 = v116;
          v89 = v117[0];
          v84 = *(_OWORD *)&v109[24];
          v86 = *(_OWORD *)&v109[8];
          v103 = v117[40];
          v127 = v117[41];
          v12 = (_QWORD *)*((_QWORD *)&v118 + 1);
          v75 = (_QWORD *)v118;
          v76 = *((_QWORD *)&v119 + 1);
          v77 = v119;
          swift_bridgeObjectRetain();
          v95 = v74;
          swift_bridgeObjectRetain();
          v82 = v75;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v32 = v77;
          v31 = v76;
          sub_245261C30(v77, v76);
          sub_24525FFF8(0, 0xF000000000000000);
          v15 = *((_QWORD *)&v112 + 1);
          v81 = v112;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v18 = *((_QWORD *)&v113 + 1);
          v80 = v113;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          sub_245269928((uint64_t)&v106);
        }
        goto LABEL_56;
      }
      sub_24525E4F0(a1, (uint64_t)&v106);
      sub_2452BEBB0(&v106, (uint64_t)&v114);
      if (v2)
        goto LABEL_5;
      v129 = 0;
      __swift_destroy_boxed_opaque_existential_1(a1);
      v99 = *((_QWORD *)&v114 + 1);
      v101 = v114;
      v95 = *((_QWORD *)&v115 + 1);
      v97 = v115;
      v91 = *((_QWORD *)&v116 + 1);
      v93 = v116;
      v89 = v117[0];
      v84 = *(_OWORD *)&v117[24];
      v86 = *(_OWORD *)&v117[8];
      v103 = v117[40];
      v12 = (_QWORD *)*((_QWORD *)&v118 + 1);
      v82 = (_QWORD *)v118;
      v127 = v117[41];
      v31 = 0xF000000000000000;
      sub_24525FFF8(0, 0xF000000000000000);
      swift_bridgeObjectRelease_n();
      v15 = 0;
      v81 = 0;
      v32 = 0;
    }
    v80 = 0;
    v18 = 0;
LABEL_56:
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v122);
    v30 = v99;
    v29 = v101;
    v28 = v95;
    v27 = v97;
    v26 = v91;
    v25 = v93;
    v24 = v89;
    v23 = v103;
    v21 = v84;
    v22 = v86;
    v20 = v31;
    v13 = v32;
    v16 = v81;
    v11 = v82;
    v19 = v80;
LABEL_57:
    *(_DWORD *)(a2 + 49) = v128[0];
    *(_DWORD *)(a2 + 52) = *(_DWORD *)((char *)v128 + 3);
    v78 = v127;
    *(_DWORD *)(a2 + 90) = v125;
    *(_WORD *)(a2 + 94) = v126;
    *(_QWORD *)a2 = v29;
    *(_QWORD *)(a2 + 8) = v30;
    *(_QWORD *)(a2 + 16) = v27;
    *(_QWORD *)(a2 + 24) = v28;
    *(_QWORD *)(a2 + 32) = v25;
    *(_QWORD *)(a2 + 40) = v26;
    *(_BYTE *)(a2 + 48) = v24;
    *(_OWORD *)(a2 + 56) = v22;
    *(_OWORD *)(a2 + 72) = v21;
    *(_BYTE *)(a2 + 88) = v23;
    *(_BYTE *)(a2 + 89) = v78;
    *(_QWORD *)(a2 + 96) = v11;
    *(_QWORD *)(a2 + 104) = v12;
    *(_QWORD *)(a2 + 112) = v13;
    *(_QWORD *)(a2 + 120) = v20;
    *(_QWORD *)(a2 + 128) = v16;
    *(_QWORD *)(a2 + 136) = v15;
    *(_QWORD *)(a2 + 144) = v19;
    *(_QWORD *)(a2 + 152) = v18;
    return result;
  }
  sub_24525E4F0(a1, (uint64_t)&v106);
  sub_2452BDBEC(&v106, (uint64_t)&v114);
  if (v2)
  {
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1(a1);
    v9 = v122;
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    sub_24525FFF8(0, 0xF000000000000000);
    return swift_bridgeObjectRelease_n();
  }
  v87 = a1;
  v129 = 0;
  v79 = a2;
  v33 = 0;
  v97 = v115;
  v99 = *((_QWORD *)&v114 + 1);
  v93 = v116;
  v95 = *((_QWORD *)&v115 + 1);
  v91 = *((_QWORD *)&v116 + 1);
  if (v117[0])
    v34 = 2;
  else
    v34 = 1;
  v89 = v34;
  v35 = (_QWORD *)MEMORY[0x24BEE4B00];
  v127 = 1;
  v101 = v114;
  while (1)
  {
    v37 = *(_QWORD *)((char *)&unk_251640058 + v33 + 32);
    v38 = *(_QWORD *)((char *)&unk_251640058 + v33 + 40);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v114 = v35;
    v41 = sub_2452C1EB4(v37, v38, 0xD000000000000011, 0x8000000245393670);
    v42 = v35[2];
    v43 = (v40 & 1) == 0;
    v44 = v42 + v43;
    if (__OFADD__(v42, v43))
      break;
    v45 = v40;
    if (v35[3] >= v44)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v35 = (_QWORD *)v114;
        if ((v40 & 1) == 0)
          goto LABEL_30;
      }
      else
      {
        sub_2452C7D64((uint64_t *)&unk_257450118);
        v35 = (_QWORD *)v114;
        if ((v45 & 1) == 0)
          goto LABEL_30;
      }
    }
    else
    {
      sub_2452C3068(v44, isUniquelyReferenced_nonNull_native);
      v46 = sub_2452C1EB4(v37, v38, 0xD000000000000011, 0x8000000245393670);
      if ((v45 & 1) != (v47 & 1))
        goto LABEL_62;
      v41 = v46;
      v35 = (_QWORD *)v114;
      if ((v45 & 1) == 0)
      {
LABEL_30:
        v35[(v41 >> 6) + 8] |= 1 << v41;
        v48 = (uint64_t *)(v35[6] + 32 * v41);
        *v48 = v37;
        v48[1] = v38;
        v48[2] = 0xD000000000000011;
        v48[3] = 0x8000000245393670;
        v49 = (int64x2_t *)(v35[7] + 48 * v41);
        v49->i64[0] = v37;
        v49->i64[1] = v38;
        v49[1].i64[0] = 0xD000000000000011;
        v49[1].i64[1] = 0x8000000245393670;
        v49[2] = vdupq_n_s64(1uLL);
        v50 = v35[2];
        v51 = __OFADD__(v50, 1);
        v52 = v50 + 1;
        if (v51)
          goto LABEL_60;
        v35[2] = v52;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_22;
      }
    }
    v36 = (int64x2_t *)(v35[7] + 48 * v41);
    v36->i64[0] = v37;
    v36->i64[1] = v38;
    v36[1].i64[0] = 0xD000000000000011;
    v36[1].i64[1] = 0x8000000245393670;
    v36[2] = vdupq_n_s64(1uLL);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_22:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v33 += 16;
    if (v33 == 112)
    {
      v82 = v35;
      swift_arrayDestroy();
      v53 = 0;
      v12 = (_QWORD *)MEMORY[0x24BEE4B00];
      v104 = vdupq_n_s64(1uLL);
      while (1)
      {
        v55 = *(_QWORD *)((char *)&unk_25163FFF8 + v53 + 32);
        v56 = *(_QWORD *)((char *)&unk_25163FFF8 + v53 + 40);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v57 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v114 = v12;
        v59 = sub_2452C1DFC(v55, v56, 0xD000000000000011, 0x8000000245393670);
        v60 = v12[2];
        v61 = (v58 & 1) == 0;
        v62 = v60 + v61;
        if (__OFADD__(v60, v61))
          goto LABEL_59;
        v63 = v58;
        if (v12[3] >= v62)
        {
          if ((v57 & 1) != 0)
          {
            v12 = (_QWORD *)v114;
            if ((v58 & 1) == 0)
              goto LABEL_44;
          }
          else
          {
            sub_2452C7D64(&qword_2574500F0);
            v12 = (_QWORD *)v114;
            if ((v63 & 1) == 0)
              goto LABEL_44;
          }
        }
        else
        {
          sub_2452C33D8(v62, v57);
          v64 = sub_2452C1DFC(v55, v56, 0xD000000000000011, 0x8000000245393670);
          if ((v63 & 1) != (v65 & 1))
            goto LABEL_63;
          v59 = v64;
          v12 = (_QWORD *)v114;
          if ((v63 & 1) == 0)
          {
LABEL_44:
            v12[(v59 >> 6) + 8] |= 1 << v59;
            v66 = (uint64_t *)(v12[6] + 32 * v59);
            *v66 = v55;
            v66[1] = v56;
            v66[2] = 0xD000000000000011;
            v66[3] = 0x8000000245393670;
            v67 = (int64x2_t *)(v12[7] + 48 * v59);
            v67->i64[0] = v55;
            v67->i64[1] = v56;
            v67[1].i64[0] = 0xD000000000000011;
            v67[1].i64[1] = 0x8000000245393670;
            v67[2] = vdupq_n_s64(1uLL);
            v68 = v12[2];
            v51 = __OFADD__(v68, 1);
            v69 = v68 + 1;
            if (v51)
              goto LABEL_61;
            v12[2] = v69;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_36;
          }
        }
        v54 = v12[7] + 48 * v59;
        *(_QWORD *)v54 = v55;
        *(_QWORD *)(v54 + 8) = v56;
        *(_QWORD *)(v54 + 16) = 0xD000000000000011;
        *(_QWORD *)(v54 + 24) = 0x8000000245393670;
        *(int64x2_t *)(v54 + 32) = v104;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_36:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v53 += 16;
        if (v53 == 64)
        {
          swift_arrayDestroy();
          __swift_destroy_boxed_opaque_existential_1(v87);
          v31 = 0xF000000000000000;
          sub_24525FFF8(0, 0xF000000000000000);
          swift_bridgeObjectRelease_n();
          v15 = 0;
          v80 = 0;
          v81 = 0;
          v32 = 0;
          v103 = 0;
          v18 = 0;
          v84 = 0u;
          v86 = 0u;
          a2 = v79;
          goto LABEL_56;
        }
      }
    }
  }
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  sub_2453883DC();
  __break(1u);
LABEL_63:
  result = sub_2453883DC();
  __break(1u);
  return result;
}

uint64_t sub_2452C1C3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return DeviceDescriptor.init(from:)(a1, a2);
}

uint64_t sub_2452C1C50(uint64_t a1)
{
  return DeviceDescriptor.encode(to:)(a1);
}

uint64_t sub_2452C1C64()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v5;

  v0 = objc_allocWithZone(MEMORY[0x24BDD17C8]);
  v1 = (void *)sub_245387AF4();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  v3 = MGCopyAnswer();
  if (!v3)
    return 0;
  if (swift_dynamicCast())
    return v5;
  return 0;
}

unint64_t sub_2452C1D98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24538843C();
  sub_245387B6C();
  v4 = sub_245388478();
  return sub_2452C2308(a1, a2, v4);
}

unint64_t sub_2452C1DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  sub_24538843C();
  swift_bridgeObjectRetain();
  sub_245387B6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_245387B6C();
  swift_bridgeObjectRelease();
  v8 = sub_245388478();
  return sub_2452C23E8(a1, a2, a3, a4, v8);
}

unint64_t sub_2452C1EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  sub_24538843C();
  sub_245387B6C();
  sub_245387B6C();
  v8 = sub_245388478();
  return sub_2452C23E8(a1, a2, a3, a4, v8);
}

unint64_t sub_2452C1F4C(uint64_t a1)
{
  uint64_t v2;

  sub_245387F68();
  v2 = sub_245387AAC();
  return sub_2452C24E4(a1, v2);
}

unint64_t sub_2452C1F9C(unsigned __int8 a1)
{
  uint64_t v2;

  sub_24538843C();
  sub_24538846C();
  v2 = sub_245388478();
  return sub_2452C2E0C(a1, v2);
}

unint64_t sub_2452C2000(_QWORD *a1)
{
  uint64_t v2;

  sub_24538843C();
  Record.ID.hash(into:)();
  v2 = sub_245388478();
  return sub_2452C260C(a1, v2);
}

unint64_t sub_2452C2058(uint64_t a1)
{
  uint64_t v2;

  sub_245387740();
  sub_24526B308(&qword_25744F6D0, MEMORY[0x24BDCEA88]);
  v2 = sub_245387AAC();
  return sub_2452C2A00(a1, v2);
}

unint64_t sub_2452C20BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_245387E60();
  return sub_2452C2B38(a1, v2);
}

unint64_t sub_2452C20EC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_245388430();
  return sub_2452C2BFC(a1, v2);
}

unint64_t sub_2452C211C(uint64_t a1)
{
  uint64_t v2;

  sub_245387B18();
  sub_24538843C();
  sub_245387B6C();
  v2 = sub_245388478();
  swift_bridgeObjectRelease();
  return sub_2452C2C98(a1, v2);
}

unint64_t sub_2452C219C(unsigned __int8 a1)
{
  uint64_t v2;

  sub_24538843C();
  sub_245388460();
  v2 = sub_245388478();
  return sub_2452C2E0C(a1, v2);
}

unint64_t sub_2452C2200(char a1)
{
  char v1;
  uint64_t v2;

  v1 = a1 & 1;
  sub_24538843C();
  sub_245388448();
  v2 = sub_245388478();
  return sub_2452C2EAC(v1, v2);
}

unint64_t sub_2452C225C(uint64_t *a1)
{
  uint64_t v2;

  sub_24538843C();
  swift_bridgeObjectRetain();
  sub_245387B6C();
  sub_2452B7D94((uint64_t)a1);
  sub_24538846C();
  sub_24538846C();
  sub_24538846C();
  v2 = sub_245388478();
  return sub_2452C2F68(a1, v2);
}

unint64_t sub_2452C2308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_245388274() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_245388274() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_2452C23E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;

  v6 = v5 + 64;
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = a5 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v13 = ~v7;
    v14 = *(_QWORD *)(v5 + 48);
    do
    {
      v15 = (_QWORD *)(v14 + 32 * v8);
      v16 = v15[2];
      v17 = v15[3];
      v18 = *v15 == a1 && v15[1] == a2;
      if (v18 || (sub_245388274() & 1) != 0)
      {
        v19 = v16 == a3 && v17 == a4;
        if (v19 || (sub_245388274() & 1) != 0)
          break;
      }
      v8 = (v8 + 1) & v13;
    }
    while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_2452C24E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_245387F68();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      v14 = sub_245387AE8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_2452C260C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  char *v43;
  int v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v5 = sub_245387740();
  v49 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v43 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD50);
  MEMORY[0x24BDAC7A8](v45);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for Record.ID(0);
  MEMORY[0x24BDAC7A8](v48);
  v14 = (uint64_t *)((char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = v2 + 64;
  v53 = v2;
  v15 = -1 << *(_BYTE *)(v2 + 32);
  v16 = a2 & ~v15;
  if (((*(_QWORD *)(v2 + 64 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v46 = v9;
    v47 = v5;
    v50 = ~v15;
    v51 = *(_QWORD *)(v12 + 72);
    v17 = type metadata accessor for Record.ID;
    v18 = v45;
    do
    {
      v19 = v17;
      sub_2452B792C(*(_QWORD *)(v53 + 48) + v51 * v16, (uint64_t)v14, v17);
      v20 = *v14 == *a1 && v14[1] == a1[1];
      if (!v20 && (sub_245388274() & 1) == 0)
        goto LABEL_4;
      v21 = v14[4];
      v22 = v14[5];
      v24 = a1[4];
      v23 = a1[5];
      if ((v14[2] != a1[2] || v14[3] != a1[3]) && (sub_245388274() & 1) == 0)
        goto LABEL_4;
      if ((v21 != v24 || v22 != v23) && (sub_245388274() & 1) == 0)
        goto LABEL_4;
      v25 = *(int *)(v48 + 24);
      v26 = (uint64_t)a1 + v25;
      v27 = (uint64_t)&v11[*(int *)(v18 + 48)];
      sub_2452B792C((uint64_t)v14 + v25, (uint64_t)v11, type metadata accessor for Record.ID.Ownership);
      sub_2452B792C(v26, v27, type metadata accessor for Record.ID.Ownership);
      v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
      v29 = v47;
      if (v28((uint64_t)v11, 1, v47) == 1)
      {
        if (v28(v27, 1, v29) != 1)
          goto LABEL_21;
      }
      else
      {
        v30 = (uint64_t)v46;
        sub_2452B792C((uint64_t)v11, (uint64_t)v46, type metadata accessor for Record.ID.Ownership);
        if (v28(v27, 1, v29) == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v30, v29);
LABEL_21:
          sub_245263F80((uint64_t)v11, &qword_25744FD50);
          goto LABEL_4;
        }
        v31 = v30;
        v32 = v49;
        v33 = v29;
        v34 = v43;
        (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v43, v27, v33);
        v44 = sub_245387710();
        v35 = *(void (**)(char *, uint64_t))(v32 + 8);
        v35(v34, v33);
        v36 = v31;
        v18 = v45;
        v35((char *)v36, v33);
        if ((v44 & 1) == 0)
        {
          sub_2452B7B5C((uint64_t)v11, type metadata accessor for Record.ID.Ownership);
          goto LABEL_4;
        }
      }
      sub_2452B7B5C((uint64_t)v11, type metadata accessor for Record.ID.Ownership);
      v37 = *(int *)(v48 + 28);
      v38 = *(_QWORD *)((char *)v14 + v37);
      v39 = *(_QWORD *)((char *)v14 + v37 + 8);
      v40 = (_QWORD *)((char *)a1 + v37);
      if (v38 == *v40 && v39 == v40[1] || (sub_245388274() & 1) != 0)
      {
        sub_2452B7B5C((uint64_t)v14, type metadata accessor for Record.ID);
        return v16;
      }
LABEL_4:
      v17 = v19;
      sub_2452B7B5C((uint64_t)v14, v19);
      v16 = (v16 + 1) & v50;
    }
    while (((*(_QWORD *)(v52 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
  }
  return v16;
}

unint64_t sub_2452C2A00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_245387740();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_24526B308(&qword_257452430, MEMORY[0x24BDCEA98]);
      v14 = sub_245387AE8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_2452C2B38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_2452CC2F8(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x2495321C8](v9, a1);
      sub_2452CC334((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_2452C2BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_2452C2C98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_245387B18();
    v8 = v7;
    if (v6 == sub_245387B18() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_245388274();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_245387B18();
          v15 = v14;
          if (v13 == sub_245387B18() && v15 == v16)
            break;
          v18 = sub_245388274();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_2452C2E0C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_2452C2EAC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_2452C2F68(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  uint64_t v19;
  int v20;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = ~v4;
    v7 = *(_QWORD *)(v2 + 48);
    v8 = *a1;
    v9 = a1[1];
    v20 = *((unsigned __int8 *)a1 + 16);
    v10 = a1[4];
    v19 = a1[3];
    do
    {
      v11 = v7 + 40 * v5;
      v12 = *(unsigned __int8 *)(v11 + 16);
      v13 = *(_QWORD *)(v11 + 24);
      v14 = *(_QWORD *)(v11 + 32);
      v15 = *(_QWORD *)v11 == v8 && *(_QWORD *)(v11 + 8) == v9;
      if (v15 || (sub_245388274() & 1) != 0)
      {
        v16 = v12 == v20 && v13 == v19;
        if (v16 && v14 == v10)
          break;
      }
      v5 = (v5 + 1) & v6;
    }
    while (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

uint64_t sub_2452C3068(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450118);
  v44 = a2;
  v6 = sub_245387FA4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_38;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  v42 = v5;
  v43 = v7;
  while (1)
  {
    if (v10)
    {
      v46 = (v10 - 1) & v10;
      v20 = __clz(__rbit64(v10)) | (v13 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v13++, 1))
      goto LABEL_40;
    if (v13 >= v40)
      break;
    v22 = v41;
    v23 = v41[v13];
    if (!v23)
    {
      v24 = v13 + 1;
      if (v13 + 1 >= v40)
      {
LABEL_31:
        swift_release();
        v3 = v39;
        if ((v44 & 1) == 0)
          goto LABEL_38;
        goto LABEL_34;
      }
      v23 = v41[v24];
      if (!v23)
      {
        while (1)
        {
          v13 = v24 + 1;
          if (__OFADD__(v24, 1))
            break;
          if (v13 >= v40)
            goto LABEL_31;
          v23 = v41[v13];
          ++v24;
          if (v23)
            goto LABEL_20;
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v13;
    }
LABEL_20:
    v46 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_21:
    v25 = *(_QWORD *)(v5 + 56);
    v26 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 32 * v20);
    v28 = *v26;
    v27 = v26[1];
    v30 = v26[2];
    v29 = v26[3];
    v31 = (uint64_t *)(v25 + 48 * v20);
    v32 = v31[1];
    v45 = *v31;
    v33 = v31[3];
    v47 = v31[2];
    v48 = *((_OWORD *)v31 + 2);
    if ((v44 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v7 = v43;
    sub_24538843C();
    sub_245387B6C();
    sub_245387B6C();
    result = sub_245388478();
    v14 = -1 << *(_BYTE *)(v43 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v36 = v16 == v35;
        if (v16 == v35)
          v16 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v37 == -1);
      v17 = __clz(__rbit64(~v37)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v43 + 48) + 32 * v17);
    *v18 = v28;
    v18[1] = v27;
    v18[2] = v30;
    v18[3] = v29;
    v19 = *(_QWORD *)(v43 + 56) + 48 * v17;
    v10 = v46;
    *(_QWORD *)v19 = v45;
    *(_QWORD *)(v19 + 8) = v32;
    *(_QWORD *)(v19 + 16) = v47;
    *(_QWORD *)(v19 + 24) = v33;
    *(_OWORD *)(v19 + 32) = v48;
    ++*(_QWORD *)(v43 + 16);
    v5 = v42;
  }
  swift_release();
  v3 = v39;
  v22 = v41;
  if ((v44 & 1) == 0)
    goto LABEL_38;
LABEL_34:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v22, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_38:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2452C33D8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t i;
  char v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574500F0);
  v44 = a2;
  v6 = sub_245387FA4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_38;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v42 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v40 = v2;
  v41 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v13++, 1))
      goto LABEL_40;
    if (v13 >= v41)
      break;
    v23 = v42;
    v24 = v42[v13];
    if (!v24)
    {
      v25 = v13 + 1;
      if (v13 + 1 >= v41)
      {
LABEL_31:
        swift_release();
        v3 = v40;
        if ((v44 & 1) == 0)
          goto LABEL_38;
        goto LABEL_34;
      }
      v24 = v42[v25];
      if (!v24)
      {
        while (1)
        {
          v13 = v25 + 1;
          if (__OFADD__(v25, 1))
            break;
          if (v13 >= v41)
            goto LABEL_31;
          v24 = v42[v13];
          ++v25;
          if (v24)
            goto LABEL_20;
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v13;
    }
LABEL_20:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_21:
    v26 = *(_QWORD *)(v5 + 56);
    v27 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 32 * v21);
    v29 = *v27;
    v28 = v27[1];
    v31 = v27[2];
    v30 = v27[3];
    v32 = (uint64_t *)(v26 + 48 * v21);
    v33 = v32[1];
    v45 = *v32;
    v34 = v32[3];
    v46 = v32[2];
    v47 = *((_OWORD *)v32 + 2);
    if ((v44 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_24538843C();
    swift_bridgeObjectRetain();
    sub_245387B6C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_245387B6C();
    swift_bridgeObjectRelease();
    result = sub_245388478();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v37 = v16 == v36;
        if (v16 == v36)
          v16 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v38 == -1);
      v17 = __clz(__rbit64(~v38)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 32 * v17);
    *v18 = v29;
    v18[1] = v28;
    v18[2] = v31;
    v18[3] = v30;
    v19 = *(_QWORD *)(v7 + 56) + 48 * v17;
    *(_QWORD *)v19 = v45;
    *(_QWORD *)(v19 + 8) = v33;
    *(_QWORD *)(v19 + 16) = v46;
    *(_QWORD *)(v19 + 24) = v34;
    *(_OWORD *)(v19 + 32) = v47;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v40;
  v23 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_38;
LABEL_34:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v23, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_38:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2452C3764(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  int64_t v49;
  _QWORD *v50;
  uint64_t i;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452528);
  v52 = a2;
  v6 = sub_245387FA4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v50 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v48 = v2;
  v49 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v18 = v17 | (v13 << 6);
      if ((v52 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v49)
      break;
    v27 = v50;
    v28 = v50[v26];
    ++v13;
    if (!v28)
    {
      v13 = v26 + 1;
      if (v26 + 1 >= v49)
        goto LABEL_33;
      v28 = v50[v13];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v49)
        {
LABEL_33:
          swift_release();
          v3 = v48;
          if ((v52 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v28 = v50[v29];
        if (!v28)
        {
          while (1)
          {
            v13 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_42;
            if (v13 >= v49)
              goto LABEL_33;
            v28 = v50[v13];
            ++v29;
            if (v28)
              goto LABEL_22;
          }
        }
        v13 = v29;
      }
    }
LABEL_22:
    v10 = (v28 - 1) & v28;
    v18 = __clz(__rbit64(v28)) + (v13 << 6);
    if ((v52 & 1) != 0)
    {
LABEL_10:
      v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v20 = *v19;
      v21 = v19[1];
      v22 = *(_QWORD *)(v5 + 56) + 168 * v18;
      v23 = *(_QWORD *)(v22 + 8);
      v24 = *(_QWORD *)(v22 + 24);
      v55 = *(_QWORD *)(v22 + 16);
      v53 = *(_QWORD *)v22;
      v54 = *(_QWORD *)(v22 + 40);
      v67 = *(_QWORD *)(v22 + 56);
      v63 = *(_QWORD *)(v22 + 64);
      v60 = *(_QWORD *)(v22 + 72);
      v58 = *(_QWORD *)(v22 + 32);
      v59 = *(_QWORD *)(v22 + 80);
      v56 = *(_BYTE *)(v22 + 88);
      v57 = *(_BYTE *)(v22 + 48);
      v25 = *(_BYTE *)(v22 + 89);
      v61 = *(_OWORD *)(v22 + 96);
      v62 = *(_QWORD *)(v22 + 120);
      v64 = *(_QWORD *)(v22 + 136);
      v65 = *(_QWORD *)(v22 + 112);
      v68 = *(_QWORD *)(v22 + 128);
      v69 = *(_QWORD *)(v22 + 144);
      v66 = *(_QWORD *)(v22 + 152);
      v70 = *(_QWORD *)(v22 + 160);
      goto LABEL_24;
    }
LABEL_23:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v20 = *v30;
    v21 = v30[1];
    v31 = *(_QWORD *)(v5 + 56) + 168 * v18;
    v33 = *(_OWORD *)(v31 + 16);
    v32 = *(_OWORD *)(v31 + 32);
    v71 = *(_OWORD *)v31;
    v72 = v33;
    v73 = v32;
    v34 = *(_OWORD *)(v31 + 96);
    v36 = *(_OWORD *)(v31 + 48);
    v35 = *(_OWORD *)(v31 + 64);
    v76 = *(_OWORD *)(v31 + 80);
    v77 = v34;
    v74 = v36;
    v75 = v35;
    v38 = *(_OWORD *)(v31 + 128);
    v37 = *(_OWORD *)(v31 + 144);
    v39 = *(_OWORD *)(v31 + 112);
    v81 = *(_QWORD *)(v31 + 160);
    v79 = v38;
    v80 = v37;
    v78 = v39;
    v70 = v81;
    v68 = v38;
    v69 = v37;
    v65 = v39;
    v66 = *((_QWORD *)&v37 + 1);
    v62 = *((_QWORD *)&v39 + 1);
    v61 = v77;
    v67 = *((_QWORD *)&v36 + 1);
    v63 = v75;
    v64 = *((_QWORD *)&v38 + 1);
    v59 = v76;
    v60 = *((_QWORD *)&v75 + 1);
    v25 = BYTE9(v76);
    v56 = BYTE8(v76);
    v57 = v36;
    v24 = *((_QWORD *)&v72 + 1);
    v58 = v73;
    v23 = *((_QWORD *)&v71 + 1);
    v54 = *((_QWORD *)&v73 + 1);
    v55 = v72;
    v53 = v71;
    swift_bridgeObjectRetain();
    sub_245261B98((uint64_t)&v71);
LABEL_24:
    sub_24538843C();
    sub_245387B6C();
    result = sub_245388478();
    v40 = -1 << *(_BYTE *)(v7 + 32);
    v41 = result & ~v40;
    v42 = v41 >> 6;
    if (((-1 << v41) & ~*(_QWORD *)(v11 + 8 * (v41 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v41) & ~*(_QWORD *)(v11 + 8 * (v41 >> 6)))) | v41 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v43 = 0;
      v44 = (unint64_t)(63 - v40) >> 6;
      do
      {
        if (++v42 == v44 && (v43 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v45 = v42 == v44;
        if (v42 == v44)
          v42 = 0;
        v43 |= v45;
        v46 = *(_QWORD *)(v11 + 8 * v42);
      }
      while (v46 == -1);
      v14 = __clz(__rbit64(~v46)) + (v42 << 6);
    }
    LOBYTE(v71) = v25;
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v20;
    v15[1] = v21;
    v16 = *(_QWORD *)(v7 + 56) + 168 * v14;
    *(_QWORD *)v16 = v53;
    *(_QWORD *)(v16 + 8) = v23;
    *(_QWORD *)(v16 + 16) = v55;
    *(_QWORD *)(v16 + 24) = v24;
    *(_QWORD *)(v16 + 32) = v58;
    *(_QWORD *)(v16 + 40) = v54;
    *(_BYTE *)(v16 + 48) = v57;
    *(_QWORD *)(v16 + 56) = v67;
    *(_QWORD *)(v16 + 64) = v63;
    *(_QWORD *)(v16 + 72) = v60;
    *(_QWORD *)(v16 + 80) = v59;
    *(_BYTE *)(v16 + 88) = v56;
    *(_BYTE *)(v16 + 89) = v25;
    *(_OWORD *)(v16 + 96) = v61;
    *(_QWORD *)(v16 + 112) = v65;
    *(_QWORD *)(v16 + 120) = v62;
    *(_QWORD *)(v16 + 128) = v68;
    *(_QWORD *)(v16 + 136) = v64;
    *(_QWORD *)(v16 + 144) = v69;
    *(_QWORD *)(v16 + 152) = v66;
    *(_QWORD *)(v16 + 160) = v70;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v48;
  v27 = v50;
  if ((v52 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v47 = 1 << *(_BYTE *)(v5 + 32);
  if (v47 >= 64)
    bzero(v27, ((unint64_t)(v47 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v47;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2452C3C4C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  int64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;

  v3 = v2;
  v5 = sub_245387740();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v49 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v8);
  v55 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RecordMetadata();
  v53 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v58 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for Record.ID(0);
  v54 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257450128);
  v56 = a2;
  v15 = sub_245387FA4();
  v16 = v15;
  if (!*(_QWORD *)(v14 + 16))
    goto LABEL_44;
  v46 = v2;
  v17 = 1 << *(_BYTE *)(v14 + 32);
  v18 = *(_QWORD *)(v14 + 64);
  v48 = (_QWORD *)(v14 + 64);
  if (v17 < 64)
    v19 = ~(-1 << v17);
  else
    v19 = -1;
  v20 = v19 & v18;
  v47 = (unint64_t)(v17 + 63) >> 6;
  v21 = v15 + 64;
  result = swift_retain();
  v23 = 0;
  v51 = v6;
  v52 = v5;
  v50 = v14;
  while (1)
  {
    if (v20)
    {
      v25 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v26 = v25 | (v23 << 6);
      goto LABEL_22;
    }
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    if (v27 >= v47)
      break;
    v28 = v48;
    v29 = v48[v27];
    ++v23;
    if (!v29)
    {
      v23 = v27 + 1;
      if (v27 + 1 >= v47)
        goto LABEL_37;
      v29 = v48[v23];
      if (!v29)
      {
        v30 = v27 + 2;
        if (v30 >= v47)
        {
LABEL_37:
          swift_release();
          v3 = v46;
          if ((v56 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v29 = v48[v30];
        if (!v29)
        {
          while (1)
          {
            v23 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_46;
            if (v23 >= v47)
              goto LABEL_37;
            v29 = v48[v23];
            ++v30;
            if (v29)
              goto LABEL_21;
          }
        }
        v23 = v30;
      }
    }
LABEL_21:
    v20 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v23 << 6);
LABEL_22:
    v31 = *(_QWORD *)(v54 + 72);
    v32 = *(_QWORD *)(v14 + 48) + v31 * v26;
    v57 = v23;
    if ((v56 & 1) != 0)
    {
      sub_2452B7AB8(v32, (uint64_t)v13, type metadata accessor for Record.ID);
      v33 = *(_QWORD *)(v53 + 72);
      sub_2452B7AB8(*(_QWORD *)(v14 + 56) + v33 * v26, v58, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    }
    else
    {
      sub_2452B792C(v32, (uint64_t)v13, type metadata accessor for Record.ID);
      v33 = *(_QWORD *)(v53 + 72);
      sub_2452B792C(*(_QWORD *)(v14 + 56) + v33 * v26, v58, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    }
    sub_24538843C();
    swift_bridgeObjectRetain();
    sub_245387B6C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_245387B6C();
    sub_245387B6C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = v55;
    sub_2452B792C((uint64_t)&v13[*(int *)(v59 + 24)], v55, type metadata accessor for Record.ID.Ownership);
    v36 = v51;
    v35 = v52;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v34, 1, v52) == 1)
    {
      sub_245388448();
    }
    else
    {
      v37 = v49;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v49, v34, v35);
      sub_245388448();
      sub_24526B308(&qword_25744F6D0, MEMORY[0x24BDCEA88]);
      sub_245387AB8();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v35);
    }
    v14 = v50;
    swift_bridgeObjectRetain();
    sub_245387B6C();
    swift_bridgeObjectRelease();
    result = sub_245388478();
    v38 = -1 << *(_BYTE *)(v16 + 32);
    v39 = result & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v21 + 8 * (v39 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v21 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v41 = 0;
      v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v43 = v40 == v42;
        if (v40 == v42)
          v40 = 0;
        v41 |= v43;
        v44 = *(_QWORD *)(v21 + 8 * v40);
      }
      while (v44 == -1);
      v24 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(_QWORD *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    sub_2452B7AB8((uint64_t)v13, *(_QWORD *)(v16 + 48) + v31 * v24, type metadata accessor for Record.ID);
    result = sub_2452B7AB8(v58, *(_QWORD *)(v16 + 56) + v33 * v24, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    ++*(_QWORD *)(v16 + 16);
    v23 = v57;
  }
  swift_release();
  v3 = v46;
  v28 = v48;
  if ((v56 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v45 = 1 << *(_BYTE *)(v14 + 32);
  if (v45 >= 64)
    bzero(v28, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v28 = -1 << v45;
  *(_QWORD *)(v14 + 16) = 0;
LABEL_44:
  result = swift_release();
  *v3 = v16;
  return result;
}

uint64_t sub_2452C4220(uint64_t a1, int a2)
{
  return sub_2452C4B44(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship, (uint64_t *)&unk_2574524A0);
}

uint64_t sub_2452C4234(uint64_t a1, char a2)
{
  return sub_2452C6D30(a1, a2, (uint64_t *)&unk_257452518);
}

uint64_t sub_2452C4240(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t i;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450100);
  v38 = a2;
  v6 = sub_245387FA4();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v20 = v19 | (v13 << 6);
      }
      else
      {
        v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v35)
          goto LABEL_33;
        v22 = v36[v21];
        ++v13;
        if (!v22)
        {
          v13 = v21 + 1;
          if (v21 + 1 >= v35)
            goto LABEL_33;
          v22 = v36[v13];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v38 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v36[v23];
            if (!v22)
            {
              while (1)
              {
                v13 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_40;
                if (v13 >= v35)
                  goto LABEL_33;
                v22 = v36[v13];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v13 = v23;
          }
        }
LABEL_30:
        v10 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      v28 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 32 * v20);
      v29 = *v28;
      v30 = v28[1];
      v32 = v28[2];
      v31 = v28[3];
      v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
      if ((v38 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
      }
      sub_24538843C();
      sub_245387B6C();
      sub_245387B6C();
      result = sub_245388478();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 32 * v17);
      *v18 = v29;
      v18[1] = v30;
      v18[2] = v32;
      v18[3] = v31;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v33;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2452C4564(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  int64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (**v34)(char *, unint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  int64_t v48;
  _QWORD *v49;
  void (**v50)(char *, unint64_t, uint64_t);
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  int v55;
  uint64_t (**v56)(unint64_t, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;

  v3 = v2;
  v5 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_245387740();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v51 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v46 - v12;
  v61 = type metadata accessor for Record.ID(0);
  v54 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452500);
  v55 = a2;
  v17 = sub_245387FA4();
  v18 = v17;
  if (*(_QWORD *)(v16 + 16))
  {
    v47 = v2;
    v19 = 1 << *(_BYTE *)(v16 + 32);
    v20 = *(_QWORD *)(v16 + 64);
    v49 = (_QWORD *)(v16 + 64);
    if (v19 < 64)
      v21 = ~(-1 << v19);
    else
      v21 = -1;
    v22 = v21 & v20;
    v48 = (unint64_t)(v19 + 63) >> 6;
    v50 = (void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    v56 = (uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32);
    v23 = v17 + 64;
    result = swift_retain();
    v25 = 0;
    v52 = v16;
    v53 = v7;
    while (1)
    {
      if (v22)
      {
        v58 = (v22 - 1) & v22;
        v28 = __clz(__rbit64(v22)) | (v25 << 6);
      }
      else
      {
        v29 = v25 + 1;
        if (__OFADD__(v25, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        if (v29 >= v48)
          goto LABEL_37;
        v30 = v49[v29];
        ++v25;
        if (!v30)
        {
          v25 = v29 + 1;
          if (v29 + 1 >= v48)
            goto LABEL_37;
          v30 = v49[v25];
          if (!v30)
          {
            v31 = v29 + 2;
            if (v31 >= v48)
            {
LABEL_37:
              swift_release();
              v3 = v47;
              if ((v55 & 1) != 0)
              {
                v45 = 1 << *(_BYTE *)(v16 + 32);
                if (v45 >= 64)
                  bzero(v49, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v49 = -1 << v45;
                *(_QWORD *)(v16 + 16) = 0;
              }
              break;
            }
            v30 = v49[v31];
            if (!v30)
            {
              while (1)
              {
                v25 = v31 + 1;
                if (__OFADD__(v31, 1))
                  goto LABEL_44;
                if (v25 >= v48)
                  goto LABEL_37;
                v30 = v49[v25];
                ++v31;
                if (v30)
                  goto LABEL_21;
              }
            }
            v25 = v31;
          }
        }
LABEL_21:
        v58 = (v30 - 1) & v30;
        v28 = __clz(__rbit64(v30)) + (v25 << 6);
      }
      v32 = *(_QWORD *)(v54 + 72);
      v33 = *(_QWORD *)(v16 + 48) + v32 * v28;
      v60 = v25;
      v57 = v32;
      if ((v55 & 1) != 0)
      {
        sub_2452B7AB8(v33, (uint64_t)v15, type metadata accessor for Record.ID);
        v34 = (void (**)(char *, unint64_t, uint64_t))v56;
      }
      else
      {
        sub_2452B792C(v33, (uint64_t)v15, type metadata accessor for Record.ID);
        v34 = v50;
      }
      v35 = *(_QWORD *)(v16 + 56);
      v59 = *(_QWORD *)(v9 + 72);
      (*v34)(v13, v35 + v59 * v28, v8);
      sub_24538843C();
      swift_bridgeObjectRetain();
      sub_245387B6C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_245387B6C();
      sub_245387B6C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v36 = (uint64_t)v53;
      sub_2452B792C((uint64_t)&v15[*(int *)(v61 + 24)], (uint64_t)v53, type metadata accessor for Record.ID.Ownership);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v36, 1, v8) == 1)
      {
        sub_245388448();
      }
      else
      {
        v37 = v51;
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v51, v36, v8);
        sub_245388448();
        sub_24526B308(&qword_25744F6D0, MEMORY[0x24BDCEA88]);
        sub_245387AB8();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v37, v8);
      }
      swift_bridgeObjectRetain();
      sub_245387B6C();
      swift_bridgeObjectRelease();
      result = sub_245388478();
      v38 = -1 << *(_BYTE *)(v18 + 32);
      v39 = result & ~v38;
      v40 = v39 >> 6;
      if (((-1 << v39) & ~*(_QWORD *)(v23 + 8 * (v39 >> 6))) != 0)
      {
        v26 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v23 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v41 = 0;
        v42 = (unint64_t)(63 - v38) >> 6;
        do
        {
          if (++v40 == v42 && (v41 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v43 = v40 == v42;
          if (v40 == v42)
            v40 = 0;
          v41 |= v43;
          v44 = *(_QWORD *)(v23 + 8 * v40);
        }
        while (v44 == -1);
        v26 = __clz(__rbit64(~v44)) + (v40 << 6);
      }
      v27 = v57;
      *(_QWORD *)(v23 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      sub_2452B7AB8((uint64_t)v15, *(_QWORD *)(v18 + 48) + v27 * v26, type metadata accessor for Record.ID);
      result = (*v56)(*(_QWORD *)(v18 + 56) + v59 * v26, v13, v8);
      ++*(_QWORD *)(v18 + 16);
      v16 = v52;
      v25 = v60;
      v22 = v58;
    }
  }
  result = swift_release();
  *v3 = v18;
  return result;
}

uint64_t sub_2452C4B30(uint64_t a1, int a2)
{
  return sub_2452C4B44(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion, (uint64_t *)&unk_257450140);
}

uint64_t sub_2452C4B44(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  int v47;
  uint64_t (*v48)(_QWORD);

  v6 = v4;
  v48 = a3;
  v8 = a3(0);
  v46 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v42 - v9;
  v11 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v47 = a2;
  v12 = sub_245387FA4();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v45 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v43 = v4;
  v44 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  while (1)
  {
    if (v17)
    {
      v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      break;
    v26 = v45;
    v27 = v45[v25];
    ++v20;
    if (!v27)
    {
      v20 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_34;
      v27 = v45[v20];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_34:
          swift_release();
          v6 = v43;
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            v20 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v20 >= v44)
              goto LABEL_34;
            v27 = v45[v20];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v20 = v28;
      }
    }
LABEL_21:
    v17 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    v29 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * v24);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(v46 + 72);
    v33 = *(_QWORD *)(v11 + 56) + v32 * v24;
    if ((v47 & 1) != 0)
    {
      sub_2452B7AB8(v33, (uint64_t)v10, v48);
    }
    else
    {
      sub_2452B792C(v33, (uint64_t)v10, v48);
      swift_bridgeObjectRetain();
    }
    sub_24538843C();
    sub_245387B6C();
    result = sub_245388478();
    v34 = -1 << *(_BYTE *)(v13 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v18 + 8 * v36);
      }
      while (v40 == -1);
      v21 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v22 = (_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v21);
    *v22 = v31;
    v22[1] = v30;
    result = sub_2452B7AB8((uint64_t)v10, *(_QWORD *)(v13 + 56) + v32 * v21, v48);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v6 = v43;
  v26 = v45;
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v11 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v6 = v13;
  return result;
}

uint64_t sub_2452C4EB8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t i;
  uint64_t v44;
  int v45;
  uint64_t v46;

  v3 = v2;
  v5 = type metadata accessor for ZoneVersion();
  v44 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v46 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257450110);
  v45 = a2;
  v8 = sub_245387FA4();
  v9 = v8;
  if (*(_QWORD *)(v7 + 16))
  {
    v40 = v2;
    v10 = 1 << *(_BYTE *)(v7 + 32);
    v11 = *(_QWORD *)(v7 + 64);
    v42 = (_QWORD *)(v7 + 64);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & v11;
    v41 = (unint64_t)(v10 + 63) >> 6;
    v14 = v8 + 64;
    result = swift_retain();
    v16 = 0;
    for (i = v7; ; v7 = i)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v16 << 6);
      }
      else
      {
        v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v41)
          goto LABEL_34;
        v22 = v42[v21];
        ++v16;
        if (!v22)
        {
          v16 = v21 + 1;
          if (v21 + 1 >= v41)
            goto LABEL_34;
          v22 = v42[v16];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v41)
            {
LABEL_34:
              swift_release();
              v3 = v40;
              if ((v45 & 1) != 0)
              {
                v39 = 1 << *(_BYTE *)(v7 + 32);
                if (v39 >= 64)
                  bzero(v42, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v39;
                *(_QWORD *)(v7 + 16) = 0;
              }
              break;
            }
            v22 = v42[v23];
            if (!v22)
            {
              while (1)
              {
                v16 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v16 >= v41)
                  goto LABEL_34;
                v22 = v42[v16];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v16 = v23;
          }
        }
LABEL_21:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      v24 = *(_QWORD *)(v7 + 56);
      v25 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 32 * v20);
      v27 = *v25;
      v26 = v25[1];
      v29 = v25[2];
      v28 = v25[3];
      v30 = *(_QWORD *)(v44 + 72);
      v31 = v24 + v30 * v20;
      if ((v45 & 1) != 0)
      {
        sub_2452B7AB8(v31, v46, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      }
      else
      {
        sub_2452B792C(v31, v46, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_24538843C();
      sub_245387B6C();
      sub_245387B6C();
      result = sub_245388478();
      v32 = -1 << *(_BYTE *)(v9 + 32);
      v33 = result & ~v32;
      v34 = v33 >> 6;
      if (((-1 << v33) & ~*(_QWORD *)(v14 + 8 * (v33 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v14 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v35 = 0;
        v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v37 = v34 == v36;
          if (v34 == v36)
            v34 = 0;
          v35 |= v37;
          v38 = *(_QWORD *)(v14 + 8 * v34);
        }
        while (v38 == -1);
        v17 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 32 * v17);
      *v18 = v27;
      v18[1] = v26;
      v18[2] = v29;
      v18[3] = v28;
      result = sub_2452B7AB8(v46, *(_QWORD *)(v9 + 56) + v30 * v17, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
      ++*(_QWORD *)(v9 + 16);
    }
  }
  result = swift_release();
  *v3 = v9;
  return result;
}

uint64_t sub_2452C5258(uint64_t a1, int a2)
{
  return sub_2452C5934(a1, a2, type metadata accessor for Replicator.Session, (uint64_t *)&unk_257452508);
}

uint64_t sub_2452C526C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450130);
  v42 = a2;
  v6 = sub_245387FA4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_24538843C();
    sub_245387B6C();
    result = sub_245388478();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2452C5590(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t i;
  int v43;

  v3 = v2;
  v5 = sub_245387740();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452438);
  v43 = a2;
  v10 = sub_245387FA4();
  v11 = v9;
  v12 = v10;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  v14 = *(_QWORD *)(v11 + 64);
  v41 = (_QWORD *)(v11 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v39 = v3;
  v40 = (unint64_t)(v13 + 63) >> 6;
  v17 = v10 + 64;
  result = swift_retain();
  v19 = 0;
  for (i = v11; ; v11 = i)
  {
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_22;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = v41;
    v25 = v41[v23];
    ++v19;
    if (!v25)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_34;
      v25 = v41[v19];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v41[v26];
        if (!v25)
        {
          while (1)
          {
            v19 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v19 >= v40)
              goto LABEL_34;
            v25 = v41[v19];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v19 = v26;
      }
    }
LABEL_21:
    v16 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_22:
    v27 = *(_QWORD *)(v6 + 72);
    v28 = *(_QWORD *)(v11 + 48) + v27 * v22;
    if ((v43 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v28, v5);
      v29 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v22);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v28, v5);
      v29 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v22);
      swift_unknownObjectRetain();
    }
    sub_24526B308(&qword_25744F6D0, MEMORY[0x24BDCEA88]);
    result = sub_245387AAC();
    v30 = -1 << *(_BYTE *)(v12 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v17 + 8 * v32);
      }
      while (v36 == -1);
      v20 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v12 + 48) + v27 * v20, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v20) = v29;
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v37 = 1 << *(_BYTE *)(v11 + 32);
  if (v37 >= 64)
    bzero(v24, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v37;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_2452C5920(uint64_t a1, int a2)
{
  return sub_2452C5934(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for NetworkBrowser.Monitor, &qword_257452440);
}

uint64_t sub_2452C5934(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t i;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD);

  v6 = v4;
  v51 = a3;
  v8 = a3(0);
  v48 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v50 = (uint64_t)&v44 - v9;
  v10 = sub_245387740();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v49 = a2;
  v15 = sub_245387FA4();
  v16 = v15;
  if (!*(_QWORD *)(v14 + 16))
    goto LABEL_41;
  v17 = 1 << *(_BYTE *)(v14 + 32);
  v18 = *(_QWORD *)(v14 + 64);
  v46 = (_QWORD *)(v14 + 64);
  if (v17 < 64)
    v19 = ~(-1 << v17);
  else
    v19 = -1;
  v20 = v19 & v18;
  v44 = v4;
  v45 = (unint64_t)(v17 + 63) >> 6;
  v21 = v15 + 64;
  result = swift_retain();
  v23 = 0;
  for (i = v14; ; v14 = i)
  {
    if (v20)
    {
      v25 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v26 = v25 | (v23 << 6);
      goto LABEL_22;
    }
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v45)
      break;
    v28 = v46;
    v29 = v46[v27];
    ++v23;
    if (!v29)
    {
      v23 = v27 + 1;
      if (v27 + 1 >= v45)
        goto LABEL_34;
      v29 = v46[v23];
      if (!v29)
      {
        v30 = v27 + 2;
        if (v30 >= v45)
        {
LABEL_34:
          swift_release();
          v6 = v44;
          if ((v49 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v29 = v46[v30];
        if (!v29)
        {
          while (1)
          {
            v23 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_43;
            if (v23 >= v45)
              goto LABEL_34;
            v29 = v46[v23];
            ++v30;
            if (v29)
              goto LABEL_21;
          }
        }
        v23 = v30;
      }
    }
LABEL_21:
    v20 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v23 << 6);
LABEL_22:
    v31 = *(_QWORD *)(v11 + 72);
    v32 = *(_QWORD *)(v14 + 48) + v31 * v26;
    if ((v49 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 32))(v13, v32, v10);
      v33 = *(_QWORD *)(v14 + 56);
      v34 = *(_QWORD *)(v48 + 72);
      sub_2452B7AB8(v33 + v34 * v26, v50, v51);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v13, v32, v10);
      v35 = *(_QWORD *)(v14 + 56);
      v34 = *(_QWORD *)(v48 + 72);
      sub_2452B792C(v35 + v34 * v26, v50, v51);
    }
    sub_24526B308(&qword_25744F6D0, MEMORY[0x24BDCEA88]);
    result = sub_245387AAC();
    v36 = -1 << *(_BYTE *)(v16 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v21 + 8 * (v37 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v21 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v39 = 0;
      v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v41 = v38 == v40;
        if (v38 == v40)
          v38 = 0;
        v39 |= v41;
        v42 = *(_QWORD *)(v21 + 8 * v38);
      }
      while (v42 == -1);
      v24 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(_QWORD *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(*(_QWORD *)(v16 + 48) + v31 * v24, v13, v10);
    result = sub_2452B7AB8(v50, *(_QWORD *)(v16 + 56) + v34 * v24, v51);
    ++*(_QWORD *)(v16 + 16);
  }
  swift_release();
  v6 = v44;
  v28 = v46;
  if ((v49 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v43 = 1 << *(_BYTE *)(v14 + 32);
  if (v43 >= 64)
    bzero(v28, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v28 = -1 << v43;
  *(_QWORD *)(v14 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v6 = v16;
  return result;
}

uint64_t sub_2452C5D20(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;

  v3 = v2;
  v5 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  v38 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452460);
  v39 = a2;
  result = sub_245387FA4();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v35 = v3;
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v37 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v36 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v19 = v18 | (v11 << 6);
      }
      else
      {
        v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = (uint64_t)v37;
        if (v20 >= v36)
          goto LABEL_34;
        v21 = v37[v20];
        ++v11;
        if (!v21)
        {
          v11 = v20 + 1;
          if (v20 + 1 >= v36)
            goto LABEL_34;
          v21 = v37[v11];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v36)
            {
LABEL_34:
              if ((v39 & 1) == 0)
              {
                result = swift_release();
                v3 = v35;
                goto LABEL_41;
              }
              v33 = 1 << *(_BYTE *)(v8 + 32);
              if (v33 >= 64)
                bzero(v37, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v33;
              v3 = v35;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v21 = v37[v22];
            if (!v21)
            {
              while (1)
              {
                v11 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v11 >= v36)
                  goto LABEL_34;
                v21 = v37[v11];
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v11 = v22;
          }
        }
LABEL_21:
        v15 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      v23 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19);
      v24 = *(_QWORD *)(v38 + 72);
      v25 = *(_QWORD *)(v8 + 56) + v24 * v19;
      if ((v39 & 1) != 0)
        sub_2452B7AB8(v25, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
      else
        sub_2452B792C(v25, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
      result = sub_245388430();
      v26 = -1 << *(_BYTE *)(v10 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v17) = v23;
      result = sub_2452B7AB8((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24 * v17, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v10;
  return result;
}

uint64_t sub_2452C6050(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574503B0);
  v38 = a2;
  v6 = sub_245387FA4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_24538843C();
    sub_245387B6C();
    result = sub_245388478();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2452C635C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452478);
  v6 = sub_245387FA4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_2452CC368((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_2452CC2F8(v25, (uint64_t)&v38);
      sub_245263FBC(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_245387E60();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_2452CC368(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2452C6670(uint64_t a1, int a2)
{
  return sub_2452C4B44(a1, a2, type metadata accessor for NetworkMessenger.ExpiringConnection, (uint64_t *)&unk_257452DF0);
}

uint64_t sub_2452C6684(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452450);
  v6 = a2;
  v7 = sub_245387FA4();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35)
          goto LABEL_33;
        v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v35)
            goto LABEL_33;
          v24 = v36[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v35)
                  goto LABEL_33;
                v24 = v36[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_245261C44(v37, *((unint64_t *)&v37 + 1));
      }
      sub_24538843C();
      sub_245387B6C();
      result = sub_245388478();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_2452C6990(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  int v39;
  __int128 v40;

  v3 = v2;
  v5 = sub_245387740();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452448);
  v39 = a2;
  v10 = sub_245387FA4();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v38 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v36 = v2;
  v37 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = v38;
    v24 = v38[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_34;
      v24 = v38[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_34:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v38[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v37)
              goto LABEL_34;
            v24 = v38[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v39 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v40 = *(_OWORD *)(*(_QWORD *)(v9 + 56) + 16 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v40 = *(_OWORD *)(*(_QWORD *)(v9 + 56) + 16 * v21);
      swift_retain();
    }
    sub_24526B308(&qword_25744F6D0, MEMORY[0x24BDCEA88]);
    result = sub_245387AAC();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_OWORD *)(*(_QWORD *)(v11 + 56) + 16 * v19) = v40;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = v38;
  if ((v39 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_2452C6D24(uint64_t a1, char a2)
{
  return sub_2452C6D30(a1, a2, &qword_257452468);
}

uint64_t sub_2452C6D30(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_245387FA4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_24538843C();
    sub_245387B6C();
    result = sub_245388478();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_2452C7040(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;
  int v38;

  v3 = v2;
  v5 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
  v37 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452470);
  v38 = a2;
  result = sub_245387FA4();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v36 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v34 = v2;
    v35 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v19 = v18 | (v11 << 6);
      }
      else
      {
        v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = (uint64_t)v36;
        if (v20 >= v35)
          goto LABEL_34;
        v21 = v36[v20];
        ++v11;
        if (!v21)
        {
          v11 = v20 + 1;
          if (v20 + 1 >= v35)
            goto LABEL_34;
          v21 = v36[v11];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v35)
            {
LABEL_34:
              if ((v38 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_41;
              }
              v33 = 1 << *(_BYTE *)(v8 + 32);
              if (v33 >= 64)
                bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v36 = -1 << v33;
              v3 = v34;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                v11 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v11 >= v35)
                  goto LABEL_34;
                v21 = v36[v11];
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v11 = v22;
          }
        }
LABEL_21:
        v15 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      v23 = *(_BYTE *)(*(_QWORD *)(v8 + 48) + v19);
      v24 = *(_QWORD *)(v37 + 72);
      v25 = *(_QWORD *)(v8 + 56) + v24 * v19;
      if ((v38 & 1) != 0)
        sub_2452B7AB8(v25, (uint64_t)v7, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
      else
        sub_2452B792C(v25, (uint64_t)v7, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
      sub_24538843C();
      sub_245388460();
      result = sub_245388478();
      v26 = -1 << *(_BYTE *)(v10 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_BYTE *)(*(_QWORD *)(v10 + 48) + v17) = v23;
      result = sub_2452B7AB8((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24 * v17, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v10;
  return result;
}

uint64_t sub_2452C7380(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574500F8);
  result = sub_245387FA4();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v29 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v29)
          goto LABEL_33;
        v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v29)
            goto LABEL_33;
          v20 = v30[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v29)
                  goto LABEL_33;
                v20 = v30[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        swift_retain();
      sub_24538843C();
      sub_245388448();
      result = sub_245388478();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_2452C7650(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __int128 *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  __int128 v41[3];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452488);
  v39 = a2;
  v6 = sub_245387FA4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v37 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_22;
    }
    v19 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v19 >= v37)
      break;
    v20 = (_QWORD *)(v5 + 64);
    v21 = *(_QWORD *)(v38 + 8 * v19);
    ++v13;
    if (!v21)
    {
      v13 = v19 + 1;
      if (v19 + 1 >= v37)
        goto LABEL_34;
      v21 = *(_QWORD *)(v38 + 8 * v13);
      if (!v21)
      {
        v22 = v19 + 2;
        if (v22 >= v37)
        {
LABEL_34:
          swift_release();
          if ((v39 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v21 = *(_QWORD *)(v38 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            v13 = v22 + 1;
            if (__OFADD__(v22, 1))
              goto LABEL_43;
            if (v13 >= v37)
              goto LABEL_34;
            v21 = *(_QWORD *)(v38 + 8 * v13);
            ++v22;
            if (v21)
              goto LABEL_21;
          }
        }
        v13 = v22;
      }
    }
LABEL_21:
    v10 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v13 << 6);
LABEL_22:
    v23 = 40 * v18;
    v24 = *(_QWORD *)(v5 + 48) + v23;
    v26 = *(_QWORD *)v24;
    v25 = *(_QWORD *)(v24 + 8);
    v27 = *(_BYTE *)(v24 + 16);
    v40 = *(_OWORD *)(v24 + 24);
    v28 = (__int128 *)(*(_QWORD *)(v5 + 56) + v23);
    if ((v39 & 1) != 0)
    {
      sub_2452B7C5C(v28, (uint64_t)v41);
    }
    else
    {
      sub_24525E4F0((uint64_t)v28, (uint64_t)v41);
      swift_bridgeObjectRetain();
    }
    sub_24538843C();
    swift_bridgeObjectRetain();
    sub_245387B6C();
    swift_bridgeObjectRelease();
    sub_24538846C();
    sub_24538846C();
    sub_24538846C();
    result = sub_245388478();
    v29 = -1 << *(_BYTE *)(v7 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v11 + 8 * (v30 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v11 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v11 + 8 * v31);
      }
      while (v35 == -1);
      v14 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = 40 * v14;
    v16 = *(_QWORD *)(v7 + 48) + v15;
    *(_QWORD *)v16 = v26;
    *(_QWORD *)(v16 + 8) = v25;
    *(_BYTE *)(v16 + 16) = v27;
    *(_OWORD *)(v16 + 24) = v40;
    result = sub_2452B7C5C(v41, *(_QWORD *)(v7 + 56) + v15);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v20 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v20, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v20 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2452C79D8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t i;
  char v41;
  __int128 v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452490);
  v41 = a2;
  v6 = sub_245387FA4();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v39 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v38 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v21 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v22 = v21 | (v13 << 6);
      }
      else
      {
        v23 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v38)
          goto LABEL_33;
        v24 = v39[v23];
        ++v13;
        if (!v24)
        {
          v13 = v23 + 1;
          if (v23 + 1 >= v38)
            goto LABEL_33;
          v24 = v39[v13];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v38)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v41 & 1) != 0)
              {
                v37 = 1 << *(_BYTE *)(v5 + 32);
                if (v37 >= 64)
                  bzero(v39, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v39 = -1 << v37;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v39[v25];
            if (!v24)
            {
              while (1)
              {
                v13 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v13 >= v38)
                  goto LABEL_33;
                v24 = v39[v13];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v13 = v25;
          }
        }
LABEL_30:
        v10 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v13 << 6);
      }
      v30 = *(_QWORD *)(v5 + 48) + 40 * v22;
      v32 = *(_QWORD *)v30;
      v31 = *(_QWORD *)(v30 + 8);
      v33 = *(_BYTE *)(v30 + 16);
      v42 = *(_OWORD *)(v30 + 24);
      v34 = *(_QWORD *)(v5 + 56) + 16 * v22;
      v35 = *(_QWORD *)v34;
      v36 = *(_BYTE *)(v34 + 8);
      if ((v41 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_24538843C();
      swift_bridgeObjectRetain();
      sub_245387B6C();
      swift_bridgeObjectRelease();
      sub_24538846C();
      sub_24538846C();
      sub_24538846C();
      result = sub_245388478();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        v18 = v42;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v14) >> 6;
        v18 = v42;
        do
        {
          if (++v16 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v16 == v27;
          if (v16 == v27)
            v16 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v29 == -1);
        v17 = __clz(__rbit64(~v29)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v19 = *(_QWORD *)(v7 + 48) + 40 * v17;
      *(_QWORD *)v19 = v32;
      *(_QWORD *)(v19 + 8) = v31;
      *(_BYTE *)(v19 + 16) = v33;
      *(_OWORD *)(v19 + 24) = v18;
      v20 = *(_QWORD *)(v7 + 56) + 16 * v17;
      *(_QWORD *)v20 = v35;
      *(_BYTE *)(v20 + 8) = v36;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

void *sub_2452C7D4C()
{
  return sub_2452C7D64((uint64_t *)&unk_257450118);
}

void *sub_2452C7D58()
{
  return sub_2452C7D64(&qword_2574500F0);
}

void *sub_2452C7D64(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v33;
  int64_t v34;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_245387F98();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_24:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v10++, 1))
      goto LABEL_26;
    if (v10 >= v14)
      goto LABEL_24;
    v33 = *(_QWORD *)(v7 + 8 * v10);
    if (!v33)
      break;
LABEL_23:
    v13 = (v33 - 1) & v33;
    v16 = __clz(__rbit64(v33)) + (v10 << 6);
LABEL_12:
    v17 = 32 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 32 * v16);
    v20 = *v18;
    v19 = v18[1];
    v21 = v18[2];
    v22 = v18[3];
    v23 = 48 * v16;
    v24 = *(_QWORD *)(v3 + 56) + v23;
    v25 = *(_QWORD *)v24;
    v26 = *(_QWORD *)(v24 + 8);
    v27 = *(_QWORD *)(v24 + 16);
    v28 = *(_QWORD *)(v24 + 24);
    v29 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    v30 = *(_OWORD *)(v24 + 32);
    *v29 = v20;
    v29[1] = v19;
    v29[2] = v21;
    v29[3] = v22;
    v31 = *(_QWORD *)(v5 + 56) + v23;
    *(_QWORD *)v31 = v25;
    *(_QWORD *)(v31 + 8) = v26;
    *(_QWORD *)(v31 + 16) = v27;
    *(_QWORD *)(v31 + 24) = v28;
    *(_OWORD *)(v31 + 32) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v34 = v10 + 1;
  if (v10 + 1 >= v14)
    goto LABEL_24;
  v33 = *(_QWORD *)(v7 + 8 * v34);
  if (v33)
  {
    ++v10;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v10 >= v14)
      goto LABEL_24;
    v33 = *(_QWORD *)(v7 + 8 * v10);
    ++v34;
    if (v33)
      goto LABEL_23;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_2452C7F34()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _QWORD *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  int64_t v40;
  unint64_t v41;
  int64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452528);
  v2 = *v0;
  v3 = sub_245387F98();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v40 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v40 >= v13)
      goto LABEL_26;
    v41 = *(_QWORD *)(v6 + 8 * v40);
    ++v9;
    if (!v41)
    {
      v9 = v40 + 1;
      if (v40 + 1 >= v13)
        goto LABEL_26;
      v41 = *(_QWORD *)(v6 + 8 * v9);
      if (!v41)
        break;
    }
LABEL_25:
    v12 = (v41 - 1) & v41;
    v15 = __clz(__rbit64(v41)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 168 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_OWORD *)(v21 + 96);
    v24 = *(_OWORD *)(v21 + 48);
    v23 = *(_OWORD *)(v21 + 64);
    v48 = *(_OWORD *)(v21 + 80);
    v49 = v22;
    v46 = v24;
    v47 = v23;
    v26 = *(_OWORD *)(v21 + 128);
    v25 = *(_OWORD *)(v21 + 144);
    v27 = *(_OWORD *)(v21 + 112);
    v53 = *(_QWORD *)(v21 + 160);
    v51 = v26;
    v52 = v25;
    v50 = v27;
    v29 = *(_OWORD *)(v21 + 16);
    v28 = *(_OWORD *)(v21 + 32);
    v43 = *(_OWORD *)v21;
    v44 = v29;
    v45 = v28;
    v30 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v30 = v19;
    v30[1] = v18;
    v31 = *(_QWORD *)(v4 + 56) + v20;
    v32 = v43;
    v33 = v45;
    *(_OWORD *)(v31 + 16) = v44;
    *(_OWORD *)(v31 + 32) = v33;
    *(_OWORD *)v31 = v32;
    v34 = v46;
    v35 = v47;
    v36 = v49;
    *(_OWORD *)(v31 + 80) = v48;
    *(_OWORD *)(v31 + 96) = v36;
    *(_OWORD *)(v31 + 48) = v34;
    *(_OWORD *)(v31 + 64) = v35;
    v37 = v50;
    v38 = v51;
    v39 = v52;
    *(_QWORD *)(v31 + 160) = v53;
    *(_OWORD *)(v31 + 128) = v38;
    *(_OWORD *)(v31 + 144) = v39;
    *(_OWORD *)(v31 + 112) = v37;
    swift_bridgeObjectRetain();
    result = (void *)sub_245261B98((uint64_t)&v43);
  }
  v42 = v40 + 2;
  if (v42 >= v13)
    goto LABEL_26;
  v41 = *(_QWORD *)(v6 + 8 * v42);
  if (v41)
  {
    v9 = v42;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v42 + 1;
    if (__OFADD__(v42, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v41 = *(_QWORD *)(v6 + 8 * v9);
    ++v42;
    if (v41)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2452C816C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for RecordMetadata();
  v29 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Record.ID(0);
  v28 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257450128);
  v8 = *v0;
  v9 = sub_245387F98();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    result = (void *)swift_release();
LABEL_25:
    *v1 = v10;
    return result;
  }
  v25 = v1;
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v13 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v14 = 1 << *(_BYTE *)(v8 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v8 + 64);
  v26 = v8 + 64;
  v27 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v27)
      goto LABEL_23;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v27)
        goto LABEL_23;
      v22 = *(_QWORD *)(v26 + 8 * v13);
      if (!v22)
        break;
    }
LABEL_22:
    v16 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    v19 = *(_QWORD *)(v28 + 72) * v18;
    sub_2452B792C(*(_QWORD *)(v8 + 48) + v19, (uint64_t)v7, type metadata accessor for Record.ID);
    v20 = *(_QWORD *)(v29 + 72) * v18;
    sub_2452B792C(*(_QWORD *)(v8 + 56) + v20, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
    sub_2452B7AB8((uint64_t)v7, *(_QWORD *)(v10 + 48) + v19, type metadata accessor for Record.ID);
    result = (void *)sub_2452B7AB8((uint64_t)v4, *(_QWORD *)(v10 + 56) + v20, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
  }
  v23 = v21 + 2;
  if (v23 >= v27)
  {
LABEL_23:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_25;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v27)
      goto LABEL_23;
    v22 = *(_QWORD *)(v26 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_2452C8404()
{
  return sub_2452C88D0((uint64_t (*)(_QWORD))type metadata accessor for PairingRelationship, (uint64_t *)&unk_2574524A0);
}

void *sub_2452C8418()
{
  return sub_2452C9E30((uint64_t *)&unk_257452518);
}

void *sub_2452C8424()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450100);
  v2 = *v0;
  v3 = sub_245387F98();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 32 * v15);
    v18 = v17[1];
    v19 = v17[2];
    v20 = v17[3];
    v21 = 8 * v15;
    v22 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v21);
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = *v17;
    v23[1] = v18;
    v23[2] = v19;
    v23[3] = v20;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2452C85F0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v36 = sub_245387740();
  v1 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v35 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Record.ID(0);
  v37 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v34 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452500);
  v31 = v0;
  v5 = *v0;
  v6 = sub_245387F98();
  v7 = *(_QWORD *)(v5 + 16);
  v39 = v6;
  if (!v7)
  {
    result = (void *)swift_release();
    v29 = v39;
    v28 = v31;
LABEL_25:
    *v28 = v29;
    return result;
  }
  v8 = v6;
  result = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    v8 = v39;
  }
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v38 = v5;
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v32 = v5 + 64;
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = (uint64_t)v34;
  v16 = v36;
  for (i = v39;
        ;
        result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(i + 56) + v22, v24, v16))
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v11 << 6);
      v20 = v38;
      goto LABEL_9;
    }
    v25 = v11 + 1;
    v20 = v38;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 >= v33)
      goto LABEL_23;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_23;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_22:
    v14 = (v26 - 1) & v26;
    v19 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_9:
    v21 = *(_QWORD *)(v37 + 72) * v19;
    sub_2452B792C(*(_QWORD *)(v20 + 48) + v21, v15, type metadata accessor for Record.ID);
    v22 = *(_QWORD *)(v1 + 72) * v19;
    v23 = *(_QWORD *)(v20 + 56) + v22;
    v24 = v35;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v35, v23, v16);
    sub_2452B7AB8(v15, *(_QWORD *)(i + 48) + v21, type metadata accessor for Record.ID);
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_23:
    result = (void *)swift_release();
    v28 = v31;
    v29 = v39;
    goto LABEL_25;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_23;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_2452C88BC()
{
  return sub_2452C88D0((uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion, (uint64_t *)&unk_257450140);
}

void *sub_2452C88D0(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;

  v5 = a1(0);
  v32 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - v6;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v29 = v2;
  v8 = *v2;
  v9 = sub_245387F98();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v29 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v30 = v8 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v31 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v26 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v26);
    ++v14;
    if (!v27)
    {
      v14 = v26 + 1;
      if (v26 + 1 >= v31)
        goto LABEL_26;
      v27 = *(_QWORD *)(v30 + 8 * v14);
      if (!v27)
        break;
    }
LABEL_25:
    v17 = (v27 - 1) & v27;
    v19 = __clz(__rbit64(v27)) + (v14 << 6);
LABEL_12:
    v20 = 16 * v19;
    v21 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v19);
    v23 = *v21;
    v22 = v21[1];
    v24 = *(_QWORD *)(v32 + 72) * v19;
    sub_2452B792C(*(_QWORD *)(v8 + 56) + v24, (uint64_t)v7, a1);
    v25 = (_QWORD *)(*(_QWORD *)(v10 + 48) + v20);
    *v25 = v23;
    v25[1] = v22;
    sub_2452B7AB8((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24, a1);
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v31)
    goto LABEL_26;
  v27 = *(_QWORD *)(v30 + 8 * v28);
  if (v27)
  {
    v14 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v14 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v14);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2452C8B00()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = type metadata accessor for ZoneVersion();
  v37 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v36 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257450110);
  v33 = v0;
  v3 = *v0;
  v4 = sub_245387F98();
  v5 = *(_QWORD *)(v3 + 16);
  v39 = v4;
  if (!v5)
  {
    result = swift_release();
    v31 = v39;
    v30 = v33;
LABEL_28:
    *v30 = v31;
    return result;
  }
  v6 = v4;
  v7 = (void *)(v4 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)v7 >= v3 + 64 + 8 * v8)
  {
    memmove(v7, (const void *)(v3 + 64), 8 * v8);
    v6 = v39;
  }
  v34 = v3 + 64;
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v38 = v3;
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v35 = (unint64_t)(v11 + 63) >> 6;
  v14 = (uint64_t)v36;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      result = v38;
      goto LABEL_12;
    }
    v27 = v10 + 1;
    result = v38;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v27 >= v35)
      goto LABEL_26;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    ++v10;
    if (!v28)
    {
      v10 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_26;
      v28 = *(_QWORD *)(v34 + 8 * v10);
      if (!v28)
        break;
    }
LABEL_25:
    v13 = (v28 - 1) & v28;
    v16 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_12:
    v18 = 32 * v16;
    v19 = (uint64_t *)(*(_QWORD *)(result + 48) + 32 * v16);
    v21 = *v19;
    v20 = v19[1];
    v22 = v19[2];
    v23 = v19[3];
    v24 = *(_QWORD *)(v37 + 72) * v16;
    sub_2452B792C(*(_QWORD *)(result + 56) + v24, v14, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    v25 = v39;
    v26 = (_QWORD *)(*(_QWORD *)(v39 + 48) + v18);
    *v26 = v21;
    v26[1] = v20;
    v26[2] = v22;
    v26[3] = v23;
    sub_2452B7AB8(v14, *(_QWORD *)(v25 + 56) + v24, (uint64_t (*)(_QWORD))type metadata accessor for ZoneVersion);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v29 = v27 + 2;
  if (v29 >= v35)
  {
LABEL_26:
    result = swift_release();
    v30 = v33;
    v31 = v39;
    goto LABEL_28;
  }
  v28 = *(_QWORD *)(v34 + 8 * v29);
  if (v28)
  {
    v10 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v10 >= v35)
      goto LABEL_26;
    v28 = *(_QWORD *)(v34 + 8 * v10);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2452C8D7C()
{
  return sub_2452C918C(type metadata accessor for Replicator.Session, (uint64_t *)&unk_257452508);
}

void *sub_2452C8D90()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257450130);
  v2 = *v0;
  v3 = sub_245387F98();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2452C8F48()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_245387740();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452438);
  v24 = v0;
  v5 = *v0;
  v6 = sub_245387F98();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_unknownObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2452C9178()
{
  return sub_2452C918C((uint64_t (*)(_QWORD))type metadata accessor for NetworkBrowser.Monitor, &qword_257452440);
}

void *sub_2452C918C(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t i;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t (*v41)(_QWORD);
  uint64_t v42;
  uint64_t v43;

  v41 = a1;
  v4 = a1(0);
  v40 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v34 - v5;
  v38 = sub_245387740();
  v6 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v37 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v34 = v2;
  v8 = *v2;
  v9 = sub_245387F98();
  v10 = *(_QWORD *)(v8 + 16);
  v43 = v9;
  if (!v10)
  {
    result = (void *)swift_release();
    v33 = v43;
    v32 = v34;
LABEL_25:
    *v32 = v33;
    return result;
  }
  v11 = v9;
  result = (void *)(v9 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v8 || (unint64_t)result >= v8 + 64 + 8 * v13)
  {
    result = memmove(result, (const void *)(v8 + 64), 8 * v13);
    v11 = v43;
  }
  v14 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v42 = v8;
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v35 = v8 + 64;
  v36 = (unint64_t)(v15 + 63) >> 6;
  v19 = v37;
  v18 = v38;
  v20 = (uint64_t)v39;
  for (i = v43; ; result = (void *)sub_2452B7AB8(v20, *(_QWORD *)(i + 56) + v28, v27))
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v14 << 6);
      v24 = v42;
      goto LABEL_9;
    }
    v29 = v14 + 1;
    v24 = v42;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v29 >= v36)
      goto LABEL_23;
    v30 = *(_QWORD *)(v35 + 8 * v29);
    ++v14;
    if (!v30)
    {
      v14 = v29 + 1;
      if (v29 + 1 >= v36)
        goto LABEL_23;
      v30 = *(_QWORD *)(v35 + 8 * v14);
      if (!v30)
        break;
    }
LABEL_22:
    v17 = (v30 - 1) & v30;
    v23 = __clz(__rbit64(v30)) + (v14 << 6);
LABEL_9:
    v25 = *(_QWORD *)(v6 + 72) * v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v19, *(_QWORD *)(v24 + 48) + v25, v18);
    v26 = *(_QWORD *)(v24 + 56);
    v27 = v41;
    v28 = *(_QWORD *)(v40 + 72) * v23;
    sub_2452B792C(v26 + v28, v20, v41);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(i + 48) + v25, v19, v18);
  }
  v31 = v29 + 2;
  if (v31 >= v36)
  {
LABEL_23:
    result = (void *)swift_release();
    v32 = v34;
    v33 = v43;
    goto LABEL_25;
  }
  v30 = *(_QWORD *)(v35 + 8 * v31);
  if (v30)
  {
    v14 = v31;
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v14 >= v36)
      goto LABEL_23;
    v30 = *(_QWORD *)(v35 + 8 * v14);
    ++v31;
    if (v30)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_2452C9450()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor();
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452460);
  v5 = *v0;
  v6 = sub_245387F98();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = 8 * v17;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v20 = *(_QWORD *)(v27 + 72) * v17;
    sub_2452B792C(*(_QWORD *)(v5 + 56) + v20, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v19;
    result = (void *)sub_2452B7AB8((uint64_t)v4, *(_QWORD *)(v7 + 56) + v20, (uint64_t (*)(_QWORD))type metadata accessor for ConnectionDurationMonitor.ConnectionDescriptor);
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_2452C967C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574503B0);
  v2 = *v0;
  v3 = sub_245387F98();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2452C982C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452478);
  v2 = *v0;
  v3 = sub_245387F98();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_2452CC2F8(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_245263FBC(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_2452CC368(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2452C9A10()
{
  return sub_2452C88D0(type metadata accessor for NetworkMessenger.ExpiringConnection, (uint64_t *)&unk_257452DF0);
}

void *sub_2452C9A24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  __int128 v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452450);
  v2 = *v0;
  v3 = sub_245387F98();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v24 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    result = (void *)sub_245261C44(v24, *((unint64_t *)&v24 + 1));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2452C9BE8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(unint64_t, char *, uint64_t);
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  __int128 v28;

  v1 = v0;
  v2 = sub_245387740();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452448);
  v6 = *v0;
  v7 = sub_245387F98();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v26 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v27 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v23 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v12;
    if (!v24)
    {
      v12 = v23 + 1;
      if (v23 + 1 >= v16)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v12);
      if (!v24)
        break;
    }
LABEL_25:
    v15 = (v24 - 1) & v24;
    v18 = __clz(__rbit64(v24)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 16 * v18;
    v21 = *(_QWORD *)(v8 + 48) + v19;
    v22 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
    v28 = *(_OWORD *)(*(_QWORD *)(v6 + 56) + v20);
    v22(v21, v5, v2);
    *(_OWORD *)(*(_QWORD *)(v8 + 56) + v20) = v28;
    result = (void *)swift_retain();
  }
  v25 = v23 + 2;
  if (v25 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v12 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v12);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2452C9E24()
{
  return sub_2452C9E30(&qword_257452468);
}

void *sub_2452C9E30(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_245387F98();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2452C9FDC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for NetworkMessenger.PartialIncomingMessage(0);
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452470);
  v5 = *v0;
  v6 = sub_245387F98();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v24 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v15)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v15)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v17 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v18 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v17);
    v19 = *(_QWORD *)(v26 + 72) * v17;
    sub_2452B792C(*(_QWORD *)(v5 + 56) + v19, (uint64_t)v4, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    result = (void *)sub_2452B7AB8((uint64_t)v4, *(_QWORD *)(v7 + 56) + v19, type metadata accessor for NetworkMessenger.PartialIncomingMessage);
  }
  v22 = v20 + 2;
  if (v22 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_28;
  }
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2452CA204()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574500F8);
  v2 = *v0;
  v3 = sub_245387F98();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_retain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2452CA3A4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  __int128 v26;
  __int128 v27[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452488);
  v2 = *v0;
  v3 = sub_245387F98();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 40 * v15;
    v19 = *(_QWORD *)v17;
    v18 = *(_QWORD *)(v17 + 8);
    v20 = *(_BYTE *)(v17 + 16);
    v26 = *(_OWORD *)(v17 + 24);
    sub_24525E4F0(*(_QWORD *)(v2 + 56) + v16, (uint64_t)v27);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v21 = v19;
    *(_QWORD *)(v21 + 8) = v18;
    *(_BYTE *)(v21 + 16) = v20;
    *(_OWORD *)(v21 + 24) = v26;
    sub_2452B7C5C(v27, *(_QWORD *)(v4 + 56) + v16);
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2452CA5A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452490);
  v2 = *v0;
  v3 = sub_245387F98();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 40 * v15;
    v18 = *(_QWORD *)(v17 + 8);
    v19 = *(_BYTE *)(v17 + 16);
    v20 = 16 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    LOBYTE(v21) = *(_BYTE *)(v21 + 8);
    v23 = *(_QWORD *)(v4 + 48) + v16;
    v24 = *(_OWORD *)(v17 + 24);
    *(_QWORD *)v23 = *(_QWORD *)v17;
    *(_QWORD *)(v23 + 8) = v18;
    *(_BYTE *)(v23 + 16) = v19;
    *(_OWORD *)(v23 + 24) = v24;
    v25 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v25 = v22;
    *(_BYTE *)(v25 + 8) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t _s16ReplicatorEngine16DeviceDescriptorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  double v16;
  double v17;
  double v18;
  double v19;
  char v20;
  uint64_t result;
  char v22;
  unint64_t v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a1 + 48);
  v8 = *(double *)(a1 + 56);
  v7 = *(double *)(a1 + 64);
  v10 = *(double *)(a1 + 72);
  v9 = *(double *)(a1 + 80);
  v40 = *(_BYTE *)(a1 + 88);
  v45 = *(_BYTE *)(a1 + 89);
  v44 = *(_QWORD *)(a1 + 96);
  v42 = *(_QWORD *)(a1 + 104);
  v36 = *(_QWORD *)(a1 + 112);
  v38 = *(_QWORD *)(a1 + 120);
  v32 = *(_QWORD *)(a1 + 128);
  v33 = *(_QWORD *)(a1 + 136);
  v28 = *(_QWORD *)(a1 + 144);
  v29 = *(_QWORD *)(a1 + 152);
  v12 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v14 = *(_QWORD *)(a2 + 32);
  v13 = *(_QWORD *)(a2 + 40);
  v15 = *(unsigned __int8 *)(a2 + 48);
  v17 = *(double *)(a2 + 56);
  v16 = *(double *)(a2 + 64);
  v19 = *(double *)(a2 + 72);
  v18 = *(double *)(a2 + 80);
  v39 = *(_BYTE *)(a2 + 88);
  v46 = *(_BYTE *)(a2 + 89);
  v43 = *(_QWORD *)(a2 + 96);
  v41 = *(_QWORD *)(a2 + 104);
  v37 = *(_QWORD *)(a2 + 120);
  v31 = *(_QWORD *)(a2 + 128);
  v34 = *(_QWORD *)(a2 + 136);
  v35 = *(_QWORD *)(a2 + 112);
  v27 = *(_QWORD *)(a2 + 144);
  v30 = *(_QWORD *)(a2 + 152);
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    v20 = sub_245388274();
    result = 0;
    if ((v20 & 1) == 0)
      return result;
  }
  if (v2 == v12 && v4 == v11)
  {
    result = 0;
  }
  else
  {
    v22 = sub_245388274();
    result = 0;
    if ((v22 & 1) == 0)
      return result;
  }
  if (v3 != v14 || v5 != v13 || v6 != v15)
    return result;
  if ((v45 & 1) != 0)
  {
    if ((v46 & 1) == 0)
      return 0;
  }
  else
  {
    if ((v46 & 1) != 0)
      return 0;
    result = 0;
    if (v8 != v17 || v7 != v16 || v10 != v19)
      return result;
    if ((v40 & 1) != 0)
    {
      if ((v39 & 1) == 0)
        return 0;
    }
    else
    {
      result = 0;
      if ((v39 & 1) != 0 || v9 != v18)
        return result;
    }
  }
  if ((sub_2452E12C0(v44, v43) & 1) == 0 || (sub_2452E12CC(v42, v41) & 1) == 0)
    return 0;
  if (v38 >> 60 == 15)
  {
    v23 = v37;
    if (v37 >> 60 == 15)
      goto LABEL_33;
LABEL_31:
    sub_245261C30(v36, v38);
    sub_245261C30(v35, v23);
    sub_24525FFF8(v36, v38);
    sub_24525FFF8(v35, v23);
    return 0;
  }
  v23 = v37;
  if (v37 >> 60 == 15)
    goto LABEL_31;
  sub_245261C30(v36, v38);
  sub_245261C30(v35, v37);
  sub_2452E44A8(v36, v38);
  v25 = v24;
  sub_24525FFF8(v35, v37);
  sub_24525FFF8(v36, v38);
  if ((v25 & 1) == 0)
    return 0;
LABEL_33:
  if (!v33)
  {
    if (!v34)
      goto LABEL_40;
    return 0;
  }
  if (!v34)
    return 0;
  if (v32 == v31 && v33 == v34 || (v26 = sub_245388274(), result = 0, (v26 & 1) != 0))
  {
LABEL_40:
    if (v29)
    {
      if (v30 && (v28 == v27 && v29 == v30 || (sub_245388274() & 1) != 0))
        return 1;
    }
    else if (!v30)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_2452CAAE8()
{
  unint64_t result;

  result = qword_257452398;
  if (!qword_257452398)
  {
    result = MEMORY[0x2495330B0](&unk_24538A984, &type metadata for DeviceDescriptor.Versions.V12);
    atomic_store(result, (unint64_t *)&qword_257452398);
  }
  return result;
}

uint64_t sub_2452CAB2C()
{
  uint64_t v0;
  unint64_t v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 136);
  if (v1 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v0 + 128), v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_2452CAB90()
{
  unint64_t result;

  result = qword_2574523A0;
  if (!qword_2574523A0)
  {
    result = MEMORY[0x2495330B0](&unk_24538A95C, &type metadata for DeviceDescriptor.Versions.V10);
    atomic_store(result, (unint64_t *)&qword_2574523A0);
  }
  return result;
}

uint64_t sub_2452CABD4()
{
  uint64_t v0;
  unint64_t v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 136);
  if (v1 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(v0 + 128), v1);
  return swift_deallocObject();
}

unint64_t sub_2452CAC28()
{
  unint64_t result;

  result = qword_2574523A8;
  if (!qword_2574523A8)
  {
    result = MEMORY[0x2495330B0](&unk_24538A934, &type metadata for DeviceDescriptor.Versions.V9);
    atomic_store(result, (unint64_t *)&qword_2574523A8);
  }
  return result;
}

uint64_t sub_2452CAC6C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_2452CACA8()
{
  unint64_t result;

  result = qword_2574523B0;
  if (!qword_2574523B0)
  {
    result = MEMORY[0x2495330B0](&unk_24538A90C, &type metadata for DeviceDescriptor.Versions.V8);
    atomic_store(result, (unint64_t *)&qword_2574523B0);
  }
  return result;
}

uint64_t sub_2452CACEC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_2452CAD28()
{
  unint64_t result;

  result = qword_2574523B8;
  if (!qword_2574523B8)
  {
    result = MEMORY[0x2495330B0](&unk_24538A8E4, &type metadata for DeviceDescriptor.Versions.V0);
    atomic_store(result, (unint64_t *)&qword_2574523B8);
  }
  return result;
}

uint64_t sub_2452CAD6C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2452CAD98(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 112);
  v3 = *(_QWORD *)(a1 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24525FFF8(v2, v3);
  return a1;
}

uint64_t sub_2452CAE00()
{
  return MEMORY[0x24BEE0D10];
}

uint64_t sub_2452CAE18(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

__n128 __swift_memcpy160_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

ValueMetadata *type metadata accessor for DeviceDescriptor()
{
  return &type metadata for DeviceDescriptor;
}

uint64_t initializeBufferWithCopyOfBuffer for HandshakeDescriptor(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for PairedDevice()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DeviceDescriptor.Versions.V0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DeviceDescriptor.Versions.V0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DeviceDescriptor.Versions.V0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceDescriptor.Versions.V0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceDescriptor.Versions.V0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceDescriptor.Versions.V0()
{
  return &type metadata for DeviceDescriptor.Versions.V0;
}

uint64_t destroy for DeviceDescriptor.Versions.V8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DeviceDescriptor.Versions.V8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DeviceDescriptor.Versions.V8(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for DeviceDescriptor.Versions.V8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceDescriptor.Versions.V8(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceDescriptor.Versions.V8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceDescriptor.Versions.V8()
{
  return &type metadata for DeviceDescriptor.Versions.V8;
}

uint64_t destroy for DeviceDescriptor.Versions.V9()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DeviceDescriptor.Versions.V9(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  v5 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DeviceDescriptor.Versions.V9(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v4 = *(_OWORD *)(a2 + 56);
  v5 = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 56) = v4;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for DeviceDescriptor.Versions.V9(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceDescriptor.Versions.V9(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceDescriptor.Versions.V9(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceDescriptor.Versions.V9()
{
  return &type metadata for DeviceDescriptor.Versions.V9;
}

uint64_t destroy for DeviceDescriptor.Versions.V10(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(a1 + 120);
  if (v3 >> 60 != 15)
    return sub_24525CB80(*(_QWORD *)(a1 + 112), v3);
  return result;
}

uint64_t initializeWithCopy for DeviceDescriptor.Versions.V10(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  v5 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v5;
  v6 = (uint64_t *)(a2 + 112);
  v7 = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 112) = *(_OWORD *)v6;
  }
  else
  {
    v8 = *v6;
    sub_245261C44(*v6, v7);
    *(_QWORD *)(a1 + 112) = v8;
    *(_QWORD *)(a1 + 120) = v7;
  }
  return a1;
}

uint64_t assignWithCopy for DeviceDescriptor.Versions.V10(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v4 = *(_OWORD *)(a2 + 56);
  v5 = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 56) = v4;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (uint64_t *)(a2 + 112);
  v7 = *(_QWORD *)(a2 + 120);
  if (*(_QWORD *)(a1 + 120) >> 60 != 15)
  {
    if (v7 >> 60 != 15)
    {
      v9 = *v6;
      sub_245261C44(*v6, v7);
      v10 = *(_QWORD *)(a1 + 112);
      v11 = *(_QWORD *)(a1 + 120);
      *(_QWORD *)(a1 + 112) = v9;
      *(_QWORD *)(a1 + 120) = v7;
      sub_24525CB80(v10, v11);
      return a1;
    }
    sub_2452CAE18(a1 + 112);
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 112) = *(_OWORD *)v6;
    return a1;
  }
  v8 = *v6;
  sub_245261C44(*v6, v7);
  *(_QWORD *)(a1 + 112) = v8;
  *(_QWORD *)(a1 + 120) = v7;
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for DeviceDescriptor.Versions.V10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(a2 + 112);
  v7 = *(_QWORD *)(a1 + 120);
  if (v7 >> 60 != 15)
  {
    v8 = *(_QWORD *)(a2 + 120);
    if (v8 >> 60 != 15)
    {
      v9 = *(_QWORD *)(a1 + 112);
      *(_QWORD *)(a1 + 112) = *v6;
      *(_QWORD *)(a1 + 120) = v8;
      sub_24525CB80(v9, v7);
      return a1;
    }
    sub_2452CAE18(a1 + 112);
  }
  *(_OWORD *)(a1 + 112) = *(_OWORD *)v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceDescriptor.Versions.V10(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceDescriptor.Versions.V10(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceDescriptor.Versions.V10()
{
  return &type metadata for DeviceDescriptor.Versions.V10;
}

uint64_t destroy for ZoneVersionAdvertisement.DeviceDescriptor(uint64_t a1)
{
  unint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(a1 + 120);
  if (v2 >> 60 != 15)
    sub_24525CB80(*(_QWORD *)(a1 + 112), v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ZoneVersionAdvertisement.DeviceDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  v6 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v6;
  v7 = (uint64_t *)(a2 + 112);
  v8 = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 112) = *(_OWORD *)v7;
  }
  else
  {
    v9 = *v7;
    sub_245261C44(*v7, v8);
    *(_QWORD *)(a1 + 112) = v9;
    *(_QWORD *)(a1 + 120) = v8;
  }
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v10;
  v11 = *(_QWORD *)(a2 + 144);
  v12 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = v11;
  *(_QWORD *)(a1 + 152) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ZoneVersionAdvertisement.DeviceDescriptor(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v4 = *(_OWORD *)(a2 + 56);
  v5 = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 56) = v4;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (uint64_t *)(a2 + 112);
  v7 = *(_QWORD *)(a2 + 120);
  if (*(_QWORD *)(a1 + 120) >> 60 != 15)
  {
    if (v7 >> 60 != 15)
    {
      v9 = *v6;
      sub_245261C44(*v6, *(_QWORD *)(a2 + 120));
      v10 = *(_QWORD *)(a1 + 112);
      v11 = *(_QWORD *)(a1 + 120);
      *(_QWORD *)(a1 + 112) = v9;
      *(_QWORD *)(a1 + 120) = v7;
      sub_24525CB80(v10, v11);
      goto LABEL_8;
    }
    sub_2452CAE18(a1 + 112);
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 112) = *(_OWORD *)v6;
    goto LABEL_8;
  }
  v8 = *v6;
  sub_245261C44(*v6, *(_QWORD *)(a2 + 120));
  *(_QWORD *)(a1 + 112) = v8;
  *(_QWORD *)(a1 + 120) = v7;
LABEL_8:
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ZoneVersionAdvertisement.DeviceDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(a2 + 112);
  v7 = *(_QWORD *)(a1 + 120);
  if (v7 >> 60 != 15)
  {
    v8 = *(_QWORD *)(a2 + 120);
    if (v8 >> 60 != 15)
    {
      v9 = *(_QWORD *)(a1 + 112);
      *(_QWORD *)(a1 + 112) = *v6;
      *(_QWORD *)(a1 + 120) = v8;
      sub_24525CB80(v9, v7);
      goto LABEL_6;
    }
    sub_2452CAE18(a1 + 112);
  }
  *(_OWORD *)(a1 + 112) = *(_OWORD *)v6;
LABEL_6:
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ZoneVersionAdvertisement.DeviceDescriptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 160))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ZoneVersionAdvertisement.DeviceDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 160) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceDescriptor.Versions.V12()
{
  return &type metadata for DeviceDescriptor.Versions.V12;
}

unint64_t sub_2452CBF08()
{
  unint64_t result;

  result = qword_2574523E0;
  if (!qword_2574523E0)
  {
    result = MEMORY[0x2495330B0](&unk_24538AEA4, &type metadata for DeviceDescriptor.Versions.V12.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574523E0);
  }
  return result;
}

unint64_t sub_2452CBF4C()
{
  unint64_t result;

  result = qword_25744F868;
  if (!qword_25744F868)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for ProtocolVersion, &type metadata for ProtocolVersion);
    atomic_store(result, (unint64_t *)&qword_25744F868);
  }
  return result;
}

unint64_t sub_2452CBF90()
{
  unint64_t result;

  result = qword_25744F740;
  if (!qword_25744F740)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for DeviceType, &type metadata for DeviceType);
    atomic_store(result, (unint64_t *)&qword_25744F740);
  }
  return result;
}

unint64_t sub_2452CBFD4()
{
  unint64_t result;

  result = qword_25744F8D8;
  if (!qword_25744F8D8)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for ScreenDescriptor, &type metadata for ScreenDescriptor);
    atomic_store(result, (unint64_t *)&qword_25744F8D8);
  }
  return result;
}

unint64_t sub_2452CC018()
{
  unint64_t result;

  result = qword_25744FCF0;
  if (!qword_25744FCF0)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for Zone.ID, &type metadata for Zone.ID);
    atomic_store(result, (unint64_t *)&qword_25744FCF0);
  }
  return result;
}

unint64_t sub_2452CC05C()
{
  unint64_t result;

  result = qword_25744FD18;
  if (!qword_25744FD18)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for Zone, &type metadata for Zone);
    atomic_store(result, (unint64_t *)&qword_25744FD18);
  }
  return result;
}

uint64_t sub_2452CC0A0(unint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25744FF10);
    v10[0] = a2();
    v10[1] = a3();
    result = MEMORY[0x2495330B0](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2452CC11C()
{
  unint64_t result;

  result = qword_25744F7B0;
  if (!qword_25744F7B0)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for MessageType.ID, &type metadata for MessageType.ID);
    atomic_store(result, (unint64_t *)&qword_25744F7B0);
  }
  return result;
}

unint64_t sub_2452CC160()
{
  unint64_t result;

  result = qword_25744F7C8;
  if (!qword_25744F7C8)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for MessageType, &type metadata for MessageType);
    atomic_store(result, (unint64_t *)&qword_25744F7C8);
  }
  return result;
}

unint64_t sub_2452CC1A4()
{
  unint64_t result;

  result = qword_25744F680;
  if (!qword_25744F680)
  {
    result = MEMORY[0x2495330B0](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_25744F680);
  }
  return result;
}

unint64_t sub_2452CC1E8()
{
  unint64_t result;

  result = qword_2574523F0;
  if (!qword_2574523F0)
  {
    result = MEMORY[0x2495330B0](&unk_24538AE54, &type metadata for DeviceDescriptor.Versions.V10.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574523F0);
  }
  return result;
}

unint64_t sub_2452CC22C()
{
  unint64_t result;

  result = qword_257452400;
  if (!qword_257452400)
  {
    result = MEMORY[0x2495330B0](&unk_24538AE04, &type metadata for DeviceDescriptor.Versions.V9.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452400);
  }
  return result;
}

unint64_t sub_2452CC270()
{
  unint64_t result;

  result = qword_257452410;
  if (!qword_257452410)
  {
    result = MEMORY[0x2495330B0](&unk_24538ADB4, &type metadata for DeviceDescriptor.Versions.V8.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452410);
  }
  return result;
}

unint64_t sub_2452CC2B4()
{
  unint64_t result;

  result = qword_257452420;
  if (!qword_257452420)
  {
    result = MEMORY[0x2495330B0](&unk_24538AD64, &type metadata for DeviceDescriptor.Versions.V0.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452420);
  }
  return result;
}

uint64_t sub_2452CC2F8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_2452CC334(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

_OWORD *sub_2452CC368(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_2452CC378()
{
  unint64_t result;

  result = qword_25744F878;
  if (!qword_25744F878)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for ProtocolVersion, &type metadata for ProtocolVersion);
    atomic_store(result, (unint64_t *)&qword_25744F878);
  }
  return result;
}

unint64_t sub_2452CC3BC()
{
  unint64_t result;

  result = qword_25744F768;
  if (!qword_25744F768)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for DeviceType, &type metadata for DeviceType);
    atomic_store(result, (unint64_t *)&qword_25744F768);
  }
  return result;
}

uint64_t sub_2452CC400(unint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25744FF30);
    v10[0] = a2();
    v10[1] = a3();
    result = MEMORY[0x2495330B0](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2452CC47C()
{
  unint64_t result;

  result = qword_25744FD08;
  if (!qword_25744FD08)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for Zone.ID, &type metadata for Zone.ID);
    atomic_store(result, (unint64_t *)&qword_25744FD08);
  }
  return result;
}

unint64_t sub_2452CC4C0()
{
  unint64_t result;

  result = qword_25744FD20;
  if (!qword_25744FD20)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for Zone, &type metadata for Zone);
    atomic_store(result, (unint64_t *)&qword_25744FD20);
  }
  return result;
}

unint64_t sub_2452CC504()
{
  unint64_t result;

  result = qword_25744F7C0;
  if (!qword_25744F7C0)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for MessageType.ID, &type metadata for MessageType.ID);
    atomic_store(result, (unint64_t *)&qword_25744F7C0);
  }
  return result;
}

unint64_t sub_2452CC548()
{
  unint64_t result;

  result = qword_25744F7D8;
  if (!qword_25744F7D8)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for MessageType, &type metadata for MessageType);
    atomic_store(result, (unint64_t *)&qword_25744F7D8);
  }
  return result;
}

unint64_t sub_2452CC58C()
{
  unint64_t result;

  result = qword_25744F8E8;
  if (!qword_25744F8E8)
  {
    result = MEMORY[0x2495330B0](&protocol conformance descriptor for ScreenDescriptor, &type metadata for ScreenDescriptor);
    atomic_store(result, (unint64_t *)&qword_25744F8E8);
  }
  return result;
}

unint64_t sub_2452CC5D0()
{
  unint64_t result;

  result = qword_25744F690;
  if (!qword_25744F690)
  {
    result = MEMORY[0x2495330B0](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_25744F690);
  }
  return result;
}

uint64_t sub_2452CC614(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 112);
  v3 = *(_QWORD *)(a1 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_245261C30(v2, v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceDescriptor.Versions.V0.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceDescriptor.Versions.V0.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2452CC758 + 4 * byte_24538A6D8[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2452CC78C + 4 * byte_24538A6D3[v4]))();
}

uint64_t sub_2452CC78C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452CC794(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2452CC79CLL);
  return result;
}

uint64_t sub_2452CC7A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2452CC7B0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2452CC7B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452CC7BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_2452CC7C8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DeviceDescriptor.Versions.V0.CodingKeys()
{
  return &type metadata for DeviceDescriptor.Versions.V0.CodingKeys;
}

uint64_t getEnumTagSinglePayload for DeviceType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceDescriptor.Versions.V8.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2452CC8BC + 4 * byte_24538A6E2[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2452CC8F0 + 4 * byte_24538A6DD[v4]))();
}

uint64_t sub_2452CC8F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452CC8F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2452CC900);
  return result;
}

uint64_t sub_2452CC90C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2452CC914);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2452CC918(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452CC920(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceDescriptor.Versions.V8.CodingKeys()
{
  return &type metadata for DeviceDescriptor.Versions.V8.CodingKeys;
}

uint64_t getEnumTagSinglePayload for DeviceDescriptor.Versions.V9.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceDescriptor.Versions.V9.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2452CCA18 + 4 * byte_24538A6EC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2452CCA4C + 4 * byte_24538A6E7[v4]))();
}

uint64_t sub_2452CCA4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452CCA54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2452CCA5CLL);
  return result;
}

uint64_t sub_2452CCA68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2452CCA70);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2452CCA74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452CCA7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceDescriptor.Versions.V9.CodingKeys()
{
  return &type metadata for DeviceDescriptor.Versions.V9.CodingKeys;
}

uint64_t getEnumTagSinglePayload for DeviceDescriptor.Versions.V10.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceDescriptor.Versions.V10.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_2452CCB74 + 4 * byte_24538A6F6[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_2452CCBA8 + 4 * byte_24538A6F1[v4]))();
}

uint64_t sub_2452CCBA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452CCBB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2452CCBB8);
  return result;
}

uint64_t sub_2452CCBC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2452CCBCCLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_2452CCBD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452CCBD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceDescriptor.Versions.V10.CodingKeys()
{
  return &type metadata for DeviceDescriptor.Versions.V10.CodingKeys;
}

ValueMetadata *type metadata accessor for DeviceDescriptor.Versions()
{
  return &type metadata for DeviceDescriptor.Versions;
}

uint64_t getEnumTagSinglePayload for DeviceDescriptor.Versions.V12.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceDescriptor.Versions.V12.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_2452CCCE0 + 4 * byte_24538A700[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_2452CCD14 + 4 * byte_24538A6FB[v4]))();
}

uint64_t sub_2452CCD14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452CCD1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2452CCD24);
  return result;
}

uint64_t sub_2452CCD30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2452CCD38);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_2452CCD3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452CCD44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceDescriptor.Versions.V12.CodingKeys()
{
  return &type metadata for DeviceDescriptor.Versions.V12.CodingKeys;
}

unint64_t sub_2452CCD64()
{
  unint64_t result;

  result = qword_257452530;
  if (!qword_257452530)
  {
    result = MEMORY[0x2495330B0](&unk_24538AA5C, &type metadata for DeviceDescriptor.Versions.V12.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452530);
  }
  return result;
}

unint64_t sub_2452CCDAC()
{
  unint64_t result;

  result = qword_257452538;
  if (!qword_257452538)
  {
    result = MEMORY[0x2495330B0](&unk_24538AB14, &type metadata for DeviceDescriptor.Versions.V10.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452538);
  }
  return result;
}

unint64_t sub_2452CCDF4()
{
  unint64_t result;

  result = qword_257452540;
  if (!qword_257452540)
  {
    result = MEMORY[0x2495330B0](&unk_24538ABCC, &type metadata for DeviceDescriptor.Versions.V9.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452540);
  }
  return result;
}

unint64_t sub_2452CCE3C()
{
  unint64_t result;

  result = qword_257452548;
  if (!qword_257452548)
  {
    result = MEMORY[0x2495330B0](&unk_24538AC84, &type metadata for DeviceDescriptor.Versions.V8.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452548);
  }
  return result;
}

unint64_t sub_2452CCE84()
{
  unint64_t result;

  result = qword_257452550;
  if (!qword_257452550)
  {
    result = MEMORY[0x2495330B0](&unk_24538AD3C, &type metadata for DeviceDescriptor.Versions.V0.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452550);
  }
  return result;
}

unint64_t sub_2452CCECC()
{
  unint64_t result;

  result = qword_257452558;
  if (!qword_257452558)
  {
    result = MEMORY[0x2495330B0](&unk_24538ACAC, &type metadata for DeviceDescriptor.Versions.V0.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452558);
  }
  return result;
}

unint64_t sub_2452CCF14()
{
  unint64_t result;

  result = qword_257452560;
  if (!qword_257452560)
  {
    result = MEMORY[0x2495330B0](&unk_24538ACD4, &type metadata for DeviceDescriptor.Versions.V0.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452560);
  }
  return result;
}

unint64_t sub_2452CCF5C()
{
  unint64_t result;

  result = qword_257452568;
  if (!qword_257452568)
  {
    result = MEMORY[0x2495330B0](&unk_24538ABF4, &type metadata for DeviceDescriptor.Versions.V8.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452568);
  }
  return result;
}

unint64_t sub_2452CCFA4()
{
  unint64_t result;

  result = qword_257452570;
  if (!qword_257452570)
  {
    result = MEMORY[0x2495330B0](&unk_24538AC1C, &type metadata for DeviceDescriptor.Versions.V8.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452570);
  }
  return result;
}

unint64_t sub_2452CCFEC()
{
  unint64_t result;

  result = qword_257452578;
  if (!qword_257452578)
  {
    result = MEMORY[0x2495330B0](&unk_24538AB3C, &type metadata for DeviceDescriptor.Versions.V9.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452578);
  }
  return result;
}

unint64_t sub_2452CD034()
{
  unint64_t result;

  result = qword_257452580;
  if (!qword_257452580)
  {
    result = MEMORY[0x2495330B0](&unk_24538AB64, &type metadata for DeviceDescriptor.Versions.V9.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452580);
  }
  return result;
}

unint64_t sub_2452CD07C()
{
  unint64_t result;

  result = qword_257452588;
  if (!qword_257452588)
  {
    result = MEMORY[0x2495330B0](&unk_24538AA84, &type metadata for DeviceDescriptor.Versions.V10.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452588);
  }
  return result;
}

unint64_t sub_2452CD0C4()
{
  unint64_t result;

  result = qword_257452590;
  if (!qword_257452590)
  {
    result = MEMORY[0x2495330B0](&unk_24538AAAC, &type metadata for DeviceDescriptor.Versions.V10.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452590);
  }
  return result;
}

unint64_t sub_2452CD10C()
{
  unint64_t result;

  result = qword_257452598;
  if (!qword_257452598)
  {
    result = MEMORY[0x2495330B0](&unk_24538A9CC, &type metadata for DeviceDescriptor.Versions.V12.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452598);
  }
  return result;
}

unint64_t sub_2452CD154()
{
  unint64_t result;

  result = qword_2574525A0;
  if (!qword_2574525A0)
  {
    result = MEMORY[0x2495330B0](&unk_24538A9F4, &type metadata for DeviceDescriptor.Versions.V12.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574525A0);
  }
  return result;
}

uint64_t sub_2452CD198(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6F636F746F7270 && a2 == 0xEF6E6F6973726556 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656372756F537369 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_245388274();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2452CD34C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6F636F746F7270 && a2 == 0xEF6E6F6973726556 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7954656369766564 && a2 == 0xEA00000000006570 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73656E6F7ALL && a2 == 0xE500000000000000 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x546567617373656DLL && a2 == 0xEC00000073657079)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_245388274();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_2452CD5E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6F636F746F7270 && a2 == 0xEF6E6F6973726556 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7954656369766564 && a2 == 0xEA00000000006570 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000245392C00 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73656E6F7ALL && a2 == 0xE500000000000000 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x546567617373656DLL && a2 == 0xEC00000073657079)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_245388274();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_2452CD8D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6F636F746F7270 && a2 == 0xEF6E6F6973726556 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7954656369766564 && a2 == 0xEA00000000006570 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000245392C00 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73656E6F7ALL && a2 == 0xE500000000000000 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x546567617373656DLL && a2 == 0xEC00000073657079 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746E656449736469 && a2 == 0xEF626F6C42797469)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_245388274();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_2452CDC54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6F636F746F7270 && a2 == 0xEF6E6F6973726556 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7954656369766564 && a2 == 0xEA00000000006570 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000245392C00 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73656E6F7ALL && a2 == 0xE500000000000000 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x546567617373656DLL && a2 == 0xEC00000073657079 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746E656449736469 && a2 == 0xEF626F6C42797469 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E6974656B72616DLL && a2 == 0xED0000656D614E67 || (sub_245388274() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x54746375646F7270 && a2 == 0xEB00000000657079)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_245388274();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_2452CE0E8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = v0;
  v2 = *(NSObject **)(v0 + 56);
  if (v2)
  {
    v3 = qword_25744FD98;
    swift_unknownObjectRetain();
    if (v3 != -1)
      swift_once();
    v4 = sub_245387818();
    __swift_project_value_buffer(v4, (uint64_t)qword_257462FC8);
    swift_unknownObjectRetain_n();
    v5 = sub_2453877F4();
    v6 = sub_245387D34();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v12 = v8;
      *(_DWORD *)v7 = 136446210;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452600);
      v9 = sub_245387B48();
      sub_2453816D8(v9, v10, &v12);
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v5, v6, "Canceling browser: %{public}s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v8, -1, -1);
      MEMORY[0x24953317C](v7, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    nw_browser_set_state_changed_handler(v2, 0);
    nw_browser_cancel(v2);
    swift_unknownObjectRelease();
    *(_QWORD *)(v1 + 56) = 0;
    swift_unknownObjectRelease();
  }
  swift_release();

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2452CE318()
{
  sub_2452CE0E8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NetworkBrowser()
{
  return objc_opt_self();
}

_QWORD *sub_2452CE358(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    v9 = a2[4];
    a1[2] = a2[2];
    a1[3] = v8;
    v10 = *(int *)(a3 + 28);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    a1[4] = v9;
    v13 = sub_2453876EC();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    v14(v11, v12, v13);
    *((_BYTE *)v4 + *(int *)(a3 + 32)) = *((_BYTE *)a2 + *(int *)(a3 + 32));
  }
  return v4;
}

uint64_t sub_2452CE430(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_release();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_2453876EC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_2452CE480(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  v8 = a2[4];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = v8;
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_2453876EC();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  v13(v10, v11, v12);
  *((_BYTE *)a1 + *(int *)(a3 + 32)) = *((_BYTE *)a2 + *(int *)(a3 + 32));
  return a1;
}

_QWORD *sub_2452CE52C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = a2[4];
  a1[3] = a2[3];
  a1[4] = v6;
  swift_retain();
  swift_release();
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2453876EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(a3 + 32)) = *((_BYTE *)a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_2452CE5DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2453876EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_BYTE *)(a1 + *(int *)(a3 + 32)) = *(_BYTE *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_2452CE664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2453876EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 32)) = *(_BYTE *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_2452CE6FC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452CE708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2453876EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_2452CE784()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452CE790(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2453876EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for NetworkBrowser.Monitor()
{
  uint64_t result;

  result = qword_2574525B0;
  if (!qword_2574525B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2452CE840()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2453876EC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2452CE8D8(uint64_t a1, uint64_t a2, void (*a3)(char *, char *, uint64_t), uint64_t a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  id v32;
  char isUniquelyReferenced_nonNull_native;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD aBlock[6];

  v6 = v5;
  v37 = a1;
  v38 = a3;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C0);
  MEMORY[0x24BDAC7A8](v10);
  v41 = (uint64_t)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for NetworkBrowser.Monitor();
  v40 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_245387740();
  v42 = *(_QWORD **)(v15 - 8);
  v16 = v42[8];
  v17 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v36 - v19;
  sub_245387734();
  v39 = v12;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2453876C8();
  *(_QWORD *)v14 = v37;
  *((_QWORD *)v14 + 1) = a2;
  *((double *)v14 + 2) = a5;
  *((_QWORD *)v14 + 3) = v38;
  *((_QWORD *)v14 + 4) = a4;
  v14[*(int *)(v12 + 32)] = 0;
  v37 = sub_245387704();
  v21 = swift_allocObject();
  swift_weakInit();
  v22 = v42;
  v38 = (void (*)(char *, char *, uint64_t))v42[2];
  v38(v18, v20, v15);
  v23 = (*((unsigned __int8 *)v22 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v22 + 80);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v21;
  ((void (*)(unint64_t, char *, uint64_t))v22[4])(v24 + v23, v18, v15);
  v25 = objc_allocWithZone(MEMORY[0x24BE0BE98]);
  swift_retain();
  v26 = (void *)sub_245387AF4();
  swift_bridgeObjectRelease();
  v27 = (void *)sub_245387AF4();
  aBlock[4] = sub_2452D4620;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2452D4660;
  aBlock[3] = &block_descriptor_3;
  v28 = _Block_copy(aBlock);
  v29 = objc_msgSend(v25, sel_initWithIdentifier_forReason_invalidationBlock_, v26, v27, v28);

  _Block_release(v28);
  swift_release();
  swift_release();
  v30 = v38;
  v38(v18, v20, v15);
  v31 = v41;
  sub_2452D46C8((uint64_t)v14, v41);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v31, 0, 1, v39);
  swift_beginAccess();
  sub_24531C264(v31, (uint64_t)v18);
  swift_endAccess();
  sub_2452CFFC8();
  v30(v18, v20, v15);
  swift_beginAccess();
  v32 = v29;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v43 = *(_QWORD *)(v6 + 80);
  *(_QWORD *)(v6 + 80) = 0x8000000000000000;
  sub_2452D4CDC((uint64_t)v32, (uint64_t)v18, isUniquelyReferenced_nonNull_native, &v43);
  *(_QWORD *)(v6 + 80) = v43;
  swift_bridgeObjectRelease();
  v34 = (void (*)(char *, uint64_t))v42[1];
  v34(v18, v15);
  swift_endAccess();
  sub_2452CF550();

  sub_2452D4E38((uint64_t)v14);
  return ((uint64_t (*)(char *, uint64_t))v34)(v20, v15);
}

uint64_t sub_2452CECC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v4 = sub_245387920();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_245387950();
  v21 = *(_QWORD *)(v8 - 8);
  v22 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_245387740();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v15 = result;
    v20[1] = *(_QWORD *)(result + 24);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v11);
    v16 = *(unsigned __int8 *)(v12 + 80);
    v20[0] = v5;
    v17 = (v16 + 24) & ~v16;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = v15;
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v18 + v17, (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
    aBlock[4] = sub_2452D5380;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24525DD34;
    aBlock[3] = &block_descriptor_24;
    v19 = _Block_copy(aBlock);
    swift_retain();
    sub_245387938();
    v23 = MEMORY[0x24BEE4AF8];
    sub_24525C6C4((unint64_t *)&unk_25744FF00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25744FFE0);
    sub_2452D53B0();
    sub_245387E3C();
    MEMORY[0x2495320E4](0, v10, v7, v19);
    _Block_release(v19);
    (*(void (**)(char *, uint64_t))(v20[0] + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v22);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_2452CEF44(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s *v4;

  v4 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 16) + 16);
  os_unfair_lock_lock(v4);
  sub_2452CEF98(a2, a1);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_2452CEF98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  void *v31;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40[5];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C0);
  MEMORY[0x24BDAC7A8](v5);
  v38 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_245387740();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v37 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v33 - v11;
  if (qword_25744FD98 != -1)
    swift_once();
  v13 = sub_245387818();
  __swift_project_value_buffer(v13, (uint64_t)qword_257462FC8);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v39 = a1;
  v36 = v14;
  v14(v12, a1, v7);
  v15 = sub_2453877F4();
  v16 = sub_245387D34();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v35 = v2;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc();
    v34 = a2;
    v20 = v19;
    v40[0] = v19;
    *(_DWORD *)v18 = 136446210;
    v33 = v18 + 4;
    sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v21 = sub_2453880F4();
    v40[4] = sub_2453816D8(v21, v22, v40);
    sub_245387E0C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    _os_log_impl(&dword_245256000, v15, v16, "Invalidating browser monitor: %{public}s", v18, 0xCu);
    swift_arrayDestroy();
    v23 = v20;
    a2 = v34;
    MEMORY[0x24953317C](v23, -1, -1);
    MEMORY[0x24953317C](v18, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }

  v24 = (uint64_t)v37;
  v25 = v39;
  v36(v37, v39, v7);
  v26 = type metadata accessor for NetworkBrowser.Monitor();
  v27 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v38, 1, 1, v26);
  swift_beginAccess();
  sub_24531C264(v27, v24);
  swift_endAccess();
  swift_beginAccess();
  v28 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(v28 + 16) && (v29 = sub_2452C2058(v25), (v30 & 1) != 0))
  {
    v31 = *(void **)(*(_QWORD *)(v28 + 56) + 8 * v29);
    swift_endAccess();
    objc_msgSend(v31, sel_invalidate);
  }
  else
  {
    swift_endAccess();
  }
  swift_beginAccess();
  sub_245327BB0(v25);
  swift_endAccess();
  swift_unknownObjectRelease();
  sub_2452CF330();
  return sub_2452CF550();
}

uint64_t sub_2452CF330()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t result;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v1 = v0;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(v0[2] + 16));
  result = swift_beginAccess();
  if (!*(_QWORD *)(v0[8] + 16))
  {
    v3 = v0[7];
    if (v3)
    {
      v4 = qword_25744FD98;
      swift_unknownObjectRetain();
      if (v4 != -1)
        swift_once();
      v5 = sub_245387818();
      __swift_project_value_buffer(v5, (uint64_t)qword_257462FC8);
      swift_unknownObjectRetain_n();
      v6 = sub_2453877F4();
      v7 = sub_245387D34();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        v9 = swift_slowAlloc();
        v12 = v9;
        *(_DWORD *)v8 = 136446210;
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452600);
        v10 = sub_245387B48();
        sub_2453816D8(v10, v11, &v12);
        sub_245387E0C();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_245256000, v6, v7, "Canceling browser: %{public}s", v8, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24953317C](v9, -1, -1);
        MEMORY[0x24953317C](v8, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      nw_browser_set_state_changed_handler(v3, 0);
      nw_browser_cancel(v3);
      swift_unknownObjectRelease();
      v1[7] = 0;
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_2452CF550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t result;
  int64_t v32;
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  void (*v44)(void);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  char *v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char v81;
  char *v82;
  double v83;
  double v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  int64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t *v107;
  char *v108;
  uint64_t v109;
  int64_t v110;
  void (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  _UNKNOWN **v115;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v98 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v111 = (void (*)(char *, char *, uint64_t))((char *)&v91 - v6);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v100 = (char *)&v91 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v106 = (char *)&v91 - v9;
  v105 = sub_2453876EC();
  v101 = *(_QWORD *)(v105 - 8);
  v10 = MEMORY[0x24BDAC7A8](v105);
  v12 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v94 = (char *)&v91 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v92 = (char *)&v91 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v99 = (char *)&v91 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v97 = (char *)&v91 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v102 = (char *)&v91 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v95 = (char *)&v91 - v23;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(*(_QWORD *)(v0 + 16) + 16));
  v24 = (uint64_t *)(v0 + 72);
  swift_beginAccess();
  v25 = *(_QWORD *)(v0 + 72);
  v93 = v12;
  if (v25)
  {
    swift_retain();
    sub_2452EE158();
    swift_release();
  }
  *(_QWORD *)(v1 + 72) = 0;
  swift_release();
  swift_beginAccess();
  v91 = v1;
  v26 = *(char **)(v1 + 64);
  swift_bridgeObjectRetain();
  sub_24538765C();
  v27 = *((_QWORD *)v26 + 8);
  v103 = v26 + 64;
  v28 = 1 << v26[32];
  v29 = -1;
  if (v28 < 64)
    v29 = ~(-1 << v28);
  v30 = v29 & v27;
  v104 = (unint64_t)(v28 + 63) >> 6;
  v108 = v26;
  result = swift_bridgeObjectRetain();
  v32 = 0;
  v107 = v24;
  v33 = (uint64_t)v100;
  v96 = v2;
  while (1)
  {
    if (v30)
    {
      v109 = (v30 - 1) & v30;
      v110 = v32;
      v34 = __clz(__rbit64(v30)) | (v32 << 6);
      goto LABEL_29;
    }
    v35 = v32 + 1;
    v36 = v105;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v35 >= v104)
      goto LABEL_32;
    v37 = *(_QWORD *)&v103[8 * v35];
    v38 = v32 + 1;
    if (v37)
      goto LABEL_28;
    v38 = v32 + 2;
    if (v32 + 2 >= v104)
      goto LABEL_32;
    v37 = *(_QWORD *)&v103[8 * v38];
    if (v37)
      goto LABEL_28;
    v38 = v32 + 3;
    if (v32 + 3 >= v104)
      goto LABEL_32;
    v37 = *(_QWORD *)&v103[8 * v38];
    if (v37)
      goto LABEL_28;
    v38 = v32 + 4;
    if (v32 + 4 >= v104)
      goto LABEL_32;
    v37 = *(_QWORD *)&v103[8 * v38];
    if (v37)
      goto LABEL_28;
    v38 = v32 + 5;
    if (v32 + 5 >= v104)
      goto LABEL_32;
    v37 = *(_QWORD *)&v103[8 * v38];
    if (v37)
      goto LABEL_28;
    v39 = v32 + 6;
    if (v32 + 6 >= v104)
    {
LABEL_32:
      swift_release();
      v33 = v101;
      v26 = v95;
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v95, v102, v36);
      swift_bridgeObjectRelease();
      if (qword_25744FD98 == -1)
      {
LABEL_33:
        v64 = sub_245387818();
        __swift_project_value_buffer(v64, (uint64_t)qword_257462FC8);
        v65 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
        v66 = v92;
        v65(v92, v26, v36);
        v67 = sub_2453877F4();
        v68 = sub_245387D34();
        if (os_log_type_enabled(v67, v68))
        {
          v69 = (uint8_t *)swift_slowAlloc();
          v70 = swift_slowAlloc();
          v111 = v65;
          v71 = v70;
          *(_QWORD *)&v113 = v70;
          *(_DWORD *)v69 = 136446210;
          sub_24525C6C4((unint64_t *)&qword_2574525E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
          v72 = sub_2453880F4();
          v112 = sub_2453816D8(v72, v73, (uint64_t *)&v113);
          sub_245387E0C();
          swift_bridgeObjectRelease();
          v74 = *(void (**)(char *, uint64_t))(v101 + 8);
          v74(v66, v36);
          _os_log_impl(&dword_245256000, v67, v68, "Browser invalidation timer will fire at %{public}s", v69, 0xCu);
          swift_arrayDestroy();
          v75 = v71;
          v65 = v111;
          MEMORY[0x24953317C](v75, -1, -1);
          MEMORY[0x24953317C](v69, -1, -1);
        }
        else
        {
          v74 = *(void (**)(char *, uint64_t))(v33 + 8);
          v74(v66, v36);
        }

        v76 = v36;
        v77 = v94;
        v78 = v93;
        v79 = v99;
        sub_24538765C();
        v80 = v95;
        v81 = sub_24538768C();
        v74(v79, v76);
        if ((v81 & 1) == 0)
          return ((uint64_t (*)(char *, uint64_t))v74)(v80, v76);
        sub_2453876C8();
        sub_24525C6C4((unint64_t *)&unk_2574525D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
        if ((sub_245387ADC() & 1) != 0)
          v82 = v80;
        else
          v82 = v77;
        v65(v78, v82, v76);
        sub_245387668();
        v84 = v83;
        v85 = type metadata accessor for BasicTimer();
        v86 = swift_allocObject();
        *(_QWORD *)(v86 + 16) = 0;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25440BFA0);
        v87 = swift_allocObject();
        *(_DWORD *)(v87 + 16) = 0;
        *(_QWORD *)(v86 + 24) = v87;
        v114 = v85;
        v115 = &protocol witness table for BasicTimer;
        *(_QWORD *)&v113 = v86;
        type metadata accessor for KeepAliveTimer();
        v88 = swift_allocObject();
        *(_QWORD *)(v88 + 56) = 0;
        sub_2452B7C5C(&v113, v88 + 16);
        *v24 = v88;
        swift_release();
        swift_beginAccess();
        if (*v24)
        {
          swift_endAccess();
          v89 = *(_QWORD *)(v91 + 24);
          v90 = swift_allocObject();
          swift_weakInit();
          swift_retain();
          swift_retain();
          sub_2452EDF3C(v89, (uint64_t)sub_2452D4E74, v90, fmax(v84, 1.0));
          swift_release();
          swift_release();
          v74(v78, v76);
          v74(v77, v76);
          v74(v80, v76);
          return swift_release();
        }
        else
        {
          v74(v78, v76);
          v74(v77, v76);
          v74(v80, v76);
          return swift_endAccess();
        }
      }
LABEL_45:
      swift_once();
      goto LABEL_33;
    }
    v37 = *(_QWORD *)&v103[8 * v39];
    if (!v37)
      break;
    v38 = v32 + 6;
LABEL_28:
    v109 = (v37 - 1) & v37;
    v110 = v38;
    v34 = __clz(__rbit64(v37)) + (v38 << 6);
LABEL_29:
    v40 = v108;
    v41 = *((_QWORD *)v108 + 6);
    v42 = sub_245387740();
    v43 = *(_QWORD **)(v42 - 8);
    v44 = (void (*)(void))v43[2];
    v45 = (uint64_t)v106;
    ((void (*)(char *, unint64_t, uint64_t))v44)(v106, v41 + v43[9] * v34, v42);
    v46 = *((_QWORD *)v40 + 7);
    v47 = type metadata accessor for NetworkBrowser.Monitor();
    sub_2452D46C8(v46 + *(_QWORD *)(*(_QWORD *)(v47 - 8) + 72) * v34, v45 + *(int *)(v2 + 48));
    sub_2452BC850(v45, v33, &qword_2574525C8);
    v48 = *(int *)(v2 + 48);
    v26 = (char *)v111;
    v49 = (uint64_t)v111 + v48;
    v50 = v33 + v48;
    ((void (*)(_QWORD, uint64_t, uint64_t))v44)(v111, v33, v42);
    sub_2452D46C8(v50, v49);
    LOBYTE(v45) = *(_BYTE *)(v49 + *(int *)(v47 + 32));
    sub_2452D4E38(v49);
    v51 = (void (*)(char *, uint64_t))v43[1];
    v51(v26, v42);
    if ((v45 & 1) == 0)
    {
      v52 = (uint64_t)v111 + *(int *)(v2 + 48);
      v44();
      sub_2452D46C8(v50, v52);
      v53 = v52 + *(int *)(v47 + 28);
      v54 = v2;
      v55 = v101;
      v56 = v99;
      v57 = v105;
      (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v99, v53, v105);
      sub_2452D4E38(v52);
      v58 = v98;
      v59 = (uint64_t)&v98[*(int *)(v54 + 48)];
      v60 = v33;
      v61 = v55;
      ((void (*)(char *, uint64_t, uint64_t))v44)(v98, v60, v42);
      sub_2452D46C8(v50, v59);
      sub_2452D4E38(v59);
      v62 = v97;
      sub_245387674();
      v63 = *(void (**)(char *, uint64_t))(v55 + 8);
      v63(v56, v57);
      v51(v58, v42);
      v51((char *)v111, v42);
      v26 = v102;
      if ((sub_24538768C() & 1) != 0)
      {
        v63(v26, v57);
        (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v26, v62, v57);
      }
      else
      {
        v63(v62, v57);
      }
      v2 = v96;
      v33 = (uint64_t)v100;
    }
    result = sub_245263F80(v33, &qword_2574525C8);
    v24 = v107;
    v30 = v109;
    v32 = v110;
  }
  while (1)
  {
    v38 = v39 + 1;
    if (__OFADD__(v39, 1))
      break;
    if (v38 >= v104)
      goto LABEL_32;
    v37 = *(_QWORD *)&v103[8 * v38];
    ++v39;
    if (v37)
      goto LABEL_28;
  }
  __break(1u);
  return result;
}

void sub_2452CFFC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  NSObject *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, unint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  _QWORD *v40;
  uint8_t *v41;
  NSObject *v42;
  void *v43;
  const char *v44;
  id v45;
  NSObject *application_service;
  int v47;
  NSObject *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  _QWORD *v64;
  uint64_t v65;
  int64_t v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  uint64_t v73;
  uint64_t aBlock;
  uint64_t v75;
  void *v76;
  void *v77;
  void *v78;
  uint64_t v79;

  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C8);
  v1 = MEMORY[0x24BDAC7A8](v71);
  v3 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v1);
  v6 = (char *)&v64 - v5;
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v64 - v7;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(v0[2] + 16));
  if (!v0[7])
  {
    v67 = v6;
    v68 = v8;
    v69 = v3;
    swift_beginAccess();
    v9 = v0[8];
    v10 = *(_QWORD *)(v9 + 64);
    v64 = v0;
    v65 = v9 + 64;
    v11 = 1 << *(_BYTE *)(v9 + 32);
    v12 = -1;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    v13 = v12 & v10;
    v66 = (unint64_t)(v11 + 63) >> 6;
    v70 = v9;
    swift_bridgeObjectRetain_n();
    v14 = 0;
    v15 = (uint64_t)v67;
    do
    {
      if (v13)
      {
        v16 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v72 = v14;
        v17 = v16 | ((_QWORD)v14 << 6);
      }
      else
      {
        v32 = (int64_t)&v14->isa + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
          goto LABEL_42;
        }
        if (v32 >= v66)
          goto LABEL_34;
        v33 = *(_QWORD *)(v65 + 8 * v32);
        v34 = (int64_t)&v14->isa + 1;
        if (!v33)
        {
          v34 = (int64_t)&v14->isa + 2;
          if ((uint64_t)&v14->isa + 2 >= v66)
            goto LABEL_34;
          v33 = *(_QWORD *)(v65 + 8 * v34);
          if (!v33)
          {
            v34 = (int64_t)&v14->isa + 3;
            if ((uint64_t)&v14->isa + 3 >= v66)
              goto LABEL_34;
            v33 = *(_QWORD *)(v65 + 8 * v34);
            if (!v33)
            {
              v34 = (int64_t)&v14->isa + 4;
              if ((uint64_t)&v14->isa + 4 >= v66)
                goto LABEL_34;
              v33 = *(_QWORD *)(v65 + 8 * v34);
              if (!v33)
              {
                v34 = (int64_t)&v14->isa + 5;
                if ((uint64_t)&v14->isa + 5 >= v66)
                  goto LABEL_34;
                v33 = *(_QWORD *)(v65 + 8 * v34);
                if (!v33)
                {
                  v35 = (uint64_t)&v14->isa + 6;
                  if ((uint64_t)&v14->isa + 6 >= v66)
                  {
LABEL_34:
                    swift_release();
                    swift_bridgeObjectRelease();
                    return;
                  }
                  v33 = *(_QWORD *)(v65 + 8 * v35);
                  if (!v33)
                  {
                    while (1)
                    {
                      v34 = v35 + 1;
                      if (__OFADD__(v35, 1))
                        break;
                      if (v34 >= v66)
                        goto LABEL_34;
                      v33 = *(_QWORD *)(v65 + 8 * v34);
                      ++v35;
                      if (v33)
                        goto LABEL_25;
                    }
                    __break(1u);
                    goto LABEL_44;
                  }
                  v34 = (int64_t)&v14->isa + 6;
                }
              }
            }
          }
        }
LABEL_25:
        v13 = (v33 - 1) & v33;
        v72 = v34;
        v17 = __clz(__rbit64(v33)) + (v34 << 6);
      }
      v18 = v70;
      v19 = *(_QWORD *)(v70 + 48);
      v20 = sub_245387740();
      v21 = *(_QWORD *)(v20 - 8);
      v22 = *(void (**)(char *, unint64_t, uint64_t))(v21 + 16);
      v23 = (uint64_t)v68;
      v22(v68, v19 + *(_QWORD *)(v21 + 72) * v17, v20);
      v24 = *(_QWORD *)(v18 + 56);
      v25 = type metadata accessor for NetworkBrowser.Monitor();
      v26 = v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v17;
      v27 = v71;
      sub_2452D46C8(v26, v23 + *(int *)(v71 + 48));
      sub_2452BC850(v23, v15, &qword_2574525C8);
      v28 = *(int *)(v27 + 48);
      v29 = v69;
      v30 = (uint64_t)&v69[v28];
      v31 = v15 + v28;
      v22(v69, v15, v20);
      sub_2452D46C8(v31, v30);
      LOBYTE(v31) = *(_BYTE *)(v30 + *(int *)(v25 + 32));
      sub_2452D4E38(v30);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v29, v20);
      sub_245263F80(v15, &qword_2574525C8);
      v14 = v72;
    }
    while ((v31 & 1) != 0);
    swift_release();
    swift_bridgeObjectRelease();
    if (qword_25744FD98 == -1)
      goto LABEL_27;
LABEL_42:
    swift_once();
LABEL_27:
    v36 = sub_245387818();
    __swift_project_value_buffer(v36, (uint64_t)qword_257462FC8);
    v37 = sub_2453877F4();
    v38 = sub_245387D34();
    v39 = os_log_type_enabled(v37, v38);
    v40 = v64;
    if (v39)
    {
      v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v41 = 0;
      _os_log_impl(&dword_245256000, v37, v38, "Starting browser", v41, 2u);
      MEMORY[0x24953317C](v41, -1, -1);
    }

    v42 = sub_2452D514C();
    v43 = (void *)sub_245387AF4();
    v44 = (const char *)objc_msgSend(v43, sel_UTF8String);
    v45 = v43;
    if (!v44)
    {
LABEL_44:
      __break(1u);
      return;
    }
    application_service = nw_browse_descriptor_create_application_service(v44);
    nw_browse_descriptor_set_browse_scope();
    v47 = *((unsigned __int8 *)v40 + 48);
    if (v47 == 5 || v47 == 2 || v47 == 1)
      nw_browse_descriptor_set_device_types();
    v48 = nw_browser_create(application_service, v42);
    swift_unknownObjectRetain_n();
    v49 = sub_2453877F4();
    v50 = sub_245387D34();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      v52 = swift_slowAlloc();
      v72 = v42;
      v73 = (uint64_t)v48;
      v53 = v52;
      aBlock = v52;
      *(_DWORD *)v51 = 136446210;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452600);
      v54 = sub_245387B48();
      v73 = sub_2453816D8(v54, v55, &aBlock);
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v49, v50, "Browser created %{public}s", v51, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v53, -1, -1);
      MEMORY[0x24953317C](v51, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    v56 = swift_allocObject();
    v57 = v64;
    swift_weakInit();
    v58 = swift_allocObject();
    *(_QWORD *)(v58 + 16) = v56;
    *(_QWORD *)(v58 + 24) = v48;
    v78 = sub_2452D5248;
    v79 = v58;
    v59 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v75 = 1107296256;
    v76 = sub_2452D2CB0;
    v77 = &block_descriptor_11;
    v60 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    swift_release();
    nw_browser_set_state_changed_handler(v48, v60);
    _Block_release(v60);
    v61 = swift_allocObject();
    swift_weakInit();
    v62 = swift_allocObject();
    *(_QWORD *)(v62 + 16) = v61;
    *(_QWORD *)(v62 + 24) = v48;
    v78 = sub_2452D5280;
    v79 = v62;
    aBlock = v59;
    v75 = 1107296256;
    v76 = sub_2452D4510;
    v77 = &block_descriptor_18;
    v63 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    swift_release();
    nw_browser_set_browse_results_changed_handler(v48, v63);
    _Block_release(v63);
    nw_browser_set_queue(v48, (dispatch_queue_t)v57[3]);
    nw_browser_start(v48);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v57[7] = v48;
    swift_unknownObjectRelease();
  }
}

uint64_t sub_2452D0710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(void **, uint64_t);
  void *v22;
  _BYTE *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  _QWORD v39[2];
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  int64_t v47;
  void *v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;

  v0 = sub_245387740();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for NetworkBrowser.Monitor();
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525E8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v39 - v11;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v14 = result;
  v45 = v0;
  v46 = v3;
  v53 = MEMORY[0x24BEE4B00];
  v54 = MEMORY[0x24BEE4B00];
  v15 = *(os_unfair_lock_s **)(result + 16);
  swift_retain();
  os_unfair_lock_lock(v15 + 4);
  v39[1] = v14;
  sub_2452D0BDC(v14, &v53, &v54);
  os_unfair_lock_unlock(v15 + 4);
  swift_release();
  v16 = *(_QWORD *)(v53 + 64);
  v40 = v53 + 64;
  v17 = 1 << *(_BYTE *)(v53 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v41 = (unint64_t)(v17 + 63) >> 6;
  v39[0] = v41 - 1;
  v43 = v53;
  result = swift_bridgeObjectRetain();
  v47 = 0;
  v44 = v1;
  while (1)
  {
    if (v19)
    {
      v24 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v25 = (uint64_t)v46;
      v26 = v24 | (v47 << 6);
      v27 = v45;
LABEL_9:
      v28 = v43;
      (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v10, *(_QWORD *)(v43 + 48) + *(_QWORD *)(v1 + 72) * v26, v27);
      v29 = *(_QWORD *)(v28 + 56) + *(_QWORD *)(v42 + 72) * v26;
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C8);
      sub_2452D46C8(v29, (uint64_t)&v10[*(int *)(v30 + 48)]);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v10, 0, 1, v30);
      goto LABEL_28;
    }
    v25 = (uint64_t)v46;
    v31 = v47 + 1;
    if (__OFADD__(v47, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    v27 = v45;
    if (v31 < v41)
    {
      v32 = *(_QWORD *)(v40 + 8 * v31);
      if (v32)
        goto LABEL_13;
      v33 = v47 + 2;
      ++v47;
      if (v31 + 1 < v41)
      {
        v32 = *(_QWORD *)(v40 + 8 * v33);
        if (v32)
          goto LABEL_16;
        v47 = v31 + 1;
        if (v31 + 2 < v41)
        {
          v32 = *(_QWORD *)(v40 + 8 * (v31 + 2));
          if (v32)
          {
            v31 += 2;
            goto LABEL_13;
          }
          v33 = v31 + 3;
          v47 = v31 + 2;
          if (v31 + 3 < v41)
            break;
        }
      }
    }
LABEL_27:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v10, 1, 1, v34);
    v19 = 0;
LABEL_28:
    sub_2452BC850((uint64_t)v10, (uint64_t)v12, &qword_2574525E8);
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v12, 1, v35) == 1)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    sub_2452D4E7C((uint64_t)&v12[*(int *)(v35 + 48)], (uint64_t)v6);
    v1 = v44;
    (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v25, v12, v27);
    v36 = v54;
    if (*(_QWORD *)(v54 + 16) && (v37 = sub_2452C2058(v25), (v38 & 1) != 0))
    {
      v20 = *(_QWORD *)(*(_QWORD *)(v36 + 56) + 8 * v37);
      swift_unknownObjectRetain();
    }
    else
    {
      v20 = 0;
    }
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v25, v27);
    v21 = (void (*)(void **, uint64_t))*((_QWORD *)v6 + 3);
    sub_2452D4EC0();
    v22 = (void *)swift_allocError();
    *v23 = 1;
    v48 = v22;
    v49 = 0u;
    v50 = 0u;
    v51 = 0;
    v52 = 1;
    v21(&v48, v20);
    swift_unknownObjectRelease();

    result = sub_2452D4E38((uint64_t)v6);
  }
  v32 = *(_QWORD *)(v40 + 8 * v33);
  if (v32)
  {
LABEL_16:
    v31 = v33;
LABEL_13:
    v19 = (v32 - 1) & v32;
    v26 = __clz(__rbit64(v32)) + (v31 << 6);
    v47 = v31;
    goto LABEL_9;
  }
  while (1)
  {
    v31 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v31 >= v41)
    {
      v47 = v39[0];
      goto LABEL_27;
    }
    v32 = *(_QWORD *)(v40 + 8 * v31);
    ++v33;
    if (v32)
      goto LABEL_13;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_2452D0BDC(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t result;
  unint64_t v37;
  __int128 v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  void (*v65)(char *, char *, uint64_t);
  void (*v66)(_QWORD *);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t *v79;
  char v80;
  uint64_t ObjectType;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  uint64_t *v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  char *v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t *v106;
  void (*v107)(char *, char *, uint64_t);
  int64_t v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  unint64_t v121;
  uint64_t v122;
  char *v123;

  v106 = a3;
  v105 = a2;
  v119 = type metadata accessor for NetworkBrowser.Monitor();
  v117 = *(_QWORD *)(v119 - 8);
  v4 = MEMORY[0x24BDAC7A8](v119);
  v104 = (uint64_t)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v92 - v6;
  v8 = sub_245387740();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v114 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v103 = (char *)&v92 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v109 = (char *)&v92 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v92 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v92 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525E8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v116 = (uint64_t)&v92 - v25;
  v26 = sub_2453876EC();
  v112 = *(_QWORD *)(v26 - 8);
  v113 = v26;
  v27 = MEMORY[0x24BDAC7A8](v26);
  v110 = (char *)&v92 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v111 = (char *)&v92 - v29;
  sub_2453876C8();
  v101 = a1 + 64;
  swift_beginAccess();
  v30 = *(_QWORD *)(a1 + 64);
  v31 = *(_QWORD *)(v30 + 64);
  v99 = v30 + 64;
  v32 = 1 << *(_BYTE *)(v30 + 32);
  v33 = -1;
  if (v32 < 64)
    v33 = ~(-1 << v32);
  v34 = v33 & v31;
  v95 = a1;
  v100 = (uint64_t *)(a1 + 80);
  v35 = (unint64_t)(v32 + 63) >> 6;
  v92 = v35 - 1;
  result = swift_bridgeObjectRetain();
  v37 = 0;
  v108 = v35;
  v94 = v35 - 5;
  v115 = result;
  v93 = result + 104;
  *(_QWORD *)&v38 = 136446210;
  v97 = v38;
  v96 = MEMORY[0x24BEE4AD8] + 8;
  v120 = v7;
  v118 = v9;
  v102 = v18;
  v123 = v24;
  v98 = v20;
  while (1)
  {
    if (v34)
    {
      v40 = v18;
      v41 = __clz(__rbit64(v34));
      v34 &= v34 - 1;
      v121 = v37;
      v42 = v41 | (v37 << 6);
      goto LABEL_8;
    }
    v47 = v37 + 1;
    if (__OFADD__(v37, 1))
      break;
    v40 = v18;
    if (v47 >= v108)
    {
      v49 = v37;
    }
    else
    {
      v48 = *(_QWORD *)(v99 + 8 * v47);
      if (v48)
        goto LABEL_12;
      v49 = v37 + 1;
      if ((uint64_t)(v37 + 2) < v108)
      {
        v48 = *(_QWORD *)(v99 + 8 * (v37 + 2));
        if (v48)
        {
          v47 = v37 + 2;
          goto LABEL_12;
        }
        v49 = v37 + 2;
        if ((uint64_t)(v37 + 3) < v108)
        {
          v48 = *(_QWORD *)(v99 + 8 * (v37 + 3));
          if (v48)
          {
            v47 = v37 + 3;
LABEL_12:
            v34 = (v48 - 1) & v48;
            v42 = __clz(__rbit64(v48)) + (v47 << 6);
            v121 = v47;
LABEL_8:
            v43 = v115;
            (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v24, *(_QWORD *)(v115 + 48) + *(_QWORD *)(v9 + 72) * v42, v8);
            v44 = *(_QWORD *)(v43 + 56) + *(_QWORD *)(v117 + 72) * v42;
            v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C8);
            v46 = v44;
            v24 = v123;
            sub_2452D46C8(v46, (uint64_t)&v123[*(int *)(v45 + 48)]);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v24, 0, 1, v45);
            v7 = v120;
            goto LABEL_15;
          }
          v47 = v37 + 4;
          v49 = v37 + 3;
          if ((uint64_t)(v37 + 4) < v108)
          {
            v48 = *(_QWORD *)(v99 + 8 * v47);
            if (v48)
              goto LABEL_12;
            while (v94 != v37)
            {
              v48 = *(_QWORD *)(v93 + 8 * v37++);
              if (v48)
              {
                v47 = v37 + 4;
                goto LABEL_12;
              }
            }
            v49 = v92;
          }
        }
      }
    }
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v24, 1, 1, v50);
    v34 = 0;
    v121 = v49;
LABEL_15:
    v51 = v116;
    sub_2452BC850((uint64_t)v24, v116, &qword_2574525E8);
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v51, 1, v52) == 1)
    {
      swift_release();
      v91 = sub_2452CF330();
      sub_2452CF550(v91);
      return (*(uint64_t (**)(char *, uint64_t))(v112 + 8))(v111, v113);
    }
    v53 = v51 + *(int *)(v52 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v20, v51, v8);
    sub_2452D4E7C(v53, (uint64_t)v7);
    if ((v7[*(int *)(v119 + 32)] & 1) != 0)
    {
      sub_2452D4E38((uint64_t)v7);
      v39 = *(void (**)(char *, uint64_t))(v9 + 8);
      v24 = v123;
      v18 = v40;
    }
    else
    {
      v54 = v110;
      sub_245387674();
      v55 = sub_24538768C();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v54, v113);
      v18 = v40;
      if ((v55 & 1) != 0)
      {
        if (qword_25744FD98 != -1)
          swift_once();
        v56 = sub_245387818();
        __swift_project_value_buffer(v56, (uint64_t)qword_257462FC8);
        v107 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
        v107(v40, v20, v8);
        v57 = sub_2453877F4();
        v58 = sub_245387D1C();
        if (os_log_type_enabled(v57, v58))
        {
          v59 = v18;
          v60 = swift_slowAlloc();
          v61 = swift_slowAlloc();
          v122 = v61;
          *(_DWORD *)v60 = v97;
          sub_24525C6C4(&qword_25744F6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v62 = sub_2453880F4();
          *(_QWORD *)(v60 + 4) = sub_2453816D8(v62, v63, &v122);
          swift_bridgeObjectRelease();
          v39 = *(void (**)(char *, uint64_t))(v9 + 8);
          v64 = v59;
          v20 = v98;
          v39(v64, v8);
          _os_log_impl(&dword_245256000, v57, v58, "Browser monitor has failed: %{public}s", (uint8_t *)v60, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24953317C](v61, -1, -1);
          MEMORY[0x24953317C](v60, -1, -1);
        }
        else
        {
          v39 = *(void (**)(char *, uint64_t))(v9 + 8);
          v39(v18, v8);
        }

        v65 = v107;
        v107(v109, v20, v8);
        swift_beginAccess();
        v66 = sub_2452D165C(&v122);
        v68 = v67;
        v69 = v119;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v117 + 48))(v67, 1, v119))
          *(_BYTE *)(v68 + *(int *)(v69 + 32)) = 1;
        ((void (*)(uint64_t *, _QWORD))v66)(&v122, 0);
        swift_endAccess();
        v39(v109, v8);
        v70 = (uint64_t)v103;
        v65(v103, v20, v8);
        v71 = v104;
        sub_2452D46C8((uint64_t)v120, v104);
        v72 = v105;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v122 = *v72;
        *v72 = 0x8000000000000000;
        sub_245328A24(v71, v70, isUniquelyReferenced_nonNull_native);
        *v72 = v122;
        swift_bridgeObjectRelease();
        v39((char *)v70, v8);
        v65(v114, v20, v8);
        v74 = v100;
        swift_beginAccess();
        v75 = *v74;
        if (*(_QWORD *)(*v74 + 16) && (v76 = sub_2452C2058((uint64_t)v20), (v77 & 1) != 0))
        {
          v78 = *(_QWORD *)(*(_QWORD *)(v75 + 56) + 8 * v76);
          swift_endAccess();
          swift_unknownObjectRetain();
          v79 = v106;
          v80 = swift_isUniquelyReferenced_nonNull_native();
          v122 = *v79;
          *v79 = 0x8000000000000000;
          ObjectType = swift_getObjectType();
          v82 = v78;
          v83 = (uint64_t)v114;
          sub_2452D4F04(v82, (uint64_t)v114, v80, &v122, ObjectType);
          *v79 = v122;
          swift_bridgeObjectRelease();
          v39((char *)v83, v8);
          v7 = v120;
          v18 = v102;
        }
        else
        {
          swift_endAccess();
          swift_bridgeObjectRetain();
          v84 = sub_2452C2058((uint64_t)v114);
          v86 = v85;
          swift_bridgeObjectRelease();
          if ((v86 & 1) != 0)
          {
            v87 = v106;
            v88 = swift_isUniquelyReferenced_nonNull_native();
            v89 = *v87;
            v122 = *v87;
            *v87 = 0x8000000000000000;
            if ((v88 & 1) == 0)
            {
              sub_2452C8F48();
              v89 = v122;
            }
            v39((char *)(*(_QWORD *)(v89 + 48) + *(_QWORD *)(v118 + 72) * v84), v8);
            v90 = v122;
            sub_24537282C(v84, v122);
            *v106 = v90;
            swift_bridgeObjectRelease();
          }
          v18 = v102;
          v39(v114, v8);
          swift_unknownObjectRelease();
          v7 = v120;
        }
        sub_2452D4E38((uint64_t)v7);
      }
      else
      {
        sub_2452D4E38((uint64_t)v7);
        v39 = *(void (**)(char *, uint64_t))(v9 + 8);
      }
      v24 = v123;
    }
    result = ((uint64_t (*)(char *, uint64_t))v39)(v20, v8);
    v9 = v118;
    v37 = v121;
  }
  __break(1u);
  return result;
}

void (*sub_2452D165C(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = malloc(0x40uLL);
  *a1 = v2;
  v3 = sub_245387740();
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v5 = malloc(*(_QWORD *)(v4 + 64));
  v2[6] = v5;
  (*(void (**)(void))(v4 + 16))();
  v2[7] = sub_2452D47D0(v2, (uint64_t)v5);
  return sub_2452D16EC;
}

void sub_2452D16EC(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (void *)*a1;
  v2 = *(void **)(*a1 + 48);
  v3 = *(_QWORD *)(*a1 + 32);
  v4 = *(_QWORD *)(*a1 + 40);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);
  free(v1);
}

void sub_2452D1740(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint8_t *v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t Strong;
  _BYTE *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  const char *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  os_unfair_lock_s *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  unint64_t v67;
  unint64_t v68;
  uint8_t *v69;
  NSObject *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  int64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  uint8_t *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  _BYTE v97[32];
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;

  LODWORD(v90) = a1;
  v5 = (uint8_t *)sub_245387740();
  v6 = *((_QWORD *)v5 - 1);
  MEMORY[0x24BDAC7A8](v5);
  v95 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NetworkBrowser.Monitor();
  v91 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525E8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v94 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v84 - v14;
  v16 = sub_2453879D4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (uint64_t *)((char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v21 = (_BYTE *)Strong;
    v22 = *(void **)(Strong + 24);
    *v19 = v22;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x24BEE5610], v16);
    v23 = v22;
    LOBYTE(v22) = sub_2453879F8();
    (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
    if ((v22 & 1) != 0)
    {
      if (qword_25744FD98 == -1)
      {
LABEL_4:
        v24 = sub_245387818();
        v25 = __swift_project_value_buffer(v24, (uint64_t)qword_257462FC8);
        swift_unknownObjectRetain_n();
        v26 = sub_2453877F4();
        v27 = sub_245387D34();
        v28 = os_log_type_enabled(v26, v27);
        v92 = v6;
        v93 = v5;
        if (v28)
        {
          v5 = (uint8_t *)swift_slowAlloc();
          v29 = swift_slowAlloc();
          v89 = (char *)v25;
          v30 = v29;
          v96 = v29;
          *(_DWORD *)v5 = 136446210;
          v88 = (int64_t)(v5 + 4);
          v101 = a4;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452600);
          v31 = sub_245387B48();
          v101 = sub_2453816D8(v31, v32, &v96);
          sub_245387E0C();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_245256000, v26, v27, "%{public}s; Browser state changed", v5, 0xCu);
          swift_arrayDestroy();
          v25 = (uint64_t)v89;
          MEMORY[0x24953317C](v30, -1, -1);
          MEMORY[0x24953317C](v5, -1, -1);

        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        switch((int)v90)
        {
          case 1:
            swift_unknownObjectRetain_n();
            v33 = sub_2453877F4();
            v34 = sub_245387D34();
            if (os_log_type_enabled(v33, v34))
            {
              v35 = (uint8_t *)swift_slowAlloc();
              v36 = swift_slowAlloc();
              v96 = v36;
              *(_DWORD *)v35 = 136446210;
              v101 = a4;
              swift_unknownObjectRetain();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452600);
              v37 = sub_245387B48();
              v101 = sub_2453816D8(v37, v38, &v96);
              sub_245387E0C();
              swift_unknownObjectRelease_n();
              swift_bridgeObjectRelease();
              v39 = "%{public}s; Browser state: ready";
              goto LABEL_16;
            }

            swift_release();
            swift_unknownObjectRelease_n();
            return;
          case 2:
            v86 = v21;
            swift_unknownObjectRetain_n();
            v40 = sub_2453877F4();
            v41 = sub_245387D1C();
            if (os_log_type_enabled(v40, v41))
            {
              v42 = a4;
              v43 = (uint8_t *)swift_slowAlloc();
              v44 = swift_slowAlloc();
              v89 = (char *)v25;
              v45 = v44;
              v96 = v44;
              *(_DWORD *)v43 = 136446210;
              v90 = (uint64_t)(v43 + 4);
              v101 = v42;
              swift_unknownObjectRetain();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452600);
              v46 = sub_245387B48();
              v5 = (uint8_t *)v47;
              v101 = sub_2453816D8(v46, v47, &v96);
              sub_245387E0C();
              swift_unknownObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_245256000, v40, v41, "%{public}s; Browser state: failed", v43, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x24953317C](v45, -1, -1);
              v48 = v43;
              a4 = v42;
              MEMORY[0x24953317C](v48, -1, -1);

            }
            else
            {

              swift_unknownObjectRelease_n();
            }
            swift_unknownObjectRetain_n();
            v53 = sub_2453877F4();
            v6 = a4;
            v54 = sub_245387D34();
            if (os_log_type_enabled(v53, v54))
            {
              v55 = (uint8_t *)swift_slowAlloc();
              v56 = swift_slowAlloc();
              v96 = v56;
              *(_DWORD *)v55 = 136446210;
              v5 = v55 + 12;
              v90 = (uint64_t)(v55 + 4);
              v101 = (uint64_t)v6;
              swift_unknownObjectRetain();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452600);
              v57 = sub_245387B48();
              v101 = sub_2453816D8(v57, v58, &v96);
              sub_245387E0C();
              swift_unknownObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_245256000, v53, v54, "Canceling browser: %{public}s", v55, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x24953317C](v56, -1, -1);
              MEMORY[0x24953317C](v55, -1, -1);

            }
            else
            {

              swift_unknownObjectRelease_n();
            }
            v59 = (uint64_t)v86;
            nw_browser_set_state_changed_handler(v6, 0);
            nw_browser_cancel(v6);
            *(_QWORD *)(v59 + 56) = 0;
            swift_unknownObjectRelease();
            v100 = MEMORY[0x24BEE4B00];
            v101 = MEMORY[0x24BEE4B00];
            v60 = *(os_unfair_lock_s **)(v59 + 16);
            swift_retain();
            os_unfair_lock_lock(v60 + 4);
            sub_2452D2464(v59, &v101, &v100);
            os_unfair_lock_unlock(v60 + 4);
            swift_release();
            v61 = *(_QWORD *)(v100 + 64);
            v87 = v100 + 64;
            v62 = 1 << *(_BYTE *)(v100 + 32);
            v63 = -1;
            if (v62 < 64)
              v63 = ~(-1 << v62);
            v64 = v63 & v61;
            v21 = v97;
            v88 = (unint64_t)(v62 + 63) >> 6;
            v85 = v88 - 1;
            v90 = v100;
            swift_bridgeObjectRetain();
            a4 = 0;
            v89 = v10;
            break;
          case 3:
            swift_unknownObjectRetain_n();
            v33 = sub_2453877F4();
            v34 = sub_245387D1C();
            if (!os_log_type_enabled(v33, v34))
              goto LABEL_17;
            v35 = (uint8_t *)swift_slowAlloc();
            v36 = swift_slowAlloc();
            v96 = v36;
            *(_DWORD *)v35 = 136446210;
            v101 = a4;
            swift_unknownObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452600);
            v49 = sub_245387B48();
            v101 = sub_2453816D8(v49, v50, &v96);
            sub_245387E0C();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            v39 = "%{public}s; Browser state: cancelled";
            goto LABEL_16;
          case 4:
            swift_unknownObjectRetain_n();
            v33 = sub_2453877F4();
            v34 = sub_245387D34();
            if (os_log_type_enabled(v33, v34))
            {
              v35 = (uint8_t *)swift_slowAlloc();
              v36 = swift_slowAlloc();
              v96 = v36;
              *(_DWORD *)v35 = 136446210;
              v101 = a4;
              swift_unknownObjectRetain();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452600);
              v51 = sub_245387B48();
              v101 = sub_2453816D8(v51, v52, &v96);
              sub_245387E0C();
              swift_unknownObjectRelease_n();
              swift_bridgeObjectRelease();
              v39 = "%{public}s; Browser state: waiting";
LABEL_16:
              _os_log_impl(&dword_245256000, v33, v34, v39, v35, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x24953317C](v36, -1, -1);
              MEMORY[0x24953317C](v35, -1, -1);
              swift_release();

            }
            else
            {
LABEL_17:

              swift_unknownObjectRelease_n();
LABEL_18:
              swift_release();
            }
            return;
          default:
            goto LABEL_18;
        }
        while (!v64)
        {
          v75 = a4 + 1;
          if (__OFADD__(a4, 1))
          {
            __break(1u);
            goto LABEL_57;
          }
          v70 = v92;
          v69 = v93;
          v72 = (uint64_t)v94;
          if (v75 < v88)
          {
            v76 = *(_QWORD *)(v87 + 8 * v75);
            if (v76)
              goto LABEL_35;
            v77 = a4 + 2;
            ++a4;
            if (v75 + 1 < v88)
            {
              v76 = *(_QWORD *)(v87 + 8 * v77);
              if (v76)
                goto LABEL_38;
              a4 = v75 + 1;
              if (v75 + 2 < v88)
              {
                v76 = *(_QWORD *)(v87 + 8 * (v75 + 2));
                if (v76)
                {
                  v75 += 2;
LABEL_35:
                  v64 = (v76 - 1) & v76;
                  v68 = __clz(__rbit64(v76)) + (v75 << 6);
                  a4 = v75;
LABEL_31:
                  v71 = v90;
                  v72 = (uint64_t)v94;
                  ((void (*)(char *, unint64_t, uint8_t *))v70[2].isa)(v94, *(_QWORD *)(v90 + 48) + (unint64_t)v70[9].isa * v68, v69);
                  v73 = *(_QWORD *)(v71 + 56) + *(_QWORD *)(v91 + 72) * v68;
                  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C8);
                  sub_2452D46C8(v73, v72 + *(int *)(v74 + 48));
                  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v72, 0, 1, v74);
                  v10 = v89;
                  goto LABEL_50;
                }
                v77 = v75 + 3;
                a4 = v75 + 2;
                if (v75 + 3 < v88)
                {
                  v76 = *(_QWORD *)(v87 + 8 * v77);
                  if (v76)
                  {
LABEL_38:
                    v75 = v77;
                    goto LABEL_35;
                  }
                  while (1)
                  {
                    v75 = v77 + 1;
                    if (__OFADD__(v77, 1))
                    {
                      __break(1u);
                      JUMPOUT(0x2452D2454);
                    }
                    if (v75 >= v88)
                      break;
                    v76 = *(_QWORD *)(v87 + 8 * v75);
                    ++v77;
                    if (v76)
                      goto LABEL_35;
                  }
                  a4 = v85;
                }
              }
            }
          }
          v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C8);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v72, 1, 1, v78);
          v64 = 0;
LABEL_50:
          sub_2452BC850(v72, (uint64_t)v15, &qword_2574525E8);
          v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 48))(v15, 1, v79) == 1)
          {
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return;
          }
          sub_2452D4E7C((uint64_t)&v15[*(int *)(v79 + 48)], (uint64_t)v10);
          v80 = (uint64_t)v95;
          ((void (*)(char *, char *, uint8_t *))v70[4].isa)(v95, v15, v69);
          v81 = v101;
          if (*(_QWORD *)(v101 + 16) && (v82 = sub_2452C2058(v80), (v83 & 1) != 0))
          {
            v65 = *(_QWORD *)(*(_QWORD *)(v81 + 56) + 8 * v82);
            swift_unknownObjectRetain();
          }
          else
          {
            v65 = 0;
          }
          ((void (*)(char *, uint8_t *))v70[1].isa)(v95, v69);
          v6 = *((_QWORD *)v10 + 3);
          sub_2452D4EC0();
          v5 = (uint8_t *)swift_allocError();
          *v66 = 0;
          v96 = (uint64_t)v5;
          memset(v97, 0, sizeof(v97));
          v98 = 0;
          v99 = 1;
          ((void (*)(uint64_t *, uint64_t))v6)(&v96, v65);
          swift_unknownObjectRelease();

          sub_2452D4E38((uint64_t)v10);
        }
        v67 = __clz(__rbit64(v64));
        v64 &= v64 - 1;
        v68 = v67 | (a4 << 6);
        v70 = v92;
        v69 = v93;
        goto LABEL_31;
      }
    }
    else
    {
LABEL_57:
      __break(1u);
    }
    swift_once();
    goto LABEL_4;
  }
}

uint64_t sub_2452D2464(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  void (*v41)(_QWORD *);
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t *v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  char isUniquelyReferenced_nonNull_native;
  uint64_t ObjectType;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  int v62;
  uint64_t v63;
  char v64;
  unint64_t v65;
  uint64_t v66;
  _BOOL8 v67;
  uint64_t v68;
  char v69;
  unint64_t v70;
  char v71;
  _QWORD *v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t result;
  uint64_t v77;
  int64_t v78;
  uint64_t v79;
  int64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t *v86;
  uint64_t v87;
  int64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97[4];
  uint64_t v98;

  v90 = a3;
  v5 = type metadata accessor for NetworkBrowser.Monitor();
  v94 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v91 = (uint64_t)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v96 = (uint64_t)&v77 - v8;
  v9 = sub_245387740();
  v98 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v95 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v93 = (char *)&v77 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v92 = (char *)&v77 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v77 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525E8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v77 - v22;
  v87 = a1 + 64;
  swift_beginAccess();
  v24 = *(_QWORD *)(a1 + 64);
  v25 = *(_QWORD *)(v24 + 64);
  v79 = v24 + 64;
  v26 = 1 << *(_BYTE *)(v24 + 32);
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v28 = v27 & v25;
  v86 = (uint64_t *)(a1 + 80);
  v80 = (unint64_t)(v26 + 63) >> 6;
  v78 = v80 - 1;
  v81 = v24;
  swift_bridgeObjectRetain();
  v88 = 0;
  v85 = a2;
  v84 = v5;
  v83 = v21;
  v82 = v23;
  while (1)
  {
    if (v28)
    {
      v89 = (v28 - 1) & v28;
      v29 = __clz(__rbit64(v28)) | (v88 << 6);
LABEL_8:
      v30 = v81;
      (*(void (**)(char *, unint64_t, uint64_t))(v98 + 16))(v21, *(_QWORD *)(v81 + 48) + *(_QWORD *)(v98 + 72) * v29, v9);
      v31 = *(_QWORD *)(v30 + 56) + *(_QWORD *)(v94 + 72) * v29;
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C8);
      sub_2452D46C8(v31, (uint64_t)&v21[*(int *)(v32 + 48)]);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v21, 0, 1, v32);
      goto LABEL_27;
    }
    v33 = v88 + 1;
    if (__OFADD__(v88, 1))
      goto LABEL_50;
    if (v33 < v80)
    {
      v34 = *(_QWORD *)(v79 + 8 * v33);
      if (v34)
        goto LABEL_12;
      v35 = v88 + 2;
      ++v88;
      if (v33 + 1 < v80)
      {
        v34 = *(_QWORD *)(v79 + 8 * v35);
        if (v34)
          goto LABEL_15;
        v88 = v33 + 1;
        if (v33 + 2 < v80)
        {
          v34 = *(_QWORD *)(v79 + 8 * (v33 + 2));
          if (v34)
          {
            v33 += 2;
            goto LABEL_12;
          }
          v35 = v33 + 3;
          v88 = v33 + 2;
          if (v33 + 3 < v80)
            break;
        }
      }
    }
LABEL_26:
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v21, 1, 1, v36);
    v89 = 0;
LABEL_27:
    sub_2452BC850((uint64_t)v21, (uint64_t)v23, &qword_2574525E8);
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v23, 1, v37) == 1)
      return swift_release();
    v38 = (uint64_t)&v23[*(int *)(v37 + 48)];
    v39 = v98;
    (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v17, v23, v9);
    sub_2452D4E7C(v38, v96);
    v40 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
    v40(v92, v17, v9);
    swift_beginAccess();
    v41 = sub_2452D165C(v97);
    v43 = v42;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(v42, 1, v5))
      *(_BYTE *)(v43 + *(int *)(v5 + 32)) = 1;
    ((void (*)(uint64_t *, _QWORD))v41)(v97, 0);
    swift_endAccess();
    v44 = *(void (**)(char *, uint64_t))(v98 + 8);
    v44(v92, v9);
    v40(v93, v17, v9);
    v45 = v86;
    swift_beginAccess();
    v46 = *v45;
    if (*(_QWORD *)(v46 + 16) && (v47 = sub_2452C2058((uint64_t)v17), (v48 & 1) != 0))
    {
      v49 = *(_QWORD *)(*(_QWORD *)(v46 + 56) + 8 * v47);
      swift_endAccess();
      swift_unknownObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v97[0] = *a2;
      *a2 = 0x8000000000000000;
      ObjectType = swift_getObjectType();
      v52 = v49;
      v53 = (uint64_t)v93;
      sub_2452D4F04(v52, (uint64_t)v93, isUniquelyReferenced_nonNull_native, v97, ObjectType);
      *a2 = v97[0];
      swift_bridgeObjectRelease();
      v44((char *)v53, v9);
    }
    else
    {
      swift_endAccess();
      swift_bridgeObjectRetain();
      v54 = sub_2452C2058((uint64_t)v93);
      v56 = v55;
      swift_bridgeObjectRelease();
      if ((v56 & 1) != 0)
      {
        v57 = swift_isUniquelyReferenced_nonNull_native();
        v58 = *a2;
        v97[0] = *a2;
        *a2 = 0x8000000000000000;
        if (!v57)
        {
          sub_2452C8F48();
          v58 = v97[0];
        }
        v44((char *)(*(_QWORD *)(v58 + 48) + *(_QWORD *)(v98 + 72) * v54), v9);
        v59 = v97[0];
        sub_24537282C(v54, v97[0]);
        *a2 = v59;
        swift_bridgeObjectRelease();
      }
      v44(v93, v9);
      swift_unknownObjectRelease();
    }
    v60 = (uint64_t)v95;
    v40(v95, v17, v9);
    sub_2452D46C8(v96, v91);
    v61 = v90;
    v62 = swift_isUniquelyReferenced_nonNull_native();
    v97[0] = *v61;
    v63 = v97[0];
    *v61 = 0x8000000000000000;
    v65 = sub_2452C2058(v60);
    v66 = *(_QWORD *)(v63 + 16);
    v67 = (v64 & 1) == 0;
    v68 = v66 + v67;
    if (__OFADD__(v66, v67))
    {
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    v69 = v64;
    if (*(_QWORD *)(v63 + 24) >= v68)
    {
      if ((v62 & 1) == 0)
        sub_2452C9178();
    }
    else
    {
      sub_2452C5920(v68, v62);
      v70 = sub_2452C2058((uint64_t)v95);
      if ((v69 & 1) != (v71 & 1))
        goto LABEL_52;
      v65 = v70;
    }
    a2 = v85;
    v72 = (_QWORD *)v97[0];
    if ((v69 & 1) != 0)
    {
      sub_2452D52C4(v91, *(_QWORD *)(v97[0] + 56) + *(_QWORD *)(v94 + 72) * v65);
    }
    else
    {
      *(_QWORD *)(v97[0] + 8 * (v65 >> 6) + 64) |= 1 << v65;
      v40((char *)(v72[6] + *(_QWORD *)(v98 + 72) * v65), v95, v9);
      sub_2452D4E7C(v91, v72[7] + *(_QWORD *)(v94 + 72) * v65);
      v73 = v72[2];
      v74 = __OFADD__(v73, 1);
      v75 = v73 + 1;
      if (v74)
        goto LABEL_49;
      v72[2] = v75;
      v72 = (_QWORD *)v97[0];
    }
    *v90 = (uint64_t)v72;
    swift_bridgeObjectRelease();
    v44(v95, v9);
    sub_2452D4E38(v96);
    v44(v17, v9);
    v5 = v84;
    v21 = v83;
    v23 = v82;
    v28 = v89;
  }
  v34 = *(_QWORD *)(v79 + 8 * v35);
  if (v34)
  {
LABEL_15:
    v33 = v35;
LABEL_12:
    v88 = v33;
    v89 = (v34 - 1) & v34;
    v29 = __clz(__rbit64(v34)) + (v33 << 6);
    goto LABEL_8;
  }
  while (1)
  {
    v33 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v33 >= v80)
    {
      v88 = v78;
      goto LABEL_26;
    }
    v34 = *(_QWORD *)(v79 + 8 * v33);
    ++v35;
    if (v34)
      goto LABEL_12;
  }
LABEL_51:
  __break(1u);
LABEL_52:
  result = sub_2453883DC();
  __break(1u);
  return result;
}

uint64_t sub_2452D2CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(uint64_t, uint64_t);

  v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v5(a2, a3);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_2452D2D08(NSObject *a1, unint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void **, os_unfair_lock_s *))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t Strong;
  void *v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint8_t *v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  NSObject *v30;
  nw_browse_result_change_t changes;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint8_t *v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  uint8_t *v44;
  uint8_t *v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  nw_endpoint_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  nw_browse_result_change_t v53;
  uint64_t v54;
  void (*v55)(void **, os_unfair_lock_s *);
  NSObject *v56;
  os_log_type_t v57;
  BOOL v58;
  os_log_type_t v59;
  uint64_t v60;
  void *v61;
  os_log_type_t v62;
  uint8_t *v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int64_t v79;
  unint64_t v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  uint64_t v89;
  int64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  int64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  os_unfair_lock_s *v103;
  nw_browse_result_change_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD v117[5];

  v95 = a1;
  v7 = sub_245387740();
  v106 = *(_QWORD *)(v7 - 8);
  v107 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525E8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (os_unfair_lock_s *)((char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v92 = (char *)&v89 - v14;
  v15 = sub_2453879D4();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (uint64_t *)((char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return;
  v93 = Strong;
  v20 = *(void **)(Strong + 24);
  *v18 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x24BEE5610], v15);
  v21 = v20;
  LOBYTE(v20) = sub_2453879F8();
  (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v18, v15);
  if ((v20 & 1) != 0)
  {
    v105 = v9;
    if (qword_25744FD98 == -1)
      goto LABEL_4;
  }
  else
  {
LABEL_63:
    __break(1u);
  }
  swift_once();
LABEL_4:
  v22 = sub_245387818();
  __swift_project_value_buffer(v22, (uint64_t)qword_257462FC8);
  swift_unknownObjectRetain_n();
  v23 = sub_2453877F4();
  v24 = sub_245387D34();
  v25 = os_log_type_enabled(v23, v24);
  v103 = v13;
  if (v25)
  {
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = (void *)swift_slowAlloc();
    v108 = v27;
    *(_DWORD *)v26 = 136446210;
    v117[0] = a5;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452600);
    v28 = sub_245387B48();
    v117[0] = sub_2453816D8(v28, v29, (uint64_t *)&v108);
    sub_245387E0C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245256000, v23, v24, "%{public}s; Browse results changed", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v27, -1, -1);
    MEMORY[0x24953317C](v26, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  v30 = v95;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  changes = nw_browse_result_get_changes(v30, (nw_browse_result_t)a2);
  if ((changes & 2) != 0)
  {
    swift_unknownObjectRetain_n();
    v32 = sub_2453877F4();
    v39 = sub_245387D34();
    if (os_log_type_enabled(v32, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      v41 = (void *)swift_slowAlloc();
      v108 = v41;
      v104 = changes;
      *(_DWORD *)v40 = 136446210;
      v117[0] = a5;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452600);
      v42 = sub_245387B48();
      v117[0] = sub_2453816D8(v42, v43, (uint64_t *)&v108);
      LOBYTE(changes) = v104;
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v32, v39, "%{public}s; Browser added device", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v41, -1, -1);
      v44 = v40;
LABEL_15:
      MEMORY[0x24953317C](v44, -1, -1);

      goto LABEL_17;
    }
  }
  else
  {
    swift_unknownObjectRetain_n();
    v32 = sub_2453877F4();
    v33 = sub_245387D34();
    v34 = os_log_type_enabled(v32, v33);
    if ((changes & 4) == 0)
    {
      if (!v34)
      {

        swift_release();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease_n();
        return;
      }
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = (void *)swift_slowAlloc();
      v108 = v36;
      *(_DWORD *)v35 = 136446210;
      v117[0] = a5;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452600);
      v37 = sub_245387B48();
      v117[0] = sub_2453816D8(v37, v38, (uint64_t *)&v108);
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v32, v33, "%{public}s; Browser found an uninteresting change", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v36, -1, -1);
      MEMORY[0x24953317C](v35, -1, -1);
LABEL_26:
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_release();

      return;
    }
    if (v34)
    {
      v45 = (uint8_t *)swift_slowAlloc();
      v46 = (void *)swift_slowAlloc();
      v108 = v46;
      v104 = changes;
      *(_DWORD *)v45 = 136446210;
      v117[0] = a5;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257452600);
      v47 = sub_245387B48();
      v117[0] = sub_2453816D8(v47, v48, (uint64_t *)&v108);
      LOBYTE(changes) = v104;
      sub_245387E0C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245256000, v32, v33, "%{public}s; Browser removed device", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953317C](v46, -1, -1);
      v44 = v45;
      goto LABEL_15;
    }
  }

  swift_unknownObjectRelease_n();
LABEL_17:
  v49 = nw_browse_result_copy_endpoint((nw_browse_result_t)a2);
  if (!nw_endpoint_get_device_id())
  {
    v32 = sub_2453877F4();
    v62 = sub_245387D1C();
    if (os_log_type_enabled(v32, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v63 = 0;
      v64 = "Browser found remote device with no ID";
LABEL_25:
      _os_log_impl(&dword_245256000, v32, v62, v64, v63, 2u);
      MEMORY[0x24953317C](v63, -1, -1);
      swift_unknownObjectRelease();
      goto LABEL_26;
    }
LABEL_27:

    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return;
  }
  v50 = sub_245387B9C();
  v52 = v51;
  if (!nw_endpoint_get_device_name())
  {
    swift_bridgeObjectRelease();
    v32 = sub_2453877F4();
    v62 = sub_245387D1C();
    if (os_log_type_enabled(v32, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v63 = 0;
      v64 = "Browser found Remote device with no name";
      goto LABEL_25;
    }
    goto LABEL_27;
  }
  v53 = changes & 2;
  v54 = sub_245387B9C();
  a5 = v55;
  v117[0] = v50;
  v117[1] = v52;
  v117[2] = v54;
  v117[3] = v55;
  v117[4] = v49;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  v56 = sub_2453877F4();
  v57 = sub_245387D34();
  v58 = os_log_type_enabled(v56, v57);
  v100 = v52;
  v102 = v54;
  v91 = a2;
  v101 = (uint64_t)v49;
  v99 = v50;
  if (v58)
  {
    v59 = v57;
    v60 = swift_slowAlloc();
    v61 = (void *)swift_slowAlloc();
    v108 = v61;
    *(_DWORD *)v60 = 136446466;
    swift_bridgeObjectRetain();
    v116 = sub_2453816D8(v50, v52, (uint64_t *)&v108);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v60 + 12) = 2082;
    swift_bridgeObjectRetain();
    v116 = sub_2453816D8(v54, (unint64_t)a5, (uint64_t *)&v108);
    sub_245387E0C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_245256000, v56, v59, "Browser found device with ID: %{public}s; name: %{public}s",
      (uint8_t *)v60,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x24953317C](v61, -1, -1);
    MEMORY[0x24953317C](v60, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v65 = (uint64_t)v103;
  v66 = (uint64_t)a5;
  v115 = MEMORY[0x24BEE4B00];
  v116 = MEMORY[0x24BEE4B00];
  v67 = v93;
  v13 = *(os_unfair_lock_s **)(v93 + 16);
  swift_retain();
  os_unfair_lock_lock(v13 + 4);
  sub_2452D3BD0(v67, v117, &v116, &v115);
  os_unfair_lock_unlock(v13 + 4);
  swift_release();
  v68 = *(_QWORD *)(v116 + 64);
  v94 = v116 + 64;
  v69 = 1 << *(_BYTE *)(v116 + 32);
  v70 = -1;
  if (v69 < 64)
    v70 = ~(-1 << v69);
  a2 = v70 & v68;
  v98 = (void *)((v53 >> 1) ^ 1);
  v96 = (unint64_t)(v69 + 63) >> 6;
  v90 = v96 - 1;
  v97 = v116;
  swift_bridgeObjectRetain();
  v104 = 0;
  v71 = (uint64_t)v92;
  v72 = v102;
  while (1)
  {
    if (a2)
    {
      v73 = __clz(__rbit64(a2));
      a2 &= a2 - 1;
      v74 = v73 | (v104 << 6);
LABEL_36:
      v75 = v97;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v106 + 16))(v65, *(_QWORD *)(v97 + 48) + *(_QWORD *)(v106 + 72) * v74, v107);
      v76 = *(_QWORD *)(v75 + 56);
      v77 = v76 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for NetworkBrowser.Monitor() - 8) + 72) * v74;
      v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C8);
      sub_2452D46C8(v77, v65 + *(int *)(v78 + 48));
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v65, 0, 1, v78);
      goto LABEL_55;
    }
    v79 = v104 + 1;
    if (__OFADD__(v104, 1))
    {
      __break(1u);
      goto LABEL_63;
    }
    if (v79 < v96)
    {
      v80 = *(_QWORD *)(v94 + 8 * v79);
      if (v80)
        goto LABEL_40;
      v81 = v104 + 2;
      ++v104;
      if (v79 + 1 < v96)
      {
        v80 = *(_QWORD *)(v94 + 8 * v81);
        if (v80)
          goto LABEL_43;
        v104 = v79 + 1;
        if (v79 + 2 < v96)
        {
          v80 = *(_QWORD *)(v94 + 8 * (v79 + 2));
          if (v80)
          {
            v79 += 2;
            goto LABEL_40;
          }
          v81 = v79 + 3;
          v104 = v79 + 2;
          if (v79 + 3 < v96)
            break;
        }
      }
    }
LABEL_54:
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v65, 1, 1, v82);
    a2 = 0;
LABEL_55:
    sub_2452BC850(v65, v71, &qword_2574525E8);
    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 48))(v71, 1, v83) == 1)
    {
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease_n();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v84 = v71 + *(int *)(v83 + 48);
    a5 = *(void (**)(void **, os_unfair_lock_s *))(v84 + 24);
    swift_retain();
    sub_2452D4E38(v84);
    v108 = v98;
    v109 = v99;
    v110 = v100;
    v111 = v72;
    v112 = v66;
    v113 = v101;
    v114 = 0;
    v85 = (uint64_t)v105;
    (*(void (**)(char *, uint64_t, uint64_t))(v106 + 32))(v105, v71, v107);
    v86 = v115;
    v13 = *(os_unfair_lock_s **)(v115 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if (v13)
    {
      v87 = sub_2452C2058(v85);
      if ((v88 & 1) != 0)
      {
        v13 = *(os_unfair_lock_s **)(*(_QWORD *)(v86 + 56) + 8 * v87);
        swift_unknownObjectRetain();
      }
      else
      {
        v13 = 0;
      }
    }
    v72 = v102;
    (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v107);
    a5(&v108, v13);
    swift_release();
    swift_unknownObjectRelease();
    sub_2452D5288(v108, v109, v110, v111, v112, v113, v114);
    v65 = (uint64_t)v103;
  }
  v80 = *(_QWORD *)(v94 + 8 * v81);
  if (v80)
  {
LABEL_43:
    v79 = v81;
LABEL_40:
    a2 = (v80 - 1) & v80;
    v74 = __clz(__rbit64(v80)) + (v79 << 6);
    v104 = v79;
    goto LABEL_36;
  }
  while (1)
  {
    v79 = v81 + 1;
    if (__OFADD__(v81, 1))
      break;
    if (v79 >= v96)
    {
      v104 = v90;
      goto LABEL_54;
    }
    v80 = *(_QWORD *)(v94 + 8 * v79);
    ++v81;
    if (v80)
      goto LABEL_40;
  }
  __break(1u);
}

uint64_t sub_2452D3BD0(uint64_t a1, _QWORD *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  void (*v54)(_QWORD *);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v61;
  char v62;
  unint64_t v63;
  uint64_t v64;
  _BOOL8 v65;
  uint64_t v66;
  char v67;
  unint64_t v68;
  char v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  uint64_t v79;
  char v80;
  uint64_t ObjectType;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t result;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  _QWORD *v97;
  uint64_t *v98;
  uint64_t v99;
  int64_t v100;
  _QWORD *v101;
  uint64_t *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115[4];
  char *v116;

  v102 = a3;
  v101 = a2;
  v6 = type metadata accessor for NetworkBrowser.Monitor();
  v112 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v103 = (uint64_t)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (uint64_t *)((char *)&v91 - v10);
  MEMORY[0x24BDAC7A8](v9);
  v114 = (uint64_t)&v91 - v12;
  v13 = sub_245387740();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v107 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v109 = (char *)&v91 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v104 = (char *)&v91 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v116 = (char *)&v91 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525E8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v108 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v91 - v25;
  v99 = a1 + 64;
  swift_beginAccess();
  v27 = *(_QWORD *)(a1 + 64);
  v28 = *(_QWORD *)(v27 + 64);
  v95 = v27 + 64;
  v29 = 1 << *(_BYTE *)(v27 + 32);
  v30 = -1;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  v31 = v30 & v28;
  v96 = (uint64_t *)(a1 + 80);
  v32 = (unint64_t)(v29 + 63) >> 6;
  v92 = v32 - 1;
  v33 = swift_bridgeObjectRetain();
  v34 = 0;
  v100 = v32;
  v94 = v32 - 5;
  v106 = v33;
  v93 = v33 + 104;
  v110 = v14;
  v111 = v6;
  v105 = v26;
  v98 = a4;
  v97 = v11;
  while (1)
  {
    if (v31)
    {
      v36 = a4;
      v37 = __clz(__rbit64(v31));
      v31 &= v31 - 1;
      v113 = v34;
      v38 = v37 | (v34 << 6);
      goto LABEL_9;
    }
    v43 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v43 >= v100)
    {
      v45 = v34;
    }
    else
    {
      v44 = *(_QWORD *)(v95 + 8 * v43);
      if (v44)
        goto LABEL_13;
      v45 = v34 + 1;
      if ((uint64_t)(v34 + 2) < v100)
      {
        v44 = *(_QWORD *)(v95 + 8 * (v34 + 2));
        if (v44)
        {
          v43 = v34 + 2;
          goto LABEL_13;
        }
        v45 = v34 + 2;
        if ((uint64_t)(v34 + 3) < v100)
        {
          v44 = *(_QWORD *)(v95 + 8 * (v34 + 3));
          if (v44)
          {
            v43 = v34 + 3;
LABEL_13:
            v36 = a4;
            v31 = (v44 - 1) & v44;
            v38 = __clz(__rbit64(v44)) + (v43 << 6);
            v113 = v43;
LABEL_9:
            v39 = v106;
            v40 = (uint64_t)v108;
            (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v108, *(_QWORD *)(v106 + 48) + *(_QWORD *)(v14 + 72) * v38, v13);
            v41 = *(_QWORD *)(v39 + 56) + *(_QWORD *)(v112 + 72) * v38;
            v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C8);
            sub_2452D46C8(v41, v40 + *(int *)(v42 + 48));
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v40, 0, 1, v42);
            a4 = v36;
            v26 = v105;
            goto LABEL_16;
          }
          v43 = v34 + 4;
          v45 = v34 + 3;
          if ((uint64_t)(v34 + 4) < v100)
          {
            v44 = *(_QWORD *)(v95 + 8 * v43);
            if (v44)
              goto LABEL_13;
            while (v94 != v34)
            {
              v44 = *(_QWORD *)(v93 + 8 * v34++);
              if (v44)
              {
                v43 = v34 + 4;
                goto LABEL_13;
              }
            }
            v45 = v92;
          }
        }
      }
    }
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C8);
    v47 = v108;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v108, 1, 1, v46);
    v31 = 0;
    v113 = v45;
    v40 = (uint64_t)v47;
LABEL_16:
    sub_2452BC850(v40, (uint64_t)v26, &qword_2574525E8);
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v26, 1, v48) == 1)
      return swift_release();
    v49 = (uint64_t)&v26[*(int *)(v48 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v116, v26, v13);
    v50 = v114;
    sub_2452D4E7C(v49, v114);
    LOBYTE(v49) = *(_BYTE *)(v50 + *(int *)(v111 + 32));
    sub_2452D46C8(v50, (uint64_t)v11);
    if ((v49 & 1) != 0)
    {
      sub_2452D4E38((uint64_t)v11);
LABEL_5:
      sub_2452D4E38(v114);
      v35 = *(void (**)(char *, uint64_t))(v14 + 8);
      goto LABEL_6;
    }
    if (*v11 == *v101 && v11[1] == v101[1])
    {
      sub_2452D4E38((uint64_t)v11);
    }
    else
    {
      v51 = sub_245388274();
      sub_2452D4E38((uint64_t)v11);
      if ((v51 & 1) == 0)
        goto LABEL_5;
    }
    v52 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v53 = v116;
    v52(v104, v116, v13);
    swift_beginAccess();
    v54 = sub_2452D165C(v115);
    v56 = v55;
    v57 = v111;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v55, 1, v111))
      *(_BYTE *)(v56 + *(int *)(v57 + 32)) = 1;
    ((void (*)(uint64_t *, _QWORD))v54)(v115, 0);
    swift_endAccess();
    v35 = *(void (**)(char *, uint64_t))(v14 + 8);
    v35(v104, v13);
    v58 = (uint64_t)v109;
    v52(v109, v53, v13);
    sub_2452D46C8(v114, v103);
    v59 = v102;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v115[0] = *v59;
    v61 = v115[0];
    *v59 = 0x8000000000000000;
    v63 = sub_2452C2058(v58);
    v64 = *(_QWORD *)(v61 + 16);
    v65 = (v62 & 1) == 0;
    v66 = v64 + v65;
    if (__OFADD__(v64, v65))
      goto LABEL_57;
    v67 = v62;
    if (*(_QWORD *)(v61 + 24) >= v66)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_2452C9178();
    }
    else
    {
      sub_2452C5920(v66, isUniquelyReferenced_nonNull_native);
      v68 = sub_2452C2058((uint64_t)v109);
      if ((v67 & 1) != (v69 & 1))
        goto LABEL_59;
      v63 = v68;
    }
    v70 = (uint64_t)v116;
    v71 = (_QWORD *)v115[0];
    if ((v67 & 1) != 0)
    {
      sub_2452D52C4(v103, *(_QWORD *)(v115[0] + 56) + *(_QWORD *)(v112 + 72) * v63);
    }
    else
    {
      *(_QWORD *)(v115[0] + 8 * (v63 >> 6) + 64) |= 1 << v63;
      v52((char *)(v71[6] + *(_QWORD *)(v110 + 72) * v63), v109, v13);
      sub_2452D4E7C(v103, v71[7] + *(_QWORD *)(v112 + 72) * v63);
      v72 = v71[2];
      v73 = __OFADD__(v72, 1);
      v74 = v72 + 1;
      if (v73)
        goto LABEL_58;
      v71[2] = v74;
      v71 = (_QWORD *)v115[0];
    }
    *v102 = (uint64_t)v71;
    swift_bridgeObjectRelease();
    v35(v109, v13);
    v52(v107, (char *)v70, v13);
    v75 = v96;
    swift_beginAccess();
    v76 = *v75;
    if (*(_QWORD *)(v76 + 16) && (v77 = sub_2452C2058(v70), (v78 & 1) != 0))
    {
      v79 = *(_QWORD *)(*(_QWORD *)(v76 + 56) + 8 * v77);
      swift_endAccess();
      swift_unknownObjectRetain();
      a4 = v98;
      v80 = swift_isUniquelyReferenced_nonNull_native();
      v115[0] = *a4;
      *a4 = 0x8000000000000000;
      ObjectType = swift_getObjectType();
      v82 = v79;
      v83 = (uint64_t)v107;
      sub_2452D4F04(v82, (uint64_t)v107, v80, v115, ObjectType);
      *a4 = v115[0];
      swift_bridgeObjectRelease();
      v35((char *)v83, v13);
      v11 = v97;
    }
    else
    {
      swift_endAccess();
      a4 = v98;
      swift_bridgeObjectRetain();
      v84 = sub_2452C2058((uint64_t)v107);
      v86 = v85;
      swift_bridgeObjectRelease();
      v11 = v97;
      if ((v86 & 1) != 0)
      {
        v87 = swift_isUniquelyReferenced_nonNull_native();
        v88 = *a4;
        v115[0] = *a4;
        *a4 = 0x8000000000000000;
        if (!v87)
        {
          sub_2452C8F48();
          v88 = v115[0];
        }
        v35((char *)(*(_QWORD *)(v88 + 48) + *(_QWORD *)(v110 + 72) * v84), v13);
        v89 = v115[0];
        sub_24537282C(v84, v115[0]);
        *a4 = v89;
        swift_bridgeObjectRelease();
      }
      v35(v107, v13);
      swift_unknownObjectRelease();
    }
    sub_2452D4E38(v114);
LABEL_6:
    v35(v116, v13);
    v14 = v110;
    v34 = v113;
  }
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  result = sub_2453883DC();
  __break(1u);
  return result;
}

uint64_t sub_2452D4510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v7(a2, a3, a4);
  swift_release();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

void sub_2452D4584(uint64_t a1, uint64_t a2, void (*a3)(char *, char *, uint64_t), uint64_t a4, double a5)
{
  uint64_t v5;
  os_unfair_lock_s *v11;

  v11 = (os_unfair_lock_s *)(*(_QWORD *)(*(_QWORD *)v5 + 16) + 16);
  os_unfair_lock_lock(v11);
  sub_2452CE8D8(a1, a2, a3, a4, a5);
  os_unfair_lock_unlock(v11);
}

uint64_t sub_2452D45F8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2452D4620(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_245387740() - 8) + 80);
  return sub_2452CECC8(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

void sub_2452D4660(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_2452D46C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NetworkBrowser.Monitor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2452D470C(void (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v2 = sub_245387740();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v5);
  sub_24525C6C4(&qword_25744F6E0, v3, MEMORY[0x24BDCEAB8]);
  v8 = sub_2453880F4();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  return v8;
}

void (*sub_2452D47D0(_QWORD *a1, uint64_t a2))(uint64_t a1)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x68uLL);
  *a1 = v4;
  v5 = sub_245387740();
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v7 = malloc(*(_QWORD *)(v6 + 64));
  v4[10] = v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v6 + 16))(v7, a2, v5);
  v4[11] = sub_2452D4AC4(v4);
  v4[12] = sub_2452D48FC(v4 + 4, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  return sub_2452D4890;
}

void sub_2452D4890(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v3 = *(void **)(*(_QWORD *)a1 + 80);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 96))(*(_QWORD *)a1 + 32, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  v2(v1, 0);
  free(v3);
  free(v1);
}

void (*sub_2452D48FC(_QWORD *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  void (*result)(uint64_t **);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  *v8 = a2;
  v8[1] = v3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C0);
  v10 = malloc(*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  v8[2] = v10;
  v11 = *v3;
  v13 = sub_2452C2058(a2);
  *((_BYTE *)v8 + 32) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*v4 + 56);
        v20 = type metadata accessor for NetworkBrowser.Monitor();
        v21 = *(_QWORD *)(v20 - 8);
        sub_2452D4E7C(v19 + *(_QWORD *)(v21 + 72) * v13, (uint64_t)v10);
        v22 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v10, v22, 1, v20);
        return sub_2452D4A78;
      }
LABEL_11:
      v20 = type metadata accessor for NetworkBrowser.Monitor();
      v21 = *(_QWORD *)(v20 - 8);
      v22 = 1;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_2452C9178();
      goto LABEL_7;
    }
    sub_2452C5920(v16, a3 & 1);
    v23 = sub_2452C2058(a2);
    if ((v17 & 1) == (v24 & 1))
    {
      v13 = v23;
      v8[3] = v23;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  sub_245387740();
  result = (void (*)(uint64_t **))sub_2453883DC();
  __break(1u);
  return result;
}

void sub_2452D4A78(uint64_t **a1)
{
  uint64_t *v1;
  void *v2;

  v1 = *a1;
  v2 = (void *)(*a1)[2];
  sub_2452D4AF0((uint64_t)v2, *((unsigned __int8 *)*a1 + 32), (uint64_t *)(*a1)[1], (*a1)[3], **a1);
  sub_245263F80((uint64_t)v2, &qword_2574525C0);
  free(v2);
  free(v1);
}

uint64_t (*sub_2452D4AC4(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_2452D4AE4;
}

uint64_t sub_2452D4AE4(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

unint64_t sub_2452D4AF0(uint64_t a1, int a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  unint64_t result;
  int64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;

  v25 = a5;
  v26 = a4;
  v27 = a2;
  v7 = sub_245387740();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for NetworkBrowser.Monitor();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v24 - v19;
  sub_2452D5104(a1, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    result = sub_245263F80((uint64_t)v13, &qword_2574525C0);
    if ((v27 & 1) != 0)
    {
      v22 = v26;
      swift_arrayDestroy();
      return sub_245372AB8(v22, *a3);
    }
  }
  else
  {
    sub_2452D4E7C((uint64_t)v13, (uint64_t)v20);
    v23 = (_QWORD *)*a3;
    if ((v27 & 1) != 0)
    {
      return sub_2452D4E7C((uint64_t)v20, v23[7] + *(_QWORD *)(v15 + 72) * v26);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v25, v7);
      sub_2452D4E7C((uint64_t)v20, (uint64_t)v18);
      return sub_245329AC0(v26, (uint64_t)v10, (uint64_t)v18, v23);
    }
  }
  return result;
}

uint64_t sub_2452D4CDC(uint64_t a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v8 = sub_245387740();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*a4;
  v14 = sub_2452C2058(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = (_QWORD *)*a4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_unknownObjectRelease();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_2452C8F48();
    goto LABEL_7;
  }
  sub_2452C5590(v17, a3 & 1);
  v23 = sub_2452C2058(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_2453883DC();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = (_QWORD *)*a4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_2452D506C(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_2452D4E38(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NetworkBrowser.Monitor();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2452D4E74()
{
  return sub_2452D0710();
}

uint64_t sub_2452D4E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NetworkBrowser.Monitor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2452D4EC0()
{
  unint64_t result;

  result = qword_2574525F0;
  if (!qword_2574525F0)
  {
    result = MEMORY[0x2495330B0](&unk_24538B03C, &type metadata for NetworkBrowser.NetworkBrowserError);
    atomic_store(result, (unint64_t *)&qword_2574525F0);
  }
  return result;
}

uint64_t sub_2452D4F04(uint64_t a1, uint64_t a2, char a3, _QWORD *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  _QWORD v26[2];

  v26[1] = a5;
  v9 = sub_245387740();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*a4;
  v15 = sub_2452C2058(a2);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= v18 && (a3 & 1) != 0)
  {
LABEL_7:
    v21 = (_QWORD *)*a4;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = v21[7];
      result = swift_unknownObjectRelease();
      *(_QWORD *)(v22 + 8 * v15) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a3 & 1) == 0)
  {
    sub_2452C8F48();
    goto LABEL_7;
  }
  sub_2452C5590(v18, a3 & 1);
  v24 = sub_2452C2058(a2);
  if ((v19 & 1) != (v25 & 1))
  {
LABEL_14:
    result = sub_2453883DC();
    __break(1u);
    return result;
  }
  v15 = v24;
  v21 = (_QWORD *)*a4;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  return sub_2452D506C(v15, (uint64_t)v12, a1, v21);
}

uint64_t sub_2452D506C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_245387740();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_2452D5104(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574525C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

nw_parameters_t sub_2452D514C()
{
  nw_parameters_t application_service;
  xpc_object_t v1;
  size_t v2;
  xpc_object_t v3;
  size_t v4;
  xpc_object_t v5;
  size_t v6;

  application_service = nw_parameters_create_application_service();
  v1 = xpc_array_create(0, 0);
  v2 = sub_245387824();
  xpc_array_set_string(v1, v2, "com.apple.rapport.browse");
  v3 = xpc_array_create(0, 0);
  v4 = sub_245387824();
  xpc_array_set_string(v3, v4, "RapportBrowseAgent");
  swift_unknownObjectRetain();
  nw_parameters_set_required_netagent_classes();
  nw_parameters_set_include_screen_off_devices();
  nw_parameters_set_include_ble();
  swift_unknownObjectRelease();
  v5 = xpc_array_create(0, 0);
  v6 = sub_245387824();
  xpc_array_set_uint64(v5, v6, 0x3E9uLL);
  nw_parameters_set_preferred_interface_subtypes();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return application_service;
}

void sub_2452D5248(int a1, uint64_t a2)
{
  uint64_t v2;

  sub_2452D1740(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t objectdestroy_7Tm()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_2452D5280(NSObject *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_2452D2D08(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void (**)(void **, os_unfair_lock_s *))(v3 + 24));
}

void sub_2452D5288(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
  {

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
}

uint64_t sub_2452D52C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NetworkBrowser.Monitor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_245387740();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_2452D5380()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_245387740() - 8) + 80);
  sub_2452CEF44(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

unint64_t sub_2452D53B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25744FFF0;
  if (!qword_25744FFF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_25744FFE0);
    result = MEMORY[0x2495330B0](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_25744FFF0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NetworkBrowser.NetworkBrowserError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2452D5448 + 4 * byte_24538AF05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2452D547C + 4 * byte_24538AF00[v4]))();
}

uint64_t sub_2452D547C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452D5484(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2452D548CLL);
  return result;
}

uint64_t sub_2452D5498(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2452D54A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2452D54A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2452D54AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NetworkBrowser.NetworkBrowserError()
{
  return &type metadata for NetworkBrowser.NetworkBrowserError;
}

unint64_t sub_2452D54CC()
{
  unint64_t result;

  result = qword_257452610;
  if (!qword_257452610)
  {
    result = MEMORY[0x2495330B0](&unk_24538B014, &type metadata for NetworkBrowser.NetworkBrowserError);
    atomic_store(result, (unint64_t *)&qword_257452610);
  }
  return result;
}

uint64_t RecordStub.init(recordID:version:expiration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = type metadata accessor for RecordStub();
  v9 = a4 + *(int *)(v8 + 24);
  v10 = sub_2453876EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  sub_2452D5610(a1, a4);
  v11 = a4 + *(int *)(v8 + 20);
  v12 = sub_245387740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a2, v12);
  return sub_2452D5654(a3, v9);
}

uint64_t type metadata accessor for RecordStub()
{
  uint64_t result;

  result = qword_25744F770;
  if (!qword_25744F770)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2452D5610(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Record.ID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2452D5654(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for RecordStub(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *__dst;
  uint64_t v35;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    v10 = type metadata accessor for Record.ID(0);
    v11 = *(int *)(v10 + 24);
    __dst = (char *)v4 + v11;
    v35 = v10;
    v12 = (char *)a2 + v11;
    v13 = sub_245387740();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      v16 = type metadata accessor for Record.ID.Ownership(0);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    v18 = v14;
    v19 = *(int *)(v35 + 28);
    v20 = (uint64_t *)((char *)v4 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = *(int *)(a3 + 20);
    v24 = (char *)v4 + v23;
    v25 = (char *)a2 + v23;
    v26 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
    swift_bridgeObjectRetain();
    v26(v24, v25, v13);
    v27 = *(int *)(a3 + 24);
    v28 = (char *)v4 + v27;
    v29 = (char *)a2 + v27;
    v30 = sub_2453876EC();
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
  }
  return v4;
}

uint64_t destroy for RecordStub(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for Record.ID(0) + 24);
  v5 = sub_245387740();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1 + *(int *)(a2 + 20), v5);
  v7 = a1 + *(int *)(a2 + 24);
  v8 = sub_2453876EC();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return result;
}

_QWORD *initializeWithCopy for RecordStub(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *__dst;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = type metadata accessor for Record.ID(0);
  v9 = *(int *)(v8 + 24);
  __dst = (char *)a1 + v9;
  v10 = (char *)a2 + v9;
  v11 = sub_245387740();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  v15 = *(int *)(v8 + 28);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = *(int *)(a3 + 20);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  swift_bridgeObjectRetain();
  v22(v20, v21, v11);
  v23 = *(int *)(a3 + 24);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_2453876EC();
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

char *assignWithCopy for RecordStub(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
  *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for Record.ID(0);
  v7 = *(int *)(v6 + 24);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_245387740();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = *(int *)(v6 + 28);
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v10);
  v19 = *(int *)(a3 + 24);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_2453876EC();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v20, v21, v22);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  return a1;
}

char *initializeWithTake for RecordStub(char *a1, char *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  v7 = type metadata accessor for Record.ID(0);
  v8 = *(int *)(v7 + 24);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_245387740();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    v14 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  }
  else
  {
    v14 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v14(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_OWORD *)&a1[*(int *)(v7 + 28)] = *(_OWORD *)&a2[*(int *)(v7 + 28)];
  v14(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v11);
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_2453876EC();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

char *assignWithTake for RecordStub(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = *((_QWORD *)a2 + 3);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  v8 = *((_QWORD *)a2 + 5);
  *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
  *((_QWORD *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  v9 = type metadata accessor for Record.ID(0);
  v10 = *(int *)(v9 + 24);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_245387740();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  v19 = *(int *)(v9 + 28);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v23 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v13);
  v24 = *(int *)(a3 + 24);
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = sub_2453876EC();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v25, v26, v27);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_12;
  }
  if (v31)
  {
LABEL_12:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  return a1;
}

uint64_t getEnumTagSinglePayload for RecordStub()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452D61D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for Record.ID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_245387740();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for RecordStub()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452D6280(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = type metadata accessor for Record.ID(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_245387740();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_2452D6324()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for Record.ID(319);
  if (v0 <= 0x3F)
  {
    sub_245387740();
    if (v1 <= 0x3F)
    {
      sub_2452D63C4();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_2452D63C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25744F6B8)
  {
    sub_2453876EC();
    v0 = sub_245387E00();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25744F6B8);
  }
}

uint64_t Record.ID.init(identifier:zoneIdentifier:ownership:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t *v21;
  uint64_t v22;

  v10 = sub_245387740();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a3;
  v15 = *((_QWORD *)a3 + 2);
  v16 = *((_QWORD *)a3 + 3);
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_OWORD *)(a5 + 16) = v14;
  *(_QWORD *)(a5 + 32) = v15;
  *(_QWORD *)(a5 + 40) = v16;
  v17 = type metadata accessor for Record.ID(0);
  sub_2452B792C(a4, a5 + *(int *)(v17 + 24), type metadata accessor for Record.ID.Ownership);
  swift_bridgeObjectRetain();
  if (sub_245387B78() >= 51)
  {
    sub_245321734(a1, a2, (uint64_t)v13);
    a1 = sub_245387704();
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    swift_bridgeObjectRelease();
    a2 = v19;
  }
  result = sub_2452B7B5C(a4, type metadata accessor for Record.ID.Ownership);
  v21 = (uint64_t *)(a5 + *(int *)(v17 + 28));
  *v21 = a1;
  v21[1] = a2;
  return result;
}

uint64_t type metadata accessor for Record.ID(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_25744FD60);
}

uint64_t type metadata accessor for Record.ID.Ownership(uint64_t a1)
{
  return sub_2452B73E8(a1, qword_25744FD38);
}

uint64_t Record.Value.init(protocolVersion:data:url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = type metadata accessor for Record.Value(0);
  v11 = (uint64_t)a5 + *(int *)(v10 + 20);
  v12 = sub_2453875E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)((char *)a5 + *(int *)(v10 + 24)) = a1;
  *a5 = a2;
  a5[1] = a3;
  return sub_2452DB304(a4, v11);
}

uint64_t Record.init(metadata:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  sub_2452B7AB8(a1, a3, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
  v5 = type metadata accessor for Record(0);
  return sub_2452B7AB8(a2, a3 + *(int *)(v5 + 20), type metadata accessor for Record.Value);
}

uint64_t Record.ID.Ownership.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v10;

  v1 = sub_245387740();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2452B792C(v0, (uint64_t)v7, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    return sub_245388448();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_245388448();
  sub_24525C6C4(&qword_25744F6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_245387AB8();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_2452D6800()
{
  _BYTE *v0;

  if (*v0)
    return 0x65746F6D6572;
  else
    return 0x6C61636F6CLL;
}

uint64_t sub_2452D6834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2452DF324(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2452D6858()
{
  sub_2452DB360();
  return sub_2453884D8();
}

uint64_t sub_2452D6880()
{
  sub_2452DB360();
  return sub_2453884E4();
}

uint64_t sub_2452D68A8()
{
  sub_2452DB3E8();
  return sub_2453884D8();
}

uint64_t sub_2452D68D0()
{
  sub_2452DB3E8();
  return sub_2453884E4();
}

uint64_t sub_2452D68F8()
{
  sub_2452DB3A4();
  return sub_2453884D8();
}

uint64_t sub_2452D6920()
{
  sub_2452DB3A4();
  return sub_2453884E4();
}

uint64_t Record.ID.Ownership.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452620);
  v27 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v26 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_245387740();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v25 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452628);
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452630);
  v13 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452DB360();
  sub_24538849C();
  sub_2452B792C(v29, (uint64_t)v12, type metadata accessor for Record.ID.Ownership);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) == 1)
  {
    v31 = 0;
    sub_2452DB3E8();
    v16 = v30;
    sub_245388070();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v16);
  }
  else
  {
    v29 = v13;
    v18 = v25;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v25, v12, v4);
    v32 = 1;
    sub_2452DB3A4();
    v19 = v26;
    v20 = v30;
    sub_245388070();
    sub_24525C6C4(&qword_25744F6C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v21 = v28;
    sub_2453880B8();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v21);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v18, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v20);
  }
}

uint64_t Record.ID.Ownership.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_245387740();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24538843C();
  sub_2452B792C(v1, (uint64_t)v8, type metadata accessor for Record.ID.Ownership);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_245388448();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_245388448();
    sub_24525C6C4(&qword_25744F6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_245387AB8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_245388478();
}

uint64_t Record.ID.Ownership.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  char v44;

  v42 = a1;
  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452650);
  v4 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  v37 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v39 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452658);
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452660);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Record.ID.Ownership(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v33 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452DB360();
  v18 = v41;
  sub_245388490();
  if (!v18)
  {
    v33 = v12;
    v19 = v38;
    v20 = v39;
    v41 = v9;
    v21 = v40;
    v22 = sub_245388058();
    if (*(_QWORD *)(v22 + 16) == 1)
    {
      if ((*(_BYTE *)(v22 + 32) & 1) != 0)
      {
        v38 = (char *)v22;
        v44 = 1;
        sub_2452DB3A4();
        sub_245387FE0();
        v27 = sub_245387740();
        sub_24525C6C4(&qword_25744F6D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
        v28 = v15;
        v29 = v27;
        v35 = (uint64_t)v28;
        v30 = v36;
        sub_245388034();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v30);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
        v31 = v35;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v35, 0, 1, v29);
        sub_2452B7AB8(v31, (uint64_t)v17, type metadata accessor for Record.ID.Ownership);
      }
      else
      {
        v43 = 0;
        sub_2452DB3E8();
        sub_245387FE0();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v35);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
        v32 = sub_245387740();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v17, 1, 1, v32);
      }
      sub_2452B7AB8((uint64_t)v17, v21, type metadata accessor for Record.ID.Ownership);
    }
    else
    {
      v23 = sub_245387EE4();
      swift_allocError();
      v25 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25440C870);
      *v25 = v33;
      sub_245387FEC();
      sub_245387ECC();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
}

uint64_t sub_2452D71FC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Record.ID.Ownership.init(from:)(a1, a2);
}

uint64_t sub_2452D7210(_QWORD *a1)
{
  return Record.ID.Ownership.encode(to:)(a1);
}

uint64_t sub_2452D7228()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v1 = sub_245387740();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2452B792C(v0, (uint64_t)v7, type metadata accessor for Record.ID.Ownership);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    return sub_245388448();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
  sub_245388448();
  sub_24525C6C4(&qword_25744F6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_245387AB8();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

uint64_t sub_2452D735C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_245387740();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24538843C();
  sub_2452B792C(v1, (uint64_t)v8, type metadata accessor for Record.ID.Ownership);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_245388448();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    sub_245388448();
    sub_24525C6C4(&qword_25744F6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_245387AB8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return sub_245388478();
}

uint64_t Record.ID.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Record.ID.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Record.ID.identifier.modify())()
{
  return nullsub_1;
}

uint64_t Record.ID.zoneIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[3];
  v3 = v1[4];
  v4 = v1[5];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 Record.ID.zoneIdentifier.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v2;
  unint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v5;
  v1[1] = v5;
  v1[2].n128_u64[0] = v2;
  v1[2].n128_u64[1] = v3;
  return result;
}

uint64_t (*Record.ID.zoneIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t Record.ID.ownership.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Record.ID(0);
  return sub_2452B792C(v1 + *(int *)(v3 + 24), a1, type metadata accessor for Record.ID.Ownership);
}

uint64_t Record.ID.ownership.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Record.ID(0);
  return sub_2452BC64C(a1, v1 + *(int *)(v3 + 24), type metadata accessor for Record.ID.Ownership);
}

uint64_t (*Record.ID.ownership.modify())(_QWORD)
{
  type metadata accessor for Record.ID(0);
  return nullsub_1;
}

uint64_t Record.ID.logIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Record.ID(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Record.ID.description.getter()
{
  sub_245387EA8();
  sub_245387B90();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_245387EA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  swift_bridgeObjectRetain();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_245387B90();
  type metadata accessor for Record.ID(0);
  type metadata accessor for Record.ID.Ownership(0);
  sub_245387F5C();
  sub_245387B90();
  swift_bridgeObjectRetain();
  sub_245387B90();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t Record.ID.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_245387740();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_245387B6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_245387B6C();
  sub_245387B6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = type metadata accessor for Record.ID(0);
  sub_2452B792C(v1 + *(int *)(v9 + 24), (uint64_t)v8, type metadata accessor for Record.ID.Ownership);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_245388448();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_245388448();
    sub_24525C6C4(&qword_25744F6D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_245387AB8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  swift_bridgeObjectRetain();
  sub_245387B6C();
  return swift_bridgeObjectRelease();
}

uint64_t Record.ID.hashValue.getter()
{
  sub_24538843C();
  Record.ID.hash(into:)();
  return sub_245388478();
}

uint64_t sub_2452D7ACC()
{
  sub_24538843C();
  Record.ID.hash(into:)();
  return sub_245388478();
}

uint64_t sub_2452D7B0C()
{
  sub_24538843C();
  Record.ID.hash(into:)();
  return sub_245388478();
}

uint64_t Record.Value.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_245261C44(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t Record.Value.data.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_24525CB80(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*Record.Value.data.modify())()
{
  return nullsub_1;
}

uint64_t Record.Value.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Record.Value(0) + 20);
  return sub_245263F38(v3, a1);
}

uint64_t Record.Value.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Record.Value(0) + 20);
  return sub_2452DB304(a1, v3);
}

uint64_t (*Record.Value.url.modify())(_QWORD)
{
  type metadata accessor for Record.Value(0);
  return nullsub_1;
}

uint64_t Record.Value.protocolVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Record.Value(0) + 24));
}

uint64_t Record.Value.protocolVersion.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Record.Value(0);
  *(_QWORD *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*Record.Value.protocolVersion.modify())(_QWORD)
{
  type metadata accessor for Record.Value(0);
  return nullsub_1;
}

uint64_t Record.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2452B792C(v1, a1, type metadata accessor for Record.ID);
}

uint64_t Record.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2452B792C(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
}

uint64_t Record.metadata.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2452BC64C(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
}

uint64_t (*Record.metadata.modify())()
{
  return nullsub_1;
}

uint64_t Record.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Record(0);
  return sub_2452B792C(v1 + *(int *)(v3 + 20), a1, type metadata accessor for Record.Value);
}

uint64_t Record.value.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Record(0);
  return sub_2452BC64C(a1, v1 + *(int *)(v3 + 20), type metadata accessor for Record.Value);
}

uint64_t (*Record.value.modify())(_QWORD)
{
  type metadata accessor for Record(0);
  return nullsub_1;
}

uint64_t Record.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for Record.Value(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = 0;
  v7 = 0xE000000000000000;
  sub_245387EA8();
  swift_bridgeObjectRelease();
  v6 = 0x617461646174656DLL;
  v7 = 0xEA0000000000203ALL;
  RecordMetadata.description.getter();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  v4 = type metadata accessor for Record(0);
  sub_2452B792C(v0 + *(int *)(v4 + 20), (uint64_t)v3, type metadata accessor for Record.Value);
  sub_245387B48();
  sub_245387B90();
  swift_bridgeObjectRelease();
  sub_245387B90();
  return v6;
}

BOOL static Record.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if ((_s16ReplicatorEngine14RecordMetadataV2eeoiySbAC_ACtFZ_0(a1, a2) & 1) == 0)
    return 0;
  v4 = *(int *)(type metadata accessor for Record(0) + 20);
  return _s16ReplicatorEngine6RecordV5ValueV2eeoiySbAE_AEtFZ_0((_QWORD *)((char *)a1 + v4), (uint64_t)a2 + v4);
}

uint64_t sub_2452D7F54()
{
  _BYTE *v0;

  if (*v0)
    return 0x65756C6176;
  else
    return 0x617461646174656DLL;
}

uint64_t sub_2452D7F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2452DF404(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2452D7FB0()
{
  sub_2452DB42C();
  return sub_2453884D8();
}

uint64_t sub_2452D7FD8()
{
  sub_2452DB42C();
  return sub_2453884E4();
}

uint64_t Record.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452668);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452DB42C();
  sub_24538849C();
  v8[15] = 0;
  type metadata accessor for RecordMetadata();
  sub_24525C6C4(&qword_257452678, (uint64_t (*)(uint64_t))type metadata accessor for RecordMetadata, (uint64_t)&protocol conformance descriptor for RecordMetadata);
  sub_2453880B8();
  if (!v1)
  {
    type metadata accessor for Record(0);
    v8[14] = 1;
    type metadata accessor for Record.Value(0);
    sub_24525C6C4(&qword_257452680, type metadata accessor for Record.Value, (uint64_t)&protocol conformance descriptor for Record.Value);
    sub_2453880B8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Record.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char v26;
  char v27;

  v20 = a2;
  v21 = type metadata accessor for Record.Value(0);
  MEMORY[0x24BDAC7A8](v21);
  v22 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for RecordMetadata();
  MEMORY[0x24BDAC7A8](v23);
  v24 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452688);
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Record(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452DB42C();
  sub_245388490();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = a1;
  v12 = v6;
  v13 = (uint64_t)v11;
  v14 = (uint64_t)v22;
  v27 = 0;
  sub_24525C6C4(&qword_257452690, (uint64_t (*)(uint64_t))type metadata accessor for RecordMetadata, (uint64_t)&protocol conformance descriptor for RecordMetadata);
  v15 = (uint64_t)v24;
  v16 = v25;
  sub_245388034();
  sub_2452B7AB8(v15, v13, (uint64_t (*)(_QWORD))type metadata accessor for RecordMetadata);
  v26 = 1;
  sub_24525C6C4(&qword_257452698, type metadata accessor for Record.Value, (uint64_t)&protocol conformance descriptor for Record.Value);
  sub_245388034();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v16);
  sub_2452B7AB8(v14, v13 + *(int *)(v9 + 20), type metadata accessor for Record.Value);
  sub_2452B792C(v13, v20, type metadata accessor for Record);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return sub_2452B7B5C(v13, type metadata accessor for Record);
}

uint64_t sub_2452D8460@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2452B792C(v1, a1, type metadata accessor for Record.ID);
}

uint64_t sub_2452D8484@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Record.init(from:)(a1, a2);
}

uint64_t sub_2452D8498(_QWORD *a1)
{
  return Record.encode(to:)(a1);
}

uint64_t sub_2452D84AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((static RecordMetadata.== infix(_:_:)() & 1) != 0)
    return static Record.Value.== infix(_:_:)(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20));
  else
    return 0;
}

uint64_t sub_2452D8504(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24536D910(*a1, *a2);
}

uint64_t sub_2452D8510()
{
  sub_24538843C();
  sub_245387B6C();
  swift_bridgeObjectRelease();
  return sub_245388478();
}

uint64_t sub_2452D85B0()
{
  sub_245387B6C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2452D862C()
{
  sub_24538843C();
  sub_245387B6C();
  swift_bridgeObjectRelease();
  return sub_245388478();
}

uint64_t sub_2452D86C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2452DFBCC();
  *a1 = result;
  return result;
}

void sub_2452D86FC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEA00000000007265;
  v4 = 0xE400000000000000;
  v5 = 1701736314;
  if (v2 != 1)
  {
    v5 = 0x69687372656E776FLL;
    v4 = 0xE900000000000070;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x696669746E656469;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_2452D875C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1701736314;
  if (*v0 != 1)
    v1 = 0x69687372656E776FLL;
  if (*v0)
    return v1;
  else
    return 0x696669746E656469;
}

uint64_t sub_2452D87B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2452DFBCC();
  *a1 = result;
  return result;
}

void sub_2452D87E4(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_2452D87F0()
{
  sub_2452DF530();
  return sub_2453884D8();
}

uint64_t sub_2452D8818()
{
  sub_2452DF530();
  return sub_2453884E4();
}

uint64_t sub_2452D8840@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char v23;
  char v24;
  char v25;

  v19 = a2;
  v20 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v20);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574527D8);
  v6 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Record.ID.Versions.V0(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = a1[3];
  v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_2452DF530();
  sub_245388490();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  v18 = v9;
  v25 = 0;
  *v11 = sub_24538801C();
  v11[1] = v13;
  v24 = 1;
  v11[2] = sub_24538801C();
  v11[3] = v14;
  v23 = 2;
  sub_24525C6C4(&qword_2574527E0, type metadata accessor for Record.ID.Ownership, (uint64_t)&protocol conformance descriptor for Record.ID.Ownership);
  v15 = v21;
  sub_245388034();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  sub_2452B7AB8((uint64_t)v5, (uint64_t)v11 + *(int *)(v18 + 24), type metadata accessor for Record.ID.Ownership);
  sub_2452B792C((uint64_t)v11, v19, type metadata accessor for Record.ID.Versions.V0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return sub_2452B7B5C((uint64_t)v11, type metadata accessor for Record.ID.Versions.V0);
}

uint64_t sub_2452D8ADC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452788);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452DF530();
  sub_24538849C();
  v8[15] = 0;
  sub_2453880A0();
  if (!v1)
  {
    v8[14] = 1;
    sub_2453880A0();
    type metadata accessor for Record.ID.Versions.V0(0);
    v8[13] = 2;
    type metadata accessor for Record.ID.Ownership(0);
    sub_24525C6C4(&qword_257452780, type metadata accessor for Record.ID.Ownership, (uint64_t)&protocol conformance descriptor for Record.ID.Ownership);
    sub_2453880B8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2452D8C58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2452D8840(a1, a2);
}

uint64_t sub_2452D8C6C(_QWORD *a1)
{
  return sub_2452D8ADC(a1);
}

uint64_t sub_2452D8C80(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24536D7D8(*a1, *a2);
}

uint64_t sub_2452D8C8C()
{
  sub_24538843C();
  sub_245387B6C();
  swift_bridgeObjectRelease();
  return sub_245388478();
}

uint64_t sub_2452D8D40()
{
  sub_245387B6C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2452D8DD0()
{
  sub_24538843C();
  sub_245387B6C();
  swift_bridgeObjectRelease();
  return sub_245388478();
}

uint64_t sub_2452D8E80@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2452DFBCC();
  *a1 = result;
  return result;
}

void sub_2452D8EB4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEA00000000007265;
  v4 = 0xEE00726569666974;
  v5 = 0x6E656449656E6F7ALL;
  if (v2 != 1)
  {
    v5 = 0x69687372656E776FLL;
    v4 = 0xE900000000000070;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x696669746E656469;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_2452D8F28()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E656449656E6F7ALL;
  if (*v0 != 1)
    v1 = 0x69687372656E776FLL;
  if (*v0)
    return v1;
  else
    return 0x696669746E656469;
}

uint64_t sub_2452D8F98@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2452DFBCC();
  *a1 = result;
  return result;
}

uint64_t sub_2452D8FC4()
{
  sub_2452DF4EC();
  return sub_2453884D8();
}

uint64_t sub_2452D8FEC()
{
  sub_2452DF4EC();
  return sub_2453884E4();
}

uint64_t sub_2452D9014@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v20 = a2;
  v21 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v21);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574527E8);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Record.ID.Versions.V8(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v23 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_2452DF4EC();
  v12 = v24;
  sub_245388490();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  LOBYTE(v25) = 0;
  v13 = (uint64_t)v10;
  *(_QWORD *)v10 = sub_24538801C();
  *((_QWORD *)v10 + 1) = v14;
  v28 = 1;
  sub_2452CC47C();
  sub_245388034();
  v15 = v26;
  v16 = v27;
  *((_OWORD *)v10 + 1) = v25;
  *((_QWORD *)v10 + 4) = v15;
  *((_QWORD *)v10 + 5) = v16;
  LOBYTE(v25) = 2;
  sub_24525C6C4(&qword_2574527E0, type metadata accessor for Record.ID.Ownership, (uint64_t)&protocol conformance descriptor for Record.ID.Ownership);
  v17 = v22;
  sub_245388034();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v17);
  sub_2452B7AB8((uint64_t)v4, v13 + *(int *)(v8 + 24), type metadata accessor for Record.ID.Ownership);
  sub_2452B792C(v13, v20, type metadata accessor for Record.ID.Versions.V8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return sub_2452B7B5C(v13, type metadata accessor for Record.ID.Versions.V8);
}

uint64_t sub_2452D92D8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452770);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452DF4EC();
  sub_24538849C();
  LOBYTE(v13) = 0;
  sub_2453880A0();
  if (!v2)
  {
    v9 = *(_QWORD *)(v3 + 32);
    v10 = *(_QWORD *)(v3 + 40);
    v13 = *(_OWORD *)(v3 + 16);
    v14 = v9;
    v15 = v10;
    v12[15] = 1;
    sub_2452CC018();
    sub_2453880B8();
    type metadata accessor for Record.ID.Versions.V8(0);
    LOBYTE(v13) = 2;
    type metadata accessor for Record.ID.Ownership(0);
    sub_24525C6C4(&qword_257452780, type metadata accessor for Record.ID.Ownership, (uint64_t)&protocol conformance descriptor for Record.ID.Ownership);
    sub_2453880B8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2452D9474@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2452D9014(a1, a2);
}

uint64_t sub_2452D9488(_QWORD *a1)
{
  return sub_2452D92D8(a1);
}

uint64_t Record.ID.encode(to:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v29;
  __int128 v30[2];
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[3];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v1;
  sub_24525E4F0(a1, (uint64_t)v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452380);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452388);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v38 = v2;
    v31 = 0;
    memset(v30, 0, sizeof(v30));
    sub_245263F80((uint64_t)v30, &qword_257452390);
LABEL_7:
    v16 = *v1;
    v15 = v1[1];
    v17 = v3[2];
    v18 = v3[3];
    v19 = v3[4];
    v20 = v3[5];
    v21 = (uint64_t)v3 + *(int *)(type metadata accessor for Record.ID(0) + 24);
    v22 = type metadata accessor for Record.ID.Versions.V8(0);
    v36 = v22;
    v37 = sub_24525C6C4(&qword_2574526A0, type metadata accessor for Record.ID.Versions.V8, (uint64_t)&unk_24538B81C);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v35);
    sub_2452B792C(v21, (uint64_t)boxed_opaque_existential_1 + *(int *)(v22 + 24), type metadata accessor for Record.ID.Ownership);
    *boxed_opaque_existential_1 = v16;
    boxed_opaque_existential_1[1] = v15;
    boxed_opaque_existential_1[2] = v17;
    boxed_opaque_existential_1[3] = v18;
    boxed_opaque_existential_1[4] = v19;
    boxed_opaque_existential_1[5] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_10;
  }
  sub_2452B7C5C(v30, (uint64_t)v32);
  v4 = v33;
  v5 = v34;
  __swift_project_boxed_opaque_existential_1(v32, v33);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  if ((v7 & 1) != 0)
  {
    v38 = v2;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    goto LABEL_7;
  }
  v9 = *v1;
  v8 = v1[1];
  v11 = v1[2];
  v10 = v1[3];
  if (v6 > 7)
  {
    v38 = v3[4];
    v29 = v11;
    v24 = v3[5];
    v25 = (uint64_t)v3 + *(int *)(type metadata accessor for Record.ID(0) + 24);
    v26 = type metadata accessor for Record.ID.Versions.V8(0);
    v36 = v26;
    v37 = sub_24525C6C4(&qword_2574526A0, type metadata accessor for Record.ID.Versions.V8, (uint64_t)&unk_24538B81C);
    v27 = __swift_allocate_boxed_opaque_existential_1(v35);
    sub_2452B792C(v25, (uint64_t)v27 + *(int *)(v26 + 24), type metadata accessor for Record.ID.Ownership);
    *v27 = v9;
    v27[1] = v8;
    v27[2] = v29;
    v27[3] = v10;
    v27[4] = v38;
    v27[5] = v24;
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = (uint64_t)v3 + *(int *)(type metadata accessor for Record.ID(0) + 24);
    v13 = type metadata accessor for Record.ID.Versions.V0(0);
    v36 = v13;
    v37 = sub_24525C6C4(&qword_2574526A8, type metadata accessor for Record.ID.Versions.V0, (uint64_t)&unk_24538B7F4);
    v14 = __swift_allocate_boxed_opaque_existential_1(v35);
    sub_2452B792C(v12, (uint64_t)v14 + *(int *)(v13 + 24), type metadata accessor for Record.ID.Ownership);
    *v14 = v9;
    v14[1] = v8;
    v14[2] = v11;
    v14[3] = v10;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
LABEL_10:
  __swift_project_boxed_opaque_existential_1(v35, v36);
  sub_245387AA0();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
}

uint64_t Record.ID.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  __int128 v53[2];
  uint64_t v54;
  _QWORD v55[5];
  _QWORD v56[3];
  uint64_t v57;
  uint64_t v58;
  char *v59;

  v3 = v2;
  v52 = a2;
  v5 = sub_245387740();
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v59 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Record.ID.Versions.V8(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v47 - v11;
  v13 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Record.ID.Versions.V0(0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (uint64_t *)((char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24525E4F0(a1, (uint64_t)v55);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574523C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574523C8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v54 = 0;
    memset(v53, 0, sizeof(v53));
    sub_245263F80((uint64_t)v53, &qword_2574523D0);
LABEL_8:
    sub_24525E4F0(a1, (uint64_t)v56);
    sub_2452D9014(v56, (uint64_t)v10);
    if (v3)
      return __swift_destroy_boxed_opaque_existential_1(a1);
    v27 = *((_QWORD *)v10 + 1);
    v28 = v52;
    *v52 = *(_QWORD *)v10;
    v28[1] = v27;
    v29 = *((_QWORD *)v10 + 4);
    v30 = *((_QWORD *)v10 + 5);
    *((_OWORD *)v28 + 1) = *((_OWORD *)v10 + 1);
    v28[4] = v29;
    v28[5] = v30;
    v31 = *(int *)(v7 + 24);
    v32 = v28;
    v33 = (uint64_t)&v10[v31];
    v34 = type metadata accessor for Record.ID(0);
    sub_2452B7AB8(v33, (uint64_t)v32 + *(int *)(v34 + 24), type metadata accessor for Record.ID.Ownership);
    v24 = (uint64_t)v59;
    goto LABEL_17;
  }
  v48 = v7;
  v49 = a1;
  sub_2452B7C5C(v53, (uint64_t)v56);
  v19 = v57;
  v20 = v58;
  __swift_project_boxed_opaque_existential_1(v56, v57);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
  if ((v22 & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
    v3 = v2;
    v7 = v48;
    a1 = v49;
    goto LABEL_8;
  }
  if (v21 > 7)
  {
    a1 = v49;
    sub_24525E4F0(v49, (uint64_t)v55);
    sub_2452D9014(v55, (uint64_t)v12);
    v24 = (uint64_t)v59;
    if (v2)
    {
      v25 = a1;
      goto LABEL_13;
    }
    v37 = *((_QWORD *)v12 + 1);
    v38 = v52;
    *v52 = *(_QWORD *)v12;
    v38[1] = v37;
    v39 = *((_QWORD *)v12 + 4);
    v40 = *((_QWORD *)v12 + 5);
    *((_OWORD *)v38 + 1) = *((_OWORD *)v12 + 1);
    v38[4] = v39;
    v38[5] = v40;
    v32 = v38;
    v15 = &v12[*(int *)(v48 + 24)];
  }
  else
  {
    v23 = v49;
    sub_24525E4F0(v49, (uint64_t)v55);
    sub_2452D8840(v55, (uint64_t)v18);
    v24 = (uint64_t)v59;
    if (v2)
    {
      v25 = v23;
LABEL_13:
      __swift_destroy_boxed_opaque_existential_1(v25);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
    }
    v35 = v18[1];
    v32 = v52;
    *v52 = *v18;
    v32[1] = v35;
    v36 = v18[3];
    v32[2] = v18[2];
    v32[3] = v36;
    v32[4] = 0xD000000000000011;
    v32[5] = 0x8000000245393670;
    sub_2452B792C((uint64_t)v18 + *(int *)(v16 + 24), (uint64_t)v15, type metadata accessor for Record.ID.Ownership);
    swift_bridgeObjectRetain();
    a1 = v49;
    swift_bridgeObjectRetain();
    sub_2452B7B5C((uint64_t)v18, type metadata accessor for Record.ID.Versions.V0);
  }
  v41 = type metadata accessor for Record.ID(0);
  sub_2452B7AB8((uint64_t)v15, (uint64_t)v32 + *(int *)(v41 + 24), type metadata accessor for Record.ID.Ownership);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
LABEL_17:
  v42 = *v32;
  v43 = v32[1];
  swift_bridgeObjectRetain();
  if (sub_245387B78() >= 51)
  {
    sub_245321734(v42, v43, v24);
    v42 = sub_245387704();
    v45 = v44;
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v24, v51);
    swift_bridgeObjectRelease();
    v43 = v45;
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
  result = type metadata accessor for Record.ID(0);
  v46 = (uint64_t *)((char *)v32 + *(int *)(result + 28));
  *v46 = v42;
  v46[1] = v43;
  return result;
}

uint64_t sub_2452D9C4C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return Record.ID.init(from:)(a1, a2);
}

uint64_t sub_2452D9C60(uint64_t a1)
{
  return Record.ID.encode(to:)(a1);
}

uint64_t sub_2452D9C74(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  __int128 v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574527B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452DF5B8();
  sub_24538849C();
  v11 = *v3;
  v10[15] = 0;
  sub_2452CC1A4();
  sub_2453880B8();
  if (!v2)
  {
    type metadata accessor for Record.Value.Versions.V0(0);
    LOBYTE(v11) = 1;
    sub_2453875E4();
    sub_24525C6C4(&qword_2574527A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_245388088();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2452D9DE0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  char v25;

  v20 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574527C0);
  v6 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Record.Value.Versions.V0(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)&v12[*(int *)(v10 + 20)];
  v14 = sub_2453875E4();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v23 = v13;
  v15(v13, 1, 1, v14);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452DF5B8();
  sub_245388490();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_245263F80(v23, &qword_25744F610);
  }
  else
  {
    v16 = v12;
    v17 = (uint64_t)v21;
    v25 = 0;
    sub_2452CC5D0();
    v18 = v22;
    sub_245388034();
    *v16 = v24;
    LOBYTE(v24) = 1;
    sub_24525C6C4(&qword_2574527C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
    sub_245388004();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v18);
    sub_2452DB304(v17, v23);
    sub_2452B792C((uint64_t)v16, v20, type metadata accessor for Record.Value.Versions.V0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_2452B7B5C((uint64_t)v16, type metadata accessor for Record.Value.Versions.V0);
  }
}

uint64_t sub_2452DA078()
{
  _BYTE *v0;

  if (*v0)
    return 7107189;
  else
    return 1635017060;
}

uint64_t sub_2452DA0A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2452DFC10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2452DA0C8()
{
  sub_2452DF5B8();
  return sub_2453884D8();
}

uint64_t sub_2452DA0F0()
{
  sub_2452DF5B8();
  return sub_2453884E4();
}

uint64_t sub_2452DA118@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2452D9DE0(a1, a2);
}

uint64_t sub_2452DA12C(_QWORD *a1)
{
  return sub_2452D9C74(a1);
}

uint64_t sub_2452DA140(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  __int128 v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257452798);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452DF574();
  sub_24538849C();
  v11 = *v3;
  v10[15] = 0;
  sub_2452CC1A4();
  sub_2453880B8();
  if (!v2)
  {
    type metadata accessor for Record.Value.Versions.V8(0);
    LOBYTE(v11) = 1;
    sub_2453875E4();
    sub_24525C6C4(&qword_2574527A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_245388088();
    LOBYTE(v11) = 2;
    sub_2453880D0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2452DA2DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  char v29;

  v22 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  MEMORY[0x24BDAC7A8](v3);
  v23 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574527D0);
  v5 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Record.Value.Versions.V8(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (_OWORD *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = (uint64_t)v11 + *(int *)(v9 + 20);
  v13 = sub_2453875E4();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v26 = v12;
  v14(v12, 1, 1, v13);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2452DF574();
  v25 = v7;
  v15 = v27;
  sub_245388490();
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_245263F80(v26, &qword_25744F610);
  }
  else
  {
    v16 = (uint64_t)v23;
    v27 = v8;
    v29 = 0;
    sub_2452CC5D0();
    v17 = v24;
    sub_245388034();
    v18 = (uint64_t)v11;
    *v11 = v28;
    LOBYTE(v28) = 1;
    sub_24525C6C4(&qword_2574527C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
    sub_245388004();
    sub_2452DB304(v16, v26);
    LOBYTE(v28) = 2;
    v19 = v25;
    v20 = sub_24538804C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v19, v17);
    *(_QWORD *)(v18 + *(int *)(v27 + 24)) = v20;
    sub_2452B792C(v18, v22, type metadata accessor for Record.Value.Versions.V8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_2452B7B5C(v18, type metadata accessor for Record.Value.Versions.V8);
  }
}

uint64_t sub_2452DA5D4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 7107189;
  if (*v0 != 1)
    v1 = 0x6C6F636F746F7270;
  if (*v0)
    return v1;
  else
    return 1635017060;
}

uint64_t sub_2452DA62C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2452DFCE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2452DA650()
{
  sub_2452DF574();
  return sub_2453884D8();
}

uint64_t sub_2452DA678()
{
  sub_2452DF574();
  return sub_2453884E4();
}

uint64_t sub_2452DA6A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2452DA2DC(a1, a2);
}

uint64_t sub_2452DA6B4(_QWORD *a1)
{
  return sub_2452DA140(a1);
}

uint64_t Record.Value.encode(to:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  __int128 v26[2];
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[3];
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  sub_24525E4F0(a1, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452380);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257452388);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v27 = 0;
    memset(v26, 0, sizeof(v26));
    sub_245263F80((uint64_t)v26, &qword_257452390);
LABEL_7:
    v14 = *v1;
    v15 = v2[1];
    v16 = type metadata accessor for Record.Value(0);
    v17 = (uint64_t)v2 + *(int *)(v16 + 20);
    v18 = type metadata accessor for Record.Value.Versions.V8(0);
    v32 = v18;
    v33 = sub_24525C6C4(&qword_2574526B0, type metadata accessor for Record.Value.Versions.V8, (uint64_t)&unk_24538B7CC);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v31);
    sub_245263F38(v17, (uint64_t)boxed_opaque_existential_1 + *(int *)(v18 + 20));
    v20 = *(uint64_t *)((char *)v2 + *(int *)(v16 + 24));
    *boxed_opaque_existential_1 = v14;
    boxed_opaque_existential_1[1] = v15;
    *(uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v18 + 24)) = v20;
    sub_245261C44(v14, v15);
    goto LABEL_10;
  }
  sub_2452B7C5C(v26, (uint64_t)v28);
  v3 = v29;
  v4 = v30;
  __swift_project_boxed_opaque_existential_1(v28, v29);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  if ((v6 & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    goto LABEL_7;
  }
  v7 = v5;
  v8 = *v1;
  v9 = v2[1];
  v10 = type metadata accessor for Record.Value(0);
  v11 = (uint64_t)v2 + *(int *)(v10 + 20);
  if (v7 > 7)
  {
    v21 = v10;
    v22 = type metadata accessor for Record.Value.Versions.V8(0);
    v32 = v22;
    v33 = sub_24525C6C4(&qword_2574526B0, type metadata accessor for Record.Value.Versions.V8, (uint64_t)&unk_24538B7CC);
    v23 = __swift_allocate_boxed_opaque_existential_1(v31);
    sub_245263F38(v11, (uint64_t)v23 + *(int *)(v22 + 20));
    v24 = *(uint64_t *)((char *)v2 + *(int *)(v21 + 24));
    *v23 = v8;
    v23[1] = v9;
    *(uint64_t *)((char *)v23 + *(int *)(v22 + 24)) = v24;
  }
  else
  {
    v12 = type metadata accessor for Record.Value.Versions.V0(0);
    v32 = v12;
    v33 = sub_24525C6C4(&qword_2574526B8, type metadata accessor for Record.Value.Versions.V0, (uint64_t)&unk_24538B7A4);
    v13 = __swift_allocate_boxed_opaque_existential_1(v31);
    sub_245263F38(v11, (uint64_t)v13 + *(int *)(v12 + 20));
    *v13 = v8;
    v13[1] = v9;
  }
  sub_245261C44(v8, v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
LABEL_10:
  __swift_project_boxed_opaque_existential_1(v31, v32);
  sub_245387AA0();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
}

uint64_t Record.Value.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  __int128 v38[2];
  uint64_t v39;
  _QWORD v40[5];
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = type metadata accessor for Record.Value.Versions.V8(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v9 = (uint64_t *)((char *)&v34 - v8);
  v10 = type metadata accessor for Record.Value.Versions.V0(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (_OWORD *)((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = type metadata accessor for Record.Value(0);
  v13 = (uint64_t)a2 + *(int *)(v37 + 20);
  v14 = sub_2453875E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_24525E4F0(a1, (uint64_t)v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574523C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574523C8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v39 = 0;
    memset(v38, 0, sizeof(v38));
    sub_245263F80((uint64_t)v38, &qword_2574523D0);
    goto LABEL_8;
  }
  v35 = v4;
  v36 = a2;
  sub_2452B7C5C(v38, (uint64_t)v41);
  v15 = v42;
  v16 = v43;
  __swift_project_boxed_opaque_existential_1(v41, v42);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
  if ((v18 & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v4 = v35;
    a2 = v36;
LABEL_8:
    sub_24525E4F0(a1, (uint64_t)v41);
    v22 = v44;
    sub_2452DA2DC(v41, (uint64_t)v7);
    __swift_destroy_boxed_opaque_existential_1(a1);
    if (!v22)
    {
      v23 = *v7;
      v24 = v7[1];
      *a2 = *v7;
      a2[1] = v24;
      v25 = v4;
      v26 = (uint64_t)v7 + *(int *)(v4 + 20);
      sub_245261C44(v23, v24);
      sub_2452DB4C0(v26, v13);
      v27 = *(uint64_t *)((char *)v7 + *(int *)(v25 + 24));
      result = sub_2452B7B5C((uint64_t)v7, type metadata accessor for Record.Value.Versions.V8);
      *(uint64_t *)((char *)a2 + *(int *)(v37 + 24)) = v27;
      return result;
    }
    return sub_245263F80(v13, &qword_25744F610);
  }
  if (v17 > 7)
  {
    sub_24525E4F0(a1, (uint64_t)v40);
    v29 = v44;
    sub_2452DA2DC(v40, (uint64_t)v9);
    __swift_destroy_boxed_opaque_existential_1(a1);
    v20 = v36;
    if (!v29)
    {
      v30 = *v9;
      v31 = v9[1];
      *v36 = *v9;
      v20[1] = v31;
      v32 = v35;
      v33 = (uint64_t)v9 + *(int *)(v35 + 20);
      sub_245261C44(v30, v31);
      sub_2452DB4C0(v33, v13);
      v21 = *(uint64_t *)((char *)v9 + *(int *)(v32 + 24));
      sub_2452B7B5C((uint64_t)v9, type metadata accessor for Record.Value.Versions.V8);
      goto LABEL_15;
    }
  }
  else
  {
    sub_24525E4F0(a1, (uint64_t)v40);
    v19 = v44;
    sub_2452D9DE0(v40, (uint64_t)v12);
    __swift_destroy_boxed_opaque_existential_1(a1);
    v20 = v36;
    if (!v19)
    {
      *(_OWORD *)v36 = *v12;
      sub_2452DB304((uint64_t)v12 + *(int *)(v10 + 20), v13);
      v21 = 1;
LABEL_15:
      *(uint64_t *)((char *)v20 + *(int *)(v37 + 24)) = v21;
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return sub_245263F80(v13, &qword_25744F610);
}

uint64_t sub_2452DAC80@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return Record.Value.init(from:)(a1, a2);
}

uint64_t sub_2452DAC94(uint64_t a1)
{
  return Record.Value.encode(to:)(a1);
}

uint64_t _s16ReplicatorEngine6RecordV2IDV9OwnershipO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v4 = sub_245387740();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Record.ID.Ownership(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744FD50);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_2452B792C(a1, (uint64_t)v14, type metadata accessor for Record.ID.Ownership);
  sub_2452B792C(a2, v15, type metadata accessor for Record.ID.Ownership);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) != 1)
  {
    sub_2452B792C((uint64_t)v14, (uint64_t)v10, type metadata accessor for Record.ID.Ownership);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v17 = sub_245387710();
      v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v7, v4);
      v18(v10, v4);
      sub_2452B7B5C((uint64_t)v14, type metadata accessor for Record.ID.Ownership);
      return v17 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_6;
  }
  if (v16(v15, 1, v4) != 1)
  {
LABEL_6:
    sub_245263F80((uint64_t)v14, &qword_25744FD50);
    v17 = 0;
    return v17 & 1;
  }
  sub_2452B7B5C((uint64_t)v14, type metadata accessor for Record.ID.Ownership);
  v17 = 1;
  return v17 & 1;
}

uint64_t _s16ReplicatorEngine6RecordV2IDV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_245388274(), result = 0, (v5 & 1) != 0))
  {
    if ((v7 = a1[4], v8 = a1[5], v9 = a2[4], v10 = a2[5], a1[2] == a2[2]) && a1[3] == a2[3]
      || (v11 = sub_245388274(), result = 0, (v11 & 1) != 0))
    {
      if (v7 == v9 && v8 == v10 || (v12 = sub_245388274(), result = 0, (v12 & 1) != 0))
      {
        v13 = type metadata accessor for Record.ID(0);
        if ((_s16ReplicatorEngine6RecordV2IDV9OwnershipO2eeoiySbAG_AGtFZ_0((uint64_t)a1 + *(int *)(v13 + 24), (uint64_t)a2 + *(int *)(v13 + 24)) & 1) != 0)
        {
          v14 = *(int *)(v13 + 28);
          v15 = *(_QWORD *)((char *)a1 + v14);
          v16 = *(_QWORD *)((char *)a1 + v14 + 8);
          v17 = (_QWORD *)((char *)a2 + v14);
          if (v15 == *v17 && v16 == v17[1])
            return 1;
          else
            return sub_245388274();
        }
        else
        {
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL _s16ReplicatorEngine6RecordV5ValueV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  char *v25;
  char v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;

  v4 = sub_2453875E4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574527F0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v28 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v28 - v18;
  sub_2452E44A8(*a1, a1[1]);
  if ((v20 & 1) == 0)
    return 0;
  v28 = v7;
  v21 = type metadata accessor for Record.Value(0);
  sub_245263F38((uint64_t)a1 + *(int *)(v21 + 20), (uint64_t)v19);
  v29 = v21;
  sub_245263F38(a2 + *(int *)(v21 + 20), (uint64_t)v17);
  v22 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_245263F38((uint64_t)v19, (uint64_t)v10);
  sub_245263F38((uint64_t)v17, v22);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v23((uint64_t)v10, 1, v4) == 1)
  {
    sub_245263F80((uint64_t)v17, &qword_25744F610);
    sub_245263F80((uint64_t)v19, &qword_25744F610);
    if (v23(v22, 1, v4) == 1)
    {
      sub_245263F80((uint64_t)v10, &qword_25744F610);
      return *(uint64_t *)((char *)a1 + *(int *)(v29 + 24)) == *(_QWORD *)(a2 + *(int *)(v29 + 24));
    }
    goto LABEL_7;
  }
  sub_245263F38((uint64_t)v10, (uint64_t)v14);
  if (v23(v22, 1, v4) == 1)
  {
    sub_245263F80((uint64_t)v17, &qword_25744F610);
    sub_245263F80((uint64_t)v19, &qword_25744F610);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_7:
    sub_245263F80((uint64_t)v10, &qword_2574527F0);
    return 0;
  }
  v25 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v28, v22, v4);
  sub_24525C6C4(&qword_2574527F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
  v26 = sub_245387AE8();
  v27 = *(void (**)(char *, uint64_t))(v5 + 8);
  v27(v25, v4);
  sub_245263F80((uint64_t)v17, &qword_25744F610);
  sub_245263F80((uint64_t)v19, &qword_25744F610);
  v27(v14, v4);
  sub_245263F80((uint64_t)v10, &qword_25744F610);
  if ((v26 & 1) != 0)
    return *(uint64_t *)((char *)a1 + *(int *)(v29 + 24)) == *(_QWORD *)(a2 + *(int *)(v29 + 24));
  return 0;
}

uint64_t type metadata accessor for Record.Value(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_25744FD70);
}

uint64_t sub_2452DB304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for Record(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_2574526C8);
}

unint64_t sub_2452DB360()
{
  unint64_t result;

  result = qword_257452638;
  if (!qword_257452638)
  {
    result = MEMORY[0x2495330B0](&unk_24538B934, &type metadata for Record.ID.Ownership.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452638);
  }
  return result;
}

unint64_t sub_2452DB3A4()
{
  unint64_t result;

  result = qword_257452640;
  if (!qword_257452640)
  {
    result = MEMORY[0x2495330B0](&unk_24538B8E4, &type metadata for Record.ID.Ownership.RemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452640);
  }
  return result;
}

unint64_t sub_2452DB3E8()
{
  unint64_t result;

  result = qword_257452648;
  if (!qword_257452648)
  {
    result = MEMORY[0x2495330B0](&unk_24538B894, &type metadata for Record.ID.Ownership.LocalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452648);
  }
  return result;
}

unint64_t sub_2452DB42C()
{
  unint64_t result;

  result = qword_257452670;
  if (!qword_257452670)
  {
    result = MEMORY[0x2495330B0](&unk_24538B844, &type metadata for Record.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257452670);
  }
  return result;
}

uint64_t type metadata accessor for Record.ID.Versions.V8(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_257452708);
}

uint64_t type metadata accessor for Record.ID.Versions.V0(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_2574526F8);
}

uint64_t type metadata accessor for Record.Value.Versions.V8(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_2574526E8);
}

uint64_t type metadata accessor for Record.Value.Versions.V0(uint64_t a1)
{
  return sub_2452B73E8(a1, (uint64_t *)&unk_2574526D8);
}

uint64_t sub_2452DB4C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_2452DB508()
{
  return sub_24525C6C4(&qword_2574526C0, type metadata accessor for Record.ID.Ownership, (uint64_t)&protocol conformance descriptor for Record.ID.Ownership);
}

uint64_t sub_2452DB534()
{
  return sub_24525C6C4(&qword_25744FD58, type metadata accessor for Record.ID, (uint64_t)&protocol conformance descriptor for Record.ID);
}

uint64_t sub_2452DB560()
{
  return sub_24525C6C4((unint64_t *)&qword_257452340, type metadata accessor for Record.ID, (uint64_t)&protocol conformance descriptor for Record.ID);
}

uint64_t *initializeBufferWithCopyOfBuffer for Record(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = type metadata accessor for Record.ID(0);
    v10 = *(int *)(v9 + 24);
    __dst = (char *)v4 + v10;
    v11 = (char *)a2 + v10;
    v12 = sub_245387740();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = type metadata accessor for Record.ID.Ownership(0);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    v17 = *(int *)(v9 + 28);
    v18 = (uint64_t *)((char *)v4 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (int *)type metadata accessor for RecordMetadata();
    v22 = v21[5];
    v23 = (char *)v4 + v22;
    v24 = (char *)a2 + v22;
    v25 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    swift_bridgeObjectRetain();
    v25(v23, v24, v12);
    *(uint64_t *)((char *)v4 + v21[6]) = *(uint64_t *)((char *)a2 + v21[6]);
    v26 = v21[7];
    v27 = (char *)v4 + v26;
    v28 = (char *)a2 + v26;
    v29 = sub_2453876EC();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    swift_bridgeObjectRetain();
    if (v31(v28, 1, v29))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    v33 = *(int *)(a3 + 20);
    v34 = (uint64_t *)((char *)v4 + v33);
    v35 = (char *)a2 + v33;
    v36 = *(uint64_t *)((char *)a2 + v33);
    v37 = *((_QWORD *)v35 + 1);
    sub_245261C44(v36, v37);
    *v34 = v36;
    v34[1] = v37;
    v38 = type metadata accessor for Record.Value(0);
    v39 = *(int *)(v38 + 20);
    v40 = (char *)v34 + v39;
    v41 = &v35[v39];
    v42 = sub_2453875E4();
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
    }
    *(uint64_t *)((char *)v34 + *(int *)(v38 + 24)) = *(_QWORD *)&v35[*(int *)(v38 + 24)];
  }
  return v4;
}

uint64_t destroy for Record(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for Record.ID(0) + 24);
  v5 = sub_245387740();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v7 = type metadata accessor for RecordMetadata();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1 + *(int *)(v7 + 20), v5);
  swift_bridgeObjectRelease();
  v8 = a1 + *(int *)(v7 + 28);
  v9 = sub_2453876EC();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = a1 + *(int *)(a2 + 20);
  sub_24525CB80(*(_QWORD *)v11, *(_QWORD *)(v11 + 8));
  v12 = v11 + *(int *)(type metadata accessor for Record.Value(0) + 20);
  v13 = sub_2453875E4();
  v14 = *(_QWORD *)(v13 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  return result;
}

_QWORD *initializeWithCopy for Record(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *__dst;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = type metadata accessor for Record.ID(0);
  v9 = *(int *)(v8 + 24);
  __dst = (char *)a1 + v9;
  v10 = (char *)a2 + v9;
  v11 = sub_245387740();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  v15 = *(int *)(v8 + 28);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (int *)type metadata accessor for RecordMetadata();
  v20 = v19[5];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  swift_bridgeObjectRetain();
  v23(v21, v22, v11);
  *(_QWORD *)((char *)a1 + v19[6]) = *(_QWORD *)((char *)a2 + v19[6]);
  v24 = v19[7];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_2453876EC();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  swift_bridgeObjectRetain();
  if (v29(v26, 1, v27))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  v31 = *(int *)(a3 + 20);
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (char *)a2 + v31;
  v34 = *(_QWORD *)((char *)a2 + v31);
  v35 = *((_QWORD *)v33 + 1);
  sub_245261C44(v34, v35);
  *v32 = v34;
  v32[1] = v35;
  v36 = type metadata accessor for Record.Value(0);
  v37 = *(int *)(v36 + 20);
  v38 = (char *)v32 + v37;
  v39 = &v33[v37];
  v40 = sub_2453875E4();
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  *(uint64_t *)((char *)v32 + *(int *)(v36 + 24)) = *(_QWORD *)&v33[*(int *)(v36 + 24)];
  return a1;
}

char *assignWithCopy for Record(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  int v43;
  int v44;
  uint64_t v45;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
  *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for Record.ID(0);
  v7 = *(int *)(v6 + 24);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_245387740();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = *(int *)(v6 + 28);
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = (int *)type metadata accessor for RecordMetadata();
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(&a1[v19[5]], &a2[v19[5]], v10);
  *(_QWORD *)&a1[v19[6]] = *(_QWORD *)&a2[v19[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = v19[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = sub_2453876EC();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 24))(v21, v22, v23);
LABEL_13:
  v29 = *(int *)(a3 + 20);
  v30 = (uint64_t *)&a1[v29];
  v31 = &a2[v29];
  v32 = *(_QWORD *)&a2[v29];
  v33 = *((_QWORD *)v31 + 1);
  sub_245261C44(v32, v33);
  v34 = *v30;
  v35 = v30[1];
  *v30 = v32;
  v30[1] = v33;
  sub_24525CB80(v34, v35);
  v36 = type metadata accessor for Record.Value(0);
  v37 = *(int *)(v36 + 20);
  v38 = (char *)v30 + v37;
  v39 = &v31[v37];
  v40 = sub_2453875E4();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  v43 = v42(v38, 1, v40);
  v44 = v42(v39, 1, v40);
  if (!v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 24))(v38, v39, v40);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v40);
    goto LABEL_18;
  }
  if (v44)
  {
LABEL_18:
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
LABEL_19:
  *(uint64_t *)((char *)v30 + *(int *)(v36 + 24)) = *(_QWORD *)&v31[*(int *)(v36 + 24)];
  return a1;
}

char *initializeWithTake for Record(char *a1, char *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  v7 = type metadata accessor for Record.ID(0);
  v8 = *(int *)(v7 + 24);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_245387740();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_OWORD *)&a1[*(int *)(v7 + 28)] = *(_OWORD *)&a2[*(int *)(v7 + 28)];
  v14 = (int *)type metadata accessor for RecordMetadata();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&a1[v14[5]], &a2[v14[5]], v11);
  *(_QWORD *)&a1[v14[6]] = *(_QWORD *)&a2[v14[6]];
  v15 = v14[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_2453876EC();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v21 = *(int *)(a3 + 20);
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_OWORD *)&a1[v21] = *(_OWORD *)&a2[v21];
  v24 = type metadata accessor for Record.Value(0);
  v25 = *(int *)(v24 + 20);
  v26 = &v22[v25];
  v27 = &v23[v25];
  v28 = sub_2453875E4();
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  *(_QWORD *)&v22[*(int *)(v24 + 24)] = *(_QWORD *)&v23[*(int *)(v24 + 24)];
  return a1;
}

char *assignWithTake for Record(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = *((_QWORD *)a2 + 3);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  v8 = *((_QWORD *)a2 + 5);
  *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
  *((_QWORD *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  v9 = type metadata accessor for Record.ID(0);
  v10 = *(int *)(v9 + 24);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_245387740();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  v19 = *(int *)(v9 + 28);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v23 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  v24 = (int *)type metadata accessor for RecordMetadata();
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(&a1[v24[5]], &a2[v24[5]], v13);
  *(_QWORD *)&a1[v24[6]] = *(_QWORD *)&a2[v24[6]];
  swift_bridgeObjectRelease();
  v25 = v24[7];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = sub_2453876EC();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30(v27, 1, v28);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
LABEL_12:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F6B0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 40))(v26, v27, v28);
LABEL_13:
  v34 = *(int *)(a3 + 20);
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = *(_QWORD *)&a1[v34];
  v38 = *(_QWORD *)&a1[v34 + 8];
  *(_OWORD *)&a1[v34] = *(_OWORD *)&a2[v34];
  sub_24525CB80(v37, v38);
  v39 = type metadata accessor for Record.Value(0);
  v40 = *(int *)(v39 + 20);
  v41 = &v35[v40];
  v42 = &v36[v40];
  v43 = sub_2453875E4();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
  v46 = v45(v41, 1, v43);
  v47 = v45(v42, 1, v43);
  if (!v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 40))(v41, v42, v43);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v43);
    goto LABEL_18;
  }
  if (v47)
  {
LABEL_18:
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
LABEL_19:
  *(_QWORD *)&v35[*(int *)(v39 + 24)] = *(_QWORD *)&v36[*(int *)(v39 + 24)];
  return a1;
}

uint64_t getEnumTagSinglePayload for Record()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452DC604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for RecordMetadata();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for Record.Value(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for Record()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452DC684(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for RecordMetadata();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for Record.Value(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_2452DC700()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for RecordMetadata();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Record.Value(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Record.ID(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    v10 = *(int *)(a3 + 24);
    __dst = (char *)a1 + v10;
    v11 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    v12 = sub_245387740();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = type metadata accessor for Record.ID.Ownership(0);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    v17 = *(int *)(a3 + 28);
    v18 = (uint64_t *)((char *)v4 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for Record.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_245387740();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for Record.ID(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  a1[4] = a2[4];
  a1[5] = v7;
  v11 = sub_245387740();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = *(int *)(a3 + 28);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Record.ID(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_245387740();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 28);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for Record.ID(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_245387740();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *assignWithTake for Record.ID(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_245387740();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = type metadata accessor for Record.ID.Ownership(0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = *(int *)(a3 + 28);
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Record.ID()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Record.ID()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452DCE6C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Record.ID.Ownership(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ZoneVersion(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_245387740();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for ZoneVersion(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_245387740();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for ZoneVersion(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_245387740();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for ZoneVersion(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_245387740();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for ZoneVersion(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_245387740();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for ZoneVersion(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_245387740();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Record.ID.Ownership()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452DD34C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_245387740();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Record.ID.Ownership()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452DD3A4(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_245387740();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_2452DD3F4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_245387740();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_2452DD42C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_245387740();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_2452DD46C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_245387740();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Record.Value()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Record.Value()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2452DD4FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25744F678)
  {
    sub_2453875E4();
    v0 = sub_245387E00();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25744F678);
  }
}

uint64_t *sub_2452DD550(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_245261C44(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_2453875E4();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t *sub_2452DD64C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *a2;
  v7 = a2[1];
  sub_245261C44(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_2453875E4();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t *sub_2452DD71C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  uint64_t v17;

  v6 = *a2;
  v7 = a2[1];
  sub_245261C44(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_24525CB80(v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_2453875E4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v7) = v15(v11, 1, v13);
  v16 = v15(v12, 1, v13);
  if (!(_DWORD)v7)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

_OWORD *sub_2452DD840(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2453875E4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t *sub_2452DD8FC(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_24525CB80(v6, v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_2453875E4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_2452DDA18()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2452DDA28()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2452DDA38()
{
  unint64_t v0;

  sub_2452DD4FC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *_s16ReplicatorEngine6RecordV5ValueVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_245261C44(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_2453875E4();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t _s16ReplicatorEngine6RecordV5ValueVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  sub_24525CB80(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2453875E4();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t *_s16ReplicatorEngine6RecordV5ValueVwcp_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *a2;
  v7 = a2[1];
  sub_245261C44(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_2453875E4();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25744F610);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

